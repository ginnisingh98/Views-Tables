--------------------------------------------------------
--  DDL for Package Body XLA_00200_AAD_S_000010_BC_PKG
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE PACKAGE BODY "APPS"."XLA_00200_AAD_S_000010_BC_PKG" AS
--
/*======================================================================+
|                Copyright (c) 1997 Oracle Corporation                  |
|                       Redwood Shores, CA, USA                         |
|                         All rights reserved.                          |
+=======================================================================+
| Package Name                                                          |
|     XLA_00200_AAD_S_000010_BC_PKG                                     |
|                                                                       |
| DESCRIPTION                                                           |
|     Package generated From Product Accounting Definition              |
|      Name    : Encumbrance Cash                                       |
|      Code    : AP_ENC_CASH                                            |
|      Owner   : PRODUCT                                                |
|      Version :                                                        |
|      AMB Context Code: DEFAULT                                        |
| HISTORY                                                               |
|     Generated at 29-08-2013 at 11:08:12 by user ANONYMOUS             |
+=======================================================================*/
--
--
TYPE t_rec_array_event IS RECORD
   (array_legal_entity_id                XLA_AE_JOURNAL_ENTRY_PKG.t_array_Num
   ,array_entity_id                      XLA_AE_JOURNAL_ENTRY_PKG.t_array_Num
   ,array_entity_code                    XLA_AE_JOURNAL_ENTRY_PKG.t_array_V30L
   ,array_transaction_num                XLA_AE_JOURNAL_ENTRY_PKG.t_array_V240L
   ,array_event_id                       xla_number_array_type --XLA_AE_JOURNAL_ENTRY_PKG.t_array_Num
   ,array_class_code                     XLA_AE_JOURNAL_ENTRY_PKG.t_array_V30L
   ,array_event_type                     XLA_AE_JOURNAL_ENTRY_PKG.t_array_V30L
   ,array_event_number                   XLA_AE_JOURNAL_ENTRY_PKG.t_array_Num
   ,array_event_date                     XLA_AE_JOURNAL_ENTRY_PKG.t_array_Date
   ,array_reference_num_1                XLA_AE_JOURNAL_ENTRY_PKG.t_array_Num
   ,array_reference_num_2                XLA_AE_JOURNAL_ENTRY_PKG.t_array_Num
   ,array_reference_num_3                XLA_AE_JOURNAL_ENTRY_PKG.t_array_Num
   ,array_reference_num_4                XLA_AE_JOURNAL_ENTRY_PKG.t_array_Num
   ,array_reference_char_1               XLA_AE_JOURNAL_ENTRY_PKG.t_array_V240L
   ,array_reference_char_2               XLA_AE_JOURNAL_ENTRY_PKG.t_array_V240L
   ,array_reference_char_3               XLA_AE_JOURNAL_ENTRY_PKG.t_array_V240L
   ,array_reference_char_4               XLA_AE_JOURNAL_ENTRY_PKG.t_array_V240L
   ,array_reference_date_1               XLA_AE_JOURNAL_ENTRY_PKG.t_array_Date
   ,array_reference_date_2               XLA_AE_JOURNAL_ENTRY_PKG.t_array_Date
   ,array_reference_date_3               XLA_AE_JOURNAL_ENTRY_PKG.t_array_Date
   ,array_reference_date_4               XLA_AE_JOURNAL_ENTRY_PKG.t_array_Date
   ,array_event_created_by               XLA_AE_JOURNAL_ENTRY_PKG.t_array_V100L
   );
--
type t_array_value_num is table of number index by varchar2(30);
type t_array_value_char is table of varchar2(240) index by varchar2(30);
type t_array_value_date is table of date index by varchar2(30);

type t_rec_value is record
 (array_value_num     t_array_value_num
 ,array_value_char    t_array_value_char
 ,array_value_date    t_array_value_date);

type t_array_event is table of  t_rec_value index by binary_integer;

g_array_event   t_array_event;

--=============================================================================
--               *********** Diagnostics **********
--=============================================================================

g_diagnostics_mode          VARCHAR2(1);
g_last_hdr_idx              NUMBER;        -- 4262811 MPA
g_hdr_extract_count         PLS_INTEGER;

--=============================================================================
--               *********** Local Trace Routine **********
--=============================================================================

C_LEVEL_STATEMENT     CONSTANT NUMBER := FND_LOG.LEVEL_STATEMENT;
C_LEVEL_PROCEDURE     CONSTANT NUMBER := FND_LOG.LEVEL_PROCEDURE;
C_LEVEL_EVENT         CONSTANT NUMBER := FND_LOG.LEVEL_EVENT;
C_LEVEL_EXCEPTION     CONSTANT NUMBER := FND_LOG.LEVEL_EXCEPTION;
C_LEVEL_ERROR         CONSTANT NUMBER := FND_LOG.LEVEL_ERROR;
C_LEVEL_UNEXPECTED    CONSTANT NUMBER := FND_LOG.LEVEL_UNEXPECTED;

C_LEVEL_LOG_DISABLED  CONSTANT NUMBER := 99;
C_DEFAULT_MODULE      CONSTANT VARCHAR2(240) := 'xla.plsql.XLA_00200_AAD_S_000010_BC_PKG';

C_CHAR                CONSTANT       VARCHAR2(30) := fnd_global.local_chr(12); -- 4219869 Business flow
C_NUM                 CONSTANT       NUMBER       := 9.99E125;                 -- 4219869 Business flow

g_log_level           NUMBER;
g_log_enabled         BOOLEAN;

PROCEDURE trace
           (p_msg                        IN VARCHAR2
           ,p_level                      IN NUMBER
           ,p_module                     IN VARCHAR2 ) IS
BEGIN
----------------------------------------------------------------------------
-- Following is for FND log.
----------------------------------------------------------------------------
IF (p_msg IS NULL AND p_level >= g_log_level) THEN
          fnd_log.message(p_level, p_module);
ELSIF p_level >= g_log_level THEN
          fnd_log.string(p_level, p_module, p_msg);
END IF;

EXCEPTION
       WHEN xla_exceptions_pkg.application_exception THEN
          RAISE;
       WHEN OTHERS THEN
          xla_exceptions_pkg.raise_message
             (p_location   => 'XLA_00200_AAD_S_000010_BC_PKG.trace');
END trace;

--
--+============================================+
--|                                            |
--|  PRIVATE  PROCEDURES/FUNCTIONS             |
--|                                            |
--+============================================+
--

--
/*======================================================================+
|                                                                       |
| Private Function                                                      |
|    ValidateLookupMeaning                                              |
|                                                                       |
+======================================================================*/
FUNCTION ValidateLookupMeaning(
  p_meaning                IN VARCHAR2
, p_lookup_code            IN VARCHAR2
, p_lookup_type            IN VARCHAR2
, p_source_code            IN VARCHAR2
, p_source_type_code       IN VARCHAR2
, p_source_application_id  IN INTEGER
)
RETURN VARCHAR2
IS
l_log_module         VARCHAR2(240);
BEGIN
IF g_log_enabled THEN
      l_log_module := C_DEFAULT_MODULE||'.ValidateLookupMeaning';
END IF;
IF (C_LEVEL_PROCEDURE >= g_log_level) THEN
      trace
         (p_msg      => 'BEGIN of ValidateLookupMeaning'
         ,p_level    => C_LEVEL_PROCEDURE
         ,p_module   => l_log_module);
END IF;
--
IF (C_LEVEL_STATEMENT >= g_log_level) THEN
    trace
         (p_msg      => 'p_source_code = '|| p_source_code||
                        ' - p_source_type_code = '|| p_source_type_code||
                        ' - p_source_application_id = '|| p_source_application_id||
                        ' - p_lookup_code = '|| p_lookup_code||
                        ' - p_lookup_type = '|| p_lookup_type||
                        ' - p_meaning = '|| p_meaning
         ,p_level    => C_LEVEL_PROCEDURE
         ,p_module   => l_log_module);

END IF;

IF p_lookup_code IS NOT NULL AND p_meaning IS NULL THEN
   xla_ae_journal_entry_pkg.g_global_status      :=  xla_ae_journal_entry_pkg.C_INVALID;
   xla_accounting_err_pkg. build_message
               (p_appli_s_name            => 'XLA'
               ,p_msg_name                => 'XLA_AP_NO_LOOKUP_MEANING'
               ,p_token_1                 => 'SOURCE_NAME'
               ,p_value_1                 =>  xla_ae_sources_pkg.GetSourceName(
                                                           p_source_code
                                                         , p_source_type_code
                                                         , p_source_application_id
                                                         )
               ,p_token_2                 => 'LOOKUP_CODE'
               ,p_value_2                 =>  p_lookup_code
               ,p_token_3                 => 'LOOKUP_TYPE'
               ,p_value_3                 =>  p_lookup_type
               ,p_token_4                 => 'PRODUCT_NAME'
               ,p_value_4                 => xla_ae_journal_entry_pkg.g_cache_event.application_name
               ,p_entity_id               => xla_ae_journal_entry_pkg.g_cache_event.entity_id
               ,p_event_id                => xla_ae_journal_entry_pkg.g_cache_event.event_id
               ,p_ledger_id               => xla_ae_journal_entry_pkg.g_cache_event.target_ledger_id
       );

   IF (C_LEVEL_ERROR >= g_log_level) THEN
           trace
                (p_msg      => 'ERROR: XLA_AP_NO_LOOKUP_MEANING'
                ,p_level    => C_LEVEL_ERROR
                ,p_module   => l_log_module);
   END IF;
END IF;

IF (C_LEVEL_PROCEDURE >= g_log_level) THEN
        trace
          (p_msg      => 'END of ValidateLookupMeaning'
          ,p_level    => C_LEVEL_PROCEDURE
          ,p_module   => l_log_module);
END IF;
RETURN p_meaning;
EXCEPTION
WHEN xla_exceptions_pkg.application_exception THEN
  RETURN p_meaning;
WHEN OTHERS  THEN
   xla_exceptions_pkg.raise_message
           (p_location => 'XLA_00200_AAD_S_000010_BC_PKG.ValidateLookupMeaning');
       --
END ValidateLookupMeaning;
--
--

--
---------------------------------------
--
-- PUBLIC FUNCTION
--         GetMeaning
--
---------------------------------------
FUNCTION GetMeaning (
  p_flex_value_set_id               IN INTEGER
, p_flex_value                      IN VARCHAR2
, p_source_code                     IN VARCHAR2
, p_source_type_code                IN VARCHAR2
, p_source_application_id           IN INTEGER
)
RETURN VARCHAR2
IS
l_meaning_meaning                     VARCHAR2(4000);
l_array_meaning                        xla_ae_sources_pkg.t_array_meaning;
l_Idx                                 INTEGER;
l_log_module                          VARCHAR2(240);
--
BEGIN
IF g_log_enabled THEN
      l_log_module := C_DEFAULT_MODULE||'.GetMeaning';
END IF;
IF (C_LEVEL_PROCEDURE >= g_log_level) THEN
      trace
         (p_msg      => 'BEGIN of GetMeaning'||
                        'p_flex_value_set_id = '||p_flex_value_set_id||
                        'p_flex_value = '||p_flex_value
         ,p_level    => C_LEVEL_PROCEDURE
         ,p_module   => l_log_module);
END IF;
--
l_array_meaning := xla_ae_sources_pkg.g_array_meaning;
--
IF p_flex_value IS NULL THEN

  l_meaning_meaning := NULL;

ELSE

 CASE p_flex_value_set_id
      
   WHEN 1011384 THEN

    IF (C_LEVEL_PROCEDURE >= g_log_level) THEN

      trace
         (p_msg      => '-> CALL  DBMS_UTILITY.get_hash_value'
         ,p_level    => C_LEVEL_PROCEDURE
         ,p_module   => l_log_module);

    END IF;

    l_Idx := DBMS_UTILITY.get_hash_value(TO_CHAR(p_flex_value),1,1073741824);

    IF l_array_meaning.EXISTS(1011384) AND
       l_array_meaning(1011384).array_flex_value.EXISTS(l_Idx) AND
       l_array_meaning(1011384).array_flex_value(l_Idx)   = p_flex_value        THEN

       l_meaning_meaning    := l_array_meaning(1011384).array_meaning(l_Idx);

    ELSE

     SELECT NAME
     INTO   l_meaning_meaning
     FROM   HR_ALL_ORGANIZATION_UNITS_VL
     WHERE  ORGANIZATION_ID = p_flex_value
     ;

     l_array_meaning(1011384).array_flex_value(l_Idx)       := p_flex_value;
     l_array_meaning(1011384).array_meaning(l_Idx)          := l_meaning_meaning;

    END IF;

 ELSE
         l_meaning_meaning  := NULL;
         xla_ae_journal_entry_pkg.g_global_status      :=  xla_ae_journal_entry_pkg.C_INVALID;
         xla_accounting_err_pkg.build_message
                        (p_appli_s_name            => 'XLA'
                        ,p_msg_name                => 'XLA_AP_FLEX_VALUE_MEANING'
                        ,p_token_1                 => 'VALUE_SET_NAME'
                        ,p_value_1                 =>  xla_flex_pkg.get_value_set_name(p_flex_value_set_id)
                        ,p_token_2                 => 'FLEX_VALUE'
                        ,p_value_2                 =>  p_flex_value
                        ,p_token_3                 => 'SOURCE_NAME'
                        ,p_value_3                 =>  xla_ae_sources_pkg.GetSourceName(
                                                     p_source_code
                                                   , p_source_type_code
                                                   , p_source_application_id
                                                     )
                        ,p_token_4                 => 'PRODUCT_NAME'
                        ,p_value_4                 => xla_ae_journal_entry_pkg.g_cache_event.application_name
                        ,p_entity_id               => xla_ae_journal_entry_pkg.g_cache_event.entity_id
                        ,p_event_id                => xla_ae_journal_entry_pkg.g_cache_event.event_id
                        ,p_ledger_id               => xla_ae_journal_entry_pkg.g_cache_event.target_ledger_id
        );
      IF (C_LEVEL_ERROR >= g_log_level) THEN
                         trace
                            (p_msg      => 'ERROR: XLA_AP_FLEX_VALUE_MEANING'
                            ,p_level    => C_LEVEL_ERROR
                            ,p_module   => l_log_module);
     END IF;
 END CASE;
--
END IF;
--
IF (C_LEVEL_PROCEDURE >= g_log_level) THEN

      trace
         (p_msg      => 'return value. meaning = '||l_meaning_meaning
         ,p_level    => C_LEVEL_PROCEDURE
         ,p_module   => l_log_module);

      trace
         (p_msg      => 'END of GetMeaning'
         ,p_level    => C_LEVEL_PROCEDURE
         ,p_module   => l_log_module);
END IF;
--
xla_ae_sources_pkg.g_array_meaning := l_array_meaning ;
--
RETURN l_meaning_meaning ;
--
EXCEPTION
WHEN NO_DATA_FOUND OR TOO_MANY_ROWS THEN
 --
      xla_ae_journal_entry_pkg.g_global_status      :=  xla_ae_journal_entry_pkg.C_INVALID;
      xla_accounting_err_pkg.build_message
                (p_appli_s_name            => 'XLA'
                ,p_msg_name                => 'XLA_AP_FLEX_VALUE_MEANING'
                ,p_token_1                 => 'VALUE_SET_NAME'
                ,p_value_1                 =>  xla_flex_pkg.get_value_set_name(p_flex_value_set_id)
                ,p_token_2                 => 'FLEX_VALUE'
                ,p_value_2                 =>  p_flex_value
                ,p_token_3                 => 'SOURCE_NAME'
                ,p_value_3                 =>  xla_ae_sources_pkg.GetSourceName(
                                                     p_source_code
                                                   , p_source_type_code
                                                   , p_source_application_id
                                                     )
                ,p_token_4                 => 'PRODUCT_NAME'
                ,p_value_4                 => xla_ae_journal_entry_pkg.g_cache_event.application_name
                ,p_entity_id               => xla_ae_journal_entry_pkg.g_cache_event.entity_id
                ,p_event_id                => xla_ae_journal_entry_pkg.g_cache_event.event_id
                ,p_ledger_id               => xla_ae_journal_entry_pkg.g_cache_event.target_ledger_id
        );

     IF (C_LEVEL_ERROR >= g_log_level) THEN
                         trace
                            (p_msg      => 'ERROR: XLA_AP_FLEX_VALUE_MEANING'
                            ,p_level    => C_LEVEL_ERROR
                            ,p_module   => l_log_module);
     END IF;

     RETURN NULL;
  WHEN xla_exceptions_pkg.application_exception THEN
      RAISE;
  WHEN OTHERS THEN
       xla_exceptions_pkg.raise_message
           (p_location => 'XLA_00200_AAD_S_000010_BC_PKG.GetMeaning');
END GetMeaning;
--

---------------------------------------
--
-- PRIVATE FUNCTION
--         Description_1
--
---------------------------------------
FUNCTION Description_1 (
  p_application_id      IN NUMBER
, p_ae_header_id        IN NUMBER DEFAULT NULL 
)
RETURN VARCHAR2
IS
l_component_type        VARCHAR2(80)   ;
l_component_code        VARCHAR2(30)   ;
l_component_type_code   VARCHAR2(1)    ;
l_component_appl_id     INTEGER        ;
l_amb_context_code      VARCHAR2(30)   ;
l_ledger_language       VARCHAR2(30)   ;
l_source                VARCHAR2(1996) ;
l_description           VARCHAR2(2000) ;
l_log_module            VARCHAR2(240)  ;
BEGIN
IF g_log_enabled THEN
      l_log_module := C_DEFAULT_MODULE||'.Description_1';
END IF;
IF (C_LEVEL_PROCEDURE >= g_log_level) THEN
      trace
         (p_msg      => 'BEGIN of Description_1'
         ,p_level    => C_LEVEL_PROCEDURE
         ,p_module   => l_log_module);
END IF;

l_ledger_language       := xla_ae_journal_entry_pkg.g_cache_ledgers_info.description_language;
l_component_type        := 'AMB_DESCRIPTION';
l_component_code        := 'JE_INVOICE_DESCRIPTION';
l_component_type_code   := 'S';
l_component_appl_id     :=  200;
l_amb_context_code      := 'DEFAULT';
l_source                := NULL;
l_description           := NULL;


l_description := null;
 l_description := SUBSTR(l_description,1,1996);
  IF (C_LEVEL_PROCEDURE >= g_log_level) THEN
        trace
           (p_msg      => 'END of Description_1'
           ,p_level    => C_LEVEL_PROCEDURE
           ,p_module   => l_log_module);

  END IF;
  RETURN l_description;

IF (C_LEVEL_PROCEDURE >= g_log_level) THEN
      trace
         (p_msg      => 'END of Description_1'
         ,p_level    => C_LEVEL_PROCEDURE
         ,p_module   => l_log_module);
END IF;
RETURN NULL;
EXCEPTION
  WHEN VALUE_ERROR THEN
     IF (C_LEVEL_EXCEPTION >= g_log_level) THEN
            trace
               (p_msg      => 'ERROR: '||sqlerrm
               ,p_level    => C_LEVEL_EXCEPTION
               ,p_module   => l_log_module);
     END IF;
     RAISE;
 WHEN xla_exceptions_pkg.application_exception THEN
      IF (C_LEVEL_EXCEPTION >= g_log_level) THEN
      trace
         (p_msg      => 'ERROR: '||sqlerrm
         ,p_level    => C_LEVEL_EXCEPTION
         ,p_module   => l_log_module);
      END IF;
      RAISE;
 WHEN OTHERS THEN
       xla_exceptions_pkg.raise_message
           (p_location => 'XLA_00200_AAD_S_000010_BC_PKG.Description_1');
END Description_1;

---------------------------------------
--
-- PRIVATE FUNCTION
--         Description_2
--
---------------------------------------
FUNCTION Description_2 (
  p_application_id      IN NUMBER
, p_ae_header_id        IN NUMBER DEFAULT NULL 
--Invoice Distribution Description
 , p_source_1            IN VARCHAR2
)
RETURN VARCHAR2
IS
l_component_type        VARCHAR2(80)   ;
l_component_code        VARCHAR2(30)   ;
l_component_type_code   VARCHAR2(1)    ;
l_component_appl_id     INTEGER        ;
l_amb_context_code      VARCHAR2(30)   ;
l_ledger_language       VARCHAR2(30)   ;
l_source                VARCHAR2(1996) ;
l_description           VARCHAR2(2000) ;
l_log_module            VARCHAR2(240)  ;
BEGIN
IF g_log_enabled THEN
      l_log_module := C_DEFAULT_MODULE||'.Description_2';
END IF;
IF (C_LEVEL_PROCEDURE >= g_log_level) THEN
      trace
         (p_msg      => 'BEGIN of Description_2'
         ,p_level    => C_LEVEL_PROCEDURE
         ,p_module   => l_log_module);
END IF;

l_ledger_language       := xla_ae_journal_entry_pkg.g_cache_ledgers_info.description_language;
l_component_type        := 'AMB_DESCRIPTION';
l_component_code        := 'JE_INV_DIST_DESCRIPTION';
l_component_type_code   := 'S';
l_component_appl_id     :=  200;
l_amb_context_code      := 'DEFAULT';
l_source                := NULL;
l_description           := NULL;


  
  l_source := SUBSTR(p_source_1,1,1996);
  IF l_source IS NOT NULL THEN
    l_description :=  SUBSTR(CONCAT(l_description,l_source),1,2000);
    l_description :=  SUBSTR(CONCAT(l_description,' '),1,2000);
  END IF; 
 l_description := SUBSTR(l_description,1,1996);
  IF (C_LEVEL_PROCEDURE >= g_log_level) THEN
        trace
           (p_msg      => 'END of Description_2'
           ,p_level    => C_LEVEL_PROCEDURE
           ,p_module   => l_log_module);

  END IF;
  RETURN l_description;

IF (C_LEVEL_PROCEDURE >= g_log_level) THEN
      trace
         (p_msg      => 'END of Description_2'
         ,p_level    => C_LEVEL_PROCEDURE
         ,p_module   => l_log_module);
END IF;
RETURN NULL;
EXCEPTION
  WHEN VALUE_ERROR THEN
     IF (C_LEVEL_EXCEPTION >= g_log_level) THEN
            trace
               (p_msg      => 'ERROR: '||sqlerrm
               ,p_level    => C_LEVEL_EXCEPTION
               ,p_module   => l_log_module);
     END IF;
     RAISE;
 WHEN xla_exceptions_pkg.application_exception THEN
      IF (C_LEVEL_EXCEPTION >= g_log_level) THEN
      trace
         (p_msg      => 'ERROR: '||sqlerrm
         ,p_level    => C_LEVEL_EXCEPTION
         ,p_module   => l_log_module);
      END IF;
      RAISE;
 WHEN OTHERS THEN
       xla_exceptions_pkg.raise_message
           (p_location => 'XLA_00200_AAD_S_000010_BC_PKG.Description_2');
END Description_2;

---------------------------------------
--
-- PRIVATE FUNCTION
--         Description_3
--
---------------------------------------
FUNCTION Description_3 (
  p_application_id      IN NUMBER
, p_ae_header_id        IN NUMBER DEFAULT NULL 
--Document Distribution Type
 , p_source_2            IN VARCHAR2
--Project Name
 , p_source_3            IN VARCHAR2
--Task Number
 , p_source_4            IN VARCHAR2
--Expenditure Organization
 , p_source_5            IN NUMBER
)
RETURN VARCHAR2
IS
l_component_type        VARCHAR2(80)   ;
l_component_code        VARCHAR2(30)   ;
l_component_type_code   VARCHAR2(1)    ;
l_component_appl_id     INTEGER        ;
l_amb_context_code      VARCHAR2(30)   ;
l_ledger_language       VARCHAR2(30)   ;
l_source                VARCHAR2(1996) ;
l_description           VARCHAR2(2000) ;
l_log_module            VARCHAR2(240)  ;
BEGIN
IF g_log_enabled THEN
      l_log_module := C_DEFAULT_MODULE||'.Description_3';
END IF;
IF (C_LEVEL_PROCEDURE >= g_log_level) THEN
      trace
         (p_msg      => 'BEGIN of Description_3'
         ,p_level    => C_LEVEL_PROCEDURE
         ,p_module   => l_log_module);
END IF;

l_ledger_language       := xla_ae_journal_entry_pkg.g_cache_ledgers_info.description_language;
l_component_type        := 'AMB_DESCRIPTION';
l_component_code        := 'PROJ_REL_LINE_DESCRIPTION';
l_component_type_code   := 'S';
l_component_appl_id     :=  200;
l_amb_context_code      := 'DEFAULT';
l_source                := NULL;
l_description           := NULL;


 
 IF 
l_ledger_language = 'US' THEN
    l_description :=  SUBSTR(CONCAT(l_description,'Invoice Distribution Type:'),1,2000);
    l_description :=  SUBSTR(CONCAT(l_description,' '),1,2000); 
 END IF;   
  l_source := SUBSTR(p_source_2,1,1996);
  IF l_source IS NOT NULL THEN
    l_description :=  SUBSTR(CONCAT(l_description,l_source),1,2000);
    l_description :=  SUBSTR(CONCAT(l_description,' '),1,2000);
  END IF;  
 IF 
l_ledger_language = 'US' THEN
    l_description :=  SUBSTR(CONCAT(l_description,'- For Project -'),1,2000);
    l_description :=  SUBSTR(CONCAT(l_description,' '),1,2000); 
 END IF;   
  l_source := SUBSTR(p_source_3,1,1996);
  IF l_source IS NOT NULL THEN
    l_description :=  SUBSTR(CONCAT(l_description,l_source),1,2000);
    l_description :=  SUBSTR(CONCAT(l_description,' '),1,2000);
  END IF;  
 IF 
l_ledger_language = 'US' THEN
    l_description :=  SUBSTR(CONCAT(l_description,' - and Task -'),1,2000);
    l_description :=  SUBSTR(CONCAT(l_description,' '),1,2000); 
 END IF;   
  l_source := SUBSTR(p_source_4,1,1996);
  IF l_source IS NOT NULL THEN
    l_description :=  SUBSTR(CONCAT(l_description,l_source),1,2000);
    l_description :=  SUBSTR(CONCAT(l_description,' '),1,2000);
  END IF;  
 IF 
l_ledger_language = 'US' THEN
    l_description :=  SUBSTR(CONCAT(l_description,'- in Expenditure organization -'),1,2000);
    l_description :=  SUBSTR(CONCAT(l_description,' '),1,2000); 
 END IF;   
  l_source := SUBSTR(TO_CHAR(
GetMeaning (
  p_flex_value_set_id        => 1011384
, p_flex_value               => TO_CHAR(p_source_5)
, p_source_code              => 'EXPENDITURE_ORGANIZATION_ID'
, p_source_type_code         => 'S'
, p_source_application_id    => 275
)
),1,1996);
  IF l_source IS NOT NULL THEN
    l_description :=  SUBSTR(CONCAT(l_description,l_source),1,2000);
    l_description :=  SUBSTR(CONCAT(l_description,' '),1,2000);
  END IF; 
 l_description := SUBSTR(l_description,1,1996);
  IF (C_LEVEL_PROCEDURE >= g_log_level) THEN
        trace
           (p_msg      => 'END of Description_3'
           ,p_level    => C_LEVEL_PROCEDURE
           ,p_module   => l_log_module);

  END IF;
  RETURN l_description;

IF (C_LEVEL_PROCEDURE >= g_log_level) THEN
      trace
         (p_msg      => 'END of Description_3'
         ,p_level    => C_LEVEL_PROCEDURE
         ,p_module   => l_log_module);
END IF;
RETURN NULL;
EXCEPTION
  WHEN VALUE_ERROR THEN
     IF (C_LEVEL_EXCEPTION >= g_log_level) THEN
            trace
               (p_msg      => 'ERROR: '||sqlerrm
               ,p_level    => C_LEVEL_EXCEPTION
               ,p_module   => l_log_module);
     END IF;
     RAISE;
 WHEN xla_exceptions_pkg.application_exception THEN
      IF (C_LEVEL_EXCEPTION >= g_log_level) THEN
      trace
         (p_msg      => 'ERROR: '||sqlerrm
         ,p_level    => C_LEVEL_EXCEPTION
         ,p_module   => l_log_module);
      END IF;
      RAISE;
 WHEN OTHERS THEN
       xla_exceptions_pkg.raise_message
           (p_location => 'XLA_00200_AAD_S_000010_BC_PKG.Description_3');
END Description_3;

---------------------------------------
--
-- PRIVATE FUNCTION
--         AcctDerRule_4
--
---------------------------------------
FUNCTION AcctDerRule_4 (
  p_application_id             IN NUMBER
, p_ae_header_id               IN NUMBER
, p_side                       IN VARCHAR2
, p_override_seg_flag          IN VARCHAR2 
--Purchase Order Rate Variance Gain Account
 , p_source_6            IN NUMBER
--Automatic Offsets Value
 , p_source_7            IN VARCHAR2
 , p_source_7_meaning    IN VARCHAR2
--Invoice Distribution Ledger Amount
 , p_source_8            IN NUMBER
--Destination Type of the PO Distribution
 , p_source_9            IN VARCHAR2
 , p_source_9_meaning    IN VARCHAR2
--Purchase Order Rate Variance Loss Account
 , p_source_10            IN NUMBER
, x_transaction_coa_id         OUT NOCOPY NUMBER
, x_accounting_coa_id          OUT NOCOPY NUMBER
, x_flexfield_segment_code     OUT NOCOPY VARCHAR2
, x_flex_value_set_id          OUT NOCOPY NUMBER
, x_value_type_code            OUT NOCOPY VARCHAR2
, x_value_combination_id       OUT NOCOPY NUMBER
, x_value_segment_code         OUT NOCOPY VARCHAR2
)
RETURN VARCHAR2
IS
l_component_type       VARCHAR2(80)  ;
l_component_code       VARCHAR2(30)  ;
l_component_type_code  VARCHAR2(1)   ;
l_component_appl_id    INTEGER       ;
l_amb_context_code     VARCHAR2(30)  ;
l_log_module           VARCHAR2(240) ;
l_output_value         VARCHAR2(30)  ;
BEGIN
IF g_log_enabled THEN
      l_log_module := C_DEFAULT_MODULE||'.AcctDerRule_4';
END IF;
IF (C_LEVEL_PROCEDURE >= g_log_level) THEN

      trace
         (p_msg      => 'BEGIN of AcctDerRule_4'
         ,p_level    => C_LEVEL_PROCEDURE
         ,p_module   => l_log_module);

END IF;

l_component_type         := 'AMB_ADR';
l_component_code         := 'AP_ERV_GAIN_LOSS_NAT_ACCT_SEG';
l_component_type_code    := 'S';
l_component_appl_id      :=  200;
l_amb_context_code       := 'DEFAULT';
x_transaction_coa_id     :=  null;
x_accounting_coa_id      :=  null;
x_flexfield_segment_code := 'GL_ACCOUNT';
x_flex_value_set_id      :=  null ;


 IF NVL(p_source_7,'
') =  'ACCOUNT_SEGMENT_VALUE' AND 
p_source_8 <  0 AND 
NVL(p_source_9,'
') =  'INVENTORY'
 THEN 
--
  IF (C_LEVEL_PROCEDURE >= g_log_level) THEN

      trace
         (p_msg      => 'END of AcctDerRule_4'
         ,p_level    => C_LEVEL_PROCEDURE
         ,p_module   => l_log_module);

  END IF;
  x_value_combination_id  := TO_NUMBER(p_source_6) ;
  x_value_segment_code    := 'GL_ACCOUNT' ;
  x_value_type_code       := 'S';
  l_output_value          :=  null;
  RETURN l_output_value;

 ELSIF NVL(p_source_7,'
') =  'ACCOUNT_SEGMENT_VALUE' AND 
p_source_8 >  0 AND 
NVL(p_source_9,'
') =  'INVENTORY'
 THEN 
--
  IF (C_LEVEL_PROCEDURE >= g_log_level) THEN

      trace
         (p_msg      => 'END of AcctDerRule_4'
         ,p_level    => C_LEVEL_PROCEDURE
         ,p_module   => l_log_module);

  END IF;
  x_value_combination_id  := TO_NUMBER(p_source_10) ;
  x_value_segment_code    := 'GL_ACCOUNT' ;
  x_value_type_code       := 'S';
  l_output_value          :=  null;
  RETURN l_output_value;

 ELSE 
    IF p_override_seg_flag = 'Y' THEN 
       RETURN '#$NO_OVERRIDE#$';
    END IF;
 END IF;

IF (C_LEVEL_PROCEDURE >= g_log_level) THEN

      trace
         (p_msg      => 'END of AcctDerRule_4(invalid)'
         ,p_level    => C_LEVEL_PROCEDURE
         ,p_module   => l_log_module);

END IF;

xla_ae_journal_entry_pkg.g_global_status      :=  xla_ae_journal_entry_pkg.C_INVALID;
x_value_combination_id  := null;
x_value_segment_code    := null;
x_value_type_code       := null;
l_output_value          := null;
xla_accounting_err_pkg.build_message
                 (p_appli_s_name            => 'XLA'
                 ,p_msg_name                => 'XLA_AP_INVALID_ADR'
                 ,p_token_1                 => 'COMPONENT_NAME'
                 ,p_value_1                 => xla_ae_sources_pkg.GetComponentName (
                                                            l_component_type
                                                          , l_component_code
                                                          , l_component_type_code
                                                          , l_component_appl_id
                                                          , l_amb_context_code
                                                          )
                 ,p_token_2                 => 'OWNER'
                 ,p_value_2                 => xla_lookups_pkg.get_meaning(
                                                        'XLA_OWNER_TYPE'
                                                        ,l_component_type_code
                                                        )
                 ,p_token_3                 => 'PAD_NAME'
                 ,p_value_3                 => xla_ae_journal_entry_pkg.g_cache_pad.pad_session_name
                 ,p_token_4                 => 'PAD_OWNER'
                 ,p_value_4                 => xla_lookups_pkg.get_meaning(
                                                        'XLA_OWNER_TYPE'
                                                        ,xla_ae_journal_entry_pkg.g_cache_pad.product_rule_type_code
                                                        )
                 ,p_entity_id               => xla_ae_journal_entry_pkg.g_cache_event.entity_id
                 ,p_event_id                => xla_ae_journal_entry_pkg.g_cache_event.event_id
                 ,p_ledger_id               => xla_ae_journal_entry_pkg.g_cache_event.target_ledger_id
                 ,p_ae_header_id            => NULL
);
RETURN l_output_value;
EXCEPTION
  WHEN xla_exceptions_pkg.application_exception THEN
      RAISE;
  WHEN OTHERS THEN
       xla_exceptions_pkg.raise_message
           (p_location => 'XLA_00200_AAD_S_000010_BC_PKG.AcctDerRule_4');
END AcctDerRule_4;
--

---------------------------------------
--
-- PRIVATE FUNCTION
--         AcctDerRule_5
--
---------------------------------------
FUNCTION AcctDerRule_5 (
  p_application_id             IN NUMBER
, p_ae_header_id               IN NUMBER
, p_side                       IN VARCHAR2
, p_override_seg_flag          IN VARCHAR2 
--Automatic Offsets Value
 , p_source_7            IN VARCHAR2
 , p_source_7_meaning    IN VARCHAR2
--Destination Type of the PO Distribution
 , p_source_9            IN VARCHAR2
 , p_source_9_meaning    IN VARCHAR2
--Invoice Distribution Account
 , p_source_11            IN NUMBER
, x_transaction_coa_id         OUT NOCOPY NUMBER
, x_accounting_coa_id          OUT NOCOPY NUMBER
, x_flexfield_segment_code     OUT NOCOPY VARCHAR2
, x_flex_value_set_id          OUT NOCOPY NUMBER
, x_value_type_code            OUT NOCOPY VARCHAR2
, x_value_combination_id       OUT NOCOPY NUMBER
, x_value_segment_code         OUT NOCOPY VARCHAR2
)
RETURN VARCHAR2
IS
l_component_type       VARCHAR2(80)  ;
l_component_code       VARCHAR2(30)  ;
l_component_type_code  VARCHAR2(1)   ;
l_component_appl_id    INTEGER       ;
l_amb_context_code     VARCHAR2(30)  ;
l_log_module           VARCHAR2(240) ;
l_output_value         VARCHAR2(30)  ;
BEGIN
IF g_log_enabled THEN
      l_log_module := C_DEFAULT_MODULE||'.AcctDerRule_5';
END IF;
IF (C_LEVEL_PROCEDURE >= g_log_level) THEN

      trace
         (p_msg      => 'BEGIN of AcctDerRule_5'
         ,p_level    => C_LEVEL_PROCEDURE
         ,p_module   => l_log_module);

END IF;

l_component_type         := 'AMB_ADR';
l_component_code         := 'AP_RELATED_DIST_BAL_SEG';
l_component_type_code    := 'S';
l_component_appl_id      :=  200;
l_amb_context_code       := 'DEFAULT';
x_transaction_coa_id     :=  null;
x_accounting_coa_id      :=  null;
x_flexfield_segment_code := 'GL_BALANCING';
x_flex_value_set_id      :=  null ;


 IF NVL(p_source_7,'
') =  'BALANCING_SEGMENT' AND 
NVL(p_source_9,'
') =  'INVENTORY'
 THEN 
--
  IF (C_LEVEL_PROCEDURE >= g_log_level) THEN

      trace
         (p_msg      => 'END of AcctDerRule_5'
         ,p_level    => C_LEVEL_PROCEDURE
         ,p_module   => l_log_module);

  END IF;
  x_value_combination_id  := TO_NUMBER(p_source_11) ;
  x_value_segment_code    := 'GL_BALANCING' ;
  x_value_type_code       := 'S';
  l_output_value          :=  null;
  RETURN l_output_value;

 ELSE 
    IF p_override_seg_flag = 'Y' THEN 
       RETURN '#$NO_OVERRIDE#$';
    END IF;
 END IF;

IF (C_LEVEL_PROCEDURE >= g_log_level) THEN

      trace
         (p_msg      => 'END of AcctDerRule_5(invalid)'
         ,p_level    => C_LEVEL_PROCEDURE
         ,p_module   => l_log_module);

END IF;

xla_ae_journal_entry_pkg.g_global_status      :=  xla_ae_journal_entry_pkg.C_INVALID;
x_value_combination_id  := null;
x_value_segment_code    := null;
x_value_type_code       := null;
l_output_value          := null;
xla_accounting_err_pkg.build_message
                 (p_appli_s_name            => 'XLA'
                 ,p_msg_name                => 'XLA_AP_INVALID_ADR'
                 ,p_token_1                 => 'COMPONENT_NAME'
                 ,p_value_1                 => xla_ae_sources_pkg.GetComponentName (
                                                            l_component_type
                                                          , l_component_code
                                                          , l_component_type_code
                                                          , l_component_appl_id
                                                          , l_amb_context_code
                                                          )
                 ,p_token_2                 => 'OWNER'
                 ,p_value_2                 => xla_lookups_pkg.get_meaning(
                                                        'XLA_OWNER_TYPE'
                                                        ,l_component_type_code
                                                        )
                 ,p_token_3                 => 'PAD_NAME'
                 ,p_value_3                 => xla_ae_journal_entry_pkg.g_cache_pad.pad_session_name
                 ,p_token_4                 => 'PAD_OWNER'
                 ,p_value_4                 => xla_lookups_pkg.get_meaning(
                                                        'XLA_OWNER_TYPE'
                                                        ,xla_ae_journal_entry_pkg.g_cache_pad.product_rule_type_code
                                                        )
                 ,p_entity_id               => xla_ae_journal_entry_pkg.g_cache_event.entity_id
                 ,p_event_id                => xla_ae_journal_entry_pkg.g_cache_event.event_id
                 ,p_ledger_id               => xla_ae_journal_entry_pkg.g_cache_event.target_ledger_id
                 ,p_ae_header_id            => NULL
);
RETURN l_output_value;
EXCEPTION
  WHEN xla_exceptions_pkg.application_exception THEN
      RAISE;
  WHEN OTHERS THEN
       xla_exceptions_pkg.raise_message
           (p_location => 'XLA_00200_AAD_S_000010_BC_PKG.AcctDerRule_5');
END AcctDerRule_5;
--

---------------------------------------
--
-- PRIVATE FUNCTION
--         AcctDerRule_6
--
---------------------------------------
FUNCTION AcctDerRule_6 (
  p_application_id              IN NUMBER
, p_ae_header_id                IN NUMBER
, p_side                        IN VARCHAR2 
--Purchase Order Rate Variance Gain Account
 , p_source_6            IN NUMBER
--Automatic Offsets Value
 , p_source_7            IN VARCHAR2
 , p_source_7_meaning    IN VARCHAR2
--Invoice Distribution Ledger Amount
 , p_source_8            IN NUMBER
--Destination Type of the PO Distribution
 , p_source_9            IN VARCHAR2
 , p_source_9_meaning    IN VARCHAR2
--Purchase Order Rate Variance Loss Account
 , p_source_10            IN NUMBER
--Invoice Distribution Account
 , p_source_11            IN NUMBER
--Automatic Offsets Flag
 , p_source_12            IN VARCHAR2
 , p_source_12_meaning    IN VARCHAR2
, x_transaction_coa_id         OUT NOCOPY NUMBER
, x_accounting_coa_id          OUT NOCOPY NUMBER
, x_value_type_code            OUT NOCOPY VARCHAR2
)
RETURN NUMBER
IS
l_component_type       VARCHAR2(80)  ;
l_component_code       VARCHAR2(30)  ;
l_component_type_code  VARCHAR2(1)   ;
l_component_appl_id    INTEGER       ;
l_amb_context_code     VARCHAR2(30)  ;
l_log_module           VARCHAR2(240) ;
l_output_value         NUMBER        ;
BEGIN
IF g_log_enabled THEN
      l_log_module := C_DEFAULT_MODULE||'.AcctDerRule_6';
END IF;
IF (C_LEVEL_PROCEDURE >= g_log_level) THEN
      trace
         (p_msg      => 'BEGIN of AcctDerRule_6'
         ,p_level    => C_LEVEL_PROCEDURE
         ,p_module   => l_log_module);
END IF;
--
l_component_type         := 'AMB_ADR';
l_component_code         := 'AP_EXCHG_TAXEXCHG_RATE_VAR';
l_component_type_code    := 'S';
l_component_appl_id      :=  200;
l_amb_context_code       := 'DEFAULT';
x_transaction_coa_id     :=  null;
x_accounting_coa_id      :=  null;
--

 IF NVL(p_source_9,'
') =  'EXPENSE' OR 
(NVL(p_source_9,'
') =  'INVENTORY' AND 
NVL(p_source_7,'
') =  'ACCOUNT_SEGMENT_VALUE')
 THEN 
 --
  IF (C_LEVEL_PROCEDURE >= g_log_level) THEN
      trace
         (p_msg      => 'END of AcctDerRule_6'
         ,p_level    => C_LEVEL_PROCEDURE
         ,p_module   => l_log_module);
  END IF;
  x_value_type_code := 'S';
  l_output_value    := TO_NUMBER(TO_NUMBER(p_source_11));
  RETURN l_output_value;

 ELSIF NVL(p_source_9,'
') <>  'EXPENSE' AND 
p_source_8 <=  0 AND 
(NVL(p_source_12,'
') =  'N' OR 
NVL(p_source_7,'
') =  'BALANCING_SEGMENT')
 THEN 
 --
  IF (C_LEVEL_PROCEDURE >= g_log_level) THEN
      trace
         (p_msg      => 'END of AcctDerRule_6'
         ,p_level    => C_LEVEL_PROCEDURE
         ,p_module   => l_log_module);
  END IF;
  x_value_type_code := 'S';
  l_output_value    := TO_NUMBER(TO_NUMBER(p_source_6));
  RETURN l_output_value;

 ELSIF NVL(p_source_9,'
') <>  'EXPENSE' AND 
p_source_8 >  0 AND 
(NVL(p_source_12,'
') =  'N' OR 
NVL(p_source_7,'
') =  'BALANCING_SEGMENT')
 THEN 
 --
  IF (C_LEVEL_PROCEDURE >= g_log_level) THEN
      trace
         (p_msg      => 'END of AcctDerRule_6'
         ,p_level    => C_LEVEL_PROCEDURE
         ,p_module   => l_log_module);
  END IF;
  x_value_type_code := 'S';
  l_output_value    := TO_NUMBER(TO_NUMBER(p_source_10));
  RETURN l_output_value;

 END IF;
--
IF (C_LEVEL_PROCEDURE >= g_log_level) THEN
      trace
         (p_msg      => 'END of AcctDerRule_6(invalid)'
         ,p_level    => C_LEVEL_PROCEDURE
         ,p_module   => l_log_module);
END IF;
xla_ae_journal_entry_pkg.g_global_status      :=  xla_ae_journal_entry_pkg.C_INVALID;
x_value_type_code := null;
l_output_value    := null;
xla_accounting_err_pkg.build_message
                 (p_appli_s_name            => 'XLA'
                 ,p_msg_name                => 'XLA_AP_INVALID_ADR'
                 ,p_token_1                 => 'COMPONENT_NAME'
                 ,p_value_1                 => xla_ae_sources_pkg.GetComponentName (
                                                            l_component_type
                                                          , l_component_code
                                                          , l_component_type_code
                                                          , l_component_appl_id
                                                          , l_amb_context_code
                                                          )
                 ,p_token_2                 => 'OWNER'
                 ,p_value_2                 => xla_lookups_pkg.get_meaning(
                                                        'XLA_OWNER_TYPE'
                                                        ,l_component_type_code
                                                        )
                 ,p_token_3                 => 'PAD_NAME'
                 ,p_value_3                 => xla_ae_journal_entry_pkg.g_cache_pad.pad_session_name
                 ,p_token_4                 => 'PAD_OWNER'
                 ,p_value_4                 => xla_lookups_pkg.get_meaning(
                                                        'XLA_OWNER_TYPE'
                                                        ,xla_ae_journal_entry_pkg.g_cache_pad.product_rule_type_code
                                                        )
                 ,p_entity_id               => xla_ae_journal_entry_pkg.g_cache_event.entity_id
                 ,p_event_id                => xla_ae_journal_entry_pkg.g_cache_event.event_id
                 ,p_ledger_id               => xla_ae_journal_entry_pkg.g_cache_event.target_ledger_id
                 ,p_ae_header_id            => NULL
);
RETURN l_output_value;
EXCEPTION
  WHEN xla_exceptions_pkg.application_exception THEN
      RAISE;
  WHEN OTHERS THEN
       xla_exceptions_pkg.raise_message
           (p_location => 'XLA_00200_AAD_S_000010_BC_PKG.AcctDerRule_6');
END AcctDerRule_6;
--

---------------------------------------
--
-- PRIVATE FUNCTION
--         AcctDerRule_7
--
---------------------------------------
FUNCTION AcctDerRule_7 (
  p_application_id              IN NUMBER
, p_ae_header_id                IN NUMBER
, p_side                        IN VARCHAR2 
--Invoice Distribution Account
 , p_source_11            IN NUMBER
, x_transaction_coa_id         OUT NOCOPY NUMBER
, x_accounting_coa_id          OUT NOCOPY NUMBER
, x_value_type_code            OUT NOCOPY VARCHAR2
)
RETURN NUMBER
IS
l_component_type       VARCHAR2(80)  ;
l_component_code       VARCHAR2(30)  ;
l_component_type_code  VARCHAR2(1)   ;
l_component_appl_id    INTEGER       ;
l_amb_context_code     VARCHAR2(30)  ;
l_log_module           VARCHAR2(240) ;
l_output_value         NUMBER        ;
BEGIN
IF g_log_enabled THEN
      l_log_module := C_DEFAULT_MODULE||'.AcctDerRule_7';
END IF;
IF (C_LEVEL_PROCEDURE >= g_log_level) THEN
      trace
         (p_msg      => 'BEGIN of AcctDerRule_7'
         ,p_level    => C_LEVEL_PROCEDURE
         ,p_module   => l_log_module);
END IF;
--
l_component_type         := 'AMB_ADR';
l_component_code         := 'AP_INVOICE_DIST';
l_component_type_code    := 'S';
l_component_appl_id      :=  200;
l_amb_context_code       := 'DEFAULT';
x_transaction_coa_id     :=  null;
x_accounting_coa_id      :=  null;
--

 --
  IF (C_LEVEL_PROCEDURE >= g_log_level) THEN
      trace
         (p_msg      => 'END of AcctDerRule_7'
         ,p_level    => C_LEVEL_PROCEDURE
         ,p_module   => l_log_module);
  END IF;
  x_value_type_code := 'S';
  l_output_value    := TO_NUMBER(TO_NUMBER(p_source_11));
  RETURN l_output_value;

--
IF (C_LEVEL_PROCEDURE >= g_log_level) THEN
      trace
         (p_msg      => 'END of AcctDerRule_7(invalid)'
         ,p_level    => C_LEVEL_PROCEDURE
         ,p_module   => l_log_module);
END IF;
xla_ae_journal_entry_pkg.g_global_status      :=  xla_ae_journal_entry_pkg.C_INVALID;
x_value_type_code := null;
l_output_value    := null;
xla_accounting_err_pkg.build_message
                 (p_appli_s_name            => 'XLA'
                 ,p_msg_name                => 'XLA_AP_INVALID_ADR'
                 ,p_token_1                 => 'COMPONENT_NAME'
                 ,p_value_1                 => xla_ae_sources_pkg.GetComponentName (
                                                            l_component_type
                                                          , l_component_code
                                                          , l_component_type_code
                                                          , l_component_appl_id
                                                          , l_amb_context_code
                                                          )
                 ,p_token_2                 => 'OWNER'
                 ,p_value_2                 => xla_lookups_pkg.get_meaning(
                                                        'XLA_OWNER_TYPE'
                                                        ,l_component_type_code
                                                        )
                 ,p_token_3                 => 'PAD_NAME'
                 ,p_value_3                 => xla_ae_journal_entry_pkg.g_cache_pad.pad_session_name
                 ,p_token_4                 => 'PAD_OWNER'
                 ,p_value_4                 => xla_lookups_pkg.get_meaning(
                                                        'XLA_OWNER_TYPE'
                                                        ,xla_ae_journal_entry_pkg.g_cache_pad.product_rule_type_code
                                                        )
                 ,p_entity_id               => xla_ae_journal_entry_pkg.g_cache_event.entity_id
                 ,p_event_id                => xla_ae_journal_entry_pkg.g_cache_event.event_id
                 ,p_ledger_id               => xla_ae_journal_entry_pkg.g_cache_event.target_ledger_id
                 ,p_ae_header_id            => NULL
);
RETURN l_output_value;
EXCEPTION
  WHEN xla_exceptions_pkg.application_exception THEN
      RAISE;
  WHEN OTHERS THEN
       xla_exceptions_pkg.raise_message
           (p_location => 'XLA_00200_AAD_S_000010_BC_PKG.AcctDerRule_7');
END AcctDerRule_7;
--

---------------------------------------
--
-- PRIVATE FUNCTION
--         AcctDerRule_8
--
---------------------------------------
FUNCTION AcctDerRule_8 (
  p_application_id              IN NUMBER
, p_ae_header_id                IN NUMBER
, p_side                        IN VARCHAR2 
--Self-Assessed Tax Account
 , p_source_13            IN NUMBER
, x_transaction_coa_id         OUT NOCOPY NUMBER
, x_accounting_coa_id          OUT NOCOPY NUMBER
, x_value_type_code            OUT NOCOPY VARCHAR2
)
RETURN NUMBER
IS
l_component_type       VARCHAR2(80)  ;
l_component_code       VARCHAR2(30)  ;
l_component_type_code  VARCHAR2(1)   ;
l_component_appl_id    INTEGER       ;
l_amb_context_code     VARCHAR2(30)  ;
l_log_module           VARCHAR2(240) ;
l_output_value         NUMBER        ;
BEGIN
IF g_log_enabled THEN
      l_log_module := C_DEFAULT_MODULE||'.AcctDerRule_8';
END IF;
IF (C_LEVEL_PROCEDURE >= g_log_level) THEN
      trace
         (p_msg      => 'BEGIN of AcctDerRule_8'
         ,p_level    => C_LEVEL_PROCEDURE
         ,p_module   => l_log_module);
END IF;
--
l_component_type         := 'AMB_ADR';
l_component_code         := 'AP_SELF_ASSESSED_TAX';
l_component_type_code    := 'S';
l_component_appl_id      :=  200;
l_amb_context_code       := 'DEFAULT';
x_transaction_coa_id     :=  null;
x_accounting_coa_id      :=  null;
--

 --
  IF (C_LEVEL_PROCEDURE >= g_log_level) THEN
      trace
         (p_msg      => 'END of AcctDerRule_8'
         ,p_level    => C_LEVEL_PROCEDURE
         ,p_module   => l_log_module);
  END IF;
  x_value_type_code := 'S';
  l_output_value    := TO_NUMBER(TO_NUMBER(p_source_13));
  RETURN l_output_value;

--
IF (C_LEVEL_PROCEDURE >= g_log_level) THEN
      trace
         (p_msg      => 'END of AcctDerRule_8(invalid)'
         ,p_level    => C_LEVEL_PROCEDURE
         ,p_module   => l_log_module);
END IF;
xla_ae_journal_entry_pkg.g_global_status      :=  xla_ae_journal_entry_pkg.C_INVALID;
x_value_type_code := null;
l_output_value    := null;
xla_accounting_err_pkg.build_message
                 (p_appli_s_name            => 'XLA'
                 ,p_msg_name                => 'XLA_AP_INVALID_ADR'
                 ,p_token_1                 => 'COMPONENT_NAME'
                 ,p_value_1                 => xla_ae_sources_pkg.GetComponentName (
                                                            l_component_type
                                                          , l_component_code
                                                          , l_component_type_code
                                                          , l_component_appl_id
                                                          , l_amb_context_code
                                                          )
                 ,p_token_2                 => 'OWNER'
                 ,p_value_2                 => xla_lookups_pkg.get_meaning(
                                                        'XLA_OWNER_TYPE'
                                                        ,l_component_type_code
                                                        )
                 ,p_token_3                 => 'PAD_NAME'
                 ,p_value_3                 => xla_ae_journal_entry_pkg.g_cache_pad.pad_session_name
                 ,p_token_4                 => 'PAD_OWNER'
                 ,p_value_4                 => xla_lookups_pkg.get_meaning(
                                                        'XLA_OWNER_TYPE'
                                                        ,xla_ae_journal_entry_pkg.g_cache_pad.product_rule_type_code
                                                        )
                 ,p_entity_id               => xla_ae_journal_entry_pkg.g_cache_event.entity_id
                 ,p_event_id                => xla_ae_journal_entry_pkg.g_cache_event.event_id
                 ,p_ledger_id               => xla_ae_journal_entry_pkg.g_cache_event.target_ledger_id
                 ,p_ae_header_id            => NULL
);
RETURN l_output_value;
EXCEPTION
  WHEN xla_exceptions_pkg.application_exception THEN
      RAISE;
  WHEN OTHERS THEN
       xla_exceptions_pkg.raise_message
           (p_location => 'XLA_00200_AAD_S_000010_BC_PKG.AcctDerRule_8');
END AcctDerRule_8;
--

---------------------------------------
--
-- PRIVATE FUNCTION
--         AcctDerRule_9
--
---------------------------------------
FUNCTION AcctDerRule_9 (
  p_application_id              IN NUMBER
, p_ae_header_id                IN NUMBER
, p_side                        IN VARCHAR2 
--Budget Account
 , p_source_14            IN NUMBER
, x_transaction_coa_id         OUT NOCOPY NUMBER
, x_accounting_coa_id          OUT NOCOPY NUMBER
, x_value_type_code            OUT NOCOPY VARCHAR2
)
RETURN NUMBER
IS
l_component_type       VARCHAR2(80)  ;
l_component_code       VARCHAR2(30)  ;
l_component_type_code  VARCHAR2(1)   ;
l_component_appl_id    INTEGER       ;
l_amb_context_code     VARCHAR2(30)  ;
l_log_module           VARCHAR2(240) ;
l_output_value         NUMBER        ;
BEGIN
IF g_log_enabled THEN
      l_log_module := C_DEFAULT_MODULE||'.AcctDerRule_9';
END IF;
IF (C_LEVEL_PROCEDURE >= g_log_level) THEN
      trace
         (p_msg      => 'BEGIN of AcctDerRule_9'
         ,p_level    => C_LEVEL_PROCEDURE
         ,p_module   => l_log_module);
END IF;
--
l_component_type         := 'AMB_ADR';
l_component_code         := 'PROJ_BURDENED_ENC_ACCT_RULE';
l_component_type_code    := 'S';
l_component_appl_id      :=  200;
l_amb_context_code       := 'DEFAULT';
x_transaction_coa_id     :=  null;
x_accounting_coa_id      :=  null;
--

 --
  IF (C_LEVEL_PROCEDURE >= g_log_level) THEN
      trace
         (p_msg      => 'END of AcctDerRule_9'
         ,p_level    => C_LEVEL_PROCEDURE
         ,p_module   => l_log_module);
  END IF;
  x_value_type_code := 'S';
  l_output_value    := TO_NUMBER(TO_NUMBER(p_source_14));
  RETURN l_output_value;

--
IF (C_LEVEL_PROCEDURE >= g_log_level) THEN
      trace
         (p_msg      => 'END of AcctDerRule_9(invalid)'
         ,p_level    => C_LEVEL_PROCEDURE
         ,p_module   => l_log_module);
END IF;
xla_ae_journal_entry_pkg.g_global_status      :=  xla_ae_journal_entry_pkg.C_INVALID;
x_value_type_code := null;
l_output_value    := null;
xla_accounting_err_pkg.build_message
                 (p_appli_s_name            => 'XLA'
                 ,p_msg_name                => 'XLA_AP_INVALID_ADR'
                 ,p_token_1                 => 'COMPONENT_NAME'
                 ,p_value_1                 => xla_ae_sources_pkg.GetComponentName (
                                                            l_component_type
                                                          , l_component_code
                                                          , l_component_type_code
                                                          , l_component_appl_id
                                                          , l_amb_context_code
                                                          )
                 ,p_token_2                 => 'OWNER'
                 ,p_value_2                 => xla_lookups_pkg.get_meaning(
                                                        'XLA_OWNER_TYPE'
                                                        ,l_component_type_code
                                                        )
                 ,p_token_3                 => 'PAD_NAME'
                 ,p_value_3                 => xla_ae_journal_entry_pkg.g_cache_pad.pad_session_name
                 ,p_token_4                 => 'PAD_OWNER'
                 ,p_value_4                 => xla_lookups_pkg.get_meaning(
                                                        'XLA_OWNER_TYPE'
                                                        ,xla_ae_journal_entry_pkg.g_cache_pad.product_rule_type_code
                                                        )
                 ,p_entity_id               => xla_ae_journal_entry_pkg.g_cache_event.entity_id
                 ,p_event_id                => xla_ae_journal_entry_pkg.g_cache_event.event_id
                 ,p_ledger_id               => xla_ae_journal_entry_pkg.g_cache_event.target_ledger_id
                 ,p_ae_header_id            => NULL
);
RETURN l_output_value;
EXCEPTION
  WHEN xla_exceptions_pkg.application_exception THEN
      RAISE;
  WHEN OTHERS THEN
       xla_exceptions_pkg.raise_message
           (p_location => 'XLA_00200_AAD_S_000010_BC_PKG.AcctDerRule_9');
END AcctDerRule_9;
--

---------------------------------------
--
-- PRIVATE FUNCTION
--         AcctDerRule_10
--
---------------------------------------
FUNCTION AcctDerRule_10 (
  p_application_id              IN NUMBER
, p_ae_header_id                IN NUMBER
, p_side                        IN VARCHAR2 
--Budget Account
 , p_source_14            IN NUMBER
, x_transaction_coa_id         OUT NOCOPY NUMBER
, x_accounting_coa_id          OUT NOCOPY NUMBER
, x_value_type_code            OUT NOCOPY VARCHAR2
)
RETURN NUMBER
IS
l_component_type       VARCHAR2(80)  ;
l_component_code       VARCHAR2(30)  ;
l_component_type_code  VARCHAR2(1)   ;
l_component_appl_id    INTEGER       ;
l_amb_context_code     VARCHAR2(30)  ;
l_log_module           VARCHAR2(240) ;
l_output_value         NUMBER        ;
BEGIN
IF g_log_enabled THEN
      l_log_module := C_DEFAULT_MODULE||'.AcctDerRule_10';
END IF;
IF (C_LEVEL_PROCEDURE >= g_log_level) THEN
      trace
         (p_msg      => 'BEGIN of AcctDerRule_10'
         ,p_level    => C_LEVEL_PROCEDURE
         ,p_module   => l_log_module);
END IF;
--
l_component_type         := 'AMB_ADR';
l_component_code         := 'PROJ_BURDEN_ENC_ACCT_RULE';
l_component_type_code    := 'S';
l_component_appl_id      :=  200;
l_amb_context_code       := 'DEFAULT';
x_transaction_coa_id     :=  null;
x_accounting_coa_id      :=  null;
--

 --
  IF (C_LEVEL_PROCEDURE >= g_log_level) THEN
      trace
         (p_msg      => 'END of AcctDerRule_10'
         ,p_level    => C_LEVEL_PROCEDURE
         ,p_module   => l_log_module);
  END IF;
  x_value_type_code := 'S';
  l_output_value    := TO_NUMBER(TO_NUMBER(p_source_14));
  RETURN l_output_value;

--
IF (C_LEVEL_PROCEDURE >= g_log_level) THEN
      trace
         (p_msg      => 'END of AcctDerRule_10(invalid)'
         ,p_level    => C_LEVEL_PROCEDURE
         ,p_module   => l_log_module);
END IF;
xla_ae_journal_entry_pkg.g_global_status      :=  xla_ae_journal_entry_pkg.C_INVALID;
x_value_type_code := null;
l_output_value    := null;
xla_accounting_err_pkg.build_message
                 (p_appli_s_name            => 'XLA'
                 ,p_msg_name                => 'XLA_AP_INVALID_ADR'
                 ,p_token_1                 => 'COMPONENT_NAME'
                 ,p_value_1                 => xla_ae_sources_pkg.GetComponentName (
                                                            l_component_type
                                                          , l_component_code
                                                          , l_component_type_code
                                                          , l_component_appl_id
                                                          , l_amb_context_code
                                                          )
                 ,p_token_2                 => 'OWNER'
                 ,p_value_2                 => xla_lookups_pkg.get_meaning(
                                                        'XLA_OWNER_TYPE'
                                                        ,l_component_type_code
                                                        )
                 ,p_token_3                 => 'PAD_NAME'
                 ,p_value_3                 => xla_ae_journal_entry_pkg.g_cache_pad.pad_session_name
                 ,p_token_4                 => 'PAD_OWNER'
                 ,p_value_4                 => xla_lookups_pkg.get_meaning(
                                                        'XLA_OWNER_TYPE'
                                                        ,xla_ae_journal_entry_pkg.g_cache_pad.product_rule_type_code
                                                        )
                 ,p_entity_id               => xla_ae_journal_entry_pkg.g_cache_event.entity_id
                 ,p_event_id                => xla_ae_journal_entry_pkg.g_cache_event.event_id
                 ,p_ledger_id               => xla_ae_journal_entry_pkg.g_cache_event.target_ledger_id
                 ,p_ae_header_id            => NULL
);
RETURN l_output_value;
EXCEPTION
  WHEN xla_exceptions_pkg.application_exception THEN
      RAISE;
  WHEN OTHERS THEN
       xla_exceptions_pkg.raise_message
           (p_location => 'XLA_00200_AAD_S_000010_BC_PKG.AcctDerRule_10');
END AcctDerRule_10;
--

---------------------------------------
--
-- PRIVATE FUNCTION
--         AcctDerRule_11
--
---------------------------------------
FUNCTION AcctDerRule_11 (
  p_application_id              IN NUMBER
, p_ae_header_id                IN NUMBER
, p_side                        IN VARCHAR2 
--Budget Account
 , p_source_14            IN NUMBER
, x_transaction_coa_id         OUT NOCOPY NUMBER
, x_accounting_coa_id          OUT NOCOPY NUMBER
, x_value_type_code            OUT NOCOPY VARCHAR2
)
RETURN NUMBER
IS
l_component_type       VARCHAR2(80)  ;
l_component_code       VARCHAR2(30)  ;
l_component_type_code  VARCHAR2(1)   ;
l_component_appl_id    INTEGER       ;
l_amb_context_code     VARCHAR2(30)  ;
l_log_module           VARCHAR2(240) ;
l_output_value         NUMBER        ;
BEGIN
IF g_log_enabled THEN
      l_log_module := C_DEFAULT_MODULE||'.AcctDerRule_11';
END IF;
IF (C_LEVEL_PROCEDURE >= g_log_level) THEN
      trace
         (p_msg      => 'BEGIN of AcctDerRule_11'
         ,p_level    => C_LEVEL_PROCEDURE
         ,p_module   => l_log_module);
END IF;
--
l_component_type         := 'AMB_ADR';
l_component_code         := 'PROJ_PREPAY_BURDENED_ENC_RULE';
l_component_type_code    := 'S';
l_component_appl_id      :=  200;
l_amb_context_code       := 'DEFAULT';
x_transaction_coa_id     :=  null;
x_accounting_coa_id      :=  null;
--

 --
  IF (C_LEVEL_PROCEDURE >= g_log_level) THEN
      trace
         (p_msg      => 'END of AcctDerRule_11'
         ,p_level    => C_LEVEL_PROCEDURE
         ,p_module   => l_log_module);
  END IF;
  x_value_type_code := 'S';
  l_output_value    := TO_NUMBER(TO_NUMBER(p_source_14));
  RETURN l_output_value;

--
IF (C_LEVEL_PROCEDURE >= g_log_level) THEN
      trace
         (p_msg      => 'END of AcctDerRule_11(invalid)'
         ,p_level    => C_LEVEL_PROCEDURE
         ,p_module   => l_log_module);
END IF;
xla_ae_journal_entry_pkg.g_global_status      :=  xla_ae_journal_entry_pkg.C_INVALID;
x_value_type_code := null;
l_output_value    := null;
xla_accounting_err_pkg.build_message
                 (p_appli_s_name            => 'XLA'
                 ,p_msg_name                => 'XLA_AP_INVALID_ADR'
                 ,p_token_1                 => 'COMPONENT_NAME'
                 ,p_value_1                 => xla_ae_sources_pkg.GetComponentName (
                                                            l_component_type
                                                          , l_component_code
                                                          , l_component_type_code
                                                          , l_component_appl_id
                                                          , l_amb_context_code
                                                          )
                 ,p_token_2                 => 'OWNER'
                 ,p_value_2                 => xla_lookups_pkg.get_meaning(
                                                        'XLA_OWNER_TYPE'
                                                        ,l_component_type_code
                                                        )
                 ,p_token_3                 => 'PAD_NAME'
                 ,p_value_3                 => xla_ae_journal_entry_pkg.g_cache_pad.pad_session_name
                 ,p_token_4                 => 'PAD_OWNER'
                 ,p_value_4                 => xla_lookups_pkg.get_meaning(
                                                        'XLA_OWNER_TYPE'
                                                        ,xla_ae_journal_entry_pkg.g_cache_pad.product_rule_type_code
                                                        )
                 ,p_entity_id               => xla_ae_journal_entry_pkg.g_cache_event.entity_id
                 ,p_event_id                => xla_ae_journal_entry_pkg.g_cache_event.event_id
                 ,p_ledger_id               => xla_ae_journal_entry_pkg.g_cache_event.target_ledger_id
                 ,p_ae_header_id            => NULL
);
RETURN l_output_value;
EXCEPTION
  WHEN xla_exceptions_pkg.application_exception THEN
      RAISE;
  WHEN OTHERS THEN
       xla_exceptions_pkg.raise_message
           (p_location => 'XLA_00200_AAD_S_000010_BC_PKG.AcctDerRule_11');
END AcctDerRule_11;
--

---------------------------------------
--
-- PRIVATE FUNCTION
--         AcctDerRule_12
--
---------------------------------------
FUNCTION AcctDerRule_12 (
  p_application_id              IN NUMBER
, p_ae_header_id                IN NUMBER
, p_side                        IN VARCHAR2 
--Budget Account
 , p_source_14            IN NUMBER
, x_transaction_coa_id         OUT NOCOPY NUMBER
, x_accounting_coa_id          OUT NOCOPY NUMBER
, x_value_type_code            OUT NOCOPY VARCHAR2
)
RETURN NUMBER
IS
l_component_type       VARCHAR2(80)  ;
l_component_code       VARCHAR2(30)  ;
l_component_type_code  VARCHAR2(1)   ;
l_component_appl_id    INTEGER       ;
l_amb_context_code     VARCHAR2(30)  ;
l_log_module           VARCHAR2(240) ;
l_output_value         NUMBER        ;
BEGIN
IF g_log_enabled THEN
      l_log_module := C_DEFAULT_MODULE||'.AcctDerRule_12';
END IF;
IF (C_LEVEL_PROCEDURE >= g_log_level) THEN
      trace
         (p_msg      => 'BEGIN of AcctDerRule_12'
         ,p_level    => C_LEVEL_PROCEDURE
         ,p_module   => l_log_module);
END IF;
--
l_component_type         := 'AMB_ADR';
l_component_code         := 'PROJ_PREPAY_ENC_ACCT_RULE';
l_component_type_code    := 'S';
l_component_appl_id      :=  200;
l_amb_context_code       := 'DEFAULT';
x_transaction_coa_id     :=  null;
x_accounting_coa_id      :=  null;
--

 --
  IF (C_LEVEL_PROCEDURE >= g_log_level) THEN
      trace
         (p_msg      => 'END of AcctDerRule_12'
         ,p_level    => C_LEVEL_PROCEDURE
         ,p_module   => l_log_module);
  END IF;
  x_value_type_code := 'S';
  l_output_value    := TO_NUMBER(TO_NUMBER(p_source_14));
  RETURN l_output_value;

--
IF (C_LEVEL_PROCEDURE >= g_log_level) THEN
      trace
         (p_msg      => 'END of AcctDerRule_12(invalid)'
         ,p_level    => C_LEVEL_PROCEDURE
         ,p_module   => l_log_module);
END IF;
xla_ae_journal_entry_pkg.g_global_status      :=  xla_ae_journal_entry_pkg.C_INVALID;
x_value_type_code := null;
l_output_value    := null;
xla_accounting_err_pkg.build_message
                 (p_appli_s_name            => 'XLA'
                 ,p_msg_name                => 'XLA_AP_INVALID_ADR'
                 ,p_token_1                 => 'COMPONENT_NAME'
                 ,p_value_1                 => xla_ae_sources_pkg.GetComponentName (
                                                            l_component_type
                                                          , l_component_code
                                                          , l_component_type_code
                                                          , l_component_appl_id
                                                          , l_amb_context_code
                                                          )
                 ,p_token_2                 => 'OWNER'
                 ,p_value_2                 => xla_lookups_pkg.get_meaning(
                                                        'XLA_OWNER_TYPE'
                                                        ,l_component_type_code
                                                        )
                 ,p_token_3                 => 'PAD_NAME'
                 ,p_value_3                 => xla_ae_journal_entry_pkg.g_cache_pad.pad_session_name
                 ,p_token_4                 => 'PAD_OWNER'
                 ,p_value_4                 => xla_lookups_pkg.get_meaning(
                                                        'XLA_OWNER_TYPE'
                                                        ,xla_ae_journal_entry_pkg.g_cache_pad.product_rule_type_code
                                                        )
                 ,p_entity_id               => xla_ae_journal_entry_pkg.g_cache_event.entity_id
                 ,p_event_id                => xla_ae_journal_entry_pkg.g_cache_event.event_id
                 ,p_ledger_id               => xla_ae_journal_entry_pkg.g_cache_event.target_ledger_id
                 ,p_ae_header_id            => NULL
);
RETURN l_output_value;
EXCEPTION
  WHEN xla_exceptions_pkg.application_exception THEN
      RAISE;
  WHEN OTHERS THEN
       xla_exceptions_pkg.raise_message
           (p_location => 'XLA_00200_AAD_S_000010_BC_PKG.AcctDerRule_12');
END AcctDerRule_12;
--

---------------------------------------
--
-- PRIVATE FUNCTION
--         AcctDerRule_13
--
---------------------------------------
FUNCTION AcctDerRule_13 (
  p_application_id              IN NUMBER
, p_ae_header_id                IN NUMBER
, p_side                        IN VARCHAR2 
--Budget Account
 , p_source_14            IN NUMBER
, x_transaction_coa_id         OUT NOCOPY NUMBER
, x_accounting_coa_id          OUT NOCOPY NUMBER
, x_value_type_code            OUT NOCOPY VARCHAR2
)
RETURN NUMBER
IS
l_component_type       VARCHAR2(80)  ;
l_component_code       VARCHAR2(30)  ;
l_component_type_code  VARCHAR2(1)   ;
l_component_appl_id    INTEGER       ;
l_amb_context_code     VARCHAR2(30)  ;
l_log_module           VARCHAR2(240) ;
l_output_value         NUMBER        ;
BEGIN
IF g_log_enabled THEN
      l_log_module := C_DEFAULT_MODULE||'.AcctDerRule_13';
END IF;
IF (C_LEVEL_PROCEDURE >= g_log_level) THEN
      trace
         (p_msg      => 'BEGIN of AcctDerRule_13'
         ,p_level    => C_LEVEL_PROCEDURE
         ,p_module   => l_log_module);
END IF;
--
l_component_type         := 'AMB_ADR';
l_component_code         := 'PROJ_PROJ_BURDEN_ENC_ACCT_RULE';
l_component_type_code    := 'S';
l_component_appl_id      :=  200;
l_amb_context_code       := 'DEFAULT';
x_transaction_coa_id     :=  null;
x_accounting_coa_id      :=  null;
--

 --
  IF (C_LEVEL_PROCEDURE >= g_log_level) THEN
      trace
         (p_msg      => 'END of AcctDerRule_13'
         ,p_level    => C_LEVEL_PROCEDURE
         ,p_module   => l_log_module);
  END IF;
  x_value_type_code := 'S';
  l_output_value    := TO_NUMBER(TO_NUMBER(p_source_14));
  RETURN l_output_value;

--
IF (C_LEVEL_PROCEDURE >= g_log_level) THEN
      trace
         (p_msg      => 'END of AcctDerRule_13(invalid)'
         ,p_level    => C_LEVEL_PROCEDURE
         ,p_module   => l_log_module);
END IF;
xla_ae_journal_entry_pkg.g_global_status      :=  xla_ae_journal_entry_pkg.C_INVALID;
x_value_type_code := null;
l_output_value    := null;
xla_accounting_err_pkg.build_message
                 (p_appli_s_name            => 'XLA'
                 ,p_msg_name                => 'XLA_AP_INVALID_ADR'
                 ,p_token_1                 => 'COMPONENT_NAME'
                 ,p_value_1                 => xla_ae_sources_pkg.GetComponentName (
                                                            l_component_type
                                                          , l_component_code
                                                          , l_component_type_code
                                                          , l_component_appl_id
                                                          , l_amb_context_code
                                                          )
                 ,p_token_2                 => 'OWNER'
                 ,p_value_2                 => xla_lookups_pkg.get_meaning(
                                                        'XLA_OWNER_TYPE'
                                                        ,l_component_type_code
                                                        )
                 ,p_token_3                 => 'PAD_NAME'
                 ,p_value_3                 => xla_ae_journal_entry_pkg.g_cache_pad.pad_session_name
                 ,p_token_4                 => 'PAD_OWNER'
                 ,p_value_4                 => xla_lookups_pkg.get_meaning(
                                                        'XLA_OWNER_TYPE'
                                                        ,xla_ae_journal_entry_pkg.g_cache_pad.product_rule_type_code
                                                        )
                 ,p_entity_id               => xla_ae_journal_entry_pkg.g_cache_event.entity_id
                 ,p_event_id                => xla_ae_journal_entry_pkg.g_cache_event.event_id
                 ,p_ledger_id               => xla_ae_journal_entry_pkg.g_cache_event.target_ledger_id
                 ,p_ae_header_id            => NULL
);
RETURN l_output_value;
EXCEPTION
  WHEN xla_exceptions_pkg.application_exception THEN
      RAISE;
  WHEN OTHERS THEN
       xla_exceptions_pkg.raise_message
           (p_location => 'XLA_00200_AAD_S_000010_BC_PKG.AcctDerRule_13');
END AcctDerRule_13;
--

---------------------------------------
--
-- PRIVATE FUNCTION
--         AcctLineType_14
--
---------------------------------------
PROCEDURE AcctLineType_14 (
  p_application_id        IN NUMBER
 ,p_event_id              IN NUMBER
 ,p_calculate_acctd_flag  IN VARCHAR2
 ,p_calculate_g_l_flag    IN VARCHAR2
 ,p_actual_flag           IN OUT VARCHAR2
 ,p_balance_type_code     OUT VARCHAR2
 ,p_gain_or_loss_ref      OUT VARCHAR2
 
--Invoice Distribution Description
 , p_source_1            IN VARCHAR2
--Invoice Distribution Account
 , p_source_11            IN NUMBER
--Invoice Distribution Type
 , p_source_15            IN VARCHAR2
 , p_source_15_meaning    IN VARCHAR2
--Amount for Variance Amount
 , p_source_16            IN NUMBER
--Purchasing Encumbrance Option
 , p_source_17            IN VARCHAR2
 , p_source_17_meaning    IN VARCHAR2
--Accrue on Receipt Option
 , p_source_18            IN VARCHAR2
 , p_source_18_meaning    IN VARCHAR2
--Accounting Reversal Indicator
 , p_source_19            IN VARCHAR2
--Distribution Link Type
 , p_source_21            IN VARCHAR2
--Allocation to Main Distribution Identifier
 , p_source_23            IN NUMBER
--Invoice Identifier
 , p_source_24            IN NUMBER
--Business Flow Accounts Payable Application Identifier
 , p_source_25            IN NUMBER
--Business Flow Invoice Distribution Type
 , p_source_26            IN VARCHAR2
--Business Flow Invoice Entity Code
 , p_source_27            IN VARCHAR2
--Business Flow Invoice Distribution Identifier
 , p_source_28            IN NUMBER
--Business Flow Invoice Identifier
 , p_source_29            IN NUMBER
--Invoice Distribution Identifier
 , p_source_30            IN NUMBER
--Payables Encumbrance Upgrade Credit Account
 , p_source_31            IN NUMBER
--Payables Encumbrance Upgrade Credit Amount
 , p_source_32            IN NUMBER
--Invoice Currency Code
 , p_source_33            IN VARCHAR2
--Payables Encumbrance Upgrade Credit Base Amount
 , p_source_34            IN NUMBER
--Payables Encumbrance Upgrade Debit Account
 , p_source_35            IN NUMBER
--Payables Encumbrance Upgrade Debit Amount
 , p_source_36            IN NUMBER
--Payables Encumbrance Upgrade Debit Base Amount
 , p_source_37            IN NUMBER
--Payables Encumbrance Upgrade Option
 , p_source_38            IN VARCHAR2
--Invoice Exchange Date
 , p_source_39            IN DATE
--Invoice Exchange Rate
 , p_source_40            IN NUMBER
--Invoice Exchange Rate Type
 , p_source_41            IN VARCHAR2
--Variance Amount in Ledger Currency
 , p_source_42            IN NUMBER
--Deferred Accounting End Date
 , p_source_43            IN DATE
--Deferred Accounting Option
 , p_source_44            IN VARCHAR2
--Deferred Accounting Start Date
 , p_source_45            IN DATE
--Override Accounted Amount Indicator
 , p_source_46            IN VARCHAR2
 , p_source_46_meaning    IN VARCHAR2
--Invoice Supplier Identifier
 , p_source_47            IN NUMBER
--Invoice Supplier Site Identifier
 , p_source_48            IN NUMBER
--Third Party Type
 , p_source_49            IN VARCHAR2
--Parent Reversal Identifier
 , p_source_50            IN NUMBER
--Invoice Distribution Statistical Amount
 , p_source_51            IN NUMBER
--Invoice Distribution Tax Line Identifier
 , p_source_52            IN NUMBER
--Invoice Distribution Tax Distribution Identifier from Tax
 , p_source_53            IN NUMBER
--Invoice Distribution Summary Tax Line Identifier
 , p_source_54            IN NUMBER
--Payables Upgrade Credit Encumbrance Type Identifier
 , p_source_55            IN NUMBER
--Payables Upgrade Debit Encumbrance Type Identifier
 , p_source_56            IN NUMBER
)
IS

l_component_type              VARCHAR2(80);
l_component_code              VARCHAR2(30);
l_component_type_code         VARCHAR2(1);
l_component_appl_id           INTEGER;
l_amb_context_code            VARCHAR2(30);
l_entity_code                 VARCHAR2(30);
l_event_class_code            VARCHAR2(30);
l_ae_header_id                NUMBER;
l_event_type_code             VARCHAR2(30);
l_line_definition_code        VARCHAR2(30);
l_line_definition_owner_code  VARCHAR2(1);
--
-- adr variables
l_segment                     VARCHAR2(30);
l_ccid                        NUMBER;
l_adr_transaction_coa_id      NUMBER;
l_adr_accounting_coa_id       NUMBER;
l_adr_flexfield_segment_code  VARCHAR2(30);
l_adr_flex_value_set_id       NUMBER;
l_adr_value_type_code         VARCHAR2(30);
l_adr_value_combination_id    NUMBER;
l_adr_value_segment_code      VARCHAR2(30);

l_bflow_method_code           VARCHAR2(30);  -- 4219869 Business Flow
l_bflow_class_code            VARCHAR2(30);  -- 4219869 Business Flow
l_inherit_desc_flag           VARCHAR2(1);   -- 4219869 Business Flow
l_budgetary_control_flag      VARCHAR2(1);   -- 4458381 Public Sector Enh

-- 4262811 Variables ------------------------------------------------------------------------------------------
l_entered_amt_idx             NUMBER;
l_accted_amt_idx              NUMBER;
l_acc_rev_flag                VARCHAR2(1);
l_accrual_line_num            NUMBER;
l_tmp_amt                     NUMBER;
l_acc_rev_natural_side_code   VARCHAR2(1);

l_num_entries                 NUMBER;
l_gl_dates                    xla_ae_journal_entry_pkg.t_array_date;
l_accted_amts                 xla_ae_journal_entry_pkg.t_array_num;
l_entered_amts                xla_ae_journal_entry_pkg.t_array_num;
l_period_names                xla_ae_journal_entry_pkg.t_array_V15L;
l_recog_line_1                NUMBER;
l_recog_line_2                NUMBER;

l_bflow_applied_to_amt_idx    NUMBER;                                -- 5132302
l_bflow_applied_to_amt        NUMBER;                                -- 5132302
l_bflow_applied_to_amts       xla_ae_journal_entry_pkg.t_array_num;  -- 5132302

l_event_id                    NUMBER;  -- To handle MPA header Description: xla_ae_header_pkg.SetHdrDescription

--l_rounding_ccy                VARCHAR2(15); -- To handle MPA rounding  4262811b
l_same_currency               BOOLEAN;        -- To handle MPA rounding  4262811b

---------------------------------------------------------------------------------------------------------------


--
-- bulk performance
--
l_balance_type_code           VARCHAR2(1);
l_rec_acct_attrs              XLA_AE_LINES_PKG.t_rec_acct_attrs;
l_log_module                  VARCHAR2(240);

--
-- Upgrade strategy
--
l_actual_upg_option           VARCHAR2(1);
l_enc_upg_option           VARCHAR2(1);

--
BEGIN
--
IF g_log_enabled THEN
      l_log_module := C_DEFAULT_MODULE||'.AcctLineType_14';
END IF;
--
IF (C_LEVEL_PROCEDURE >= g_log_level) THEN

      trace
         (p_msg      => 'BEGIN of AcctLineType_14'
         ,p_level    => C_LEVEL_PROCEDURE
         ,p_module   => l_log_module);

END IF;
--
l_component_type             := 'AMB_JLT';
l_component_code             := 'AP_AMOUNT_VARIANCE_CM_ENC_DR';
l_component_type_code        := 'S';
l_component_appl_id          :=  200;
l_amb_context_code           := 'DEFAULT';
l_entity_code                := 'AP_INVOICES';
l_event_class_code           := 'CREDIT MEMOS';
l_event_type_code            := 'CREDIT MEMOS_ALL';
l_line_definition_owner_code := 'S';
l_line_definition_code       := 'ENC_CM_ALL';
--
l_balance_type_code          := 'E';
l_segment                     := NULL;
l_ccid                        := NULL;
l_adr_transaction_coa_id      := NULL;
l_adr_accounting_coa_id       := NULL;
l_adr_flexfield_segment_code  := NULL;
l_adr_flex_value_set_id       := NULL;
l_adr_value_type_code         := NULL;
l_adr_value_combination_id    := NULL;
l_adr_value_segment_code      := NULL;

l_bflow_method_code          := 'NONE';   -- 4219869 Business Flow
l_bflow_class_code           := 'AP_INV_ENCUM';    -- 4219869 Business Flow
l_inherit_desc_flag          := 'N';   -- 4219869 Business Flow
l_budgetary_control_flag     := 'Y';

l_bflow_applied_to_amt_idx   := NULL; -- 5132302
l_bflow_applied_to_amt       := NULL; -- 5132302
l_entered_amt_idx            := NULL;          -- 4262811
l_accted_amt_idx             := NULL;          -- 4262811
l_acc_rev_flag               := NULL;          -- 4262811
l_accrual_line_num           := NULL;          -- 4262811
l_tmp_amt                    := NULL;          -- 4262811
--
IF ((p_calculate_g_l_flag = 'Y' AND XLA_AE_JOURNAL_ENTRY_PKG.g_cache_ledgers_info.ledger_category_code <> 'ALC') or
            (XLA_AE_JOURNAL_ENTRY_PKG.g_cache_ledgers_info.ledger_category_code in ('ALC', 'SECONDARY') AND XLA_AE_JOURNAL_ENTRY_PKG.g_cache_ledgers_info.calculate_amts_flag='Y')) THEN
               return;
  END IF;
  
IF XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id = XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.ledger_id OR
    l_balance_type_code <> 'B' THEN
IF NVL(p_source_15,'
') =  'ITEM' AND 
p_source_16 IS NOT NULL AND 
NVL(p_source_17,'
') =  'Y' AND 
NVL(p_source_18,'
') <>  'Y'
 THEN 

   --
   XLA_AE_LINES_PKG.SetNewLine;

   p_balance_type_code          := l_balance_type_code;
   -- set the flag so later we will know whether the gain loss line needs to be created
   
   IF(l_balance_type_code = 'A' ) THEN
     p_actual_flag :='G';
   END IF;

   --
   -- bulk performance
   --
   XLA_AE_LINES_PKG.set_ae_header_id (p_ae_header_id => p_event_id ,
                                      p_header_num   => 0); -- 4262811
   --
   -- set accounting line options
   --
   l_ae_header_id:= xla_ae_lines_pkg.SetAcctLineOption(
           p_natural_side_code          => 'D'
         , p_gain_or_loss_flag          => 'Y'
         , p_gl_transfer_mode_code      => 'S'
         , p_acct_entry_type_code       => 'E'
         , p_switch_side_flag           => 'Y'
         , p_merge_duplicate_code       => 'N'
         );
   --
   l_acc_rev_natural_side_code := 'C';  -- 4262811
   -- 
   --
   -- set accounting line type info
   --
   xla_ae_lines_pkg.SetAcctLineType
      (p_component_type             => l_component_type
      ,p_event_type_code            => l_event_type_code
      ,p_line_definition_owner_code => l_line_definition_owner_code
      ,p_line_definition_code       => l_line_definition_code
      ,p_accounting_line_code       => l_component_code
      ,p_accounting_line_type_code  => l_component_type_code
      ,p_accounting_line_appl_id    => l_component_appl_id
      ,p_amb_context_code           => l_amb_context_code
      ,p_entity_code                => l_entity_code
      ,p_event_class_code           => l_event_class_code);
   --
   -- set accounting class
   --
   xla_ae_lines_pkg.SetAcctClass(
           p_accounting_class_code  => 'AMT_VARIANCE'
         , p_ae_header_id           => l_ae_header_id
         );

   --
   -- set rounding class
   --
   XLA_AE_LINES_PKG.g_rec_lines.array_rounding_class(XLA_AE_LINES_PKG.g_LineNumber) :=
                      'AMT_VARIANCE';

   --
   xla_ae_lines_pkg.g_rec_lines.array_calculate_acctd_flag(xla_ae_lines_pkg.g_LineNumber) := p_calculate_acctd_flag;
   xla_ae_lines_pkg.g_rec_lines.array_calculate_g_l_flag(xla_ae_lines_pkg.g_LineNumber) := p_calculate_g_l_flag;
   --
   -- bulk performance
   --
   XLA_AE_LINES_PKG.g_rec_lines.array_balance_type_code(XLA_AE_LINES_PKG.g_LineNumber) := l_balance_type_code;

   XLA_AE_LINES_PKG.g_rec_lines.array_ledger_id(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id;

   -- 4955764
   XLA_AE_LINES_PKG.g_rec_lines.array_gl_date(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_HEADER_PKG.g_rec_header_new.array_gl_date(g_array_event(p_event_id).array_value_num('header_index'));

   -- 4458381 Public Sector Enh
      XLA_AE_LINES_PKG.g_rec_lines.array_encumbrance_type_id(XLA_AE_LINES_PKG.g_LineNumber) := 1060;
   --
   -- set accounting attributes for the line type
   --
   l_entered_amt_idx := 23;
   l_accted_amt_idx  := 28;
   l_bflow_applied_to_amt_idx  := NULL;  -- 5132302
   l_rec_acct_attrs.array_acct_attr_code(1) := 'ACCOUNTING_REVERSAL_OPTION';
   l_rec_acct_attrs.array_char_value(1)  := p_source_19;
   l_rec_acct_attrs.array_acct_attr_code(2) := 'ALLOC_TO_APPLICATION_ID';
   l_rec_acct_attrs.array_num_value(2)  := 
xla_ae_sources_pkg.GetSystemSourceNum(
   p_source_code           => 'XLA_EVENT_APPL_ID'
 , p_source_type_code      => 'Y'
 , p_source_application_id =>  602
);
   l_rec_acct_attrs.array_acct_attr_code(3) := 'ALLOC_TO_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(3)  := p_source_21;
   l_rec_acct_attrs.array_acct_attr_code(4) := 'ALLOC_TO_ENTITY_CODE';
   l_rec_acct_attrs.array_char_value(4)  := 
xla_ae_sources_pkg.GetSystemSourceChar(
   p_source_code           => 'XLA_ENTITY_CODE'
 , p_source_type_code      => 'Y'
 , p_source_application_id =>  602
);
   l_rec_acct_attrs.array_acct_attr_code(5) := 'ALLOC_TO_FIRST_DIST_ID';
   l_rec_acct_attrs.array_num_value(5)  :=  to_char(p_source_23);
   l_rec_acct_attrs.array_acct_attr_code(6) := 'ALLOC_TO_FIRST_SYS_TRAN_ID';
   l_rec_acct_attrs.array_num_value(6)  :=  to_char(p_source_24);
   l_rec_acct_attrs.array_acct_attr_code(7) := 'APPLIED_TO_APPLICATION_ID';
   l_rec_acct_attrs.array_num_value(7)  := p_source_25;
   l_rec_acct_attrs.array_acct_attr_code(8) := 'APPLIED_TO_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(8)  := p_source_26;
   l_rec_acct_attrs.array_acct_attr_code(9) := 'APPLIED_TO_ENTITY_CODE';
   l_rec_acct_attrs.array_char_value(9)  := p_source_27;
   l_rec_acct_attrs.array_acct_attr_code(10) := 'APPLIED_TO_FIRST_DIST_ID';
   l_rec_acct_attrs.array_num_value(10)  :=  to_char(p_source_28);
   l_rec_acct_attrs.array_acct_attr_code(11) := 'APPLIED_TO_FIRST_SYS_TRAN_ID';
   l_rec_acct_attrs.array_num_value(11)  :=  to_char(p_source_29);
   l_rec_acct_attrs.array_acct_attr_code(12) := 'DISTRIBUTION_IDENTIFIER_1';
   l_rec_acct_attrs.array_num_value(12)  :=  to_char(p_source_30);
   l_rec_acct_attrs.array_acct_attr_code(13) := 'DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(13)  := p_source_21;
   l_rec_acct_attrs.array_acct_attr_code(14) := 'ENC_UPG_CR_CCID';
   l_rec_acct_attrs.array_num_value(14)  := p_source_31;
   l_rec_acct_attrs.array_acct_attr_code(15) := 'ENC_UPG_CR_ENTERED_AMT';
   l_rec_acct_attrs.array_num_value(15)  := p_source_32;
   l_rec_acct_attrs.array_acct_attr_code(16) := 'ENC_UPG_CR_ENTERED_CURR';
   l_rec_acct_attrs.array_char_value(16)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(17) := 'ENC_UPG_CR_LEDGER_AMT';
   l_rec_acct_attrs.array_num_value(17)  := p_source_34;
   l_rec_acct_attrs.array_acct_attr_code(18) := 'ENC_UPG_DR_CCID';
   l_rec_acct_attrs.array_num_value(18)  := p_source_35;
   l_rec_acct_attrs.array_acct_attr_code(19) := 'ENC_UPG_DR_ENTERED_AMT';
   l_rec_acct_attrs.array_num_value(19)  := p_source_36;
   l_rec_acct_attrs.array_acct_attr_code(20) := 'ENC_UPG_DR_ENTERED_CURR';
   l_rec_acct_attrs.array_char_value(20)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(21) := 'ENC_UPG_DR_LEDGER_AMT';
   l_rec_acct_attrs.array_num_value(21)  := p_source_37;
   l_rec_acct_attrs.array_acct_attr_code(22) := 'ENC_UPG_OPTION';
   l_rec_acct_attrs.array_char_value(22)  := p_source_38;
   l_rec_acct_attrs.array_acct_attr_code(23) := 'ENTERED_CURRENCY_AMOUNT';
   l_rec_acct_attrs.array_num_value(23)  := p_source_16;
   l_rec_acct_attrs.array_acct_attr_code(24) := 'ENTERED_CURRENCY_CODE';
   l_rec_acct_attrs.array_char_value(24)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(25) := 'EXCHANGE_DATE';
   l_rec_acct_attrs.array_date_value(25)  := p_source_39;
   l_rec_acct_attrs.array_acct_attr_code(26) := 'EXCHANGE_RATE';
   l_rec_acct_attrs.array_num_value(26)  := p_source_40;
   l_rec_acct_attrs.array_acct_attr_code(27) := 'EXCHANGE_RATE_TYPE';
   l_rec_acct_attrs.array_char_value(27)  := p_source_41;
   l_rec_acct_attrs.array_acct_attr_code(28) := 'LEDGER_AMOUNT';
   l_rec_acct_attrs.array_num_value(28)  := p_source_42;
   l_rec_acct_attrs.array_acct_attr_code(29) := 'MULTIPERIOD_END_DATE';
   l_rec_acct_attrs.array_date_value(29)  := p_source_43;
   l_rec_acct_attrs.array_acct_attr_code(30) := 'MULTIPERIOD_OPTION';
   l_rec_acct_attrs.array_char_value(30)  := p_source_44;
   l_rec_acct_attrs.array_acct_attr_code(31) := 'MULTIPERIOD_START_DATE';
   l_rec_acct_attrs.array_date_value(31)  := p_source_45;
   l_rec_acct_attrs.array_acct_attr_code(32) := 'OVERRIDE_ACCTD_AMT_FLAG';
   l_rec_acct_attrs.array_char_value(32)  := p_source_46;
   l_rec_acct_attrs.array_acct_attr_code(33) := 'PARTY_ID';
   l_rec_acct_attrs.array_num_value(33)  := p_source_47;
   l_rec_acct_attrs.array_acct_attr_code(34) := 'PARTY_SITE_ID';
   l_rec_acct_attrs.array_num_value(34)  := p_source_48;
   l_rec_acct_attrs.array_acct_attr_code(35) := 'PARTY_TYPE';
   l_rec_acct_attrs.array_char_value(35)  := p_source_49;
   l_rec_acct_attrs.array_acct_attr_code(36) := 'REVERSED_DISTRIBUTION_ID1';
   l_rec_acct_attrs.array_num_value(36)  :=  to_char(p_source_50);
   l_rec_acct_attrs.array_acct_attr_code(37) := 'REVERSED_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(37)  := p_source_21;
   l_rec_acct_attrs.array_acct_attr_code(38) := 'STATISTICAL_AMOUNT';
   l_rec_acct_attrs.array_num_value(38)  := p_source_51;
   l_rec_acct_attrs.array_acct_attr_code(39) := 'TAX_LINE_REF_ID';
   l_rec_acct_attrs.array_num_value(39)  := p_source_52;
   l_rec_acct_attrs.array_acct_attr_code(40) := 'TAX_REC_NREC_DIST_REF_ID';
   l_rec_acct_attrs.array_num_value(40)  := p_source_53;
   l_rec_acct_attrs.array_acct_attr_code(41) := 'TAX_SUMMARY_LINE_REF_ID';
   l_rec_acct_attrs.array_num_value(41)  := p_source_54;
   l_rec_acct_attrs.array_acct_attr_code(42) := 'UPG_CR_ENC_TYPE_ID';
   l_rec_acct_attrs.array_num_value(42)  := p_source_55;
   l_rec_acct_attrs.array_acct_attr_code(43) := 'UPG_DR_ENC_TYPE_ID';
   l_rec_acct_attrs.array_num_value(43)  := p_source_56;

   XLA_AE_LINES_PKG.SetLineAcctAttrs(l_rec_acct_attrs);
   p_gain_or_loss_ref  := XLA_AE_LINES_PKG.g_rec_lines.array_gain_or_loss_ref(XLA_AE_LINES_PKG.g_LineNumber);

   ---------------------------------------------------------------------------------------------------------------
   -- 4336173 -- assign Business Flow Class (replace code in xla_ae_lines_pkg.Business_Flow_Validation)
   ---------------------------------------------------------------------------------------------------------------
   XLA_AE_LINES_PKG.g_rec_lines.array_business_class_code(XLA_AE_LINES_PKG.g_LineNumber) := l_bflow_class_code;

   l_actual_upg_option  := XLA_AE_LINES_PKG.g_rec_lines.array_actual_upg_option(XLA_AE_LINES_PKG.g_LineNumber);
   l_enc_upg_option     := XLA_AE_LINES_PKG.g_rec_lines.array_enc_upg_option(XLA_AE_LINES_PKG.g_LineNumber);

   IF xla_accounting_cache_pkg.GetValueChar
         (p_source_code         => 'LEDGER_CATEGORY_CODE'
         ,p_target_ledger_id    => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id) IN ('PRIMARY','ALC')
   AND l_bflow_method_code = 'PRIOR_ENTRY'
--   AND (l_actual_upg_option = 'Y' OR l_enc_upg_option = 'Y') Bug 4922099
   AND ( (NVL(l_actual_upg_option, 'N') IN ('Y', 'O')) OR
         (NVL(l_enc_upg_option, 'N') IN ('Y', 'O'))
       )
   THEN
         xla_ae_lines_pkg.BflowUpgEntry
           (p_business_method_code    => l_bflow_method_code
           ,p_business_class_code     => l_bflow_class_code
           ,p_balance_type            => l_balance_type_code);
   ELSE
      NULL;
-- No business flow processing for business flow method of NONE.
   END IF;

   --
   -- call analytical criteria
   --
   
   --
   -- call description
   --
   
xla_ae_lines_pkg.SetLineDescription(
   p_ae_header_id => l_ae_header_id
  ,p_description  => Description_2 (
     p_application_id         => p_application_id
   , p_ae_header_id           => l_ae_header_id 
, p_source_1 => p_source_1
   )
);


   --
   -- call ADRs
   -- Bug 4922099
   --
   IF ( (l_bflow_method_code <> 'PRIOR_ENTRY') OR
        (NVL(l_actual_upg_option, 'N') = 'O') OR
        (NVL(l_enc_upg_option, 'N') = 'O')
      )
   THEN
   NULL;
   --
   --
   
  l_ccid := AcctDerRule_7(
           p_application_id           => p_application_id
         , p_ae_header_id             => l_ae_header_id 
, p_source_11 => p_source_11
         , x_transaction_coa_id       => l_adr_transaction_coa_id
         , x_accounting_coa_id        => l_adr_accounting_coa_id
         , x_value_type_code          => l_adr_value_type_code
         , p_side                     => 'NA'
   );

   xla_ae_lines_pkg.set_ccid(
    p_code_combination_id          => l_ccid
  , p_value_type_code              => l_adr_value_type_code
  , p_transaction_coa_id           => l_adr_transaction_coa_id
  , p_accounting_coa_id            => l_adr_accounting_coa_id
  , p_adr_code                     => 'AP_INVOICE_DIST'
  , p_adr_type_code                => 'S'
  , p_component_type               => l_component_type
  , p_component_code               => l_component_code
  , p_component_type_code          => l_component_type_code
  , p_component_appl_id            => l_component_appl_id
  , p_amb_context_code             => l_amb_context_code
  , p_side                         => 'NA'
  );


   --
   --
   END IF;
   --
   -- Bug 4922099
   IF ( ( (NVL(l_actual_upg_option, 'N') = 'O') OR
          (NVL(l_enc_upg_option, 'N') = 'O')
        ) AND
        (l_bflow_method_code = 'PRIOR_ENTRY')
      )
   THEN
      IF
      --
      1 = 2
      --
      THEN
      xla_accounting_err_pkg.build_message
                                    (p_appli_s_name            => 'XLA'
                                    ,p_msg_name                => 'XLA_UPG_OVERRIDE_ADR_UNDEFINED'
                                    ,p_token_1                 => 'LINE_NUMBER'
                                    ,p_value_1                 => XLA_AE_LINES_PKG.g_LineNumber
                                    ,p_token_2                 => 'LINE_TYPE_NAME'
                                    ,p_value_2                 => XLA_AE_SOURCES_PKG.GetComponentName (
                                                                             l_component_type
                                                                            ,l_component_code
                                                                            ,l_component_type_code
                                                                            ,l_component_appl_id
                                                                            ,l_amb_context_code
                                                                            ,l_entity_code
                                                                            ,l_event_class_code
                                                                           )
                                    ,p_token_3                 => 'OWNER'
                                    ,p_value_3                 => xla_lookups_pkg.get_meaning(
                                                                          p_lookup_type     => 'XLA_OWNER_TYPE'
                                                                          ,p_lookup_code    => l_component_type_code
                                                                         )
                                    ,p_token_4                 => 'PRODUCT_NAME'
                                    ,p_value_4                 => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.application_name
                                    ,p_entity_id               => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.entity_id
                                    ,p_event_id                => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.event_id
                                    ,p_ledger_id               => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id
                                    ,p_ae_header_id            =>  NULL
                                       );

        IF (C_LEVEL_ERROR>= g_log_level) THEN
                 trace
                      (p_msg      => 'ERROR: XLA_UPG_OVERRIDE_ADR_UNDEFINED'
                      ,p_level    => C_LEVEL_ERROR
                      ,p_module   => l_log_module);
        END IF;
      END IF;
   END IF;
   --
   --
   ------------------------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- NOTE: XLA_AE_LINES_PKG.ValidateCurrentLine should NOT be generated if business flow method is
   -- Prior Entry.  Currently, the following code is always generated.
   ------------------------------------------------------------------------------------------------
   XLA_AE_LINES_PKG.ValidateCurrentLine;

   ------------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- Populated credit and debit amounts -- Need to generate this within IF <condition>
   ------------------------------------------------------------------------------------
   XLA_AE_LINES_PKG.SetDebitCreditAmounts;

   ----------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- Update journal entry status -- Need to generate this within IF <condition>
   ----------------------------------------------------------------------------------
   XLA_AE_JOURNAL_ENTRY_PKG.UpdateJournalEntryStatus
         (p_hdr_idx => g_array_event(p_event_id).array_value_num('header_index')
         ,p_balance_type_code => l_balance_type_code
         );

   -------------------------------------------------------------------------------------------
   -- 4262811 - Generate the Accrual Reversal lines
   -------------------------------------------------------------------------------------------
   BEGIN
      l_acc_rev_flag := XLA_AE_HEADER_PKG.g_rec_header_new.array_accrual_reversal_flag
                              (g_array_event(p_event_id).array_value_num('header_index'));
      IF l_acc_rev_flag IS NULL THEN
         l_acc_rev_flag := 'N';
      END IF;
   EXCEPTION
      WHEN OTHERS THEN
         l_acc_rev_flag := 'N';
   END;
   --
   IF (l_acc_rev_flag = 'Y') THEN

       -- 4645092  ------------------------------------------------------------------------------
       -- To allow MPA report to determine if it should generate report process
       XLA_ACCOUNTING_PKG.g_mpa_accrual_exists := 'Y';
       ------------------------------------------------------------------------------------------

       l_accrual_line_num := XLA_AE_LINES_PKG.g_LineNumber;
       XLA_AE_LINES_PKG.CopyLineInfo(l_accrual_line_num);
   -- added call to set_ccid to execute mapping  for secondary accrual reversal entries bug 7444204
   -- call ADRs
   -- Bug 4922099
   --
   IF ( (l_bflow_method_code <> 'PRIOR_ENTRY') OR
        (NVL(l_actual_upg_option, 'N') = 'O') OR
        (NVL(l_enc_upg_option, 'N') = 'O')
      )
   THEN
   NULL;
   --
   --
   
  l_ccid := AcctDerRule_7(
           p_application_id           => p_application_id
         , p_ae_header_id             => l_ae_header_id 
, p_source_11 => p_source_11
         , x_transaction_coa_id       => l_adr_transaction_coa_id
         , x_accounting_coa_id        => l_adr_accounting_coa_id
         , x_value_type_code          => l_adr_value_type_code
         , p_side                     => 'NA'
   );

   xla_ae_lines_pkg.set_ccid(
    p_code_combination_id          => l_ccid
  , p_value_type_code              => l_adr_value_type_code
  , p_transaction_coa_id           => l_adr_transaction_coa_id
  , p_accounting_coa_id            => l_adr_accounting_coa_id
  , p_adr_code                     => 'AP_INVOICE_DIST'
  , p_adr_type_code                => 'S'
  , p_component_type               => l_component_type
  , p_component_code               => l_component_code
  , p_component_type_code          => l_component_type_code
  , p_component_appl_id            => l_component_appl_id
  , p_amb_context_code             => l_amb_context_code
  , p_side                         => 'NA'
  );


   --
   --
   END IF;

       --
       -- Update the line information that should be overwritten
       --
       XLA_AE_LINES_PKG.set_ae_header_id(p_ae_header_id => p_event_id ,
                                         p_header_num   => 1);
       XLA_AE_LINES_PKG.g_rec_lines.array_header_num(XLA_AE_LINES_PKG.g_LineNumber)  :=1;

       XLA_AE_LINES_PKG.g_rec_lines.array_business_class_code(XLA_AE_LINES_PKG.g_LineNumber) := NULL; -- 4669271

       IF l_bflow_method_code <> 'NONE' THEN  -- 4655713b
          XLA_AE_LINES_PKG.g_rec_lines.array_reversal_code(XLA_AE_LINES_PKG.g_LineNumber) := CONCAT('MPA_',l_bflow_method_code);
       END IF;

      --
      -- Depending on the Reversal Method setup, do a switch side or changes sign for the amounts
      --
      IF (XLA_AE_JOURNAL_ENTRY_PKG.g_cache_ledgers_info.ledger_reversal_option = 'SIDE') THEN
          XLA_AE_LINES_PKG.g_rec_lines.array_natural_side_code(XLA_AE_LINES_PKG.g_LineNumber) :=  l_acc_rev_natural_side_code;
      ELSE
          ---------------------------------------------------------------------------------------------------
          -- 4262811a Switch Sign
          ---------------------------------------------------------------------------------------------------
          XLA_AE_LINES_PKG.g_rec_lines.array_switch_side_flag(XLA_AE_LINES_PKG.g_LineNumber) := 'N';  -- 5052518
          XLA_AE_LINES_PKG.g_rec_lines.array_ledger_amount(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_ledger_amount(XLA_AE_LINES_PKG.g_LineNumber) * -1;
          XLA_AE_LINES_PKG.g_rec_lines.array_entered_amount(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_entered_amount(XLA_AE_LINES_PKG.g_LineNumber) * -1;
          -- 5132302
          XLA_AE_LINES_PKG.g_rec_lines.array_bflow_applied_to_amt(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_bflow_applied_to_amt(XLA_AE_LINES_PKG.g_LineNumber) * -1;

      END IF;

      -- 4955764
      XLA_AE_LINES_PKG.g_rec_lines.array_gl_date(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_HEADER_PKG.g_rec_header_new.array_gl_date(g_array_event(p_event_id).array_value_num('acc_rev_header_index'));


      XLA_AE_LINES_PKG.ValidateCurrentLine;
      XLA_AE_LINES_PKG.SetDebitCreditAmounts;

      XLA_AE_JOURNAL_ENTRY_PKG.UpdateJournalEntryStatus
               (p_hdr_idx           => g_array_event(p_event_id).array_value_num('acc_rev_header_index')
               ,p_balance_type_code => l_balance_type_code);

   END IF;

   -----------------------------------------------------------------------------------------
   -- 4262811 Multiperiod Accounting
   -----------------------------------------------------------------------------------------
     -- No MPA option is assigned.


END IF;
END IF;
--

--
IF (C_LEVEL_PROCEDURE >= g_log_level) THEN
   trace
      (p_msg      => 'END of AcctLineType_14'
      ,p_level    => C_LEVEL_PROCEDURE
      ,p_module   => l_log_module);
END IF;
--
EXCEPTION
  WHEN xla_exceptions_pkg.application_exception THEN
      RAISE;
  WHEN OTHERS THEN
       xla_exceptions_pkg.raise_message
           (p_location => 'XLA_00200_AAD_S_000010_BC_PKG.AcctLineType_14');
END AcctLineType_14;
--

---------------------------------------
--
-- PRIVATE FUNCTION
--         AcctLineType_15
--
---------------------------------------
PROCEDURE AcctLineType_15 (
  p_application_id        IN NUMBER
 ,p_event_id              IN NUMBER
 ,p_calculate_acctd_flag  IN VARCHAR2
 ,p_calculate_g_l_flag    IN VARCHAR2
 ,p_actual_flag           IN OUT VARCHAR2
 ,p_balance_type_code     OUT VARCHAR2
 ,p_gain_or_loss_ref      OUT VARCHAR2
 
--Invoice Distribution Description
 , p_source_1            IN VARCHAR2
--Invoice Distribution Account
 , p_source_11            IN NUMBER
--Invoice Distribution Type
 , p_source_15            IN VARCHAR2
 , p_source_15_meaning    IN VARCHAR2
--Amount for Variance Amount
 , p_source_16            IN NUMBER
--Purchasing Encumbrance Option
 , p_source_17            IN VARCHAR2
 , p_source_17_meaning    IN VARCHAR2
--Accrue on Receipt Option
 , p_source_18            IN VARCHAR2
 , p_source_18_meaning    IN VARCHAR2
--Accounting Reversal Indicator
 , p_source_19            IN VARCHAR2
--Distribution Link Type
 , p_source_21            IN VARCHAR2
--Allocation to Main Distribution Identifier
 , p_source_23            IN NUMBER
--Invoice Identifier
 , p_source_24            IN NUMBER
--Business Flow Accounts Payable Application Identifier
 , p_source_25            IN NUMBER
--Business Flow Invoice Distribution Type
 , p_source_26            IN VARCHAR2
--Business Flow Invoice Entity Code
 , p_source_27            IN VARCHAR2
--Business Flow Invoice Distribution Identifier
 , p_source_28            IN NUMBER
--Business Flow Invoice Identifier
 , p_source_29            IN NUMBER
--Invoice Distribution Identifier
 , p_source_30            IN NUMBER
--Payables Encumbrance Upgrade Credit Account
 , p_source_31            IN NUMBER
--Payables Encumbrance Upgrade Credit Amount
 , p_source_32            IN NUMBER
--Invoice Currency Code
 , p_source_33            IN VARCHAR2
--Payables Encumbrance Upgrade Credit Base Amount
 , p_source_34            IN NUMBER
--Payables Encumbrance Upgrade Debit Account
 , p_source_35            IN NUMBER
--Payables Encumbrance Upgrade Debit Amount
 , p_source_36            IN NUMBER
--Payables Encumbrance Upgrade Debit Base Amount
 , p_source_37            IN NUMBER
--Payables Encumbrance Upgrade Option
 , p_source_38            IN VARCHAR2
--Invoice Exchange Date
 , p_source_39            IN DATE
--Invoice Exchange Rate
 , p_source_40            IN NUMBER
--Invoice Exchange Rate Type
 , p_source_41            IN VARCHAR2
--Variance Amount in Ledger Currency
 , p_source_42            IN NUMBER
--Deferred Accounting End Date
 , p_source_43            IN DATE
--Deferred Accounting Option
 , p_source_44            IN VARCHAR2
--Deferred Accounting Start Date
 , p_source_45            IN DATE
--Override Accounted Amount Indicator
 , p_source_46            IN VARCHAR2
 , p_source_46_meaning    IN VARCHAR2
--Invoice Supplier Identifier
 , p_source_47            IN NUMBER
--Invoice Supplier Site Identifier
 , p_source_48            IN NUMBER
--Third Party Type
 , p_source_49            IN VARCHAR2
--Parent Reversal Identifier
 , p_source_50            IN NUMBER
--Invoice Distribution Tax Line Identifier
 , p_source_52            IN NUMBER
--Invoice Distribution Tax Distribution Identifier from Tax
 , p_source_53            IN NUMBER
--Invoice Distribution Summary Tax Line Identifier
 , p_source_54            IN NUMBER
--Payables Upgrade Credit Encumbrance Type Identifier
 , p_source_55            IN NUMBER
--Payables Upgrade Debit Encumbrance Type Identifier
 , p_source_56            IN NUMBER
)
IS

l_component_type              VARCHAR2(80);
l_component_code              VARCHAR2(30);
l_component_type_code         VARCHAR2(1);
l_component_appl_id           INTEGER;
l_amb_context_code            VARCHAR2(30);
l_entity_code                 VARCHAR2(30);
l_event_class_code            VARCHAR2(30);
l_ae_header_id                NUMBER;
l_event_type_code             VARCHAR2(30);
l_line_definition_code        VARCHAR2(30);
l_line_definition_owner_code  VARCHAR2(1);
--
-- adr variables
l_segment                     VARCHAR2(30);
l_ccid                        NUMBER;
l_adr_transaction_coa_id      NUMBER;
l_adr_accounting_coa_id       NUMBER;
l_adr_flexfield_segment_code  VARCHAR2(30);
l_adr_flex_value_set_id       NUMBER;
l_adr_value_type_code         VARCHAR2(30);
l_adr_value_combination_id    NUMBER;
l_adr_value_segment_code      VARCHAR2(30);

l_bflow_method_code           VARCHAR2(30);  -- 4219869 Business Flow
l_bflow_class_code            VARCHAR2(30);  -- 4219869 Business Flow
l_inherit_desc_flag           VARCHAR2(1);   -- 4219869 Business Flow
l_budgetary_control_flag      VARCHAR2(1);   -- 4458381 Public Sector Enh

-- 4262811 Variables ------------------------------------------------------------------------------------------
l_entered_amt_idx             NUMBER;
l_accted_amt_idx              NUMBER;
l_acc_rev_flag                VARCHAR2(1);
l_accrual_line_num            NUMBER;
l_tmp_amt                     NUMBER;
l_acc_rev_natural_side_code   VARCHAR2(1);

l_num_entries                 NUMBER;
l_gl_dates                    xla_ae_journal_entry_pkg.t_array_date;
l_accted_amts                 xla_ae_journal_entry_pkg.t_array_num;
l_entered_amts                xla_ae_journal_entry_pkg.t_array_num;
l_period_names                xla_ae_journal_entry_pkg.t_array_V15L;
l_recog_line_1                NUMBER;
l_recog_line_2                NUMBER;

l_bflow_applied_to_amt_idx    NUMBER;                                -- 5132302
l_bflow_applied_to_amt        NUMBER;                                -- 5132302
l_bflow_applied_to_amts       xla_ae_journal_entry_pkg.t_array_num;  -- 5132302

l_event_id                    NUMBER;  -- To handle MPA header Description: xla_ae_header_pkg.SetHdrDescription

--l_rounding_ccy                VARCHAR2(15); -- To handle MPA rounding  4262811b
l_same_currency               BOOLEAN;        -- To handle MPA rounding  4262811b

---------------------------------------------------------------------------------------------------------------


--
-- bulk performance
--
l_balance_type_code           VARCHAR2(1);
l_rec_acct_attrs              XLA_AE_LINES_PKG.t_rec_acct_attrs;
l_log_module                  VARCHAR2(240);

--
-- Upgrade strategy
--
l_actual_upg_option           VARCHAR2(1);
l_enc_upg_option           VARCHAR2(1);

--
BEGIN
--
IF g_log_enabled THEN
      l_log_module := C_DEFAULT_MODULE||'.AcctLineType_15';
END IF;
--
IF (C_LEVEL_PROCEDURE >= g_log_level) THEN

      trace
         (p_msg      => 'BEGIN of AcctLineType_15'
         ,p_level    => C_LEVEL_PROCEDURE
         ,p_module   => l_log_module);

END IF;
--
l_component_type             := 'AMB_JLT';
l_component_code             := 'AP_AMOUNT_VARIANCE_DM_ENC_DR';
l_component_type_code        := 'S';
l_component_appl_id          :=  200;
l_amb_context_code           := 'DEFAULT';
l_entity_code                := 'AP_INVOICES';
l_event_class_code           := 'DEBIT MEMOS';
l_event_type_code            := 'DEBIT MEMOS_ALL';
l_line_definition_owner_code := 'S';
l_line_definition_code       := 'ENC_DM_ALL';
--
l_balance_type_code          := 'E';
l_segment                     := NULL;
l_ccid                        := NULL;
l_adr_transaction_coa_id      := NULL;
l_adr_accounting_coa_id       := NULL;
l_adr_flexfield_segment_code  := NULL;
l_adr_flex_value_set_id       := NULL;
l_adr_value_type_code         := NULL;
l_adr_value_combination_id    := NULL;
l_adr_value_segment_code      := NULL;

l_bflow_method_code          := 'NONE';   -- 4219869 Business Flow
l_bflow_class_code           := 'AP_INV_ENCUM';    -- 4219869 Business Flow
l_inherit_desc_flag          := 'N';   -- 4219869 Business Flow
l_budgetary_control_flag     := 'Y';

l_bflow_applied_to_amt_idx   := NULL; -- 5132302
l_bflow_applied_to_amt       := NULL; -- 5132302
l_entered_amt_idx            := NULL;          -- 4262811
l_accted_amt_idx             := NULL;          -- 4262811
l_acc_rev_flag               := NULL;          -- 4262811
l_accrual_line_num           := NULL;          -- 4262811
l_tmp_amt                    := NULL;          -- 4262811
--
 
IF XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id = XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.ledger_id OR
    l_balance_type_code <> 'B' THEN
IF NVL(p_source_15,'
') =  'ITEM' AND 
p_source_16 IS NOT NULL AND 
NVL(p_source_17,'
') =  'Y' AND 
NVL(p_source_18,'
') <>  'Y'
 THEN 

   --
   XLA_AE_LINES_PKG.SetNewLine;

   p_balance_type_code          := l_balance_type_code;
   -- set the flag so later we will know whether the gain loss line needs to be created
   
   IF(l_balance_type_code = 'A' and p_actual_flag is null) THEN
     p_actual_flag :='A';
   END IF;

   --
   -- bulk performance
   --
   XLA_AE_LINES_PKG.set_ae_header_id (p_ae_header_id => p_event_id ,
                                      p_header_num   => 0); -- 4262811
   --
   -- set accounting line options
   --
   l_ae_header_id:= xla_ae_lines_pkg.SetAcctLineOption(
           p_natural_side_code          => 'D'
         , p_gain_or_loss_flag          => 'N'
         , p_gl_transfer_mode_code      => 'S'
         , p_acct_entry_type_code       => 'E'
         , p_switch_side_flag           => 'Y'
         , p_merge_duplicate_code       => 'N'
         );
   --
   l_acc_rev_natural_side_code := 'C';  -- 4262811
   -- 
   --
   -- set accounting line type info
   --
   xla_ae_lines_pkg.SetAcctLineType
      (p_component_type             => l_component_type
      ,p_event_type_code            => l_event_type_code
      ,p_line_definition_owner_code => l_line_definition_owner_code
      ,p_line_definition_code       => l_line_definition_code
      ,p_accounting_line_code       => l_component_code
      ,p_accounting_line_type_code  => l_component_type_code
      ,p_accounting_line_appl_id    => l_component_appl_id
      ,p_amb_context_code           => l_amb_context_code
      ,p_entity_code                => l_entity_code
      ,p_event_class_code           => l_event_class_code);
   --
   -- set accounting class
   --
   xla_ae_lines_pkg.SetAcctClass(
           p_accounting_class_code  => 'AMT_VARIANCE'
         , p_ae_header_id           => l_ae_header_id
         );

   --
   -- set rounding class
   --
   XLA_AE_LINES_PKG.g_rec_lines.array_rounding_class(XLA_AE_LINES_PKG.g_LineNumber) :=
                      'AMT_VARIANCE';

   --
   xla_ae_lines_pkg.g_rec_lines.array_calculate_acctd_flag(xla_ae_lines_pkg.g_LineNumber) := p_calculate_acctd_flag;
   xla_ae_lines_pkg.g_rec_lines.array_calculate_g_l_flag(xla_ae_lines_pkg.g_LineNumber) := p_calculate_g_l_flag;
   --
   -- bulk performance
   --
   XLA_AE_LINES_PKG.g_rec_lines.array_balance_type_code(XLA_AE_LINES_PKG.g_LineNumber) := l_balance_type_code;

   XLA_AE_LINES_PKG.g_rec_lines.array_ledger_id(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id;

   -- 4955764
   XLA_AE_LINES_PKG.g_rec_lines.array_gl_date(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_HEADER_PKG.g_rec_header_new.array_gl_date(g_array_event(p_event_id).array_value_num('header_index'));

   -- 4458381 Public Sector Enh
      XLA_AE_LINES_PKG.g_rec_lines.array_encumbrance_type_id(XLA_AE_LINES_PKG.g_LineNumber) := 1060;
   --
   -- set accounting attributes for the line type
   --
   l_entered_amt_idx := 23;
   l_accted_amt_idx  := 28;
   l_bflow_applied_to_amt_idx  := NULL;  -- 5132302
   l_rec_acct_attrs.array_acct_attr_code(1) := 'ACCOUNTING_REVERSAL_OPTION';
   l_rec_acct_attrs.array_char_value(1)  := p_source_19;
   l_rec_acct_attrs.array_acct_attr_code(2) := 'ALLOC_TO_APPLICATION_ID';
   l_rec_acct_attrs.array_num_value(2)  := 
xla_ae_sources_pkg.GetSystemSourceNum(
   p_source_code           => 'XLA_EVENT_APPL_ID'
 , p_source_type_code      => 'Y'
 , p_source_application_id =>  602
);
   l_rec_acct_attrs.array_acct_attr_code(3) := 'ALLOC_TO_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(3)  := p_source_21;
   l_rec_acct_attrs.array_acct_attr_code(4) := 'ALLOC_TO_ENTITY_CODE';
   l_rec_acct_attrs.array_char_value(4)  := 
xla_ae_sources_pkg.GetSystemSourceChar(
   p_source_code           => 'XLA_ENTITY_CODE'
 , p_source_type_code      => 'Y'
 , p_source_application_id =>  602
);
   l_rec_acct_attrs.array_acct_attr_code(5) := 'ALLOC_TO_FIRST_DIST_ID';
   l_rec_acct_attrs.array_num_value(5)  :=  to_char(p_source_23);
   l_rec_acct_attrs.array_acct_attr_code(6) := 'ALLOC_TO_FIRST_SYS_TRAN_ID';
   l_rec_acct_attrs.array_num_value(6)  :=  to_char(p_source_24);
   l_rec_acct_attrs.array_acct_attr_code(7) := 'APPLIED_TO_APPLICATION_ID';
   l_rec_acct_attrs.array_num_value(7)  := p_source_25;
   l_rec_acct_attrs.array_acct_attr_code(8) := 'APPLIED_TO_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(8)  := p_source_26;
   l_rec_acct_attrs.array_acct_attr_code(9) := 'APPLIED_TO_ENTITY_CODE';
   l_rec_acct_attrs.array_char_value(9)  := p_source_27;
   l_rec_acct_attrs.array_acct_attr_code(10) := 'APPLIED_TO_FIRST_DIST_ID';
   l_rec_acct_attrs.array_num_value(10)  :=  to_char(p_source_28);
   l_rec_acct_attrs.array_acct_attr_code(11) := 'APPLIED_TO_FIRST_SYS_TRAN_ID';
   l_rec_acct_attrs.array_num_value(11)  :=  to_char(p_source_29);
   l_rec_acct_attrs.array_acct_attr_code(12) := 'DISTRIBUTION_IDENTIFIER_1';
   l_rec_acct_attrs.array_num_value(12)  :=  to_char(p_source_30);
   l_rec_acct_attrs.array_acct_attr_code(13) := 'DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(13)  := p_source_21;
   l_rec_acct_attrs.array_acct_attr_code(14) := 'ENC_UPG_CR_CCID';
   l_rec_acct_attrs.array_num_value(14)  := p_source_31;
   l_rec_acct_attrs.array_acct_attr_code(15) := 'ENC_UPG_CR_ENTERED_AMT';
   l_rec_acct_attrs.array_num_value(15)  := p_source_32;
   l_rec_acct_attrs.array_acct_attr_code(16) := 'ENC_UPG_CR_ENTERED_CURR';
   l_rec_acct_attrs.array_char_value(16)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(17) := 'ENC_UPG_CR_LEDGER_AMT';
   l_rec_acct_attrs.array_num_value(17)  := p_source_34;
   l_rec_acct_attrs.array_acct_attr_code(18) := 'ENC_UPG_DR_CCID';
   l_rec_acct_attrs.array_num_value(18)  := p_source_35;
   l_rec_acct_attrs.array_acct_attr_code(19) := 'ENC_UPG_DR_ENTERED_AMT';
   l_rec_acct_attrs.array_num_value(19)  := p_source_36;
   l_rec_acct_attrs.array_acct_attr_code(20) := 'ENC_UPG_DR_ENTERED_CURR';
   l_rec_acct_attrs.array_char_value(20)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(21) := 'ENC_UPG_DR_LEDGER_AMT';
   l_rec_acct_attrs.array_num_value(21)  := p_source_37;
   l_rec_acct_attrs.array_acct_attr_code(22) := 'ENC_UPG_OPTION';
   l_rec_acct_attrs.array_char_value(22)  := p_source_38;
   l_rec_acct_attrs.array_acct_attr_code(23) := 'ENTERED_CURRENCY_AMOUNT';
   l_rec_acct_attrs.array_num_value(23)  := p_source_16;
   l_rec_acct_attrs.array_acct_attr_code(24) := 'ENTERED_CURRENCY_CODE';
   l_rec_acct_attrs.array_char_value(24)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(25) := 'EXCHANGE_DATE';
   l_rec_acct_attrs.array_date_value(25)  := p_source_39;
   l_rec_acct_attrs.array_acct_attr_code(26) := 'EXCHANGE_RATE';
   l_rec_acct_attrs.array_num_value(26)  := p_source_40;
   l_rec_acct_attrs.array_acct_attr_code(27) := 'EXCHANGE_RATE_TYPE';
   l_rec_acct_attrs.array_char_value(27)  := p_source_41;
   l_rec_acct_attrs.array_acct_attr_code(28) := 'LEDGER_AMOUNT';
   l_rec_acct_attrs.array_num_value(28)  := p_source_42;
   l_rec_acct_attrs.array_acct_attr_code(29) := 'MULTIPERIOD_END_DATE';
   l_rec_acct_attrs.array_date_value(29)  := p_source_43;
   l_rec_acct_attrs.array_acct_attr_code(30) := 'MULTIPERIOD_OPTION';
   l_rec_acct_attrs.array_char_value(30)  := p_source_44;
   l_rec_acct_attrs.array_acct_attr_code(31) := 'MULTIPERIOD_START_DATE';
   l_rec_acct_attrs.array_date_value(31)  := p_source_45;
   l_rec_acct_attrs.array_acct_attr_code(32) := 'OVERRIDE_ACCTD_AMT_FLAG';
   l_rec_acct_attrs.array_char_value(32)  := p_source_46;
   l_rec_acct_attrs.array_acct_attr_code(33) := 'PARTY_ID';
   l_rec_acct_attrs.array_num_value(33)  := p_source_47;
   l_rec_acct_attrs.array_acct_attr_code(34) := 'PARTY_SITE_ID';
   l_rec_acct_attrs.array_num_value(34)  := p_source_48;
   l_rec_acct_attrs.array_acct_attr_code(35) := 'PARTY_TYPE';
   l_rec_acct_attrs.array_char_value(35)  := p_source_49;
   l_rec_acct_attrs.array_acct_attr_code(36) := 'REVERSED_DISTRIBUTION_ID1';
   l_rec_acct_attrs.array_num_value(36)  :=  to_char(p_source_50);
   l_rec_acct_attrs.array_acct_attr_code(37) := 'REVERSED_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(37)  := p_source_21;
   l_rec_acct_attrs.array_acct_attr_code(38) := 'TAX_LINE_REF_ID';
   l_rec_acct_attrs.array_num_value(38)  := p_source_52;
   l_rec_acct_attrs.array_acct_attr_code(39) := 'TAX_REC_NREC_DIST_REF_ID';
   l_rec_acct_attrs.array_num_value(39)  := p_source_53;
   l_rec_acct_attrs.array_acct_attr_code(40) := 'TAX_SUMMARY_LINE_REF_ID';
   l_rec_acct_attrs.array_num_value(40)  := p_source_54;
   l_rec_acct_attrs.array_acct_attr_code(41) := 'UPG_CR_ENC_TYPE_ID';
   l_rec_acct_attrs.array_num_value(41)  := p_source_55;
   l_rec_acct_attrs.array_acct_attr_code(42) := 'UPG_DR_ENC_TYPE_ID';
   l_rec_acct_attrs.array_num_value(42)  := p_source_56;

   XLA_AE_LINES_PKG.SetLineAcctAttrs(l_rec_acct_attrs);
   p_gain_or_loss_ref  := XLA_AE_LINES_PKG.g_rec_lines.array_gain_or_loss_ref(XLA_AE_LINES_PKG.g_LineNumber);

   ---------------------------------------------------------------------------------------------------------------
   -- 4336173 -- assign Business Flow Class (replace code in xla_ae_lines_pkg.Business_Flow_Validation)
   ---------------------------------------------------------------------------------------------------------------
   XLA_AE_LINES_PKG.g_rec_lines.array_business_class_code(XLA_AE_LINES_PKG.g_LineNumber) := l_bflow_class_code;

   l_actual_upg_option  := XLA_AE_LINES_PKG.g_rec_lines.array_actual_upg_option(XLA_AE_LINES_PKG.g_LineNumber);
   l_enc_upg_option     := XLA_AE_LINES_PKG.g_rec_lines.array_enc_upg_option(XLA_AE_LINES_PKG.g_LineNumber);

   IF xla_accounting_cache_pkg.GetValueChar
         (p_source_code         => 'LEDGER_CATEGORY_CODE'
         ,p_target_ledger_id    => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id) IN ('PRIMARY','ALC')
   AND l_bflow_method_code = 'PRIOR_ENTRY'
--   AND (l_actual_upg_option = 'Y' OR l_enc_upg_option = 'Y') Bug 4922099
   AND ( (NVL(l_actual_upg_option, 'N') IN ('Y', 'O')) OR
         (NVL(l_enc_upg_option, 'N') IN ('Y', 'O'))
       )
   THEN
         xla_ae_lines_pkg.BflowUpgEntry
           (p_business_method_code    => l_bflow_method_code
           ,p_business_class_code     => l_bflow_class_code
           ,p_balance_type            => l_balance_type_code);
   ELSE
      NULL;
-- No business flow processing for business flow method of NONE.
   END IF;

   --
   -- call analytical criteria
   --
   
   --
   -- call description
   --
   
xla_ae_lines_pkg.SetLineDescription(
   p_ae_header_id => l_ae_header_id
  ,p_description  => Description_2 (
     p_application_id         => p_application_id
   , p_ae_header_id           => l_ae_header_id 
, p_source_1 => p_source_1
   )
);


   --
   -- call ADRs
   -- Bug 4922099
   --
   IF ( (l_bflow_method_code <> 'PRIOR_ENTRY') OR
        (NVL(l_actual_upg_option, 'N') = 'O') OR
        (NVL(l_enc_upg_option, 'N') = 'O')
      )
   THEN
   NULL;
   --
   --
   
  l_ccid := AcctDerRule_7(
           p_application_id           => p_application_id
         , p_ae_header_id             => l_ae_header_id 
, p_source_11 => p_source_11
         , x_transaction_coa_id       => l_adr_transaction_coa_id
         , x_accounting_coa_id        => l_adr_accounting_coa_id
         , x_value_type_code          => l_adr_value_type_code
         , p_side                     => 'NA'
   );

   xla_ae_lines_pkg.set_ccid(
    p_code_combination_id          => l_ccid
  , p_value_type_code              => l_adr_value_type_code
  , p_transaction_coa_id           => l_adr_transaction_coa_id
  , p_accounting_coa_id            => l_adr_accounting_coa_id
  , p_adr_code                     => 'AP_INVOICE_DIST'
  , p_adr_type_code                => 'S'
  , p_component_type               => l_component_type
  , p_component_code               => l_component_code
  , p_component_type_code          => l_component_type_code
  , p_component_appl_id            => l_component_appl_id
  , p_amb_context_code             => l_amb_context_code
  , p_side                         => 'NA'
  );


   --
   --
   END IF;
   --
   -- Bug 4922099
   IF ( ( (NVL(l_actual_upg_option, 'N') = 'O') OR
          (NVL(l_enc_upg_option, 'N') = 'O')
        ) AND
        (l_bflow_method_code = 'PRIOR_ENTRY')
      )
   THEN
      IF
      --
      1 = 2
      --
      THEN
      xla_accounting_err_pkg.build_message
                                    (p_appli_s_name            => 'XLA'
                                    ,p_msg_name                => 'XLA_UPG_OVERRIDE_ADR_UNDEFINED'
                                    ,p_token_1                 => 'LINE_NUMBER'
                                    ,p_value_1                 => XLA_AE_LINES_PKG.g_LineNumber
                                    ,p_token_2                 => 'LINE_TYPE_NAME'
                                    ,p_value_2                 => XLA_AE_SOURCES_PKG.GetComponentName (
                                                                             l_component_type
                                                                            ,l_component_code
                                                                            ,l_component_type_code
                                                                            ,l_component_appl_id
                                                                            ,l_amb_context_code
                                                                            ,l_entity_code
                                                                            ,l_event_class_code
                                                                           )
                                    ,p_token_3                 => 'OWNER'
                                    ,p_value_3                 => xla_lookups_pkg.get_meaning(
                                                                          p_lookup_type     => 'XLA_OWNER_TYPE'
                                                                          ,p_lookup_code    => l_component_type_code
                                                                         )
                                    ,p_token_4                 => 'PRODUCT_NAME'
                                    ,p_value_4                 => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.application_name
                                    ,p_entity_id               => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.entity_id
                                    ,p_event_id                => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.event_id
                                    ,p_ledger_id               => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id
                                    ,p_ae_header_id            =>  NULL
                                       );

        IF (C_LEVEL_ERROR>= g_log_level) THEN
                 trace
                      (p_msg      => 'ERROR: XLA_UPG_OVERRIDE_ADR_UNDEFINED'
                      ,p_level    => C_LEVEL_ERROR
                      ,p_module   => l_log_module);
        END IF;
      END IF;
   END IF;
   --
   --
   ------------------------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- NOTE: XLA_AE_LINES_PKG.ValidateCurrentLine should NOT be generated if business flow method is
   -- Prior Entry.  Currently, the following code is always generated.
   ------------------------------------------------------------------------------------------------
   XLA_AE_LINES_PKG.ValidateCurrentLine;

   ------------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- Populated credit and debit amounts -- Need to generate this within IF <condition>
   ------------------------------------------------------------------------------------
   XLA_AE_LINES_PKG.SetDebitCreditAmounts;

   ----------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- Update journal entry status -- Need to generate this within IF <condition>
   ----------------------------------------------------------------------------------
   XLA_AE_JOURNAL_ENTRY_PKG.UpdateJournalEntryStatus
         (p_hdr_idx => g_array_event(p_event_id).array_value_num('header_index')
         ,p_balance_type_code => l_balance_type_code
         );

   -------------------------------------------------------------------------------------------
   -- 4262811 - Generate the Accrual Reversal lines
   -------------------------------------------------------------------------------------------
   BEGIN
      l_acc_rev_flag := XLA_AE_HEADER_PKG.g_rec_header_new.array_accrual_reversal_flag
                              (g_array_event(p_event_id).array_value_num('header_index'));
      IF l_acc_rev_flag IS NULL THEN
         l_acc_rev_flag := 'N';
      END IF;
   EXCEPTION
      WHEN OTHERS THEN
         l_acc_rev_flag := 'N';
   END;
   --
   IF (l_acc_rev_flag = 'Y') THEN

       -- 4645092  ------------------------------------------------------------------------------
       -- To allow MPA report to determine if it should generate report process
       XLA_ACCOUNTING_PKG.g_mpa_accrual_exists := 'Y';
       ------------------------------------------------------------------------------------------

       l_accrual_line_num := XLA_AE_LINES_PKG.g_LineNumber;
       XLA_AE_LINES_PKG.CopyLineInfo(l_accrual_line_num);
   -- added call to set_ccid to execute mapping  for secondary accrual reversal entries bug 7444204
   -- call ADRs
   -- Bug 4922099
   --
   IF ( (l_bflow_method_code <> 'PRIOR_ENTRY') OR
        (NVL(l_actual_upg_option, 'N') = 'O') OR
        (NVL(l_enc_upg_option, 'N') = 'O')
      )
   THEN
   NULL;
   --
   --
   
  l_ccid := AcctDerRule_7(
           p_application_id           => p_application_id
         , p_ae_header_id             => l_ae_header_id 
, p_source_11 => p_source_11
         , x_transaction_coa_id       => l_adr_transaction_coa_id
         , x_accounting_coa_id        => l_adr_accounting_coa_id
         , x_value_type_code          => l_adr_value_type_code
         , p_side                     => 'NA'
   );

   xla_ae_lines_pkg.set_ccid(
    p_code_combination_id          => l_ccid
  , p_value_type_code              => l_adr_value_type_code
  , p_transaction_coa_id           => l_adr_transaction_coa_id
  , p_accounting_coa_id            => l_adr_accounting_coa_id
  , p_adr_code                     => 'AP_INVOICE_DIST'
  , p_adr_type_code                => 'S'
  , p_component_type               => l_component_type
  , p_component_code               => l_component_code
  , p_component_type_code          => l_component_type_code
  , p_component_appl_id            => l_component_appl_id
  , p_amb_context_code             => l_amb_context_code
  , p_side                         => 'NA'
  );


   --
   --
   END IF;

       --
       -- Update the line information that should be overwritten
       --
       XLA_AE_LINES_PKG.set_ae_header_id(p_ae_header_id => p_event_id ,
                                         p_header_num   => 1);
       XLA_AE_LINES_PKG.g_rec_lines.array_header_num(XLA_AE_LINES_PKG.g_LineNumber)  :=1;

       XLA_AE_LINES_PKG.g_rec_lines.array_business_class_code(XLA_AE_LINES_PKG.g_LineNumber) := NULL; -- 4669271

       IF l_bflow_method_code <> 'NONE' THEN  -- 4655713b
          XLA_AE_LINES_PKG.g_rec_lines.array_reversal_code(XLA_AE_LINES_PKG.g_LineNumber) := CONCAT('MPA_',l_bflow_method_code);
       END IF;

      --
      -- Depending on the Reversal Method setup, do a switch side or changes sign for the amounts
      --
      IF (XLA_AE_JOURNAL_ENTRY_PKG.g_cache_ledgers_info.ledger_reversal_option = 'SIDE') THEN
          XLA_AE_LINES_PKG.g_rec_lines.array_natural_side_code(XLA_AE_LINES_PKG.g_LineNumber) :=  l_acc_rev_natural_side_code;
      ELSE
          ---------------------------------------------------------------------------------------------------
          -- 4262811a Switch Sign
          ---------------------------------------------------------------------------------------------------
          XLA_AE_LINES_PKG.g_rec_lines.array_switch_side_flag(XLA_AE_LINES_PKG.g_LineNumber) := 'N';  -- 5052518
          XLA_AE_LINES_PKG.g_rec_lines.array_ledger_amount(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_ledger_amount(XLA_AE_LINES_PKG.g_LineNumber) * -1;
          XLA_AE_LINES_PKG.g_rec_lines.array_entered_amount(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_entered_amount(XLA_AE_LINES_PKG.g_LineNumber) * -1;
          -- 5132302
          XLA_AE_LINES_PKG.g_rec_lines.array_bflow_applied_to_amt(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_bflow_applied_to_amt(XLA_AE_LINES_PKG.g_LineNumber) * -1;

      END IF;

      -- 4955764
      XLA_AE_LINES_PKG.g_rec_lines.array_gl_date(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_HEADER_PKG.g_rec_header_new.array_gl_date(g_array_event(p_event_id).array_value_num('acc_rev_header_index'));


      XLA_AE_LINES_PKG.ValidateCurrentLine;
      XLA_AE_LINES_PKG.SetDebitCreditAmounts;

      XLA_AE_JOURNAL_ENTRY_PKG.UpdateJournalEntryStatus
               (p_hdr_idx           => g_array_event(p_event_id).array_value_num('acc_rev_header_index')
               ,p_balance_type_code => l_balance_type_code);

   END IF;

   -----------------------------------------------------------------------------------------
   -- 4262811 Multiperiod Accounting
   -----------------------------------------------------------------------------------------
     -- No MPA option is assigned.


END IF;
END IF;
--

--
IF (C_LEVEL_PROCEDURE >= g_log_level) THEN
   trace
      (p_msg      => 'END of AcctLineType_15'
      ,p_level    => C_LEVEL_PROCEDURE
      ,p_module   => l_log_module);
END IF;
--
EXCEPTION
  WHEN xla_exceptions_pkg.application_exception THEN
      RAISE;
  WHEN OTHERS THEN
       xla_exceptions_pkg.raise_message
           (p_location => 'XLA_00200_AAD_S_000010_BC_PKG.AcctLineType_15');
END AcctLineType_15;
--

---------------------------------------
--
-- PRIVATE FUNCTION
--         AcctLineType_16
--
---------------------------------------
PROCEDURE AcctLineType_16 (
  p_application_id        IN NUMBER
 ,p_event_id              IN NUMBER
 ,p_calculate_acctd_flag  IN VARCHAR2
 ,p_calculate_g_l_flag    IN VARCHAR2
 ,p_actual_flag           IN OUT VARCHAR2
 ,p_balance_type_code     OUT VARCHAR2
 ,p_gain_or_loss_ref      OUT VARCHAR2
 
--Invoice Distribution Description
 , p_source_1            IN VARCHAR2
--Invoice Distribution Account
 , p_source_11            IN NUMBER
--Invoice Distribution Type
 , p_source_15            IN VARCHAR2
 , p_source_15_meaning    IN VARCHAR2
--Amount for Variance Amount
 , p_source_16            IN NUMBER
--Purchasing Encumbrance Option
 , p_source_17            IN VARCHAR2
 , p_source_17_meaning    IN VARCHAR2
--Accrue on Receipt Option
 , p_source_18            IN VARCHAR2
 , p_source_18_meaning    IN VARCHAR2
--Accounting Reversal Indicator
 , p_source_19            IN VARCHAR2
--Distribution Link Type
 , p_source_21            IN VARCHAR2
--Allocation to Main Distribution Identifier
 , p_source_23            IN NUMBER
--Invoice Identifier
 , p_source_24            IN NUMBER
--Business Flow Accounts Payable Application Identifier
 , p_source_25            IN NUMBER
--Business Flow Invoice Distribution Type
 , p_source_26            IN VARCHAR2
--Business Flow Invoice Entity Code
 , p_source_27            IN VARCHAR2
--Business Flow Invoice Distribution Identifier
 , p_source_28            IN NUMBER
--Business Flow Invoice Identifier
 , p_source_29            IN NUMBER
--Invoice Distribution Identifier
 , p_source_30            IN NUMBER
--Payables Encumbrance Upgrade Credit Account
 , p_source_31            IN NUMBER
--Payables Encumbrance Upgrade Credit Amount
 , p_source_32            IN NUMBER
--Invoice Currency Code
 , p_source_33            IN VARCHAR2
--Payables Encumbrance Upgrade Credit Base Amount
 , p_source_34            IN NUMBER
--Payables Encumbrance Upgrade Debit Account
 , p_source_35            IN NUMBER
--Payables Encumbrance Upgrade Debit Amount
 , p_source_36            IN NUMBER
--Payables Encumbrance Upgrade Debit Base Amount
 , p_source_37            IN NUMBER
--Payables Encumbrance Upgrade Option
 , p_source_38            IN VARCHAR2
--Invoice Exchange Date
 , p_source_39            IN DATE
--Invoice Exchange Rate
 , p_source_40            IN NUMBER
--Invoice Exchange Rate Type
 , p_source_41            IN VARCHAR2
--Variance Amount in Ledger Currency
 , p_source_42            IN NUMBER
--Deferred Accounting End Date
 , p_source_43            IN DATE
--Deferred Accounting Option
 , p_source_44            IN VARCHAR2
--Deferred Accounting Start Date
 , p_source_45            IN DATE
--Override Accounted Amount Indicator
 , p_source_46            IN VARCHAR2
 , p_source_46_meaning    IN VARCHAR2
--Invoice Supplier Identifier
 , p_source_47            IN NUMBER
--Invoice Supplier Site Identifier
 , p_source_48            IN NUMBER
--Third Party Type
 , p_source_49            IN VARCHAR2
--Parent Reversal Identifier
 , p_source_50            IN NUMBER
--Invoice Distribution Statistical Amount
 , p_source_51            IN NUMBER
--Invoice Distribution Tax Line Identifier
 , p_source_52            IN NUMBER
--Invoice Distribution Tax Distribution Identifier from Tax
 , p_source_53            IN NUMBER
--Invoice Distribution Summary Tax Line Identifier
 , p_source_54            IN NUMBER
--Payables Upgrade Credit Encumbrance Type Identifier
 , p_source_55            IN NUMBER
--Payables Upgrade Debit Encumbrance Type Identifier
 , p_source_56            IN NUMBER
--Invoice Distribution Amount
 , p_source_57            IN NUMBER
)
IS

l_component_type              VARCHAR2(80);
l_component_code              VARCHAR2(30);
l_component_type_code         VARCHAR2(1);
l_component_appl_id           INTEGER;
l_amb_context_code            VARCHAR2(30);
l_entity_code                 VARCHAR2(30);
l_event_class_code            VARCHAR2(30);
l_ae_header_id                NUMBER;
l_event_type_code             VARCHAR2(30);
l_line_definition_code        VARCHAR2(30);
l_line_definition_owner_code  VARCHAR2(1);
--
-- adr variables
l_segment                     VARCHAR2(30);
l_ccid                        NUMBER;
l_adr_transaction_coa_id      NUMBER;
l_adr_accounting_coa_id       NUMBER;
l_adr_flexfield_segment_code  VARCHAR2(30);
l_adr_flex_value_set_id       NUMBER;
l_adr_value_type_code         VARCHAR2(30);
l_adr_value_combination_id    NUMBER;
l_adr_value_segment_code      VARCHAR2(30);

l_bflow_method_code           VARCHAR2(30);  -- 4219869 Business Flow
l_bflow_class_code            VARCHAR2(30);  -- 4219869 Business Flow
l_inherit_desc_flag           VARCHAR2(1);   -- 4219869 Business Flow
l_budgetary_control_flag      VARCHAR2(1);   -- 4458381 Public Sector Enh

-- 4262811 Variables ------------------------------------------------------------------------------------------
l_entered_amt_idx             NUMBER;
l_accted_amt_idx              NUMBER;
l_acc_rev_flag                VARCHAR2(1);
l_accrual_line_num            NUMBER;
l_tmp_amt                     NUMBER;
l_acc_rev_natural_side_code   VARCHAR2(1);

l_num_entries                 NUMBER;
l_gl_dates                    xla_ae_journal_entry_pkg.t_array_date;
l_accted_amts                 xla_ae_journal_entry_pkg.t_array_num;
l_entered_amts                xla_ae_journal_entry_pkg.t_array_num;
l_period_names                xla_ae_journal_entry_pkg.t_array_V15L;
l_recog_line_1                NUMBER;
l_recog_line_2                NUMBER;

l_bflow_applied_to_amt_idx    NUMBER;                                -- 5132302
l_bflow_applied_to_amt        NUMBER;                                -- 5132302
l_bflow_applied_to_amts       xla_ae_journal_entry_pkg.t_array_num;  -- 5132302

l_event_id                    NUMBER;  -- To handle MPA header Description: xla_ae_header_pkg.SetHdrDescription

--l_rounding_ccy                VARCHAR2(15); -- To handle MPA rounding  4262811b
l_same_currency               BOOLEAN;        -- To handle MPA rounding  4262811b

---------------------------------------------------------------------------------------------------------------


--
-- bulk performance
--
l_balance_type_code           VARCHAR2(1);
l_rec_acct_attrs              XLA_AE_LINES_PKG.t_rec_acct_attrs;
l_log_module                  VARCHAR2(240);

--
-- Upgrade strategy
--
l_actual_upg_option           VARCHAR2(1);
l_enc_upg_option           VARCHAR2(1);

--
BEGIN
--
IF g_log_enabled THEN
      l_log_module := C_DEFAULT_MODULE||'.AcctLineType_16';
END IF;
--
IF (C_LEVEL_PROCEDURE >= g_log_level) THEN

      trace
         (p_msg      => 'BEGIN of AcctLineType_16'
         ,p_level    => C_LEVEL_PROCEDURE
         ,p_module   => l_log_module);

END IF;
--
l_component_type             := 'AMB_JLT';
l_component_code             := 'AP_AMOUNT_VARIANCE_INV_ENC_DR';
l_component_type_code        := 'S';
l_component_appl_id          :=  200;
l_amb_context_code           := 'DEFAULT';
l_entity_code                := 'AP_INVOICES';
l_event_class_code           := 'INVOICES';
l_event_type_code            := 'INVOICES_ALL';
l_line_definition_owner_code := 'S';
l_line_definition_code       := 'ENC_INVOICES_ALL';
--
l_balance_type_code          := 'E';
l_segment                     := NULL;
l_ccid                        := NULL;
l_adr_transaction_coa_id      := NULL;
l_adr_accounting_coa_id       := NULL;
l_adr_flexfield_segment_code  := NULL;
l_adr_flex_value_set_id       := NULL;
l_adr_value_type_code         := NULL;
l_adr_value_combination_id    := NULL;
l_adr_value_segment_code      := NULL;

l_bflow_method_code          := 'NONE';   -- 4219869 Business Flow
l_bflow_class_code           := 'AP_INV_ENCUM';    -- 4219869 Business Flow
l_inherit_desc_flag          := 'N';   -- 4219869 Business Flow
l_budgetary_control_flag     := 'Y';

l_bflow_applied_to_amt_idx   := NULL; -- 5132302
l_bflow_applied_to_amt       := NULL; -- 5132302
l_entered_amt_idx            := NULL;          -- 4262811
l_accted_amt_idx             := NULL;          -- 4262811
l_acc_rev_flag               := NULL;          -- 4262811
l_accrual_line_num           := NULL;          -- 4262811
l_tmp_amt                    := NULL;          -- 4262811
--
 
IF XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id = XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.ledger_id OR
    l_balance_type_code <> 'B' THEN
IF NVL(p_source_15,'
') <>  'ACCRUAL' AND 
p_source_16 IS NOT NULL AND 
NVL(p_source_17,'
') =  'Y' AND 
NVL(p_source_18,'
') <>  'Y'
 THEN 

   --
   XLA_AE_LINES_PKG.SetNewLine;

   p_balance_type_code          := l_balance_type_code;
   -- set the flag so later we will know whether the gain loss line needs to be created
   
   IF(l_balance_type_code = 'A' and p_actual_flag is null) THEN
     p_actual_flag :='A';
   END IF;

   --
   -- bulk performance
   --
   XLA_AE_LINES_PKG.set_ae_header_id (p_ae_header_id => p_event_id ,
                                      p_header_num   => 0); -- 4262811
   --
   -- set accounting line options
   --
   l_ae_header_id:= xla_ae_lines_pkg.SetAcctLineOption(
           p_natural_side_code          => 'D'
         , p_gain_or_loss_flag          => 'N'
         , p_gl_transfer_mode_code      => 'S'
         , p_acct_entry_type_code       => 'E'
         , p_switch_side_flag           => 'Y'
         , p_merge_duplicate_code       => 'N'
         );
   --
   l_acc_rev_natural_side_code := 'C';  -- 4262811
   -- 
   --
   -- set accounting line type info
   --
   xla_ae_lines_pkg.SetAcctLineType
      (p_component_type             => l_component_type
      ,p_event_type_code            => l_event_type_code
      ,p_line_definition_owner_code => l_line_definition_owner_code
      ,p_line_definition_code       => l_line_definition_code
      ,p_accounting_line_code       => l_component_code
      ,p_accounting_line_type_code  => l_component_type_code
      ,p_accounting_line_appl_id    => l_component_appl_id
      ,p_amb_context_code           => l_amb_context_code
      ,p_entity_code                => l_entity_code
      ,p_event_class_code           => l_event_class_code);
   --
   -- set accounting class
   --
   xla_ae_lines_pkg.SetAcctClass(
           p_accounting_class_code  => 'AMT_VARIANCE'
         , p_ae_header_id           => l_ae_header_id
         );

   --
   -- set rounding class
   --
   XLA_AE_LINES_PKG.g_rec_lines.array_rounding_class(XLA_AE_LINES_PKG.g_LineNumber) :=
                      'AMT_VARIANCE';

   --
   xla_ae_lines_pkg.g_rec_lines.array_calculate_acctd_flag(xla_ae_lines_pkg.g_LineNumber) := p_calculate_acctd_flag;
   xla_ae_lines_pkg.g_rec_lines.array_calculate_g_l_flag(xla_ae_lines_pkg.g_LineNumber) := p_calculate_g_l_flag;
   --
   -- bulk performance
   --
   XLA_AE_LINES_PKG.g_rec_lines.array_balance_type_code(XLA_AE_LINES_PKG.g_LineNumber) := l_balance_type_code;

   XLA_AE_LINES_PKG.g_rec_lines.array_ledger_id(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id;

   -- 4955764
   XLA_AE_LINES_PKG.g_rec_lines.array_gl_date(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_HEADER_PKG.g_rec_header_new.array_gl_date(g_array_event(p_event_id).array_value_num('header_index'));

   -- 4458381 Public Sector Enh
      XLA_AE_LINES_PKG.g_rec_lines.array_encumbrance_type_id(XLA_AE_LINES_PKG.g_LineNumber) := 1060;
   --
   -- set accounting attributes for the line type
   --
   l_entered_amt_idx := 24;
   l_accted_amt_idx  := 29;
   l_bflow_applied_to_amt_idx  := 7;  -- 5132302
   l_rec_acct_attrs.array_acct_attr_code(1) := 'ACCOUNTING_REVERSAL_OPTION';
   l_rec_acct_attrs.array_char_value(1)  := p_source_19;
   l_rec_acct_attrs.array_acct_attr_code(2) := 'ALLOC_TO_APPLICATION_ID';
   l_rec_acct_attrs.array_num_value(2)  := 
xla_ae_sources_pkg.GetSystemSourceNum(
   p_source_code           => 'XLA_EVENT_APPL_ID'
 , p_source_type_code      => 'Y'
 , p_source_application_id =>  602
);
   l_rec_acct_attrs.array_acct_attr_code(3) := 'ALLOC_TO_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(3)  := p_source_21;
   l_rec_acct_attrs.array_acct_attr_code(4) := 'ALLOC_TO_ENTITY_CODE';
   l_rec_acct_attrs.array_char_value(4)  := 
xla_ae_sources_pkg.GetSystemSourceChar(
   p_source_code           => 'XLA_ENTITY_CODE'
 , p_source_type_code      => 'Y'
 , p_source_application_id =>  602
);
   l_rec_acct_attrs.array_acct_attr_code(5) := 'ALLOC_TO_FIRST_DIST_ID';
   l_rec_acct_attrs.array_num_value(5)  :=  to_char(p_source_23);
   l_rec_acct_attrs.array_acct_attr_code(6) := 'ALLOC_TO_FIRST_SYS_TRAN_ID';
   l_rec_acct_attrs.array_num_value(6)  :=  to_char(p_source_24);
   l_rec_acct_attrs.array_acct_attr_code(7) := 'APPLIED_TO_AMOUNT';
   l_rec_acct_attrs.array_num_value(7)  := p_source_57;
   l_rec_acct_attrs.array_acct_attr_code(8) := 'APPLIED_TO_APPLICATION_ID';
   l_rec_acct_attrs.array_num_value(8)  := p_source_25;
   l_rec_acct_attrs.array_acct_attr_code(9) := 'APPLIED_TO_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(9)  := p_source_26;
   l_rec_acct_attrs.array_acct_attr_code(10) := 'APPLIED_TO_ENTITY_CODE';
   l_rec_acct_attrs.array_char_value(10)  := p_source_27;
   l_rec_acct_attrs.array_acct_attr_code(11) := 'APPLIED_TO_FIRST_DIST_ID';
   l_rec_acct_attrs.array_num_value(11)  :=  to_char(p_source_28);
   l_rec_acct_attrs.array_acct_attr_code(12) := 'APPLIED_TO_FIRST_SYS_TRAN_ID';
   l_rec_acct_attrs.array_num_value(12)  :=  to_char(p_source_29);
   l_rec_acct_attrs.array_acct_attr_code(13) := 'DISTRIBUTION_IDENTIFIER_1';
   l_rec_acct_attrs.array_num_value(13)  :=  to_char(p_source_30);
   l_rec_acct_attrs.array_acct_attr_code(14) := 'DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(14)  := p_source_21;
   l_rec_acct_attrs.array_acct_attr_code(15) := 'ENC_UPG_CR_CCID';
   l_rec_acct_attrs.array_num_value(15)  := p_source_31;
   l_rec_acct_attrs.array_acct_attr_code(16) := 'ENC_UPG_CR_ENTERED_AMT';
   l_rec_acct_attrs.array_num_value(16)  := p_source_32;
   l_rec_acct_attrs.array_acct_attr_code(17) := 'ENC_UPG_CR_ENTERED_CURR';
   l_rec_acct_attrs.array_char_value(17)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(18) := 'ENC_UPG_CR_LEDGER_AMT';
   l_rec_acct_attrs.array_num_value(18)  := p_source_34;
   l_rec_acct_attrs.array_acct_attr_code(19) := 'ENC_UPG_DR_CCID';
   l_rec_acct_attrs.array_num_value(19)  := p_source_35;
   l_rec_acct_attrs.array_acct_attr_code(20) := 'ENC_UPG_DR_ENTERED_AMT';
   l_rec_acct_attrs.array_num_value(20)  := p_source_36;
   l_rec_acct_attrs.array_acct_attr_code(21) := 'ENC_UPG_DR_ENTERED_CURR';
   l_rec_acct_attrs.array_char_value(21)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(22) := 'ENC_UPG_DR_LEDGER_AMT';
   l_rec_acct_attrs.array_num_value(22)  := p_source_37;
   l_rec_acct_attrs.array_acct_attr_code(23) := 'ENC_UPG_OPTION';
   l_rec_acct_attrs.array_char_value(23)  := p_source_38;
   l_rec_acct_attrs.array_acct_attr_code(24) := 'ENTERED_CURRENCY_AMOUNT';
   l_rec_acct_attrs.array_num_value(24)  := p_source_16;
   l_rec_acct_attrs.array_acct_attr_code(25) := 'ENTERED_CURRENCY_CODE';
   l_rec_acct_attrs.array_char_value(25)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(26) := 'EXCHANGE_DATE';
   l_rec_acct_attrs.array_date_value(26)  := p_source_39;
   l_rec_acct_attrs.array_acct_attr_code(27) := 'EXCHANGE_RATE';
   l_rec_acct_attrs.array_num_value(27)  := p_source_40;
   l_rec_acct_attrs.array_acct_attr_code(28) := 'EXCHANGE_RATE_TYPE';
   l_rec_acct_attrs.array_char_value(28)  := p_source_41;
   l_rec_acct_attrs.array_acct_attr_code(29) := 'LEDGER_AMOUNT';
   l_rec_acct_attrs.array_num_value(29)  := p_source_42;
   l_rec_acct_attrs.array_acct_attr_code(30) := 'MULTIPERIOD_END_DATE';
   l_rec_acct_attrs.array_date_value(30)  := p_source_43;
   l_rec_acct_attrs.array_acct_attr_code(31) := 'MULTIPERIOD_OPTION';
   l_rec_acct_attrs.array_char_value(31)  := p_source_44;
   l_rec_acct_attrs.array_acct_attr_code(32) := 'MULTIPERIOD_START_DATE';
   l_rec_acct_attrs.array_date_value(32)  := p_source_45;
   l_rec_acct_attrs.array_acct_attr_code(33) := 'OVERRIDE_ACCTD_AMT_FLAG';
   l_rec_acct_attrs.array_char_value(33)  := p_source_46;
   l_rec_acct_attrs.array_acct_attr_code(34) := 'PARTY_ID';
   l_rec_acct_attrs.array_num_value(34)  := p_source_47;
   l_rec_acct_attrs.array_acct_attr_code(35) := 'PARTY_SITE_ID';
   l_rec_acct_attrs.array_num_value(35)  := p_source_48;
   l_rec_acct_attrs.array_acct_attr_code(36) := 'PARTY_TYPE';
   l_rec_acct_attrs.array_char_value(36)  := p_source_49;
   l_rec_acct_attrs.array_acct_attr_code(37) := 'REVERSED_DISTRIBUTION_ID1';
   l_rec_acct_attrs.array_num_value(37)  :=  to_char(p_source_50);
   l_rec_acct_attrs.array_acct_attr_code(38) := 'REVERSED_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(38)  := p_source_21;
   l_rec_acct_attrs.array_acct_attr_code(39) := 'STATISTICAL_AMOUNT';
   l_rec_acct_attrs.array_num_value(39)  := p_source_51;
   l_rec_acct_attrs.array_acct_attr_code(40) := 'TAX_LINE_REF_ID';
   l_rec_acct_attrs.array_num_value(40)  := p_source_52;
   l_rec_acct_attrs.array_acct_attr_code(41) := 'TAX_REC_NREC_DIST_REF_ID';
   l_rec_acct_attrs.array_num_value(41)  := p_source_53;
   l_rec_acct_attrs.array_acct_attr_code(42) := 'TAX_SUMMARY_LINE_REF_ID';
   l_rec_acct_attrs.array_num_value(42)  := p_source_54;
   l_rec_acct_attrs.array_acct_attr_code(43) := 'UPG_CR_ENC_TYPE_ID';
   l_rec_acct_attrs.array_num_value(43)  := p_source_55;
   l_rec_acct_attrs.array_acct_attr_code(44) := 'UPG_DR_ENC_TYPE_ID';
   l_rec_acct_attrs.array_num_value(44)  := p_source_56;

   XLA_AE_LINES_PKG.SetLineAcctAttrs(l_rec_acct_attrs);
   p_gain_or_loss_ref  := XLA_AE_LINES_PKG.g_rec_lines.array_gain_or_loss_ref(XLA_AE_LINES_PKG.g_LineNumber);

   ---------------------------------------------------------------------------------------------------------------
   -- 4336173 -- assign Business Flow Class (replace code in xla_ae_lines_pkg.Business_Flow_Validation)
   ---------------------------------------------------------------------------------------------------------------
   XLA_AE_LINES_PKG.g_rec_lines.array_business_class_code(XLA_AE_LINES_PKG.g_LineNumber) := l_bflow_class_code;

   l_actual_upg_option  := XLA_AE_LINES_PKG.g_rec_lines.array_actual_upg_option(XLA_AE_LINES_PKG.g_LineNumber);
   l_enc_upg_option     := XLA_AE_LINES_PKG.g_rec_lines.array_enc_upg_option(XLA_AE_LINES_PKG.g_LineNumber);

   IF xla_accounting_cache_pkg.GetValueChar
         (p_source_code         => 'LEDGER_CATEGORY_CODE'
         ,p_target_ledger_id    => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id) IN ('PRIMARY','ALC')
   AND l_bflow_method_code = 'PRIOR_ENTRY'
--   AND (l_actual_upg_option = 'Y' OR l_enc_upg_option = 'Y') Bug 4922099
   AND ( (NVL(l_actual_upg_option, 'N') IN ('Y', 'O')) OR
         (NVL(l_enc_upg_option, 'N') IN ('Y', 'O'))
       )
   THEN
         xla_ae_lines_pkg.BflowUpgEntry
           (p_business_method_code    => l_bflow_method_code
           ,p_business_class_code     => l_bflow_class_code
           ,p_balance_type            => l_balance_type_code);
   ELSE
      NULL;
-- No business flow processing for business flow method of NONE.
   END IF;

   --
   -- call analytical criteria
   --
   
   --
   -- call description
   --
   
xla_ae_lines_pkg.SetLineDescription(
   p_ae_header_id => l_ae_header_id
  ,p_description  => Description_2 (
     p_application_id         => p_application_id
   , p_ae_header_id           => l_ae_header_id 
, p_source_1 => p_source_1
   )
);


   --
   -- call ADRs
   -- Bug 4922099
   --
   IF ( (l_bflow_method_code <> 'PRIOR_ENTRY') OR
        (NVL(l_actual_upg_option, 'N') = 'O') OR
        (NVL(l_enc_upg_option, 'N') = 'O')
      )
   THEN
   NULL;
   --
   --
   
  l_ccid := AcctDerRule_7(
           p_application_id           => p_application_id
         , p_ae_header_id             => l_ae_header_id 
, p_source_11 => p_source_11
         , x_transaction_coa_id       => l_adr_transaction_coa_id
         , x_accounting_coa_id        => l_adr_accounting_coa_id
         , x_value_type_code          => l_adr_value_type_code
         , p_side                     => 'NA'
   );

   xla_ae_lines_pkg.set_ccid(
    p_code_combination_id          => l_ccid
  , p_value_type_code              => l_adr_value_type_code
  , p_transaction_coa_id           => l_adr_transaction_coa_id
  , p_accounting_coa_id            => l_adr_accounting_coa_id
  , p_adr_code                     => 'AP_INVOICE_DIST'
  , p_adr_type_code                => 'S'
  , p_component_type               => l_component_type
  , p_component_code               => l_component_code
  , p_component_type_code          => l_component_type_code
  , p_component_appl_id            => l_component_appl_id
  , p_amb_context_code             => l_amb_context_code
  , p_side                         => 'NA'
  );


   --
   --
   END IF;
   --
   -- Bug 4922099
   IF ( ( (NVL(l_actual_upg_option, 'N') = 'O') OR
          (NVL(l_enc_upg_option, 'N') = 'O')
        ) AND
        (l_bflow_method_code = 'PRIOR_ENTRY')
      )
   THEN
      IF
      --
      1 = 2
      --
      THEN
      xla_accounting_err_pkg.build_message
                                    (p_appli_s_name            => 'XLA'
                                    ,p_msg_name                => 'XLA_UPG_OVERRIDE_ADR_UNDEFINED'
                                    ,p_token_1                 => 'LINE_NUMBER'
                                    ,p_value_1                 => XLA_AE_LINES_PKG.g_LineNumber
                                    ,p_token_2                 => 'LINE_TYPE_NAME'
                                    ,p_value_2                 => XLA_AE_SOURCES_PKG.GetComponentName (
                                                                             l_component_type
                                                                            ,l_component_code
                                                                            ,l_component_type_code
                                                                            ,l_component_appl_id
                                                                            ,l_amb_context_code
                                                                            ,l_entity_code
                                                                            ,l_event_class_code
                                                                           )
                                    ,p_token_3                 => 'OWNER'
                                    ,p_value_3                 => xla_lookups_pkg.get_meaning(
                                                                          p_lookup_type     => 'XLA_OWNER_TYPE'
                                                                          ,p_lookup_code    => l_component_type_code
                                                                         )
                                    ,p_token_4                 => 'PRODUCT_NAME'
                                    ,p_value_4                 => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.application_name
                                    ,p_entity_id               => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.entity_id
                                    ,p_event_id                => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.event_id
                                    ,p_ledger_id               => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id
                                    ,p_ae_header_id            =>  NULL
                                       );

        IF (C_LEVEL_ERROR>= g_log_level) THEN
                 trace
                      (p_msg      => 'ERROR: XLA_UPG_OVERRIDE_ADR_UNDEFINED'
                      ,p_level    => C_LEVEL_ERROR
                      ,p_module   => l_log_module);
        END IF;
      END IF;
   END IF;
   --
   --
   ------------------------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- NOTE: XLA_AE_LINES_PKG.ValidateCurrentLine should NOT be generated if business flow method is
   -- Prior Entry.  Currently, the following code is always generated.
   ------------------------------------------------------------------------------------------------
   XLA_AE_LINES_PKG.ValidateCurrentLine;

   ------------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- Populated credit and debit amounts -- Need to generate this within IF <condition>
   ------------------------------------------------------------------------------------
   XLA_AE_LINES_PKG.SetDebitCreditAmounts;

   ----------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- Update journal entry status -- Need to generate this within IF <condition>
   ----------------------------------------------------------------------------------
   XLA_AE_JOURNAL_ENTRY_PKG.UpdateJournalEntryStatus
         (p_hdr_idx => g_array_event(p_event_id).array_value_num('header_index')
         ,p_balance_type_code => l_balance_type_code
         );

   -------------------------------------------------------------------------------------------
   -- 4262811 - Generate the Accrual Reversal lines
   -------------------------------------------------------------------------------------------
   BEGIN
      l_acc_rev_flag := XLA_AE_HEADER_PKG.g_rec_header_new.array_accrual_reversal_flag
                              (g_array_event(p_event_id).array_value_num('header_index'));
      IF l_acc_rev_flag IS NULL THEN
         l_acc_rev_flag := 'N';
      END IF;
   EXCEPTION
      WHEN OTHERS THEN
         l_acc_rev_flag := 'N';
   END;
   --
   IF (l_acc_rev_flag = 'Y') THEN

       -- 4645092  ------------------------------------------------------------------------------
       -- To allow MPA report to determine if it should generate report process
       XLA_ACCOUNTING_PKG.g_mpa_accrual_exists := 'Y';
       ------------------------------------------------------------------------------------------

       l_accrual_line_num := XLA_AE_LINES_PKG.g_LineNumber;
       XLA_AE_LINES_PKG.CopyLineInfo(l_accrual_line_num);
   -- added call to set_ccid to execute mapping  for secondary accrual reversal entries bug 7444204
   -- call ADRs
   -- Bug 4922099
   --
   IF ( (l_bflow_method_code <> 'PRIOR_ENTRY') OR
        (NVL(l_actual_upg_option, 'N') = 'O') OR
        (NVL(l_enc_upg_option, 'N') = 'O')
      )
   THEN
   NULL;
   --
   --
   
  l_ccid := AcctDerRule_7(
           p_application_id           => p_application_id
         , p_ae_header_id             => l_ae_header_id 
, p_source_11 => p_source_11
         , x_transaction_coa_id       => l_adr_transaction_coa_id
         , x_accounting_coa_id        => l_adr_accounting_coa_id
         , x_value_type_code          => l_adr_value_type_code
         , p_side                     => 'NA'
   );

   xla_ae_lines_pkg.set_ccid(
    p_code_combination_id          => l_ccid
  , p_value_type_code              => l_adr_value_type_code
  , p_transaction_coa_id           => l_adr_transaction_coa_id
  , p_accounting_coa_id            => l_adr_accounting_coa_id
  , p_adr_code                     => 'AP_INVOICE_DIST'
  , p_adr_type_code                => 'S'
  , p_component_type               => l_component_type
  , p_component_code               => l_component_code
  , p_component_type_code          => l_component_type_code
  , p_component_appl_id            => l_component_appl_id
  , p_amb_context_code             => l_amb_context_code
  , p_side                         => 'NA'
  );


   --
   --
   END IF;

       --
       -- Update the line information that should be overwritten
       --
       XLA_AE_LINES_PKG.set_ae_header_id(p_ae_header_id => p_event_id ,
                                         p_header_num   => 1);
       XLA_AE_LINES_PKG.g_rec_lines.array_header_num(XLA_AE_LINES_PKG.g_LineNumber)  :=1;

       XLA_AE_LINES_PKG.g_rec_lines.array_business_class_code(XLA_AE_LINES_PKG.g_LineNumber) := NULL; -- 4669271

       IF l_bflow_method_code <> 'NONE' THEN  -- 4655713b
          XLA_AE_LINES_PKG.g_rec_lines.array_reversal_code(XLA_AE_LINES_PKG.g_LineNumber) := CONCAT('MPA_',l_bflow_method_code);
       END IF;

      --
      -- Depending on the Reversal Method setup, do a switch side or changes sign for the amounts
      --
      IF (XLA_AE_JOURNAL_ENTRY_PKG.g_cache_ledgers_info.ledger_reversal_option = 'SIDE') THEN
          XLA_AE_LINES_PKG.g_rec_lines.array_natural_side_code(XLA_AE_LINES_PKG.g_LineNumber) :=  l_acc_rev_natural_side_code;
      ELSE
          ---------------------------------------------------------------------------------------------------
          -- 4262811a Switch Sign
          ---------------------------------------------------------------------------------------------------
          XLA_AE_LINES_PKG.g_rec_lines.array_switch_side_flag(XLA_AE_LINES_PKG.g_LineNumber) := 'N';  -- 5052518
          XLA_AE_LINES_PKG.g_rec_lines.array_ledger_amount(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_ledger_amount(XLA_AE_LINES_PKG.g_LineNumber) * -1;
          XLA_AE_LINES_PKG.g_rec_lines.array_entered_amount(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_entered_amount(XLA_AE_LINES_PKG.g_LineNumber) * -1;
          -- 5132302
          XLA_AE_LINES_PKG.g_rec_lines.array_bflow_applied_to_amt(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_bflow_applied_to_amt(XLA_AE_LINES_PKG.g_LineNumber) * -1;

      END IF;

      -- 4955764
      XLA_AE_LINES_PKG.g_rec_lines.array_gl_date(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_HEADER_PKG.g_rec_header_new.array_gl_date(g_array_event(p_event_id).array_value_num('acc_rev_header_index'));


      XLA_AE_LINES_PKG.ValidateCurrentLine;
      XLA_AE_LINES_PKG.SetDebitCreditAmounts;

      XLA_AE_JOURNAL_ENTRY_PKG.UpdateJournalEntryStatus
               (p_hdr_idx           => g_array_event(p_event_id).array_value_num('acc_rev_header_index')
               ,p_balance_type_code => l_balance_type_code);

   END IF;

   -----------------------------------------------------------------------------------------
   -- 4262811 Multiperiod Accounting
   -----------------------------------------------------------------------------------------
     -- No MPA option is assigned.


END IF;
END IF;
--

--
IF (C_LEVEL_PROCEDURE >= g_log_level) THEN
   trace
      (p_msg      => 'END of AcctLineType_16'
      ,p_level    => C_LEVEL_PROCEDURE
      ,p_module   => l_log_module);
END IF;
--
EXCEPTION
  WHEN xla_exceptions_pkg.application_exception THEN
      RAISE;
  WHEN OTHERS THEN
       xla_exceptions_pkg.raise_message
           (p_location => 'XLA_00200_AAD_S_000010_BC_PKG.AcctLineType_16');
END AcctLineType_16;
--

---------------------------------------
--
-- PRIVATE FUNCTION
--         AcctLineType_17
--
---------------------------------------
PROCEDURE AcctLineType_17 (
  p_application_id        IN NUMBER
 ,p_event_id              IN NUMBER
 ,p_calculate_acctd_flag  IN VARCHAR2
 ,p_calculate_g_l_flag    IN VARCHAR2
 ,p_actual_flag           IN OUT VARCHAR2
 ,p_balance_type_code     OUT VARCHAR2
 ,p_gain_or_loss_ref      OUT VARCHAR2
 
--Invoice Distribution Description
 , p_source_1            IN VARCHAR2
--Invoice Distribution Account
 , p_source_11            IN NUMBER
--Invoice Distribution Type
 , p_source_15            IN VARCHAR2
 , p_source_15_meaning    IN VARCHAR2
--Amount for Variance Amount
 , p_source_16            IN NUMBER
--Purchasing Encumbrance Option
 , p_source_17            IN VARCHAR2
 , p_source_17_meaning    IN VARCHAR2
--Accrue on Receipt Option
 , p_source_18            IN VARCHAR2
 , p_source_18_meaning    IN VARCHAR2
--Accounting Reversal Indicator
 , p_source_19            IN VARCHAR2
--Distribution Link Type
 , p_source_21            IN VARCHAR2
--Allocation to Main Distribution Identifier
 , p_source_23            IN NUMBER
--Invoice Identifier
 , p_source_24            IN NUMBER
--Business Flow Accounts Payable Application Identifier
 , p_source_25            IN NUMBER
--Business Flow Invoice Distribution Type
 , p_source_26            IN VARCHAR2
--Business Flow Invoice Entity Code
 , p_source_27            IN VARCHAR2
--Business Flow Invoice Distribution Identifier
 , p_source_28            IN NUMBER
--Business Flow Invoice Identifier
 , p_source_29            IN NUMBER
--Invoice Distribution Identifier
 , p_source_30            IN NUMBER
--Payables Encumbrance Upgrade Credit Account
 , p_source_31            IN NUMBER
--Payables Encumbrance Upgrade Credit Amount
 , p_source_32            IN NUMBER
--Invoice Currency Code
 , p_source_33            IN VARCHAR2
--Payables Encumbrance Upgrade Credit Base Amount
 , p_source_34            IN NUMBER
--Payables Encumbrance Upgrade Debit Account
 , p_source_35            IN NUMBER
--Payables Encumbrance Upgrade Debit Amount
 , p_source_36            IN NUMBER
--Payables Encumbrance Upgrade Debit Base Amount
 , p_source_37            IN NUMBER
--Payables Encumbrance Upgrade Option
 , p_source_38            IN VARCHAR2
--Invoice Exchange Date
 , p_source_39            IN DATE
--Invoice Exchange Rate
 , p_source_40            IN NUMBER
--Invoice Exchange Rate Type
 , p_source_41            IN VARCHAR2
--Variance Amount in Ledger Currency
 , p_source_42            IN NUMBER
--Deferred Accounting End Date
 , p_source_43            IN DATE
--Deferred Accounting Option
 , p_source_44            IN VARCHAR2
--Deferred Accounting Start Date
 , p_source_45            IN DATE
--Override Accounted Amount Indicator
 , p_source_46            IN VARCHAR2
 , p_source_46_meaning    IN VARCHAR2
--Invoice Supplier Identifier
 , p_source_47            IN NUMBER
--Invoice Supplier Site Identifier
 , p_source_48            IN NUMBER
--Third Party Type
 , p_source_49            IN VARCHAR2
--Parent Reversal Identifier
 , p_source_50            IN NUMBER
--Invoice Distribution Statistical Amount
 , p_source_51            IN NUMBER
--Invoice Distribution Tax Line Identifier
 , p_source_52            IN NUMBER
--Invoice Distribution Tax Distribution Identifier from Tax
 , p_source_53            IN NUMBER
--Invoice Distribution Summary Tax Line Identifier
 , p_source_54            IN NUMBER
--Payables Upgrade Credit Encumbrance Type Identifier
 , p_source_55            IN NUMBER
--Payables Upgrade Debit Encumbrance Type Identifier
 , p_source_56            IN NUMBER
)
IS

l_component_type              VARCHAR2(80);
l_component_code              VARCHAR2(30);
l_component_type_code         VARCHAR2(1);
l_component_appl_id           INTEGER;
l_amb_context_code            VARCHAR2(30);
l_entity_code                 VARCHAR2(30);
l_event_class_code            VARCHAR2(30);
l_ae_header_id                NUMBER;
l_event_type_code             VARCHAR2(30);
l_line_definition_code        VARCHAR2(30);
l_line_definition_owner_code  VARCHAR2(1);
--
-- adr variables
l_segment                     VARCHAR2(30);
l_ccid                        NUMBER;
l_adr_transaction_coa_id      NUMBER;
l_adr_accounting_coa_id       NUMBER;
l_adr_flexfield_segment_code  VARCHAR2(30);
l_adr_flex_value_set_id       NUMBER;
l_adr_value_type_code         VARCHAR2(30);
l_adr_value_combination_id    NUMBER;
l_adr_value_segment_code      VARCHAR2(30);

l_bflow_method_code           VARCHAR2(30);  -- 4219869 Business Flow
l_bflow_class_code            VARCHAR2(30);  -- 4219869 Business Flow
l_inherit_desc_flag           VARCHAR2(1);   -- 4219869 Business Flow
l_budgetary_control_flag      VARCHAR2(1);   -- 4458381 Public Sector Enh

-- 4262811 Variables ------------------------------------------------------------------------------------------
l_entered_amt_idx             NUMBER;
l_accted_amt_idx              NUMBER;
l_acc_rev_flag                VARCHAR2(1);
l_accrual_line_num            NUMBER;
l_tmp_amt                     NUMBER;
l_acc_rev_natural_side_code   VARCHAR2(1);

l_num_entries                 NUMBER;
l_gl_dates                    xla_ae_journal_entry_pkg.t_array_date;
l_accted_amts                 xla_ae_journal_entry_pkg.t_array_num;
l_entered_amts                xla_ae_journal_entry_pkg.t_array_num;
l_period_names                xla_ae_journal_entry_pkg.t_array_V15L;
l_recog_line_1                NUMBER;
l_recog_line_2                NUMBER;

l_bflow_applied_to_amt_idx    NUMBER;                                -- 5132302
l_bflow_applied_to_amt        NUMBER;                                -- 5132302
l_bflow_applied_to_amts       xla_ae_journal_entry_pkg.t_array_num;  -- 5132302

l_event_id                    NUMBER;  -- To handle MPA header Description: xla_ae_header_pkg.SetHdrDescription

--l_rounding_ccy                VARCHAR2(15); -- To handle MPA rounding  4262811b
l_same_currency               BOOLEAN;        -- To handle MPA rounding  4262811b

---------------------------------------------------------------------------------------------------------------


--
-- bulk performance
--
l_balance_type_code           VARCHAR2(1);
l_rec_acct_attrs              XLA_AE_LINES_PKG.t_rec_acct_attrs;
l_log_module                  VARCHAR2(240);

--
-- Upgrade strategy
--
l_actual_upg_option           VARCHAR2(1);
l_enc_upg_option           VARCHAR2(1);

--
BEGIN
--
IF g_log_enabled THEN
      l_log_module := C_DEFAULT_MODULE||'.AcctLineType_17';
END IF;
--
IF (C_LEVEL_PROCEDURE >= g_log_level) THEN

      trace
         (p_msg      => 'BEGIN of AcctLineType_17'
         ,p_level    => C_LEVEL_PROCEDURE
         ,p_module   => l_log_module);

END IF;
--
l_component_type             := 'AMB_JLT';
l_component_code             := 'AP_AMOUNT_VARIANCE_PP_ENC_DR';
l_component_type_code        := 'S';
l_component_appl_id          :=  200;
l_amb_context_code           := 'DEFAULT';
l_entity_code                := 'AP_INVOICES';
l_event_class_code           := 'PREPAYMENTS';
l_event_type_code            := 'PREPAYMENTS_ALL';
l_line_definition_owner_code := 'S';
l_line_definition_code       := 'ENC_PREPAY_ALL';
--
l_balance_type_code          := 'E';
l_segment                     := NULL;
l_ccid                        := NULL;
l_adr_transaction_coa_id      := NULL;
l_adr_accounting_coa_id       := NULL;
l_adr_flexfield_segment_code  := NULL;
l_adr_flex_value_set_id       := NULL;
l_adr_value_type_code         := NULL;
l_adr_value_combination_id    := NULL;
l_adr_value_segment_code      := NULL;

l_bflow_method_code          := 'NONE';   -- 4219869 Business Flow
l_bflow_class_code           := 'AP_INV_ENCUM';    -- 4219869 Business Flow
l_inherit_desc_flag          := 'N';   -- 4219869 Business Flow
l_budgetary_control_flag     := 'Y';

l_bflow_applied_to_amt_idx   := NULL; -- 5132302
l_bflow_applied_to_amt       := NULL; -- 5132302
l_entered_amt_idx            := NULL;          -- 4262811
l_accted_amt_idx             := NULL;          -- 4262811
l_acc_rev_flag               := NULL;          -- 4262811
l_accrual_line_num           := NULL;          -- 4262811
l_tmp_amt                    := NULL;          -- 4262811
--
 
IF XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id = XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.ledger_id OR
    l_balance_type_code <> 'B' THEN
IF NVL(p_source_15,'
') =  'ITEM' AND 
p_source_16 IS NOT NULL AND 
NVL(p_source_17,'
') =  'Y' AND 
NVL(p_source_18,'
') <>  'Y'
 THEN 

   --
   XLA_AE_LINES_PKG.SetNewLine;

   p_balance_type_code          := l_balance_type_code;
   -- set the flag so later we will know whether the gain loss line needs to be created
   
   IF(l_balance_type_code = 'A' and p_actual_flag is null) THEN
     p_actual_flag :='A';
   END IF;

   --
   -- bulk performance
   --
   XLA_AE_LINES_PKG.set_ae_header_id (p_ae_header_id => p_event_id ,
                                      p_header_num   => 0); -- 4262811
   --
   -- set accounting line options
   --
   l_ae_header_id:= xla_ae_lines_pkg.SetAcctLineOption(
           p_natural_side_code          => 'D'
         , p_gain_or_loss_flag          => 'N'
         , p_gl_transfer_mode_code      => 'S'
         , p_acct_entry_type_code       => 'E'
         , p_switch_side_flag           => 'Y'
         , p_merge_duplicate_code       => 'N'
         );
   --
   l_acc_rev_natural_side_code := 'C';  -- 4262811
   -- 
   --
   -- set accounting line type info
   --
   xla_ae_lines_pkg.SetAcctLineType
      (p_component_type             => l_component_type
      ,p_event_type_code            => l_event_type_code
      ,p_line_definition_owner_code => l_line_definition_owner_code
      ,p_line_definition_code       => l_line_definition_code
      ,p_accounting_line_code       => l_component_code
      ,p_accounting_line_type_code  => l_component_type_code
      ,p_accounting_line_appl_id    => l_component_appl_id
      ,p_amb_context_code           => l_amb_context_code
      ,p_entity_code                => l_entity_code
      ,p_event_class_code           => l_event_class_code);
   --
   -- set accounting class
   --
   xla_ae_lines_pkg.SetAcctClass(
           p_accounting_class_code  => 'AMT_VARIANCE'
         , p_ae_header_id           => l_ae_header_id
         );

   --
   -- set rounding class
   --
   XLA_AE_LINES_PKG.g_rec_lines.array_rounding_class(XLA_AE_LINES_PKG.g_LineNumber) :=
                      'AMT_VARIANCE';

   --
   xla_ae_lines_pkg.g_rec_lines.array_calculate_acctd_flag(xla_ae_lines_pkg.g_LineNumber) := p_calculate_acctd_flag;
   xla_ae_lines_pkg.g_rec_lines.array_calculate_g_l_flag(xla_ae_lines_pkg.g_LineNumber) := p_calculate_g_l_flag;
   --
   -- bulk performance
   --
   XLA_AE_LINES_PKG.g_rec_lines.array_balance_type_code(XLA_AE_LINES_PKG.g_LineNumber) := l_balance_type_code;

   XLA_AE_LINES_PKG.g_rec_lines.array_ledger_id(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id;

   -- 4955764
   XLA_AE_LINES_PKG.g_rec_lines.array_gl_date(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_HEADER_PKG.g_rec_header_new.array_gl_date(g_array_event(p_event_id).array_value_num('header_index'));

   -- 4458381 Public Sector Enh
      XLA_AE_LINES_PKG.g_rec_lines.array_encumbrance_type_id(XLA_AE_LINES_PKG.g_LineNumber) := 1060;
   --
   -- set accounting attributes for the line type
   --
   l_entered_amt_idx := 23;
   l_accted_amt_idx  := 28;
   l_bflow_applied_to_amt_idx  := NULL;  -- 5132302
   l_rec_acct_attrs.array_acct_attr_code(1) := 'ACCOUNTING_REVERSAL_OPTION';
   l_rec_acct_attrs.array_char_value(1)  := p_source_19;
   l_rec_acct_attrs.array_acct_attr_code(2) := 'ALLOC_TO_APPLICATION_ID';
   l_rec_acct_attrs.array_num_value(2)  := 
xla_ae_sources_pkg.GetSystemSourceNum(
   p_source_code           => 'XLA_EVENT_APPL_ID'
 , p_source_type_code      => 'Y'
 , p_source_application_id =>  602
);
   l_rec_acct_attrs.array_acct_attr_code(3) := 'ALLOC_TO_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(3)  := p_source_21;
   l_rec_acct_attrs.array_acct_attr_code(4) := 'ALLOC_TO_ENTITY_CODE';
   l_rec_acct_attrs.array_char_value(4)  := 
xla_ae_sources_pkg.GetSystemSourceChar(
   p_source_code           => 'XLA_ENTITY_CODE'
 , p_source_type_code      => 'Y'
 , p_source_application_id =>  602
);
   l_rec_acct_attrs.array_acct_attr_code(5) := 'ALLOC_TO_FIRST_DIST_ID';
   l_rec_acct_attrs.array_num_value(5)  :=  to_char(p_source_23);
   l_rec_acct_attrs.array_acct_attr_code(6) := 'ALLOC_TO_FIRST_SYS_TRAN_ID';
   l_rec_acct_attrs.array_num_value(6)  :=  to_char(p_source_24);
   l_rec_acct_attrs.array_acct_attr_code(7) := 'APPLIED_TO_APPLICATION_ID';
   l_rec_acct_attrs.array_num_value(7)  := p_source_25;
   l_rec_acct_attrs.array_acct_attr_code(8) := 'APPLIED_TO_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(8)  := p_source_26;
   l_rec_acct_attrs.array_acct_attr_code(9) := 'APPLIED_TO_ENTITY_CODE';
   l_rec_acct_attrs.array_char_value(9)  := p_source_27;
   l_rec_acct_attrs.array_acct_attr_code(10) := 'APPLIED_TO_FIRST_DIST_ID';
   l_rec_acct_attrs.array_num_value(10)  :=  to_char(p_source_28);
   l_rec_acct_attrs.array_acct_attr_code(11) := 'APPLIED_TO_FIRST_SYS_TRAN_ID';
   l_rec_acct_attrs.array_num_value(11)  :=  to_char(p_source_29);
   l_rec_acct_attrs.array_acct_attr_code(12) := 'DISTRIBUTION_IDENTIFIER_1';
   l_rec_acct_attrs.array_num_value(12)  :=  to_char(p_source_30);
   l_rec_acct_attrs.array_acct_attr_code(13) := 'DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(13)  := p_source_21;
   l_rec_acct_attrs.array_acct_attr_code(14) := 'ENC_UPG_CR_CCID';
   l_rec_acct_attrs.array_num_value(14)  := p_source_31;
   l_rec_acct_attrs.array_acct_attr_code(15) := 'ENC_UPG_CR_ENTERED_AMT';
   l_rec_acct_attrs.array_num_value(15)  := p_source_32;
   l_rec_acct_attrs.array_acct_attr_code(16) := 'ENC_UPG_CR_ENTERED_CURR';
   l_rec_acct_attrs.array_char_value(16)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(17) := 'ENC_UPG_CR_LEDGER_AMT';
   l_rec_acct_attrs.array_num_value(17)  := p_source_34;
   l_rec_acct_attrs.array_acct_attr_code(18) := 'ENC_UPG_DR_CCID';
   l_rec_acct_attrs.array_num_value(18)  := p_source_35;
   l_rec_acct_attrs.array_acct_attr_code(19) := 'ENC_UPG_DR_ENTERED_AMT';
   l_rec_acct_attrs.array_num_value(19)  := p_source_36;
   l_rec_acct_attrs.array_acct_attr_code(20) := 'ENC_UPG_DR_ENTERED_CURR';
   l_rec_acct_attrs.array_char_value(20)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(21) := 'ENC_UPG_DR_LEDGER_AMT';
   l_rec_acct_attrs.array_num_value(21)  := p_source_37;
   l_rec_acct_attrs.array_acct_attr_code(22) := 'ENC_UPG_OPTION';
   l_rec_acct_attrs.array_char_value(22)  := p_source_38;
   l_rec_acct_attrs.array_acct_attr_code(23) := 'ENTERED_CURRENCY_AMOUNT';
   l_rec_acct_attrs.array_num_value(23)  := p_source_16;
   l_rec_acct_attrs.array_acct_attr_code(24) := 'ENTERED_CURRENCY_CODE';
   l_rec_acct_attrs.array_char_value(24)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(25) := 'EXCHANGE_DATE';
   l_rec_acct_attrs.array_date_value(25)  := p_source_39;
   l_rec_acct_attrs.array_acct_attr_code(26) := 'EXCHANGE_RATE';
   l_rec_acct_attrs.array_num_value(26)  := p_source_40;
   l_rec_acct_attrs.array_acct_attr_code(27) := 'EXCHANGE_RATE_TYPE';
   l_rec_acct_attrs.array_char_value(27)  := p_source_41;
   l_rec_acct_attrs.array_acct_attr_code(28) := 'LEDGER_AMOUNT';
   l_rec_acct_attrs.array_num_value(28)  := p_source_42;
   l_rec_acct_attrs.array_acct_attr_code(29) := 'MULTIPERIOD_END_DATE';
   l_rec_acct_attrs.array_date_value(29)  := p_source_43;
   l_rec_acct_attrs.array_acct_attr_code(30) := 'MULTIPERIOD_OPTION';
   l_rec_acct_attrs.array_char_value(30)  := p_source_44;
   l_rec_acct_attrs.array_acct_attr_code(31) := 'MULTIPERIOD_START_DATE';
   l_rec_acct_attrs.array_date_value(31)  := p_source_45;
   l_rec_acct_attrs.array_acct_attr_code(32) := 'OVERRIDE_ACCTD_AMT_FLAG';
   l_rec_acct_attrs.array_char_value(32)  := p_source_46;
   l_rec_acct_attrs.array_acct_attr_code(33) := 'PARTY_ID';
   l_rec_acct_attrs.array_num_value(33)  := p_source_47;
   l_rec_acct_attrs.array_acct_attr_code(34) := 'PARTY_SITE_ID';
   l_rec_acct_attrs.array_num_value(34)  := p_source_48;
   l_rec_acct_attrs.array_acct_attr_code(35) := 'PARTY_TYPE';
   l_rec_acct_attrs.array_char_value(35)  := p_source_49;
   l_rec_acct_attrs.array_acct_attr_code(36) := 'REVERSED_DISTRIBUTION_ID1';
   l_rec_acct_attrs.array_num_value(36)  :=  to_char(p_source_50);
   l_rec_acct_attrs.array_acct_attr_code(37) := 'REVERSED_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(37)  := p_source_21;
   l_rec_acct_attrs.array_acct_attr_code(38) := 'STATISTICAL_AMOUNT';
   l_rec_acct_attrs.array_num_value(38)  := p_source_51;
   l_rec_acct_attrs.array_acct_attr_code(39) := 'TAX_LINE_REF_ID';
   l_rec_acct_attrs.array_num_value(39)  := p_source_52;
   l_rec_acct_attrs.array_acct_attr_code(40) := 'TAX_REC_NREC_DIST_REF_ID';
   l_rec_acct_attrs.array_num_value(40)  := p_source_53;
   l_rec_acct_attrs.array_acct_attr_code(41) := 'TAX_SUMMARY_LINE_REF_ID';
   l_rec_acct_attrs.array_num_value(41)  := p_source_54;
   l_rec_acct_attrs.array_acct_attr_code(42) := 'UPG_CR_ENC_TYPE_ID';
   l_rec_acct_attrs.array_num_value(42)  := p_source_55;
   l_rec_acct_attrs.array_acct_attr_code(43) := 'UPG_DR_ENC_TYPE_ID';
   l_rec_acct_attrs.array_num_value(43)  := p_source_56;

   XLA_AE_LINES_PKG.SetLineAcctAttrs(l_rec_acct_attrs);
   p_gain_or_loss_ref  := XLA_AE_LINES_PKG.g_rec_lines.array_gain_or_loss_ref(XLA_AE_LINES_PKG.g_LineNumber);

   ---------------------------------------------------------------------------------------------------------------
   -- 4336173 -- assign Business Flow Class (replace code in xla_ae_lines_pkg.Business_Flow_Validation)
   ---------------------------------------------------------------------------------------------------------------
   XLA_AE_LINES_PKG.g_rec_lines.array_business_class_code(XLA_AE_LINES_PKG.g_LineNumber) := l_bflow_class_code;

   l_actual_upg_option  := XLA_AE_LINES_PKG.g_rec_lines.array_actual_upg_option(XLA_AE_LINES_PKG.g_LineNumber);
   l_enc_upg_option     := XLA_AE_LINES_PKG.g_rec_lines.array_enc_upg_option(XLA_AE_LINES_PKG.g_LineNumber);

   IF xla_accounting_cache_pkg.GetValueChar
         (p_source_code         => 'LEDGER_CATEGORY_CODE'
         ,p_target_ledger_id    => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id) IN ('PRIMARY','ALC')
   AND l_bflow_method_code = 'PRIOR_ENTRY'
--   AND (l_actual_upg_option = 'Y' OR l_enc_upg_option = 'Y') Bug 4922099
   AND ( (NVL(l_actual_upg_option, 'N') IN ('Y', 'O')) OR
         (NVL(l_enc_upg_option, 'N') IN ('Y', 'O'))
       )
   THEN
         xla_ae_lines_pkg.BflowUpgEntry
           (p_business_method_code    => l_bflow_method_code
           ,p_business_class_code     => l_bflow_class_code
           ,p_balance_type            => l_balance_type_code);
   ELSE
      NULL;
-- No business flow processing for business flow method of NONE.
   END IF;

   --
   -- call analytical criteria
   --
   
   --
   -- call description
   --
   
xla_ae_lines_pkg.SetLineDescription(
   p_ae_header_id => l_ae_header_id
  ,p_description  => Description_2 (
     p_application_id         => p_application_id
   , p_ae_header_id           => l_ae_header_id 
, p_source_1 => p_source_1
   )
);


   --
   -- call ADRs
   -- Bug 4922099
   --
   IF ( (l_bflow_method_code <> 'PRIOR_ENTRY') OR
        (NVL(l_actual_upg_option, 'N') = 'O') OR
        (NVL(l_enc_upg_option, 'N') = 'O')
      )
   THEN
   NULL;
   --
   --
   
  l_ccid := AcctDerRule_7(
           p_application_id           => p_application_id
         , p_ae_header_id             => l_ae_header_id 
, p_source_11 => p_source_11
         , x_transaction_coa_id       => l_adr_transaction_coa_id
         , x_accounting_coa_id        => l_adr_accounting_coa_id
         , x_value_type_code          => l_adr_value_type_code
         , p_side                     => 'NA'
   );

   xla_ae_lines_pkg.set_ccid(
    p_code_combination_id          => l_ccid
  , p_value_type_code              => l_adr_value_type_code
  , p_transaction_coa_id           => l_adr_transaction_coa_id
  , p_accounting_coa_id            => l_adr_accounting_coa_id
  , p_adr_code                     => 'AP_INVOICE_DIST'
  , p_adr_type_code                => 'S'
  , p_component_type               => l_component_type
  , p_component_code               => l_component_code
  , p_component_type_code          => l_component_type_code
  , p_component_appl_id            => l_component_appl_id
  , p_amb_context_code             => l_amb_context_code
  , p_side                         => 'NA'
  );


   --
   --
   END IF;
   --
   -- Bug 4922099
   IF ( ( (NVL(l_actual_upg_option, 'N') = 'O') OR
          (NVL(l_enc_upg_option, 'N') = 'O')
        ) AND
        (l_bflow_method_code = 'PRIOR_ENTRY')
      )
   THEN
      IF
      --
      1 = 2
      --
      THEN
      xla_accounting_err_pkg.build_message
                                    (p_appli_s_name            => 'XLA'
                                    ,p_msg_name                => 'XLA_UPG_OVERRIDE_ADR_UNDEFINED'
                                    ,p_token_1                 => 'LINE_NUMBER'
                                    ,p_value_1                 => XLA_AE_LINES_PKG.g_LineNumber
                                    ,p_token_2                 => 'LINE_TYPE_NAME'
                                    ,p_value_2                 => XLA_AE_SOURCES_PKG.GetComponentName (
                                                                             l_component_type
                                                                            ,l_component_code
                                                                            ,l_component_type_code
                                                                            ,l_component_appl_id
                                                                            ,l_amb_context_code
                                                                            ,l_entity_code
                                                                            ,l_event_class_code
                                                                           )
                                    ,p_token_3                 => 'OWNER'
                                    ,p_value_3                 => xla_lookups_pkg.get_meaning(
                                                                          p_lookup_type     => 'XLA_OWNER_TYPE'
                                                                          ,p_lookup_code    => l_component_type_code
                                                                         )
                                    ,p_token_4                 => 'PRODUCT_NAME'
                                    ,p_value_4                 => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.application_name
                                    ,p_entity_id               => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.entity_id
                                    ,p_event_id                => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.event_id
                                    ,p_ledger_id               => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id
                                    ,p_ae_header_id            =>  NULL
                                       );

        IF (C_LEVEL_ERROR>= g_log_level) THEN
                 trace
                      (p_msg      => 'ERROR: XLA_UPG_OVERRIDE_ADR_UNDEFINED'
                      ,p_level    => C_LEVEL_ERROR
                      ,p_module   => l_log_module);
        END IF;
      END IF;
   END IF;
   --
   --
   ------------------------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- NOTE: XLA_AE_LINES_PKG.ValidateCurrentLine should NOT be generated if business flow method is
   -- Prior Entry.  Currently, the following code is always generated.
   ------------------------------------------------------------------------------------------------
   XLA_AE_LINES_PKG.ValidateCurrentLine;

   ------------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- Populated credit and debit amounts -- Need to generate this within IF <condition>
   ------------------------------------------------------------------------------------
   XLA_AE_LINES_PKG.SetDebitCreditAmounts;

   ----------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- Update journal entry status -- Need to generate this within IF <condition>
   ----------------------------------------------------------------------------------
   XLA_AE_JOURNAL_ENTRY_PKG.UpdateJournalEntryStatus
         (p_hdr_idx => g_array_event(p_event_id).array_value_num('header_index')
         ,p_balance_type_code => l_balance_type_code
         );

   -------------------------------------------------------------------------------------------
   -- 4262811 - Generate the Accrual Reversal lines
   -------------------------------------------------------------------------------------------
   BEGIN
      l_acc_rev_flag := XLA_AE_HEADER_PKG.g_rec_header_new.array_accrual_reversal_flag
                              (g_array_event(p_event_id).array_value_num('header_index'));
      IF l_acc_rev_flag IS NULL THEN
         l_acc_rev_flag := 'N';
      END IF;
   EXCEPTION
      WHEN OTHERS THEN
         l_acc_rev_flag := 'N';
   END;
   --
   IF (l_acc_rev_flag = 'Y') THEN

       -- 4645092  ------------------------------------------------------------------------------
       -- To allow MPA report to determine if it should generate report process
       XLA_ACCOUNTING_PKG.g_mpa_accrual_exists := 'Y';
       ------------------------------------------------------------------------------------------

       l_accrual_line_num := XLA_AE_LINES_PKG.g_LineNumber;
       XLA_AE_LINES_PKG.CopyLineInfo(l_accrual_line_num);
   -- added call to set_ccid to execute mapping  for secondary accrual reversal entries bug 7444204
   -- call ADRs
   -- Bug 4922099
   --
   IF ( (l_bflow_method_code <> 'PRIOR_ENTRY') OR
        (NVL(l_actual_upg_option, 'N') = 'O') OR
        (NVL(l_enc_upg_option, 'N') = 'O')
      )
   THEN
   NULL;
   --
   --
   
  l_ccid := AcctDerRule_7(
           p_application_id           => p_application_id
         , p_ae_header_id             => l_ae_header_id 
, p_source_11 => p_source_11
         , x_transaction_coa_id       => l_adr_transaction_coa_id
         , x_accounting_coa_id        => l_adr_accounting_coa_id
         , x_value_type_code          => l_adr_value_type_code
         , p_side                     => 'NA'
   );

   xla_ae_lines_pkg.set_ccid(
    p_code_combination_id          => l_ccid
  , p_value_type_code              => l_adr_value_type_code
  , p_transaction_coa_id           => l_adr_transaction_coa_id
  , p_accounting_coa_id            => l_adr_accounting_coa_id
  , p_adr_code                     => 'AP_INVOICE_DIST'
  , p_adr_type_code                => 'S'
  , p_component_type               => l_component_type
  , p_component_code               => l_component_code
  , p_component_type_code          => l_component_type_code
  , p_component_appl_id            => l_component_appl_id
  , p_amb_context_code             => l_amb_context_code
  , p_side                         => 'NA'
  );


   --
   --
   END IF;

       --
       -- Update the line information that should be overwritten
       --
       XLA_AE_LINES_PKG.set_ae_header_id(p_ae_header_id => p_event_id ,
                                         p_header_num   => 1);
       XLA_AE_LINES_PKG.g_rec_lines.array_header_num(XLA_AE_LINES_PKG.g_LineNumber)  :=1;

       XLA_AE_LINES_PKG.g_rec_lines.array_business_class_code(XLA_AE_LINES_PKG.g_LineNumber) := NULL; -- 4669271

       IF l_bflow_method_code <> 'NONE' THEN  -- 4655713b
          XLA_AE_LINES_PKG.g_rec_lines.array_reversal_code(XLA_AE_LINES_PKG.g_LineNumber) := CONCAT('MPA_',l_bflow_method_code);
       END IF;

      --
      -- Depending on the Reversal Method setup, do a switch side or changes sign for the amounts
      --
      IF (XLA_AE_JOURNAL_ENTRY_PKG.g_cache_ledgers_info.ledger_reversal_option = 'SIDE') THEN
          XLA_AE_LINES_PKG.g_rec_lines.array_natural_side_code(XLA_AE_LINES_PKG.g_LineNumber) :=  l_acc_rev_natural_side_code;
      ELSE
          ---------------------------------------------------------------------------------------------------
          -- 4262811a Switch Sign
          ---------------------------------------------------------------------------------------------------
          XLA_AE_LINES_PKG.g_rec_lines.array_switch_side_flag(XLA_AE_LINES_PKG.g_LineNumber) := 'N';  -- 5052518
          XLA_AE_LINES_PKG.g_rec_lines.array_ledger_amount(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_ledger_amount(XLA_AE_LINES_PKG.g_LineNumber) * -1;
          XLA_AE_LINES_PKG.g_rec_lines.array_entered_amount(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_entered_amount(XLA_AE_LINES_PKG.g_LineNumber) * -1;
          -- 5132302
          XLA_AE_LINES_PKG.g_rec_lines.array_bflow_applied_to_amt(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_bflow_applied_to_amt(XLA_AE_LINES_PKG.g_LineNumber) * -1;

      END IF;

      -- 4955764
      XLA_AE_LINES_PKG.g_rec_lines.array_gl_date(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_HEADER_PKG.g_rec_header_new.array_gl_date(g_array_event(p_event_id).array_value_num('acc_rev_header_index'));


      XLA_AE_LINES_PKG.ValidateCurrentLine;
      XLA_AE_LINES_PKG.SetDebitCreditAmounts;

      XLA_AE_JOURNAL_ENTRY_PKG.UpdateJournalEntryStatus
               (p_hdr_idx           => g_array_event(p_event_id).array_value_num('acc_rev_header_index')
               ,p_balance_type_code => l_balance_type_code);

   END IF;

   -----------------------------------------------------------------------------------------
   -- 4262811 Multiperiod Accounting
   -----------------------------------------------------------------------------------------
     -- No MPA option is assigned.


END IF;
END IF;
--

--
IF (C_LEVEL_PROCEDURE >= g_log_level) THEN
   trace
      (p_msg      => 'END of AcctLineType_17'
      ,p_level    => C_LEVEL_PROCEDURE
      ,p_module   => l_log_module);
END IF;
--
EXCEPTION
  WHEN xla_exceptions_pkg.application_exception THEN
      RAISE;
  WHEN OTHERS THEN
       xla_exceptions_pkg.raise_message
           (p_location => 'XLA_00200_AAD_S_000010_BC_PKG.AcctLineType_17');
END AcctLineType_17;
--

---------------------------------------
--
-- PRIVATE FUNCTION
--         AcctLineType_18
--
---------------------------------------
PROCEDURE AcctLineType_18 (
  p_application_id        IN NUMBER
 ,p_event_id              IN NUMBER
 ,p_calculate_acctd_flag  IN VARCHAR2
 ,p_calculate_g_l_flag    IN VARCHAR2
 ,p_actual_flag           IN OUT VARCHAR2
 ,p_balance_type_code     OUT VARCHAR2
 ,p_gain_or_loss_ref      OUT VARCHAR2
 
--Invoice Distribution Type
 , p_source_15            IN VARCHAR2
 , p_source_15_meaning    IN VARCHAR2
--Accrue on Receipt Option
 , p_source_18            IN VARCHAR2
 , p_source_18_meaning    IN VARCHAR2
--Accounting Reversal Indicator
 , p_source_19            IN VARCHAR2
--Distribution Link Type
 , p_source_21            IN VARCHAR2
--Allocation to Main Distribution Identifier
 , p_source_23            IN NUMBER
--Invoice Identifier
 , p_source_24            IN NUMBER
--Invoice Distribution Identifier
 , p_source_30            IN NUMBER
--Payables Encumbrance Upgrade Credit Account
 , p_source_31            IN NUMBER
--Payables Encumbrance Upgrade Credit Amount
 , p_source_32            IN NUMBER
--Invoice Currency Code
 , p_source_33            IN VARCHAR2
--Payables Encumbrance Upgrade Credit Base Amount
 , p_source_34            IN NUMBER
--Payables Encumbrance Upgrade Debit Account
 , p_source_35            IN NUMBER
--Payables Encumbrance Upgrade Debit Amount
 , p_source_36            IN NUMBER
--Payables Encumbrance Upgrade Debit Base Amount
 , p_source_37            IN NUMBER
--Payables Encumbrance Upgrade Option
 , p_source_38            IN VARCHAR2
--Deferred Accounting End Date
 , p_source_43            IN DATE
--Deferred Accounting Option
 , p_source_44            IN VARCHAR2
--Deferred Accounting Start Date
 , p_source_45            IN DATE
--Override Accounted Amount Indicator
 , p_source_46            IN VARCHAR2
 , p_source_46_meaning    IN VARCHAR2
--Third Party Type
 , p_source_49            IN VARCHAR2
--Parent Reversal Identifier
 , p_source_50            IN NUMBER
--Invoice Distribution Statistical Amount
 , p_source_51            IN NUMBER
--Invoice Distribution Tax Line Identifier
 , p_source_52            IN NUMBER
--Invoice Distribution Tax Distribution Identifier from Tax
 , p_source_53            IN NUMBER
--Invoice Distribution Summary Tax Line Identifier
 , p_source_54            IN NUMBER
--Payables Upgrade Credit Encumbrance Type Identifier
 , p_source_55            IN NUMBER
--Payables Upgrade Debit Encumbrance Type Identifier
 , p_source_56            IN NUMBER
--Purchase Order Distribution Identifier
 , p_source_58            IN NUMBER
--Self-Assessed Tax Flag
 , p_source_59            IN VARCHAR2
 , p_source_59_meaning    IN VARCHAR2
--Business Flow Purchasing Application Identifier
 , p_source_60            IN NUMBER
--Business Flow Purchase Order Distribution Type
 , p_source_61            IN VARCHAR2
--Business Flow Purchase Order Entity Code
 , p_source_62            IN VARCHAR2
--Business Flow Purchase Order Distribution Identifier
 , p_source_63            IN NUMBER
--Business Flow Purchasing Document Identifier
 , p_source_64            IN NUMBER
--Invoice Distribution Encumbrance Amount
 , p_source_65            IN NUMBER
--Invoice Distribution Encumbrance Ledger Amount
 , p_source_66            IN NUMBER
)
IS

l_component_type              VARCHAR2(80);
l_component_code              VARCHAR2(30);
l_component_type_code         VARCHAR2(1);
l_component_appl_id           INTEGER;
l_amb_context_code            VARCHAR2(30);
l_entity_code                 VARCHAR2(30);
l_event_class_code            VARCHAR2(30);
l_ae_header_id                NUMBER;
l_event_type_code             VARCHAR2(30);
l_line_definition_code        VARCHAR2(30);
l_line_definition_owner_code  VARCHAR2(1);
--
-- adr variables
l_segment                     VARCHAR2(30);
l_ccid                        NUMBER;
l_adr_transaction_coa_id      NUMBER;
l_adr_accounting_coa_id       NUMBER;
l_adr_flexfield_segment_code  VARCHAR2(30);
l_adr_flex_value_set_id       NUMBER;
l_adr_value_type_code         VARCHAR2(30);
l_adr_value_combination_id    NUMBER;
l_adr_value_segment_code      VARCHAR2(30);

l_bflow_method_code           VARCHAR2(30);  -- 4219869 Business Flow
l_bflow_class_code            VARCHAR2(30);  -- 4219869 Business Flow
l_inherit_desc_flag           VARCHAR2(1);   -- 4219869 Business Flow
l_budgetary_control_flag      VARCHAR2(1);   -- 4458381 Public Sector Enh

-- 4262811 Variables ------------------------------------------------------------------------------------------
l_entered_amt_idx             NUMBER;
l_accted_amt_idx              NUMBER;
l_acc_rev_flag                VARCHAR2(1);
l_accrual_line_num            NUMBER;
l_tmp_amt                     NUMBER;
l_acc_rev_natural_side_code   VARCHAR2(1);

l_num_entries                 NUMBER;
l_gl_dates                    xla_ae_journal_entry_pkg.t_array_date;
l_accted_amts                 xla_ae_journal_entry_pkg.t_array_num;
l_entered_amts                xla_ae_journal_entry_pkg.t_array_num;
l_period_names                xla_ae_journal_entry_pkg.t_array_V15L;
l_recog_line_1                NUMBER;
l_recog_line_2                NUMBER;

l_bflow_applied_to_amt_idx    NUMBER;                                -- 5132302
l_bflow_applied_to_amt        NUMBER;                                -- 5132302
l_bflow_applied_to_amts       xla_ae_journal_entry_pkg.t_array_num;  -- 5132302

l_event_id                    NUMBER;  -- To handle MPA header Description: xla_ae_header_pkg.SetHdrDescription

--l_rounding_ccy                VARCHAR2(15); -- To handle MPA rounding  4262811b
l_same_currency               BOOLEAN;        -- To handle MPA rounding  4262811b

---------------------------------------------------------------------------------------------------------------


--
-- bulk performance
--
l_balance_type_code           VARCHAR2(1);
l_rec_acct_attrs              XLA_AE_LINES_PKG.t_rec_acct_attrs;
l_log_module                  VARCHAR2(240);

--
-- Upgrade strategy
--
l_actual_upg_option           VARCHAR2(1);
l_enc_upg_option           VARCHAR2(1);

--
BEGIN
--
IF g_log_enabled THEN
      l_log_module := C_DEFAULT_MODULE||'.AcctLineType_18';
END IF;
--
IF (C_LEVEL_PROCEDURE >= g_log_level) THEN

      trace
         (p_msg      => 'BEGIN of AcctLineType_18'
         ,p_level    => C_LEVEL_PROCEDURE
         ,p_module   => l_log_module);

END IF;
--
l_component_type             := 'AMB_JLT';
l_component_code             := 'AP_CM_NON_REC_TAX_PO_ENC';
l_component_type_code        := 'S';
l_component_appl_id          :=  200;
l_amb_context_code           := 'DEFAULT';
l_entity_code                := 'AP_INVOICES';
l_event_class_code           := 'CREDIT MEMOS';
l_event_type_code            := 'CREDIT MEMOS_ALL';
l_line_definition_owner_code := 'S';
l_line_definition_code       := 'ENC_CM_ALL';
--
l_balance_type_code          := 'E';
l_segment                     := NULL;
l_ccid                        := NULL;
l_adr_transaction_coa_id      := NULL;
l_adr_accounting_coa_id       := NULL;
l_adr_flexfield_segment_code  := NULL;
l_adr_flex_value_set_id       := NULL;
l_adr_value_type_code         := NULL;
l_adr_value_combination_id    := NULL;
l_adr_value_segment_code      := NULL;

l_bflow_method_code          := 'PRIOR_ENTRY';   -- 4219869 Business Flow
l_bflow_class_code           := 'PO_ENCUMBRANCE';    -- 4219869 Business Flow
l_inherit_desc_flag          := 'Y';   -- 4219869 Business Flow
l_budgetary_control_flag     := 'Y';

l_bflow_applied_to_amt_idx   := NULL; -- 5132302
l_bflow_applied_to_amt       := NULL; -- 5132302
l_entered_amt_idx            := NULL;          -- 4262811
l_accted_amt_idx             := NULL;          -- 4262811
l_acc_rev_flag               := NULL;          -- 4262811
l_accrual_line_num           := NULL;          -- 4262811
l_tmp_amt                    := NULL;          -- 4262811
--
 
IF XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id = XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.ledger_id OR
    l_balance_type_code <> 'B' THEN
IF p_source_58 IS NOT NULL AND 
NVL(p_source_15,'
') =  'NONREC_TAX' AND 
NVL(p_source_59,'
') <>  'Y' AND 
NVL(p_source_18,'
') <>  'Y'
 THEN 

   --
   XLA_AE_LINES_PKG.SetNewLine;

   p_balance_type_code          := l_balance_type_code;
   -- set the flag so later we will know whether the gain loss line needs to be created
   
   IF(l_balance_type_code = 'A' and p_actual_flag is null) THEN
     p_actual_flag :='A';
   END IF;

   --
   -- bulk performance
   --
   XLA_AE_LINES_PKG.set_ae_header_id (p_ae_header_id => p_event_id ,
                                      p_header_num   => 0); -- 4262811
   --
   -- set accounting line options
   --
   l_ae_header_id:= xla_ae_lines_pkg.SetAcctLineOption(
           p_natural_side_code          => 'C'
         , p_gain_or_loss_flag          => 'N'
         , p_gl_transfer_mode_code      => 'S'
         , p_acct_entry_type_code       => 'E'
         , p_switch_side_flag           => 'Y'
         , p_merge_duplicate_code       => 'N'
         );
   --
   l_acc_rev_natural_side_code := 'D';  -- 4262811
   -- 
   --
   -- set accounting line type info
   --
   xla_ae_lines_pkg.SetAcctLineType
      (p_component_type             => l_component_type
      ,p_event_type_code            => l_event_type_code
      ,p_line_definition_owner_code => l_line_definition_owner_code
      ,p_line_definition_code       => l_line_definition_code
      ,p_accounting_line_code       => l_component_code
      ,p_accounting_line_type_code  => l_component_type_code
      ,p_accounting_line_appl_id    => l_component_appl_id
      ,p_amb_context_code           => l_amb_context_code
      ,p_entity_code                => l_entity_code
      ,p_event_class_code           => l_event_class_code);
   --
   -- set accounting class
   --
   xla_ae_lines_pkg.SetAcctClass(
           p_accounting_class_code  => 'PURCHASE_ORDER'
         , p_ae_header_id           => l_ae_header_id
         );

   --
   -- set rounding class
   --
   XLA_AE_LINES_PKG.g_rec_lines.array_rounding_class(XLA_AE_LINES_PKG.g_LineNumber) :=
                      'PURCHASE_ORDER';

   --
   xla_ae_lines_pkg.g_rec_lines.array_calculate_acctd_flag(xla_ae_lines_pkg.g_LineNumber) := p_calculate_acctd_flag;
   xla_ae_lines_pkg.g_rec_lines.array_calculate_g_l_flag(xla_ae_lines_pkg.g_LineNumber) := p_calculate_g_l_flag;
   --
   -- bulk performance
   --
   XLA_AE_LINES_PKG.g_rec_lines.array_balance_type_code(XLA_AE_LINES_PKG.g_LineNumber) := l_balance_type_code;

   XLA_AE_LINES_PKG.g_rec_lines.array_ledger_id(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id;

   -- 4955764
   XLA_AE_LINES_PKG.g_rec_lines.array_gl_date(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_HEADER_PKG.g_rec_header_new.array_gl_date(g_array_event(p_event_id).array_value_num('header_index'));

   -- 4458381 Public Sector Enh
   
   --
   -- set accounting attributes for the line type
   --
   l_entered_amt_idx := 23;
   l_accted_amt_idx  := 25;
   l_bflow_applied_to_amt_idx  := NULL;  -- 5132302
   l_rec_acct_attrs.array_acct_attr_code(1) := 'ACCOUNTING_REVERSAL_OPTION';
   l_rec_acct_attrs.array_char_value(1)  := p_source_19;
   l_rec_acct_attrs.array_acct_attr_code(2) := 'ALLOC_TO_APPLICATION_ID';
   l_rec_acct_attrs.array_num_value(2)  := 
xla_ae_sources_pkg.GetSystemSourceNum(
   p_source_code           => 'XLA_EVENT_APPL_ID'
 , p_source_type_code      => 'Y'
 , p_source_application_id =>  602
);
   l_rec_acct_attrs.array_acct_attr_code(3) := 'ALLOC_TO_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(3)  := p_source_21;
   l_rec_acct_attrs.array_acct_attr_code(4) := 'ALLOC_TO_ENTITY_CODE';
   l_rec_acct_attrs.array_char_value(4)  := 
xla_ae_sources_pkg.GetSystemSourceChar(
   p_source_code           => 'XLA_ENTITY_CODE'
 , p_source_type_code      => 'Y'
 , p_source_application_id =>  602
);
   l_rec_acct_attrs.array_acct_attr_code(5) := 'ALLOC_TO_FIRST_DIST_ID';
   l_rec_acct_attrs.array_num_value(5)  :=  to_char(p_source_23);
   l_rec_acct_attrs.array_acct_attr_code(6) := 'ALLOC_TO_FIRST_SYS_TRAN_ID';
   l_rec_acct_attrs.array_num_value(6)  :=  to_char(p_source_24);
   l_rec_acct_attrs.array_acct_attr_code(7) := 'APPLIED_TO_APPLICATION_ID';
   l_rec_acct_attrs.array_num_value(7)  := p_source_60;
   l_rec_acct_attrs.array_acct_attr_code(8) := 'APPLIED_TO_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(8)  := p_source_61;
   l_rec_acct_attrs.array_acct_attr_code(9) := 'APPLIED_TO_ENTITY_CODE';
   l_rec_acct_attrs.array_char_value(9)  := p_source_62;
   l_rec_acct_attrs.array_acct_attr_code(10) := 'APPLIED_TO_FIRST_DIST_ID';
   l_rec_acct_attrs.array_num_value(10)  :=  to_char(p_source_63);
   l_rec_acct_attrs.array_acct_attr_code(11) := 'APPLIED_TO_FIRST_SYS_TRAN_ID';
   l_rec_acct_attrs.array_num_value(11)  :=  to_char(p_source_64);
   l_rec_acct_attrs.array_acct_attr_code(12) := 'DISTRIBUTION_IDENTIFIER_1';
   l_rec_acct_attrs.array_num_value(12)  :=  to_char(p_source_30);
   l_rec_acct_attrs.array_acct_attr_code(13) := 'DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(13)  := p_source_21;
   l_rec_acct_attrs.array_acct_attr_code(14) := 'ENC_UPG_CR_CCID';
   l_rec_acct_attrs.array_num_value(14)  := p_source_31;
   l_rec_acct_attrs.array_acct_attr_code(15) := 'ENC_UPG_CR_ENTERED_AMT';
   l_rec_acct_attrs.array_num_value(15)  := p_source_32;
   l_rec_acct_attrs.array_acct_attr_code(16) := 'ENC_UPG_CR_ENTERED_CURR';
   l_rec_acct_attrs.array_char_value(16)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(17) := 'ENC_UPG_CR_LEDGER_AMT';
   l_rec_acct_attrs.array_num_value(17)  := p_source_34;
   l_rec_acct_attrs.array_acct_attr_code(18) := 'ENC_UPG_DR_CCID';
   l_rec_acct_attrs.array_num_value(18)  := p_source_35;
   l_rec_acct_attrs.array_acct_attr_code(19) := 'ENC_UPG_DR_ENTERED_AMT';
   l_rec_acct_attrs.array_num_value(19)  := p_source_36;
   l_rec_acct_attrs.array_acct_attr_code(20) := 'ENC_UPG_DR_ENTERED_CURR';
   l_rec_acct_attrs.array_char_value(20)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(21) := 'ENC_UPG_DR_LEDGER_AMT';
   l_rec_acct_attrs.array_num_value(21)  := p_source_37;
   l_rec_acct_attrs.array_acct_attr_code(22) := 'ENC_UPG_OPTION';
   l_rec_acct_attrs.array_char_value(22)  := p_source_38;
   l_rec_acct_attrs.array_acct_attr_code(23) := 'ENTERED_CURRENCY_AMOUNT';
   l_rec_acct_attrs.array_num_value(23)  := p_source_65;
   l_rec_acct_attrs.array_acct_attr_code(24) := 'ENTERED_CURRENCY_CODE';
   l_rec_acct_attrs.array_char_value(24)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(25) := 'LEDGER_AMOUNT';
   l_rec_acct_attrs.array_num_value(25)  := p_source_66;
   l_rec_acct_attrs.array_acct_attr_code(26) := 'MULTIPERIOD_END_DATE';
   l_rec_acct_attrs.array_date_value(26)  := p_source_43;
   l_rec_acct_attrs.array_acct_attr_code(27) := 'MULTIPERIOD_OPTION';
   l_rec_acct_attrs.array_char_value(27)  := p_source_44;
   l_rec_acct_attrs.array_acct_attr_code(28) := 'MULTIPERIOD_START_DATE';
   l_rec_acct_attrs.array_date_value(28)  := p_source_45;
   l_rec_acct_attrs.array_acct_attr_code(29) := 'OVERRIDE_ACCTD_AMT_FLAG';
   l_rec_acct_attrs.array_char_value(29)  := p_source_46;
   l_rec_acct_attrs.array_acct_attr_code(30) := 'PARTY_TYPE';
   l_rec_acct_attrs.array_char_value(30)  := p_source_49;
   l_rec_acct_attrs.array_acct_attr_code(31) := 'REVERSED_DISTRIBUTION_ID1';
   l_rec_acct_attrs.array_num_value(31)  :=  to_char(p_source_50);
   l_rec_acct_attrs.array_acct_attr_code(32) := 'REVERSED_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(32)  := p_source_21;
   l_rec_acct_attrs.array_acct_attr_code(33) := 'STATISTICAL_AMOUNT';
   l_rec_acct_attrs.array_num_value(33)  := p_source_51;
   l_rec_acct_attrs.array_acct_attr_code(34) := 'TAX_LINE_REF_ID';
   l_rec_acct_attrs.array_num_value(34)  := p_source_52;
   l_rec_acct_attrs.array_acct_attr_code(35) := 'TAX_REC_NREC_DIST_REF_ID';
   l_rec_acct_attrs.array_num_value(35)  := p_source_53;
   l_rec_acct_attrs.array_acct_attr_code(36) := 'TAX_SUMMARY_LINE_REF_ID';
   l_rec_acct_attrs.array_num_value(36)  := p_source_54;
   l_rec_acct_attrs.array_acct_attr_code(37) := 'UPG_CR_ENC_TYPE_ID';
   l_rec_acct_attrs.array_num_value(37)  := p_source_55;
   l_rec_acct_attrs.array_acct_attr_code(38) := 'UPG_DR_ENC_TYPE_ID';
   l_rec_acct_attrs.array_num_value(38)  := p_source_56;

   XLA_AE_LINES_PKG.SetLineAcctAttrs(l_rec_acct_attrs);
   p_gain_or_loss_ref  := XLA_AE_LINES_PKG.g_rec_lines.array_gain_or_loss_ref(XLA_AE_LINES_PKG.g_LineNumber);

   ---------------------------------------------------------------------------------------------------------------
   -- 4336173 -- assign Business Flow Class (replace code in xla_ae_lines_pkg.Business_Flow_Validation)
   ---------------------------------------------------------------------------------------------------------------
   XLA_AE_LINES_PKG.g_rec_lines.array_business_class_code(XLA_AE_LINES_PKG.g_LineNumber) := l_bflow_class_code;

   l_actual_upg_option  := XLA_AE_LINES_PKG.g_rec_lines.array_actual_upg_option(XLA_AE_LINES_PKG.g_LineNumber);
   l_enc_upg_option     := XLA_AE_LINES_PKG.g_rec_lines.array_enc_upg_option(XLA_AE_LINES_PKG.g_LineNumber);

   IF xla_accounting_cache_pkg.GetValueChar
         (p_source_code         => 'LEDGER_CATEGORY_CODE'
         ,p_target_ledger_id    => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id) IN ('PRIMARY','ALC')
   AND l_bflow_method_code = 'PRIOR_ENTRY'
--   AND (l_actual_upg_option = 'Y' OR l_enc_upg_option = 'Y') Bug 4922099
   AND ( (NVL(l_actual_upg_option, 'N') IN ('Y', 'O')) OR
         (NVL(l_enc_upg_option, 'N') IN ('Y', 'O'))
       )
   THEN
         xla_ae_lines_pkg.BflowUpgEntry
           (p_business_method_code    => l_bflow_method_code
           ,p_business_class_code     => l_bflow_class_code
           ,p_balance_type            => l_balance_type_code);
   ELSE
      NULL;
XLA_AE_LINES_PKG.business_flow_validation(
                                p_business_method_code     => l_bflow_method_code
                               ,p_business_class_code      => l_bflow_class_code
                               ,p_inherit_description_flag => l_inherit_desc_flag);
   END IF;

   --
   -- call analytical criteria
   --
   -- Inherited Analytical Criteria for business flow method of Prior Entry.
   --
   -- call description
   --
   -- No description or it is inherited.
   --
   -- call ADRs
   -- Bug 4922099
   --
   IF ( (l_bflow_method_code <> 'PRIOR_ENTRY') OR
        (NVL(l_actual_upg_option, 'N') = 'O') OR
        (NVL(l_enc_upg_option, 'N') = 'O')
      )
   THEN
   NULL;
   --
   --
   
   --
   --
   END IF;
   --
   -- Bug 4922099
   IF ( ( (NVL(l_actual_upg_option, 'N') = 'O') OR
          (NVL(l_enc_upg_option, 'N') = 'O')
        ) AND
        (l_bflow_method_code = 'PRIOR_ENTRY')
      )
   THEN
      IF
      --
      1 = 1
      --
      THEN
      xla_accounting_err_pkg.build_message
                                    (p_appli_s_name            => 'XLA'
                                    ,p_msg_name                => 'XLA_UPG_OVERRIDE_ADR_UNDEFINED'
                                    ,p_token_1                 => 'LINE_NUMBER'
                                    ,p_value_1                 => XLA_AE_LINES_PKG.g_LineNumber
                                    ,p_token_2                 => 'LINE_TYPE_NAME'
                                    ,p_value_2                 => XLA_AE_SOURCES_PKG.GetComponentName (
                                                                             l_component_type
                                                                            ,l_component_code
                                                                            ,l_component_type_code
                                                                            ,l_component_appl_id
                                                                            ,l_amb_context_code
                                                                            ,l_entity_code
                                                                            ,l_event_class_code
                                                                           )
                                    ,p_token_3                 => 'OWNER'
                                    ,p_value_3                 => xla_lookups_pkg.get_meaning(
                                                                          p_lookup_type     => 'XLA_OWNER_TYPE'
                                                                          ,p_lookup_code    => l_component_type_code
                                                                         )
                                    ,p_token_4                 => 'PRODUCT_NAME'
                                    ,p_value_4                 => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.application_name
                                    ,p_entity_id               => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.entity_id
                                    ,p_event_id                => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.event_id
                                    ,p_ledger_id               => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id
                                    ,p_ae_header_id            =>  NULL
                                       );

        IF (C_LEVEL_ERROR>= g_log_level) THEN
                 trace
                      (p_msg      => 'ERROR: XLA_UPG_OVERRIDE_ADR_UNDEFINED'
                      ,p_level    => C_LEVEL_ERROR
                      ,p_module   => l_log_module);
        END IF;
      END IF;
   END IF;
   --
   --
   ------------------------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- NOTE: XLA_AE_LINES_PKG.ValidateCurrentLine should NOT be generated if business flow method is
   -- Prior Entry.  Currently, the following code is always generated.
   ------------------------------------------------------------------------------------------------
   -- No ValidateCurrentLine for business flow method of Prior Entry

   ------------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- Populated credit and debit amounts -- Need to generate this within IF <condition>
   ------------------------------------------------------------------------------------
   XLA_AE_LINES_PKG.SetDebitCreditAmounts;

   ----------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- Update journal entry status -- Need to generate this within IF <condition>
   ----------------------------------------------------------------------------------
   XLA_AE_JOURNAL_ENTRY_PKG.UpdateJournalEntryStatus
         (p_hdr_idx => g_array_event(p_event_id).array_value_num('header_index')
         ,p_balance_type_code => l_balance_type_code
         );

   -------------------------------------------------------------------------------------------
   -- 4262811 - Generate the Accrual Reversal lines
   -------------------------------------------------------------------------------------------
   BEGIN
      l_acc_rev_flag := XLA_AE_HEADER_PKG.g_rec_header_new.array_accrual_reversal_flag
                              (g_array_event(p_event_id).array_value_num('header_index'));
      IF l_acc_rev_flag IS NULL THEN
         l_acc_rev_flag := 'N';
      END IF;
   EXCEPTION
      WHEN OTHERS THEN
         l_acc_rev_flag := 'N';
   END;
   --
   IF (l_acc_rev_flag = 'Y') THEN

       -- 4645092  ------------------------------------------------------------------------------
       -- To allow MPA report to determine if it should generate report process
       XLA_ACCOUNTING_PKG.g_mpa_accrual_exists := 'Y';
       ------------------------------------------------------------------------------------------

       l_accrual_line_num := XLA_AE_LINES_PKG.g_LineNumber;
       XLA_AE_LINES_PKG.CopyLineInfo(l_accrual_line_num);
   -- added call to set_ccid to execute mapping  for secondary accrual reversal entries bug 7444204
   -- call ADRs
   -- Bug 4922099
   --
   IF ( (l_bflow_method_code <> 'PRIOR_ENTRY') OR
        (NVL(l_actual_upg_option, 'N') = 'O') OR
        (NVL(l_enc_upg_option, 'N') = 'O')
      )
   THEN
   NULL;
   --
   --
   
   --
   --
   END IF;

       --
       -- Update the line information that should be overwritten
       --
       XLA_AE_LINES_PKG.set_ae_header_id(p_ae_header_id => p_event_id ,
                                         p_header_num   => 1);
       XLA_AE_LINES_PKG.g_rec_lines.array_header_num(XLA_AE_LINES_PKG.g_LineNumber)  :=1;

       XLA_AE_LINES_PKG.g_rec_lines.array_business_class_code(XLA_AE_LINES_PKG.g_LineNumber) := NULL; -- 4669271

       IF l_bflow_method_code <> 'NONE' THEN  -- 4655713b
          XLA_AE_LINES_PKG.g_rec_lines.array_reversal_code(XLA_AE_LINES_PKG.g_LineNumber) := CONCAT('MPA_',l_bflow_method_code);
       END IF;

      --
      -- Depending on the Reversal Method setup, do a switch side or changes sign for the amounts
      --
      IF (XLA_AE_JOURNAL_ENTRY_PKG.g_cache_ledgers_info.ledger_reversal_option = 'SIDE') THEN
          XLA_AE_LINES_PKG.g_rec_lines.array_natural_side_code(XLA_AE_LINES_PKG.g_LineNumber) :=  l_acc_rev_natural_side_code;
      ELSE
          ---------------------------------------------------------------------------------------------------
          -- 4262811a Switch Sign
          ---------------------------------------------------------------------------------------------------
          XLA_AE_LINES_PKG.g_rec_lines.array_switch_side_flag(XLA_AE_LINES_PKG.g_LineNumber) := 'N';  -- 5052518
          XLA_AE_LINES_PKG.g_rec_lines.array_ledger_amount(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_ledger_amount(XLA_AE_LINES_PKG.g_LineNumber) * -1;
          XLA_AE_LINES_PKG.g_rec_lines.array_entered_amount(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_entered_amount(XLA_AE_LINES_PKG.g_LineNumber) * -1;
          -- 5132302
          XLA_AE_LINES_PKG.g_rec_lines.array_bflow_applied_to_amt(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_bflow_applied_to_amt(XLA_AE_LINES_PKG.g_LineNumber) * -1;

      END IF;

      -- 4955764
      XLA_AE_LINES_PKG.g_rec_lines.array_gl_date(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_HEADER_PKG.g_rec_header_new.array_gl_date(g_array_event(p_event_id).array_value_num('acc_rev_header_index'));


      XLA_AE_LINES_PKG.ValidateCurrentLine;
      XLA_AE_LINES_PKG.SetDebitCreditAmounts;

      XLA_AE_JOURNAL_ENTRY_PKG.UpdateJournalEntryStatus
               (p_hdr_idx           => g_array_event(p_event_id).array_value_num('acc_rev_header_index')
               ,p_balance_type_code => l_balance_type_code);

   END IF;

   -----------------------------------------------------------------------------------------
   -- 4262811 Multiperiod Accounting
   -----------------------------------------------------------------------------------------
     -- No MPA option is assigned.


END IF;
END IF;
--

--
IF (C_LEVEL_PROCEDURE >= g_log_level) THEN
   trace
      (p_msg      => 'END of AcctLineType_18'
      ,p_level    => C_LEVEL_PROCEDURE
      ,p_module   => l_log_module);
END IF;
--
EXCEPTION
  WHEN xla_exceptions_pkg.application_exception THEN
      RAISE;
  WHEN OTHERS THEN
       xla_exceptions_pkg.raise_message
           (p_location => 'XLA_00200_AAD_S_000010_BC_PKG.AcctLineType_18');
END AcctLineType_18;
--

---------------------------------------
--
-- PRIVATE FUNCTION
--         AcctLineType_19
--
---------------------------------------
PROCEDURE AcctLineType_19 (
  p_application_id        IN NUMBER
 ,p_event_id              IN NUMBER
 ,p_calculate_acctd_flag  IN VARCHAR2
 ,p_calculate_g_l_flag    IN VARCHAR2
 ,p_actual_flag           IN OUT VARCHAR2
 ,p_balance_type_code     OUT VARCHAR2
 ,p_gain_or_loss_ref      OUT VARCHAR2
 
--Invoice Distribution Type
 , p_source_15            IN VARCHAR2
 , p_source_15_meaning    IN VARCHAR2
--Accrue on Receipt Option
 , p_source_18            IN VARCHAR2
 , p_source_18_meaning    IN VARCHAR2
--Accounting Reversal Indicator
 , p_source_19            IN VARCHAR2
--Distribution Link Type
 , p_source_21            IN VARCHAR2
--Allocation to Main Distribution Identifier
 , p_source_23            IN NUMBER
--Invoice Identifier
 , p_source_24            IN NUMBER
--Invoice Distribution Identifier
 , p_source_30            IN NUMBER
--Payables Encumbrance Upgrade Credit Account
 , p_source_31            IN NUMBER
--Payables Encumbrance Upgrade Credit Amount
 , p_source_32            IN NUMBER
--Invoice Currency Code
 , p_source_33            IN VARCHAR2
--Payables Encumbrance Upgrade Credit Base Amount
 , p_source_34            IN NUMBER
--Payables Encumbrance Upgrade Debit Account
 , p_source_35            IN NUMBER
--Payables Encumbrance Upgrade Debit Amount
 , p_source_36            IN NUMBER
--Payables Encumbrance Upgrade Debit Base Amount
 , p_source_37            IN NUMBER
--Payables Encumbrance Upgrade Option
 , p_source_38            IN VARCHAR2
--Deferred Accounting End Date
 , p_source_43            IN DATE
--Deferred Accounting Option
 , p_source_44            IN VARCHAR2
--Deferred Accounting Start Date
 , p_source_45            IN DATE
--Override Accounted Amount Indicator
 , p_source_46            IN VARCHAR2
 , p_source_46_meaning    IN VARCHAR2
--Third Party Type
 , p_source_49            IN VARCHAR2
--Parent Reversal Identifier
 , p_source_50            IN NUMBER
--Invoice Distribution Statistical Amount
 , p_source_51            IN NUMBER
--Invoice Distribution Tax Line Identifier
 , p_source_52            IN NUMBER
--Invoice Distribution Tax Distribution Identifier from Tax
 , p_source_53            IN NUMBER
--Invoice Distribution Summary Tax Line Identifier
 , p_source_54            IN NUMBER
--Payables Upgrade Credit Encumbrance Type Identifier
 , p_source_55            IN NUMBER
--Payables Upgrade Debit Encumbrance Type Identifier
 , p_source_56            IN NUMBER
--Purchase Order Distribution Identifier
 , p_source_58            IN NUMBER
--Business Flow Purchasing Application Identifier
 , p_source_60            IN NUMBER
--Business Flow Purchase Order Distribution Type
 , p_source_61            IN VARCHAR2
--Business Flow Purchase Order Entity Code
 , p_source_62            IN VARCHAR2
--Business Flow Purchase Order Distribution Identifier
 , p_source_63            IN NUMBER
--Business Flow Purchasing Document Identifier
 , p_source_64            IN NUMBER
--Invoice Distribution Encumbrance Amount
 , p_source_65            IN NUMBER
--Invoice Distribution Encumbrance Ledger Amount
 , p_source_66            IN NUMBER
)
IS

l_component_type              VARCHAR2(80);
l_component_code              VARCHAR2(30);
l_component_type_code         VARCHAR2(1);
l_component_appl_id           INTEGER;
l_amb_context_code            VARCHAR2(30);
l_entity_code                 VARCHAR2(30);
l_event_class_code            VARCHAR2(30);
l_ae_header_id                NUMBER;
l_event_type_code             VARCHAR2(30);
l_line_definition_code        VARCHAR2(30);
l_line_definition_owner_code  VARCHAR2(1);
--
-- adr variables
l_segment                     VARCHAR2(30);
l_ccid                        NUMBER;
l_adr_transaction_coa_id      NUMBER;
l_adr_accounting_coa_id       NUMBER;
l_adr_flexfield_segment_code  VARCHAR2(30);
l_adr_flex_value_set_id       NUMBER;
l_adr_value_type_code         VARCHAR2(30);
l_adr_value_combination_id    NUMBER;
l_adr_value_segment_code      VARCHAR2(30);

l_bflow_method_code           VARCHAR2(30);  -- 4219869 Business Flow
l_bflow_class_code            VARCHAR2(30);  -- 4219869 Business Flow
l_inherit_desc_flag           VARCHAR2(1);   -- 4219869 Business Flow
l_budgetary_control_flag      VARCHAR2(1);   -- 4458381 Public Sector Enh

-- 4262811 Variables ------------------------------------------------------------------------------------------
l_entered_amt_idx             NUMBER;
l_accted_amt_idx              NUMBER;
l_acc_rev_flag                VARCHAR2(1);
l_accrual_line_num            NUMBER;
l_tmp_amt                     NUMBER;
l_acc_rev_natural_side_code   VARCHAR2(1);

l_num_entries                 NUMBER;
l_gl_dates                    xla_ae_journal_entry_pkg.t_array_date;
l_accted_amts                 xla_ae_journal_entry_pkg.t_array_num;
l_entered_amts                xla_ae_journal_entry_pkg.t_array_num;
l_period_names                xla_ae_journal_entry_pkg.t_array_V15L;
l_recog_line_1                NUMBER;
l_recog_line_2                NUMBER;

l_bflow_applied_to_amt_idx    NUMBER;                                -- 5132302
l_bflow_applied_to_amt        NUMBER;                                -- 5132302
l_bflow_applied_to_amts       xla_ae_journal_entry_pkg.t_array_num;  -- 5132302

l_event_id                    NUMBER;  -- To handle MPA header Description: xla_ae_header_pkg.SetHdrDescription

--l_rounding_ccy                VARCHAR2(15); -- To handle MPA rounding  4262811b
l_same_currency               BOOLEAN;        -- To handle MPA rounding  4262811b

---------------------------------------------------------------------------------------------------------------


--
-- bulk performance
--
l_balance_type_code           VARCHAR2(1);
l_rec_acct_attrs              XLA_AE_LINES_PKG.t_rec_acct_attrs;
l_log_module                  VARCHAR2(240);

--
-- Upgrade strategy
--
l_actual_upg_option           VARCHAR2(1);
l_enc_upg_option           VARCHAR2(1);

--
BEGIN
--
IF g_log_enabled THEN
      l_log_module := C_DEFAULT_MODULE||'.AcctLineType_19';
END IF;
--
IF (C_LEVEL_PROCEDURE >= g_log_level) THEN

      trace
         (p_msg      => 'BEGIN of AcctLineType_19'
         ,p_level    => C_LEVEL_PROCEDURE
         ,p_module   => l_log_module);

END IF;
--
l_component_type             := 'AMB_JLT';
l_component_code             := 'AP_CM_PO_ENCUMBRANCE';
l_component_type_code        := 'S';
l_component_appl_id          :=  200;
l_amb_context_code           := 'DEFAULT';
l_entity_code                := 'AP_INVOICES';
l_event_class_code           := 'CREDIT MEMOS';
l_event_type_code            := 'CREDIT MEMOS_ALL';
l_line_definition_owner_code := 'S';
l_line_definition_code       := 'ENC_CM_ALL';
--
l_balance_type_code          := 'E';
l_segment                     := NULL;
l_ccid                        := NULL;
l_adr_transaction_coa_id      := NULL;
l_adr_accounting_coa_id       := NULL;
l_adr_flexfield_segment_code  := NULL;
l_adr_flex_value_set_id       := NULL;
l_adr_value_type_code         := NULL;
l_adr_value_combination_id    := NULL;
l_adr_value_segment_code      := NULL;

l_bflow_method_code          := 'PRIOR_ENTRY';   -- 4219869 Business Flow
l_bflow_class_code           := 'PO_ENCUMBRANCE';    -- 4219869 Business Flow
l_inherit_desc_flag          := 'Y';   -- 4219869 Business Flow
l_budgetary_control_flag     := 'Y';

l_bflow_applied_to_amt_idx   := NULL; -- 5132302
l_bflow_applied_to_amt       := NULL; -- 5132302
l_entered_amt_idx            := NULL;          -- 4262811
l_accted_amt_idx             := NULL;          -- 4262811
l_acc_rev_flag               := NULL;          -- 4262811
l_accrual_line_num           := NULL;          -- 4262811
l_tmp_amt                    := NULL;          -- 4262811
--
 
IF XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id = XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.ledger_id OR
    l_balance_type_code <> 'B' THEN
IF p_source_58 IS NOT NULL AND 
(NVL(p_source_15,'
') =  'ACCRUAL' OR 
NVL(p_source_15,'
') =  'ITEM') AND 
NVL(p_source_18,'
') <>  'Y'
 THEN 

   --
   XLA_AE_LINES_PKG.SetNewLine;

   p_balance_type_code          := l_balance_type_code;
   -- set the flag so later we will know whether the gain loss line needs to be created
   
   IF(l_balance_type_code = 'A' and p_actual_flag is null) THEN
     p_actual_flag :='A';
   END IF;

   --
   -- bulk performance
   --
   XLA_AE_LINES_PKG.set_ae_header_id (p_ae_header_id => p_event_id ,
                                      p_header_num   => 0); -- 4262811
   --
   -- set accounting line options
   --
   l_ae_header_id:= xla_ae_lines_pkg.SetAcctLineOption(
           p_natural_side_code          => 'C'
         , p_gain_or_loss_flag          => 'N'
         , p_gl_transfer_mode_code      => 'S'
         , p_acct_entry_type_code       => 'E'
         , p_switch_side_flag           => 'Y'
         , p_merge_duplicate_code       => 'N'
         );
   --
   l_acc_rev_natural_side_code := 'D';  -- 4262811
   -- 
   --
   -- set accounting line type info
   --
   xla_ae_lines_pkg.SetAcctLineType
      (p_component_type             => l_component_type
      ,p_event_type_code            => l_event_type_code
      ,p_line_definition_owner_code => l_line_definition_owner_code
      ,p_line_definition_code       => l_line_definition_code
      ,p_accounting_line_code       => l_component_code
      ,p_accounting_line_type_code  => l_component_type_code
      ,p_accounting_line_appl_id    => l_component_appl_id
      ,p_amb_context_code           => l_amb_context_code
      ,p_entity_code                => l_entity_code
      ,p_event_class_code           => l_event_class_code);
   --
   -- set accounting class
   --
   xla_ae_lines_pkg.SetAcctClass(
           p_accounting_class_code  => 'PURCHASE_ORDER'
         , p_ae_header_id           => l_ae_header_id
         );

   --
   -- set rounding class
   --
   XLA_AE_LINES_PKG.g_rec_lines.array_rounding_class(XLA_AE_LINES_PKG.g_LineNumber) :=
                      'PURCHASE_ORDER';

   --
   xla_ae_lines_pkg.g_rec_lines.array_calculate_acctd_flag(xla_ae_lines_pkg.g_LineNumber) := p_calculate_acctd_flag;
   xla_ae_lines_pkg.g_rec_lines.array_calculate_g_l_flag(xla_ae_lines_pkg.g_LineNumber) := p_calculate_g_l_flag;
   --
   -- bulk performance
   --
   XLA_AE_LINES_PKG.g_rec_lines.array_balance_type_code(XLA_AE_LINES_PKG.g_LineNumber) := l_balance_type_code;

   XLA_AE_LINES_PKG.g_rec_lines.array_ledger_id(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id;

   -- 4955764
   XLA_AE_LINES_PKG.g_rec_lines.array_gl_date(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_HEADER_PKG.g_rec_header_new.array_gl_date(g_array_event(p_event_id).array_value_num('header_index'));

   -- 4458381 Public Sector Enh
   
   --
   -- set accounting attributes for the line type
   --
   l_entered_amt_idx := 23;
   l_accted_amt_idx  := 25;
   l_bflow_applied_to_amt_idx  := NULL;  -- 5132302
   l_rec_acct_attrs.array_acct_attr_code(1) := 'ACCOUNTING_REVERSAL_OPTION';
   l_rec_acct_attrs.array_char_value(1)  := p_source_19;
   l_rec_acct_attrs.array_acct_attr_code(2) := 'ALLOC_TO_APPLICATION_ID';
   l_rec_acct_attrs.array_num_value(2)  := 
xla_ae_sources_pkg.GetSystemSourceNum(
   p_source_code           => 'XLA_EVENT_APPL_ID'
 , p_source_type_code      => 'Y'
 , p_source_application_id =>  602
);
   l_rec_acct_attrs.array_acct_attr_code(3) := 'ALLOC_TO_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(3)  := p_source_21;
   l_rec_acct_attrs.array_acct_attr_code(4) := 'ALLOC_TO_ENTITY_CODE';
   l_rec_acct_attrs.array_char_value(4)  := 
xla_ae_sources_pkg.GetSystemSourceChar(
   p_source_code           => 'XLA_ENTITY_CODE'
 , p_source_type_code      => 'Y'
 , p_source_application_id =>  602
);
   l_rec_acct_attrs.array_acct_attr_code(5) := 'ALLOC_TO_FIRST_DIST_ID';
   l_rec_acct_attrs.array_num_value(5)  :=  to_char(p_source_23);
   l_rec_acct_attrs.array_acct_attr_code(6) := 'ALLOC_TO_FIRST_SYS_TRAN_ID';
   l_rec_acct_attrs.array_num_value(6)  :=  to_char(p_source_24);
   l_rec_acct_attrs.array_acct_attr_code(7) := 'APPLIED_TO_APPLICATION_ID';
   l_rec_acct_attrs.array_num_value(7)  := p_source_60;
   l_rec_acct_attrs.array_acct_attr_code(8) := 'APPLIED_TO_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(8)  := p_source_61;
   l_rec_acct_attrs.array_acct_attr_code(9) := 'APPLIED_TO_ENTITY_CODE';
   l_rec_acct_attrs.array_char_value(9)  := p_source_62;
   l_rec_acct_attrs.array_acct_attr_code(10) := 'APPLIED_TO_FIRST_DIST_ID';
   l_rec_acct_attrs.array_num_value(10)  :=  to_char(p_source_63);
   l_rec_acct_attrs.array_acct_attr_code(11) := 'APPLIED_TO_FIRST_SYS_TRAN_ID';
   l_rec_acct_attrs.array_num_value(11)  :=  to_char(p_source_64);
   l_rec_acct_attrs.array_acct_attr_code(12) := 'DISTRIBUTION_IDENTIFIER_1';
   l_rec_acct_attrs.array_num_value(12)  :=  to_char(p_source_30);
   l_rec_acct_attrs.array_acct_attr_code(13) := 'DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(13)  := p_source_21;
   l_rec_acct_attrs.array_acct_attr_code(14) := 'ENC_UPG_CR_CCID';
   l_rec_acct_attrs.array_num_value(14)  := p_source_31;
   l_rec_acct_attrs.array_acct_attr_code(15) := 'ENC_UPG_CR_ENTERED_AMT';
   l_rec_acct_attrs.array_num_value(15)  := p_source_32;
   l_rec_acct_attrs.array_acct_attr_code(16) := 'ENC_UPG_CR_ENTERED_CURR';
   l_rec_acct_attrs.array_char_value(16)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(17) := 'ENC_UPG_CR_LEDGER_AMT';
   l_rec_acct_attrs.array_num_value(17)  := p_source_34;
   l_rec_acct_attrs.array_acct_attr_code(18) := 'ENC_UPG_DR_CCID';
   l_rec_acct_attrs.array_num_value(18)  := p_source_35;
   l_rec_acct_attrs.array_acct_attr_code(19) := 'ENC_UPG_DR_ENTERED_AMT';
   l_rec_acct_attrs.array_num_value(19)  := p_source_36;
   l_rec_acct_attrs.array_acct_attr_code(20) := 'ENC_UPG_DR_ENTERED_CURR';
   l_rec_acct_attrs.array_char_value(20)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(21) := 'ENC_UPG_DR_LEDGER_AMT';
   l_rec_acct_attrs.array_num_value(21)  := p_source_37;
   l_rec_acct_attrs.array_acct_attr_code(22) := 'ENC_UPG_OPTION';
   l_rec_acct_attrs.array_char_value(22)  := p_source_38;
   l_rec_acct_attrs.array_acct_attr_code(23) := 'ENTERED_CURRENCY_AMOUNT';
   l_rec_acct_attrs.array_num_value(23)  := p_source_65;
   l_rec_acct_attrs.array_acct_attr_code(24) := 'ENTERED_CURRENCY_CODE';
   l_rec_acct_attrs.array_char_value(24)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(25) := 'LEDGER_AMOUNT';
   l_rec_acct_attrs.array_num_value(25)  := p_source_66;
   l_rec_acct_attrs.array_acct_attr_code(26) := 'MULTIPERIOD_END_DATE';
   l_rec_acct_attrs.array_date_value(26)  := p_source_43;
   l_rec_acct_attrs.array_acct_attr_code(27) := 'MULTIPERIOD_OPTION';
   l_rec_acct_attrs.array_char_value(27)  := p_source_44;
   l_rec_acct_attrs.array_acct_attr_code(28) := 'MULTIPERIOD_START_DATE';
   l_rec_acct_attrs.array_date_value(28)  := p_source_45;
   l_rec_acct_attrs.array_acct_attr_code(29) := 'OVERRIDE_ACCTD_AMT_FLAG';
   l_rec_acct_attrs.array_char_value(29)  := p_source_46;
   l_rec_acct_attrs.array_acct_attr_code(30) := 'PARTY_TYPE';
   l_rec_acct_attrs.array_char_value(30)  := p_source_49;
   l_rec_acct_attrs.array_acct_attr_code(31) := 'REVERSED_DISTRIBUTION_ID1';
   l_rec_acct_attrs.array_num_value(31)  :=  to_char(p_source_50);
   l_rec_acct_attrs.array_acct_attr_code(32) := 'REVERSED_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(32)  := p_source_21;
   l_rec_acct_attrs.array_acct_attr_code(33) := 'STATISTICAL_AMOUNT';
   l_rec_acct_attrs.array_num_value(33)  := p_source_51;
   l_rec_acct_attrs.array_acct_attr_code(34) := 'TAX_LINE_REF_ID';
   l_rec_acct_attrs.array_num_value(34)  := p_source_52;
   l_rec_acct_attrs.array_acct_attr_code(35) := 'TAX_REC_NREC_DIST_REF_ID';
   l_rec_acct_attrs.array_num_value(35)  := p_source_53;
   l_rec_acct_attrs.array_acct_attr_code(36) := 'TAX_SUMMARY_LINE_REF_ID';
   l_rec_acct_attrs.array_num_value(36)  := p_source_54;
   l_rec_acct_attrs.array_acct_attr_code(37) := 'UPG_CR_ENC_TYPE_ID';
   l_rec_acct_attrs.array_num_value(37)  := p_source_55;
   l_rec_acct_attrs.array_acct_attr_code(38) := 'UPG_DR_ENC_TYPE_ID';
   l_rec_acct_attrs.array_num_value(38)  := p_source_56;

   XLA_AE_LINES_PKG.SetLineAcctAttrs(l_rec_acct_attrs);
   p_gain_or_loss_ref  := XLA_AE_LINES_PKG.g_rec_lines.array_gain_or_loss_ref(XLA_AE_LINES_PKG.g_LineNumber);

   ---------------------------------------------------------------------------------------------------------------
   -- 4336173 -- assign Business Flow Class (replace code in xla_ae_lines_pkg.Business_Flow_Validation)
   ---------------------------------------------------------------------------------------------------------------
   XLA_AE_LINES_PKG.g_rec_lines.array_business_class_code(XLA_AE_LINES_PKG.g_LineNumber) := l_bflow_class_code;

   l_actual_upg_option  := XLA_AE_LINES_PKG.g_rec_lines.array_actual_upg_option(XLA_AE_LINES_PKG.g_LineNumber);
   l_enc_upg_option     := XLA_AE_LINES_PKG.g_rec_lines.array_enc_upg_option(XLA_AE_LINES_PKG.g_LineNumber);

   IF xla_accounting_cache_pkg.GetValueChar
         (p_source_code         => 'LEDGER_CATEGORY_CODE'
         ,p_target_ledger_id    => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id) IN ('PRIMARY','ALC')
   AND l_bflow_method_code = 'PRIOR_ENTRY'
--   AND (l_actual_upg_option = 'Y' OR l_enc_upg_option = 'Y') Bug 4922099
   AND ( (NVL(l_actual_upg_option, 'N') IN ('Y', 'O')) OR
         (NVL(l_enc_upg_option, 'N') IN ('Y', 'O'))
       )
   THEN
         xla_ae_lines_pkg.BflowUpgEntry
           (p_business_method_code    => l_bflow_method_code
           ,p_business_class_code     => l_bflow_class_code
           ,p_balance_type            => l_balance_type_code);
   ELSE
      NULL;
XLA_AE_LINES_PKG.business_flow_validation(
                                p_business_method_code     => l_bflow_method_code
                               ,p_business_class_code      => l_bflow_class_code
                               ,p_inherit_description_flag => l_inherit_desc_flag);
   END IF;

   --
   -- call analytical criteria
   --
   -- Inherited Analytical Criteria for business flow method of Prior Entry.
   --
   -- call description
   --
   -- No description or it is inherited.
   --
   -- call ADRs
   -- Bug 4922099
   --
   IF ( (l_bflow_method_code <> 'PRIOR_ENTRY') OR
        (NVL(l_actual_upg_option, 'N') = 'O') OR
        (NVL(l_enc_upg_option, 'N') = 'O')
      )
   THEN
   NULL;
   --
   --
   
   --
   --
   END IF;
   --
   -- Bug 4922099
   IF ( ( (NVL(l_actual_upg_option, 'N') = 'O') OR
          (NVL(l_enc_upg_option, 'N') = 'O')
        ) AND
        (l_bflow_method_code = 'PRIOR_ENTRY')
      )
   THEN
      IF
      --
      1 = 1
      --
      THEN
      xla_accounting_err_pkg.build_message
                                    (p_appli_s_name            => 'XLA'
                                    ,p_msg_name                => 'XLA_UPG_OVERRIDE_ADR_UNDEFINED'
                                    ,p_token_1                 => 'LINE_NUMBER'
                                    ,p_value_1                 => XLA_AE_LINES_PKG.g_LineNumber
                                    ,p_token_2                 => 'LINE_TYPE_NAME'
                                    ,p_value_2                 => XLA_AE_SOURCES_PKG.GetComponentName (
                                                                             l_component_type
                                                                            ,l_component_code
                                                                            ,l_component_type_code
                                                                            ,l_component_appl_id
                                                                            ,l_amb_context_code
                                                                            ,l_entity_code
                                                                            ,l_event_class_code
                                                                           )
                                    ,p_token_3                 => 'OWNER'
                                    ,p_value_3                 => xla_lookups_pkg.get_meaning(
                                                                          p_lookup_type     => 'XLA_OWNER_TYPE'
                                                                          ,p_lookup_code    => l_component_type_code
                                                                         )
                                    ,p_token_4                 => 'PRODUCT_NAME'
                                    ,p_value_4                 => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.application_name
                                    ,p_entity_id               => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.entity_id
                                    ,p_event_id                => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.event_id
                                    ,p_ledger_id               => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id
                                    ,p_ae_header_id            =>  NULL
                                       );

        IF (C_LEVEL_ERROR>= g_log_level) THEN
                 trace
                      (p_msg      => 'ERROR: XLA_UPG_OVERRIDE_ADR_UNDEFINED'
                      ,p_level    => C_LEVEL_ERROR
                      ,p_module   => l_log_module);
        END IF;
      END IF;
   END IF;
   --
   --
   ------------------------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- NOTE: XLA_AE_LINES_PKG.ValidateCurrentLine should NOT be generated if business flow method is
   -- Prior Entry.  Currently, the following code is always generated.
   ------------------------------------------------------------------------------------------------
   -- No ValidateCurrentLine for business flow method of Prior Entry

   ------------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- Populated credit and debit amounts -- Need to generate this within IF <condition>
   ------------------------------------------------------------------------------------
   XLA_AE_LINES_PKG.SetDebitCreditAmounts;

   ----------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- Update journal entry status -- Need to generate this within IF <condition>
   ----------------------------------------------------------------------------------
   XLA_AE_JOURNAL_ENTRY_PKG.UpdateJournalEntryStatus
         (p_hdr_idx => g_array_event(p_event_id).array_value_num('header_index')
         ,p_balance_type_code => l_balance_type_code
         );

   -------------------------------------------------------------------------------------------
   -- 4262811 - Generate the Accrual Reversal lines
   -------------------------------------------------------------------------------------------
   BEGIN
      l_acc_rev_flag := XLA_AE_HEADER_PKG.g_rec_header_new.array_accrual_reversal_flag
                              (g_array_event(p_event_id).array_value_num('header_index'));
      IF l_acc_rev_flag IS NULL THEN
         l_acc_rev_flag := 'N';
      END IF;
   EXCEPTION
      WHEN OTHERS THEN
         l_acc_rev_flag := 'N';
   END;
   --
   IF (l_acc_rev_flag = 'Y') THEN

       -- 4645092  ------------------------------------------------------------------------------
       -- To allow MPA report to determine if it should generate report process
       XLA_ACCOUNTING_PKG.g_mpa_accrual_exists := 'Y';
       ------------------------------------------------------------------------------------------

       l_accrual_line_num := XLA_AE_LINES_PKG.g_LineNumber;
       XLA_AE_LINES_PKG.CopyLineInfo(l_accrual_line_num);
   -- added call to set_ccid to execute mapping  for secondary accrual reversal entries bug 7444204
   -- call ADRs
   -- Bug 4922099
   --
   IF ( (l_bflow_method_code <> 'PRIOR_ENTRY') OR
        (NVL(l_actual_upg_option, 'N') = 'O') OR
        (NVL(l_enc_upg_option, 'N') = 'O')
      )
   THEN
   NULL;
   --
   --
   
   --
   --
   END IF;

       --
       -- Update the line information that should be overwritten
       --
       XLA_AE_LINES_PKG.set_ae_header_id(p_ae_header_id => p_event_id ,
                                         p_header_num   => 1);
       XLA_AE_LINES_PKG.g_rec_lines.array_header_num(XLA_AE_LINES_PKG.g_LineNumber)  :=1;

       XLA_AE_LINES_PKG.g_rec_lines.array_business_class_code(XLA_AE_LINES_PKG.g_LineNumber) := NULL; -- 4669271

       IF l_bflow_method_code <> 'NONE' THEN  -- 4655713b
          XLA_AE_LINES_PKG.g_rec_lines.array_reversal_code(XLA_AE_LINES_PKG.g_LineNumber) := CONCAT('MPA_',l_bflow_method_code);
       END IF;

      --
      -- Depending on the Reversal Method setup, do a switch side or changes sign for the amounts
      --
      IF (XLA_AE_JOURNAL_ENTRY_PKG.g_cache_ledgers_info.ledger_reversal_option = 'SIDE') THEN
          XLA_AE_LINES_PKG.g_rec_lines.array_natural_side_code(XLA_AE_LINES_PKG.g_LineNumber) :=  l_acc_rev_natural_side_code;
      ELSE
          ---------------------------------------------------------------------------------------------------
          -- 4262811a Switch Sign
          ---------------------------------------------------------------------------------------------------
          XLA_AE_LINES_PKG.g_rec_lines.array_switch_side_flag(XLA_AE_LINES_PKG.g_LineNumber) := 'N';  -- 5052518
          XLA_AE_LINES_PKG.g_rec_lines.array_ledger_amount(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_ledger_amount(XLA_AE_LINES_PKG.g_LineNumber) * -1;
          XLA_AE_LINES_PKG.g_rec_lines.array_entered_amount(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_entered_amount(XLA_AE_LINES_PKG.g_LineNumber) * -1;
          -- 5132302
          XLA_AE_LINES_PKG.g_rec_lines.array_bflow_applied_to_amt(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_bflow_applied_to_amt(XLA_AE_LINES_PKG.g_LineNumber) * -1;

      END IF;

      -- 4955764
      XLA_AE_LINES_PKG.g_rec_lines.array_gl_date(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_HEADER_PKG.g_rec_header_new.array_gl_date(g_array_event(p_event_id).array_value_num('acc_rev_header_index'));


      XLA_AE_LINES_PKG.ValidateCurrentLine;
      XLA_AE_LINES_PKG.SetDebitCreditAmounts;

      XLA_AE_JOURNAL_ENTRY_PKG.UpdateJournalEntryStatus
               (p_hdr_idx           => g_array_event(p_event_id).array_value_num('acc_rev_header_index')
               ,p_balance_type_code => l_balance_type_code);

   END IF;

   -----------------------------------------------------------------------------------------
   -- 4262811 Multiperiod Accounting
   -----------------------------------------------------------------------------------------
     -- No MPA option is assigned.


END IF;
END IF;
--

--
IF (C_LEVEL_PROCEDURE >= g_log_level) THEN
   trace
      (p_msg      => 'END of AcctLineType_19'
      ,p_level    => C_LEVEL_PROCEDURE
      ,p_module   => l_log_module);
END IF;
--
EXCEPTION
  WHEN xla_exceptions_pkg.application_exception THEN
      RAISE;
  WHEN OTHERS THEN
       xla_exceptions_pkg.raise_message
           (p_location => 'XLA_00200_AAD_S_000010_BC_PKG.AcctLineType_19');
END AcctLineType_19;
--

---------------------------------------
--
-- PRIVATE FUNCTION
--         AcctLineType_20
--
---------------------------------------
PROCEDURE AcctLineType_20 (
  p_application_id        IN NUMBER
 ,p_event_id              IN NUMBER
 ,p_calculate_acctd_flag  IN VARCHAR2
 ,p_calculate_g_l_flag    IN VARCHAR2
 ,p_actual_flag           IN OUT VARCHAR2
 ,p_balance_type_code     OUT VARCHAR2
 ,p_gain_or_loss_ref      OUT VARCHAR2
 
--Invoice Distribution Type
 , p_source_15            IN VARCHAR2
 , p_source_15_meaning    IN VARCHAR2
--Accrue on Receipt Option
 , p_source_18            IN VARCHAR2
 , p_source_18_meaning    IN VARCHAR2
--Accounting Reversal Indicator
 , p_source_19            IN VARCHAR2
--Distribution Link Type
 , p_source_21            IN VARCHAR2
--Allocation to Main Distribution Identifier
 , p_source_23            IN NUMBER
--Invoice Identifier
 , p_source_24            IN NUMBER
--Invoice Distribution Identifier
 , p_source_30            IN NUMBER
--Payables Encumbrance Upgrade Credit Account
 , p_source_31            IN NUMBER
--Payables Encumbrance Upgrade Credit Amount
 , p_source_32            IN NUMBER
--Invoice Currency Code
 , p_source_33            IN VARCHAR2
--Payables Encumbrance Upgrade Credit Base Amount
 , p_source_34            IN NUMBER
--Payables Encumbrance Upgrade Debit Account
 , p_source_35            IN NUMBER
--Payables Encumbrance Upgrade Debit Amount
 , p_source_36            IN NUMBER
--Payables Encumbrance Upgrade Debit Base Amount
 , p_source_37            IN NUMBER
--Payables Encumbrance Upgrade Option
 , p_source_38            IN VARCHAR2
--Deferred Accounting End Date
 , p_source_43            IN DATE
--Deferred Accounting Option
 , p_source_44            IN VARCHAR2
--Deferred Accounting Start Date
 , p_source_45            IN DATE
--Override Accounted Amount Indicator
 , p_source_46            IN VARCHAR2
 , p_source_46_meaning    IN VARCHAR2
--Third Party Type
 , p_source_49            IN VARCHAR2
--Parent Reversal Identifier
 , p_source_50            IN NUMBER
--Invoice Distribution Tax Line Identifier
 , p_source_52            IN NUMBER
--Invoice Distribution Tax Distribution Identifier from Tax
 , p_source_53            IN NUMBER
--Invoice Distribution Summary Tax Line Identifier
 , p_source_54            IN NUMBER
--Payables Upgrade Credit Encumbrance Type Identifier
 , p_source_55            IN NUMBER
--Payables Upgrade Debit Encumbrance Type Identifier
 , p_source_56            IN NUMBER
--Purchase Order Distribution Identifier
 , p_source_58            IN NUMBER
--Self-Assessed Tax Flag
 , p_source_59            IN VARCHAR2
 , p_source_59_meaning    IN VARCHAR2
--Business Flow Purchasing Application Identifier
 , p_source_60            IN NUMBER
--Business Flow Purchase Order Distribution Type
 , p_source_61            IN VARCHAR2
--Business Flow Purchase Order Entity Code
 , p_source_62            IN VARCHAR2
--Business Flow Purchase Order Distribution Identifier
 , p_source_63            IN NUMBER
--Business Flow Purchasing Document Identifier
 , p_source_64            IN NUMBER
--Invoice Distribution Encumbrance Amount
 , p_source_65            IN NUMBER
--Invoice Distribution Encumbrance Ledger Amount
 , p_source_66            IN NUMBER
)
IS

l_component_type              VARCHAR2(80);
l_component_code              VARCHAR2(30);
l_component_type_code         VARCHAR2(1);
l_component_appl_id           INTEGER;
l_amb_context_code            VARCHAR2(30);
l_entity_code                 VARCHAR2(30);
l_event_class_code            VARCHAR2(30);
l_ae_header_id                NUMBER;
l_event_type_code             VARCHAR2(30);
l_line_definition_code        VARCHAR2(30);
l_line_definition_owner_code  VARCHAR2(1);
--
-- adr variables
l_segment                     VARCHAR2(30);
l_ccid                        NUMBER;
l_adr_transaction_coa_id      NUMBER;
l_adr_accounting_coa_id       NUMBER;
l_adr_flexfield_segment_code  VARCHAR2(30);
l_adr_flex_value_set_id       NUMBER;
l_adr_value_type_code         VARCHAR2(30);
l_adr_value_combination_id    NUMBER;
l_adr_value_segment_code      VARCHAR2(30);

l_bflow_method_code           VARCHAR2(30);  -- 4219869 Business Flow
l_bflow_class_code            VARCHAR2(30);  -- 4219869 Business Flow
l_inherit_desc_flag           VARCHAR2(1);   -- 4219869 Business Flow
l_budgetary_control_flag      VARCHAR2(1);   -- 4458381 Public Sector Enh

-- 4262811 Variables ------------------------------------------------------------------------------------------
l_entered_amt_idx             NUMBER;
l_accted_amt_idx              NUMBER;
l_acc_rev_flag                VARCHAR2(1);
l_accrual_line_num            NUMBER;
l_tmp_amt                     NUMBER;
l_acc_rev_natural_side_code   VARCHAR2(1);

l_num_entries                 NUMBER;
l_gl_dates                    xla_ae_journal_entry_pkg.t_array_date;
l_accted_amts                 xla_ae_journal_entry_pkg.t_array_num;
l_entered_amts                xla_ae_journal_entry_pkg.t_array_num;
l_period_names                xla_ae_journal_entry_pkg.t_array_V15L;
l_recog_line_1                NUMBER;
l_recog_line_2                NUMBER;

l_bflow_applied_to_amt_idx    NUMBER;                                -- 5132302
l_bflow_applied_to_amt        NUMBER;                                -- 5132302
l_bflow_applied_to_amts       xla_ae_journal_entry_pkg.t_array_num;  -- 5132302

l_event_id                    NUMBER;  -- To handle MPA header Description: xla_ae_header_pkg.SetHdrDescription

--l_rounding_ccy                VARCHAR2(15); -- To handle MPA rounding  4262811b
l_same_currency               BOOLEAN;        -- To handle MPA rounding  4262811b

---------------------------------------------------------------------------------------------------------------


--
-- bulk performance
--
l_balance_type_code           VARCHAR2(1);
l_rec_acct_attrs              XLA_AE_LINES_PKG.t_rec_acct_attrs;
l_log_module                  VARCHAR2(240);

--
-- Upgrade strategy
--
l_actual_upg_option           VARCHAR2(1);
l_enc_upg_option           VARCHAR2(1);

--
BEGIN
--
IF g_log_enabled THEN
      l_log_module := C_DEFAULT_MODULE||'.AcctLineType_20';
END IF;
--
IF (C_LEVEL_PROCEDURE >= g_log_level) THEN

      trace
         (p_msg      => 'BEGIN of AcctLineType_20'
         ,p_level    => C_LEVEL_PROCEDURE
         ,p_module   => l_log_module);

END IF;
--
l_component_type             := 'AMB_JLT';
l_component_code             := 'AP_DM_NON_REC_TAX_PO_ENC';
l_component_type_code        := 'S';
l_component_appl_id          :=  200;
l_amb_context_code           := 'DEFAULT';
l_entity_code                := 'AP_INVOICES';
l_event_class_code           := 'DEBIT MEMOS';
l_event_type_code            := 'DEBIT MEMOS_ALL';
l_line_definition_owner_code := 'S';
l_line_definition_code       := 'ENC_DM_ALL';
--
l_balance_type_code          := 'E';
l_segment                     := NULL;
l_ccid                        := NULL;
l_adr_transaction_coa_id      := NULL;
l_adr_accounting_coa_id       := NULL;
l_adr_flexfield_segment_code  := NULL;
l_adr_flex_value_set_id       := NULL;
l_adr_value_type_code         := NULL;
l_adr_value_combination_id    := NULL;
l_adr_value_segment_code      := NULL;

l_bflow_method_code          := 'PRIOR_ENTRY';   -- 4219869 Business Flow
l_bflow_class_code           := 'PO_ENCUMBRANCE';    -- 4219869 Business Flow
l_inherit_desc_flag          := 'Y';   -- 4219869 Business Flow
l_budgetary_control_flag     := 'Y';

l_bflow_applied_to_amt_idx   := NULL; -- 5132302
l_bflow_applied_to_amt       := NULL; -- 5132302
l_entered_amt_idx            := NULL;          -- 4262811
l_accted_amt_idx             := NULL;          -- 4262811
l_acc_rev_flag               := NULL;          -- 4262811
l_accrual_line_num           := NULL;          -- 4262811
l_tmp_amt                    := NULL;          -- 4262811
--
 
IF XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id = XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.ledger_id OR
    l_balance_type_code <> 'B' THEN
IF p_source_58 IS NOT NULL AND 
NVL(p_source_15,'
') =  'NONREC_TAX' AND 
NVL(p_source_59,'
') <>  'Y' AND 
NVL(p_source_18,'
') <>  'Y'
 THEN 

   --
   XLA_AE_LINES_PKG.SetNewLine;

   p_balance_type_code          := l_balance_type_code;
   -- set the flag so later we will know whether the gain loss line needs to be created
   
   IF(l_balance_type_code = 'A' and p_actual_flag is null) THEN
     p_actual_flag :='A';
   END IF;

   --
   -- bulk performance
   --
   XLA_AE_LINES_PKG.set_ae_header_id (p_ae_header_id => p_event_id ,
                                      p_header_num   => 0); -- 4262811
   --
   -- set accounting line options
   --
   l_ae_header_id:= xla_ae_lines_pkg.SetAcctLineOption(
           p_natural_side_code          => 'C'
         , p_gain_or_loss_flag          => 'N'
         , p_gl_transfer_mode_code      => 'S'
         , p_acct_entry_type_code       => 'E'
         , p_switch_side_flag           => 'Y'
         , p_merge_duplicate_code       => 'N'
         );
   --
   l_acc_rev_natural_side_code := 'D';  -- 4262811
   -- 
   --
   -- set accounting line type info
   --
   xla_ae_lines_pkg.SetAcctLineType
      (p_component_type             => l_component_type
      ,p_event_type_code            => l_event_type_code
      ,p_line_definition_owner_code => l_line_definition_owner_code
      ,p_line_definition_code       => l_line_definition_code
      ,p_accounting_line_code       => l_component_code
      ,p_accounting_line_type_code  => l_component_type_code
      ,p_accounting_line_appl_id    => l_component_appl_id
      ,p_amb_context_code           => l_amb_context_code
      ,p_entity_code                => l_entity_code
      ,p_event_class_code           => l_event_class_code);
   --
   -- set accounting class
   --
   xla_ae_lines_pkg.SetAcctClass(
           p_accounting_class_code  => 'PURCHASE_ORDER'
         , p_ae_header_id           => l_ae_header_id
         );

   --
   -- set rounding class
   --
   XLA_AE_LINES_PKG.g_rec_lines.array_rounding_class(XLA_AE_LINES_PKG.g_LineNumber) :=
                      'PURCHASE_ORDER';

   --
   xla_ae_lines_pkg.g_rec_lines.array_calculate_acctd_flag(xla_ae_lines_pkg.g_LineNumber) := p_calculate_acctd_flag;
   xla_ae_lines_pkg.g_rec_lines.array_calculate_g_l_flag(xla_ae_lines_pkg.g_LineNumber) := p_calculate_g_l_flag;
   --
   -- bulk performance
   --
   XLA_AE_LINES_PKG.g_rec_lines.array_balance_type_code(XLA_AE_LINES_PKG.g_LineNumber) := l_balance_type_code;

   XLA_AE_LINES_PKG.g_rec_lines.array_ledger_id(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id;

   -- 4955764
   XLA_AE_LINES_PKG.g_rec_lines.array_gl_date(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_HEADER_PKG.g_rec_header_new.array_gl_date(g_array_event(p_event_id).array_value_num('header_index'));

   -- 4458381 Public Sector Enh
   
   --
   -- set accounting attributes for the line type
   --
   l_entered_amt_idx := 23;
   l_accted_amt_idx  := 25;
   l_bflow_applied_to_amt_idx  := NULL;  -- 5132302
   l_rec_acct_attrs.array_acct_attr_code(1) := 'ACCOUNTING_REVERSAL_OPTION';
   l_rec_acct_attrs.array_char_value(1)  := p_source_19;
   l_rec_acct_attrs.array_acct_attr_code(2) := 'ALLOC_TO_APPLICATION_ID';
   l_rec_acct_attrs.array_num_value(2)  := 
xla_ae_sources_pkg.GetSystemSourceNum(
   p_source_code           => 'XLA_EVENT_APPL_ID'
 , p_source_type_code      => 'Y'
 , p_source_application_id =>  602
);
   l_rec_acct_attrs.array_acct_attr_code(3) := 'ALLOC_TO_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(3)  := p_source_21;
   l_rec_acct_attrs.array_acct_attr_code(4) := 'ALLOC_TO_ENTITY_CODE';
   l_rec_acct_attrs.array_char_value(4)  := 
xla_ae_sources_pkg.GetSystemSourceChar(
   p_source_code           => 'XLA_ENTITY_CODE'
 , p_source_type_code      => 'Y'
 , p_source_application_id =>  602
);
   l_rec_acct_attrs.array_acct_attr_code(5) := 'ALLOC_TO_FIRST_DIST_ID';
   l_rec_acct_attrs.array_num_value(5)  :=  to_char(p_source_23);
   l_rec_acct_attrs.array_acct_attr_code(6) := 'ALLOC_TO_FIRST_SYS_TRAN_ID';
   l_rec_acct_attrs.array_num_value(6)  :=  to_char(p_source_24);
   l_rec_acct_attrs.array_acct_attr_code(7) := 'APPLIED_TO_APPLICATION_ID';
   l_rec_acct_attrs.array_num_value(7)  := p_source_60;
   l_rec_acct_attrs.array_acct_attr_code(8) := 'APPLIED_TO_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(8)  := p_source_61;
   l_rec_acct_attrs.array_acct_attr_code(9) := 'APPLIED_TO_ENTITY_CODE';
   l_rec_acct_attrs.array_char_value(9)  := p_source_62;
   l_rec_acct_attrs.array_acct_attr_code(10) := 'APPLIED_TO_FIRST_DIST_ID';
   l_rec_acct_attrs.array_num_value(10)  :=  to_char(p_source_63);
   l_rec_acct_attrs.array_acct_attr_code(11) := 'APPLIED_TO_FIRST_SYS_TRAN_ID';
   l_rec_acct_attrs.array_num_value(11)  :=  to_char(p_source_64);
   l_rec_acct_attrs.array_acct_attr_code(12) := 'DISTRIBUTION_IDENTIFIER_1';
   l_rec_acct_attrs.array_num_value(12)  :=  to_char(p_source_30);
   l_rec_acct_attrs.array_acct_attr_code(13) := 'DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(13)  := p_source_21;
   l_rec_acct_attrs.array_acct_attr_code(14) := 'ENC_UPG_CR_CCID';
   l_rec_acct_attrs.array_num_value(14)  := p_source_31;
   l_rec_acct_attrs.array_acct_attr_code(15) := 'ENC_UPG_CR_ENTERED_AMT';
   l_rec_acct_attrs.array_num_value(15)  := p_source_32;
   l_rec_acct_attrs.array_acct_attr_code(16) := 'ENC_UPG_CR_ENTERED_CURR';
   l_rec_acct_attrs.array_char_value(16)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(17) := 'ENC_UPG_CR_LEDGER_AMT';
   l_rec_acct_attrs.array_num_value(17)  := p_source_34;
   l_rec_acct_attrs.array_acct_attr_code(18) := 'ENC_UPG_DR_CCID';
   l_rec_acct_attrs.array_num_value(18)  := p_source_35;
   l_rec_acct_attrs.array_acct_attr_code(19) := 'ENC_UPG_DR_ENTERED_AMT';
   l_rec_acct_attrs.array_num_value(19)  := p_source_36;
   l_rec_acct_attrs.array_acct_attr_code(20) := 'ENC_UPG_DR_ENTERED_CURR';
   l_rec_acct_attrs.array_char_value(20)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(21) := 'ENC_UPG_DR_LEDGER_AMT';
   l_rec_acct_attrs.array_num_value(21)  := p_source_37;
   l_rec_acct_attrs.array_acct_attr_code(22) := 'ENC_UPG_OPTION';
   l_rec_acct_attrs.array_char_value(22)  := p_source_38;
   l_rec_acct_attrs.array_acct_attr_code(23) := 'ENTERED_CURRENCY_AMOUNT';
   l_rec_acct_attrs.array_num_value(23)  := p_source_65;
   l_rec_acct_attrs.array_acct_attr_code(24) := 'ENTERED_CURRENCY_CODE';
   l_rec_acct_attrs.array_char_value(24)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(25) := 'LEDGER_AMOUNT';
   l_rec_acct_attrs.array_num_value(25)  := p_source_66;
   l_rec_acct_attrs.array_acct_attr_code(26) := 'MULTIPERIOD_END_DATE';
   l_rec_acct_attrs.array_date_value(26)  := p_source_43;
   l_rec_acct_attrs.array_acct_attr_code(27) := 'MULTIPERIOD_OPTION';
   l_rec_acct_attrs.array_char_value(27)  := p_source_44;
   l_rec_acct_attrs.array_acct_attr_code(28) := 'MULTIPERIOD_START_DATE';
   l_rec_acct_attrs.array_date_value(28)  := p_source_45;
   l_rec_acct_attrs.array_acct_attr_code(29) := 'OVERRIDE_ACCTD_AMT_FLAG';
   l_rec_acct_attrs.array_char_value(29)  := p_source_46;
   l_rec_acct_attrs.array_acct_attr_code(30) := 'PARTY_TYPE';
   l_rec_acct_attrs.array_char_value(30)  := p_source_49;
   l_rec_acct_attrs.array_acct_attr_code(31) := 'REVERSED_DISTRIBUTION_ID1';
   l_rec_acct_attrs.array_num_value(31)  :=  to_char(p_source_50);
   l_rec_acct_attrs.array_acct_attr_code(32) := 'REVERSED_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(32)  := p_source_21;
   l_rec_acct_attrs.array_acct_attr_code(33) := 'TAX_LINE_REF_ID';
   l_rec_acct_attrs.array_num_value(33)  := p_source_52;
   l_rec_acct_attrs.array_acct_attr_code(34) := 'TAX_REC_NREC_DIST_REF_ID';
   l_rec_acct_attrs.array_num_value(34)  := p_source_53;
   l_rec_acct_attrs.array_acct_attr_code(35) := 'TAX_SUMMARY_LINE_REF_ID';
   l_rec_acct_attrs.array_num_value(35)  := p_source_54;
   l_rec_acct_attrs.array_acct_attr_code(36) := 'UPG_CR_ENC_TYPE_ID';
   l_rec_acct_attrs.array_num_value(36)  := p_source_55;
   l_rec_acct_attrs.array_acct_attr_code(37) := 'UPG_DR_ENC_TYPE_ID';
   l_rec_acct_attrs.array_num_value(37)  := p_source_56;

   XLA_AE_LINES_PKG.SetLineAcctAttrs(l_rec_acct_attrs);
   p_gain_or_loss_ref  := XLA_AE_LINES_PKG.g_rec_lines.array_gain_or_loss_ref(XLA_AE_LINES_PKG.g_LineNumber);

   ---------------------------------------------------------------------------------------------------------------
   -- 4336173 -- assign Business Flow Class (replace code in xla_ae_lines_pkg.Business_Flow_Validation)
   ---------------------------------------------------------------------------------------------------------------
   XLA_AE_LINES_PKG.g_rec_lines.array_business_class_code(XLA_AE_LINES_PKG.g_LineNumber) := l_bflow_class_code;

   l_actual_upg_option  := XLA_AE_LINES_PKG.g_rec_lines.array_actual_upg_option(XLA_AE_LINES_PKG.g_LineNumber);
   l_enc_upg_option     := XLA_AE_LINES_PKG.g_rec_lines.array_enc_upg_option(XLA_AE_LINES_PKG.g_LineNumber);

   IF xla_accounting_cache_pkg.GetValueChar
         (p_source_code         => 'LEDGER_CATEGORY_CODE'
         ,p_target_ledger_id    => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id) IN ('PRIMARY','ALC')
   AND l_bflow_method_code = 'PRIOR_ENTRY'
--   AND (l_actual_upg_option = 'Y' OR l_enc_upg_option = 'Y') Bug 4922099
   AND ( (NVL(l_actual_upg_option, 'N') IN ('Y', 'O')) OR
         (NVL(l_enc_upg_option, 'N') IN ('Y', 'O'))
       )
   THEN
         xla_ae_lines_pkg.BflowUpgEntry
           (p_business_method_code    => l_bflow_method_code
           ,p_business_class_code     => l_bflow_class_code
           ,p_balance_type            => l_balance_type_code);
   ELSE
      NULL;
XLA_AE_LINES_PKG.business_flow_validation(
                                p_business_method_code     => l_bflow_method_code
                               ,p_business_class_code      => l_bflow_class_code
                               ,p_inherit_description_flag => l_inherit_desc_flag);
   END IF;

   --
   -- call analytical criteria
   --
   -- Inherited Analytical Criteria for business flow method of Prior Entry.
   --
   -- call description
   --
   -- No description or it is inherited.
   --
   -- call ADRs
   -- Bug 4922099
   --
   IF ( (l_bflow_method_code <> 'PRIOR_ENTRY') OR
        (NVL(l_actual_upg_option, 'N') = 'O') OR
        (NVL(l_enc_upg_option, 'N') = 'O')
      )
   THEN
   NULL;
   --
   --
   
   --
   --
   END IF;
   --
   -- Bug 4922099
   IF ( ( (NVL(l_actual_upg_option, 'N') = 'O') OR
          (NVL(l_enc_upg_option, 'N') = 'O')
        ) AND
        (l_bflow_method_code = 'PRIOR_ENTRY')
      )
   THEN
      IF
      --
      1 = 1
      --
      THEN
      xla_accounting_err_pkg.build_message
                                    (p_appli_s_name            => 'XLA'
                                    ,p_msg_name                => 'XLA_UPG_OVERRIDE_ADR_UNDEFINED'
                                    ,p_token_1                 => 'LINE_NUMBER'
                                    ,p_value_1                 => XLA_AE_LINES_PKG.g_LineNumber
                                    ,p_token_2                 => 'LINE_TYPE_NAME'
                                    ,p_value_2                 => XLA_AE_SOURCES_PKG.GetComponentName (
                                                                             l_component_type
                                                                            ,l_component_code
                                                                            ,l_component_type_code
                                                                            ,l_component_appl_id
                                                                            ,l_amb_context_code
                                                                            ,l_entity_code
                                                                            ,l_event_class_code
                                                                           )
                                    ,p_token_3                 => 'OWNER'
                                    ,p_value_3                 => xla_lookups_pkg.get_meaning(
                                                                          p_lookup_type     => 'XLA_OWNER_TYPE'
                                                                          ,p_lookup_code    => l_component_type_code
                                                                         )
                                    ,p_token_4                 => 'PRODUCT_NAME'
                                    ,p_value_4                 => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.application_name
                                    ,p_entity_id               => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.entity_id
                                    ,p_event_id                => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.event_id
                                    ,p_ledger_id               => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id
                                    ,p_ae_header_id            =>  NULL
                                       );

        IF (C_LEVEL_ERROR>= g_log_level) THEN
                 trace
                      (p_msg      => 'ERROR: XLA_UPG_OVERRIDE_ADR_UNDEFINED'
                      ,p_level    => C_LEVEL_ERROR
                      ,p_module   => l_log_module);
        END IF;
      END IF;
   END IF;
   --
   --
   ------------------------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- NOTE: XLA_AE_LINES_PKG.ValidateCurrentLine should NOT be generated if business flow method is
   -- Prior Entry.  Currently, the following code is always generated.
   ------------------------------------------------------------------------------------------------
   -- No ValidateCurrentLine for business flow method of Prior Entry

   ------------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- Populated credit and debit amounts -- Need to generate this within IF <condition>
   ------------------------------------------------------------------------------------
   XLA_AE_LINES_PKG.SetDebitCreditAmounts;

   ----------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- Update journal entry status -- Need to generate this within IF <condition>
   ----------------------------------------------------------------------------------
   XLA_AE_JOURNAL_ENTRY_PKG.UpdateJournalEntryStatus
         (p_hdr_idx => g_array_event(p_event_id).array_value_num('header_index')
         ,p_balance_type_code => l_balance_type_code
         );

   -------------------------------------------------------------------------------------------
   -- 4262811 - Generate the Accrual Reversal lines
   -------------------------------------------------------------------------------------------
   BEGIN
      l_acc_rev_flag := XLA_AE_HEADER_PKG.g_rec_header_new.array_accrual_reversal_flag
                              (g_array_event(p_event_id).array_value_num('header_index'));
      IF l_acc_rev_flag IS NULL THEN
         l_acc_rev_flag := 'N';
      END IF;
   EXCEPTION
      WHEN OTHERS THEN
         l_acc_rev_flag := 'N';
   END;
   --
   IF (l_acc_rev_flag = 'Y') THEN

       -- 4645092  ------------------------------------------------------------------------------
       -- To allow MPA report to determine if it should generate report process
       XLA_ACCOUNTING_PKG.g_mpa_accrual_exists := 'Y';
       ------------------------------------------------------------------------------------------

       l_accrual_line_num := XLA_AE_LINES_PKG.g_LineNumber;
       XLA_AE_LINES_PKG.CopyLineInfo(l_accrual_line_num);
   -- added call to set_ccid to execute mapping  for secondary accrual reversal entries bug 7444204
   -- call ADRs
   -- Bug 4922099
   --
   IF ( (l_bflow_method_code <> 'PRIOR_ENTRY') OR
        (NVL(l_actual_upg_option, 'N') = 'O') OR
        (NVL(l_enc_upg_option, 'N') = 'O')
      )
   THEN
   NULL;
   --
   --
   
   --
   --
   END IF;

       --
       -- Update the line information that should be overwritten
       --
       XLA_AE_LINES_PKG.set_ae_header_id(p_ae_header_id => p_event_id ,
                                         p_header_num   => 1);
       XLA_AE_LINES_PKG.g_rec_lines.array_header_num(XLA_AE_LINES_PKG.g_LineNumber)  :=1;

       XLA_AE_LINES_PKG.g_rec_lines.array_business_class_code(XLA_AE_LINES_PKG.g_LineNumber) := NULL; -- 4669271

       IF l_bflow_method_code <> 'NONE' THEN  -- 4655713b
          XLA_AE_LINES_PKG.g_rec_lines.array_reversal_code(XLA_AE_LINES_PKG.g_LineNumber) := CONCAT('MPA_',l_bflow_method_code);
       END IF;

      --
      -- Depending on the Reversal Method setup, do a switch side or changes sign for the amounts
      --
      IF (XLA_AE_JOURNAL_ENTRY_PKG.g_cache_ledgers_info.ledger_reversal_option = 'SIDE') THEN
          XLA_AE_LINES_PKG.g_rec_lines.array_natural_side_code(XLA_AE_LINES_PKG.g_LineNumber) :=  l_acc_rev_natural_side_code;
      ELSE
          ---------------------------------------------------------------------------------------------------
          -- 4262811a Switch Sign
          ---------------------------------------------------------------------------------------------------
          XLA_AE_LINES_PKG.g_rec_lines.array_switch_side_flag(XLA_AE_LINES_PKG.g_LineNumber) := 'N';  -- 5052518
          XLA_AE_LINES_PKG.g_rec_lines.array_ledger_amount(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_ledger_amount(XLA_AE_LINES_PKG.g_LineNumber) * -1;
          XLA_AE_LINES_PKG.g_rec_lines.array_entered_amount(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_entered_amount(XLA_AE_LINES_PKG.g_LineNumber) * -1;
          -- 5132302
          XLA_AE_LINES_PKG.g_rec_lines.array_bflow_applied_to_amt(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_bflow_applied_to_amt(XLA_AE_LINES_PKG.g_LineNumber) * -1;

      END IF;

      -- 4955764
      XLA_AE_LINES_PKG.g_rec_lines.array_gl_date(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_HEADER_PKG.g_rec_header_new.array_gl_date(g_array_event(p_event_id).array_value_num('acc_rev_header_index'));


      XLA_AE_LINES_PKG.ValidateCurrentLine;
      XLA_AE_LINES_PKG.SetDebitCreditAmounts;

      XLA_AE_JOURNAL_ENTRY_PKG.UpdateJournalEntryStatus
               (p_hdr_idx           => g_array_event(p_event_id).array_value_num('acc_rev_header_index')
               ,p_balance_type_code => l_balance_type_code);

   END IF;

   -----------------------------------------------------------------------------------------
   -- 4262811 Multiperiod Accounting
   -----------------------------------------------------------------------------------------
     -- No MPA option is assigned.


END IF;
END IF;
--

--
IF (C_LEVEL_PROCEDURE >= g_log_level) THEN
   trace
      (p_msg      => 'END of AcctLineType_20'
      ,p_level    => C_LEVEL_PROCEDURE
      ,p_module   => l_log_module);
END IF;
--
EXCEPTION
  WHEN xla_exceptions_pkg.application_exception THEN
      RAISE;
  WHEN OTHERS THEN
       xla_exceptions_pkg.raise_message
           (p_location => 'XLA_00200_AAD_S_000010_BC_PKG.AcctLineType_20');
END AcctLineType_20;
--

---------------------------------------
--
-- PRIVATE FUNCTION
--         AcctLineType_21
--
---------------------------------------
PROCEDURE AcctLineType_21 (
  p_application_id        IN NUMBER
 ,p_event_id              IN NUMBER
 ,p_calculate_acctd_flag  IN VARCHAR2
 ,p_calculate_g_l_flag    IN VARCHAR2
 ,p_actual_flag           IN OUT VARCHAR2
 ,p_balance_type_code     OUT VARCHAR2
 ,p_gain_or_loss_ref      OUT VARCHAR2
 
--Invoice Distribution Type
 , p_source_15            IN VARCHAR2
 , p_source_15_meaning    IN VARCHAR2
--Accrue on Receipt Option
 , p_source_18            IN VARCHAR2
 , p_source_18_meaning    IN VARCHAR2
--Accounting Reversal Indicator
 , p_source_19            IN VARCHAR2
--Distribution Link Type
 , p_source_21            IN VARCHAR2
--Allocation to Main Distribution Identifier
 , p_source_23            IN NUMBER
--Invoice Identifier
 , p_source_24            IN NUMBER
--Invoice Distribution Identifier
 , p_source_30            IN NUMBER
--Payables Encumbrance Upgrade Credit Account
 , p_source_31            IN NUMBER
--Payables Encumbrance Upgrade Credit Amount
 , p_source_32            IN NUMBER
--Invoice Currency Code
 , p_source_33            IN VARCHAR2
--Payables Encumbrance Upgrade Credit Base Amount
 , p_source_34            IN NUMBER
--Payables Encumbrance Upgrade Debit Account
 , p_source_35            IN NUMBER
--Payables Encumbrance Upgrade Debit Amount
 , p_source_36            IN NUMBER
--Payables Encumbrance Upgrade Debit Base Amount
 , p_source_37            IN NUMBER
--Payables Encumbrance Upgrade Option
 , p_source_38            IN VARCHAR2
--Deferred Accounting End Date
 , p_source_43            IN DATE
--Deferred Accounting Option
 , p_source_44            IN VARCHAR2
--Deferred Accounting Start Date
 , p_source_45            IN DATE
--Override Accounted Amount Indicator
 , p_source_46            IN VARCHAR2
 , p_source_46_meaning    IN VARCHAR2
--Third Party Type
 , p_source_49            IN VARCHAR2
--Parent Reversal Identifier
 , p_source_50            IN NUMBER
--Invoice Distribution Tax Line Identifier
 , p_source_52            IN NUMBER
--Invoice Distribution Tax Distribution Identifier from Tax
 , p_source_53            IN NUMBER
--Invoice Distribution Summary Tax Line Identifier
 , p_source_54            IN NUMBER
--Payables Upgrade Credit Encumbrance Type Identifier
 , p_source_55            IN NUMBER
--Payables Upgrade Debit Encumbrance Type Identifier
 , p_source_56            IN NUMBER
--Purchase Order Distribution Identifier
 , p_source_58            IN NUMBER
--Business Flow Purchasing Application Identifier
 , p_source_60            IN NUMBER
--Business Flow Purchase Order Distribution Type
 , p_source_61            IN VARCHAR2
--Business Flow Purchase Order Entity Code
 , p_source_62            IN VARCHAR2
--Business Flow Purchase Order Distribution Identifier
 , p_source_63            IN NUMBER
--Business Flow Purchasing Document Identifier
 , p_source_64            IN NUMBER
--Invoice Distribution Encumbrance Amount
 , p_source_65            IN NUMBER
--Invoice Distribution Encumbrance Ledger Amount
 , p_source_66            IN NUMBER
)
IS

l_component_type              VARCHAR2(80);
l_component_code              VARCHAR2(30);
l_component_type_code         VARCHAR2(1);
l_component_appl_id           INTEGER;
l_amb_context_code            VARCHAR2(30);
l_entity_code                 VARCHAR2(30);
l_event_class_code            VARCHAR2(30);
l_ae_header_id                NUMBER;
l_event_type_code             VARCHAR2(30);
l_line_definition_code        VARCHAR2(30);
l_line_definition_owner_code  VARCHAR2(1);
--
-- adr variables
l_segment                     VARCHAR2(30);
l_ccid                        NUMBER;
l_adr_transaction_coa_id      NUMBER;
l_adr_accounting_coa_id       NUMBER;
l_adr_flexfield_segment_code  VARCHAR2(30);
l_adr_flex_value_set_id       NUMBER;
l_adr_value_type_code         VARCHAR2(30);
l_adr_value_combination_id    NUMBER;
l_adr_value_segment_code      VARCHAR2(30);

l_bflow_method_code           VARCHAR2(30);  -- 4219869 Business Flow
l_bflow_class_code            VARCHAR2(30);  -- 4219869 Business Flow
l_inherit_desc_flag           VARCHAR2(1);   -- 4219869 Business Flow
l_budgetary_control_flag      VARCHAR2(1);   -- 4458381 Public Sector Enh

-- 4262811 Variables ------------------------------------------------------------------------------------------
l_entered_amt_idx             NUMBER;
l_accted_amt_idx              NUMBER;
l_acc_rev_flag                VARCHAR2(1);
l_accrual_line_num            NUMBER;
l_tmp_amt                     NUMBER;
l_acc_rev_natural_side_code   VARCHAR2(1);

l_num_entries                 NUMBER;
l_gl_dates                    xla_ae_journal_entry_pkg.t_array_date;
l_accted_amts                 xla_ae_journal_entry_pkg.t_array_num;
l_entered_amts                xla_ae_journal_entry_pkg.t_array_num;
l_period_names                xla_ae_journal_entry_pkg.t_array_V15L;
l_recog_line_1                NUMBER;
l_recog_line_2                NUMBER;

l_bflow_applied_to_amt_idx    NUMBER;                                -- 5132302
l_bflow_applied_to_amt        NUMBER;                                -- 5132302
l_bflow_applied_to_amts       xla_ae_journal_entry_pkg.t_array_num;  -- 5132302

l_event_id                    NUMBER;  -- To handle MPA header Description: xla_ae_header_pkg.SetHdrDescription

--l_rounding_ccy                VARCHAR2(15); -- To handle MPA rounding  4262811b
l_same_currency               BOOLEAN;        -- To handle MPA rounding  4262811b

---------------------------------------------------------------------------------------------------------------


--
-- bulk performance
--
l_balance_type_code           VARCHAR2(1);
l_rec_acct_attrs              XLA_AE_LINES_PKG.t_rec_acct_attrs;
l_log_module                  VARCHAR2(240);

--
-- Upgrade strategy
--
l_actual_upg_option           VARCHAR2(1);
l_enc_upg_option           VARCHAR2(1);

--
BEGIN
--
IF g_log_enabled THEN
      l_log_module := C_DEFAULT_MODULE||'.AcctLineType_21';
END IF;
--
IF (C_LEVEL_PROCEDURE >= g_log_level) THEN

      trace
         (p_msg      => 'BEGIN of AcctLineType_21'
         ,p_level    => C_LEVEL_PROCEDURE
         ,p_module   => l_log_module);

END IF;
--
l_component_type             := 'AMB_JLT';
l_component_code             := 'AP_DM_PO_ENC';
l_component_type_code        := 'S';
l_component_appl_id          :=  200;
l_amb_context_code           := 'DEFAULT';
l_entity_code                := 'AP_INVOICES';
l_event_class_code           := 'DEBIT MEMOS';
l_event_type_code            := 'DEBIT MEMOS_ALL';
l_line_definition_owner_code := 'S';
l_line_definition_code       := 'ENC_DM_ALL';
--
l_balance_type_code          := 'E';
l_segment                     := NULL;
l_ccid                        := NULL;
l_adr_transaction_coa_id      := NULL;
l_adr_accounting_coa_id       := NULL;
l_adr_flexfield_segment_code  := NULL;
l_adr_flex_value_set_id       := NULL;
l_adr_value_type_code         := NULL;
l_adr_value_combination_id    := NULL;
l_adr_value_segment_code      := NULL;

l_bflow_method_code          := 'PRIOR_ENTRY';   -- 4219869 Business Flow
l_bflow_class_code           := 'PO_ENCUMBRANCE';    -- 4219869 Business Flow
l_inherit_desc_flag          := 'Y';   -- 4219869 Business Flow
l_budgetary_control_flag     := 'Y';

l_bflow_applied_to_amt_idx   := NULL; -- 5132302
l_bflow_applied_to_amt       := NULL; -- 5132302
l_entered_amt_idx            := NULL;          -- 4262811
l_accted_amt_idx             := NULL;          -- 4262811
l_acc_rev_flag               := NULL;          -- 4262811
l_accrual_line_num           := NULL;          -- 4262811
l_tmp_amt                    := NULL;          -- 4262811
--
 
IF XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id = XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.ledger_id OR
    l_balance_type_code <> 'B' THEN
IF p_source_58 IS NOT NULL AND 
(NVL(p_source_15,'
') =  'ACCRUAL' OR 
NVL(p_source_15,'
') =  'ITEM') AND 
NVL(p_source_18,'
') <>  'Y'
 THEN 

   --
   XLA_AE_LINES_PKG.SetNewLine;

   p_balance_type_code          := l_balance_type_code;
   -- set the flag so later we will know whether the gain loss line needs to be created
   
   IF(l_balance_type_code = 'A' and p_actual_flag is null) THEN
     p_actual_flag :='A';
   END IF;

   --
   -- bulk performance
   --
   XLA_AE_LINES_PKG.set_ae_header_id (p_ae_header_id => p_event_id ,
                                      p_header_num   => 0); -- 4262811
   --
   -- set accounting line options
   --
   l_ae_header_id:= xla_ae_lines_pkg.SetAcctLineOption(
           p_natural_side_code          => 'C'
         , p_gain_or_loss_flag          => 'N'
         , p_gl_transfer_mode_code      => 'S'
         , p_acct_entry_type_code       => 'E'
         , p_switch_side_flag           => 'Y'
         , p_merge_duplicate_code       => 'N'
         );
   --
   l_acc_rev_natural_side_code := 'D';  -- 4262811
   -- 
   --
   -- set accounting line type info
   --
   xla_ae_lines_pkg.SetAcctLineType
      (p_component_type             => l_component_type
      ,p_event_type_code            => l_event_type_code
      ,p_line_definition_owner_code => l_line_definition_owner_code
      ,p_line_definition_code       => l_line_definition_code
      ,p_accounting_line_code       => l_component_code
      ,p_accounting_line_type_code  => l_component_type_code
      ,p_accounting_line_appl_id    => l_component_appl_id
      ,p_amb_context_code           => l_amb_context_code
      ,p_entity_code                => l_entity_code
      ,p_event_class_code           => l_event_class_code);
   --
   -- set accounting class
   --
   xla_ae_lines_pkg.SetAcctClass(
           p_accounting_class_code  => 'PURCHASE_ORDER'
         , p_ae_header_id           => l_ae_header_id
         );

   --
   -- set rounding class
   --
   XLA_AE_LINES_PKG.g_rec_lines.array_rounding_class(XLA_AE_LINES_PKG.g_LineNumber) :=
                      'PURCHASE_ORDER';

   --
   xla_ae_lines_pkg.g_rec_lines.array_calculate_acctd_flag(xla_ae_lines_pkg.g_LineNumber) := p_calculate_acctd_flag;
   xla_ae_lines_pkg.g_rec_lines.array_calculate_g_l_flag(xla_ae_lines_pkg.g_LineNumber) := p_calculate_g_l_flag;
   --
   -- bulk performance
   --
   XLA_AE_LINES_PKG.g_rec_lines.array_balance_type_code(XLA_AE_LINES_PKG.g_LineNumber) := l_balance_type_code;

   XLA_AE_LINES_PKG.g_rec_lines.array_ledger_id(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id;

   -- 4955764
   XLA_AE_LINES_PKG.g_rec_lines.array_gl_date(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_HEADER_PKG.g_rec_header_new.array_gl_date(g_array_event(p_event_id).array_value_num('header_index'));

   -- 4458381 Public Sector Enh
   
   --
   -- set accounting attributes for the line type
   --
   l_entered_amt_idx := 23;
   l_accted_amt_idx  := 25;
   l_bflow_applied_to_amt_idx  := NULL;  -- 5132302
   l_rec_acct_attrs.array_acct_attr_code(1) := 'ACCOUNTING_REVERSAL_OPTION';
   l_rec_acct_attrs.array_char_value(1)  := p_source_19;
   l_rec_acct_attrs.array_acct_attr_code(2) := 'ALLOC_TO_APPLICATION_ID';
   l_rec_acct_attrs.array_num_value(2)  := 
xla_ae_sources_pkg.GetSystemSourceNum(
   p_source_code           => 'XLA_EVENT_APPL_ID'
 , p_source_type_code      => 'Y'
 , p_source_application_id =>  602
);
   l_rec_acct_attrs.array_acct_attr_code(3) := 'ALLOC_TO_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(3)  := p_source_21;
   l_rec_acct_attrs.array_acct_attr_code(4) := 'ALLOC_TO_ENTITY_CODE';
   l_rec_acct_attrs.array_char_value(4)  := 
xla_ae_sources_pkg.GetSystemSourceChar(
   p_source_code           => 'XLA_ENTITY_CODE'
 , p_source_type_code      => 'Y'
 , p_source_application_id =>  602
);
   l_rec_acct_attrs.array_acct_attr_code(5) := 'ALLOC_TO_FIRST_DIST_ID';
   l_rec_acct_attrs.array_num_value(5)  :=  to_char(p_source_23);
   l_rec_acct_attrs.array_acct_attr_code(6) := 'ALLOC_TO_FIRST_SYS_TRAN_ID';
   l_rec_acct_attrs.array_num_value(6)  :=  to_char(p_source_24);
   l_rec_acct_attrs.array_acct_attr_code(7) := 'APPLIED_TO_APPLICATION_ID';
   l_rec_acct_attrs.array_num_value(7)  := p_source_60;
   l_rec_acct_attrs.array_acct_attr_code(8) := 'APPLIED_TO_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(8)  := p_source_61;
   l_rec_acct_attrs.array_acct_attr_code(9) := 'APPLIED_TO_ENTITY_CODE';
   l_rec_acct_attrs.array_char_value(9)  := p_source_62;
   l_rec_acct_attrs.array_acct_attr_code(10) := 'APPLIED_TO_FIRST_DIST_ID';
   l_rec_acct_attrs.array_num_value(10)  :=  to_char(p_source_63);
   l_rec_acct_attrs.array_acct_attr_code(11) := 'APPLIED_TO_FIRST_SYS_TRAN_ID';
   l_rec_acct_attrs.array_num_value(11)  :=  to_char(p_source_64);
   l_rec_acct_attrs.array_acct_attr_code(12) := 'DISTRIBUTION_IDENTIFIER_1';
   l_rec_acct_attrs.array_num_value(12)  :=  to_char(p_source_30);
   l_rec_acct_attrs.array_acct_attr_code(13) := 'DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(13)  := p_source_21;
   l_rec_acct_attrs.array_acct_attr_code(14) := 'ENC_UPG_CR_CCID';
   l_rec_acct_attrs.array_num_value(14)  := p_source_31;
   l_rec_acct_attrs.array_acct_attr_code(15) := 'ENC_UPG_CR_ENTERED_AMT';
   l_rec_acct_attrs.array_num_value(15)  := p_source_32;
   l_rec_acct_attrs.array_acct_attr_code(16) := 'ENC_UPG_CR_ENTERED_CURR';
   l_rec_acct_attrs.array_char_value(16)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(17) := 'ENC_UPG_CR_LEDGER_AMT';
   l_rec_acct_attrs.array_num_value(17)  := p_source_34;
   l_rec_acct_attrs.array_acct_attr_code(18) := 'ENC_UPG_DR_CCID';
   l_rec_acct_attrs.array_num_value(18)  := p_source_35;
   l_rec_acct_attrs.array_acct_attr_code(19) := 'ENC_UPG_DR_ENTERED_AMT';
   l_rec_acct_attrs.array_num_value(19)  := p_source_36;
   l_rec_acct_attrs.array_acct_attr_code(20) := 'ENC_UPG_DR_ENTERED_CURR';
   l_rec_acct_attrs.array_char_value(20)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(21) := 'ENC_UPG_DR_LEDGER_AMT';
   l_rec_acct_attrs.array_num_value(21)  := p_source_37;
   l_rec_acct_attrs.array_acct_attr_code(22) := 'ENC_UPG_OPTION';
   l_rec_acct_attrs.array_char_value(22)  := p_source_38;
   l_rec_acct_attrs.array_acct_attr_code(23) := 'ENTERED_CURRENCY_AMOUNT';
   l_rec_acct_attrs.array_num_value(23)  := p_source_65;
   l_rec_acct_attrs.array_acct_attr_code(24) := 'ENTERED_CURRENCY_CODE';
   l_rec_acct_attrs.array_char_value(24)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(25) := 'LEDGER_AMOUNT';
   l_rec_acct_attrs.array_num_value(25)  := p_source_66;
   l_rec_acct_attrs.array_acct_attr_code(26) := 'MULTIPERIOD_END_DATE';
   l_rec_acct_attrs.array_date_value(26)  := p_source_43;
   l_rec_acct_attrs.array_acct_attr_code(27) := 'MULTIPERIOD_OPTION';
   l_rec_acct_attrs.array_char_value(27)  := p_source_44;
   l_rec_acct_attrs.array_acct_attr_code(28) := 'MULTIPERIOD_START_DATE';
   l_rec_acct_attrs.array_date_value(28)  := p_source_45;
   l_rec_acct_attrs.array_acct_attr_code(29) := 'OVERRIDE_ACCTD_AMT_FLAG';
   l_rec_acct_attrs.array_char_value(29)  := p_source_46;
   l_rec_acct_attrs.array_acct_attr_code(30) := 'PARTY_TYPE';
   l_rec_acct_attrs.array_char_value(30)  := p_source_49;
   l_rec_acct_attrs.array_acct_attr_code(31) := 'REVERSED_DISTRIBUTION_ID1';
   l_rec_acct_attrs.array_num_value(31)  :=  to_char(p_source_50);
   l_rec_acct_attrs.array_acct_attr_code(32) := 'REVERSED_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(32)  := p_source_21;
   l_rec_acct_attrs.array_acct_attr_code(33) := 'TAX_LINE_REF_ID';
   l_rec_acct_attrs.array_num_value(33)  := p_source_52;
   l_rec_acct_attrs.array_acct_attr_code(34) := 'TAX_REC_NREC_DIST_REF_ID';
   l_rec_acct_attrs.array_num_value(34)  := p_source_53;
   l_rec_acct_attrs.array_acct_attr_code(35) := 'TAX_SUMMARY_LINE_REF_ID';
   l_rec_acct_attrs.array_num_value(35)  := p_source_54;
   l_rec_acct_attrs.array_acct_attr_code(36) := 'UPG_CR_ENC_TYPE_ID';
   l_rec_acct_attrs.array_num_value(36)  := p_source_55;
   l_rec_acct_attrs.array_acct_attr_code(37) := 'UPG_DR_ENC_TYPE_ID';
   l_rec_acct_attrs.array_num_value(37)  := p_source_56;

   XLA_AE_LINES_PKG.SetLineAcctAttrs(l_rec_acct_attrs);
   p_gain_or_loss_ref  := XLA_AE_LINES_PKG.g_rec_lines.array_gain_or_loss_ref(XLA_AE_LINES_PKG.g_LineNumber);

   ---------------------------------------------------------------------------------------------------------------
   -- 4336173 -- assign Business Flow Class (replace code in xla_ae_lines_pkg.Business_Flow_Validation)
   ---------------------------------------------------------------------------------------------------------------
   XLA_AE_LINES_PKG.g_rec_lines.array_business_class_code(XLA_AE_LINES_PKG.g_LineNumber) := l_bflow_class_code;

   l_actual_upg_option  := XLA_AE_LINES_PKG.g_rec_lines.array_actual_upg_option(XLA_AE_LINES_PKG.g_LineNumber);
   l_enc_upg_option     := XLA_AE_LINES_PKG.g_rec_lines.array_enc_upg_option(XLA_AE_LINES_PKG.g_LineNumber);

   IF xla_accounting_cache_pkg.GetValueChar
         (p_source_code         => 'LEDGER_CATEGORY_CODE'
         ,p_target_ledger_id    => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id) IN ('PRIMARY','ALC')
   AND l_bflow_method_code = 'PRIOR_ENTRY'
--   AND (l_actual_upg_option = 'Y' OR l_enc_upg_option = 'Y') Bug 4922099
   AND ( (NVL(l_actual_upg_option, 'N') IN ('Y', 'O')) OR
         (NVL(l_enc_upg_option, 'N') IN ('Y', 'O'))
       )
   THEN
         xla_ae_lines_pkg.BflowUpgEntry
           (p_business_method_code    => l_bflow_method_code
           ,p_business_class_code     => l_bflow_class_code
           ,p_balance_type            => l_balance_type_code);
   ELSE
      NULL;
XLA_AE_LINES_PKG.business_flow_validation(
                                p_business_method_code     => l_bflow_method_code
                               ,p_business_class_code      => l_bflow_class_code
                               ,p_inherit_description_flag => l_inherit_desc_flag);
   END IF;

   --
   -- call analytical criteria
   --
   -- Inherited Analytical Criteria for business flow method of Prior Entry.
   --
   -- call description
   --
   -- No description or it is inherited.
   --
   -- call ADRs
   -- Bug 4922099
   --
   IF ( (l_bflow_method_code <> 'PRIOR_ENTRY') OR
        (NVL(l_actual_upg_option, 'N') = 'O') OR
        (NVL(l_enc_upg_option, 'N') = 'O')
      )
   THEN
   NULL;
   --
   --
   
   --
   --
   END IF;
   --
   -- Bug 4922099
   IF ( ( (NVL(l_actual_upg_option, 'N') = 'O') OR
          (NVL(l_enc_upg_option, 'N') = 'O')
        ) AND
        (l_bflow_method_code = 'PRIOR_ENTRY')
      )
   THEN
      IF
      --
      1 = 1
      --
      THEN
      xla_accounting_err_pkg.build_message
                                    (p_appli_s_name            => 'XLA'
                                    ,p_msg_name                => 'XLA_UPG_OVERRIDE_ADR_UNDEFINED'
                                    ,p_token_1                 => 'LINE_NUMBER'
                                    ,p_value_1                 => XLA_AE_LINES_PKG.g_LineNumber
                                    ,p_token_2                 => 'LINE_TYPE_NAME'
                                    ,p_value_2                 => XLA_AE_SOURCES_PKG.GetComponentName (
                                                                             l_component_type
                                                                            ,l_component_code
                                                                            ,l_component_type_code
                                                                            ,l_component_appl_id
                                                                            ,l_amb_context_code
                                                                            ,l_entity_code
                                                                            ,l_event_class_code
                                                                           )
                                    ,p_token_3                 => 'OWNER'
                                    ,p_value_3                 => xla_lookups_pkg.get_meaning(
                                                                          p_lookup_type     => 'XLA_OWNER_TYPE'
                                                                          ,p_lookup_code    => l_component_type_code
                                                                         )
                                    ,p_token_4                 => 'PRODUCT_NAME'
                                    ,p_value_4                 => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.application_name
                                    ,p_entity_id               => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.entity_id
                                    ,p_event_id                => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.event_id
                                    ,p_ledger_id               => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id
                                    ,p_ae_header_id            =>  NULL
                                       );

        IF (C_LEVEL_ERROR>= g_log_level) THEN
                 trace
                      (p_msg      => 'ERROR: XLA_UPG_OVERRIDE_ADR_UNDEFINED'
                      ,p_level    => C_LEVEL_ERROR
                      ,p_module   => l_log_module);
        END IF;
      END IF;
   END IF;
   --
   --
   ------------------------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- NOTE: XLA_AE_LINES_PKG.ValidateCurrentLine should NOT be generated if business flow method is
   -- Prior Entry.  Currently, the following code is always generated.
   ------------------------------------------------------------------------------------------------
   -- No ValidateCurrentLine for business flow method of Prior Entry

   ------------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- Populated credit and debit amounts -- Need to generate this within IF <condition>
   ------------------------------------------------------------------------------------
   XLA_AE_LINES_PKG.SetDebitCreditAmounts;

   ----------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- Update journal entry status -- Need to generate this within IF <condition>
   ----------------------------------------------------------------------------------
   XLA_AE_JOURNAL_ENTRY_PKG.UpdateJournalEntryStatus
         (p_hdr_idx => g_array_event(p_event_id).array_value_num('header_index')
         ,p_balance_type_code => l_balance_type_code
         );

   -------------------------------------------------------------------------------------------
   -- 4262811 - Generate the Accrual Reversal lines
   -------------------------------------------------------------------------------------------
   BEGIN
      l_acc_rev_flag := XLA_AE_HEADER_PKG.g_rec_header_new.array_accrual_reversal_flag
                              (g_array_event(p_event_id).array_value_num('header_index'));
      IF l_acc_rev_flag IS NULL THEN
         l_acc_rev_flag := 'N';
      END IF;
   EXCEPTION
      WHEN OTHERS THEN
         l_acc_rev_flag := 'N';
   END;
   --
   IF (l_acc_rev_flag = 'Y') THEN

       -- 4645092  ------------------------------------------------------------------------------
       -- To allow MPA report to determine if it should generate report process
       XLA_ACCOUNTING_PKG.g_mpa_accrual_exists := 'Y';
       ------------------------------------------------------------------------------------------

       l_accrual_line_num := XLA_AE_LINES_PKG.g_LineNumber;
       XLA_AE_LINES_PKG.CopyLineInfo(l_accrual_line_num);
   -- added call to set_ccid to execute mapping  for secondary accrual reversal entries bug 7444204
   -- call ADRs
   -- Bug 4922099
   --
   IF ( (l_bflow_method_code <> 'PRIOR_ENTRY') OR
        (NVL(l_actual_upg_option, 'N') = 'O') OR
        (NVL(l_enc_upg_option, 'N') = 'O')
      )
   THEN
   NULL;
   --
   --
   
   --
   --
   END IF;

       --
       -- Update the line information that should be overwritten
       --
       XLA_AE_LINES_PKG.set_ae_header_id(p_ae_header_id => p_event_id ,
                                         p_header_num   => 1);
       XLA_AE_LINES_PKG.g_rec_lines.array_header_num(XLA_AE_LINES_PKG.g_LineNumber)  :=1;

       XLA_AE_LINES_PKG.g_rec_lines.array_business_class_code(XLA_AE_LINES_PKG.g_LineNumber) := NULL; -- 4669271

       IF l_bflow_method_code <> 'NONE' THEN  -- 4655713b
          XLA_AE_LINES_PKG.g_rec_lines.array_reversal_code(XLA_AE_LINES_PKG.g_LineNumber) := CONCAT('MPA_',l_bflow_method_code);
       END IF;

      --
      -- Depending on the Reversal Method setup, do a switch side or changes sign for the amounts
      --
      IF (XLA_AE_JOURNAL_ENTRY_PKG.g_cache_ledgers_info.ledger_reversal_option = 'SIDE') THEN
          XLA_AE_LINES_PKG.g_rec_lines.array_natural_side_code(XLA_AE_LINES_PKG.g_LineNumber) :=  l_acc_rev_natural_side_code;
      ELSE
          ---------------------------------------------------------------------------------------------------
          -- 4262811a Switch Sign
          ---------------------------------------------------------------------------------------------------
          XLA_AE_LINES_PKG.g_rec_lines.array_switch_side_flag(XLA_AE_LINES_PKG.g_LineNumber) := 'N';  -- 5052518
          XLA_AE_LINES_PKG.g_rec_lines.array_ledger_amount(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_ledger_amount(XLA_AE_LINES_PKG.g_LineNumber) * -1;
          XLA_AE_LINES_PKG.g_rec_lines.array_entered_amount(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_entered_amount(XLA_AE_LINES_PKG.g_LineNumber) * -1;
          -- 5132302
          XLA_AE_LINES_PKG.g_rec_lines.array_bflow_applied_to_amt(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_bflow_applied_to_amt(XLA_AE_LINES_PKG.g_LineNumber) * -1;

      END IF;

      -- 4955764
      XLA_AE_LINES_PKG.g_rec_lines.array_gl_date(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_HEADER_PKG.g_rec_header_new.array_gl_date(g_array_event(p_event_id).array_value_num('acc_rev_header_index'));


      XLA_AE_LINES_PKG.ValidateCurrentLine;
      XLA_AE_LINES_PKG.SetDebitCreditAmounts;

      XLA_AE_JOURNAL_ENTRY_PKG.UpdateJournalEntryStatus
               (p_hdr_idx           => g_array_event(p_event_id).array_value_num('acc_rev_header_index')
               ,p_balance_type_code => l_balance_type_code);

   END IF;

   -----------------------------------------------------------------------------------------
   -- 4262811 Multiperiod Accounting
   -----------------------------------------------------------------------------------------
     -- No MPA option is assigned.


END IF;
END IF;
--

--
IF (C_LEVEL_PROCEDURE >= g_log_level) THEN
   trace
      (p_msg      => 'END of AcctLineType_21'
      ,p_level    => C_LEVEL_PROCEDURE
      ,p_module   => l_log_module);
END IF;
--
EXCEPTION
  WHEN xla_exceptions_pkg.application_exception THEN
      RAISE;
  WHEN OTHERS THEN
       xla_exceptions_pkg.raise_message
           (p_location => 'XLA_00200_AAD_S_000010_BC_PKG.AcctLineType_21');
END AcctLineType_21;
--

---------------------------------------
--
-- PRIVATE FUNCTION
--         AcctLineType_22
--
---------------------------------------
PROCEDURE AcctLineType_22 (
  p_application_id        IN NUMBER
 ,p_event_id              IN NUMBER
 ,p_calculate_acctd_flag  IN VARCHAR2
 ,p_calculate_g_l_flag    IN VARCHAR2
 ,p_actual_flag           IN OUT VARCHAR2
 ,p_balance_type_code     OUT VARCHAR2
 ,p_gain_or_loss_ref      OUT VARCHAR2
 
--Invoice Distribution Description
 , p_source_1            IN VARCHAR2
--Purchase Order Rate Variance Gain Account
 , p_source_6            IN NUMBER
--Automatic Offsets Value
 , p_source_7            IN VARCHAR2
 , p_source_7_meaning    IN VARCHAR2
--Invoice Distribution Ledger Amount
 , p_source_8            IN NUMBER
--Destination Type of the PO Distribution
 , p_source_9            IN VARCHAR2
 , p_source_9_meaning    IN VARCHAR2
--Purchase Order Rate Variance Loss Account
 , p_source_10            IN NUMBER
--Invoice Distribution Account
 , p_source_11            IN NUMBER
--Automatic Offsets Flag
 , p_source_12            IN VARCHAR2
 , p_source_12_meaning    IN VARCHAR2
--Invoice Distribution Type
 , p_source_15            IN VARCHAR2
 , p_source_15_meaning    IN VARCHAR2
--Purchasing Encumbrance Option
 , p_source_17            IN VARCHAR2
 , p_source_17_meaning    IN VARCHAR2
--Accounting Reversal Indicator
 , p_source_19            IN VARCHAR2
--Distribution Link Type
 , p_source_21            IN VARCHAR2
--Allocation to Main Distribution Identifier
 , p_source_23            IN NUMBER
--Invoice Identifier
 , p_source_24            IN NUMBER
--Business Flow Accounts Payable Application Identifier
 , p_source_25            IN NUMBER
--Business Flow Invoice Distribution Type
 , p_source_26            IN VARCHAR2
--Business Flow Invoice Entity Code
 , p_source_27            IN VARCHAR2
--Business Flow Invoice Distribution Identifier
 , p_source_28            IN NUMBER
--Business Flow Invoice Identifier
 , p_source_29            IN NUMBER
--Invoice Distribution Identifier
 , p_source_30            IN NUMBER
--Payables Encumbrance Upgrade Credit Account
 , p_source_31            IN NUMBER
--Payables Encumbrance Upgrade Credit Amount
 , p_source_32            IN NUMBER
--Invoice Currency Code
 , p_source_33            IN VARCHAR2
--Payables Encumbrance Upgrade Credit Base Amount
 , p_source_34            IN NUMBER
--Payables Encumbrance Upgrade Debit Account
 , p_source_35            IN NUMBER
--Payables Encumbrance Upgrade Debit Amount
 , p_source_36            IN NUMBER
--Payables Encumbrance Upgrade Debit Base Amount
 , p_source_37            IN NUMBER
--Payables Encumbrance Upgrade Option
 , p_source_38            IN VARCHAR2
--Invoice Exchange Date
 , p_source_39            IN DATE
--Invoice Exchange Rate
 , p_source_40            IN NUMBER
--Invoice Exchange Rate Type
 , p_source_41            IN VARCHAR2
--Deferred Accounting End Date
 , p_source_43            IN DATE
--Deferred Accounting Option
 , p_source_44            IN VARCHAR2
--Deferred Accounting Start Date
 , p_source_45            IN DATE
--Override Accounted Amount Indicator
 , p_source_46            IN VARCHAR2
 , p_source_46_meaning    IN VARCHAR2
--Invoice Supplier Identifier
 , p_source_47            IN NUMBER
--Invoice Supplier Site Identifier
 , p_source_48            IN NUMBER
--Third Party Type
 , p_source_49            IN VARCHAR2
--Parent Reversal Identifier
 , p_source_50            IN NUMBER
--Invoice Distribution Statistical Amount
 , p_source_51            IN NUMBER
--Invoice Distribution Tax Line Identifier
 , p_source_52            IN NUMBER
--Invoice Distribution Tax Distribution Identifier from Tax
 , p_source_53            IN NUMBER
--Invoice Distribution Summary Tax Line Identifier
 , p_source_54            IN NUMBER
--Payables Upgrade Credit Encumbrance Type Identifier
 , p_source_55            IN NUMBER
--Payables Upgrade Debit Encumbrance Type Identifier
 , p_source_56            IN NUMBER
--Invoice Distribution Encumbrance Amount
 , p_source_65            IN NUMBER
--Invoice Distribution Encumbrance Ledger Amount
 , p_source_66            IN NUMBER
)
IS

l_component_type              VARCHAR2(80);
l_component_code              VARCHAR2(30);
l_component_type_code         VARCHAR2(1);
l_component_appl_id           INTEGER;
l_amb_context_code            VARCHAR2(30);
l_entity_code                 VARCHAR2(30);
l_event_class_code            VARCHAR2(30);
l_ae_header_id                NUMBER;
l_event_type_code             VARCHAR2(30);
l_line_definition_code        VARCHAR2(30);
l_line_definition_owner_code  VARCHAR2(1);
--
-- adr variables
l_segment                     VARCHAR2(30);
l_ccid                        NUMBER;
l_adr_transaction_coa_id      NUMBER;
l_adr_accounting_coa_id       NUMBER;
l_adr_flexfield_segment_code  VARCHAR2(30);
l_adr_flex_value_set_id       NUMBER;
l_adr_value_type_code         VARCHAR2(30);
l_adr_value_combination_id    NUMBER;
l_adr_value_segment_code      VARCHAR2(30);

l_bflow_method_code           VARCHAR2(30);  -- 4219869 Business Flow
l_bflow_class_code            VARCHAR2(30);  -- 4219869 Business Flow
l_inherit_desc_flag           VARCHAR2(1);   -- 4219869 Business Flow
l_budgetary_control_flag      VARCHAR2(1);   -- 4458381 Public Sector Enh

-- 4262811 Variables ------------------------------------------------------------------------------------------
l_entered_amt_idx             NUMBER;
l_accted_amt_idx              NUMBER;
l_acc_rev_flag                VARCHAR2(1);
l_accrual_line_num            NUMBER;
l_tmp_amt                     NUMBER;
l_acc_rev_natural_side_code   VARCHAR2(1);

l_num_entries                 NUMBER;
l_gl_dates                    xla_ae_journal_entry_pkg.t_array_date;
l_accted_amts                 xla_ae_journal_entry_pkg.t_array_num;
l_entered_amts                xla_ae_journal_entry_pkg.t_array_num;
l_period_names                xla_ae_journal_entry_pkg.t_array_V15L;
l_recog_line_1                NUMBER;
l_recog_line_2                NUMBER;

l_bflow_applied_to_amt_idx    NUMBER;                                -- 5132302
l_bflow_applied_to_amt        NUMBER;                                -- 5132302
l_bflow_applied_to_amts       xla_ae_journal_entry_pkg.t_array_num;  -- 5132302

l_event_id                    NUMBER;  -- To handle MPA header Description: xla_ae_header_pkg.SetHdrDescription

--l_rounding_ccy                VARCHAR2(15); -- To handle MPA rounding  4262811b
l_same_currency               BOOLEAN;        -- To handle MPA rounding  4262811b

---------------------------------------------------------------------------------------------------------------


--
-- bulk performance
--
l_balance_type_code           VARCHAR2(1);
l_rec_acct_attrs              XLA_AE_LINES_PKG.t_rec_acct_attrs;
l_log_module                  VARCHAR2(240);

--
-- Upgrade strategy
--
l_actual_upg_option           VARCHAR2(1);
l_enc_upg_option           VARCHAR2(1);

--
BEGIN
--
IF g_log_enabled THEN
      l_log_module := C_DEFAULT_MODULE||'.AcctLineType_22';
END IF;
--
IF (C_LEVEL_PROCEDURE >= g_log_level) THEN

      trace
         (p_msg      => 'BEGIN of AcctLineType_22'
         ,p_level    => C_LEVEL_PROCEDURE
         ,p_module   => l_log_module);

END IF;
--
l_component_type             := 'AMB_JLT';
l_component_code             := 'AP_EX_RATE_VAR_CM_ENC_DR';
l_component_type_code        := 'S';
l_component_appl_id          :=  200;
l_amb_context_code           := 'DEFAULT';
l_entity_code                := 'AP_INVOICES';
l_event_class_code           := 'CREDIT MEMOS';
l_event_type_code            := 'CREDIT MEMOS_ALL';
l_line_definition_owner_code := 'S';
l_line_definition_code       := 'ENC_CM_ALL';
--
l_balance_type_code          := 'E';
l_segment                     := NULL;
l_ccid                        := NULL;
l_adr_transaction_coa_id      := NULL;
l_adr_accounting_coa_id       := NULL;
l_adr_flexfield_segment_code  := NULL;
l_adr_flex_value_set_id       := NULL;
l_adr_value_type_code         := NULL;
l_adr_value_combination_id    := NULL;
l_adr_value_segment_code      := NULL;

l_bflow_method_code          := 'NONE';   -- 4219869 Business Flow
l_bflow_class_code           := 'AP_INV_ENCUM';    -- 4219869 Business Flow
l_inherit_desc_flag          := 'N';   -- 4219869 Business Flow
l_budgetary_control_flag     := 'Y';

l_bflow_applied_to_amt_idx   := NULL; -- 5132302
l_bflow_applied_to_amt       := NULL; -- 5132302
l_entered_amt_idx            := NULL;          -- 4262811
l_accted_amt_idx             := NULL;          -- 4262811
l_acc_rev_flag               := NULL;          -- 4262811
l_accrual_line_num           := NULL;          -- 4262811
l_tmp_amt                    := NULL;          -- 4262811
--
IF ((p_calculate_g_l_flag = 'Y' AND XLA_AE_JOURNAL_ENTRY_PKG.g_cache_ledgers_info.ledger_category_code <> 'ALC') or
            (XLA_AE_JOURNAL_ENTRY_PKG.g_cache_ledgers_info.ledger_category_code in ('ALC', 'SECONDARY') AND XLA_AE_JOURNAL_ENTRY_PKG.g_cache_ledgers_info.calculate_amts_flag='Y')) THEN
               return;
  END IF;
  
IF XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id = XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.ledger_id OR
    l_balance_type_code <> 'B' THEN
IF NVL(p_source_15,'
') =  'ERV' AND 
NVL(p_source_17,'
') =  'Y'
 THEN 

   --
   XLA_AE_LINES_PKG.SetNewLine;

   p_balance_type_code          := l_balance_type_code;
   -- set the flag so later we will know whether the gain loss line needs to be created
   
   IF(l_balance_type_code = 'A' ) THEN
     p_actual_flag :='G';
   END IF;

   --
   -- bulk performance
   --
   XLA_AE_LINES_PKG.set_ae_header_id (p_ae_header_id => p_event_id ,
                                      p_header_num   => 0); -- 4262811
   --
   -- set accounting line options
   --
   l_ae_header_id:= xla_ae_lines_pkg.SetAcctLineOption(
           p_natural_side_code          => 'D'
         , p_gain_or_loss_flag          => 'Y'
         , p_gl_transfer_mode_code      => 'S'
         , p_acct_entry_type_code       => 'E'
         , p_switch_side_flag           => 'Y'
         , p_merge_duplicate_code       => 'N'
         );
   --
   l_acc_rev_natural_side_code := 'C';  -- 4262811
   -- 
   --
   -- set accounting line type info
   --
   xla_ae_lines_pkg.SetAcctLineType
      (p_component_type             => l_component_type
      ,p_event_type_code            => l_event_type_code
      ,p_line_definition_owner_code => l_line_definition_owner_code
      ,p_line_definition_code       => l_line_definition_code
      ,p_accounting_line_code       => l_component_code
      ,p_accounting_line_type_code  => l_component_type_code
      ,p_accounting_line_appl_id    => l_component_appl_id
      ,p_amb_context_code           => l_amb_context_code
      ,p_entity_code                => l_entity_code
      ,p_event_class_code           => l_event_class_code);
   --
   -- set accounting class
   --
   xla_ae_lines_pkg.SetAcctClass(
           p_accounting_class_code  => 'EXCHANGE_RATE_VARIANCE'
         , p_ae_header_id           => l_ae_header_id
         );

   --
   -- set rounding class
   --
   XLA_AE_LINES_PKG.g_rec_lines.array_rounding_class(XLA_AE_LINES_PKG.g_LineNumber) :=
                      'EXCHANGE_RATE_VARIANCE';

   --
   xla_ae_lines_pkg.g_rec_lines.array_calculate_acctd_flag(xla_ae_lines_pkg.g_LineNumber) := p_calculate_acctd_flag;
   xla_ae_lines_pkg.g_rec_lines.array_calculate_g_l_flag(xla_ae_lines_pkg.g_LineNumber) := p_calculate_g_l_flag;
   --
   -- bulk performance
   --
   XLA_AE_LINES_PKG.g_rec_lines.array_balance_type_code(XLA_AE_LINES_PKG.g_LineNumber) := l_balance_type_code;

   XLA_AE_LINES_PKG.g_rec_lines.array_ledger_id(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id;

   -- 4955764
   XLA_AE_LINES_PKG.g_rec_lines.array_gl_date(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_HEADER_PKG.g_rec_header_new.array_gl_date(g_array_event(p_event_id).array_value_num('header_index'));

   -- 4458381 Public Sector Enh
      XLA_AE_LINES_PKG.g_rec_lines.array_encumbrance_type_id(XLA_AE_LINES_PKG.g_LineNumber) := 1060;
   --
   -- set accounting attributes for the line type
   --
   l_entered_amt_idx := 23;
   l_accted_amt_idx  := 28;
   l_bflow_applied_to_amt_idx  := NULL;  -- 5132302
   l_rec_acct_attrs.array_acct_attr_code(1) := 'ACCOUNTING_REVERSAL_OPTION';
   l_rec_acct_attrs.array_char_value(1)  := p_source_19;
   l_rec_acct_attrs.array_acct_attr_code(2) := 'ALLOC_TO_APPLICATION_ID';
   l_rec_acct_attrs.array_num_value(2)  := 
xla_ae_sources_pkg.GetSystemSourceNum(
   p_source_code           => 'XLA_EVENT_APPL_ID'
 , p_source_type_code      => 'Y'
 , p_source_application_id =>  602
);
   l_rec_acct_attrs.array_acct_attr_code(3) := 'ALLOC_TO_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(3)  := p_source_21;
   l_rec_acct_attrs.array_acct_attr_code(4) := 'ALLOC_TO_ENTITY_CODE';
   l_rec_acct_attrs.array_char_value(4)  := 
xla_ae_sources_pkg.GetSystemSourceChar(
   p_source_code           => 'XLA_ENTITY_CODE'
 , p_source_type_code      => 'Y'
 , p_source_application_id =>  602
);
   l_rec_acct_attrs.array_acct_attr_code(5) := 'ALLOC_TO_FIRST_DIST_ID';
   l_rec_acct_attrs.array_num_value(5)  :=  to_char(p_source_23);
   l_rec_acct_attrs.array_acct_attr_code(6) := 'ALLOC_TO_FIRST_SYS_TRAN_ID';
   l_rec_acct_attrs.array_num_value(6)  :=  to_char(p_source_24);
   l_rec_acct_attrs.array_acct_attr_code(7) := 'APPLIED_TO_APPLICATION_ID';
   l_rec_acct_attrs.array_num_value(7)  := p_source_25;
   l_rec_acct_attrs.array_acct_attr_code(8) := 'APPLIED_TO_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(8)  := p_source_26;
   l_rec_acct_attrs.array_acct_attr_code(9) := 'APPLIED_TO_ENTITY_CODE';
   l_rec_acct_attrs.array_char_value(9)  := p_source_27;
   l_rec_acct_attrs.array_acct_attr_code(10) := 'APPLIED_TO_FIRST_DIST_ID';
   l_rec_acct_attrs.array_num_value(10)  :=  to_char(p_source_28);
   l_rec_acct_attrs.array_acct_attr_code(11) := 'APPLIED_TO_FIRST_SYS_TRAN_ID';
   l_rec_acct_attrs.array_num_value(11)  :=  to_char(p_source_29);
   l_rec_acct_attrs.array_acct_attr_code(12) := 'DISTRIBUTION_IDENTIFIER_1';
   l_rec_acct_attrs.array_num_value(12)  :=  to_char(p_source_30);
   l_rec_acct_attrs.array_acct_attr_code(13) := 'DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(13)  := p_source_21;
   l_rec_acct_attrs.array_acct_attr_code(14) := 'ENC_UPG_CR_CCID';
   l_rec_acct_attrs.array_num_value(14)  := p_source_31;
   l_rec_acct_attrs.array_acct_attr_code(15) := 'ENC_UPG_CR_ENTERED_AMT';
   l_rec_acct_attrs.array_num_value(15)  := p_source_32;
   l_rec_acct_attrs.array_acct_attr_code(16) := 'ENC_UPG_CR_ENTERED_CURR';
   l_rec_acct_attrs.array_char_value(16)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(17) := 'ENC_UPG_CR_LEDGER_AMT';
   l_rec_acct_attrs.array_num_value(17)  := p_source_34;
   l_rec_acct_attrs.array_acct_attr_code(18) := 'ENC_UPG_DR_CCID';
   l_rec_acct_attrs.array_num_value(18)  := p_source_35;
   l_rec_acct_attrs.array_acct_attr_code(19) := 'ENC_UPG_DR_ENTERED_AMT';
   l_rec_acct_attrs.array_num_value(19)  := p_source_36;
   l_rec_acct_attrs.array_acct_attr_code(20) := 'ENC_UPG_DR_ENTERED_CURR';
   l_rec_acct_attrs.array_char_value(20)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(21) := 'ENC_UPG_DR_LEDGER_AMT';
   l_rec_acct_attrs.array_num_value(21)  := p_source_37;
   l_rec_acct_attrs.array_acct_attr_code(22) := 'ENC_UPG_OPTION';
   l_rec_acct_attrs.array_char_value(22)  := p_source_38;
   l_rec_acct_attrs.array_acct_attr_code(23) := 'ENTERED_CURRENCY_AMOUNT';
   l_rec_acct_attrs.array_num_value(23)  := p_source_65;
   l_rec_acct_attrs.array_acct_attr_code(24) := 'ENTERED_CURRENCY_CODE';
   l_rec_acct_attrs.array_char_value(24)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(25) := 'EXCHANGE_DATE';
   l_rec_acct_attrs.array_date_value(25)  := p_source_39;
   l_rec_acct_attrs.array_acct_attr_code(26) := 'EXCHANGE_RATE';
   l_rec_acct_attrs.array_num_value(26)  := p_source_40;
   l_rec_acct_attrs.array_acct_attr_code(27) := 'EXCHANGE_RATE_TYPE';
   l_rec_acct_attrs.array_char_value(27)  := p_source_41;
   l_rec_acct_attrs.array_acct_attr_code(28) := 'LEDGER_AMOUNT';
   l_rec_acct_attrs.array_num_value(28)  := p_source_66;
   l_rec_acct_attrs.array_acct_attr_code(29) := 'MULTIPERIOD_END_DATE';
   l_rec_acct_attrs.array_date_value(29)  := p_source_43;
   l_rec_acct_attrs.array_acct_attr_code(30) := 'MULTIPERIOD_OPTION';
   l_rec_acct_attrs.array_char_value(30)  := p_source_44;
   l_rec_acct_attrs.array_acct_attr_code(31) := 'MULTIPERIOD_START_DATE';
   l_rec_acct_attrs.array_date_value(31)  := p_source_45;
   l_rec_acct_attrs.array_acct_attr_code(32) := 'OVERRIDE_ACCTD_AMT_FLAG';
   l_rec_acct_attrs.array_char_value(32)  := p_source_46;
   l_rec_acct_attrs.array_acct_attr_code(33) := 'PARTY_ID';
   l_rec_acct_attrs.array_num_value(33)  := p_source_47;
   l_rec_acct_attrs.array_acct_attr_code(34) := 'PARTY_SITE_ID';
   l_rec_acct_attrs.array_num_value(34)  := p_source_48;
   l_rec_acct_attrs.array_acct_attr_code(35) := 'PARTY_TYPE';
   l_rec_acct_attrs.array_char_value(35)  := p_source_49;
   l_rec_acct_attrs.array_acct_attr_code(36) := 'REVERSED_DISTRIBUTION_ID1';
   l_rec_acct_attrs.array_num_value(36)  :=  to_char(p_source_50);
   l_rec_acct_attrs.array_acct_attr_code(37) := 'REVERSED_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(37)  := p_source_21;
   l_rec_acct_attrs.array_acct_attr_code(38) := 'STATISTICAL_AMOUNT';
   l_rec_acct_attrs.array_num_value(38)  := p_source_51;
   l_rec_acct_attrs.array_acct_attr_code(39) := 'TAX_LINE_REF_ID';
   l_rec_acct_attrs.array_num_value(39)  := p_source_52;
   l_rec_acct_attrs.array_acct_attr_code(40) := 'TAX_REC_NREC_DIST_REF_ID';
   l_rec_acct_attrs.array_num_value(40)  := p_source_53;
   l_rec_acct_attrs.array_acct_attr_code(41) := 'TAX_SUMMARY_LINE_REF_ID';
   l_rec_acct_attrs.array_num_value(41)  := p_source_54;
   l_rec_acct_attrs.array_acct_attr_code(42) := 'UPG_CR_ENC_TYPE_ID';
   l_rec_acct_attrs.array_num_value(42)  := p_source_55;
   l_rec_acct_attrs.array_acct_attr_code(43) := 'UPG_DR_ENC_TYPE_ID';
   l_rec_acct_attrs.array_num_value(43)  := p_source_56;

   XLA_AE_LINES_PKG.SetLineAcctAttrs(l_rec_acct_attrs);
   p_gain_or_loss_ref  := XLA_AE_LINES_PKG.g_rec_lines.array_gain_or_loss_ref(XLA_AE_LINES_PKG.g_LineNumber);

   ---------------------------------------------------------------------------------------------------------------
   -- 4336173 -- assign Business Flow Class (replace code in xla_ae_lines_pkg.Business_Flow_Validation)
   ---------------------------------------------------------------------------------------------------------------
   XLA_AE_LINES_PKG.g_rec_lines.array_business_class_code(XLA_AE_LINES_PKG.g_LineNumber) := l_bflow_class_code;

   l_actual_upg_option  := XLA_AE_LINES_PKG.g_rec_lines.array_actual_upg_option(XLA_AE_LINES_PKG.g_LineNumber);
   l_enc_upg_option     := XLA_AE_LINES_PKG.g_rec_lines.array_enc_upg_option(XLA_AE_LINES_PKG.g_LineNumber);

   IF xla_accounting_cache_pkg.GetValueChar
         (p_source_code         => 'LEDGER_CATEGORY_CODE'
         ,p_target_ledger_id    => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id) IN ('PRIMARY','ALC')
   AND l_bflow_method_code = 'PRIOR_ENTRY'
--   AND (l_actual_upg_option = 'Y' OR l_enc_upg_option = 'Y') Bug 4922099
   AND ( (NVL(l_actual_upg_option, 'N') IN ('Y', 'O')) OR
         (NVL(l_enc_upg_option, 'N') IN ('Y', 'O'))
       )
   THEN
         xla_ae_lines_pkg.BflowUpgEntry
           (p_business_method_code    => l_bflow_method_code
           ,p_business_class_code     => l_bflow_class_code
           ,p_balance_type            => l_balance_type_code);
   ELSE
      NULL;
-- No business flow processing for business flow method of NONE.
   END IF;

   --
   -- call analytical criteria
   --
   
   --
   -- call description
   --
   
xla_ae_lines_pkg.SetLineDescription(
   p_ae_header_id => l_ae_header_id
  ,p_description  => Description_2 (
     p_application_id         => p_application_id
   , p_ae_header_id           => l_ae_header_id 
, p_source_1 => p_source_1
   )
);


   --
   -- call ADRs
   -- Bug 4922099
   --
   IF ( (l_bflow_method_code <> 'PRIOR_ENTRY') OR
        (NVL(l_actual_upg_option, 'N') = 'O') OR
        (NVL(l_enc_upg_option, 'N') = 'O')
      )
   THEN
   NULL;
   --
   --
   
  l_ccid := AcctDerRule_6(
           p_application_id           => p_application_id
         , p_ae_header_id             => l_ae_header_id 
, p_source_6 => p_source_6
, p_source_7 => p_source_7
, p_source_7_meaning => p_source_7_meaning
, p_source_8 => p_source_8
, p_source_9 => p_source_9
, p_source_9_meaning => p_source_9_meaning
, p_source_10 => p_source_10
, p_source_11 => p_source_11
, p_source_12 => p_source_12
, p_source_12_meaning => p_source_12_meaning
         , x_transaction_coa_id       => l_adr_transaction_coa_id
         , x_accounting_coa_id        => l_adr_accounting_coa_id
         , x_value_type_code          => l_adr_value_type_code
         , p_side                     => 'NA'
   );

   xla_ae_lines_pkg.set_ccid(
    p_code_combination_id          => l_ccid
  , p_value_type_code              => l_adr_value_type_code
  , p_transaction_coa_id           => l_adr_transaction_coa_id
  , p_accounting_coa_id            => l_adr_accounting_coa_id
  , p_adr_code                     => 'AP_EXCHG_TAXEXCHG_RATE_VAR'
  , p_adr_type_code                => 'S'
  , p_component_type               => l_component_type
  , p_component_code               => l_component_code
  , p_component_type_code          => l_component_type_code
  , p_component_appl_id            => l_component_appl_id
  , p_amb_context_code             => l_amb_context_code
  , p_side                         => 'NA'
  );


   l_segment := AcctDerRule_4(
           p_application_id           => p_application_id
         , p_ae_header_id             => l_ae_header_id 
, p_source_6 => p_source_6
, p_source_7 => p_source_7
, p_source_7_meaning => p_source_7_meaning
, p_source_8 => p_source_8
, p_source_9 => p_source_9
, p_source_9_meaning => p_source_9_meaning
, p_source_10 => p_source_10
         , x_transaction_coa_id       => l_adr_transaction_coa_id
         , x_accounting_coa_id        => l_adr_accounting_coa_id
         , x_flexfield_segment_code   => l_adr_flexfield_segment_code
         , x_flex_value_set_id        => l_adr_flex_value_set_id
         , x_value_type_code          => l_adr_value_type_code
         , x_value_combination_id     => l_adr_value_combination_id
         , x_value_segment_code       => l_adr_value_segment_code
         , p_side                     => 'NA'
         , p_override_seg_flag        => 'Y'
   );

   IF NVL(l_segment,'NULL') <> '#$NO_OVERRIDE#$' THEN  -- 4465612

      xla_ae_lines_pkg.set_segment(
          p_to_segment_code         => 'GL_ACCOUNT'
        , p_segment_value           => l_segment
        , p_from_segment_code       => l_adr_value_segment_code
        , p_from_combination_id     => l_adr_value_combination_id
        , p_value_type_code         => l_adr_value_type_code
        , p_transaction_coa_id      => l_adr_transaction_coa_id
        , p_accounting_coa_id       => l_adr_accounting_coa_id
        , p_flexfield_segment_code  => l_adr_flexfield_segment_code
        , p_flex_value_set_id       => l_adr_flex_value_set_id
        , p_adr_code                => 'AP_ERV_GAIN_LOSS_NAT_ACCT_SEG'
        , p_adr_type_code           => 'S'
        , p_component_type          => l_component_type
        , p_component_code          => l_component_code
        , p_component_type_code     => l_component_type_code
        , p_component_appl_id       => l_component_appl_id
        , p_amb_context_code        => l_amb_context_code
        , p_entity_code             => 'AP_INVOICES'
        , p_event_class_code        => 'CREDIT MEMOS'
        , p_side                    => 'NA'
        );

  END IF;

   l_segment := AcctDerRule_5(
           p_application_id           => p_application_id
         , p_ae_header_id             => l_ae_header_id 
, p_source_7 => p_source_7
, p_source_7_meaning => p_source_7_meaning
, p_source_9 => p_source_9
, p_source_9_meaning => p_source_9_meaning
, p_source_11 => p_source_11
         , x_transaction_coa_id       => l_adr_transaction_coa_id
         , x_accounting_coa_id        => l_adr_accounting_coa_id
         , x_flexfield_segment_code   => l_adr_flexfield_segment_code
         , x_flex_value_set_id        => l_adr_flex_value_set_id
         , x_value_type_code          => l_adr_value_type_code
         , x_value_combination_id     => l_adr_value_combination_id
         , x_value_segment_code       => l_adr_value_segment_code
         , p_side                     => 'NA'
         , p_override_seg_flag        => 'Y'
   );

   IF NVL(l_segment,'NULL') <> '#$NO_OVERRIDE#$' THEN  -- 4465612

      xla_ae_lines_pkg.set_segment(
          p_to_segment_code         => 'GL_BALANCING'
        , p_segment_value           => l_segment
        , p_from_segment_code       => l_adr_value_segment_code
        , p_from_combination_id     => l_adr_value_combination_id
        , p_value_type_code         => l_adr_value_type_code
        , p_transaction_coa_id      => l_adr_transaction_coa_id
        , p_accounting_coa_id       => l_adr_accounting_coa_id
        , p_flexfield_segment_code  => l_adr_flexfield_segment_code
        , p_flex_value_set_id       => l_adr_flex_value_set_id
        , p_adr_code                => 'AP_RELATED_DIST_BAL_SEG'
        , p_adr_type_code           => 'S'
        , p_component_type          => l_component_type
        , p_component_code          => l_component_code
        , p_component_type_code     => l_component_type_code
        , p_component_appl_id       => l_component_appl_id
        , p_amb_context_code        => l_amb_context_code
        , p_entity_code             => 'AP_INVOICES'
        , p_event_class_code        => 'CREDIT MEMOS'
        , p_side                    => 'NA'
        );

  END IF;

   --
   --
   END IF;
   --
   -- Bug 4922099
   IF ( ( (NVL(l_actual_upg_option, 'N') = 'O') OR
          (NVL(l_enc_upg_option, 'N') = 'O')
        ) AND
        (l_bflow_method_code = 'PRIOR_ENTRY')
      )
   THEN
      IF
      --
      1 = 2
      --
      THEN
      xla_accounting_err_pkg.build_message
                                    (p_appli_s_name            => 'XLA'
                                    ,p_msg_name                => 'XLA_UPG_OVERRIDE_ADR_UNDEFINED'
                                    ,p_token_1                 => 'LINE_NUMBER'
                                    ,p_value_1                 => XLA_AE_LINES_PKG.g_LineNumber
                                    ,p_token_2                 => 'LINE_TYPE_NAME'
                                    ,p_value_2                 => XLA_AE_SOURCES_PKG.GetComponentName (
                                                                             l_component_type
                                                                            ,l_component_code
                                                                            ,l_component_type_code
                                                                            ,l_component_appl_id
                                                                            ,l_amb_context_code
                                                                            ,l_entity_code
                                                                            ,l_event_class_code
                                                                           )
                                    ,p_token_3                 => 'OWNER'
                                    ,p_value_3                 => xla_lookups_pkg.get_meaning(
                                                                          p_lookup_type     => 'XLA_OWNER_TYPE'
                                                                          ,p_lookup_code    => l_component_type_code
                                                                         )
                                    ,p_token_4                 => 'PRODUCT_NAME'
                                    ,p_value_4                 => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.application_name
                                    ,p_entity_id               => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.entity_id
                                    ,p_event_id                => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.event_id
                                    ,p_ledger_id               => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id
                                    ,p_ae_header_id            =>  NULL
                                       );

        IF (C_LEVEL_ERROR>= g_log_level) THEN
                 trace
                      (p_msg      => 'ERROR: XLA_UPG_OVERRIDE_ADR_UNDEFINED'
                      ,p_level    => C_LEVEL_ERROR
                      ,p_module   => l_log_module);
        END IF;
      END IF;
   END IF;
   --
   --
   ------------------------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- NOTE: XLA_AE_LINES_PKG.ValidateCurrentLine should NOT be generated if business flow method is
   -- Prior Entry.  Currently, the following code is always generated.
   ------------------------------------------------------------------------------------------------
   XLA_AE_LINES_PKG.ValidateCurrentLine;

   ------------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- Populated credit and debit amounts -- Need to generate this within IF <condition>
   ------------------------------------------------------------------------------------
   XLA_AE_LINES_PKG.SetDebitCreditAmounts;

   ----------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- Update journal entry status -- Need to generate this within IF <condition>
   ----------------------------------------------------------------------------------
   XLA_AE_JOURNAL_ENTRY_PKG.UpdateJournalEntryStatus
         (p_hdr_idx => g_array_event(p_event_id).array_value_num('header_index')
         ,p_balance_type_code => l_balance_type_code
         );

   -------------------------------------------------------------------------------------------
   -- 4262811 - Generate the Accrual Reversal lines
   -------------------------------------------------------------------------------------------
   BEGIN
      l_acc_rev_flag := XLA_AE_HEADER_PKG.g_rec_header_new.array_accrual_reversal_flag
                              (g_array_event(p_event_id).array_value_num('header_index'));
      IF l_acc_rev_flag IS NULL THEN
         l_acc_rev_flag := 'N';
      END IF;
   EXCEPTION
      WHEN OTHERS THEN
         l_acc_rev_flag := 'N';
   END;
   --
   IF (l_acc_rev_flag = 'Y') THEN

       -- 4645092  ------------------------------------------------------------------------------
       -- To allow MPA report to determine if it should generate report process
       XLA_ACCOUNTING_PKG.g_mpa_accrual_exists := 'Y';
       ------------------------------------------------------------------------------------------

       l_accrual_line_num := XLA_AE_LINES_PKG.g_LineNumber;
       XLA_AE_LINES_PKG.CopyLineInfo(l_accrual_line_num);
   -- added call to set_ccid to execute mapping  for secondary accrual reversal entries bug 7444204
   -- call ADRs
   -- Bug 4922099
   --
   IF ( (l_bflow_method_code <> 'PRIOR_ENTRY') OR
        (NVL(l_actual_upg_option, 'N') = 'O') OR
        (NVL(l_enc_upg_option, 'N') = 'O')
      )
   THEN
   NULL;
   --
   --
   
  l_ccid := AcctDerRule_6(
           p_application_id           => p_application_id
         , p_ae_header_id             => l_ae_header_id 
, p_source_6 => p_source_6
, p_source_7 => p_source_7
, p_source_7_meaning => p_source_7_meaning
, p_source_8 => p_source_8
, p_source_9 => p_source_9
, p_source_9_meaning => p_source_9_meaning
, p_source_10 => p_source_10
, p_source_11 => p_source_11
, p_source_12 => p_source_12
, p_source_12_meaning => p_source_12_meaning
         , x_transaction_coa_id       => l_adr_transaction_coa_id
         , x_accounting_coa_id        => l_adr_accounting_coa_id
         , x_value_type_code          => l_adr_value_type_code
         , p_side                     => 'NA'
   );

   xla_ae_lines_pkg.set_ccid(
    p_code_combination_id          => l_ccid
  , p_value_type_code              => l_adr_value_type_code
  , p_transaction_coa_id           => l_adr_transaction_coa_id
  , p_accounting_coa_id            => l_adr_accounting_coa_id
  , p_adr_code                     => 'AP_EXCHG_TAXEXCHG_RATE_VAR'
  , p_adr_type_code                => 'S'
  , p_component_type               => l_component_type
  , p_component_code               => l_component_code
  , p_component_type_code          => l_component_type_code
  , p_component_appl_id            => l_component_appl_id
  , p_amb_context_code             => l_amb_context_code
  , p_side                         => 'NA'
  );


   l_segment := AcctDerRule_4(
           p_application_id           => p_application_id
         , p_ae_header_id             => l_ae_header_id 
, p_source_6 => p_source_6
, p_source_7 => p_source_7
, p_source_7_meaning => p_source_7_meaning
, p_source_8 => p_source_8
, p_source_9 => p_source_9
, p_source_9_meaning => p_source_9_meaning
, p_source_10 => p_source_10
         , x_transaction_coa_id       => l_adr_transaction_coa_id
         , x_accounting_coa_id        => l_adr_accounting_coa_id
         , x_flexfield_segment_code   => l_adr_flexfield_segment_code
         , x_flex_value_set_id        => l_adr_flex_value_set_id
         , x_value_type_code          => l_adr_value_type_code
         , x_value_combination_id     => l_adr_value_combination_id
         , x_value_segment_code       => l_adr_value_segment_code
         , p_side                     => 'NA'
         , p_override_seg_flag        => 'Y'
   );

   IF NVL(l_segment,'NULL') <> '#$NO_OVERRIDE#$' THEN  -- 4465612

      xla_ae_lines_pkg.set_segment(
          p_to_segment_code         => 'GL_ACCOUNT'
        , p_segment_value           => l_segment
        , p_from_segment_code       => l_adr_value_segment_code
        , p_from_combination_id     => l_adr_value_combination_id
        , p_value_type_code         => l_adr_value_type_code
        , p_transaction_coa_id      => l_adr_transaction_coa_id
        , p_accounting_coa_id       => l_adr_accounting_coa_id
        , p_flexfield_segment_code  => l_adr_flexfield_segment_code
        , p_flex_value_set_id       => l_adr_flex_value_set_id
        , p_adr_code                => 'AP_ERV_GAIN_LOSS_NAT_ACCT_SEG'
        , p_adr_type_code           => 'S'
        , p_component_type          => l_component_type
        , p_component_code          => l_component_code
        , p_component_type_code     => l_component_type_code
        , p_component_appl_id       => l_component_appl_id
        , p_amb_context_code        => l_amb_context_code
        , p_entity_code             => 'AP_INVOICES'
        , p_event_class_code        => 'CREDIT MEMOS'
        , p_side                    => 'NA'
        );

  END IF;

   l_segment := AcctDerRule_5(
           p_application_id           => p_application_id
         , p_ae_header_id             => l_ae_header_id 
, p_source_7 => p_source_7
, p_source_7_meaning => p_source_7_meaning
, p_source_9 => p_source_9
, p_source_9_meaning => p_source_9_meaning
, p_source_11 => p_source_11
         , x_transaction_coa_id       => l_adr_transaction_coa_id
         , x_accounting_coa_id        => l_adr_accounting_coa_id
         , x_flexfield_segment_code   => l_adr_flexfield_segment_code
         , x_flex_value_set_id        => l_adr_flex_value_set_id
         , x_value_type_code          => l_adr_value_type_code
         , x_value_combination_id     => l_adr_value_combination_id
         , x_value_segment_code       => l_adr_value_segment_code
         , p_side                     => 'NA'
         , p_override_seg_flag        => 'Y'
   );

   IF NVL(l_segment,'NULL') <> '#$NO_OVERRIDE#$' THEN  -- 4465612

      xla_ae_lines_pkg.set_segment(
          p_to_segment_code         => 'GL_BALANCING'
        , p_segment_value           => l_segment
        , p_from_segment_code       => l_adr_value_segment_code
        , p_from_combination_id     => l_adr_value_combination_id
        , p_value_type_code         => l_adr_value_type_code
        , p_transaction_coa_id      => l_adr_transaction_coa_id
        , p_accounting_coa_id       => l_adr_accounting_coa_id
        , p_flexfield_segment_code  => l_adr_flexfield_segment_code
        , p_flex_value_set_id       => l_adr_flex_value_set_id
        , p_adr_code                => 'AP_RELATED_DIST_BAL_SEG'
        , p_adr_type_code           => 'S'
        , p_component_type          => l_component_type
        , p_component_code          => l_component_code
        , p_component_type_code     => l_component_type_code
        , p_component_appl_id       => l_component_appl_id
        , p_amb_context_code        => l_amb_context_code
        , p_entity_code             => 'AP_INVOICES'
        , p_event_class_code        => 'CREDIT MEMOS'
        , p_side                    => 'NA'
        );

  END IF;

   --
   --
   END IF;

       --
       -- Update the line information that should be overwritten
       --
       XLA_AE_LINES_PKG.set_ae_header_id(p_ae_header_id => p_event_id ,
                                         p_header_num   => 1);
       XLA_AE_LINES_PKG.g_rec_lines.array_header_num(XLA_AE_LINES_PKG.g_LineNumber)  :=1;

       XLA_AE_LINES_PKG.g_rec_lines.array_business_class_code(XLA_AE_LINES_PKG.g_LineNumber) := NULL; -- 4669271

       IF l_bflow_method_code <> 'NONE' THEN  -- 4655713b
          XLA_AE_LINES_PKG.g_rec_lines.array_reversal_code(XLA_AE_LINES_PKG.g_LineNumber) := CONCAT('MPA_',l_bflow_method_code);
       END IF;

      --
      -- Depending on the Reversal Method setup, do a switch side or changes sign for the amounts
      --
      IF (XLA_AE_JOURNAL_ENTRY_PKG.g_cache_ledgers_info.ledger_reversal_option = 'SIDE') THEN
          XLA_AE_LINES_PKG.g_rec_lines.array_natural_side_code(XLA_AE_LINES_PKG.g_LineNumber) :=  l_acc_rev_natural_side_code;
      ELSE
          ---------------------------------------------------------------------------------------------------
          -- 4262811a Switch Sign
          ---------------------------------------------------------------------------------------------------
          XLA_AE_LINES_PKG.g_rec_lines.array_switch_side_flag(XLA_AE_LINES_PKG.g_LineNumber) := 'N';  -- 5052518
          XLA_AE_LINES_PKG.g_rec_lines.array_ledger_amount(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_ledger_amount(XLA_AE_LINES_PKG.g_LineNumber) * -1;
          XLA_AE_LINES_PKG.g_rec_lines.array_entered_amount(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_entered_amount(XLA_AE_LINES_PKG.g_LineNumber) * -1;
          -- 5132302
          XLA_AE_LINES_PKG.g_rec_lines.array_bflow_applied_to_amt(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_bflow_applied_to_amt(XLA_AE_LINES_PKG.g_LineNumber) * -1;

      END IF;

      -- 4955764
      XLA_AE_LINES_PKG.g_rec_lines.array_gl_date(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_HEADER_PKG.g_rec_header_new.array_gl_date(g_array_event(p_event_id).array_value_num('acc_rev_header_index'));


      XLA_AE_LINES_PKG.ValidateCurrentLine;
      XLA_AE_LINES_PKG.SetDebitCreditAmounts;

      XLA_AE_JOURNAL_ENTRY_PKG.UpdateJournalEntryStatus
               (p_hdr_idx           => g_array_event(p_event_id).array_value_num('acc_rev_header_index')
               ,p_balance_type_code => l_balance_type_code);

   END IF;

   -----------------------------------------------------------------------------------------
   -- 4262811 Multiperiod Accounting
   -----------------------------------------------------------------------------------------
     -- No MPA option is assigned.


END IF;
END IF;
--

--
IF (C_LEVEL_PROCEDURE >= g_log_level) THEN
   trace
      (p_msg      => 'END of AcctLineType_22'
      ,p_level    => C_LEVEL_PROCEDURE
      ,p_module   => l_log_module);
END IF;
--
EXCEPTION
  WHEN xla_exceptions_pkg.application_exception THEN
      RAISE;
  WHEN OTHERS THEN
       xla_exceptions_pkg.raise_message
           (p_location => 'XLA_00200_AAD_S_000010_BC_PKG.AcctLineType_22');
END AcctLineType_22;
--

---------------------------------------
--
-- PRIVATE FUNCTION
--         AcctLineType_23
--
---------------------------------------
PROCEDURE AcctLineType_23 (
  p_application_id        IN NUMBER
 ,p_event_id              IN NUMBER
 ,p_calculate_acctd_flag  IN VARCHAR2
 ,p_calculate_g_l_flag    IN VARCHAR2
 ,p_actual_flag           IN OUT VARCHAR2
 ,p_balance_type_code     OUT VARCHAR2
 ,p_gain_or_loss_ref      OUT VARCHAR2
 
--Invoice Distribution Description
 , p_source_1            IN VARCHAR2
--Purchase Order Rate Variance Gain Account
 , p_source_6            IN NUMBER
--Automatic Offsets Value
 , p_source_7            IN VARCHAR2
 , p_source_7_meaning    IN VARCHAR2
--Invoice Distribution Ledger Amount
 , p_source_8            IN NUMBER
--Destination Type of the PO Distribution
 , p_source_9            IN VARCHAR2
 , p_source_9_meaning    IN VARCHAR2
--Purchase Order Rate Variance Loss Account
 , p_source_10            IN NUMBER
--Invoice Distribution Account
 , p_source_11            IN NUMBER
--Automatic Offsets Flag
 , p_source_12            IN VARCHAR2
 , p_source_12_meaning    IN VARCHAR2
--Invoice Distribution Type
 , p_source_15            IN VARCHAR2
 , p_source_15_meaning    IN VARCHAR2
--Purchasing Encumbrance Option
 , p_source_17            IN VARCHAR2
 , p_source_17_meaning    IN VARCHAR2
--Accounting Reversal Indicator
 , p_source_19            IN VARCHAR2
--Distribution Link Type
 , p_source_21            IN VARCHAR2
--Allocation to Main Distribution Identifier
 , p_source_23            IN NUMBER
--Invoice Identifier
 , p_source_24            IN NUMBER
--Business Flow Accounts Payable Application Identifier
 , p_source_25            IN NUMBER
--Business Flow Invoice Distribution Type
 , p_source_26            IN VARCHAR2
--Business Flow Invoice Entity Code
 , p_source_27            IN VARCHAR2
--Business Flow Invoice Distribution Identifier
 , p_source_28            IN NUMBER
--Business Flow Invoice Identifier
 , p_source_29            IN NUMBER
--Invoice Distribution Identifier
 , p_source_30            IN NUMBER
--Payables Encumbrance Upgrade Credit Account
 , p_source_31            IN NUMBER
--Payables Encumbrance Upgrade Credit Amount
 , p_source_32            IN NUMBER
--Invoice Currency Code
 , p_source_33            IN VARCHAR2
--Payables Encumbrance Upgrade Credit Base Amount
 , p_source_34            IN NUMBER
--Payables Encumbrance Upgrade Debit Account
 , p_source_35            IN NUMBER
--Payables Encumbrance Upgrade Debit Amount
 , p_source_36            IN NUMBER
--Payables Encumbrance Upgrade Debit Base Amount
 , p_source_37            IN NUMBER
--Payables Encumbrance Upgrade Option
 , p_source_38            IN VARCHAR2
--Invoice Exchange Date
 , p_source_39            IN DATE
--Invoice Exchange Rate
 , p_source_40            IN NUMBER
--Invoice Exchange Rate Type
 , p_source_41            IN VARCHAR2
--Deferred Accounting End Date
 , p_source_43            IN DATE
--Deferred Accounting Option
 , p_source_44            IN VARCHAR2
--Deferred Accounting Start Date
 , p_source_45            IN DATE
--Override Accounted Amount Indicator
 , p_source_46            IN VARCHAR2
 , p_source_46_meaning    IN VARCHAR2
--Invoice Supplier Identifier
 , p_source_47            IN NUMBER
--Invoice Supplier Site Identifier
 , p_source_48            IN NUMBER
--Third Party Type
 , p_source_49            IN VARCHAR2
--Parent Reversal Identifier
 , p_source_50            IN NUMBER
--Invoice Distribution Tax Line Identifier
 , p_source_52            IN NUMBER
--Invoice Distribution Tax Distribution Identifier from Tax
 , p_source_53            IN NUMBER
--Invoice Distribution Summary Tax Line Identifier
 , p_source_54            IN NUMBER
--Payables Upgrade Credit Encumbrance Type Identifier
 , p_source_55            IN NUMBER
--Payables Upgrade Debit Encumbrance Type Identifier
 , p_source_56            IN NUMBER
--Invoice Distribution Encumbrance Amount
 , p_source_65            IN NUMBER
--Invoice Distribution Encumbrance Ledger Amount
 , p_source_66            IN NUMBER
)
IS

l_component_type              VARCHAR2(80);
l_component_code              VARCHAR2(30);
l_component_type_code         VARCHAR2(1);
l_component_appl_id           INTEGER;
l_amb_context_code            VARCHAR2(30);
l_entity_code                 VARCHAR2(30);
l_event_class_code            VARCHAR2(30);
l_ae_header_id                NUMBER;
l_event_type_code             VARCHAR2(30);
l_line_definition_code        VARCHAR2(30);
l_line_definition_owner_code  VARCHAR2(1);
--
-- adr variables
l_segment                     VARCHAR2(30);
l_ccid                        NUMBER;
l_adr_transaction_coa_id      NUMBER;
l_adr_accounting_coa_id       NUMBER;
l_adr_flexfield_segment_code  VARCHAR2(30);
l_adr_flex_value_set_id       NUMBER;
l_adr_value_type_code         VARCHAR2(30);
l_adr_value_combination_id    NUMBER;
l_adr_value_segment_code      VARCHAR2(30);

l_bflow_method_code           VARCHAR2(30);  -- 4219869 Business Flow
l_bflow_class_code            VARCHAR2(30);  -- 4219869 Business Flow
l_inherit_desc_flag           VARCHAR2(1);   -- 4219869 Business Flow
l_budgetary_control_flag      VARCHAR2(1);   -- 4458381 Public Sector Enh

-- 4262811 Variables ------------------------------------------------------------------------------------------
l_entered_amt_idx             NUMBER;
l_accted_amt_idx              NUMBER;
l_acc_rev_flag                VARCHAR2(1);
l_accrual_line_num            NUMBER;
l_tmp_amt                     NUMBER;
l_acc_rev_natural_side_code   VARCHAR2(1);

l_num_entries                 NUMBER;
l_gl_dates                    xla_ae_journal_entry_pkg.t_array_date;
l_accted_amts                 xla_ae_journal_entry_pkg.t_array_num;
l_entered_amts                xla_ae_journal_entry_pkg.t_array_num;
l_period_names                xla_ae_journal_entry_pkg.t_array_V15L;
l_recog_line_1                NUMBER;
l_recog_line_2                NUMBER;

l_bflow_applied_to_amt_idx    NUMBER;                                -- 5132302
l_bflow_applied_to_amt        NUMBER;                                -- 5132302
l_bflow_applied_to_amts       xla_ae_journal_entry_pkg.t_array_num;  -- 5132302

l_event_id                    NUMBER;  -- To handle MPA header Description: xla_ae_header_pkg.SetHdrDescription

--l_rounding_ccy                VARCHAR2(15); -- To handle MPA rounding  4262811b
l_same_currency               BOOLEAN;        -- To handle MPA rounding  4262811b

---------------------------------------------------------------------------------------------------------------


--
-- bulk performance
--
l_balance_type_code           VARCHAR2(1);
l_rec_acct_attrs              XLA_AE_LINES_PKG.t_rec_acct_attrs;
l_log_module                  VARCHAR2(240);

--
-- Upgrade strategy
--
l_actual_upg_option           VARCHAR2(1);
l_enc_upg_option           VARCHAR2(1);

--
BEGIN
--
IF g_log_enabled THEN
      l_log_module := C_DEFAULT_MODULE||'.AcctLineType_23';
END IF;
--
IF (C_LEVEL_PROCEDURE >= g_log_level) THEN

      trace
         (p_msg      => 'BEGIN of AcctLineType_23'
         ,p_level    => C_LEVEL_PROCEDURE
         ,p_module   => l_log_module);

END IF;
--
l_component_type             := 'AMB_JLT';
l_component_code             := 'AP_EX_RATE_VAR_DM_ENC_DR';
l_component_type_code        := 'S';
l_component_appl_id          :=  200;
l_amb_context_code           := 'DEFAULT';
l_entity_code                := 'AP_INVOICES';
l_event_class_code           := 'DEBIT MEMOS';
l_event_type_code            := 'DEBIT MEMOS_ALL';
l_line_definition_owner_code := 'S';
l_line_definition_code       := 'ENC_DM_ALL';
--
l_balance_type_code          := 'E';
l_segment                     := NULL;
l_ccid                        := NULL;
l_adr_transaction_coa_id      := NULL;
l_adr_accounting_coa_id       := NULL;
l_adr_flexfield_segment_code  := NULL;
l_adr_flex_value_set_id       := NULL;
l_adr_value_type_code         := NULL;
l_adr_value_combination_id    := NULL;
l_adr_value_segment_code      := NULL;

l_bflow_method_code          := 'NONE';   -- 4219869 Business Flow
l_bflow_class_code           := 'AP_INV_ENCUM';    -- 4219869 Business Flow
l_inherit_desc_flag          := 'N';   -- 4219869 Business Flow
l_budgetary_control_flag     := 'Y';

l_bflow_applied_to_amt_idx   := NULL; -- 5132302
l_bflow_applied_to_amt       := NULL; -- 5132302
l_entered_amt_idx            := NULL;          -- 4262811
l_accted_amt_idx             := NULL;          -- 4262811
l_acc_rev_flag               := NULL;          -- 4262811
l_accrual_line_num           := NULL;          -- 4262811
l_tmp_amt                    := NULL;          -- 4262811
--
IF ((p_calculate_g_l_flag = 'Y' AND XLA_AE_JOURNAL_ENTRY_PKG.g_cache_ledgers_info.ledger_category_code <> 'ALC') or
            (XLA_AE_JOURNAL_ENTRY_PKG.g_cache_ledgers_info.ledger_category_code in ('ALC', 'SECONDARY') AND XLA_AE_JOURNAL_ENTRY_PKG.g_cache_ledgers_info.calculate_amts_flag='Y')) THEN
               return;
  END IF;
  
IF XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id = XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.ledger_id OR
    l_balance_type_code <> 'B' THEN
IF NVL(p_source_15,'
') =  'ERV' AND 
NVL(p_source_17,'
') =  'Y'
 THEN 

   --
   XLA_AE_LINES_PKG.SetNewLine;

   p_balance_type_code          := l_balance_type_code;
   -- set the flag so later we will know whether the gain loss line needs to be created
   
   IF(l_balance_type_code = 'A' ) THEN
     p_actual_flag :='G';
   END IF;

   --
   -- bulk performance
   --
   XLA_AE_LINES_PKG.set_ae_header_id (p_ae_header_id => p_event_id ,
                                      p_header_num   => 0); -- 4262811
   --
   -- set accounting line options
   --
   l_ae_header_id:= xla_ae_lines_pkg.SetAcctLineOption(
           p_natural_side_code          => 'D'
         , p_gain_or_loss_flag          => 'Y'
         , p_gl_transfer_mode_code      => 'S'
         , p_acct_entry_type_code       => 'E'
         , p_switch_side_flag           => 'Y'
         , p_merge_duplicate_code       => 'N'
         );
   --
   l_acc_rev_natural_side_code := 'C';  -- 4262811
   -- 
   --
   -- set accounting line type info
   --
   xla_ae_lines_pkg.SetAcctLineType
      (p_component_type             => l_component_type
      ,p_event_type_code            => l_event_type_code
      ,p_line_definition_owner_code => l_line_definition_owner_code
      ,p_line_definition_code       => l_line_definition_code
      ,p_accounting_line_code       => l_component_code
      ,p_accounting_line_type_code  => l_component_type_code
      ,p_accounting_line_appl_id    => l_component_appl_id
      ,p_amb_context_code           => l_amb_context_code
      ,p_entity_code                => l_entity_code
      ,p_event_class_code           => l_event_class_code);
   --
   -- set accounting class
   --
   xla_ae_lines_pkg.SetAcctClass(
           p_accounting_class_code  => 'EXCHANGE_RATE_VARIANCE'
         , p_ae_header_id           => l_ae_header_id
         );

   --
   -- set rounding class
   --
   XLA_AE_LINES_PKG.g_rec_lines.array_rounding_class(XLA_AE_LINES_PKG.g_LineNumber) :=
                      'EXCHANGE_RATE_VARIANCE';

   --
   xla_ae_lines_pkg.g_rec_lines.array_calculate_acctd_flag(xla_ae_lines_pkg.g_LineNumber) := p_calculate_acctd_flag;
   xla_ae_lines_pkg.g_rec_lines.array_calculate_g_l_flag(xla_ae_lines_pkg.g_LineNumber) := p_calculate_g_l_flag;
   --
   -- bulk performance
   --
   XLA_AE_LINES_PKG.g_rec_lines.array_balance_type_code(XLA_AE_LINES_PKG.g_LineNumber) := l_balance_type_code;

   XLA_AE_LINES_PKG.g_rec_lines.array_ledger_id(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id;

   -- 4955764
   XLA_AE_LINES_PKG.g_rec_lines.array_gl_date(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_HEADER_PKG.g_rec_header_new.array_gl_date(g_array_event(p_event_id).array_value_num('header_index'));

   -- 4458381 Public Sector Enh
      XLA_AE_LINES_PKG.g_rec_lines.array_encumbrance_type_id(XLA_AE_LINES_PKG.g_LineNumber) := 1060;
   --
   -- set accounting attributes for the line type
   --
   l_entered_amt_idx := 23;
   l_accted_amt_idx  := 28;
   l_bflow_applied_to_amt_idx  := NULL;  -- 5132302
   l_rec_acct_attrs.array_acct_attr_code(1) := 'ACCOUNTING_REVERSAL_OPTION';
   l_rec_acct_attrs.array_char_value(1)  := p_source_19;
   l_rec_acct_attrs.array_acct_attr_code(2) := 'ALLOC_TO_APPLICATION_ID';
   l_rec_acct_attrs.array_num_value(2)  := 
xla_ae_sources_pkg.GetSystemSourceNum(
   p_source_code           => 'XLA_EVENT_APPL_ID'
 , p_source_type_code      => 'Y'
 , p_source_application_id =>  602
);
   l_rec_acct_attrs.array_acct_attr_code(3) := 'ALLOC_TO_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(3)  := p_source_21;
   l_rec_acct_attrs.array_acct_attr_code(4) := 'ALLOC_TO_ENTITY_CODE';
   l_rec_acct_attrs.array_char_value(4)  := 
xla_ae_sources_pkg.GetSystemSourceChar(
   p_source_code           => 'XLA_ENTITY_CODE'
 , p_source_type_code      => 'Y'
 , p_source_application_id =>  602
);
   l_rec_acct_attrs.array_acct_attr_code(5) := 'ALLOC_TO_FIRST_DIST_ID';
   l_rec_acct_attrs.array_num_value(5)  :=  to_char(p_source_23);
   l_rec_acct_attrs.array_acct_attr_code(6) := 'ALLOC_TO_FIRST_SYS_TRAN_ID';
   l_rec_acct_attrs.array_num_value(6)  :=  to_char(p_source_24);
   l_rec_acct_attrs.array_acct_attr_code(7) := 'APPLIED_TO_APPLICATION_ID';
   l_rec_acct_attrs.array_num_value(7)  := p_source_25;
   l_rec_acct_attrs.array_acct_attr_code(8) := 'APPLIED_TO_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(8)  := p_source_26;
   l_rec_acct_attrs.array_acct_attr_code(9) := 'APPLIED_TO_ENTITY_CODE';
   l_rec_acct_attrs.array_char_value(9)  := p_source_27;
   l_rec_acct_attrs.array_acct_attr_code(10) := 'APPLIED_TO_FIRST_DIST_ID';
   l_rec_acct_attrs.array_num_value(10)  :=  to_char(p_source_28);
   l_rec_acct_attrs.array_acct_attr_code(11) := 'APPLIED_TO_FIRST_SYS_TRAN_ID';
   l_rec_acct_attrs.array_num_value(11)  :=  to_char(p_source_29);
   l_rec_acct_attrs.array_acct_attr_code(12) := 'DISTRIBUTION_IDENTIFIER_1';
   l_rec_acct_attrs.array_num_value(12)  :=  to_char(p_source_30);
   l_rec_acct_attrs.array_acct_attr_code(13) := 'DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(13)  := p_source_21;
   l_rec_acct_attrs.array_acct_attr_code(14) := 'ENC_UPG_CR_CCID';
   l_rec_acct_attrs.array_num_value(14)  := p_source_31;
   l_rec_acct_attrs.array_acct_attr_code(15) := 'ENC_UPG_CR_ENTERED_AMT';
   l_rec_acct_attrs.array_num_value(15)  := p_source_32;
   l_rec_acct_attrs.array_acct_attr_code(16) := 'ENC_UPG_CR_ENTERED_CURR';
   l_rec_acct_attrs.array_char_value(16)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(17) := 'ENC_UPG_CR_LEDGER_AMT';
   l_rec_acct_attrs.array_num_value(17)  := p_source_34;
   l_rec_acct_attrs.array_acct_attr_code(18) := 'ENC_UPG_DR_CCID';
   l_rec_acct_attrs.array_num_value(18)  := p_source_35;
   l_rec_acct_attrs.array_acct_attr_code(19) := 'ENC_UPG_DR_ENTERED_AMT';
   l_rec_acct_attrs.array_num_value(19)  := p_source_36;
   l_rec_acct_attrs.array_acct_attr_code(20) := 'ENC_UPG_DR_ENTERED_CURR';
   l_rec_acct_attrs.array_char_value(20)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(21) := 'ENC_UPG_DR_LEDGER_AMT';
   l_rec_acct_attrs.array_num_value(21)  := p_source_37;
   l_rec_acct_attrs.array_acct_attr_code(22) := 'ENC_UPG_OPTION';
   l_rec_acct_attrs.array_char_value(22)  := p_source_38;
   l_rec_acct_attrs.array_acct_attr_code(23) := 'ENTERED_CURRENCY_AMOUNT';
   l_rec_acct_attrs.array_num_value(23)  := p_source_65;
   l_rec_acct_attrs.array_acct_attr_code(24) := 'ENTERED_CURRENCY_CODE';
   l_rec_acct_attrs.array_char_value(24)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(25) := 'EXCHANGE_DATE';
   l_rec_acct_attrs.array_date_value(25)  := p_source_39;
   l_rec_acct_attrs.array_acct_attr_code(26) := 'EXCHANGE_RATE';
   l_rec_acct_attrs.array_num_value(26)  := p_source_40;
   l_rec_acct_attrs.array_acct_attr_code(27) := 'EXCHANGE_RATE_TYPE';
   l_rec_acct_attrs.array_char_value(27)  := p_source_41;
   l_rec_acct_attrs.array_acct_attr_code(28) := 'LEDGER_AMOUNT';
   l_rec_acct_attrs.array_num_value(28)  := p_source_66;
   l_rec_acct_attrs.array_acct_attr_code(29) := 'MULTIPERIOD_END_DATE';
   l_rec_acct_attrs.array_date_value(29)  := p_source_43;
   l_rec_acct_attrs.array_acct_attr_code(30) := 'MULTIPERIOD_OPTION';
   l_rec_acct_attrs.array_char_value(30)  := p_source_44;
   l_rec_acct_attrs.array_acct_attr_code(31) := 'MULTIPERIOD_START_DATE';
   l_rec_acct_attrs.array_date_value(31)  := p_source_45;
   l_rec_acct_attrs.array_acct_attr_code(32) := 'OVERRIDE_ACCTD_AMT_FLAG';
   l_rec_acct_attrs.array_char_value(32)  := p_source_46;
   l_rec_acct_attrs.array_acct_attr_code(33) := 'PARTY_ID';
   l_rec_acct_attrs.array_num_value(33)  := p_source_47;
   l_rec_acct_attrs.array_acct_attr_code(34) := 'PARTY_SITE_ID';
   l_rec_acct_attrs.array_num_value(34)  := p_source_48;
   l_rec_acct_attrs.array_acct_attr_code(35) := 'PARTY_TYPE';
   l_rec_acct_attrs.array_char_value(35)  := p_source_49;
   l_rec_acct_attrs.array_acct_attr_code(36) := 'REVERSED_DISTRIBUTION_ID1';
   l_rec_acct_attrs.array_num_value(36)  :=  to_char(p_source_50);
   l_rec_acct_attrs.array_acct_attr_code(37) := 'REVERSED_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(37)  := p_source_21;
   l_rec_acct_attrs.array_acct_attr_code(38) := 'TAX_LINE_REF_ID';
   l_rec_acct_attrs.array_num_value(38)  := p_source_52;
   l_rec_acct_attrs.array_acct_attr_code(39) := 'TAX_REC_NREC_DIST_REF_ID';
   l_rec_acct_attrs.array_num_value(39)  := p_source_53;
   l_rec_acct_attrs.array_acct_attr_code(40) := 'TAX_SUMMARY_LINE_REF_ID';
   l_rec_acct_attrs.array_num_value(40)  := p_source_54;
   l_rec_acct_attrs.array_acct_attr_code(41) := 'UPG_CR_ENC_TYPE_ID';
   l_rec_acct_attrs.array_num_value(41)  := p_source_55;
   l_rec_acct_attrs.array_acct_attr_code(42) := 'UPG_DR_ENC_TYPE_ID';
   l_rec_acct_attrs.array_num_value(42)  := p_source_56;

   XLA_AE_LINES_PKG.SetLineAcctAttrs(l_rec_acct_attrs);
   p_gain_or_loss_ref  := XLA_AE_LINES_PKG.g_rec_lines.array_gain_or_loss_ref(XLA_AE_LINES_PKG.g_LineNumber);

   ---------------------------------------------------------------------------------------------------------------
   -- 4336173 -- assign Business Flow Class (replace code in xla_ae_lines_pkg.Business_Flow_Validation)
   ---------------------------------------------------------------------------------------------------------------
   XLA_AE_LINES_PKG.g_rec_lines.array_business_class_code(XLA_AE_LINES_PKG.g_LineNumber) := l_bflow_class_code;

   l_actual_upg_option  := XLA_AE_LINES_PKG.g_rec_lines.array_actual_upg_option(XLA_AE_LINES_PKG.g_LineNumber);
   l_enc_upg_option     := XLA_AE_LINES_PKG.g_rec_lines.array_enc_upg_option(XLA_AE_LINES_PKG.g_LineNumber);

   IF xla_accounting_cache_pkg.GetValueChar
         (p_source_code         => 'LEDGER_CATEGORY_CODE'
         ,p_target_ledger_id    => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id) IN ('PRIMARY','ALC')
   AND l_bflow_method_code = 'PRIOR_ENTRY'
--   AND (l_actual_upg_option = 'Y' OR l_enc_upg_option = 'Y') Bug 4922099
   AND ( (NVL(l_actual_upg_option, 'N') IN ('Y', 'O')) OR
         (NVL(l_enc_upg_option, 'N') IN ('Y', 'O'))
       )
   THEN
         xla_ae_lines_pkg.BflowUpgEntry
           (p_business_method_code    => l_bflow_method_code
           ,p_business_class_code     => l_bflow_class_code
           ,p_balance_type            => l_balance_type_code);
   ELSE
      NULL;
-- No business flow processing for business flow method of NONE.
   END IF;

   --
   -- call analytical criteria
   --
   
   --
   -- call description
   --
   
xla_ae_lines_pkg.SetLineDescription(
   p_ae_header_id => l_ae_header_id
  ,p_description  => Description_2 (
     p_application_id         => p_application_id
   , p_ae_header_id           => l_ae_header_id 
, p_source_1 => p_source_1
   )
);


   --
   -- call ADRs
   -- Bug 4922099
   --
   IF ( (l_bflow_method_code <> 'PRIOR_ENTRY') OR
        (NVL(l_actual_upg_option, 'N') = 'O') OR
        (NVL(l_enc_upg_option, 'N') = 'O')
      )
   THEN
   NULL;
   --
   --
   
  l_ccid := AcctDerRule_6(
           p_application_id           => p_application_id
         , p_ae_header_id             => l_ae_header_id 
, p_source_6 => p_source_6
, p_source_7 => p_source_7
, p_source_7_meaning => p_source_7_meaning
, p_source_8 => p_source_8
, p_source_9 => p_source_9
, p_source_9_meaning => p_source_9_meaning
, p_source_10 => p_source_10
, p_source_11 => p_source_11
, p_source_12 => p_source_12
, p_source_12_meaning => p_source_12_meaning
         , x_transaction_coa_id       => l_adr_transaction_coa_id
         , x_accounting_coa_id        => l_adr_accounting_coa_id
         , x_value_type_code          => l_adr_value_type_code
         , p_side                     => 'NA'
   );

   xla_ae_lines_pkg.set_ccid(
    p_code_combination_id          => l_ccid
  , p_value_type_code              => l_adr_value_type_code
  , p_transaction_coa_id           => l_adr_transaction_coa_id
  , p_accounting_coa_id            => l_adr_accounting_coa_id
  , p_adr_code                     => 'AP_EXCHG_TAXEXCHG_RATE_VAR'
  , p_adr_type_code                => 'S'
  , p_component_type               => l_component_type
  , p_component_code               => l_component_code
  , p_component_type_code          => l_component_type_code
  , p_component_appl_id            => l_component_appl_id
  , p_amb_context_code             => l_amb_context_code
  , p_side                         => 'NA'
  );


   l_segment := AcctDerRule_4(
           p_application_id           => p_application_id
         , p_ae_header_id             => l_ae_header_id 
, p_source_6 => p_source_6
, p_source_7 => p_source_7
, p_source_7_meaning => p_source_7_meaning
, p_source_8 => p_source_8
, p_source_9 => p_source_9
, p_source_9_meaning => p_source_9_meaning
, p_source_10 => p_source_10
         , x_transaction_coa_id       => l_adr_transaction_coa_id
         , x_accounting_coa_id        => l_adr_accounting_coa_id
         , x_flexfield_segment_code   => l_adr_flexfield_segment_code
         , x_flex_value_set_id        => l_adr_flex_value_set_id
         , x_value_type_code          => l_adr_value_type_code
         , x_value_combination_id     => l_adr_value_combination_id
         , x_value_segment_code       => l_adr_value_segment_code
         , p_side                     => 'NA'
         , p_override_seg_flag        => 'Y'
   );

   IF NVL(l_segment,'NULL') <> '#$NO_OVERRIDE#$' THEN  -- 4465612

      xla_ae_lines_pkg.set_segment(
          p_to_segment_code         => 'GL_ACCOUNT'
        , p_segment_value           => l_segment
        , p_from_segment_code       => l_adr_value_segment_code
        , p_from_combination_id     => l_adr_value_combination_id
        , p_value_type_code         => l_adr_value_type_code
        , p_transaction_coa_id      => l_adr_transaction_coa_id
        , p_accounting_coa_id       => l_adr_accounting_coa_id
        , p_flexfield_segment_code  => l_adr_flexfield_segment_code
        , p_flex_value_set_id       => l_adr_flex_value_set_id
        , p_adr_code                => 'AP_ERV_GAIN_LOSS_NAT_ACCT_SEG'
        , p_adr_type_code           => 'S'
        , p_component_type          => l_component_type
        , p_component_code          => l_component_code
        , p_component_type_code     => l_component_type_code
        , p_component_appl_id       => l_component_appl_id
        , p_amb_context_code        => l_amb_context_code
        , p_entity_code             => 'AP_INVOICES'
        , p_event_class_code        => 'DEBIT MEMOS'
        , p_side                    => 'NA'
        );

  END IF;

   l_segment := AcctDerRule_5(
           p_application_id           => p_application_id
         , p_ae_header_id             => l_ae_header_id 
, p_source_7 => p_source_7
, p_source_7_meaning => p_source_7_meaning
, p_source_9 => p_source_9
, p_source_9_meaning => p_source_9_meaning
, p_source_11 => p_source_11
         , x_transaction_coa_id       => l_adr_transaction_coa_id
         , x_accounting_coa_id        => l_adr_accounting_coa_id
         , x_flexfield_segment_code   => l_adr_flexfield_segment_code
         , x_flex_value_set_id        => l_adr_flex_value_set_id
         , x_value_type_code          => l_adr_value_type_code
         , x_value_combination_id     => l_adr_value_combination_id
         , x_value_segment_code       => l_adr_value_segment_code
         , p_side                     => 'NA'
         , p_override_seg_flag        => 'Y'
   );

   IF NVL(l_segment,'NULL') <> '#$NO_OVERRIDE#$' THEN  -- 4465612

      xla_ae_lines_pkg.set_segment(
          p_to_segment_code         => 'GL_BALANCING'
        , p_segment_value           => l_segment
        , p_from_segment_code       => l_adr_value_segment_code
        , p_from_combination_id     => l_adr_value_combination_id
        , p_value_type_code         => l_adr_value_type_code
        , p_transaction_coa_id      => l_adr_transaction_coa_id
        , p_accounting_coa_id       => l_adr_accounting_coa_id
        , p_flexfield_segment_code  => l_adr_flexfield_segment_code
        , p_flex_value_set_id       => l_adr_flex_value_set_id
        , p_adr_code                => 'AP_RELATED_DIST_BAL_SEG'
        , p_adr_type_code           => 'S'
        , p_component_type          => l_component_type
        , p_component_code          => l_component_code
        , p_component_type_code     => l_component_type_code
        , p_component_appl_id       => l_component_appl_id
        , p_amb_context_code        => l_amb_context_code
        , p_entity_code             => 'AP_INVOICES'
        , p_event_class_code        => 'DEBIT MEMOS'
        , p_side                    => 'NA'
        );

  END IF;

   --
   --
   END IF;
   --
   -- Bug 4922099
   IF ( ( (NVL(l_actual_upg_option, 'N') = 'O') OR
          (NVL(l_enc_upg_option, 'N') = 'O')
        ) AND
        (l_bflow_method_code = 'PRIOR_ENTRY')
      )
   THEN
      IF
      --
      1 = 2
      --
      THEN
      xla_accounting_err_pkg.build_message
                                    (p_appli_s_name            => 'XLA'
                                    ,p_msg_name                => 'XLA_UPG_OVERRIDE_ADR_UNDEFINED'
                                    ,p_token_1                 => 'LINE_NUMBER'
                                    ,p_value_1                 => XLA_AE_LINES_PKG.g_LineNumber
                                    ,p_token_2                 => 'LINE_TYPE_NAME'
                                    ,p_value_2                 => XLA_AE_SOURCES_PKG.GetComponentName (
                                                                             l_component_type
                                                                            ,l_component_code
                                                                            ,l_component_type_code
                                                                            ,l_component_appl_id
                                                                            ,l_amb_context_code
                                                                            ,l_entity_code
                                                                            ,l_event_class_code
                                                                           )
                                    ,p_token_3                 => 'OWNER'
                                    ,p_value_3                 => xla_lookups_pkg.get_meaning(
                                                                          p_lookup_type     => 'XLA_OWNER_TYPE'
                                                                          ,p_lookup_code    => l_component_type_code
                                                                         )
                                    ,p_token_4                 => 'PRODUCT_NAME'
                                    ,p_value_4                 => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.application_name
                                    ,p_entity_id               => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.entity_id
                                    ,p_event_id                => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.event_id
                                    ,p_ledger_id               => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id
                                    ,p_ae_header_id            =>  NULL
                                       );

        IF (C_LEVEL_ERROR>= g_log_level) THEN
                 trace
                      (p_msg      => 'ERROR: XLA_UPG_OVERRIDE_ADR_UNDEFINED'
                      ,p_level    => C_LEVEL_ERROR
                      ,p_module   => l_log_module);
        END IF;
      END IF;
   END IF;
   --
   --
   ------------------------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- NOTE: XLA_AE_LINES_PKG.ValidateCurrentLine should NOT be generated if business flow method is
   -- Prior Entry.  Currently, the following code is always generated.
   ------------------------------------------------------------------------------------------------
   XLA_AE_LINES_PKG.ValidateCurrentLine;

   ------------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- Populated credit and debit amounts -- Need to generate this within IF <condition>
   ------------------------------------------------------------------------------------
   XLA_AE_LINES_PKG.SetDebitCreditAmounts;

   ----------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- Update journal entry status -- Need to generate this within IF <condition>
   ----------------------------------------------------------------------------------
   XLA_AE_JOURNAL_ENTRY_PKG.UpdateJournalEntryStatus
         (p_hdr_idx => g_array_event(p_event_id).array_value_num('header_index')
         ,p_balance_type_code => l_balance_type_code
         );

   -------------------------------------------------------------------------------------------
   -- 4262811 - Generate the Accrual Reversal lines
   -------------------------------------------------------------------------------------------
   BEGIN
      l_acc_rev_flag := XLA_AE_HEADER_PKG.g_rec_header_new.array_accrual_reversal_flag
                              (g_array_event(p_event_id).array_value_num('header_index'));
      IF l_acc_rev_flag IS NULL THEN
         l_acc_rev_flag := 'N';
      END IF;
   EXCEPTION
      WHEN OTHERS THEN
         l_acc_rev_flag := 'N';
   END;
   --
   IF (l_acc_rev_flag = 'Y') THEN

       -- 4645092  ------------------------------------------------------------------------------
       -- To allow MPA report to determine if it should generate report process
       XLA_ACCOUNTING_PKG.g_mpa_accrual_exists := 'Y';
       ------------------------------------------------------------------------------------------

       l_accrual_line_num := XLA_AE_LINES_PKG.g_LineNumber;
       XLA_AE_LINES_PKG.CopyLineInfo(l_accrual_line_num);
   -- added call to set_ccid to execute mapping  for secondary accrual reversal entries bug 7444204
   -- call ADRs
   -- Bug 4922099
   --
   IF ( (l_bflow_method_code <> 'PRIOR_ENTRY') OR
        (NVL(l_actual_upg_option, 'N') = 'O') OR
        (NVL(l_enc_upg_option, 'N') = 'O')
      )
   THEN
   NULL;
   --
   --
   
  l_ccid := AcctDerRule_6(
           p_application_id           => p_application_id
         , p_ae_header_id             => l_ae_header_id 
, p_source_6 => p_source_6
, p_source_7 => p_source_7
, p_source_7_meaning => p_source_7_meaning
, p_source_8 => p_source_8
, p_source_9 => p_source_9
, p_source_9_meaning => p_source_9_meaning
, p_source_10 => p_source_10
, p_source_11 => p_source_11
, p_source_12 => p_source_12
, p_source_12_meaning => p_source_12_meaning
         , x_transaction_coa_id       => l_adr_transaction_coa_id
         , x_accounting_coa_id        => l_adr_accounting_coa_id
         , x_value_type_code          => l_adr_value_type_code
         , p_side                     => 'NA'
   );

   xla_ae_lines_pkg.set_ccid(
    p_code_combination_id          => l_ccid
  , p_value_type_code              => l_adr_value_type_code
  , p_transaction_coa_id           => l_adr_transaction_coa_id
  , p_accounting_coa_id            => l_adr_accounting_coa_id
  , p_adr_code                     => 'AP_EXCHG_TAXEXCHG_RATE_VAR'
  , p_adr_type_code                => 'S'
  , p_component_type               => l_component_type
  , p_component_code               => l_component_code
  , p_component_type_code          => l_component_type_code
  , p_component_appl_id            => l_component_appl_id
  , p_amb_context_code             => l_amb_context_code
  , p_side                         => 'NA'
  );


   l_segment := AcctDerRule_4(
           p_application_id           => p_application_id
         , p_ae_header_id             => l_ae_header_id 
, p_source_6 => p_source_6
, p_source_7 => p_source_7
, p_source_7_meaning => p_source_7_meaning
, p_source_8 => p_source_8
, p_source_9 => p_source_9
, p_source_9_meaning => p_source_9_meaning
, p_source_10 => p_source_10
         , x_transaction_coa_id       => l_adr_transaction_coa_id
         , x_accounting_coa_id        => l_adr_accounting_coa_id
         , x_flexfield_segment_code   => l_adr_flexfield_segment_code
         , x_flex_value_set_id        => l_adr_flex_value_set_id
         , x_value_type_code          => l_adr_value_type_code
         , x_value_combination_id     => l_adr_value_combination_id
         , x_value_segment_code       => l_adr_value_segment_code
         , p_side                     => 'NA'
         , p_override_seg_flag        => 'Y'
   );

   IF NVL(l_segment,'NULL') <> '#$NO_OVERRIDE#$' THEN  -- 4465612

      xla_ae_lines_pkg.set_segment(
          p_to_segment_code         => 'GL_ACCOUNT'
        , p_segment_value           => l_segment
        , p_from_segment_code       => l_adr_value_segment_code
        , p_from_combination_id     => l_adr_value_combination_id
        , p_value_type_code         => l_adr_value_type_code
        , p_transaction_coa_id      => l_adr_transaction_coa_id
        , p_accounting_coa_id       => l_adr_accounting_coa_id
        , p_flexfield_segment_code  => l_adr_flexfield_segment_code
        , p_flex_value_set_id       => l_adr_flex_value_set_id
        , p_adr_code                => 'AP_ERV_GAIN_LOSS_NAT_ACCT_SEG'
        , p_adr_type_code           => 'S'
        , p_component_type          => l_component_type
        , p_component_code          => l_component_code
        , p_component_type_code     => l_component_type_code
        , p_component_appl_id       => l_component_appl_id
        , p_amb_context_code        => l_amb_context_code
        , p_entity_code             => 'AP_INVOICES'
        , p_event_class_code        => 'DEBIT MEMOS'
        , p_side                    => 'NA'
        );

  END IF;

   l_segment := AcctDerRule_5(
           p_application_id           => p_application_id
         , p_ae_header_id             => l_ae_header_id 
, p_source_7 => p_source_7
, p_source_7_meaning => p_source_7_meaning
, p_source_9 => p_source_9
, p_source_9_meaning => p_source_9_meaning
, p_source_11 => p_source_11
         , x_transaction_coa_id       => l_adr_transaction_coa_id
         , x_accounting_coa_id        => l_adr_accounting_coa_id
         , x_flexfield_segment_code   => l_adr_flexfield_segment_code
         , x_flex_value_set_id        => l_adr_flex_value_set_id
         , x_value_type_code          => l_adr_value_type_code
         , x_value_combination_id     => l_adr_value_combination_id
         , x_value_segment_code       => l_adr_value_segment_code
         , p_side                     => 'NA'
         , p_override_seg_flag        => 'Y'
   );

   IF NVL(l_segment,'NULL') <> '#$NO_OVERRIDE#$' THEN  -- 4465612

      xla_ae_lines_pkg.set_segment(
          p_to_segment_code         => 'GL_BALANCING'
        , p_segment_value           => l_segment
        , p_from_segment_code       => l_adr_value_segment_code
        , p_from_combination_id     => l_adr_value_combination_id
        , p_value_type_code         => l_adr_value_type_code
        , p_transaction_coa_id      => l_adr_transaction_coa_id
        , p_accounting_coa_id       => l_adr_accounting_coa_id
        , p_flexfield_segment_code  => l_adr_flexfield_segment_code
        , p_flex_value_set_id       => l_adr_flex_value_set_id
        , p_adr_code                => 'AP_RELATED_DIST_BAL_SEG'
        , p_adr_type_code           => 'S'
        , p_component_type          => l_component_type
        , p_component_code          => l_component_code
        , p_component_type_code     => l_component_type_code
        , p_component_appl_id       => l_component_appl_id
        , p_amb_context_code        => l_amb_context_code
        , p_entity_code             => 'AP_INVOICES'
        , p_event_class_code        => 'DEBIT MEMOS'
        , p_side                    => 'NA'
        );

  END IF;

   --
   --
   END IF;

       --
       -- Update the line information that should be overwritten
       --
       XLA_AE_LINES_PKG.set_ae_header_id(p_ae_header_id => p_event_id ,
                                         p_header_num   => 1);
       XLA_AE_LINES_PKG.g_rec_lines.array_header_num(XLA_AE_LINES_PKG.g_LineNumber)  :=1;

       XLA_AE_LINES_PKG.g_rec_lines.array_business_class_code(XLA_AE_LINES_PKG.g_LineNumber) := NULL; -- 4669271

       IF l_bflow_method_code <> 'NONE' THEN  -- 4655713b
          XLA_AE_LINES_PKG.g_rec_lines.array_reversal_code(XLA_AE_LINES_PKG.g_LineNumber) := CONCAT('MPA_',l_bflow_method_code);
       END IF;

      --
      -- Depending on the Reversal Method setup, do a switch side or changes sign for the amounts
      --
      IF (XLA_AE_JOURNAL_ENTRY_PKG.g_cache_ledgers_info.ledger_reversal_option = 'SIDE') THEN
          XLA_AE_LINES_PKG.g_rec_lines.array_natural_side_code(XLA_AE_LINES_PKG.g_LineNumber) :=  l_acc_rev_natural_side_code;
      ELSE
          ---------------------------------------------------------------------------------------------------
          -- 4262811a Switch Sign
          ---------------------------------------------------------------------------------------------------
          XLA_AE_LINES_PKG.g_rec_lines.array_switch_side_flag(XLA_AE_LINES_PKG.g_LineNumber) := 'N';  -- 5052518
          XLA_AE_LINES_PKG.g_rec_lines.array_ledger_amount(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_ledger_amount(XLA_AE_LINES_PKG.g_LineNumber) * -1;
          XLA_AE_LINES_PKG.g_rec_lines.array_entered_amount(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_entered_amount(XLA_AE_LINES_PKG.g_LineNumber) * -1;
          -- 5132302
          XLA_AE_LINES_PKG.g_rec_lines.array_bflow_applied_to_amt(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_bflow_applied_to_amt(XLA_AE_LINES_PKG.g_LineNumber) * -1;

      END IF;

      -- 4955764
      XLA_AE_LINES_PKG.g_rec_lines.array_gl_date(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_HEADER_PKG.g_rec_header_new.array_gl_date(g_array_event(p_event_id).array_value_num('acc_rev_header_index'));


      XLA_AE_LINES_PKG.ValidateCurrentLine;
      XLA_AE_LINES_PKG.SetDebitCreditAmounts;

      XLA_AE_JOURNAL_ENTRY_PKG.UpdateJournalEntryStatus
               (p_hdr_idx           => g_array_event(p_event_id).array_value_num('acc_rev_header_index')
               ,p_balance_type_code => l_balance_type_code);

   END IF;

   -----------------------------------------------------------------------------------------
   -- 4262811 Multiperiod Accounting
   -----------------------------------------------------------------------------------------
     -- No MPA option is assigned.


END IF;
END IF;
--

--
IF (C_LEVEL_PROCEDURE >= g_log_level) THEN
   trace
      (p_msg      => 'END of AcctLineType_23'
      ,p_level    => C_LEVEL_PROCEDURE
      ,p_module   => l_log_module);
END IF;
--
EXCEPTION
  WHEN xla_exceptions_pkg.application_exception THEN
      RAISE;
  WHEN OTHERS THEN
       xla_exceptions_pkg.raise_message
           (p_location => 'XLA_00200_AAD_S_000010_BC_PKG.AcctLineType_23');
END AcctLineType_23;
--

---------------------------------------
--
-- PRIVATE FUNCTION
--         AcctLineType_24
--
---------------------------------------
PROCEDURE AcctLineType_24 (
  p_application_id        IN NUMBER
 ,p_event_id              IN NUMBER
 ,p_calculate_acctd_flag  IN VARCHAR2
 ,p_calculate_g_l_flag    IN VARCHAR2
 ,p_actual_flag           IN OUT VARCHAR2
 ,p_balance_type_code     OUT VARCHAR2
 ,p_gain_or_loss_ref      OUT VARCHAR2
 
--Invoice Distribution Description
 , p_source_1            IN VARCHAR2
--Purchase Order Rate Variance Gain Account
 , p_source_6            IN NUMBER
--Automatic Offsets Value
 , p_source_7            IN VARCHAR2
 , p_source_7_meaning    IN VARCHAR2
--Invoice Distribution Ledger Amount
 , p_source_8            IN NUMBER
--Destination Type of the PO Distribution
 , p_source_9            IN VARCHAR2
 , p_source_9_meaning    IN VARCHAR2
--Purchase Order Rate Variance Loss Account
 , p_source_10            IN NUMBER
--Invoice Distribution Account
 , p_source_11            IN NUMBER
--Automatic Offsets Flag
 , p_source_12            IN VARCHAR2
 , p_source_12_meaning    IN VARCHAR2
--Invoice Distribution Type
 , p_source_15            IN VARCHAR2
 , p_source_15_meaning    IN VARCHAR2
--Purchasing Encumbrance Option
 , p_source_17            IN VARCHAR2
 , p_source_17_meaning    IN VARCHAR2
--Accounting Reversal Indicator
 , p_source_19            IN VARCHAR2
--Distribution Link Type
 , p_source_21            IN VARCHAR2
--Allocation to Main Distribution Identifier
 , p_source_23            IN NUMBER
--Invoice Identifier
 , p_source_24            IN NUMBER
--Business Flow Accounts Payable Application Identifier
 , p_source_25            IN NUMBER
--Business Flow Invoice Distribution Type
 , p_source_26            IN VARCHAR2
--Business Flow Invoice Entity Code
 , p_source_27            IN VARCHAR2
--Business Flow Invoice Distribution Identifier
 , p_source_28            IN NUMBER
--Business Flow Invoice Identifier
 , p_source_29            IN NUMBER
--Invoice Distribution Identifier
 , p_source_30            IN NUMBER
--Payables Encumbrance Upgrade Credit Account
 , p_source_31            IN NUMBER
--Payables Encumbrance Upgrade Credit Amount
 , p_source_32            IN NUMBER
--Invoice Currency Code
 , p_source_33            IN VARCHAR2
--Payables Encumbrance Upgrade Credit Base Amount
 , p_source_34            IN NUMBER
--Payables Encumbrance Upgrade Debit Account
 , p_source_35            IN NUMBER
--Payables Encumbrance Upgrade Debit Amount
 , p_source_36            IN NUMBER
--Payables Encumbrance Upgrade Debit Base Amount
 , p_source_37            IN NUMBER
--Payables Encumbrance Upgrade Option
 , p_source_38            IN VARCHAR2
--Invoice Exchange Date
 , p_source_39            IN DATE
--Invoice Exchange Rate
 , p_source_40            IN NUMBER
--Invoice Exchange Rate Type
 , p_source_41            IN VARCHAR2
--Deferred Accounting End Date
 , p_source_43            IN DATE
--Deferred Accounting Option
 , p_source_44            IN VARCHAR2
--Deferred Accounting Start Date
 , p_source_45            IN DATE
--Override Accounted Amount Indicator
 , p_source_46            IN VARCHAR2
 , p_source_46_meaning    IN VARCHAR2
--Invoice Supplier Identifier
 , p_source_47            IN NUMBER
--Invoice Supplier Site Identifier
 , p_source_48            IN NUMBER
--Third Party Type
 , p_source_49            IN VARCHAR2
--Parent Reversal Identifier
 , p_source_50            IN NUMBER
--Invoice Distribution Statistical Amount
 , p_source_51            IN NUMBER
--Invoice Distribution Tax Line Identifier
 , p_source_52            IN NUMBER
--Invoice Distribution Tax Distribution Identifier from Tax
 , p_source_53            IN NUMBER
--Invoice Distribution Summary Tax Line Identifier
 , p_source_54            IN NUMBER
--Payables Upgrade Credit Encumbrance Type Identifier
 , p_source_55            IN NUMBER
--Payables Upgrade Debit Encumbrance Type Identifier
 , p_source_56            IN NUMBER
--Invoice Distribution Amount
 , p_source_57            IN NUMBER
--Invoice Distribution Encumbrance Amount
 , p_source_65            IN NUMBER
--Invoice Distribution Encumbrance Ledger Amount
 , p_source_66            IN NUMBER
)
IS

l_component_type              VARCHAR2(80);
l_component_code              VARCHAR2(30);
l_component_type_code         VARCHAR2(1);
l_component_appl_id           INTEGER;
l_amb_context_code            VARCHAR2(30);
l_entity_code                 VARCHAR2(30);
l_event_class_code            VARCHAR2(30);
l_ae_header_id                NUMBER;
l_event_type_code             VARCHAR2(30);
l_line_definition_code        VARCHAR2(30);
l_line_definition_owner_code  VARCHAR2(1);
--
-- adr variables
l_segment                     VARCHAR2(30);
l_ccid                        NUMBER;
l_adr_transaction_coa_id      NUMBER;
l_adr_accounting_coa_id       NUMBER;
l_adr_flexfield_segment_code  VARCHAR2(30);
l_adr_flex_value_set_id       NUMBER;
l_adr_value_type_code         VARCHAR2(30);
l_adr_value_combination_id    NUMBER;
l_adr_value_segment_code      VARCHAR2(30);

l_bflow_method_code           VARCHAR2(30);  -- 4219869 Business Flow
l_bflow_class_code            VARCHAR2(30);  -- 4219869 Business Flow
l_inherit_desc_flag           VARCHAR2(1);   -- 4219869 Business Flow
l_budgetary_control_flag      VARCHAR2(1);   -- 4458381 Public Sector Enh

-- 4262811 Variables ------------------------------------------------------------------------------------------
l_entered_amt_idx             NUMBER;
l_accted_amt_idx              NUMBER;
l_acc_rev_flag                VARCHAR2(1);
l_accrual_line_num            NUMBER;
l_tmp_amt                     NUMBER;
l_acc_rev_natural_side_code   VARCHAR2(1);

l_num_entries                 NUMBER;
l_gl_dates                    xla_ae_journal_entry_pkg.t_array_date;
l_accted_amts                 xla_ae_journal_entry_pkg.t_array_num;
l_entered_amts                xla_ae_journal_entry_pkg.t_array_num;
l_period_names                xla_ae_journal_entry_pkg.t_array_V15L;
l_recog_line_1                NUMBER;
l_recog_line_2                NUMBER;

l_bflow_applied_to_amt_idx    NUMBER;                                -- 5132302
l_bflow_applied_to_amt        NUMBER;                                -- 5132302
l_bflow_applied_to_amts       xla_ae_journal_entry_pkg.t_array_num;  -- 5132302

l_event_id                    NUMBER;  -- To handle MPA header Description: xla_ae_header_pkg.SetHdrDescription

--l_rounding_ccy                VARCHAR2(15); -- To handle MPA rounding  4262811b
l_same_currency               BOOLEAN;        -- To handle MPA rounding  4262811b

---------------------------------------------------------------------------------------------------------------


--
-- bulk performance
--
l_balance_type_code           VARCHAR2(1);
l_rec_acct_attrs              XLA_AE_LINES_PKG.t_rec_acct_attrs;
l_log_module                  VARCHAR2(240);

--
-- Upgrade strategy
--
l_actual_upg_option           VARCHAR2(1);
l_enc_upg_option           VARCHAR2(1);

--
BEGIN
--
IF g_log_enabled THEN
      l_log_module := C_DEFAULT_MODULE||'.AcctLineType_24';
END IF;
--
IF (C_LEVEL_PROCEDURE >= g_log_level) THEN

      trace
         (p_msg      => 'BEGIN of AcctLineType_24'
         ,p_level    => C_LEVEL_PROCEDURE
         ,p_module   => l_log_module);

END IF;
--
l_component_type             := 'AMB_JLT';
l_component_code             := 'AP_EX_RATE_VAR_INV_ENC_DR';
l_component_type_code        := 'S';
l_component_appl_id          :=  200;
l_amb_context_code           := 'DEFAULT';
l_entity_code                := 'AP_INVOICES';
l_event_class_code           := 'INVOICES';
l_event_type_code            := 'INVOICES_ALL';
l_line_definition_owner_code := 'S';
l_line_definition_code       := 'ENC_INVOICES_ALL';
--
l_balance_type_code          := 'E';
l_segment                     := NULL;
l_ccid                        := NULL;
l_adr_transaction_coa_id      := NULL;
l_adr_accounting_coa_id       := NULL;
l_adr_flexfield_segment_code  := NULL;
l_adr_flex_value_set_id       := NULL;
l_adr_value_type_code         := NULL;
l_adr_value_combination_id    := NULL;
l_adr_value_segment_code      := NULL;

l_bflow_method_code          := 'NONE';   -- 4219869 Business Flow
l_bflow_class_code           := 'AP_INV_ENCUM';    -- 4219869 Business Flow
l_inherit_desc_flag          := 'N';   -- 4219869 Business Flow
l_budgetary_control_flag     := 'Y';

l_bflow_applied_to_amt_idx   := NULL; -- 5132302
l_bflow_applied_to_amt       := NULL; -- 5132302
l_entered_amt_idx            := NULL;          -- 4262811
l_accted_amt_idx             := NULL;          -- 4262811
l_acc_rev_flag               := NULL;          -- 4262811
l_accrual_line_num           := NULL;          -- 4262811
l_tmp_amt                    := NULL;          -- 4262811
--
IF ((p_calculate_g_l_flag = 'Y' AND XLA_AE_JOURNAL_ENTRY_PKG.g_cache_ledgers_info.ledger_category_code <> 'ALC') or
            (XLA_AE_JOURNAL_ENTRY_PKG.g_cache_ledgers_info.ledger_category_code in ('ALC', 'SECONDARY') AND XLA_AE_JOURNAL_ENTRY_PKG.g_cache_ledgers_info.calculate_amts_flag='Y')) THEN
               return;
  END IF;
  
IF XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id = XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.ledger_id OR
    l_balance_type_code <> 'B' THEN
IF NVL(p_source_15,'
') =  'ERV' AND 
NVL(p_source_17,'
') =  'Y'
 THEN 

   --
   XLA_AE_LINES_PKG.SetNewLine;

   p_balance_type_code          := l_balance_type_code;
   -- set the flag so later we will know whether the gain loss line needs to be created
   
   IF(l_balance_type_code = 'A' ) THEN
     p_actual_flag :='G';
   END IF;

   --
   -- bulk performance
   --
   XLA_AE_LINES_PKG.set_ae_header_id (p_ae_header_id => p_event_id ,
                                      p_header_num   => 0); -- 4262811
   --
   -- set accounting line options
   --
   l_ae_header_id:= xla_ae_lines_pkg.SetAcctLineOption(
           p_natural_side_code          => 'D'
         , p_gain_or_loss_flag          => 'Y'
         , p_gl_transfer_mode_code      => 'S'
         , p_acct_entry_type_code       => 'E'
         , p_switch_side_flag           => 'Y'
         , p_merge_duplicate_code       => 'N'
         );
   --
   l_acc_rev_natural_side_code := 'C';  -- 4262811
   -- 
   --
   -- set accounting line type info
   --
   xla_ae_lines_pkg.SetAcctLineType
      (p_component_type             => l_component_type
      ,p_event_type_code            => l_event_type_code
      ,p_line_definition_owner_code => l_line_definition_owner_code
      ,p_line_definition_code       => l_line_definition_code
      ,p_accounting_line_code       => l_component_code
      ,p_accounting_line_type_code  => l_component_type_code
      ,p_accounting_line_appl_id    => l_component_appl_id
      ,p_amb_context_code           => l_amb_context_code
      ,p_entity_code                => l_entity_code
      ,p_event_class_code           => l_event_class_code);
   --
   -- set accounting class
   --
   xla_ae_lines_pkg.SetAcctClass(
           p_accounting_class_code  => 'EXCHANGE_RATE_VARIANCE'
         , p_ae_header_id           => l_ae_header_id
         );

   --
   -- set rounding class
   --
   XLA_AE_LINES_PKG.g_rec_lines.array_rounding_class(XLA_AE_LINES_PKG.g_LineNumber) :=
                      'EXCHANGE_RATE_VARIANCE';

   --
   xla_ae_lines_pkg.g_rec_lines.array_calculate_acctd_flag(xla_ae_lines_pkg.g_LineNumber) := p_calculate_acctd_flag;
   xla_ae_lines_pkg.g_rec_lines.array_calculate_g_l_flag(xla_ae_lines_pkg.g_LineNumber) := p_calculate_g_l_flag;
   --
   -- bulk performance
   --
   XLA_AE_LINES_PKG.g_rec_lines.array_balance_type_code(XLA_AE_LINES_PKG.g_LineNumber) := l_balance_type_code;

   XLA_AE_LINES_PKG.g_rec_lines.array_ledger_id(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id;

   -- 4955764
   XLA_AE_LINES_PKG.g_rec_lines.array_gl_date(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_HEADER_PKG.g_rec_header_new.array_gl_date(g_array_event(p_event_id).array_value_num('header_index'));

   -- 4458381 Public Sector Enh
      XLA_AE_LINES_PKG.g_rec_lines.array_encumbrance_type_id(XLA_AE_LINES_PKG.g_LineNumber) := 1060;
   --
   -- set accounting attributes for the line type
   --
   l_entered_amt_idx := 24;
   l_accted_amt_idx  := 29;
   l_bflow_applied_to_amt_idx  := 7;  -- 5132302
   l_rec_acct_attrs.array_acct_attr_code(1) := 'ACCOUNTING_REVERSAL_OPTION';
   l_rec_acct_attrs.array_char_value(1)  := p_source_19;
   l_rec_acct_attrs.array_acct_attr_code(2) := 'ALLOC_TO_APPLICATION_ID';
   l_rec_acct_attrs.array_num_value(2)  := 
xla_ae_sources_pkg.GetSystemSourceNum(
   p_source_code           => 'XLA_EVENT_APPL_ID'
 , p_source_type_code      => 'Y'
 , p_source_application_id =>  602
);
   l_rec_acct_attrs.array_acct_attr_code(3) := 'ALLOC_TO_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(3)  := p_source_21;
   l_rec_acct_attrs.array_acct_attr_code(4) := 'ALLOC_TO_ENTITY_CODE';
   l_rec_acct_attrs.array_char_value(4)  := 
xla_ae_sources_pkg.GetSystemSourceChar(
   p_source_code           => 'XLA_ENTITY_CODE'
 , p_source_type_code      => 'Y'
 , p_source_application_id =>  602
);
   l_rec_acct_attrs.array_acct_attr_code(5) := 'ALLOC_TO_FIRST_DIST_ID';
   l_rec_acct_attrs.array_num_value(5)  :=  to_char(p_source_23);
   l_rec_acct_attrs.array_acct_attr_code(6) := 'ALLOC_TO_FIRST_SYS_TRAN_ID';
   l_rec_acct_attrs.array_num_value(6)  :=  to_char(p_source_24);
   l_rec_acct_attrs.array_acct_attr_code(7) := 'APPLIED_TO_AMOUNT';
   l_rec_acct_attrs.array_num_value(7)  := p_source_57;
   l_rec_acct_attrs.array_acct_attr_code(8) := 'APPLIED_TO_APPLICATION_ID';
   l_rec_acct_attrs.array_num_value(8)  := p_source_25;
   l_rec_acct_attrs.array_acct_attr_code(9) := 'APPLIED_TO_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(9)  := p_source_26;
   l_rec_acct_attrs.array_acct_attr_code(10) := 'APPLIED_TO_ENTITY_CODE';
   l_rec_acct_attrs.array_char_value(10)  := p_source_27;
   l_rec_acct_attrs.array_acct_attr_code(11) := 'APPLIED_TO_FIRST_DIST_ID';
   l_rec_acct_attrs.array_num_value(11)  :=  to_char(p_source_28);
   l_rec_acct_attrs.array_acct_attr_code(12) := 'APPLIED_TO_FIRST_SYS_TRAN_ID';
   l_rec_acct_attrs.array_num_value(12)  :=  to_char(p_source_29);
   l_rec_acct_attrs.array_acct_attr_code(13) := 'DISTRIBUTION_IDENTIFIER_1';
   l_rec_acct_attrs.array_num_value(13)  :=  to_char(p_source_30);
   l_rec_acct_attrs.array_acct_attr_code(14) := 'DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(14)  := p_source_21;
   l_rec_acct_attrs.array_acct_attr_code(15) := 'ENC_UPG_CR_CCID';
   l_rec_acct_attrs.array_num_value(15)  := p_source_31;
   l_rec_acct_attrs.array_acct_attr_code(16) := 'ENC_UPG_CR_ENTERED_AMT';
   l_rec_acct_attrs.array_num_value(16)  := p_source_32;
   l_rec_acct_attrs.array_acct_attr_code(17) := 'ENC_UPG_CR_ENTERED_CURR';
   l_rec_acct_attrs.array_char_value(17)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(18) := 'ENC_UPG_CR_LEDGER_AMT';
   l_rec_acct_attrs.array_num_value(18)  := p_source_34;
   l_rec_acct_attrs.array_acct_attr_code(19) := 'ENC_UPG_DR_CCID';
   l_rec_acct_attrs.array_num_value(19)  := p_source_35;
   l_rec_acct_attrs.array_acct_attr_code(20) := 'ENC_UPG_DR_ENTERED_AMT';
   l_rec_acct_attrs.array_num_value(20)  := p_source_36;
   l_rec_acct_attrs.array_acct_attr_code(21) := 'ENC_UPG_DR_ENTERED_CURR';
   l_rec_acct_attrs.array_char_value(21)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(22) := 'ENC_UPG_DR_LEDGER_AMT';
   l_rec_acct_attrs.array_num_value(22)  := p_source_37;
   l_rec_acct_attrs.array_acct_attr_code(23) := 'ENC_UPG_OPTION';
   l_rec_acct_attrs.array_char_value(23)  := p_source_38;
   l_rec_acct_attrs.array_acct_attr_code(24) := 'ENTERED_CURRENCY_AMOUNT';
   l_rec_acct_attrs.array_num_value(24)  := p_source_65;
   l_rec_acct_attrs.array_acct_attr_code(25) := 'ENTERED_CURRENCY_CODE';
   l_rec_acct_attrs.array_char_value(25)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(26) := 'EXCHANGE_DATE';
   l_rec_acct_attrs.array_date_value(26)  := p_source_39;
   l_rec_acct_attrs.array_acct_attr_code(27) := 'EXCHANGE_RATE';
   l_rec_acct_attrs.array_num_value(27)  := p_source_40;
   l_rec_acct_attrs.array_acct_attr_code(28) := 'EXCHANGE_RATE_TYPE';
   l_rec_acct_attrs.array_char_value(28)  := p_source_41;
   l_rec_acct_attrs.array_acct_attr_code(29) := 'LEDGER_AMOUNT';
   l_rec_acct_attrs.array_num_value(29)  := p_source_66;
   l_rec_acct_attrs.array_acct_attr_code(30) := 'MULTIPERIOD_END_DATE';
   l_rec_acct_attrs.array_date_value(30)  := p_source_43;
   l_rec_acct_attrs.array_acct_attr_code(31) := 'MULTIPERIOD_OPTION';
   l_rec_acct_attrs.array_char_value(31)  := p_source_44;
   l_rec_acct_attrs.array_acct_attr_code(32) := 'MULTIPERIOD_START_DATE';
   l_rec_acct_attrs.array_date_value(32)  := p_source_45;
   l_rec_acct_attrs.array_acct_attr_code(33) := 'OVERRIDE_ACCTD_AMT_FLAG';
   l_rec_acct_attrs.array_char_value(33)  := p_source_46;
   l_rec_acct_attrs.array_acct_attr_code(34) := 'PARTY_ID';
   l_rec_acct_attrs.array_num_value(34)  := p_source_47;
   l_rec_acct_attrs.array_acct_attr_code(35) := 'PARTY_SITE_ID';
   l_rec_acct_attrs.array_num_value(35)  := p_source_48;
   l_rec_acct_attrs.array_acct_attr_code(36) := 'PARTY_TYPE';
   l_rec_acct_attrs.array_char_value(36)  := p_source_49;
   l_rec_acct_attrs.array_acct_attr_code(37) := 'REVERSED_DISTRIBUTION_ID1';
   l_rec_acct_attrs.array_num_value(37)  :=  to_char(p_source_50);
   l_rec_acct_attrs.array_acct_attr_code(38) := 'REVERSED_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(38)  := p_source_21;
   l_rec_acct_attrs.array_acct_attr_code(39) := 'STATISTICAL_AMOUNT';
   l_rec_acct_attrs.array_num_value(39)  := p_source_51;
   l_rec_acct_attrs.array_acct_attr_code(40) := 'TAX_LINE_REF_ID';
   l_rec_acct_attrs.array_num_value(40)  := p_source_52;
   l_rec_acct_attrs.array_acct_attr_code(41) := 'TAX_REC_NREC_DIST_REF_ID';
   l_rec_acct_attrs.array_num_value(41)  := p_source_53;
   l_rec_acct_attrs.array_acct_attr_code(42) := 'TAX_SUMMARY_LINE_REF_ID';
   l_rec_acct_attrs.array_num_value(42)  := p_source_54;
   l_rec_acct_attrs.array_acct_attr_code(43) := 'UPG_CR_ENC_TYPE_ID';
   l_rec_acct_attrs.array_num_value(43)  := p_source_55;
   l_rec_acct_attrs.array_acct_attr_code(44) := 'UPG_DR_ENC_TYPE_ID';
   l_rec_acct_attrs.array_num_value(44)  := p_source_56;

   XLA_AE_LINES_PKG.SetLineAcctAttrs(l_rec_acct_attrs);
   p_gain_or_loss_ref  := XLA_AE_LINES_PKG.g_rec_lines.array_gain_or_loss_ref(XLA_AE_LINES_PKG.g_LineNumber);

   ---------------------------------------------------------------------------------------------------------------
   -- 4336173 -- assign Business Flow Class (replace code in xla_ae_lines_pkg.Business_Flow_Validation)
   ---------------------------------------------------------------------------------------------------------------
   XLA_AE_LINES_PKG.g_rec_lines.array_business_class_code(XLA_AE_LINES_PKG.g_LineNumber) := l_bflow_class_code;

   l_actual_upg_option  := XLA_AE_LINES_PKG.g_rec_lines.array_actual_upg_option(XLA_AE_LINES_PKG.g_LineNumber);
   l_enc_upg_option     := XLA_AE_LINES_PKG.g_rec_lines.array_enc_upg_option(XLA_AE_LINES_PKG.g_LineNumber);

   IF xla_accounting_cache_pkg.GetValueChar
         (p_source_code         => 'LEDGER_CATEGORY_CODE'
         ,p_target_ledger_id    => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id) IN ('PRIMARY','ALC')
   AND l_bflow_method_code = 'PRIOR_ENTRY'
--   AND (l_actual_upg_option = 'Y' OR l_enc_upg_option = 'Y') Bug 4922099
   AND ( (NVL(l_actual_upg_option, 'N') IN ('Y', 'O')) OR
         (NVL(l_enc_upg_option, 'N') IN ('Y', 'O'))
       )
   THEN
         xla_ae_lines_pkg.BflowUpgEntry
           (p_business_method_code    => l_bflow_method_code
           ,p_business_class_code     => l_bflow_class_code
           ,p_balance_type            => l_balance_type_code);
   ELSE
      NULL;
-- No business flow processing for business flow method of NONE.
   END IF;

   --
   -- call analytical criteria
   --
   
   --
   -- call description
   --
   
xla_ae_lines_pkg.SetLineDescription(
   p_ae_header_id => l_ae_header_id
  ,p_description  => Description_2 (
     p_application_id         => p_application_id
   , p_ae_header_id           => l_ae_header_id 
, p_source_1 => p_source_1
   )
);


   --
   -- call ADRs
   -- Bug 4922099
   --
   IF ( (l_bflow_method_code <> 'PRIOR_ENTRY') OR
        (NVL(l_actual_upg_option, 'N') = 'O') OR
        (NVL(l_enc_upg_option, 'N') = 'O')
      )
   THEN
   NULL;
   --
   --
   
  l_ccid := AcctDerRule_6(
           p_application_id           => p_application_id
         , p_ae_header_id             => l_ae_header_id 
, p_source_6 => p_source_6
, p_source_7 => p_source_7
, p_source_7_meaning => p_source_7_meaning
, p_source_8 => p_source_8
, p_source_9 => p_source_9
, p_source_9_meaning => p_source_9_meaning
, p_source_10 => p_source_10
, p_source_11 => p_source_11
, p_source_12 => p_source_12
, p_source_12_meaning => p_source_12_meaning
         , x_transaction_coa_id       => l_adr_transaction_coa_id
         , x_accounting_coa_id        => l_adr_accounting_coa_id
         , x_value_type_code          => l_adr_value_type_code
         , p_side                     => 'NA'
   );

   xla_ae_lines_pkg.set_ccid(
    p_code_combination_id          => l_ccid
  , p_value_type_code              => l_adr_value_type_code
  , p_transaction_coa_id           => l_adr_transaction_coa_id
  , p_accounting_coa_id            => l_adr_accounting_coa_id
  , p_adr_code                     => 'AP_EXCHG_TAXEXCHG_RATE_VAR'
  , p_adr_type_code                => 'S'
  , p_component_type               => l_component_type
  , p_component_code               => l_component_code
  , p_component_type_code          => l_component_type_code
  , p_component_appl_id            => l_component_appl_id
  , p_amb_context_code             => l_amb_context_code
  , p_side                         => 'NA'
  );


   l_segment := AcctDerRule_4(
           p_application_id           => p_application_id
         , p_ae_header_id             => l_ae_header_id 
, p_source_6 => p_source_6
, p_source_7 => p_source_7
, p_source_7_meaning => p_source_7_meaning
, p_source_8 => p_source_8
, p_source_9 => p_source_9
, p_source_9_meaning => p_source_9_meaning
, p_source_10 => p_source_10
         , x_transaction_coa_id       => l_adr_transaction_coa_id
         , x_accounting_coa_id        => l_adr_accounting_coa_id
         , x_flexfield_segment_code   => l_adr_flexfield_segment_code
         , x_flex_value_set_id        => l_adr_flex_value_set_id
         , x_value_type_code          => l_adr_value_type_code
         , x_value_combination_id     => l_adr_value_combination_id
         , x_value_segment_code       => l_adr_value_segment_code
         , p_side                     => 'NA'
         , p_override_seg_flag        => 'Y'
   );

   IF NVL(l_segment,'NULL') <> '#$NO_OVERRIDE#$' THEN  -- 4465612

      xla_ae_lines_pkg.set_segment(
          p_to_segment_code         => 'GL_ACCOUNT'
        , p_segment_value           => l_segment
        , p_from_segment_code       => l_adr_value_segment_code
        , p_from_combination_id     => l_adr_value_combination_id
        , p_value_type_code         => l_adr_value_type_code
        , p_transaction_coa_id      => l_adr_transaction_coa_id
        , p_accounting_coa_id       => l_adr_accounting_coa_id
        , p_flexfield_segment_code  => l_adr_flexfield_segment_code
        , p_flex_value_set_id       => l_adr_flex_value_set_id
        , p_adr_code                => 'AP_ERV_GAIN_LOSS_NAT_ACCT_SEG'
        , p_adr_type_code           => 'S'
        , p_component_type          => l_component_type
        , p_component_code          => l_component_code
        , p_component_type_code     => l_component_type_code
        , p_component_appl_id       => l_component_appl_id
        , p_amb_context_code        => l_amb_context_code
        , p_entity_code             => 'AP_INVOICES'
        , p_event_class_code        => 'INVOICES'
        , p_side                    => 'NA'
        );

  END IF;

   l_segment := AcctDerRule_5(
           p_application_id           => p_application_id
         , p_ae_header_id             => l_ae_header_id 
, p_source_7 => p_source_7
, p_source_7_meaning => p_source_7_meaning
, p_source_9 => p_source_9
, p_source_9_meaning => p_source_9_meaning
, p_source_11 => p_source_11
         , x_transaction_coa_id       => l_adr_transaction_coa_id
         , x_accounting_coa_id        => l_adr_accounting_coa_id
         , x_flexfield_segment_code   => l_adr_flexfield_segment_code
         , x_flex_value_set_id        => l_adr_flex_value_set_id
         , x_value_type_code          => l_adr_value_type_code
         , x_value_combination_id     => l_adr_value_combination_id
         , x_value_segment_code       => l_adr_value_segment_code
         , p_side                     => 'NA'
         , p_override_seg_flag        => 'Y'
   );

   IF NVL(l_segment,'NULL') <> '#$NO_OVERRIDE#$' THEN  -- 4465612

      xla_ae_lines_pkg.set_segment(
          p_to_segment_code         => 'GL_BALANCING'
        , p_segment_value           => l_segment
        , p_from_segment_code       => l_adr_value_segment_code
        , p_from_combination_id     => l_adr_value_combination_id
        , p_value_type_code         => l_adr_value_type_code
        , p_transaction_coa_id      => l_adr_transaction_coa_id
        , p_accounting_coa_id       => l_adr_accounting_coa_id
        , p_flexfield_segment_code  => l_adr_flexfield_segment_code
        , p_flex_value_set_id       => l_adr_flex_value_set_id
        , p_adr_code                => 'AP_RELATED_DIST_BAL_SEG'
        , p_adr_type_code           => 'S'
        , p_component_type          => l_component_type
        , p_component_code          => l_component_code
        , p_component_type_code     => l_component_type_code
        , p_component_appl_id       => l_component_appl_id
        , p_amb_context_code        => l_amb_context_code
        , p_entity_code             => 'AP_INVOICES'
        , p_event_class_code        => 'INVOICES'
        , p_side                    => 'NA'
        );

  END IF;

   --
   --
   END IF;
   --
   -- Bug 4922099
   IF ( ( (NVL(l_actual_upg_option, 'N') = 'O') OR
          (NVL(l_enc_upg_option, 'N') = 'O')
        ) AND
        (l_bflow_method_code = 'PRIOR_ENTRY')
      )
   THEN
      IF
      --
      1 = 2
      --
      THEN
      xla_accounting_err_pkg.build_message
                                    (p_appli_s_name            => 'XLA'
                                    ,p_msg_name                => 'XLA_UPG_OVERRIDE_ADR_UNDEFINED'
                                    ,p_token_1                 => 'LINE_NUMBER'
                                    ,p_value_1                 => XLA_AE_LINES_PKG.g_LineNumber
                                    ,p_token_2                 => 'LINE_TYPE_NAME'
                                    ,p_value_2                 => XLA_AE_SOURCES_PKG.GetComponentName (
                                                                             l_component_type
                                                                            ,l_component_code
                                                                            ,l_component_type_code
                                                                            ,l_component_appl_id
                                                                            ,l_amb_context_code
                                                                            ,l_entity_code
                                                                            ,l_event_class_code
                                                                           )
                                    ,p_token_3                 => 'OWNER'
                                    ,p_value_3                 => xla_lookups_pkg.get_meaning(
                                                                          p_lookup_type     => 'XLA_OWNER_TYPE'
                                                                          ,p_lookup_code    => l_component_type_code
                                                                         )
                                    ,p_token_4                 => 'PRODUCT_NAME'
                                    ,p_value_4                 => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.application_name
                                    ,p_entity_id               => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.entity_id
                                    ,p_event_id                => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.event_id
                                    ,p_ledger_id               => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id
                                    ,p_ae_header_id            =>  NULL
                                       );

        IF (C_LEVEL_ERROR>= g_log_level) THEN
                 trace
                      (p_msg      => 'ERROR: XLA_UPG_OVERRIDE_ADR_UNDEFINED'
                      ,p_level    => C_LEVEL_ERROR
                      ,p_module   => l_log_module);
        END IF;
      END IF;
   END IF;
   --
   --
   ------------------------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- NOTE: XLA_AE_LINES_PKG.ValidateCurrentLine should NOT be generated if business flow method is
   -- Prior Entry.  Currently, the following code is always generated.
   ------------------------------------------------------------------------------------------------
   XLA_AE_LINES_PKG.ValidateCurrentLine;

   ------------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- Populated credit and debit amounts -- Need to generate this within IF <condition>
   ------------------------------------------------------------------------------------
   XLA_AE_LINES_PKG.SetDebitCreditAmounts;

   ----------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- Update journal entry status -- Need to generate this within IF <condition>
   ----------------------------------------------------------------------------------
   XLA_AE_JOURNAL_ENTRY_PKG.UpdateJournalEntryStatus
         (p_hdr_idx => g_array_event(p_event_id).array_value_num('header_index')
         ,p_balance_type_code => l_balance_type_code
         );

   -------------------------------------------------------------------------------------------
   -- 4262811 - Generate the Accrual Reversal lines
   -------------------------------------------------------------------------------------------
   BEGIN
      l_acc_rev_flag := XLA_AE_HEADER_PKG.g_rec_header_new.array_accrual_reversal_flag
                              (g_array_event(p_event_id).array_value_num('header_index'));
      IF l_acc_rev_flag IS NULL THEN
         l_acc_rev_flag := 'N';
      END IF;
   EXCEPTION
      WHEN OTHERS THEN
         l_acc_rev_flag := 'N';
   END;
   --
   IF (l_acc_rev_flag = 'Y') THEN

       -- 4645092  ------------------------------------------------------------------------------
       -- To allow MPA report to determine if it should generate report process
       XLA_ACCOUNTING_PKG.g_mpa_accrual_exists := 'Y';
       ------------------------------------------------------------------------------------------

       l_accrual_line_num := XLA_AE_LINES_PKG.g_LineNumber;
       XLA_AE_LINES_PKG.CopyLineInfo(l_accrual_line_num);
   -- added call to set_ccid to execute mapping  for secondary accrual reversal entries bug 7444204
   -- call ADRs
   -- Bug 4922099
   --
   IF ( (l_bflow_method_code <> 'PRIOR_ENTRY') OR
        (NVL(l_actual_upg_option, 'N') = 'O') OR
        (NVL(l_enc_upg_option, 'N') = 'O')
      )
   THEN
   NULL;
   --
   --
   
  l_ccid := AcctDerRule_6(
           p_application_id           => p_application_id
         , p_ae_header_id             => l_ae_header_id 
, p_source_6 => p_source_6
, p_source_7 => p_source_7
, p_source_7_meaning => p_source_7_meaning
, p_source_8 => p_source_8
, p_source_9 => p_source_9
, p_source_9_meaning => p_source_9_meaning
, p_source_10 => p_source_10
, p_source_11 => p_source_11
, p_source_12 => p_source_12
, p_source_12_meaning => p_source_12_meaning
         , x_transaction_coa_id       => l_adr_transaction_coa_id
         , x_accounting_coa_id        => l_adr_accounting_coa_id
         , x_value_type_code          => l_adr_value_type_code
         , p_side                     => 'NA'
   );

   xla_ae_lines_pkg.set_ccid(
    p_code_combination_id          => l_ccid
  , p_value_type_code              => l_adr_value_type_code
  , p_transaction_coa_id           => l_adr_transaction_coa_id
  , p_accounting_coa_id            => l_adr_accounting_coa_id
  , p_adr_code                     => 'AP_EXCHG_TAXEXCHG_RATE_VAR'
  , p_adr_type_code                => 'S'
  , p_component_type               => l_component_type
  , p_component_code               => l_component_code
  , p_component_type_code          => l_component_type_code
  , p_component_appl_id            => l_component_appl_id
  , p_amb_context_code             => l_amb_context_code
  , p_side                         => 'NA'
  );


   l_segment := AcctDerRule_4(
           p_application_id           => p_application_id
         , p_ae_header_id             => l_ae_header_id 
, p_source_6 => p_source_6
, p_source_7 => p_source_7
, p_source_7_meaning => p_source_7_meaning
, p_source_8 => p_source_8
, p_source_9 => p_source_9
, p_source_9_meaning => p_source_9_meaning
, p_source_10 => p_source_10
         , x_transaction_coa_id       => l_adr_transaction_coa_id
         , x_accounting_coa_id        => l_adr_accounting_coa_id
         , x_flexfield_segment_code   => l_adr_flexfield_segment_code
         , x_flex_value_set_id        => l_adr_flex_value_set_id
         , x_value_type_code          => l_adr_value_type_code
         , x_value_combination_id     => l_adr_value_combination_id
         , x_value_segment_code       => l_adr_value_segment_code
         , p_side                     => 'NA'
         , p_override_seg_flag        => 'Y'
   );

   IF NVL(l_segment,'NULL') <> '#$NO_OVERRIDE#$' THEN  -- 4465612

      xla_ae_lines_pkg.set_segment(
          p_to_segment_code         => 'GL_ACCOUNT'
        , p_segment_value           => l_segment
        , p_from_segment_code       => l_adr_value_segment_code
        , p_from_combination_id     => l_adr_value_combination_id
        , p_value_type_code         => l_adr_value_type_code
        , p_transaction_coa_id      => l_adr_transaction_coa_id
        , p_accounting_coa_id       => l_adr_accounting_coa_id
        , p_flexfield_segment_code  => l_adr_flexfield_segment_code
        , p_flex_value_set_id       => l_adr_flex_value_set_id
        , p_adr_code                => 'AP_ERV_GAIN_LOSS_NAT_ACCT_SEG'
        , p_adr_type_code           => 'S'
        , p_component_type          => l_component_type
        , p_component_code          => l_component_code
        , p_component_type_code     => l_component_type_code
        , p_component_appl_id       => l_component_appl_id
        , p_amb_context_code        => l_amb_context_code
        , p_entity_code             => 'AP_INVOICES'
        , p_event_class_code        => 'INVOICES'
        , p_side                    => 'NA'
        );

  END IF;

   l_segment := AcctDerRule_5(
           p_application_id           => p_application_id
         , p_ae_header_id             => l_ae_header_id 
, p_source_7 => p_source_7
, p_source_7_meaning => p_source_7_meaning
, p_source_9 => p_source_9
, p_source_9_meaning => p_source_9_meaning
, p_source_11 => p_source_11
         , x_transaction_coa_id       => l_adr_transaction_coa_id
         , x_accounting_coa_id        => l_adr_accounting_coa_id
         , x_flexfield_segment_code   => l_adr_flexfield_segment_code
         , x_flex_value_set_id        => l_adr_flex_value_set_id
         , x_value_type_code          => l_adr_value_type_code
         , x_value_combination_id     => l_adr_value_combination_id
         , x_value_segment_code       => l_adr_value_segment_code
         , p_side                     => 'NA'
         , p_override_seg_flag        => 'Y'
   );

   IF NVL(l_segment,'NULL') <> '#$NO_OVERRIDE#$' THEN  -- 4465612

      xla_ae_lines_pkg.set_segment(
          p_to_segment_code         => 'GL_BALANCING'
        , p_segment_value           => l_segment
        , p_from_segment_code       => l_adr_value_segment_code
        , p_from_combination_id     => l_adr_value_combination_id
        , p_value_type_code         => l_adr_value_type_code
        , p_transaction_coa_id      => l_adr_transaction_coa_id
        , p_accounting_coa_id       => l_adr_accounting_coa_id
        , p_flexfield_segment_code  => l_adr_flexfield_segment_code
        , p_flex_value_set_id       => l_adr_flex_value_set_id
        , p_adr_code                => 'AP_RELATED_DIST_BAL_SEG'
        , p_adr_type_code           => 'S'
        , p_component_type          => l_component_type
        , p_component_code          => l_component_code
        , p_component_type_code     => l_component_type_code
        , p_component_appl_id       => l_component_appl_id
        , p_amb_context_code        => l_amb_context_code
        , p_entity_code             => 'AP_INVOICES'
        , p_event_class_code        => 'INVOICES'
        , p_side                    => 'NA'
        );

  END IF;

   --
   --
   END IF;

       --
       -- Update the line information that should be overwritten
       --
       XLA_AE_LINES_PKG.set_ae_header_id(p_ae_header_id => p_event_id ,
                                         p_header_num   => 1);
       XLA_AE_LINES_PKG.g_rec_lines.array_header_num(XLA_AE_LINES_PKG.g_LineNumber)  :=1;

       XLA_AE_LINES_PKG.g_rec_lines.array_business_class_code(XLA_AE_LINES_PKG.g_LineNumber) := NULL; -- 4669271

       IF l_bflow_method_code <> 'NONE' THEN  -- 4655713b
          XLA_AE_LINES_PKG.g_rec_lines.array_reversal_code(XLA_AE_LINES_PKG.g_LineNumber) := CONCAT('MPA_',l_bflow_method_code);
       END IF;

      --
      -- Depending on the Reversal Method setup, do a switch side or changes sign for the amounts
      --
      IF (XLA_AE_JOURNAL_ENTRY_PKG.g_cache_ledgers_info.ledger_reversal_option = 'SIDE') THEN
          XLA_AE_LINES_PKG.g_rec_lines.array_natural_side_code(XLA_AE_LINES_PKG.g_LineNumber) :=  l_acc_rev_natural_side_code;
      ELSE
          ---------------------------------------------------------------------------------------------------
          -- 4262811a Switch Sign
          ---------------------------------------------------------------------------------------------------
          XLA_AE_LINES_PKG.g_rec_lines.array_switch_side_flag(XLA_AE_LINES_PKG.g_LineNumber) := 'N';  -- 5052518
          XLA_AE_LINES_PKG.g_rec_lines.array_ledger_amount(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_ledger_amount(XLA_AE_LINES_PKG.g_LineNumber) * -1;
          XLA_AE_LINES_PKG.g_rec_lines.array_entered_amount(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_entered_amount(XLA_AE_LINES_PKG.g_LineNumber) * -1;
          -- 5132302
          XLA_AE_LINES_PKG.g_rec_lines.array_bflow_applied_to_amt(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_bflow_applied_to_amt(XLA_AE_LINES_PKG.g_LineNumber) * -1;

      END IF;

      -- 4955764
      XLA_AE_LINES_PKG.g_rec_lines.array_gl_date(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_HEADER_PKG.g_rec_header_new.array_gl_date(g_array_event(p_event_id).array_value_num('acc_rev_header_index'));


      XLA_AE_LINES_PKG.ValidateCurrentLine;
      XLA_AE_LINES_PKG.SetDebitCreditAmounts;

      XLA_AE_JOURNAL_ENTRY_PKG.UpdateJournalEntryStatus
               (p_hdr_idx           => g_array_event(p_event_id).array_value_num('acc_rev_header_index')
               ,p_balance_type_code => l_balance_type_code);

   END IF;

   -----------------------------------------------------------------------------------------
   -- 4262811 Multiperiod Accounting
   -----------------------------------------------------------------------------------------
     -- No MPA option is assigned.


END IF;
END IF;
--

--
IF (C_LEVEL_PROCEDURE >= g_log_level) THEN
   trace
      (p_msg      => 'END of AcctLineType_24'
      ,p_level    => C_LEVEL_PROCEDURE
      ,p_module   => l_log_module);
END IF;
--
EXCEPTION
  WHEN xla_exceptions_pkg.application_exception THEN
      RAISE;
  WHEN OTHERS THEN
       xla_exceptions_pkg.raise_message
           (p_location => 'XLA_00200_AAD_S_000010_BC_PKG.AcctLineType_24');
END AcctLineType_24;
--

---------------------------------------
--
-- PRIVATE FUNCTION
--         AcctLineType_25
--
---------------------------------------
PROCEDURE AcctLineType_25 (
  p_application_id        IN NUMBER
 ,p_event_id              IN NUMBER
 ,p_calculate_acctd_flag  IN VARCHAR2
 ,p_calculate_g_l_flag    IN VARCHAR2
 ,p_actual_flag           IN OUT VARCHAR2
 ,p_balance_type_code     OUT VARCHAR2
 ,p_gain_or_loss_ref      OUT VARCHAR2
 
--Invoice Distribution Description
 , p_source_1            IN VARCHAR2
--Purchase Order Rate Variance Gain Account
 , p_source_6            IN NUMBER
--Automatic Offsets Value
 , p_source_7            IN VARCHAR2
 , p_source_7_meaning    IN VARCHAR2
--Invoice Distribution Ledger Amount
 , p_source_8            IN NUMBER
--Destination Type of the PO Distribution
 , p_source_9            IN VARCHAR2
 , p_source_9_meaning    IN VARCHAR2
--Purchase Order Rate Variance Loss Account
 , p_source_10            IN NUMBER
--Invoice Distribution Account
 , p_source_11            IN NUMBER
--Automatic Offsets Flag
 , p_source_12            IN VARCHAR2
 , p_source_12_meaning    IN VARCHAR2
--Invoice Distribution Type
 , p_source_15            IN VARCHAR2
 , p_source_15_meaning    IN VARCHAR2
--Purchasing Encumbrance Option
 , p_source_17            IN VARCHAR2
 , p_source_17_meaning    IN VARCHAR2
--Accounting Reversal Indicator
 , p_source_19            IN VARCHAR2
--Distribution Link Type
 , p_source_21            IN VARCHAR2
--Allocation to Main Distribution Identifier
 , p_source_23            IN NUMBER
--Invoice Identifier
 , p_source_24            IN NUMBER
--Business Flow Accounts Payable Application Identifier
 , p_source_25            IN NUMBER
--Business Flow Invoice Distribution Type
 , p_source_26            IN VARCHAR2
--Business Flow Invoice Entity Code
 , p_source_27            IN VARCHAR2
--Business Flow Invoice Distribution Identifier
 , p_source_28            IN NUMBER
--Business Flow Invoice Identifier
 , p_source_29            IN NUMBER
--Invoice Distribution Identifier
 , p_source_30            IN NUMBER
--Payables Encumbrance Upgrade Credit Account
 , p_source_31            IN NUMBER
--Payables Encumbrance Upgrade Credit Amount
 , p_source_32            IN NUMBER
--Invoice Currency Code
 , p_source_33            IN VARCHAR2
--Payables Encumbrance Upgrade Credit Base Amount
 , p_source_34            IN NUMBER
--Payables Encumbrance Upgrade Debit Account
 , p_source_35            IN NUMBER
--Payables Encumbrance Upgrade Debit Amount
 , p_source_36            IN NUMBER
--Payables Encumbrance Upgrade Debit Base Amount
 , p_source_37            IN NUMBER
--Payables Encumbrance Upgrade Option
 , p_source_38            IN VARCHAR2
--Invoice Exchange Date
 , p_source_39            IN DATE
--Invoice Exchange Rate
 , p_source_40            IN NUMBER
--Invoice Exchange Rate Type
 , p_source_41            IN VARCHAR2
--Deferred Accounting End Date
 , p_source_43            IN DATE
--Deferred Accounting Option
 , p_source_44            IN VARCHAR2
--Deferred Accounting Start Date
 , p_source_45            IN DATE
--Override Accounted Amount Indicator
 , p_source_46            IN VARCHAR2
 , p_source_46_meaning    IN VARCHAR2
--Invoice Supplier Identifier
 , p_source_47            IN NUMBER
--Invoice Supplier Site Identifier
 , p_source_48            IN NUMBER
--Third Party Type
 , p_source_49            IN VARCHAR2
--Parent Reversal Identifier
 , p_source_50            IN NUMBER
--Invoice Distribution Statistical Amount
 , p_source_51            IN NUMBER
--Invoice Distribution Tax Line Identifier
 , p_source_52            IN NUMBER
--Invoice Distribution Tax Distribution Identifier from Tax
 , p_source_53            IN NUMBER
--Invoice Distribution Summary Tax Line Identifier
 , p_source_54            IN NUMBER
--Payables Upgrade Credit Encumbrance Type Identifier
 , p_source_55            IN NUMBER
--Payables Upgrade Debit Encumbrance Type Identifier
 , p_source_56            IN NUMBER
--Invoice Distribution Encumbrance Amount
 , p_source_65            IN NUMBER
--Invoice Distribution Encumbrance Ledger Amount
 , p_source_66            IN NUMBER
)
IS

l_component_type              VARCHAR2(80);
l_component_code              VARCHAR2(30);
l_component_type_code         VARCHAR2(1);
l_component_appl_id           INTEGER;
l_amb_context_code            VARCHAR2(30);
l_entity_code                 VARCHAR2(30);
l_event_class_code            VARCHAR2(30);
l_ae_header_id                NUMBER;
l_event_type_code             VARCHAR2(30);
l_line_definition_code        VARCHAR2(30);
l_line_definition_owner_code  VARCHAR2(1);
--
-- adr variables
l_segment                     VARCHAR2(30);
l_ccid                        NUMBER;
l_adr_transaction_coa_id      NUMBER;
l_adr_accounting_coa_id       NUMBER;
l_adr_flexfield_segment_code  VARCHAR2(30);
l_adr_flex_value_set_id       NUMBER;
l_adr_value_type_code         VARCHAR2(30);
l_adr_value_combination_id    NUMBER;
l_adr_value_segment_code      VARCHAR2(30);

l_bflow_method_code           VARCHAR2(30);  -- 4219869 Business Flow
l_bflow_class_code            VARCHAR2(30);  -- 4219869 Business Flow
l_inherit_desc_flag           VARCHAR2(1);   -- 4219869 Business Flow
l_budgetary_control_flag      VARCHAR2(1);   -- 4458381 Public Sector Enh

-- 4262811 Variables ------------------------------------------------------------------------------------------
l_entered_amt_idx             NUMBER;
l_accted_amt_idx              NUMBER;
l_acc_rev_flag                VARCHAR2(1);
l_accrual_line_num            NUMBER;
l_tmp_amt                     NUMBER;
l_acc_rev_natural_side_code   VARCHAR2(1);

l_num_entries                 NUMBER;
l_gl_dates                    xla_ae_journal_entry_pkg.t_array_date;
l_accted_amts                 xla_ae_journal_entry_pkg.t_array_num;
l_entered_amts                xla_ae_journal_entry_pkg.t_array_num;
l_period_names                xla_ae_journal_entry_pkg.t_array_V15L;
l_recog_line_1                NUMBER;
l_recog_line_2                NUMBER;

l_bflow_applied_to_amt_idx    NUMBER;                                -- 5132302
l_bflow_applied_to_amt        NUMBER;                                -- 5132302
l_bflow_applied_to_amts       xla_ae_journal_entry_pkg.t_array_num;  -- 5132302

l_event_id                    NUMBER;  -- To handle MPA header Description: xla_ae_header_pkg.SetHdrDescription

--l_rounding_ccy                VARCHAR2(15); -- To handle MPA rounding  4262811b
l_same_currency               BOOLEAN;        -- To handle MPA rounding  4262811b

---------------------------------------------------------------------------------------------------------------


--
-- bulk performance
--
l_balance_type_code           VARCHAR2(1);
l_rec_acct_attrs              XLA_AE_LINES_PKG.t_rec_acct_attrs;
l_log_module                  VARCHAR2(240);

--
-- Upgrade strategy
--
l_actual_upg_option           VARCHAR2(1);
l_enc_upg_option           VARCHAR2(1);

--
BEGIN
--
IF g_log_enabled THEN
      l_log_module := C_DEFAULT_MODULE||'.AcctLineType_25';
END IF;
--
IF (C_LEVEL_PROCEDURE >= g_log_level) THEN

      trace
         (p_msg      => 'BEGIN of AcctLineType_25'
         ,p_level    => C_LEVEL_PROCEDURE
         ,p_module   => l_log_module);

END IF;
--
l_component_type             := 'AMB_JLT';
l_component_code             := 'AP_EX_RATE_VAR_PP_ENC_DR';
l_component_type_code        := 'S';
l_component_appl_id          :=  200;
l_amb_context_code           := 'DEFAULT';
l_entity_code                := 'AP_INVOICES';
l_event_class_code           := 'PREPAYMENTS';
l_event_type_code            := 'PREPAYMENTS_ALL';
l_line_definition_owner_code := 'S';
l_line_definition_code       := 'ENC_PREPAY_ALL';
--
l_balance_type_code          := 'E';
l_segment                     := NULL;
l_ccid                        := NULL;
l_adr_transaction_coa_id      := NULL;
l_adr_accounting_coa_id       := NULL;
l_adr_flexfield_segment_code  := NULL;
l_adr_flex_value_set_id       := NULL;
l_adr_value_type_code         := NULL;
l_adr_value_combination_id    := NULL;
l_adr_value_segment_code      := NULL;

l_bflow_method_code          := 'NONE';   -- 4219869 Business Flow
l_bflow_class_code           := 'AP_INV_ENCUM';    -- 4219869 Business Flow
l_inherit_desc_flag          := 'N';   -- 4219869 Business Flow
l_budgetary_control_flag     := 'Y';

l_bflow_applied_to_amt_idx   := NULL; -- 5132302
l_bflow_applied_to_amt       := NULL; -- 5132302
l_entered_amt_idx            := NULL;          -- 4262811
l_accted_amt_idx             := NULL;          -- 4262811
l_acc_rev_flag               := NULL;          -- 4262811
l_accrual_line_num           := NULL;          -- 4262811
l_tmp_amt                    := NULL;          -- 4262811
--
IF ((p_calculate_g_l_flag = 'Y' AND XLA_AE_JOURNAL_ENTRY_PKG.g_cache_ledgers_info.ledger_category_code <> 'ALC') or
            (XLA_AE_JOURNAL_ENTRY_PKG.g_cache_ledgers_info.ledger_category_code in ('ALC', 'SECONDARY') AND XLA_AE_JOURNAL_ENTRY_PKG.g_cache_ledgers_info.calculate_amts_flag='Y')) THEN
               return;
  END IF;
  
IF XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id = XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.ledger_id OR
    l_balance_type_code <> 'B' THEN
IF NVL(p_source_15,'
') =  'ERV' AND 
NVL(p_source_17,'
') =  'Y'
 THEN 

   --
   XLA_AE_LINES_PKG.SetNewLine;

   p_balance_type_code          := l_balance_type_code;
   -- set the flag so later we will know whether the gain loss line needs to be created
   
   IF(l_balance_type_code = 'A' ) THEN
     p_actual_flag :='G';
   END IF;

   --
   -- bulk performance
   --
   XLA_AE_LINES_PKG.set_ae_header_id (p_ae_header_id => p_event_id ,
                                      p_header_num   => 0); -- 4262811
   --
   -- set accounting line options
   --
   l_ae_header_id:= xla_ae_lines_pkg.SetAcctLineOption(
           p_natural_side_code          => 'D'
         , p_gain_or_loss_flag          => 'Y'
         , p_gl_transfer_mode_code      => 'S'
         , p_acct_entry_type_code       => 'E'
         , p_switch_side_flag           => 'Y'
         , p_merge_duplicate_code       => 'N'
         );
   --
   l_acc_rev_natural_side_code := 'C';  -- 4262811
   -- 
   --
   -- set accounting line type info
   --
   xla_ae_lines_pkg.SetAcctLineType
      (p_component_type             => l_component_type
      ,p_event_type_code            => l_event_type_code
      ,p_line_definition_owner_code => l_line_definition_owner_code
      ,p_line_definition_code       => l_line_definition_code
      ,p_accounting_line_code       => l_component_code
      ,p_accounting_line_type_code  => l_component_type_code
      ,p_accounting_line_appl_id    => l_component_appl_id
      ,p_amb_context_code           => l_amb_context_code
      ,p_entity_code                => l_entity_code
      ,p_event_class_code           => l_event_class_code);
   --
   -- set accounting class
   --
   xla_ae_lines_pkg.SetAcctClass(
           p_accounting_class_code  => 'EXCHANGE_RATE_VARIANCE'
         , p_ae_header_id           => l_ae_header_id
         );

   --
   -- set rounding class
   --
   XLA_AE_LINES_PKG.g_rec_lines.array_rounding_class(XLA_AE_LINES_PKG.g_LineNumber) :=
                      'EXCHANGE_RATE_VARIANCE';

   --
   xla_ae_lines_pkg.g_rec_lines.array_calculate_acctd_flag(xla_ae_lines_pkg.g_LineNumber) := p_calculate_acctd_flag;
   xla_ae_lines_pkg.g_rec_lines.array_calculate_g_l_flag(xla_ae_lines_pkg.g_LineNumber) := p_calculate_g_l_flag;
   --
   -- bulk performance
   --
   XLA_AE_LINES_PKG.g_rec_lines.array_balance_type_code(XLA_AE_LINES_PKG.g_LineNumber) := l_balance_type_code;

   XLA_AE_LINES_PKG.g_rec_lines.array_ledger_id(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id;

   -- 4955764
   XLA_AE_LINES_PKG.g_rec_lines.array_gl_date(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_HEADER_PKG.g_rec_header_new.array_gl_date(g_array_event(p_event_id).array_value_num('header_index'));

   -- 4458381 Public Sector Enh
      XLA_AE_LINES_PKG.g_rec_lines.array_encumbrance_type_id(XLA_AE_LINES_PKG.g_LineNumber) := 1060;
   --
   -- set accounting attributes for the line type
   --
   l_entered_amt_idx := 23;
   l_accted_amt_idx  := 28;
   l_bflow_applied_to_amt_idx  := NULL;  -- 5132302
   l_rec_acct_attrs.array_acct_attr_code(1) := 'ACCOUNTING_REVERSAL_OPTION';
   l_rec_acct_attrs.array_char_value(1)  := p_source_19;
   l_rec_acct_attrs.array_acct_attr_code(2) := 'ALLOC_TO_APPLICATION_ID';
   l_rec_acct_attrs.array_num_value(2)  := 
xla_ae_sources_pkg.GetSystemSourceNum(
   p_source_code           => 'XLA_EVENT_APPL_ID'
 , p_source_type_code      => 'Y'
 , p_source_application_id =>  602
);
   l_rec_acct_attrs.array_acct_attr_code(3) := 'ALLOC_TO_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(3)  := p_source_21;
   l_rec_acct_attrs.array_acct_attr_code(4) := 'ALLOC_TO_ENTITY_CODE';
   l_rec_acct_attrs.array_char_value(4)  := 
xla_ae_sources_pkg.GetSystemSourceChar(
   p_source_code           => 'XLA_ENTITY_CODE'
 , p_source_type_code      => 'Y'
 , p_source_application_id =>  602
);
   l_rec_acct_attrs.array_acct_attr_code(5) := 'ALLOC_TO_FIRST_DIST_ID';
   l_rec_acct_attrs.array_num_value(5)  :=  to_char(p_source_23);
   l_rec_acct_attrs.array_acct_attr_code(6) := 'ALLOC_TO_FIRST_SYS_TRAN_ID';
   l_rec_acct_attrs.array_num_value(6)  :=  to_char(p_source_24);
   l_rec_acct_attrs.array_acct_attr_code(7) := 'APPLIED_TO_APPLICATION_ID';
   l_rec_acct_attrs.array_num_value(7)  := p_source_25;
   l_rec_acct_attrs.array_acct_attr_code(8) := 'APPLIED_TO_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(8)  := p_source_26;
   l_rec_acct_attrs.array_acct_attr_code(9) := 'APPLIED_TO_ENTITY_CODE';
   l_rec_acct_attrs.array_char_value(9)  := p_source_27;
   l_rec_acct_attrs.array_acct_attr_code(10) := 'APPLIED_TO_FIRST_DIST_ID';
   l_rec_acct_attrs.array_num_value(10)  :=  to_char(p_source_28);
   l_rec_acct_attrs.array_acct_attr_code(11) := 'APPLIED_TO_FIRST_SYS_TRAN_ID';
   l_rec_acct_attrs.array_num_value(11)  :=  to_char(p_source_29);
   l_rec_acct_attrs.array_acct_attr_code(12) := 'DISTRIBUTION_IDENTIFIER_1';
   l_rec_acct_attrs.array_num_value(12)  :=  to_char(p_source_30);
   l_rec_acct_attrs.array_acct_attr_code(13) := 'DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(13)  := p_source_21;
   l_rec_acct_attrs.array_acct_attr_code(14) := 'ENC_UPG_CR_CCID';
   l_rec_acct_attrs.array_num_value(14)  := p_source_31;
   l_rec_acct_attrs.array_acct_attr_code(15) := 'ENC_UPG_CR_ENTERED_AMT';
   l_rec_acct_attrs.array_num_value(15)  := p_source_32;
   l_rec_acct_attrs.array_acct_attr_code(16) := 'ENC_UPG_CR_ENTERED_CURR';
   l_rec_acct_attrs.array_char_value(16)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(17) := 'ENC_UPG_CR_LEDGER_AMT';
   l_rec_acct_attrs.array_num_value(17)  := p_source_34;
   l_rec_acct_attrs.array_acct_attr_code(18) := 'ENC_UPG_DR_CCID';
   l_rec_acct_attrs.array_num_value(18)  := p_source_35;
   l_rec_acct_attrs.array_acct_attr_code(19) := 'ENC_UPG_DR_ENTERED_AMT';
   l_rec_acct_attrs.array_num_value(19)  := p_source_36;
   l_rec_acct_attrs.array_acct_attr_code(20) := 'ENC_UPG_DR_ENTERED_CURR';
   l_rec_acct_attrs.array_char_value(20)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(21) := 'ENC_UPG_DR_LEDGER_AMT';
   l_rec_acct_attrs.array_num_value(21)  := p_source_37;
   l_rec_acct_attrs.array_acct_attr_code(22) := 'ENC_UPG_OPTION';
   l_rec_acct_attrs.array_char_value(22)  := p_source_38;
   l_rec_acct_attrs.array_acct_attr_code(23) := 'ENTERED_CURRENCY_AMOUNT';
   l_rec_acct_attrs.array_num_value(23)  := p_source_65;
   l_rec_acct_attrs.array_acct_attr_code(24) := 'ENTERED_CURRENCY_CODE';
   l_rec_acct_attrs.array_char_value(24)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(25) := 'EXCHANGE_DATE';
   l_rec_acct_attrs.array_date_value(25)  := p_source_39;
   l_rec_acct_attrs.array_acct_attr_code(26) := 'EXCHANGE_RATE';
   l_rec_acct_attrs.array_num_value(26)  := p_source_40;
   l_rec_acct_attrs.array_acct_attr_code(27) := 'EXCHANGE_RATE_TYPE';
   l_rec_acct_attrs.array_char_value(27)  := p_source_41;
   l_rec_acct_attrs.array_acct_attr_code(28) := 'LEDGER_AMOUNT';
   l_rec_acct_attrs.array_num_value(28)  := p_source_66;
   l_rec_acct_attrs.array_acct_attr_code(29) := 'MULTIPERIOD_END_DATE';
   l_rec_acct_attrs.array_date_value(29)  := p_source_43;
   l_rec_acct_attrs.array_acct_attr_code(30) := 'MULTIPERIOD_OPTION';
   l_rec_acct_attrs.array_char_value(30)  := p_source_44;
   l_rec_acct_attrs.array_acct_attr_code(31) := 'MULTIPERIOD_START_DATE';
   l_rec_acct_attrs.array_date_value(31)  := p_source_45;
   l_rec_acct_attrs.array_acct_attr_code(32) := 'OVERRIDE_ACCTD_AMT_FLAG';
   l_rec_acct_attrs.array_char_value(32)  := p_source_46;
   l_rec_acct_attrs.array_acct_attr_code(33) := 'PARTY_ID';
   l_rec_acct_attrs.array_num_value(33)  := p_source_47;
   l_rec_acct_attrs.array_acct_attr_code(34) := 'PARTY_SITE_ID';
   l_rec_acct_attrs.array_num_value(34)  := p_source_48;
   l_rec_acct_attrs.array_acct_attr_code(35) := 'PARTY_TYPE';
   l_rec_acct_attrs.array_char_value(35)  := p_source_49;
   l_rec_acct_attrs.array_acct_attr_code(36) := 'REVERSED_DISTRIBUTION_ID1';
   l_rec_acct_attrs.array_num_value(36)  :=  to_char(p_source_50);
   l_rec_acct_attrs.array_acct_attr_code(37) := 'REVERSED_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(37)  := p_source_21;
   l_rec_acct_attrs.array_acct_attr_code(38) := 'STATISTICAL_AMOUNT';
   l_rec_acct_attrs.array_num_value(38)  := p_source_51;
   l_rec_acct_attrs.array_acct_attr_code(39) := 'TAX_LINE_REF_ID';
   l_rec_acct_attrs.array_num_value(39)  := p_source_52;
   l_rec_acct_attrs.array_acct_attr_code(40) := 'TAX_REC_NREC_DIST_REF_ID';
   l_rec_acct_attrs.array_num_value(40)  := p_source_53;
   l_rec_acct_attrs.array_acct_attr_code(41) := 'TAX_SUMMARY_LINE_REF_ID';
   l_rec_acct_attrs.array_num_value(41)  := p_source_54;
   l_rec_acct_attrs.array_acct_attr_code(42) := 'UPG_CR_ENC_TYPE_ID';
   l_rec_acct_attrs.array_num_value(42)  := p_source_55;
   l_rec_acct_attrs.array_acct_attr_code(43) := 'UPG_DR_ENC_TYPE_ID';
   l_rec_acct_attrs.array_num_value(43)  := p_source_56;

   XLA_AE_LINES_PKG.SetLineAcctAttrs(l_rec_acct_attrs);
   p_gain_or_loss_ref  := XLA_AE_LINES_PKG.g_rec_lines.array_gain_or_loss_ref(XLA_AE_LINES_PKG.g_LineNumber);

   ---------------------------------------------------------------------------------------------------------------
   -- 4336173 -- assign Business Flow Class (replace code in xla_ae_lines_pkg.Business_Flow_Validation)
   ---------------------------------------------------------------------------------------------------------------
   XLA_AE_LINES_PKG.g_rec_lines.array_business_class_code(XLA_AE_LINES_PKG.g_LineNumber) := l_bflow_class_code;

   l_actual_upg_option  := XLA_AE_LINES_PKG.g_rec_lines.array_actual_upg_option(XLA_AE_LINES_PKG.g_LineNumber);
   l_enc_upg_option     := XLA_AE_LINES_PKG.g_rec_lines.array_enc_upg_option(XLA_AE_LINES_PKG.g_LineNumber);

   IF xla_accounting_cache_pkg.GetValueChar
         (p_source_code         => 'LEDGER_CATEGORY_CODE'
         ,p_target_ledger_id    => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id) IN ('PRIMARY','ALC')
   AND l_bflow_method_code = 'PRIOR_ENTRY'
--   AND (l_actual_upg_option = 'Y' OR l_enc_upg_option = 'Y') Bug 4922099
   AND ( (NVL(l_actual_upg_option, 'N') IN ('Y', 'O')) OR
         (NVL(l_enc_upg_option, 'N') IN ('Y', 'O'))
       )
   THEN
         xla_ae_lines_pkg.BflowUpgEntry
           (p_business_method_code    => l_bflow_method_code
           ,p_business_class_code     => l_bflow_class_code
           ,p_balance_type            => l_balance_type_code);
   ELSE
      NULL;
-- No business flow processing for business flow method of NONE.
   END IF;

   --
   -- call analytical criteria
   --
   
   --
   -- call description
   --
   
xla_ae_lines_pkg.SetLineDescription(
   p_ae_header_id => l_ae_header_id
  ,p_description  => Description_2 (
     p_application_id         => p_application_id
   , p_ae_header_id           => l_ae_header_id 
, p_source_1 => p_source_1
   )
);


   --
   -- call ADRs
   -- Bug 4922099
   --
   IF ( (l_bflow_method_code <> 'PRIOR_ENTRY') OR
        (NVL(l_actual_upg_option, 'N') = 'O') OR
        (NVL(l_enc_upg_option, 'N') = 'O')
      )
   THEN
   NULL;
   --
   --
   
  l_ccid := AcctDerRule_6(
           p_application_id           => p_application_id
         , p_ae_header_id             => l_ae_header_id 
, p_source_6 => p_source_6
, p_source_7 => p_source_7
, p_source_7_meaning => p_source_7_meaning
, p_source_8 => p_source_8
, p_source_9 => p_source_9
, p_source_9_meaning => p_source_9_meaning
, p_source_10 => p_source_10
, p_source_11 => p_source_11
, p_source_12 => p_source_12
, p_source_12_meaning => p_source_12_meaning
         , x_transaction_coa_id       => l_adr_transaction_coa_id
         , x_accounting_coa_id        => l_adr_accounting_coa_id
         , x_value_type_code          => l_adr_value_type_code
         , p_side                     => 'NA'
   );

   xla_ae_lines_pkg.set_ccid(
    p_code_combination_id          => l_ccid
  , p_value_type_code              => l_adr_value_type_code
  , p_transaction_coa_id           => l_adr_transaction_coa_id
  , p_accounting_coa_id            => l_adr_accounting_coa_id
  , p_adr_code                     => 'AP_EXCHG_TAXEXCHG_RATE_VAR'
  , p_adr_type_code                => 'S'
  , p_component_type               => l_component_type
  , p_component_code               => l_component_code
  , p_component_type_code          => l_component_type_code
  , p_component_appl_id            => l_component_appl_id
  , p_amb_context_code             => l_amb_context_code
  , p_side                         => 'NA'
  );


   l_segment := AcctDerRule_4(
           p_application_id           => p_application_id
         , p_ae_header_id             => l_ae_header_id 
, p_source_6 => p_source_6
, p_source_7 => p_source_7
, p_source_7_meaning => p_source_7_meaning
, p_source_8 => p_source_8
, p_source_9 => p_source_9
, p_source_9_meaning => p_source_9_meaning
, p_source_10 => p_source_10
         , x_transaction_coa_id       => l_adr_transaction_coa_id
         , x_accounting_coa_id        => l_adr_accounting_coa_id
         , x_flexfield_segment_code   => l_adr_flexfield_segment_code
         , x_flex_value_set_id        => l_adr_flex_value_set_id
         , x_value_type_code          => l_adr_value_type_code
         , x_value_combination_id     => l_adr_value_combination_id
         , x_value_segment_code       => l_adr_value_segment_code
         , p_side                     => 'NA'
         , p_override_seg_flag        => 'Y'
   );

   IF NVL(l_segment,'NULL') <> '#$NO_OVERRIDE#$' THEN  -- 4465612

      xla_ae_lines_pkg.set_segment(
          p_to_segment_code         => 'GL_ACCOUNT'
        , p_segment_value           => l_segment
        , p_from_segment_code       => l_adr_value_segment_code
        , p_from_combination_id     => l_adr_value_combination_id
        , p_value_type_code         => l_adr_value_type_code
        , p_transaction_coa_id      => l_adr_transaction_coa_id
        , p_accounting_coa_id       => l_adr_accounting_coa_id
        , p_flexfield_segment_code  => l_adr_flexfield_segment_code
        , p_flex_value_set_id       => l_adr_flex_value_set_id
        , p_adr_code                => 'AP_ERV_GAIN_LOSS_NAT_ACCT_SEG'
        , p_adr_type_code           => 'S'
        , p_component_type          => l_component_type
        , p_component_code          => l_component_code
        , p_component_type_code     => l_component_type_code
        , p_component_appl_id       => l_component_appl_id
        , p_amb_context_code        => l_amb_context_code
        , p_entity_code             => 'AP_INVOICES'
        , p_event_class_code        => 'PREPAYMENTS'
        , p_side                    => 'NA'
        );

  END IF;

   l_segment := AcctDerRule_5(
           p_application_id           => p_application_id
         , p_ae_header_id             => l_ae_header_id 
, p_source_7 => p_source_7
, p_source_7_meaning => p_source_7_meaning
, p_source_9 => p_source_9
, p_source_9_meaning => p_source_9_meaning
, p_source_11 => p_source_11
         , x_transaction_coa_id       => l_adr_transaction_coa_id
         , x_accounting_coa_id        => l_adr_accounting_coa_id
         , x_flexfield_segment_code   => l_adr_flexfield_segment_code
         , x_flex_value_set_id        => l_adr_flex_value_set_id
         , x_value_type_code          => l_adr_value_type_code
         , x_value_combination_id     => l_adr_value_combination_id
         , x_value_segment_code       => l_adr_value_segment_code
         , p_side                     => 'NA'
         , p_override_seg_flag        => 'Y'
   );

   IF NVL(l_segment,'NULL') <> '#$NO_OVERRIDE#$' THEN  -- 4465612

      xla_ae_lines_pkg.set_segment(
          p_to_segment_code         => 'GL_BALANCING'
        , p_segment_value           => l_segment
        , p_from_segment_code       => l_adr_value_segment_code
        , p_from_combination_id     => l_adr_value_combination_id
        , p_value_type_code         => l_adr_value_type_code
        , p_transaction_coa_id      => l_adr_transaction_coa_id
        , p_accounting_coa_id       => l_adr_accounting_coa_id
        , p_flexfield_segment_code  => l_adr_flexfield_segment_code
        , p_flex_value_set_id       => l_adr_flex_value_set_id
        , p_adr_code                => 'AP_RELATED_DIST_BAL_SEG'
        , p_adr_type_code           => 'S'
        , p_component_type          => l_component_type
        , p_component_code          => l_component_code
        , p_component_type_code     => l_component_type_code
        , p_component_appl_id       => l_component_appl_id
        , p_amb_context_code        => l_amb_context_code
        , p_entity_code             => 'AP_INVOICES'
        , p_event_class_code        => 'PREPAYMENTS'
        , p_side                    => 'NA'
        );

  END IF;

   --
   --
   END IF;
   --
   -- Bug 4922099
   IF ( ( (NVL(l_actual_upg_option, 'N') = 'O') OR
          (NVL(l_enc_upg_option, 'N') = 'O')
        ) AND
        (l_bflow_method_code = 'PRIOR_ENTRY')
      )
   THEN
      IF
      --
      1 = 2
      --
      THEN
      xla_accounting_err_pkg.build_message
                                    (p_appli_s_name            => 'XLA'
                                    ,p_msg_name                => 'XLA_UPG_OVERRIDE_ADR_UNDEFINED'
                                    ,p_token_1                 => 'LINE_NUMBER'
                                    ,p_value_1                 => XLA_AE_LINES_PKG.g_LineNumber
                                    ,p_token_2                 => 'LINE_TYPE_NAME'
                                    ,p_value_2                 => XLA_AE_SOURCES_PKG.GetComponentName (
                                                                             l_component_type
                                                                            ,l_component_code
                                                                            ,l_component_type_code
                                                                            ,l_component_appl_id
                                                                            ,l_amb_context_code
                                                                            ,l_entity_code
                                                                            ,l_event_class_code
                                                                           )
                                    ,p_token_3                 => 'OWNER'
                                    ,p_value_3                 => xla_lookups_pkg.get_meaning(
                                                                          p_lookup_type     => 'XLA_OWNER_TYPE'
                                                                          ,p_lookup_code    => l_component_type_code
                                                                         )
                                    ,p_token_4                 => 'PRODUCT_NAME'
                                    ,p_value_4                 => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.application_name
                                    ,p_entity_id               => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.entity_id
                                    ,p_event_id                => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.event_id
                                    ,p_ledger_id               => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id
                                    ,p_ae_header_id            =>  NULL
                                       );

        IF (C_LEVEL_ERROR>= g_log_level) THEN
                 trace
                      (p_msg      => 'ERROR: XLA_UPG_OVERRIDE_ADR_UNDEFINED'
                      ,p_level    => C_LEVEL_ERROR
                      ,p_module   => l_log_module);
        END IF;
      END IF;
   END IF;
   --
   --
   ------------------------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- NOTE: XLA_AE_LINES_PKG.ValidateCurrentLine should NOT be generated if business flow method is
   -- Prior Entry.  Currently, the following code is always generated.
   ------------------------------------------------------------------------------------------------
   XLA_AE_LINES_PKG.ValidateCurrentLine;

   ------------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- Populated credit and debit amounts -- Need to generate this within IF <condition>
   ------------------------------------------------------------------------------------
   XLA_AE_LINES_PKG.SetDebitCreditAmounts;

   ----------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- Update journal entry status -- Need to generate this within IF <condition>
   ----------------------------------------------------------------------------------
   XLA_AE_JOURNAL_ENTRY_PKG.UpdateJournalEntryStatus
         (p_hdr_idx => g_array_event(p_event_id).array_value_num('header_index')
         ,p_balance_type_code => l_balance_type_code
         );

   -------------------------------------------------------------------------------------------
   -- 4262811 - Generate the Accrual Reversal lines
   -------------------------------------------------------------------------------------------
   BEGIN
      l_acc_rev_flag := XLA_AE_HEADER_PKG.g_rec_header_new.array_accrual_reversal_flag
                              (g_array_event(p_event_id).array_value_num('header_index'));
      IF l_acc_rev_flag IS NULL THEN
         l_acc_rev_flag := 'N';
      END IF;
   EXCEPTION
      WHEN OTHERS THEN
         l_acc_rev_flag := 'N';
   END;
   --
   IF (l_acc_rev_flag = 'Y') THEN

       -- 4645092  ------------------------------------------------------------------------------
       -- To allow MPA report to determine if it should generate report process
       XLA_ACCOUNTING_PKG.g_mpa_accrual_exists := 'Y';
       ------------------------------------------------------------------------------------------

       l_accrual_line_num := XLA_AE_LINES_PKG.g_LineNumber;
       XLA_AE_LINES_PKG.CopyLineInfo(l_accrual_line_num);
   -- added call to set_ccid to execute mapping  for secondary accrual reversal entries bug 7444204
   -- call ADRs
   -- Bug 4922099
   --
   IF ( (l_bflow_method_code <> 'PRIOR_ENTRY') OR
        (NVL(l_actual_upg_option, 'N') = 'O') OR
        (NVL(l_enc_upg_option, 'N') = 'O')
      )
   THEN
   NULL;
   --
   --
   
  l_ccid := AcctDerRule_6(
           p_application_id           => p_application_id
         , p_ae_header_id             => l_ae_header_id 
, p_source_6 => p_source_6
, p_source_7 => p_source_7
, p_source_7_meaning => p_source_7_meaning
, p_source_8 => p_source_8
, p_source_9 => p_source_9
, p_source_9_meaning => p_source_9_meaning
, p_source_10 => p_source_10
, p_source_11 => p_source_11
, p_source_12 => p_source_12
, p_source_12_meaning => p_source_12_meaning
         , x_transaction_coa_id       => l_adr_transaction_coa_id
         , x_accounting_coa_id        => l_adr_accounting_coa_id
         , x_value_type_code          => l_adr_value_type_code
         , p_side                     => 'NA'
   );

   xla_ae_lines_pkg.set_ccid(
    p_code_combination_id          => l_ccid
  , p_value_type_code              => l_adr_value_type_code
  , p_transaction_coa_id           => l_adr_transaction_coa_id
  , p_accounting_coa_id            => l_adr_accounting_coa_id
  , p_adr_code                     => 'AP_EXCHG_TAXEXCHG_RATE_VAR'
  , p_adr_type_code                => 'S'
  , p_component_type               => l_component_type
  , p_component_code               => l_component_code
  , p_component_type_code          => l_component_type_code
  , p_component_appl_id            => l_component_appl_id
  , p_amb_context_code             => l_amb_context_code
  , p_side                         => 'NA'
  );


   l_segment := AcctDerRule_4(
           p_application_id           => p_application_id
         , p_ae_header_id             => l_ae_header_id 
, p_source_6 => p_source_6
, p_source_7 => p_source_7
, p_source_7_meaning => p_source_7_meaning
, p_source_8 => p_source_8
, p_source_9 => p_source_9
, p_source_9_meaning => p_source_9_meaning
, p_source_10 => p_source_10
         , x_transaction_coa_id       => l_adr_transaction_coa_id
         , x_accounting_coa_id        => l_adr_accounting_coa_id
         , x_flexfield_segment_code   => l_adr_flexfield_segment_code
         , x_flex_value_set_id        => l_adr_flex_value_set_id
         , x_value_type_code          => l_adr_value_type_code
         , x_value_combination_id     => l_adr_value_combination_id
         , x_value_segment_code       => l_adr_value_segment_code
         , p_side                     => 'NA'
         , p_override_seg_flag        => 'Y'
   );

   IF NVL(l_segment,'NULL') <> '#$NO_OVERRIDE#$' THEN  -- 4465612

      xla_ae_lines_pkg.set_segment(
          p_to_segment_code         => 'GL_ACCOUNT'
        , p_segment_value           => l_segment
        , p_from_segment_code       => l_adr_value_segment_code
        , p_from_combination_id     => l_adr_value_combination_id
        , p_value_type_code         => l_adr_value_type_code
        , p_transaction_coa_id      => l_adr_transaction_coa_id
        , p_accounting_coa_id       => l_adr_accounting_coa_id
        , p_flexfield_segment_code  => l_adr_flexfield_segment_code
        , p_flex_value_set_id       => l_adr_flex_value_set_id
        , p_adr_code                => 'AP_ERV_GAIN_LOSS_NAT_ACCT_SEG'
        , p_adr_type_code           => 'S'
        , p_component_type          => l_component_type
        , p_component_code          => l_component_code
        , p_component_type_code     => l_component_type_code
        , p_component_appl_id       => l_component_appl_id
        , p_amb_context_code        => l_amb_context_code
        , p_entity_code             => 'AP_INVOICES'
        , p_event_class_code        => 'PREPAYMENTS'
        , p_side                    => 'NA'
        );

  END IF;

   l_segment := AcctDerRule_5(
           p_application_id           => p_application_id
         , p_ae_header_id             => l_ae_header_id 
, p_source_7 => p_source_7
, p_source_7_meaning => p_source_7_meaning
, p_source_9 => p_source_9
, p_source_9_meaning => p_source_9_meaning
, p_source_11 => p_source_11
         , x_transaction_coa_id       => l_adr_transaction_coa_id
         , x_accounting_coa_id        => l_adr_accounting_coa_id
         , x_flexfield_segment_code   => l_adr_flexfield_segment_code
         , x_flex_value_set_id        => l_adr_flex_value_set_id
         , x_value_type_code          => l_adr_value_type_code
         , x_value_combination_id     => l_adr_value_combination_id
         , x_value_segment_code       => l_adr_value_segment_code
         , p_side                     => 'NA'
         , p_override_seg_flag        => 'Y'
   );

   IF NVL(l_segment,'NULL') <> '#$NO_OVERRIDE#$' THEN  -- 4465612

      xla_ae_lines_pkg.set_segment(
          p_to_segment_code         => 'GL_BALANCING'
        , p_segment_value           => l_segment
        , p_from_segment_code       => l_adr_value_segment_code
        , p_from_combination_id     => l_adr_value_combination_id
        , p_value_type_code         => l_adr_value_type_code
        , p_transaction_coa_id      => l_adr_transaction_coa_id
        , p_accounting_coa_id       => l_adr_accounting_coa_id
        , p_flexfield_segment_code  => l_adr_flexfield_segment_code
        , p_flex_value_set_id       => l_adr_flex_value_set_id
        , p_adr_code                => 'AP_RELATED_DIST_BAL_SEG'
        , p_adr_type_code           => 'S'
        , p_component_type          => l_component_type
        , p_component_code          => l_component_code
        , p_component_type_code     => l_component_type_code
        , p_component_appl_id       => l_component_appl_id
        , p_amb_context_code        => l_amb_context_code
        , p_entity_code             => 'AP_INVOICES'
        , p_event_class_code        => 'PREPAYMENTS'
        , p_side                    => 'NA'
        );

  END IF;

   --
   --
   END IF;

       --
       -- Update the line information that should be overwritten
       --
       XLA_AE_LINES_PKG.set_ae_header_id(p_ae_header_id => p_event_id ,
                                         p_header_num   => 1);
       XLA_AE_LINES_PKG.g_rec_lines.array_header_num(XLA_AE_LINES_PKG.g_LineNumber)  :=1;

       XLA_AE_LINES_PKG.g_rec_lines.array_business_class_code(XLA_AE_LINES_PKG.g_LineNumber) := NULL; -- 4669271

       IF l_bflow_method_code <> 'NONE' THEN  -- 4655713b
          XLA_AE_LINES_PKG.g_rec_lines.array_reversal_code(XLA_AE_LINES_PKG.g_LineNumber) := CONCAT('MPA_',l_bflow_method_code);
       END IF;

      --
      -- Depending on the Reversal Method setup, do a switch side or changes sign for the amounts
      --
      IF (XLA_AE_JOURNAL_ENTRY_PKG.g_cache_ledgers_info.ledger_reversal_option = 'SIDE') THEN
          XLA_AE_LINES_PKG.g_rec_lines.array_natural_side_code(XLA_AE_LINES_PKG.g_LineNumber) :=  l_acc_rev_natural_side_code;
      ELSE
          ---------------------------------------------------------------------------------------------------
          -- 4262811a Switch Sign
          ---------------------------------------------------------------------------------------------------
          XLA_AE_LINES_PKG.g_rec_lines.array_switch_side_flag(XLA_AE_LINES_PKG.g_LineNumber) := 'N';  -- 5052518
          XLA_AE_LINES_PKG.g_rec_lines.array_ledger_amount(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_ledger_amount(XLA_AE_LINES_PKG.g_LineNumber) * -1;
          XLA_AE_LINES_PKG.g_rec_lines.array_entered_amount(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_entered_amount(XLA_AE_LINES_PKG.g_LineNumber) * -1;
          -- 5132302
          XLA_AE_LINES_PKG.g_rec_lines.array_bflow_applied_to_amt(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_bflow_applied_to_amt(XLA_AE_LINES_PKG.g_LineNumber) * -1;

      END IF;

      -- 4955764
      XLA_AE_LINES_PKG.g_rec_lines.array_gl_date(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_HEADER_PKG.g_rec_header_new.array_gl_date(g_array_event(p_event_id).array_value_num('acc_rev_header_index'));


      XLA_AE_LINES_PKG.ValidateCurrentLine;
      XLA_AE_LINES_PKG.SetDebitCreditAmounts;

      XLA_AE_JOURNAL_ENTRY_PKG.UpdateJournalEntryStatus
               (p_hdr_idx           => g_array_event(p_event_id).array_value_num('acc_rev_header_index')
               ,p_balance_type_code => l_balance_type_code);

   END IF;

   -----------------------------------------------------------------------------------------
   -- 4262811 Multiperiod Accounting
   -----------------------------------------------------------------------------------------
     -- No MPA option is assigned.


END IF;
END IF;
--

--
IF (C_LEVEL_PROCEDURE >= g_log_level) THEN
   trace
      (p_msg      => 'END of AcctLineType_25'
      ,p_level    => C_LEVEL_PROCEDURE
      ,p_module   => l_log_module);
END IF;
--
EXCEPTION
  WHEN xla_exceptions_pkg.application_exception THEN
      RAISE;
  WHEN OTHERS THEN
       xla_exceptions_pkg.raise_message
           (p_location => 'XLA_00200_AAD_S_000010_BC_PKG.AcctLineType_25');
END AcctLineType_25;
--

---------------------------------------
--
-- PRIVATE FUNCTION
--         AcctLineType_26
--
---------------------------------------
PROCEDURE AcctLineType_26 (
  p_application_id        IN NUMBER
 ,p_event_id              IN NUMBER
 ,p_calculate_acctd_flag  IN VARCHAR2
 ,p_calculate_g_l_flag    IN VARCHAR2
 ,p_actual_flag           IN OUT VARCHAR2
 ,p_balance_type_code     OUT VARCHAR2
 ,p_gain_or_loss_ref      OUT VARCHAR2
 
--Invoice Distribution Description
 , p_source_1            IN VARCHAR2
--Invoice Distribution Account
 , p_source_11            IN NUMBER
--Invoice Distribution Type
 , p_source_15            IN VARCHAR2
 , p_source_15_meaning    IN VARCHAR2
--Purchasing Encumbrance Option
 , p_source_17            IN VARCHAR2
 , p_source_17_meaning    IN VARCHAR2
--Accounting Reversal Indicator
 , p_source_19            IN VARCHAR2
--Distribution Link Type
 , p_source_21            IN VARCHAR2
--Allocation to Main Distribution Identifier
 , p_source_23            IN NUMBER
--Invoice Identifier
 , p_source_24            IN NUMBER
--Business Flow Accounts Payable Application Identifier
 , p_source_25            IN NUMBER
--Business Flow Invoice Distribution Type
 , p_source_26            IN VARCHAR2
--Business Flow Invoice Entity Code
 , p_source_27            IN VARCHAR2
--Business Flow Invoice Distribution Identifier
 , p_source_28            IN NUMBER
--Business Flow Invoice Identifier
 , p_source_29            IN NUMBER
--Invoice Distribution Identifier
 , p_source_30            IN NUMBER
--Payables Encumbrance Upgrade Credit Account
 , p_source_31            IN NUMBER
--Payables Encumbrance Upgrade Credit Amount
 , p_source_32            IN NUMBER
--Invoice Currency Code
 , p_source_33            IN VARCHAR2
--Payables Encumbrance Upgrade Credit Base Amount
 , p_source_34            IN NUMBER
--Payables Encumbrance Upgrade Debit Account
 , p_source_35            IN NUMBER
--Payables Encumbrance Upgrade Debit Amount
 , p_source_36            IN NUMBER
--Payables Encumbrance Upgrade Debit Base Amount
 , p_source_37            IN NUMBER
--Payables Encumbrance Upgrade Option
 , p_source_38            IN VARCHAR2
--Invoice Exchange Date
 , p_source_39            IN DATE
--Invoice Exchange Rate
 , p_source_40            IN NUMBER
--Invoice Exchange Rate Type
 , p_source_41            IN VARCHAR2
--Deferred Accounting End Date
 , p_source_43            IN DATE
--Deferred Accounting Option
 , p_source_44            IN VARCHAR2
--Deferred Accounting Start Date
 , p_source_45            IN DATE
--Override Accounted Amount Indicator
 , p_source_46            IN VARCHAR2
 , p_source_46_meaning    IN VARCHAR2
--Invoice Supplier Identifier
 , p_source_47            IN NUMBER
--Invoice Supplier Site Identifier
 , p_source_48            IN NUMBER
--Third Party Type
 , p_source_49            IN VARCHAR2
--Parent Reversal Identifier
 , p_source_50            IN NUMBER
--Invoice Distribution Statistical Amount
 , p_source_51            IN NUMBER
--Invoice Distribution Tax Line Identifier
 , p_source_52            IN NUMBER
--Invoice Distribution Tax Distribution Identifier from Tax
 , p_source_53            IN NUMBER
--Invoice Distribution Summary Tax Line Identifier
 , p_source_54            IN NUMBER
--Payables Upgrade Credit Encumbrance Type Identifier
 , p_source_55            IN NUMBER
--Payables Upgrade Debit Encumbrance Type Identifier
 , p_source_56            IN NUMBER
--Invoice Distribution Encumbrance Amount
 , p_source_65            IN NUMBER
--Invoice Distribution Encumbrance Ledger Amount
 , p_source_66            IN NUMBER
)
IS

l_component_type              VARCHAR2(80);
l_component_code              VARCHAR2(30);
l_component_type_code         VARCHAR2(1);
l_component_appl_id           INTEGER;
l_amb_context_code            VARCHAR2(30);
l_entity_code                 VARCHAR2(30);
l_event_class_code            VARCHAR2(30);
l_ae_header_id                NUMBER;
l_event_type_code             VARCHAR2(30);
l_line_definition_code        VARCHAR2(30);
l_line_definition_owner_code  VARCHAR2(1);
--
-- adr variables
l_segment                     VARCHAR2(30);
l_ccid                        NUMBER;
l_adr_transaction_coa_id      NUMBER;
l_adr_accounting_coa_id       NUMBER;
l_adr_flexfield_segment_code  VARCHAR2(30);
l_adr_flex_value_set_id       NUMBER;
l_adr_value_type_code         VARCHAR2(30);
l_adr_value_combination_id    NUMBER;
l_adr_value_segment_code      VARCHAR2(30);

l_bflow_method_code           VARCHAR2(30);  -- 4219869 Business Flow
l_bflow_class_code            VARCHAR2(30);  -- 4219869 Business Flow
l_inherit_desc_flag           VARCHAR2(1);   -- 4219869 Business Flow
l_budgetary_control_flag      VARCHAR2(1);   -- 4458381 Public Sector Enh

-- 4262811 Variables ------------------------------------------------------------------------------------------
l_entered_amt_idx             NUMBER;
l_accted_amt_idx              NUMBER;
l_acc_rev_flag                VARCHAR2(1);
l_accrual_line_num            NUMBER;
l_tmp_amt                     NUMBER;
l_acc_rev_natural_side_code   VARCHAR2(1);

l_num_entries                 NUMBER;
l_gl_dates                    xla_ae_journal_entry_pkg.t_array_date;
l_accted_amts                 xla_ae_journal_entry_pkg.t_array_num;
l_entered_amts                xla_ae_journal_entry_pkg.t_array_num;
l_period_names                xla_ae_journal_entry_pkg.t_array_V15L;
l_recog_line_1                NUMBER;
l_recog_line_2                NUMBER;

l_bflow_applied_to_amt_idx    NUMBER;                                -- 5132302
l_bflow_applied_to_amt        NUMBER;                                -- 5132302
l_bflow_applied_to_amts       xla_ae_journal_entry_pkg.t_array_num;  -- 5132302

l_event_id                    NUMBER;  -- To handle MPA header Description: xla_ae_header_pkg.SetHdrDescription

--l_rounding_ccy                VARCHAR2(15); -- To handle MPA rounding  4262811b
l_same_currency               BOOLEAN;        -- To handle MPA rounding  4262811b

---------------------------------------------------------------------------------------------------------------


--
-- bulk performance
--
l_balance_type_code           VARCHAR2(1);
l_rec_acct_attrs              XLA_AE_LINES_PKG.t_rec_acct_attrs;
l_log_module                  VARCHAR2(240);

--
-- Upgrade strategy
--
l_actual_upg_option           VARCHAR2(1);
l_enc_upg_option           VARCHAR2(1);

--
BEGIN
--
IF g_log_enabled THEN
      l_log_module := C_DEFAULT_MODULE||'.AcctLineType_26';
END IF;
--
IF (C_LEVEL_PROCEDURE >= g_log_level) THEN

      trace
         (p_msg      => 'BEGIN of AcctLineType_26'
         ,p_level    => C_LEVEL_PROCEDURE
         ,p_module   => l_log_module);

END IF;
--
l_component_type             := 'AMB_JLT';
l_component_code             := 'AP_FREIGHT_EXPENSE_CM_ENC_DR';
l_component_type_code        := 'S';
l_component_appl_id          :=  200;
l_amb_context_code           := 'DEFAULT';
l_entity_code                := 'AP_INVOICES';
l_event_class_code           := 'CREDIT MEMOS';
l_event_type_code            := 'CREDIT MEMOS_ALL';
l_line_definition_owner_code := 'S';
l_line_definition_code       := 'ENC_CM_ALL';
--
l_balance_type_code          := 'E';
l_segment                     := NULL;
l_ccid                        := NULL;
l_adr_transaction_coa_id      := NULL;
l_adr_accounting_coa_id       := NULL;
l_adr_flexfield_segment_code  := NULL;
l_adr_flex_value_set_id       := NULL;
l_adr_value_type_code         := NULL;
l_adr_value_combination_id    := NULL;
l_adr_value_segment_code      := NULL;

l_bflow_method_code          := 'NONE';   -- 4219869 Business Flow
l_bflow_class_code           := 'AP_INV_ENCUM';    -- 4219869 Business Flow
l_inherit_desc_flag          := 'N';   -- 4219869 Business Flow
l_budgetary_control_flag     := 'Y';

l_bflow_applied_to_amt_idx   := NULL; -- 5132302
l_bflow_applied_to_amt       := NULL; -- 5132302
l_entered_amt_idx            := NULL;          -- 4262811
l_accted_amt_idx             := NULL;          -- 4262811
l_acc_rev_flag               := NULL;          -- 4262811
l_accrual_line_num           := NULL;          -- 4262811
l_tmp_amt                    := NULL;          -- 4262811
--
 
IF XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id = XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.ledger_id OR
    l_balance_type_code <> 'B' THEN
IF NVL(p_source_15,'
') =  'FREIGHT' AND 
NVL(p_source_17,'
') =  'Y'
 THEN 

   --
   XLA_AE_LINES_PKG.SetNewLine;

   p_balance_type_code          := l_balance_type_code;
   -- set the flag so later we will know whether the gain loss line needs to be created
   
   IF(l_balance_type_code = 'A' and p_actual_flag is null) THEN
     p_actual_flag :='A';
   END IF;

   --
   -- bulk performance
   --
   XLA_AE_LINES_PKG.set_ae_header_id (p_ae_header_id => p_event_id ,
                                      p_header_num   => 0); -- 4262811
   --
   -- set accounting line options
   --
   l_ae_header_id:= xla_ae_lines_pkg.SetAcctLineOption(
           p_natural_side_code          => 'D'
         , p_gain_or_loss_flag          => 'N'
         , p_gl_transfer_mode_code      => 'S'
         , p_acct_entry_type_code       => 'E'
         , p_switch_side_flag           => 'Y'
         , p_merge_duplicate_code       => 'N'
         );
   --
   l_acc_rev_natural_side_code := 'C';  -- 4262811
   -- 
   --
   -- set accounting line type info
   --
   xla_ae_lines_pkg.SetAcctLineType
      (p_component_type             => l_component_type
      ,p_event_type_code            => l_event_type_code
      ,p_line_definition_owner_code => l_line_definition_owner_code
      ,p_line_definition_code       => l_line_definition_code
      ,p_accounting_line_code       => l_component_code
      ,p_accounting_line_type_code  => l_component_type_code
      ,p_accounting_line_appl_id    => l_component_appl_id
      ,p_amb_context_code           => l_amb_context_code
      ,p_entity_code                => l_entity_code
      ,p_event_class_code           => l_event_class_code);
   --
   -- set accounting class
   --
   xla_ae_lines_pkg.SetAcctClass(
           p_accounting_class_code  => 'FREIGHT'
         , p_ae_header_id           => l_ae_header_id
         );

   --
   -- set rounding class
   --
   XLA_AE_LINES_PKG.g_rec_lines.array_rounding_class(XLA_AE_LINES_PKG.g_LineNumber) :=
                      'FREIGHT';

   --
   xla_ae_lines_pkg.g_rec_lines.array_calculate_acctd_flag(xla_ae_lines_pkg.g_LineNumber) := p_calculate_acctd_flag;
   xla_ae_lines_pkg.g_rec_lines.array_calculate_g_l_flag(xla_ae_lines_pkg.g_LineNumber) := p_calculate_g_l_flag;
   --
   -- bulk performance
   --
   XLA_AE_LINES_PKG.g_rec_lines.array_balance_type_code(XLA_AE_LINES_PKG.g_LineNumber) := l_balance_type_code;

   XLA_AE_LINES_PKG.g_rec_lines.array_ledger_id(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id;

   -- 4955764
   XLA_AE_LINES_PKG.g_rec_lines.array_gl_date(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_HEADER_PKG.g_rec_header_new.array_gl_date(g_array_event(p_event_id).array_value_num('header_index'));

   -- 4458381 Public Sector Enh
      XLA_AE_LINES_PKG.g_rec_lines.array_encumbrance_type_id(XLA_AE_LINES_PKG.g_LineNumber) := 1060;
   --
   -- set accounting attributes for the line type
   --
   l_entered_amt_idx := 23;
   l_accted_amt_idx  := 28;
   l_bflow_applied_to_amt_idx  := NULL;  -- 5132302
   l_rec_acct_attrs.array_acct_attr_code(1) := 'ACCOUNTING_REVERSAL_OPTION';
   l_rec_acct_attrs.array_char_value(1)  := p_source_19;
   l_rec_acct_attrs.array_acct_attr_code(2) := 'ALLOC_TO_APPLICATION_ID';
   l_rec_acct_attrs.array_num_value(2)  := 
xla_ae_sources_pkg.GetSystemSourceNum(
   p_source_code           => 'XLA_EVENT_APPL_ID'
 , p_source_type_code      => 'Y'
 , p_source_application_id =>  602
);
   l_rec_acct_attrs.array_acct_attr_code(3) := 'ALLOC_TO_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(3)  := p_source_21;
   l_rec_acct_attrs.array_acct_attr_code(4) := 'ALLOC_TO_ENTITY_CODE';
   l_rec_acct_attrs.array_char_value(4)  := 
xla_ae_sources_pkg.GetSystemSourceChar(
   p_source_code           => 'XLA_ENTITY_CODE'
 , p_source_type_code      => 'Y'
 , p_source_application_id =>  602
);
   l_rec_acct_attrs.array_acct_attr_code(5) := 'ALLOC_TO_FIRST_DIST_ID';
   l_rec_acct_attrs.array_num_value(5)  :=  to_char(p_source_23);
   l_rec_acct_attrs.array_acct_attr_code(6) := 'ALLOC_TO_FIRST_SYS_TRAN_ID';
   l_rec_acct_attrs.array_num_value(6)  :=  to_char(p_source_24);
   l_rec_acct_attrs.array_acct_attr_code(7) := 'APPLIED_TO_APPLICATION_ID';
   l_rec_acct_attrs.array_num_value(7)  := p_source_25;
   l_rec_acct_attrs.array_acct_attr_code(8) := 'APPLIED_TO_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(8)  := p_source_26;
   l_rec_acct_attrs.array_acct_attr_code(9) := 'APPLIED_TO_ENTITY_CODE';
   l_rec_acct_attrs.array_char_value(9)  := p_source_27;
   l_rec_acct_attrs.array_acct_attr_code(10) := 'APPLIED_TO_FIRST_DIST_ID';
   l_rec_acct_attrs.array_num_value(10)  :=  to_char(p_source_28);
   l_rec_acct_attrs.array_acct_attr_code(11) := 'APPLIED_TO_FIRST_SYS_TRAN_ID';
   l_rec_acct_attrs.array_num_value(11)  :=  to_char(p_source_29);
   l_rec_acct_attrs.array_acct_attr_code(12) := 'DISTRIBUTION_IDENTIFIER_1';
   l_rec_acct_attrs.array_num_value(12)  :=  to_char(p_source_30);
   l_rec_acct_attrs.array_acct_attr_code(13) := 'DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(13)  := p_source_21;
   l_rec_acct_attrs.array_acct_attr_code(14) := 'ENC_UPG_CR_CCID';
   l_rec_acct_attrs.array_num_value(14)  := p_source_31;
   l_rec_acct_attrs.array_acct_attr_code(15) := 'ENC_UPG_CR_ENTERED_AMT';
   l_rec_acct_attrs.array_num_value(15)  := p_source_32;
   l_rec_acct_attrs.array_acct_attr_code(16) := 'ENC_UPG_CR_ENTERED_CURR';
   l_rec_acct_attrs.array_char_value(16)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(17) := 'ENC_UPG_CR_LEDGER_AMT';
   l_rec_acct_attrs.array_num_value(17)  := p_source_34;
   l_rec_acct_attrs.array_acct_attr_code(18) := 'ENC_UPG_DR_CCID';
   l_rec_acct_attrs.array_num_value(18)  := p_source_35;
   l_rec_acct_attrs.array_acct_attr_code(19) := 'ENC_UPG_DR_ENTERED_AMT';
   l_rec_acct_attrs.array_num_value(19)  := p_source_36;
   l_rec_acct_attrs.array_acct_attr_code(20) := 'ENC_UPG_DR_ENTERED_CURR';
   l_rec_acct_attrs.array_char_value(20)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(21) := 'ENC_UPG_DR_LEDGER_AMT';
   l_rec_acct_attrs.array_num_value(21)  := p_source_37;
   l_rec_acct_attrs.array_acct_attr_code(22) := 'ENC_UPG_OPTION';
   l_rec_acct_attrs.array_char_value(22)  := p_source_38;
   l_rec_acct_attrs.array_acct_attr_code(23) := 'ENTERED_CURRENCY_AMOUNT';
   l_rec_acct_attrs.array_num_value(23)  := p_source_65;
   l_rec_acct_attrs.array_acct_attr_code(24) := 'ENTERED_CURRENCY_CODE';
   l_rec_acct_attrs.array_char_value(24)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(25) := 'EXCHANGE_DATE';
   l_rec_acct_attrs.array_date_value(25)  := p_source_39;
   l_rec_acct_attrs.array_acct_attr_code(26) := 'EXCHANGE_RATE';
   l_rec_acct_attrs.array_num_value(26)  := p_source_40;
   l_rec_acct_attrs.array_acct_attr_code(27) := 'EXCHANGE_RATE_TYPE';
   l_rec_acct_attrs.array_char_value(27)  := p_source_41;
   l_rec_acct_attrs.array_acct_attr_code(28) := 'LEDGER_AMOUNT';
   l_rec_acct_attrs.array_num_value(28)  := p_source_66;
   l_rec_acct_attrs.array_acct_attr_code(29) := 'MULTIPERIOD_END_DATE';
   l_rec_acct_attrs.array_date_value(29)  := p_source_43;
   l_rec_acct_attrs.array_acct_attr_code(30) := 'MULTIPERIOD_OPTION';
   l_rec_acct_attrs.array_char_value(30)  := p_source_44;
   l_rec_acct_attrs.array_acct_attr_code(31) := 'MULTIPERIOD_START_DATE';
   l_rec_acct_attrs.array_date_value(31)  := p_source_45;
   l_rec_acct_attrs.array_acct_attr_code(32) := 'OVERRIDE_ACCTD_AMT_FLAG';
   l_rec_acct_attrs.array_char_value(32)  := p_source_46;
   l_rec_acct_attrs.array_acct_attr_code(33) := 'PARTY_ID';
   l_rec_acct_attrs.array_num_value(33)  := p_source_47;
   l_rec_acct_attrs.array_acct_attr_code(34) := 'PARTY_SITE_ID';
   l_rec_acct_attrs.array_num_value(34)  := p_source_48;
   l_rec_acct_attrs.array_acct_attr_code(35) := 'PARTY_TYPE';
   l_rec_acct_attrs.array_char_value(35)  := p_source_49;
   l_rec_acct_attrs.array_acct_attr_code(36) := 'REVERSED_DISTRIBUTION_ID1';
   l_rec_acct_attrs.array_num_value(36)  :=  to_char(p_source_50);
   l_rec_acct_attrs.array_acct_attr_code(37) := 'REVERSED_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(37)  := p_source_21;
   l_rec_acct_attrs.array_acct_attr_code(38) := 'STATISTICAL_AMOUNT';
   l_rec_acct_attrs.array_num_value(38)  := p_source_51;
   l_rec_acct_attrs.array_acct_attr_code(39) := 'TAX_LINE_REF_ID';
   l_rec_acct_attrs.array_num_value(39)  := p_source_52;
   l_rec_acct_attrs.array_acct_attr_code(40) := 'TAX_REC_NREC_DIST_REF_ID';
   l_rec_acct_attrs.array_num_value(40)  := p_source_53;
   l_rec_acct_attrs.array_acct_attr_code(41) := 'TAX_SUMMARY_LINE_REF_ID';
   l_rec_acct_attrs.array_num_value(41)  := p_source_54;
   l_rec_acct_attrs.array_acct_attr_code(42) := 'UPG_CR_ENC_TYPE_ID';
   l_rec_acct_attrs.array_num_value(42)  := p_source_55;
   l_rec_acct_attrs.array_acct_attr_code(43) := 'UPG_DR_ENC_TYPE_ID';
   l_rec_acct_attrs.array_num_value(43)  := p_source_56;

   XLA_AE_LINES_PKG.SetLineAcctAttrs(l_rec_acct_attrs);
   p_gain_or_loss_ref  := XLA_AE_LINES_PKG.g_rec_lines.array_gain_or_loss_ref(XLA_AE_LINES_PKG.g_LineNumber);

   ---------------------------------------------------------------------------------------------------------------
   -- 4336173 -- assign Business Flow Class (replace code in xla_ae_lines_pkg.Business_Flow_Validation)
   ---------------------------------------------------------------------------------------------------------------
   XLA_AE_LINES_PKG.g_rec_lines.array_business_class_code(XLA_AE_LINES_PKG.g_LineNumber) := l_bflow_class_code;

   l_actual_upg_option  := XLA_AE_LINES_PKG.g_rec_lines.array_actual_upg_option(XLA_AE_LINES_PKG.g_LineNumber);
   l_enc_upg_option     := XLA_AE_LINES_PKG.g_rec_lines.array_enc_upg_option(XLA_AE_LINES_PKG.g_LineNumber);

   IF xla_accounting_cache_pkg.GetValueChar
         (p_source_code         => 'LEDGER_CATEGORY_CODE'
         ,p_target_ledger_id    => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id) IN ('PRIMARY','ALC')
   AND l_bflow_method_code = 'PRIOR_ENTRY'
--   AND (l_actual_upg_option = 'Y' OR l_enc_upg_option = 'Y') Bug 4922099
   AND ( (NVL(l_actual_upg_option, 'N') IN ('Y', 'O')) OR
         (NVL(l_enc_upg_option, 'N') IN ('Y', 'O'))
       )
   THEN
         xla_ae_lines_pkg.BflowUpgEntry
           (p_business_method_code    => l_bflow_method_code
           ,p_business_class_code     => l_bflow_class_code
           ,p_balance_type            => l_balance_type_code);
   ELSE
      NULL;
-- No business flow processing for business flow method of NONE.
   END IF;

   --
   -- call analytical criteria
   --
   
   --
   -- call description
   --
   
xla_ae_lines_pkg.SetLineDescription(
   p_ae_header_id => l_ae_header_id
  ,p_description  => Description_2 (
     p_application_id         => p_application_id
   , p_ae_header_id           => l_ae_header_id 
, p_source_1 => p_source_1
   )
);


   --
   -- call ADRs
   -- Bug 4922099
   --
   IF ( (l_bflow_method_code <> 'PRIOR_ENTRY') OR
        (NVL(l_actual_upg_option, 'N') = 'O') OR
        (NVL(l_enc_upg_option, 'N') = 'O')
      )
   THEN
   NULL;
   --
   --
   
  l_ccid := AcctDerRule_7(
           p_application_id           => p_application_id
         , p_ae_header_id             => l_ae_header_id 
, p_source_11 => p_source_11
         , x_transaction_coa_id       => l_adr_transaction_coa_id
         , x_accounting_coa_id        => l_adr_accounting_coa_id
         , x_value_type_code          => l_adr_value_type_code
         , p_side                     => 'NA'
   );

   xla_ae_lines_pkg.set_ccid(
    p_code_combination_id          => l_ccid
  , p_value_type_code              => l_adr_value_type_code
  , p_transaction_coa_id           => l_adr_transaction_coa_id
  , p_accounting_coa_id            => l_adr_accounting_coa_id
  , p_adr_code                     => 'AP_INVOICE_DIST'
  , p_adr_type_code                => 'S'
  , p_component_type               => l_component_type
  , p_component_code               => l_component_code
  , p_component_type_code          => l_component_type_code
  , p_component_appl_id            => l_component_appl_id
  , p_amb_context_code             => l_amb_context_code
  , p_side                         => 'NA'
  );


   --
   --
   END IF;
   --
   -- Bug 4922099
   IF ( ( (NVL(l_actual_upg_option, 'N') = 'O') OR
          (NVL(l_enc_upg_option, 'N') = 'O')
        ) AND
        (l_bflow_method_code = 'PRIOR_ENTRY')
      )
   THEN
      IF
      --
      1 = 2
      --
      THEN
      xla_accounting_err_pkg.build_message
                                    (p_appli_s_name            => 'XLA'
                                    ,p_msg_name                => 'XLA_UPG_OVERRIDE_ADR_UNDEFINED'
                                    ,p_token_1                 => 'LINE_NUMBER'
                                    ,p_value_1                 => XLA_AE_LINES_PKG.g_LineNumber
                                    ,p_token_2                 => 'LINE_TYPE_NAME'
                                    ,p_value_2                 => XLA_AE_SOURCES_PKG.GetComponentName (
                                                                             l_component_type
                                                                            ,l_component_code
                                                                            ,l_component_type_code
                                                                            ,l_component_appl_id
                                                                            ,l_amb_context_code
                                                                            ,l_entity_code
                                                                            ,l_event_class_code
                                                                           )
                                    ,p_token_3                 => 'OWNER'
                                    ,p_value_3                 => xla_lookups_pkg.get_meaning(
                                                                          p_lookup_type     => 'XLA_OWNER_TYPE'
                                                                          ,p_lookup_code    => l_component_type_code
                                                                         )
                                    ,p_token_4                 => 'PRODUCT_NAME'
                                    ,p_value_4                 => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.application_name
                                    ,p_entity_id               => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.entity_id
                                    ,p_event_id                => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.event_id
                                    ,p_ledger_id               => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id
                                    ,p_ae_header_id            =>  NULL
                                       );

        IF (C_LEVEL_ERROR>= g_log_level) THEN
                 trace
                      (p_msg      => 'ERROR: XLA_UPG_OVERRIDE_ADR_UNDEFINED'
                      ,p_level    => C_LEVEL_ERROR
                      ,p_module   => l_log_module);
        END IF;
      END IF;
   END IF;
   --
   --
   ------------------------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- NOTE: XLA_AE_LINES_PKG.ValidateCurrentLine should NOT be generated if business flow method is
   -- Prior Entry.  Currently, the following code is always generated.
   ------------------------------------------------------------------------------------------------
   XLA_AE_LINES_PKG.ValidateCurrentLine;

   ------------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- Populated credit and debit amounts -- Need to generate this within IF <condition>
   ------------------------------------------------------------------------------------
   XLA_AE_LINES_PKG.SetDebitCreditAmounts;

   ----------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- Update journal entry status -- Need to generate this within IF <condition>
   ----------------------------------------------------------------------------------
   XLA_AE_JOURNAL_ENTRY_PKG.UpdateJournalEntryStatus
         (p_hdr_idx => g_array_event(p_event_id).array_value_num('header_index')
         ,p_balance_type_code => l_balance_type_code
         );

   -------------------------------------------------------------------------------------------
   -- 4262811 - Generate the Accrual Reversal lines
   -------------------------------------------------------------------------------------------
   BEGIN
      l_acc_rev_flag := XLA_AE_HEADER_PKG.g_rec_header_new.array_accrual_reversal_flag
                              (g_array_event(p_event_id).array_value_num('header_index'));
      IF l_acc_rev_flag IS NULL THEN
         l_acc_rev_flag := 'N';
      END IF;
   EXCEPTION
      WHEN OTHERS THEN
         l_acc_rev_flag := 'N';
   END;
   --
   IF (l_acc_rev_flag = 'Y') THEN

       -- 4645092  ------------------------------------------------------------------------------
       -- To allow MPA report to determine if it should generate report process
       XLA_ACCOUNTING_PKG.g_mpa_accrual_exists := 'Y';
       ------------------------------------------------------------------------------------------

       l_accrual_line_num := XLA_AE_LINES_PKG.g_LineNumber;
       XLA_AE_LINES_PKG.CopyLineInfo(l_accrual_line_num);
   -- added call to set_ccid to execute mapping  for secondary accrual reversal entries bug 7444204
   -- call ADRs
   -- Bug 4922099
   --
   IF ( (l_bflow_method_code <> 'PRIOR_ENTRY') OR
        (NVL(l_actual_upg_option, 'N') = 'O') OR
        (NVL(l_enc_upg_option, 'N') = 'O')
      )
   THEN
   NULL;
   --
   --
   
  l_ccid := AcctDerRule_7(
           p_application_id           => p_application_id
         , p_ae_header_id             => l_ae_header_id 
, p_source_11 => p_source_11
         , x_transaction_coa_id       => l_adr_transaction_coa_id
         , x_accounting_coa_id        => l_adr_accounting_coa_id
         , x_value_type_code          => l_adr_value_type_code
         , p_side                     => 'NA'
   );

   xla_ae_lines_pkg.set_ccid(
    p_code_combination_id          => l_ccid
  , p_value_type_code              => l_adr_value_type_code
  , p_transaction_coa_id           => l_adr_transaction_coa_id
  , p_accounting_coa_id            => l_adr_accounting_coa_id
  , p_adr_code                     => 'AP_INVOICE_DIST'
  , p_adr_type_code                => 'S'
  , p_component_type               => l_component_type
  , p_component_code               => l_component_code
  , p_component_type_code          => l_component_type_code
  , p_component_appl_id            => l_component_appl_id
  , p_amb_context_code             => l_amb_context_code
  , p_side                         => 'NA'
  );


   --
   --
   END IF;

       --
       -- Update the line information that should be overwritten
       --
       XLA_AE_LINES_PKG.set_ae_header_id(p_ae_header_id => p_event_id ,
                                         p_header_num   => 1);
       XLA_AE_LINES_PKG.g_rec_lines.array_header_num(XLA_AE_LINES_PKG.g_LineNumber)  :=1;

       XLA_AE_LINES_PKG.g_rec_lines.array_business_class_code(XLA_AE_LINES_PKG.g_LineNumber) := NULL; -- 4669271

       IF l_bflow_method_code <> 'NONE' THEN  -- 4655713b
          XLA_AE_LINES_PKG.g_rec_lines.array_reversal_code(XLA_AE_LINES_PKG.g_LineNumber) := CONCAT('MPA_',l_bflow_method_code);
       END IF;

      --
      -- Depending on the Reversal Method setup, do a switch side or changes sign for the amounts
      --
      IF (XLA_AE_JOURNAL_ENTRY_PKG.g_cache_ledgers_info.ledger_reversal_option = 'SIDE') THEN
          XLA_AE_LINES_PKG.g_rec_lines.array_natural_side_code(XLA_AE_LINES_PKG.g_LineNumber) :=  l_acc_rev_natural_side_code;
      ELSE
          ---------------------------------------------------------------------------------------------------
          -- 4262811a Switch Sign
          ---------------------------------------------------------------------------------------------------
          XLA_AE_LINES_PKG.g_rec_lines.array_switch_side_flag(XLA_AE_LINES_PKG.g_LineNumber) := 'N';  -- 5052518
          XLA_AE_LINES_PKG.g_rec_lines.array_ledger_amount(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_ledger_amount(XLA_AE_LINES_PKG.g_LineNumber) * -1;
          XLA_AE_LINES_PKG.g_rec_lines.array_entered_amount(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_entered_amount(XLA_AE_LINES_PKG.g_LineNumber) * -1;
          -- 5132302
          XLA_AE_LINES_PKG.g_rec_lines.array_bflow_applied_to_amt(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_bflow_applied_to_amt(XLA_AE_LINES_PKG.g_LineNumber) * -1;

      END IF;

      -- 4955764
      XLA_AE_LINES_PKG.g_rec_lines.array_gl_date(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_HEADER_PKG.g_rec_header_new.array_gl_date(g_array_event(p_event_id).array_value_num('acc_rev_header_index'));


      XLA_AE_LINES_PKG.ValidateCurrentLine;
      XLA_AE_LINES_PKG.SetDebitCreditAmounts;

      XLA_AE_JOURNAL_ENTRY_PKG.UpdateJournalEntryStatus
               (p_hdr_idx           => g_array_event(p_event_id).array_value_num('acc_rev_header_index')
               ,p_balance_type_code => l_balance_type_code);

   END IF;

   -----------------------------------------------------------------------------------------
   -- 4262811 Multiperiod Accounting
   -----------------------------------------------------------------------------------------
     -- No MPA option is assigned.


END IF;
END IF;
--

--
IF (C_LEVEL_PROCEDURE >= g_log_level) THEN
   trace
      (p_msg      => 'END of AcctLineType_26'
      ,p_level    => C_LEVEL_PROCEDURE
      ,p_module   => l_log_module);
END IF;
--
EXCEPTION
  WHEN xla_exceptions_pkg.application_exception THEN
      RAISE;
  WHEN OTHERS THEN
       xla_exceptions_pkg.raise_message
           (p_location => 'XLA_00200_AAD_S_000010_BC_PKG.AcctLineType_26');
END AcctLineType_26;
--

---------------------------------------
--
-- PRIVATE FUNCTION
--         AcctLineType_27
--
---------------------------------------
PROCEDURE AcctLineType_27 (
  p_application_id        IN NUMBER
 ,p_event_id              IN NUMBER
 ,p_calculate_acctd_flag  IN VARCHAR2
 ,p_calculate_g_l_flag    IN VARCHAR2
 ,p_actual_flag           IN OUT VARCHAR2
 ,p_balance_type_code     OUT VARCHAR2
 ,p_gain_or_loss_ref      OUT VARCHAR2
 
--Invoice Distribution Description
 , p_source_1            IN VARCHAR2
--Invoice Distribution Account
 , p_source_11            IN NUMBER
--Invoice Distribution Type
 , p_source_15            IN VARCHAR2
 , p_source_15_meaning    IN VARCHAR2
--Purchasing Encumbrance Option
 , p_source_17            IN VARCHAR2
 , p_source_17_meaning    IN VARCHAR2
--Accounting Reversal Indicator
 , p_source_19            IN VARCHAR2
--Distribution Link Type
 , p_source_21            IN VARCHAR2
--Allocation to Main Distribution Identifier
 , p_source_23            IN NUMBER
--Invoice Identifier
 , p_source_24            IN NUMBER
--Business Flow Accounts Payable Application Identifier
 , p_source_25            IN NUMBER
--Business Flow Invoice Distribution Type
 , p_source_26            IN VARCHAR2
--Business Flow Invoice Entity Code
 , p_source_27            IN VARCHAR2
--Business Flow Invoice Distribution Identifier
 , p_source_28            IN NUMBER
--Business Flow Invoice Identifier
 , p_source_29            IN NUMBER
--Invoice Distribution Identifier
 , p_source_30            IN NUMBER
--Payables Encumbrance Upgrade Credit Account
 , p_source_31            IN NUMBER
--Payables Encumbrance Upgrade Credit Amount
 , p_source_32            IN NUMBER
--Invoice Currency Code
 , p_source_33            IN VARCHAR2
--Payables Encumbrance Upgrade Credit Base Amount
 , p_source_34            IN NUMBER
--Payables Encumbrance Upgrade Debit Account
 , p_source_35            IN NUMBER
--Payables Encumbrance Upgrade Debit Amount
 , p_source_36            IN NUMBER
--Payables Encumbrance Upgrade Debit Base Amount
 , p_source_37            IN NUMBER
--Payables Encumbrance Upgrade Option
 , p_source_38            IN VARCHAR2
--Invoice Exchange Date
 , p_source_39            IN DATE
--Invoice Exchange Rate
 , p_source_40            IN NUMBER
--Invoice Exchange Rate Type
 , p_source_41            IN VARCHAR2
--Deferred Accounting End Date
 , p_source_43            IN DATE
--Deferred Accounting Option
 , p_source_44            IN VARCHAR2
--Deferred Accounting Start Date
 , p_source_45            IN DATE
--Override Accounted Amount Indicator
 , p_source_46            IN VARCHAR2
 , p_source_46_meaning    IN VARCHAR2
--Invoice Supplier Identifier
 , p_source_47            IN NUMBER
--Invoice Supplier Site Identifier
 , p_source_48            IN NUMBER
--Third Party Type
 , p_source_49            IN VARCHAR2
--Parent Reversal Identifier
 , p_source_50            IN NUMBER
--Invoice Distribution Tax Line Identifier
 , p_source_52            IN NUMBER
--Invoice Distribution Tax Distribution Identifier from Tax
 , p_source_53            IN NUMBER
--Invoice Distribution Summary Tax Line Identifier
 , p_source_54            IN NUMBER
--Payables Upgrade Credit Encumbrance Type Identifier
 , p_source_55            IN NUMBER
--Payables Upgrade Debit Encumbrance Type Identifier
 , p_source_56            IN NUMBER
--Invoice Distribution Encumbrance Amount
 , p_source_65            IN NUMBER
--Invoice Distribution Encumbrance Ledger Amount
 , p_source_66            IN NUMBER
)
IS

l_component_type              VARCHAR2(80);
l_component_code              VARCHAR2(30);
l_component_type_code         VARCHAR2(1);
l_component_appl_id           INTEGER;
l_amb_context_code            VARCHAR2(30);
l_entity_code                 VARCHAR2(30);
l_event_class_code            VARCHAR2(30);
l_ae_header_id                NUMBER;
l_event_type_code             VARCHAR2(30);
l_line_definition_code        VARCHAR2(30);
l_line_definition_owner_code  VARCHAR2(1);
--
-- adr variables
l_segment                     VARCHAR2(30);
l_ccid                        NUMBER;
l_adr_transaction_coa_id      NUMBER;
l_adr_accounting_coa_id       NUMBER;
l_adr_flexfield_segment_code  VARCHAR2(30);
l_adr_flex_value_set_id       NUMBER;
l_adr_value_type_code         VARCHAR2(30);
l_adr_value_combination_id    NUMBER;
l_adr_value_segment_code      VARCHAR2(30);

l_bflow_method_code           VARCHAR2(30);  -- 4219869 Business Flow
l_bflow_class_code            VARCHAR2(30);  -- 4219869 Business Flow
l_inherit_desc_flag           VARCHAR2(1);   -- 4219869 Business Flow
l_budgetary_control_flag      VARCHAR2(1);   -- 4458381 Public Sector Enh

-- 4262811 Variables ------------------------------------------------------------------------------------------
l_entered_amt_idx             NUMBER;
l_accted_amt_idx              NUMBER;
l_acc_rev_flag                VARCHAR2(1);
l_accrual_line_num            NUMBER;
l_tmp_amt                     NUMBER;
l_acc_rev_natural_side_code   VARCHAR2(1);

l_num_entries                 NUMBER;
l_gl_dates                    xla_ae_journal_entry_pkg.t_array_date;
l_accted_amts                 xla_ae_journal_entry_pkg.t_array_num;
l_entered_amts                xla_ae_journal_entry_pkg.t_array_num;
l_period_names                xla_ae_journal_entry_pkg.t_array_V15L;
l_recog_line_1                NUMBER;
l_recog_line_2                NUMBER;

l_bflow_applied_to_amt_idx    NUMBER;                                -- 5132302
l_bflow_applied_to_amt        NUMBER;                                -- 5132302
l_bflow_applied_to_amts       xla_ae_journal_entry_pkg.t_array_num;  -- 5132302

l_event_id                    NUMBER;  -- To handle MPA header Description: xla_ae_header_pkg.SetHdrDescription

--l_rounding_ccy                VARCHAR2(15); -- To handle MPA rounding  4262811b
l_same_currency               BOOLEAN;        -- To handle MPA rounding  4262811b

---------------------------------------------------------------------------------------------------------------


--
-- bulk performance
--
l_balance_type_code           VARCHAR2(1);
l_rec_acct_attrs              XLA_AE_LINES_PKG.t_rec_acct_attrs;
l_log_module                  VARCHAR2(240);

--
-- Upgrade strategy
--
l_actual_upg_option           VARCHAR2(1);
l_enc_upg_option           VARCHAR2(1);

--
BEGIN
--
IF g_log_enabled THEN
      l_log_module := C_DEFAULT_MODULE||'.AcctLineType_27';
END IF;
--
IF (C_LEVEL_PROCEDURE >= g_log_level) THEN

      trace
         (p_msg      => 'BEGIN of AcctLineType_27'
         ,p_level    => C_LEVEL_PROCEDURE
         ,p_module   => l_log_module);

END IF;
--
l_component_type             := 'AMB_JLT';
l_component_code             := 'AP_FREIGHT_EXPENSE_DM_ENC_DR';
l_component_type_code        := 'S';
l_component_appl_id          :=  200;
l_amb_context_code           := 'DEFAULT';
l_entity_code                := 'AP_INVOICES';
l_event_class_code           := 'DEBIT MEMOS';
l_event_type_code            := 'DEBIT MEMOS_ALL';
l_line_definition_owner_code := 'S';
l_line_definition_code       := 'ENC_DM_ALL';
--
l_balance_type_code          := 'E';
l_segment                     := NULL;
l_ccid                        := NULL;
l_adr_transaction_coa_id      := NULL;
l_adr_accounting_coa_id       := NULL;
l_adr_flexfield_segment_code  := NULL;
l_adr_flex_value_set_id       := NULL;
l_adr_value_type_code         := NULL;
l_adr_value_combination_id    := NULL;
l_adr_value_segment_code      := NULL;

l_bflow_method_code          := 'NONE';   -- 4219869 Business Flow
l_bflow_class_code           := 'AP_INV_ENCUM';    -- 4219869 Business Flow
l_inherit_desc_flag          := 'N';   -- 4219869 Business Flow
l_budgetary_control_flag     := 'Y';

l_bflow_applied_to_amt_idx   := NULL; -- 5132302
l_bflow_applied_to_amt       := NULL; -- 5132302
l_entered_amt_idx            := NULL;          -- 4262811
l_accted_amt_idx             := NULL;          -- 4262811
l_acc_rev_flag               := NULL;          -- 4262811
l_accrual_line_num           := NULL;          -- 4262811
l_tmp_amt                    := NULL;          -- 4262811
--
 
IF XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id = XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.ledger_id OR
    l_balance_type_code <> 'B' THEN
IF NVL(p_source_15,'
') =  'FREIGHT' AND 
NVL(p_source_17,'
') =  'Y'
 THEN 

   --
   XLA_AE_LINES_PKG.SetNewLine;

   p_balance_type_code          := l_balance_type_code;
   -- set the flag so later we will know whether the gain loss line needs to be created
   
   IF(l_balance_type_code = 'A' and p_actual_flag is null) THEN
     p_actual_flag :='A';
   END IF;

   --
   -- bulk performance
   --
   XLA_AE_LINES_PKG.set_ae_header_id (p_ae_header_id => p_event_id ,
                                      p_header_num   => 0); -- 4262811
   --
   -- set accounting line options
   --
   l_ae_header_id:= xla_ae_lines_pkg.SetAcctLineOption(
           p_natural_side_code          => 'D'
         , p_gain_or_loss_flag          => 'N'
         , p_gl_transfer_mode_code      => 'S'
         , p_acct_entry_type_code       => 'E'
         , p_switch_side_flag           => 'Y'
         , p_merge_duplicate_code       => 'N'
         );
   --
   l_acc_rev_natural_side_code := 'C';  -- 4262811
   -- 
   --
   -- set accounting line type info
   --
   xla_ae_lines_pkg.SetAcctLineType
      (p_component_type             => l_component_type
      ,p_event_type_code            => l_event_type_code
      ,p_line_definition_owner_code => l_line_definition_owner_code
      ,p_line_definition_code       => l_line_definition_code
      ,p_accounting_line_code       => l_component_code
      ,p_accounting_line_type_code  => l_component_type_code
      ,p_accounting_line_appl_id    => l_component_appl_id
      ,p_amb_context_code           => l_amb_context_code
      ,p_entity_code                => l_entity_code
      ,p_event_class_code           => l_event_class_code);
   --
   -- set accounting class
   --
   xla_ae_lines_pkg.SetAcctClass(
           p_accounting_class_code  => 'FREIGHT'
         , p_ae_header_id           => l_ae_header_id
         );

   --
   -- set rounding class
   --
   XLA_AE_LINES_PKG.g_rec_lines.array_rounding_class(XLA_AE_LINES_PKG.g_LineNumber) :=
                      'FREIGHT';

   --
   xla_ae_lines_pkg.g_rec_lines.array_calculate_acctd_flag(xla_ae_lines_pkg.g_LineNumber) := p_calculate_acctd_flag;
   xla_ae_lines_pkg.g_rec_lines.array_calculate_g_l_flag(xla_ae_lines_pkg.g_LineNumber) := p_calculate_g_l_flag;
   --
   -- bulk performance
   --
   XLA_AE_LINES_PKG.g_rec_lines.array_balance_type_code(XLA_AE_LINES_PKG.g_LineNumber) := l_balance_type_code;

   XLA_AE_LINES_PKG.g_rec_lines.array_ledger_id(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id;

   -- 4955764
   XLA_AE_LINES_PKG.g_rec_lines.array_gl_date(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_HEADER_PKG.g_rec_header_new.array_gl_date(g_array_event(p_event_id).array_value_num('header_index'));

   -- 4458381 Public Sector Enh
      XLA_AE_LINES_PKG.g_rec_lines.array_encumbrance_type_id(XLA_AE_LINES_PKG.g_LineNumber) := 1060;
   --
   -- set accounting attributes for the line type
   --
   l_entered_amt_idx := 23;
   l_accted_amt_idx  := 28;
   l_bflow_applied_to_amt_idx  := NULL;  -- 5132302
   l_rec_acct_attrs.array_acct_attr_code(1) := 'ACCOUNTING_REVERSAL_OPTION';
   l_rec_acct_attrs.array_char_value(1)  := p_source_19;
   l_rec_acct_attrs.array_acct_attr_code(2) := 'ALLOC_TO_APPLICATION_ID';
   l_rec_acct_attrs.array_num_value(2)  := 
xla_ae_sources_pkg.GetSystemSourceNum(
   p_source_code           => 'XLA_EVENT_APPL_ID'
 , p_source_type_code      => 'Y'
 , p_source_application_id =>  602
);
   l_rec_acct_attrs.array_acct_attr_code(3) := 'ALLOC_TO_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(3)  := p_source_21;
   l_rec_acct_attrs.array_acct_attr_code(4) := 'ALLOC_TO_ENTITY_CODE';
   l_rec_acct_attrs.array_char_value(4)  := 
xla_ae_sources_pkg.GetSystemSourceChar(
   p_source_code           => 'XLA_ENTITY_CODE'
 , p_source_type_code      => 'Y'
 , p_source_application_id =>  602
);
   l_rec_acct_attrs.array_acct_attr_code(5) := 'ALLOC_TO_FIRST_DIST_ID';
   l_rec_acct_attrs.array_num_value(5)  :=  to_char(p_source_23);
   l_rec_acct_attrs.array_acct_attr_code(6) := 'ALLOC_TO_FIRST_SYS_TRAN_ID';
   l_rec_acct_attrs.array_num_value(6)  :=  to_char(p_source_24);
   l_rec_acct_attrs.array_acct_attr_code(7) := 'APPLIED_TO_APPLICATION_ID';
   l_rec_acct_attrs.array_num_value(7)  := p_source_25;
   l_rec_acct_attrs.array_acct_attr_code(8) := 'APPLIED_TO_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(8)  := p_source_26;
   l_rec_acct_attrs.array_acct_attr_code(9) := 'APPLIED_TO_ENTITY_CODE';
   l_rec_acct_attrs.array_char_value(9)  := p_source_27;
   l_rec_acct_attrs.array_acct_attr_code(10) := 'APPLIED_TO_FIRST_DIST_ID';
   l_rec_acct_attrs.array_num_value(10)  :=  to_char(p_source_28);
   l_rec_acct_attrs.array_acct_attr_code(11) := 'APPLIED_TO_FIRST_SYS_TRAN_ID';
   l_rec_acct_attrs.array_num_value(11)  :=  to_char(p_source_29);
   l_rec_acct_attrs.array_acct_attr_code(12) := 'DISTRIBUTION_IDENTIFIER_1';
   l_rec_acct_attrs.array_num_value(12)  :=  to_char(p_source_30);
   l_rec_acct_attrs.array_acct_attr_code(13) := 'DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(13)  := p_source_21;
   l_rec_acct_attrs.array_acct_attr_code(14) := 'ENC_UPG_CR_CCID';
   l_rec_acct_attrs.array_num_value(14)  := p_source_31;
   l_rec_acct_attrs.array_acct_attr_code(15) := 'ENC_UPG_CR_ENTERED_AMT';
   l_rec_acct_attrs.array_num_value(15)  := p_source_32;
   l_rec_acct_attrs.array_acct_attr_code(16) := 'ENC_UPG_CR_ENTERED_CURR';
   l_rec_acct_attrs.array_char_value(16)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(17) := 'ENC_UPG_CR_LEDGER_AMT';
   l_rec_acct_attrs.array_num_value(17)  := p_source_34;
   l_rec_acct_attrs.array_acct_attr_code(18) := 'ENC_UPG_DR_CCID';
   l_rec_acct_attrs.array_num_value(18)  := p_source_35;
   l_rec_acct_attrs.array_acct_attr_code(19) := 'ENC_UPG_DR_ENTERED_AMT';
   l_rec_acct_attrs.array_num_value(19)  := p_source_36;
   l_rec_acct_attrs.array_acct_attr_code(20) := 'ENC_UPG_DR_ENTERED_CURR';
   l_rec_acct_attrs.array_char_value(20)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(21) := 'ENC_UPG_DR_LEDGER_AMT';
   l_rec_acct_attrs.array_num_value(21)  := p_source_37;
   l_rec_acct_attrs.array_acct_attr_code(22) := 'ENC_UPG_OPTION';
   l_rec_acct_attrs.array_char_value(22)  := p_source_38;
   l_rec_acct_attrs.array_acct_attr_code(23) := 'ENTERED_CURRENCY_AMOUNT';
   l_rec_acct_attrs.array_num_value(23)  := p_source_65;
   l_rec_acct_attrs.array_acct_attr_code(24) := 'ENTERED_CURRENCY_CODE';
   l_rec_acct_attrs.array_char_value(24)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(25) := 'EXCHANGE_DATE';
   l_rec_acct_attrs.array_date_value(25)  := p_source_39;
   l_rec_acct_attrs.array_acct_attr_code(26) := 'EXCHANGE_RATE';
   l_rec_acct_attrs.array_num_value(26)  := p_source_40;
   l_rec_acct_attrs.array_acct_attr_code(27) := 'EXCHANGE_RATE_TYPE';
   l_rec_acct_attrs.array_char_value(27)  := p_source_41;
   l_rec_acct_attrs.array_acct_attr_code(28) := 'LEDGER_AMOUNT';
   l_rec_acct_attrs.array_num_value(28)  := p_source_66;
   l_rec_acct_attrs.array_acct_attr_code(29) := 'MULTIPERIOD_END_DATE';
   l_rec_acct_attrs.array_date_value(29)  := p_source_43;
   l_rec_acct_attrs.array_acct_attr_code(30) := 'MULTIPERIOD_OPTION';
   l_rec_acct_attrs.array_char_value(30)  := p_source_44;
   l_rec_acct_attrs.array_acct_attr_code(31) := 'MULTIPERIOD_START_DATE';
   l_rec_acct_attrs.array_date_value(31)  := p_source_45;
   l_rec_acct_attrs.array_acct_attr_code(32) := 'OVERRIDE_ACCTD_AMT_FLAG';
   l_rec_acct_attrs.array_char_value(32)  := p_source_46;
   l_rec_acct_attrs.array_acct_attr_code(33) := 'PARTY_ID';
   l_rec_acct_attrs.array_num_value(33)  := p_source_47;
   l_rec_acct_attrs.array_acct_attr_code(34) := 'PARTY_SITE_ID';
   l_rec_acct_attrs.array_num_value(34)  := p_source_48;
   l_rec_acct_attrs.array_acct_attr_code(35) := 'PARTY_TYPE';
   l_rec_acct_attrs.array_char_value(35)  := p_source_49;
   l_rec_acct_attrs.array_acct_attr_code(36) := 'REVERSED_DISTRIBUTION_ID1';
   l_rec_acct_attrs.array_num_value(36)  :=  to_char(p_source_50);
   l_rec_acct_attrs.array_acct_attr_code(37) := 'REVERSED_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(37)  := p_source_21;
   l_rec_acct_attrs.array_acct_attr_code(38) := 'TAX_LINE_REF_ID';
   l_rec_acct_attrs.array_num_value(38)  := p_source_52;
   l_rec_acct_attrs.array_acct_attr_code(39) := 'TAX_REC_NREC_DIST_REF_ID';
   l_rec_acct_attrs.array_num_value(39)  := p_source_53;
   l_rec_acct_attrs.array_acct_attr_code(40) := 'TAX_SUMMARY_LINE_REF_ID';
   l_rec_acct_attrs.array_num_value(40)  := p_source_54;
   l_rec_acct_attrs.array_acct_attr_code(41) := 'UPG_CR_ENC_TYPE_ID';
   l_rec_acct_attrs.array_num_value(41)  := p_source_55;
   l_rec_acct_attrs.array_acct_attr_code(42) := 'UPG_DR_ENC_TYPE_ID';
   l_rec_acct_attrs.array_num_value(42)  := p_source_56;

   XLA_AE_LINES_PKG.SetLineAcctAttrs(l_rec_acct_attrs);
   p_gain_or_loss_ref  := XLA_AE_LINES_PKG.g_rec_lines.array_gain_or_loss_ref(XLA_AE_LINES_PKG.g_LineNumber);

   ---------------------------------------------------------------------------------------------------------------
   -- 4336173 -- assign Business Flow Class (replace code in xla_ae_lines_pkg.Business_Flow_Validation)
   ---------------------------------------------------------------------------------------------------------------
   XLA_AE_LINES_PKG.g_rec_lines.array_business_class_code(XLA_AE_LINES_PKG.g_LineNumber) := l_bflow_class_code;

   l_actual_upg_option  := XLA_AE_LINES_PKG.g_rec_lines.array_actual_upg_option(XLA_AE_LINES_PKG.g_LineNumber);
   l_enc_upg_option     := XLA_AE_LINES_PKG.g_rec_lines.array_enc_upg_option(XLA_AE_LINES_PKG.g_LineNumber);

   IF xla_accounting_cache_pkg.GetValueChar
         (p_source_code         => 'LEDGER_CATEGORY_CODE'
         ,p_target_ledger_id    => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id) IN ('PRIMARY','ALC')
   AND l_bflow_method_code = 'PRIOR_ENTRY'
--   AND (l_actual_upg_option = 'Y' OR l_enc_upg_option = 'Y') Bug 4922099
   AND ( (NVL(l_actual_upg_option, 'N') IN ('Y', 'O')) OR
         (NVL(l_enc_upg_option, 'N') IN ('Y', 'O'))
       )
   THEN
         xla_ae_lines_pkg.BflowUpgEntry
           (p_business_method_code    => l_bflow_method_code
           ,p_business_class_code     => l_bflow_class_code
           ,p_balance_type            => l_balance_type_code);
   ELSE
      NULL;
-- No business flow processing for business flow method of NONE.
   END IF;

   --
   -- call analytical criteria
   --
   
   --
   -- call description
   --
   
xla_ae_lines_pkg.SetLineDescription(
   p_ae_header_id => l_ae_header_id
  ,p_description  => Description_2 (
     p_application_id         => p_application_id
   , p_ae_header_id           => l_ae_header_id 
, p_source_1 => p_source_1
   )
);


   --
   -- call ADRs
   -- Bug 4922099
   --
   IF ( (l_bflow_method_code <> 'PRIOR_ENTRY') OR
        (NVL(l_actual_upg_option, 'N') = 'O') OR
        (NVL(l_enc_upg_option, 'N') = 'O')
      )
   THEN
   NULL;
   --
   --
   
  l_ccid := AcctDerRule_7(
           p_application_id           => p_application_id
         , p_ae_header_id             => l_ae_header_id 
, p_source_11 => p_source_11
         , x_transaction_coa_id       => l_adr_transaction_coa_id
         , x_accounting_coa_id        => l_adr_accounting_coa_id
         , x_value_type_code          => l_adr_value_type_code
         , p_side                     => 'NA'
   );

   xla_ae_lines_pkg.set_ccid(
    p_code_combination_id          => l_ccid
  , p_value_type_code              => l_adr_value_type_code
  , p_transaction_coa_id           => l_adr_transaction_coa_id
  , p_accounting_coa_id            => l_adr_accounting_coa_id
  , p_adr_code                     => 'AP_INVOICE_DIST'
  , p_adr_type_code                => 'S'
  , p_component_type               => l_component_type
  , p_component_code               => l_component_code
  , p_component_type_code          => l_component_type_code
  , p_component_appl_id            => l_component_appl_id
  , p_amb_context_code             => l_amb_context_code
  , p_side                         => 'NA'
  );


   --
   --
   END IF;
   --
   -- Bug 4922099
   IF ( ( (NVL(l_actual_upg_option, 'N') = 'O') OR
          (NVL(l_enc_upg_option, 'N') = 'O')
        ) AND
        (l_bflow_method_code = 'PRIOR_ENTRY')
      )
   THEN
      IF
      --
      1 = 2
      --
      THEN
      xla_accounting_err_pkg.build_message
                                    (p_appli_s_name            => 'XLA'
                                    ,p_msg_name                => 'XLA_UPG_OVERRIDE_ADR_UNDEFINED'
                                    ,p_token_1                 => 'LINE_NUMBER'
                                    ,p_value_1                 => XLA_AE_LINES_PKG.g_LineNumber
                                    ,p_token_2                 => 'LINE_TYPE_NAME'
                                    ,p_value_2                 => XLA_AE_SOURCES_PKG.GetComponentName (
                                                                             l_component_type
                                                                            ,l_component_code
                                                                            ,l_component_type_code
                                                                            ,l_component_appl_id
                                                                            ,l_amb_context_code
                                                                            ,l_entity_code
                                                                            ,l_event_class_code
                                                                           )
                                    ,p_token_3                 => 'OWNER'
                                    ,p_value_3                 => xla_lookups_pkg.get_meaning(
                                                                          p_lookup_type     => 'XLA_OWNER_TYPE'
                                                                          ,p_lookup_code    => l_component_type_code
                                                                         )
                                    ,p_token_4                 => 'PRODUCT_NAME'
                                    ,p_value_4                 => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.application_name
                                    ,p_entity_id               => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.entity_id
                                    ,p_event_id                => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.event_id
                                    ,p_ledger_id               => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id
                                    ,p_ae_header_id            =>  NULL
                                       );

        IF (C_LEVEL_ERROR>= g_log_level) THEN
                 trace
                      (p_msg      => 'ERROR: XLA_UPG_OVERRIDE_ADR_UNDEFINED'
                      ,p_level    => C_LEVEL_ERROR
                      ,p_module   => l_log_module);
        END IF;
      END IF;
   END IF;
   --
   --
   ------------------------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- NOTE: XLA_AE_LINES_PKG.ValidateCurrentLine should NOT be generated if business flow method is
   -- Prior Entry.  Currently, the following code is always generated.
   ------------------------------------------------------------------------------------------------
   XLA_AE_LINES_PKG.ValidateCurrentLine;

   ------------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- Populated credit and debit amounts -- Need to generate this within IF <condition>
   ------------------------------------------------------------------------------------
   XLA_AE_LINES_PKG.SetDebitCreditAmounts;

   ----------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- Update journal entry status -- Need to generate this within IF <condition>
   ----------------------------------------------------------------------------------
   XLA_AE_JOURNAL_ENTRY_PKG.UpdateJournalEntryStatus
         (p_hdr_idx => g_array_event(p_event_id).array_value_num('header_index')
         ,p_balance_type_code => l_balance_type_code
         );

   -------------------------------------------------------------------------------------------
   -- 4262811 - Generate the Accrual Reversal lines
   -------------------------------------------------------------------------------------------
   BEGIN
      l_acc_rev_flag := XLA_AE_HEADER_PKG.g_rec_header_new.array_accrual_reversal_flag
                              (g_array_event(p_event_id).array_value_num('header_index'));
      IF l_acc_rev_flag IS NULL THEN
         l_acc_rev_flag := 'N';
      END IF;
   EXCEPTION
      WHEN OTHERS THEN
         l_acc_rev_flag := 'N';
   END;
   --
   IF (l_acc_rev_flag = 'Y') THEN

       -- 4645092  ------------------------------------------------------------------------------
       -- To allow MPA report to determine if it should generate report process
       XLA_ACCOUNTING_PKG.g_mpa_accrual_exists := 'Y';
       ------------------------------------------------------------------------------------------

       l_accrual_line_num := XLA_AE_LINES_PKG.g_LineNumber;
       XLA_AE_LINES_PKG.CopyLineInfo(l_accrual_line_num);
   -- added call to set_ccid to execute mapping  for secondary accrual reversal entries bug 7444204
   -- call ADRs
   -- Bug 4922099
   --
   IF ( (l_bflow_method_code <> 'PRIOR_ENTRY') OR
        (NVL(l_actual_upg_option, 'N') = 'O') OR
        (NVL(l_enc_upg_option, 'N') = 'O')
      )
   THEN
   NULL;
   --
   --
   
  l_ccid := AcctDerRule_7(
           p_application_id           => p_application_id
         , p_ae_header_id             => l_ae_header_id 
, p_source_11 => p_source_11
         , x_transaction_coa_id       => l_adr_transaction_coa_id
         , x_accounting_coa_id        => l_adr_accounting_coa_id
         , x_value_type_code          => l_adr_value_type_code
         , p_side                     => 'NA'
   );

   xla_ae_lines_pkg.set_ccid(
    p_code_combination_id          => l_ccid
  , p_value_type_code              => l_adr_value_type_code
  , p_transaction_coa_id           => l_adr_transaction_coa_id
  , p_accounting_coa_id            => l_adr_accounting_coa_id
  , p_adr_code                     => 'AP_INVOICE_DIST'
  , p_adr_type_code                => 'S'
  , p_component_type               => l_component_type
  , p_component_code               => l_component_code
  , p_component_type_code          => l_component_type_code
  , p_component_appl_id            => l_component_appl_id
  , p_amb_context_code             => l_amb_context_code
  , p_side                         => 'NA'
  );


   --
   --
   END IF;

       --
       -- Update the line information that should be overwritten
       --
       XLA_AE_LINES_PKG.set_ae_header_id(p_ae_header_id => p_event_id ,
                                         p_header_num   => 1);
       XLA_AE_LINES_PKG.g_rec_lines.array_header_num(XLA_AE_LINES_PKG.g_LineNumber)  :=1;

       XLA_AE_LINES_PKG.g_rec_lines.array_business_class_code(XLA_AE_LINES_PKG.g_LineNumber) := NULL; -- 4669271

       IF l_bflow_method_code <> 'NONE' THEN  -- 4655713b
          XLA_AE_LINES_PKG.g_rec_lines.array_reversal_code(XLA_AE_LINES_PKG.g_LineNumber) := CONCAT('MPA_',l_bflow_method_code);
       END IF;

      --
      -- Depending on the Reversal Method setup, do a switch side or changes sign for the amounts
      --
      IF (XLA_AE_JOURNAL_ENTRY_PKG.g_cache_ledgers_info.ledger_reversal_option = 'SIDE') THEN
          XLA_AE_LINES_PKG.g_rec_lines.array_natural_side_code(XLA_AE_LINES_PKG.g_LineNumber) :=  l_acc_rev_natural_side_code;
      ELSE
          ---------------------------------------------------------------------------------------------------
          -- 4262811a Switch Sign
          ---------------------------------------------------------------------------------------------------
          XLA_AE_LINES_PKG.g_rec_lines.array_switch_side_flag(XLA_AE_LINES_PKG.g_LineNumber) := 'N';  -- 5052518
          XLA_AE_LINES_PKG.g_rec_lines.array_ledger_amount(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_ledger_amount(XLA_AE_LINES_PKG.g_LineNumber) * -1;
          XLA_AE_LINES_PKG.g_rec_lines.array_entered_amount(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_entered_amount(XLA_AE_LINES_PKG.g_LineNumber) * -1;
          -- 5132302
          XLA_AE_LINES_PKG.g_rec_lines.array_bflow_applied_to_amt(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_bflow_applied_to_amt(XLA_AE_LINES_PKG.g_LineNumber) * -1;

      END IF;

      -- 4955764
      XLA_AE_LINES_PKG.g_rec_lines.array_gl_date(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_HEADER_PKG.g_rec_header_new.array_gl_date(g_array_event(p_event_id).array_value_num('acc_rev_header_index'));


      XLA_AE_LINES_PKG.ValidateCurrentLine;
      XLA_AE_LINES_PKG.SetDebitCreditAmounts;

      XLA_AE_JOURNAL_ENTRY_PKG.UpdateJournalEntryStatus
               (p_hdr_idx           => g_array_event(p_event_id).array_value_num('acc_rev_header_index')
               ,p_balance_type_code => l_balance_type_code);

   END IF;

   -----------------------------------------------------------------------------------------
   -- 4262811 Multiperiod Accounting
   -----------------------------------------------------------------------------------------
     -- No MPA option is assigned.


END IF;
END IF;
--

--
IF (C_LEVEL_PROCEDURE >= g_log_level) THEN
   trace
      (p_msg      => 'END of AcctLineType_27'
      ,p_level    => C_LEVEL_PROCEDURE
      ,p_module   => l_log_module);
END IF;
--
EXCEPTION
  WHEN xla_exceptions_pkg.application_exception THEN
      RAISE;
  WHEN OTHERS THEN
       xla_exceptions_pkg.raise_message
           (p_location => 'XLA_00200_AAD_S_000010_BC_PKG.AcctLineType_27');
END AcctLineType_27;
--

---------------------------------------
--
-- PRIVATE FUNCTION
--         AcctLineType_28
--
---------------------------------------
PROCEDURE AcctLineType_28 (
  p_application_id        IN NUMBER
 ,p_event_id              IN NUMBER
 ,p_calculate_acctd_flag  IN VARCHAR2
 ,p_calculate_g_l_flag    IN VARCHAR2
 ,p_actual_flag           IN OUT VARCHAR2
 ,p_balance_type_code     OUT VARCHAR2
 ,p_gain_or_loss_ref      OUT VARCHAR2
 
--Invoice Distribution Description
 , p_source_1            IN VARCHAR2
--Invoice Distribution Account
 , p_source_11            IN NUMBER
--Invoice Distribution Type
 , p_source_15            IN VARCHAR2
 , p_source_15_meaning    IN VARCHAR2
--Purchasing Encumbrance Option
 , p_source_17            IN VARCHAR2
 , p_source_17_meaning    IN VARCHAR2
--Accounting Reversal Indicator
 , p_source_19            IN VARCHAR2
--Distribution Link Type
 , p_source_21            IN VARCHAR2
--Allocation to Main Distribution Identifier
 , p_source_23            IN NUMBER
--Invoice Identifier
 , p_source_24            IN NUMBER
--Business Flow Accounts Payable Application Identifier
 , p_source_25            IN NUMBER
--Business Flow Invoice Distribution Type
 , p_source_26            IN VARCHAR2
--Business Flow Invoice Entity Code
 , p_source_27            IN VARCHAR2
--Business Flow Invoice Distribution Identifier
 , p_source_28            IN NUMBER
--Business Flow Invoice Identifier
 , p_source_29            IN NUMBER
--Invoice Distribution Identifier
 , p_source_30            IN NUMBER
--Payables Encumbrance Upgrade Credit Account
 , p_source_31            IN NUMBER
--Payables Encumbrance Upgrade Credit Amount
 , p_source_32            IN NUMBER
--Invoice Currency Code
 , p_source_33            IN VARCHAR2
--Payables Encumbrance Upgrade Credit Base Amount
 , p_source_34            IN NUMBER
--Payables Encumbrance Upgrade Debit Account
 , p_source_35            IN NUMBER
--Payables Encumbrance Upgrade Debit Amount
 , p_source_36            IN NUMBER
--Payables Encumbrance Upgrade Debit Base Amount
 , p_source_37            IN NUMBER
--Payables Encumbrance Upgrade Option
 , p_source_38            IN VARCHAR2
--Invoice Exchange Date
 , p_source_39            IN DATE
--Invoice Exchange Rate
 , p_source_40            IN NUMBER
--Invoice Exchange Rate Type
 , p_source_41            IN VARCHAR2
--Deferred Accounting End Date
 , p_source_43            IN DATE
--Deferred Accounting Option
 , p_source_44            IN VARCHAR2
--Deferred Accounting Start Date
 , p_source_45            IN DATE
--Override Accounted Amount Indicator
 , p_source_46            IN VARCHAR2
 , p_source_46_meaning    IN VARCHAR2
--Invoice Supplier Identifier
 , p_source_47            IN NUMBER
--Invoice Supplier Site Identifier
 , p_source_48            IN NUMBER
--Third Party Type
 , p_source_49            IN VARCHAR2
--Parent Reversal Identifier
 , p_source_50            IN NUMBER
--Invoice Distribution Statistical Amount
 , p_source_51            IN NUMBER
--Invoice Distribution Tax Line Identifier
 , p_source_52            IN NUMBER
--Invoice Distribution Tax Distribution Identifier from Tax
 , p_source_53            IN NUMBER
--Invoice Distribution Summary Tax Line Identifier
 , p_source_54            IN NUMBER
--Payables Upgrade Credit Encumbrance Type Identifier
 , p_source_55            IN NUMBER
--Payables Upgrade Debit Encumbrance Type Identifier
 , p_source_56            IN NUMBER
--Invoice Distribution Amount
 , p_source_57            IN NUMBER
--Invoice Distribution Encumbrance Amount
 , p_source_65            IN NUMBER
--Invoice Distribution Encumbrance Ledger Amount
 , p_source_66            IN NUMBER
)
IS

l_component_type              VARCHAR2(80);
l_component_code              VARCHAR2(30);
l_component_type_code         VARCHAR2(1);
l_component_appl_id           INTEGER;
l_amb_context_code            VARCHAR2(30);
l_entity_code                 VARCHAR2(30);
l_event_class_code            VARCHAR2(30);
l_ae_header_id                NUMBER;
l_event_type_code             VARCHAR2(30);
l_line_definition_code        VARCHAR2(30);
l_line_definition_owner_code  VARCHAR2(1);
--
-- adr variables
l_segment                     VARCHAR2(30);
l_ccid                        NUMBER;
l_adr_transaction_coa_id      NUMBER;
l_adr_accounting_coa_id       NUMBER;
l_adr_flexfield_segment_code  VARCHAR2(30);
l_adr_flex_value_set_id       NUMBER;
l_adr_value_type_code         VARCHAR2(30);
l_adr_value_combination_id    NUMBER;
l_adr_value_segment_code      VARCHAR2(30);

l_bflow_method_code           VARCHAR2(30);  -- 4219869 Business Flow
l_bflow_class_code            VARCHAR2(30);  -- 4219869 Business Flow
l_inherit_desc_flag           VARCHAR2(1);   -- 4219869 Business Flow
l_budgetary_control_flag      VARCHAR2(1);   -- 4458381 Public Sector Enh

-- 4262811 Variables ------------------------------------------------------------------------------------------
l_entered_amt_idx             NUMBER;
l_accted_amt_idx              NUMBER;
l_acc_rev_flag                VARCHAR2(1);
l_accrual_line_num            NUMBER;
l_tmp_amt                     NUMBER;
l_acc_rev_natural_side_code   VARCHAR2(1);

l_num_entries                 NUMBER;
l_gl_dates                    xla_ae_journal_entry_pkg.t_array_date;
l_accted_amts                 xla_ae_journal_entry_pkg.t_array_num;
l_entered_amts                xla_ae_journal_entry_pkg.t_array_num;
l_period_names                xla_ae_journal_entry_pkg.t_array_V15L;
l_recog_line_1                NUMBER;
l_recog_line_2                NUMBER;

l_bflow_applied_to_amt_idx    NUMBER;                                -- 5132302
l_bflow_applied_to_amt        NUMBER;                                -- 5132302
l_bflow_applied_to_amts       xla_ae_journal_entry_pkg.t_array_num;  -- 5132302

l_event_id                    NUMBER;  -- To handle MPA header Description: xla_ae_header_pkg.SetHdrDescription

--l_rounding_ccy                VARCHAR2(15); -- To handle MPA rounding  4262811b
l_same_currency               BOOLEAN;        -- To handle MPA rounding  4262811b

---------------------------------------------------------------------------------------------------------------


--
-- bulk performance
--
l_balance_type_code           VARCHAR2(1);
l_rec_acct_attrs              XLA_AE_LINES_PKG.t_rec_acct_attrs;
l_log_module                  VARCHAR2(240);

--
-- Upgrade strategy
--
l_actual_upg_option           VARCHAR2(1);
l_enc_upg_option           VARCHAR2(1);

--
BEGIN
--
IF g_log_enabled THEN
      l_log_module := C_DEFAULT_MODULE||'.AcctLineType_28';
END IF;
--
IF (C_LEVEL_PROCEDURE >= g_log_level) THEN

      trace
         (p_msg      => 'BEGIN of AcctLineType_28'
         ,p_level    => C_LEVEL_PROCEDURE
         ,p_module   => l_log_module);

END IF;
--
l_component_type             := 'AMB_JLT';
l_component_code             := 'AP_FREIGHT_EXPENSE_INV_ENC_DR';
l_component_type_code        := 'S';
l_component_appl_id          :=  200;
l_amb_context_code           := 'DEFAULT';
l_entity_code                := 'AP_INVOICES';
l_event_class_code           := 'INVOICES';
l_event_type_code            := 'INVOICES_ALL';
l_line_definition_owner_code := 'S';
l_line_definition_code       := 'ENC_INVOICES_ALL';
--
l_balance_type_code          := 'E';
l_segment                     := NULL;
l_ccid                        := NULL;
l_adr_transaction_coa_id      := NULL;
l_adr_accounting_coa_id       := NULL;
l_adr_flexfield_segment_code  := NULL;
l_adr_flex_value_set_id       := NULL;
l_adr_value_type_code         := NULL;
l_adr_value_combination_id    := NULL;
l_adr_value_segment_code      := NULL;

l_bflow_method_code          := 'NONE';   -- 4219869 Business Flow
l_bflow_class_code           := 'AP_INV_ENCUM';    -- 4219869 Business Flow
l_inherit_desc_flag          := 'N';   -- 4219869 Business Flow
l_budgetary_control_flag     := 'Y';

l_bflow_applied_to_amt_idx   := NULL; -- 5132302
l_bflow_applied_to_amt       := NULL; -- 5132302
l_entered_amt_idx            := NULL;          -- 4262811
l_accted_amt_idx             := NULL;          -- 4262811
l_acc_rev_flag               := NULL;          -- 4262811
l_accrual_line_num           := NULL;          -- 4262811
l_tmp_amt                    := NULL;          -- 4262811
--
 
IF XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id = XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.ledger_id OR
    l_balance_type_code <> 'B' THEN
IF NVL(p_source_15,'
') =  'FREIGHT' AND 
NVL(p_source_17,'
') =  'Y'
 THEN 

   --
   XLA_AE_LINES_PKG.SetNewLine;

   p_balance_type_code          := l_balance_type_code;
   -- set the flag so later we will know whether the gain loss line needs to be created
   
   IF(l_balance_type_code = 'A' and p_actual_flag is null) THEN
     p_actual_flag :='A';
   END IF;

   --
   -- bulk performance
   --
   XLA_AE_LINES_PKG.set_ae_header_id (p_ae_header_id => p_event_id ,
                                      p_header_num   => 0); -- 4262811
   --
   -- set accounting line options
   --
   l_ae_header_id:= xla_ae_lines_pkg.SetAcctLineOption(
           p_natural_side_code          => 'D'
         , p_gain_or_loss_flag          => 'N'
         , p_gl_transfer_mode_code      => 'S'
         , p_acct_entry_type_code       => 'E'
         , p_switch_side_flag           => 'Y'
         , p_merge_duplicate_code       => 'N'
         );
   --
   l_acc_rev_natural_side_code := 'C';  -- 4262811
   -- 
   --
   -- set accounting line type info
   --
   xla_ae_lines_pkg.SetAcctLineType
      (p_component_type             => l_component_type
      ,p_event_type_code            => l_event_type_code
      ,p_line_definition_owner_code => l_line_definition_owner_code
      ,p_line_definition_code       => l_line_definition_code
      ,p_accounting_line_code       => l_component_code
      ,p_accounting_line_type_code  => l_component_type_code
      ,p_accounting_line_appl_id    => l_component_appl_id
      ,p_amb_context_code           => l_amb_context_code
      ,p_entity_code                => l_entity_code
      ,p_event_class_code           => l_event_class_code);
   --
   -- set accounting class
   --
   xla_ae_lines_pkg.SetAcctClass(
           p_accounting_class_code  => 'FREIGHT'
         , p_ae_header_id           => l_ae_header_id
         );

   --
   -- set rounding class
   --
   XLA_AE_LINES_PKG.g_rec_lines.array_rounding_class(XLA_AE_LINES_PKG.g_LineNumber) :=
                      'FREIGHT';

   --
   xla_ae_lines_pkg.g_rec_lines.array_calculate_acctd_flag(xla_ae_lines_pkg.g_LineNumber) := p_calculate_acctd_flag;
   xla_ae_lines_pkg.g_rec_lines.array_calculate_g_l_flag(xla_ae_lines_pkg.g_LineNumber) := p_calculate_g_l_flag;
   --
   -- bulk performance
   --
   XLA_AE_LINES_PKG.g_rec_lines.array_balance_type_code(XLA_AE_LINES_PKG.g_LineNumber) := l_balance_type_code;

   XLA_AE_LINES_PKG.g_rec_lines.array_ledger_id(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id;

   -- 4955764
   XLA_AE_LINES_PKG.g_rec_lines.array_gl_date(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_HEADER_PKG.g_rec_header_new.array_gl_date(g_array_event(p_event_id).array_value_num('header_index'));

   -- 4458381 Public Sector Enh
      XLA_AE_LINES_PKG.g_rec_lines.array_encumbrance_type_id(XLA_AE_LINES_PKG.g_LineNumber) := 1060;
   --
   -- set accounting attributes for the line type
   --
   l_entered_amt_idx := 24;
   l_accted_amt_idx  := 29;
   l_bflow_applied_to_amt_idx  := 7;  -- 5132302
   l_rec_acct_attrs.array_acct_attr_code(1) := 'ACCOUNTING_REVERSAL_OPTION';
   l_rec_acct_attrs.array_char_value(1)  := p_source_19;
   l_rec_acct_attrs.array_acct_attr_code(2) := 'ALLOC_TO_APPLICATION_ID';
   l_rec_acct_attrs.array_num_value(2)  := 
xla_ae_sources_pkg.GetSystemSourceNum(
   p_source_code           => 'XLA_EVENT_APPL_ID'
 , p_source_type_code      => 'Y'
 , p_source_application_id =>  602
);
   l_rec_acct_attrs.array_acct_attr_code(3) := 'ALLOC_TO_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(3)  := p_source_21;
   l_rec_acct_attrs.array_acct_attr_code(4) := 'ALLOC_TO_ENTITY_CODE';
   l_rec_acct_attrs.array_char_value(4)  := 
xla_ae_sources_pkg.GetSystemSourceChar(
   p_source_code           => 'XLA_ENTITY_CODE'
 , p_source_type_code      => 'Y'
 , p_source_application_id =>  602
);
   l_rec_acct_attrs.array_acct_attr_code(5) := 'ALLOC_TO_FIRST_DIST_ID';
   l_rec_acct_attrs.array_num_value(5)  :=  to_char(p_source_23);
   l_rec_acct_attrs.array_acct_attr_code(6) := 'ALLOC_TO_FIRST_SYS_TRAN_ID';
   l_rec_acct_attrs.array_num_value(6)  :=  to_char(p_source_24);
   l_rec_acct_attrs.array_acct_attr_code(7) := 'APPLIED_TO_AMOUNT';
   l_rec_acct_attrs.array_num_value(7)  := p_source_57;
   l_rec_acct_attrs.array_acct_attr_code(8) := 'APPLIED_TO_APPLICATION_ID';
   l_rec_acct_attrs.array_num_value(8)  := p_source_25;
   l_rec_acct_attrs.array_acct_attr_code(9) := 'APPLIED_TO_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(9)  := p_source_26;
   l_rec_acct_attrs.array_acct_attr_code(10) := 'APPLIED_TO_ENTITY_CODE';
   l_rec_acct_attrs.array_char_value(10)  := p_source_27;
   l_rec_acct_attrs.array_acct_attr_code(11) := 'APPLIED_TO_FIRST_DIST_ID';
   l_rec_acct_attrs.array_num_value(11)  :=  to_char(p_source_28);
   l_rec_acct_attrs.array_acct_attr_code(12) := 'APPLIED_TO_FIRST_SYS_TRAN_ID';
   l_rec_acct_attrs.array_num_value(12)  :=  to_char(p_source_29);
   l_rec_acct_attrs.array_acct_attr_code(13) := 'DISTRIBUTION_IDENTIFIER_1';
   l_rec_acct_attrs.array_num_value(13)  :=  to_char(p_source_30);
   l_rec_acct_attrs.array_acct_attr_code(14) := 'DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(14)  := p_source_21;
   l_rec_acct_attrs.array_acct_attr_code(15) := 'ENC_UPG_CR_CCID';
   l_rec_acct_attrs.array_num_value(15)  := p_source_31;
   l_rec_acct_attrs.array_acct_attr_code(16) := 'ENC_UPG_CR_ENTERED_AMT';
   l_rec_acct_attrs.array_num_value(16)  := p_source_32;
   l_rec_acct_attrs.array_acct_attr_code(17) := 'ENC_UPG_CR_ENTERED_CURR';
   l_rec_acct_attrs.array_char_value(17)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(18) := 'ENC_UPG_CR_LEDGER_AMT';
   l_rec_acct_attrs.array_num_value(18)  := p_source_34;
   l_rec_acct_attrs.array_acct_attr_code(19) := 'ENC_UPG_DR_CCID';
   l_rec_acct_attrs.array_num_value(19)  := p_source_35;
   l_rec_acct_attrs.array_acct_attr_code(20) := 'ENC_UPG_DR_ENTERED_AMT';
   l_rec_acct_attrs.array_num_value(20)  := p_source_36;
   l_rec_acct_attrs.array_acct_attr_code(21) := 'ENC_UPG_DR_ENTERED_CURR';
   l_rec_acct_attrs.array_char_value(21)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(22) := 'ENC_UPG_DR_LEDGER_AMT';
   l_rec_acct_attrs.array_num_value(22)  := p_source_37;
   l_rec_acct_attrs.array_acct_attr_code(23) := 'ENC_UPG_OPTION';
   l_rec_acct_attrs.array_char_value(23)  := p_source_38;
   l_rec_acct_attrs.array_acct_attr_code(24) := 'ENTERED_CURRENCY_AMOUNT';
   l_rec_acct_attrs.array_num_value(24)  := p_source_65;
   l_rec_acct_attrs.array_acct_attr_code(25) := 'ENTERED_CURRENCY_CODE';
   l_rec_acct_attrs.array_char_value(25)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(26) := 'EXCHANGE_DATE';
   l_rec_acct_attrs.array_date_value(26)  := p_source_39;
   l_rec_acct_attrs.array_acct_attr_code(27) := 'EXCHANGE_RATE';
   l_rec_acct_attrs.array_num_value(27)  := p_source_40;
   l_rec_acct_attrs.array_acct_attr_code(28) := 'EXCHANGE_RATE_TYPE';
   l_rec_acct_attrs.array_char_value(28)  := p_source_41;
   l_rec_acct_attrs.array_acct_attr_code(29) := 'LEDGER_AMOUNT';
   l_rec_acct_attrs.array_num_value(29)  := p_source_66;
   l_rec_acct_attrs.array_acct_attr_code(30) := 'MULTIPERIOD_END_DATE';
   l_rec_acct_attrs.array_date_value(30)  := p_source_43;
   l_rec_acct_attrs.array_acct_attr_code(31) := 'MULTIPERIOD_OPTION';
   l_rec_acct_attrs.array_char_value(31)  := p_source_44;
   l_rec_acct_attrs.array_acct_attr_code(32) := 'MULTIPERIOD_START_DATE';
   l_rec_acct_attrs.array_date_value(32)  := p_source_45;
   l_rec_acct_attrs.array_acct_attr_code(33) := 'OVERRIDE_ACCTD_AMT_FLAG';
   l_rec_acct_attrs.array_char_value(33)  := p_source_46;
   l_rec_acct_attrs.array_acct_attr_code(34) := 'PARTY_ID';
   l_rec_acct_attrs.array_num_value(34)  := p_source_47;
   l_rec_acct_attrs.array_acct_attr_code(35) := 'PARTY_SITE_ID';
   l_rec_acct_attrs.array_num_value(35)  := p_source_48;
   l_rec_acct_attrs.array_acct_attr_code(36) := 'PARTY_TYPE';
   l_rec_acct_attrs.array_char_value(36)  := p_source_49;
   l_rec_acct_attrs.array_acct_attr_code(37) := 'REVERSED_DISTRIBUTION_ID1';
   l_rec_acct_attrs.array_num_value(37)  :=  to_char(p_source_50);
   l_rec_acct_attrs.array_acct_attr_code(38) := 'REVERSED_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(38)  := p_source_21;
   l_rec_acct_attrs.array_acct_attr_code(39) := 'STATISTICAL_AMOUNT';
   l_rec_acct_attrs.array_num_value(39)  := p_source_51;
   l_rec_acct_attrs.array_acct_attr_code(40) := 'TAX_LINE_REF_ID';
   l_rec_acct_attrs.array_num_value(40)  := p_source_52;
   l_rec_acct_attrs.array_acct_attr_code(41) := 'TAX_REC_NREC_DIST_REF_ID';
   l_rec_acct_attrs.array_num_value(41)  := p_source_53;
   l_rec_acct_attrs.array_acct_attr_code(42) := 'TAX_SUMMARY_LINE_REF_ID';
   l_rec_acct_attrs.array_num_value(42)  := p_source_54;
   l_rec_acct_attrs.array_acct_attr_code(43) := 'UPG_CR_ENC_TYPE_ID';
   l_rec_acct_attrs.array_num_value(43)  := p_source_55;
   l_rec_acct_attrs.array_acct_attr_code(44) := 'UPG_DR_ENC_TYPE_ID';
   l_rec_acct_attrs.array_num_value(44)  := p_source_56;

   XLA_AE_LINES_PKG.SetLineAcctAttrs(l_rec_acct_attrs);
   p_gain_or_loss_ref  := XLA_AE_LINES_PKG.g_rec_lines.array_gain_or_loss_ref(XLA_AE_LINES_PKG.g_LineNumber);

   ---------------------------------------------------------------------------------------------------------------
   -- 4336173 -- assign Business Flow Class (replace code in xla_ae_lines_pkg.Business_Flow_Validation)
   ---------------------------------------------------------------------------------------------------------------
   XLA_AE_LINES_PKG.g_rec_lines.array_business_class_code(XLA_AE_LINES_PKG.g_LineNumber) := l_bflow_class_code;

   l_actual_upg_option  := XLA_AE_LINES_PKG.g_rec_lines.array_actual_upg_option(XLA_AE_LINES_PKG.g_LineNumber);
   l_enc_upg_option     := XLA_AE_LINES_PKG.g_rec_lines.array_enc_upg_option(XLA_AE_LINES_PKG.g_LineNumber);

   IF xla_accounting_cache_pkg.GetValueChar
         (p_source_code         => 'LEDGER_CATEGORY_CODE'
         ,p_target_ledger_id    => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id) IN ('PRIMARY','ALC')
   AND l_bflow_method_code = 'PRIOR_ENTRY'
--   AND (l_actual_upg_option = 'Y' OR l_enc_upg_option = 'Y') Bug 4922099
   AND ( (NVL(l_actual_upg_option, 'N') IN ('Y', 'O')) OR
         (NVL(l_enc_upg_option, 'N') IN ('Y', 'O'))
       )
   THEN
         xla_ae_lines_pkg.BflowUpgEntry
           (p_business_method_code    => l_bflow_method_code
           ,p_business_class_code     => l_bflow_class_code
           ,p_balance_type            => l_balance_type_code);
   ELSE
      NULL;
-- No business flow processing for business flow method of NONE.
   END IF;

   --
   -- call analytical criteria
   --
   
   --
   -- call description
   --
   
xla_ae_lines_pkg.SetLineDescription(
   p_ae_header_id => l_ae_header_id
  ,p_description  => Description_2 (
     p_application_id         => p_application_id
   , p_ae_header_id           => l_ae_header_id 
, p_source_1 => p_source_1
   )
);


   --
   -- call ADRs
   -- Bug 4922099
   --
   IF ( (l_bflow_method_code <> 'PRIOR_ENTRY') OR
        (NVL(l_actual_upg_option, 'N') = 'O') OR
        (NVL(l_enc_upg_option, 'N') = 'O')
      )
   THEN
   NULL;
   --
   --
   
  l_ccid := AcctDerRule_7(
           p_application_id           => p_application_id
         , p_ae_header_id             => l_ae_header_id 
, p_source_11 => p_source_11
         , x_transaction_coa_id       => l_adr_transaction_coa_id
         , x_accounting_coa_id        => l_adr_accounting_coa_id
         , x_value_type_code          => l_adr_value_type_code
         , p_side                     => 'NA'
   );

   xla_ae_lines_pkg.set_ccid(
    p_code_combination_id          => l_ccid
  , p_value_type_code              => l_adr_value_type_code
  , p_transaction_coa_id           => l_adr_transaction_coa_id
  , p_accounting_coa_id            => l_adr_accounting_coa_id
  , p_adr_code                     => 'AP_INVOICE_DIST'
  , p_adr_type_code                => 'S'
  , p_component_type               => l_component_type
  , p_component_code               => l_component_code
  , p_component_type_code          => l_component_type_code
  , p_component_appl_id            => l_component_appl_id
  , p_amb_context_code             => l_amb_context_code
  , p_side                         => 'NA'
  );


   --
   --
   END IF;
   --
   -- Bug 4922099
   IF ( ( (NVL(l_actual_upg_option, 'N') = 'O') OR
          (NVL(l_enc_upg_option, 'N') = 'O')
        ) AND
        (l_bflow_method_code = 'PRIOR_ENTRY')
      )
   THEN
      IF
      --
      1 = 2
      --
      THEN
      xla_accounting_err_pkg.build_message
                                    (p_appli_s_name            => 'XLA'
                                    ,p_msg_name                => 'XLA_UPG_OVERRIDE_ADR_UNDEFINED'
                                    ,p_token_1                 => 'LINE_NUMBER'
                                    ,p_value_1                 => XLA_AE_LINES_PKG.g_LineNumber
                                    ,p_token_2                 => 'LINE_TYPE_NAME'
                                    ,p_value_2                 => XLA_AE_SOURCES_PKG.GetComponentName (
                                                                             l_component_type
                                                                            ,l_component_code
                                                                            ,l_component_type_code
                                                                            ,l_component_appl_id
                                                                            ,l_amb_context_code
                                                                            ,l_entity_code
                                                                            ,l_event_class_code
                                                                           )
                                    ,p_token_3                 => 'OWNER'
                                    ,p_value_3                 => xla_lookups_pkg.get_meaning(
                                                                          p_lookup_type     => 'XLA_OWNER_TYPE'
                                                                          ,p_lookup_code    => l_component_type_code
                                                                         )
                                    ,p_token_4                 => 'PRODUCT_NAME'
                                    ,p_value_4                 => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.application_name
                                    ,p_entity_id               => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.entity_id
                                    ,p_event_id                => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.event_id
                                    ,p_ledger_id               => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id
                                    ,p_ae_header_id            =>  NULL
                                       );

        IF (C_LEVEL_ERROR>= g_log_level) THEN
                 trace
                      (p_msg      => 'ERROR: XLA_UPG_OVERRIDE_ADR_UNDEFINED'
                      ,p_level    => C_LEVEL_ERROR
                      ,p_module   => l_log_module);
        END IF;
      END IF;
   END IF;
   --
   --
   ------------------------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- NOTE: XLA_AE_LINES_PKG.ValidateCurrentLine should NOT be generated if business flow method is
   -- Prior Entry.  Currently, the following code is always generated.
   ------------------------------------------------------------------------------------------------
   XLA_AE_LINES_PKG.ValidateCurrentLine;

   ------------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- Populated credit and debit amounts -- Need to generate this within IF <condition>
   ------------------------------------------------------------------------------------
   XLA_AE_LINES_PKG.SetDebitCreditAmounts;

   ----------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- Update journal entry status -- Need to generate this within IF <condition>
   ----------------------------------------------------------------------------------
   XLA_AE_JOURNAL_ENTRY_PKG.UpdateJournalEntryStatus
         (p_hdr_idx => g_array_event(p_event_id).array_value_num('header_index')
         ,p_balance_type_code => l_balance_type_code
         );

   -------------------------------------------------------------------------------------------
   -- 4262811 - Generate the Accrual Reversal lines
   -------------------------------------------------------------------------------------------
   BEGIN
      l_acc_rev_flag := XLA_AE_HEADER_PKG.g_rec_header_new.array_accrual_reversal_flag
                              (g_array_event(p_event_id).array_value_num('header_index'));
      IF l_acc_rev_flag IS NULL THEN
         l_acc_rev_flag := 'N';
      END IF;
   EXCEPTION
      WHEN OTHERS THEN
         l_acc_rev_flag := 'N';
   END;
   --
   IF (l_acc_rev_flag = 'Y') THEN

       -- 4645092  ------------------------------------------------------------------------------
       -- To allow MPA report to determine if it should generate report process
       XLA_ACCOUNTING_PKG.g_mpa_accrual_exists := 'Y';
       ------------------------------------------------------------------------------------------

       l_accrual_line_num := XLA_AE_LINES_PKG.g_LineNumber;
       XLA_AE_LINES_PKG.CopyLineInfo(l_accrual_line_num);
   -- added call to set_ccid to execute mapping  for secondary accrual reversal entries bug 7444204
   -- call ADRs
   -- Bug 4922099
   --
   IF ( (l_bflow_method_code <> 'PRIOR_ENTRY') OR
        (NVL(l_actual_upg_option, 'N') = 'O') OR
        (NVL(l_enc_upg_option, 'N') = 'O')
      )
   THEN
   NULL;
   --
   --
   
  l_ccid := AcctDerRule_7(
           p_application_id           => p_application_id
         , p_ae_header_id             => l_ae_header_id 
, p_source_11 => p_source_11
         , x_transaction_coa_id       => l_adr_transaction_coa_id
         , x_accounting_coa_id        => l_adr_accounting_coa_id
         , x_value_type_code          => l_adr_value_type_code
         , p_side                     => 'NA'
   );

   xla_ae_lines_pkg.set_ccid(
    p_code_combination_id          => l_ccid
  , p_value_type_code              => l_adr_value_type_code
  , p_transaction_coa_id           => l_adr_transaction_coa_id
  , p_accounting_coa_id            => l_adr_accounting_coa_id
  , p_adr_code                     => 'AP_INVOICE_DIST'
  , p_adr_type_code                => 'S'
  , p_component_type               => l_component_type
  , p_component_code               => l_component_code
  , p_component_type_code          => l_component_type_code
  , p_component_appl_id            => l_component_appl_id
  , p_amb_context_code             => l_amb_context_code
  , p_side                         => 'NA'
  );


   --
   --
   END IF;

       --
       -- Update the line information that should be overwritten
       --
       XLA_AE_LINES_PKG.set_ae_header_id(p_ae_header_id => p_event_id ,
                                         p_header_num   => 1);
       XLA_AE_LINES_PKG.g_rec_lines.array_header_num(XLA_AE_LINES_PKG.g_LineNumber)  :=1;

       XLA_AE_LINES_PKG.g_rec_lines.array_business_class_code(XLA_AE_LINES_PKG.g_LineNumber) := NULL; -- 4669271

       IF l_bflow_method_code <> 'NONE' THEN  -- 4655713b
          XLA_AE_LINES_PKG.g_rec_lines.array_reversal_code(XLA_AE_LINES_PKG.g_LineNumber) := CONCAT('MPA_',l_bflow_method_code);
       END IF;

      --
      -- Depending on the Reversal Method setup, do a switch side or changes sign for the amounts
      --
      IF (XLA_AE_JOURNAL_ENTRY_PKG.g_cache_ledgers_info.ledger_reversal_option = 'SIDE') THEN
          XLA_AE_LINES_PKG.g_rec_lines.array_natural_side_code(XLA_AE_LINES_PKG.g_LineNumber) :=  l_acc_rev_natural_side_code;
      ELSE
          ---------------------------------------------------------------------------------------------------
          -- 4262811a Switch Sign
          ---------------------------------------------------------------------------------------------------
          XLA_AE_LINES_PKG.g_rec_lines.array_switch_side_flag(XLA_AE_LINES_PKG.g_LineNumber) := 'N';  -- 5052518
          XLA_AE_LINES_PKG.g_rec_lines.array_ledger_amount(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_ledger_amount(XLA_AE_LINES_PKG.g_LineNumber) * -1;
          XLA_AE_LINES_PKG.g_rec_lines.array_entered_amount(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_entered_amount(XLA_AE_LINES_PKG.g_LineNumber) * -1;
          -- 5132302
          XLA_AE_LINES_PKG.g_rec_lines.array_bflow_applied_to_amt(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_bflow_applied_to_amt(XLA_AE_LINES_PKG.g_LineNumber) * -1;

      END IF;

      -- 4955764
      XLA_AE_LINES_PKG.g_rec_lines.array_gl_date(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_HEADER_PKG.g_rec_header_new.array_gl_date(g_array_event(p_event_id).array_value_num('acc_rev_header_index'));


      XLA_AE_LINES_PKG.ValidateCurrentLine;
      XLA_AE_LINES_PKG.SetDebitCreditAmounts;

      XLA_AE_JOURNAL_ENTRY_PKG.UpdateJournalEntryStatus
               (p_hdr_idx           => g_array_event(p_event_id).array_value_num('acc_rev_header_index')
               ,p_balance_type_code => l_balance_type_code);

   END IF;

   -----------------------------------------------------------------------------------------
   -- 4262811 Multiperiod Accounting
   -----------------------------------------------------------------------------------------
     -- No MPA option is assigned.


END IF;
END IF;
--

--
IF (C_LEVEL_PROCEDURE >= g_log_level) THEN
   trace
      (p_msg      => 'END of AcctLineType_28'
      ,p_level    => C_LEVEL_PROCEDURE
      ,p_module   => l_log_module);
END IF;
--
EXCEPTION
  WHEN xla_exceptions_pkg.application_exception THEN
      RAISE;
  WHEN OTHERS THEN
       xla_exceptions_pkg.raise_message
           (p_location => 'XLA_00200_AAD_S_000010_BC_PKG.AcctLineType_28');
END AcctLineType_28;
--

---------------------------------------
--
-- PRIVATE FUNCTION
--         AcctLineType_29
--
---------------------------------------
PROCEDURE AcctLineType_29 (
  p_application_id        IN NUMBER
 ,p_event_id              IN NUMBER
 ,p_calculate_acctd_flag  IN VARCHAR2
 ,p_calculate_g_l_flag    IN VARCHAR2
 ,p_actual_flag           IN OUT VARCHAR2
 ,p_balance_type_code     OUT VARCHAR2
 ,p_gain_or_loss_ref      OUT VARCHAR2
 
--Invoice Distribution Description
 , p_source_1            IN VARCHAR2
--Invoice Distribution Account
 , p_source_11            IN NUMBER
--Invoice Distribution Type
 , p_source_15            IN VARCHAR2
 , p_source_15_meaning    IN VARCHAR2
--Purchasing Encumbrance Option
 , p_source_17            IN VARCHAR2
 , p_source_17_meaning    IN VARCHAR2
--Accounting Reversal Indicator
 , p_source_19            IN VARCHAR2
--Distribution Link Type
 , p_source_21            IN VARCHAR2
--Allocation to Main Distribution Identifier
 , p_source_23            IN NUMBER
--Invoice Identifier
 , p_source_24            IN NUMBER
--Business Flow Accounts Payable Application Identifier
 , p_source_25            IN NUMBER
--Business Flow Invoice Distribution Type
 , p_source_26            IN VARCHAR2
--Business Flow Invoice Entity Code
 , p_source_27            IN VARCHAR2
--Business Flow Invoice Distribution Identifier
 , p_source_28            IN NUMBER
--Business Flow Invoice Identifier
 , p_source_29            IN NUMBER
--Invoice Distribution Identifier
 , p_source_30            IN NUMBER
--Payables Encumbrance Upgrade Credit Account
 , p_source_31            IN NUMBER
--Payables Encumbrance Upgrade Credit Amount
 , p_source_32            IN NUMBER
--Invoice Currency Code
 , p_source_33            IN VARCHAR2
--Payables Encumbrance Upgrade Credit Base Amount
 , p_source_34            IN NUMBER
--Payables Encumbrance Upgrade Debit Account
 , p_source_35            IN NUMBER
--Payables Encumbrance Upgrade Debit Amount
 , p_source_36            IN NUMBER
--Payables Encumbrance Upgrade Debit Base Amount
 , p_source_37            IN NUMBER
--Payables Encumbrance Upgrade Option
 , p_source_38            IN VARCHAR2
--Invoice Exchange Date
 , p_source_39            IN DATE
--Invoice Exchange Rate
 , p_source_40            IN NUMBER
--Invoice Exchange Rate Type
 , p_source_41            IN VARCHAR2
--Deferred Accounting End Date
 , p_source_43            IN DATE
--Deferred Accounting Option
 , p_source_44            IN VARCHAR2
--Deferred Accounting Start Date
 , p_source_45            IN DATE
--Override Accounted Amount Indicator
 , p_source_46            IN VARCHAR2
 , p_source_46_meaning    IN VARCHAR2
--Invoice Supplier Identifier
 , p_source_47            IN NUMBER
--Invoice Supplier Site Identifier
 , p_source_48            IN NUMBER
--Third Party Type
 , p_source_49            IN VARCHAR2
--Parent Reversal Identifier
 , p_source_50            IN NUMBER
--Invoice Distribution Statistical Amount
 , p_source_51            IN NUMBER
--Invoice Distribution Tax Line Identifier
 , p_source_52            IN NUMBER
--Invoice Distribution Tax Distribution Identifier from Tax
 , p_source_53            IN NUMBER
--Invoice Distribution Summary Tax Line Identifier
 , p_source_54            IN NUMBER
--Payables Upgrade Credit Encumbrance Type Identifier
 , p_source_55            IN NUMBER
--Payables Upgrade Debit Encumbrance Type Identifier
 , p_source_56            IN NUMBER
--Invoice Distribution Encumbrance Amount
 , p_source_65            IN NUMBER
--Invoice Distribution Encumbrance Ledger Amount
 , p_source_66            IN NUMBER
)
IS

l_component_type              VARCHAR2(80);
l_component_code              VARCHAR2(30);
l_component_type_code         VARCHAR2(1);
l_component_appl_id           INTEGER;
l_amb_context_code            VARCHAR2(30);
l_entity_code                 VARCHAR2(30);
l_event_class_code            VARCHAR2(30);
l_ae_header_id                NUMBER;
l_event_type_code             VARCHAR2(30);
l_line_definition_code        VARCHAR2(30);
l_line_definition_owner_code  VARCHAR2(1);
--
-- adr variables
l_segment                     VARCHAR2(30);
l_ccid                        NUMBER;
l_adr_transaction_coa_id      NUMBER;
l_adr_accounting_coa_id       NUMBER;
l_adr_flexfield_segment_code  VARCHAR2(30);
l_adr_flex_value_set_id       NUMBER;
l_adr_value_type_code         VARCHAR2(30);
l_adr_value_combination_id    NUMBER;
l_adr_value_segment_code      VARCHAR2(30);

l_bflow_method_code           VARCHAR2(30);  -- 4219869 Business Flow
l_bflow_class_code            VARCHAR2(30);  -- 4219869 Business Flow
l_inherit_desc_flag           VARCHAR2(1);   -- 4219869 Business Flow
l_budgetary_control_flag      VARCHAR2(1);   -- 4458381 Public Sector Enh

-- 4262811 Variables ------------------------------------------------------------------------------------------
l_entered_amt_idx             NUMBER;
l_accted_amt_idx              NUMBER;
l_acc_rev_flag                VARCHAR2(1);
l_accrual_line_num            NUMBER;
l_tmp_amt                     NUMBER;
l_acc_rev_natural_side_code   VARCHAR2(1);

l_num_entries                 NUMBER;
l_gl_dates                    xla_ae_journal_entry_pkg.t_array_date;
l_accted_amts                 xla_ae_journal_entry_pkg.t_array_num;
l_entered_amts                xla_ae_journal_entry_pkg.t_array_num;
l_period_names                xla_ae_journal_entry_pkg.t_array_V15L;
l_recog_line_1                NUMBER;
l_recog_line_2                NUMBER;

l_bflow_applied_to_amt_idx    NUMBER;                                -- 5132302
l_bflow_applied_to_amt        NUMBER;                                -- 5132302
l_bflow_applied_to_amts       xla_ae_journal_entry_pkg.t_array_num;  -- 5132302

l_event_id                    NUMBER;  -- To handle MPA header Description: xla_ae_header_pkg.SetHdrDescription

--l_rounding_ccy                VARCHAR2(15); -- To handle MPA rounding  4262811b
l_same_currency               BOOLEAN;        -- To handle MPA rounding  4262811b

---------------------------------------------------------------------------------------------------------------


--
-- bulk performance
--
l_balance_type_code           VARCHAR2(1);
l_rec_acct_attrs              XLA_AE_LINES_PKG.t_rec_acct_attrs;
l_log_module                  VARCHAR2(240);

--
-- Upgrade strategy
--
l_actual_upg_option           VARCHAR2(1);
l_enc_upg_option           VARCHAR2(1);

--
BEGIN
--
IF g_log_enabled THEN
      l_log_module := C_DEFAULT_MODULE||'.AcctLineType_29';
END IF;
--
IF (C_LEVEL_PROCEDURE >= g_log_level) THEN

      trace
         (p_msg      => 'BEGIN of AcctLineType_29'
         ,p_level    => C_LEVEL_PROCEDURE
         ,p_module   => l_log_module);

END IF;
--
l_component_type             := 'AMB_JLT';
l_component_code             := 'AP_FREIGHT_EXPENSE_PP_ENC_DR';
l_component_type_code        := 'S';
l_component_appl_id          :=  200;
l_amb_context_code           := 'DEFAULT';
l_entity_code                := 'AP_INVOICES';
l_event_class_code           := 'PREPAYMENTS';
l_event_type_code            := 'PREPAYMENTS_ALL';
l_line_definition_owner_code := 'S';
l_line_definition_code       := 'ENC_PREPAY_ALL';
--
l_balance_type_code          := 'E';
l_segment                     := NULL;
l_ccid                        := NULL;
l_adr_transaction_coa_id      := NULL;
l_adr_accounting_coa_id       := NULL;
l_adr_flexfield_segment_code  := NULL;
l_adr_flex_value_set_id       := NULL;
l_adr_value_type_code         := NULL;
l_adr_value_combination_id    := NULL;
l_adr_value_segment_code      := NULL;

l_bflow_method_code          := 'NONE';   -- 4219869 Business Flow
l_bflow_class_code           := 'AP_INV_ENCUM';    -- 4219869 Business Flow
l_inherit_desc_flag          := 'N';   -- 4219869 Business Flow
l_budgetary_control_flag     := 'Y';

l_bflow_applied_to_amt_idx   := NULL; -- 5132302
l_bflow_applied_to_amt       := NULL; -- 5132302
l_entered_amt_idx            := NULL;          -- 4262811
l_accted_amt_idx             := NULL;          -- 4262811
l_acc_rev_flag               := NULL;          -- 4262811
l_accrual_line_num           := NULL;          -- 4262811
l_tmp_amt                    := NULL;          -- 4262811
--
 
IF XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id = XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.ledger_id OR
    l_balance_type_code <> 'B' THEN
IF NVL(p_source_15,'
') =  'FREIGHT' AND 
NVL(p_source_17,'
') =  'Y'
 THEN 

   --
   XLA_AE_LINES_PKG.SetNewLine;

   p_balance_type_code          := l_balance_type_code;
   -- set the flag so later we will know whether the gain loss line needs to be created
   
   IF(l_balance_type_code = 'A' and p_actual_flag is null) THEN
     p_actual_flag :='A';
   END IF;

   --
   -- bulk performance
   --
   XLA_AE_LINES_PKG.set_ae_header_id (p_ae_header_id => p_event_id ,
                                      p_header_num   => 0); -- 4262811
   --
   -- set accounting line options
   --
   l_ae_header_id:= xla_ae_lines_pkg.SetAcctLineOption(
           p_natural_side_code          => 'D'
         , p_gain_or_loss_flag          => 'N'
         , p_gl_transfer_mode_code      => 'S'
         , p_acct_entry_type_code       => 'E'
         , p_switch_side_flag           => 'Y'
         , p_merge_duplicate_code       => 'N'
         );
   --
   l_acc_rev_natural_side_code := 'C';  -- 4262811
   -- 
   --
   -- set accounting line type info
   --
   xla_ae_lines_pkg.SetAcctLineType
      (p_component_type             => l_component_type
      ,p_event_type_code            => l_event_type_code
      ,p_line_definition_owner_code => l_line_definition_owner_code
      ,p_line_definition_code       => l_line_definition_code
      ,p_accounting_line_code       => l_component_code
      ,p_accounting_line_type_code  => l_component_type_code
      ,p_accounting_line_appl_id    => l_component_appl_id
      ,p_amb_context_code           => l_amb_context_code
      ,p_entity_code                => l_entity_code
      ,p_event_class_code           => l_event_class_code);
   --
   -- set accounting class
   --
   xla_ae_lines_pkg.SetAcctClass(
           p_accounting_class_code  => 'FREIGHT'
         , p_ae_header_id           => l_ae_header_id
         );

   --
   -- set rounding class
   --
   XLA_AE_LINES_PKG.g_rec_lines.array_rounding_class(XLA_AE_LINES_PKG.g_LineNumber) :=
                      'FREIGHT';

   --
   xla_ae_lines_pkg.g_rec_lines.array_calculate_acctd_flag(xla_ae_lines_pkg.g_LineNumber) := p_calculate_acctd_flag;
   xla_ae_lines_pkg.g_rec_lines.array_calculate_g_l_flag(xla_ae_lines_pkg.g_LineNumber) := p_calculate_g_l_flag;
   --
   -- bulk performance
   --
   XLA_AE_LINES_PKG.g_rec_lines.array_balance_type_code(XLA_AE_LINES_PKG.g_LineNumber) := l_balance_type_code;

   XLA_AE_LINES_PKG.g_rec_lines.array_ledger_id(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id;

   -- 4955764
   XLA_AE_LINES_PKG.g_rec_lines.array_gl_date(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_HEADER_PKG.g_rec_header_new.array_gl_date(g_array_event(p_event_id).array_value_num('header_index'));

   -- 4458381 Public Sector Enh
      XLA_AE_LINES_PKG.g_rec_lines.array_encumbrance_type_id(XLA_AE_LINES_PKG.g_LineNumber) := 1060;
   --
   -- set accounting attributes for the line type
   --
   l_entered_amt_idx := 23;
   l_accted_amt_idx  := 28;
   l_bflow_applied_to_amt_idx  := NULL;  -- 5132302
   l_rec_acct_attrs.array_acct_attr_code(1) := 'ACCOUNTING_REVERSAL_OPTION';
   l_rec_acct_attrs.array_char_value(1)  := p_source_19;
   l_rec_acct_attrs.array_acct_attr_code(2) := 'ALLOC_TO_APPLICATION_ID';
   l_rec_acct_attrs.array_num_value(2)  := 
xla_ae_sources_pkg.GetSystemSourceNum(
   p_source_code           => 'XLA_EVENT_APPL_ID'
 , p_source_type_code      => 'Y'
 , p_source_application_id =>  602
);
   l_rec_acct_attrs.array_acct_attr_code(3) := 'ALLOC_TO_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(3)  := p_source_21;
   l_rec_acct_attrs.array_acct_attr_code(4) := 'ALLOC_TO_ENTITY_CODE';
   l_rec_acct_attrs.array_char_value(4)  := 
xla_ae_sources_pkg.GetSystemSourceChar(
   p_source_code           => 'XLA_ENTITY_CODE'
 , p_source_type_code      => 'Y'
 , p_source_application_id =>  602
);
   l_rec_acct_attrs.array_acct_attr_code(5) := 'ALLOC_TO_FIRST_DIST_ID';
   l_rec_acct_attrs.array_num_value(5)  :=  to_char(p_source_23);
   l_rec_acct_attrs.array_acct_attr_code(6) := 'ALLOC_TO_FIRST_SYS_TRAN_ID';
   l_rec_acct_attrs.array_num_value(6)  :=  to_char(p_source_24);
   l_rec_acct_attrs.array_acct_attr_code(7) := 'APPLIED_TO_APPLICATION_ID';
   l_rec_acct_attrs.array_num_value(7)  := p_source_25;
   l_rec_acct_attrs.array_acct_attr_code(8) := 'APPLIED_TO_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(8)  := p_source_26;
   l_rec_acct_attrs.array_acct_attr_code(9) := 'APPLIED_TO_ENTITY_CODE';
   l_rec_acct_attrs.array_char_value(9)  := p_source_27;
   l_rec_acct_attrs.array_acct_attr_code(10) := 'APPLIED_TO_FIRST_DIST_ID';
   l_rec_acct_attrs.array_num_value(10)  :=  to_char(p_source_28);
   l_rec_acct_attrs.array_acct_attr_code(11) := 'APPLIED_TO_FIRST_SYS_TRAN_ID';
   l_rec_acct_attrs.array_num_value(11)  :=  to_char(p_source_29);
   l_rec_acct_attrs.array_acct_attr_code(12) := 'DISTRIBUTION_IDENTIFIER_1';
   l_rec_acct_attrs.array_num_value(12)  :=  to_char(p_source_30);
   l_rec_acct_attrs.array_acct_attr_code(13) := 'DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(13)  := p_source_21;
   l_rec_acct_attrs.array_acct_attr_code(14) := 'ENC_UPG_CR_CCID';
   l_rec_acct_attrs.array_num_value(14)  := p_source_31;
   l_rec_acct_attrs.array_acct_attr_code(15) := 'ENC_UPG_CR_ENTERED_AMT';
   l_rec_acct_attrs.array_num_value(15)  := p_source_32;
   l_rec_acct_attrs.array_acct_attr_code(16) := 'ENC_UPG_CR_ENTERED_CURR';
   l_rec_acct_attrs.array_char_value(16)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(17) := 'ENC_UPG_CR_LEDGER_AMT';
   l_rec_acct_attrs.array_num_value(17)  := p_source_34;
   l_rec_acct_attrs.array_acct_attr_code(18) := 'ENC_UPG_DR_CCID';
   l_rec_acct_attrs.array_num_value(18)  := p_source_35;
   l_rec_acct_attrs.array_acct_attr_code(19) := 'ENC_UPG_DR_ENTERED_AMT';
   l_rec_acct_attrs.array_num_value(19)  := p_source_36;
   l_rec_acct_attrs.array_acct_attr_code(20) := 'ENC_UPG_DR_ENTERED_CURR';
   l_rec_acct_attrs.array_char_value(20)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(21) := 'ENC_UPG_DR_LEDGER_AMT';
   l_rec_acct_attrs.array_num_value(21)  := p_source_37;
   l_rec_acct_attrs.array_acct_attr_code(22) := 'ENC_UPG_OPTION';
   l_rec_acct_attrs.array_char_value(22)  := p_source_38;
   l_rec_acct_attrs.array_acct_attr_code(23) := 'ENTERED_CURRENCY_AMOUNT';
   l_rec_acct_attrs.array_num_value(23)  := p_source_65;
   l_rec_acct_attrs.array_acct_attr_code(24) := 'ENTERED_CURRENCY_CODE';
   l_rec_acct_attrs.array_char_value(24)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(25) := 'EXCHANGE_DATE';
   l_rec_acct_attrs.array_date_value(25)  := p_source_39;
   l_rec_acct_attrs.array_acct_attr_code(26) := 'EXCHANGE_RATE';
   l_rec_acct_attrs.array_num_value(26)  := p_source_40;
   l_rec_acct_attrs.array_acct_attr_code(27) := 'EXCHANGE_RATE_TYPE';
   l_rec_acct_attrs.array_char_value(27)  := p_source_41;
   l_rec_acct_attrs.array_acct_attr_code(28) := 'LEDGER_AMOUNT';
   l_rec_acct_attrs.array_num_value(28)  := p_source_66;
   l_rec_acct_attrs.array_acct_attr_code(29) := 'MULTIPERIOD_END_DATE';
   l_rec_acct_attrs.array_date_value(29)  := p_source_43;
   l_rec_acct_attrs.array_acct_attr_code(30) := 'MULTIPERIOD_OPTION';
   l_rec_acct_attrs.array_char_value(30)  := p_source_44;
   l_rec_acct_attrs.array_acct_attr_code(31) := 'MULTIPERIOD_START_DATE';
   l_rec_acct_attrs.array_date_value(31)  := p_source_45;
   l_rec_acct_attrs.array_acct_attr_code(32) := 'OVERRIDE_ACCTD_AMT_FLAG';
   l_rec_acct_attrs.array_char_value(32)  := p_source_46;
   l_rec_acct_attrs.array_acct_attr_code(33) := 'PARTY_ID';
   l_rec_acct_attrs.array_num_value(33)  := p_source_47;
   l_rec_acct_attrs.array_acct_attr_code(34) := 'PARTY_SITE_ID';
   l_rec_acct_attrs.array_num_value(34)  := p_source_48;
   l_rec_acct_attrs.array_acct_attr_code(35) := 'PARTY_TYPE';
   l_rec_acct_attrs.array_char_value(35)  := p_source_49;
   l_rec_acct_attrs.array_acct_attr_code(36) := 'REVERSED_DISTRIBUTION_ID1';
   l_rec_acct_attrs.array_num_value(36)  :=  to_char(p_source_50);
   l_rec_acct_attrs.array_acct_attr_code(37) := 'REVERSED_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(37)  := p_source_21;
   l_rec_acct_attrs.array_acct_attr_code(38) := 'STATISTICAL_AMOUNT';
   l_rec_acct_attrs.array_num_value(38)  := p_source_51;
   l_rec_acct_attrs.array_acct_attr_code(39) := 'TAX_LINE_REF_ID';
   l_rec_acct_attrs.array_num_value(39)  := p_source_52;
   l_rec_acct_attrs.array_acct_attr_code(40) := 'TAX_REC_NREC_DIST_REF_ID';
   l_rec_acct_attrs.array_num_value(40)  := p_source_53;
   l_rec_acct_attrs.array_acct_attr_code(41) := 'TAX_SUMMARY_LINE_REF_ID';
   l_rec_acct_attrs.array_num_value(41)  := p_source_54;
   l_rec_acct_attrs.array_acct_attr_code(42) := 'UPG_CR_ENC_TYPE_ID';
   l_rec_acct_attrs.array_num_value(42)  := p_source_55;
   l_rec_acct_attrs.array_acct_attr_code(43) := 'UPG_DR_ENC_TYPE_ID';
   l_rec_acct_attrs.array_num_value(43)  := p_source_56;

   XLA_AE_LINES_PKG.SetLineAcctAttrs(l_rec_acct_attrs);
   p_gain_or_loss_ref  := XLA_AE_LINES_PKG.g_rec_lines.array_gain_or_loss_ref(XLA_AE_LINES_PKG.g_LineNumber);

   ---------------------------------------------------------------------------------------------------------------
   -- 4336173 -- assign Business Flow Class (replace code in xla_ae_lines_pkg.Business_Flow_Validation)
   ---------------------------------------------------------------------------------------------------------------
   XLA_AE_LINES_PKG.g_rec_lines.array_business_class_code(XLA_AE_LINES_PKG.g_LineNumber) := l_bflow_class_code;

   l_actual_upg_option  := XLA_AE_LINES_PKG.g_rec_lines.array_actual_upg_option(XLA_AE_LINES_PKG.g_LineNumber);
   l_enc_upg_option     := XLA_AE_LINES_PKG.g_rec_lines.array_enc_upg_option(XLA_AE_LINES_PKG.g_LineNumber);

   IF xla_accounting_cache_pkg.GetValueChar
         (p_source_code         => 'LEDGER_CATEGORY_CODE'
         ,p_target_ledger_id    => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id) IN ('PRIMARY','ALC')
   AND l_bflow_method_code = 'PRIOR_ENTRY'
--   AND (l_actual_upg_option = 'Y' OR l_enc_upg_option = 'Y') Bug 4922099
   AND ( (NVL(l_actual_upg_option, 'N') IN ('Y', 'O')) OR
         (NVL(l_enc_upg_option, 'N') IN ('Y', 'O'))
       )
   THEN
         xla_ae_lines_pkg.BflowUpgEntry
           (p_business_method_code    => l_bflow_method_code
           ,p_business_class_code     => l_bflow_class_code
           ,p_balance_type            => l_balance_type_code);
   ELSE
      NULL;
-- No business flow processing for business flow method of NONE.
   END IF;

   --
   -- call analytical criteria
   --
   
   --
   -- call description
   --
   
xla_ae_lines_pkg.SetLineDescription(
   p_ae_header_id => l_ae_header_id
  ,p_description  => Description_2 (
     p_application_id         => p_application_id
   , p_ae_header_id           => l_ae_header_id 
, p_source_1 => p_source_1
   )
);


   --
   -- call ADRs
   -- Bug 4922099
   --
   IF ( (l_bflow_method_code <> 'PRIOR_ENTRY') OR
        (NVL(l_actual_upg_option, 'N') = 'O') OR
        (NVL(l_enc_upg_option, 'N') = 'O')
      )
   THEN
   NULL;
   --
   --
   
  l_ccid := AcctDerRule_7(
           p_application_id           => p_application_id
         , p_ae_header_id             => l_ae_header_id 
, p_source_11 => p_source_11
         , x_transaction_coa_id       => l_adr_transaction_coa_id
         , x_accounting_coa_id        => l_adr_accounting_coa_id
         , x_value_type_code          => l_adr_value_type_code
         , p_side                     => 'NA'
   );

   xla_ae_lines_pkg.set_ccid(
    p_code_combination_id          => l_ccid
  , p_value_type_code              => l_adr_value_type_code
  , p_transaction_coa_id           => l_adr_transaction_coa_id
  , p_accounting_coa_id            => l_adr_accounting_coa_id
  , p_adr_code                     => 'AP_INVOICE_DIST'
  , p_adr_type_code                => 'S'
  , p_component_type               => l_component_type
  , p_component_code               => l_component_code
  , p_component_type_code          => l_component_type_code
  , p_component_appl_id            => l_component_appl_id
  , p_amb_context_code             => l_amb_context_code
  , p_side                         => 'NA'
  );


   --
   --
   END IF;
   --
   -- Bug 4922099
   IF ( ( (NVL(l_actual_upg_option, 'N') = 'O') OR
          (NVL(l_enc_upg_option, 'N') = 'O')
        ) AND
        (l_bflow_method_code = 'PRIOR_ENTRY')
      )
   THEN
      IF
      --
      1 = 2
      --
      THEN
      xla_accounting_err_pkg.build_message
                                    (p_appli_s_name            => 'XLA'
                                    ,p_msg_name                => 'XLA_UPG_OVERRIDE_ADR_UNDEFINED'
                                    ,p_token_1                 => 'LINE_NUMBER'
                                    ,p_value_1                 => XLA_AE_LINES_PKG.g_LineNumber
                                    ,p_token_2                 => 'LINE_TYPE_NAME'
                                    ,p_value_2                 => XLA_AE_SOURCES_PKG.GetComponentName (
                                                                             l_component_type
                                                                            ,l_component_code
                                                                            ,l_component_type_code
                                                                            ,l_component_appl_id
                                                                            ,l_amb_context_code
                                                                            ,l_entity_code
                                                                            ,l_event_class_code
                                                                           )
                                    ,p_token_3                 => 'OWNER'
                                    ,p_value_3                 => xla_lookups_pkg.get_meaning(
                                                                          p_lookup_type     => 'XLA_OWNER_TYPE'
                                                                          ,p_lookup_code    => l_component_type_code
                                                                         )
                                    ,p_token_4                 => 'PRODUCT_NAME'
                                    ,p_value_4                 => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.application_name
                                    ,p_entity_id               => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.entity_id
                                    ,p_event_id                => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.event_id
                                    ,p_ledger_id               => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id
                                    ,p_ae_header_id            =>  NULL
                                       );

        IF (C_LEVEL_ERROR>= g_log_level) THEN
                 trace
                      (p_msg      => 'ERROR: XLA_UPG_OVERRIDE_ADR_UNDEFINED'
                      ,p_level    => C_LEVEL_ERROR
                      ,p_module   => l_log_module);
        END IF;
      END IF;
   END IF;
   --
   --
   ------------------------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- NOTE: XLA_AE_LINES_PKG.ValidateCurrentLine should NOT be generated if business flow method is
   -- Prior Entry.  Currently, the following code is always generated.
   ------------------------------------------------------------------------------------------------
   XLA_AE_LINES_PKG.ValidateCurrentLine;

   ------------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- Populated credit and debit amounts -- Need to generate this within IF <condition>
   ------------------------------------------------------------------------------------
   XLA_AE_LINES_PKG.SetDebitCreditAmounts;

   ----------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- Update journal entry status -- Need to generate this within IF <condition>
   ----------------------------------------------------------------------------------
   XLA_AE_JOURNAL_ENTRY_PKG.UpdateJournalEntryStatus
         (p_hdr_idx => g_array_event(p_event_id).array_value_num('header_index')
         ,p_balance_type_code => l_balance_type_code
         );

   -------------------------------------------------------------------------------------------
   -- 4262811 - Generate the Accrual Reversal lines
   -------------------------------------------------------------------------------------------
   BEGIN
      l_acc_rev_flag := XLA_AE_HEADER_PKG.g_rec_header_new.array_accrual_reversal_flag
                              (g_array_event(p_event_id).array_value_num('header_index'));
      IF l_acc_rev_flag IS NULL THEN
         l_acc_rev_flag := 'N';
      END IF;
   EXCEPTION
      WHEN OTHERS THEN
         l_acc_rev_flag := 'N';
   END;
   --
   IF (l_acc_rev_flag = 'Y') THEN

       -- 4645092  ------------------------------------------------------------------------------
       -- To allow MPA report to determine if it should generate report process
       XLA_ACCOUNTING_PKG.g_mpa_accrual_exists := 'Y';
       ------------------------------------------------------------------------------------------

       l_accrual_line_num := XLA_AE_LINES_PKG.g_LineNumber;
       XLA_AE_LINES_PKG.CopyLineInfo(l_accrual_line_num);
   -- added call to set_ccid to execute mapping  for secondary accrual reversal entries bug 7444204
   -- call ADRs
   -- Bug 4922099
   --
   IF ( (l_bflow_method_code <> 'PRIOR_ENTRY') OR
        (NVL(l_actual_upg_option, 'N') = 'O') OR
        (NVL(l_enc_upg_option, 'N') = 'O')
      )
   THEN
   NULL;
   --
   --
   
  l_ccid := AcctDerRule_7(
           p_application_id           => p_application_id
         , p_ae_header_id             => l_ae_header_id 
, p_source_11 => p_source_11
         , x_transaction_coa_id       => l_adr_transaction_coa_id
         , x_accounting_coa_id        => l_adr_accounting_coa_id
         , x_value_type_code          => l_adr_value_type_code
         , p_side                     => 'NA'
   );

   xla_ae_lines_pkg.set_ccid(
    p_code_combination_id          => l_ccid
  , p_value_type_code              => l_adr_value_type_code
  , p_transaction_coa_id           => l_adr_transaction_coa_id
  , p_accounting_coa_id            => l_adr_accounting_coa_id
  , p_adr_code                     => 'AP_INVOICE_DIST'
  , p_adr_type_code                => 'S'
  , p_component_type               => l_component_type
  , p_component_code               => l_component_code
  , p_component_type_code          => l_component_type_code
  , p_component_appl_id            => l_component_appl_id
  , p_amb_context_code             => l_amb_context_code
  , p_side                         => 'NA'
  );


   --
   --
   END IF;

       --
       -- Update the line information that should be overwritten
       --
       XLA_AE_LINES_PKG.set_ae_header_id(p_ae_header_id => p_event_id ,
                                         p_header_num   => 1);
       XLA_AE_LINES_PKG.g_rec_lines.array_header_num(XLA_AE_LINES_PKG.g_LineNumber)  :=1;

       XLA_AE_LINES_PKG.g_rec_lines.array_business_class_code(XLA_AE_LINES_PKG.g_LineNumber) := NULL; -- 4669271

       IF l_bflow_method_code <> 'NONE' THEN  -- 4655713b
          XLA_AE_LINES_PKG.g_rec_lines.array_reversal_code(XLA_AE_LINES_PKG.g_LineNumber) := CONCAT('MPA_',l_bflow_method_code);
       END IF;

      --
      -- Depending on the Reversal Method setup, do a switch side or changes sign for the amounts
      --
      IF (XLA_AE_JOURNAL_ENTRY_PKG.g_cache_ledgers_info.ledger_reversal_option = 'SIDE') THEN
          XLA_AE_LINES_PKG.g_rec_lines.array_natural_side_code(XLA_AE_LINES_PKG.g_LineNumber) :=  l_acc_rev_natural_side_code;
      ELSE
          ---------------------------------------------------------------------------------------------------
          -- 4262811a Switch Sign
          ---------------------------------------------------------------------------------------------------
          XLA_AE_LINES_PKG.g_rec_lines.array_switch_side_flag(XLA_AE_LINES_PKG.g_LineNumber) := 'N';  -- 5052518
          XLA_AE_LINES_PKG.g_rec_lines.array_ledger_amount(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_ledger_amount(XLA_AE_LINES_PKG.g_LineNumber) * -1;
          XLA_AE_LINES_PKG.g_rec_lines.array_entered_amount(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_entered_amount(XLA_AE_LINES_PKG.g_LineNumber) * -1;
          -- 5132302
          XLA_AE_LINES_PKG.g_rec_lines.array_bflow_applied_to_amt(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_bflow_applied_to_amt(XLA_AE_LINES_PKG.g_LineNumber) * -1;

      END IF;

      -- 4955764
      XLA_AE_LINES_PKG.g_rec_lines.array_gl_date(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_HEADER_PKG.g_rec_header_new.array_gl_date(g_array_event(p_event_id).array_value_num('acc_rev_header_index'));


      XLA_AE_LINES_PKG.ValidateCurrentLine;
      XLA_AE_LINES_PKG.SetDebitCreditAmounts;

      XLA_AE_JOURNAL_ENTRY_PKG.UpdateJournalEntryStatus
               (p_hdr_idx           => g_array_event(p_event_id).array_value_num('acc_rev_header_index')
               ,p_balance_type_code => l_balance_type_code);

   END IF;

   -----------------------------------------------------------------------------------------
   -- 4262811 Multiperiod Accounting
   -----------------------------------------------------------------------------------------
     -- No MPA option is assigned.


END IF;
END IF;
--

--
IF (C_LEVEL_PROCEDURE >= g_log_level) THEN
   trace
      (p_msg      => 'END of AcctLineType_29'
      ,p_level    => C_LEVEL_PROCEDURE
      ,p_module   => l_log_module);
END IF;
--
EXCEPTION
  WHEN xla_exceptions_pkg.application_exception THEN
      RAISE;
  WHEN OTHERS THEN
       xla_exceptions_pkg.raise_message
           (p_location => 'XLA_00200_AAD_S_000010_BC_PKG.AcctLineType_29');
END AcctLineType_29;
--

---------------------------------------
--
-- PRIVATE FUNCTION
--         AcctLineType_30
--
---------------------------------------
PROCEDURE AcctLineType_30 (
  p_application_id        IN NUMBER
 ,p_event_id              IN NUMBER
 ,p_calculate_acctd_flag  IN VARCHAR2
 ,p_calculate_g_l_flag    IN VARCHAR2
 ,p_actual_flag           IN OUT VARCHAR2
 ,p_balance_type_code     OUT VARCHAR2
 ,p_gain_or_loss_ref      OUT VARCHAR2
 
--Invoice Distribution Description
 , p_source_1            IN VARCHAR2
--Invoice Distribution Ledger Amount
 , p_source_8            IN NUMBER
--Invoice Distribution Account
 , p_source_11            IN NUMBER
--Invoice Distribution Type
 , p_source_15            IN VARCHAR2
 , p_source_15_meaning    IN VARCHAR2
--Accounting Reversal Indicator
 , p_source_19            IN VARCHAR2
--Distribution Link Type
 , p_source_21            IN VARCHAR2
--Allocation to Main Distribution Identifier
 , p_source_23            IN NUMBER
--Invoice Identifier
 , p_source_24            IN NUMBER
--Business Flow Accounts Payable Application Identifier
 , p_source_25            IN NUMBER
--Business Flow Invoice Distribution Type
 , p_source_26            IN VARCHAR2
--Business Flow Invoice Entity Code
 , p_source_27            IN VARCHAR2
--Business Flow Invoice Distribution Identifier
 , p_source_28            IN NUMBER
--Business Flow Invoice Identifier
 , p_source_29            IN NUMBER
--Invoice Distribution Identifier
 , p_source_30            IN NUMBER
--Payables Encumbrance Upgrade Credit Account
 , p_source_31            IN NUMBER
--Payables Encumbrance Upgrade Credit Amount
 , p_source_32            IN NUMBER
--Invoice Currency Code
 , p_source_33            IN VARCHAR2
--Payables Encumbrance Upgrade Credit Base Amount
 , p_source_34            IN NUMBER
--Payables Encumbrance Upgrade Debit Account
 , p_source_35            IN NUMBER
--Payables Encumbrance Upgrade Debit Amount
 , p_source_36            IN NUMBER
--Payables Encumbrance Upgrade Debit Base Amount
 , p_source_37            IN NUMBER
--Payables Encumbrance Upgrade Option
 , p_source_38            IN VARCHAR2
--Invoice Exchange Date
 , p_source_39            IN DATE
--Invoice Exchange Rate
 , p_source_40            IN NUMBER
--Invoice Exchange Rate Type
 , p_source_41            IN VARCHAR2
--Deferred Accounting End Date
 , p_source_43            IN DATE
--Deferred Accounting Option
 , p_source_44            IN VARCHAR2
--Deferred Accounting Start Date
 , p_source_45            IN DATE
--Override Accounted Amount Indicator
 , p_source_46            IN VARCHAR2
 , p_source_46_meaning    IN VARCHAR2
--Invoice Supplier Identifier
 , p_source_47            IN NUMBER
--Invoice Supplier Site Identifier
 , p_source_48            IN NUMBER
--Third Party Type
 , p_source_49            IN VARCHAR2
--Parent Reversal Identifier
 , p_source_50            IN NUMBER
--Invoice Distribution Statistical Amount
 , p_source_51            IN NUMBER
--Invoice Distribution Tax Line Identifier
 , p_source_52            IN NUMBER
--Invoice Distribution Tax Distribution Identifier from Tax
 , p_source_53            IN NUMBER
--Invoice Distribution Summary Tax Line Identifier
 , p_source_54            IN NUMBER
--Payables Upgrade Credit Encumbrance Type Identifier
 , p_source_55            IN NUMBER
--Payables Upgrade Debit Encumbrance Type Identifier
 , p_source_56            IN NUMBER
--Invoice Distribution Amount
 , p_source_57            IN NUMBER
)
IS

l_component_type              VARCHAR2(80);
l_component_code              VARCHAR2(30);
l_component_type_code         VARCHAR2(1);
l_component_appl_id           INTEGER;
l_amb_context_code            VARCHAR2(30);
l_entity_code                 VARCHAR2(30);
l_event_class_code            VARCHAR2(30);
l_ae_header_id                NUMBER;
l_event_type_code             VARCHAR2(30);
l_line_definition_code        VARCHAR2(30);
l_line_definition_owner_code  VARCHAR2(1);
--
-- adr variables
l_segment                     VARCHAR2(30);
l_ccid                        NUMBER;
l_adr_transaction_coa_id      NUMBER;
l_adr_accounting_coa_id       NUMBER;
l_adr_flexfield_segment_code  VARCHAR2(30);
l_adr_flex_value_set_id       NUMBER;
l_adr_value_type_code         VARCHAR2(30);
l_adr_value_combination_id    NUMBER;
l_adr_value_segment_code      VARCHAR2(30);

l_bflow_method_code           VARCHAR2(30);  -- 4219869 Business Flow
l_bflow_class_code            VARCHAR2(30);  -- 4219869 Business Flow
l_inherit_desc_flag           VARCHAR2(1);   -- 4219869 Business Flow
l_budgetary_control_flag      VARCHAR2(1);   -- 4458381 Public Sector Enh

-- 4262811 Variables ------------------------------------------------------------------------------------------
l_entered_amt_idx             NUMBER;
l_accted_amt_idx              NUMBER;
l_acc_rev_flag                VARCHAR2(1);
l_accrual_line_num            NUMBER;
l_tmp_amt                     NUMBER;
l_acc_rev_natural_side_code   VARCHAR2(1);

l_num_entries                 NUMBER;
l_gl_dates                    xla_ae_journal_entry_pkg.t_array_date;
l_accted_amts                 xla_ae_journal_entry_pkg.t_array_num;
l_entered_amts                xla_ae_journal_entry_pkg.t_array_num;
l_period_names                xla_ae_journal_entry_pkg.t_array_V15L;
l_recog_line_1                NUMBER;
l_recog_line_2                NUMBER;

l_bflow_applied_to_amt_idx    NUMBER;                                -- 5132302
l_bflow_applied_to_amt        NUMBER;                                -- 5132302
l_bflow_applied_to_amts       xla_ae_journal_entry_pkg.t_array_num;  -- 5132302

l_event_id                    NUMBER;  -- To handle MPA header Description: xla_ae_header_pkg.SetHdrDescription

--l_rounding_ccy                VARCHAR2(15); -- To handle MPA rounding  4262811b
l_same_currency               BOOLEAN;        -- To handle MPA rounding  4262811b

---------------------------------------------------------------------------------------------------------------


--
-- bulk performance
--
l_balance_type_code           VARCHAR2(1);
l_rec_acct_attrs              XLA_AE_LINES_PKG.t_rec_acct_attrs;
l_log_module                  VARCHAR2(240);

--
-- Upgrade strategy
--
l_actual_upg_option           VARCHAR2(1);
l_enc_upg_option           VARCHAR2(1);

--
BEGIN
--
IF g_log_enabled THEN
      l_log_module := C_DEFAULT_MODULE||'.AcctLineType_30';
END IF;
--
IF (C_LEVEL_PROCEDURE >= g_log_level) THEN

      trace
         (p_msg      => 'BEGIN of AcctLineType_30'
         ,p_level    => C_LEVEL_PROCEDURE
         ,p_module   => l_log_module);

END IF;
--
l_component_type             := 'AMB_JLT';
l_component_code             := 'AP_INVOICE_PREPAY_ENC_DR';
l_component_type_code        := 'S';
l_component_appl_id          :=  200;
l_amb_context_code           := 'DEFAULT';
l_entity_code                := 'AP_INVOICES';
l_event_class_code           := 'INVOICES';
l_event_type_code            := 'INVOICES_ALL';
l_line_definition_owner_code := 'S';
l_line_definition_code       := 'ENC_INVOICES_ALL';
--
l_balance_type_code          := 'E';
l_segment                     := NULL;
l_ccid                        := NULL;
l_adr_transaction_coa_id      := NULL;
l_adr_accounting_coa_id       := NULL;
l_adr_flexfield_segment_code  := NULL;
l_adr_flex_value_set_id       := NULL;
l_adr_value_type_code         := NULL;
l_adr_value_combination_id    := NULL;
l_adr_value_segment_code      := NULL;

l_bflow_method_code          := 'NONE';   -- 4219869 Business Flow
l_bflow_class_code           := 'AP_INV_ENCUM';    -- 4219869 Business Flow
l_inherit_desc_flag          := 'N';   -- 4219869 Business Flow
l_budgetary_control_flag     := 'Y';

l_bflow_applied_to_amt_idx   := NULL; -- 5132302
l_bflow_applied_to_amt       := NULL; -- 5132302
l_entered_amt_idx            := NULL;          -- 4262811
l_accted_amt_idx             := NULL;          -- 4262811
l_acc_rev_flag               := NULL;          -- 4262811
l_accrual_line_num           := NULL;          -- 4262811
l_tmp_amt                    := NULL;          -- 4262811
--
 
IF XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id = XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.ledger_id OR
    l_balance_type_code <> 'B' THEN
IF NVL(p_source_15,'
') =  'PREPAY' AND 
NVL(
xla_ae_sources_pkg.GetSystemSourceChar(
   p_source_code           => 'XLA_REFERENCE_CHAR_1'
 , p_source_type_code      => 'Y'
 , p_source_application_id =>  602
),'
') =  'FUNDS_CHECK'
 THEN 

   --
   XLA_AE_LINES_PKG.SetNewLine;

   p_balance_type_code          := l_balance_type_code;
   -- set the flag so later we will know whether the gain loss line needs to be created
   
   IF(l_balance_type_code = 'A' and p_actual_flag is null) THEN
     p_actual_flag :='A';
   END IF;

   --
   -- bulk performance
   --
   XLA_AE_LINES_PKG.set_ae_header_id (p_ae_header_id => p_event_id ,
                                      p_header_num   => 0); -- 4262811
   --
   -- set accounting line options
   --
   l_ae_header_id:= xla_ae_lines_pkg.SetAcctLineOption(
           p_natural_side_code          => 'D'
         , p_gain_or_loss_flag          => 'N'
         , p_gl_transfer_mode_code      => 'S'
         , p_acct_entry_type_code       => 'E'
         , p_switch_side_flag           => 'Y'
         , p_merge_duplicate_code       => 'N'
         );
   --
   l_acc_rev_natural_side_code := 'C';  -- 4262811
   -- 
   --
   -- set accounting line type info
   --
   xla_ae_lines_pkg.SetAcctLineType
      (p_component_type             => l_component_type
      ,p_event_type_code            => l_event_type_code
      ,p_line_definition_owner_code => l_line_definition_owner_code
      ,p_line_definition_code       => l_line_definition_code
      ,p_accounting_line_code       => l_component_code
      ,p_accounting_line_type_code  => l_component_type_code
      ,p_accounting_line_appl_id    => l_component_appl_id
      ,p_amb_context_code           => l_amb_context_code
      ,p_entity_code                => l_entity_code
      ,p_event_class_code           => l_event_class_code);
   --
   -- set accounting class
   --
   xla_ae_lines_pkg.SetAcctClass(
           p_accounting_class_code  => 'RFE'
         , p_ae_header_id           => l_ae_header_id
         );

   --
   -- set rounding class
   --
   XLA_AE_LINES_PKG.g_rec_lines.array_rounding_class(XLA_AE_LINES_PKG.g_LineNumber) :=
                      'RFE';

   --
   xla_ae_lines_pkg.g_rec_lines.array_calculate_acctd_flag(xla_ae_lines_pkg.g_LineNumber) := p_calculate_acctd_flag;
   xla_ae_lines_pkg.g_rec_lines.array_calculate_g_l_flag(xla_ae_lines_pkg.g_LineNumber) := p_calculate_g_l_flag;
   --
   -- bulk performance
   --
   XLA_AE_LINES_PKG.g_rec_lines.array_balance_type_code(XLA_AE_LINES_PKG.g_LineNumber) := l_balance_type_code;

   XLA_AE_LINES_PKG.g_rec_lines.array_ledger_id(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id;

   -- 4955764
   XLA_AE_LINES_PKG.g_rec_lines.array_gl_date(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_HEADER_PKG.g_rec_header_new.array_gl_date(g_array_event(p_event_id).array_value_num('header_index'));

   -- 4458381 Public Sector Enh
      XLA_AE_LINES_PKG.g_rec_lines.array_encumbrance_type_id(XLA_AE_LINES_PKG.g_LineNumber) := 1060;
   --
   -- set accounting attributes for the line type
   --
   l_entered_amt_idx := 24;
   l_accted_amt_idx  := 29;
   l_bflow_applied_to_amt_idx  := 7;  -- 5132302
   l_rec_acct_attrs.array_acct_attr_code(1) := 'ACCOUNTING_REVERSAL_OPTION';
   l_rec_acct_attrs.array_char_value(1)  := p_source_19;
   l_rec_acct_attrs.array_acct_attr_code(2) := 'ALLOC_TO_APPLICATION_ID';
   l_rec_acct_attrs.array_num_value(2)  := 
xla_ae_sources_pkg.GetSystemSourceNum(
   p_source_code           => 'XLA_EVENT_APPL_ID'
 , p_source_type_code      => 'Y'
 , p_source_application_id =>  602
);
   l_rec_acct_attrs.array_acct_attr_code(3) := 'ALLOC_TO_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(3)  := p_source_21;
   l_rec_acct_attrs.array_acct_attr_code(4) := 'ALLOC_TO_ENTITY_CODE';
   l_rec_acct_attrs.array_char_value(4)  := 
xla_ae_sources_pkg.GetSystemSourceChar(
   p_source_code           => 'XLA_ENTITY_CODE'
 , p_source_type_code      => 'Y'
 , p_source_application_id =>  602
);
   l_rec_acct_attrs.array_acct_attr_code(5) := 'ALLOC_TO_FIRST_DIST_ID';
   l_rec_acct_attrs.array_num_value(5)  :=  to_char(p_source_23);
   l_rec_acct_attrs.array_acct_attr_code(6) := 'ALLOC_TO_FIRST_SYS_TRAN_ID';
   l_rec_acct_attrs.array_num_value(6)  :=  to_char(p_source_24);
   l_rec_acct_attrs.array_acct_attr_code(7) := 'APPLIED_TO_AMOUNT';
   l_rec_acct_attrs.array_num_value(7)  := p_source_57;
   l_rec_acct_attrs.array_acct_attr_code(8) := 'APPLIED_TO_APPLICATION_ID';
   l_rec_acct_attrs.array_num_value(8)  := p_source_25;
   l_rec_acct_attrs.array_acct_attr_code(9) := 'APPLIED_TO_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(9)  := p_source_26;
   l_rec_acct_attrs.array_acct_attr_code(10) := 'APPLIED_TO_ENTITY_CODE';
   l_rec_acct_attrs.array_char_value(10)  := p_source_27;
   l_rec_acct_attrs.array_acct_attr_code(11) := 'APPLIED_TO_FIRST_DIST_ID';
   l_rec_acct_attrs.array_num_value(11)  :=  to_char(p_source_28);
   l_rec_acct_attrs.array_acct_attr_code(12) := 'APPLIED_TO_FIRST_SYS_TRAN_ID';
   l_rec_acct_attrs.array_num_value(12)  :=  to_char(p_source_29);
   l_rec_acct_attrs.array_acct_attr_code(13) := 'DISTRIBUTION_IDENTIFIER_1';
   l_rec_acct_attrs.array_num_value(13)  :=  to_char(p_source_30);
   l_rec_acct_attrs.array_acct_attr_code(14) := 'DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(14)  := p_source_21;
   l_rec_acct_attrs.array_acct_attr_code(15) := 'ENC_UPG_CR_CCID';
   l_rec_acct_attrs.array_num_value(15)  := p_source_31;
   l_rec_acct_attrs.array_acct_attr_code(16) := 'ENC_UPG_CR_ENTERED_AMT';
   l_rec_acct_attrs.array_num_value(16)  := p_source_32;
   l_rec_acct_attrs.array_acct_attr_code(17) := 'ENC_UPG_CR_ENTERED_CURR';
   l_rec_acct_attrs.array_char_value(17)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(18) := 'ENC_UPG_CR_LEDGER_AMT';
   l_rec_acct_attrs.array_num_value(18)  := p_source_34;
   l_rec_acct_attrs.array_acct_attr_code(19) := 'ENC_UPG_DR_CCID';
   l_rec_acct_attrs.array_num_value(19)  := p_source_35;
   l_rec_acct_attrs.array_acct_attr_code(20) := 'ENC_UPG_DR_ENTERED_AMT';
   l_rec_acct_attrs.array_num_value(20)  := p_source_36;
   l_rec_acct_attrs.array_acct_attr_code(21) := 'ENC_UPG_DR_ENTERED_CURR';
   l_rec_acct_attrs.array_char_value(21)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(22) := 'ENC_UPG_DR_LEDGER_AMT';
   l_rec_acct_attrs.array_num_value(22)  := p_source_37;
   l_rec_acct_attrs.array_acct_attr_code(23) := 'ENC_UPG_OPTION';
   l_rec_acct_attrs.array_char_value(23)  := p_source_38;
   l_rec_acct_attrs.array_acct_attr_code(24) := 'ENTERED_CURRENCY_AMOUNT';
   l_rec_acct_attrs.array_num_value(24)  := p_source_57;
   l_rec_acct_attrs.array_acct_attr_code(25) := 'ENTERED_CURRENCY_CODE';
   l_rec_acct_attrs.array_char_value(25)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(26) := 'EXCHANGE_DATE';
   l_rec_acct_attrs.array_date_value(26)  := p_source_39;
   l_rec_acct_attrs.array_acct_attr_code(27) := 'EXCHANGE_RATE';
   l_rec_acct_attrs.array_num_value(27)  := p_source_40;
   l_rec_acct_attrs.array_acct_attr_code(28) := 'EXCHANGE_RATE_TYPE';
   l_rec_acct_attrs.array_char_value(28)  := p_source_41;
   l_rec_acct_attrs.array_acct_attr_code(29) := 'LEDGER_AMOUNT';
   l_rec_acct_attrs.array_num_value(29)  := p_source_8;
   l_rec_acct_attrs.array_acct_attr_code(30) := 'MULTIPERIOD_END_DATE';
   l_rec_acct_attrs.array_date_value(30)  := p_source_43;
   l_rec_acct_attrs.array_acct_attr_code(31) := 'MULTIPERIOD_OPTION';
   l_rec_acct_attrs.array_char_value(31)  := p_source_44;
   l_rec_acct_attrs.array_acct_attr_code(32) := 'MULTIPERIOD_START_DATE';
   l_rec_acct_attrs.array_date_value(32)  := p_source_45;
   l_rec_acct_attrs.array_acct_attr_code(33) := 'OVERRIDE_ACCTD_AMT_FLAG';
   l_rec_acct_attrs.array_char_value(33)  := p_source_46;
   l_rec_acct_attrs.array_acct_attr_code(34) := 'PARTY_ID';
   l_rec_acct_attrs.array_num_value(34)  := p_source_47;
   l_rec_acct_attrs.array_acct_attr_code(35) := 'PARTY_SITE_ID';
   l_rec_acct_attrs.array_num_value(35)  := p_source_48;
   l_rec_acct_attrs.array_acct_attr_code(36) := 'PARTY_TYPE';
   l_rec_acct_attrs.array_char_value(36)  := p_source_49;
   l_rec_acct_attrs.array_acct_attr_code(37) := 'REVERSED_DISTRIBUTION_ID1';
   l_rec_acct_attrs.array_num_value(37)  :=  to_char(p_source_50);
   l_rec_acct_attrs.array_acct_attr_code(38) := 'REVERSED_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(38)  := p_source_21;
   l_rec_acct_attrs.array_acct_attr_code(39) := 'STATISTICAL_AMOUNT';
   l_rec_acct_attrs.array_num_value(39)  := p_source_51;
   l_rec_acct_attrs.array_acct_attr_code(40) := 'TAX_LINE_REF_ID';
   l_rec_acct_attrs.array_num_value(40)  := p_source_52;
   l_rec_acct_attrs.array_acct_attr_code(41) := 'TAX_REC_NREC_DIST_REF_ID';
   l_rec_acct_attrs.array_num_value(41)  := p_source_53;
   l_rec_acct_attrs.array_acct_attr_code(42) := 'TAX_SUMMARY_LINE_REF_ID';
   l_rec_acct_attrs.array_num_value(42)  := p_source_54;
   l_rec_acct_attrs.array_acct_attr_code(43) := 'UPG_CR_ENC_TYPE_ID';
   l_rec_acct_attrs.array_num_value(43)  := p_source_55;
   l_rec_acct_attrs.array_acct_attr_code(44) := 'UPG_DR_ENC_TYPE_ID';
   l_rec_acct_attrs.array_num_value(44)  := p_source_56;

   XLA_AE_LINES_PKG.SetLineAcctAttrs(l_rec_acct_attrs);
   p_gain_or_loss_ref  := XLA_AE_LINES_PKG.g_rec_lines.array_gain_or_loss_ref(XLA_AE_LINES_PKG.g_LineNumber);

   ---------------------------------------------------------------------------------------------------------------
   -- 4336173 -- assign Business Flow Class (replace code in xla_ae_lines_pkg.Business_Flow_Validation)
   ---------------------------------------------------------------------------------------------------------------
   XLA_AE_LINES_PKG.g_rec_lines.array_business_class_code(XLA_AE_LINES_PKG.g_LineNumber) := l_bflow_class_code;

   l_actual_upg_option  := XLA_AE_LINES_PKG.g_rec_lines.array_actual_upg_option(XLA_AE_LINES_PKG.g_LineNumber);
   l_enc_upg_option     := XLA_AE_LINES_PKG.g_rec_lines.array_enc_upg_option(XLA_AE_LINES_PKG.g_LineNumber);

   IF xla_accounting_cache_pkg.GetValueChar
         (p_source_code         => 'LEDGER_CATEGORY_CODE'
         ,p_target_ledger_id    => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id) IN ('PRIMARY','ALC')
   AND l_bflow_method_code = 'PRIOR_ENTRY'
--   AND (l_actual_upg_option = 'Y' OR l_enc_upg_option = 'Y') Bug 4922099
   AND ( (NVL(l_actual_upg_option, 'N') IN ('Y', 'O')) OR
         (NVL(l_enc_upg_option, 'N') IN ('Y', 'O'))
       )
   THEN
         xla_ae_lines_pkg.BflowUpgEntry
           (p_business_method_code    => l_bflow_method_code
           ,p_business_class_code     => l_bflow_class_code
           ,p_balance_type            => l_balance_type_code);
   ELSE
      NULL;
-- No business flow processing for business flow method of NONE.
   END IF;

   --
   -- call analytical criteria
   --
   
   --
   -- call description
   --
   
xla_ae_lines_pkg.SetLineDescription(
   p_ae_header_id => l_ae_header_id
  ,p_description  => Description_2 (
     p_application_id         => p_application_id
   , p_ae_header_id           => l_ae_header_id 
, p_source_1 => p_source_1
   )
);


   --
   -- call ADRs
   -- Bug 4922099
   --
   IF ( (l_bflow_method_code <> 'PRIOR_ENTRY') OR
        (NVL(l_actual_upg_option, 'N') = 'O') OR
        (NVL(l_enc_upg_option, 'N') = 'O')
      )
   THEN
   NULL;
   --
   --
   
  l_ccid := AcctDerRule_7(
           p_application_id           => p_application_id
         , p_ae_header_id             => l_ae_header_id 
, p_source_11 => p_source_11
         , x_transaction_coa_id       => l_adr_transaction_coa_id
         , x_accounting_coa_id        => l_adr_accounting_coa_id
         , x_value_type_code          => l_adr_value_type_code
         , p_side                     => 'NA'
   );

   xla_ae_lines_pkg.set_ccid(
    p_code_combination_id          => l_ccid
  , p_value_type_code              => l_adr_value_type_code
  , p_transaction_coa_id           => l_adr_transaction_coa_id
  , p_accounting_coa_id            => l_adr_accounting_coa_id
  , p_adr_code                     => 'AP_INVOICE_DIST'
  , p_adr_type_code                => 'S'
  , p_component_type               => l_component_type
  , p_component_code               => l_component_code
  , p_component_type_code          => l_component_type_code
  , p_component_appl_id            => l_component_appl_id
  , p_amb_context_code             => l_amb_context_code
  , p_side                         => 'NA'
  );


   --
   --
   END IF;
   --
   -- Bug 4922099
   IF ( ( (NVL(l_actual_upg_option, 'N') = 'O') OR
          (NVL(l_enc_upg_option, 'N') = 'O')
        ) AND
        (l_bflow_method_code = 'PRIOR_ENTRY')
      )
   THEN
      IF
      --
      1 = 2
      --
      THEN
      xla_accounting_err_pkg.build_message
                                    (p_appli_s_name            => 'XLA'
                                    ,p_msg_name                => 'XLA_UPG_OVERRIDE_ADR_UNDEFINED'
                                    ,p_token_1                 => 'LINE_NUMBER'
                                    ,p_value_1                 => XLA_AE_LINES_PKG.g_LineNumber
                                    ,p_token_2                 => 'LINE_TYPE_NAME'
                                    ,p_value_2                 => XLA_AE_SOURCES_PKG.GetComponentName (
                                                                             l_component_type
                                                                            ,l_component_code
                                                                            ,l_component_type_code
                                                                            ,l_component_appl_id
                                                                            ,l_amb_context_code
                                                                            ,l_entity_code
                                                                            ,l_event_class_code
                                                                           )
                                    ,p_token_3                 => 'OWNER'
                                    ,p_value_3                 => xla_lookups_pkg.get_meaning(
                                                                          p_lookup_type     => 'XLA_OWNER_TYPE'
                                                                          ,p_lookup_code    => l_component_type_code
                                                                         )
                                    ,p_token_4                 => 'PRODUCT_NAME'
                                    ,p_value_4                 => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.application_name
                                    ,p_entity_id               => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.entity_id
                                    ,p_event_id                => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.event_id
                                    ,p_ledger_id               => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id
                                    ,p_ae_header_id            =>  NULL
                                       );

        IF (C_LEVEL_ERROR>= g_log_level) THEN
                 trace
                      (p_msg      => 'ERROR: XLA_UPG_OVERRIDE_ADR_UNDEFINED'
                      ,p_level    => C_LEVEL_ERROR
                      ,p_module   => l_log_module);
        END IF;
      END IF;
   END IF;
   --
   --
   ------------------------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- NOTE: XLA_AE_LINES_PKG.ValidateCurrentLine should NOT be generated if business flow method is
   -- Prior Entry.  Currently, the following code is always generated.
   ------------------------------------------------------------------------------------------------
   XLA_AE_LINES_PKG.ValidateCurrentLine;

   ------------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- Populated credit and debit amounts -- Need to generate this within IF <condition>
   ------------------------------------------------------------------------------------
   XLA_AE_LINES_PKG.SetDebitCreditAmounts;

   ----------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- Update journal entry status -- Need to generate this within IF <condition>
   ----------------------------------------------------------------------------------
   XLA_AE_JOURNAL_ENTRY_PKG.UpdateJournalEntryStatus
         (p_hdr_idx => g_array_event(p_event_id).array_value_num('header_index')
         ,p_balance_type_code => l_balance_type_code
         );

   -------------------------------------------------------------------------------------------
   -- 4262811 - Generate the Accrual Reversal lines
   -------------------------------------------------------------------------------------------
   BEGIN
      l_acc_rev_flag := XLA_AE_HEADER_PKG.g_rec_header_new.array_accrual_reversal_flag
                              (g_array_event(p_event_id).array_value_num('header_index'));
      IF l_acc_rev_flag IS NULL THEN
         l_acc_rev_flag := 'N';
      END IF;
   EXCEPTION
      WHEN OTHERS THEN
         l_acc_rev_flag := 'N';
   END;
   --
   IF (l_acc_rev_flag = 'Y') THEN

       -- 4645092  ------------------------------------------------------------------------------
       -- To allow MPA report to determine if it should generate report process
       XLA_ACCOUNTING_PKG.g_mpa_accrual_exists := 'Y';
       ------------------------------------------------------------------------------------------

       l_accrual_line_num := XLA_AE_LINES_PKG.g_LineNumber;
       XLA_AE_LINES_PKG.CopyLineInfo(l_accrual_line_num);
   -- added call to set_ccid to execute mapping  for secondary accrual reversal entries bug 7444204
   -- call ADRs
   -- Bug 4922099
   --
   IF ( (l_bflow_method_code <> 'PRIOR_ENTRY') OR
        (NVL(l_actual_upg_option, 'N') = 'O') OR
        (NVL(l_enc_upg_option, 'N') = 'O')
      )
   THEN
   NULL;
   --
   --
   
  l_ccid := AcctDerRule_7(
           p_application_id           => p_application_id
         , p_ae_header_id             => l_ae_header_id 
, p_source_11 => p_source_11
         , x_transaction_coa_id       => l_adr_transaction_coa_id
         , x_accounting_coa_id        => l_adr_accounting_coa_id
         , x_value_type_code          => l_adr_value_type_code
         , p_side                     => 'NA'
   );

   xla_ae_lines_pkg.set_ccid(
    p_code_combination_id          => l_ccid
  , p_value_type_code              => l_adr_value_type_code
  , p_transaction_coa_id           => l_adr_transaction_coa_id
  , p_accounting_coa_id            => l_adr_accounting_coa_id
  , p_adr_code                     => 'AP_INVOICE_DIST'
  , p_adr_type_code                => 'S'
  , p_component_type               => l_component_type
  , p_component_code               => l_component_code
  , p_component_type_code          => l_component_type_code
  , p_component_appl_id            => l_component_appl_id
  , p_amb_context_code             => l_amb_context_code
  , p_side                         => 'NA'
  );


   --
   --
   END IF;

       --
       -- Update the line information that should be overwritten
       --
       XLA_AE_LINES_PKG.set_ae_header_id(p_ae_header_id => p_event_id ,
                                         p_header_num   => 1);
       XLA_AE_LINES_PKG.g_rec_lines.array_header_num(XLA_AE_LINES_PKG.g_LineNumber)  :=1;

       XLA_AE_LINES_PKG.g_rec_lines.array_business_class_code(XLA_AE_LINES_PKG.g_LineNumber) := NULL; -- 4669271

       IF l_bflow_method_code <> 'NONE' THEN  -- 4655713b
          XLA_AE_LINES_PKG.g_rec_lines.array_reversal_code(XLA_AE_LINES_PKG.g_LineNumber) := CONCAT('MPA_',l_bflow_method_code);
       END IF;

      --
      -- Depending on the Reversal Method setup, do a switch side or changes sign for the amounts
      --
      IF (XLA_AE_JOURNAL_ENTRY_PKG.g_cache_ledgers_info.ledger_reversal_option = 'SIDE') THEN
          XLA_AE_LINES_PKG.g_rec_lines.array_natural_side_code(XLA_AE_LINES_PKG.g_LineNumber) :=  l_acc_rev_natural_side_code;
      ELSE
          ---------------------------------------------------------------------------------------------------
          -- 4262811a Switch Sign
          ---------------------------------------------------------------------------------------------------
          XLA_AE_LINES_PKG.g_rec_lines.array_switch_side_flag(XLA_AE_LINES_PKG.g_LineNumber) := 'N';  -- 5052518
          XLA_AE_LINES_PKG.g_rec_lines.array_ledger_amount(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_ledger_amount(XLA_AE_LINES_PKG.g_LineNumber) * -1;
          XLA_AE_LINES_PKG.g_rec_lines.array_entered_amount(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_entered_amount(XLA_AE_LINES_PKG.g_LineNumber) * -1;
          -- 5132302
          XLA_AE_LINES_PKG.g_rec_lines.array_bflow_applied_to_amt(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_bflow_applied_to_amt(XLA_AE_LINES_PKG.g_LineNumber) * -1;

      END IF;

      -- 4955764
      XLA_AE_LINES_PKG.g_rec_lines.array_gl_date(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_HEADER_PKG.g_rec_header_new.array_gl_date(g_array_event(p_event_id).array_value_num('acc_rev_header_index'));


      XLA_AE_LINES_PKG.ValidateCurrentLine;
      XLA_AE_LINES_PKG.SetDebitCreditAmounts;

      XLA_AE_JOURNAL_ENTRY_PKG.UpdateJournalEntryStatus
               (p_hdr_idx           => g_array_event(p_event_id).array_value_num('acc_rev_header_index')
               ,p_balance_type_code => l_balance_type_code);

   END IF;

   -----------------------------------------------------------------------------------------
   -- 4262811 Multiperiod Accounting
   -----------------------------------------------------------------------------------------
     -- No MPA option is assigned.


END IF;
END IF;
--

--
IF (C_LEVEL_PROCEDURE >= g_log_level) THEN
   trace
      (p_msg      => 'END of AcctLineType_30'
      ,p_level    => C_LEVEL_PROCEDURE
      ,p_module   => l_log_module);
END IF;
--
EXCEPTION
  WHEN xla_exceptions_pkg.application_exception THEN
      RAISE;
  WHEN OTHERS THEN
       xla_exceptions_pkg.raise_message
           (p_location => 'XLA_00200_AAD_S_000010_BC_PKG.AcctLineType_30');
END AcctLineType_30;
--

---------------------------------------
--
-- PRIVATE FUNCTION
--         AcctLineType_31
--
---------------------------------------
PROCEDURE AcctLineType_31 (
  p_application_id        IN NUMBER
 ,p_event_id              IN NUMBER
 ,p_calculate_acctd_flag  IN VARCHAR2
 ,p_calculate_g_l_flag    IN VARCHAR2
 ,p_actual_flag           IN OUT VARCHAR2
 ,p_balance_type_code     OUT VARCHAR2
 ,p_gain_or_loss_ref      OUT VARCHAR2
 
--Invoice Distribution Type
 , p_source_15            IN VARCHAR2
 , p_source_15_meaning    IN VARCHAR2
--Accrue on Receipt Option
 , p_source_18            IN VARCHAR2
 , p_source_18_meaning    IN VARCHAR2
--Accounting Reversal Indicator
 , p_source_19            IN VARCHAR2
--Distribution Link Type
 , p_source_21            IN VARCHAR2
--Allocation to Main Distribution Identifier
 , p_source_23            IN NUMBER
--Invoice Identifier
 , p_source_24            IN NUMBER
--Invoice Distribution Identifier
 , p_source_30            IN NUMBER
--Payables Encumbrance Upgrade Credit Account
 , p_source_31            IN NUMBER
--Payables Encumbrance Upgrade Credit Amount
 , p_source_32            IN NUMBER
--Invoice Currency Code
 , p_source_33            IN VARCHAR2
--Payables Encumbrance Upgrade Credit Base Amount
 , p_source_34            IN NUMBER
--Payables Encumbrance Upgrade Debit Account
 , p_source_35            IN NUMBER
--Payables Encumbrance Upgrade Debit Amount
 , p_source_36            IN NUMBER
--Payables Encumbrance Upgrade Debit Base Amount
 , p_source_37            IN NUMBER
--Payables Encumbrance Upgrade Option
 , p_source_38            IN VARCHAR2
--Deferred Accounting End Date
 , p_source_43            IN DATE
--Deferred Accounting Option
 , p_source_44            IN VARCHAR2
--Deferred Accounting Start Date
 , p_source_45            IN DATE
--Override Accounted Amount Indicator
 , p_source_46            IN VARCHAR2
 , p_source_46_meaning    IN VARCHAR2
--Third Party Type
 , p_source_49            IN VARCHAR2
--Parent Reversal Identifier
 , p_source_50            IN NUMBER
--Invoice Distribution Statistical Amount
 , p_source_51            IN NUMBER
--Invoice Distribution Tax Line Identifier
 , p_source_52            IN NUMBER
--Invoice Distribution Tax Distribution Identifier from Tax
 , p_source_53            IN NUMBER
--Invoice Distribution Summary Tax Line Identifier
 , p_source_54            IN NUMBER
--Payables Upgrade Credit Encumbrance Type Identifier
 , p_source_55            IN NUMBER
--Payables Upgrade Debit Encumbrance Type Identifier
 , p_source_56            IN NUMBER
--Invoice Distribution Amount
 , p_source_57            IN NUMBER
--Purchase Order Distribution Identifier
 , p_source_58            IN NUMBER
--Self-Assessed Tax Flag
 , p_source_59            IN VARCHAR2
 , p_source_59_meaning    IN VARCHAR2
--Business Flow Purchasing Application Identifier
 , p_source_60            IN NUMBER
--Business Flow Purchase Order Distribution Type
 , p_source_61            IN VARCHAR2
--Business Flow Purchase Order Entity Code
 , p_source_62            IN VARCHAR2
--Business Flow Purchase Order Distribution Identifier
 , p_source_63            IN NUMBER
--Business Flow Purchasing Document Identifier
 , p_source_64            IN NUMBER
--Invoice Distribution Encumbrance Amount
 , p_source_65            IN NUMBER
--Invoice Distribution Encumbrance Ledger Amount
 , p_source_66            IN NUMBER
)
IS

l_component_type              VARCHAR2(80);
l_component_code              VARCHAR2(30);
l_component_type_code         VARCHAR2(1);
l_component_appl_id           INTEGER;
l_amb_context_code            VARCHAR2(30);
l_entity_code                 VARCHAR2(30);
l_event_class_code            VARCHAR2(30);
l_ae_header_id                NUMBER;
l_event_type_code             VARCHAR2(30);
l_line_definition_code        VARCHAR2(30);
l_line_definition_owner_code  VARCHAR2(1);
--
-- adr variables
l_segment                     VARCHAR2(30);
l_ccid                        NUMBER;
l_adr_transaction_coa_id      NUMBER;
l_adr_accounting_coa_id       NUMBER;
l_adr_flexfield_segment_code  VARCHAR2(30);
l_adr_flex_value_set_id       NUMBER;
l_adr_value_type_code         VARCHAR2(30);
l_adr_value_combination_id    NUMBER;
l_adr_value_segment_code      VARCHAR2(30);

l_bflow_method_code           VARCHAR2(30);  -- 4219869 Business Flow
l_bflow_class_code            VARCHAR2(30);  -- 4219869 Business Flow
l_inherit_desc_flag           VARCHAR2(1);   -- 4219869 Business Flow
l_budgetary_control_flag      VARCHAR2(1);   -- 4458381 Public Sector Enh

-- 4262811 Variables ------------------------------------------------------------------------------------------
l_entered_amt_idx             NUMBER;
l_accted_amt_idx              NUMBER;
l_acc_rev_flag                VARCHAR2(1);
l_accrual_line_num            NUMBER;
l_tmp_amt                     NUMBER;
l_acc_rev_natural_side_code   VARCHAR2(1);

l_num_entries                 NUMBER;
l_gl_dates                    xla_ae_journal_entry_pkg.t_array_date;
l_accted_amts                 xla_ae_journal_entry_pkg.t_array_num;
l_entered_amts                xla_ae_journal_entry_pkg.t_array_num;
l_period_names                xla_ae_journal_entry_pkg.t_array_V15L;
l_recog_line_1                NUMBER;
l_recog_line_2                NUMBER;

l_bflow_applied_to_amt_idx    NUMBER;                                -- 5132302
l_bflow_applied_to_amt        NUMBER;                                -- 5132302
l_bflow_applied_to_amts       xla_ae_journal_entry_pkg.t_array_num;  -- 5132302

l_event_id                    NUMBER;  -- To handle MPA header Description: xla_ae_header_pkg.SetHdrDescription

--l_rounding_ccy                VARCHAR2(15); -- To handle MPA rounding  4262811b
l_same_currency               BOOLEAN;        -- To handle MPA rounding  4262811b

---------------------------------------------------------------------------------------------------------------


--
-- bulk performance
--
l_balance_type_code           VARCHAR2(1);
l_rec_acct_attrs              XLA_AE_LINES_PKG.t_rec_acct_attrs;
l_log_module                  VARCHAR2(240);

--
-- Upgrade strategy
--
l_actual_upg_option           VARCHAR2(1);
l_enc_upg_option           VARCHAR2(1);

--
BEGIN
--
IF g_log_enabled THEN
      l_log_module := C_DEFAULT_MODULE||'.AcctLineType_31';
END IF;
--
IF (C_LEVEL_PROCEDURE >= g_log_level) THEN

      trace
         (p_msg      => 'BEGIN of AcctLineType_31'
         ,p_level    => C_LEVEL_PROCEDURE
         ,p_module   => l_log_module);

END IF;
--
l_component_type             := 'AMB_JLT';
l_component_code             := 'AP_INV_NON_REC_TAX_PO_ENC';
l_component_type_code        := 'S';
l_component_appl_id          :=  200;
l_amb_context_code           := 'DEFAULT';
l_entity_code                := 'AP_INVOICES';
l_event_class_code           := 'INVOICES';
l_event_type_code            := 'INVOICES_ALL';
l_line_definition_owner_code := 'S';
l_line_definition_code       := 'ENC_INVOICES_ALL';
--
l_balance_type_code          := 'E';
l_segment                     := NULL;
l_ccid                        := NULL;
l_adr_transaction_coa_id      := NULL;
l_adr_accounting_coa_id       := NULL;
l_adr_flexfield_segment_code  := NULL;
l_adr_flex_value_set_id       := NULL;
l_adr_value_type_code         := NULL;
l_adr_value_combination_id    := NULL;
l_adr_value_segment_code      := NULL;

l_bflow_method_code          := 'PRIOR_ENTRY';   -- 4219869 Business Flow
l_bflow_class_code           := 'PO_ENCUMBRANCE';    -- 4219869 Business Flow
l_inherit_desc_flag          := 'Y';   -- 4219869 Business Flow
l_budgetary_control_flag     := 'Y';

l_bflow_applied_to_amt_idx   := NULL; -- 5132302
l_bflow_applied_to_amt       := NULL; -- 5132302
l_entered_amt_idx            := NULL;          -- 4262811
l_accted_amt_idx             := NULL;          -- 4262811
l_acc_rev_flag               := NULL;          -- 4262811
l_accrual_line_num           := NULL;          -- 4262811
l_tmp_amt                    := NULL;          -- 4262811
--
 
IF XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id = XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.ledger_id OR
    l_balance_type_code <> 'B' THEN
IF p_source_58 IS NOT NULL AND 
NVL(p_source_15,'
') =  'NONREC_TAX' AND 
NVL(p_source_59,'
') <>  'Y' AND 
NVL(p_source_18,'
') <>  'Y'
 THEN 

   --
   XLA_AE_LINES_PKG.SetNewLine;

   p_balance_type_code          := l_balance_type_code;
   -- set the flag so later we will know whether the gain loss line needs to be created
   
   IF(l_balance_type_code = 'A' and p_actual_flag is null) THEN
     p_actual_flag :='A';
   END IF;

   --
   -- bulk performance
   --
   XLA_AE_LINES_PKG.set_ae_header_id (p_ae_header_id => p_event_id ,
                                      p_header_num   => 0); -- 4262811
   --
   -- set accounting line options
   --
   l_ae_header_id:= xla_ae_lines_pkg.SetAcctLineOption(
           p_natural_side_code          => 'C'
         , p_gain_or_loss_flag          => 'N'
         , p_gl_transfer_mode_code      => 'S'
         , p_acct_entry_type_code       => 'E'
         , p_switch_side_flag           => 'Y'
         , p_merge_duplicate_code       => 'N'
         );
   --
   l_acc_rev_natural_side_code := 'D';  -- 4262811
   -- 
   --
   -- set accounting line type info
   --
   xla_ae_lines_pkg.SetAcctLineType
      (p_component_type             => l_component_type
      ,p_event_type_code            => l_event_type_code
      ,p_line_definition_owner_code => l_line_definition_owner_code
      ,p_line_definition_code       => l_line_definition_code
      ,p_accounting_line_code       => l_component_code
      ,p_accounting_line_type_code  => l_component_type_code
      ,p_accounting_line_appl_id    => l_component_appl_id
      ,p_amb_context_code           => l_amb_context_code
      ,p_entity_code                => l_entity_code
      ,p_event_class_code           => l_event_class_code);
   --
   -- set accounting class
   --
   xla_ae_lines_pkg.SetAcctClass(
           p_accounting_class_code  => 'PURCHASE_ORDER'
         , p_ae_header_id           => l_ae_header_id
         );

   --
   -- set rounding class
   --
   XLA_AE_LINES_PKG.g_rec_lines.array_rounding_class(XLA_AE_LINES_PKG.g_LineNumber) :=
                      'PURCHASE_ORDER';

   --
   xla_ae_lines_pkg.g_rec_lines.array_calculate_acctd_flag(xla_ae_lines_pkg.g_LineNumber) := p_calculate_acctd_flag;
   xla_ae_lines_pkg.g_rec_lines.array_calculate_g_l_flag(xla_ae_lines_pkg.g_LineNumber) := p_calculate_g_l_flag;
   --
   -- bulk performance
   --
   XLA_AE_LINES_PKG.g_rec_lines.array_balance_type_code(XLA_AE_LINES_PKG.g_LineNumber) := l_balance_type_code;

   XLA_AE_LINES_PKG.g_rec_lines.array_ledger_id(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id;

   -- 4955764
   XLA_AE_LINES_PKG.g_rec_lines.array_gl_date(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_HEADER_PKG.g_rec_header_new.array_gl_date(g_array_event(p_event_id).array_value_num('header_index'));

   -- 4458381 Public Sector Enh
   
   --
   -- set accounting attributes for the line type
   --
   l_entered_amt_idx := 24;
   l_accted_amt_idx  := 26;
   l_bflow_applied_to_amt_idx  := 7;  -- 5132302
   l_rec_acct_attrs.array_acct_attr_code(1) := 'ACCOUNTING_REVERSAL_OPTION';
   l_rec_acct_attrs.array_char_value(1)  := p_source_19;
   l_rec_acct_attrs.array_acct_attr_code(2) := 'ALLOC_TO_APPLICATION_ID';
   l_rec_acct_attrs.array_num_value(2)  := 
xla_ae_sources_pkg.GetSystemSourceNum(
   p_source_code           => 'XLA_EVENT_APPL_ID'
 , p_source_type_code      => 'Y'
 , p_source_application_id =>  602
);
   l_rec_acct_attrs.array_acct_attr_code(3) := 'ALLOC_TO_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(3)  := p_source_21;
   l_rec_acct_attrs.array_acct_attr_code(4) := 'ALLOC_TO_ENTITY_CODE';
   l_rec_acct_attrs.array_char_value(4)  := 
xla_ae_sources_pkg.GetSystemSourceChar(
   p_source_code           => 'XLA_ENTITY_CODE'
 , p_source_type_code      => 'Y'
 , p_source_application_id =>  602
);
   l_rec_acct_attrs.array_acct_attr_code(5) := 'ALLOC_TO_FIRST_DIST_ID';
   l_rec_acct_attrs.array_num_value(5)  :=  to_char(p_source_23);
   l_rec_acct_attrs.array_acct_attr_code(6) := 'ALLOC_TO_FIRST_SYS_TRAN_ID';
   l_rec_acct_attrs.array_num_value(6)  :=  to_char(p_source_24);
   l_rec_acct_attrs.array_acct_attr_code(7) := 'APPLIED_TO_AMOUNT';
   l_rec_acct_attrs.array_num_value(7)  := p_source_57;
   l_rec_acct_attrs.array_acct_attr_code(8) := 'APPLIED_TO_APPLICATION_ID';
   l_rec_acct_attrs.array_num_value(8)  := p_source_60;
   l_rec_acct_attrs.array_acct_attr_code(9) := 'APPLIED_TO_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(9)  := p_source_61;
   l_rec_acct_attrs.array_acct_attr_code(10) := 'APPLIED_TO_ENTITY_CODE';
   l_rec_acct_attrs.array_char_value(10)  := p_source_62;
   l_rec_acct_attrs.array_acct_attr_code(11) := 'APPLIED_TO_FIRST_DIST_ID';
   l_rec_acct_attrs.array_num_value(11)  :=  to_char(p_source_63);
   l_rec_acct_attrs.array_acct_attr_code(12) := 'APPLIED_TO_FIRST_SYS_TRAN_ID';
   l_rec_acct_attrs.array_num_value(12)  :=  to_char(p_source_64);
   l_rec_acct_attrs.array_acct_attr_code(13) := 'DISTRIBUTION_IDENTIFIER_1';
   l_rec_acct_attrs.array_num_value(13)  :=  to_char(p_source_30);
   l_rec_acct_attrs.array_acct_attr_code(14) := 'DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(14)  := p_source_21;
   l_rec_acct_attrs.array_acct_attr_code(15) := 'ENC_UPG_CR_CCID';
   l_rec_acct_attrs.array_num_value(15)  := p_source_31;
   l_rec_acct_attrs.array_acct_attr_code(16) := 'ENC_UPG_CR_ENTERED_AMT';
   l_rec_acct_attrs.array_num_value(16)  := p_source_32;
   l_rec_acct_attrs.array_acct_attr_code(17) := 'ENC_UPG_CR_ENTERED_CURR';
   l_rec_acct_attrs.array_char_value(17)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(18) := 'ENC_UPG_CR_LEDGER_AMT';
   l_rec_acct_attrs.array_num_value(18)  := p_source_34;
   l_rec_acct_attrs.array_acct_attr_code(19) := 'ENC_UPG_DR_CCID';
   l_rec_acct_attrs.array_num_value(19)  := p_source_35;
   l_rec_acct_attrs.array_acct_attr_code(20) := 'ENC_UPG_DR_ENTERED_AMT';
   l_rec_acct_attrs.array_num_value(20)  := p_source_36;
   l_rec_acct_attrs.array_acct_attr_code(21) := 'ENC_UPG_DR_ENTERED_CURR';
   l_rec_acct_attrs.array_char_value(21)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(22) := 'ENC_UPG_DR_LEDGER_AMT';
   l_rec_acct_attrs.array_num_value(22)  := p_source_37;
   l_rec_acct_attrs.array_acct_attr_code(23) := 'ENC_UPG_OPTION';
   l_rec_acct_attrs.array_char_value(23)  := p_source_38;
   l_rec_acct_attrs.array_acct_attr_code(24) := 'ENTERED_CURRENCY_AMOUNT';
   l_rec_acct_attrs.array_num_value(24)  := p_source_65;
   l_rec_acct_attrs.array_acct_attr_code(25) := 'ENTERED_CURRENCY_CODE';
   l_rec_acct_attrs.array_char_value(25)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(26) := 'LEDGER_AMOUNT';
   l_rec_acct_attrs.array_num_value(26)  := p_source_66;
   l_rec_acct_attrs.array_acct_attr_code(27) := 'MULTIPERIOD_END_DATE';
   l_rec_acct_attrs.array_date_value(27)  := p_source_43;
   l_rec_acct_attrs.array_acct_attr_code(28) := 'MULTIPERIOD_OPTION';
   l_rec_acct_attrs.array_char_value(28)  := p_source_44;
   l_rec_acct_attrs.array_acct_attr_code(29) := 'MULTIPERIOD_START_DATE';
   l_rec_acct_attrs.array_date_value(29)  := p_source_45;
   l_rec_acct_attrs.array_acct_attr_code(30) := 'OVERRIDE_ACCTD_AMT_FLAG';
   l_rec_acct_attrs.array_char_value(30)  := p_source_46;
   l_rec_acct_attrs.array_acct_attr_code(31) := 'PARTY_TYPE';
   l_rec_acct_attrs.array_char_value(31)  := p_source_49;
   l_rec_acct_attrs.array_acct_attr_code(32) := 'REVERSED_DISTRIBUTION_ID1';
   l_rec_acct_attrs.array_num_value(32)  :=  to_char(p_source_50);
   l_rec_acct_attrs.array_acct_attr_code(33) := 'REVERSED_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(33)  := p_source_21;
   l_rec_acct_attrs.array_acct_attr_code(34) := 'STATISTICAL_AMOUNT';
   l_rec_acct_attrs.array_num_value(34)  := p_source_51;
   l_rec_acct_attrs.array_acct_attr_code(35) := 'TAX_LINE_REF_ID';
   l_rec_acct_attrs.array_num_value(35)  := p_source_52;
   l_rec_acct_attrs.array_acct_attr_code(36) := 'TAX_REC_NREC_DIST_REF_ID';
   l_rec_acct_attrs.array_num_value(36)  := p_source_53;
   l_rec_acct_attrs.array_acct_attr_code(37) := 'TAX_SUMMARY_LINE_REF_ID';
   l_rec_acct_attrs.array_num_value(37)  := p_source_54;
   l_rec_acct_attrs.array_acct_attr_code(38) := 'UPG_CR_ENC_TYPE_ID';
   l_rec_acct_attrs.array_num_value(38)  := p_source_55;
   l_rec_acct_attrs.array_acct_attr_code(39) := 'UPG_DR_ENC_TYPE_ID';
   l_rec_acct_attrs.array_num_value(39)  := p_source_56;

   XLA_AE_LINES_PKG.SetLineAcctAttrs(l_rec_acct_attrs);
   p_gain_or_loss_ref  := XLA_AE_LINES_PKG.g_rec_lines.array_gain_or_loss_ref(XLA_AE_LINES_PKG.g_LineNumber);

   ---------------------------------------------------------------------------------------------------------------
   -- 4336173 -- assign Business Flow Class (replace code in xla_ae_lines_pkg.Business_Flow_Validation)
   ---------------------------------------------------------------------------------------------------------------
   XLA_AE_LINES_PKG.g_rec_lines.array_business_class_code(XLA_AE_LINES_PKG.g_LineNumber) := l_bflow_class_code;

   l_actual_upg_option  := XLA_AE_LINES_PKG.g_rec_lines.array_actual_upg_option(XLA_AE_LINES_PKG.g_LineNumber);
   l_enc_upg_option     := XLA_AE_LINES_PKG.g_rec_lines.array_enc_upg_option(XLA_AE_LINES_PKG.g_LineNumber);

   IF xla_accounting_cache_pkg.GetValueChar
         (p_source_code         => 'LEDGER_CATEGORY_CODE'
         ,p_target_ledger_id    => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id) IN ('PRIMARY','ALC')
   AND l_bflow_method_code = 'PRIOR_ENTRY'
--   AND (l_actual_upg_option = 'Y' OR l_enc_upg_option = 'Y') Bug 4922099
   AND ( (NVL(l_actual_upg_option, 'N') IN ('Y', 'O')) OR
         (NVL(l_enc_upg_option, 'N') IN ('Y', 'O'))
       )
   THEN
         xla_ae_lines_pkg.BflowUpgEntry
           (p_business_method_code    => l_bflow_method_code
           ,p_business_class_code     => l_bflow_class_code
           ,p_balance_type            => l_balance_type_code);
   ELSE
      NULL;
XLA_AE_LINES_PKG.business_flow_validation(
                                p_business_method_code     => l_bflow_method_code
                               ,p_business_class_code      => l_bflow_class_code
                               ,p_inherit_description_flag => l_inherit_desc_flag);
   END IF;

   --
   -- call analytical criteria
   --
   -- Inherited Analytical Criteria for business flow method of Prior Entry.
   --
   -- call description
   --
   -- No description or it is inherited.
   --
   -- call ADRs
   -- Bug 4922099
   --
   IF ( (l_bflow_method_code <> 'PRIOR_ENTRY') OR
        (NVL(l_actual_upg_option, 'N') = 'O') OR
        (NVL(l_enc_upg_option, 'N') = 'O')
      )
   THEN
   NULL;
   --
   --
   
   --
   --
   END IF;
   --
   -- Bug 4922099
   IF ( ( (NVL(l_actual_upg_option, 'N') = 'O') OR
          (NVL(l_enc_upg_option, 'N') = 'O')
        ) AND
        (l_bflow_method_code = 'PRIOR_ENTRY')
      )
   THEN
      IF
      --
      1 = 1
      --
      THEN
      xla_accounting_err_pkg.build_message
                                    (p_appli_s_name            => 'XLA'
                                    ,p_msg_name                => 'XLA_UPG_OVERRIDE_ADR_UNDEFINED'
                                    ,p_token_1                 => 'LINE_NUMBER'
                                    ,p_value_1                 => XLA_AE_LINES_PKG.g_LineNumber
                                    ,p_token_2                 => 'LINE_TYPE_NAME'
                                    ,p_value_2                 => XLA_AE_SOURCES_PKG.GetComponentName (
                                                                             l_component_type
                                                                            ,l_component_code
                                                                            ,l_component_type_code
                                                                            ,l_component_appl_id
                                                                            ,l_amb_context_code
                                                                            ,l_entity_code
                                                                            ,l_event_class_code
                                                                           )
                                    ,p_token_3                 => 'OWNER'
                                    ,p_value_3                 => xla_lookups_pkg.get_meaning(
                                                                          p_lookup_type     => 'XLA_OWNER_TYPE'
                                                                          ,p_lookup_code    => l_component_type_code
                                                                         )
                                    ,p_token_4                 => 'PRODUCT_NAME'
                                    ,p_value_4                 => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.application_name
                                    ,p_entity_id               => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.entity_id
                                    ,p_event_id                => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.event_id
                                    ,p_ledger_id               => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id
                                    ,p_ae_header_id            =>  NULL
                                       );

        IF (C_LEVEL_ERROR>= g_log_level) THEN
                 trace
                      (p_msg      => 'ERROR: XLA_UPG_OVERRIDE_ADR_UNDEFINED'
                      ,p_level    => C_LEVEL_ERROR
                      ,p_module   => l_log_module);
        END IF;
      END IF;
   END IF;
   --
   --
   ------------------------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- NOTE: XLA_AE_LINES_PKG.ValidateCurrentLine should NOT be generated if business flow method is
   -- Prior Entry.  Currently, the following code is always generated.
   ------------------------------------------------------------------------------------------------
   -- No ValidateCurrentLine for business flow method of Prior Entry

   ------------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- Populated credit and debit amounts -- Need to generate this within IF <condition>
   ------------------------------------------------------------------------------------
   XLA_AE_LINES_PKG.SetDebitCreditAmounts;

   ----------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- Update journal entry status -- Need to generate this within IF <condition>
   ----------------------------------------------------------------------------------
   XLA_AE_JOURNAL_ENTRY_PKG.UpdateJournalEntryStatus
         (p_hdr_idx => g_array_event(p_event_id).array_value_num('header_index')
         ,p_balance_type_code => l_balance_type_code
         );

   -------------------------------------------------------------------------------------------
   -- 4262811 - Generate the Accrual Reversal lines
   -------------------------------------------------------------------------------------------
   BEGIN
      l_acc_rev_flag := XLA_AE_HEADER_PKG.g_rec_header_new.array_accrual_reversal_flag
                              (g_array_event(p_event_id).array_value_num('header_index'));
      IF l_acc_rev_flag IS NULL THEN
         l_acc_rev_flag := 'N';
      END IF;
   EXCEPTION
      WHEN OTHERS THEN
         l_acc_rev_flag := 'N';
   END;
   --
   IF (l_acc_rev_flag = 'Y') THEN

       -- 4645092  ------------------------------------------------------------------------------
       -- To allow MPA report to determine if it should generate report process
       XLA_ACCOUNTING_PKG.g_mpa_accrual_exists := 'Y';
       ------------------------------------------------------------------------------------------

       l_accrual_line_num := XLA_AE_LINES_PKG.g_LineNumber;
       XLA_AE_LINES_PKG.CopyLineInfo(l_accrual_line_num);
   -- added call to set_ccid to execute mapping  for secondary accrual reversal entries bug 7444204
   -- call ADRs
   -- Bug 4922099
   --
   IF ( (l_bflow_method_code <> 'PRIOR_ENTRY') OR
        (NVL(l_actual_upg_option, 'N') = 'O') OR
        (NVL(l_enc_upg_option, 'N') = 'O')
      )
   THEN
   NULL;
   --
   --
   
   --
   --
   END IF;

       --
       -- Update the line information that should be overwritten
       --
       XLA_AE_LINES_PKG.set_ae_header_id(p_ae_header_id => p_event_id ,
                                         p_header_num   => 1);
       XLA_AE_LINES_PKG.g_rec_lines.array_header_num(XLA_AE_LINES_PKG.g_LineNumber)  :=1;

       XLA_AE_LINES_PKG.g_rec_lines.array_business_class_code(XLA_AE_LINES_PKG.g_LineNumber) := NULL; -- 4669271

       IF l_bflow_method_code <> 'NONE' THEN  -- 4655713b
          XLA_AE_LINES_PKG.g_rec_lines.array_reversal_code(XLA_AE_LINES_PKG.g_LineNumber) := CONCAT('MPA_',l_bflow_method_code);
       END IF;

      --
      -- Depending on the Reversal Method setup, do a switch side or changes sign for the amounts
      --
      IF (XLA_AE_JOURNAL_ENTRY_PKG.g_cache_ledgers_info.ledger_reversal_option = 'SIDE') THEN
          XLA_AE_LINES_PKG.g_rec_lines.array_natural_side_code(XLA_AE_LINES_PKG.g_LineNumber) :=  l_acc_rev_natural_side_code;
      ELSE
          ---------------------------------------------------------------------------------------------------
          -- 4262811a Switch Sign
          ---------------------------------------------------------------------------------------------------
          XLA_AE_LINES_PKG.g_rec_lines.array_switch_side_flag(XLA_AE_LINES_PKG.g_LineNumber) := 'N';  -- 5052518
          XLA_AE_LINES_PKG.g_rec_lines.array_ledger_amount(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_ledger_amount(XLA_AE_LINES_PKG.g_LineNumber) * -1;
          XLA_AE_LINES_PKG.g_rec_lines.array_entered_amount(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_entered_amount(XLA_AE_LINES_PKG.g_LineNumber) * -1;
          -- 5132302
          XLA_AE_LINES_PKG.g_rec_lines.array_bflow_applied_to_amt(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_bflow_applied_to_amt(XLA_AE_LINES_PKG.g_LineNumber) * -1;

      END IF;

      -- 4955764
      XLA_AE_LINES_PKG.g_rec_lines.array_gl_date(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_HEADER_PKG.g_rec_header_new.array_gl_date(g_array_event(p_event_id).array_value_num('acc_rev_header_index'));


      XLA_AE_LINES_PKG.ValidateCurrentLine;
      XLA_AE_LINES_PKG.SetDebitCreditAmounts;

      XLA_AE_JOURNAL_ENTRY_PKG.UpdateJournalEntryStatus
               (p_hdr_idx           => g_array_event(p_event_id).array_value_num('acc_rev_header_index')
               ,p_balance_type_code => l_balance_type_code);

   END IF;

   -----------------------------------------------------------------------------------------
   -- 4262811 Multiperiod Accounting
   -----------------------------------------------------------------------------------------
     -- No MPA option is assigned.


END IF;
END IF;
--

--
IF (C_LEVEL_PROCEDURE >= g_log_level) THEN
   trace
      (p_msg      => 'END of AcctLineType_31'
      ,p_level    => C_LEVEL_PROCEDURE
      ,p_module   => l_log_module);
END IF;
--
EXCEPTION
  WHEN xla_exceptions_pkg.application_exception THEN
      RAISE;
  WHEN OTHERS THEN
       xla_exceptions_pkg.raise_message
           (p_location => 'XLA_00200_AAD_S_000010_BC_PKG.AcctLineType_31');
END AcctLineType_31;
--

---------------------------------------
--
-- PRIVATE FUNCTION
--         AcctLineType_32
--
---------------------------------------
PROCEDURE AcctLineType_32 (
  p_application_id        IN NUMBER
 ,p_event_id              IN NUMBER
 ,p_calculate_acctd_flag  IN VARCHAR2
 ,p_calculate_g_l_flag    IN VARCHAR2
 ,p_actual_flag           IN OUT VARCHAR2
 ,p_balance_type_code     OUT VARCHAR2
 ,p_gain_or_loss_ref      OUT VARCHAR2
 
--Invoice Distribution Type
 , p_source_15            IN VARCHAR2
 , p_source_15_meaning    IN VARCHAR2
--Accrue on Receipt Option
 , p_source_18            IN VARCHAR2
 , p_source_18_meaning    IN VARCHAR2
--Accounting Reversal Indicator
 , p_source_19            IN VARCHAR2
--Distribution Link Type
 , p_source_21            IN VARCHAR2
--Allocation to Main Distribution Identifier
 , p_source_23            IN NUMBER
--Invoice Identifier
 , p_source_24            IN NUMBER
--Invoice Distribution Identifier
 , p_source_30            IN NUMBER
--Payables Encumbrance Upgrade Credit Account
 , p_source_31            IN NUMBER
--Payables Encumbrance Upgrade Credit Amount
 , p_source_32            IN NUMBER
--Invoice Currency Code
 , p_source_33            IN VARCHAR2
--Payables Encumbrance Upgrade Credit Base Amount
 , p_source_34            IN NUMBER
--Payables Encumbrance Upgrade Debit Account
 , p_source_35            IN NUMBER
--Payables Encumbrance Upgrade Debit Amount
 , p_source_36            IN NUMBER
--Payables Encumbrance Upgrade Debit Base Amount
 , p_source_37            IN NUMBER
--Payables Encumbrance Upgrade Option
 , p_source_38            IN VARCHAR2
--Deferred Accounting End Date
 , p_source_43            IN DATE
--Deferred Accounting Option
 , p_source_44            IN VARCHAR2
--Deferred Accounting Start Date
 , p_source_45            IN DATE
--Override Accounted Amount Indicator
 , p_source_46            IN VARCHAR2
 , p_source_46_meaning    IN VARCHAR2
--Third Party Type
 , p_source_49            IN VARCHAR2
--Parent Reversal Identifier
 , p_source_50            IN NUMBER
--Invoice Distribution Statistical Amount
 , p_source_51            IN NUMBER
--Invoice Distribution Tax Line Identifier
 , p_source_52            IN NUMBER
--Invoice Distribution Tax Distribution Identifier from Tax
 , p_source_53            IN NUMBER
--Invoice Distribution Summary Tax Line Identifier
 , p_source_54            IN NUMBER
--Payables Upgrade Credit Encumbrance Type Identifier
 , p_source_55            IN NUMBER
--Payables Upgrade Debit Encumbrance Type Identifier
 , p_source_56            IN NUMBER
--Invoice Distribution Amount
 , p_source_57            IN NUMBER
--Purchase Order Distribution Identifier
 , p_source_58            IN NUMBER
--Business Flow Purchasing Application Identifier
 , p_source_60            IN NUMBER
--Business Flow Purchase Order Distribution Type
 , p_source_61            IN VARCHAR2
--Business Flow Purchase Order Entity Code
 , p_source_62            IN VARCHAR2
--Business Flow Purchase Order Distribution Identifier
 , p_source_63            IN NUMBER
--Business Flow Purchasing Document Identifier
 , p_source_64            IN NUMBER
--Invoice Distribution Encumbrance Amount
 , p_source_65            IN NUMBER
--Invoice Distribution Encumbrance Ledger Amount
 , p_source_66            IN NUMBER
)
IS

l_component_type              VARCHAR2(80);
l_component_code              VARCHAR2(30);
l_component_type_code         VARCHAR2(1);
l_component_appl_id           INTEGER;
l_amb_context_code            VARCHAR2(30);
l_entity_code                 VARCHAR2(30);
l_event_class_code            VARCHAR2(30);
l_ae_header_id                NUMBER;
l_event_type_code             VARCHAR2(30);
l_line_definition_code        VARCHAR2(30);
l_line_definition_owner_code  VARCHAR2(1);
--
-- adr variables
l_segment                     VARCHAR2(30);
l_ccid                        NUMBER;
l_adr_transaction_coa_id      NUMBER;
l_adr_accounting_coa_id       NUMBER;
l_adr_flexfield_segment_code  VARCHAR2(30);
l_adr_flex_value_set_id       NUMBER;
l_adr_value_type_code         VARCHAR2(30);
l_adr_value_combination_id    NUMBER;
l_adr_value_segment_code      VARCHAR2(30);

l_bflow_method_code           VARCHAR2(30);  -- 4219869 Business Flow
l_bflow_class_code            VARCHAR2(30);  -- 4219869 Business Flow
l_inherit_desc_flag           VARCHAR2(1);   -- 4219869 Business Flow
l_budgetary_control_flag      VARCHAR2(1);   -- 4458381 Public Sector Enh

-- 4262811 Variables ------------------------------------------------------------------------------------------
l_entered_amt_idx             NUMBER;
l_accted_amt_idx              NUMBER;
l_acc_rev_flag                VARCHAR2(1);
l_accrual_line_num            NUMBER;
l_tmp_amt                     NUMBER;
l_acc_rev_natural_side_code   VARCHAR2(1);

l_num_entries                 NUMBER;
l_gl_dates                    xla_ae_journal_entry_pkg.t_array_date;
l_accted_amts                 xla_ae_journal_entry_pkg.t_array_num;
l_entered_amts                xla_ae_journal_entry_pkg.t_array_num;
l_period_names                xla_ae_journal_entry_pkg.t_array_V15L;
l_recog_line_1                NUMBER;
l_recog_line_2                NUMBER;

l_bflow_applied_to_amt_idx    NUMBER;                                -- 5132302
l_bflow_applied_to_amt        NUMBER;                                -- 5132302
l_bflow_applied_to_amts       xla_ae_journal_entry_pkg.t_array_num;  -- 5132302

l_event_id                    NUMBER;  -- To handle MPA header Description: xla_ae_header_pkg.SetHdrDescription

--l_rounding_ccy                VARCHAR2(15); -- To handle MPA rounding  4262811b
l_same_currency               BOOLEAN;        -- To handle MPA rounding  4262811b

---------------------------------------------------------------------------------------------------------------


--
-- bulk performance
--
l_balance_type_code           VARCHAR2(1);
l_rec_acct_attrs              XLA_AE_LINES_PKG.t_rec_acct_attrs;
l_log_module                  VARCHAR2(240);

--
-- Upgrade strategy
--
l_actual_upg_option           VARCHAR2(1);
l_enc_upg_option           VARCHAR2(1);

--
BEGIN
--
IF g_log_enabled THEN
      l_log_module := C_DEFAULT_MODULE||'.AcctLineType_32';
END IF;
--
IF (C_LEVEL_PROCEDURE >= g_log_level) THEN

      trace
         (p_msg      => 'BEGIN of AcctLineType_32'
         ,p_level    => C_LEVEL_PROCEDURE
         ,p_module   => l_log_module);

END IF;
--
l_component_type             := 'AMB_JLT';
l_component_code             := 'AP_INV_PO_ENC';
l_component_type_code        := 'S';
l_component_appl_id          :=  200;
l_amb_context_code           := 'DEFAULT';
l_entity_code                := 'AP_INVOICES';
l_event_class_code           := 'INVOICES';
l_event_type_code            := 'INVOICES_ALL';
l_line_definition_owner_code := 'S';
l_line_definition_code       := 'ENC_INVOICES_ALL';
--
l_balance_type_code          := 'E';
l_segment                     := NULL;
l_ccid                        := NULL;
l_adr_transaction_coa_id      := NULL;
l_adr_accounting_coa_id       := NULL;
l_adr_flexfield_segment_code  := NULL;
l_adr_flex_value_set_id       := NULL;
l_adr_value_type_code         := NULL;
l_adr_value_combination_id    := NULL;
l_adr_value_segment_code      := NULL;

l_bflow_method_code          := 'PRIOR_ENTRY';   -- 4219869 Business Flow
l_bflow_class_code           := 'PO_ENCUMBRANCE';    -- 4219869 Business Flow
l_inherit_desc_flag          := 'Y';   -- 4219869 Business Flow
l_budgetary_control_flag     := 'Y';

l_bflow_applied_to_amt_idx   := NULL; -- 5132302
l_bflow_applied_to_amt       := NULL; -- 5132302
l_entered_amt_idx            := NULL;          -- 4262811
l_accted_amt_idx             := NULL;          -- 4262811
l_acc_rev_flag               := NULL;          -- 4262811
l_accrual_line_num           := NULL;          -- 4262811
l_tmp_amt                    := NULL;          -- 4262811
--
 
IF XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id = XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.ledger_id OR
    l_balance_type_code <> 'B' THEN
IF p_source_58 IS NOT NULL AND 
(NVL(p_source_15,'
') =  'ACCRUAL' OR 
NVL(p_source_15,'
') =  'ITEM') AND 
NVL(p_source_18,'
') <>  'Y'
 THEN 

   --
   XLA_AE_LINES_PKG.SetNewLine;

   p_balance_type_code          := l_balance_type_code;
   -- set the flag so later we will know whether the gain loss line needs to be created
   
   IF(l_balance_type_code = 'A' and p_actual_flag is null) THEN
     p_actual_flag :='A';
   END IF;

   --
   -- bulk performance
   --
   XLA_AE_LINES_PKG.set_ae_header_id (p_ae_header_id => p_event_id ,
                                      p_header_num   => 0); -- 4262811
   --
   -- set accounting line options
   --
   l_ae_header_id:= xla_ae_lines_pkg.SetAcctLineOption(
           p_natural_side_code          => 'C'
         , p_gain_or_loss_flag          => 'N'
         , p_gl_transfer_mode_code      => 'S'
         , p_acct_entry_type_code       => 'E'
         , p_switch_side_flag           => 'Y'
         , p_merge_duplicate_code       => 'N'
         );
   --
   l_acc_rev_natural_side_code := 'D';  -- 4262811
   -- 
   --
   -- set accounting line type info
   --
   xla_ae_lines_pkg.SetAcctLineType
      (p_component_type             => l_component_type
      ,p_event_type_code            => l_event_type_code
      ,p_line_definition_owner_code => l_line_definition_owner_code
      ,p_line_definition_code       => l_line_definition_code
      ,p_accounting_line_code       => l_component_code
      ,p_accounting_line_type_code  => l_component_type_code
      ,p_accounting_line_appl_id    => l_component_appl_id
      ,p_amb_context_code           => l_amb_context_code
      ,p_entity_code                => l_entity_code
      ,p_event_class_code           => l_event_class_code);
   --
   -- set accounting class
   --
   xla_ae_lines_pkg.SetAcctClass(
           p_accounting_class_code  => 'PURCHASE_ORDER'
         , p_ae_header_id           => l_ae_header_id
         );

   --
   -- set rounding class
   --
   XLA_AE_LINES_PKG.g_rec_lines.array_rounding_class(XLA_AE_LINES_PKG.g_LineNumber) :=
                      'PURCHASE_ORDER';

   --
   xla_ae_lines_pkg.g_rec_lines.array_calculate_acctd_flag(xla_ae_lines_pkg.g_LineNumber) := p_calculate_acctd_flag;
   xla_ae_lines_pkg.g_rec_lines.array_calculate_g_l_flag(xla_ae_lines_pkg.g_LineNumber) := p_calculate_g_l_flag;
   --
   -- bulk performance
   --
   XLA_AE_LINES_PKG.g_rec_lines.array_balance_type_code(XLA_AE_LINES_PKG.g_LineNumber) := l_balance_type_code;

   XLA_AE_LINES_PKG.g_rec_lines.array_ledger_id(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id;

   -- 4955764
   XLA_AE_LINES_PKG.g_rec_lines.array_gl_date(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_HEADER_PKG.g_rec_header_new.array_gl_date(g_array_event(p_event_id).array_value_num('header_index'));

   -- 4458381 Public Sector Enh
   
   --
   -- set accounting attributes for the line type
   --
   l_entered_amt_idx := 24;
   l_accted_amt_idx  := 26;
   l_bflow_applied_to_amt_idx  := 7;  -- 5132302
   l_rec_acct_attrs.array_acct_attr_code(1) := 'ACCOUNTING_REVERSAL_OPTION';
   l_rec_acct_attrs.array_char_value(1)  := p_source_19;
   l_rec_acct_attrs.array_acct_attr_code(2) := 'ALLOC_TO_APPLICATION_ID';
   l_rec_acct_attrs.array_num_value(2)  := 
xla_ae_sources_pkg.GetSystemSourceNum(
   p_source_code           => 'XLA_EVENT_APPL_ID'
 , p_source_type_code      => 'Y'
 , p_source_application_id =>  602
);
   l_rec_acct_attrs.array_acct_attr_code(3) := 'ALLOC_TO_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(3)  := p_source_21;
   l_rec_acct_attrs.array_acct_attr_code(4) := 'ALLOC_TO_ENTITY_CODE';
   l_rec_acct_attrs.array_char_value(4)  := 
xla_ae_sources_pkg.GetSystemSourceChar(
   p_source_code           => 'XLA_ENTITY_CODE'
 , p_source_type_code      => 'Y'
 , p_source_application_id =>  602
);
   l_rec_acct_attrs.array_acct_attr_code(5) := 'ALLOC_TO_FIRST_DIST_ID';
   l_rec_acct_attrs.array_num_value(5)  :=  to_char(p_source_23);
   l_rec_acct_attrs.array_acct_attr_code(6) := 'ALLOC_TO_FIRST_SYS_TRAN_ID';
   l_rec_acct_attrs.array_num_value(6)  :=  to_char(p_source_24);
   l_rec_acct_attrs.array_acct_attr_code(7) := 'APPLIED_TO_AMOUNT';
   l_rec_acct_attrs.array_num_value(7)  := p_source_57;
   l_rec_acct_attrs.array_acct_attr_code(8) := 'APPLIED_TO_APPLICATION_ID';
   l_rec_acct_attrs.array_num_value(8)  := p_source_60;
   l_rec_acct_attrs.array_acct_attr_code(9) := 'APPLIED_TO_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(9)  := p_source_61;
   l_rec_acct_attrs.array_acct_attr_code(10) := 'APPLIED_TO_ENTITY_CODE';
   l_rec_acct_attrs.array_char_value(10)  := p_source_62;
   l_rec_acct_attrs.array_acct_attr_code(11) := 'APPLIED_TO_FIRST_DIST_ID';
   l_rec_acct_attrs.array_num_value(11)  :=  to_char(p_source_63);
   l_rec_acct_attrs.array_acct_attr_code(12) := 'APPLIED_TO_FIRST_SYS_TRAN_ID';
   l_rec_acct_attrs.array_num_value(12)  :=  to_char(p_source_64);
   l_rec_acct_attrs.array_acct_attr_code(13) := 'DISTRIBUTION_IDENTIFIER_1';
   l_rec_acct_attrs.array_num_value(13)  :=  to_char(p_source_30);
   l_rec_acct_attrs.array_acct_attr_code(14) := 'DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(14)  := p_source_21;
   l_rec_acct_attrs.array_acct_attr_code(15) := 'ENC_UPG_CR_CCID';
   l_rec_acct_attrs.array_num_value(15)  := p_source_31;
   l_rec_acct_attrs.array_acct_attr_code(16) := 'ENC_UPG_CR_ENTERED_AMT';
   l_rec_acct_attrs.array_num_value(16)  := p_source_32;
   l_rec_acct_attrs.array_acct_attr_code(17) := 'ENC_UPG_CR_ENTERED_CURR';
   l_rec_acct_attrs.array_char_value(17)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(18) := 'ENC_UPG_CR_LEDGER_AMT';
   l_rec_acct_attrs.array_num_value(18)  := p_source_34;
   l_rec_acct_attrs.array_acct_attr_code(19) := 'ENC_UPG_DR_CCID';
   l_rec_acct_attrs.array_num_value(19)  := p_source_35;
   l_rec_acct_attrs.array_acct_attr_code(20) := 'ENC_UPG_DR_ENTERED_AMT';
   l_rec_acct_attrs.array_num_value(20)  := p_source_36;
   l_rec_acct_attrs.array_acct_attr_code(21) := 'ENC_UPG_DR_ENTERED_CURR';
   l_rec_acct_attrs.array_char_value(21)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(22) := 'ENC_UPG_DR_LEDGER_AMT';
   l_rec_acct_attrs.array_num_value(22)  := p_source_37;
   l_rec_acct_attrs.array_acct_attr_code(23) := 'ENC_UPG_OPTION';
   l_rec_acct_attrs.array_char_value(23)  := p_source_38;
   l_rec_acct_attrs.array_acct_attr_code(24) := 'ENTERED_CURRENCY_AMOUNT';
   l_rec_acct_attrs.array_num_value(24)  := p_source_65;
   l_rec_acct_attrs.array_acct_attr_code(25) := 'ENTERED_CURRENCY_CODE';
   l_rec_acct_attrs.array_char_value(25)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(26) := 'LEDGER_AMOUNT';
   l_rec_acct_attrs.array_num_value(26)  := p_source_66;
   l_rec_acct_attrs.array_acct_attr_code(27) := 'MULTIPERIOD_END_DATE';
   l_rec_acct_attrs.array_date_value(27)  := p_source_43;
   l_rec_acct_attrs.array_acct_attr_code(28) := 'MULTIPERIOD_OPTION';
   l_rec_acct_attrs.array_char_value(28)  := p_source_44;
   l_rec_acct_attrs.array_acct_attr_code(29) := 'MULTIPERIOD_START_DATE';
   l_rec_acct_attrs.array_date_value(29)  := p_source_45;
   l_rec_acct_attrs.array_acct_attr_code(30) := 'OVERRIDE_ACCTD_AMT_FLAG';
   l_rec_acct_attrs.array_char_value(30)  := p_source_46;
   l_rec_acct_attrs.array_acct_attr_code(31) := 'PARTY_TYPE';
   l_rec_acct_attrs.array_char_value(31)  := p_source_49;
   l_rec_acct_attrs.array_acct_attr_code(32) := 'REVERSED_DISTRIBUTION_ID1';
   l_rec_acct_attrs.array_num_value(32)  :=  to_char(p_source_50);
   l_rec_acct_attrs.array_acct_attr_code(33) := 'REVERSED_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(33)  := p_source_21;
   l_rec_acct_attrs.array_acct_attr_code(34) := 'STATISTICAL_AMOUNT';
   l_rec_acct_attrs.array_num_value(34)  := p_source_51;
   l_rec_acct_attrs.array_acct_attr_code(35) := 'TAX_LINE_REF_ID';
   l_rec_acct_attrs.array_num_value(35)  := p_source_52;
   l_rec_acct_attrs.array_acct_attr_code(36) := 'TAX_REC_NREC_DIST_REF_ID';
   l_rec_acct_attrs.array_num_value(36)  := p_source_53;
   l_rec_acct_attrs.array_acct_attr_code(37) := 'TAX_SUMMARY_LINE_REF_ID';
   l_rec_acct_attrs.array_num_value(37)  := p_source_54;
   l_rec_acct_attrs.array_acct_attr_code(38) := 'UPG_CR_ENC_TYPE_ID';
   l_rec_acct_attrs.array_num_value(38)  := p_source_55;
   l_rec_acct_attrs.array_acct_attr_code(39) := 'UPG_DR_ENC_TYPE_ID';
   l_rec_acct_attrs.array_num_value(39)  := p_source_56;

   XLA_AE_LINES_PKG.SetLineAcctAttrs(l_rec_acct_attrs);
   p_gain_or_loss_ref  := XLA_AE_LINES_PKG.g_rec_lines.array_gain_or_loss_ref(XLA_AE_LINES_PKG.g_LineNumber);

   ---------------------------------------------------------------------------------------------------------------
   -- 4336173 -- assign Business Flow Class (replace code in xla_ae_lines_pkg.Business_Flow_Validation)
   ---------------------------------------------------------------------------------------------------------------
   XLA_AE_LINES_PKG.g_rec_lines.array_business_class_code(XLA_AE_LINES_PKG.g_LineNumber) := l_bflow_class_code;

   l_actual_upg_option  := XLA_AE_LINES_PKG.g_rec_lines.array_actual_upg_option(XLA_AE_LINES_PKG.g_LineNumber);
   l_enc_upg_option     := XLA_AE_LINES_PKG.g_rec_lines.array_enc_upg_option(XLA_AE_LINES_PKG.g_LineNumber);

   IF xla_accounting_cache_pkg.GetValueChar
         (p_source_code         => 'LEDGER_CATEGORY_CODE'
         ,p_target_ledger_id    => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id) IN ('PRIMARY','ALC')
   AND l_bflow_method_code = 'PRIOR_ENTRY'
--   AND (l_actual_upg_option = 'Y' OR l_enc_upg_option = 'Y') Bug 4922099
   AND ( (NVL(l_actual_upg_option, 'N') IN ('Y', 'O')) OR
         (NVL(l_enc_upg_option, 'N') IN ('Y', 'O'))
       )
   THEN
         xla_ae_lines_pkg.BflowUpgEntry
           (p_business_method_code    => l_bflow_method_code
           ,p_business_class_code     => l_bflow_class_code
           ,p_balance_type            => l_balance_type_code);
   ELSE
      NULL;
XLA_AE_LINES_PKG.business_flow_validation(
                                p_business_method_code     => l_bflow_method_code
                               ,p_business_class_code      => l_bflow_class_code
                               ,p_inherit_description_flag => l_inherit_desc_flag);
   END IF;

   --
   -- call analytical criteria
   --
   -- Inherited Analytical Criteria for business flow method of Prior Entry.
   --
   -- call description
   --
   -- No description or it is inherited.
   --
   -- call ADRs
   -- Bug 4922099
   --
   IF ( (l_bflow_method_code <> 'PRIOR_ENTRY') OR
        (NVL(l_actual_upg_option, 'N') = 'O') OR
        (NVL(l_enc_upg_option, 'N') = 'O')
      )
   THEN
   NULL;
   --
   --
   
   --
   --
   END IF;
   --
   -- Bug 4922099
   IF ( ( (NVL(l_actual_upg_option, 'N') = 'O') OR
          (NVL(l_enc_upg_option, 'N') = 'O')
        ) AND
        (l_bflow_method_code = 'PRIOR_ENTRY')
      )
   THEN
      IF
      --
      1 = 1
      --
      THEN
      xla_accounting_err_pkg.build_message
                                    (p_appli_s_name            => 'XLA'
                                    ,p_msg_name                => 'XLA_UPG_OVERRIDE_ADR_UNDEFINED'
                                    ,p_token_1                 => 'LINE_NUMBER'
                                    ,p_value_1                 => XLA_AE_LINES_PKG.g_LineNumber
                                    ,p_token_2                 => 'LINE_TYPE_NAME'
                                    ,p_value_2                 => XLA_AE_SOURCES_PKG.GetComponentName (
                                                                             l_component_type
                                                                            ,l_component_code
                                                                            ,l_component_type_code
                                                                            ,l_component_appl_id
                                                                            ,l_amb_context_code
                                                                            ,l_entity_code
                                                                            ,l_event_class_code
                                                                           )
                                    ,p_token_3                 => 'OWNER'
                                    ,p_value_3                 => xla_lookups_pkg.get_meaning(
                                                                          p_lookup_type     => 'XLA_OWNER_TYPE'
                                                                          ,p_lookup_code    => l_component_type_code
                                                                         )
                                    ,p_token_4                 => 'PRODUCT_NAME'
                                    ,p_value_4                 => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.application_name
                                    ,p_entity_id               => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.entity_id
                                    ,p_event_id                => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.event_id
                                    ,p_ledger_id               => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id
                                    ,p_ae_header_id            =>  NULL
                                       );

        IF (C_LEVEL_ERROR>= g_log_level) THEN
                 trace
                      (p_msg      => 'ERROR: XLA_UPG_OVERRIDE_ADR_UNDEFINED'
                      ,p_level    => C_LEVEL_ERROR
                      ,p_module   => l_log_module);
        END IF;
      END IF;
   END IF;
   --
   --
   ------------------------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- NOTE: XLA_AE_LINES_PKG.ValidateCurrentLine should NOT be generated if business flow method is
   -- Prior Entry.  Currently, the following code is always generated.
   ------------------------------------------------------------------------------------------------
   -- No ValidateCurrentLine for business flow method of Prior Entry

   ------------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- Populated credit and debit amounts -- Need to generate this within IF <condition>
   ------------------------------------------------------------------------------------
   XLA_AE_LINES_PKG.SetDebitCreditAmounts;

   ----------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- Update journal entry status -- Need to generate this within IF <condition>
   ----------------------------------------------------------------------------------
   XLA_AE_JOURNAL_ENTRY_PKG.UpdateJournalEntryStatus
         (p_hdr_idx => g_array_event(p_event_id).array_value_num('header_index')
         ,p_balance_type_code => l_balance_type_code
         );

   -------------------------------------------------------------------------------------------
   -- 4262811 - Generate the Accrual Reversal lines
   -------------------------------------------------------------------------------------------
   BEGIN
      l_acc_rev_flag := XLA_AE_HEADER_PKG.g_rec_header_new.array_accrual_reversal_flag
                              (g_array_event(p_event_id).array_value_num('header_index'));
      IF l_acc_rev_flag IS NULL THEN
         l_acc_rev_flag := 'N';
      END IF;
   EXCEPTION
      WHEN OTHERS THEN
         l_acc_rev_flag := 'N';
   END;
   --
   IF (l_acc_rev_flag = 'Y') THEN

       -- 4645092  ------------------------------------------------------------------------------
       -- To allow MPA report to determine if it should generate report process
       XLA_ACCOUNTING_PKG.g_mpa_accrual_exists := 'Y';
       ------------------------------------------------------------------------------------------

       l_accrual_line_num := XLA_AE_LINES_PKG.g_LineNumber;
       XLA_AE_LINES_PKG.CopyLineInfo(l_accrual_line_num);
   -- added call to set_ccid to execute mapping  for secondary accrual reversal entries bug 7444204
   -- call ADRs
   -- Bug 4922099
   --
   IF ( (l_bflow_method_code <> 'PRIOR_ENTRY') OR
        (NVL(l_actual_upg_option, 'N') = 'O') OR
        (NVL(l_enc_upg_option, 'N') = 'O')
      )
   THEN
   NULL;
   --
   --
   
   --
   --
   END IF;

       --
       -- Update the line information that should be overwritten
       --
       XLA_AE_LINES_PKG.set_ae_header_id(p_ae_header_id => p_event_id ,
                                         p_header_num   => 1);
       XLA_AE_LINES_PKG.g_rec_lines.array_header_num(XLA_AE_LINES_PKG.g_LineNumber)  :=1;

       XLA_AE_LINES_PKG.g_rec_lines.array_business_class_code(XLA_AE_LINES_PKG.g_LineNumber) := NULL; -- 4669271

       IF l_bflow_method_code <> 'NONE' THEN  -- 4655713b
          XLA_AE_LINES_PKG.g_rec_lines.array_reversal_code(XLA_AE_LINES_PKG.g_LineNumber) := CONCAT('MPA_',l_bflow_method_code);
       END IF;

      --
      -- Depending on the Reversal Method setup, do a switch side or changes sign for the amounts
      --
      IF (XLA_AE_JOURNAL_ENTRY_PKG.g_cache_ledgers_info.ledger_reversal_option = 'SIDE') THEN
          XLA_AE_LINES_PKG.g_rec_lines.array_natural_side_code(XLA_AE_LINES_PKG.g_LineNumber) :=  l_acc_rev_natural_side_code;
      ELSE
          ---------------------------------------------------------------------------------------------------
          -- 4262811a Switch Sign
          ---------------------------------------------------------------------------------------------------
          XLA_AE_LINES_PKG.g_rec_lines.array_switch_side_flag(XLA_AE_LINES_PKG.g_LineNumber) := 'N';  -- 5052518
          XLA_AE_LINES_PKG.g_rec_lines.array_ledger_amount(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_ledger_amount(XLA_AE_LINES_PKG.g_LineNumber) * -1;
          XLA_AE_LINES_PKG.g_rec_lines.array_entered_amount(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_entered_amount(XLA_AE_LINES_PKG.g_LineNumber) * -1;
          -- 5132302
          XLA_AE_LINES_PKG.g_rec_lines.array_bflow_applied_to_amt(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_bflow_applied_to_amt(XLA_AE_LINES_PKG.g_LineNumber) * -1;

      END IF;

      -- 4955764
      XLA_AE_LINES_PKG.g_rec_lines.array_gl_date(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_HEADER_PKG.g_rec_header_new.array_gl_date(g_array_event(p_event_id).array_value_num('acc_rev_header_index'));


      XLA_AE_LINES_PKG.ValidateCurrentLine;
      XLA_AE_LINES_PKG.SetDebitCreditAmounts;

      XLA_AE_JOURNAL_ENTRY_PKG.UpdateJournalEntryStatus
               (p_hdr_idx           => g_array_event(p_event_id).array_value_num('acc_rev_header_index')
               ,p_balance_type_code => l_balance_type_code);

   END IF;

   -----------------------------------------------------------------------------------------
   -- 4262811 Multiperiod Accounting
   -----------------------------------------------------------------------------------------
     -- No MPA option is assigned.


END IF;
END IF;
--

--
IF (C_LEVEL_PROCEDURE >= g_log_level) THEN
   trace
      (p_msg      => 'END of AcctLineType_32'
      ,p_level    => C_LEVEL_PROCEDURE
      ,p_module   => l_log_module);
END IF;
--
EXCEPTION
  WHEN xla_exceptions_pkg.application_exception THEN
      RAISE;
  WHEN OTHERS THEN
       xla_exceptions_pkg.raise_message
           (p_location => 'XLA_00200_AAD_S_000010_BC_PKG.AcctLineType_32');
END AcctLineType_32;
--

---------------------------------------
--
-- PRIVATE FUNCTION
--         AcctLineType_33
--
---------------------------------------
PROCEDURE AcctLineType_33 (
  p_application_id        IN NUMBER
 ,p_event_id              IN NUMBER
 ,p_calculate_acctd_flag  IN VARCHAR2
 ,p_calculate_g_l_flag    IN VARCHAR2
 ,p_actual_flag           IN OUT VARCHAR2
 ,p_balance_type_code     OUT VARCHAR2
 ,p_gain_or_loss_ref      OUT VARCHAR2
 
--Invoice Distribution Description
 , p_source_1            IN VARCHAR2
--Invoice Distribution Account
 , p_source_11            IN NUMBER
--Invoice Distribution Type
 , p_source_15            IN VARCHAR2
 , p_source_15_meaning    IN VARCHAR2
--Purchasing Encumbrance Option
 , p_source_17            IN VARCHAR2
 , p_source_17_meaning    IN VARCHAR2
--Accounting Reversal Indicator
 , p_source_19            IN VARCHAR2
--Distribution Link Type
 , p_source_21            IN VARCHAR2
--Allocation to Main Distribution Identifier
 , p_source_23            IN NUMBER
--Invoice Identifier
 , p_source_24            IN NUMBER
--Business Flow Accounts Payable Application Identifier
 , p_source_25            IN NUMBER
--Business Flow Invoice Distribution Type
 , p_source_26            IN VARCHAR2
--Business Flow Invoice Entity Code
 , p_source_27            IN VARCHAR2
--Business Flow Invoice Distribution Identifier
 , p_source_28            IN NUMBER
--Business Flow Invoice Identifier
 , p_source_29            IN NUMBER
--Invoice Distribution Identifier
 , p_source_30            IN NUMBER
--Payables Encumbrance Upgrade Credit Account
 , p_source_31            IN NUMBER
--Payables Encumbrance Upgrade Credit Amount
 , p_source_32            IN NUMBER
--Invoice Currency Code
 , p_source_33            IN VARCHAR2
--Payables Encumbrance Upgrade Credit Base Amount
 , p_source_34            IN NUMBER
--Payables Encumbrance Upgrade Debit Account
 , p_source_35            IN NUMBER
--Payables Encumbrance Upgrade Debit Amount
 , p_source_36            IN NUMBER
--Payables Encumbrance Upgrade Debit Base Amount
 , p_source_37            IN NUMBER
--Payables Encumbrance Upgrade Option
 , p_source_38            IN VARCHAR2
--Invoice Exchange Date
 , p_source_39            IN DATE
--Invoice Exchange Rate
 , p_source_40            IN NUMBER
--Invoice Exchange Rate Type
 , p_source_41            IN VARCHAR2
--Deferred Accounting End Date
 , p_source_43            IN DATE
--Deferred Accounting Option
 , p_source_44            IN VARCHAR2
--Deferred Accounting Start Date
 , p_source_45            IN DATE
--Override Accounted Amount Indicator
 , p_source_46            IN VARCHAR2
 , p_source_46_meaning    IN VARCHAR2
--Invoice Supplier Identifier
 , p_source_47            IN NUMBER
--Invoice Supplier Site Identifier
 , p_source_48            IN NUMBER
--Third Party Type
 , p_source_49            IN VARCHAR2
--Parent Reversal Identifier
 , p_source_50            IN NUMBER
--Invoice Distribution Statistical Amount
 , p_source_51            IN NUMBER
--Invoice Distribution Tax Line Identifier
 , p_source_52            IN NUMBER
--Invoice Distribution Tax Distribution Identifier from Tax
 , p_source_53            IN NUMBER
--Invoice Distribution Summary Tax Line Identifier
 , p_source_54            IN NUMBER
--Payables Upgrade Credit Encumbrance Type Identifier
 , p_source_55            IN NUMBER
--Payables Upgrade Debit Encumbrance Type Identifier
 , p_source_56            IN NUMBER
--Invoice Distribution Encumbrance Amount
 , p_source_65            IN NUMBER
--Invoice Distribution Encumbrance Ledger Amount
 , p_source_66            IN NUMBER
)
IS

l_component_type              VARCHAR2(80);
l_component_code              VARCHAR2(30);
l_component_type_code         VARCHAR2(1);
l_component_appl_id           INTEGER;
l_amb_context_code            VARCHAR2(30);
l_entity_code                 VARCHAR2(30);
l_event_class_code            VARCHAR2(30);
l_ae_header_id                NUMBER;
l_event_type_code             VARCHAR2(30);
l_line_definition_code        VARCHAR2(30);
l_line_definition_owner_code  VARCHAR2(1);
--
-- adr variables
l_segment                     VARCHAR2(30);
l_ccid                        NUMBER;
l_adr_transaction_coa_id      NUMBER;
l_adr_accounting_coa_id       NUMBER;
l_adr_flexfield_segment_code  VARCHAR2(30);
l_adr_flex_value_set_id       NUMBER;
l_adr_value_type_code         VARCHAR2(30);
l_adr_value_combination_id    NUMBER;
l_adr_value_segment_code      VARCHAR2(30);

l_bflow_method_code           VARCHAR2(30);  -- 4219869 Business Flow
l_bflow_class_code            VARCHAR2(30);  -- 4219869 Business Flow
l_inherit_desc_flag           VARCHAR2(1);   -- 4219869 Business Flow
l_budgetary_control_flag      VARCHAR2(1);   -- 4458381 Public Sector Enh

-- 4262811 Variables ------------------------------------------------------------------------------------------
l_entered_amt_idx             NUMBER;
l_accted_amt_idx              NUMBER;
l_acc_rev_flag                VARCHAR2(1);
l_accrual_line_num            NUMBER;
l_tmp_amt                     NUMBER;
l_acc_rev_natural_side_code   VARCHAR2(1);

l_num_entries                 NUMBER;
l_gl_dates                    xla_ae_journal_entry_pkg.t_array_date;
l_accted_amts                 xla_ae_journal_entry_pkg.t_array_num;
l_entered_amts                xla_ae_journal_entry_pkg.t_array_num;
l_period_names                xla_ae_journal_entry_pkg.t_array_V15L;
l_recog_line_1                NUMBER;
l_recog_line_2                NUMBER;

l_bflow_applied_to_amt_idx    NUMBER;                                -- 5132302
l_bflow_applied_to_amt        NUMBER;                                -- 5132302
l_bflow_applied_to_amts       xla_ae_journal_entry_pkg.t_array_num;  -- 5132302

l_event_id                    NUMBER;  -- To handle MPA header Description: xla_ae_header_pkg.SetHdrDescription

--l_rounding_ccy                VARCHAR2(15); -- To handle MPA rounding  4262811b
l_same_currency               BOOLEAN;        -- To handle MPA rounding  4262811b

---------------------------------------------------------------------------------------------------------------


--
-- bulk performance
--
l_balance_type_code           VARCHAR2(1);
l_rec_acct_attrs              XLA_AE_LINES_PKG.t_rec_acct_attrs;
l_log_module                  VARCHAR2(240);

--
-- Upgrade strategy
--
l_actual_upg_option           VARCHAR2(1);
l_enc_upg_option           VARCHAR2(1);

--
BEGIN
--
IF g_log_enabled THEN
      l_log_module := C_DEFAULT_MODULE||'.AcctLineType_33';
END IF;
--
IF (C_LEVEL_PROCEDURE >= g_log_level) THEN

      trace
         (p_msg      => 'BEGIN of AcctLineType_33'
         ,p_level    => C_LEVEL_PROCEDURE
         ,p_module   => l_log_module);

END IF;
--
l_component_type             := 'AMB_JLT';
l_component_code             := 'AP_INV_PRICE_VAR_CM_ENC_DR';
l_component_type_code        := 'S';
l_component_appl_id          :=  200;
l_amb_context_code           := 'DEFAULT';
l_entity_code                := 'AP_INVOICES';
l_event_class_code           := 'CREDIT MEMOS';
l_event_type_code            := 'CREDIT MEMOS_ALL';
l_line_definition_owner_code := 'S';
l_line_definition_code       := 'ENC_CM_ALL';
--
l_balance_type_code          := 'E';
l_segment                     := NULL;
l_ccid                        := NULL;
l_adr_transaction_coa_id      := NULL;
l_adr_accounting_coa_id       := NULL;
l_adr_flexfield_segment_code  := NULL;
l_adr_flex_value_set_id       := NULL;
l_adr_value_type_code         := NULL;
l_adr_value_combination_id    := NULL;
l_adr_value_segment_code      := NULL;

l_bflow_method_code          := 'NONE';   -- 4219869 Business Flow
l_bflow_class_code           := 'AP_INV_ENCUM';    -- 4219869 Business Flow
l_inherit_desc_flag          := 'N';   -- 4219869 Business Flow
l_budgetary_control_flag     := 'Y';

l_bflow_applied_to_amt_idx   := NULL; -- 5132302
l_bflow_applied_to_amt       := NULL; -- 5132302
l_entered_amt_idx            := NULL;          -- 4262811
l_accted_amt_idx             := NULL;          -- 4262811
l_acc_rev_flag               := NULL;          -- 4262811
l_accrual_line_num           := NULL;          -- 4262811
l_tmp_amt                    := NULL;          -- 4262811
--
 
IF XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id = XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.ledger_id OR
    l_balance_type_code <> 'B' THEN
IF NVL(p_source_15,'
') =  'IPV' AND 
NVL(p_source_17,'
') =  'Y'
 THEN 

   --
   XLA_AE_LINES_PKG.SetNewLine;

   p_balance_type_code          := l_balance_type_code;
   -- set the flag so later we will know whether the gain loss line needs to be created
   
   IF(l_balance_type_code = 'A' and p_actual_flag is null) THEN
     p_actual_flag :='A';
   END IF;

   --
   -- bulk performance
   --
   XLA_AE_LINES_PKG.set_ae_header_id (p_ae_header_id => p_event_id ,
                                      p_header_num   => 0); -- 4262811
   --
   -- set accounting line options
   --
   l_ae_header_id:= xla_ae_lines_pkg.SetAcctLineOption(
           p_natural_side_code          => 'D'
         , p_gain_or_loss_flag          => 'N'
         , p_gl_transfer_mode_code      => 'S'
         , p_acct_entry_type_code       => 'E'
         , p_switch_side_flag           => 'Y'
         , p_merge_duplicate_code       => 'N'
         );
   --
   l_acc_rev_natural_side_code := 'C';  -- 4262811
   -- 
   --
   -- set accounting line type info
   --
   xla_ae_lines_pkg.SetAcctLineType
      (p_component_type             => l_component_type
      ,p_event_type_code            => l_event_type_code
      ,p_line_definition_owner_code => l_line_definition_owner_code
      ,p_line_definition_code       => l_line_definition_code
      ,p_accounting_line_code       => l_component_code
      ,p_accounting_line_type_code  => l_component_type_code
      ,p_accounting_line_appl_id    => l_component_appl_id
      ,p_amb_context_code           => l_amb_context_code
      ,p_entity_code                => l_entity_code
      ,p_event_class_code           => l_event_class_code);
   --
   -- set accounting class
   --
   xla_ae_lines_pkg.SetAcctClass(
           p_accounting_class_code  => 'IPV'
         , p_ae_header_id           => l_ae_header_id
         );

   --
   -- set rounding class
   --
   XLA_AE_LINES_PKG.g_rec_lines.array_rounding_class(XLA_AE_LINES_PKG.g_LineNumber) :=
                      'IPV';

   --
   xla_ae_lines_pkg.g_rec_lines.array_calculate_acctd_flag(xla_ae_lines_pkg.g_LineNumber) := p_calculate_acctd_flag;
   xla_ae_lines_pkg.g_rec_lines.array_calculate_g_l_flag(xla_ae_lines_pkg.g_LineNumber) := p_calculate_g_l_flag;
   --
   -- bulk performance
   --
   XLA_AE_LINES_PKG.g_rec_lines.array_balance_type_code(XLA_AE_LINES_PKG.g_LineNumber) := l_balance_type_code;

   XLA_AE_LINES_PKG.g_rec_lines.array_ledger_id(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id;

   -- 4955764
   XLA_AE_LINES_PKG.g_rec_lines.array_gl_date(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_HEADER_PKG.g_rec_header_new.array_gl_date(g_array_event(p_event_id).array_value_num('header_index'));

   -- 4458381 Public Sector Enh
      XLA_AE_LINES_PKG.g_rec_lines.array_encumbrance_type_id(XLA_AE_LINES_PKG.g_LineNumber) := 1060;
   --
   -- set accounting attributes for the line type
   --
   l_entered_amt_idx := 23;
   l_accted_amt_idx  := 28;
   l_bflow_applied_to_amt_idx  := NULL;  -- 5132302
   l_rec_acct_attrs.array_acct_attr_code(1) := 'ACCOUNTING_REVERSAL_OPTION';
   l_rec_acct_attrs.array_char_value(1)  := p_source_19;
   l_rec_acct_attrs.array_acct_attr_code(2) := 'ALLOC_TO_APPLICATION_ID';
   l_rec_acct_attrs.array_num_value(2)  := 
xla_ae_sources_pkg.GetSystemSourceNum(
   p_source_code           => 'XLA_EVENT_APPL_ID'
 , p_source_type_code      => 'Y'
 , p_source_application_id =>  602
);
   l_rec_acct_attrs.array_acct_attr_code(3) := 'ALLOC_TO_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(3)  := p_source_21;
   l_rec_acct_attrs.array_acct_attr_code(4) := 'ALLOC_TO_ENTITY_CODE';
   l_rec_acct_attrs.array_char_value(4)  := 
xla_ae_sources_pkg.GetSystemSourceChar(
   p_source_code           => 'XLA_ENTITY_CODE'
 , p_source_type_code      => 'Y'
 , p_source_application_id =>  602
);
   l_rec_acct_attrs.array_acct_attr_code(5) := 'ALLOC_TO_FIRST_DIST_ID';
   l_rec_acct_attrs.array_num_value(5)  :=  to_char(p_source_23);
   l_rec_acct_attrs.array_acct_attr_code(6) := 'ALLOC_TO_FIRST_SYS_TRAN_ID';
   l_rec_acct_attrs.array_num_value(6)  :=  to_char(p_source_24);
   l_rec_acct_attrs.array_acct_attr_code(7) := 'APPLIED_TO_APPLICATION_ID';
   l_rec_acct_attrs.array_num_value(7)  := p_source_25;
   l_rec_acct_attrs.array_acct_attr_code(8) := 'APPLIED_TO_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(8)  := p_source_26;
   l_rec_acct_attrs.array_acct_attr_code(9) := 'APPLIED_TO_ENTITY_CODE';
   l_rec_acct_attrs.array_char_value(9)  := p_source_27;
   l_rec_acct_attrs.array_acct_attr_code(10) := 'APPLIED_TO_FIRST_DIST_ID';
   l_rec_acct_attrs.array_num_value(10)  :=  to_char(p_source_28);
   l_rec_acct_attrs.array_acct_attr_code(11) := 'APPLIED_TO_FIRST_SYS_TRAN_ID';
   l_rec_acct_attrs.array_num_value(11)  :=  to_char(p_source_29);
   l_rec_acct_attrs.array_acct_attr_code(12) := 'DISTRIBUTION_IDENTIFIER_1';
   l_rec_acct_attrs.array_num_value(12)  :=  to_char(p_source_30);
   l_rec_acct_attrs.array_acct_attr_code(13) := 'DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(13)  := p_source_21;
   l_rec_acct_attrs.array_acct_attr_code(14) := 'ENC_UPG_CR_CCID';
   l_rec_acct_attrs.array_num_value(14)  := p_source_31;
   l_rec_acct_attrs.array_acct_attr_code(15) := 'ENC_UPG_CR_ENTERED_AMT';
   l_rec_acct_attrs.array_num_value(15)  := p_source_32;
   l_rec_acct_attrs.array_acct_attr_code(16) := 'ENC_UPG_CR_ENTERED_CURR';
   l_rec_acct_attrs.array_char_value(16)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(17) := 'ENC_UPG_CR_LEDGER_AMT';
   l_rec_acct_attrs.array_num_value(17)  := p_source_34;
   l_rec_acct_attrs.array_acct_attr_code(18) := 'ENC_UPG_DR_CCID';
   l_rec_acct_attrs.array_num_value(18)  := p_source_35;
   l_rec_acct_attrs.array_acct_attr_code(19) := 'ENC_UPG_DR_ENTERED_AMT';
   l_rec_acct_attrs.array_num_value(19)  := p_source_36;
   l_rec_acct_attrs.array_acct_attr_code(20) := 'ENC_UPG_DR_ENTERED_CURR';
   l_rec_acct_attrs.array_char_value(20)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(21) := 'ENC_UPG_DR_LEDGER_AMT';
   l_rec_acct_attrs.array_num_value(21)  := p_source_37;
   l_rec_acct_attrs.array_acct_attr_code(22) := 'ENC_UPG_OPTION';
   l_rec_acct_attrs.array_char_value(22)  := p_source_38;
   l_rec_acct_attrs.array_acct_attr_code(23) := 'ENTERED_CURRENCY_AMOUNT';
   l_rec_acct_attrs.array_num_value(23)  := p_source_65;
   l_rec_acct_attrs.array_acct_attr_code(24) := 'ENTERED_CURRENCY_CODE';
   l_rec_acct_attrs.array_char_value(24)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(25) := 'EXCHANGE_DATE';
   l_rec_acct_attrs.array_date_value(25)  := p_source_39;
   l_rec_acct_attrs.array_acct_attr_code(26) := 'EXCHANGE_RATE';
   l_rec_acct_attrs.array_num_value(26)  := p_source_40;
   l_rec_acct_attrs.array_acct_attr_code(27) := 'EXCHANGE_RATE_TYPE';
   l_rec_acct_attrs.array_char_value(27)  := p_source_41;
   l_rec_acct_attrs.array_acct_attr_code(28) := 'LEDGER_AMOUNT';
   l_rec_acct_attrs.array_num_value(28)  := p_source_66;
   l_rec_acct_attrs.array_acct_attr_code(29) := 'MULTIPERIOD_END_DATE';
   l_rec_acct_attrs.array_date_value(29)  := p_source_43;
   l_rec_acct_attrs.array_acct_attr_code(30) := 'MULTIPERIOD_OPTION';
   l_rec_acct_attrs.array_char_value(30)  := p_source_44;
   l_rec_acct_attrs.array_acct_attr_code(31) := 'MULTIPERIOD_START_DATE';
   l_rec_acct_attrs.array_date_value(31)  := p_source_45;
   l_rec_acct_attrs.array_acct_attr_code(32) := 'OVERRIDE_ACCTD_AMT_FLAG';
   l_rec_acct_attrs.array_char_value(32)  := p_source_46;
   l_rec_acct_attrs.array_acct_attr_code(33) := 'PARTY_ID';
   l_rec_acct_attrs.array_num_value(33)  := p_source_47;
   l_rec_acct_attrs.array_acct_attr_code(34) := 'PARTY_SITE_ID';
   l_rec_acct_attrs.array_num_value(34)  := p_source_48;
   l_rec_acct_attrs.array_acct_attr_code(35) := 'PARTY_TYPE';
   l_rec_acct_attrs.array_char_value(35)  := p_source_49;
   l_rec_acct_attrs.array_acct_attr_code(36) := 'REVERSED_DISTRIBUTION_ID1';
   l_rec_acct_attrs.array_num_value(36)  :=  to_char(p_source_50);
   l_rec_acct_attrs.array_acct_attr_code(37) := 'REVERSED_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(37)  := p_source_21;
   l_rec_acct_attrs.array_acct_attr_code(38) := 'STATISTICAL_AMOUNT';
   l_rec_acct_attrs.array_num_value(38)  := p_source_51;
   l_rec_acct_attrs.array_acct_attr_code(39) := 'TAX_LINE_REF_ID';
   l_rec_acct_attrs.array_num_value(39)  := p_source_52;
   l_rec_acct_attrs.array_acct_attr_code(40) := 'TAX_REC_NREC_DIST_REF_ID';
   l_rec_acct_attrs.array_num_value(40)  := p_source_53;
   l_rec_acct_attrs.array_acct_attr_code(41) := 'TAX_SUMMARY_LINE_REF_ID';
   l_rec_acct_attrs.array_num_value(41)  := p_source_54;
   l_rec_acct_attrs.array_acct_attr_code(42) := 'UPG_CR_ENC_TYPE_ID';
   l_rec_acct_attrs.array_num_value(42)  := p_source_55;
   l_rec_acct_attrs.array_acct_attr_code(43) := 'UPG_DR_ENC_TYPE_ID';
   l_rec_acct_attrs.array_num_value(43)  := p_source_56;

   XLA_AE_LINES_PKG.SetLineAcctAttrs(l_rec_acct_attrs);
   p_gain_or_loss_ref  := XLA_AE_LINES_PKG.g_rec_lines.array_gain_or_loss_ref(XLA_AE_LINES_PKG.g_LineNumber);

   ---------------------------------------------------------------------------------------------------------------
   -- 4336173 -- assign Business Flow Class (replace code in xla_ae_lines_pkg.Business_Flow_Validation)
   ---------------------------------------------------------------------------------------------------------------
   XLA_AE_LINES_PKG.g_rec_lines.array_business_class_code(XLA_AE_LINES_PKG.g_LineNumber) := l_bflow_class_code;

   l_actual_upg_option  := XLA_AE_LINES_PKG.g_rec_lines.array_actual_upg_option(XLA_AE_LINES_PKG.g_LineNumber);
   l_enc_upg_option     := XLA_AE_LINES_PKG.g_rec_lines.array_enc_upg_option(XLA_AE_LINES_PKG.g_LineNumber);

   IF xla_accounting_cache_pkg.GetValueChar
         (p_source_code         => 'LEDGER_CATEGORY_CODE'
         ,p_target_ledger_id    => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id) IN ('PRIMARY','ALC')
   AND l_bflow_method_code = 'PRIOR_ENTRY'
--   AND (l_actual_upg_option = 'Y' OR l_enc_upg_option = 'Y') Bug 4922099
   AND ( (NVL(l_actual_upg_option, 'N') IN ('Y', 'O')) OR
         (NVL(l_enc_upg_option, 'N') IN ('Y', 'O'))
       )
   THEN
         xla_ae_lines_pkg.BflowUpgEntry
           (p_business_method_code    => l_bflow_method_code
           ,p_business_class_code     => l_bflow_class_code
           ,p_balance_type            => l_balance_type_code);
   ELSE
      NULL;
-- No business flow processing for business flow method of NONE.
   END IF;

   --
   -- call analytical criteria
   --
   
   --
   -- call description
   --
   
xla_ae_lines_pkg.SetLineDescription(
   p_ae_header_id => l_ae_header_id
  ,p_description  => Description_2 (
     p_application_id         => p_application_id
   , p_ae_header_id           => l_ae_header_id 
, p_source_1 => p_source_1
   )
);


   --
   -- call ADRs
   -- Bug 4922099
   --
   IF ( (l_bflow_method_code <> 'PRIOR_ENTRY') OR
        (NVL(l_actual_upg_option, 'N') = 'O') OR
        (NVL(l_enc_upg_option, 'N') = 'O')
      )
   THEN
   NULL;
   --
   --
   
  l_ccid := AcctDerRule_7(
           p_application_id           => p_application_id
         , p_ae_header_id             => l_ae_header_id 
, p_source_11 => p_source_11
         , x_transaction_coa_id       => l_adr_transaction_coa_id
         , x_accounting_coa_id        => l_adr_accounting_coa_id
         , x_value_type_code          => l_adr_value_type_code
         , p_side                     => 'NA'
   );

   xla_ae_lines_pkg.set_ccid(
    p_code_combination_id          => l_ccid
  , p_value_type_code              => l_adr_value_type_code
  , p_transaction_coa_id           => l_adr_transaction_coa_id
  , p_accounting_coa_id            => l_adr_accounting_coa_id
  , p_adr_code                     => 'AP_INVOICE_DIST'
  , p_adr_type_code                => 'S'
  , p_component_type               => l_component_type
  , p_component_code               => l_component_code
  , p_component_type_code          => l_component_type_code
  , p_component_appl_id            => l_component_appl_id
  , p_amb_context_code             => l_amb_context_code
  , p_side                         => 'NA'
  );


   --
   --
   END IF;
   --
   -- Bug 4922099
   IF ( ( (NVL(l_actual_upg_option, 'N') = 'O') OR
          (NVL(l_enc_upg_option, 'N') = 'O')
        ) AND
        (l_bflow_method_code = 'PRIOR_ENTRY')
      )
   THEN
      IF
      --
      1 = 2
      --
      THEN
      xla_accounting_err_pkg.build_message
                                    (p_appli_s_name            => 'XLA'
                                    ,p_msg_name                => 'XLA_UPG_OVERRIDE_ADR_UNDEFINED'
                                    ,p_token_1                 => 'LINE_NUMBER'
                                    ,p_value_1                 => XLA_AE_LINES_PKG.g_LineNumber
                                    ,p_token_2                 => 'LINE_TYPE_NAME'
                                    ,p_value_2                 => XLA_AE_SOURCES_PKG.GetComponentName (
                                                                             l_component_type
                                                                            ,l_component_code
                                                                            ,l_component_type_code
                                                                            ,l_component_appl_id
                                                                            ,l_amb_context_code
                                                                            ,l_entity_code
                                                                            ,l_event_class_code
                                                                           )
                                    ,p_token_3                 => 'OWNER'
                                    ,p_value_3                 => xla_lookups_pkg.get_meaning(
                                                                          p_lookup_type     => 'XLA_OWNER_TYPE'
                                                                          ,p_lookup_code    => l_component_type_code
                                                                         )
                                    ,p_token_4                 => 'PRODUCT_NAME'
                                    ,p_value_4                 => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.application_name
                                    ,p_entity_id               => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.entity_id
                                    ,p_event_id                => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.event_id
                                    ,p_ledger_id               => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id
                                    ,p_ae_header_id            =>  NULL
                                       );

        IF (C_LEVEL_ERROR>= g_log_level) THEN
                 trace
                      (p_msg      => 'ERROR: XLA_UPG_OVERRIDE_ADR_UNDEFINED'
                      ,p_level    => C_LEVEL_ERROR
                      ,p_module   => l_log_module);
        END IF;
      END IF;
   END IF;
   --
   --
   ------------------------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- NOTE: XLA_AE_LINES_PKG.ValidateCurrentLine should NOT be generated if business flow method is
   -- Prior Entry.  Currently, the following code is always generated.
   ------------------------------------------------------------------------------------------------
   XLA_AE_LINES_PKG.ValidateCurrentLine;

   ------------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- Populated credit and debit amounts -- Need to generate this within IF <condition>
   ------------------------------------------------------------------------------------
   XLA_AE_LINES_PKG.SetDebitCreditAmounts;

   ----------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- Update journal entry status -- Need to generate this within IF <condition>
   ----------------------------------------------------------------------------------
   XLA_AE_JOURNAL_ENTRY_PKG.UpdateJournalEntryStatus
         (p_hdr_idx => g_array_event(p_event_id).array_value_num('header_index')
         ,p_balance_type_code => l_balance_type_code
         );

   -------------------------------------------------------------------------------------------
   -- 4262811 - Generate the Accrual Reversal lines
   -------------------------------------------------------------------------------------------
   BEGIN
      l_acc_rev_flag := XLA_AE_HEADER_PKG.g_rec_header_new.array_accrual_reversal_flag
                              (g_array_event(p_event_id).array_value_num('header_index'));
      IF l_acc_rev_flag IS NULL THEN
         l_acc_rev_flag := 'N';
      END IF;
   EXCEPTION
      WHEN OTHERS THEN
         l_acc_rev_flag := 'N';
   END;
   --
   IF (l_acc_rev_flag = 'Y') THEN

       -- 4645092  ------------------------------------------------------------------------------
       -- To allow MPA report to determine if it should generate report process
       XLA_ACCOUNTING_PKG.g_mpa_accrual_exists := 'Y';
       ------------------------------------------------------------------------------------------

       l_accrual_line_num := XLA_AE_LINES_PKG.g_LineNumber;
       XLA_AE_LINES_PKG.CopyLineInfo(l_accrual_line_num);
   -- added call to set_ccid to execute mapping  for secondary accrual reversal entries bug 7444204
   -- call ADRs
   -- Bug 4922099
   --
   IF ( (l_bflow_method_code <> 'PRIOR_ENTRY') OR
        (NVL(l_actual_upg_option, 'N') = 'O') OR
        (NVL(l_enc_upg_option, 'N') = 'O')
      )
   THEN
   NULL;
   --
   --
   
  l_ccid := AcctDerRule_7(
           p_application_id           => p_application_id
         , p_ae_header_id             => l_ae_header_id 
, p_source_11 => p_source_11
         , x_transaction_coa_id       => l_adr_transaction_coa_id
         , x_accounting_coa_id        => l_adr_accounting_coa_id
         , x_value_type_code          => l_adr_value_type_code
         , p_side                     => 'NA'
   );

   xla_ae_lines_pkg.set_ccid(
    p_code_combination_id          => l_ccid
  , p_value_type_code              => l_adr_value_type_code
  , p_transaction_coa_id           => l_adr_transaction_coa_id
  , p_accounting_coa_id            => l_adr_accounting_coa_id
  , p_adr_code                     => 'AP_INVOICE_DIST'
  , p_adr_type_code                => 'S'
  , p_component_type               => l_component_type
  , p_component_code               => l_component_code
  , p_component_type_code          => l_component_type_code
  , p_component_appl_id            => l_component_appl_id
  , p_amb_context_code             => l_amb_context_code
  , p_side                         => 'NA'
  );


   --
   --
   END IF;

       --
       -- Update the line information that should be overwritten
       --
       XLA_AE_LINES_PKG.set_ae_header_id(p_ae_header_id => p_event_id ,
                                         p_header_num   => 1);
       XLA_AE_LINES_PKG.g_rec_lines.array_header_num(XLA_AE_LINES_PKG.g_LineNumber)  :=1;

       XLA_AE_LINES_PKG.g_rec_lines.array_business_class_code(XLA_AE_LINES_PKG.g_LineNumber) := NULL; -- 4669271

       IF l_bflow_method_code <> 'NONE' THEN  -- 4655713b
          XLA_AE_LINES_PKG.g_rec_lines.array_reversal_code(XLA_AE_LINES_PKG.g_LineNumber) := CONCAT('MPA_',l_bflow_method_code);
       END IF;

      --
      -- Depending on the Reversal Method setup, do a switch side or changes sign for the amounts
      --
      IF (XLA_AE_JOURNAL_ENTRY_PKG.g_cache_ledgers_info.ledger_reversal_option = 'SIDE') THEN
          XLA_AE_LINES_PKG.g_rec_lines.array_natural_side_code(XLA_AE_LINES_PKG.g_LineNumber) :=  l_acc_rev_natural_side_code;
      ELSE
          ---------------------------------------------------------------------------------------------------
          -- 4262811a Switch Sign
          ---------------------------------------------------------------------------------------------------
          XLA_AE_LINES_PKG.g_rec_lines.array_switch_side_flag(XLA_AE_LINES_PKG.g_LineNumber) := 'N';  -- 5052518
          XLA_AE_LINES_PKG.g_rec_lines.array_ledger_amount(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_ledger_amount(XLA_AE_LINES_PKG.g_LineNumber) * -1;
          XLA_AE_LINES_PKG.g_rec_lines.array_entered_amount(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_entered_amount(XLA_AE_LINES_PKG.g_LineNumber) * -1;
          -- 5132302
          XLA_AE_LINES_PKG.g_rec_lines.array_bflow_applied_to_amt(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_bflow_applied_to_amt(XLA_AE_LINES_PKG.g_LineNumber) * -1;

      END IF;

      -- 4955764
      XLA_AE_LINES_PKG.g_rec_lines.array_gl_date(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_HEADER_PKG.g_rec_header_new.array_gl_date(g_array_event(p_event_id).array_value_num('acc_rev_header_index'));


      XLA_AE_LINES_PKG.ValidateCurrentLine;
      XLA_AE_LINES_PKG.SetDebitCreditAmounts;

      XLA_AE_JOURNAL_ENTRY_PKG.UpdateJournalEntryStatus
               (p_hdr_idx           => g_array_event(p_event_id).array_value_num('acc_rev_header_index')
               ,p_balance_type_code => l_balance_type_code);

   END IF;

   -----------------------------------------------------------------------------------------
   -- 4262811 Multiperiod Accounting
   -----------------------------------------------------------------------------------------
     -- No MPA option is assigned.


END IF;
END IF;
--

--
IF (C_LEVEL_PROCEDURE >= g_log_level) THEN
   trace
      (p_msg      => 'END of AcctLineType_33'
      ,p_level    => C_LEVEL_PROCEDURE
      ,p_module   => l_log_module);
END IF;
--
EXCEPTION
  WHEN xla_exceptions_pkg.application_exception THEN
      RAISE;
  WHEN OTHERS THEN
       xla_exceptions_pkg.raise_message
           (p_location => 'XLA_00200_AAD_S_000010_BC_PKG.AcctLineType_33');
END AcctLineType_33;
--

---------------------------------------
--
-- PRIVATE FUNCTION
--         AcctLineType_34
--
---------------------------------------
PROCEDURE AcctLineType_34 (
  p_application_id        IN NUMBER
 ,p_event_id              IN NUMBER
 ,p_calculate_acctd_flag  IN VARCHAR2
 ,p_calculate_g_l_flag    IN VARCHAR2
 ,p_actual_flag           IN OUT VARCHAR2
 ,p_balance_type_code     OUT VARCHAR2
 ,p_gain_or_loss_ref      OUT VARCHAR2
 
--Invoice Distribution Description
 , p_source_1            IN VARCHAR2
--Invoice Distribution Account
 , p_source_11            IN NUMBER
--Invoice Distribution Type
 , p_source_15            IN VARCHAR2
 , p_source_15_meaning    IN VARCHAR2
--Purchasing Encumbrance Option
 , p_source_17            IN VARCHAR2
 , p_source_17_meaning    IN VARCHAR2
--Accounting Reversal Indicator
 , p_source_19            IN VARCHAR2
--Distribution Link Type
 , p_source_21            IN VARCHAR2
--Allocation to Main Distribution Identifier
 , p_source_23            IN NUMBER
--Invoice Identifier
 , p_source_24            IN NUMBER
--Business Flow Accounts Payable Application Identifier
 , p_source_25            IN NUMBER
--Business Flow Invoice Distribution Type
 , p_source_26            IN VARCHAR2
--Business Flow Invoice Entity Code
 , p_source_27            IN VARCHAR2
--Business Flow Invoice Distribution Identifier
 , p_source_28            IN NUMBER
--Business Flow Invoice Identifier
 , p_source_29            IN NUMBER
--Invoice Distribution Identifier
 , p_source_30            IN NUMBER
--Payables Encumbrance Upgrade Credit Account
 , p_source_31            IN NUMBER
--Payables Encumbrance Upgrade Credit Amount
 , p_source_32            IN NUMBER
--Invoice Currency Code
 , p_source_33            IN VARCHAR2
--Payables Encumbrance Upgrade Credit Base Amount
 , p_source_34            IN NUMBER
--Payables Encumbrance Upgrade Debit Account
 , p_source_35            IN NUMBER
--Payables Encumbrance Upgrade Debit Amount
 , p_source_36            IN NUMBER
--Payables Encumbrance Upgrade Debit Base Amount
 , p_source_37            IN NUMBER
--Payables Encumbrance Upgrade Option
 , p_source_38            IN VARCHAR2
--Invoice Exchange Date
 , p_source_39            IN DATE
--Invoice Exchange Rate
 , p_source_40            IN NUMBER
--Invoice Exchange Rate Type
 , p_source_41            IN VARCHAR2
--Deferred Accounting End Date
 , p_source_43            IN DATE
--Deferred Accounting Option
 , p_source_44            IN VARCHAR2
--Deferred Accounting Start Date
 , p_source_45            IN DATE
--Override Accounted Amount Indicator
 , p_source_46            IN VARCHAR2
 , p_source_46_meaning    IN VARCHAR2
--Invoice Supplier Identifier
 , p_source_47            IN NUMBER
--Invoice Supplier Site Identifier
 , p_source_48            IN NUMBER
--Third Party Type
 , p_source_49            IN VARCHAR2
--Parent Reversal Identifier
 , p_source_50            IN NUMBER
--Invoice Distribution Tax Line Identifier
 , p_source_52            IN NUMBER
--Invoice Distribution Tax Distribution Identifier from Tax
 , p_source_53            IN NUMBER
--Invoice Distribution Summary Tax Line Identifier
 , p_source_54            IN NUMBER
--Payables Upgrade Credit Encumbrance Type Identifier
 , p_source_55            IN NUMBER
--Payables Upgrade Debit Encumbrance Type Identifier
 , p_source_56            IN NUMBER
--Invoice Distribution Encumbrance Amount
 , p_source_65            IN NUMBER
--Invoice Distribution Encumbrance Ledger Amount
 , p_source_66            IN NUMBER
)
IS

l_component_type              VARCHAR2(80);
l_component_code              VARCHAR2(30);
l_component_type_code         VARCHAR2(1);
l_component_appl_id           INTEGER;
l_amb_context_code            VARCHAR2(30);
l_entity_code                 VARCHAR2(30);
l_event_class_code            VARCHAR2(30);
l_ae_header_id                NUMBER;
l_event_type_code             VARCHAR2(30);
l_line_definition_code        VARCHAR2(30);
l_line_definition_owner_code  VARCHAR2(1);
--
-- adr variables
l_segment                     VARCHAR2(30);
l_ccid                        NUMBER;
l_adr_transaction_coa_id      NUMBER;
l_adr_accounting_coa_id       NUMBER;
l_adr_flexfield_segment_code  VARCHAR2(30);
l_adr_flex_value_set_id       NUMBER;
l_adr_value_type_code         VARCHAR2(30);
l_adr_value_combination_id    NUMBER;
l_adr_value_segment_code      VARCHAR2(30);

l_bflow_method_code           VARCHAR2(30);  -- 4219869 Business Flow
l_bflow_class_code            VARCHAR2(30);  -- 4219869 Business Flow
l_inherit_desc_flag           VARCHAR2(1);   -- 4219869 Business Flow
l_budgetary_control_flag      VARCHAR2(1);   -- 4458381 Public Sector Enh

-- 4262811 Variables ------------------------------------------------------------------------------------------
l_entered_amt_idx             NUMBER;
l_accted_amt_idx              NUMBER;
l_acc_rev_flag                VARCHAR2(1);
l_accrual_line_num            NUMBER;
l_tmp_amt                     NUMBER;
l_acc_rev_natural_side_code   VARCHAR2(1);

l_num_entries                 NUMBER;
l_gl_dates                    xla_ae_journal_entry_pkg.t_array_date;
l_accted_amts                 xla_ae_journal_entry_pkg.t_array_num;
l_entered_amts                xla_ae_journal_entry_pkg.t_array_num;
l_period_names                xla_ae_journal_entry_pkg.t_array_V15L;
l_recog_line_1                NUMBER;
l_recog_line_2                NUMBER;

l_bflow_applied_to_amt_idx    NUMBER;                                -- 5132302
l_bflow_applied_to_amt        NUMBER;                                -- 5132302
l_bflow_applied_to_amts       xla_ae_journal_entry_pkg.t_array_num;  -- 5132302

l_event_id                    NUMBER;  -- To handle MPA header Description: xla_ae_header_pkg.SetHdrDescription

--l_rounding_ccy                VARCHAR2(15); -- To handle MPA rounding  4262811b
l_same_currency               BOOLEAN;        -- To handle MPA rounding  4262811b

---------------------------------------------------------------------------------------------------------------


--
-- bulk performance
--
l_balance_type_code           VARCHAR2(1);
l_rec_acct_attrs              XLA_AE_LINES_PKG.t_rec_acct_attrs;
l_log_module                  VARCHAR2(240);

--
-- Upgrade strategy
--
l_actual_upg_option           VARCHAR2(1);
l_enc_upg_option           VARCHAR2(1);

--
BEGIN
--
IF g_log_enabled THEN
      l_log_module := C_DEFAULT_MODULE||'.AcctLineType_34';
END IF;
--
IF (C_LEVEL_PROCEDURE >= g_log_level) THEN

      trace
         (p_msg      => 'BEGIN of AcctLineType_34'
         ,p_level    => C_LEVEL_PROCEDURE
         ,p_module   => l_log_module);

END IF;
--
l_component_type             := 'AMB_JLT';
l_component_code             := 'AP_INV_PRICE_VAR_DM_ENC_DR';
l_component_type_code        := 'S';
l_component_appl_id          :=  200;
l_amb_context_code           := 'DEFAULT';
l_entity_code                := 'AP_INVOICES';
l_event_class_code           := 'DEBIT MEMOS';
l_event_type_code            := 'DEBIT MEMOS_ALL';
l_line_definition_owner_code := 'S';
l_line_definition_code       := 'ENC_DM_ALL';
--
l_balance_type_code          := 'E';
l_segment                     := NULL;
l_ccid                        := NULL;
l_adr_transaction_coa_id      := NULL;
l_adr_accounting_coa_id       := NULL;
l_adr_flexfield_segment_code  := NULL;
l_adr_flex_value_set_id       := NULL;
l_adr_value_type_code         := NULL;
l_adr_value_combination_id    := NULL;
l_adr_value_segment_code      := NULL;

l_bflow_method_code          := 'NONE';   -- 4219869 Business Flow
l_bflow_class_code           := 'AP_INV_ENCUM';    -- 4219869 Business Flow
l_inherit_desc_flag          := 'N';   -- 4219869 Business Flow
l_budgetary_control_flag     := 'Y';

l_bflow_applied_to_amt_idx   := NULL; -- 5132302
l_bflow_applied_to_amt       := NULL; -- 5132302
l_entered_amt_idx            := NULL;          -- 4262811
l_accted_amt_idx             := NULL;          -- 4262811
l_acc_rev_flag               := NULL;          -- 4262811
l_accrual_line_num           := NULL;          -- 4262811
l_tmp_amt                    := NULL;          -- 4262811
--
 
IF XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id = XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.ledger_id OR
    l_balance_type_code <> 'B' THEN
IF NVL(p_source_15,'
') =  'IPV' AND 
NVL(p_source_17,'
') =  'Y'
 THEN 

   --
   XLA_AE_LINES_PKG.SetNewLine;

   p_balance_type_code          := l_balance_type_code;
   -- set the flag so later we will know whether the gain loss line needs to be created
   
   IF(l_balance_type_code = 'A' and p_actual_flag is null) THEN
     p_actual_flag :='A';
   END IF;

   --
   -- bulk performance
   --
   XLA_AE_LINES_PKG.set_ae_header_id (p_ae_header_id => p_event_id ,
                                      p_header_num   => 0); -- 4262811
   --
   -- set accounting line options
   --
   l_ae_header_id:= xla_ae_lines_pkg.SetAcctLineOption(
           p_natural_side_code          => 'D'
         , p_gain_or_loss_flag          => 'N'
         , p_gl_transfer_mode_code      => 'S'
         , p_acct_entry_type_code       => 'E'
         , p_switch_side_flag           => 'Y'
         , p_merge_duplicate_code       => 'N'
         );
   --
   l_acc_rev_natural_side_code := 'C';  -- 4262811
   -- 
   --
   -- set accounting line type info
   --
   xla_ae_lines_pkg.SetAcctLineType
      (p_component_type             => l_component_type
      ,p_event_type_code            => l_event_type_code
      ,p_line_definition_owner_code => l_line_definition_owner_code
      ,p_line_definition_code       => l_line_definition_code
      ,p_accounting_line_code       => l_component_code
      ,p_accounting_line_type_code  => l_component_type_code
      ,p_accounting_line_appl_id    => l_component_appl_id
      ,p_amb_context_code           => l_amb_context_code
      ,p_entity_code                => l_entity_code
      ,p_event_class_code           => l_event_class_code);
   --
   -- set accounting class
   --
   xla_ae_lines_pkg.SetAcctClass(
           p_accounting_class_code  => 'IPV'
         , p_ae_header_id           => l_ae_header_id
         );

   --
   -- set rounding class
   --
   XLA_AE_LINES_PKG.g_rec_lines.array_rounding_class(XLA_AE_LINES_PKG.g_LineNumber) :=
                      'IPV';

   --
   xla_ae_lines_pkg.g_rec_lines.array_calculate_acctd_flag(xla_ae_lines_pkg.g_LineNumber) := p_calculate_acctd_flag;
   xla_ae_lines_pkg.g_rec_lines.array_calculate_g_l_flag(xla_ae_lines_pkg.g_LineNumber) := p_calculate_g_l_flag;
   --
   -- bulk performance
   --
   XLA_AE_LINES_PKG.g_rec_lines.array_balance_type_code(XLA_AE_LINES_PKG.g_LineNumber) := l_balance_type_code;

   XLA_AE_LINES_PKG.g_rec_lines.array_ledger_id(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id;

   -- 4955764
   XLA_AE_LINES_PKG.g_rec_lines.array_gl_date(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_HEADER_PKG.g_rec_header_new.array_gl_date(g_array_event(p_event_id).array_value_num('header_index'));

   -- 4458381 Public Sector Enh
      XLA_AE_LINES_PKG.g_rec_lines.array_encumbrance_type_id(XLA_AE_LINES_PKG.g_LineNumber) := 1060;
   --
   -- set accounting attributes for the line type
   --
   l_entered_amt_idx := 23;
   l_accted_amt_idx  := 28;
   l_bflow_applied_to_amt_idx  := NULL;  -- 5132302
   l_rec_acct_attrs.array_acct_attr_code(1) := 'ACCOUNTING_REVERSAL_OPTION';
   l_rec_acct_attrs.array_char_value(1)  := p_source_19;
   l_rec_acct_attrs.array_acct_attr_code(2) := 'ALLOC_TO_APPLICATION_ID';
   l_rec_acct_attrs.array_num_value(2)  := 
xla_ae_sources_pkg.GetSystemSourceNum(
   p_source_code           => 'XLA_EVENT_APPL_ID'
 , p_source_type_code      => 'Y'
 , p_source_application_id =>  602
);
   l_rec_acct_attrs.array_acct_attr_code(3) := 'ALLOC_TO_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(3)  := p_source_21;
   l_rec_acct_attrs.array_acct_attr_code(4) := 'ALLOC_TO_ENTITY_CODE';
   l_rec_acct_attrs.array_char_value(4)  := 
xla_ae_sources_pkg.GetSystemSourceChar(
   p_source_code           => 'XLA_ENTITY_CODE'
 , p_source_type_code      => 'Y'
 , p_source_application_id =>  602
);
   l_rec_acct_attrs.array_acct_attr_code(5) := 'ALLOC_TO_FIRST_DIST_ID';
   l_rec_acct_attrs.array_num_value(5)  :=  to_char(p_source_23);
   l_rec_acct_attrs.array_acct_attr_code(6) := 'ALLOC_TO_FIRST_SYS_TRAN_ID';
   l_rec_acct_attrs.array_num_value(6)  :=  to_char(p_source_24);
   l_rec_acct_attrs.array_acct_attr_code(7) := 'APPLIED_TO_APPLICATION_ID';
   l_rec_acct_attrs.array_num_value(7)  := p_source_25;
   l_rec_acct_attrs.array_acct_attr_code(8) := 'APPLIED_TO_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(8)  := p_source_26;
   l_rec_acct_attrs.array_acct_attr_code(9) := 'APPLIED_TO_ENTITY_CODE';
   l_rec_acct_attrs.array_char_value(9)  := p_source_27;
   l_rec_acct_attrs.array_acct_attr_code(10) := 'APPLIED_TO_FIRST_DIST_ID';
   l_rec_acct_attrs.array_num_value(10)  :=  to_char(p_source_28);
   l_rec_acct_attrs.array_acct_attr_code(11) := 'APPLIED_TO_FIRST_SYS_TRAN_ID';
   l_rec_acct_attrs.array_num_value(11)  :=  to_char(p_source_29);
   l_rec_acct_attrs.array_acct_attr_code(12) := 'DISTRIBUTION_IDENTIFIER_1';
   l_rec_acct_attrs.array_num_value(12)  :=  to_char(p_source_30);
   l_rec_acct_attrs.array_acct_attr_code(13) := 'DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(13)  := p_source_21;
   l_rec_acct_attrs.array_acct_attr_code(14) := 'ENC_UPG_CR_CCID';
   l_rec_acct_attrs.array_num_value(14)  := p_source_31;
   l_rec_acct_attrs.array_acct_attr_code(15) := 'ENC_UPG_CR_ENTERED_AMT';
   l_rec_acct_attrs.array_num_value(15)  := p_source_32;
   l_rec_acct_attrs.array_acct_attr_code(16) := 'ENC_UPG_CR_ENTERED_CURR';
   l_rec_acct_attrs.array_char_value(16)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(17) := 'ENC_UPG_CR_LEDGER_AMT';
   l_rec_acct_attrs.array_num_value(17)  := p_source_34;
   l_rec_acct_attrs.array_acct_attr_code(18) := 'ENC_UPG_DR_CCID';
   l_rec_acct_attrs.array_num_value(18)  := p_source_35;
   l_rec_acct_attrs.array_acct_attr_code(19) := 'ENC_UPG_DR_ENTERED_AMT';
   l_rec_acct_attrs.array_num_value(19)  := p_source_36;
   l_rec_acct_attrs.array_acct_attr_code(20) := 'ENC_UPG_DR_ENTERED_CURR';
   l_rec_acct_attrs.array_char_value(20)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(21) := 'ENC_UPG_DR_LEDGER_AMT';
   l_rec_acct_attrs.array_num_value(21)  := p_source_37;
   l_rec_acct_attrs.array_acct_attr_code(22) := 'ENC_UPG_OPTION';
   l_rec_acct_attrs.array_char_value(22)  := p_source_38;
   l_rec_acct_attrs.array_acct_attr_code(23) := 'ENTERED_CURRENCY_AMOUNT';
   l_rec_acct_attrs.array_num_value(23)  := p_source_65;
   l_rec_acct_attrs.array_acct_attr_code(24) := 'ENTERED_CURRENCY_CODE';
   l_rec_acct_attrs.array_char_value(24)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(25) := 'EXCHANGE_DATE';
   l_rec_acct_attrs.array_date_value(25)  := p_source_39;
   l_rec_acct_attrs.array_acct_attr_code(26) := 'EXCHANGE_RATE';
   l_rec_acct_attrs.array_num_value(26)  := p_source_40;
   l_rec_acct_attrs.array_acct_attr_code(27) := 'EXCHANGE_RATE_TYPE';
   l_rec_acct_attrs.array_char_value(27)  := p_source_41;
   l_rec_acct_attrs.array_acct_attr_code(28) := 'LEDGER_AMOUNT';
   l_rec_acct_attrs.array_num_value(28)  := p_source_66;
   l_rec_acct_attrs.array_acct_attr_code(29) := 'MULTIPERIOD_END_DATE';
   l_rec_acct_attrs.array_date_value(29)  := p_source_43;
   l_rec_acct_attrs.array_acct_attr_code(30) := 'MULTIPERIOD_OPTION';
   l_rec_acct_attrs.array_char_value(30)  := p_source_44;
   l_rec_acct_attrs.array_acct_attr_code(31) := 'MULTIPERIOD_START_DATE';
   l_rec_acct_attrs.array_date_value(31)  := p_source_45;
   l_rec_acct_attrs.array_acct_attr_code(32) := 'OVERRIDE_ACCTD_AMT_FLAG';
   l_rec_acct_attrs.array_char_value(32)  := p_source_46;
   l_rec_acct_attrs.array_acct_attr_code(33) := 'PARTY_ID';
   l_rec_acct_attrs.array_num_value(33)  := p_source_47;
   l_rec_acct_attrs.array_acct_attr_code(34) := 'PARTY_SITE_ID';
   l_rec_acct_attrs.array_num_value(34)  := p_source_48;
   l_rec_acct_attrs.array_acct_attr_code(35) := 'PARTY_TYPE';
   l_rec_acct_attrs.array_char_value(35)  := p_source_49;
   l_rec_acct_attrs.array_acct_attr_code(36) := 'REVERSED_DISTRIBUTION_ID1';
   l_rec_acct_attrs.array_num_value(36)  :=  to_char(p_source_50);
   l_rec_acct_attrs.array_acct_attr_code(37) := 'REVERSED_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(37)  := p_source_21;
   l_rec_acct_attrs.array_acct_attr_code(38) := 'TAX_LINE_REF_ID';
   l_rec_acct_attrs.array_num_value(38)  := p_source_52;
   l_rec_acct_attrs.array_acct_attr_code(39) := 'TAX_REC_NREC_DIST_REF_ID';
   l_rec_acct_attrs.array_num_value(39)  := p_source_53;
   l_rec_acct_attrs.array_acct_attr_code(40) := 'TAX_SUMMARY_LINE_REF_ID';
   l_rec_acct_attrs.array_num_value(40)  := p_source_54;
   l_rec_acct_attrs.array_acct_attr_code(41) := 'UPG_CR_ENC_TYPE_ID';
   l_rec_acct_attrs.array_num_value(41)  := p_source_55;
   l_rec_acct_attrs.array_acct_attr_code(42) := 'UPG_DR_ENC_TYPE_ID';
   l_rec_acct_attrs.array_num_value(42)  := p_source_56;

   XLA_AE_LINES_PKG.SetLineAcctAttrs(l_rec_acct_attrs);
   p_gain_or_loss_ref  := XLA_AE_LINES_PKG.g_rec_lines.array_gain_or_loss_ref(XLA_AE_LINES_PKG.g_LineNumber);

   ---------------------------------------------------------------------------------------------------------------
   -- 4336173 -- assign Business Flow Class (replace code in xla_ae_lines_pkg.Business_Flow_Validation)
   ---------------------------------------------------------------------------------------------------------------
   XLA_AE_LINES_PKG.g_rec_lines.array_business_class_code(XLA_AE_LINES_PKG.g_LineNumber) := l_bflow_class_code;

   l_actual_upg_option  := XLA_AE_LINES_PKG.g_rec_lines.array_actual_upg_option(XLA_AE_LINES_PKG.g_LineNumber);
   l_enc_upg_option     := XLA_AE_LINES_PKG.g_rec_lines.array_enc_upg_option(XLA_AE_LINES_PKG.g_LineNumber);

   IF xla_accounting_cache_pkg.GetValueChar
         (p_source_code         => 'LEDGER_CATEGORY_CODE'
         ,p_target_ledger_id    => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id) IN ('PRIMARY','ALC')
   AND l_bflow_method_code = 'PRIOR_ENTRY'
--   AND (l_actual_upg_option = 'Y' OR l_enc_upg_option = 'Y') Bug 4922099
   AND ( (NVL(l_actual_upg_option, 'N') IN ('Y', 'O')) OR
         (NVL(l_enc_upg_option, 'N') IN ('Y', 'O'))
       )
   THEN
         xla_ae_lines_pkg.BflowUpgEntry
           (p_business_method_code    => l_bflow_method_code
           ,p_business_class_code     => l_bflow_class_code
           ,p_balance_type            => l_balance_type_code);
   ELSE
      NULL;
-- No business flow processing for business flow method of NONE.
   END IF;

   --
   -- call analytical criteria
   --
   
   --
   -- call description
   --
   
xla_ae_lines_pkg.SetLineDescription(
   p_ae_header_id => l_ae_header_id
  ,p_description  => Description_2 (
     p_application_id         => p_application_id
   , p_ae_header_id           => l_ae_header_id 
, p_source_1 => p_source_1
   )
);


   --
   -- call ADRs
   -- Bug 4922099
   --
   IF ( (l_bflow_method_code <> 'PRIOR_ENTRY') OR
        (NVL(l_actual_upg_option, 'N') = 'O') OR
        (NVL(l_enc_upg_option, 'N') = 'O')
      )
   THEN
   NULL;
   --
   --
   
  l_ccid := AcctDerRule_7(
           p_application_id           => p_application_id
         , p_ae_header_id             => l_ae_header_id 
, p_source_11 => p_source_11
         , x_transaction_coa_id       => l_adr_transaction_coa_id
         , x_accounting_coa_id        => l_adr_accounting_coa_id
         , x_value_type_code          => l_adr_value_type_code
         , p_side                     => 'NA'
   );

   xla_ae_lines_pkg.set_ccid(
    p_code_combination_id          => l_ccid
  , p_value_type_code              => l_adr_value_type_code
  , p_transaction_coa_id           => l_adr_transaction_coa_id
  , p_accounting_coa_id            => l_adr_accounting_coa_id
  , p_adr_code                     => 'AP_INVOICE_DIST'
  , p_adr_type_code                => 'S'
  , p_component_type               => l_component_type
  , p_component_code               => l_component_code
  , p_component_type_code          => l_component_type_code
  , p_component_appl_id            => l_component_appl_id
  , p_amb_context_code             => l_amb_context_code
  , p_side                         => 'NA'
  );


   --
   --
   END IF;
   --
   -- Bug 4922099
   IF ( ( (NVL(l_actual_upg_option, 'N') = 'O') OR
          (NVL(l_enc_upg_option, 'N') = 'O')
        ) AND
        (l_bflow_method_code = 'PRIOR_ENTRY')
      )
   THEN
      IF
      --
      1 = 2
      --
      THEN
      xla_accounting_err_pkg.build_message
                                    (p_appli_s_name            => 'XLA'
                                    ,p_msg_name                => 'XLA_UPG_OVERRIDE_ADR_UNDEFINED'
                                    ,p_token_1                 => 'LINE_NUMBER'
                                    ,p_value_1                 => XLA_AE_LINES_PKG.g_LineNumber
                                    ,p_token_2                 => 'LINE_TYPE_NAME'
                                    ,p_value_2                 => XLA_AE_SOURCES_PKG.GetComponentName (
                                                                             l_component_type
                                                                            ,l_component_code
                                                                            ,l_component_type_code
                                                                            ,l_component_appl_id
                                                                            ,l_amb_context_code
                                                                            ,l_entity_code
                                                                            ,l_event_class_code
                                                                           )
                                    ,p_token_3                 => 'OWNER'
                                    ,p_value_3                 => xla_lookups_pkg.get_meaning(
                                                                          p_lookup_type     => 'XLA_OWNER_TYPE'
                                                                          ,p_lookup_code    => l_component_type_code
                                                                         )
                                    ,p_token_4                 => 'PRODUCT_NAME'
                                    ,p_value_4                 => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.application_name
                                    ,p_entity_id               => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.entity_id
                                    ,p_event_id                => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.event_id
                                    ,p_ledger_id               => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id
                                    ,p_ae_header_id            =>  NULL
                                       );

        IF (C_LEVEL_ERROR>= g_log_level) THEN
                 trace
                      (p_msg      => 'ERROR: XLA_UPG_OVERRIDE_ADR_UNDEFINED'
                      ,p_level    => C_LEVEL_ERROR
                      ,p_module   => l_log_module);
        END IF;
      END IF;
   END IF;
   --
   --
   ------------------------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- NOTE: XLA_AE_LINES_PKG.ValidateCurrentLine should NOT be generated if business flow method is
   -- Prior Entry.  Currently, the following code is always generated.
   ------------------------------------------------------------------------------------------------
   XLA_AE_LINES_PKG.ValidateCurrentLine;

   ------------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- Populated credit and debit amounts -- Need to generate this within IF <condition>
   ------------------------------------------------------------------------------------
   XLA_AE_LINES_PKG.SetDebitCreditAmounts;

   ----------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- Update journal entry status -- Need to generate this within IF <condition>
   ----------------------------------------------------------------------------------
   XLA_AE_JOURNAL_ENTRY_PKG.UpdateJournalEntryStatus
         (p_hdr_idx => g_array_event(p_event_id).array_value_num('header_index')
         ,p_balance_type_code => l_balance_type_code
         );

   -------------------------------------------------------------------------------------------
   -- 4262811 - Generate the Accrual Reversal lines
   -------------------------------------------------------------------------------------------
   BEGIN
      l_acc_rev_flag := XLA_AE_HEADER_PKG.g_rec_header_new.array_accrual_reversal_flag
                              (g_array_event(p_event_id).array_value_num('header_index'));
      IF l_acc_rev_flag IS NULL THEN
         l_acc_rev_flag := 'N';
      END IF;
   EXCEPTION
      WHEN OTHERS THEN
         l_acc_rev_flag := 'N';
   END;
   --
   IF (l_acc_rev_flag = 'Y') THEN

       -- 4645092  ------------------------------------------------------------------------------
       -- To allow MPA report to determine if it should generate report process
       XLA_ACCOUNTING_PKG.g_mpa_accrual_exists := 'Y';
       ------------------------------------------------------------------------------------------

       l_accrual_line_num := XLA_AE_LINES_PKG.g_LineNumber;
       XLA_AE_LINES_PKG.CopyLineInfo(l_accrual_line_num);
   -- added call to set_ccid to execute mapping  for secondary accrual reversal entries bug 7444204
   -- call ADRs
   -- Bug 4922099
   --
   IF ( (l_bflow_method_code <> 'PRIOR_ENTRY') OR
        (NVL(l_actual_upg_option, 'N') = 'O') OR
        (NVL(l_enc_upg_option, 'N') = 'O')
      )
   THEN
   NULL;
   --
   --
   
  l_ccid := AcctDerRule_7(
           p_application_id           => p_application_id
         , p_ae_header_id             => l_ae_header_id 
, p_source_11 => p_source_11
         , x_transaction_coa_id       => l_adr_transaction_coa_id
         , x_accounting_coa_id        => l_adr_accounting_coa_id
         , x_value_type_code          => l_adr_value_type_code
         , p_side                     => 'NA'
   );

   xla_ae_lines_pkg.set_ccid(
    p_code_combination_id          => l_ccid
  , p_value_type_code              => l_adr_value_type_code
  , p_transaction_coa_id           => l_adr_transaction_coa_id
  , p_accounting_coa_id            => l_adr_accounting_coa_id
  , p_adr_code                     => 'AP_INVOICE_DIST'
  , p_adr_type_code                => 'S'
  , p_component_type               => l_component_type
  , p_component_code               => l_component_code
  , p_component_type_code          => l_component_type_code
  , p_component_appl_id            => l_component_appl_id
  , p_amb_context_code             => l_amb_context_code
  , p_side                         => 'NA'
  );


   --
   --
   END IF;

       --
       -- Update the line information that should be overwritten
       --
       XLA_AE_LINES_PKG.set_ae_header_id(p_ae_header_id => p_event_id ,
                                         p_header_num   => 1);
       XLA_AE_LINES_PKG.g_rec_lines.array_header_num(XLA_AE_LINES_PKG.g_LineNumber)  :=1;

       XLA_AE_LINES_PKG.g_rec_lines.array_business_class_code(XLA_AE_LINES_PKG.g_LineNumber) := NULL; -- 4669271

       IF l_bflow_method_code <> 'NONE' THEN  -- 4655713b
          XLA_AE_LINES_PKG.g_rec_lines.array_reversal_code(XLA_AE_LINES_PKG.g_LineNumber) := CONCAT('MPA_',l_bflow_method_code);
       END IF;

      --
      -- Depending on the Reversal Method setup, do a switch side or changes sign for the amounts
      --
      IF (XLA_AE_JOURNAL_ENTRY_PKG.g_cache_ledgers_info.ledger_reversal_option = 'SIDE') THEN
          XLA_AE_LINES_PKG.g_rec_lines.array_natural_side_code(XLA_AE_LINES_PKG.g_LineNumber) :=  l_acc_rev_natural_side_code;
      ELSE
          ---------------------------------------------------------------------------------------------------
          -- 4262811a Switch Sign
          ---------------------------------------------------------------------------------------------------
          XLA_AE_LINES_PKG.g_rec_lines.array_switch_side_flag(XLA_AE_LINES_PKG.g_LineNumber) := 'N';  -- 5052518
          XLA_AE_LINES_PKG.g_rec_lines.array_ledger_amount(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_ledger_amount(XLA_AE_LINES_PKG.g_LineNumber) * -1;
          XLA_AE_LINES_PKG.g_rec_lines.array_entered_amount(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_entered_amount(XLA_AE_LINES_PKG.g_LineNumber) * -1;
          -- 5132302
          XLA_AE_LINES_PKG.g_rec_lines.array_bflow_applied_to_amt(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_bflow_applied_to_amt(XLA_AE_LINES_PKG.g_LineNumber) * -1;

      END IF;

      -- 4955764
      XLA_AE_LINES_PKG.g_rec_lines.array_gl_date(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_HEADER_PKG.g_rec_header_new.array_gl_date(g_array_event(p_event_id).array_value_num('acc_rev_header_index'));


      XLA_AE_LINES_PKG.ValidateCurrentLine;
      XLA_AE_LINES_PKG.SetDebitCreditAmounts;

      XLA_AE_JOURNAL_ENTRY_PKG.UpdateJournalEntryStatus
               (p_hdr_idx           => g_array_event(p_event_id).array_value_num('acc_rev_header_index')
               ,p_balance_type_code => l_balance_type_code);

   END IF;

   -----------------------------------------------------------------------------------------
   -- 4262811 Multiperiod Accounting
   -----------------------------------------------------------------------------------------
     -- No MPA option is assigned.


END IF;
END IF;
--

--
IF (C_LEVEL_PROCEDURE >= g_log_level) THEN
   trace
      (p_msg      => 'END of AcctLineType_34'
      ,p_level    => C_LEVEL_PROCEDURE
      ,p_module   => l_log_module);
END IF;
--
EXCEPTION
  WHEN xla_exceptions_pkg.application_exception THEN
      RAISE;
  WHEN OTHERS THEN
       xla_exceptions_pkg.raise_message
           (p_location => 'XLA_00200_AAD_S_000010_BC_PKG.AcctLineType_34');
END AcctLineType_34;
--

---------------------------------------
--
-- PRIVATE FUNCTION
--         AcctLineType_35
--
---------------------------------------
PROCEDURE AcctLineType_35 (
  p_application_id        IN NUMBER
 ,p_event_id              IN NUMBER
 ,p_calculate_acctd_flag  IN VARCHAR2
 ,p_calculate_g_l_flag    IN VARCHAR2
 ,p_actual_flag           IN OUT VARCHAR2
 ,p_balance_type_code     OUT VARCHAR2
 ,p_gain_or_loss_ref      OUT VARCHAR2
 
--Invoice Distribution Description
 , p_source_1            IN VARCHAR2
--Invoice Distribution Account
 , p_source_11            IN NUMBER
--Invoice Distribution Type
 , p_source_15            IN VARCHAR2
 , p_source_15_meaning    IN VARCHAR2
--Purchasing Encumbrance Option
 , p_source_17            IN VARCHAR2
 , p_source_17_meaning    IN VARCHAR2
--Accounting Reversal Indicator
 , p_source_19            IN VARCHAR2
--Distribution Link Type
 , p_source_21            IN VARCHAR2
--Allocation to Main Distribution Identifier
 , p_source_23            IN NUMBER
--Invoice Identifier
 , p_source_24            IN NUMBER
--Business Flow Accounts Payable Application Identifier
 , p_source_25            IN NUMBER
--Business Flow Invoice Distribution Type
 , p_source_26            IN VARCHAR2
--Business Flow Invoice Entity Code
 , p_source_27            IN VARCHAR2
--Business Flow Invoice Distribution Identifier
 , p_source_28            IN NUMBER
--Business Flow Invoice Identifier
 , p_source_29            IN NUMBER
--Invoice Distribution Identifier
 , p_source_30            IN NUMBER
--Payables Encumbrance Upgrade Credit Account
 , p_source_31            IN NUMBER
--Payables Encumbrance Upgrade Credit Amount
 , p_source_32            IN NUMBER
--Invoice Currency Code
 , p_source_33            IN VARCHAR2
--Payables Encumbrance Upgrade Credit Base Amount
 , p_source_34            IN NUMBER
--Payables Encumbrance Upgrade Debit Account
 , p_source_35            IN NUMBER
--Payables Encumbrance Upgrade Debit Amount
 , p_source_36            IN NUMBER
--Payables Encumbrance Upgrade Debit Base Amount
 , p_source_37            IN NUMBER
--Payables Encumbrance Upgrade Option
 , p_source_38            IN VARCHAR2
--Invoice Exchange Date
 , p_source_39            IN DATE
--Invoice Exchange Rate
 , p_source_40            IN NUMBER
--Invoice Exchange Rate Type
 , p_source_41            IN VARCHAR2
--Deferred Accounting End Date
 , p_source_43            IN DATE
--Deferred Accounting Option
 , p_source_44            IN VARCHAR2
--Deferred Accounting Start Date
 , p_source_45            IN DATE
--Override Accounted Amount Indicator
 , p_source_46            IN VARCHAR2
 , p_source_46_meaning    IN VARCHAR2
--Invoice Supplier Identifier
 , p_source_47            IN NUMBER
--Invoice Supplier Site Identifier
 , p_source_48            IN NUMBER
--Third Party Type
 , p_source_49            IN VARCHAR2
--Parent Reversal Identifier
 , p_source_50            IN NUMBER
--Invoice Distribution Statistical Amount
 , p_source_51            IN NUMBER
--Invoice Distribution Tax Line Identifier
 , p_source_52            IN NUMBER
--Invoice Distribution Tax Distribution Identifier from Tax
 , p_source_53            IN NUMBER
--Invoice Distribution Summary Tax Line Identifier
 , p_source_54            IN NUMBER
--Payables Upgrade Credit Encumbrance Type Identifier
 , p_source_55            IN NUMBER
--Payables Upgrade Debit Encumbrance Type Identifier
 , p_source_56            IN NUMBER
--Invoice Distribution Amount
 , p_source_57            IN NUMBER
--Invoice Distribution Encumbrance Amount
 , p_source_65            IN NUMBER
--Invoice Distribution Encumbrance Ledger Amount
 , p_source_66            IN NUMBER
)
IS

l_component_type              VARCHAR2(80);
l_component_code              VARCHAR2(30);
l_component_type_code         VARCHAR2(1);
l_component_appl_id           INTEGER;
l_amb_context_code            VARCHAR2(30);
l_entity_code                 VARCHAR2(30);
l_event_class_code            VARCHAR2(30);
l_ae_header_id                NUMBER;
l_event_type_code             VARCHAR2(30);
l_line_definition_code        VARCHAR2(30);
l_line_definition_owner_code  VARCHAR2(1);
--
-- adr variables
l_segment                     VARCHAR2(30);
l_ccid                        NUMBER;
l_adr_transaction_coa_id      NUMBER;
l_adr_accounting_coa_id       NUMBER;
l_adr_flexfield_segment_code  VARCHAR2(30);
l_adr_flex_value_set_id       NUMBER;
l_adr_value_type_code         VARCHAR2(30);
l_adr_value_combination_id    NUMBER;
l_adr_value_segment_code      VARCHAR2(30);

l_bflow_method_code           VARCHAR2(30);  -- 4219869 Business Flow
l_bflow_class_code            VARCHAR2(30);  -- 4219869 Business Flow
l_inherit_desc_flag           VARCHAR2(1);   -- 4219869 Business Flow
l_budgetary_control_flag      VARCHAR2(1);   -- 4458381 Public Sector Enh

-- 4262811 Variables ------------------------------------------------------------------------------------------
l_entered_amt_idx             NUMBER;
l_accted_amt_idx              NUMBER;
l_acc_rev_flag                VARCHAR2(1);
l_accrual_line_num            NUMBER;
l_tmp_amt                     NUMBER;
l_acc_rev_natural_side_code   VARCHAR2(1);

l_num_entries                 NUMBER;
l_gl_dates                    xla_ae_journal_entry_pkg.t_array_date;
l_accted_amts                 xla_ae_journal_entry_pkg.t_array_num;
l_entered_amts                xla_ae_journal_entry_pkg.t_array_num;
l_period_names                xla_ae_journal_entry_pkg.t_array_V15L;
l_recog_line_1                NUMBER;
l_recog_line_2                NUMBER;

l_bflow_applied_to_amt_idx    NUMBER;                                -- 5132302
l_bflow_applied_to_amt        NUMBER;                                -- 5132302
l_bflow_applied_to_amts       xla_ae_journal_entry_pkg.t_array_num;  -- 5132302

l_event_id                    NUMBER;  -- To handle MPA header Description: xla_ae_header_pkg.SetHdrDescription

--l_rounding_ccy                VARCHAR2(15); -- To handle MPA rounding  4262811b
l_same_currency               BOOLEAN;        -- To handle MPA rounding  4262811b

---------------------------------------------------------------------------------------------------------------


--
-- bulk performance
--
l_balance_type_code           VARCHAR2(1);
l_rec_acct_attrs              XLA_AE_LINES_PKG.t_rec_acct_attrs;
l_log_module                  VARCHAR2(240);

--
-- Upgrade strategy
--
l_actual_upg_option           VARCHAR2(1);
l_enc_upg_option           VARCHAR2(1);

--
BEGIN
--
IF g_log_enabled THEN
      l_log_module := C_DEFAULT_MODULE||'.AcctLineType_35';
END IF;
--
IF (C_LEVEL_PROCEDURE >= g_log_level) THEN

      trace
         (p_msg      => 'BEGIN of AcctLineType_35'
         ,p_level    => C_LEVEL_PROCEDURE
         ,p_module   => l_log_module);

END IF;
--
l_component_type             := 'AMB_JLT';
l_component_code             := 'AP_INV_PRICE_VAR_INV_ENC_DR';
l_component_type_code        := 'S';
l_component_appl_id          :=  200;
l_amb_context_code           := 'DEFAULT';
l_entity_code                := 'AP_INVOICES';
l_event_class_code           := 'INVOICES';
l_event_type_code            := 'INVOICES_ALL';
l_line_definition_owner_code := 'S';
l_line_definition_code       := 'ENC_INVOICES_ALL';
--
l_balance_type_code          := 'E';
l_segment                     := NULL;
l_ccid                        := NULL;
l_adr_transaction_coa_id      := NULL;
l_adr_accounting_coa_id       := NULL;
l_adr_flexfield_segment_code  := NULL;
l_adr_flex_value_set_id       := NULL;
l_adr_value_type_code         := NULL;
l_adr_value_combination_id    := NULL;
l_adr_value_segment_code      := NULL;

l_bflow_method_code          := 'NONE';   -- 4219869 Business Flow
l_bflow_class_code           := 'AP_INV_ENCUM';    -- 4219869 Business Flow
l_inherit_desc_flag          := 'N';   -- 4219869 Business Flow
l_budgetary_control_flag     := 'Y';

l_bflow_applied_to_amt_idx   := NULL; -- 5132302
l_bflow_applied_to_amt       := NULL; -- 5132302
l_entered_amt_idx            := NULL;          -- 4262811
l_accted_amt_idx             := NULL;          -- 4262811
l_acc_rev_flag               := NULL;          -- 4262811
l_accrual_line_num           := NULL;          -- 4262811
l_tmp_amt                    := NULL;          -- 4262811
--
 
IF XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id = XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.ledger_id OR
    l_balance_type_code <> 'B' THEN
IF NVL(p_source_15,'
') =  'IPV' AND 
NVL(p_source_17,'
') =  'Y'
 THEN 

   --
   XLA_AE_LINES_PKG.SetNewLine;

   p_balance_type_code          := l_balance_type_code;
   -- set the flag so later we will know whether the gain loss line needs to be created
   
   IF(l_balance_type_code = 'A' and p_actual_flag is null) THEN
     p_actual_flag :='A';
   END IF;

   --
   -- bulk performance
   --
   XLA_AE_LINES_PKG.set_ae_header_id (p_ae_header_id => p_event_id ,
                                      p_header_num   => 0); -- 4262811
   --
   -- set accounting line options
   --
   l_ae_header_id:= xla_ae_lines_pkg.SetAcctLineOption(
           p_natural_side_code          => 'D'
         , p_gain_or_loss_flag          => 'N'
         , p_gl_transfer_mode_code      => 'S'
         , p_acct_entry_type_code       => 'E'
         , p_switch_side_flag           => 'Y'
         , p_merge_duplicate_code       => 'N'
         );
   --
   l_acc_rev_natural_side_code := 'C';  -- 4262811
   -- 
   --
   -- set accounting line type info
   --
   xla_ae_lines_pkg.SetAcctLineType
      (p_component_type             => l_component_type
      ,p_event_type_code            => l_event_type_code
      ,p_line_definition_owner_code => l_line_definition_owner_code
      ,p_line_definition_code       => l_line_definition_code
      ,p_accounting_line_code       => l_component_code
      ,p_accounting_line_type_code  => l_component_type_code
      ,p_accounting_line_appl_id    => l_component_appl_id
      ,p_amb_context_code           => l_amb_context_code
      ,p_entity_code                => l_entity_code
      ,p_event_class_code           => l_event_class_code);
   --
   -- set accounting class
   --
   xla_ae_lines_pkg.SetAcctClass(
           p_accounting_class_code  => 'IPV'
         , p_ae_header_id           => l_ae_header_id
         );

   --
   -- set rounding class
   --
   XLA_AE_LINES_PKG.g_rec_lines.array_rounding_class(XLA_AE_LINES_PKG.g_LineNumber) :=
                      'IPV';

   --
   xla_ae_lines_pkg.g_rec_lines.array_calculate_acctd_flag(xla_ae_lines_pkg.g_LineNumber) := p_calculate_acctd_flag;
   xla_ae_lines_pkg.g_rec_lines.array_calculate_g_l_flag(xla_ae_lines_pkg.g_LineNumber) := p_calculate_g_l_flag;
   --
   -- bulk performance
   --
   XLA_AE_LINES_PKG.g_rec_lines.array_balance_type_code(XLA_AE_LINES_PKG.g_LineNumber) := l_balance_type_code;

   XLA_AE_LINES_PKG.g_rec_lines.array_ledger_id(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id;

   -- 4955764
   XLA_AE_LINES_PKG.g_rec_lines.array_gl_date(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_HEADER_PKG.g_rec_header_new.array_gl_date(g_array_event(p_event_id).array_value_num('header_index'));

   -- 4458381 Public Sector Enh
      XLA_AE_LINES_PKG.g_rec_lines.array_encumbrance_type_id(XLA_AE_LINES_PKG.g_LineNumber) := 1060;
   --
   -- set accounting attributes for the line type
   --
   l_entered_amt_idx := 24;
   l_accted_amt_idx  := 29;
   l_bflow_applied_to_amt_idx  := 7;  -- 5132302
   l_rec_acct_attrs.array_acct_attr_code(1) := 'ACCOUNTING_REVERSAL_OPTION';
   l_rec_acct_attrs.array_char_value(1)  := p_source_19;
   l_rec_acct_attrs.array_acct_attr_code(2) := 'ALLOC_TO_APPLICATION_ID';
   l_rec_acct_attrs.array_num_value(2)  := 
xla_ae_sources_pkg.GetSystemSourceNum(
   p_source_code           => 'XLA_EVENT_APPL_ID'
 , p_source_type_code      => 'Y'
 , p_source_application_id =>  602
);
   l_rec_acct_attrs.array_acct_attr_code(3) := 'ALLOC_TO_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(3)  := p_source_21;
   l_rec_acct_attrs.array_acct_attr_code(4) := 'ALLOC_TO_ENTITY_CODE';
   l_rec_acct_attrs.array_char_value(4)  := 
xla_ae_sources_pkg.GetSystemSourceChar(
   p_source_code           => 'XLA_ENTITY_CODE'
 , p_source_type_code      => 'Y'
 , p_source_application_id =>  602
);
   l_rec_acct_attrs.array_acct_attr_code(5) := 'ALLOC_TO_FIRST_DIST_ID';
   l_rec_acct_attrs.array_num_value(5)  :=  to_char(p_source_23);
   l_rec_acct_attrs.array_acct_attr_code(6) := 'ALLOC_TO_FIRST_SYS_TRAN_ID';
   l_rec_acct_attrs.array_num_value(6)  :=  to_char(p_source_24);
   l_rec_acct_attrs.array_acct_attr_code(7) := 'APPLIED_TO_AMOUNT';
   l_rec_acct_attrs.array_num_value(7)  := p_source_57;
   l_rec_acct_attrs.array_acct_attr_code(8) := 'APPLIED_TO_APPLICATION_ID';
   l_rec_acct_attrs.array_num_value(8)  := p_source_25;
   l_rec_acct_attrs.array_acct_attr_code(9) := 'APPLIED_TO_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(9)  := p_source_26;
   l_rec_acct_attrs.array_acct_attr_code(10) := 'APPLIED_TO_ENTITY_CODE';
   l_rec_acct_attrs.array_char_value(10)  := p_source_27;
   l_rec_acct_attrs.array_acct_attr_code(11) := 'APPLIED_TO_FIRST_DIST_ID';
   l_rec_acct_attrs.array_num_value(11)  :=  to_char(p_source_28);
   l_rec_acct_attrs.array_acct_attr_code(12) := 'APPLIED_TO_FIRST_SYS_TRAN_ID';
   l_rec_acct_attrs.array_num_value(12)  :=  to_char(p_source_29);
   l_rec_acct_attrs.array_acct_attr_code(13) := 'DISTRIBUTION_IDENTIFIER_1';
   l_rec_acct_attrs.array_num_value(13)  :=  to_char(p_source_30);
   l_rec_acct_attrs.array_acct_attr_code(14) := 'DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(14)  := p_source_21;
   l_rec_acct_attrs.array_acct_attr_code(15) := 'ENC_UPG_CR_CCID';
   l_rec_acct_attrs.array_num_value(15)  := p_source_31;
   l_rec_acct_attrs.array_acct_attr_code(16) := 'ENC_UPG_CR_ENTERED_AMT';
   l_rec_acct_attrs.array_num_value(16)  := p_source_32;
   l_rec_acct_attrs.array_acct_attr_code(17) := 'ENC_UPG_CR_ENTERED_CURR';
   l_rec_acct_attrs.array_char_value(17)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(18) := 'ENC_UPG_CR_LEDGER_AMT';
   l_rec_acct_attrs.array_num_value(18)  := p_source_34;
   l_rec_acct_attrs.array_acct_attr_code(19) := 'ENC_UPG_DR_CCID';
   l_rec_acct_attrs.array_num_value(19)  := p_source_35;
   l_rec_acct_attrs.array_acct_attr_code(20) := 'ENC_UPG_DR_ENTERED_AMT';
   l_rec_acct_attrs.array_num_value(20)  := p_source_36;
   l_rec_acct_attrs.array_acct_attr_code(21) := 'ENC_UPG_DR_ENTERED_CURR';
   l_rec_acct_attrs.array_char_value(21)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(22) := 'ENC_UPG_DR_LEDGER_AMT';
   l_rec_acct_attrs.array_num_value(22)  := p_source_37;
   l_rec_acct_attrs.array_acct_attr_code(23) := 'ENC_UPG_OPTION';
   l_rec_acct_attrs.array_char_value(23)  := p_source_38;
   l_rec_acct_attrs.array_acct_attr_code(24) := 'ENTERED_CURRENCY_AMOUNT';
   l_rec_acct_attrs.array_num_value(24)  := p_source_65;
   l_rec_acct_attrs.array_acct_attr_code(25) := 'ENTERED_CURRENCY_CODE';
   l_rec_acct_attrs.array_char_value(25)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(26) := 'EXCHANGE_DATE';
   l_rec_acct_attrs.array_date_value(26)  := p_source_39;
   l_rec_acct_attrs.array_acct_attr_code(27) := 'EXCHANGE_RATE';
   l_rec_acct_attrs.array_num_value(27)  := p_source_40;
   l_rec_acct_attrs.array_acct_attr_code(28) := 'EXCHANGE_RATE_TYPE';
   l_rec_acct_attrs.array_char_value(28)  := p_source_41;
   l_rec_acct_attrs.array_acct_attr_code(29) := 'LEDGER_AMOUNT';
   l_rec_acct_attrs.array_num_value(29)  := p_source_66;
   l_rec_acct_attrs.array_acct_attr_code(30) := 'MULTIPERIOD_END_DATE';
   l_rec_acct_attrs.array_date_value(30)  := p_source_43;
   l_rec_acct_attrs.array_acct_attr_code(31) := 'MULTIPERIOD_OPTION';
   l_rec_acct_attrs.array_char_value(31)  := p_source_44;
   l_rec_acct_attrs.array_acct_attr_code(32) := 'MULTIPERIOD_START_DATE';
   l_rec_acct_attrs.array_date_value(32)  := p_source_45;
   l_rec_acct_attrs.array_acct_attr_code(33) := 'OVERRIDE_ACCTD_AMT_FLAG';
   l_rec_acct_attrs.array_char_value(33)  := p_source_46;
   l_rec_acct_attrs.array_acct_attr_code(34) := 'PARTY_ID';
   l_rec_acct_attrs.array_num_value(34)  := p_source_47;
   l_rec_acct_attrs.array_acct_attr_code(35) := 'PARTY_SITE_ID';
   l_rec_acct_attrs.array_num_value(35)  := p_source_48;
   l_rec_acct_attrs.array_acct_attr_code(36) := 'PARTY_TYPE';
   l_rec_acct_attrs.array_char_value(36)  := p_source_49;
   l_rec_acct_attrs.array_acct_attr_code(37) := 'REVERSED_DISTRIBUTION_ID1';
   l_rec_acct_attrs.array_num_value(37)  :=  to_char(p_source_50);
   l_rec_acct_attrs.array_acct_attr_code(38) := 'REVERSED_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(38)  := p_source_21;
   l_rec_acct_attrs.array_acct_attr_code(39) := 'STATISTICAL_AMOUNT';
   l_rec_acct_attrs.array_num_value(39)  := p_source_51;
   l_rec_acct_attrs.array_acct_attr_code(40) := 'TAX_LINE_REF_ID';
   l_rec_acct_attrs.array_num_value(40)  := p_source_52;
   l_rec_acct_attrs.array_acct_attr_code(41) := 'TAX_REC_NREC_DIST_REF_ID';
   l_rec_acct_attrs.array_num_value(41)  := p_source_53;
   l_rec_acct_attrs.array_acct_attr_code(42) := 'TAX_SUMMARY_LINE_REF_ID';
   l_rec_acct_attrs.array_num_value(42)  := p_source_54;
   l_rec_acct_attrs.array_acct_attr_code(43) := 'UPG_CR_ENC_TYPE_ID';
   l_rec_acct_attrs.array_num_value(43)  := p_source_55;
   l_rec_acct_attrs.array_acct_attr_code(44) := 'UPG_DR_ENC_TYPE_ID';
   l_rec_acct_attrs.array_num_value(44)  := p_source_56;

   XLA_AE_LINES_PKG.SetLineAcctAttrs(l_rec_acct_attrs);
   p_gain_or_loss_ref  := XLA_AE_LINES_PKG.g_rec_lines.array_gain_or_loss_ref(XLA_AE_LINES_PKG.g_LineNumber);

   ---------------------------------------------------------------------------------------------------------------
   -- 4336173 -- assign Business Flow Class (replace code in xla_ae_lines_pkg.Business_Flow_Validation)
   ---------------------------------------------------------------------------------------------------------------
   XLA_AE_LINES_PKG.g_rec_lines.array_business_class_code(XLA_AE_LINES_PKG.g_LineNumber) := l_bflow_class_code;

   l_actual_upg_option  := XLA_AE_LINES_PKG.g_rec_lines.array_actual_upg_option(XLA_AE_LINES_PKG.g_LineNumber);
   l_enc_upg_option     := XLA_AE_LINES_PKG.g_rec_lines.array_enc_upg_option(XLA_AE_LINES_PKG.g_LineNumber);

   IF xla_accounting_cache_pkg.GetValueChar
         (p_source_code         => 'LEDGER_CATEGORY_CODE'
         ,p_target_ledger_id    => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id) IN ('PRIMARY','ALC')
   AND l_bflow_method_code = 'PRIOR_ENTRY'
--   AND (l_actual_upg_option = 'Y' OR l_enc_upg_option = 'Y') Bug 4922099
   AND ( (NVL(l_actual_upg_option, 'N') IN ('Y', 'O')) OR
         (NVL(l_enc_upg_option, 'N') IN ('Y', 'O'))
       )
   THEN
         xla_ae_lines_pkg.BflowUpgEntry
           (p_business_method_code    => l_bflow_method_code
           ,p_business_class_code     => l_bflow_class_code
           ,p_balance_type            => l_balance_type_code);
   ELSE
      NULL;
-- No business flow processing for business flow method of NONE.
   END IF;

   --
   -- call analytical criteria
   --
   
   --
   -- call description
   --
   
xla_ae_lines_pkg.SetLineDescription(
   p_ae_header_id => l_ae_header_id
  ,p_description  => Description_2 (
     p_application_id         => p_application_id
   , p_ae_header_id           => l_ae_header_id 
, p_source_1 => p_source_1
   )
);


   --
   -- call ADRs
   -- Bug 4922099
   --
   IF ( (l_bflow_method_code <> 'PRIOR_ENTRY') OR
        (NVL(l_actual_upg_option, 'N') = 'O') OR
        (NVL(l_enc_upg_option, 'N') = 'O')
      )
   THEN
   NULL;
   --
   --
   
  l_ccid := AcctDerRule_7(
           p_application_id           => p_application_id
         , p_ae_header_id             => l_ae_header_id 
, p_source_11 => p_source_11
         , x_transaction_coa_id       => l_adr_transaction_coa_id
         , x_accounting_coa_id        => l_adr_accounting_coa_id
         , x_value_type_code          => l_adr_value_type_code
         , p_side                     => 'NA'
   );

   xla_ae_lines_pkg.set_ccid(
    p_code_combination_id          => l_ccid
  , p_value_type_code              => l_adr_value_type_code
  , p_transaction_coa_id           => l_adr_transaction_coa_id
  , p_accounting_coa_id            => l_adr_accounting_coa_id
  , p_adr_code                     => 'AP_INVOICE_DIST'
  , p_adr_type_code                => 'S'
  , p_component_type               => l_component_type
  , p_component_code               => l_component_code
  , p_component_type_code          => l_component_type_code
  , p_component_appl_id            => l_component_appl_id
  , p_amb_context_code             => l_amb_context_code
  , p_side                         => 'NA'
  );


   --
   --
   END IF;
   --
   -- Bug 4922099
   IF ( ( (NVL(l_actual_upg_option, 'N') = 'O') OR
          (NVL(l_enc_upg_option, 'N') = 'O')
        ) AND
        (l_bflow_method_code = 'PRIOR_ENTRY')
      )
   THEN
      IF
      --
      1 = 2
      --
      THEN
      xla_accounting_err_pkg.build_message
                                    (p_appli_s_name            => 'XLA'
                                    ,p_msg_name                => 'XLA_UPG_OVERRIDE_ADR_UNDEFINED'
                                    ,p_token_1                 => 'LINE_NUMBER'
                                    ,p_value_1                 => XLA_AE_LINES_PKG.g_LineNumber
                                    ,p_token_2                 => 'LINE_TYPE_NAME'
                                    ,p_value_2                 => XLA_AE_SOURCES_PKG.GetComponentName (
                                                                             l_component_type
                                                                            ,l_component_code
                                                                            ,l_component_type_code
                                                                            ,l_component_appl_id
                                                                            ,l_amb_context_code
                                                                            ,l_entity_code
                                                                            ,l_event_class_code
                                                                           )
                                    ,p_token_3                 => 'OWNER'
                                    ,p_value_3                 => xla_lookups_pkg.get_meaning(
                                                                          p_lookup_type     => 'XLA_OWNER_TYPE'
                                                                          ,p_lookup_code    => l_component_type_code
                                                                         )
                                    ,p_token_4                 => 'PRODUCT_NAME'
                                    ,p_value_4                 => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.application_name
                                    ,p_entity_id               => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.entity_id
                                    ,p_event_id                => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.event_id
                                    ,p_ledger_id               => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id
                                    ,p_ae_header_id            =>  NULL
                                       );

        IF (C_LEVEL_ERROR>= g_log_level) THEN
                 trace
                      (p_msg      => 'ERROR: XLA_UPG_OVERRIDE_ADR_UNDEFINED'
                      ,p_level    => C_LEVEL_ERROR
                      ,p_module   => l_log_module);
        END IF;
      END IF;
   END IF;
   --
   --
   ------------------------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- NOTE: XLA_AE_LINES_PKG.ValidateCurrentLine should NOT be generated if business flow method is
   -- Prior Entry.  Currently, the following code is always generated.
   ------------------------------------------------------------------------------------------------
   XLA_AE_LINES_PKG.ValidateCurrentLine;

   ------------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- Populated credit and debit amounts -- Need to generate this within IF <condition>
   ------------------------------------------------------------------------------------
   XLA_AE_LINES_PKG.SetDebitCreditAmounts;

   ----------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- Update journal entry status -- Need to generate this within IF <condition>
   ----------------------------------------------------------------------------------
   XLA_AE_JOURNAL_ENTRY_PKG.UpdateJournalEntryStatus
         (p_hdr_idx => g_array_event(p_event_id).array_value_num('header_index')
         ,p_balance_type_code => l_balance_type_code
         );

   -------------------------------------------------------------------------------------------
   -- 4262811 - Generate the Accrual Reversal lines
   -------------------------------------------------------------------------------------------
   BEGIN
      l_acc_rev_flag := XLA_AE_HEADER_PKG.g_rec_header_new.array_accrual_reversal_flag
                              (g_array_event(p_event_id).array_value_num('header_index'));
      IF l_acc_rev_flag IS NULL THEN
         l_acc_rev_flag := 'N';
      END IF;
   EXCEPTION
      WHEN OTHERS THEN
         l_acc_rev_flag := 'N';
   END;
   --
   IF (l_acc_rev_flag = 'Y') THEN

       -- 4645092  ------------------------------------------------------------------------------
       -- To allow MPA report to determine if it should generate report process
       XLA_ACCOUNTING_PKG.g_mpa_accrual_exists := 'Y';
       ------------------------------------------------------------------------------------------

       l_accrual_line_num := XLA_AE_LINES_PKG.g_LineNumber;
       XLA_AE_LINES_PKG.CopyLineInfo(l_accrual_line_num);
   -- added call to set_ccid to execute mapping  for secondary accrual reversal entries bug 7444204
   -- call ADRs
   -- Bug 4922099
   --
   IF ( (l_bflow_method_code <> 'PRIOR_ENTRY') OR
        (NVL(l_actual_upg_option, 'N') = 'O') OR
        (NVL(l_enc_upg_option, 'N') = 'O')
      )
   THEN
   NULL;
   --
   --
   
  l_ccid := AcctDerRule_7(
           p_application_id           => p_application_id
         , p_ae_header_id             => l_ae_header_id 
, p_source_11 => p_source_11
         , x_transaction_coa_id       => l_adr_transaction_coa_id
         , x_accounting_coa_id        => l_adr_accounting_coa_id
         , x_value_type_code          => l_adr_value_type_code
         , p_side                     => 'NA'
   );

   xla_ae_lines_pkg.set_ccid(
    p_code_combination_id          => l_ccid
  , p_value_type_code              => l_adr_value_type_code
  , p_transaction_coa_id           => l_adr_transaction_coa_id
  , p_accounting_coa_id            => l_adr_accounting_coa_id
  , p_adr_code                     => 'AP_INVOICE_DIST'
  , p_adr_type_code                => 'S'
  , p_component_type               => l_component_type
  , p_component_code               => l_component_code
  , p_component_type_code          => l_component_type_code
  , p_component_appl_id            => l_component_appl_id
  , p_amb_context_code             => l_amb_context_code
  , p_side                         => 'NA'
  );


   --
   --
   END IF;

       --
       -- Update the line information that should be overwritten
       --
       XLA_AE_LINES_PKG.set_ae_header_id(p_ae_header_id => p_event_id ,
                                         p_header_num   => 1);
       XLA_AE_LINES_PKG.g_rec_lines.array_header_num(XLA_AE_LINES_PKG.g_LineNumber)  :=1;

       XLA_AE_LINES_PKG.g_rec_lines.array_business_class_code(XLA_AE_LINES_PKG.g_LineNumber) := NULL; -- 4669271

       IF l_bflow_method_code <> 'NONE' THEN  -- 4655713b
          XLA_AE_LINES_PKG.g_rec_lines.array_reversal_code(XLA_AE_LINES_PKG.g_LineNumber) := CONCAT('MPA_',l_bflow_method_code);
       END IF;

      --
      -- Depending on the Reversal Method setup, do a switch side or changes sign for the amounts
      --
      IF (XLA_AE_JOURNAL_ENTRY_PKG.g_cache_ledgers_info.ledger_reversal_option = 'SIDE') THEN
          XLA_AE_LINES_PKG.g_rec_lines.array_natural_side_code(XLA_AE_LINES_PKG.g_LineNumber) :=  l_acc_rev_natural_side_code;
      ELSE
          ---------------------------------------------------------------------------------------------------
          -- 4262811a Switch Sign
          ---------------------------------------------------------------------------------------------------
          XLA_AE_LINES_PKG.g_rec_lines.array_switch_side_flag(XLA_AE_LINES_PKG.g_LineNumber) := 'N';  -- 5052518
          XLA_AE_LINES_PKG.g_rec_lines.array_ledger_amount(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_ledger_amount(XLA_AE_LINES_PKG.g_LineNumber) * -1;
          XLA_AE_LINES_PKG.g_rec_lines.array_entered_amount(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_entered_amount(XLA_AE_LINES_PKG.g_LineNumber) * -1;
          -- 5132302
          XLA_AE_LINES_PKG.g_rec_lines.array_bflow_applied_to_amt(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_bflow_applied_to_amt(XLA_AE_LINES_PKG.g_LineNumber) * -1;

      END IF;

      -- 4955764
      XLA_AE_LINES_PKG.g_rec_lines.array_gl_date(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_HEADER_PKG.g_rec_header_new.array_gl_date(g_array_event(p_event_id).array_value_num('acc_rev_header_index'));


      XLA_AE_LINES_PKG.ValidateCurrentLine;
      XLA_AE_LINES_PKG.SetDebitCreditAmounts;

      XLA_AE_JOURNAL_ENTRY_PKG.UpdateJournalEntryStatus
               (p_hdr_idx           => g_array_event(p_event_id).array_value_num('acc_rev_header_index')
               ,p_balance_type_code => l_balance_type_code);

   END IF;

   -----------------------------------------------------------------------------------------
   -- 4262811 Multiperiod Accounting
   -----------------------------------------------------------------------------------------
     -- No MPA option is assigned.


END IF;
END IF;
--

--
IF (C_LEVEL_PROCEDURE >= g_log_level) THEN
   trace
      (p_msg      => 'END of AcctLineType_35'
      ,p_level    => C_LEVEL_PROCEDURE
      ,p_module   => l_log_module);
END IF;
--
EXCEPTION
  WHEN xla_exceptions_pkg.application_exception THEN
      RAISE;
  WHEN OTHERS THEN
       xla_exceptions_pkg.raise_message
           (p_location => 'XLA_00200_AAD_S_000010_BC_PKG.AcctLineType_35');
END AcctLineType_35;
--

---------------------------------------
--
-- PRIVATE FUNCTION
--         AcctLineType_36
--
---------------------------------------
PROCEDURE AcctLineType_36 (
  p_application_id        IN NUMBER
 ,p_event_id              IN NUMBER
 ,p_calculate_acctd_flag  IN VARCHAR2
 ,p_calculate_g_l_flag    IN VARCHAR2
 ,p_actual_flag           IN OUT VARCHAR2
 ,p_balance_type_code     OUT VARCHAR2
 ,p_gain_or_loss_ref      OUT VARCHAR2
 
--Invoice Distribution Description
 , p_source_1            IN VARCHAR2
--Invoice Distribution Account
 , p_source_11            IN NUMBER
--Invoice Distribution Type
 , p_source_15            IN VARCHAR2
 , p_source_15_meaning    IN VARCHAR2
--Purchasing Encumbrance Option
 , p_source_17            IN VARCHAR2
 , p_source_17_meaning    IN VARCHAR2
--Accounting Reversal Indicator
 , p_source_19            IN VARCHAR2
--Distribution Link Type
 , p_source_21            IN VARCHAR2
--Allocation to Main Distribution Identifier
 , p_source_23            IN NUMBER
--Invoice Identifier
 , p_source_24            IN NUMBER
--Business Flow Accounts Payable Application Identifier
 , p_source_25            IN NUMBER
--Business Flow Invoice Distribution Type
 , p_source_26            IN VARCHAR2
--Business Flow Invoice Entity Code
 , p_source_27            IN VARCHAR2
--Business Flow Invoice Distribution Identifier
 , p_source_28            IN NUMBER
--Business Flow Invoice Identifier
 , p_source_29            IN NUMBER
--Invoice Distribution Identifier
 , p_source_30            IN NUMBER
--Payables Encumbrance Upgrade Credit Account
 , p_source_31            IN NUMBER
--Payables Encumbrance Upgrade Credit Amount
 , p_source_32            IN NUMBER
--Invoice Currency Code
 , p_source_33            IN VARCHAR2
--Payables Encumbrance Upgrade Credit Base Amount
 , p_source_34            IN NUMBER
--Payables Encumbrance Upgrade Debit Account
 , p_source_35            IN NUMBER
--Payables Encumbrance Upgrade Debit Amount
 , p_source_36            IN NUMBER
--Payables Encumbrance Upgrade Debit Base Amount
 , p_source_37            IN NUMBER
--Payables Encumbrance Upgrade Option
 , p_source_38            IN VARCHAR2
--Invoice Exchange Date
 , p_source_39            IN DATE
--Invoice Exchange Rate
 , p_source_40            IN NUMBER
--Invoice Exchange Rate Type
 , p_source_41            IN VARCHAR2
--Deferred Accounting End Date
 , p_source_43            IN DATE
--Deferred Accounting Option
 , p_source_44            IN VARCHAR2
--Deferred Accounting Start Date
 , p_source_45            IN DATE
--Override Accounted Amount Indicator
 , p_source_46            IN VARCHAR2
 , p_source_46_meaning    IN VARCHAR2
--Invoice Supplier Identifier
 , p_source_47            IN NUMBER
--Invoice Supplier Site Identifier
 , p_source_48            IN NUMBER
--Third Party Type
 , p_source_49            IN VARCHAR2
--Parent Reversal Identifier
 , p_source_50            IN NUMBER
--Invoice Distribution Statistical Amount
 , p_source_51            IN NUMBER
--Invoice Distribution Tax Line Identifier
 , p_source_52            IN NUMBER
--Invoice Distribution Tax Distribution Identifier from Tax
 , p_source_53            IN NUMBER
--Invoice Distribution Summary Tax Line Identifier
 , p_source_54            IN NUMBER
--Payables Upgrade Credit Encumbrance Type Identifier
 , p_source_55            IN NUMBER
--Payables Upgrade Debit Encumbrance Type Identifier
 , p_source_56            IN NUMBER
--Invoice Distribution Encumbrance Amount
 , p_source_65            IN NUMBER
--Invoice Distribution Encumbrance Ledger Amount
 , p_source_66            IN NUMBER
)
IS

l_component_type              VARCHAR2(80);
l_component_code              VARCHAR2(30);
l_component_type_code         VARCHAR2(1);
l_component_appl_id           INTEGER;
l_amb_context_code            VARCHAR2(30);
l_entity_code                 VARCHAR2(30);
l_event_class_code            VARCHAR2(30);
l_ae_header_id                NUMBER;
l_event_type_code             VARCHAR2(30);
l_line_definition_code        VARCHAR2(30);
l_line_definition_owner_code  VARCHAR2(1);
--
-- adr variables
l_segment                     VARCHAR2(30);
l_ccid                        NUMBER;
l_adr_transaction_coa_id      NUMBER;
l_adr_accounting_coa_id       NUMBER;
l_adr_flexfield_segment_code  VARCHAR2(30);
l_adr_flex_value_set_id       NUMBER;
l_adr_value_type_code         VARCHAR2(30);
l_adr_value_combination_id    NUMBER;
l_adr_value_segment_code      VARCHAR2(30);

l_bflow_method_code           VARCHAR2(30);  -- 4219869 Business Flow
l_bflow_class_code            VARCHAR2(30);  -- 4219869 Business Flow
l_inherit_desc_flag           VARCHAR2(1);   -- 4219869 Business Flow
l_budgetary_control_flag      VARCHAR2(1);   -- 4458381 Public Sector Enh

-- 4262811 Variables ------------------------------------------------------------------------------------------
l_entered_amt_idx             NUMBER;
l_accted_amt_idx              NUMBER;
l_acc_rev_flag                VARCHAR2(1);
l_accrual_line_num            NUMBER;
l_tmp_amt                     NUMBER;
l_acc_rev_natural_side_code   VARCHAR2(1);

l_num_entries                 NUMBER;
l_gl_dates                    xla_ae_journal_entry_pkg.t_array_date;
l_accted_amts                 xla_ae_journal_entry_pkg.t_array_num;
l_entered_amts                xla_ae_journal_entry_pkg.t_array_num;
l_period_names                xla_ae_journal_entry_pkg.t_array_V15L;
l_recog_line_1                NUMBER;
l_recog_line_2                NUMBER;

l_bflow_applied_to_amt_idx    NUMBER;                                -- 5132302
l_bflow_applied_to_amt        NUMBER;                                -- 5132302
l_bflow_applied_to_amts       xla_ae_journal_entry_pkg.t_array_num;  -- 5132302

l_event_id                    NUMBER;  -- To handle MPA header Description: xla_ae_header_pkg.SetHdrDescription

--l_rounding_ccy                VARCHAR2(15); -- To handle MPA rounding  4262811b
l_same_currency               BOOLEAN;        -- To handle MPA rounding  4262811b

---------------------------------------------------------------------------------------------------------------


--
-- bulk performance
--
l_balance_type_code           VARCHAR2(1);
l_rec_acct_attrs              XLA_AE_LINES_PKG.t_rec_acct_attrs;
l_log_module                  VARCHAR2(240);

--
-- Upgrade strategy
--
l_actual_upg_option           VARCHAR2(1);
l_enc_upg_option           VARCHAR2(1);

--
BEGIN
--
IF g_log_enabled THEN
      l_log_module := C_DEFAULT_MODULE||'.AcctLineType_36';
END IF;
--
IF (C_LEVEL_PROCEDURE >= g_log_level) THEN

      trace
         (p_msg      => 'BEGIN of AcctLineType_36'
         ,p_level    => C_LEVEL_PROCEDURE
         ,p_module   => l_log_module);

END IF;
--
l_component_type             := 'AMB_JLT';
l_component_code             := 'AP_INV_PRICE_VAR_PP_ENC_DR';
l_component_type_code        := 'S';
l_component_appl_id          :=  200;
l_amb_context_code           := 'DEFAULT';
l_entity_code                := 'AP_INVOICES';
l_event_class_code           := 'PREPAYMENTS';
l_event_type_code            := 'PREPAYMENTS_ALL';
l_line_definition_owner_code := 'S';
l_line_definition_code       := 'ENC_PREPAY_ALL';
--
l_balance_type_code          := 'E';
l_segment                     := NULL;
l_ccid                        := NULL;
l_adr_transaction_coa_id      := NULL;
l_adr_accounting_coa_id       := NULL;
l_adr_flexfield_segment_code  := NULL;
l_adr_flex_value_set_id       := NULL;
l_adr_value_type_code         := NULL;
l_adr_value_combination_id    := NULL;
l_adr_value_segment_code      := NULL;

l_bflow_method_code          := 'NONE';   -- 4219869 Business Flow
l_bflow_class_code           := 'AP_INV_ENCUM';    -- 4219869 Business Flow
l_inherit_desc_flag          := 'N';   -- 4219869 Business Flow
l_budgetary_control_flag     := 'Y';

l_bflow_applied_to_amt_idx   := NULL; -- 5132302
l_bflow_applied_to_amt       := NULL; -- 5132302
l_entered_amt_idx            := NULL;          -- 4262811
l_accted_amt_idx             := NULL;          -- 4262811
l_acc_rev_flag               := NULL;          -- 4262811
l_accrual_line_num           := NULL;          -- 4262811
l_tmp_amt                    := NULL;          -- 4262811
--
 
IF XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id = XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.ledger_id OR
    l_balance_type_code <> 'B' THEN
IF NVL(p_source_15,'
') =  'IPV' AND 
NVL(p_source_17,'
') =  'Y'
 THEN 

   --
   XLA_AE_LINES_PKG.SetNewLine;

   p_balance_type_code          := l_balance_type_code;
   -- set the flag so later we will know whether the gain loss line needs to be created
   
   IF(l_balance_type_code = 'A' and p_actual_flag is null) THEN
     p_actual_flag :='A';
   END IF;

   --
   -- bulk performance
   --
   XLA_AE_LINES_PKG.set_ae_header_id (p_ae_header_id => p_event_id ,
                                      p_header_num   => 0); -- 4262811
   --
   -- set accounting line options
   --
   l_ae_header_id:= xla_ae_lines_pkg.SetAcctLineOption(
           p_natural_side_code          => 'D'
         , p_gain_or_loss_flag          => 'N'
         , p_gl_transfer_mode_code      => 'S'
         , p_acct_entry_type_code       => 'E'
         , p_switch_side_flag           => 'Y'
         , p_merge_duplicate_code       => 'N'
         );
   --
   l_acc_rev_natural_side_code := 'C';  -- 4262811
   -- 
   --
   -- set accounting line type info
   --
   xla_ae_lines_pkg.SetAcctLineType
      (p_component_type             => l_component_type
      ,p_event_type_code            => l_event_type_code
      ,p_line_definition_owner_code => l_line_definition_owner_code
      ,p_line_definition_code       => l_line_definition_code
      ,p_accounting_line_code       => l_component_code
      ,p_accounting_line_type_code  => l_component_type_code
      ,p_accounting_line_appl_id    => l_component_appl_id
      ,p_amb_context_code           => l_amb_context_code
      ,p_entity_code                => l_entity_code
      ,p_event_class_code           => l_event_class_code);
   --
   -- set accounting class
   --
   xla_ae_lines_pkg.SetAcctClass(
           p_accounting_class_code  => 'IPV'
         , p_ae_header_id           => l_ae_header_id
         );

   --
   -- set rounding class
   --
   XLA_AE_LINES_PKG.g_rec_lines.array_rounding_class(XLA_AE_LINES_PKG.g_LineNumber) :=
                      'IPV';

   --
   xla_ae_lines_pkg.g_rec_lines.array_calculate_acctd_flag(xla_ae_lines_pkg.g_LineNumber) := p_calculate_acctd_flag;
   xla_ae_lines_pkg.g_rec_lines.array_calculate_g_l_flag(xla_ae_lines_pkg.g_LineNumber) := p_calculate_g_l_flag;
   --
   -- bulk performance
   --
   XLA_AE_LINES_PKG.g_rec_lines.array_balance_type_code(XLA_AE_LINES_PKG.g_LineNumber) := l_balance_type_code;

   XLA_AE_LINES_PKG.g_rec_lines.array_ledger_id(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id;

   -- 4955764
   XLA_AE_LINES_PKG.g_rec_lines.array_gl_date(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_HEADER_PKG.g_rec_header_new.array_gl_date(g_array_event(p_event_id).array_value_num('header_index'));

   -- 4458381 Public Sector Enh
      XLA_AE_LINES_PKG.g_rec_lines.array_encumbrance_type_id(XLA_AE_LINES_PKG.g_LineNumber) := 1060;
   --
   -- set accounting attributes for the line type
   --
   l_entered_amt_idx := 23;
   l_accted_amt_idx  := 28;
   l_bflow_applied_to_amt_idx  := NULL;  -- 5132302
   l_rec_acct_attrs.array_acct_attr_code(1) := 'ACCOUNTING_REVERSAL_OPTION';
   l_rec_acct_attrs.array_char_value(1)  := p_source_19;
   l_rec_acct_attrs.array_acct_attr_code(2) := 'ALLOC_TO_APPLICATION_ID';
   l_rec_acct_attrs.array_num_value(2)  := 
xla_ae_sources_pkg.GetSystemSourceNum(
   p_source_code           => 'XLA_EVENT_APPL_ID'
 , p_source_type_code      => 'Y'
 , p_source_application_id =>  602
);
   l_rec_acct_attrs.array_acct_attr_code(3) := 'ALLOC_TO_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(3)  := p_source_21;
   l_rec_acct_attrs.array_acct_attr_code(4) := 'ALLOC_TO_ENTITY_CODE';
   l_rec_acct_attrs.array_char_value(4)  := 
xla_ae_sources_pkg.GetSystemSourceChar(
   p_source_code           => 'XLA_ENTITY_CODE'
 , p_source_type_code      => 'Y'
 , p_source_application_id =>  602
);
   l_rec_acct_attrs.array_acct_attr_code(5) := 'ALLOC_TO_FIRST_DIST_ID';
   l_rec_acct_attrs.array_num_value(5)  :=  to_char(p_source_23);
   l_rec_acct_attrs.array_acct_attr_code(6) := 'ALLOC_TO_FIRST_SYS_TRAN_ID';
   l_rec_acct_attrs.array_num_value(6)  :=  to_char(p_source_24);
   l_rec_acct_attrs.array_acct_attr_code(7) := 'APPLIED_TO_APPLICATION_ID';
   l_rec_acct_attrs.array_num_value(7)  := p_source_25;
   l_rec_acct_attrs.array_acct_attr_code(8) := 'APPLIED_TO_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(8)  := p_source_26;
   l_rec_acct_attrs.array_acct_attr_code(9) := 'APPLIED_TO_ENTITY_CODE';
   l_rec_acct_attrs.array_char_value(9)  := p_source_27;
   l_rec_acct_attrs.array_acct_attr_code(10) := 'APPLIED_TO_FIRST_DIST_ID';
   l_rec_acct_attrs.array_num_value(10)  :=  to_char(p_source_28);
   l_rec_acct_attrs.array_acct_attr_code(11) := 'APPLIED_TO_FIRST_SYS_TRAN_ID';
   l_rec_acct_attrs.array_num_value(11)  :=  to_char(p_source_29);
   l_rec_acct_attrs.array_acct_attr_code(12) := 'DISTRIBUTION_IDENTIFIER_1';
   l_rec_acct_attrs.array_num_value(12)  :=  to_char(p_source_30);
   l_rec_acct_attrs.array_acct_attr_code(13) := 'DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(13)  := p_source_21;
   l_rec_acct_attrs.array_acct_attr_code(14) := 'ENC_UPG_CR_CCID';
   l_rec_acct_attrs.array_num_value(14)  := p_source_31;
   l_rec_acct_attrs.array_acct_attr_code(15) := 'ENC_UPG_CR_ENTERED_AMT';
   l_rec_acct_attrs.array_num_value(15)  := p_source_32;
   l_rec_acct_attrs.array_acct_attr_code(16) := 'ENC_UPG_CR_ENTERED_CURR';
   l_rec_acct_attrs.array_char_value(16)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(17) := 'ENC_UPG_CR_LEDGER_AMT';
   l_rec_acct_attrs.array_num_value(17)  := p_source_34;
   l_rec_acct_attrs.array_acct_attr_code(18) := 'ENC_UPG_DR_CCID';
   l_rec_acct_attrs.array_num_value(18)  := p_source_35;
   l_rec_acct_attrs.array_acct_attr_code(19) := 'ENC_UPG_DR_ENTERED_AMT';
   l_rec_acct_attrs.array_num_value(19)  := p_source_36;
   l_rec_acct_attrs.array_acct_attr_code(20) := 'ENC_UPG_DR_ENTERED_CURR';
   l_rec_acct_attrs.array_char_value(20)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(21) := 'ENC_UPG_DR_LEDGER_AMT';
   l_rec_acct_attrs.array_num_value(21)  := p_source_37;
   l_rec_acct_attrs.array_acct_attr_code(22) := 'ENC_UPG_OPTION';
   l_rec_acct_attrs.array_char_value(22)  := p_source_38;
   l_rec_acct_attrs.array_acct_attr_code(23) := 'ENTERED_CURRENCY_AMOUNT';
   l_rec_acct_attrs.array_num_value(23)  := p_source_65;
   l_rec_acct_attrs.array_acct_attr_code(24) := 'ENTERED_CURRENCY_CODE';
   l_rec_acct_attrs.array_char_value(24)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(25) := 'EXCHANGE_DATE';
   l_rec_acct_attrs.array_date_value(25)  := p_source_39;
   l_rec_acct_attrs.array_acct_attr_code(26) := 'EXCHANGE_RATE';
   l_rec_acct_attrs.array_num_value(26)  := p_source_40;
   l_rec_acct_attrs.array_acct_attr_code(27) := 'EXCHANGE_RATE_TYPE';
   l_rec_acct_attrs.array_char_value(27)  := p_source_41;
   l_rec_acct_attrs.array_acct_attr_code(28) := 'LEDGER_AMOUNT';
   l_rec_acct_attrs.array_num_value(28)  := p_source_66;
   l_rec_acct_attrs.array_acct_attr_code(29) := 'MULTIPERIOD_END_DATE';
   l_rec_acct_attrs.array_date_value(29)  := p_source_43;
   l_rec_acct_attrs.array_acct_attr_code(30) := 'MULTIPERIOD_OPTION';
   l_rec_acct_attrs.array_char_value(30)  := p_source_44;
   l_rec_acct_attrs.array_acct_attr_code(31) := 'MULTIPERIOD_START_DATE';
   l_rec_acct_attrs.array_date_value(31)  := p_source_45;
   l_rec_acct_attrs.array_acct_attr_code(32) := 'OVERRIDE_ACCTD_AMT_FLAG';
   l_rec_acct_attrs.array_char_value(32)  := p_source_46;
   l_rec_acct_attrs.array_acct_attr_code(33) := 'PARTY_ID';
   l_rec_acct_attrs.array_num_value(33)  := p_source_47;
   l_rec_acct_attrs.array_acct_attr_code(34) := 'PARTY_SITE_ID';
   l_rec_acct_attrs.array_num_value(34)  := p_source_48;
   l_rec_acct_attrs.array_acct_attr_code(35) := 'PARTY_TYPE';
   l_rec_acct_attrs.array_char_value(35)  := p_source_49;
   l_rec_acct_attrs.array_acct_attr_code(36) := 'REVERSED_DISTRIBUTION_ID1';
   l_rec_acct_attrs.array_num_value(36)  :=  to_char(p_source_50);
   l_rec_acct_attrs.array_acct_attr_code(37) := 'REVERSED_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(37)  := p_source_21;
   l_rec_acct_attrs.array_acct_attr_code(38) := 'STATISTICAL_AMOUNT';
   l_rec_acct_attrs.array_num_value(38)  := p_source_51;
   l_rec_acct_attrs.array_acct_attr_code(39) := 'TAX_LINE_REF_ID';
   l_rec_acct_attrs.array_num_value(39)  := p_source_52;
   l_rec_acct_attrs.array_acct_attr_code(40) := 'TAX_REC_NREC_DIST_REF_ID';
   l_rec_acct_attrs.array_num_value(40)  := p_source_53;
   l_rec_acct_attrs.array_acct_attr_code(41) := 'TAX_SUMMARY_LINE_REF_ID';
   l_rec_acct_attrs.array_num_value(41)  := p_source_54;
   l_rec_acct_attrs.array_acct_attr_code(42) := 'UPG_CR_ENC_TYPE_ID';
   l_rec_acct_attrs.array_num_value(42)  := p_source_55;
   l_rec_acct_attrs.array_acct_attr_code(43) := 'UPG_DR_ENC_TYPE_ID';
   l_rec_acct_attrs.array_num_value(43)  := p_source_56;

   XLA_AE_LINES_PKG.SetLineAcctAttrs(l_rec_acct_attrs);
   p_gain_or_loss_ref  := XLA_AE_LINES_PKG.g_rec_lines.array_gain_or_loss_ref(XLA_AE_LINES_PKG.g_LineNumber);

   ---------------------------------------------------------------------------------------------------------------
   -- 4336173 -- assign Business Flow Class (replace code in xla_ae_lines_pkg.Business_Flow_Validation)
   ---------------------------------------------------------------------------------------------------------------
   XLA_AE_LINES_PKG.g_rec_lines.array_business_class_code(XLA_AE_LINES_PKG.g_LineNumber) := l_bflow_class_code;

   l_actual_upg_option  := XLA_AE_LINES_PKG.g_rec_lines.array_actual_upg_option(XLA_AE_LINES_PKG.g_LineNumber);
   l_enc_upg_option     := XLA_AE_LINES_PKG.g_rec_lines.array_enc_upg_option(XLA_AE_LINES_PKG.g_LineNumber);

   IF xla_accounting_cache_pkg.GetValueChar
         (p_source_code         => 'LEDGER_CATEGORY_CODE'
         ,p_target_ledger_id    => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id) IN ('PRIMARY','ALC')
   AND l_bflow_method_code = 'PRIOR_ENTRY'
--   AND (l_actual_upg_option = 'Y' OR l_enc_upg_option = 'Y') Bug 4922099
   AND ( (NVL(l_actual_upg_option, 'N') IN ('Y', 'O')) OR
         (NVL(l_enc_upg_option, 'N') IN ('Y', 'O'))
       )
   THEN
         xla_ae_lines_pkg.BflowUpgEntry
           (p_business_method_code    => l_bflow_method_code
           ,p_business_class_code     => l_bflow_class_code
           ,p_balance_type            => l_balance_type_code);
   ELSE
      NULL;
-- No business flow processing for business flow method of NONE.
   END IF;

   --
   -- call analytical criteria
   --
   
   --
   -- call description
   --
   
xla_ae_lines_pkg.SetLineDescription(
   p_ae_header_id => l_ae_header_id
  ,p_description  => Description_2 (
     p_application_id         => p_application_id
   , p_ae_header_id           => l_ae_header_id 
, p_source_1 => p_source_1
   )
);


   --
   -- call ADRs
   -- Bug 4922099
   --
   IF ( (l_bflow_method_code <> 'PRIOR_ENTRY') OR
        (NVL(l_actual_upg_option, 'N') = 'O') OR
        (NVL(l_enc_upg_option, 'N') = 'O')
      )
   THEN
   NULL;
   --
   --
   
  l_ccid := AcctDerRule_7(
           p_application_id           => p_application_id
         , p_ae_header_id             => l_ae_header_id 
, p_source_11 => p_source_11
         , x_transaction_coa_id       => l_adr_transaction_coa_id
         , x_accounting_coa_id        => l_adr_accounting_coa_id
         , x_value_type_code          => l_adr_value_type_code
         , p_side                     => 'NA'
   );

   xla_ae_lines_pkg.set_ccid(
    p_code_combination_id          => l_ccid
  , p_value_type_code              => l_adr_value_type_code
  , p_transaction_coa_id           => l_adr_transaction_coa_id
  , p_accounting_coa_id            => l_adr_accounting_coa_id
  , p_adr_code                     => 'AP_INVOICE_DIST'
  , p_adr_type_code                => 'S'
  , p_component_type               => l_component_type
  , p_component_code               => l_component_code
  , p_component_type_code          => l_component_type_code
  , p_component_appl_id            => l_component_appl_id
  , p_amb_context_code             => l_amb_context_code
  , p_side                         => 'NA'
  );


   --
   --
   END IF;
   --
   -- Bug 4922099
   IF ( ( (NVL(l_actual_upg_option, 'N') = 'O') OR
          (NVL(l_enc_upg_option, 'N') = 'O')
        ) AND
        (l_bflow_method_code = 'PRIOR_ENTRY')
      )
   THEN
      IF
      --
      1 = 2
      --
      THEN
      xla_accounting_err_pkg.build_message
                                    (p_appli_s_name            => 'XLA'
                                    ,p_msg_name                => 'XLA_UPG_OVERRIDE_ADR_UNDEFINED'
                                    ,p_token_1                 => 'LINE_NUMBER'
                                    ,p_value_1                 => XLA_AE_LINES_PKG.g_LineNumber
                                    ,p_token_2                 => 'LINE_TYPE_NAME'
                                    ,p_value_2                 => XLA_AE_SOURCES_PKG.GetComponentName (
                                                                             l_component_type
                                                                            ,l_component_code
                                                                            ,l_component_type_code
                                                                            ,l_component_appl_id
                                                                            ,l_amb_context_code
                                                                            ,l_entity_code
                                                                            ,l_event_class_code
                                                                           )
                                    ,p_token_3                 => 'OWNER'
                                    ,p_value_3                 => xla_lookups_pkg.get_meaning(
                                                                          p_lookup_type     => 'XLA_OWNER_TYPE'
                                                                          ,p_lookup_code    => l_component_type_code
                                                                         )
                                    ,p_token_4                 => 'PRODUCT_NAME'
                                    ,p_value_4                 => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.application_name
                                    ,p_entity_id               => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.entity_id
                                    ,p_event_id                => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.event_id
                                    ,p_ledger_id               => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id
                                    ,p_ae_header_id            =>  NULL
                                       );

        IF (C_LEVEL_ERROR>= g_log_level) THEN
                 trace
                      (p_msg      => 'ERROR: XLA_UPG_OVERRIDE_ADR_UNDEFINED'
                      ,p_level    => C_LEVEL_ERROR
                      ,p_module   => l_log_module);
        END IF;
      END IF;
   END IF;
   --
   --
   ------------------------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- NOTE: XLA_AE_LINES_PKG.ValidateCurrentLine should NOT be generated if business flow method is
   -- Prior Entry.  Currently, the following code is always generated.
   ------------------------------------------------------------------------------------------------
   XLA_AE_LINES_PKG.ValidateCurrentLine;

   ------------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- Populated credit and debit amounts -- Need to generate this within IF <condition>
   ------------------------------------------------------------------------------------
   XLA_AE_LINES_PKG.SetDebitCreditAmounts;

   ----------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- Update journal entry status -- Need to generate this within IF <condition>
   ----------------------------------------------------------------------------------
   XLA_AE_JOURNAL_ENTRY_PKG.UpdateJournalEntryStatus
         (p_hdr_idx => g_array_event(p_event_id).array_value_num('header_index')
         ,p_balance_type_code => l_balance_type_code
         );

   -------------------------------------------------------------------------------------------
   -- 4262811 - Generate the Accrual Reversal lines
   -------------------------------------------------------------------------------------------
   BEGIN
      l_acc_rev_flag := XLA_AE_HEADER_PKG.g_rec_header_new.array_accrual_reversal_flag
                              (g_array_event(p_event_id).array_value_num('header_index'));
      IF l_acc_rev_flag IS NULL THEN
         l_acc_rev_flag := 'N';
      END IF;
   EXCEPTION
      WHEN OTHERS THEN
         l_acc_rev_flag := 'N';
   END;
   --
   IF (l_acc_rev_flag = 'Y') THEN

       -- 4645092  ------------------------------------------------------------------------------
       -- To allow MPA report to determine if it should generate report process
       XLA_ACCOUNTING_PKG.g_mpa_accrual_exists := 'Y';
       ------------------------------------------------------------------------------------------

       l_accrual_line_num := XLA_AE_LINES_PKG.g_LineNumber;
       XLA_AE_LINES_PKG.CopyLineInfo(l_accrual_line_num);
   -- added call to set_ccid to execute mapping  for secondary accrual reversal entries bug 7444204
   -- call ADRs
   -- Bug 4922099
   --
   IF ( (l_bflow_method_code <> 'PRIOR_ENTRY') OR
        (NVL(l_actual_upg_option, 'N') = 'O') OR
        (NVL(l_enc_upg_option, 'N') = 'O')
      )
   THEN
   NULL;
   --
   --
   
  l_ccid := AcctDerRule_7(
           p_application_id           => p_application_id
         , p_ae_header_id             => l_ae_header_id 
, p_source_11 => p_source_11
         , x_transaction_coa_id       => l_adr_transaction_coa_id
         , x_accounting_coa_id        => l_adr_accounting_coa_id
         , x_value_type_code          => l_adr_value_type_code
         , p_side                     => 'NA'
   );

   xla_ae_lines_pkg.set_ccid(
    p_code_combination_id          => l_ccid
  , p_value_type_code              => l_adr_value_type_code
  , p_transaction_coa_id           => l_adr_transaction_coa_id
  , p_accounting_coa_id            => l_adr_accounting_coa_id
  , p_adr_code                     => 'AP_INVOICE_DIST'
  , p_adr_type_code                => 'S'
  , p_component_type               => l_component_type
  , p_component_code               => l_component_code
  , p_component_type_code          => l_component_type_code
  , p_component_appl_id            => l_component_appl_id
  , p_amb_context_code             => l_amb_context_code
  , p_side                         => 'NA'
  );


   --
   --
   END IF;

       --
       -- Update the line information that should be overwritten
       --
       XLA_AE_LINES_PKG.set_ae_header_id(p_ae_header_id => p_event_id ,
                                         p_header_num   => 1);
       XLA_AE_LINES_PKG.g_rec_lines.array_header_num(XLA_AE_LINES_PKG.g_LineNumber)  :=1;

       XLA_AE_LINES_PKG.g_rec_lines.array_business_class_code(XLA_AE_LINES_PKG.g_LineNumber) := NULL; -- 4669271

       IF l_bflow_method_code <> 'NONE' THEN  -- 4655713b
          XLA_AE_LINES_PKG.g_rec_lines.array_reversal_code(XLA_AE_LINES_PKG.g_LineNumber) := CONCAT('MPA_',l_bflow_method_code);
       END IF;

      --
      -- Depending on the Reversal Method setup, do a switch side or changes sign for the amounts
      --
      IF (XLA_AE_JOURNAL_ENTRY_PKG.g_cache_ledgers_info.ledger_reversal_option = 'SIDE') THEN
          XLA_AE_LINES_PKG.g_rec_lines.array_natural_side_code(XLA_AE_LINES_PKG.g_LineNumber) :=  l_acc_rev_natural_side_code;
      ELSE
          ---------------------------------------------------------------------------------------------------
          -- 4262811a Switch Sign
          ---------------------------------------------------------------------------------------------------
          XLA_AE_LINES_PKG.g_rec_lines.array_switch_side_flag(XLA_AE_LINES_PKG.g_LineNumber) := 'N';  -- 5052518
          XLA_AE_LINES_PKG.g_rec_lines.array_ledger_amount(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_ledger_amount(XLA_AE_LINES_PKG.g_LineNumber) * -1;
          XLA_AE_LINES_PKG.g_rec_lines.array_entered_amount(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_entered_amount(XLA_AE_LINES_PKG.g_LineNumber) * -1;
          -- 5132302
          XLA_AE_LINES_PKG.g_rec_lines.array_bflow_applied_to_amt(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_bflow_applied_to_amt(XLA_AE_LINES_PKG.g_LineNumber) * -1;

      END IF;

      -- 4955764
      XLA_AE_LINES_PKG.g_rec_lines.array_gl_date(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_HEADER_PKG.g_rec_header_new.array_gl_date(g_array_event(p_event_id).array_value_num('acc_rev_header_index'));


      XLA_AE_LINES_PKG.ValidateCurrentLine;
      XLA_AE_LINES_PKG.SetDebitCreditAmounts;

      XLA_AE_JOURNAL_ENTRY_PKG.UpdateJournalEntryStatus
               (p_hdr_idx           => g_array_event(p_event_id).array_value_num('acc_rev_header_index')
               ,p_balance_type_code => l_balance_type_code);

   END IF;

   -----------------------------------------------------------------------------------------
   -- 4262811 Multiperiod Accounting
   -----------------------------------------------------------------------------------------
     -- No MPA option is assigned.


END IF;
END IF;
--

--
IF (C_LEVEL_PROCEDURE >= g_log_level) THEN
   trace
      (p_msg      => 'END of AcctLineType_36'
      ,p_level    => C_LEVEL_PROCEDURE
      ,p_module   => l_log_module);
END IF;
--
EXCEPTION
  WHEN xla_exceptions_pkg.application_exception THEN
      RAISE;
  WHEN OTHERS THEN
       xla_exceptions_pkg.raise_message
           (p_location => 'XLA_00200_AAD_S_000010_BC_PKG.AcctLineType_36');
END AcctLineType_36;
--

---------------------------------------
--
-- PRIVATE FUNCTION
--         AcctLineType_37
--
---------------------------------------
PROCEDURE AcctLineType_37 (
  p_application_id        IN NUMBER
 ,p_event_id              IN NUMBER
 ,p_calculate_acctd_flag  IN VARCHAR2
 ,p_calculate_g_l_flag    IN VARCHAR2
 ,p_actual_flag           IN OUT VARCHAR2
 ,p_balance_type_code     OUT VARCHAR2
 ,p_gain_or_loss_ref      OUT VARCHAR2
 
--Invoice Distribution Description
 , p_source_1            IN VARCHAR2
--Invoice Distribution Account
 , p_source_11            IN NUMBER
--Invoice Distribution Type
 , p_source_15            IN VARCHAR2
 , p_source_15_meaning    IN VARCHAR2
--Purchasing Encumbrance Option
 , p_source_17            IN VARCHAR2
 , p_source_17_meaning    IN VARCHAR2
--Accrue on Receipt Option
 , p_source_18            IN VARCHAR2
 , p_source_18_meaning    IN VARCHAR2
--Accounting Reversal Indicator
 , p_source_19            IN VARCHAR2
--Distribution Link Type
 , p_source_21            IN VARCHAR2
--Allocation to Main Distribution Identifier
 , p_source_23            IN NUMBER
--Invoice Identifier
 , p_source_24            IN NUMBER
--Business Flow Accounts Payable Application Identifier
 , p_source_25            IN NUMBER
--Business Flow Invoice Distribution Type
 , p_source_26            IN VARCHAR2
--Business Flow Invoice Entity Code
 , p_source_27            IN VARCHAR2
--Business Flow Invoice Distribution Identifier
 , p_source_28            IN NUMBER
--Business Flow Invoice Identifier
 , p_source_29            IN NUMBER
--Invoice Distribution Identifier
 , p_source_30            IN NUMBER
--Payables Encumbrance Upgrade Credit Account
 , p_source_31            IN NUMBER
--Payables Encumbrance Upgrade Credit Amount
 , p_source_32            IN NUMBER
--Invoice Currency Code
 , p_source_33            IN VARCHAR2
--Payables Encumbrance Upgrade Credit Base Amount
 , p_source_34            IN NUMBER
--Payables Encumbrance Upgrade Debit Account
 , p_source_35            IN NUMBER
--Payables Encumbrance Upgrade Debit Amount
 , p_source_36            IN NUMBER
--Payables Encumbrance Upgrade Debit Base Amount
 , p_source_37            IN NUMBER
--Payables Encumbrance Upgrade Option
 , p_source_38            IN VARCHAR2
--Invoice Exchange Date
 , p_source_39            IN DATE
--Invoice Exchange Rate
 , p_source_40            IN NUMBER
--Invoice Exchange Rate Type
 , p_source_41            IN VARCHAR2
--Deferred Accounting End Date
 , p_source_43            IN DATE
--Deferred Accounting Option
 , p_source_44            IN VARCHAR2
--Deferred Accounting Start Date
 , p_source_45            IN DATE
--Override Accounted Amount Indicator
 , p_source_46            IN VARCHAR2
 , p_source_46_meaning    IN VARCHAR2
--Invoice Supplier Identifier
 , p_source_47            IN NUMBER
--Invoice Supplier Site Identifier
 , p_source_48            IN NUMBER
--Third Party Type
 , p_source_49            IN VARCHAR2
--Parent Reversal Identifier
 , p_source_50            IN NUMBER
--Invoice Distribution Statistical Amount
 , p_source_51            IN NUMBER
--Invoice Distribution Tax Line Identifier
 , p_source_52            IN NUMBER
--Invoice Distribution Tax Distribution Identifier from Tax
 , p_source_53            IN NUMBER
--Invoice Distribution Summary Tax Line Identifier
 , p_source_54            IN NUMBER
--Payables Upgrade Credit Encumbrance Type Identifier
 , p_source_55            IN NUMBER
--Payables Upgrade Debit Encumbrance Type Identifier
 , p_source_56            IN NUMBER
--Invoice Distribution Encumbrance Amount
 , p_source_65            IN NUMBER
--Invoice Distribution Encumbrance Ledger Amount
 , p_source_66            IN NUMBER
)
IS

l_component_type              VARCHAR2(80);
l_component_code              VARCHAR2(30);
l_component_type_code         VARCHAR2(1);
l_component_appl_id           INTEGER;
l_amb_context_code            VARCHAR2(30);
l_entity_code                 VARCHAR2(30);
l_event_class_code            VARCHAR2(30);
l_ae_header_id                NUMBER;
l_event_type_code             VARCHAR2(30);
l_line_definition_code        VARCHAR2(30);
l_line_definition_owner_code  VARCHAR2(1);
--
-- adr variables
l_segment                     VARCHAR2(30);
l_ccid                        NUMBER;
l_adr_transaction_coa_id      NUMBER;
l_adr_accounting_coa_id       NUMBER;
l_adr_flexfield_segment_code  VARCHAR2(30);
l_adr_flex_value_set_id       NUMBER;
l_adr_value_type_code         VARCHAR2(30);
l_adr_value_combination_id    NUMBER;
l_adr_value_segment_code      VARCHAR2(30);

l_bflow_method_code           VARCHAR2(30);  -- 4219869 Business Flow
l_bflow_class_code            VARCHAR2(30);  -- 4219869 Business Flow
l_inherit_desc_flag           VARCHAR2(1);   -- 4219869 Business Flow
l_budgetary_control_flag      VARCHAR2(1);   -- 4458381 Public Sector Enh

-- 4262811 Variables ------------------------------------------------------------------------------------------
l_entered_amt_idx             NUMBER;
l_accted_amt_idx              NUMBER;
l_acc_rev_flag                VARCHAR2(1);
l_accrual_line_num            NUMBER;
l_tmp_amt                     NUMBER;
l_acc_rev_natural_side_code   VARCHAR2(1);

l_num_entries                 NUMBER;
l_gl_dates                    xla_ae_journal_entry_pkg.t_array_date;
l_accted_amts                 xla_ae_journal_entry_pkg.t_array_num;
l_entered_amts                xla_ae_journal_entry_pkg.t_array_num;
l_period_names                xla_ae_journal_entry_pkg.t_array_V15L;
l_recog_line_1                NUMBER;
l_recog_line_2                NUMBER;

l_bflow_applied_to_amt_idx    NUMBER;                                -- 5132302
l_bflow_applied_to_amt        NUMBER;                                -- 5132302
l_bflow_applied_to_amts       xla_ae_journal_entry_pkg.t_array_num;  -- 5132302

l_event_id                    NUMBER;  -- To handle MPA header Description: xla_ae_header_pkg.SetHdrDescription

--l_rounding_ccy                VARCHAR2(15); -- To handle MPA rounding  4262811b
l_same_currency               BOOLEAN;        -- To handle MPA rounding  4262811b

---------------------------------------------------------------------------------------------------------------


--
-- bulk performance
--
l_balance_type_code           VARCHAR2(1);
l_rec_acct_attrs              XLA_AE_LINES_PKG.t_rec_acct_attrs;
l_log_module                  VARCHAR2(240);

--
-- Upgrade strategy
--
l_actual_upg_option           VARCHAR2(1);
l_enc_upg_option           VARCHAR2(1);

--
BEGIN
--
IF g_log_enabled THEN
      l_log_module := C_DEFAULT_MODULE||'.AcctLineType_37';
END IF;
--
IF (C_LEVEL_PROCEDURE >= g_log_level) THEN

      trace
         (p_msg      => 'BEGIN of AcctLineType_37'
         ,p_level    => C_LEVEL_PROCEDURE
         ,p_module   => l_log_module);

END IF;
--
l_component_type             := 'AMB_JLT';
l_component_code             := 'AP_ITEM_EXPENSE_CM_ENC_DR';
l_component_type_code        := 'S';
l_component_appl_id          :=  200;
l_amb_context_code           := 'DEFAULT';
l_entity_code                := 'AP_INVOICES';
l_event_class_code           := 'CREDIT MEMOS';
l_event_type_code            := 'CREDIT MEMOS_ALL';
l_line_definition_owner_code := 'S';
l_line_definition_code       := 'ENC_CM_ALL';
--
l_balance_type_code          := 'E';
l_segment                     := NULL;
l_ccid                        := NULL;
l_adr_transaction_coa_id      := NULL;
l_adr_accounting_coa_id       := NULL;
l_adr_flexfield_segment_code  := NULL;
l_adr_flex_value_set_id       := NULL;
l_adr_value_type_code         := NULL;
l_adr_value_combination_id    := NULL;
l_adr_value_segment_code      := NULL;

l_bflow_method_code          := 'NONE';   -- 4219869 Business Flow
l_bflow_class_code           := 'AP_INV_ENCUM';    -- 4219869 Business Flow
l_inherit_desc_flag          := 'N';   -- 4219869 Business Flow
l_budgetary_control_flag     := 'Y';

l_bflow_applied_to_amt_idx   := NULL; -- 5132302
l_bflow_applied_to_amt       := NULL; -- 5132302
l_entered_amt_idx            := NULL;          -- 4262811
l_accted_amt_idx             := NULL;          -- 4262811
l_acc_rev_flag               := NULL;          -- 4262811
l_accrual_line_num           := NULL;          -- 4262811
l_tmp_amt                    := NULL;          -- 4262811
--
 
IF XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id = XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.ledger_id OR
    l_balance_type_code <> 'B' THEN
IF NVL(p_source_15,'
') =  'ITEM' AND 
NVL(p_source_18,'
') <>  'Y' AND 
NVL(p_source_17,'
') =  'Y'
 THEN 

   --
   XLA_AE_LINES_PKG.SetNewLine;

   p_balance_type_code          := l_balance_type_code;
   -- set the flag so later we will know whether the gain loss line needs to be created
   
   IF(l_balance_type_code = 'A' and p_actual_flag is null) THEN
     p_actual_flag :='A';
   END IF;

   --
   -- bulk performance
   --
   XLA_AE_LINES_PKG.set_ae_header_id (p_ae_header_id => p_event_id ,
                                      p_header_num   => 0); -- 4262811
   --
   -- set accounting line options
   --
   l_ae_header_id:= xla_ae_lines_pkg.SetAcctLineOption(
           p_natural_side_code          => 'D'
         , p_gain_or_loss_flag          => 'N'
         , p_gl_transfer_mode_code      => 'S'
         , p_acct_entry_type_code       => 'E'
         , p_switch_side_flag           => 'Y'
         , p_merge_duplicate_code       => 'N'
         );
   --
   l_acc_rev_natural_side_code := 'C';  -- 4262811
   -- 
   --
   -- set accounting line type info
   --
   xla_ae_lines_pkg.SetAcctLineType
      (p_component_type             => l_component_type
      ,p_event_type_code            => l_event_type_code
      ,p_line_definition_owner_code => l_line_definition_owner_code
      ,p_line_definition_code       => l_line_definition_code
      ,p_accounting_line_code       => l_component_code
      ,p_accounting_line_type_code  => l_component_type_code
      ,p_accounting_line_appl_id    => l_component_appl_id
      ,p_amb_context_code           => l_amb_context_code
      ,p_entity_code                => l_entity_code
      ,p_event_class_code           => l_event_class_code);
   --
   -- set accounting class
   --
   xla_ae_lines_pkg.SetAcctClass(
           p_accounting_class_code  => 'ITEM EXPENSE'
         , p_ae_header_id           => l_ae_header_id
         );

   --
   -- set rounding class
   --
   XLA_AE_LINES_PKG.g_rec_lines.array_rounding_class(XLA_AE_LINES_PKG.g_LineNumber) :=
                      'ITEM EXPENSE';

   --
   xla_ae_lines_pkg.g_rec_lines.array_calculate_acctd_flag(xla_ae_lines_pkg.g_LineNumber) := p_calculate_acctd_flag;
   xla_ae_lines_pkg.g_rec_lines.array_calculate_g_l_flag(xla_ae_lines_pkg.g_LineNumber) := p_calculate_g_l_flag;
   --
   -- bulk performance
   --
   XLA_AE_LINES_PKG.g_rec_lines.array_balance_type_code(XLA_AE_LINES_PKG.g_LineNumber) := l_balance_type_code;

   XLA_AE_LINES_PKG.g_rec_lines.array_ledger_id(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id;

   -- 4955764
   XLA_AE_LINES_PKG.g_rec_lines.array_gl_date(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_HEADER_PKG.g_rec_header_new.array_gl_date(g_array_event(p_event_id).array_value_num('header_index'));

   -- 4458381 Public Sector Enh
      XLA_AE_LINES_PKG.g_rec_lines.array_encumbrance_type_id(XLA_AE_LINES_PKG.g_LineNumber) := 1060;
   --
   -- set accounting attributes for the line type
   --
   l_entered_amt_idx := 23;
   l_accted_amt_idx  := 28;
   l_bflow_applied_to_amt_idx  := NULL;  -- 5132302
   l_rec_acct_attrs.array_acct_attr_code(1) := 'ACCOUNTING_REVERSAL_OPTION';
   l_rec_acct_attrs.array_char_value(1)  := p_source_19;
   l_rec_acct_attrs.array_acct_attr_code(2) := 'ALLOC_TO_APPLICATION_ID';
   l_rec_acct_attrs.array_num_value(2)  := 
xla_ae_sources_pkg.GetSystemSourceNum(
   p_source_code           => 'XLA_EVENT_APPL_ID'
 , p_source_type_code      => 'Y'
 , p_source_application_id =>  602
);
   l_rec_acct_attrs.array_acct_attr_code(3) := 'ALLOC_TO_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(3)  := p_source_21;
   l_rec_acct_attrs.array_acct_attr_code(4) := 'ALLOC_TO_ENTITY_CODE';
   l_rec_acct_attrs.array_char_value(4)  := 
xla_ae_sources_pkg.GetSystemSourceChar(
   p_source_code           => 'XLA_ENTITY_CODE'
 , p_source_type_code      => 'Y'
 , p_source_application_id =>  602
);
   l_rec_acct_attrs.array_acct_attr_code(5) := 'ALLOC_TO_FIRST_DIST_ID';
   l_rec_acct_attrs.array_num_value(5)  :=  to_char(p_source_23);
   l_rec_acct_attrs.array_acct_attr_code(6) := 'ALLOC_TO_FIRST_SYS_TRAN_ID';
   l_rec_acct_attrs.array_num_value(6)  :=  to_char(p_source_24);
   l_rec_acct_attrs.array_acct_attr_code(7) := 'APPLIED_TO_APPLICATION_ID';
   l_rec_acct_attrs.array_num_value(7)  := p_source_25;
   l_rec_acct_attrs.array_acct_attr_code(8) := 'APPLIED_TO_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(8)  := p_source_26;
   l_rec_acct_attrs.array_acct_attr_code(9) := 'APPLIED_TO_ENTITY_CODE';
   l_rec_acct_attrs.array_char_value(9)  := p_source_27;
   l_rec_acct_attrs.array_acct_attr_code(10) := 'APPLIED_TO_FIRST_DIST_ID';
   l_rec_acct_attrs.array_num_value(10)  :=  to_char(p_source_28);
   l_rec_acct_attrs.array_acct_attr_code(11) := 'APPLIED_TO_FIRST_SYS_TRAN_ID';
   l_rec_acct_attrs.array_num_value(11)  :=  to_char(p_source_29);
   l_rec_acct_attrs.array_acct_attr_code(12) := 'DISTRIBUTION_IDENTIFIER_1';
   l_rec_acct_attrs.array_num_value(12)  :=  to_char(p_source_30);
   l_rec_acct_attrs.array_acct_attr_code(13) := 'DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(13)  := p_source_21;
   l_rec_acct_attrs.array_acct_attr_code(14) := 'ENC_UPG_CR_CCID';
   l_rec_acct_attrs.array_num_value(14)  := p_source_31;
   l_rec_acct_attrs.array_acct_attr_code(15) := 'ENC_UPG_CR_ENTERED_AMT';
   l_rec_acct_attrs.array_num_value(15)  := p_source_32;
   l_rec_acct_attrs.array_acct_attr_code(16) := 'ENC_UPG_CR_ENTERED_CURR';
   l_rec_acct_attrs.array_char_value(16)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(17) := 'ENC_UPG_CR_LEDGER_AMT';
   l_rec_acct_attrs.array_num_value(17)  := p_source_34;
   l_rec_acct_attrs.array_acct_attr_code(18) := 'ENC_UPG_DR_CCID';
   l_rec_acct_attrs.array_num_value(18)  := p_source_35;
   l_rec_acct_attrs.array_acct_attr_code(19) := 'ENC_UPG_DR_ENTERED_AMT';
   l_rec_acct_attrs.array_num_value(19)  := p_source_36;
   l_rec_acct_attrs.array_acct_attr_code(20) := 'ENC_UPG_DR_ENTERED_CURR';
   l_rec_acct_attrs.array_char_value(20)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(21) := 'ENC_UPG_DR_LEDGER_AMT';
   l_rec_acct_attrs.array_num_value(21)  := p_source_37;
   l_rec_acct_attrs.array_acct_attr_code(22) := 'ENC_UPG_OPTION';
   l_rec_acct_attrs.array_char_value(22)  := p_source_38;
   l_rec_acct_attrs.array_acct_attr_code(23) := 'ENTERED_CURRENCY_AMOUNT';
   l_rec_acct_attrs.array_num_value(23)  := p_source_65;
   l_rec_acct_attrs.array_acct_attr_code(24) := 'ENTERED_CURRENCY_CODE';
   l_rec_acct_attrs.array_char_value(24)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(25) := 'EXCHANGE_DATE';
   l_rec_acct_attrs.array_date_value(25)  := p_source_39;
   l_rec_acct_attrs.array_acct_attr_code(26) := 'EXCHANGE_RATE';
   l_rec_acct_attrs.array_num_value(26)  := p_source_40;
   l_rec_acct_attrs.array_acct_attr_code(27) := 'EXCHANGE_RATE_TYPE';
   l_rec_acct_attrs.array_char_value(27)  := p_source_41;
   l_rec_acct_attrs.array_acct_attr_code(28) := 'LEDGER_AMOUNT';
   l_rec_acct_attrs.array_num_value(28)  := p_source_66;
   l_rec_acct_attrs.array_acct_attr_code(29) := 'MULTIPERIOD_END_DATE';
   l_rec_acct_attrs.array_date_value(29)  := p_source_43;
   l_rec_acct_attrs.array_acct_attr_code(30) := 'MULTIPERIOD_OPTION';
   l_rec_acct_attrs.array_char_value(30)  := p_source_44;
   l_rec_acct_attrs.array_acct_attr_code(31) := 'MULTIPERIOD_START_DATE';
   l_rec_acct_attrs.array_date_value(31)  := p_source_45;
   l_rec_acct_attrs.array_acct_attr_code(32) := 'OVERRIDE_ACCTD_AMT_FLAG';
   l_rec_acct_attrs.array_char_value(32)  := p_source_46;
   l_rec_acct_attrs.array_acct_attr_code(33) := 'PARTY_ID';
   l_rec_acct_attrs.array_num_value(33)  := p_source_47;
   l_rec_acct_attrs.array_acct_attr_code(34) := 'PARTY_SITE_ID';
   l_rec_acct_attrs.array_num_value(34)  := p_source_48;
   l_rec_acct_attrs.array_acct_attr_code(35) := 'PARTY_TYPE';
   l_rec_acct_attrs.array_char_value(35)  := p_source_49;
   l_rec_acct_attrs.array_acct_attr_code(36) := 'REVERSED_DISTRIBUTION_ID1';
   l_rec_acct_attrs.array_num_value(36)  :=  to_char(p_source_50);
   l_rec_acct_attrs.array_acct_attr_code(37) := 'REVERSED_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(37)  := p_source_21;
   l_rec_acct_attrs.array_acct_attr_code(38) := 'STATISTICAL_AMOUNT';
   l_rec_acct_attrs.array_num_value(38)  := p_source_51;
   l_rec_acct_attrs.array_acct_attr_code(39) := 'TAX_LINE_REF_ID';
   l_rec_acct_attrs.array_num_value(39)  := p_source_52;
   l_rec_acct_attrs.array_acct_attr_code(40) := 'TAX_REC_NREC_DIST_REF_ID';
   l_rec_acct_attrs.array_num_value(40)  := p_source_53;
   l_rec_acct_attrs.array_acct_attr_code(41) := 'TAX_SUMMARY_LINE_REF_ID';
   l_rec_acct_attrs.array_num_value(41)  := p_source_54;
   l_rec_acct_attrs.array_acct_attr_code(42) := 'UPG_CR_ENC_TYPE_ID';
   l_rec_acct_attrs.array_num_value(42)  := p_source_55;
   l_rec_acct_attrs.array_acct_attr_code(43) := 'UPG_DR_ENC_TYPE_ID';
   l_rec_acct_attrs.array_num_value(43)  := p_source_56;

   XLA_AE_LINES_PKG.SetLineAcctAttrs(l_rec_acct_attrs);
   p_gain_or_loss_ref  := XLA_AE_LINES_PKG.g_rec_lines.array_gain_or_loss_ref(XLA_AE_LINES_PKG.g_LineNumber);

   ---------------------------------------------------------------------------------------------------------------
   -- 4336173 -- assign Business Flow Class (replace code in xla_ae_lines_pkg.Business_Flow_Validation)
   ---------------------------------------------------------------------------------------------------------------
   XLA_AE_LINES_PKG.g_rec_lines.array_business_class_code(XLA_AE_LINES_PKG.g_LineNumber) := l_bflow_class_code;

   l_actual_upg_option  := XLA_AE_LINES_PKG.g_rec_lines.array_actual_upg_option(XLA_AE_LINES_PKG.g_LineNumber);
   l_enc_upg_option     := XLA_AE_LINES_PKG.g_rec_lines.array_enc_upg_option(XLA_AE_LINES_PKG.g_LineNumber);

   IF xla_accounting_cache_pkg.GetValueChar
         (p_source_code         => 'LEDGER_CATEGORY_CODE'
         ,p_target_ledger_id    => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id) IN ('PRIMARY','ALC')
   AND l_bflow_method_code = 'PRIOR_ENTRY'
--   AND (l_actual_upg_option = 'Y' OR l_enc_upg_option = 'Y') Bug 4922099
   AND ( (NVL(l_actual_upg_option, 'N') IN ('Y', 'O')) OR
         (NVL(l_enc_upg_option, 'N') IN ('Y', 'O'))
       )
   THEN
         xla_ae_lines_pkg.BflowUpgEntry
           (p_business_method_code    => l_bflow_method_code
           ,p_business_class_code     => l_bflow_class_code
           ,p_balance_type            => l_balance_type_code);
   ELSE
      NULL;
-- No business flow processing for business flow method of NONE.
   END IF;

   --
   -- call analytical criteria
   --
   
   --
   -- call description
   --
   
xla_ae_lines_pkg.SetLineDescription(
   p_ae_header_id => l_ae_header_id
  ,p_description  => Description_2 (
     p_application_id         => p_application_id
   , p_ae_header_id           => l_ae_header_id 
, p_source_1 => p_source_1
   )
);


   --
   -- call ADRs
   -- Bug 4922099
   --
   IF ( (l_bflow_method_code <> 'PRIOR_ENTRY') OR
        (NVL(l_actual_upg_option, 'N') = 'O') OR
        (NVL(l_enc_upg_option, 'N') = 'O')
      )
   THEN
   NULL;
   --
   --
   
  l_ccid := AcctDerRule_7(
           p_application_id           => p_application_id
         , p_ae_header_id             => l_ae_header_id 
, p_source_11 => p_source_11
         , x_transaction_coa_id       => l_adr_transaction_coa_id
         , x_accounting_coa_id        => l_adr_accounting_coa_id
         , x_value_type_code          => l_adr_value_type_code
         , p_side                     => 'NA'
   );

   xla_ae_lines_pkg.set_ccid(
    p_code_combination_id          => l_ccid
  , p_value_type_code              => l_adr_value_type_code
  , p_transaction_coa_id           => l_adr_transaction_coa_id
  , p_accounting_coa_id            => l_adr_accounting_coa_id
  , p_adr_code                     => 'AP_INVOICE_DIST'
  , p_adr_type_code                => 'S'
  , p_component_type               => l_component_type
  , p_component_code               => l_component_code
  , p_component_type_code          => l_component_type_code
  , p_component_appl_id            => l_component_appl_id
  , p_amb_context_code             => l_amb_context_code
  , p_side                         => 'NA'
  );


   --
   --
   END IF;
   --
   -- Bug 4922099
   IF ( ( (NVL(l_actual_upg_option, 'N') = 'O') OR
          (NVL(l_enc_upg_option, 'N') = 'O')
        ) AND
        (l_bflow_method_code = 'PRIOR_ENTRY')
      )
   THEN
      IF
      --
      1 = 2
      --
      THEN
      xla_accounting_err_pkg.build_message
                                    (p_appli_s_name            => 'XLA'
                                    ,p_msg_name                => 'XLA_UPG_OVERRIDE_ADR_UNDEFINED'
                                    ,p_token_1                 => 'LINE_NUMBER'
                                    ,p_value_1                 => XLA_AE_LINES_PKG.g_LineNumber
                                    ,p_token_2                 => 'LINE_TYPE_NAME'
                                    ,p_value_2                 => XLA_AE_SOURCES_PKG.GetComponentName (
                                                                             l_component_type
                                                                            ,l_component_code
                                                                            ,l_component_type_code
                                                                            ,l_component_appl_id
                                                                            ,l_amb_context_code
                                                                            ,l_entity_code
                                                                            ,l_event_class_code
                                                                           )
                                    ,p_token_3                 => 'OWNER'
                                    ,p_value_3                 => xla_lookups_pkg.get_meaning(
                                                                          p_lookup_type     => 'XLA_OWNER_TYPE'
                                                                          ,p_lookup_code    => l_component_type_code
                                                                         )
                                    ,p_token_4                 => 'PRODUCT_NAME'
                                    ,p_value_4                 => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.application_name
                                    ,p_entity_id               => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.entity_id
                                    ,p_event_id                => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.event_id
                                    ,p_ledger_id               => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id
                                    ,p_ae_header_id            =>  NULL
                                       );

        IF (C_LEVEL_ERROR>= g_log_level) THEN
                 trace
                      (p_msg      => 'ERROR: XLA_UPG_OVERRIDE_ADR_UNDEFINED'
                      ,p_level    => C_LEVEL_ERROR
                      ,p_module   => l_log_module);
        END IF;
      END IF;
   END IF;
   --
   --
   ------------------------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- NOTE: XLA_AE_LINES_PKG.ValidateCurrentLine should NOT be generated if business flow method is
   -- Prior Entry.  Currently, the following code is always generated.
   ------------------------------------------------------------------------------------------------
   XLA_AE_LINES_PKG.ValidateCurrentLine;

   ------------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- Populated credit and debit amounts -- Need to generate this within IF <condition>
   ------------------------------------------------------------------------------------
   XLA_AE_LINES_PKG.SetDebitCreditAmounts;

   ----------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- Update journal entry status -- Need to generate this within IF <condition>
   ----------------------------------------------------------------------------------
   XLA_AE_JOURNAL_ENTRY_PKG.UpdateJournalEntryStatus
         (p_hdr_idx => g_array_event(p_event_id).array_value_num('header_index')
         ,p_balance_type_code => l_balance_type_code
         );

   -------------------------------------------------------------------------------------------
   -- 4262811 - Generate the Accrual Reversal lines
   -------------------------------------------------------------------------------------------
   BEGIN
      l_acc_rev_flag := XLA_AE_HEADER_PKG.g_rec_header_new.array_accrual_reversal_flag
                              (g_array_event(p_event_id).array_value_num('header_index'));
      IF l_acc_rev_flag IS NULL THEN
         l_acc_rev_flag := 'N';
      END IF;
   EXCEPTION
      WHEN OTHERS THEN
         l_acc_rev_flag := 'N';
   END;
   --
   IF (l_acc_rev_flag = 'Y') THEN

       -- 4645092  ------------------------------------------------------------------------------
       -- To allow MPA report to determine if it should generate report process
       XLA_ACCOUNTING_PKG.g_mpa_accrual_exists := 'Y';
       ------------------------------------------------------------------------------------------

       l_accrual_line_num := XLA_AE_LINES_PKG.g_LineNumber;
       XLA_AE_LINES_PKG.CopyLineInfo(l_accrual_line_num);
   -- added call to set_ccid to execute mapping  for secondary accrual reversal entries bug 7444204
   -- call ADRs
   -- Bug 4922099
   --
   IF ( (l_bflow_method_code <> 'PRIOR_ENTRY') OR
        (NVL(l_actual_upg_option, 'N') = 'O') OR
        (NVL(l_enc_upg_option, 'N') = 'O')
      )
   THEN
   NULL;
   --
   --
   
  l_ccid := AcctDerRule_7(
           p_application_id           => p_application_id
         , p_ae_header_id             => l_ae_header_id 
, p_source_11 => p_source_11
         , x_transaction_coa_id       => l_adr_transaction_coa_id
         , x_accounting_coa_id        => l_adr_accounting_coa_id
         , x_value_type_code          => l_adr_value_type_code
         , p_side                     => 'NA'
   );

   xla_ae_lines_pkg.set_ccid(
    p_code_combination_id          => l_ccid
  , p_value_type_code              => l_adr_value_type_code
  , p_transaction_coa_id           => l_adr_transaction_coa_id
  , p_accounting_coa_id            => l_adr_accounting_coa_id
  , p_adr_code                     => 'AP_INVOICE_DIST'
  , p_adr_type_code                => 'S'
  , p_component_type               => l_component_type
  , p_component_code               => l_component_code
  , p_component_type_code          => l_component_type_code
  , p_component_appl_id            => l_component_appl_id
  , p_amb_context_code             => l_amb_context_code
  , p_side                         => 'NA'
  );


   --
   --
   END IF;

       --
       -- Update the line information that should be overwritten
       --
       XLA_AE_LINES_PKG.set_ae_header_id(p_ae_header_id => p_event_id ,
                                         p_header_num   => 1);
       XLA_AE_LINES_PKG.g_rec_lines.array_header_num(XLA_AE_LINES_PKG.g_LineNumber)  :=1;

       XLA_AE_LINES_PKG.g_rec_lines.array_business_class_code(XLA_AE_LINES_PKG.g_LineNumber) := NULL; -- 4669271

       IF l_bflow_method_code <> 'NONE' THEN  -- 4655713b
          XLA_AE_LINES_PKG.g_rec_lines.array_reversal_code(XLA_AE_LINES_PKG.g_LineNumber) := CONCAT('MPA_',l_bflow_method_code);
       END IF;

      --
      -- Depending on the Reversal Method setup, do a switch side or changes sign for the amounts
      --
      IF (XLA_AE_JOURNAL_ENTRY_PKG.g_cache_ledgers_info.ledger_reversal_option = 'SIDE') THEN
          XLA_AE_LINES_PKG.g_rec_lines.array_natural_side_code(XLA_AE_LINES_PKG.g_LineNumber) :=  l_acc_rev_natural_side_code;
      ELSE
          ---------------------------------------------------------------------------------------------------
          -- 4262811a Switch Sign
          ---------------------------------------------------------------------------------------------------
          XLA_AE_LINES_PKG.g_rec_lines.array_switch_side_flag(XLA_AE_LINES_PKG.g_LineNumber) := 'N';  -- 5052518
          XLA_AE_LINES_PKG.g_rec_lines.array_ledger_amount(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_ledger_amount(XLA_AE_LINES_PKG.g_LineNumber) * -1;
          XLA_AE_LINES_PKG.g_rec_lines.array_entered_amount(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_entered_amount(XLA_AE_LINES_PKG.g_LineNumber) * -1;
          -- 5132302
          XLA_AE_LINES_PKG.g_rec_lines.array_bflow_applied_to_amt(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_bflow_applied_to_amt(XLA_AE_LINES_PKG.g_LineNumber) * -1;

      END IF;

      -- 4955764
      XLA_AE_LINES_PKG.g_rec_lines.array_gl_date(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_HEADER_PKG.g_rec_header_new.array_gl_date(g_array_event(p_event_id).array_value_num('acc_rev_header_index'));


      XLA_AE_LINES_PKG.ValidateCurrentLine;
      XLA_AE_LINES_PKG.SetDebitCreditAmounts;

      XLA_AE_JOURNAL_ENTRY_PKG.UpdateJournalEntryStatus
               (p_hdr_idx           => g_array_event(p_event_id).array_value_num('acc_rev_header_index')
               ,p_balance_type_code => l_balance_type_code);

   END IF;

   -----------------------------------------------------------------------------------------
   -- 4262811 Multiperiod Accounting
   -----------------------------------------------------------------------------------------
     -- No MPA option is assigned.


END IF;
END IF;
--

--
IF (C_LEVEL_PROCEDURE >= g_log_level) THEN
   trace
      (p_msg      => 'END of AcctLineType_37'
      ,p_level    => C_LEVEL_PROCEDURE
      ,p_module   => l_log_module);
END IF;
--
EXCEPTION
  WHEN xla_exceptions_pkg.application_exception THEN
      RAISE;
  WHEN OTHERS THEN
       xla_exceptions_pkg.raise_message
           (p_location => 'XLA_00200_AAD_S_000010_BC_PKG.AcctLineType_37');
END AcctLineType_37;
--

---------------------------------------
--
-- PRIVATE FUNCTION
--         AcctLineType_38
--
---------------------------------------
PROCEDURE AcctLineType_38 (
  p_application_id        IN NUMBER
 ,p_event_id              IN NUMBER
 ,p_calculate_acctd_flag  IN VARCHAR2
 ,p_calculate_g_l_flag    IN VARCHAR2
 ,p_actual_flag           IN OUT VARCHAR2
 ,p_balance_type_code     OUT VARCHAR2
 ,p_gain_or_loss_ref      OUT VARCHAR2
 
--Invoice Distribution Description
 , p_source_1            IN VARCHAR2
--Invoice Distribution Account
 , p_source_11            IN NUMBER
--Invoice Distribution Type
 , p_source_15            IN VARCHAR2
 , p_source_15_meaning    IN VARCHAR2
--Purchasing Encumbrance Option
 , p_source_17            IN VARCHAR2
 , p_source_17_meaning    IN VARCHAR2
--Accrue on Receipt Option
 , p_source_18            IN VARCHAR2
 , p_source_18_meaning    IN VARCHAR2
--Accounting Reversal Indicator
 , p_source_19            IN VARCHAR2
--Distribution Link Type
 , p_source_21            IN VARCHAR2
--Allocation to Main Distribution Identifier
 , p_source_23            IN NUMBER
--Invoice Identifier
 , p_source_24            IN NUMBER
--Business Flow Accounts Payable Application Identifier
 , p_source_25            IN NUMBER
--Business Flow Invoice Distribution Type
 , p_source_26            IN VARCHAR2
--Business Flow Invoice Entity Code
 , p_source_27            IN VARCHAR2
--Business Flow Invoice Distribution Identifier
 , p_source_28            IN NUMBER
--Business Flow Invoice Identifier
 , p_source_29            IN NUMBER
--Invoice Distribution Identifier
 , p_source_30            IN NUMBER
--Payables Encumbrance Upgrade Credit Account
 , p_source_31            IN NUMBER
--Payables Encumbrance Upgrade Credit Amount
 , p_source_32            IN NUMBER
--Invoice Currency Code
 , p_source_33            IN VARCHAR2
--Payables Encumbrance Upgrade Credit Base Amount
 , p_source_34            IN NUMBER
--Payables Encumbrance Upgrade Debit Account
 , p_source_35            IN NUMBER
--Payables Encumbrance Upgrade Debit Amount
 , p_source_36            IN NUMBER
--Payables Encumbrance Upgrade Debit Base Amount
 , p_source_37            IN NUMBER
--Payables Encumbrance Upgrade Option
 , p_source_38            IN VARCHAR2
--Invoice Exchange Date
 , p_source_39            IN DATE
--Invoice Exchange Rate
 , p_source_40            IN NUMBER
--Invoice Exchange Rate Type
 , p_source_41            IN VARCHAR2
--Deferred Accounting End Date
 , p_source_43            IN DATE
--Deferred Accounting Option
 , p_source_44            IN VARCHAR2
--Deferred Accounting Start Date
 , p_source_45            IN DATE
--Override Accounted Amount Indicator
 , p_source_46            IN VARCHAR2
 , p_source_46_meaning    IN VARCHAR2
--Invoice Supplier Identifier
 , p_source_47            IN NUMBER
--Invoice Supplier Site Identifier
 , p_source_48            IN NUMBER
--Third Party Type
 , p_source_49            IN VARCHAR2
--Parent Reversal Identifier
 , p_source_50            IN NUMBER
--Invoice Distribution Tax Line Identifier
 , p_source_52            IN NUMBER
--Invoice Distribution Tax Distribution Identifier from Tax
 , p_source_53            IN NUMBER
--Invoice Distribution Summary Tax Line Identifier
 , p_source_54            IN NUMBER
--Payables Upgrade Credit Encumbrance Type Identifier
 , p_source_55            IN NUMBER
--Payables Upgrade Debit Encumbrance Type Identifier
 , p_source_56            IN NUMBER
--Invoice Distribution Encumbrance Amount
 , p_source_65            IN NUMBER
--Invoice Distribution Encumbrance Ledger Amount
 , p_source_66            IN NUMBER
)
IS

l_component_type              VARCHAR2(80);
l_component_code              VARCHAR2(30);
l_component_type_code         VARCHAR2(1);
l_component_appl_id           INTEGER;
l_amb_context_code            VARCHAR2(30);
l_entity_code                 VARCHAR2(30);
l_event_class_code            VARCHAR2(30);
l_ae_header_id                NUMBER;
l_event_type_code             VARCHAR2(30);
l_line_definition_code        VARCHAR2(30);
l_line_definition_owner_code  VARCHAR2(1);
--
-- adr variables
l_segment                     VARCHAR2(30);
l_ccid                        NUMBER;
l_adr_transaction_coa_id      NUMBER;
l_adr_accounting_coa_id       NUMBER;
l_adr_flexfield_segment_code  VARCHAR2(30);
l_adr_flex_value_set_id       NUMBER;
l_adr_value_type_code         VARCHAR2(30);
l_adr_value_combination_id    NUMBER;
l_adr_value_segment_code      VARCHAR2(30);

l_bflow_method_code           VARCHAR2(30);  -- 4219869 Business Flow
l_bflow_class_code            VARCHAR2(30);  -- 4219869 Business Flow
l_inherit_desc_flag           VARCHAR2(1);   -- 4219869 Business Flow
l_budgetary_control_flag      VARCHAR2(1);   -- 4458381 Public Sector Enh

-- 4262811 Variables ------------------------------------------------------------------------------------------
l_entered_amt_idx             NUMBER;
l_accted_amt_idx              NUMBER;
l_acc_rev_flag                VARCHAR2(1);
l_accrual_line_num            NUMBER;
l_tmp_amt                     NUMBER;
l_acc_rev_natural_side_code   VARCHAR2(1);

l_num_entries                 NUMBER;
l_gl_dates                    xla_ae_journal_entry_pkg.t_array_date;
l_accted_amts                 xla_ae_journal_entry_pkg.t_array_num;
l_entered_amts                xla_ae_journal_entry_pkg.t_array_num;
l_period_names                xla_ae_journal_entry_pkg.t_array_V15L;
l_recog_line_1                NUMBER;
l_recog_line_2                NUMBER;

l_bflow_applied_to_amt_idx    NUMBER;                                -- 5132302
l_bflow_applied_to_amt        NUMBER;                                -- 5132302
l_bflow_applied_to_amts       xla_ae_journal_entry_pkg.t_array_num;  -- 5132302

l_event_id                    NUMBER;  -- To handle MPA header Description: xla_ae_header_pkg.SetHdrDescription

--l_rounding_ccy                VARCHAR2(15); -- To handle MPA rounding  4262811b
l_same_currency               BOOLEAN;        -- To handle MPA rounding  4262811b

---------------------------------------------------------------------------------------------------------------


--
-- bulk performance
--
l_balance_type_code           VARCHAR2(1);
l_rec_acct_attrs              XLA_AE_LINES_PKG.t_rec_acct_attrs;
l_log_module                  VARCHAR2(240);

--
-- Upgrade strategy
--
l_actual_upg_option           VARCHAR2(1);
l_enc_upg_option           VARCHAR2(1);

--
BEGIN
--
IF g_log_enabled THEN
      l_log_module := C_DEFAULT_MODULE||'.AcctLineType_38';
END IF;
--
IF (C_LEVEL_PROCEDURE >= g_log_level) THEN

      trace
         (p_msg      => 'BEGIN of AcctLineType_38'
         ,p_level    => C_LEVEL_PROCEDURE
         ,p_module   => l_log_module);

END IF;
--
l_component_type             := 'AMB_JLT';
l_component_code             := 'AP_ITEM_EXPENSE_DM_ENC_DR';
l_component_type_code        := 'S';
l_component_appl_id          :=  200;
l_amb_context_code           := 'DEFAULT';
l_entity_code                := 'AP_INVOICES';
l_event_class_code           := 'DEBIT MEMOS';
l_event_type_code            := 'DEBIT MEMOS_ALL';
l_line_definition_owner_code := 'S';
l_line_definition_code       := 'ENC_DM_ALL';
--
l_balance_type_code          := 'E';
l_segment                     := NULL;
l_ccid                        := NULL;
l_adr_transaction_coa_id      := NULL;
l_adr_accounting_coa_id       := NULL;
l_adr_flexfield_segment_code  := NULL;
l_adr_flex_value_set_id       := NULL;
l_adr_value_type_code         := NULL;
l_adr_value_combination_id    := NULL;
l_adr_value_segment_code      := NULL;

l_bflow_method_code          := 'NONE';   -- 4219869 Business Flow
l_bflow_class_code           := 'AP_INV_ENCUM';    -- 4219869 Business Flow
l_inherit_desc_flag          := 'N';   -- 4219869 Business Flow
l_budgetary_control_flag     := 'Y';

l_bflow_applied_to_amt_idx   := NULL; -- 5132302
l_bflow_applied_to_amt       := NULL; -- 5132302
l_entered_amt_idx            := NULL;          -- 4262811
l_accted_amt_idx             := NULL;          -- 4262811
l_acc_rev_flag               := NULL;          -- 4262811
l_accrual_line_num           := NULL;          -- 4262811
l_tmp_amt                    := NULL;          -- 4262811
--
 
IF XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id = XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.ledger_id OR
    l_balance_type_code <> 'B' THEN
IF NVL(p_source_15,'
') =  'ITEM' AND 
NVL(p_source_18,'
') <>  'Y' AND 
NVL(p_source_17,'
') =  'Y'
 THEN 

   --
   XLA_AE_LINES_PKG.SetNewLine;

   p_balance_type_code          := l_balance_type_code;
   -- set the flag so later we will know whether the gain loss line needs to be created
   
   IF(l_balance_type_code = 'A' and p_actual_flag is null) THEN
     p_actual_flag :='A';
   END IF;

   --
   -- bulk performance
   --
   XLA_AE_LINES_PKG.set_ae_header_id (p_ae_header_id => p_event_id ,
                                      p_header_num   => 0); -- 4262811
   --
   -- set accounting line options
   --
   l_ae_header_id:= xla_ae_lines_pkg.SetAcctLineOption(
           p_natural_side_code          => 'D'
         , p_gain_or_loss_flag          => 'N'
         , p_gl_transfer_mode_code      => 'S'
         , p_acct_entry_type_code       => 'E'
         , p_switch_side_flag           => 'Y'
         , p_merge_duplicate_code       => 'N'
         );
   --
   l_acc_rev_natural_side_code := 'C';  -- 4262811
   -- 
   --
   -- set accounting line type info
   --
   xla_ae_lines_pkg.SetAcctLineType
      (p_component_type             => l_component_type
      ,p_event_type_code            => l_event_type_code
      ,p_line_definition_owner_code => l_line_definition_owner_code
      ,p_line_definition_code       => l_line_definition_code
      ,p_accounting_line_code       => l_component_code
      ,p_accounting_line_type_code  => l_component_type_code
      ,p_accounting_line_appl_id    => l_component_appl_id
      ,p_amb_context_code           => l_amb_context_code
      ,p_entity_code                => l_entity_code
      ,p_event_class_code           => l_event_class_code);
   --
   -- set accounting class
   --
   xla_ae_lines_pkg.SetAcctClass(
           p_accounting_class_code  => 'ITEM EXPENSE'
         , p_ae_header_id           => l_ae_header_id
         );

   --
   -- set rounding class
   --
   XLA_AE_LINES_PKG.g_rec_lines.array_rounding_class(XLA_AE_LINES_PKG.g_LineNumber) :=
                      'ITEM EXPENSE';

   --
   xla_ae_lines_pkg.g_rec_lines.array_calculate_acctd_flag(xla_ae_lines_pkg.g_LineNumber) := p_calculate_acctd_flag;
   xla_ae_lines_pkg.g_rec_lines.array_calculate_g_l_flag(xla_ae_lines_pkg.g_LineNumber) := p_calculate_g_l_flag;
   --
   -- bulk performance
   --
   XLA_AE_LINES_PKG.g_rec_lines.array_balance_type_code(XLA_AE_LINES_PKG.g_LineNumber) := l_balance_type_code;

   XLA_AE_LINES_PKG.g_rec_lines.array_ledger_id(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id;

   -- 4955764
   XLA_AE_LINES_PKG.g_rec_lines.array_gl_date(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_HEADER_PKG.g_rec_header_new.array_gl_date(g_array_event(p_event_id).array_value_num('header_index'));

   -- 4458381 Public Sector Enh
      XLA_AE_LINES_PKG.g_rec_lines.array_encumbrance_type_id(XLA_AE_LINES_PKG.g_LineNumber) := 1060;
   --
   -- set accounting attributes for the line type
   --
   l_entered_amt_idx := 23;
   l_accted_amt_idx  := 28;
   l_bflow_applied_to_amt_idx  := NULL;  -- 5132302
   l_rec_acct_attrs.array_acct_attr_code(1) := 'ACCOUNTING_REVERSAL_OPTION';
   l_rec_acct_attrs.array_char_value(1)  := p_source_19;
   l_rec_acct_attrs.array_acct_attr_code(2) := 'ALLOC_TO_APPLICATION_ID';
   l_rec_acct_attrs.array_num_value(2)  := 
xla_ae_sources_pkg.GetSystemSourceNum(
   p_source_code           => 'XLA_EVENT_APPL_ID'
 , p_source_type_code      => 'Y'
 , p_source_application_id =>  602
);
   l_rec_acct_attrs.array_acct_attr_code(3) := 'ALLOC_TO_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(3)  := p_source_21;
   l_rec_acct_attrs.array_acct_attr_code(4) := 'ALLOC_TO_ENTITY_CODE';
   l_rec_acct_attrs.array_char_value(4)  := 
xla_ae_sources_pkg.GetSystemSourceChar(
   p_source_code           => 'XLA_ENTITY_CODE'
 , p_source_type_code      => 'Y'
 , p_source_application_id =>  602
);
   l_rec_acct_attrs.array_acct_attr_code(5) := 'ALLOC_TO_FIRST_DIST_ID';
   l_rec_acct_attrs.array_num_value(5)  :=  to_char(p_source_23);
   l_rec_acct_attrs.array_acct_attr_code(6) := 'ALLOC_TO_FIRST_SYS_TRAN_ID';
   l_rec_acct_attrs.array_num_value(6)  :=  to_char(p_source_24);
   l_rec_acct_attrs.array_acct_attr_code(7) := 'APPLIED_TO_APPLICATION_ID';
   l_rec_acct_attrs.array_num_value(7)  := p_source_25;
   l_rec_acct_attrs.array_acct_attr_code(8) := 'APPLIED_TO_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(8)  := p_source_26;
   l_rec_acct_attrs.array_acct_attr_code(9) := 'APPLIED_TO_ENTITY_CODE';
   l_rec_acct_attrs.array_char_value(9)  := p_source_27;
   l_rec_acct_attrs.array_acct_attr_code(10) := 'APPLIED_TO_FIRST_DIST_ID';
   l_rec_acct_attrs.array_num_value(10)  :=  to_char(p_source_28);
   l_rec_acct_attrs.array_acct_attr_code(11) := 'APPLIED_TO_FIRST_SYS_TRAN_ID';
   l_rec_acct_attrs.array_num_value(11)  :=  to_char(p_source_29);
   l_rec_acct_attrs.array_acct_attr_code(12) := 'DISTRIBUTION_IDENTIFIER_1';
   l_rec_acct_attrs.array_num_value(12)  :=  to_char(p_source_30);
   l_rec_acct_attrs.array_acct_attr_code(13) := 'DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(13)  := p_source_21;
   l_rec_acct_attrs.array_acct_attr_code(14) := 'ENC_UPG_CR_CCID';
   l_rec_acct_attrs.array_num_value(14)  := p_source_31;
   l_rec_acct_attrs.array_acct_attr_code(15) := 'ENC_UPG_CR_ENTERED_AMT';
   l_rec_acct_attrs.array_num_value(15)  := p_source_32;
   l_rec_acct_attrs.array_acct_attr_code(16) := 'ENC_UPG_CR_ENTERED_CURR';
   l_rec_acct_attrs.array_char_value(16)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(17) := 'ENC_UPG_CR_LEDGER_AMT';
   l_rec_acct_attrs.array_num_value(17)  := p_source_34;
   l_rec_acct_attrs.array_acct_attr_code(18) := 'ENC_UPG_DR_CCID';
   l_rec_acct_attrs.array_num_value(18)  := p_source_35;
   l_rec_acct_attrs.array_acct_attr_code(19) := 'ENC_UPG_DR_ENTERED_AMT';
   l_rec_acct_attrs.array_num_value(19)  := p_source_36;
   l_rec_acct_attrs.array_acct_attr_code(20) := 'ENC_UPG_DR_ENTERED_CURR';
   l_rec_acct_attrs.array_char_value(20)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(21) := 'ENC_UPG_DR_LEDGER_AMT';
   l_rec_acct_attrs.array_num_value(21)  := p_source_37;
   l_rec_acct_attrs.array_acct_attr_code(22) := 'ENC_UPG_OPTION';
   l_rec_acct_attrs.array_char_value(22)  := p_source_38;
   l_rec_acct_attrs.array_acct_attr_code(23) := 'ENTERED_CURRENCY_AMOUNT';
   l_rec_acct_attrs.array_num_value(23)  := p_source_65;
   l_rec_acct_attrs.array_acct_attr_code(24) := 'ENTERED_CURRENCY_CODE';
   l_rec_acct_attrs.array_char_value(24)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(25) := 'EXCHANGE_DATE';
   l_rec_acct_attrs.array_date_value(25)  := p_source_39;
   l_rec_acct_attrs.array_acct_attr_code(26) := 'EXCHANGE_RATE';
   l_rec_acct_attrs.array_num_value(26)  := p_source_40;
   l_rec_acct_attrs.array_acct_attr_code(27) := 'EXCHANGE_RATE_TYPE';
   l_rec_acct_attrs.array_char_value(27)  := p_source_41;
   l_rec_acct_attrs.array_acct_attr_code(28) := 'LEDGER_AMOUNT';
   l_rec_acct_attrs.array_num_value(28)  := p_source_66;
   l_rec_acct_attrs.array_acct_attr_code(29) := 'MULTIPERIOD_END_DATE';
   l_rec_acct_attrs.array_date_value(29)  := p_source_43;
   l_rec_acct_attrs.array_acct_attr_code(30) := 'MULTIPERIOD_OPTION';
   l_rec_acct_attrs.array_char_value(30)  := p_source_44;
   l_rec_acct_attrs.array_acct_attr_code(31) := 'MULTIPERIOD_START_DATE';
   l_rec_acct_attrs.array_date_value(31)  := p_source_45;
   l_rec_acct_attrs.array_acct_attr_code(32) := 'OVERRIDE_ACCTD_AMT_FLAG';
   l_rec_acct_attrs.array_char_value(32)  := p_source_46;
   l_rec_acct_attrs.array_acct_attr_code(33) := 'PARTY_ID';
   l_rec_acct_attrs.array_num_value(33)  := p_source_47;
   l_rec_acct_attrs.array_acct_attr_code(34) := 'PARTY_SITE_ID';
   l_rec_acct_attrs.array_num_value(34)  := p_source_48;
   l_rec_acct_attrs.array_acct_attr_code(35) := 'PARTY_TYPE';
   l_rec_acct_attrs.array_char_value(35)  := p_source_49;
   l_rec_acct_attrs.array_acct_attr_code(36) := 'REVERSED_DISTRIBUTION_ID1';
   l_rec_acct_attrs.array_num_value(36)  :=  to_char(p_source_50);
   l_rec_acct_attrs.array_acct_attr_code(37) := 'REVERSED_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(37)  := p_source_21;
   l_rec_acct_attrs.array_acct_attr_code(38) := 'TAX_LINE_REF_ID';
   l_rec_acct_attrs.array_num_value(38)  := p_source_52;
   l_rec_acct_attrs.array_acct_attr_code(39) := 'TAX_REC_NREC_DIST_REF_ID';
   l_rec_acct_attrs.array_num_value(39)  := p_source_53;
   l_rec_acct_attrs.array_acct_attr_code(40) := 'TAX_SUMMARY_LINE_REF_ID';
   l_rec_acct_attrs.array_num_value(40)  := p_source_54;
   l_rec_acct_attrs.array_acct_attr_code(41) := 'UPG_CR_ENC_TYPE_ID';
   l_rec_acct_attrs.array_num_value(41)  := p_source_55;
   l_rec_acct_attrs.array_acct_attr_code(42) := 'UPG_DR_ENC_TYPE_ID';
   l_rec_acct_attrs.array_num_value(42)  := p_source_56;

   XLA_AE_LINES_PKG.SetLineAcctAttrs(l_rec_acct_attrs);
   p_gain_or_loss_ref  := XLA_AE_LINES_PKG.g_rec_lines.array_gain_or_loss_ref(XLA_AE_LINES_PKG.g_LineNumber);

   ---------------------------------------------------------------------------------------------------------------
   -- 4336173 -- assign Business Flow Class (replace code in xla_ae_lines_pkg.Business_Flow_Validation)
   ---------------------------------------------------------------------------------------------------------------
   XLA_AE_LINES_PKG.g_rec_lines.array_business_class_code(XLA_AE_LINES_PKG.g_LineNumber) := l_bflow_class_code;

   l_actual_upg_option  := XLA_AE_LINES_PKG.g_rec_lines.array_actual_upg_option(XLA_AE_LINES_PKG.g_LineNumber);
   l_enc_upg_option     := XLA_AE_LINES_PKG.g_rec_lines.array_enc_upg_option(XLA_AE_LINES_PKG.g_LineNumber);

   IF xla_accounting_cache_pkg.GetValueChar
         (p_source_code         => 'LEDGER_CATEGORY_CODE'
         ,p_target_ledger_id    => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id) IN ('PRIMARY','ALC')
   AND l_bflow_method_code = 'PRIOR_ENTRY'
--   AND (l_actual_upg_option = 'Y' OR l_enc_upg_option = 'Y') Bug 4922099
   AND ( (NVL(l_actual_upg_option, 'N') IN ('Y', 'O')) OR
         (NVL(l_enc_upg_option, 'N') IN ('Y', 'O'))
       )
   THEN
         xla_ae_lines_pkg.BflowUpgEntry
           (p_business_method_code    => l_bflow_method_code
           ,p_business_class_code     => l_bflow_class_code
           ,p_balance_type            => l_balance_type_code);
   ELSE
      NULL;
-- No business flow processing for business flow method of NONE.
   END IF;

   --
   -- call analytical criteria
   --
   
   --
   -- call description
   --
   
xla_ae_lines_pkg.SetLineDescription(
   p_ae_header_id => l_ae_header_id
  ,p_description  => Description_2 (
     p_application_id         => p_application_id
   , p_ae_header_id           => l_ae_header_id 
, p_source_1 => p_source_1
   )
);


   --
   -- call ADRs
   -- Bug 4922099
   --
   IF ( (l_bflow_method_code <> 'PRIOR_ENTRY') OR
        (NVL(l_actual_upg_option, 'N') = 'O') OR
        (NVL(l_enc_upg_option, 'N') = 'O')
      )
   THEN
   NULL;
   --
   --
   
  l_ccid := AcctDerRule_7(
           p_application_id           => p_application_id
         , p_ae_header_id             => l_ae_header_id 
, p_source_11 => p_source_11
         , x_transaction_coa_id       => l_adr_transaction_coa_id
         , x_accounting_coa_id        => l_adr_accounting_coa_id
         , x_value_type_code          => l_adr_value_type_code
         , p_side                     => 'NA'
   );

   xla_ae_lines_pkg.set_ccid(
    p_code_combination_id          => l_ccid
  , p_value_type_code              => l_adr_value_type_code
  , p_transaction_coa_id           => l_adr_transaction_coa_id
  , p_accounting_coa_id            => l_adr_accounting_coa_id
  , p_adr_code                     => 'AP_INVOICE_DIST'
  , p_adr_type_code                => 'S'
  , p_component_type               => l_component_type
  , p_component_code               => l_component_code
  , p_component_type_code          => l_component_type_code
  , p_component_appl_id            => l_component_appl_id
  , p_amb_context_code             => l_amb_context_code
  , p_side                         => 'NA'
  );


   --
   --
   END IF;
   --
   -- Bug 4922099
   IF ( ( (NVL(l_actual_upg_option, 'N') = 'O') OR
          (NVL(l_enc_upg_option, 'N') = 'O')
        ) AND
        (l_bflow_method_code = 'PRIOR_ENTRY')
      )
   THEN
      IF
      --
      1 = 2
      --
      THEN
      xla_accounting_err_pkg.build_message
                                    (p_appli_s_name            => 'XLA'
                                    ,p_msg_name                => 'XLA_UPG_OVERRIDE_ADR_UNDEFINED'
                                    ,p_token_1                 => 'LINE_NUMBER'
                                    ,p_value_1                 => XLA_AE_LINES_PKG.g_LineNumber
                                    ,p_token_2                 => 'LINE_TYPE_NAME'
                                    ,p_value_2                 => XLA_AE_SOURCES_PKG.GetComponentName (
                                                                             l_component_type
                                                                            ,l_component_code
                                                                            ,l_component_type_code
                                                                            ,l_component_appl_id
                                                                            ,l_amb_context_code
                                                                            ,l_entity_code
                                                                            ,l_event_class_code
                                                                           )
                                    ,p_token_3                 => 'OWNER'
                                    ,p_value_3                 => xla_lookups_pkg.get_meaning(
                                                                          p_lookup_type     => 'XLA_OWNER_TYPE'
                                                                          ,p_lookup_code    => l_component_type_code
                                                                         )
                                    ,p_token_4                 => 'PRODUCT_NAME'
                                    ,p_value_4                 => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.application_name
                                    ,p_entity_id               => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.entity_id
                                    ,p_event_id                => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.event_id
                                    ,p_ledger_id               => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id
                                    ,p_ae_header_id            =>  NULL
                                       );

        IF (C_LEVEL_ERROR>= g_log_level) THEN
                 trace
                      (p_msg      => 'ERROR: XLA_UPG_OVERRIDE_ADR_UNDEFINED'
                      ,p_level    => C_LEVEL_ERROR
                      ,p_module   => l_log_module);
        END IF;
      END IF;
   END IF;
   --
   --
   ------------------------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- NOTE: XLA_AE_LINES_PKG.ValidateCurrentLine should NOT be generated if business flow method is
   -- Prior Entry.  Currently, the following code is always generated.
   ------------------------------------------------------------------------------------------------
   XLA_AE_LINES_PKG.ValidateCurrentLine;

   ------------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- Populated credit and debit amounts -- Need to generate this within IF <condition>
   ------------------------------------------------------------------------------------
   XLA_AE_LINES_PKG.SetDebitCreditAmounts;

   ----------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- Update journal entry status -- Need to generate this within IF <condition>
   ----------------------------------------------------------------------------------
   XLA_AE_JOURNAL_ENTRY_PKG.UpdateJournalEntryStatus
         (p_hdr_idx => g_array_event(p_event_id).array_value_num('header_index')
         ,p_balance_type_code => l_balance_type_code
         );

   -------------------------------------------------------------------------------------------
   -- 4262811 - Generate the Accrual Reversal lines
   -------------------------------------------------------------------------------------------
   BEGIN
      l_acc_rev_flag := XLA_AE_HEADER_PKG.g_rec_header_new.array_accrual_reversal_flag
                              (g_array_event(p_event_id).array_value_num('header_index'));
      IF l_acc_rev_flag IS NULL THEN
         l_acc_rev_flag := 'N';
      END IF;
   EXCEPTION
      WHEN OTHERS THEN
         l_acc_rev_flag := 'N';
   END;
   --
   IF (l_acc_rev_flag = 'Y') THEN

       -- 4645092  ------------------------------------------------------------------------------
       -- To allow MPA report to determine if it should generate report process
       XLA_ACCOUNTING_PKG.g_mpa_accrual_exists := 'Y';
       ------------------------------------------------------------------------------------------

       l_accrual_line_num := XLA_AE_LINES_PKG.g_LineNumber;
       XLA_AE_LINES_PKG.CopyLineInfo(l_accrual_line_num);
   -- added call to set_ccid to execute mapping  for secondary accrual reversal entries bug 7444204
   -- call ADRs
   -- Bug 4922099
   --
   IF ( (l_bflow_method_code <> 'PRIOR_ENTRY') OR
        (NVL(l_actual_upg_option, 'N') = 'O') OR
        (NVL(l_enc_upg_option, 'N') = 'O')
      )
   THEN
   NULL;
   --
   --
   
  l_ccid := AcctDerRule_7(
           p_application_id           => p_application_id
         , p_ae_header_id             => l_ae_header_id 
, p_source_11 => p_source_11
         , x_transaction_coa_id       => l_adr_transaction_coa_id
         , x_accounting_coa_id        => l_adr_accounting_coa_id
         , x_value_type_code          => l_adr_value_type_code
         , p_side                     => 'NA'
   );

   xla_ae_lines_pkg.set_ccid(
    p_code_combination_id          => l_ccid
  , p_value_type_code              => l_adr_value_type_code
  , p_transaction_coa_id           => l_adr_transaction_coa_id
  , p_accounting_coa_id            => l_adr_accounting_coa_id
  , p_adr_code                     => 'AP_INVOICE_DIST'
  , p_adr_type_code                => 'S'
  , p_component_type               => l_component_type
  , p_component_code               => l_component_code
  , p_component_type_code          => l_component_type_code
  , p_component_appl_id            => l_component_appl_id
  , p_amb_context_code             => l_amb_context_code
  , p_side                         => 'NA'
  );


   --
   --
   END IF;

       --
       -- Update the line information that should be overwritten
       --
       XLA_AE_LINES_PKG.set_ae_header_id(p_ae_header_id => p_event_id ,
                                         p_header_num   => 1);
       XLA_AE_LINES_PKG.g_rec_lines.array_header_num(XLA_AE_LINES_PKG.g_LineNumber)  :=1;

       XLA_AE_LINES_PKG.g_rec_lines.array_business_class_code(XLA_AE_LINES_PKG.g_LineNumber) := NULL; -- 4669271

       IF l_bflow_method_code <> 'NONE' THEN  -- 4655713b
          XLA_AE_LINES_PKG.g_rec_lines.array_reversal_code(XLA_AE_LINES_PKG.g_LineNumber) := CONCAT('MPA_',l_bflow_method_code);
       END IF;

      --
      -- Depending on the Reversal Method setup, do a switch side or changes sign for the amounts
      --
      IF (XLA_AE_JOURNAL_ENTRY_PKG.g_cache_ledgers_info.ledger_reversal_option = 'SIDE') THEN
          XLA_AE_LINES_PKG.g_rec_lines.array_natural_side_code(XLA_AE_LINES_PKG.g_LineNumber) :=  l_acc_rev_natural_side_code;
      ELSE
          ---------------------------------------------------------------------------------------------------
          -- 4262811a Switch Sign
          ---------------------------------------------------------------------------------------------------
          XLA_AE_LINES_PKG.g_rec_lines.array_switch_side_flag(XLA_AE_LINES_PKG.g_LineNumber) := 'N';  -- 5052518
          XLA_AE_LINES_PKG.g_rec_lines.array_ledger_amount(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_ledger_amount(XLA_AE_LINES_PKG.g_LineNumber) * -1;
          XLA_AE_LINES_PKG.g_rec_lines.array_entered_amount(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_entered_amount(XLA_AE_LINES_PKG.g_LineNumber) * -1;
          -- 5132302
          XLA_AE_LINES_PKG.g_rec_lines.array_bflow_applied_to_amt(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_bflow_applied_to_amt(XLA_AE_LINES_PKG.g_LineNumber) * -1;

      END IF;

      -- 4955764
      XLA_AE_LINES_PKG.g_rec_lines.array_gl_date(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_HEADER_PKG.g_rec_header_new.array_gl_date(g_array_event(p_event_id).array_value_num('acc_rev_header_index'));


      XLA_AE_LINES_PKG.ValidateCurrentLine;
      XLA_AE_LINES_PKG.SetDebitCreditAmounts;

      XLA_AE_JOURNAL_ENTRY_PKG.UpdateJournalEntryStatus
               (p_hdr_idx           => g_array_event(p_event_id).array_value_num('acc_rev_header_index')
               ,p_balance_type_code => l_balance_type_code);

   END IF;

   -----------------------------------------------------------------------------------------
   -- 4262811 Multiperiod Accounting
   -----------------------------------------------------------------------------------------
     -- No MPA option is assigned.


END IF;
END IF;
--

--
IF (C_LEVEL_PROCEDURE >= g_log_level) THEN
   trace
      (p_msg      => 'END of AcctLineType_38'
      ,p_level    => C_LEVEL_PROCEDURE
      ,p_module   => l_log_module);
END IF;
--
EXCEPTION
  WHEN xla_exceptions_pkg.application_exception THEN
      RAISE;
  WHEN OTHERS THEN
       xla_exceptions_pkg.raise_message
           (p_location => 'XLA_00200_AAD_S_000010_BC_PKG.AcctLineType_38');
END AcctLineType_38;
--

---------------------------------------
--
-- PRIVATE FUNCTION
--         AcctLineType_39
--
---------------------------------------
PROCEDURE AcctLineType_39 (
  p_application_id        IN NUMBER
 ,p_event_id              IN NUMBER
 ,p_calculate_acctd_flag  IN VARCHAR2
 ,p_calculate_g_l_flag    IN VARCHAR2
 ,p_actual_flag           IN OUT VARCHAR2
 ,p_balance_type_code     OUT VARCHAR2
 ,p_gain_or_loss_ref      OUT VARCHAR2
 
--Invoice Distribution Description
 , p_source_1            IN VARCHAR2
--Invoice Distribution Account
 , p_source_11            IN NUMBER
--Invoice Distribution Type
 , p_source_15            IN VARCHAR2
 , p_source_15_meaning    IN VARCHAR2
--Purchasing Encumbrance Option
 , p_source_17            IN VARCHAR2
 , p_source_17_meaning    IN VARCHAR2
--Accrue on Receipt Option
 , p_source_18            IN VARCHAR2
 , p_source_18_meaning    IN VARCHAR2
--Accounting Reversal Indicator
 , p_source_19            IN VARCHAR2
--Distribution Link Type
 , p_source_21            IN VARCHAR2
--Allocation to Main Distribution Identifier
 , p_source_23            IN NUMBER
--Invoice Identifier
 , p_source_24            IN NUMBER
--Business Flow Accounts Payable Application Identifier
 , p_source_25            IN NUMBER
--Business Flow Invoice Distribution Type
 , p_source_26            IN VARCHAR2
--Business Flow Invoice Entity Code
 , p_source_27            IN VARCHAR2
--Business Flow Invoice Distribution Identifier
 , p_source_28            IN NUMBER
--Business Flow Invoice Identifier
 , p_source_29            IN NUMBER
--Invoice Distribution Identifier
 , p_source_30            IN NUMBER
--Payables Encumbrance Upgrade Credit Account
 , p_source_31            IN NUMBER
--Payables Encumbrance Upgrade Credit Amount
 , p_source_32            IN NUMBER
--Invoice Currency Code
 , p_source_33            IN VARCHAR2
--Payables Encumbrance Upgrade Credit Base Amount
 , p_source_34            IN NUMBER
--Payables Encumbrance Upgrade Debit Account
 , p_source_35            IN NUMBER
--Payables Encumbrance Upgrade Debit Amount
 , p_source_36            IN NUMBER
--Payables Encumbrance Upgrade Debit Base Amount
 , p_source_37            IN NUMBER
--Payables Encumbrance Upgrade Option
 , p_source_38            IN VARCHAR2
--Invoice Exchange Date
 , p_source_39            IN DATE
--Invoice Exchange Rate
 , p_source_40            IN NUMBER
--Invoice Exchange Rate Type
 , p_source_41            IN VARCHAR2
--Deferred Accounting End Date
 , p_source_43            IN DATE
--Deferred Accounting Option
 , p_source_44            IN VARCHAR2
--Deferred Accounting Start Date
 , p_source_45            IN DATE
--Override Accounted Amount Indicator
 , p_source_46            IN VARCHAR2
 , p_source_46_meaning    IN VARCHAR2
--Invoice Supplier Identifier
 , p_source_47            IN NUMBER
--Invoice Supplier Site Identifier
 , p_source_48            IN NUMBER
--Third Party Type
 , p_source_49            IN VARCHAR2
--Parent Reversal Identifier
 , p_source_50            IN NUMBER
--Invoice Distribution Statistical Amount
 , p_source_51            IN NUMBER
--Invoice Distribution Tax Line Identifier
 , p_source_52            IN NUMBER
--Invoice Distribution Tax Distribution Identifier from Tax
 , p_source_53            IN NUMBER
--Invoice Distribution Summary Tax Line Identifier
 , p_source_54            IN NUMBER
--Payables Upgrade Credit Encumbrance Type Identifier
 , p_source_55            IN NUMBER
--Payables Upgrade Debit Encumbrance Type Identifier
 , p_source_56            IN NUMBER
--Invoice Distribution Amount
 , p_source_57            IN NUMBER
--Invoice Distribution Encumbrance Amount
 , p_source_65            IN NUMBER
--Invoice Distribution Encumbrance Ledger Amount
 , p_source_66            IN NUMBER
--Invoice Type
 , p_source_68            IN VARCHAR2
 , p_source_68_meaning    IN VARCHAR2
)
IS

l_component_type              VARCHAR2(80);
l_component_code              VARCHAR2(30);
l_component_type_code         VARCHAR2(1);
l_component_appl_id           INTEGER;
l_amb_context_code            VARCHAR2(30);
l_entity_code                 VARCHAR2(30);
l_event_class_code            VARCHAR2(30);
l_ae_header_id                NUMBER;
l_event_type_code             VARCHAR2(30);
l_line_definition_code        VARCHAR2(30);
l_line_definition_owner_code  VARCHAR2(1);
--
-- adr variables
l_segment                     VARCHAR2(30);
l_ccid                        NUMBER;
l_adr_transaction_coa_id      NUMBER;
l_adr_accounting_coa_id       NUMBER;
l_adr_flexfield_segment_code  VARCHAR2(30);
l_adr_flex_value_set_id       NUMBER;
l_adr_value_type_code         VARCHAR2(30);
l_adr_value_combination_id    NUMBER;
l_adr_value_segment_code      VARCHAR2(30);

l_bflow_method_code           VARCHAR2(30);  -- 4219869 Business Flow
l_bflow_class_code            VARCHAR2(30);  -- 4219869 Business Flow
l_inherit_desc_flag           VARCHAR2(1);   -- 4219869 Business Flow
l_budgetary_control_flag      VARCHAR2(1);   -- 4458381 Public Sector Enh

-- 4262811 Variables ------------------------------------------------------------------------------------------
l_entered_amt_idx             NUMBER;
l_accted_amt_idx              NUMBER;
l_acc_rev_flag                VARCHAR2(1);
l_accrual_line_num            NUMBER;
l_tmp_amt                     NUMBER;
l_acc_rev_natural_side_code   VARCHAR2(1);

l_num_entries                 NUMBER;
l_gl_dates                    xla_ae_journal_entry_pkg.t_array_date;
l_accted_amts                 xla_ae_journal_entry_pkg.t_array_num;
l_entered_amts                xla_ae_journal_entry_pkg.t_array_num;
l_period_names                xla_ae_journal_entry_pkg.t_array_V15L;
l_recog_line_1                NUMBER;
l_recog_line_2                NUMBER;

l_bflow_applied_to_amt_idx    NUMBER;                                -- 5132302
l_bflow_applied_to_amt        NUMBER;                                -- 5132302
l_bflow_applied_to_amts       xla_ae_journal_entry_pkg.t_array_num;  -- 5132302

l_event_id                    NUMBER;  -- To handle MPA header Description: xla_ae_header_pkg.SetHdrDescription

--l_rounding_ccy                VARCHAR2(15); -- To handle MPA rounding  4262811b
l_same_currency               BOOLEAN;        -- To handle MPA rounding  4262811b

---------------------------------------------------------------------------------------------------------------


--
-- bulk performance
--
l_balance_type_code           VARCHAR2(1);
l_rec_acct_attrs              XLA_AE_LINES_PKG.t_rec_acct_attrs;
l_log_module                  VARCHAR2(240);

--
-- Upgrade strategy
--
l_actual_upg_option           VARCHAR2(1);
l_enc_upg_option           VARCHAR2(1);

--
BEGIN
--
IF g_log_enabled THEN
      l_log_module := C_DEFAULT_MODULE||'.AcctLineType_39';
END IF;
--
IF (C_LEVEL_PROCEDURE >= g_log_level) THEN

      trace
         (p_msg      => 'BEGIN of AcctLineType_39'
         ,p_level    => C_LEVEL_PROCEDURE
         ,p_module   => l_log_module);

END IF;
--
l_component_type             := 'AMB_JLT';
l_component_code             := 'AP_ITEM_EXPENSE_INV_ENC_DR';
l_component_type_code        := 'S';
l_component_appl_id          :=  200;
l_amb_context_code           := 'DEFAULT';
l_entity_code                := 'AP_INVOICES';
l_event_class_code           := 'INVOICES';
l_event_type_code            := 'INVOICES_ALL';
l_line_definition_owner_code := 'S';
l_line_definition_code       := 'ENC_INVOICES_ALL';
--
l_balance_type_code          := 'E';
l_segment                     := NULL;
l_ccid                        := NULL;
l_adr_transaction_coa_id      := NULL;
l_adr_accounting_coa_id       := NULL;
l_adr_flexfield_segment_code  := NULL;
l_adr_flex_value_set_id       := NULL;
l_adr_value_type_code         := NULL;
l_adr_value_combination_id    := NULL;
l_adr_value_segment_code      := NULL;

l_bflow_method_code          := 'NONE';   -- 4219869 Business Flow
l_bflow_class_code           := 'AP_INV_ENCUM';    -- 4219869 Business Flow
l_inherit_desc_flag          := 'N';   -- 4219869 Business Flow
l_budgetary_control_flag     := 'Y';

l_bflow_applied_to_amt_idx   := NULL; -- 5132302
l_bflow_applied_to_amt       := NULL; -- 5132302
l_entered_amt_idx            := NULL;          -- 4262811
l_accted_amt_idx             := NULL;          -- 4262811
l_acc_rev_flag               := NULL;          -- 4262811
l_accrual_line_num           := NULL;          -- 4262811
l_tmp_amt                    := NULL;          -- 4262811
--
 
IF XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id = XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.ledger_id OR
    l_balance_type_code <> 'B' THEN
IF (NVL(p_source_68,'
') =  'STANDARD' OR 
NVL(p_source_68,'
') =  'MIXED' OR 
NVL(p_source_68,'
') =  'AWT' OR 
NVL(p_source_68,'
') =  'EXPENSE REPORT') AND 
NVL(p_source_15,'
') =  'ITEM' AND 
NVL(p_source_18,'
') <>  'Y' AND 
NVL(p_source_17,'
') =  'Y'
 THEN 

   --
   XLA_AE_LINES_PKG.SetNewLine;

   p_balance_type_code          := l_balance_type_code;
   -- set the flag so later we will know whether the gain loss line needs to be created
   
   IF(l_balance_type_code = 'A' and p_actual_flag is null) THEN
     p_actual_flag :='A';
   END IF;

   --
   -- bulk performance
   --
   XLA_AE_LINES_PKG.set_ae_header_id (p_ae_header_id => p_event_id ,
                                      p_header_num   => 0); -- 4262811
   --
   -- set accounting line options
   --
   l_ae_header_id:= xla_ae_lines_pkg.SetAcctLineOption(
           p_natural_side_code          => 'D'
         , p_gain_or_loss_flag          => 'N'
         , p_gl_transfer_mode_code      => 'S'
         , p_acct_entry_type_code       => 'E'
         , p_switch_side_flag           => 'Y'
         , p_merge_duplicate_code       => 'N'
         );
   --
   l_acc_rev_natural_side_code := 'C';  -- 4262811
   -- 
   --
   -- set accounting line type info
   --
   xla_ae_lines_pkg.SetAcctLineType
      (p_component_type             => l_component_type
      ,p_event_type_code            => l_event_type_code
      ,p_line_definition_owner_code => l_line_definition_owner_code
      ,p_line_definition_code       => l_line_definition_code
      ,p_accounting_line_code       => l_component_code
      ,p_accounting_line_type_code  => l_component_type_code
      ,p_accounting_line_appl_id    => l_component_appl_id
      ,p_amb_context_code           => l_amb_context_code
      ,p_entity_code                => l_entity_code
      ,p_event_class_code           => l_event_class_code);
   --
   -- set accounting class
   --
   xla_ae_lines_pkg.SetAcctClass(
           p_accounting_class_code  => 'ITEM EXPENSE'
         , p_ae_header_id           => l_ae_header_id
         );

   --
   -- set rounding class
   --
   XLA_AE_LINES_PKG.g_rec_lines.array_rounding_class(XLA_AE_LINES_PKG.g_LineNumber) :=
                      'ITEM EXPENSE';

   --
   xla_ae_lines_pkg.g_rec_lines.array_calculate_acctd_flag(xla_ae_lines_pkg.g_LineNumber) := p_calculate_acctd_flag;
   xla_ae_lines_pkg.g_rec_lines.array_calculate_g_l_flag(xla_ae_lines_pkg.g_LineNumber) := p_calculate_g_l_flag;
   --
   -- bulk performance
   --
   XLA_AE_LINES_PKG.g_rec_lines.array_balance_type_code(XLA_AE_LINES_PKG.g_LineNumber) := l_balance_type_code;

   XLA_AE_LINES_PKG.g_rec_lines.array_ledger_id(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id;

   -- 4955764
   XLA_AE_LINES_PKG.g_rec_lines.array_gl_date(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_HEADER_PKG.g_rec_header_new.array_gl_date(g_array_event(p_event_id).array_value_num('header_index'));

   -- 4458381 Public Sector Enh
      XLA_AE_LINES_PKG.g_rec_lines.array_encumbrance_type_id(XLA_AE_LINES_PKG.g_LineNumber) := 1060;
   --
   -- set accounting attributes for the line type
   --
   l_entered_amt_idx := 24;
   l_accted_amt_idx  := 29;
   l_bflow_applied_to_amt_idx  := 7;  -- 5132302
   l_rec_acct_attrs.array_acct_attr_code(1) := 'ACCOUNTING_REVERSAL_OPTION';
   l_rec_acct_attrs.array_char_value(1)  := p_source_19;
   l_rec_acct_attrs.array_acct_attr_code(2) := 'ALLOC_TO_APPLICATION_ID';
   l_rec_acct_attrs.array_num_value(2)  := 
xla_ae_sources_pkg.GetSystemSourceNum(
   p_source_code           => 'XLA_EVENT_APPL_ID'
 , p_source_type_code      => 'Y'
 , p_source_application_id =>  602
);
   l_rec_acct_attrs.array_acct_attr_code(3) := 'ALLOC_TO_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(3)  := p_source_21;
   l_rec_acct_attrs.array_acct_attr_code(4) := 'ALLOC_TO_ENTITY_CODE';
   l_rec_acct_attrs.array_char_value(4)  := 
xla_ae_sources_pkg.GetSystemSourceChar(
   p_source_code           => 'XLA_ENTITY_CODE'
 , p_source_type_code      => 'Y'
 , p_source_application_id =>  602
);
   l_rec_acct_attrs.array_acct_attr_code(5) := 'ALLOC_TO_FIRST_DIST_ID';
   l_rec_acct_attrs.array_num_value(5)  :=  to_char(p_source_23);
   l_rec_acct_attrs.array_acct_attr_code(6) := 'ALLOC_TO_FIRST_SYS_TRAN_ID';
   l_rec_acct_attrs.array_num_value(6)  :=  to_char(p_source_24);
   l_rec_acct_attrs.array_acct_attr_code(7) := 'APPLIED_TO_AMOUNT';
   l_rec_acct_attrs.array_num_value(7)  := p_source_57;
   l_rec_acct_attrs.array_acct_attr_code(8) := 'APPLIED_TO_APPLICATION_ID';
   l_rec_acct_attrs.array_num_value(8)  := p_source_25;
   l_rec_acct_attrs.array_acct_attr_code(9) := 'APPLIED_TO_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(9)  := p_source_26;
   l_rec_acct_attrs.array_acct_attr_code(10) := 'APPLIED_TO_ENTITY_CODE';
   l_rec_acct_attrs.array_char_value(10)  := p_source_27;
   l_rec_acct_attrs.array_acct_attr_code(11) := 'APPLIED_TO_FIRST_DIST_ID';
   l_rec_acct_attrs.array_num_value(11)  :=  to_char(p_source_28);
   l_rec_acct_attrs.array_acct_attr_code(12) := 'APPLIED_TO_FIRST_SYS_TRAN_ID';
   l_rec_acct_attrs.array_num_value(12)  :=  to_char(p_source_29);
   l_rec_acct_attrs.array_acct_attr_code(13) := 'DISTRIBUTION_IDENTIFIER_1';
   l_rec_acct_attrs.array_num_value(13)  :=  to_char(p_source_30);
   l_rec_acct_attrs.array_acct_attr_code(14) := 'DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(14)  := p_source_21;
   l_rec_acct_attrs.array_acct_attr_code(15) := 'ENC_UPG_CR_CCID';
   l_rec_acct_attrs.array_num_value(15)  := p_source_31;
   l_rec_acct_attrs.array_acct_attr_code(16) := 'ENC_UPG_CR_ENTERED_AMT';
   l_rec_acct_attrs.array_num_value(16)  := p_source_32;
   l_rec_acct_attrs.array_acct_attr_code(17) := 'ENC_UPG_CR_ENTERED_CURR';
   l_rec_acct_attrs.array_char_value(17)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(18) := 'ENC_UPG_CR_LEDGER_AMT';
   l_rec_acct_attrs.array_num_value(18)  := p_source_34;
   l_rec_acct_attrs.array_acct_attr_code(19) := 'ENC_UPG_DR_CCID';
   l_rec_acct_attrs.array_num_value(19)  := p_source_35;
   l_rec_acct_attrs.array_acct_attr_code(20) := 'ENC_UPG_DR_ENTERED_AMT';
   l_rec_acct_attrs.array_num_value(20)  := p_source_36;
   l_rec_acct_attrs.array_acct_attr_code(21) := 'ENC_UPG_DR_ENTERED_CURR';
   l_rec_acct_attrs.array_char_value(21)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(22) := 'ENC_UPG_DR_LEDGER_AMT';
   l_rec_acct_attrs.array_num_value(22)  := p_source_37;
   l_rec_acct_attrs.array_acct_attr_code(23) := 'ENC_UPG_OPTION';
   l_rec_acct_attrs.array_char_value(23)  := p_source_38;
   l_rec_acct_attrs.array_acct_attr_code(24) := 'ENTERED_CURRENCY_AMOUNT';
   l_rec_acct_attrs.array_num_value(24)  := p_source_65;
   l_rec_acct_attrs.array_acct_attr_code(25) := 'ENTERED_CURRENCY_CODE';
   l_rec_acct_attrs.array_char_value(25)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(26) := 'EXCHANGE_DATE';
   l_rec_acct_attrs.array_date_value(26)  := p_source_39;
   l_rec_acct_attrs.array_acct_attr_code(27) := 'EXCHANGE_RATE';
   l_rec_acct_attrs.array_num_value(27)  := p_source_40;
   l_rec_acct_attrs.array_acct_attr_code(28) := 'EXCHANGE_RATE_TYPE';
   l_rec_acct_attrs.array_char_value(28)  := p_source_41;
   l_rec_acct_attrs.array_acct_attr_code(29) := 'LEDGER_AMOUNT';
   l_rec_acct_attrs.array_num_value(29)  := p_source_66;
   l_rec_acct_attrs.array_acct_attr_code(30) := 'MULTIPERIOD_END_DATE';
   l_rec_acct_attrs.array_date_value(30)  := p_source_43;
   l_rec_acct_attrs.array_acct_attr_code(31) := 'MULTIPERIOD_OPTION';
   l_rec_acct_attrs.array_char_value(31)  := p_source_44;
   l_rec_acct_attrs.array_acct_attr_code(32) := 'MULTIPERIOD_START_DATE';
   l_rec_acct_attrs.array_date_value(32)  := p_source_45;
   l_rec_acct_attrs.array_acct_attr_code(33) := 'OVERRIDE_ACCTD_AMT_FLAG';
   l_rec_acct_attrs.array_char_value(33)  := p_source_46;
   l_rec_acct_attrs.array_acct_attr_code(34) := 'PARTY_ID';
   l_rec_acct_attrs.array_num_value(34)  := p_source_47;
   l_rec_acct_attrs.array_acct_attr_code(35) := 'PARTY_SITE_ID';
   l_rec_acct_attrs.array_num_value(35)  := p_source_48;
   l_rec_acct_attrs.array_acct_attr_code(36) := 'PARTY_TYPE';
   l_rec_acct_attrs.array_char_value(36)  := p_source_49;
   l_rec_acct_attrs.array_acct_attr_code(37) := 'REVERSED_DISTRIBUTION_ID1';
   l_rec_acct_attrs.array_num_value(37)  :=  to_char(p_source_50);
   l_rec_acct_attrs.array_acct_attr_code(38) := 'REVERSED_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(38)  := p_source_21;
   l_rec_acct_attrs.array_acct_attr_code(39) := 'STATISTICAL_AMOUNT';
   l_rec_acct_attrs.array_num_value(39)  := p_source_51;
   l_rec_acct_attrs.array_acct_attr_code(40) := 'TAX_LINE_REF_ID';
   l_rec_acct_attrs.array_num_value(40)  := p_source_52;
   l_rec_acct_attrs.array_acct_attr_code(41) := 'TAX_REC_NREC_DIST_REF_ID';
   l_rec_acct_attrs.array_num_value(41)  := p_source_53;
   l_rec_acct_attrs.array_acct_attr_code(42) := 'TAX_SUMMARY_LINE_REF_ID';
   l_rec_acct_attrs.array_num_value(42)  := p_source_54;
   l_rec_acct_attrs.array_acct_attr_code(43) := 'UPG_CR_ENC_TYPE_ID';
   l_rec_acct_attrs.array_num_value(43)  := p_source_55;
   l_rec_acct_attrs.array_acct_attr_code(44) := 'UPG_DR_ENC_TYPE_ID';
   l_rec_acct_attrs.array_num_value(44)  := p_source_56;

   XLA_AE_LINES_PKG.SetLineAcctAttrs(l_rec_acct_attrs);
   p_gain_or_loss_ref  := XLA_AE_LINES_PKG.g_rec_lines.array_gain_or_loss_ref(XLA_AE_LINES_PKG.g_LineNumber);

   ---------------------------------------------------------------------------------------------------------------
   -- 4336173 -- assign Business Flow Class (replace code in xla_ae_lines_pkg.Business_Flow_Validation)
   ---------------------------------------------------------------------------------------------------------------
   XLA_AE_LINES_PKG.g_rec_lines.array_business_class_code(XLA_AE_LINES_PKG.g_LineNumber) := l_bflow_class_code;

   l_actual_upg_option  := XLA_AE_LINES_PKG.g_rec_lines.array_actual_upg_option(XLA_AE_LINES_PKG.g_LineNumber);
   l_enc_upg_option     := XLA_AE_LINES_PKG.g_rec_lines.array_enc_upg_option(XLA_AE_LINES_PKG.g_LineNumber);

   IF xla_accounting_cache_pkg.GetValueChar
         (p_source_code         => 'LEDGER_CATEGORY_CODE'
         ,p_target_ledger_id    => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id) IN ('PRIMARY','ALC')
   AND l_bflow_method_code = 'PRIOR_ENTRY'
--   AND (l_actual_upg_option = 'Y' OR l_enc_upg_option = 'Y') Bug 4922099
   AND ( (NVL(l_actual_upg_option, 'N') IN ('Y', 'O')) OR
         (NVL(l_enc_upg_option, 'N') IN ('Y', 'O'))
       )
   THEN
         xla_ae_lines_pkg.BflowUpgEntry
           (p_business_method_code    => l_bflow_method_code
           ,p_business_class_code     => l_bflow_class_code
           ,p_balance_type            => l_balance_type_code);
   ELSE
      NULL;
-- No business flow processing for business flow method of NONE.
   END IF;

   --
   -- call analytical criteria
   --
   
   --
   -- call description
   --
   
xla_ae_lines_pkg.SetLineDescription(
   p_ae_header_id => l_ae_header_id
  ,p_description  => Description_2 (
     p_application_id         => p_application_id
   , p_ae_header_id           => l_ae_header_id 
, p_source_1 => p_source_1
   )
);


   --
   -- call ADRs
   -- Bug 4922099
   --
   IF ( (l_bflow_method_code <> 'PRIOR_ENTRY') OR
        (NVL(l_actual_upg_option, 'N') = 'O') OR
        (NVL(l_enc_upg_option, 'N') = 'O')
      )
   THEN
   NULL;
   --
   --
   
  l_ccid := AcctDerRule_7(
           p_application_id           => p_application_id
         , p_ae_header_id             => l_ae_header_id 
, p_source_11 => p_source_11
         , x_transaction_coa_id       => l_adr_transaction_coa_id
         , x_accounting_coa_id        => l_adr_accounting_coa_id
         , x_value_type_code          => l_adr_value_type_code
         , p_side                     => 'NA'
   );

   xla_ae_lines_pkg.set_ccid(
    p_code_combination_id          => l_ccid
  , p_value_type_code              => l_adr_value_type_code
  , p_transaction_coa_id           => l_adr_transaction_coa_id
  , p_accounting_coa_id            => l_adr_accounting_coa_id
  , p_adr_code                     => 'AP_INVOICE_DIST'
  , p_adr_type_code                => 'S'
  , p_component_type               => l_component_type
  , p_component_code               => l_component_code
  , p_component_type_code          => l_component_type_code
  , p_component_appl_id            => l_component_appl_id
  , p_amb_context_code             => l_amb_context_code
  , p_side                         => 'NA'
  );


   --
   --
   END IF;
   --
   -- Bug 4922099
   IF ( ( (NVL(l_actual_upg_option, 'N') = 'O') OR
          (NVL(l_enc_upg_option, 'N') = 'O')
        ) AND
        (l_bflow_method_code = 'PRIOR_ENTRY')
      )
   THEN
      IF
      --
      1 = 2
      --
      THEN
      xla_accounting_err_pkg.build_message
                                    (p_appli_s_name            => 'XLA'
                                    ,p_msg_name                => 'XLA_UPG_OVERRIDE_ADR_UNDEFINED'
                                    ,p_token_1                 => 'LINE_NUMBER'
                                    ,p_value_1                 => XLA_AE_LINES_PKG.g_LineNumber
                                    ,p_token_2                 => 'LINE_TYPE_NAME'
                                    ,p_value_2                 => XLA_AE_SOURCES_PKG.GetComponentName (
                                                                             l_component_type
                                                                            ,l_component_code
                                                                            ,l_component_type_code
                                                                            ,l_component_appl_id
                                                                            ,l_amb_context_code
                                                                            ,l_entity_code
                                                                            ,l_event_class_code
                                                                           )
                                    ,p_token_3                 => 'OWNER'
                                    ,p_value_3                 => xla_lookups_pkg.get_meaning(
                                                                          p_lookup_type     => 'XLA_OWNER_TYPE'
                                                                          ,p_lookup_code    => l_component_type_code
                                                                         )
                                    ,p_token_4                 => 'PRODUCT_NAME'
                                    ,p_value_4                 => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.application_name
                                    ,p_entity_id               => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.entity_id
                                    ,p_event_id                => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.event_id
                                    ,p_ledger_id               => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id
                                    ,p_ae_header_id            =>  NULL
                                       );

        IF (C_LEVEL_ERROR>= g_log_level) THEN
                 trace
                      (p_msg      => 'ERROR: XLA_UPG_OVERRIDE_ADR_UNDEFINED'
                      ,p_level    => C_LEVEL_ERROR
                      ,p_module   => l_log_module);
        END IF;
      END IF;
   END IF;
   --
   --
   ------------------------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- NOTE: XLA_AE_LINES_PKG.ValidateCurrentLine should NOT be generated if business flow method is
   -- Prior Entry.  Currently, the following code is always generated.
   ------------------------------------------------------------------------------------------------
   XLA_AE_LINES_PKG.ValidateCurrentLine;

   ------------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- Populated credit and debit amounts -- Need to generate this within IF <condition>
   ------------------------------------------------------------------------------------
   XLA_AE_LINES_PKG.SetDebitCreditAmounts;

   ----------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- Update journal entry status -- Need to generate this within IF <condition>
   ----------------------------------------------------------------------------------
   XLA_AE_JOURNAL_ENTRY_PKG.UpdateJournalEntryStatus
         (p_hdr_idx => g_array_event(p_event_id).array_value_num('header_index')
         ,p_balance_type_code => l_balance_type_code
         );

   -------------------------------------------------------------------------------------------
   -- 4262811 - Generate the Accrual Reversal lines
   -------------------------------------------------------------------------------------------
   BEGIN
      l_acc_rev_flag := XLA_AE_HEADER_PKG.g_rec_header_new.array_accrual_reversal_flag
                              (g_array_event(p_event_id).array_value_num('header_index'));
      IF l_acc_rev_flag IS NULL THEN
         l_acc_rev_flag := 'N';
      END IF;
   EXCEPTION
      WHEN OTHERS THEN
         l_acc_rev_flag := 'N';
   END;
   --
   IF (l_acc_rev_flag = 'Y') THEN

       -- 4645092  ------------------------------------------------------------------------------
       -- To allow MPA report to determine if it should generate report process
       XLA_ACCOUNTING_PKG.g_mpa_accrual_exists := 'Y';
       ------------------------------------------------------------------------------------------

       l_accrual_line_num := XLA_AE_LINES_PKG.g_LineNumber;
       XLA_AE_LINES_PKG.CopyLineInfo(l_accrual_line_num);
   -- added call to set_ccid to execute mapping  for secondary accrual reversal entries bug 7444204
   -- call ADRs
   -- Bug 4922099
   --
   IF ( (l_bflow_method_code <> 'PRIOR_ENTRY') OR
        (NVL(l_actual_upg_option, 'N') = 'O') OR
        (NVL(l_enc_upg_option, 'N') = 'O')
      )
   THEN
   NULL;
   --
   --
   
  l_ccid := AcctDerRule_7(
           p_application_id           => p_application_id
         , p_ae_header_id             => l_ae_header_id 
, p_source_11 => p_source_11
         , x_transaction_coa_id       => l_adr_transaction_coa_id
         , x_accounting_coa_id        => l_adr_accounting_coa_id
         , x_value_type_code          => l_adr_value_type_code
         , p_side                     => 'NA'
   );

   xla_ae_lines_pkg.set_ccid(
    p_code_combination_id          => l_ccid
  , p_value_type_code              => l_adr_value_type_code
  , p_transaction_coa_id           => l_adr_transaction_coa_id
  , p_accounting_coa_id            => l_adr_accounting_coa_id
  , p_adr_code                     => 'AP_INVOICE_DIST'
  , p_adr_type_code                => 'S'
  , p_component_type               => l_component_type
  , p_component_code               => l_component_code
  , p_component_type_code          => l_component_type_code
  , p_component_appl_id            => l_component_appl_id
  , p_amb_context_code             => l_amb_context_code
  , p_side                         => 'NA'
  );


   --
   --
   END IF;

       --
       -- Update the line information that should be overwritten
       --
       XLA_AE_LINES_PKG.set_ae_header_id(p_ae_header_id => p_event_id ,
                                         p_header_num   => 1);
       XLA_AE_LINES_PKG.g_rec_lines.array_header_num(XLA_AE_LINES_PKG.g_LineNumber)  :=1;

       XLA_AE_LINES_PKG.g_rec_lines.array_business_class_code(XLA_AE_LINES_PKG.g_LineNumber) := NULL; -- 4669271

       IF l_bflow_method_code <> 'NONE' THEN  -- 4655713b
          XLA_AE_LINES_PKG.g_rec_lines.array_reversal_code(XLA_AE_LINES_PKG.g_LineNumber) := CONCAT('MPA_',l_bflow_method_code);
       END IF;

      --
      -- Depending on the Reversal Method setup, do a switch side or changes sign for the amounts
      --
      IF (XLA_AE_JOURNAL_ENTRY_PKG.g_cache_ledgers_info.ledger_reversal_option = 'SIDE') THEN
          XLA_AE_LINES_PKG.g_rec_lines.array_natural_side_code(XLA_AE_LINES_PKG.g_LineNumber) :=  l_acc_rev_natural_side_code;
      ELSE
          ---------------------------------------------------------------------------------------------------
          -- 4262811a Switch Sign
          ---------------------------------------------------------------------------------------------------
          XLA_AE_LINES_PKG.g_rec_lines.array_switch_side_flag(XLA_AE_LINES_PKG.g_LineNumber) := 'N';  -- 5052518
          XLA_AE_LINES_PKG.g_rec_lines.array_ledger_amount(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_ledger_amount(XLA_AE_LINES_PKG.g_LineNumber) * -1;
          XLA_AE_LINES_PKG.g_rec_lines.array_entered_amount(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_entered_amount(XLA_AE_LINES_PKG.g_LineNumber) * -1;
          -- 5132302
          XLA_AE_LINES_PKG.g_rec_lines.array_bflow_applied_to_amt(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_bflow_applied_to_amt(XLA_AE_LINES_PKG.g_LineNumber) * -1;

      END IF;

      -- 4955764
      XLA_AE_LINES_PKG.g_rec_lines.array_gl_date(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_HEADER_PKG.g_rec_header_new.array_gl_date(g_array_event(p_event_id).array_value_num('acc_rev_header_index'));


      XLA_AE_LINES_PKG.ValidateCurrentLine;
      XLA_AE_LINES_PKG.SetDebitCreditAmounts;

      XLA_AE_JOURNAL_ENTRY_PKG.UpdateJournalEntryStatus
               (p_hdr_idx           => g_array_event(p_event_id).array_value_num('acc_rev_header_index')
               ,p_balance_type_code => l_balance_type_code);

   END IF;

   -----------------------------------------------------------------------------------------
   -- 4262811 Multiperiod Accounting
   -----------------------------------------------------------------------------------------
     -- No MPA option is assigned.


END IF;
END IF;
--

--
IF (C_LEVEL_PROCEDURE >= g_log_level) THEN
   trace
      (p_msg      => 'END of AcctLineType_39'
      ,p_level    => C_LEVEL_PROCEDURE
      ,p_module   => l_log_module);
END IF;
--
EXCEPTION
  WHEN xla_exceptions_pkg.application_exception THEN
      RAISE;
  WHEN OTHERS THEN
       xla_exceptions_pkg.raise_message
           (p_location => 'XLA_00200_AAD_S_000010_BC_PKG.AcctLineType_39');
END AcctLineType_39;
--

---------------------------------------
--
-- PRIVATE FUNCTION
--         AcctLineType_40
--
---------------------------------------
PROCEDURE AcctLineType_40 (
  p_application_id        IN NUMBER
 ,p_event_id              IN NUMBER
 ,p_calculate_acctd_flag  IN VARCHAR2
 ,p_calculate_g_l_flag    IN VARCHAR2
 ,p_actual_flag           IN OUT VARCHAR2
 ,p_balance_type_code     OUT VARCHAR2
 ,p_gain_or_loss_ref      OUT VARCHAR2
 
--Invoice Distribution Description
 , p_source_1            IN VARCHAR2
--Invoice Distribution Account
 , p_source_11            IN NUMBER
--Invoice Distribution Type
 , p_source_15            IN VARCHAR2
 , p_source_15_meaning    IN VARCHAR2
--Purchasing Encumbrance Option
 , p_source_17            IN VARCHAR2
 , p_source_17_meaning    IN VARCHAR2
--Accrue on Receipt Option
 , p_source_18            IN VARCHAR2
 , p_source_18_meaning    IN VARCHAR2
--Accounting Reversal Indicator
 , p_source_19            IN VARCHAR2
--Distribution Link Type
 , p_source_21            IN VARCHAR2
--Allocation to Main Distribution Identifier
 , p_source_23            IN NUMBER
--Invoice Identifier
 , p_source_24            IN NUMBER
--Business Flow Accounts Payable Application Identifier
 , p_source_25            IN NUMBER
--Business Flow Invoice Distribution Type
 , p_source_26            IN VARCHAR2
--Business Flow Invoice Entity Code
 , p_source_27            IN VARCHAR2
--Business Flow Invoice Distribution Identifier
 , p_source_28            IN NUMBER
--Business Flow Invoice Identifier
 , p_source_29            IN NUMBER
--Invoice Distribution Identifier
 , p_source_30            IN NUMBER
--Payables Encumbrance Upgrade Credit Account
 , p_source_31            IN NUMBER
--Payables Encumbrance Upgrade Credit Amount
 , p_source_32            IN NUMBER
--Invoice Currency Code
 , p_source_33            IN VARCHAR2
--Payables Encumbrance Upgrade Credit Base Amount
 , p_source_34            IN NUMBER
--Payables Encumbrance Upgrade Debit Account
 , p_source_35            IN NUMBER
--Payables Encumbrance Upgrade Debit Amount
 , p_source_36            IN NUMBER
--Payables Encumbrance Upgrade Debit Base Amount
 , p_source_37            IN NUMBER
--Payables Encumbrance Upgrade Option
 , p_source_38            IN VARCHAR2
--Invoice Exchange Date
 , p_source_39            IN DATE
--Invoice Exchange Rate
 , p_source_40            IN NUMBER
--Invoice Exchange Rate Type
 , p_source_41            IN VARCHAR2
--Deferred Accounting End Date
 , p_source_43            IN DATE
--Deferred Accounting Option
 , p_source_44            IN VARCHAR2
--Deferred Accounting Start Date
 , p_source_45            IN DATE
--Override Accounted Amount Indicator
 , p_source_46            IN VARCHAR2
 , p_source_46_meaning    IN VARCHAR2
--Invoice Supplier Identifier
 , p_source_47            IN NUMBER
--Invoice Supplier Site Identifier
 , p_source_48            IN NUMBER
--Third Party Type
 , p_source_49            IN VARCHAR2
--Parent Reversal Identifier
 , p_source_50            IN NUMBER
--Invoice Distribution Statistical Amount
 , p_source_51            IN NUMBER
--Invoice Distribution Tax Line Identifier
 , p_source_52            IN NUMBER
--Invoice Distribution Tax Distribution Identifier from Tax
 , p_source_53            IN NUMBER
--Invoice Distribution Summary Tax Line Identifier
 , p_source_54            IN NUMBER
--Payables Upgrade Credit Encumbrance Type Identifier
 , p_source_55            IN NUMBER
--Payables Upgrade Debit Encumbrance Type Identifier
 , p_source_56            IN NUMBER
--Invoice Distribution Encumbrance Amount
 , p_source_65            IN NUMBER
--Invoice Distribution Encumbrance Ledger Amount
 , p_source_66            IN NUMBER
)
IS

l_component_type              VARCHAR2(80);
l_component_code              VARCHAR2(30);
l_component_type_code         VARCHAR2(1);
l_component_appl_id           INTEGER;
l_amb_context_code            VARCHAR2(30);
l_entity_code                 VARCHAR2(30);
l_event_class_code            VARCHAR2(30);
l_ae_header_id                NUMBER;
l_event_type_code             VARCHAR2(30);
l_line_definition_code        VARCHAR2(30);
l_line_definition_owner_code  VARCHAR2(1);
--
-- adr variables
l_segment                     VARCHAR2(30);
l_ccid                        NUMBER;
l_adr_transaction_coa_id      NUMBER;
l_adr_accounting_coa_id       NUMBER;
l_adr_flexfield_segment_code  VARCHAR2(30);
l_adr_flex_value_set_id       NUMBER;
l_adr_value_type_code         VARCHAR2(30);
l_adr_value_combination_id    NUMBER;
l_adr_value_segment_code      VARCHAR2(30);

l_bflow_method_code           VARCHAR2(30);  -- 4219869 Business Flow
l_bflow_class_code            VARCHAR2(30);  -- 4219869 Business Flow
l_inherit_desc_flag           VARCHAR2(1);   -- 4219869 Business Flow
l_budgetary_control_flag      VARCHAR2(1);   -- 4458381 Public Sector Enh

-- 4262811 Variables ------------------------------------------------------------------------------------------
l_entered_amt_idx             NUMBER;
l_accted_amt_idx              NUMBER;
l_acc_rev_flag                VARCHAR2(1);
l_accrual_line_num            NUMBER;
l_tmp_amt                     NUMBER;
l_acc_rev_natural_side_code   VARCHAR2(1);

l_num_entries                 NUMBER;
l_gl_dates                    xla_ae_journal_entry_pkg.t_array_date;
l_accted_amts                 xla_ae_journal_entry_pkg.t_array_num;
l_entered_amts                xla_ae_journal_entry_pkg.t_array_num;
l_period_names                xla_ae_journal_entry_pkg.t_array_V15L;
l_recog_line_1                NUMBER;
l_recog_line_2                NUMBER;

l_bflow_applied_to_amt_idx    NUMBER;                                -- 5132302
l_bflow_applied_to_amt        NUMBER;                                -- 5132302
l_bflow_applied_to_amts       xla_ae_journal_entry_pkg.t_array_num;  -- 5132302

l_event_id                    NUMBER;  -- To handle MPA header Description: xla_ae_header_pkg.SetHdrDescription

--l_rounding_ccy                VARCHAR2(15); -- To handle MPA rounding  4262811b
l_same_currency               BOOLEAN;        -- To handle MPA rounding  4262811b

---------------------------------------------------------------------------------------------------------------


--
-- bulk performance
--
l_balance_type_code           VARCHAR2(1);
l_rec_acct_attrs              XLA_AE_LINES_PKG.t_rec_acct_attrs;
l_log_module                  VARCHAR2(240);

--
-- Upgrade strategy
--
l_actual_upg_option           VARCHAR2(1);
l_enc_upg_option           VARCHAR2(1);

--
BEGIN
--
IF g_log_enabled THEN
      l_log_module := C_DEFAULT_MODULE||'.AcctLineType_40';
END IF;
--
IF (C_LEVEL_PROCEDURE >= g_log_level) THEN

      trace
         (p_msg      => 'BEGIN of AcctLineType_40'
         ,p_level    => C_LEVEL_PROCEDURE
         ,p_module   => l_log_module);

END IF;
--
l_component_type             := 'AMB_JLT';
l_component_code             := 'AP_ITEM_EXPENSE_PP_ENC_DR';
l_component_type_code        := 'S';
l_component_appl_id          :=  200;
l_amb_context_code           := 'DEFAULT';
l_entity_code                := 'AP_INVOICES';
l_event_class_code           := 'PREPAYMENTS';
l_event_type_code            := 'PREPAYMENTS_ALL';
l_line_definition_owner_code := 'S';
l_line_definition_code       := 'ENC_PREPAY_ALL';
--
l_balance_type_code          := 'E';
l_segment                     := NULL;
l_ccid                        := NULL;
l_adr_transaction_coa_id      := NULL;
l_adr_accounting_coa_id       := NULL;
l_adr_flexfield_segment_code  := NULL;
l_adr_flex_value_set_id       := NULL;
l_adr_value_type_code         := NULL;
l_adr_value_combination_id    := NULL;
l_adr_value_segment_code      := NULL;

l_bflow_method_code          := 'NONE';   -- 4219869 Business Flow
l_bflow_class_code           := 'AP_INV_ENCUM';    -- 4219869 Business Flow
l_inherit_desc_flag          := 'N';   -- 4219869 Business Flow
l_budgetary_control_flag     := 'Y';

l_bflow_applied_to_amt_idx   := NULL; -- 5132302
l_bflow_applied_to_amt       := NULL; -- 5132302
l_entered_amt_idx            := NULL;          -- 4262811
l_accted_amt_idx             := NULL;          -- 4262811
l_acc_rev_flag               := NULL;          -- 4262811
l_accrual_line_num           := NULL;          -- 4262811
l_tmp_amt                    := NULL;          -- 4262811
--
 
IF XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id = XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.ledger_id OR
    l_balance_type_code <> 'B' THEN
IF NVL(p_source_15,'
') =  'ITEM' AND 
NVL(p_source_18,'
') <>  'Y' AND 
NVL(p_source_17,'
') =  'Y'
 THEN 

   --
   XLA_AE_LINES_PKG.SetNewLine;

   p_balance_type_code          := l_balance_type_code;
   -- set the flag so later we will know whether the gain loss line needs to be created
   
   IF(l_balance_type_code = 'A' and p_actual_flag is null) THEN
     p_actual_flag :='A';
   END IF;

   --
   -- bulk performance
   --
   XLA_AE_LINES_PKG.set_ae_header_id (p_ae_header_id => p_event_id ,
                                      p_header_num   => 0); -- 4262811
   --
   -- set accounting line options
   --
   l_ae_header_id:= xla_ae_lines_pkg.SetAcctLineOption(
           p_natural_side_code          => 'D'
         , p_gain_or_loss_flag          => 'N'
         , p_gl_transfer_mode_code      => 'S'
         , p_acct_entry_type_code       => 'E'
         , p_switch_side_flag           => 'Y'
         , p_merge_duplicate_code       => 'N'
         );
   --
   l_acc_rev_natural_side_code := 'C';  -- 4262811
   -- 
   --
   -- set accounting line type info
   --
   xla_ae_lines_pkg.SetAcctLineType
      (p_component_type             => l_component_type
      ,p_event_type_code            => l_event_type_code
      ,p_line_definition_owner_code => l_line_definition_owner_code
      ,p_line_definition_code       => l_line_definition_code
      ,p_accounting_line_code       => l_component_code
      ,p_accounting_line_type_code  => l_component_type_code
      ,p_accounting_line_appl_id    => l_component_appl_id
      ,p_amb_context_code           => l_amb_context_code
      ,p_entity_code                => l_entity_code
      ,p_event_class_code           => l_event_class_code);
   --
   -- set accounting class
   --
   xla_ae_lines_pkg.SetAcctClass(
           p_accounting_class_code  => 'ITEM EXPENSE'
         , p_ae_header_id           => l_ae_header_id
         );

   --
   -- set rounding class
   --
   XLA_AE_LINES_PKG.g_rec_lines.array_rounding_class(XLA_AE_LINES_PKG.g_LineNumber) :=
                      'ITEM EXPENSE';

   --
   xla_ae_lines_pkg.g_rec_lines.array_calculate_acctd_flag(xla_ae_lines_pkg.g_LineNumber) := p_calculate_acctd_flag;
   xla_ae_lines_pkg.g_rec_lines.array_calculate_g_l_flag(xla_ae_lines_pkg.g_LineNumber) := p_calculate_g_l_flag;
   --
   -- bulk performance
   --
   XLA_AE_LINES_PKG.g_rec_lines.array_balance_type_code(XLA_AE_LINES_PKG.g_LineNumber) := l_balance_type_code;

   XLA_AE_LINES_PKG.g_rec_lines.array_ledger_id(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id;

   -- 4955764
   XLA_AE_LINES_PKG.g_rec_lines.array_gl_date(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_HEADER_PKG.g_rec_header_new.array_gl_date(g_array_event(p_event_id).array_value_num('header_index'));

   -- 4458381 Public Sector Enh
      XLA_AE_LINES_PKG.g_rec_lines.array_encumbrance_type_id(XLA_AE_LINES_PKG.g_LineNumber) := 1060;
   --
   -- set accounting attributes for the line type
   --
   l_entered_amt_idx := 23;
   l_accted_amt_idx  := 28;
   l_bflow_applied_to_amt_idx  := NULL;  -- 5132302
   l_rec_acct_attrs.array_acct_attr_code(1) := 'ACCOUNTING_REVERSAL_OPTION';
   l_rec_acct_attrs.array_char_value(1)  := p_source_19;
   l_rec_acct_attrs.array_acct_attr_code(2) := 'ALLOC_TO_APPLICATION_ID';
   l_rec_acct_attrs.array_num_value(2)  := 
xla_ae_sources_pkg.GetSystemSourceNum(
   p_source_code           => 'XLA_EVENT_APPL_ID'
 , p_source_type_code      => 'Y'
 , p_source_application_id =>  602
);
   l_rec_acct_attrs.array_acct_attr_code(3) := 'ALLOC_TO_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(3)  := p_source_21;
   l_rec_acct_attrs.array_acct_attr_code(4) := 'ALLOC_TO_ENTITY_CODE';
   l_rec_acct_attrs.array_char_value(4)  := 
xla_ae_sources_pkg.GetSystemSourceChar(
   p_source_code           => 'XLA_ENTITY_CODE'
 , p_source_type_code      => 'Y'
 , p_source_application_id =>  602
);
   l_rec_acct_attrs.array_acct_attr_code(5) := 'ALLOC_TO_FIRST_DIST_ID';
   l_rec_acct_attrs.array_num_value(5)  :=  to_char(p_source_23);
   l_rec_acct_attrs.array_acct_attr_code(6) := 'ALLOC_TO_FIRST_SYS_TRAN_ID';
   l_rec_acct_attrs.array_num_value(6)  :=  to_char(p_source_24);
   l_rec_acct_attrs.array_acct_attr_code(7) := 'APPLIED_TO_APPLICATION_ID';
   l_rec_acct_attrs.array_num_value(7)  := p_source_25;
   l_rec_acct_attrs.array_acct_attr_code(8) := 'APPLIED_TO_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(8)  := p_source_26;
   l_rec_acct_attrs.array_acct_attr_code(9) := 'APPLIED_TO_ENTITY_CODE';
   l_rec_acct_attrs.array_char_value(9)  := p_source_27;
   l_rec_acct_attrs.array_acct_attr_code(10) := 'APPLIED_TO_FIRST_DIST_ID';
   l_rec_acct_attrs.array_num_value(10)  :=  to_char(p_source_28);
   l_rec_acct_attrs.array_acct_attr_code(11) := 'APPLIED_TO_FIRST_SYS_TRAN_ID';
   l_rec_acct_attrs.array_num_value(11)  :=  to_char(p_source_29);
   l_rec_acct_attrs.array_acct_attr_code(12) := 'DISTRIBUTION_IDENTIFIER_1';
   l_rec_acct_attrs.array_num_value(12)  :=  to_char(p_source_30);
   l_rec_acct_attrs.array_acct_attr_code(13) := 'DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(13)  := p_source_21;
   l_rec_acct_attrs.array_acct_attr_code(14) := 'ENC_UPG_CR_CCID';
   l_rec_acct_attrs.array_num_value(14)  := p_source_31;
   l_rec_acct_attrs.array_acct_attr_code(15) := 'ENC_UPG_CR_ENTERED_AMT';
   l_rec_acct_attrs.array_num_value(15)  := p_source_32;
   l_rec_acct_attrs.array_acct_attr_code(16) := 'ENC_UPG_CR_ENTERED_CURR';
   l_rec_acct_attrs.array_char_value(16)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(17) := 'ENC_UPG_CR_LEDGER_AMT';
   l_rec_acct_attrs.array_num_value(17)  := p_source_34;
   l_rec_acct_attrs.array_acct_attr_code(18) := 'ENC_UPG_DR_CCID';
   l_rec_acct_attrs.array_num_value(18)  := p_source_35;
   l_rec_acct_attrs.array_acct_attr_code(19) := 'ENC_UPG_DR_ENTERED_AMT';
   l_rec_acct_attrs.array_num_value(19)  := p_source_36;
   l_rec_acct_attrs.array_acct_attr_code(20) := 'ENC_UPG_DR_ENTERED_CURR';
   l_rec_acct_attrs.array_char_value(20)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(21) := 'ENC_UPG_DR_LEDGER_AMT';
   l_rec_acct_attrs.array_num_value(21)  := p_source_37;
   l_rec_acct_attrs.array_acct_attr_code(22) := 'ENC_UPG_OPTION';
   l_rec_acct_attrs.array_char_value(22)  := p_source_38;
   l_rec_acct_attrs.array_acct_attr_code(23) := 'ENTERED_CURRENCY_AMOUNT';
   l_rec_acct_attrs.array_num_value(23)  := p_source_65;
   l_rec_acct_attrs.array_acct_attr_code(24) := 'ENTERED_CURRENCY_CODE';
   l_rec_acct_attrs.array_char_value(24)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(25) := 'EXCHANGE_DATE';
   l_rec_acct_attrs.array_date_value(25)  := p_source_39;
   l_rec_acct_attrs.array_acct_attr_code(26) := 'EXCHANGE_RATE';
   l_rec_acct_attrs.array_num_value(26)  := p_source_40;
   l_rec_acct_attrs.array_acct_attr_code(27) := 'EXCHANGE_RATE_TYPE';
   l_rec_acct_attrs.array_char_value(27)  := p_source_41;
   l_rec_acct_attrs.array_acct_attr_code(28) := 'LEDGER_AMOUNT';
   l_rec_acct_attrs.array_num_value(28)  := p_source_66;
   l_rec_acct_attrs.array_acct_attr_code(29) := 'MULTIPERIOD_END_DATE';
   l_rec_acct_attrs.array_date_value(29)  := p_source_43;
   l_rec_acct_attrs.array_acct_attr_code(30) := 'MULTIPERIOD_OPTION';
   l_rec_acct_attrs.array_char_value(30)  := p_source_44;
   l_rec_acct_attrs.array_acct_attr_code(31) := 'MULTIPERIOD_START_DATE';
   l_rec_acct_attrs.array_date_value(31)  := p_source_45;
   l_rec_acct_attrs.array_acct_attr_code(32) := 'OVERRIDE_ACCTD_AMT_FLAG';
   l_rec_acct_attrs.array_char_value(32)  := p_source_46;
   l_rec_acct_attrs.array_acct_attr_code(33) := 'PARTY_ID';
   l_rec_acct_attrs.array_num_value(33)  := p_source_47;
   l_rec_acct_attrs.array_acct_attr_code(34) := 'PARTY_SITE_ID';
   l_rec_acct_attrs.array_num_value(34)  := p_source_48;
   l_rec_acct_attrs.array_acct_attr_code(35) := 'PARTY_TYPE';
   l_rec_acct_attrs.array_char_value(35)  := p_source_49;
   l_rec_acct_attrs.array_acct_attr_code(36) := 'REVERSED_DISTRIBUTION_ID1';
   l_rec_acct_attrs.array_num_value(36)  :=  to_char(p_source_50);
   l_rec_acct_attrs.array_acct_attr_code(37) := 'REVERSED_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(37)  := p_source_21;
   l_rec_acct_attrs.array_acct_attr_code(38) := 'STATISTICAL_AMOUNT';
   l_rec_acct_attrs.array_num_value(38)  := p_source_51;
   l_rec_acct_attrs.array_acct_attr_code(39) := 'TAX_LINE_REF_ID';
   l_rec_acct_attrs.array_num_value(39)  := p_source_52;
   l_rec_acct_attrs.array_acct_attr_code(40) := 'TAX_REC_NREC_DIST_REF_ID';
   l_rec_acct_attrs.array_num_value(40)  := p_source_53;
   l_rec_acct_attrs.array_acct_attr_code(41) := 'TAX_SUMMARY_LINE_REF_ID';
   l_rec_acct_attrs.array_num_value(41)  := p_source_54;
   l_rec_acct_attrs.array_acct_attr_code(42) := 'UPG_CR_ENC_TYPE_ID';
   l_rec_acct_attrs.array_num_value(42)  := p_source_55;
   l_rec_acct_attrs.array_acct_attr_code(43) := 'UPG_DR_ENC_TYPE_ID';
   l_rec_acct_attrs.array_num_value(43)  := p_source_56;

   XLA_AE_LINES_PKG.SetLineAcctAttrs(l_rec_acct_attrs);
   p_gain_or_loss_ref  := XLA_AE_LINES_PKG.g_rec_lines.array_gain_or_loss_ref(XLA_AE_LINES_PKG.g_LineNumber);

   ---------------------------------------------------------------------------------------------------------------
   -- 4336173 -- assign Business Flow Class (replace code in xla_ae_lines_pkg.Business_Flow_Validation)
   ---------------------------------------------------------------------------------------------------------------
   XLA_AE_LINES_PKG.g_rec_lines.array_business_class_code(XLA_AE_LINES_PKG.g_LineNumber) := l_bflow_class_code;

   l_actual_upg_option  := XLA_AE_LINES_PKG.g_rec_lines.array_actual_upg_option(XLA_AE_LINES_PKG.g_LineNumber);
   l_enc_upg_option     := XLA_AE_LINES_PKG.g_rec_lines.array_enc_upg_option(XLA_AE_LINES_PKG.g_LineNumber);

   IF xla_accounting_cache_pkg.GetValueChar
         (p_source_code         => 'LEDGER_CATEGORY_CODE'
         ,p_target_ledger_id    => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id) IN ('PRIMARY','ALC')
   AND l_bflow_method_code = 'PRIOR_ENTRY'
--   AND (l_actual_upg_option = 'Y' OR l_enc_upg_option = 'Y') Bug 4922099
   AND ( (NVL(l_actual_upg_option, 'N') IN ('Y', 'O')) OR
         (NVL(l_enc_upg_option, 'N') IN ('Y', 'O'))
       )
   THEN
         xla_ae_lines_pkg.BflowUpgEntry
           (p_business_method_code    => l_bflow_method_code
           ,p_business_class_code     => l_bflow_class_code
           ,p_balance_type            => l_balance_type_code);
   ELSE
      NULL;
-- No business flow processing for business flow method of NONE.
   END IF;

   --
   -- call analytical criteria
   --
   
   --
   -- call description
   --
   
xla_ae_lines_pkg.SetLineDescription(
   p_ae_header_id => l_ae_header_id
  ,p_description  => Description_2 (
     p_application_id         => p_application_id
   , p_ae_header_id           => l_ae_header_id 
, p_source_1 => p_source_1
   )
);


   --
   -- call ADRs
   -- Bug 4922099
   --
   IF ( (l_bflow_method_code <> 'PRIOR_ENTRY') OR
        (NVL(l_actual_upg_option, 'N') = 'O') OR
        (NVL(l_enc_upg_option, 'N') = 'O')
      )
   THEN
   NULL;
   --
   --
   
  l_ccid := AcctDerRule_7(
           p_application_id           => p_application_id
         , p_ae_header_id             => l_ae_header_id 
, p_source_11 => p_source_11
         , x_transaction_coa_id       => l_adr_transaction_coa_id
         , x_accounting_coa_id        => l_adr_accounting_coa_id
         , x_value_type_code          => l_adr_value_type_code
         , p_side                     => 'NA'
   );

   xla_ae_lines_pkg.set_ccid(
    p_code_combination_id          => l_ccid
  , p_value_type_code              => l_adr_value_type_code
  , p_transaction_coa_id           => l_adr_transaction_coa_id
  , p_accounting_coa_id            => l_adr_accounting_coa_id
  , p_adr_code                     => 'AP_INVOICE_DIST'
  , p_adr_type_code                => 'S'
  , p_component_type               => l_component_type
  , p_component_code               => l_component_code
  , p_component_type_code          => l_component_type_code
  , p_component_appl_id            => l_component_appl_id
  , p_amb_context_code             => l_amb_context_code
  , p_side                         => 'NA'
  );


   --
   --
   END IF;
   --
   -- Bug 4922099
   IF ( ( (NVL(l_actual_upg_option, 'N') = 'O') OR
          (NVL(l_enc_upg_option, 'N') = 'O')
        ) AND
        (l_bflow_method_code = 'PRIOR_ENTRY')
      )
   THEN
      IF
      --
      1 = 2
      --
      THEN
      xla_accounting_err_pkg.build_message
                                    (p_appli_s_name            => 'XLA'
                                    ,p_msg_name                => 'XLA_UPG_OVERRIDE_ADR_UNDEFINED'
                                    ,p_token_1                 => 'LINE_NUMBER'
                                    ,p_value_1                 => XLA_AE_LINES_PKG.g_LineNumber
                                    ,p_token_2                 => 'LINE_TYPE_NAME'
                                    ,p_value_2                 => XLA_AE_SOURCES_PKG.GetComponentName (
                                                                             l_component_type
                                                                            ,l_component_code
                                                                            ,l_component_type_code
                                                                            ,l_component_appl_id
                                                                            ,l_amb_context_code
                                                                            ,l_entity_code
                                                                            ,l_event_class_code
                                                                           )
                                    ,p_token_3                 => 'OWNER'
                                    ,p_value_3                 => xla_lookups_pkg.get_meaning(
                                                                          p_lookup_type     => 'XLA_OWNER_TYPE'
                                                                          ,p_lookup_code    => l_component_type_code
                                                                         )
                                    ,p_token_4                 => 'PRODUCT_NAME'
                                    ,p_value_4                 => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.application_name
                                    ,p_entity_id               => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.entity_id
                                    ,p_event_id                => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.event_id
                                    ,p_ledger_id               => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id
                                    ,p_ae_header_id            =>  NULL
                                       );

        IF (C_LEVEL_ERROR>= g_log_level) THEN
                 trace
                      (p_msg      => 'ERROR: XLA_UPG_OVERRIDE_ADR_UNDEFINED'
                      ,p_level    => C_LEVEL_ERROR
                      ,p_module   => l_log_module);
        END IF;
      END IF;
   END IF;
   --
   --
   ------------------------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- NOTE: XLA_AE_LINES_PKG.ValidateCurrentLine should NOT be generated if business flow method is
   -- Prior Entry.  Currently, the following code is always generated.
   ------------------------------------------------------------------------------------------------
   XLA_AE_LINES_PKG.ValidateCurrentLine;

   ------------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- Populated credit and debit amounts -- Need to generate this within IF <condition>
   ------------------------------------------------------------------------------------
   XLA_AE_LINES_PKG.SetDebitCreditAmounts;

   ----------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- Update journal entry status -- Need to generate this within IF <condition>
   ----------------------------------------------------------------------------------
   XLA_AE_JOURNAL_ENTRY_PKG.UpdateJournalEntryStatus
         (p_hdr_idx => g_array_event(p_event_id).array_value_num('header_index')
         ,p_balance_type_code => l_balance_type_code
         );

   -------------------------------------------------------------------------------------------
   -- 4262811 - Generate the Accrual Reversal lines
   -------------------------------------------------------------------------------------------
   BEGIN
      l_acc_rev_flag := XLA_AE_HEADER_PKG.g_rec_header_new.array_accrual_reversal_flag
                              (g_array_event(p_event_id).array_value_num('header_index'));
      IF l_acc_rev_flag IS NULL THEN
         l_acc_rev_flag := 'N';
      END IF;
   EXCEPTION
      WHEN OTHERS THEN
         l_acc_rev_flag := 'N';
   END;
   --
   IF (l_acc_rev_flag = 'Y') THEN

       -- 4645092  ------------------------------------------------------------------------------
       -- To allow MPA report to determine if it should generate report process
       XLA_ACCOUNTING_PKG.g_mpa_accrual_exists := 'Y';
       ------------------------------------------------------------------------------------------

       l_accrual_line_num := XLA_AE_LINES_PKG.g_LineNumber;
       XLA_AE_LINES_PKG.CopyLineInfo(l_accrual_line_num);
   -- added call to set_ccid to execute mapping  for secondary accrual reversal entries bug 7444204
   -- call ADRs
   -- Bug 4922099
   --
   IF ( (l_bflow_method_code <> 'PRIOR_ENTRY') OR
        (NVL(l_actual_upg_option, 'N') = 'O') OR
        (NVL(l_enc_upg_option, 'N') = 'O')
      )
   THEN
   NULL;
   --
   --
   
  l_ccid := AcctDerRule_7(
           p_application_id           => p_application_id
         , p_ae_header_id             => l_ae_header_id 
, p_source_11 => p_source_11
         , x_transaction_coa_id       => l_adr_transaction_coa_id
         , x_accounting_coa_id        => l_adr_accounting_coa_id
         , x_value_type_code          => l_adr_value_type_code
         , p_side                     => 'NA'
   );

   xla_ae_lines_pkg.set_ccid(
    p_code_combination_id          => l_ccid
  , p_value_type_code              => l_adr_value_type_code
  , p_transaction_coa_id           => l_adr_transaction_coa_id
  , p_accounting_coa_id            => l_adr_accounting_coa_id
  , p_adr_code                     => 'AP_INVOICE_DIST'
  , p_adr_type_code                => 'S'
  , p_component_type               => l_component_type
  , p_component_code               => l_component_code
  , p_component_type_code          => l_component_type_code
  , p_component_appl_id            => l_component_appl_id
  , p_amb_context_code             => l_amb_context_code
  , p_side                         => 'NA'
  );


   --
   --
   END IF;

       --
       -- Update the line information that should be overwritten
       --
       XLA_AE_LINES_PKG.set_ae_header_id(p_ae_header_id => p_event_id ,
                                         p_header_num   => 1);
       XLA_AE_LINES_PKG.g_rec_lines.array_header_num(XLA_AE_LINES_PKG.g_LineNumber)  :=1;

       XLA_AE_LINES_PKG.g_rec_lines.array_business_class_code(XLA_AE_LINES_PKG.g_LineNumber) := NULL; -- 4669271

       IF l_bflow_method_code <> 'NONE' THEN  -- 4655713b
          XLA_AE_LINES_PKG.g_rec_lines.array_reversal_code(XLA_AE_LINES_PKG.g_LineNumber) := CONCAT('MPA_',l_bflow_method_code);
       END IF;

      --
      -- Depending on the Reversal Method setup, do a switch side or changes sign for the amounts
      --
      IF (XLA_AE_JOURNAL_ENTRY_PKG.g_cache_ledgers_info.ledger_reversal_option = 'SIDE') THEN
          XLA_AE_LINES_PKG.g_rec_lines.array_natural_side_code(XLA_AE_LINES_PKG.g_LineNumber) :=  l_acc_rev_natural_side_code;
      ELSE
          ---------------------------------------------------------------------------------------------------
          -- 4262811a Switch Sign
          ---------------------------------------------------------------------------------------------------
          XLA_AE_LINES_PKG.g_rec_lines.array_switch_side_flag(XLA_AE_LINES_PKG.g_LineNumber) := 'N';  -- 5052518
          XLA_AE_LINES_PKG.g_rec_lines.array_ledger_amount(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_ledger_amount(XLA_AE_LINES_PKG.g_LineNumber) * -1;
          XLA_AE_LINES_PKG.g_rec_lines.array_entered_amount(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_entered_amount(XLA_AE_LINES_PKG.g_LineNumber) * -1;
          -- 5132302
          XLA_AE_LINES_PKG.g_rec_lines.array_bflow_applied_to_amt(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_bflow_applied_to_amt(XLA_AE_LINES_PKG.g_LineNumber) * -1;

      END IF;

      -- 4955764
      XLA_AE_LINES_PKG.g_rec_lines.array_gl_date(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_HEADER_PKG.g_rec_header_new.array_gl_date(g_array_event(p_event_id).array_value_num('acc_rev_header_index'));


      XLA_AE_LINES_PKG.ValidateCurrentLine;
      XLA_AE_LINES_PKG.SetDebitCreditAmounts;

      XLA_AE_JOURNAL_ENTRY_PKG.UpdateJournalEntryStatus
               (p_hdr_idx           => g_array_event(p_event_id).array_value_num('acc_rev_header_index')
               ,p_balance_type_code => l_balance_type_code);

   END IF;

   -----------------------------------------------------------------------------------------
   -- 4262811 Multiperiod Accounting
   -----------------------------------------------------------------------------------------
     -- No MPA option is assigned.


END IF;
END IF;
--

--
IF (C_LEVEL_PROCEDURE >= g_log_level) THEN
   trace
      (p_msg      => 'END of AcctLineType_40'
      ,p_level    => C_LEVEL_PROCEDURE
      ,p_module   => l_log_module);
END IF;
--
EXCEPTION
  WHEN xla_exceptions_pkg.application_exception THEN
      RAISE;
  WHEN OTHERS THEN
       xla_exceptions_pkg.raise_message
           (p_location => 'XLA_00200_AAD_S_000010_BC_PKG.AcctLineType_40');
END AcctLineType_40;
--

---------------------------------------
--
-- PRIVATE FUNCTION
--         AcctLineType_41
--
---------------------------------------
PROCEDURE AcctLineType_41 (
  p_application_id        IN NUMBER
 ,p_event_id              IN NUMBER
 ,p_calculate_acctd_flag  IN VARCHAR2
 ,p_calculate_g_l_flag    IN VARCHAR2
 ,p_actual_flag           IN OUT VARCHAR2
 ,p_balance_type_code     OUT VARCHAR2
 ,p_gain_or_loss_ref      OUT VARCHAR2
 
--Invoice Distribution Description
 , p_source_1            IN VARCHAR2
--Invoice Distribution Account
 , p_source_11            IN NUMBER
--Invoice Distribution Type
 , p_source_15            IN VARCHAR2
 , p_source_15_meaning    IN VARCHAR2
--Purchasing Encumbrance Option
 , p_source_17            IN VARCHAR2
 , p_source_17_meaning    IN VARCHAR2
--Accounting Reversal Indicator
 , p_source_19            IN VARCHAR2
--Distribution Link Type
 , p_source_21            IN VARCHAR2
--Allocation to Main Distribution Identifier
 , p_source_23            IN NUMBER
--Invoice Identifier
 , p_source_24            IN NUMBER
--Business Flow Accounts Payable Application Identifier
 , p_source_25            IN NUMBER
--Business Flow Invoice Distribution Type
 , p_source_26            IN VARCHAR2
--Business Flow Invoice Entity Code
 , p_source_27            IN VARCHAR2
--Business Flow Invoice Distribution Identifier
 , p_source_28            IN NUMBER
--Business Flow Invoice Identifier
 , p_source_29            IN NUMBER
--Invoice Distribution Identifier
 , p_source_30            IN NUMBER
--Payables Encumbrance Upgrade Credit Account
 , p_source_31            IN NUMBER
--Payables Encumbrance Upgrade Credit Amount
 , p_source_32            IN NUMBER
--Invoice Currency Code
 , p_source_33            IN VARCHAR2
--Payables Encumbrance Upgrade Credit Base Amount
 , p_source_34            IN NUMBER
--Payables Encumbrance Upgrade Debit Account
 , p_source_35            IN NUMBER
--Payables Encumbrance Upgrade Debit Amount
 , p_source_36            IN NUMBER
--Payables Encumbrance Upgrade Debit Base Amount
 , p_source_37            IN NUMBER
--Payables Encumbrance Upgrade Option
 , p_source_38            IN VARCHAR2
--Invoice Exchange Date
 , p_source_39            IN DATE
--Invoice Exchange Rate
 , p_source_40            IN NUMBER
--Invoice Exchange Rate Type
 , p_source_41            IN VARCHAR2
--Deferred Accounting End Date
 , p_source_43            IN DATE
--Deferred Accounting Option
 , p_source_44            IN VARCHAR2
--Deferred Accounting Start Date
 , p_source_45            IN DATE
--Override Accounted Amount Indicator
 , p_source_46            IN VARCHAR2
 , p_source_46_meaning    IN VARCHAR2
--Invoice Supplier Identifier
 , p_source_47            IN NUMBER
--Invoice Supplier Site Identifier
 , p_source_48            IN NUMBER
--Third Party Type
 , p_source_49            IN VARCHAR2
--Parent Reversal Identifier
 , p_source_50            IN NUMBER
--Invoice Distribution Statistical Amount
 , p_source_51            IN NUMBER
--Invoice Distribution Tax Line Identifier
 , p_source_52            IN NUMBER
--Invoice Distribution Tax Distribution Identifier from Tax
 , p_source_53            IN NUMBER
--Invoice Distribution Summary Tax Line Identifier
 , p_source_54            IN NUMBER
--Payables Upgrade Credit Encumbrance Type Identifier
 , p_source_55            IN NUMBER
--Payables Upgrade Debit Encumbrance Type Identifier
 , p_source_56            IN NUMBER
--Invoice Distribution Encumbrance Amount
 , p_source_65            IN NUMBER
--Invoice Distribution Encumbrance Ledger Amount
 , p_source_66            IN NUMBER
)
IS

l_component_type              VARCHAR2(80);
l_component_code              VARCHAR2(30);
l_component_type_code         VARCHAR2(1);
l_component_appl_id           INTEGER;
l_amb_context_code            VARCHAR2(30);
l_entity_code                 VARCHAR2(30);
l_event_class_code            VARCHAR2(30);
l_ae_header_id                NUMBER;
l_event_type_code             VARCHAR2(30);
l_line_definition_code        VARCHAR2(30);
l_line_definition_owner_code  VARCHAR2(1);
--
-- adr variables
l_segment                     VARCHAR2(30);
l_ccid                        NUMBER;
l_adr_transaction_coa_id      NUMBER;
l_adr_accounting_coa_id       NUMBER;
l_adr_flexfield_segment_code  VARCHAR2(30);
l_adr_flex_value_set_id       NUMBER;
l_adr_value_type_code         VARCHAR2(30);
l_adr_value_combination_id    NUMBER;
l_adr_value_segment_code      VARCHAR2(30);

l_bflow_method_code           VARCHAR2(30);  -- 4219869 Business Flow
l_bflow_class_code            VARCHAR2(30);  -- 4219869 Business Flow
l_inherit_desc_flag           VARCHAR2(1);   -- 4219869 Business Flow
l_budgetary_control_flag      VARCHAR2(1);   -- 4458381 Public Sector Enh

-- 4262811 Variables ------------------------------------------------------------------------------------------
l_entered_amt_idx             NUMBER;
l_accted_amt_idx              NUMBER;
l_acc_rev_flag                VARCHAR2(1);
l_accrual_line_num            NUMBER;
l_tmp_amt                     NUMBER;
l_acc_rev_natural_side_code   VARCHAR2(1);

l_num_entries                 NUMBER;
l_gl_dates                    xla_ae_journal_entry_pkg.t_array_date;
l_accted_amts                 xla_ae_journal_entry_pkg.t_array_num;
l_entered_amts                xla_ae_journal_entry_pkg.t_array_num;
l_period_names                xla_ae_journal_entry_pkg.t_array_V15L;
l_recog_line_1                NUMBER;
l_recog_line_2                NUMBER;

l_bflow_applied_to_amt_idx    NUMBER;                                -- 5132302
l_bflow_applied_to_amt        NUMBER;                                -- 5132302
l_bflow_applied_to_amts       xla_ae_journal_entry_pkg.t_array_num;  -- 5132302

l_event_id                    NUMBER;  -- To handle MPA header Description: xla_ae_header_pkg.SetHdrDescription

--l_rounding_ccy                VARCHAR2(15); -- To handle MPA rounding  4262811b
l_same_currency               BOOLEAN;        -- To handle MPA rounding  4262811b

---------------------------------------------------------------------------------------------------------------


--
-- bulk performance
--
l_balance_type_code           VARCHAR2(1);
l_rec_acct_attrs              XLA_AE_LINES_PKG.t_rec_acct_attrs;
l_log_module                  VARCHAR2(240);

--
-- Upgrade strategy
--
l_actual_upg_option           VARCHAR2(1);
l_enc_upg_option           VARCHAR2(1);

--
BEGIN
--
IF g_log_enabled THEN
      l_log_module := C_DEFAULT_MODULE||'.AcctLineType_41';
END IF;
--
IF (C_LEVEL_PROCEDURE >= g_log_level) THEN

      trace
         (p_msg      => 'BEGIN of AcctLineType_41'
         ,p_level    => C_LEVEL_PROCEDURE
         ,p_module   => l_log_module);

END IF;
--
l_component_type             := 'AMB_JLT';
l_component_code             := 'AP_MISC_EXPENSE_CM_ENC_DR';
l_component_type_code        := 'S';
l_component_appl_id          :=  200;
l_amb_context_code           := 'DEFAULT';
l_entity_code                := 'AP_INVOICES';
l_event_class_code           := 'CREDIT MEMOS';
l_event_type_code            := 'CREDIT MEMOS_ALL';
l_line_definition_owner_code := 'S';
l_line_definition_code       := 'ENC_CM_ALL';
--
l_balance_type_code          := 'E';
l_segment                     := NULL;
l_ccid                        := NULL;
l_adr_transaction_coa_id      := NULL;
l_adr_accounting_coa_id       := NULL;
l_adr_flexfield_segment_code  := NULL;
l_adr_flex_value_set_id       := NULL;
l_adr_value_type_code         := NULL;
l_adr_value_combination_id    := NULL;
l_adr_value_segment_code      := NULL;

l_bflow_method_code          := 'NONE';   -- 4219869 Business Flow
l_bflow_class_code           := 'AP_INV_ENCUM';    -- 4219869 Business Flow
l_inherit_desc_flag          := 'N';   -- 4219869 Business Flow
l_budgetary_control_flag     := 'Y';

l_bflow_applied_to_amt_idx   := NULL; -- 5132302
l_bflow_applied_to_amt       := NULL; -- 5132302
l_entered_amt_idx            := NULL;          -- 4262811
l_accted_amt_idx             := NULL;          -- 4262811
l_acc_rev_flag               := NULL;          -- 4262811
l_accrual_line_num           := NULL;          -- 4262811
l_tmp_amt                    := NULL;          -- 4262811
--
 
IF XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id = XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.ledger_id OR
    l_balance_type_code <> 'B' THEN
IF NVL(p_source_15,'
') =  'MISCELLANEOUS' AND 
NVL(p_source_17,'
') =  'Y'
 THEN 

   --
   XLA_AE_LINES_PKG.SetNewLine;

   p_balance_type_code          := l_balance_type_code;
   -- set the flag so later we will know whether the gain loss line needs to be created
   
   IF(l_balance_type_code = 'A' and p_actual_flag is null) THEN
     p_actual_flag :='A';
   END IF;

   --
   -- bulk performance
   --
   XLA_AE_LINES_PKG.set_ae_header_id (p_ae_header_id => p_event_id ,
                                      p_header_num   => 0); -- 4262811
   --
   -- set accounting line options
   --
   l_ae_header_id:= xla_ae_lines_pkg.SetAcctLineOption(
           p_natural_side_code          => 'D'
         , p_gain_or_loss_flag          => 'N'
         , p_gl_transfer_mode_code      => 'S'
         , p_acct_entry_type_code       => 'E'
         , p_switch_side_flag           => 'Y'
         , p_merge_duplicate_code       => 'N'
         );
   --
   l_acc_rev_natural_side_code := 'C';  -- 4262811
   -- 
   --
   -- set accounting line type info
   --
   xla_ae_lines_pkg.SetAcctLineType
      (p_component_type             => l_component_type
      ,p_event_type_code            => l_event_type_code
      ,p_line_definition_owner_code => l_line_definition_owner_code
      ,p_line_definition_code       => l_line_definition_code
      ,p_accounting_line_code       => l_component_code
      ,p_accounting_line_type_code  => l_component_type_code
      ,p_accounting_line_appl_id    => l_component_appl_id
      ,p_amb_context_code           => l_amb_context_code
      ,p_entity_code                => l_entity_code
      ,p_event_class_code           => l_event_class_code);
   --
   -- set accounting class
   --
   xla_ae_lines_pkg.SetAcctClass(
           p_accounting_class_code  => 'MISCELLANEOUS EXPENSE'
         , p_ae_header_id           => l_ae_header_id
         );

   --
   -- set rounding class
   --
   XLA_AE_LINES_PKG.g_rec_lines.array_rounding_class(XLA_AE_LINES_PKG.g_LineNumber) :=
                      'MISCELLANEOUS EXPENSE';

   --
   xla_ae_lines_pkg.g_rec_lines.array_calculate_acctd_flag(xla_ae_lines_pkg.g_LineNumber) := p_calculate_acctd_flag;
   xla_ae_lines_pkg.g_rec_lines.array_calculate_g_l_flag(xla_ae_lines_pkg.g_LineNumber) := p_calculate_g_l_flag;
   --
   -- bulk performance
   --
   XLA_AE_LINES_PKG.g_rec_lines.array_balance_type_code(XLA_AE_LINES_PKG.g_LineNumber) := l_balance_type_code;

   XLA_AE_LINES_PKG.g_rec_lines.array_ledger_id(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id;

   -- 4955764
   XLA_AE_LINES_PKG.g_rec_lines.array_gl_date(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_HEADER_PKG.g_rec_header_new.array_gl_date(g_array_event(p_event_id).array_value_num('header_index'));

   -- 4458381 Public Sector Enh
      XLA_AE_LINES_PKG.g_rec_lines.array_encumbrance_type_id(XLA_AE_LINES_PKG.g_LineNumber) := 1060;
   --
   -- set accounting attributes for the line type
   --
   l_entered_amt_idx := 23;
   l_accted_amt_idx  := 28;
   l_bflow_applied_to_amt_idx  := NULL;  -- 5132302
   l_rec_acct_attrs.array_acct_attr_code(1) := 'ACCOUNTING_REVERSAL_OPTION';
   l_rec_acct_attrs.array_char_value(1)  := p_source_19;
   l_rec_acct_attrs.array_acct_attr_code(2) := 'ALLOC_TO_APPLICATION_ID';
   l_rec_acct_attrs.array_num_value(2)  := 
xla_ae_sources_pkg.GetSystemSourceNum(
   p_source_code           => 'XLA_EVENT_APPL_ID'
 , p_source_type_code      => 'Y'
 , p_source_application_id =>  602
);
   l_rec_acct_attrs.array_acct_attr_code(3) := 'ALLOC_TO_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(3)  := p_source_21;
   l_rec_acct_attrs.array_acct_attr_code(4) := 'ALLOC_TO_ENTITY_CODE';
   l_rec_acct_attrs.array_char_value(4)  := 
xla_ae_sources_pkg.GetSystemSourceChar(
   p_source_code           => 'XLA_ENTITY_CODE'
 , p_source_type_code      => 'Y'
 , p_source_application_id =>  602
);
   l_rec_acct_attrs.array_acct_attr_code(5) := 'ALLOC_TO_FIRST_DIST_ID';
   l_rec_acct_attrs.array_num_value(5)  :=  to_char(p_source_23);
   l_rec_acct_attrs.array_acct_attr_code(6) := 'ALLOC_TO_FIRST_SYS_TRAN_ID';
   l_rec_acct_attrs.array_num_value(6)  :=  to_char(p_source_24);
   l_rec_acct_attrs.array_acct_attr_code(7) := 'APPLIED_TO_APPLICATION_ID';
   l_rec_acct_attrs.array_num_value(7)  := p_source_25;
   l_rec_acct_attrs.array_acct_attr_code(8) := 'APPLIED_TO_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(8)  := p_source_26;
   l_rec_acct_attrs.array_acct_attr_code(9) := 'APPLIED_TO_ENTITY_CODE';
   l_rec_acct_attrs.array_char_value(9)  := p_source_27;
   l_rec_acct_attrs.array_acct_attr_code(10) := 'APPLIED_TO_FIRST_DIST_ID';
   l_rec_acct_attrs.array_num_value(10)  :=  to_char(p_source_28);
   l_rec_acct_attrs.array_acct_attr_code(11) := 'APPLIED_TO_FIRST_SYS_TRAN_ID';
   l_rec_acct_attrs.array_num_value(11)  :=  to_char(p_source_29);
   l_rec_acct_attrs.array_acct_attr_code(12) := 'DISTRIBUTION_IDENTIFIER_1';
   l_rec_acct_attrs.array_num_value(12)  :=  to_char(p_source_30);
   l_rec_acct_attrs.array_acct_attr_code(13) := 'DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(13)  := p_source_21;
   l_rec_acct_attrs.array_acct_attr_code(14) := 'ENC_UPG_CR_CCID';
   l_rec_acct_attrs.array_num_value(14)  := p_source_31;
   l_rec_acct_attrs.array_acct_attr_code(15) := 'ENC_UPG_CR_ENTERED_AMT';
   l_rec_acct_attrs.array_num_value(15)  := p_source_32;
   l_rec_acct_attrs.array_acct_attr_code(16) := 'ENC_UPG_CR_ENTERED_CURR';
   l_rec_acct_attrs.array_char_value(16)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(17) := 'ENC_UPG_CR_LEDGER_AMT';
   l_rec_acct_attrs.array_num_value(17)  := p_source_34;
   l_rec_acct_attrs.array_acct_attr_code(18) := 'ENC_UPG_DR_CCID';
   l_rec_acct_attrs.array_num_value(18)  := p_source_35;
   l_rec_acct_attrs.array_acct_attr_code(19) := 'ENC_UPG_DR_ENTERED_AMT';
   l_rec_acct_attrs.array_num_value(19)  := p_source_36;
   l_rec_acct_attrs.array_acct_attr_code(20) := 'ENC_UPG_DR_ENTERED_CURR';
   l_rec_acct_attrs.array_char_value(20)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(21) := 'ENC_UPG_DR_LEDGER_AMT';
   l_rec_acct_attrs.array_num_value(21)  := p_source_37;
   l_rec_acct_attrs.array_acct_attr_code(22) := 'ENC_UPG_OPTION';
   l_rec_acct_attrs.array_char_value(22)  := p_source_38;
   l_rec_acct_attrs.array_acct_attr_code(23) := 'ENTERED_CURRENCY_AMOUNT';
   l_rec_acct_attrs.array_num_value(23)  := p_source_65;
   l_rec_acct_attrs.array_acct_attr_code(24) := 'ENTERED_CURRENCY_CODE';
   l_rec_acct_attrs.array_char_value(24)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(25) := 'EXCHANGE_DATE';
   l_rec_acct_attrs.array_date_value(25)  := p_source_39;
   l_rec_acct_attrs.array_acct_attr_code(26) := 'EXCHANGE_RATE';
   l_rec_acct_attrs.array_num_value(26)  := p_source_40;
   l_rec_acct_attrs.array_acct_attr_code(27) := 'EXCHANGE_RATE_TYPE';
   l_rec_acct_attrs.array_char_value(27)  := p_source_41;
   l_rec_acct_attrs.array_acct_attr_code(28) := 'LEDGER_AMOUNT';
   l_rec_acct_attrs.array_num_value(28)  := p_source_66;
   l_rec_acct_attrs.array_acct_attr_code(29) := 'MULTIPERIOD_END_DATE';
   l_rec_acct_attrs.array_date_value(29)  := p_source_43;
   l_rec_acct_attrs.array_acct_attr_code(30) := 'MULTIPERIOD_OPTION';
   l_rec_acct_attrs.array_char_value(30)  := p_source_44;
   l_rec_acct_attrs.array_acct_attr_code(31) := 'MULTIPERIOD_START_DATE';
   l_rec_acct_attrs.array_date_value(31)  := p_source_45;
   l_rec_acct_attrs.array_acct_attr_code(32) := 'OVERRIDE_ACCTD_AMT_FLAG';
   l_rec_acct_attrs.array_char_value(32)  := p_source_46;
   l_rec_acct_attrs.array_acct_attr_code(33) := 'PARTY_ID';
   l_rec_acct_attrs.array_num_value(33)  := p_source_47;
   l_rec_acct_attrs.array_acct_attr_code(34) := 'PARTY_SITE_ID';
   l_rec_acct_attrs.array_num_value(34)  := p_source_48;
   l_rec_acct_attrs.array_acct_attr_code(35) := 'PARTY_TYPE';
   l_rec_acct_attrs.array_char_value(35)  := p_source_49;
   l_rec_acct_attrs.array_acct_attr_code(36) := 'REVERSED_DISTRIBUTION_ID1';
   l_rec_acct_attrs.array_num_value(36)  :=  to_char(p_source_50);
   l_rec_acct_attrs.array_acct_attr_code(37) := 'REVERSED_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(37)  := p_source_21;
   l_rec_acct_attrs.array_acct_attr_code(38) := 'STATISTICAL_AMOUNT';
   l_rec_acct_attrs.array_num_value(38)  := p_source_51;
   l_rec_acct_attrs.array_acct_attr_code(39) := 'TAX_LINE_REF_ID';
   l_rec_acct_attrs.array_num_value(39)  := p_source_52;
   l_rec_acct_attrs.array_acct_attr_code(40) := 'TAX_REC_NREC_DIST_REF_ID';
   l_rec_acct_attrs.array_num_value(40)  := p_source_53;
   l_rec_acct_attrs.array_acct_attr_code(41) := 'TAX_SUMMARY_LINE_REF_ID';
   l_rec_acct_attrs.array_num_value(41)  := p_source_54;
   l_rec_acct_attrs.array_acct_attr_code(42) := 'UPG_CR_ENC_TYPE_ID';
   l_rec_acct_attrs.array_num_value(42)  := p_source_55;
   l_rec_acct_attrs.array_acct_attr_code(43) := 'UPG_DR_ENC_TYPE_ID';
   l_rec_acct_attrs.array_num_value(43)  := p_source_56;

   XLA_AE_LINES_PKG.SetLineAcctAttrs(l_rec_acct_attrs);
   p_gain_or_loss_ref  := XLA_AE_LINES_PKG.g_rec_lines.array_gain_or_loss_ref(XLA_AE_LINES_PKG.g_LineNumber);

   ---------------------------------------------------------------------------------------------------------------
   -- 4336173 -- assign Business Flow Class (replace code in xla_ae_lines_pkg.Business_Flow_Validation)
   ---------------------------------------------------------------------------------------------------------------
   XLA_AE_LINES_PKG.g_rec_lines.array_business_class_code(XLA_AE_LINES_PKG.g_LineNumber) := l_bflow_class_code;

   l_actual_upg_option  := XLA_AE_LINES_PKG.g_rec_lines.array_actual_upg_option(XLA_AE_LINES_PKG.g_LineNumber);
   l_enc_upg_option     := XLA_AE_LINES_PKG.g_rec_lines.array_enc_upg_option(XLA_AE_LINES_PKG.g_LineNumber);

   IF xla_accounting_cache_pkg.GetValueChar
         (p_source_code         => 'LEDGER_CATEGORY_CODE'
         ,p_target_ledger_id    => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id) IN ('PRIMARY','ALC')
   AND l_bflow_method_code = 'PRIOR_ENTRY'
--   AND (l_actual_upg_option = 'Y' OR l_enc_upg_option = 'Y') Bug 4922099
   AND ( (NVL(l_actual_upg_option, 'N') IN ('Y', 'O')) OR
         (NVL(l_enc_upg_option, 'N') IN ('Y', 'O'))
       )
   THEN
         xla_ae_lines_pkg.BflowUpgEntry
           (p_business_method_code    => l_bflow_method_code
           ,p_business_class_code     => l_bflow_class_code
           ,p_balance_type            => l_balance_type_code);
   ELSE
      NULL;
-- No business flow processing for business flow method of NONE.
   END IF;

   --
   -- call analytical criteria
   --
   
   --
   -- call description
   --
   
xla_ae_lines_pkg.SetLineDescription(
   p_ae_header_id => l_ae_header_id
  ,p_description  => Description_2 (
     p_application_id         => p_application_id
   , p_ae_header_id           => l_ae_header_id 
, p_source_1 => p_source_1
   )
);


   --
   -- call ADRs
   -- Bug 4922099
   --
   IF ( (l_bflow_method_code <> 'PRIOR_ENTRY') OR
        (NVL(l_actual_upg_option, 'N') = 'O') OR
        (NVL(l_enc_upg_option, 'N') = 'O')
      )
   THEN
   NULL;
   --
   --
   
  l_ccid := AcctDerRule_7(
           p_application_id           => p_application_id
         , p_ae_header_id             => l_ae_header_id 
, p_source_11 => p_source_11
         , x_transaction_coa_id       => l_adr_transaction_coa_id
         , x_accounting_coa_id        => l_adr_accounting_coa_id
         , x_value_type_code          => l_adr_value_type_code
         , p_side                     => 'NA'
   );

   xla_ae_lines_pkg.set_ccid(
    p_code_combination_id          => l_ccid
  , p_value_type_code              => l_adr_value_type_code
  , p_transaction_coa_id           => l_adr_transaction_coa_id
  , p_accounting_coa_id            => l_adr_accounting_coa_id
  , p_adr_code                     => 'AP_INVOICE_DIST'
  , p_adr_type_code                => 'S'
  , p_component_type               => l_component_type
  , p_component_code               => l_component_code
  , p_component_type_code          => l_component_type_code
  , p_component_appl_id            => l_component_appl_id
  , p_amb_context_code             => l_amb_context_code
  , p_side                         => 'NA'
  );


   --
   --
   END IF;
   --
   -- Bug 4922099
   IF ( ( (NVL(l_actual_upg_option, 'N') = 'O') OR
          (NVL(l_enc_upg_option, 'N') = 'O')
        ) AND
        (l_bflow_method_code = 'PRIOR_ENTRY')
      )
   THEN
      IF
      --
      1 = 2
      --
      THEN
      xla_accounting_err_pkg.build_message
                                    (p_appli_s_name            => 'XLA'
                                    ,p_msg_name                => 'XLA_UPG_OVERRIDE_ADR_UNDEFINED'
                                    ,p_token_1                 => 'LINE_NUMBER'
                                    ,p_value_1                 => XLA_AE_LINES_PKG.g_LineNumber
                                    ,p_token_2                 => 'LINE_TYPE_NAME'
                                    ,p_value_2                 => XLA_AE_SOURCES_PKG.GetComponentName (
                                                                             l_component_type
                                                                            ,l_component_code
                                                                            ,l_component_type_code
                                                                            ,l_component_appl_id
                                                                            ,l_amb_context_code
                                                                            ,l_entity_code
                                                                            ,l_event_class_code
                                                                           )
                                    ,p_token_3                 => 'OWNER'
                                    ,p_value_3                 => xla_lookups_pkg.get_meaning(
                                                                          p_lookup_type     => 'XLA_OWNER_TYPE'
                                                                          ,p_lookup_code    => l_component_type_code
                                                                         )
                                    ,p_token_4                 => 'PRODUCT_NAME'
                                    ,p_value_4                 => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.application_name
                                    ,p_entity_id               => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.entity_id
                                    ,p_event_id                => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.event_id
                                    ,p_ledger_id               => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id
                                    ,p_ae_header_id            =>  NULL
                                       );

        IF (C_LEVEL_ERROR>= g_log_level) THEN
                 trace
                      (p_msg      => 'ERROR: XLA_UPG_OVERRIDE_ADR_UNDEFINED'
                      ,p_level    => C_LEVEL_ERROR
                      ,p_module   => l_log_module);
        END IF;
      END IF;
   END IF;
   --
   --
   ------------------------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- NOTE: XLA_AE_LINES_PKG.ValidateCurrentLine should NOT be generated if business flow method is
   -- Prior Entry.  Currently, the following code is always generated.
   ------------------------------------------------------------------------------------------------
   XLA_AE_LINES_PKG.ValidateCurrentLine;

   ------------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- Populated credit and debit amounts -- Need to generate this within IF <condition>
   ------------------------------------------------------------------------------------
   XLA_AE_LINES_PKG.SetDebitCreditAmounts;

   ----------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- Update journal entry status -- Need to generate this within IF <condition>
   ----------------------------------------------------------------------------------
   XLA_AE_JOURNAL_ENTRY_PKG.UpdateJournalEntryStatus
         (p_hdr_idx => g_array_event(p_event_id).array_value_num('header_index')
         ,p_balance_type_code => l_balance_type_code
         );

   -------------------------------------------------------------------------------------------
   -- 4262811 - Generate the Accrual Reversal lines
   -------------------------------------------------------------------------------------------
   BEGIN
      l_acc_rev_flag := XLA_AE_HEADER_PKG.g_rec_header_new.array_accrual_reversal_flag
                              (g_array_event(p_event_id).array_value_num('header_index'));
      IF l_acc_rev_flag IS NULL THEN
         l_acc_rev_flag := 'N';
      END IF;
   EXCEPTION
      WHEN OTHERS THEN
         l_acc_rev_flag := 'N';
   END;
   --
   IF (l_acc_rev_flag = 'Y') THEN

       -- 4645092  ------------------------------------------------------------------------------
       -- To allow MPA report to determine if it should generate report process
       XLA_ACCOUNTING_PKG.g_mpa_accrual_exists := 'Y';
       ------------------------------------------------------------------------------------------

       l_accrual_line_num := XLA_AE_LINES_PKG.g_LineNumber;
       XLA_AE_LINES_PKG.CopyLineInfo(l_accrual_line_num);
   -- added call to set_ccid to execute mapping  for secondary accrual reversal entries bug 7444204
   -- call ADRs
   -- Bug 4922099
   --
   IF ( (l_bflow_method_code <> 'PRIOR_ENTRY') OR
        (NVL(l_actual_upg_option, 'N') = 'O') OR
        (NVL(l_enc_upg_option, 'N') = 'O')
      )
   THEN
   NULL;
   --
   --
   
  l_ccid := AcctDerRule_7(
           p_application_id           => p_application_id
         , p_ae_header_id             => l_ae_header_id 
, p_source_11 => p_source_11
         , x_transaction_coa_id       => l_adr_transaction_coa_id
         , x_accounting_coa_id        => l_adr_accounting_coa_id
         , x_value_type_code          => l_adr_value_type_code
         , p_side                     => 'NA'
   );

   xla_ae_lines_pkg.set_ccid(
    p_code_combination_id          => l_ccid
  , p_value_type_code              => l_adr_value_type_code
  , p_transaction_coa_id           => l_adr_transaction_coa_id
  , p_accounting_coa_id            => l_adr_accounting_coa_id
  , p_adr_code                     => 'AP_INVOICE_DIST'
  , p_adr_type_code                => 'S'
  , p_component_type               => l_component_type
  , p_component_code               => l_component_code
  , p_component_type_code          => l_component_type_code
  , p_component_appl_id            => l_component_appl_id
  , p_amb_context_code             => l_amb_context_code
  , p_side                         => 'NA'
  );


   --
   --
   END IF;

       --
       -- Update the line information that should be overwritten
       --
       XLA_AE_LINES_PKG.set_ae_header_id(p_ae_header_id => p_event_id ,
                                         p_header_num   => 1);
       XLA_AE_LINES_PKG.g_rec_lines.array_header_num(XLA_AE_LINES_PKG.g_LineNumber)  :=1;

       XLA_AE_LINES_PKG.g_rec_lines.array_business_class_code(XLA_AE_LINES_PKG.g_LineNumber) := NULL; -- 4669271

       IF l_bflow_method_code <> 'NONE' THEN  -- 4655713b
          XLA_AE_LINES_PKG.g_rec_lines.array_reversal_code(XLA_AE_LINES_PKG.g_LineNumber) := CONCAT('MPA_',l_bflow_method_code);
       END IF;

      --
      -- Depending on the Reversal Method setup, do a switch side or changes sign for the amounts
      --
      IF (XLA_AE_JOURNAL_ENTRY_PKG.g_cache_ledgers_info.ledger_reversal_option = 'SIDE') THEN
          XLA_AE_LINES_PKG.g_rec_lines.array_natural_side_code(XLA_AE_LINES_PKG.g_LineNumber) :=  l_acc_rev_natural_side_code;
      ELSE
          ---------------------------------------------------------------------------------------------------
          -- 4262811a Switch Sign
          ---------------------------------------------------------------------------------------------------
          XLA_AE_LINES_PKG.g_rec_lines.array_switch_side_flag(XLA_AE_LINES_PKG.g_LineNumber) := 'N';  -- 5052518
          XLA_AE_LINES_PKG.g_rec_lines.array_ledger_amount(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_ledger_amount(XLA_AE_LINES_PKG.g_LineNumber) * -1;
          XLA_AE_LINES_PKG.g_rec_lines.array_entered_amount(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_entered_amount(XLA_AE_LINES_PKG.g_LineNumber) * -1;
          -- 5132302
          XLA_AE_LINES_PKG.g_rec_lines.array_bflow_applied_to_amt(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_bflow_applied_to_amt(XLA_AE_LINES_PKG.g_LineNumber) * -1;

      END IF;

      -- 4955764
      XLA_AE_LINES_PKG.g_rec_lines.array_gl_date(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_HEADER_PKG.g_rec_header_new.array_gl_date(g_array_event(p_event_id).array_value_num('acc_rev_header_index'));


      XLA_AE_LINES_PKG.ValidateCurrentLine;
      XLA_AE_LINES_PKG.SetDebitCreditAmounts;

      XLA_AE_JOURNAL_ENTRY_PKG.UpdateJournalEntryStatus
               (p_hdr_idx           => g_array_event(p_event_id).array_value_num('acc_rev_header_index')
               ,p_balance_type_code => l_balance_type_code);

   END IF;

   -----------------------------------------------------------------------------------------
   -- 4262811 Multiperiod Accounting
   -----------------------------------------------------------------------------------------
     -- No MPA option is assigned.


END IF;
END IF;
--

--
IF (C_LEVEL_PROCEDURE >= g_log_level) THEN
   trace
      (p_msg      => 'END of AcctLineType_41'
      ,p_level    => C_LEVEL_PROCEDURE
      ,p_module   => l_log_module);
END IF;
--
EXCEPTION
  WHEN xla_exceptions_pkg.application_exception THEN
      RAISE;
  WHEN OTHERS THEN
       xla_exceptions_pkg.raise_message
           (p_location => 'XLA_00200_AAD_S_000010_BC_PKG.AcctLineType_41');
END AcctLineType_41;
--

---------------------------------------
--
-- PRIVATE FUNCTION
--         AcctLineType_42
--
---------------------------------------
PROCEDURE AcctLineType_42 (
  p_application_id        IN NUMBER
 ,p_event_id              IN NUMBER
 ,p_calculate_acctd_flag  IN VARCHAR2
 ,p_calculate_g_l_flag    IN VARCHAR2
 ,p_actual_flag           IN OUT VARCHAR2
 ,p_balance_type_code     OUT VARCHAR2
 ,p_gain_or_loss_ref      OUT VARCHAR2
 
--Invoice Distribution Description
 , p_source_1            IN VARCHAR2
--Invoice Distribution Account
 , p_source_11            IN NUMBER
--Invoice Distribution Type
 , p_source_15            IN VARCHAR2
 , p_source_15_meaning    IN VARCHAR2
--Purchasing Encumbrance Option
 , p_source_17            IN VARCHAR2
 , p_source_17_meaning    IN VARCHAR2
--Accounting Reversal Indicator
 , p_source_19            IN VARCHAR2
--Distribution Link Type
 , p_source_21            IN VARCHAR2
--Allocation to Main Distribution Identifier
 , p_source_23            IN NUMBER
--Invoice Identifier
 , p_source_24            IN NUMBER
--Business Flow Accounts Payable Application Identifier
 , p_source_25            IN NUMBER
--Business Flow Invoice Distribution Type
 , p_source_26            IN VARCHAR2
--Business Flow Invoice Entity Code
 , p_source_27            IN VARCHAR2
--Business Flow Invoice Distribution Identifier
 , p_source_28            IN NUMBER
--Business Flow Invoice Identifier
 , p_source_29            IN NUMBER
--Invoice Distribution Identifier
 , p_source_30            IN NUMBER
--Payables Encumbrance Upgrade Credit Account
 , p_source_31            IN NUMBER
--Payables Encumbrance Upgrade Credit Amount
 , p_source_32            IN NUMBER
--Invoice Currency Code
 , p_source_33            IN VARCHAR2
--Payables Encumbrance Upgrade Credit Base Amount
 , p_source_34            IN NUMBER
--Payables Encumbrance Upgrade Debit Account
 , p_source_35            IN NUMBER
--Payables Encumbrance Upgrade Debit Amount
 , p_source_36            IN NUMBER
--Payables Encumbrance Upgrade Debit Base Amount
 , p_source_37            IN NUMBER
--Payables Encumbrance Upgrade Option
 , p_source_38            IN VARCHAR2
--Invoice Exchange Date
 , p_source_39            IN DATE
--Invoice Exchange Rate
 , p_source_40            IN NUMBER
--Invoice Exchange Rate Type
 , p_source_41            IN VARCHAR2
--Deferred Accounting End Date
 , p_source_43            IN DATE
--Deferred Accounting Option
 , p_source_44            IN VARCHAR2
--Deferred Accounting Start Date
 , p_source_45            IN DATE
--Override Accounted Amount Indicator
 , p_source_46            IN VARCHAR2
 , p_source_46_meaning    IN VARCHAR2
--Invoice Supplier Identifier
 , p_source_47            IN NUMBER
--Invoice Supplier Site Identifier
 , p_source_48            IN NUMBER
--Third Party Type
 , p_source_49            IN VARCHAR2
--Parent Reversal Identifier
 , p_source_50            IN NUMBER
--Invoice Distribution Tax Line Identifier
 , p_source_52            IN NUMBER
--Invoice Distribution Tax Distribution Identifier from Tax
 , p_source_53            IN NUMBER
--Invoice Distribution Summary Tax Line Identifier
 , p_source_54            IN NUMBER
--Payables Upgrade Credit Encumbrance Type Identifier
 , p_source_55            IN NUMBER
--Payables Upgrade Debit Encumbrance Type Identifier
 , p_source_56            IN NUMBER
--Invoice Distribution Encumbrance Amount
 , p_source_65            IN NUMBER
--Invoice Distribution Encumbrance Ledger Amount
 , p_source_66            IN NUMBER
)
IS

l_component_type              VARCHAR2(80);
l_component_code              VARCHAR2(30);
l_component_type_code         VARCHAR2(1);
l_component_appl_id           INTEGER;
l_amb_context_code            VARCHAR2(30);
l_entity_code                 VARCHAR2(30);
l_event_class_code            VARCHAR2(30);
l_ae_header_id                NUMBER;
l_event_type_code             VARCHAR2(30);
l_line_definition_code        VARCHAR2(30);
l_line_definition_owner_code  VARCHAR2(1);
--
-- adr variables
l_segment                     VARCHAR2(30);
l_ccid                        NUMBER;
l_adr_transaction_coa_id      NUMBER;
l_adr_accounting_coa_id       NUMBER;
l_adr_flexfield_segment_code  VARCHAR2(30);
l_adr_flex_value_set_id       NUMBER;
l_adr_value_type_code         VARCHAR2(30);
l_adr_value_combination_id    NUMBER;
l_adr_value_segment_code      VARCHAR2(30);

l_bflow_method_code           VARCHAR2(30);  -- 4219869 Business Flow
l_bflow_class_code            VARCHAR2(30);  -- 4219869 Business Flow
l_inherit_desc_flag           VARCHAR2(1);   -- 4219869 Business Flow
l_budgetary_control_flag      VARCHAR2(1);   -- 4458381 Public Sector Enh

-- 4262811 Variables ------------------------------------------------------------------------------------------
l_entered_amt_idx             NUMBER;
l_accted_amt_idx              NUMBER;
l_acc_rev_flag                VARCHAR2(1);
l_accrual_line_num            NUMBER;
l_tmp_amt                     NUMBER;
l_acc_rev_natural_side_code   VARCHAR2(1);

l_num_entries                 NUMBER;
l_gl_dates                    xla_ae_journal_entry_pkg.t_array_date;
l_accted_amts                 xla_ae_journal_entry_pkg.t_array_num;
l_entered_amts                xla_ae_journal_entry_pkg.t_array_num;
l_period_names                xla_ae_journal_entry_pkg.t_array_V15L;
l_recog_line_1                NUMBER;
l_recog_line_2                NUMBER;

l_bflow_applied_to_amt_idx    NUMBER;                                -- 5132302
l_bflow_applied_to_amt        NUMBER;                                -- 5132302
l_bflow_applied_to_amts       xla_ae_journal_entry_pkg.t_array_num;  -- 5132302

l_event_id                    NUMBER;  -- To handle MPA header Description: xla_ae_header_pkg.SetHdrDescription

--l_rounding_ccy                VARCHAR2(15); -- To handle MPA rounding  4262811b
l_same_currency               BOOLEAN;        -- To handle MPA rounding  4262811b

---------------------------------------------------------------------------------------------------------------


--
-- bulk performance
--
l_balance_type_code           VARCHAR2(1);
l_rec_acct_attrs              XLA_AE_LINES_PKG.t_rec_acct_attrs;
l_log_module                  VARCHAR2(240);

--
-- Upgrade strategy
--
l_actual_upg_option           VARCHAR2(1);
l_enc_upg_option           VARCHAR2(1);

--
BEGIN
--
IF g_log_enabled THEN
      l_log_module := C_DEFAULT_MODULE||'.AcctLineType_42';
END IF;
--
IF (C_LEVEL_PROCEDURE >= g_log_level) THEN

      trace
         (p_msg      => 'BEGIN of AcctLineType_42'
         ,p_level    => C_LEVEL_PROCEDURE
         ,p_module   => l_log_module);

END IF;
--
l_component_type             := 'AMB_JLT';
l_component_code             := 'AP_MISC_EXPENSE_DM_ENC_DR';
l_component_type_code        := 'S';
l_component_appl_id          :=  200;
l_amb_context_code           := 'DEFAULT';
l_entity_code                := 'AP_INVOICES';
l_event_class_code           := 'DEBIT MEMOS';
l_event_type_code            := 'DEBIT MEMOS_ALL';
l_line_definition_owner_code := 'S';
l_line_definition_code       := 'ENC_DM_ALL';
--
l_balance_type_code          := 'E';
l_segment                     := NULL;
l_ccid                        := NULL;
l_adr_transaction_coa_id      := NULL;
l_adr_accounting_coa_id       := NULL;
l_adr_flexfield_segment_code  := NULL;
l_adr_flex_value_set_id       := NULL;
l_adr_value_type_code         := NULL;
l_adr_value_combination_id    := NULL;
l_adr_value_segment_code      := NULL;

l_bflow_method_code          := 'NONE';   -- 4219869 Business Flow
l_bflow_class_code           := 'AP_INV_ENCUM';    -- 4219869 Business Flow
l_inherit_desc_flag          := 'N';   -- 4219869 Business Flow
l_budgetary_control_flag     := 'Y';

l_bflow_applied_to_amt_idx   := NULL; -- 5132302
l_bflow_applied_to_amt       := NULL; -- 5132302
l_entered_amt_idx            := NULL;          -- 4262811
l_accted_amt_idx             := NULL;          -- 4262811
l_acc_rev_flag               := NULL;          -- 4262811
l_accrual_line_num           := NULL;          -- 4262811
l_tmp_amt                    := NULL;          -- 4262811
--
 
IF XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id = XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.ledger_id OR
    l_balance_type_code <> 'B' THEN
IF NVL(p_source_15,'
') =  'MISCELLANEOUS' AND 
NVL(p_source_17,'
') =  'Y'
 THEN 

   --
   XLA_AE_LINES_PKG.SetNewLine;

   p_balance_type_code          := l_balance_type_code;
   -- set the flag so later we will know whether the gain loss line needs to be created
   
   IF(l_balance_type_code = 'A' and p_actual_flag is null) THEN
     p_actual_flag :='A';
   END IF;

   --
   -- bulk performance
   --
   XLA_AE_LINES_PKG.set_ae_header_id (p_ae_header_id => p_event_id ,
                                      p_header_num   => 0); -- 4262811
   --
   -- set accounting line options
   --
   l_ae_header_id:= xla_ae_lines_pkg.SetAcctLineOption(
           p_natural_side_code          => 'D'
         , p_gain_or_loss_flag          => 'N'
         , p_gl_transfer_mode_code      => 'S'
         , p_acct_entry_type_code       => 'E'
         , p_switch_side_flag           => 'Y'
         , p_merge_duplicate_code       => 'N'
         );
   --
   l_acc_rev_natural_side_code := 'C';  -- 4262811
   -- 
   --
   -- set accounting line type info
   --
   xla_ae_lines_pkg.SetAcctLineType
      (p_component_type             => l_component_type
      ,p_event_type_code            => l_event_type_code
      ,p_line_definition_owner_code => l_line_definition_owner_code
      ,p_line_definition_code       => l_line_definition_code
      ,p_accounting_line_code       => l_component_code
      ,p_accounting_line_type_code  => l_component_type_code
      ,p_accounting_line_appl_id    => l_component_appl_id
      ,p_amb_context_code           => l_amb_context_code
      ,p_entity_code                => l_entity_code
      ,p_event_class_code           => l_event_class_code);
   --
   -- set accounting class
   --
   xla_ae_lines_pkg.SetAcctClass(
           p_accounting_class_code  => 'FREIGHT'
         , p_ae_header_id           => l_ae_header_id
         );

   --
   -- set rounding class
   --
   XLA_AE_LINES_PKG.g_rec_lines.array_rounding_class(XLA_AE_LINES_PKG.g_LineNumber) :=
                      'FREIGHT';

   --
   xla_ae_lines_pkg.g_rec_lines.array_calculate_acctd_flag(xla_ae_lines_pkg.g_LineNumber) := p_calculate_acctd_flag;
   xla_ae_lines_pkg.g_rec_lines.array_calculate_g_l_flag(xla_ae_lines_pkg.g_LineNumber) := p_calculate_g_l_flag;
   --
   -- bulk performance
   --
   XLA_AE_LINES_PKG.g_rec_lines.array_balance_type_code(XLA_AE_LINES_PKG.g_LineNumber) := l_balance_type_code;

   XLA_AE_LINES_PKG.g_rec_lines.array_ledger_id(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id;

   -- 4955764
   XLA_AE_LINES_PKG.g_rec_lines.array_gl_date(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_HEADER_PKG.g_rec_header_new.array_gl_date(g_array_event(p_event_id).array_value_num('header_index'));

   -- 4458381 Public Sector Enh
      XLA_AE_LINES_PKG.g_rec_lines.array_encumbrance_type_id(XLA_AE_LINES_PKG.g_LineNumber) := 1060;
   --
   -- set accounting attributes for the line type
   --
   l_entered_amt_idx := 23;
   l_accted_amt_idx  := 28;
   l_bflow_applied_to_amt_idx  := NULL;  -- 5132302
   l_rec_acct_attrs.array_acct_attr_code(1) := 'ACCOUNTING_REVERSAL_OPTION';
   l_rec_acct_attrs.array_char_value(1)  := p_source_19;
   l_rec_acct_attrs.array_acct_attr_code(2) := 'ALLOC_TO_APPLICATION_ID';
   l_rec_acct_attrs.array_num_value(2)  := 
xla_ae_sources_pkg.GetSystemSourceNum(
   p_source_code           => 'XLA_EVENT_APPL_ID'
 , p_source_type_code      => 'Y'
 , p_source_application_id =>  602
);
   l_rec_acct_attrs.array_acct_attr_code(3) := 'ALLOC_TO_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(3)  := p_source_21;
   l_rec_acct_attrs.array_acct_attr_code(4) := 'ALLOC_TO_ENTITY_CODE';
   l_rec_acct_attrs.array_char_value(4)  := 
xla_ae_sources_pkg.GetSystemSourceChar(
   p_source_code           => 'XLA_ENTITY_CODE'
 , p_source_type_code      => 'Y'
 , p_source_application_id =>  602
);
   l_rec_acct_attrs.array_acct_attr_code(5) := 'ALLOC_TO_FIRST_DIST_ID';
   l_rec_acct_attrs.array_num_value(5)  :=  to_char(p_source_23);
   l_rec_acct_attrs.array_acct_attr_code(6) := 'ALLOC_TO_FIRST_SYS_TRAN_ID';
   l_rec_acct_attrs.array_num_value(6)  :=  to_char(p_source_24);
   l_rec_acct_attrs.array_acct_attr_code(7) := 'APPLIED_TO_APPLICATION_ID';
   l_rec_acct_attrs.array_num_value(7)  := p_source_25;
   l_rec_acct_attrs.array_acct_attr_code(8) := 'APPLIED_TO_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(8)  := p_source_26;
   l_rec_acct_attrs.array_acct_attr_code(9) := 'APPLIED_TO_ENTITY_CODE';
   l_rec_acct_attrs.array_char_value(9)  := p_source_27;
   l_rec_acct_attrs.array_acct_attr_code(10) := 'APPLIED_TO_FIRST_DIST_ID';
   l_rec_acct_attrs.array_num_value(10)  :=  to_char(p_source_28);
   l_rec_acct_attrs.array_acct_attr_code(11) := 'APPLIED_TO_FIRST_SYS_TRAN_ID';
   l_rec_acct_attrs.array_num_value(11)  :=  to_char(p_source_29);
   l_rec_acct_attrs.array_acct_attr_code(12) := 'DISTRIBUTION_IDENTIFIER_1';
   l_rec_acct_attrs.array_num_value(12)  :=  to_char(p_source_30);
   l_rec_acct_attrs.array_acct_attr_code(13) := 'DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(13)  := p_source_21;
   l_rec_acct_attrs.array_acct_attr_code(14) := 'ENC_UPG_CR_CCID';
   l_rec_acct_attrs.array_num_value(14)  := p_source_31;
   l_rec_acct_attrs.array_acct_attr_code(15) := 'ENC_UPG_CR_ENTERED_AMT';
   l_rec_acct_attrs.array_num_value(15)  := p_source_32;
   l_rec_acct_attrs.array_acct_attr_code(16) := 'ENC_UPG_CR_ENTERED_CURR';
   l_rec_acct_attrs.array_char_value(16)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(17) := 'ENC_UPG_CR_LEDGER_AMT';
   l_rec_acct_attrs.array_num_value(17)  := p_source_34;
   l_rec_acct_attrs.array_acct_attr_code(18) := 'ENC_UPG_DR_CCID';
   l_rec_acct_attrs.array_num_value(18)  := p_source_35;
   l_rec_acct_attrs.array_acct_attr_code(19) := 'ENC_UPG_DR_ENTERED_AMT';
   l_rec_acct_attrs.array_num_value(19)  := p_source_36;
   l_rec_acct_attrs.array_acct_attr_code(20) := 'ENC_UPG_DR_ENTERED_CURR';
   l_rec_acct_attrs.array_char_value(20)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(21) := 'ENC_UPG_DR_LEDGER_AMT';
   l_rec_acct_attrs.array_num_value(21)  := p_source_37;
   l_rec_acct_attrs.array_acct_attr_code(22) := 'ENC_UPG_OPTION';
   l_rec_acct_attrs.array_char_value(22)  := p_source_38;
   l_rec_acct_attrs.array_acct_attr_code(23) := 'ENTERED_CURRENCY_AMOUNT';
   l_rec_acct_attrs.array_num_value(23)  := p_source_65;
   l_rec_acct_attrs.array_acct_attr_code(24) := 'ENTERED_CURRENCY_CODE';
   l_rec_acct_attrs.array_char_value(24)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(25) := 'EXCHANGE_DATE';
   l_rec_acct_attrs.array_date_value(25)  := p_source_39;
   l_rec_acct_attrs.array_acct_attr_code(26) := 'EXCHANGE_RATE';
   l_rec_acct_attrs.array_num_value(26)  := p_source_40;
   l_rec_acct_attrs.array_acct_attr_code(27) := 'EXCHANGE_RATE_TYPE';
   l_rec_acct_attrs.array_char_value(27)  := p_source_41;
   l_rec_acct_attrs.array_acct_attr_code(28) := 'LEDGER_AMOUNT';
   l_rec_acct_attrs.array_num_value(28)  := p_source_66;
   l_rec_acct_attrs.array_acct_attr_code(29) := 'MULTIPERIOD_END_DATE';
   l_rec_acct_attrs.array_date_value(29)  := p_source_43;
   l_rec_acct_attrs.array_acct_attr_code(30) := 'MULTIPERIOD_OPTION';
   l_rec_acct_attrs.array_char_value(30)  := p_source_44;
   l_rec_acct_attrs.array_acct_attr_code(31) := 'MULTIPERIOD_START_DATE';
   l_rec_acct_attrs.array_date_value(31)  := p_source_45;
   l_rec_acct_attrs.array_acct_attr_code(32) := 'OVERRIDE_ACCTD_AMT_FLAG';
   l_rec_acct_attrs.array_char_value(32)  := p_source_46;
   l_rec_acct_attrs.array_acct_attr_code(33) := 'PARTY_ID';
   l_rec_acct_attrs.array_num_value(33)  := p_source_47;
   l_rec_acct_attrs.array_acct_attr_code(34) := 'PARTY_SITE_ID';
   l_rec_acct_attrs.array_num_value(34)  := p_source_48;
   l_rec_acct_attrs.array_acct_attr_code(35) := 'PARTY_TYPE';
   l_rec_acct_attrs.array_char_value(35)  := p_source_49;
   l_rec_acct_attrs.array_acct_attr_code(36) := 'REVERSED_DISTRIBUTION_ID1';
   l_rec_acct_attrs.array_num_value(36)  :=  to_char(p_source_50);
   l_rec_acct_attrs.array_acct_attr_code(37) := 'REVERSED_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(37)  := p_source_21;
   l_rec_acct_attrs.array_acct_attr_code(38) := 'TAX_LINE_REF_ID';
   l_rec_acct_attrs.array_num_value(38)  := p_source_52;
   l_rec_acct_attrs.array_acct_attr_code(39) := 'TAX_REC_NREC_DIST_REF_ID';
   l_rec_acct_attrs.array_num_value(39)  := p_source_53;
   l_rec_acct_attrs.array_acct_attr_code(40) := 'TAX_SUMMARY_LINE_REF_ID';
   l_rec_acct_attrs.array_num_value(40)  := p_source_54;
   l_rec_acct_attrs.array_acct_attr_code(41) := 'UPG_CR_ENC_TYPE_ID';
   l_rec_acct_attrs.array_num_value(41)  := p_source_55;
   l_rec_acct_attrs.array_acct_attr_code(42) := 'UPG_DR_ENC_TYPE_ID';
   l_rec_acct_attrs.array_num_value(42)  := p_source_56;

   XLA_AE_LINES_PKG.SetLineAcctAttrs(l_rec_acct_attrs);
   p_gain_or_loss_ref  := XLA_AE_LINES_PKG.g_rec_lines.array_gain_or_loss_ref(XLA_AE_LINES_PKG.g_LineNumber);

   ---------------------------------------------------------------------------------------------------------------
   -- 4336173 -- assign Business Flow Class (replace code in xla_ae_lines_pkg.Business_Flow_Validation)
   ---------------------------------------------------------------------------------------------------------------
   XLA_AE_LINES_PKG.g_rec_lines.array_business_class_code(XLA_AE_LINES_PKG.g_LineNumber) := l_bflow_class_code;

   l_actual_upg_option  := XLA_AE_LINES_PKG.g_rec_lines.array_actual_upg_option(XLA_AE_LINES_PKG.g_LineNumber);
   l_enc_upg_option     := XLA_AE_LINES_PKG.g_rec_lines.array_enc_upg_option(XLA_AE_LINES_PKG.g_LineNumber);

   IF xla_accounting_cache_pkg.GetValueChar
         (p_source_code         => 'LEDGER_CATEGORY_CODE'
         ,p_target_ledger_id    => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id) IN ('PRIMARY','ALC')
   AND l_bflow_method_code = 'PRIOR_ENTRY'
--   AND (l_actual_upg_option = 'Y' OR l_enc_upg_option = 'Y') Bug 4922099
   AND ( (NVL(l_actual_upg_option, 'N') IN ('Y', 'O')) OR
         (NVL(l_enc_upg_option, 'N') IN ('Y', 'O'))
       )
   THEN
         xla_ae_lines_pkg.BflowUpgEntry
           (p_business_method_code    => l_bflow_method_code
           ,p_business_class_code     => l_bflow_class_code
           ,p_balance_type            => l_balance_type_code);
   ELSE
      NULL;
-- No business flow processing for business flow method of NONE.
   END IF;

   --
   -- call analytical criteria
   --
   
   --
   -- call description
   --
   
xla_ae_lines_pkg.SetLineDescription(
   p_ae_header_id => l_ae_header_id
  ,p_description  => Description_2 (
     p_application_id         => p_application_id
   , p_ae_header_id           => l_ae_header_id 
, p_source_1 => p_source_1
   )
);


   --
   -- call ADRs
   -- Bug 4922099
   --
   IF ( (l_bflow_method_code <> 'PRIOR_ENTRY') OR
        (NVL(l_actual_upg_option, 'N') = 'O') OR
        (NVL(l_enc_upg_option, 'N') = 'O')
      )
   THEN
   NULL;
   --
   --
   
  l_ccid := AcctDerRule_7(
           p_application_id           => p_application_id
         , p_ae_header_id             => l_ae_header_id 
, p_source_11 => p_source_11
         , x_transaction_coa_id       => l_adr_transaction_coa_id
         , x_accounting_coa_id        => l_adr_accounting_coa_id
         , x_value_type_code          => l_adr_value_type_code
         , p_side                     => 'NA'
   );

   xla_ae_lines_pkg.set_ccid(
    p_code_combination_id          => l_ccid
  , p_value_type_code              => l_adr_value_type_code
  , p_transaction_coa_id           => l_adr_transaction_coa_id
  , p_accounting_coa_id            => l_adr_accounting_coa_id
  , p_adr_code                     => 'AP_INVOICE_DIST'
  , p_adr_type_code                => 'S'
  , p_component_type               => l_component_type
  , p_component_code               => l_component_code
  , p_component_type_code          => l_component_type_code
  , p_component_appl_id            => l_component_appl_id
  , p_amb_context_code             => l_amb_context_code
  , p_side                         => 'NA'
  );


   --
   --
   END IF;
   --
   -- Bug 4922099
   IF ( ( (NVL(l_actual_upg_option, 'N') = 'O') OR
          (NVL(l_enc_upg_option, 'N') = 'O')
        ) AND
        (l_bflow_method_code = 'PRIOR_ENTRY')
      )
   THEN
      IF
      --
      1 = 2
      --
      THEN
      xla_accounting_err_pkg.build_message
                                    (p_appli_s_name            => 'XLA'
                                    ,p_msg_name                => 'XLA_UPG_OVERRIDE_ADR_UNDEFINED'
                                    ,p_token_1                 => 'LINE_NUMBER'
                                    ,p_value_1                 => XLA_AE_LINES_PKG.g_LineNumber
                                    ,p_token_2                 => 'LINE_TYPE_NAME'
                                    ,p_value_2                 => XLA_AE_SOURCES_PKG.GetComponentName (
                                                                             l_component_type
                                                                            ,l_component_code
                                                                            ,l_component_type_code
                                                                            ,l_component_appl_id
                                                                            ,l_amb_context_code
                                                                            ,l_entity_code
                                                                            ,l_event_class_code
                                                                           )
                                    ,p_token_3                 => 'OWNER'
                                    ,p_value_3                 => xla_lookups_pkg.get_meaning(
                                                                          p_lookup_type     => 'XLA_OWNER_TYPE'
                                                                          ,p_lookup_code    => l_component_type_code
                                                                         )
                                    ,p_token_4                 => 'PRODUCT_NAME'
                                    ,p_value_4                 => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.application_name
                                    ,p_entity_id               => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.entity_id
                                    ,p_event_id                => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.event_id
                                    ,p_ledger_id               => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id
                                    ,p_ae_header_id            =>  NULL
                                       );

        IF (C_LEVEL_ERROR>= g_log_level) THEN
                 trace
                      (p_msg      => 'ERROR: XLA_UPG_OVERRIDE_ADR_UNDEFINED'
                      ,p_level    => C_LEVEL_ERROR
                      ,p_module   => l_log_module);
        END IF;
      END IF;
   END IF;
   --
   --
   ------------------------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- NOTE: XLA_AE_LINES_PKG.ValidateCurrentLine should NOT be generated if business flow method is
   -- Prior Entry.  Currently, the following code is always generated.
   ------------------------------------------------------------------------------------------------
   XLA_AE_LINES_PKG.ValidateCurrentLine;

   ------------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- Populated credit and debit amounts -- Need to generate this within IF <condition>
   ------------------------------------------------------------------------------------
   XLA_AE_LINES_PKG.SetDebitCreditAmounts;

   ----------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- Update journal entry status -- Need to generate this within IF <condition>
   ----------------------------------------------------------------------------------
   XLA_AE_JOURNAL_ENTRY_PKG.UpdateJournalEntryStatus
         (p_hdr_idx => g_array_event(p_event_id).array_value_num('header_index')
         ,p_balance_type_code => l_balance_type_code
         );

   -------------------------------------------------------------------------------------------
   -- 4262811 - Generate the Accrual Reversal lines
   -------------------------------------------------------------------------------------------
   BEGIN
      l_acc_rev_flag := XLA_AE_HEADER_PKG.g_rec_header_new.array_accrual_reversal_flag
                              (g_array_event(p_event_id).array_value_num('header_index'));
      IF l_acc_rev_flag IS NULL THEN
         l_acc_rev_flag := 'N';
      END IF;
   EXCEPTION
      WHEN OTHERS THEN
         l_acc_rev_flag := 'N';
   END;
   --
   IF (l_acc_rev_flag = 'Y') THEN

       -- 4645092  ------------------------------------------------------------------------------
       -- To allow MPA report to determine if it should generate report process
       XLA_ACCOUNTING_PKG.g_mpa_accrual_exists := 'Y';
       ------------------------------------------------------------------------------------------

       l_accrual_line_num := XLA_AE_LINES_PKG.g_LineNumber;
       XLA_AE_LINES_PKG.CopyLineInfo(l_accrual_line_num);
   -- added call to set_ccid to execute mapping  for secondary accrual reversal entries bug 7444204
   -- call ADRs
   -- Bug 4922099
   --
   IF ( (l_bflow_method_code <> 'PRIOR_ENTRY') OR
        (NVL(l_actual_upg_option, 'N') = 'O') OR
        (NVL(l_enc_upg_option, 'N') = 'O')
      )
   THEN
   NULL;
   --
   --
   
  l_ccid := AcctDerRule_7(
           p_application_id           => p_application_id
         , p_ae_header_id             => l_ae_header_id 
, p_source_11 => p_source_11
         , x_transaction_coa_id       => l_adr_transaction_coa_id
         , x_accounting_coa_id        => l_adr_accounting_coa_id
         , x_value_type_code          => l_adr_value_type_code
         , p_side                     => 'NA'
   );

   xla_ae_lines_pkg.set_ccid(
    p_code_combination_id          => l_ccid
  , p_value_type_code              => l_adr_value_type_code
  , p_transaction_coa_id           => l_adr_transaction_coa_id
  , p_accounting_coa_id            => l_adr_accounting_coa_id
  , p_adr_code                     => 'AP_INVOICE_DIST'
  , p_adr_type_code                => 'S'
  , p_component_type               => l_component_type
  , p_component_code               => l_component_code
  , p_component_type_code          => l_component_type_code
  , p_component_appl_id            => l_component_appl_id
  , p_amb_context_code             => l_amb_context_code
  , p_side                         => 'NA'
  );


   --
   --
   END IF;

       --
       -- Update the line information that should be overwritten
       --
       XLA_AE_LINES_PKG.set_ae_header_id(p_ae_header_id => p_event_id ,
                                         p_header_num   => 1);
       XLA_AE_LINES_PKG.g_rec_lines.array_header_num(XLA_AE_LINES_PKG.g_LineNumber)  :=1;

       XLA_AE_LINES_PKG.g_rec_lines.array_business_class_code(XLA_AE_LINES_PKG.g_LineNumber) := NULL; -- 4669271

       IF l_bflow_method_code <> 'NONE' THEN  -- 4655713b
          XLA_AE_LINES_PKG.g_rec_lines.array_reversal_code(XLA_AE_LINES_PKG.g_LineNumber) := CONCAT('MPA_',l_bflow_method_code);
       END IF;

      --
      -- Depending on the Reversal Method setup, do a switch side or changes sign for the amounts
      --
      IF (XLA_AE_JOURNAL_ENTRY_PKG.g_cache_ledgers_info.ledger_reversal_option = 'SIDE') THEN
          XLA_AE_LINES_PKG.g_rec_lines.array_natural_side_code(XLA_AE_LINES_PKG.g_LineNumber) :=  l_acc_rev_natural_side_code;
      ELSE
          ---------------------------------------------------------------------------------------------------
          -- 4262811a Switch Sign
          ---------------------------------------------------------------------------------------------------
          XLA_AE_LINES_PKG.g_rec_lines.array_switch_side_flag(XLA_AE_LINES_PKG.g_LineNumber) := 'N';  -- 5052518
          XLA_AE_LINES_PKG.g_rec_lines.array_ledger_amount(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_ledger_amount(XLA_AE_LINES_PKG.g_LineNumber) * -1;
          XLA_AE_LINES_PKG.g_rec_lines.array_entered_amount(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_entered_amount(XLA_AE_LINES_PKG.g_LineNumber) * -1;
          -- 5132302
          XLA_AE_LINES_PKG.g_rec_lines.array_bflow_applied_to_amt(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_bflow_applied_to_amt(XLA_AE_LINES_PKG.g_LineNumber) * -1;

      END IF;

      -- 4955764
      XLA_AE_LINES_PKG.g_rec_lines.array_gl_date(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_HEADER_PKG.g_rec_header_new.array_gl_date(g_array_event(p_event_id).array_value_num('acc_rev_header_index'));


      XLA_AE_LINES_PKG.ValidateCurrentLine;
      XLA_AE_LINES_PKG.SetDebitCreditAmounts;

      XLA_AE_JOURNAL_ENTRY_PKG.UpdateJournalEntryStatus
               (p_hdr_idx           => g_array_event(p_event_id).array_value_num('acc_rev_header_index')
               ,p_balance_type_code => l_balance_type_code);

   END IF;

   -----------------------------------------------------------------------------------------
   -- 4262811 Multiperiod Accounting
   -----------------------------------------------------------------------------------------
     -- No MPA option is assigned.


END IF;
END IF;
--

--
IF (C_LEVEL_PROCEDURE >= g_log_level) THEN
   trace
      (p_msg      => 'END of AcctLineType_42'
      ,p_level    => C_LEVEL_PROCEDURE
      ,p_module   => l_log_module);
END IF;
--
EXCEPTION
  WHEN xla_exceptions_pkg.application_exception THEN
      RAISE;
  WHEN OTHERS THEN
       xla_exceptions_pkg.raise_message
           (p_location => 'XLA_00200_AAD_S_000010_BC_PKG.AcctLineType_42');
END AcctLineType_42;
--

---------------------------------------
--
-- PRIVATE FUNCTION
--         AcctLineType_43
--
---------------------------------------
PROCEDURE AcctLineType_43 (
  p_application_id        IN NUMBER
 ,p_event_id              IN NUMBER
 ,p_calculate_acctd_flag  IN VARCHAR2
 ,p_calculate_g_l_flag    IN VARCHAR2
 ,p_actual_flag           IN OUT VARCHAR2
 ,p_balance_type_code     OUT VARCHAR2
 ,p_gain_or_loss_ref      OUT VARCHAR2
 
--Invoice Distribution Description
 , p_source_1            IN VARCHAR2
--Invoice Distribution Account
 , p_source_11            IN NUMBER
--Invoice Distribution Type
 , p_source_15            IN VARCHAR2
 , p_source_15_meaning    IN VARCHAR2
--Purchasing Encumbrance Option
 , p_source_17            IN VARCHAR2
 , p_source_17_meaning    IN VARCHAR2
--Accounting Reversal Indicator
 , p_source_19            IN VARCHAR2
--Distribution Link Type
 , p_source_21            IN VARCHAR2
--Allocation to Main Distribution Identifier
 , p_source_23            IN NUMBER
--Invoice Identifier
 , p_source_24            IN NUMBER
--Business Flow Accounts Payable Application Identifier
 , p_source_25            IN NUMBER
--Business Flow Invoice Distribution Type
 , p_source_26            IN VARCHAR2
--Business Flow Invoice Entity Code
 , p_source_27            IN VARCHAR2
--Business Flow Invoice Distribution Identifier
 , p_source_28            IN NUMBER
--Business Flow Invoice Identifier
 , p_source_29            IN NUMBER
--Invoice Distribution Identifier
 , p_source_30            IN NUMBER
--Payables Encumbrance Upgrade Credit Account
 , p_source_31            IN NUMBER
--Payables Encumbrance Upgrade Credit Amount
 , p_source_32            IN NUMBER
--Invoice Currency Code
 , p_source_33            IN VARCHAR2
--Payables Encumbrance Upgrade Credit Base Amount
 , p_source_34            IN NUMBER
--Payables Encumbrance Upgrade Debit Account
 , p_source_35            IN NUMBER
--Payables Encumbrance Upgrade Debit Amount
 , p_source_36            IN NUMBER
--Payables Encumbrance Upgrade Debit Base Amount
 , p_source_37            IN NUMBER
--Payables Encumbrance Upgrade Option
 , p_source_38            IN VARCHAR2
--Invoice Exchange Date
 , p_source_39            IN DATE
--Invoice Exchange Rate
 , p_source_40            IN NUMBER
--Invoice Exchange Rate Type
 , p_source_41            IN VARCHAR2
--Deferred Accounting End Date
 , p_source_43            IN DATE
--Deferred Accounting Option
 , p_source_44            IN VARCHAR2
--Deferred Accounting Start Date
 , p_source_45            IN DATE
--Override Accounted Amount Indicator
 , p_source_46            IN VARCHAR2
 , p_source_46_meaning    IN VARCHAR2
--Invoice Supplier Identifier
 , p_source_47            IN NUMBER
--Invoice Supplier Site Identifier
 , p_source_48            IN NUMBER
--Third Party Type
 , p_source_49            IN VARCHAR2
--Parent Reversal Identifier
 , p_source_50            IN NUMBER
--Invoice Distribution Statistical Amount
 , p_source_51            IN NUMBER
--Invoice Distribution Tax Line Identifier
 , p_source_52            IN NUMBER
--Invoice Distribution Tax Distribution Identifier from Tax
 , p_source_53            IN NUMBER
--Invoice Distribution Summary Tax Line Identifier
 , p_source_54            IN NUMBER
--Payables Upgrade Credit Encumbrance Type Identifier
 , p_source_55            IN NUMBER
--Payables Upgrade Debit Encumbrance Type Identifier
 , p_source_56            IN NUMBER
--Invoice Distribution Amount
 , p_source_57            IN NUMBER
--Invoice Distribution Encumbrance Amount
 , p_source_65            IN NUMBER
--Invoice Distribution Encumbrance Ledger Amount
 , p_source_66            IN NUMBER
)
IS

l_component_type              VARCHAR2(80);
l_component_code              VARCHAR2(30);
l_component_type_code         VARCHAR2(1);
l_component_appl_id           INTEGER;
l_amb_context_code            VARCHAR2(30);
l_entity_code                 VARCHAR2(30);
l_event_class_code            VARCHAR2(30);
l_ae_header_id                NUMBER;
l_event_type_code             VARCHAR2(30);
l_line_definition_code        VARCHAR2(30);
l_line_definition_owner_code  VARCHAR2(1);
--
-- adr variables
l_segment                     VARCHAR2(30);
l_ccid                        NUMBER;
l_adr_transaction_coa_id      NUMBER;
l_adr_accounting_coa_id       NUMBER;
l_adr_flexfield_segment_code  VARCHAR2(30);
l_adr_flex_value_set_id       NUMBER;
l_adr_value_type_code         VARCHAR2(30);
l_adr_value_combination_id    NUMBER;
l_adr_value_segment_code      VARCHAR2(30);

l_bflow_method_code           VARCHAR2(30);  -- 4219869 Business Flow
l_bflow_class_code            VARCHAR2(30);  -- 4219869 Business Flow
l_inherit_desc_flag           VARCHAR2(1);   -- 4219869 Business Flow
l_budgetary_control_flag      VARCHAR2(1);   -- 4458381 Public Sector Enh

-- 4262811 Variables ------------------------------------------------------------------------------------------
l_entered_amt_idx             NUMBER;
l_accted_amt_idx              NUMBER;
l_acc_rev_flag                VARCHAR2(1);
l_accrual_line_num            NUMBER;
l_tmp_amt                     NUMBER;
l_acc_rev_natural_side_code   VARCHAR2(1);

l_num_entries                 NUMBER;
l_gl_dates                    xla_ae_journal_entry_pkg.t_array_date;
l_accted_amts                 xla_ae_journal_entry_pkg.t_array_num;
l_entered_amts                xla_ae_journal_entry_pkg.t_array_num;
l_period_names                xla_ae_journal_entry_pkg.t_array_V15L;
l_recog_line_1                NUMBER;
l_recog_line_2                NUMBER;

l_bflow_applied_to_amt_idx    NUMBER;                                -- 5132302
l_bflow_applied_to_amt        NUMBER;                                -- 5132302
l_bflow_applied_to_amts       xla_ae_journal_entry_pkg.t_array_num;  -- 5132302

l_event_id                    NUMBER;  -- To handle MPA header Description: xla_ae_header_pkg.SetHdrDescription

--l_rounding_ccy                VARCHAR2(15); -- To handle MPA rounding  4262811b
l_same_currency               BOOLEAN;        -- To handle MPA rounding  4262811b

---------------------------------------------------------------------------------------------------------------


--
-- bulk performance
--
l_balance_type_code           VARCHAR2(1);
l_rec_acct_attrs              XLA_AE_LINES_PKG.t_rec_acct_attrs;
l_log_module                  VARCHAR2(240);

--
-- Upgrade strategy
--
l_actual_upg_option           VARCHAR2(1);
l_enc_upg_option           VARCHAR2(1);

--
BEGIN
--
IF g_log_enabled THEN
      l_log_module := C_DEFAULT_MODULE||'.AcctLineType_43';
END IF;
--
IF (C_LEVEL_PROCEDURE >= g_log_level) THEN

      trace
         (p_msg      => 'BEGIN of AcctLineType_43'
         ,p_level    => C_LEVEL_PROCEDURE
         ,p_module   => l_log_module);

END IF;
--
l_component_type             := 'AMB_JLT';
l_component_code             := 'AP_MISC_EXPENSE_INV_ENC_DR';
l_component_type_code        := 'S';
l_component_appl_id          :=  200;
l_amb_context_code           := 'DEFAULT';
l_entity_code                := 'AP_INVOICES';
l_event_class_code           := 'INVOICES';
l_event_type_code            := 'INVOICES_ALL';
l_line_definition_owner_code := 'S';
l_line_definition_code       := 'ENC_INVOICES_ALL';
--
l_balance_type_code          := 'E';
l_segment                     := NULL;
l_ccid                        := NULL;
l_adr_transaction_coa_id      := NULL;
l_adr_accounting_coa_id       := NULL;
l_adr_flexfield_segment_code  := NULL;
l_adr_flex_value_set_id       := NULL;
l_adr_value_type_code         := NULL;
l_adr_value_combination_id    := NULL;
l_adr_value_segment_code      := NULL;

l_bflow_method_code          := 'NONE';   -- 4219869 Business Flow
l_bflow_class_code           := 'AP_INV_ENCUM';    -- 4219869 Business Flow
l_inherit_desc_flag          := 'N';   -- 4219869 Business Flow
l_budgetary_control_flag     := 'Y';

l_bflow_applied_to_amt_idx   := NULL; -- 5132302
l_bflow_applied_to_amt       := NULL; -- 5132302
l_entered_amt_idx            := NULL;          -- 4262811
l_accted_amt_idx             := NULL;          -- 4262811
l_acc_rev_flag               := NULL;          -- 4262811
l_accrual_line_num           := NULL;          -- 4262811
l_tmp_amt                    := NULL;          -- 4262811
--
 
IF XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id = XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.ledger_id OR
    l_balance_type_code <> 'B' THEN
IF NVL(p_source_15,'
') =  'MISCELLANEOUS' AND 
NVL(p_source_17,'
') =  'Y'
 THEN 

   --
   XLA_AE_LINES_PKG.SetNewLine;

   p_balance_type_code          := l_balance_type_code;
   -- set the flag so later we will know whether the gain loss line needs to be created
   
   IF(l_balance_type_code = 'A' and p_actual_flag is null) THEN
     p_actual_flag :='A';
   END IF;

   --
   -- bulk performance
   --
   XLA_AE_LINES_PKG.set_ae_header_id (p_ae_header_id => p_event_id ,
                                      p_header_num   => 0); -- 4262811
   --
   -- set accounting line options
   --
   l_ae_header_id:= xla_ae_lines_pkg.SetAcctLineOption(
           p_natural_side_code          => 'D'
         , p_gain_or_loss_flag          => 'N'
         , p_gl_transfer_mode_code      => 'S'
         , p_acct_entry_type_code       => 'E'
         , p_switch_side_flag           => 'Y'
         , p_merge_duplicate_code       => 'N'
         );
   --
   l_acc_rev_natural_side_code := 'C';  -- 4262811
   -- 
   --
   -- set accounting line type info
   --
   xla_ae_lines_pkg.SetAcctLineType
      (p_component_type             => l_component_type
      ,p_event_type_code            => l_event_type_code
      ,p_line_definition_owner_code => l_line_definition_owner_code
      ,p_line_definition_code       => l_line_definition_code
      ,p_accounting_line_code       => l_component_code
      ,p_accounting_line_type_code  => l_component_type_code
      ,p_accounting_line_appl_id    => l_component_appl_id
      ,p_amb_context_code           => l_amb_context_code
      ,p_entity_code                => l_entity_code
      ,p_event_class_code           => l_event_class_code);
   --
   -- set accounting class
   --
   xla_ae_lines_pkg.SetAcctClass(
           p_accounting_class_code  => 'MISCELLANEOUS EXPENSE'
         , p_ae_header_id           => l_ae_header_id
         );

   --
   -- set rounding class
   --
   XLA_AE_LINES_PKG.g_rec_lines.array_rounding_class(XLA_AE_LINES_PKG.g_LineNumber) :=
                      'MISCELLANEOUS EXPENSE';

   --
   xla_ae_lines_pkg.g_rec_lines.array_calculate_acctd_flag(xla_ae_lines_pkg.g_LineNumber) := p_calculate_acctd_flag;
   xla_ae_lines_pkg.g_rec_lines.array_calculate_g_l_flag(xla_ae_lines_pkg.g_LineNumber) := p_calculate_g_l_flag;
   --
   -- bulk performance
   --
   XLA_AE_LINES_PKG.g_rec_lines.array_balance_type_code(XLA_AE_LINES_PKG.g_LineNumber) := l_balance_type_code;

   XLA_AE_LINES_PKG.g_rec_lines.array_ledger_id(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id;

   -- 4955764
   XLA_AE_LINES_PKG.g_rec_lines.array_gl_date(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_HEADER_PKG.g_rec_header_new.array_gl_date(g_array_event(p_event_id).array_value_num('header_index'));

   -- 4458381 Public Sector Enh
      XLA_AE_LINES_PKG.g_rec_lines.array_encumbrance_type_id(XLA_AE_LINES_PKG.g_LineNumber) := 1060;
   --
   -- set accounting attributes for the line type
   --
   l_entered_amt_idx := 24;
   l_accted_amt_idx  := 29;
   l_bflow_applied_to_amt_idx  := 7;  -- 5132302
   l_rec_acct_attrs.array_acct_attr_code(1) := 'ACCOUNTING_REVERSAL_OPTION';
   l_rec_acct_attrs.array_char_value(1)  := p_source_19;
   l_rec_acct_attrs.array_acct_attr_code(2) := 'ALLOC_TO_APPLICATION_ID';
   l_rec_acct_attrs.array_num_value(2)  := 
xla_ae_sources_pkg.GetSystemSourceNum(
   p_source_code           => 'XLA_EVENT_APPL_ID'
 , p_source_type_code      => 'Y'
 , p_source_application_id =>  602
);
   l_rec_acct_attrs.array_acct_attr_code(3) := 'ALLOC_TO_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(3)  := p_source_21;
   l_rec_acct_attrs.array_acct_attr_code(4) := 'ALLOC_TO_ENTITY_CODE';
   l_rec_acct_attrs.array_char_value(4)  := 
xla_ae_sources_pkg.GetSystemSourceChar(
   p_source_code           => 'XLA_ENTITY_CODE'
 , p_source_type_code      => 'Y'
 , p_source_application_id =>  602
);
   l_rec_acct_attrs.array_acct_attr_code(5) := 'ALLOC_TO_FIRST_DIST_ID';
   l_rec_acct_attrs.array_num_value(5)  :=  to_char(p_source_23);
   l_rec_acct_attrs.array_acct_attr_code(6) := 'ALLOC_TO_FIRST_SYS_TRAN_ID';
   l_rec_acct_attrs.array_num_value(6)  :=  to_char(p_source_24);
   l_rec_acct_attrs.array_acct_attr_code(7) := 'APPLIED_TO_AMOUNT';
   l_rec_acct_attrs.array_num_value(7)  := p_source_57;
   l_rec_acct_attrs.array_acct_attr_code(8) := 'APPLIED_TO_APPLICATION_ID';
   l_rec_acct_attrs.array_num_value(8)  := p_source_25;
   l_rec_acct_attrs.array_acct_attr_code(9) := 'APPLIED_TO_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(9)  := p_source_26;
   l_rec_acct_attrs.array_acct_attr_code(10) := 'APPLIED_TO_ENTITY_CODE';
   l_rec_acct_attrs.array_char_value(10)  := p_source_27;
   l_rec_acct_attrs.array_acct_attr_code(11) := 'APPLIED_TO_FIRST_DIST_ID';
   l_rec_acct_attrs.array_num_value(11)  :=  to_char(p_source_28);
   l_rec_acct_attrs.array_acct_attr_code(12) := 'APPLIED_TO_FIRST_SYS_TRAN_ID';
   l_rec_acct_attrs.array_num_value(12)  :=  to_char(p_source_29);
   l_rec_acct_attrs.array_acct_attr_code(13) := 'DISTRIBUTION_IDENTIFIER_1';
   l_rec_acct_attrs.array_num_value(13)  :=  to_char(p_source_30);
   l_rec_acct_attrs.array_acct_attr_code(14) := 'DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(14)  := p_source_21;
   l_rec_acct_attrs.array_acct_attr_code(15) := 'ENC_UPG_CR_CCID';
   l_rec_acct_attrs.array_num_value(15)  := p_source_31;
   l_rec_acct_attrs.array_acct_attr_code(16) := 'ENC_UPG_CR_ENTERED_AMT';
   l_rec_acct_attrs.array_num_value(16)  := p_source_32;
   l_rec_acct_attrs.array_acct_attr_code(17) := 'ENC_UPG_CR_ENTERED_CURR';
   l_rec_acct_attrs.array_char_value(17)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(18) := 'ENC_UPG_CR_LEDGER_AMT';
   l_rec_acct_attrs.array_num_value(18)  := p_source_34;
   l_rec_acct_attrs.array_acct_attr_code(19) := 'ENC_UPG_DR_CCID';
   l_rec_acct_attrs.array_num_value(19)  := p_source_35;
   l_rec_acct_attrs.array_acct_attr_code(20) := 'ENC_UPG_DR_ENTERED_AMT';
   l_rec_acct_attrs.array_num_value(20)  := p_source_36;
   l_rec_acct_attrs.array_acct_attr_code(21) := 'ENC_UPG_DR_ENTERED_CURR';
   l_rec_acct_attrs.array_char_value(21)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(22) := 'ENC_UPG_DR_LEDGER_AMT';
   l_rec_acct_attrs.array_num_value(22)  := p_source_37;
   l_rec_acct_attrs.array_acct_attr_code(23) := 'ENC_UPG_OPTION';
   l_rec_acct_attrs.array_char_value(23)  := p_source_38;
   l_rec_acct_attrs.array_acct_attr_code(24) := 'ENTERED_CURRENCY_AMOUNT';
   l_rec_acct_attrs.array_num_value(24)  := p_source_65;
   l_rec_acct_attrs.array_acct_attr_code(25) := 'ENTERED_CURRENCY_CODE';
   l_rec_acct_attrs.array_char_value(25)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(26) := 'EXCHANGE_DATE';
   l_rec_acct_attrs.array_date_value(26)  := p_source_39;
   l_rec_acct_attrs.array_acct_attr_code(27) := 'EXCHANGE_RATE';
   l_rec_acct_attrs.array_num_value(27)  := p_source_40;
   l_rec_acct_attrs.array_acct_attr_code(28) := 'EXCHANGE_RATE_TYPE';
   l_rec_acct_attrs.array_char_value(28)  := p_source_41;
   l_rec_acct_attrs.array_acct_attr_code(29) := 'LEDGER_AMOUNT';
   l_rec_acct_attrs.array_num_value(29)  := p_source_66;
   l_rec_acct_attrs.array_acct_attr_code(30) := 'MULTIPERIOD_END_DATE';
   l_rec_acct_attrs.array_date_value(30)  := p_source_43;
   l_rec_acct_attrs.array_acct_attr_code(31) := 'MULTIPERIOD_OPTION';
   l_rec_acct_attrs.array_char_value(31)  := p_source_44;
   l_rec_acct_attrs.array_acct_attr_code(32) := 'MULTIPERIOD_START_DATE';
   l_rec_acct_attrs.array_date_value(32)  := p_source_45;
   l_rec_acct_attrs.array_acct_attr_code(33) := 'OVERRIDE_ACCTD_AMT_FLAG';
   l_rec_acct_attrs.array_char_value(33)  := p_source_46;
   l_rec_acct_attrs.array_acct_attr_code(34) := 'PARTY_ID';
   l_rec_acct_attrs.array_num_value(34)  := p_source_47;
   l_rec_acct_attrs.array_acct_attr_code(35) := 'PARTY_SITE_ID';
   l_rec_acct_attrs.array_num_value(35)  := p_source_48;
   l_rec_acct_attrs.array_acct_attr_code(36) := 'PARTY_TYPE';
   l_rec_acct_attrs.array_char_value(36)  := p_source_49;
   l_rec_acct_attrs.array_acct_attr_code(37) := 'REVERSED_DISTRIBUTION_ID1';
   l_rec_acct_attrs.array_num_value(37)  :=  to_char(p_source_50);
   l_rec_acct_attrs.array_acct_attr_code(38) := 'REVERSED_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(38)  := p_source_21;
   l_rec_acct_attrs.array_acct_attr_code(39) := 'STATISTICAL_AMOUNT';
   l_rec_acct_attrs.array_num_value(39)  := p_source_51;
   l_rec_acct_attrs.array_acct_attr_code(40) := 'TAX_LINE_REF_ID';
   l_rec_acct_attrs.array_num_value(40)  := p_source_52;
   l_rec_acct_attrs.array_acct_attr_code(41) := 'TAX_REC_NREC_DIST_REF_ID';
   l_rec_acct_attrs.array_num_value(41)  := p_source_53;
   l_rec_acct_attrs.array_acct_attr_code(42) := 'TAX_SUMMARY_LINE_REF_ID';
   l_rec_acct_attrs.array_num_value(42)  := p_source_54;
   l_rec_acct_attrs.array_acct_attr_code(43) := 'UPG_CR_ENC_TYPE_ID';
   l_rec_acct_attrs.array_num_value(43)  := p_source_55;
   l_rec_acct_attrs.array_acct_attr_code(44) := 'UPG_DR_ENC_TYPE_ID';
   l_rec_acct_attrs.array_num_value(44)  := p_source_56;

   XLA_AE_LINES_PKG.SetLineAcctAttrs(l_rec_acct_attrs);
   p_gain_or_loss_ref  := XLA_AE_LINES_PKG.g_rec_lines.array_gain_or_loss_ref(XLA_AE_LINES_PKG.g_LineNumber);

   ---------------------------------------------------------------------------------------------------------------
   -- 4336173 -- assign Business Flow Class (replace code in xla_ae_lines_pkg.Business_Flow_Validation)
   ---------------------------------------------------------------------------------------------------------------
   XLA_AE_LINES_PKG.g_rec_lines.array_business_class_code(XLA_AE_LINES_PKG.g_LineNumber) := l_bflow_class_code;

   l_actual_upg_option  := XLA_AE_LINES_PKG.g_rec_lines.array_actual_upg_option(XLA_AE_LINES_PKG.g_LineNumber);
   l_enc_upg_option     := XLA_AE_LINES_PKG.g_rec_lines.array_enc_upg_option(XLA_AE_LINES_PKG.g_LineNumber);

   IF xla_accounting_cache_pkg.GetValueChar
         (p_source_code         => 'LEDGER_CATEGORY_CODE'
         ,p_target_ledger_id    => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id) IN ('PRIMARY','ALC')
   AND l_bflow_method_code = 'PRIOR_ENTRY'
--   AND (l_actual_upg_option = 'Y' OR l_enc_upg_option = 'Y') Bug 4922099
   AND ( (NVL(l_actual_upg_option, 'N') IN ('Y', 'O')) OR
         (NVL(l_enc_upg_option, 'N') IN ('Y', 'O'))
       )
   THEN
         xla_ae_lines_pkg.BflowUpgEntry
           (p_business_method_code    => l_bflow_method_code
           ,p_business_class_code     => l_bflow_class_code
           ,p_balance_type            => l_balance_type_code);
   ELSE
      NULL;
-- No business flow processing for business flow method of NONE.
   END IF;

   --
   -- call analytical criteria
   --
   
   --
   -- call description
   --
   
xla_ae_lines_pkg.SetLineDescription(
   p_ae_header_id => l_ae_header_id
  ,p_description  => Description_2 (
     p_application_id         => p_application_id
   , p_ae_header_id           => l_ae_header_id 
, p_source_1 => p_source_1
   )
);


   --
   -- call ADRs
   -- Bug 4922099
   --
   IF ( (l_bflow_method_code <> 'PRIOR_ENTRY') OR
        (NVL(l_actual_upg_option, 'N') = 'O') OR
        (NVL(l_enc_upg_option, 'N') = 'O')
      )
   THEN
   NULL;
   --
   --
   
  l_ccid := AcctDerRule_7(
           p_application_id           => p_application_id
         , p_ae_header_id             => l_ae_header_id 
, p_source_11 => p_source_11
         , x_transaction_coa_id       => l_adr_transaction_coa_id
         , x_accounting_coa_id        => l_adr_accounting_coa_id
         , x_value_type_code          => l_adr_value_type_code
         , p_side                     => 'NA'
   );

   xla_ae_lines_pkg.set_ccid(
    p_code_combination_id          => l_ccid
  , p_value_type_code              => l_adr_value_type_code
  , p_transaction_coa_id           => l_adr_transaction_coa_id
  , p_accounting_coa_id            => l_adr_accounting_coa_id
  , p_adr_code                     => 'AP_INVOICE_DIST'
  , p_adr_type_code                => 'S'
  , p_component_type               => l_component_type
  , p_component_code               => l_component_code
  , p_component_type_code          => l_component_type_code
  , p_component_appl_id            => l_component_appl_id
  , p_amb_context_code             => l_amb_context_code
  , p_side                         => 'NA'
  );


   --
   --
   END IF;
   --
   -- Bug 4922099
   IF ( ( (NVL(l_actual_upg_option, 'N') = 'O') OR
          (NVL(l_enc_upg_option, 'N') = 'O')
        ) AND
        (l_bflow_method_code = 'PRIOR_ENTRY')
      )
   THEN
      IF
      --
      1 = 2
      --
      THEN
      xla_accounting_err_pkg.build_message
                                    (p_appli_s_name            => 'XLA'
                                    ,p_msg_name                => 'XLA_UPG_OVERRIDE_ADR_UNDEFINED'
                                    ,p_token_1                 => 'LINE_NUMBER'
                                    ,p_value_1                 => XLA_AE_LINES_PKG.g_LineNumber
                                    ,p_token_2                 => 'LINE_TYPE_NAME'
                                    ,p_value_2                 => XLA_AE_SOURCES_PKG.GetComponentName (
                                                                             l_component_type
                                                                            ,l_component_code
                                                                            ,l_component_type_code
                                                                            ,l_component_appl_id
                                                                            ,l_amb_context_code
                                                                            ,l_entity_code
                                                                            ,l_event_class_code
                                                                           )
                                    ,p_token_3                 => 'OWNER'
                                    ,p_value_3                 => xla_lookups_pkg.get_meaning(
                                                                          p_lookup_type     => 'XLA_OWNER_TYPE'
                                                                          ,p_lookup_code    => l_component_type_code
                                                                         )
                                    ,p_token_4                 => 'PRODUCT_NAME'
                                    ,p_value_4                 => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.application_name
                                    ,p_entity_id               => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.entity_id
                                    ,p_event_id                => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.event_id
                                    ,p_ledger_id               => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id
                                    ,p_ae_header_id            =>  NULL
                                       );

        IF (C_LEVEL_ERROR>= g_log_level) THEN
                 trace
                      (p_msg      => 'ERROR: XLA_UPG_OVERRIDE_ADR_UNDEFINED'
                      ,p_level    => C_LEVEL_ERROR
                      ,p_module   => l_log_module);
        END IF;
      END IF;
   END IF;
   --
   --
   ------------------------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- NOTE: XLA_AE_LINES_PKG.ValidateCurrentLine should NOT be generated if business flow method is
   -- Prior Entry.  Currently, the following code is always generated.
   ------------------------------------------------------------------------------------------------
   XLA_AE_LINES_PKG.ValidateCurrentLine;

   ------------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- Populated credit and debit amounts -- Need to generate this within IF <condition>
   ------------------------------------------------------------------------------------
   XLA_AE_LINES_PKG.SetDebitCreditAmounts;

   ----------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- Update journal entry status -- Need to generate this within IF <condition>
   ----------------------------------------------------------------------------------
   XLA_AE_JOURNAL_ENTRY_PKG.UpdateJournalEntryStatus
         (p_hdr_idx => g_array_event(p_event_id).array_value_num('header_index')
         ,p_balance_type_code => l_balance_type_code
         );

   -------------------------------------------------------------------------------------------
   -- 4262811 - Generate the Accrual Reversal lines
   -------------------------------------------------------------------------------------------
   BEGIN
      l_acc_rev_flag := XLA_AE_HEADER_PKG.g_rec_header_new.array_accrual_reversal_flag
                              (g_array_event(p_event_id).array_value_num('header_index'));
      IF l_acc_rev_flag IS NULL THEN
         l_acc_rev_flag := 'N';
      END IF;
   EXCEPTION
      WHEN OTHERS THEN
         l_acc_rev_flag := 'N';
   END;
   --
   IF (l_acc_rev_flag = 'Y') THEN

       -- 4645092  ------------------------------------------------------------------------------
       -- To allow MPA report to determine if it should generate report process
       XLA_ACCOUNTING_PKG.g_mpa_accrual_exists := 'Y';
       ------------------------------------------------------------------------------------------

       l_accrual_line_num := XLA_AE_LINES_PKG.g_LineNumber;
       XLA_AE_LINES_PKG.CopyLineInfo(l_accrual_line_num);
   -- added call to set_ccid to execute mapping  for secondary accrual reversal entries bug 7444204
   -- call ADRs
   -- Bug 4922099
   --
   IF ( (l_bflow_method_code <> 'PRIOR_ENTRY') OR
        (NVL(l_actual_upg_option, 'N') = 'O') OR
        (NVL(l_enc_upg_option, 'N') = 'O')
      )
   THEN
   NULL;
   --
   --
   
  l_ccid := AcctDerRule_7(
           p_application_id           => p_application_id
         , p_ae_header_id             => l_ae_header_id 
, p_source_11 => p_source_11
         , x_transaction_coa_id       => l_adr_transaction_coa_id
         , x_accounting_coa_id        => l_adr_accounting_coa_id
         , x_value_type_code          => l_adr_value_type_code
         , p_side                     => 'NA'
   );

   xla_ae_lines_pkg.set_ccid(
    p_code_combination_id          => l_ccid
  , p_value_type_code              => l_adr_value_type_code
  , p_transaction_coa_id           => l_adr_transaction_coa_id
  , p_accounting_coa_id            => l_adr_accounting_coa_id
  , p_adr_code                     => 'AP_INVOICE_DIST'
  , p_adr_type_code                => 'S'
  , p_component_type               => l_component_type
  , p_component_code               => l_component_code
  , p_component_type_code          => l_component_type_code
  , p_component_appl_id            => l_component_appl_id
  , p_amb_context_code             => l_amb_context_code
  , p_side                         => 'NA'
  );


   --
   --
   END IF;

       --
       -- Update the line information that should be overwritten
       --
       XLA_AE_LINES_PKG.set_ae_header_id(p_ae_header_id => p_event_id ,
                                         p_header_num   => 1);
       XLA_AE_LINES_PKG.g_rec_lines.array_header_num(XLA_AE_LINES_PKG.g_LineNumber)  :=1;

       XLA_AE_LINES_PKG.g_rec_lines.array_business_class_code(XLA_AE_LINES_PKG.g_LineNumber) := NULL; -- 4669271

       IF l_bflow_method_code <> 'NONE' THEN  -- 4655713b
          XLA_AE_LINES_PKG.g_rec_lines.array_reversal_code(XLA_AE_LINES_PKG.g_LineNumber) := CONCAT('MPA_',l_bflow_method_code);
       END IF;

      --
      -- Depending on the Reversal Method setup, do a switch side or changes sign for the amounts
      --
      IF (XLA_AE_JOURNAL_ENTRY_PKG.g_cache_ledgers_info.ledger_reversal_option = 'SIDE') THEN
          XLA_AE_LINES_PKG.g_rec_lines.array_natural_side_code(XLA_AE_LINES_PKG.g_LineNumber) :=  l_acc_rev_natural_side_code;
      ELSE
          ---------------------------------------------------------------------------------------------------
          -- 4262811a Switch Sign
          ---------------------------------------------------------------------------------------------------
          XLA_AE_LINES_PKG.g_rec_lines.array_switch_side_flag(XLA_AE_LINES_PKG.g_LineNumber) := 'N';  -- 5052518
          XLA_AE_LINES_PKG.g_rec_lines.array_ledger_amount(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_ledger_amount(XLA_AE_LINES_PKG.g_LineNumber) * -1;
          XLA_AE_LINES_PKG.g_rec_lines.array_entered_amount(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_entered_amount(XLA_AE_LINES_PKG.g_LineNumber) * -1;
          -- 5132302
          XLA_AE_LINES_PKG.g_rec_lines.array_bflow_applied_to_amt(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_bflow_applied_to_amt(XLA_AE_LINES_PKG.g_LineNumber) * -1;

      END IF;

      -- 4955764
      XLA_AE_LINES_PKG.g_rec_lines.array_gl_date(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_HEADER_PKG.g_rec_header_new.array_gl_date(g_array_event(p_event_id).array_value_num('acc_rev_header_index'));


      XLA_AE_LINES_PKG.ValidateCurrentLine;
      XLA_AE_LINES_PKG.SetDebitCreditAmounts;

      XLA_AE_JOURNAL_ENTRY_PKG.UpdateJournalEntryStatus
               (p_hdr_idx           => g_array_event(p_event_id).array_value_num('acc_rev_header_index')
               ,p_balance_type_code => l_balance_type_code);

   END IF;

   -----------------------------------------------------------------------------------------
   -- 4262811 Multiperiod Accounting
   -----------------------------------------------------------------------------------------
     -- No MPA option is assigned.


END IF;
END IF;
--

--
IF (C_LEVEL_PROCEDURE >= g_log_level) THEN
   trace
      (p_msg      => 'END of AcctLineType_43'
      ,p_level    => C_LEVEL_PROCEDURE
      ,p_module   => l_log_module);
END IF;
--
EXCEPTION
  WHEN xla_exceptions_pkg.application_exception THEN
      RAISE;
  WHEN OTHERS THEN
       xla_exceptions_pkg.raise_message
           (p_location => 'XLA_00200_AAD_S_000010_BC_PKG.AcctLineType_43');
END AcctLineType_43;
--

---------------------------------------
--
-- PRIVATE FUNCTION
--         AcctLineType_44
--
---------------------------------------
PROCEDURE AcctLineType_44 (
  p_application_id        IN NUMBER
 ,p_event_id              IN NUMBER
 ,p_calculate_acctd_flag  IN VARCHAR2
 ,p_calculate_g_l_flag    IN VARCHAR2
 ,p_actual_flag           IN OUT VARCHAR2
 ,p_balance_type_code     OUT VARCHAR2
 ,p_gain_or_loss_ref      OUT VARCHAR2
 
--Invoice Distribution Description
 , p_source_1            IN VARCHAR2
--Invoice Distribution Account
 , p_source_11            IN NUMBER
--Invoice Distribution Type
 , p_source_15            IN VARCHAR2
 , p_source_15_meaning    IN VARCHAR2
--Purchasing Encumbrance Option
 , p_source_17            IN VARCHAR2
 , p_source_17_meaning    IN VARCHAR2
--Accounting Reversal Indicator
 , p_source_19            IN VARCHAR2
--Distribution Link Type
 , p_source_21            IN VARCHAR2
--Allocation to Main Distribution Identifier
 , p_source_23            IN NUMBER
--Invoice Identifier
 , p_source_24            IN NUMBER
--Business Flow Accounts Payable Application Identifier
 , p_source_25            IN NUMBER
--Business Flow Invoice Distribution Type
 , p_source_26            IN VARCHAR2
--Business Flow Invoice Entity Code
 , p_source_27            IN VARCHAR2
--Business Flow Invoice Distribution Identifier
 , p_source_28            IN NUMBER
--Business Flow Invoice Identifier
 , p_source_29            IN NUMBER
--Invoice Distribution Identifier
 , p_source_30            IN NUMBER
--Payables Encumbrance Upgrade Credit Account
 , p_source_31            IN NUMBER
--Payables Encumbrance Upgrade Credit Amount
 , p_source_32            IN NUMBER
--Invoice Currency Code
 , p_source_33            IN VARCHAR2
--Payables Encumbrance Upgrade Credit Base Amount
 , p_source_34            IN NUMBER
--Payables Encumbrance Upgrade Debit Account
 , p_source_35            IN NUMBER
--Payables Encumbrance Upgrade Debit Amount
 , p_source_36            IN NUMBER
--Payables Encumbrance Upgrade Debit Base Amount
 , p_source_37            IN NUMBER
--Payables Encumbrance Upgrade Option
 , p_source_38            IN VARCHAR2
--Invoice Exchange Date
 , p_source_39            IN DATE
--Invoice Exchange Rate
 , p_source_40            IN NUMBER
--Invoice Exchange Rate Type
 , p_source_41            IN VARCHAR2
--Deferred Accounting End Date
 , p_source_43            IN DATE
--Deferred Accounting Option
 , p_source_44            IN VARCHAR2
--Deferred Accounting Start Date
 , p_source_45            IN DATE
--Override Accounted Amount Indicator
 , p_source_46            IN VARCHAR2
 , p_source_46_meaning    IN VARCHAR2
--Invoice Supplier Identifier
 , p_source_47            IN NUMBER
--Invoice Supplier Site Identifier
 , p_source_48            IN NUMBER
--Third Party Type
 , p_source_49            IN VARCHAR2
--Parent Reversal Identifier
 , p_source_50            IN NUMBER
--Invoice Distribution Statistical Amount
 , p_source_51            IN NUMBER
--Invoice Distribution Tax Line Identifier
 , p_source_52            IN NUMBER
--Invoice Distribution Tax Distribution Identifier from Tax
 , p_source_53            IN NUMBER
--Invoice Distribution Summary Tax Line Identifier
 , p_source_54            IN NUMBER
--Payables Upgrade Credit Encumbrance Type Identifier
 , p_source_55            IN NUMBER
--Payables Upgrade Debit Encumbrance Type Identifier
 , p_source_56            IN NUMBER
--Invoice Distribution Encumbrance Amount
 , p_source_65            IN NUMBER
--Invoice Distribution Encumbrance Ledger Amount
 , p_source_66            IN NUMBER
)
IS

l_component_type              VARCHAR2(80);
l_component_code              VARCHAR2(30);
l_component_type_code         VARCHAR2(1);
l_component_appl_id           INTEGER;
l_amb_context_code            VARCHAR2(30);
l_entity_code                 VARCHAR2(30);
l_event_class_code            VARCHAR2(30);
l_ae_header_id                NUMBER;
l_event_type_code             VARCHAR2(30);
l_line_definition_code        VARCHAR2(30);
l_line_definition_owner_code  VARCHAR2(1);
--
-- adr variables
l_segment                     VARCHAR2(30);
l_ccid                        NUMBER;
l_adr_transaction_coa_id      NUMBER;
l_adr_accounting_coa_id       NUMBER;
l_adr_flexfield_segment_code  VARCHAR2(30);
l_adr_flex_value_set_id       NUMBER;
l_adr_value_type_code         VARCHAR2(30);
l_adr_value_combination_id    NUMBER;
l_adr_value_segment_code      VARCHAR2(30);

l_bflow_method_code           VARCHAR2(30);  -- 4219869 Business Flow
l_bflow_class_code            VARCHAR2(30);  -- 4219869 Business Flow
l_inherit_desc_flag           VARCHAR2(1);   -- 4219869 Business Flow
l_budgetary_control_flag      VARCHAR2(1);   -- 4458381 Public Sector Enh

-- 4262811 Variables ------------------------------------------------------------------------------------------
l_entered_amt_idx             NUMBER;
l_accted_amt_idx              NUMBER;
l_acc_rev_flag                VARCHAR2(1);
l_accrual_line_num            NUMBER;
l_tmp_amt                     NUMBER;
l_acc_rev_natural_side_code   VARCHAR2(1);

l_num_entries                 NUMBER;
l_gl_dates                    xla_ae_journal_entry_pkg.t_array_date;
l_accted_amts                 xla_ae_journal_entry_pkg.t_array_num;
l_entered_amts                xla_ae_journal_entry_pkg.t_array_num;
l_period_names                xla_ae_journal_entry_pkg.t_array_V15L;
l_recog_line_1                NUMBER;
l_recog_line_2                NUMBER;

l_bflow_applied_to_amt_idx    NUMBER;                                -- 5132302
l_bflow_applied_to_amt        NUMBER;                                -- 5132302
l_bflow_applied_to_amts       xla_ae_journal_entry_pkg.t_array_num;  -- 5132302

l_event_id                    NUMBER;  -- To handle MPA header Description: xla_ae_header_pkg.SetHdrDescription

--l_rounding_ccy                VARCHAR2(15); -- To handle MPA rounding  4262811b
l_same_currency               BOOLEAN;        -- To handle MPA rounding  4262811b

---------------------------------------------------------------------------------------------------------------


--
-- bulk performance
--
l_balance_type_code           VARCHAR2(1);
l_rec_acct_attrs              XLA_AE_LINES_PKG.t_rec_acct_attrs;
l_log_module                  VARCHAR2(240);

--
-- Upgrade strategy
--
l_actual_upg_option           VARCHAR2(1);
l_enc_upg_option           VARCHAR2(1);

--
BEGIN
--
IF g_log_enabled THEN
      l_log_module := C_DEFAULT_MODULE||'.AcctLineType_44';
END IF;
--
IF (C_LEVEL_PROCEDURE >= g_log_level) THEN

      trace
         (p_msg      => 'BEGIN of AcctLineType_44'
         ,p_level    => C_LEVEL_PROCEDURE
         ,p_module   => l_log_module);

END IF;
--
l_component_type             := 'AMB_JLT';
l_component_code             := 'AP_MISC_EXPENSE_PP_ENC_DR';
l_component_type_code        := 'S';
l_component_appl_id          :=  200;
l_amb_context_code           := 'DEFAULT';
l_entity_code                := 'AP_INVOICES';
l_event_class_code           := 'PREPAYMENTS';
l_event_type_code            := 'PREPAYMENTS_ALL';
l_line_definition_owner_code := 'S';
l_line_definition_code       := 'ENC_PREPAY_ALL';
--
l_balance_type_code          := 'E';
l_segment                     := NULL;
l_ccid                        := NULL;
l_adr_transaction_coa_id      := NULL;
l_adr_accounting_coa_id       := NULL;
l_adr_flexfield_segment_code  := NULL;
l_adr_flex_value_set_id       := NULL;
l_adr_value_type_code         := NULL;
l_adr_value_combination_id    := NULL;
l_adr_value_segment_code      := NULL;

l_bflow_method_code          := 'NONE';   -- 4219869 Business Flow
l_bflow_class_code           := 'AP_INV_ENCUM';    -- 4219869 Business Flow
l_inherit_desc_flag          := 'N';   -- 4219869 Business Flow
l_budgetary_control_flag     := 'Y';

l_bflow_applied_to_amt_idx   := NULL; -- 5132302
l_bflow_applied_to_amt       := NULL; -- 5132302
l_entered_amt_idx            := NULL;          -- 4262811
l_accted_amt_idx             := NULL;          -- 4262811
l_acc_rev_flag               := NULL;          -- 4262811
l_accrual_line_num           := NULL;          -- 4262811
l_tmp_amt                    := NULL;          -- 4262811
--
 
IF XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id = XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.ledger_id OR
    l_balance_type_code <> 'B' THEN
IF NVL(p_source_15,'
') =  'MISCELLANEOUS' AND 
NVL(p_source_17,'
') =  'Y'
 THEN 

   --
   XLA_AE_LINES_PKG.SetNewLine;

   p_balance_type_code          := l_balance_type_code;
   -- set the flag so later we will know whether the gain loss line needs to be created
   
   IF(l_balance_type_code = 'A' and p_actual_flag is null) THEN
     p_actual_flag :='A';
   END IF;

   --
   -- bulk performance
   --
   XLA_AE_LINES_PKG.set_ae_header_id (p_ae_header_id => p_event_id ,
                                      p_header_num   => 0); -- 4262811
   --
   -- set accounting line options
   --
   l_ae_header_id:= xla_ae_lines_pkg.SetAcctLineOption(
           p_natural_side_code          => 'D'
         , p_gain_or_loss_flag          => 'N'
         , p_gl_transfer_mode_code      => 'S'
         , p_acct_entry_type_code       => 'E'
         , p_switch_side_flag           => 'Y'
         , p_merge_duplicate_code       => 'N'
         );
   --
   l_acc_rev_natural_side_code := 'C';  -- 4262811
   -- 
   --
   -- set accounting line type info
   --
   xla_ae_lines_pkg.SetAcctLineType
      (p_component_type             => l_component_type
      ,p_event_type_code            => l_event_type_code
      ,p_line_definition_owner_code => l_line_definition_owner_code
      ,p_line_definition_code       => l_line_definition_code
      ,p_accounting_line_code       => l_component_code
      ,p_accounting_line_type_code  => l_component_type_code
      ,p_accounting_line_appl_id    => l_component_appl_id
      ,p_amb_context_code           => l_amb_context_code
      ,p_entity_code                => l_entity_code
      ,p_event_class_code           => l_event_class_code);
   --
   -- set accounting class
   --
   xla_ae_lines_pkg.SetAcctClass(
           p_accounting_class_code  => 'MISCELLANEOUS EXPENSE'
         , p_ae_header_id           => l_ae_header_id
         );

   --
   -- set rounding class
   --
   XLA_AE_LINES_PKG.g_rec_lines.array_rounding_class(XLA_AE_LINES_PKG.g_LineNumber) :=
                      'MISCELLANEOUS EXPENSE';

   --
   xla_ae_lines_pkg.g_rec_lines.array_calculate_acctd_flag(xla_ae_lines_pkg.g_LineNumber) := p_calculate_acctd_flag;
   xla_ae_lines_pkg.g_rec_lines.array_calculate_g_l_flag(xla_ae_lines_pkg.g_LineNumber) := p_calculate_g_l_flag;
   --
   -- bulk performance
   --
   XLA_AE_LINES_PKG.g_rec_lines.array_balance_type_code(XLA_AE_LINES_PKG.g_LineNumber) := l_balance_type_code;

   XLA_AE_LINES_PKG.g_rec_lines.array_ledger_id(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id;

   -- 4955764
   XLA_AE_LINES_PKG.g_rec_lines.array_gl_date(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_HEADER_PKG.g_rec_header_new.array_gl_date(g_array_event(p_event_id).array_value_num('header_index'));

   -- 4458381 Public Sector Enh
      XLA_AE_LINES_PKG.g_rec_lines.array_encumbrance_type_id(XLA_AE_LINES_PKG.g_LineNumber) := 1060;
   --
   -- set accounting attributes for the line type
   --
   l_entered_amt_idx := 23;
   l_accted_amt_idx  := 28;
   l_bflow_applied_to_amt_idx  := NULL;  -- 5132302
   l_rec_acct_attrs.array_acct_attr_code(1) := 'ACCOUNTING_REVERSAL_OPTION';
   l_rec_acct_attrs.array_char_value(1)  := p_source_19;
   l_rec_acct_attrs.array_acct_attr_code(2) := 'ALLOC_TO_APPLICATION_ID';
   l_rec_acct_attrs.array_num_value(2)  := 
xla_ae_sources_pkg.GetSystemSourceNum(
   p_source_code           => 'XLA_EVENT_APPL_ID'
 , p_source_type_code      => 'Y'
 , p_source_application_id =>  602
);
   l_rec_acct_attrs.array_acct_attr_code(3) := 'ALLOC_TO_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(3)  := p_source_21;
   l_rec_acct_attrs.array_acct_attr_code(4) := 'ALLOC_TO_ENTITY_CODE';
   l_rec_acct_attrs.array_char_value(4)  := 
xla_ae_sources_pkg.GetSystemSourceChar(
   p_source_code           => 'XLA_ENTITY_CODE'
 , p_source_type_code      => 'Y'
 , p_source_application_id =>  602
);
   l_rec_acct_attrs.array_acct_attr_code(5) := 'ALLOC_TO_FIRST_DIST_ID';
   l_rec_acct_attrs.array_num_value(5)  :=  to_char(p_source_23);
   l_rec_acct_attrs.array_acct_attr_code(6) := 'ALLOC_TO_FIRST_SYS_TRAN_ID';
   l_rec_acct_attrs.array_num_value(6)  :=  to_char(p_source_24);
   l_rec_acct_attrs.array_acct_attr_code(7) := 'APPLIED_TO_APPLICATION_ID';
   l_rec_acct_attrs.array_num_value(7)  := p_source_25;
   l_rec_acct_attrs.array_acct_attr_code(8) := 'APPLIED_TO_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(8)  := p_source_26;
   l_rec_acct_attrs.array_acct_attr_code(9) := 'APPLIED_TO_ENTITY_CODE';
   l_rec_acct_attrs.array_char_value(9)  := p_source_27;
   l_rec_acct_attrs.array_acct_attr_code(10) := 'APPLIED_TO_FIRST_DIST_ID';
   l_rec_acct_attrs.array_num_value(10)  :=  to_char(p_source_28);
   l_rec_acct_attrs.array_acct_attr_code(11) := 'APPLIED_TO_FIRST_SYS_TRAN_ID';
   l_rec_acct_attrs.array_num_value(11)  :=  to_char(p_source_29);
   l_rec_acct_attrs.array_acct_attr_code(12) := 'DISTRIBUTION_IDENTIFIER_1';
   l_rec_acct_attrs.array_num_value(12)  :=  to_char(p_source_30);
   l_rec_acct_attrs.array_acct_attr_code(13) := 'DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(13)  := p_source_21;
   l_rec_acct_attrs.array_acct_attr_code(14) := 'ENC_UPG_CR_CCID';
   l_rec_acct_attrs.array_num_value(14)  := p_source_31;
   l_rec_acct_attrs.array_acct_attr_code(15) := 'ENC_UPG_CR_ENTERED_AMT';
   l_rec_acct_attrs.array_num_value(15)  := p_source_32;
   l_rec_acct_attrs.array_acct_attr_code(16) := 'ENC_UPG_CR_ENTERED_CURR';
   l_rec_acct_attrs.array_char_value(16)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(17) := 'ENC_UPG_CR_LEDGER_AMT';
   l_rec_acct_attrs.array_num_value(17)  := p_source_34;
   l_rec_acct_attrs.array_acct_attr_code(18) := 'ENC_UPG_DR_CCID';
   l_rec_acct_attrs.array_num_value(18)  := p_source_35;
   l_rec_acct_attrs.array_acct_attr_code(19) := 'ENC_UPG_DR_ENTERED_AMT';
   l_rec_acct_attrs.array_num_value(19)  := p_source_36;
   l_rec_acct_attrs.array_acct_attr_code(20) := 'ENC_UPG_DR_ENTERED_CURR';
   l_rec_acct_attrs.array_char_value(20)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(21) := 'ENC_UPG_DR_LEDGER_AMT';
   l_rec_acct_attrs.array_num_value(21)  := p_source_37;
   l_rec_acct_attrs.array_acct_attr_code(22) := 'ENC_UPG_OPTION';
   l_rec_acct_attrs.array_char_value(22)  := p_source_38;
   l_rec_acct_attrs.array_acct_attr_code(23) := 'ENTERED_CURRENCY_AMOUNT';
   l_rec_acct_attrs.array_num_value(23)  := p_source_65;
   l_rec_acct_attrs.array_acct_attr_code(24) := 'ENTERED_CURRENCY_CODE';
   l_rec_acct_attrs.array_char_value(24)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(25) := 'EXCHANGE_DATE';
   l_rec_acct_attrs.array_date_value(25)  := p_source_39;
   l_rec_acct_attrs.array_acct_attr_code(26) := 'EXCHANGE_RATE';
   l_rec_acct_attrs.array_num_value(26)  := p_source_40;
   l_rec_acct_attrs.array_acct_attr_code(27) := 'EXCHANGE_RATE_TYPE';
   l_rec_acct_attrs.array_char_value(27)  := p_source_41;
   l_rec_acct_attrs.array_acct_attr_code(28) := 'LEDGER_AMOUNT';
   l_rec_acct_attrs.array_num_value(28)  := p_source_66;
   l_rec_acct_attrs.array_acct_attr_code(29) := 'MULTIPERIOD_END_DATE';
   l_rec_acct_attrs.array_date_value(29)  := p_source_43;
   l_rec_acct_attrs.array_acct_attr_code(30) := 'MULTIPERIOD_OPTION';
   l_rec_acct_attrs.array_char_value(30)  := p_source_44;
   l_rec_acct_attrs.array_acct_attr_code(31) := 'MULTIPERIOD_START_DATE';
   l_rec_acct_attrs.array_date_value(31)  := p_source_45;
   l_rec_acct_attrs.array_acct_attr_code(32) := 'OVERRIDE_ACCTD_AMT_FLAG';
   l_rec_acct_attrs.array_char_value(32)  := p_source_46;
   l_rec_acct_attrs.array_acct_attr_code(33) := 'PARTY_ID';
   l_rec_acct_attrs.array_num_value(33)  := p_source_47;
   l_rec_acct_attrs.array_acct_attr_code(34) := 'PARTY_SITE_ID';
   l_rec_acct_attrs.array_num_value(34)  := p_source_48;
   l_rec_acct_attrs.array_acct_attr_code(35) := 'PARTY_TYPE';
   l_rec_acct_attrs.array_char_value(35)  := p_source_49;
   l_rec_acct_attrs.array_acct_attr_code(36) := 'REVERSED_DISTRIBUTION_ID1';
   l_rec_acct_attrs.array_num_value(36)  :=  to_char(p_source_50);
   l_rec_acct_attrs.array_acct_attr_code(37) := 'REVERSED_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(37)  := p_source_21;
   l_rec_acct_attrs.array_acct_attr_code(38) := 'STATISTICAL_AMOUNT';
   l_rec_acct_attrs.array_num_value(38)  := p_source_51;
   l_rec_acct_attrs.array_acct_attr_code(39) := 'TAX_LINE_REF_ID';
   l_rec_acct_attrs.array_num_value(39)  := p_source_52;
   l_rec_acct_attrs.array_acct_attr_code(40) := 'TAX_REC_NREC_DIST_REF_ID';
   l_rec_acct_attrs.array_num_value(40)  := p_source_53;
   l_rec_acct_attrs.array_acct_attr_code(41) := 'TAX_SUMMARY_LINE_REF_ID';
   l_rec_acct_attrs.array_num_value(41)  := p_source_54;
   l_rec_acct_attrs.array_acct_attr_code(42) := 'UPG_CR_ENC_TYPE_ID';
   l_rec_acct_attrs.array_num_value(42)  := p_source_55;
   l_rec_acct_attrs.array_acct_attr_code(43) := 'UPG_DR_ENC_TYPE_ID';
   l_rec_acct_attrs.array_num_value(43)  := p_source_56;

   XLA_AE_LINES_PKG.SetLineAcctAttrs(l_rec_acct_attrs);
   p_gain_or_loss_ref  := XLA_AE_LINES_PKG.g_rec_lines.array_gain_or_loss_ref(XLA_AE_LINES_PKG.g_LineNumber);

   ---------------------------------------------------------------------------------------------------------------
   -- 4336173 -- assign Business Flow Class (replace code in xla_ae_lines_pkg.Business_Flow_Validation)
   ---------------------------------------------------------------------------------------------------------------
   XLA_AE_LINES_PKG.g_rec_lines.array_business_class_code(XLA_AE_LINES_PKG.g_LineNumber) := l_bflow_class_code;

   l_actual_upg_option  := XLA_AE_LINES_PKG.g_rec_lines.array_actual_upg_option(XLA_AE_LINES_PKG.g_LineNumber);
   l_enc_upg_option     := XLA_AE_LINES_PKG.g_rec_lines.array_enc_upg_option(XLA_AE_LINES_PKG.g_LineNumber);

   IF xla_accounting_cache_pkg.GetValueChar
         (p_source_code         => 'LEDGER_CATEGORY_CODE'
         ,p_target_ledger_id    => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id) IN ('PRIMARY','ALC')
   AND l_bflow_method_code = 'PRIOR_ENTRY'
--   AND (l_actual_upg_option = 'Y' OR l_enc_upg_option = 'Y') Bug 4922099
   AND ( (NVL(l_actual_upg_option, 'N') IN ('Y', 'O')) OR
         (NVL(l_enc_upg_option, 'N') IN ('Y', 'O'))
       )
   THEN
         xla_ae_lines_pkg.BflowUpgEntry
           (p_business_method_code    => l_bflow_method_code
           ,p_business_class_code     => l_bflow_class_code
           ,p_balance_type            => l_balance_type_code);
   ELSE
      NULL;
-- No business flow processing for business flow method of NONE.
   END IF;

   --
   -- call analytical criteria
   --
   
   --
   -- call description
   --
   
xla_ae_lines_pkg.SetLineDescription(
   p_ae_header_id => l_ae_header_id
  ,p_description  => Description_2 (
     p_application_id         => p_application_id
   , p_ae_header_id           => l_ae_header_id 
, p_source_1 => p_source_1
   )
);


   --
   -- call ADRs
   -- Bug 4922099
   --
   IF ( (l_bflow_method_code <> 'PRIOR_ENTRY') OR
        (NVL(l_actual_upg_option, 'N') = 'O') OR
        (NVL(l_enc_upg_option, 'N') = 'O')
      )
   THEN
   NULL;
   --
   --
   
  l_ccid := AcctDerRule_7(
           p_application_id           => p_application_id
         , p_ae_header_id             => l_ae_header_id 
, p_source_11 => p_source_11
         , x_transaction_coa_id       => l_adr_transaction_coa_id
         , x_accounting_coa_id        => l_adr_accounting_coa_id
         , x_value_type_code          => l_adr_value_type_code
         , p_side                     => 'NA'
   );

   xla_ae_lines_pkg.set_ccid(
    p_code_combination_id          => l_ccid
  , p_value_type_code              => l_adr_value_type_code
  , p_transaction_coa_id           => l_adr_transaction_coa_id
  , p_accounting_coa_id            => l_adr_accounting_coa_id
  , p_adr_code                     => 'AP_INVOICE_DIST'
  , p_adr_type_code                => 'S'
  , p_component_type               => l_component_type
  , p_component_code               => l_component_code
  , p_component_type_code          => l_component_type_code
  , p_component_appl_id            => l_component_appl_id
  , p_amb_context_code             => l_amb_context_code
  , p_side                         => 'NA'
  );


   --
   --
   END IF;
   --
   -- Bug 4922099
   IF ( ( (NVL(l_actual_upg_option, 'N') = 'O') OR
          (NVL(l_enc_upg_option, 'N') = 'O')
        ) AND
        (l_bflow_method_code = 'PRIOR_ENTRY')
      )
   THEN
      IF
      --
      1 = 2
      --
      THEN
      xla_accounting_err_pkg.build_message
                                    (p_appli_s_name            => 'XLA'
                                    ,p_msg_name                => 'XLA_UPG_OVERRIDE_ADR_UNDEFINED'
                                    ,p_token_1                 => 'LINE_NUMBER'
                                    ,p_value_1                 => XLA_AE_LINES_PKG.g_LineNumber
                                    ,p_token_2                 => 'LINE_TYPE_NAME'
                                    ,p_value_2                 => XLA_AE_SOURCES_PKG.GetComponentName (
                                                                             l_component_type
                                                                            ,l_component_code
                                                                            ,l_component_type_code
                                                                            ,l_component_appl_id
                                                                            ,l_amb_context_code
                                                                            ,l_entity_code
                                                                            ,l_event_class_code
                                                                           )
                                    ,p_token_3                 => 'OWNER'
                                    ,p_value_3                 => xla_lookups_pkg.get_meaning(
                                                                          p_lookup_type     => 'XLA_OWNER_TYPE'
                                                                          ,p_lookup_code    => l_component_type_code
                                                                         )
                                    ,p_token_4                 => 'PRODUCT_NAME'
                                    ,p_value_4                 => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.application_name
                                    ,p_entity_id               => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.entity_id
                                    ,p_event_id                => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.event_id
                                    ,p_ledger_id               => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id
                                    ,p_ae_header_id            =>  NULL
                                       );

        IF (C_LEVEL_ERROR>= g_log_level) THEN
                 trace
                      (p_msg      => 'ERROR: XLA_UPG_OVERRIDE_ADR_UNDEFINED'
                      ,p_level    => C_LEVEL_ERROR
                      ,p_module   => l_log_module);
        END IF;
      END IF;
   END IF;
   --
   --
   ------------------------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- NOTE: XLA_AE_LINES_PKG.ValidateCurrentLine should NOT be generated if business flow method is
   -- Prior Entry.  Currently, the following code is always generated.
   ------------------------------------------------------------------------------------------------
   XLA_AE_LINES_PKG.ValidateCurrentLine;

   ------------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- Populated credit and debit amounts -- Need to generate this within IF <condition>
   ------------------------------------------------------------------------------------
   XLA_AE_LINES_PKG.SetDebitCreditAmounts;

   ----------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- Update journal entry status -- Need to generate this within IF <condition>
   ----------------------------------------------------------------------------------
   XLA_AE_JOURNAL_ENTRY_PKG.UpdateJournalEntryStatus
         (p_hdr_idx => g_array_event(p_event_id).array_value_num('header_index')
         ,p_balance_type_code => l_balance_type_code
         );

   -------------------------------------------------------------------------------------------
   -- 4262811 - Generate the Accrual Reversal lines
   -------------------------------------------------------------------------------------------
   BEGIN
      l_acc_rev_flag := XLA_AE_HEADER_PKG.g_rec_header_new.array_accrual_reversal_flag
                              (g_array_event(p_event_id).array_value_num('header_index'));
      IF l_acc_rev_flag IS NULL THEN
         l_acc_rev_flag := 'N';
      END IF;
   EXCEPTION
      WHEN OTHERS THEN
         l_acc_rev_flag := 'N';
   END;
   --
   IF (l_acc_rev_flag = 'Y') THEN

       -- 4645092  ------------------------------------------------------------------------------
       -- To allow MPA report to determine if it should generate report process
       XLA_ACCOUNTING_PKG.g_mpa_accrual_exists := 'Y';
       ------------------------------------------------------------------------------------------

       l_accrual_line_num := XLA_AE_LINES_PKG.g_LineNumber;
       XLA_AE_LINES_PKG.CopyLineInfo(l_accrual_line_num);
   -- added call to set_ccid to execute mapping  for secondary accrual reversal entries bug 7444204
   -- call ADRs
   -- Bug 4922099
   --
   IF ( (l_bflow_method_code <> 'PRIOR_ENTRY') OR
        (NVL(l_actual_upg_option, 'N') = 'O') OR
        (NVL(l_enc_upg_option, 'N') = 'O')
      )
   THEN
   NULL;
   --
   --
   
  l_ccid := AcctDerRule_7(
           p_application_id           => p_application_id
         , p_ae_header_id             => l_ae_header_id 
, p_source_11 => p_source_11
         , x_transaction_coa_id       => l_adr_transaction_coa_id
         , x_accounting_coa_id        => l_adr_accounting_coa_id
         , x_value_type_code          => l_adr_value_type_code
         , p_side                     => 'NA'
   );

   xla_ae_lines_pkg.set_ccid(
    p_code_combination_id          => l_ccid
  , p_value_type_code              => l_adr_value_type_code
  , p_transaction_coa_id           => l_adr_transaction_coa_id
  , p_accounting_coa_id            => l_adr_accounting_coa_id
  , p_adr_code                     => 'AP_INVOICE_DIST'
  , p_adr_type_code                => 'S'
  , p_component_type               => l_component_type
  , p_component_code               => l_component_code
  , p_component_type_code          => l_component_type_code
  , p_component_appl_id            => l_component_appl_id
  , p_amb_context_code             => l_amb_context_code
  , p_side                         => 'NA'
  );


   --
   --
   END IF;

       --
       -- Update the line information that should be overwritten
       --
       XLA_AE_LINES_PKG.set_ae_header_id(p_ae_header_id => p_event_id ,
                                         p_header_num   => 1);
       XLA_AE_LINES_PKG.g_rec_lines.array_header_num(XLA_AE_LINES_PKG.g_LineNumber)  :=1;

       XLA_AE_LINES_PKG.g_rec_lines.array_business_class_code(XLA_AE_LINES_PKG.g_LineNumber) := NULL; -- 4669271

       IF l_bflow_method_code <> 'NONE' THEN  -- 4655713b
          XLA_AE_LINES_PKG.g_rec_lines.array_reversal_code(XLA_AE_LINES_PKG.g_LineNumber) := CONCAT('MPA_',l_bflow_method_code);
       END IF;

      --
      -- Depending on the Reversal Method setup, do a switch side or changes sign for the amounts
      --
      IF (XLA_AE_JOURNAL_ENTRY_PKG.g_cache_ledgers_info.ledger_reversal_option = 'SIDE') THEN
          XLA_AE_LINES_PKG.g_rec_lines.array_natural_side_code(XLA_AE_LINES_PKG.g_LineNumber) :=  l_acc_rev_natural_side_code;
      ELSE
          ---------------------------------------------------------------------------------------------------
          -- 4262811a Switch Sign
          ---------------------------------------------------------------------------------------------------
          XLA_AE_LINES_PKG.g_rec_lines.array_switch_side_flag(XLA_AE_LINES_PKG.g_LineNumber) := 'N';  -- 5052518
          XLA_AE_LINES_PKG.g_rec_lines.array_ledger_amount(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_ledger_amount(XLA_AE_LINES_PKG.g_LineNumber) * -1;
          XLA_AE_LINES_PKG.g_rec_lines.array_entered_amount(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_entered_amount(XLA_AE_LINES_PKG.g_LineNumber) * -1;
          -- 5132302
          XLA_AE_LINES_PKG.g_rec_lines.array_bflow_applied_to_amt(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_bflow_applied_to_amt(XLA_AE_LINES_PKG.g_LineNumber) * -1;

      END IF;

      -- 4955764
      XLA_AE_LINES_PKG.g_rec_lines.array_gl_date(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_HEADER_PKG.g_rec_header_new.array_gl_date(g_array_event(p_event_id).array_value_num('acc_rev_header_index'));


      XLA_AE_LINES_PKG.ValidateCurrentLine;
      XLA_AE_LINES_PKG.SetDebitCreditAmounts;

      XLA_AE_JOURNAL_ENTRY_PKG.UpdateJournalEntryStatus
               (p_hdr_idx           => g_array_event(p_event_id).array_value_num('acc_rev_header_index')
               ,p_balance_type_code => l_balance_type_code);

   END IF;

   -----------------------------------------------------------------------------------------
   -- 4262811 Multiperiod Accounting
   -----------------------------------------------------------------------------------------
     -- No MPA option is assigned.


END IF;
END IF;
--

--
IF (C_LEVEL_PROCEDURE >= g_log_level) THEN
   trace
      (p_msg      => 'END of AcctLineType_44'
      ,p_level    => C_LEVEL_PROCEDURE
      ,p_module   => l_log_module);
END IF;
--
EXCEPTION
  WHEN xla_exceptions_pkg.application_exception THEN
      RAISE;
  WHEN OTHERS THEN
       xla_exceptions_pkg.raise_message
           (p_location => 'XLA_00200_AAD_S_000010_BC_PKG.AcctLineType_44');
END AcctLineType_44;
--

---------------------------------------
--
-- PRIVATE FUNCTION
--         AcctLineType_45
--
---------------------------------------
PROCEDURE AcctLineType_45 (
  p_application_id        IN NUMBER
 ,p_event_id              IN NUMBER
 ,p_calculate_acctd_flag  IN VARCHAR2
 ,p_calculate_g_l_flag    IN VARCHAR2
 ,p_actual_flag           IN OUT VARCHAR2
 ,p_balance_type_code     OUT VARCHAR2
 ,p_gain_or_loss_ref      OUT VARCHAR2
 
--Invoice Distribution Description
 , p_source_1            IN VARCHAR2
--Invoice Distribution Account
 , p_source_11            IN NUMBER
--Invoice Distribution Type
 , p_source_15            IN VARCHAR2
 , p_source_15_meaning    IN VARCHAR2
--Purchasing Encumbrance Option
 , p_source_17            IN VARCHAR2
 , p_source_17_meaning    IN VARCHAR2
--Accrue on Receipt Option
 , p_source_18            IN VARCHAR2
 , p_source_18_meaning    IN VARCHAR2
--Accounting Reversal Indicator
 , p_source_19            IN VARCHAR2
--Distribution Link Type
 , p_source_21            IN VARCHAR2
--Allocation to Main Distribution Identifier
 , p_source_23            IN NUMBER
--Invoice Identifier
 , p_source_24            IN NUMBER
--Business Flow Accounts Payable Application Identifier
 , p_source_25            IN NUMBER
--Business Flow Invoice Distribution Type
 , p_source_26            IN VARCHAR2
--Business Flow Invoice Entity Code
 , p_source_27            IN VARCHAR2
--Business Flow Invoice Distribution Identifier
 , p_source_28            IN NUMBER
--Business Flow Invoice Identifier
 , p_source_29            IN NUMBER
--Invoice Distribution Identifier
 , p_source_30            IN NUMBER
--Payables Encumbrance Upgrade Credit Account
 , p_source_31            IN NUMBER
--Payables Encumbrance Upgrade Credit Amount
 , p_source_32            IN NUMBER
--Invoice Currency Code
 , p_source_33            IN VARCHAR2
--Payables Encumbrance Upgrade Credit Base Amount
 , p_source_34            IN NUMBER
--Payables Encumbrance Upgrade Debit Account
 , p_source_35            IN NUMBER
--Payables Encumbrance Upgrade Debit Amount
 , p_source_36            IN NUMBER
--Payables Encumbrance Upgrade Debit Base Amount
 , p_source_37            IN NUMBER
--Payables Encumbrance Upgrade Option
 , p_source_38            IN VARCHAR2
--Invoice Exchange Date
 , p_source_39            IN DATE
--Invoice Exchange Rate
 , p_source_40            IN NUMBER
--Invoice Exchange Rate Type
 , p_source_41            IN VARCHAR2
--Deferred Accounting End Date
 , p_source_43            IN DATE
--Deferred Accounting Option
 , p_source_44            IN VARCHAR2
--Deferred Accounting Start Date
 , p_source_45            IN DATE
--Override Accounted Amount Indicator
 , p_source_46            IN VARCHAR2
 , p_source_46_meaning    IN VARCHAR2
--Invoice Supplier Identifier
 , p_source_47            IN NUMBER
--Invoice Supplier Site Identifier
 , p_source_48            IN NUMBER
--Third Party Type
 , p_source_49            IN VARCHAR2
--Parent Reversal Identifier
 , p_source_50            IN NUMBER
--Invoice Distribution Statistical Amount
 , p_source_51            IN NUMBER
--Invoice Distribution Tax Line Identifier
 , p_source_52            IN NUMBER
--Invoice Distribution Tax Distribution Identifier from Tax
 , p_source_53            IN NUMBER
--Invoice Distribution Summary Tax Line Identifier
 , p_source_54            IN NUMBER
--Payables Upgrade Credit Encumbrance Type Identifier
 , p_source_55            IN NUMBER
--Payables Upgrade Debit Encumbrance Type Identifier
 , p_source_56            IN NUMBER
--Self-Assessed Tax Flag
 , p_source_59            IN VARCHAR2
 , p_source_59_meaning    IN VARCHAR2
--Invoice Distribution Encumbrance Amount
 , p_source_65            IN NUMBER
--Invoice Distribution Encumbrance Ledger Amount
 , p_source_66            IN NUMBER
)
IS

l_component_type              VARCHAR2(80);
l_component_code              VARCHAR2(30);
l_component_type_code         VARCHAR2(1);
l_component_appl_id           INTEGER;
l_amb_context_code            VARCHAR2(30);
l_entity_code                 VARCHAR2(30);
l_event_class_code            VARCHAR2(30);
l_ae_header_id                NUMBER;
l_event_type_code             VARCHAR2(30);
l_line_definition_code        VARCHAR2(30);
l_line_definition_owner_code  VARCHAR2(1);
--
-- adr variables
l_segment                     VARCHAR2(30);
l_ccid                        NUMBER;
l_adr_transaction_coa_id      NUMBER;
l_adr_accounting_coa_id       NUMBER;
l_adr_flexfield_segment_code  VARCHAR2(30);
l_adr_flex_value_set_id       NUMBER;
l_adr_value_type_code         VARCHAR2(30);
l_adr_value_combination_id    NUMBER;
l_adr_value_segment_code      VARCHAR2(30);

l_bflow_method_code           VARCHAR2(30);  -- 4219869 Business Flow
l_bflow_class_code            VARCHAR2(30);  -- 4219869 Business Flow
l_inherit_desc_flag           VARCHAR2(1);   -- 4219869 Business Flow
l_budgetary_control_flag      VARCHAR2(1);   -- 4458381 Public Sector Enh

-- 4262811 Variables ------------------------------------------------------------------------------------------
l_entered_amt_idx             NUMBER;
l_accted_amt_idx              NUMBER;
l_acc_rev_flag                VARCHAR2(1);
l_accrual_line_num            NUMBER;
l_tmp_amt                     NUMBER;
l_acc_rev_natural_side_code   VARCHAR2(1);

l_num_entries                 NUMBER;
l_gl_dates                    xla_ae_journal_entry_pkg.t_array_date;
l_accted_amts                 xla_ae_journal_entry_pkg.t_array_num;
l_entered_amts                xla_ae_journal_entry_pkg.t_array_num;
l_period_names                xla_ae_journal_entry_pkg.t_array_V15L;
l_recog_line_1                NUMBER;
l_recog_line_2                NUMBER;

l_bflow_applied_to_amt_idx    NUMBER;                                -- 5132302
l_bflow_applied_to_amt        NUMBER;                                -- 5132302
l_bflow_applied_to_amts       xla_ae_journal_entry_pkg.t_array_num;  -- 5132302

l_event_id                    NUMBER;  -- To handle MPA header Description: xla_ae_header_pkg.SetHdrDescription

--l_rounding_ccy                VARCHAR2(15); -- To handle MPA rounding  4262811b
l_same_currency               BOOLEAN;        -- To handle MPA rounding  4262811b

---------------------------------------------------------------------------------------------------------------


--
-- bulk performance
--
l_balance_type_code           VARCHAR2(1);
l_rec_acct_attrs              XLA_AE_LINES_PKG.t_rec_acct_attrs;
l_log_module                  VARCHAR2(240);

--
-- Upgrade strategy
--
l_actual_upg_option           VARCHAR2(1);
l_enc_upg_option           VARCHAR2(1);

--
BEGIN
--
IF g_log_enabled THEN
      l_log_module := C_DEFAULT_MODULE||'.AcctLineType_45';
END IF;
--
IF (C_LEVEL_PROCEDURE >= g_log_level) THEN

      trace
         (p_msg      => 'BEGIN of AcctLineType_45'
         ,p_level    => C_LEVEL_PROCEDURE
         ,p_module   => l_log_module);

END IF;
--
l_component_type             := 'AMB_JLT';
l_component_code             := 'AP_NON_RECOV_TAX_CM_ENC_DR';
l_component_type_code        := 'S';
l_component_appl_id          :=  200;
l_amb_context_code           := 'DEFAULT';
l_entity_code                := 'AP_INVOICES';
l_event_class_code           := 'CREDIT MEMOS';
l_event_type_code            := 'CREDIT MEMOS_ALL';
l_line_definition_owner_code := 'S';
l_line_definition_code       := 'ENC_CM_ALL';
--
l_balance_type_code          := 'E';
l_segment                     := NULL;
l_ccid                        := NULL;
l_adr_transaction_coa_id      := NULL;
l_adr_accounting_coa_id       := NULL;
l_adr_flexfield_segment_code  := NULL;
l_adr_flex_value_set_id       := NULL;
l_adr_value_type_code         := NULL;
l_adr_value_combination_id    := NULL;
l_adr_value_segment_code      := NULL;

l_bflow_method_code          := 'NONE';   -- 4219869 Business Flow
l_bflow_class_code           := 'AP_INV_ENCUM';    -- 4219869 Business Flow
l_inherit_desc_flag          := 'N';   -- 4219869 Business Flow
l_budgetary_control_flag     := 'Y';

l_bflow_applied_to_amt_idx   := NULL; -- 5132302
l_bflow_applied_to_amt       := NULL; -- 5132302
l_entered_amt_idx            := NULL;          -- 4262811
l_accted_amt_idx             := NULL;          -- 4262811
l_acc_rev_flag               := NULL;          -- 4262811
l_accrual_line_num           := NULL;          -- 4262811
l_tmp_amt                    := NULL;          -- 4262811
--
 
IF XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id = XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.ledger_id OR
    l_balance_type_code <> 'B' THEN
IF NVL(p_source_15,'
') =  'NONREC_TAX' AND 
NVL(p_source_59,'
') <>  'Y' AND 
NVL(p_source_17,'
') =  'Y' AND 
NVL(p_source_18,'
') <>  'Y'
 THEN 

   --
   XLA_AE_LINES_PKG.SetNewLine;

   p_balance_type_code          := l_balance_type_code;
   -- set the flag so later we will know whether the gain loss line needs to be created
   
   IF(l_balance_type_code = 'A' and p_actual_flag is null) THEN
     p_actual_flag :='A';
   END IF;

   --
   -- bulk performance
   --
   XLA_AE_LINES_PKG.set_ae_header_id (p_ae_header_id => p_event_id ,
                                      p_header_num   => 0); -- 4262811
   --
   -- set accounting line options
   --
   l_ae_header_id:= xla_ae_lines_pkg.SetAcctLineOption(
           p_natural_side_code          => 'D'
         , p_gain_or_loss_flag          => 'N'
         , p_gl_transfer_mode_code      => 'S'
         , p_acct_entry_type_code       => 'E'
         , p_switch_side_flag           => 'Y'
         , p_merge_duplicate_code       => 'N'
         );
   --
   l_acc_rev_natural_side_code := 'C';  -- 4262811
   -- 
   --
   -- set accounting line type info
   --
   xla_ae_lines_pkg.SetAcctLineType
      (p_component_type             => l_component_type
      ,p_event_type_code            => l_event_type_code
      ,p_line_definition_owner_code => l_line_definition_owner_code
      ,p_line_definition_code       => l_line_definition_code
      ,p_accounting_line_code       => l_component_code
      ,p_accounting_line_type_code  => l_component_type_code
      ,p_accounting_line_appl_id    => l_component_appl_id
      ,p_amb_context_code           => l_amb_context_code
      ,p_entity_code                => l_entity_code
      ,p_event_class_code           => l_event_class_code);
   --
   -- set accounting class
   --
   xla_ae_lines_pkg.SetAcctClass(
           p_accounting_class_code  => 'NRTAX'
         , p_ae_header_id           => l_ae_header_id
         );

   --
   -- set rounding class
   --
   XLA_AE_LINES_PKG.g_rec_lines.array_rounding_class(XLA_AE_LINES_PKG.g_LineNumber) :=
                      'NRTAX';

   --
   xla_ae_lines_pkg.g_rec_lines.array_calculate_acctd_flag(xla_ae_lines_pkg.g_LineNumber) := p_calculate_acctd_flag;
   xla_ae_lines_pkg.g_rec_lines.array_calculate_g_l_flag(xla_ae_lines_pkg.g_LineNumber) := p_calculate_g_l_flag;
   --
   -- bulk performance
   --
   XLA_AE_LINES_PKG.g_rec_lines.array_balance_type_code(XLA_AE_LINES_PKG.g_LineNumber) := l_balance_type_code;

   XLA_AE_LINES_PKG.g_rec_lines.array_ledger_id(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id;

   -- 4955764
   XLA_AE_LINES_PKG.g_rec_lines.array_gl_date(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_HEADER_PKG.g_rec_header_new.array_gl_date(g_array_event(p_event_id).array_value_num('header_index'));

   -- 4458381 Public Sector Enh
      XLA_AE_LINES_PKG.g_rec_lines.array_encumbrance_type_id(XLA_AE_LINES_PKG.g_LineNumber) := 1060;
   --
   -- set accounting attributes for the line type
   --
   l_entered_amt_idx := 23;
   l_accted_amt_idx  := 28;
   l_bflow_applied_to_amt_idx  := NULL;  -- 5132302
   l_rec_acct_attrs.array_acct_attr_code(1) := 'ACCOUNTING_REVERSAL_OPTION';
   l_rec_acct_attrs.array_char_value(1)  := p_source_19;
   l_rec_acct_attrs.array_acct_attr_code(2) := 'ALLOC_TO_APPLICATION_ID';
   l_rec_acct_attrs.array_num_value(2)  := 
xla_ae_sources_pkg.GetSystemSourceNum(
   p_source_code           => 'XLA_EVENT_APPL_ID'
 , p_source_type_code      => 'Y'
 , p_source_application_id =>  602
);
   l_rec_acct_attrs.array_acct_attr_code(3) := 'ALLOC_TO_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(3)  := p_source_21;
   l_rec_acct_attrs.array_acct_attr_code(4) := 'ALLOC_TO_ENTITY_CODE';
   l_rec_acct_attrs.array_char_value(4)  := 
xla_ae_sources_pkg.GetSystemSourceChar(
   p_source_code           => 'XLA_ENTITY_CODE'
 , p_source_type_code      => 'Y'
 , p_source_application_id =>  602
);
   l_rec_acct_attrs.array_acct_attr_code(5) := 'ALLOC_TO_FIRST_DIST_ID';
   l_rec_acct_attrs.array_num_value(5)  :=  to_char(p_source_23);
   l_rec_acct_attrs.array_acct_attr_code(6) := 'ALLOC_TO_FIRST_SYS_TRAN_ID';
   l_rec_acct_attrs.array_num_value(6)  :=  to_char(p_source_24);
   l_rec_acct_attrs.array_acct_attr_code(7) := 'APPLIED_TO_APPLICATION_ID';
   l_rec_acct_attrs.array_num_value(7)  := p_source_25;
   l_rec_acct_attrs.array_acct_attr_code(8) := 'APPLIED_TO_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(8)  := p_source_26;
   l_rec_acct_attrs.array_acct_attr_code(9) := 'APPLIED_TO_ENTITY_CODE';
   l_rec_acct_attrs.array_char_value(9)  := p_source_27;
   l_rec_acct_attrs.array_acct_attr_code(10) := 'APPLIED_TO_FIRST_DIST_ID';
   l_rec_acct_attrs.array_num_value(10)  :=  to_char(p_source_28);
   l_rec_acct_attrs.array_acct_attr_code(11) := 'APPLIED_TO_FIRST_SYS_TRAN_ID';
   l_rec_acct_attrs.array_num_value(11)  :=  to_char(p_source_29);
   l_rec_acct_attrs.array_acct_attr_code(12) := 'DISTRIBUTION_IDENTIFIER_1';
   l_rec_acct_attrs.array_num_value(12)  :=  to_char(p_source_30);
   l_rec_acct_attrs.array_acct_attr_code(13) := 'DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(13)  := p_source_21;
   l_rec_acct_attrs.array_acct_attr_code(14) := 'ENC_UPG_CR_CCID';
   l_rec_acct_attrs.array_num_value(14)  := p_source_31;
   l_rec_acct_attrs.array_acct_attr_code(15) := 'ENC_UPG_CR_ENTERED_AMT';
   l_rec_acct_attrs.array_num_value(15)  := p_source_32;
   l_rec_acct_attrs.array_acct_attr_code(16) := 'ENC_UPG_CR_ENTERED_CURR';
   l_rec_acct_attrs.array_char_value(16)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(17) := 'ENC_UPG_CR_LEDGER_AMT';
   l_rec_acct_attrs.array_num_value(17)  := p_source_34;
   l_rec_acct_attrs.array_acct_attr_code(18) := 'ENC_UPG_DR_CCID';
   l_rec_acct_attrs.array_num_value(18)  := p_source_35;
   l_rec_acct_attrs.array_acct_attr_code(19) := 'ENC_UPG_DR_ENTERED_AMT';
   l_rec_acct_attrs.array_num_value(19)  := p_source_36;
   l_rec_acct_attrs.array_acct_attr_code(20) := 'ENC_UPG_DR_ENTERED_CURR';
   l_rec_acct_attrs.array_char_value(20)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(21) := 'ENC_UPG_DR_LEDGER_AMT';
   l_rec_acct_attrs.array_num_value(21)  := p_source_37;
   l_rec_acct_attrs.array_acct_attr_code(22) := 'ENC_UPG_OPTION';
   l_rec_acct_attrs.array_char_value(22)  := p_source_38;
   l_rec_acct_attrs.array_acct_attr_code(23) := 'ENTERED_CURRENCY_AMOUNT';
   l_rec_acct_attrs.array_num_value(23)  := p_source_65;
   l_rec_acct_attrs.array_acct_attr_code(24) := 'ENTERED_CURRENCY_CODE';
   l_rec_acct_attrs.array_char_value(24)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(25) := 'EXCHANGE_DATE';
   l_rec_acct_attrs.array_date_value(25)  := p_source_39;
   l_rec_acct_attrs.array_acct_attr_code(26) := 'EXCHANGE_RATE';
   l_rec_acct_attrs.array_num_value(26)  := p_source_40;
   l_rec_acct_attrs.array_acct_attr_code(27) := 'EXCHANGE_RATE_TYPE';
   l_rec_acct_attrs.array_char_value(27)  := p_source_41;
   l_rec_acct_attrs.array_acct_attr_code(28) := 'LEDGER_AMOUNT';
   l_rec_acct_attrs.array_num_value(28)  := p_source_66;
   l_rec_acct_attrs.array_acct_attr_code(29) := 'MULTIPERIOD_END_DATE';
   l_rec_acct_attrs.array_date_value(29)  := p_source_43;
   l_rec_acct_attrs.array_acct_attr_code(30) := 'MULTIPERIOD_OPTION';
   l_rec_acct_attrs.array_char_value(30)  := p_source_44;
   l_rec_acct_attrs.array_acct_attr_code(31) := 'MULTIPERIOD_START_DATE';
   l_rec_acct_attrs.array_date_value(31)  := p_source_45;
   l_rec_acct_attrs.array_acct_attr_code(32) := 'OVERRIDE_ACCTD_AMT_FLAG';
   l_rec_acct_attrs.array_char_value(32)  := p_source_46;
   l_rec_acct_attrs.array_acct_attr_code(33) := 'PARTY_ID';
   l_rec_acct_attrs.array_num_value(33)  := p_source_47;
   l_rec_acct_attrs.array_acct_attr_code(34) := 'PARTY_SITE_ID';
   l_rec_acct_attrs.array_num_value(34)  := p_source_48;
   l_rec_acct_attrs.array_acct_attr_code(35) := 'PARTY_TYPE';
   l_rec_acct_attrs.array_char_value(35)  := p_source_49;
   l_rec_acct_attrs.array_acct_attr_code(36) := 'REVERSED_DISTRIBUTION_ID1';
   l_rec_acct_attrs.array_num_value(36)  :=  to_char(p_source_50);
   l_rec_acct_attrs.array_acct_attr_code(37) := 'REVERSED_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(37)  := p_source_21;
   l_rec_acct_attrs.array_acct_attr_code(38) := 'STATISTICAL_AMOUNT';
   l_rec_acct_attrs.array_num_value(38)  := p_source_51;
   l_rec_acct_attrs.array_acct_attr_code(39) := 'TAX_LINE_REF_ID';
   l_rec_acct_attrs.array_num_value(39)  := p_source_52;
   l_rec_acct_attrs.array_acct_attr_code(40) := 'TAX_REC_NREC_DIST_REF_ID';
   l_rec_acct_attrs.array_num_value(40)  := p_source_53;
   l_rec_acct_attrs.array_acct_attr_code(41) := 'TAX_SUMMARY_LINE_REF_ID';
   l_rec_acct_attrs.array_num_value(41)  := p_source_54;
   l_rec_acct_attrs.array_acct_attr_code(42) := 'UPG_CR_ENC_TYPE_ID';
   l_rec_acct_attrs.array_num_value(42)  := p_source_55;
   l_rec_acct_attrs.array_acct_attr_code(43) := 'UPG_DR_ENC_TYPE_ID';
   l_rec_acct_attrs.array_num_value(43)  := p_source_56;

   XLA_AE_LINES_PKG.SetLineAcctAttrs(l_rec_acct_attrs);
   p_gain_or_loss_ref  := XLA_AE_LINES_PKG.g_rec_lines.array_gain_or_loss_ref(XLA_AE_LINES_PKG.g_LineNumber);

   ---------------------------------------------------------------------------------------------------------------
   -- 4336173 -- assign Business Flow Class (replace code in xla_ae_lines_pkg.Business_Flow_Validation)
   ---------------------------------------------------------------------------------------------------------------
   XLA_AE_LINES_PKG.g_rec_lines.array_business_class_code(XLA_AE_LINES_PKG.g_LineNumber) := l_bflow_class_code;

   l_actual_upg_option  := XLA_AE_LINES_PKG.g_rec_lines.array_actual_upg_option(XLA_AE_LINES_PKG.g_LineNumber);
   l_enc_upg_option     := XLA_AE_LINES_PKG.g_rec_lines.array_enc_upg_option(XLA_AE_LINES_PKG.g_LineNumber);

   IF xla_accounting_cache_pkg.GetValueChar
         (p_source_code         => 'LEDGER_CATEGORY_CODE'
         ,p_target_ledger_id    => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id) IN ('PRIMARY','ALC')
   AND l_bflow_method_code = 'PRIOR_ENTRY'
--   AND (l_actual_upg_option = 'Y' OR l_enc_upg_option = 'Y') Bug 4922099
   AND ( (NVL(l_actual_upg_option, 'N') IN ('Y', 'O')) OR
         (NVL(l_enc_upg_option, 'N') IN ('Y', 'O'))
       )
   THEN
         xla_ae_lines_pkg.BflowUpgEntry
           (p_business_method_code    => l_bflow_method_code
           ,p_business_class_code     => l_bflow_class_code
           ,p_balance_type            => l_balance_type_code);
   ELSE
      NULL;
-- No business flow processing for business flow method of NONE.
   END IF;

   --
   -- call analytical criteria
   --
   
   --
   -- call description
   --
   
xla_ae_lines_pkg.SetLineDescription(
   p_ae_header_id => l_ae_header_id
  ,p_description  => Description_2 (
     p_application_id         => p_application_id
   , p_ae_header_id           => l_ae_header_id 
, p_source_1 => p_source_1
   )
);


   --
   -- call ADRs
   -- Bug 4922099
   --
   IF ( (l_bflow_method_code <> 'PRIOR_ENTRY') OR
        (NVL(l_actual_upg_option, 'N') = 'O') OR
        (NVL(l_enc_upg_option, 'N') = 'O')
      )
   THEN
   NULL;
   --
   --
   
  l_ccid := AcctDerRule_7(
           p_application_id           => p_application_id
         , p_ae_header_id             => l_ae_header_id 
, p_source_11 => p_source_11
         , x_transaction_coa_id       => l_adr_transaction_coa_id
         , x_accounting_coa_id        => l_adr_accounting_coa_id
         , x_value_type_code          => l_adr_value_type_code
         , p_side                     => 'NA'
   );

   xla_ae_lines_pkg.set_ccid(
    p_code_combination_id          => l_ccid
  , p_value_type_code              => l_adr_value_type_code
  , p_transaction_coa_id           => l_adr_transaction_coa_id
  , p_accounting_coa_id            => l_adr_accounting_coa_id
  , p_adr_code                     => 'AP_INVOICE_DIST'
  , p_adr_type_code                => 'S'
  , p_component_type               => l_component_type
  , p_component_code               => l_component_code
  , p_component_type_code          => l_component_type_code
  , p_component_appl_id            => l_component_appl_id
  , p_amb_context_code             => l_amb_context_code
  , p_side                         => 'NA'
  );


   --
   --
   END IF;
   --
   -- Bug 4922099
   IF ( ( (NVL(l_actual_upg_option, 'N') = 'O') OR
          (NVL(l_enc_upg_option, 'N') = 'O')
        ) AND
        (l_bflow_method_code = 'PRIOR_ENTRY')
      )
   THEN
      IF
      --
      1 = 2
      --
      THEN
      xla_accounting_err_pkg.build_message
                                    (p_appli_s_name            => 'XLA'
                                    ,p_msg_name                => 'XLA_UPG_OVERRIDE_ADR_UNDEFINED'
                                    ,p_token_1                 => 'LINE_NUMBER'
                                    ,p_value_1                 => XLA_AE_LINES_PKG.g_LineNumber
                                    ,p_token_2                 => 'LINE_TYPE_NAME'
                                    ,p_value_2                 => XLA_AE_SOURCES_PKG.GetComponentName (
                                                                             l_component_type
                                                                            ,l_component_code
                                                                            ,l_component_type_code
                                                                            ,l_component_appl_id
                                                                            ,l_amb_context_code
                                                                            ,l_entity_code
                                                                            ,l_event_class_code
                                                                           )
                                    ,p_token_3                 => 'OWNER'
                                    ,p_value_3                 => xla_lookups_pkg.get_meaning(
                                                                          p_lookup_type     => 'XLA_OWNER_TYPE'
                                                                          ,p_lookup_code    => l_component_type_code
                                                                         )
                                    ,p_token_4                 => 'PRODUCT_NAME'
                                    ,p_value_4                 => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.application_name
                                    ,p_entity_id               => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.entity_id
                                    ,p_event_id                => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.event_id
                                    ,p_ledger_id               => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id
                                    ,p_ae_header_id            =>  NULL
                                       );

        IF (C_LEVEL_ERROR>= g_log_level) THEN
                 trace
                      (p_msg      => 'ERROR: XLA_UPG_OVERRIDE_ADR_UNDEFINED'
                      ,p_level    => C_LEVEL_ERROR
                      ,p_module   => l_log_module);
        END IF;
      END IF;
   END IF;
   --
   --
   ------------------------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- NOTE: XLA_AE_LINES_PKG.ValidateCurrentLine should NOT be generated if business flow method is
   -- Prior Entry.  Currently, the following code is always generated.
   ------------------------------------------------------------------------------------------------
   XLA_AE_LINES_PKG.ValidateCurrentLine;

   ------------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- Populated credit and debit amounts -- Need to generate this within IF <condition>
   ------------------------------------------------------------------------------------
   XLA_AE_LINES_PKG.SetDebitCreditAmounts;

   ----------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- Update journal entry status -- Need to generate this within IF <condition>
   ----------------------------------------------------------------------------------
   XLA_AE_JOURNAL_ENTRY_PKG.UpdateJournalEntryStatus
         (p_hdr_idx => g_array_event(p_event_id).array_value_num('header_index')
         ,p_balance_type_code => l_balance_type_code
         );

   -------------------------------------------------------------------------------------------
   -- 4262811 - Generate the Accrual Reversal lines
   -------------------------------------------------------------------------------------------
   BEGIN
      l_acc_rev_flag := XLA_AE_HEADER_PKG.g_rec_header_new.array_accrual_reversal_flag
                              (g_array_event(p_event_id).array_value_num('header_index'));
      IF l_acc_rev_flag IS NULL THEN
         l_acc_rev_flag := 'N';
      END IF;
   EXCEPTION
      WHEN OTHERS THEN
         l_acc_rev_flag := 'N';
   END;
   --
   IF (l_acc_rev_flag = 'Y') THEN

       -- 4645092  ------------------------------------------------------------------------------
       -- To allow MPA report to determine if it should generate report process
       XLA_ACCOUNTING_PKG.g_mpa_accrual_exists := 'Y';
       ------------------------------------------------------------------------------------------

       l_accrual_line_num := XLA_AE_LINES_PKG.g_LineNumber;
       XLA_AE_LINES_PKG.CopyLineInfo(l_accrual_line_num);
   -- added call to set_ccid to execute mapping  for secondary accrual reversal entries bug 7444204
   -- call ADRs
   -- Bug 4922099
   --
   IF ( (l_bflow_method_code <> 'PRIOR_ENTRY') OR
        (NVL(l_actual_upg_option, 'N') = 'O') OR
        (NVL(l_enc_upg_option, 'N') = 'O')
      )
   THEN
   NULL;
   --
   --
   
  l_ccid := AcctDerRule_7(
           p_application_id           => p_application_id
         , p_ae_header_id             => l_ae_header_id 
, p_source_11 => p_source_11
         , x_transaction_coa_id       => l_adr_transaction_coa_id
         , x_accounting_coa_id        => l_adr_accounting_coa_id
         , x_value_type_code          => l_adr_value_type_code
         , p_side                     => 'NA'
   );

   xla_ae_lines_pkg.set_ccid(
    p_code_combination_id          => l_ccid
  , p_value_type_code              => l_adr_value_type_code
  , p_transaction_coa_id           => l_adr_transaction_coa_id
  , p_accounting_coa_id            => l_adr_accounting_coa_id
  , p_adr_code                     => 'AP_INVOICE_DIST'
  , p_adr_type_code                => 'S'
  , p_component_type               => l_component_type
  , p_component_code               => l_component_code
  , p_component_type_code          => l_component_type_code
  , p_component_appl_id            => l_component_appl_id
  , p_amb_context_code             => l_amb_context_code
  , p_side                         => 'NA'
  );


   --
   --
   END IF;

       --
       -- Update the line information that should be overwritten
       --
       XLA_AE_LINES_PKG.set_ae_header_id(p_ae_header_id => p_event_id ,
                                         p_header_num   => 1);
       XLA_AE_LINES_PKG.g_rec_lines.array_header_num(XLA_AE_LINES_PKG.g_LineNumber)  :=1;

       XLA_AE_LINES_PKG.g_rec_lines.array_business_class_code(XLA_AE_LINES_PKG.g_LineNumber) := NULL; -- 4669271

       IF l_bflow_method_code <> 'NONE' THEN  -- 4655713b
          XLA_AE_LINES_PKG.g_rec_lines.array_reversal_code(XLA_AE_LINES_PKG.g_LineNumber) := CONCAT('MPA_',l_bflow_method_code);
       END IF;

      --
      -- Depending on the Reversal Method setup, do a switch side or changes sign for the amounts
      --
      IF (XLA_AE_JOURNAL_ENTRY_PKG.g_cache_ledgers_info.ledger_reversal_option = 'SIDE') THEN
          XLA_AE_LINES_PKG.g_rec_lines.array_natural_side_code(XLA_AE_LINES_PKG.g_LineNumber) :=  l_acc_rev_natural_side_code;
      ELSE
          ---------------------------------------------------------------------------------------------------
          -- 4262811a Switch Sign
          ---------------------------------------------------------------------------------------------------
          XLA_AE_LINES_PKG.g_rec_lines.array_switch_side_flag(XLA_AE_LINES_PKG.g_LineNumber) := 'N';  -- 5052518
          XLA_AE_LINES_PKG.g_rec_lines.array_ledger_amount(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_ledger_amount(XLA_AE_LINES_PKG.g_LineNumber) * -1;
          XLA_AE_LINES_PKG.g_rec_lines.array_entered_amount(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_entered_amount(XLA_AE_LINES_PKG.g_LineNumber) * -1;
          -- 5132302
          XLA_AE_LINES_PKG.g_rec_lines.array_bflow_applied_to_amt(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_bflow_applied_to_amt(XLA_AE_LINES_PKG.g_LineNumber) * -1;

      END IF;

      -- 4955764
      XLA_AE_LINES_PKG.g_rec_lines.array_gl_date(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_HEADER_PKG.g_rec_header_new.array_gl_date(g_array_event(p_event_id).array_value_num('acc_rev_header_index'));


      XLA_AE_LINES_PKG.ValidateCurrentLine;
      XLA_AE_LINES_PKG.SetDebitCreditAmounts;

      XLA_AE_JOURNAL_ENTRY_PKG.UpdateJournalEntryStatus
               (p_hdr_idx           => g_array_event(p_event_id).array_value_num('acc_rev_header_index')
               ,p_balance_type_code => l_balance_type_code);

   END IF;

   -----------------------------------------------------------------------------------------
   -- 4262811 Multiperiod Accounting
   -----------------------------------------------------------------------------------------
     -- No MPA option is assigned.


END IF;
END IF;
--

--
IF (C_LEVEL_PROCEDURE >= g_log_level) THEN
   trace
      (p_msg      => 'END of AcctLineType_45'
      ,p_level    => C_LEVEL_PROCEDURE
      ,p_module   => l_log_module);
END IF;
--
EXCEPTION
  WHEN xla_exceptions_pkg.application_exception THEN
      RAISE;
  WHEN OTHERS THEN
       xla_exceptions_pkg.raise_message
           (p_location => 'XLA_00200_AAD_S_000010_BC_PKG.AcctLineType_45');
END AcctLineType_45;
--

---------------------------------------
--
-- PRIVATE FUNCTION
--         AcctLineType_46
--
---------------------------------------
PROCEDURE AcctLineType_46 (
  p_application_id        IN NUMBER
 ,p_event_id              IN NUMBER
 ,p_calculate_acctd_flag  IN VARCHAR2
 ,p_calculate_g_l_flag    IN VARCHAR2
 ,p_actual_flag           IN OUT VARCHAR2
 ,p_balance_type_code     OUT VARCHAR2
 ,p_gain_or_loss_ref      OUT VARCHAR2
 
--Invoice Distribution Description
 , p_source_1            IN VARCHAR2
--Invoice Distribution Account
 , p_source_11            IN NUMBER
--Invoice Distribution Type
 , p_source_15            IN VARCHAR2
 , p_source_15_meaning    IN VARCHAR2
--Purchasing Encumbrance Option
 , p_source_17            IN VARCHAR2
 , p_source_17_meaning    IN VARCHAR2
--Accrue on Receipt Option
 , p_source_18            IN VARCHAR2
 , p_source_18_meaning    IN VARCHAR2
--Accounting Reversal Indicator
 , p_source_19            IN VARCHAR2
--Distribution Link Type
 , p_source_21            IN VARCHAR2
--Allocation to Main Distribution Identifier
 , p_source_23            IN NUMBER
--Invoice Identifier
 , p_source_24            IN NUMBER
--Business Flow Accounts Payable Application Identifier
 , p_source_25            IN NUMBER
--Business Flow Invoice Distribution Type
 , p_source_26            IN VARCHAR2
--Business Flow Invoice Entity Code
 , p_source_27            IN VARCHAR2
--Business Flow Invoice Distribution Identifier
 , p_source_28            IN NUMBER
--Business Flow Invoice Identifier
 , p_source_29            IN NUMBER
--Invoice Distribution Identifier
 , p_source_30            IN NUMBER
--Payables Encumbrance Upgrade Credit Account
 , p_source_31            IN NUMBER
--Payables Encumbrance Upgrade Credit Amount
 , p_source_32            IN NUMBER
--Invoice Currency Code
 , p_source_33            IN VARCHAR2
--Payables Encumbrance Upgrade Credit Base Amount
 , p_source_34            IN NUMBER
--Payables Encumbrance Upgrade Debit Account
 , p_source_35            IN NUMBER
--Payables Encumbrance Upgrade Debit Amount
 , p_source_36            IN NUMBER
--Payables Encumbrance Upgrade Debit Base Amount
 , p_source_37            IN NUMBER
--Payables Encumbrance Upgrade Option
 , p_source_38            IN VARCHAR2
--Invoice Exchange Date
 , p_source_39            IN DATE
--Invoice Exchange Rate
 , p_source_40            IN NUMBER
--Invoice Exchange Rate Type
 , p_source_41            IN VARCHAR2
--Deferred Accounting End Date
 , p_source_43            IN DATE
--Deferred Accounting Option
 , p_source_44            IN VARCHAR2
--Deferred Accounting Start Date
 , p_source_45            IN DATE
--Override Accounted Amount Indicator
 , p_source_46            IN VARCHAR2
 , p_source_46_meaning    IN VARCHAR2
--Invoice Supplier Identifier
 , p_source_47            IN NUMBER
--Invoice Supplier Site Identifier
 , p_source_48            IN NUMBER
--Third Party Type
 , p_source_49            IN VARCHAR2
--Parent Reversal Identifier
 , p_source_50            IN NUMBER
--Invoice Distribution Tax Line Identifier
 , p_source_52            IN NUMBER
--Invoice Distribution Tax Distribution Identifier from Tax
 , p_source_53            IN NUMBER
--Invoice Distribution Summary Tax Line Identifier
 , p_source_54            IN NUMBER
--Payables Upgrade Credit Encumbrance Type Identifier
 , p_source_55            IN NUMBER
--Payables Upgrade Debit Encumbrance Type Identifier
 , p_source_56            IN NUMBER
--Self-Assessed Tax Flag
 , p_source_59            IN VARCHAR2
 , p_source_59_meaning    IN VARCHAR2
--Invoice Distribution Encumbrance Amount
 , p_source_65            IN NUMBER
--Invoice Distribution Encumbrance Ledger Amount
 , p_source_66            IN NUMBER
)
IS

l_component_type              VARCHAR2(80);
l_component_code              VARCHAR2(30);
l_component_type_code         VARCHAR2(1);
l_component_appl_id           INTEGER;
l_amb_context_code            VARCHAR2(30);
l_entity_code                 VARCHAR2(30);
l_event_class_code            VARCHAR2(30);
l_ae_header_id                NUMBER;
l_event_type_code             VARCHAR2(30);
l_line_definition_code        VARCHAR2(30);
l_line_definition_owner_code  VARCHAR2(1);
--
-- adr variables
l_segment                     VARCHAR2(30);
l_ccid                        NUMBER;
l_adr_transaction_coa_id      NUMBER;
l_adr_accounting_coa_id       NUMBER;
l_adr_flexfield_segment_code  VARCHAR2(30);
l_adr_flex_value_set_id       NUMBER;
l_adr_value_type_code         VARCHAR2(30);
l_adr_value_combination_id    NUMBER;
l_adr_value_segment_code      VARCHAR2(30);

l_bflow_method_code           VARCHAR2(30);  -- 4219869 Business Flow
l_bflow_class_code            VARCHAR2(30);  -- 4219869 Business Flow
l_inherit_desc_flag           VARCHAR2(1);   -- 4219869 Business Flow
l_budgetary_control_flag      VARCHAR2(1);   -- 4458381 Public Sector Enh

-- 4262811 Variables ------------------------------------------------------------------------------------------
l_entered_amt_idx             NUMBER;
l_accted_amt_idx              NUMBER;
l_acc_rev_flag                VARCHAR2(1);
l_accrual_line_num            NUMBER;
l_tmp_amt                     NUMBER;
l_acc_rev_natural_side_code   VARCHAR2(1);

l_num_entries                 NUMBER;
l_gl_dates                    xla_ae_journal_entry_pkg.t_array_date;
l_accted_amts                 xla_ae_journal_entry_pkg.t_array_num;
l_entered_amts                xla_ae_journal_entry_pkg.t_array_num;
l_period_names                xla_ae_journal_entry_pkg.t_array_V15L;
l_recog_line_1                NUMBER;
l_recog_line_2                NUMBER;

l_bflow_applied_to_amt_idx    NUMBER;                                -- 5132302
l_bflow_applied_to_amt        NUMBER;                                -- 5132302
l_bflow_applied_to_amts       xla_ae_journal_entry_pkg.t_array_num;  -- 5132302

l_event_id                    NUMBER;  -- To handle MPA header Description: xla_ae_header_pkg.SetHdrDescription

--l_rounding_ccy                VARCHAR2(15); -- To handle MPA rounding  4262811b
l_same_currency               BOOLEAN;        -- To handle MPA rounding  4262811b

---------------------------------------------------------------------------------------------------------------


--
-- bulk performance
--
l_balance_type_code           VARCHAR2(1);
l_rec_acct_attrs              XLA_AE_LINES_PKG.t_rec_acct_attrs;
l_log_module                  VARCHAR2(240);

--
-- Upgrade strategy
--
l_actual_upg_option           VARCHAR2(1);
l_enc_upg_option           VARCHAR2(1);

--
BEGIN
--
IF g_log_enabled THEN
      l_log_module := C_DEFAULT_MODULE||'.AcctLineType_46';
END IF;
--
IF (C_LEVEL_PROCEDURE >= g_log_level) THEN

      trace
         (p_msg      => 'BEGIN of AcctLineType_46'
         ,p_level    => C_LEVEL_PROCEDURE
         ,p_module   => l_log_module);

END IF;
--
l_component_type             := 'AMB_JLT';
l_component_code             := 'AP_NON_RECOV_TAX_DM_ENC_DR';
l_component_type_code        := 'S';
l_component_appl_id          :=  200;
l_amb_context_code           := 'DEFAULT';
l_entity_code                := 'AP_INVOICES';
l_event_class_code           := 'DEBIT MEMOS';
l_event_type_code            := 'DEBIT MEMOS_ALL';
l_line_definition_owner_code := 'S';
l_line_definition_code       := 'ENC_DM_ALL';
--
l_balance_type_code          := 'E';
l_segment                     := NULL;
l_ccid                        := NULL;
l_adr_transaction_coa_id      := NULL;
l_adr_accounting_coa_id       := NULL;
l_adr_flexfield_segment_code  := NULL;
l_adr_flex_value_set_id       := NULL;
l_adr_value_type_code         := NULL;
l_adr_value_combination_id    := NULL;
l_adr_value_segment_code      := NULL;

l_bflow_method_code          := 'NONE';   -- 4219869 Business Flow
l_bflow_class_code           := 'AP_INV_ENCUM';    -- 4219869 Business Flow
l_inherit_desc_flag          := 'N';   -- 4219869 Business Flow
l_budgetary_control_flag     := 'Y';

l_bflow_applied_to_amt_idx   := NULL; -- 5132302
l_bflow_applied_to_amt       := NULL; -- 5132302
l_entered_amt_idx            := NULL;          -- 4262811
l_accted_amt_idx             := NULL;          -- 4262811
l_acc_rev_flag               := NULL;          -- 4262811
l_accrual_line_num           := NULL;          -- 4262811
l_tmp_amt                    := NULL;          -- 4262811
--
 
IF XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id = XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.ledger_id OR
    l_balance_type_code <> 'B' THEN
IF NVL(p_source_15,'
') =  'NONREC_TAX' AND 
NVL(p_source_59,'
') <>  'Y' AND 
NVL(p_source_17,'
') =  'Y' AND 
NVL(p_source_18,'
') <>  'Y'
 THEN 

   --
   XLA_AE_LINES_PKG.SetNewLine;

   p_balance_type_code          := l_balance_type_code;
   -- set the flag so later we will know whether the gain loss line needs to be created
   
   IF(l_balance_type_code = 'A' and p_actual_flag is null) THEN
     p_actual_flag :='A';
   END IF;

   --
   -- bulk performance
   --
   XLA_AE_LINES_PKG.set_ae_header_id (p_ae_header_id => p_event_id ,
                                      p_header_num   => 0); -- 4262811
   --
   -- set accounting line options
   --
   l_ae_header_id:= xla_ae_lines_pkg.SetAcctLineOption(
           p_natural_side_code          => 'D'
         , p_gain_or_loss_flag          => 'N'
         , p_gl_transfer_mode_code      => 'S'
         , p_acct_entry_type_code       => 'E'
         , p_switch_side_flag           => 'Y'
         , p_merge_duplicate_code       => 'N'
         );
   --
   l_acc_rev_natural_side_code := 'C';  -- 4262811
   -- 
   --
   -- set accounting line type info
   --
   xla_ae_lines_pkg.SetAcctLineType
      (p_component_type             => l_component_type
      ,p_event_type_code            => l_event_type_code
      ,p_line_definition_owner_code => l_line_definition_owner_code
      ,p_line_definition_code       => l_line_definition_code
      ,p_accounting_line_code       => l_component_code
      ,p_accounting_line_type_code  => l_component_type_code
      ,p_accounting_line_appl_id    => l_component_appl_id
      ,p_amb_context_code           => l_amb_context_code
      ,p_entity_code                => l_entity_code
      ,p_event_class_code           => l_event_class_code);
   --
   -- set accounting class
   --
   xla_ae_lines_pkg.SetAcctClass(
           p_accounting_class_code  => 'NRTAX'
         , p_ae_header_id           => l_ae_header_id
         );

   --
   -- set rounding class
   --
   XLA_AE_LINES_PKG.g_rec_lines.array_rounding_class(XLA_AE_LINES_PKG.g_LineNumber) :=
                      'NRTAX';

   --
   xla_ae_lines_pkg.g_rec_lines.array_calculate_acctd_flag(xla_ae_lines_pkg.g_LineNumber) := p_calculate_acctd_flag;
   xla_ae_lines_pkg.g_rec_lines.array_calculate_g_l_flag(xla_ae_lines_pkg.g_LineNumber) := p_calculate_g_l_flag;
   --
   -- bulk performance
   --
   XLA_AE_LINES_PKG.g_rec_lines.array_balance_type_code(XLA_AE_LINES_PKG.g_LineNumber) := l_balance_type_code;

   XLA_AE_LINES_PKG.g_rec_lines.array_ledger_id(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id;

   -- 4955764
   XLA_AE_LINES_PKG.g_rec_lines.array_gl_date(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_HEADER_PKG.g_rec_header_new.array_gl_date(g_array_event(p_event_id).array_value_num('header_index'));

   -- 4458381 Public Sector Enh
      XLA_AE_LINES_PKG.g_rec_lines.array_encumbrance_type_id(XLA_AE_LINES_PKG.g_LineNumber) := 1060;
   --
   -- set accounting attributes for the line type
   --
   l_entered_amt_idx := 23;
   l_accted_amt_idx  := 28;
   l_bflow_applied_to_amt_idx  := NULL;  -- 5132302
   l_rec_acct_attrs.array_acct_attr_code(1) := 'ACCOUNTING_REVERSAL_OPTION';
   l_rec_acct_attrs.array_char_value(1)  := p_source_19;
   l_rec_acct_attrs.array_acct_attr_code(2) := 'ALLOC_TO_APPLICATION_ID';
   l_rec_acct_attrs.array_num_value(2)  := 
xla_ae_sources_pkg.GetSystemSourceNum(
   p_source_code           => 'XLA_EVENT_APPL_ID'
 , p_source_type_code      => 'Y'
 , p_source_application_id =>  602
);
   l_rec_acct_attrs.array_acct_attr_code(3) := 'ALLOC_TO_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(3)  := p_source_21;
   l_rec_acct_attrs.array_acct_attr_code(4) := 'ALLOC_TO_ENTITY_CODE';
   l_rec_acct_attrs.array_char_value(4)  := 
xla_ae_sources_pkg.GetSystemSourceChar(
   p_source_code           => 'XLA_ENTITY_CODE'
 , p_source_type_code      => 'Y'
 , p_source_application_id =>  602
);
   l_rec_acct_attrs.array_acct_attr_code(5) := 'ALLOC_TO_FIRST_DIST_ID';
   l_rec_acct_attrs.array_num_value(5)  :=  to_char(p_source_23);
   l_rec_acct_attrs.array_acct_attr_code(6) := 'ALLOC_TO_FIRST_SYS_TRAN_ID';
   l_rec_acct_attrs.array_num_value(6)  :=  to_char(p_source_24);
   l_rec_acct_attrs.array_acct_attr_code(7) := 'APPLIED_TO_APPLICATION_ID';
   l_rec_acct_attrs.array_num_value(7)  := p_source_25;
   l_rec_acct_attrs.array_acct_attr_code(8) := 'APPLIED_TO_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(8)  := p_source_26;
   l_rec_acct_attrs.array_acct_attr_code(9) := 'APPLIED_TO_ENTITY_CODE';
   l_rec_acct_attrs.array_char_value(9)  := p_source_27;
   l_rec_acct_attrs.array_acct_attr_code(10) := 'APPLIED_TO_FIRST_DIST_ID';
   l_rec_acct_attrs.array_num_value(10)  :=  to_char(p_source_28);
   l_rec_acct_attrs.array_acct_attr_code(11) := 'APPLIED_TO_FIRST_SYS_TRAN_ID';
   l_rec_acct_attrs.array_num_value(11)  :=  to_char(p_source_29);
   l_rec_acct_attrs.array_acct_attr_code(12) := 'DISTRIBUTION_IDENTIFIER_1';
   l_rec_acct_attrs.array_num_value(12)  :=  to_char(p_source_30);
   l_rec_acct_attrs.array_acct_attr_code(13) := 'DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(13)  := p_source_21;
   l_rec_acct_attrs.array_acct_attr_code(14) := 'ENC_UPG_CR_CCID';
   l_rec_acct_attrs.array_num_value(14)  := p_source_31;
   l_rec_acct_attrs.array_acct_attr_code(15) := 'ENC_UPG_CR_ENTERED_AMT';
   l_rec_acct_attrs.array_num_value(15)  := p_source_32;
   l_rec_acct_attrs.array_acct_attr_code(16) := 'ENC_UPG_CR_ENTERED_CURR';
   l_rec_acct_attrs.array_char_value(16)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(17) := 'ENC_UPG_CR_LEDGER_AMT';
   l_rec_acct_attrs.array_num_value(17)  := p_source_34;
   l_rec_acct_attrs.array_acct_attr_code(18) := 'ENC_UPG_DR_CCID';
   l_rec_acct_attrs.array_num_value(18)  := p_source_35;
   l_rec_acct_attrs.array_acct_attr_code(19) := 'ENC_UPG_DR_ENTERED_AMT';
   l_rec_acct_attrs.array_num_value(19)  := p_source_36;
   l_rec_acct_attrs.array_acct_attr_code(20) := 'ENC_UPG_DR_ENTERED_CURR';
   l_rec_acct_attrs.array_char_value(20)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(21) := 'ENC_UPG_DR_LEDGER_AMT';
   l_rec_acct_attrs.array_num_value(21)  := p_source_37;
   l_rec_acct_attrs.array_acct_attr_code(22) := 'ENC_UPG_OPTION';
   l_rec_acct_attrs.array_char_value(22)  := p_source_38;
   l_rec_acct_attrs.array_acct_attr_code(23) := 'ENTERED_CURRENCY_AMOUNT';
   l_rec_acct_attrs.array_num_value(23)  := p_source_65;
   l_rec_acct_attrs.array_acct_attr_code(24) := 'ENTERED_CURRENCY_CODE';
   l_rec_acct_attrs.array_char_value(24)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(25) := 'EXCHANGE_DATE';
   l_rec_acct_attrs.array_date_value(25)  := p_source_39;
   l_rec_acct_attrs.array_acct_attr_code(26) := 'EXCHANGE_RATE';
   l_rec_acct_attrs.array_num_value(26)  := p_source_40;
   l_rec_acct_attrs.array_acct_attr_code(27) := 'EXCHANGE_RATE_TYPE';
   l_rec_acct_attrs.array_char_value(27)  := p_source_41;
   l_rec_acct_attrs.array_acct_attr_code(28) := 'LEDGER_AMOUNT';
   l_rec_acct_attrs.array_num_value(28)  := p_source_66;
   l_rec_acct_attrs.array_acct_attr_code(29) := 'MULTIPERIOD_END_DATE';
   l_rec_acct_attrs.array_date_value(29)  := p_source_43;
   l_rec_acct_attrs.array_acct_attr_code(30) := 'MULTIPERIOD_OPTION';
   l_rec_acct_attrs.array_char_value(30)  := p_source_44;
   l_rec_acct_attrs.array_acct_attr_code(31) := 'MULTIPERIOD_START_DATE';
   l_rec_acct_attrs.array_date_value(31)  := p_source_45;
   l_rec_acct_attrs.array_acct_attr_code(32) := 'OVERRIDE_ACCTD_AMT_FLAG';
   l_rec_acct_attrs.array_char_value(32)  := p_source_46;
   l_rec_acct_attrs.array_acct_attr_code(33) := 'PARTY_ID';
   l_rec_acct_attrs.array_num_value(33)  := p_source_47;
   l_rec_acct_attrs.array_acct_attr_code(34) := 'PARTY_SITE_ID';
   l_rec_acct_attrs.array_num_value(34)  := p_source_48;
   l_rec_acct_attrs.array_acct_attr_code(35) := 'PARTY_TYPE';
   l_rec_acct_attrs.array_char_value(35)  := p_source_49;
   l_rec_acct_attrs.array_acct_attr_code(36) := 'REVERSED_DISTRIBUTION_ID1';
   l_rec_acct_attrs.array_num_value(36)  :=  to_char(p_source_50);
   l_rec_acct_attrs.array_acct_attr_code(37) := 'REVERSED_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(37)  := p_source_21;
   l_rec_acct_attrs.array_acct_attr_code(38) := 'TAX_LINE_REF_ID';
   l_rec_acct_attrs.array_num_value(38)  := p_source_52;
   l_rec_acct_attrs.array_acct_attr_code(39) := 'TAX_REC_NREC_DIST_REF_ID';
   l_rec_acct_attrs.array_num_value(39)  := p_source_53;
   l_rec_acct_attrs.array_acct_attr_code(40) := 'TAX_SUMMARY_LINE_REF_ID';
   l_rec_acct_attrs.array_num_value(40)  := p_source_54;
   l_rec_acct_attrs.array_acct_attr_code(41) := 'UPG_CR_ENC_TYPE_ID';
   l_rec_acct_attrs.array_num_value(41)  := p_source_55;
   l_rec_acct_attrs.array_acct_attr_code(42) := 'UPG_DR_ENC_TYPE_ID';
   l_rec_acct_attrs.array_num_value(42)  := p_source_56;

   XLA_AE_LINES_PKG.SetLineAcctAttrs(l_rec_acct_attrs);
   p_gain_or_loss_ref  := XLA_AE_LINES_PKG.g_rec_lines.array_gain_or_loss_ref(XLA_AE_LINES_PKG.g_LineNumber);

   ---------------------------------------------------------------------------------------------------------------
   -- 4336173 -- assign Business Flow Class (replace code in xla_ae_lines_pkg.Business_Flow_Validation)
   ---------------------------------------------------------------------------------------------------------------
   XLA_AE_LINES_PKG.g_rec_lines.array_business_class_code(XLA_AE_LINES_PKG.g_LineNumber) := l_bflow_class_code;

   l_actual_upg_option  := XLA_AE_LINES_PKG.g_rec_lines.array_actual_upg_option(XLA_AE_LINES_PKG.g_LineNumber);
   l_enc_upg_option     := XLA_AE_LINES_PKG.g_rec_lines.array_enc_upg_option(XLA_AE_LINES_PKG.g_LineNumber);

   IF xla_accounting_cache_pkg.GetValueChar
         (p_source_code         => 'LEDGER_CATEGORY_CODE'
         ,p_target_ledger_id    => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id) IN ('PRIMARY','ALC')
   AND l_bflow_method_code = 'PRIOR_ENTRY'
--   AND (l_actual_upg_option = 'Y' OR l_enc_upg_option = 'Y') Bug 4922099
   AND ( (NVL(l_actual_upg_option, 'N') IN ('Y', 'O')) OR
         (NVL(l_enc_upg_option, 'N') IN ('Y', 'O'))
       )
   THEN
         xla_ae_lines_pkg.BflowUpgEntry
           (p_business_method_code    => l_bflow_method_code
           ,p_business_class_code     => l_bflow_class_code
           ,p_balance_type            => l_balance_type_code);
   ELSE
      NULL;
-- No business flow processing for business flow method of NONE.
   END IF;

   --
   -- call analytical criteria
   --
   
   --
   -- call description
   --
   
xla_ae_lines_pkg.SetLineDescription(
   p_ae_header_id => l_ae_header_id
  ,p_description  => Description_2 (
     p_application_id         => p_application_id
   , p_ae_header_id           => l_ae_header_id 
, p_source_1 => p_source_1
   )
);


   --
   -- call ADRs
   -- Bug 4922099
   --
   IF ( (l_bflow_method_code <> 'PRIOR_ENTRY') OR
        (NVL(l_actual_upg_option, 'N') = 'O') OR
        (NVL(l_enc_upg_option, 'N') = 'O')
      )
   THEN
   NULL;
   --
   --
   
  l_ccid := AcctDerRule_7(
           p_application_id           => p_application_id
         , p_ae_header_id             => l_ae_header_id 
, p_source_11 => p_source_11
         , x_transaction_coa_id       => l_adr_transaction_coa_id
         , x_accounting_coa_id        => l_adr_accounting_coa_id
         , x_value_type_code          => l_adr_value_type_code
         , p_side                     => 'NA'
   );

   xla_ae_lines_pkg.set_ccid(
    p_code_combination_id          => l_ccid
  , p_value_type_code              => l_adr_value_type_code
  , p_transaction_coa_id           => l_adr_transaction_coa_id
  , p_accounting_coa_id            => l_adr_accounting_coa_id
  , p_adr_code                     => 'AP_INVOICE_DIST'
  , p_adr_type_code                => 'S'
  , p_component_type               => l_component_type
  , p_component_code               => l_component_code
  , p_component_type_code          => l_component_type_code
  , p_component_appl_id            => l_component_appl_id
  , p_amb_context_code             => l_amb_context_code
  , p_side                         => 'NA'
  );


   --
   --
   END IF;
   --
   -- Bug 4922099
   IF ( ( (NVL(l_actual_upg_option, 'N') = 'O') OR
          (NVL(l_enc_upg_option, 'N') = 'O')
        ) AND
        (l_bflow_method_code = 'PRIOR_ENTRY')
      )
   THEN
      IF
      --
      1 = 2
      --
      THEN
      xla_accounting_err_pkg.build_message
                                    (p_appli_s_name            => 'XLA'
                                    ,p_msg_name                => 'XLA_UPG_OVERRIDE_ADR_UNDEFINED'
                                    ,p_token_1                 => 'LINE_NUMBER'
                                    ,p_value_1                 => XLA_AE_LINES_PKG.g_LineNumber
                                    ,p_token_2                 => 'LINE_TYPE_NAME'
                                    ,p_value_2                 => XLA_AE_SOURCES_PKG.GetComponentName (
                                                                             l_component_type
                                                                            ,l_component_code
                                                                            ,l_component_type_code
                                                                            ,l_component_appl_id
                                                                            ,l_amb_context_code
                                                                            ,l_entity_code
                                                                            ,l_event_class_code
                                                                           )
                                    ,p_token_3                 => 'OWNER'
                                    ,p_value_3                 => xla_lookups_pkg.get_meaning(
                                                                          p_lookup_type     => 'XLA_OWNER_TYPE'
                                                                          ,p_lookup_code    => l_component_type_code
                                                                         )
                                    ,p_token_4                 => 'PRODUCT_NAME'
                                    ,p_value_4                 => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.application_name
                                    ,p_entity_id               => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.entity_id
                                    ,p_event_id                => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.event_id
                                    ,p_ledger_id               => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id
                                    ,p_ae_header_id            =>  NULL
                                       );

        IF (C_LEVEL_ERROR>= g_log_level) THEN
                 trace
                      (p_msg      => 'ERROR: XLA_UPG_OVERRIDE_ADR_UNDEFINED'
                      ,p_level    => C_LEVEL_ERROR
                      ,p_module   => l_log_module);
        END IF;
      END IF;
   END IF;
   --
   --
   ------------------------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- NOTE: XLA_AE_LINES_PKG.ValidateCurrentLine should NOT be generated if business flow method is
   -- Prior Entry.  Currently, the following code is always generated.
   ------------------------------------------------------------------------------------------------
   XLA_AE_LINES_PKG.ValidateCurrentLine;

   ------------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- Populated credit and debit amounts -- Need to generate this within IF <condition>
   ------------------------------------------------------------------------------------
   XLA_AE_LINES_PKG.SetDebitCreditAmounts;

   ----------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- Update journal entry status -- Need to generate this within IF <condition>
   ----------------------------------------------------------------------------------
   XLA_AE_JOURNAL_ENTRY_PKG.UpdateJournalEntryStatus
         (p_hdr_idx => g_array_event(p_event_id).array_value_num('header_index')
         ,p_balance_type_code => l_balance_type_code
         );

   -------------------------------------------------------------------------------------------
   -- 4262811 - Generate the Accrual Reversal lines
   -------------------------------------------------------------------------------------------
   BEGIN
      l_acc_rev_flag := XLA_AE_HEADER_PKG.g_rec_header_new.array_accrual_reversal_flag
                              (g_array_event(p_event_id).array_value_num('header_index'));
      IF l_acc_rev_flag IS NULL THEN
         l_acc_rev_flag := 'N';
      END IF;
   EXCEPTION
      WHEN OTHERS THEN
         l_acc_rev_flag := 'N';
   END;
   --
   IF (l_acc_rev_flag = 'Y') THEN

       -- 4645092  ------------------------------------------------------------------------------
       -- To allow MPA report to determine if it should generate report process
       XLA_ACCOUNTING_PKG.g_mpa_accrual_exists := 'Y';
       ------------------------------------------------------------------------------------------

       l_accrual_line_num := XLA_AE_LINES_PKG.g_LineNumber;
       XLA_AE_LINES_PKG.CopyLineInfo(l_accrual_line_num);
   -- added call to set_ccid to execute mapping  for secondary accrual reversal entries bug 7444204
   -- call ADRs
   -- Bug 4922099
   --
   IF ( (l_bflow_method_code <> 'PRIOR_ENTRY') OR
        (NVL(l_actual_upg_option, 'N') = 'O') OR
        (NVL(l_enc_upg_option, 'N') = 'O')
      )
   THEN
   NULL;
   --
   --
   
  l_ccid := AcctDerRule_7(
           p_application_id           => p_application_id
         , p_ae_header_id             => l_ae_header_id 
, p_source_11 => p_source_11
         , x_transaction_coa_id       => l_adr_transaction_coa_id
         , x_accounting_coa_id        => l_adr_accounting_coa_id
         , x_value_type_code          => l_adr_value_type_code
         , p_side                     => 'NA'
   );

   xla_ae_lines_pkg.set_ccid(
    p_code_combination_id          => l_ccid
  , p_value_type_code              => l_adr_value_type_code
  , p_transaction_coa_id           => l_adr_transaction_coa_id
  , p_accounting_coa_id            => l_adr_accounting_coa_id
  , p_adr_code                     => 'AP_INVOICE_DIST'
  , p_adr_type_code                => 'S'
  , p_component_type               => l_component_type
  , p_component_code               => l_component_code
  , p_component_type_code          => l_component_type_code
  , p_component_appl_id            => l_component_appl_id
  , p_amb_context_code             => l_amb_context_code
  , p_side                         => 'NA'
  );


   --
   --
   END IF;

       --
       -- Update the line information that should be overwritten
       --
       XLA_AE_LINES_PKG.set_ae_header_id(p_ae_header_id => p_event_id ,
                                         p_header_num   => 1);
       XLA_AE_LINES_PKG.g_rec_lines.array_header_num(XLA_AE_LINES_PKG.g_LineNumber)  :=1;

       XLA_AE_LINES_PKG.g_rec_lines.array_business_class_code(XLA_AE_LINES_PKG.g_LineNumber) := NULL; -- 4669271

       IF l_bflow_method_code <> 'NONE' THEN  -- 4655713b
          XLA_AE_LINES_PKG.g_rec_lines.array_reversal_code(XLA_AE_LINES_PKG.g_LineNumber) := CONCAT('MPA_',l_bflow_method_code);
       END IF;

      --
      -- Depending on the Reversal Method setup, do a switch side or changes sign for the amounts
      --
      IF (XLA_AE_JOURNAL_ENTRY_PKG.g_cache_ledgers_info.ledger_reversal_option = 'SIDE') THEN
          XLA_AE_LINES_PKG.g_rec_lines.array_natural_side_code(XLA_AE_LINES_PKG.g_LineNumber) :=  l_acc_rev_natural_side_code;
      ELSE
          ---------------------------------------------------------------------------------------------------
          -- 4262811a Switch Sign
          ---------------------------------------------------------------------------------------------------
          XLA_AE_LINES_PKG.g_rec_lines.array_switch_side_flag(XLA_AE_LINES_PKG.g_LineNumber) := 'N';  -- 5052518
          XLA_AE_LINES_PKG.g_rec_lines.array_ledger_amount(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_ledger_amount(XLA_AE_LINES_PKG.g_LineNumber) * -1;
          XLA_AE_LINES_PKG.g_rec_lines.array_entered_amount(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_entered_amount(XLA_AE_LINES_PKG.g_LineNumber) * -1;
          -- 5132302
          XLA_AE_LINES_PKG.g_rec_lines.array_bflow_applied_to_amt(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_bflow_applied_to_amt(XLA_AE_LINES_PKG.g_LineNumber) * -1;

      END IF;

      -- 4955764
      XLA_AE_LINES_PKG.g_rec_lines.array_gl_date(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_HEADER_PKG.g_rec_header_new.array_gl_date(g_array_event(p_event_id).array_value_num('acc_rev_header_index'));


      XLA_AE_LINES_PKG.ValidateCurrentLine;
      XLA_AE_LINES_PKG.SetDebitCreditAmounts;

      XLA_AE_JOURNAL_ENTRY_PKG.UpdateJournalEntryStatus
               (p_hdr_idx           => g_array_event(p_event_id).array_value_num('acc_rev_header_index')
               ,p_balance_type_code => l_balance_type_code);

   END IF;

   -----------------------------------------------------------------------------------------
   -- 4262811 Multiperiod Accounting
   -----------------------------------------------------------------------------------------
     -- No MPA option is assigned.


END IF;
END IF;
--

--
IF (C_LEVEL_PROCEDURE >= g_log_level) THEN
   trace
      (p_msg      => 'END of AcctLineType_46'
      ,p_level    => C_LEVEL_PROCEDURE
      ,p_module   => l_log_module);
END IF;
--
EXCEPTION
  WHEN xla_exceptions_pkg.application_exception THEN
      RAISE;
  WHEN OTHERS THEN
       xla_exceptions_pkg.raise_message
           (p_location => 'XLA_00200_AAD_S_000010_BC_PKG.AcctLineType_46');
END AcctLineType_46;
--

---------------------------------------
--
-- PRIVATE FUNCTION
--         AcctLineType_47
--
---------------------------------------
PROCEDURE AcctLineType_47 (
  p_application_id        IN NUMBER
 ,p_event_id              IN NUMBER
 ,p_calculate_acctd_flag  IN VARCHAR2
 ,p_calculate_g_l_flag    IN VARCHAR2
 ,p_actual_flag           IN OUT VARCHAR2
 ,p_balance_type_code     OUT VARCHAR2
 ,p_gain_or_loss_ref      OUT VARCHAR2
 
--Invoice Distribution Description
 , p_source_1            IN VARCHAR2
--Invoice Distribution Account
 , p_source_11            IN NUMBER
--Invoice Distribution Type
 , p_source_15            IN VARCHAR2
 , p_source_15_meaning    IN VARCHAR2
--Purchasing Encumbrance Option
 , p_source_17            IN VARCHAR2
 , p_source_17_meaning    IN VARCHAR2
--Accrue on Receipt Option
 , p_source_18            IN VARCHAR2
 , p_source_18_meaning    IN VARCHAR2
--Accounting Reversal Indicator
 , p_source_19            IN VARCHAR2
--Distribution Link Type
 , p_source_21            IN VARCHAR2
--Allocation to Main Distribution Identifier
 , p_source_23            IN NUMBER
--Invoice Identifier
 , p_source_24            IN NUMBER
--Business Flow Accounts Payable Application Identifier
 , p_source_25            IN NUMBER
--Business Flow Invoice Distribution Type
 , p_source_26            IN VARCHAR2
--Business Flow Invoice Entity Code
 , p_source_27            IN VARCHAR2
--Business Flow Invoice Distribution Identifier
 , p_source_28            IN NUMBER
--Business Flow Invoice Identifier
 , p_source_29            IN NUMBER
--Invoice Distribution Identifier
 , p_source_30            IN NUMBER
--Payables Encumbrance Upgrade Credit Account
 , p_source_31            IN NUMBER
--Payables Encumbrance Upgrade Credit Amount
 , p_source_32            IN NUMBER
--Invoice Currency Code
 , p_source_33            IN VARCHAR2
--Payables Encumbrance Upgrade Credit Base Amount
 , p_source_34            IN NUMBER
--Payables Encumbrance Upgrade Debit Account
 , p_source_35            IN NUMBER
--Payables Encumbrance Upgrade Debit Amount
 , p_source_36            IN NUMBER
--Payables Encumbrance Upgrade Debit Base Amount
 , p_source_37            IN NUMBER
--Payables Encumbrance Upgrade Option
 , p_source_38            IN VARCHAR2
--Invoice Exchange Date
 , p_source_39            IN DATE
--Invoice Exchange Rate
 , p_source_40            IN NUMBER
--Invoice Exchange Rate Type
 , p_source_41            IN VARCHAR2
--Deferred Accounting End Date
 , p_source_43            IN DATE
--Deferred Accounting Option
 , p_source_44            IN VARCHAR2
--Deferred Accounting Start Date
 , p_source_45            IN DATE
--Override Accounted Amount Indicator
 , p_source_46            IN VARCHAR2
 , p_source_46_meaning    IN VARCHAR2
--Invoice Supplier Identifier
 , p_source_47            IN NUMBER
--Invoice Supplier Site Identifier
 , p_source_48            IN NUMBER
--Third Party Type
 , p_source_49            IN VARCHAR2
--Parent Reversal Identifier
 , p_source_50            IN NUMBER
--Invoice Distribution Statistical Amount
 , p_source_51            IN NUMBER
--Invoice Distribution Tax Line Identifier
 , p_source_52            IN NUMBER
--Invoice Distribution Tax Distribution Identifier from Tax
 , p_source_53            IN NUMBER
--Invoice Distribution Summary Tax Line Identifier
 , p_source_54            IN NUMBER
--Payables Upgrade Credit Encumbrance Type Identifier
 , p_source_55            IN NUMBER
--Payables Upgrade Debit Encumbrance Type Identifier
 , p_source_56            IN NUMBER
--Invoice Distribution Amount
 , p_source_57            IN NUMBER
--Self-Assessed Tax Flag
 , p_source_59            IN VARCHAR2
 , p_source_59_meaning    IN VARCHAR2
--Invoice Distribution Encumbrance Amount
 , p_source_65            IN NUMBER
--Invoice Distribution Encumbrance Ledger Amount
 , p_source_66            IN NUMBER
)
IS

l_component_type              VARCHAR2(80);
l_component_code              VARCHAR2(30);
l_component_type_code         VARCHAR2(1);
l_component_appl_id           INTEGER;
l_amb_context_code            VARCHAR2(30);
l_entity_code                 VARCHAR2(30);
l_event_class_code            VARCHAR2(30);
l_ae_header_id                NUMBER;
l_event_type_code             VARCHAR2(30);
l_line_definition_code        VARCHAR2(30);
l_line_definition_owner_code  VARCHAR2(1);
--
-- adr variables
l_segment                     VARCHAR2(30);
l_ccid                        NUMBER;
l_adr_transaction_coa_id      NUMBER;
l_adr_accounting_coa_id       NUMBER;
l_adr_flexfield_segment_code  VARCHAR2(30);
l_adr_flex_value_set_id       NUMBER;
l_adr_value_type_code         VARCHAR2(30);
l_adr_value_combination_id    NUMBER;
l_adr_value_segment_code      VARCHAR2(30);

l_bflow_method_code           VARCHAR2(30);  -- 4219869 Business Flow
l_bflow_class_code            VARCHAR2(30);  -- 4219869 Business Flow
l_inherit_desc_flag           VARCHAR2(1);   -- 4219869 Business Flow
l_budgetary_control_flag      VARCHAR2(1);   -- 4458381 Public Sector Enh

-- 4262811 Variables ------------------------------------------------------------------------------------------
l_entered_amt_idx             NUMBER;
l_accted_amt_idx              NUMBER;
l_acc_rev_flag                VARCHAR2(1);
l_accrual_line_num            NUMBER;
l_tmp_amt                     NUMBER;
l_acc_rev_natural_side_code   VARCHAR2(1);

l_num_entries                 NUMBER;
l_gl_dates                    xla_ae_journal_entry_pkg.t_array_date;
l_accted_amts                 xla_ae_journal_entry_pkg.t_array_num;
l_entered_amts                xla_ae_journal_entry_pkg.t_array_num;
l_period_names                xla_ae_journal_entry_pkg.t_array_V15L;
l_recog_line_1                NUMBER;
l_recog_line_2                NUMBER;

l_bflow_applied_to_amt_idx    NUMBER;                                -- 5132302
l_bflow_applied_to_amt        NUMBER;                                -- 5132302
l_bflow_applied_to_amts       xla_ae_journal_entry_pkg.t_array_num;  -- 5132302

l_event_id                    NUMBER;  -- To handle MPA header Description: xla_ae_header_pkg.SetHdrDescription

--l_rounding_ccy                VARCHAR2(15); -- To handle MPA rounding  4262811b
l_same_currency               BOOLEAN;        -- To handle MPA rounding  4262811b

---------------------------------------------------------------------------------------------------------------


--
-- bulk performance
--
l_balance_type_code           VARCHAR2(1);
l_rec_acct_attrs              XLA_AE_LINES_PKG.t_rec_acct_attrs;
l_log_module                  VARCHAR2(240);

--
-- Upgrade strategy
--
l_actual_upg_option           VARCHAR2(1);
l_enc_upg_option           VARCHAR2(1);

--
BEGIN
--
IF g_log_enabled THEN
      l_log_module := C_DEFAULT_MODULE||'.AcctLineType_47';
END IF;
--
IF (C_LEVEL_PROCEDURE >= g_log_level) THEN

      trace
         (p_msg      => 'BEGIN of AcctLineType_47'
         ,p_level    => C_LEVEL_PROCEDURE
         ,p_module   => l_log_module);

END IF;
--
l_component_type             := 'AMB_JLT';
l_component_code             := 'AP_NON_RECOV_TAX_INV_ENC_DR';
l_component_type_code        := 'S';
l_component_appl_id          :=  200;
l_amb_context_code           := 'DEFAULT';
l_entity_code                := 'AP_INVOICES';
l_event_class_code           := 'INVOICES';
l_event_type_code            := 'INVOICES_ALL';
l_line_definition_owner_code := 'S';
l_line_definition_code       := 'ENC_INVOICES_ALL';
--
l_balance_type_code          := 'E';
l_segment                     := NULL;
l_ccid                        := NULL;
l_adr_transaction_coa_id      := NULL;
l_adr_accounting_coa_id       := NULL;
l_adr_flexfield_segment_code  := NULL;
l_adr_flex_value_set_id       := NULL;
l_adr_value_type_code         := NULL;
l_adr_value_combination_id    := NULL;
l_adr_value_segment_code      := NULL;

l_bflow_method_code          := 'NONE';   -- 4219869 Business Flow
l_bflow_class_code           := 'AP_INV_ENCUM';    -- 4219869 Business Flow
l_inherit_desc_flag          := 'N';   -- 4219869 Business Flow
l_budgetary_control_flag     := 'Y';

l_bflow_applied_to_amt_idx   := NULL; -- 5132302
l_bflow_applied_to_amt       := NULL; -- 5132302
l_entered_amt_idx            := NULL;          -- 4262811
l_accted_amt_idx             := NULL;          -- 4262811
l_acc_rev_flag               := NULL;          -- 4262811
l_accrual_line_num           := NULL;          -- 4262811
l_tmp_amt                    := NULL;          -- 4262811
--
 
IF XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id = XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.ledger_id OR
    l_balance_type_code <> 'B' THEN
IF NVL(p_source_15,'
') =  'NONREC_TAX' AND 
NVL(p_source_59,'
') <>  'Y' AND 
NVL(p_source_17,'
') =  'Y' AND 
NVL(p_source_18,'
') <>  'Y'
 THEN 

   --
   XLA_AE_LINES_PKG.SetNewLine;

   p_balance_type_code          := l_balance_type_code;
   -- set the flag so later we will know whether the gain loss line needs to be created
   
   IF(l_balance_type_code = 'A' and p_actual_flag is null) THEN
     p_actual_flag :='A';
   END IF;

   --
   -- bulk performance
   --
   XLA_AE_LINES_PKG.set_ae_header_id (p_ae_header_id => p_event_id ,
                                      p_header_num   => 0); -- 4262811
   --
   -- set accounting line options
   --
   l_ae_header_id:= xla_ae_lines_pkg.SetAcctLineOption(
           p_natural_side_code          => 'D'
         , p_gain_or_loss_flag          => 'N'
         , p_gl_transfer_mode_code      => 'S'
         , p_acct_entry_type_code       => 'E'
         , p_switch_side_flag           => 'Y'
         , p_merge_duplicate_code       => 'N'
         );
   --
   l_acc_rev_natural_side_code := 'C';  -- 4262811
   -- 
   --
   -- set accounting line type info
   --
   xla_ae_lines_pkg.SetAcctLineType
      (p_component_type             => l_component_type
      ,p_event_type_code            => l_event_type_code
      ,p_line_definition_owner_code => l_line_definition_owner_code
      ,p_line_definition_code       => l_line_definition_code
      ,p_accounting_line_code       => l_component_code
      ,p_accounting_line_type_code  => l_component_type_code
      ,p_accounting_line_appl_id    => l_component_appl_id
      ,p_amb_context_code           => l_amb_context_code
      ,p_entity_code                => l_entity_code
      ,p_event_class_code           => l_event_class_code);
   --
   -- set accounting class
   --
   xla_ae_lines_pkg.SetAcctClass(
           p_accounting_class_code  => 'NRTAX'
         , p_ae_header_id           => l_ae_header_id
         );

   --
   -- set rounding class
   --
   XLA_AE_LINES_PKG.g_rec_lines.array_rounding_class(XLA_AE_LINES_PKG.g_LineNumber) :=
                      'NRTAX';

   --
   xla_ae_lines_pkg.g_rec_lines.array_calculate_acctd_flag(xla_ae_lines_pkg.g_LineNumber) := p_calculate_acctd_flag;
   xla_ae_lines_pkg.g_rec_lines.array_calculate_g_l_flag(xla_ae_lines_pkg.g_LineNumber) := p_calculate_g_l_flag;
   --
   -- bulk performance
   --
   XLA_AE_LINES_PKG.g_rec_lines.array_balance_type_code(XLA_AE_LINES_PKG.g_LineNumber) := l_balance_type_code;

   XLA_AE_LINES_PKG.g_rec_lines.array_ledger_id(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id;

   -- 4955764
   XLA_AE_LINES_PKG.g_rec_lines.array_gl_date(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_HEADER_PKG.g_rec_header_new.array_gl_date(g_array_event(p_event_id).array_value_num('header_index'));

   -- 4458381 Public Sector Enh
      XLA_AE_LINES_PKG.g_rec_lines.array_encumbrance_type_id(XLA_AE_LINES_PKG.g_LineNumber) := 1060;
   --
   -- set accounting attributes for the line type
   --
   l_entered_amt_idx := 24;
   l_accted_amt_idx  := 29;
   l_bflow_applied_to_amt_idx  := 7;  -- 5132302
   l_rec_acct_attrs.array_acct_attr_code(1) := 'ACCOUNTING_REVERSAL_OPTION';
   l_rec_acct_attrs.array_char_value(1)  := p_source_19;
   l_rec_acct_attrs.array_acct_attr_code(2) := 'ALLOC_TO_APPLICATION_ID';
   l_rec_acct_attrs.array_num_value(2)  := 
xla_ae_sources_pkg.GetSystemSourceNum(
   p_source_code           => 'XLA_EVENT_APPL_ID'
 , p_source_type_code      => 'Y'
 , p_source_application_id =>  602
);
   l_rec_acct_attrs.array_acct_attr_code(3) := 'ALLOC_TO_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(3)  := p_source_21;
   l_rec_acct_attrs.array_acct_attr_code(4) := 'ALLOC_TO_ENTITY_CODE';
   l_rec_acct_attrs.array_char_value(4)  := 
xla_ae_sources_pkg.GetSystemSourceChar(
   p_source_code           => 'XLA_ENTITY_CODE'
 , p_source_type_code      => 'Y'
 , p_source_application_id =>  602
);
   l_rec_acct_attrs.array_acct_attr_code(5) := 'ALLOC_TO_FIRST_DIST_ID';
   l_rec_acct_attrs.array_num_value(5)  :=  to_char(p_source_23);
   l_rec_acct_attrs.array_acct_attr_code(6) := 'ALLOC_TO_FIRST_SYS_TRAN_ID';
   l_rec_acct_attrs.array_num_value(6)  :=  to_char(p_source_24);
   l_rec_acct_attrs.array_acct_attr_code(7) := 'APPLIED_TO_AMOUNT';
   l_rec_acct_attrs.array_num_value(7)  := p_source_57;
   l_rec_acct_attrs.array_acct_attr_code(8) := 'APPLIED_TO_APPLICATION_ID';
   l_rec_acct_attrs.array_num_value(8)  := p_source_25;
   l_rec_acct_attrs.array_acct_attr_code(9) := 'APPLIED_TO_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(9)  := p_source_26;
   l_rec_acct_attrs.array_acct_attr_code(10) := 'APPLIED_TO_ENTITY_CODE';
   l_rec_acct_attrs.array_char_value(10)  := p_source_27;
   l_rec_acct_attrs.array_acct_attr_code(11) := 'APPLIED_TO_FIRST_DIST_ID';
   l_rec_acct_attrs.array_num_value(11)  :=  to_char(p_source_28);
   l_rec_acct_attrs.array_acct_attr_code(12) := 'APPLIED_TO_FIRST_SYS_TRAN_ID';
   l_rec_acct_attrs.array_num_value(12)  :=  to_char(p_source_29);
   l_rec_acct_attrs.array_acct_attr_code(13) := 'DISTRIBUTION_IDENTIFIER_1';
   l_rec_acct_attrs.array_num_value(13)  :=  to_char(p_source_30);
   l_rec_acct_attrs.array_acct_attr_code(14) := 'DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(14)  := p_source_21;
   l_rec_acct_attrs.array_acct_attr_code(15) := 'ENC_UPG_CR_CCID';
   l_rec_acct_attrs.array_num_value(15)  := p_source_31;
   l_rec_acct_attrs.array_acct_attr_code(16) := 'ENC_UPG_CR_ENTERED_AMT';
   l_rec_acct_attrs.array_num_value(16)  := p_source_32;
   l_rec_acct_attrs.array_acct_attr_code(17) := 'ENC_UPG_CR_ENTERED_CURR';
   l_rec_acct_attrs.array_char_value(17)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(18) := 'ENC_UPG_CR_LEDGER_AMT';
   l_rec_acct_attrs.array_num_value(18)  := p_source_34;
   l_rec_acct_attrs.array_acct_attr_code(19) := 'ENC_UPG_DR_CCID';
   l_rec_acct_attrs.array_num_value(19)  := p_source_35;
   l_rec_acct_attrs.array_acct_attr_code(20) := 'ENC_UPG_DR_ENTERED_AMT';
   l_rec_acct_attrs.array_num_value(20)  := p_source_36;
   l_rec_acct_attrs.array_acct_attr_code(21) := 'ENC_UPG_DR_ENTERED_CURR';
   l_rec_acct_attrs.array_char_value(21)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(22) := 'ENC_UPG_DR_LEDGER_AMT';
   l_rec_acct_attrs.array_num_value(22)  := p_source_37;
   l_rec_acct_attrs.array_acct_attr_code(23) := 'ENC_UPG_OPTION';
   l_rec_acct_attrs.array_char_value(23)  := p_source_38;
   l_rec_acct_attrs.array_acct_attr_code(24) := 'ENTERED_CURRENCY_AMOUNT';
   l_rec_acct_attrs.array_num_value(24)  := p_source_65;
   l_rec_acct_attrs.array_acct_attr_code(25) := 'ENTERED_CURRENCY_CODE';
   l_rec_acct_attrs.array_char_value(25)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(26) := 'EXCHANGE_DATE';
   l_rec_acct_attrs.array_date_value(26)  := p_source_39;
   l_rec_acct_attrs.array_acct_attr_code(27) := 'EXCHANGE_RATE';
   l_rec_acct_attrs.array_num_value(27)  := p_source_40;
   l_rec_acct_attrs.array_acct_attr_code(28) := 'EXCHANGE_RATE_TYPE';
   l_rec_acct_attrs.array_char_value(28)  := p_source_41;
   l_rec_acct_attrs.array_acct_attr_code(29) := 'LEDGER_AMOUNT';
   l_rec_acct_attrs.array_num_value(29)  := p_source_66;
   l_rec_acct_attrs.array_acct_attr_code(30) := 'MULTIPERIOD_END_DATE';
   l_rec_acct_attrs.array_date_value(30)  := p_source_43;
   l_rec_acct_attrs.array_acct_attr_code(31) := 'MULTIPERIOD_OPTION';
   l_rec_acct_attrs.array_char_value(31)  := p_source_44;
   l_rec_acct_attrs.array_acct_attr_code(32) := 'MULTIPERIOD_START_DATE';
   l_rec_acct_attrs.array_date_value(32)  := p_source_45;
   l_rec_acct_attrs.array_acct_attr_code(33) := 'OVERRIDE_ACCTD_AMT_FLAG';
   l_rec_acct_attrs.array_char_value(33)  := p_source_46;
   l_rec_acct_attrs.array_acct_attr_code(34) := 'PARTY_ID';
   l_rec_acct_attrs.array_num_value(34)  := p_source_47;
   l_rec_acct_attrs.array_acct_attr_code(35) := 'PARTY_SITE_ID';
   l_rec_acct_attrs.array_num_value(35)  := p_source_48;
   l_rec_acct_attrs.array_acct_attr_code(36) := 'PARTY_TYPE';
   l_rec_acct_attrs.array_char_value(36)  := p_source_49;
   l_rec_acct_attrs.array_acct_attr_code(37) := 'REVERSED_DISTRIBUTION_ID1';
   l_rec_acct_attrs.array_num_value(37)  :=  to_char(p_source_50);
   l_rec_acct_attrs.array_acct_attr_code(38) := 'REVERSED_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(38)  := p_source_21;
   l_rec_acct_attrs.array_acct_attr_code(39) := 'STATISTICAL_AMOUNT';
   l_rec_acct_attrs.array_num_value(39)  := p_source_51;
   l_rec_acct_attrs.array_acct_attr_code(40) := 'TAX_LINE_REF_ID';
   l_rec_acct_attrs.array_num_value(40)  := p_source_52;
   l_rec_acct_attrs.array_acct_attr_code(41) := 'TAX_REC_NREC_DIST_REF_ID';
   l_rec_acct_attrs.array_num_value(41)  := p_source_53;
   l_rec_acct_attrs.array_acct_attr_code(42) := 'TAX_SUMMARY_LINE_REF_ID';
   l_rec_acct_attrs.array_num_value(42)  := p_source_54;
   l_rec_acct_attrs.array_acct_attr_code(43) := 'UPG_CR_ENC_TYPE_ID';
   l_rec_acct_attrs.array_num_value(43)  := p_source_55;
   l_rec_acct_attrs.array_acct_attr_code(44) := 'UPG_DR_ENC_TYPE_ID';
   l_rec_acct_attrs.array_num_value(44)  := p_source_56;

   XLA_AE_LINES_PKG.SetLineAcctAttrs(l_rec_acct_attrs);
   p_gain_or_loss_ref  := XLA_AE_LINES_PKG.g_rec_lines.array_gain_or_loss_ref(XLA_AE_LINES_PKG.g_LineNumber);

   ---------------------------------------------------------------------------------------------------------------
   -- 4336173 -- assign Business Flow Class (replace code in xla_ae_lines_pkg.Business_Flow_Validation)
   ---------------------------------------------------------------------------------------------------------------
   XLA_AE_LINES_PKG.g_rec_lines.array_business_class_code(XLA_AE_LINES_PKG.g_LineNumber) := l_bflow_class_code;

   l_actual_upg_option  := XLA_AE_LINES_PKG.g_rec_lines.array_actual_upg_option(XLA_AE_LINES_PKG.g_LineNumber);
   l_enc_upg_option     := XLA_AE_LINES_PKG.g_rec_lines.array_enc_upg_option(XLA_AE_LINES_PKG.g_LineNumber);

   IF xla_accounting_cache_pkg.GetValueChar
         (p_source_code         => 'LEDGER_CATEGORY_CODE'
         ,p_target_ledger_id    => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id) IN ('PRIMARY','ALC')
   AND l_bflow_method_code = 'PRIOR_ENTRY'
--   AND (l_actual_upg_option = 'Y' OR l_enc_upg_option = 'Y') Bug 4922099
   AND ( (NVL(l_actual_upg_option, 'N') IN ('Y', 'O')) OR
         (NVL(l_enc_upg_option, 'N') IN ('Y', 'O'))
       )
   THEN
         xla_ae_lines_pkg.BflowUpgEntry
           (p_business_method_code    => l_bflow_method_code
           ,p_business_class_code     => l_bflow_class_code
           ,p_balance_type            => l_balance_type_code);
   ELSE
      NULL;
-- No business flow processing for business flow method of NONE.
   END IF;

   --
   -- call analytical criteria
   --
   
   --
   -- call description
   --
   
xla_ae_lines_pkg.SetLineDescription(
   p_ae_header_id => l_ae_header_id
  ,p_description  => Description_2 (
     p_application_id         => p_application_id
   , p_ae_header_id           => l_ae_header_id 
, p_source_1 => p_source_1
   )
);


   --
   -- call ADRs
   -- Bug 4922099
   --
   IF ( (l_bflow_method_code <> 'PRIOR_ENTRY') OR
        (NVL(l_actual_upg_option, 'N') = 'O') OR
        (NVL(l_enc_upg_option, 'N') = 'O')
      )
   THEN
   NULL;
   --
   --
   
  l_ccid := AcctDerRule_7(
           p_application_id           => p_application_id
         , p_ae_header_id             => l_ae_header_id 
, p_source_11 => p_source_11
         , x_transaction_coa_id       => l_adr_transaction_coa_id
         , x_accounting_coa_id        => l_adr_accounting_coa_id
         , x_value_type_code          => l_adr_value_type_code
         , p_side                     => 'NA'
   );

   xla_ae_lines_pkg.set_ccid(
    p_code_combination_id          => l_ccid
  , p_value_type_code              => l_adr_value_type_code
  , p_transaction_coa_id           => l_adr_transaction_coa_id
  , p_accounting_coa_id            => l_adr_accounting_coa_id
  , p_adr_code                     => 'AP_INVOICE_DIST'
  , p_adr_type_code                => 'S'
  , p_component_type               => l_component_type
  , p_component_code               => l_component_code
  , p_component_type_code          => l_component_type_code
  , p_component_appl_id            => l_component_appl_id
  , p_amb_context_code             => l_amb_context_code
  , p_side                         => 'NA'
  );


   --
   --
   END IF;
   --
   -- Bug 4922099
   IF ( ( (NVL(l_actual_upg_option, 'N') = 'O') OR
          (NVL(l_enc_upg_option, 'N') = 'O')
        ) AND
        (l_bflow_method_code = 'PRIOR_ENTRY')
      )
   THEN
      IF
      --
      1 = 2
      --
      THEN
      xla_accounting_err_pkg.build_message
                                    (p_appli_s_name            => 'XLA'
                                    ,p_msg_name                => 'XLA_UPG_OVERRIDE_ADR_UNDEFINED'
                                    ,p_token_1                 => 'LINE_NUMBER'
                                    ,p_value_1                 => XLA_AE_LINES_PKG.g_LineNumber
                                    ,p_token_2                 => 'LINE_TYPE_NAME'
                                    ,p_value_2                 => XLA_AE_SOURCES_PKG.GetComponentName (
                                                                             l_component_type
                                                                            ,l_component_code
                                                                            ,l_component_type_code
                                                                            ,l_component_appl_id
                                                                            ,l_amb_context_code
                                                                            ,l_entity_code
                                                                            ,l_event_class_code
                                                                           )
                                    ,p_token_3                 => 'OWNER'
                                    ,p_value_3                 => xla_lookups_pkg.get_meaning(
                                                                          p_lookup_type     => 'XLA_OWNER_TYPE'
                                                                          ,p_lookup_code    => l_component_type_code
                                                                         )
                                    ,p_token_4                 => 'PRODUCT_NAME'
                                    ,p_value_4                 => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.application_name
                                    ,p_entity_id               => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.entity_id
                                    ,p_event_id                => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.event_id
                                    ,p_ledger_id               => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id
                                    ,p_ae_header_id            =>  NULL
                                       );

        IF (C_LEVEL_ERROR>= g_log_level) THEN
                 trace
                      (p_msg      => 'ERROR: XLA_UPG_OVERRIDE_ADR_UNDEFINED'
                      ,p_level    => C_LEVEL_ERROR
                      ,p_module   => l_log_module);
        END IF;
      END IF;
   END IF;
   --
   --
   ------------------------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- NOTE: XLA_AE_LINES_PKG.ValidateCurrentLine should NOT be generated if business flow method is
   -- Prior Entry.  Currently, the following code is always generated.
   ------------------------------------------------------------------------------------------------
   XLA_AE_LINES_PKG.ValidateCurrentLine;

   ------------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- Populated credit and debit amounts -- Need to generate this within IF <condition>
   ------------------------------------------------------------------------------------
   XLA_AE_LINES_PKG.SetDebitCreditAmounts;

   ----------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- Update journal entry status -- Need to generate this within IF <condition>
   ----------------------------------------------------------------------------------
   XLA_AE_JOURNAL_ENTRY_PKG.UpdateJournalEntryStatus
         (p_hdr_idx => g_array_event(p_event_id).array_value_num('header_index')
         ,p_balance_type_code => l_balance_type_code
         );

   -------------------------------------------------------------------------------------------
   -- 4262811 - Generate the Accrual Reversal lines
   -------------------------------------------------------------------------------------------
   BEGIN
      l_acc_rev_flag := XLA_AE_HEADER_PKG.g_rec_header_new.array_accrual_reversal_flag
                              (g_array_event(p_event_id).array_value_num('header_index'));
      IF l_acc_rev_flag IS NULL THEN
         l_acc_rev_flag := 'N';
      END IF;
   EXCEPTION
      WHEN OTHERS THEN
         l_acc_rev_flag := 'N';
   END;
   --
   IF (l_acc_rev_flag = 'Y') THEN

       -- 4645092  ------------------------------------------------------------------------------
       -- To allow MPA report to determine if it should generate report process
       XLA_ACCOUNTING_PKG.g_mpa_accrual_exists := 'Y';
       ------------------------------------------------------------------------------------------

       l_accrual_line_num := XLA_AE_LINES_PKG.g_LineNumber;
       XLA_AE_LINES_PKG.CopyLineInfo(l_accrual_line_num);
   -- added call to set_ccid to execute mapping  for secondary accrual reversal entries bug 7444204
   -- call ADRs
   -- Bug 4922099
   --
   IF ( (l_bflow_method_code <> 'PRIOR_ENTRY') OR
        (NVL(l_actual_upg_option, 'N') = 'O') OR
        (NVL(l_enc_upg_option, 'N') = 'O')
      )
   THEN
   NULL;
   --
   --
   
  l_ccid := AcctDerRule_7(
           p_application_id           => p_application_id
         , p_ae_header_id             => l_ae_header_id 
, p_source_11 => p_source_11
         , x_transaction_coa_id       => l_adr_transaction_coa_id
         , x_accounting_coa_id        => l_adr_accounting_coa_id
         , x_value_type_code          => l_adr_value_type_code
         , p_side                     => 'NA'
   );

   xla_ae_lines_pkg.set_ccid(
    p_code_combination_id          => l_ccid
  , p_value_type_code              => l_adr_value_type_code
  , p_transaction_coa_id           => l_adr_transaction_coa_id
  , p_accounting_coa_id            => l_adr_accounting_coa_id
  , p_adr_code                     => 'AP_INVOICE_DIST'
  , p_adr_type_code                => 'S'
  , p_component_type               => l_component_type
  , p_component_code               => l_component_code
  , p_component_type_code          => l_component_type_code
  , p_component_appl_id            => l_component_appl_id
  , p_amb_context_code             => l_amb_context_code
  , p_side                         => 'NA'
  );


   --
   --
   END IF;

       --
       -- Update the line information that should be overwritten
       --
       XLA_AE_LINES_PKG.set_ae_header_id(p_ae_header_id => p_event_id ,
                                         p_header_num   => 1);
       XLA_AE_LINES_PKG.g_rec_lines.array_header_num(XLA_AE_LINES_PKG.g_LineNumber)  :=1;

       XLA_AE_LINES_PKG.g_rec_lines.array_business_class_code(XLA_AE_LINES_PKG.g_LineNumber) := NULL; -- 4669271

       IF l_bflow_method_code <> 'NONE' THEN  -- 4655713b
          XLA_AE_LINES_PKG.g_rec_lines.array_reversal_code(XLA_AE_LINES_PKG.g_LineNumber) := CONCAT('MPA_',l_bflow_method_code);
       END IF;

      --
      -- Depending on the Reversal Method setup, do a switch side or changes sign for the amounts
      --
      IF (XLA_AE_JOURNAL_ENTRY_PKG.g_cache_ledgers_info.ledger_reversal_option = 'SIDE') THEN
          XLA_AE_LINES_PKG.g_rec_lines.array_natural_side_code(XLA_AE_LINES_PKG.g_LineNumber) :=  l_acc_rev_natural_side_code;
      ELSE
          ---------------------------------------------------------------------------------------------------
          -- 4262811a Switch Sign
          ---------------------------------------------------------------------------------------------------
          XLA_AE_LINES_PKG.g_rec_lines.array_switch_side_flag(XLA_AE_LINES_PKG.g_LineNumber) := 'N';  -- 5052518
          XLA_AE_LINES_PKG.g_rec_lines.array_ledger_amount(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_ledger_amount(XLA_AE_LINES_PKG.g_LineNumber) * -1;
          XLA_AE_LINES_PKG.g_rec_lines.array_entered_amount(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_entered_amount(XLA_AE_LINES_PKG.g_LineNumber) * -1;
          -- 5132302
          XLA_AE_LINES_PKG.g_rec_lines.array_bflow_applied_to_amt(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_bflow_applied_to_amt(XLA_AE_LINES_PKG.g_LineNumber) * -1;

      END IF;

      -- 4955764
      XLA_AE_LINES_PKG.g_rec_lines.array_gl_date(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_HEADER_PKG.g_rec_header_new.array_gl_date(g_array_event(p_event_id).array_value_num('acc_rev_header_index'));


      XLA_AE_LINES_PKG.ValidateCurrentLine;
      XLA_AE_LINES_PKG.SetDebitCreditAmounts;

      XLA_AE_JOURNAL_ENTRY_PKG.UpdateJournalEntryStatus
               (p_hdr_idx           => g_array_event(p_event_id).array_value_num('acc_rev_header_index')
               ,p_balance_type_code => l_balance_type_code);

   END IF;

   -----------------------------------------------------------------------------------------
   -- 4262811 Multiperiod Accounting
   -----------------------------------------------------------------------------------------
     -- No MPA option is assigned.


END IF;
END IF;
--

--
IF (C_LEVEL_PROCEDURE >= g_log_level) THEN
   trace
      (p_msg      => 'END of AcctLineType_47'
      ,p_level    => C_LEVEL_PROCEDURE
      ,p_module   => l_log_module);
END IF;
--
EXCEPTION
  WHEN xla_exceptions_pkg.application_exception THEN
      RAISE;
  WHEN OTHERS THEN
       xla_exceptions_pkg.raise_message
           (p_location => 'XLA_00200_AAD_S_000010_BC_PKG.AcctLineType_47');
END AcctLineType_47;
--

---------------------------------------
--
-- PRIVATE FUNCTION
--         AcctLineType_48
--
---------------------------------------
PROCEDURE AcctLineType_48 (
  p_application_id        IN NUMBER
 ,p_event_id              IN NUMBER
 ,p_calculate_acctd_flag  IN VARCHAR2
 ,p_calculate_g_l_flag    IN VARCHAR2
 ,p_actual_flag           IN OUT VARCHAR2
 ,p_balance_type_code     OUT VARCHAR2
 ,p_gain_or_loss_ref      OUT VARCHAR2
 
--Invoice Distribution Description
 , p_source_1            IN VARCHAR2
--Invoice Distribution Account
 , p_source_11            IN NUMBER
--Invoice Distribution Type
 , p_source_15            IN VARCHAR2
 , p_source_15_meaning    IN VARCHAR2
--Purchasing Encumbrance Option
 , p_source_17            IN VARCHAR2
 , p_source_17_meaning    IN VARCHAR2
--Accrue on Receipt Option
 , p_source_18            IN VARCHAR2
 , p_source_18_meaning    IN VARCHAR2
--Accounting Reversal Indicator
 , p_source_19            IN VARCHAR2
--Distribution Link Type
 , p_source_21            IN VARCHAR2
--Allocation to Main Distribution Identifier
 , p_source_23            IN NUMBER
--Invoice Identifier
 , p_source_24            IN NUMBER
--Business Flow Accounts Payable Application Identifier
 , p_source_25            IN NUMBER
--Business Flow Invoice Distribution Type
 , p_source_26            IN VARCHAR2
--Business Flow Invoice Entity Code
 , p_source_27            IN VARCHAR2
--Business Flow Invoice Distribution Identifier
 , p_source_28            IN NUMBER
--Business Flow Invoice Identifier
 , p_source_29            IN NUMBER
--Invoice Distribution Identifier
 , p_source_30            IN NUMBER
--Payables Encumbrance Upgrade Credit Account
 , p_source_31            IN NUMBER
--Payables Encumbrance Upgrade Credit Amount
 , p_source_32            IN NUMBER
--Invoice Currency Code
 , p_source_33            IN VARCHAR2
--Payables Encumbrance Upgrade Credit Base Amount
 , p_source_34            IN NUMBER
--Payables Encumbrance Upgrade Debit Account
 , p_source_35            IN NUMBER
--Payables Encumbrance Upgrade Debit Amount
 , p_source_36            IN NUMBER
--Payables Encumbrance Upgrade Debit Base Amount
 , p_source_37            IN NUMBER
--Payables Encumbrance Upgrade Option
 , p_source_38            IN VARCHAR2
--Invoice Exchange Date
 , p_source_39            IN DATE
--Invoice Exchange Rate
 , p_source_40            IN NUMBER
--Invoice Exchange Rate Type
 , p_source_41            IN VARCHAR2
--Deferred Accounting End Date
 , p_source_43            IN DATE
--Deferred Accounting Option
 , p_source_44            IN VARCHAR2
--Deferred Accounting Start Date
 , p_source_45            IN DATE
--Override Accounted Amount Indicator
 , p_source_46            IN VARCHAR2
 , p_source_46_meaning    IN VARCHAR2
--Invoice Supplier Identifier
 , p_source_47            IN NUMBER
--Invoice Supplier Site Identifier
 , p_source_48            IN NUMBER
--Third Party Type
 , p_source_49            IN VARCHAR2
--Parent Reversal Identifier
 , p_source_50            IN NUMBER
--Invoice Distribution Statistical Amount
 , p_source_51            IN NUMBER
--Invoice Distribution Tax Line Identifier
 , p_source_52            IN NUMBER
--Invoice Distribution Tax Distribution Identifier from Tax
 , p_source_53            IN NUMBER
--Invoice Distribution Summary Tax Line Identifier
 , p_source_54            IN NUMBER
--Payables Upgrade Credit Encumbrance Type Identifier
 , p_source_55            IN NUMBER
--Payables Upgrade Debit Encumbrance Type Identifier
 , p_source_56            IN NUMBER
--Self-Assessed Tax Flag
 , p_source_59            IN VARCHAR2
 , p_source_59_meaning    IN VARCHAR2
--Invoice Distribution Encumbrance Amount
 , p_source_65            IN NUMBER
--Invoice Distribution Encumbrance Ledger Amount
 , p_source_66            IN NUMBER
)
IS

l_component_type              VARCHAR2(80);
l_component_code              VARCHAR2(30);
l_component_type_code         VARCHAR2(1);
l_component_appl_id           INTEGER;
l_amb_context_code            VARCHAR2(30);
l_entity_code                 VARCHAR2(30);
l_event_class_code            VARCHAR2(30);
l_ae_header_id                NUMBER;
l_event_type_code             VARCHAR2(30);
l_line_definition_code        VARCHAR2(30);
l_line_definition_owner_code  VARCHAR2(1);
--
-- adr variables
l_segment                     VARCHAR2(30);
l_ccid                        NUMBER;
l_adr_transaction_coa_id      NUMBER;
l_adr_accounting_coa_id       NUMBER;
l_adr_flexfield_segment_code  VARCHAR2(30);
l_adr_flex_value_set_id       NUMBER;
l_adr_value_type_code         VARCHAR2(30);
l_adr_value_combination_id    NUMBER;
l_adr_value_segment_code      VARCHAR2(30);

l_bflow_method_code           VARCHAR2(30);  -- 4219869 Business Flow
l_bflow_class_code            VARCHAR2(30);  -- 4219869 Business Flow
l_inherit_desc_flag           VARCHAR2(1);   -- 4219869 Business Flow
l_budgetary_control_flag      VARCHAR2(1);   -- 4458381 Public Sector Enh

-- 4262811 Variables ------------------------------------------------------------------------------------------
l_entered_amt_idx             NUMBER;
l_accted_amt_idx              NUMBER;
l_acc_rev_flag                VARCHAR2(1);
l_accrual_line_num            NUMBER;
l_tmp_amt                     NUMBER;
l_acc_rev_natural_side_code   VARCHAR2(1);

l_num_entries                 NUMBER;
l_gl_dates                    xla_ae_journal_entry_pkg.t_array_date;
l_accted_amts                 xla_ae_journal_entry_pkg.t_array_num;
l_entered_amts                xla_ae_journal_entry_pkg.t_array_num;
l_period_names                xla_ae_journal_entry_pkg.t_array_V15L;
l_recog_line_1                NUMBER;
l_recog_line_2                NUMBER;

l_bflow_applied_to_amt_idx    NUMBER;                                -- 5132302
l_bflow_applied_to_amt        NUMBER;                                -- 5132302
l_bflow_applied_to_amts       xla_ae_journal_entry_pkg.t_array_num;  -- 5132302

l_event_id                    NUMBER;  -- To handle MPA header Description: xla_ae_header_pkg.SetHdrDescription

--l_rounding_ccy                VARCHAR2(15); -- To handle MPA rounding  4262811b
l_same_currency               BOOLEAN;        -- To handle MPA rounding  4262811b

---------------------------------------------------------------------------------------------------------------


--
-- bulk performance
--
l_balance_type_code           VARCHAR2(1);
l_rec_acct_attrs              XLA_AE_LINES_PKG.t_rec_acct_attrs;
l_log_module                  VARCHAR2(240);

--
-- Upgrade strategy
--
l_actual_upg_option           VARCHAR2(1);
l_enc_upg_option           VARCHAR2(1);

--
BEGIN
--
IF g_log_enabled THEN
      l_log_module := C_DEFAULT_MODULE||'.AcctLineType_48';
END IF;
--
IF (C_LEVEL_PROCEDURE >= g_log_level) THEN

      trace
         (p_msg      => 'BEGIN of AcctLineType_48'
         ,p_level    => C_LEVEL_PROCEDURE
         ,p_module   => l_log_module);

END IF;
--
l_component_type             := 'AMB_JLT';
l_component_code             := 'AP_NON_RECOV_TAX_PP_ENC_DR';
l_component_type_code        := 'S';
l_component_appl_id          :=  200;
l_amb_context_code           := 'DEFAULT';
l_entity_code                := 'AP_INVOICES';
l_event_class_code           := 'PREPAYMENTS';
l_event_type_code            := 'PREPAYMENTS_ALL';
l_line_definition_owner_code := 'S';
l_line_definition_code       := 'ENC_PREPAY_ALL';
--
l_balance_type_code          := 'E';
l_segment                     := NULL;
l_ccid                        := NULL;
l_adr_transaction_coa_id      := NULL;
l_adr_accounting_coa_id       := NULL;
l_adr_flexfield_segment_code  := NULL;
l_adr_flex_value_set_id       := NULL;
l_adr_value_type_code         := NULL;
l_adr_value_combination_id    := NULL;
l_adr_value_segment_code      := NULL;

l_bflow_method_code          := 'NONE';   -- 4219869 Business Flow
l_bflow_class_code           := 'AP_INV_ENCUM';    -- 4219869 Business Flow
l_inherit_desc_flag          := 'N';   -- 4219869 Business Flow
l_budgetary_control_flag     := 'Y';

l_bflow_applied_to_amt_idx   := NULL; -- 5132302
l_bflow_applied_to_amt       := NULL; -- 5132302
l_entered_amt_idx            := NULL;          -- 4262811
l_accted_amt_idx             := NULL;          -- 4262811
l_acc_rev_flag               := NULL;          -- 4262811
l_accrual_line_num           := NULL;          -- 4262811
l_tmp_amt                    := NULL;          -- 4262811
--
 
IF XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id = XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.ledger_id OR
    l_balance_type_code <> 'B' THEN
IF NVL(p_source_15,'
') =  'NONREC_TAX' AND 
NVL(p_source_59,'
') <>  'Y' AND 
NVL(p_source_17,'
') =  'Y' AND 
NVL(p_source_18,'
') <>  'Y'
 THEN 

   --
   XLA_AE_LINES_PKG.SetNewLine;

   p_balance_type_code          := l_balance_type_code;
   -- set the flag so later we will know whether the gain loss line needs to be created
   
   IF(l_balance_type_code = 'A' and p_actual_flag is null) THEN
     p_actual_flag :='A';
   END IF;

   --
   -- bulk performance
   --
   XLA_AE_LINES_PKG.set_ae_header_id (p_ae_header_id => p_event_id ,
                                      p_header_num   => 0); -- 4262811
   --
   -- set accounting line options
   --
   l_ae_header_id:= xla_ae_lines_pkg.SetAcctLineOption(
           p_natural_side_code          => 'D'
         , p_gain_or_loss_flag          => 'N'
         , p_gl_transfer_mode_code      => 'S'
         , p_acct_entry_type_code       => 'E'
         , p_switch_side_flag           => 'Y'
         , p_merge_duplicate_code       => 'N'
         );
   --
   l_acc_rev_natural_side_code := 'C';  -- 4262811
   -- 
   --
   -- set accounting line type info
   --
   xla_ae_lines_pkg.SetAcctLineType
      (p_component_type             => l_component_type
      ,p_event_type_code            => l_event_type_code
      ,p_line_definition_owner_code => l_line_definition_owner_code
      ,p_line_definition_code       => l_line_definition_code
      ,p_accounting_line_code       => l_component_code
      ,p_accounting_line_type_code  => l_component_type_code
      ,p_accounting_line_appl_id    => l_component_appl_id
      ,p_amb_context_code           => l_amb_context_code
      ,p_entity_code                => l_entity_code
      ,p_event_class_code           => l_event_class_code);
   --
   -- set accounting class
   --
   xla_ae_lines_pkg.SetAcctClass(
           p_accounting_class_code  => 'NRTAX'
         , p_ae_header_id           => l_ae_header_id
         );

   --
   -- set rounding class
   --
   XLA_AE_LINES_PKG.g_rec_lines.array_rounding_class(XLA_AE_LINES_PKG.g_LineNumber) :=
                      'NRTAX';

   --
   xla_ae_lines_pkg.g_rec_lines.array_calculate_acctd_flag(xla_ae_lines_pkg.g_LineNumber) := p_calculate_acctd_flag;
   xla_ae_lines_pkg.g_rec_lines.array_calculate_g_l_flag(xla_ae_lines_pkg.g_LineNumber) := p_calculate_g_l_flag;
   --
   -- bulk performance
   --
   XLA_AE_LINES_PKG.g_rec_lines.array_balance_type_code(XLA_AE_LINES_PKG.g_LineNumber) := l_balance_type_code;

   XLA_AE_LINES_PKG.g_rec_lines.array_ledger_id(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id;

   -- 4955764
   XLA_AE_LINES_PKG.g_rec_lines.array_gl_date(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_HEADER_PKG.g_rec_header_new.array_gl_date(g_array_event(p_event_id).array_value_num('header_index'));

   -- 4458381 Public Sector Enh
      XLA_AE_LINES_PKG.g_rec_lines.array_encumbrance_type_id(XLA_AE_LINES_PKG.g_LineNumber) := 1060;
   --
   -- set accounting attributes for the line type
   --
   l_entered_amt_idx := 23;
   l_accted_amt_idx  := 28;
   l_bflow_applied_to_amt_idx  := NULL;  -- 5132302
   l_rec_acct_attrs.array_acct_attr_code(1) := 'ACCOUNTING_REVERSAL_OPTION';
   l_rec_acct_attrs.array_char_value(1)  := p_source_19;
   l_rec_acct_attrs.array_acct_attr_code(2) := 'ALLOC_TO_APPLICATION_ID';
   l_rec_acct_attrs.array_num_value(2)  := 
xla_ae_sources_pkg.GetSystemSourceNum(
   p_source_code           => 'XLA_EVENT_APPL_ID'
 , p_source_type_code      => 'Y'
 , p_source_application_id =>  602
);
   l_rec_acct_attrs.array_acct_attr_code(3) := 'ALLOC_TO_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(3)  := p_source_21;
   l_rec_acct_attrs.array_acct_attr_code(4) := 'ALLOC_TO_ENTITY_CODE';
   l_rec_acct_attrs.array_char_value(4)  := 
xla_ae_sources_pkg.GetSystemSourceChar(
   p_source_code           => 'XLA_ENTITY_CODE'
 , p_source_type_code      => 'Y'
 , p_source_application_id =>  602
);
   l_rec_acct_attrs.array_acct_attr_code(5) := 'ALLOC_TO_FIRST_DIST_ID';
   l_rec_acct_attrs.array_num_value(5)  :=  to_char(p_source_23);
   l_rec_acct_attrs.array_acct_attr_code(6) := 'ALLOC_TO_FIRST_SYS_TRAN_ID';
   l_rec_acct_attrs.array_num_value(6)  :=  to_char(p_source_24);
   l_rec_acct_attrs.array_acct_attr_code(7) := 'APPLIED_TO_APPLICATION_ID';
   l_rec_acct_attrs.array_num_value(7)  := p_source_25;
   l_rec_acct_attrs.array_acct_attr_code(8) := 'APPLIED_TO_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(8)  := p_source_26;
   l_rec_acct_attrs.array_acct_attr_code(9) := 'APPLIED_TO_ENTITY_CODE';
   l_rec_acct_attrs.array_char_value(9)  := p_source_27;
   l_rec_acct_attrs.array_acct_attr_code(10) := 'APPLIED_TO_FIRST_DIST_ID';
   l_rec_acct_attrs.array_num_value(10)  :=  to_char(p_source_28);
   l_rec_acct_attrs.array_acct_attr_code(11) := 'APPLIED_TO_FIRST_SYS_TRAN_ID';
   l_rec_acct_attrs.array_num_value(11)  :=  to_char(p_source_29);
   l_rec_acct_attrs.array_acct_attr_code(12) := 'DISTRIBUTION_IDENTIFIER_1';
   l_rec_acct_attrs.array_num_value(12)  :=  to_char(p_source_30);
   l_rec_acct_attrs.array_acct_attr_code(13) := 'DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(13)  := p_source_21;
   l_rec_acct_attrs.array_acct_attr_code(14) := 'ENC_UPG_CR_CCID';
   l_rec_acct_attrs.array_num_value(14)  := p_source_31;
   l_rec_acct_attrs.array_acct_attr_code(15) := 'ENC_UPG_CR_ENTERED_AMT';
   l_rec_acct_attrs.array_num_value(15)  := p_source_32;
   l_rec_acct_attrs.array_acct_attr_code(16) := 'ENC_UPG_CR_ENTERED_CURR';
   l_rec_acct_attrs.array_char_value(16)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(17) := 'ENC_UPG_CR_LEDGER_AMT';
   l_rec_acct_attrs.array_num_value(17)  := p_source_34;
   l_rec_acct_attrs.array_acct_attr_code(18) := 'ENC_UPG_DR_CCID';
   l_rec_acct_attrs.array_num_value(18)  := p_source_35;
   l_rec_acct_attrs.array_acct_attr_code(19) := 'ENC_UPG_DR_ENTERED_AMT';
   l_rec_acct_attrs.array_num_value(19)  := p_source_36;
   l_rec_acct_attrs.array_acct_attr_code(20) := 'ENC_UPG_DR_ENTERED_CURR';
   l_rec_acct_attrs.array_char_value(20)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(21) := 'ENC_UPG_DR_LEDGER_AMT';
   l_rec_acct_attrs.array_num_value(21)  := p_source_37;
   l_rec_acct_attrs.array_acct_attr_code(22) := 'ENC_UPG_OPTION';
   l_rec_acct_attrs.array_char_value(22)  := p_source_38;
   l_rec_acct_attrs.array_acct_attr_code(23) := 'ENTERED_CURRENCY_AMOUNT';
   l_rec_acct_attrs.array_num_value(23)  := p_source_65;
   l_rec_acct_attrs.array_acct_attr_code(24) := 'ENTERED_CURRENCY_CODE';
   l_rec_acct_attrs.array_char_value(24)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(25) := 'EXCHANGE_DATE';
   l_rec_acct_attrs.array_date_value(25)  := p_source_39;
   l_rec_acct_attrs.array_acct_attr_code(26) := 'EXCHANGE_RATE';
   l_rec_acct_attrs.array_num_value(26)  := p_source_40;
   l_rec_acct_attrs.array_acct_attr_code(27) := 'EXCHANGE_RATE_TYPE';
   l_rec_acct_attrs.array_char_value(27)  := p_source_41;
   l_rec_acct_attrs.array_acct_attr_code(28) := 'LEDGER_AMOUNT';
   l_rec_acct_attrs.array_num_value(28)  := p_source_66;
   l_rec_acct_attrs.array_acct_attr_code(29) := 'MULTIPERIOD_END_DATE';
   l_rec_acct_attrs.array_date_value(29)  := p_source_43;
   l_rec_acct_attrs.array_acct_attr_code(30) := 'MULTIPERIOD_OPTION';
   l_rec_acct_attrs.array_char_value(30)  := p_source_44;
   l_rec_acct_attrs.array_acct_attr_code(31) := 'MULTIPERIOD_START_DATE';
   l_rec_acct_attrs.array_date_value(31)  := p_source_45;
   l_rec_acct_attrs.array_acct_attr_code(32) := 'OVERRIDE_ACCTD_AMT_FLAG';
   l_rec_acct_attrs.array_char_value(32)  := p_source_46;
   l_rec_acct_attrs.array_acct_attr_code(33) := 'PARTY_ID';
   l_rec_acct_attrs.array_num_value(33)  := p_source_47;
   l_rec_acct_attrs.array_acct_attr_code(34) := 'PARTY_SITE_ID';
   l_rec_acct_attrs.array_num_value(34)  := p_source_48;
   l_rec_acct_attrs.array_acct_attr_code(35) := 'PARTY_TYPE';
   l_rec_acct_attrs.array_char_value(35)  := p_source_49;
   l_rec_acct_attrs.array_acct_attr_code(36) := 'REVERSED_DISTRIBUTION_ID1';
   l_rec_acct_attrs.array_num_value(36)  :=  to_char(p_source_50);
   l_rec_acct_attrs.array_acct_attr_code(37) := 'REVERSED_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(37)  := p_source_21;
   l_rec_acct_attrs.array_acct_attr_code(38) := 'STATISTICAL_AMOUNT';
   l_rec_acct_attrs.array_num_value(38)  := p_source_51;
   l_rec_acct_attrs.array_acct_attr_code(39) := 'TAX_LINE_REF_ID';
   l_rec_acct_attrs.array_num_value(39)  := p_source_52;
   l_rec_acct_attrs.array_acct_attr_code(40) := 'TAX_REC_NREC_DIST_REF_ID';
   l_rec_acct_attrs.array_num_value(40)  := p_source_53;
   l_rec_acct_attrs.array_acct_attr_code(41) := 'TAX_SUMMARY_LINE_REF_ID';
   l_rec_acct_attrs.array_num_value(41)  := p_source_54;
   l_rec_acct_attrs.array_acct_attr_code(42) := 'UPG_CR_ENC_TYPE_ID';
   l_rec_acct_attrs.array_num_value(42)  := p_source_55;
   l_rec_acct_attrs.array_acct_attr_code(43) := 'UPG_DR_ENC_TYPE_ID';
   l_rec_acct_attrs.array_num_value(43)  := p_source_56;

   XLA_AE_LINES_PKG.SetLineAcctAttrs(l_rec_acct_attrs);
   p_gain_or_loss_ref  := XLA_AE_LINES_PKG.g_rec_lines.array_gain_or_loss_ref(XLA_AE_LINES_PKG.g_LineNumber);

   ---------------------------------------------------------------------------------------------------------------
   -- 4336173 -- assign Business Flow Class (replace code in xla_ae_lines_pkg.Business_Flow_Validation)
   ---------------------------------------------------------------------------------------------------------------
   XLA_AE_LINES_PKG.g_rec_lines.array_business_class_code(XLA_AE_LINES_PKG.g_LineNumber) := l_bflow_class_code;

   l_actual_upg_option  := XLA_AE_LINES_PKG.g_rec_lines.array_actual_upg_option(XLA_AE_LINES_PKG.g_LineNumber);
   l_enc_upg_option     := XLA_AE_LINES_PKG.g_rec_lines.array_enc_upg_option(XLA_AE_LINES_PKG.g_LineNumber);

   IF xla_accounting_cache_pkg.GetValueChar
         (p_source_code         => 'LEDGER_CATEGORY_CODE'
         ,p_target_ledger_id    => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id) IN ('PRIMARY','ALC')
   AND l_bflow_method_code = 'PRIOR_ENTRY'
--   AND (l_actual_upg_option = 'Y' OR l_enc_upg_option = 'Y') Bug 4922099
   AND ( (NVL(l_actual_upg_option, 'N') IN ('Y', 'O')) OR
         (NVL(l_enc_upg_option, 'N') IN ('Y', 'O'))
       )
   THEN
         xla_ae_lines_pkg.BflowUpgEntry
           (p_business_method_code    => l_bflow_method_code
           ,p_business_class_code     => l_bflow_class_code
           ,p_balance_type            => l_balance_type_code);
   ELSE
      NULL;
-- No business flow processing for business flow method of NONE.
   END IF;

   --
   -- call analytical criteria
   --
   
   --
   -- call description
   --
   
xla_ae_lines_pkg.SetLineDescription(
   p_ae_header_id => l_ae_header_id
  ,p_description  => Description_2 (
     p_application_id         => p_application_id
   , p_ae_header_id           => l_ae_header_id 
, p_source_1 => p_source_1
   )
);


   --
   -- call ADRs
   -- Bug 4922099
   --
   IF ( (l_bflow_method_code <> 'PRIOR_ENTRY') OR
        (NVL(l_actual_upg_option, 'N') = 'O') OR
        (NVL(l_enc_upg_option, 'N') = 'O')
      )
   THEN
   NULL;
   --
   --
   
  l_ccid := AcctDerRule_7(
           p_application_id           => p_application_id
         , p_ae_header_id             => l_ae_header_id 
, p_source_11 => p_source_11
         , x_transaction_coa_id       => l_adr_transaction_coa_id
         , x_accounting_coa_id        => l_adr_accounting_coa_id
         , x_value_type_code          => l_adr_value_type_code
         , p_side                     => 'NA'
   );

   xla_ae_lines_pkg.set_ccid(
    p_code_combination_id          => l_ccid
  , p_value_type_code              => l_adr_value_type_code
  , p_transaction_coa_id           => l_adr_transaction_coa_id
  , p_accounting_coa_id            => l_adr_accounting_coa_id
  , p_adr_code                     => 'AP_INVOICE_DIST'
  , p_adr_type_code                => 'S'
  , p_component_type               => l_component_type
  , p_component_code               => l_component_code
  , p_component_type_code          => l_component_type_code
  , p_component_appl_id            => l_component_appl_id
  , p_amb_context_code             => l_amb_context_code
  , p_side                         => 'NA'
  );


   --
   --
   END IF;
   --
   -- Bug 4922099
   IF ( ( (NVL(l_actual_upg_option, 'N') = 'O') OR
          (NVL(l_enc_upg_option, 'N') = 'O')
        ) AND
        (l_bflow_method_code = 'PRIOR_ENTRY')
      )
   THEN
      IF
      --
      1 = 2
      --
      THEN
      xla_accounting_err_pkg.build_message
                                    (p_appli_s_name            => 'XLA'
                                    ,p_msg_name                => 'XLA_UPG_OVERRIDE_ADR_UNDEFINED'
                                    ,p_token_1                 => 'LINE_NUMBER'
                                    ,p_value_1                 => XLA_AE_LINES_PKG.g_LineNumber
                                    ,p_token_2                 => 'LINE_TYPE_NAME'
                                    ,p_value_2                 => XLA_AE_SOURCES_PKG.GetComponentName (
                                                                             l_component_type
                                                                            ,l_component_code
                                                                            ,l_component_type_code
                                                                            ,l_component_appl_id
                                                                            ,l_amb_context_code
                                                                            ,l_entity_code
                                                                            ,l_event_class_code
                                                                           )
                                    ,p_token_3                 => 'OWNER'
                                    ,p_value_3                 => xla_lookups_pkg.get_meaning(
                                                                          p_lookup_type     => 'XLA_OWNER_TYPE'
                                                                          ,p_lookup_code    => l_component_type_code
                                                                         )
                                    ,p_token_4                 => 'PRODUCT_NAME'
                                    ,p_value_4                 => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.application_name
                                    ,p_entity_id               => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.entity_id
                                    ,p_event_id                => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.event_id
                                    ,p_ledger_id               => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id
                                    ,p_ae_header_id            =>  NULL
                                       );

        IF (C_LEVEL_ERROR>= g_log_level) THEN
                 trace
                      (p_msg      => 'ERROR: XLA_UPG_OVERRIDE_ADR_UNDEFINED'
                      ,p_level    => C_LEVEL_ERROR
                      ,p_module   => l_log_module);
        END IF;
      END IF;
   END IF;
   --
   --
   ------------------------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- NOTE: XLA_AE_LINES_PKG.ValidateCurrentLine should NOT be generated if business flow method is
   -- Prior Entry.  Currently, the following code is always generated.
   ------------------------------------------------------------------------------------------------
   XLA_AE_LINES_PKG.ValidateCurrentLine;

   ------------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- Populated credit and debit amounts -- Need to generate this within IF <condition>
   ------------------------------------------------------------------------------------
   XLA_AE_LINES_PKG.SetDebitCreditAmounts;

   ----------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- Update journal entry status -- Need to generate this within IF <condition>
   ----------------------------------------------------------------------------------
   XLA_AE_JOURNAL_ENTRY_PKG.UpdateJournalEntryStatus
         (p_hdr_idx => g_array_event(p_event_id).array_value_num('header_index')
         ,p_balance_type_code => l_balance_type_code
         );

   -------------------------------------------------------------------------------------------
   -- 4262811 - Generate the Accrual Reversal lines
   -------------------------------------------------------------------------------------------
   BEGIN
      l_acc_rev_flag := XLA_AE_HEADER_PKG.g_rec_header_new.array_accrual_reversal_flag
                              (g_array_event(p_event_id).array_value_num('header_index'));
      IF l_acc_rev_flag IS NULL THEN
         l_acc_rev_flag := 'N';
      END IF;
   EXCEPTION
      WHEN OTHERS THEN
         l_acc_rev_flag := 'N';
   END;
   --
   IF (l_acc_rev_flag = 'Y') THEN

       -- 4645092  ------------------------------------------------------------------------------
       -- To allow MPA report to determine if it should generate report process
       XLA_ACCOUNTING_PKG.g_mpa_accrual_exists := 'Y';
       ------------------------------------------------------------------------------------------

       l_accrual_line_num := XLA_AE_LINES_PKG.g_LineNumber;
       XLA_AE_LINES_PKG.CopyLineInfo(l_accrual_line_num);
   -- added call to set_ccid to execute mapping  for secondary accrual reversal entries bug 7444204
   -- call ADRs
   -- Bug 4922099
   --
   IF ( (l_bflow_method_code <> 'PRIOR_ENTRY') OR
        (NVL(l_actual_upg_option, 'N') = 'O') OR
        (NVL(l_enc_upg_option, 'N') = 'O')
      )
   THEN
   NULL;
   --
   --
   
  l_ccid := AcctDerRule_7(
           p_application_id           => p_application_id
         , p_ae_header_id             => l_ae_header_id 
, p_source_11 => p_source_11
         , x_transaction_coa_id       => l_adr_transaction_coa_id
         , x_accounting_coa_id        => l_adr_accounting_coa_id
         , x_value_type_code          => l_adr_value_type_code
         , p_side                     => 'NA'
   );

   xla_ae_lines_pkg.set_ccid(
    p_code_combination_id          => l_ccid
  , p_value_type_code              => l_adr_value_type_code
  , p_transaction_coa_id           => l_adr_transaction_coa_id
  , p_accounting_coa_id            => l_adr_accounting_coa_id
  , p_adr_code                     => 'AP_INVOICE_DIST'
  , p_adr_type_code                => 'S'
  , p_component_type               => l_component_type
  , p_component_code               => l_component_code
  , p_component_type_code          => l_component_type_code
  , p_component_appl_id            => l_component_appl_id
  , p_amb_context_code             => l_amb_context_code
  , p_side                         => 'NA'
  );


   --
   --
   END IF;

       --
       -- Update the line information that should be overwritten
       --
       XLA_AE_LINES_PKG.set_ae_header_id(p_ae_header_id => p_event_id ,
                                         p_header_num   => 1);
       XLA_AE_LINES_PKG.g_rec_lines.array_header_num(XLA_AE_LINES_PKG.g_LineNumber)  :=1;

       XLA_AE_LINES_PKG.g_rec_lines.array_business_class_code(XLA_AE_LINES_PKG.g_LineNumber) := NULL; -- 4669271

       IF l_bflow_method_code <> 'NONE' THEN  -- 4655713b
          XLA_AE_LINES_PKG.g_rec_lines.array_reversal_code(XLA_AE_LINES_PKG.g_LineNumber) := CONCAT('MPA_',l_bflow_method_code);
       END IF;

      --
      -- Depending on the Reversal Method setup, do a switch side or changes sign for the amounts
      --
      IF (XLA_AE_JOURNAL_ENTRY_PKG.g_cache_ledgers_info.ledger_reversal_option = 'SIDE') THEN
          XLA_AE_LINES_PKG.g_rec_lines.array_natural_side_code(XLA_AE_LINES_PKG.g_LineNumber) :=  l_acc_rev_natural_side_code;
      ELSE
          ---------------------------------------------------------------------------------------------------
          -- 4262811a Switch Sign
          ---------------------------------------------------------------------------------------------------
          XLA_AE_LINES_PKG.g_rec_lines.array_switch_side_flag(XLA_AE_LINES_PKG.g_LineNumber) := 'N';  -- 5052518
          XLA_AE_LINES_PKG.g_rec_lines.array_ledger_amount(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_ledger_amount(XLA_AE_LINES_PKG.g_LineNumber) * -1;
          XLA_AE_LINES_PKG.g_rec_lines.array_entered_amount(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_entered_amount(XLA_AE_LINES_PKG.g_LineNumber) * -1;
          -- 5132302
          XLA_AE_LINES_PKG.g_rec_lines.array_bflow_applied_to_amt(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_bflow_applied_to_amt(XLA_AE_LINES_PKG.g_LineNumber) * -1;

      END IF;

      -- 4955764
      XLA_AE_LINES_PKG.g_rec_lines.array_gl_date(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_HEADER_PKG.g_rec_header_new.array_gl_date(g_array_event(p_event_id).array_value_num('acc_rev_header_index'));


      XLA_AE_LINES_PKG.ValidateCurrentLine;
      XLA_AE_LINES_PKG.SetDebitCreditAmounts;

      XLA_AE_JOURNAL_ENTRY_PKG.UpdateJournalEntryStatus
               (p_hdr_idx           => g_array_event(p_event_id).array_value_num('acc_rev_header_index')
               ,p_balance_type_code => l_balance_type_code);

   END IF;

   -----------------------------------------------------------------------------------------
   -- 4262811 Multiperiod Accounting
   -----------------------------------------------------------------------------------------
     -- No MPA option is assigned.


END IF;
END IF;
--

--
IF (C_LEVEL_PROCEDURE >= g_log_level) THEN
   trace
      (p_msg      => 'END of AcctLineType_48'
      ,p_level    => C_LEVEL_PROCEDURE
      ,p_module   => l_log_module);
END IF;
--
EXCEPTION
  WHEN xla_exceptions_pkg.application_exception THEN
      RAISE;
  WHEN OTHERS THEN
       xla_exceptions_pkg.raise_message
           (p_location => 'XLA_00200_AAD_S_000010_BC_PKG.AcctLineType_48');
END AcctLineType_48;
--

---------------------------------------
--
-- PRIVATE FUNCTION
--         AcctLineType_49
--
---------------------------------------
PROCEDURE AcctLineType_49 (
  p_application_id        IN NUMBER
 ,p_event_id              IN NUMBER
 ,p_calculate_acctd_flag  IN VARCHAR2
 ,p_calculate_g_l_flag    IN VARCHAR2
 ,p_actual_flag           IN OUT VARCHAR2
 ,p_balance_type_code     OUT VARCHAR2
 ,p_gain_or_loss_ref      OUT VARCHAR2
 
--Invoice Distribution Type
 , p_source_15            IN VARCHAR2
 , p_source_15_meaning    IN VARCHAR2
--Accrue on Receipt Option
 , p_source_18            IN VARCHAR2
 , p_source_18_meaning    IN VARCHAR2
--Accounting Reversal Indicator
 , p_source_19            IN VARCHAR2
--Distribution Link Type
 , p_source_21            IN VARCHAR2
--Allocation to Main Distribution Identifier
 , p_source_23            IN NUMBER
--Invoice Identifier
 , p_source_24            IN NUMBER
--Invoice Distribution Identifier
 , p_source_30            IN NUMBER
--Payables Encumbrance Upgrade Credit Account
 , p_source_31            IN NUMBER
--Payables Encumbrance Upgrade Credit Amount
 , p_source_32            IN NUMBER
--Invoice Currency Code
 , p_source_33            IN VARCHAR2
--Payables Encumbrance Upgrade Credit Base Amount
 , p_source_34            IN NUMBER
--Payables Encumbrance Upgrade Debit Account
 , p_source_35            IN NUMBER
--Payables Encumbrance Upgrade Debit Amount
 , p_source_36            IN NUMBER
--Payables Encumbrance Upgrade Debit Base Amount
 , p_source_37            IN NUMBER
--Payables Encumbrance Upgrade Option
 , p_source_38            IN VARCHAR2
--Deferred Accounting End Date
 , p_source_43            IN DATE
--Deferred Accounting Option
 , p_source_44            IN VARCHAR2
--Deferred Accounting Start Date
 , p_source_45            IN DATE
--Override Accounted Amount Indicator
 , p_source_46            IN VARCHAR2
 , p_source_46_meaning    IN VARCHAR2
--Third Party Type
 , p_source_49            IN VARCHAR2
--Parent Reversal Identifier
 , p_source_50            IN NUMBER
--Invoice Distribution Statistical Amount
 , p_source_51            IN NUMBER
--Invoice Distribution Tax Line Identifier
 , p_source_52            IN NUMBER
--Invoice Distribution Tax Distribution Identifier from Tax
 , p_source_53            IN NUMBER
--Invoice Distribution Summary Tax Line Identifier
 , p_source_54            IN NUMBER
--Payables Upgrade Credit Encumbrance Type Identifier
 , p_source_55            IN NUMBER
--Payables Upgrade Debit Encumbrance Type Identifier
 , p_source_56            IN NUMBER
--Purchase Order Distribution Identifier
 , p_source_58            IN NUMBER
--Self-Assessed Tax Flag
 , p_source_59            IN VARCHAR2
 , p_source_59_meaning    IN VARCHAR2
--Business Flow Purchasing Application Identifier
 , p_source_60            IN NUMBER
--Business Flow Purchase Order Distribution Type
 , p_source_61            IN VARCHAR2
--Business Flow Purchase Order Entity Code
 , p_source_62            IN VARCHAR2
--Business Flow Purchase Order Distribution Identifier
 , p_source_63            IN NUMBER
--Business Flow Purchasing Document Identifier
 , p_source_64            IN NUMBER
--Invoice Distribution Encumbrance Amount
 , p_source_65            IN NUMBER
--Invoice Distribution Encumbrance Ledger Amount
 , p_source_66            IN NUMBER
)
IS

l_component_type              VARCHAR2(80);
l_component_code              VARCHAR2(30);
l_component_type_code         VARCHAR2(1);
l_component_appl_id           INTEGER;
l_amb_context_code            VARCHAR2(30);
l_entity_code                 VARCHAR2(30);
l_event_class_code            VARCHAR2(30);
l_ae_header_id                NUMBER;
l_event_type_code             VARCHAR2(30);
l_line_definition_code        VARCHAR2(30);
l_line_definition_owner_code  VARCHAR2(1);
--
-- adr variables
l_segment                     VARCHAR2(30);
l_ccid                        NUMBER;
l_adr_transaction_coa_id      NUMBER;
l_adr_accounting_coa_id       NUMBER;
l_adr_flexfield_segment_code  VARCHAR2(30);
l_adr_flex_value_set_id       NUMBER;
l_adr_value_type_code         VARCHAR2(30);
l_adr_value_combination_id    NUMBER;
l_adr_value_segment_code      VARCHAR2(30);

l_bflow_method_code           VARCHAR2(30);  -- 4219869 Business Flow
l_bflow_class_code            VARCHAR2(30);  -- 4219869 Business Flow
l_inherit_desc_flag           VARCHAR2(1);   -- 4219869 Business Flow
l_budgetary_control_flag      VARCHAR2(1);   -- 4458381 Public Sector Enh

-- 4262811 Variables ------------------------------------------------------------------------------------------
l_entered_amt_idx             NUMBER;
l_accted_amt_idx              NUMBER;
l_acc_rev_flag                VARCHAR2(1);
l_accrual_line_num            NUMBER;
l_tmp_amt                     NUMBER;
l_acc_rev_natural_side_code   VARCHAR2(1);

l_num_entries                 NUMBER;
l_gl_dates                    xla_ae_journal_entry_pkg.t_array_date;
l_accted_amts                 xla_ae_journal_entry_pkg.t_array_num;
l_entered_amts                xla_ae_journal_entry_pkg.t_array_num;
l_period_names                xla_ae_journal_entry_pkg.t_array_V15L;
l_recog_line_1                NUMBER;
l_recog_line_2                NUMBER;

l_bflow_applied_to_amt_idx    NUMBER;                                -- 5132302
l_bflow_applied_to_amt        NUMBER;                                -- 5132302
l_bflow_applied_to_amts       xla_ae_journal_entry_pkg.t_array_num;  -- 5132302

l_event_id                    NUMBER;  -- To handle MPA header Description: xla_ae_header_pkg.SetHdrDescription

--l_rounding_ccy                VARCHAR2(15); -- To handle MPA rounding  4262811b
l_same_currency               BOOLEAN;        -- To handle MPA rounding  4262811b

---------------------------------------------------------------------------------------------------------------


--
-- bulk performance
--
l_balance_type_code           VARCHAR2(1);
l_rec_acct_attrs              XLA_AE_LINES_PKG.t_rec_acct_attrs;
l_log_module                  VARCHAR2(240);

--
-- Upgrade strategy
--
l_actual_upg_option           VARCHAR2(1);
l_enc_upg_option           VARCHAR2(1);

--
BEGIN
--
IF g_log_enabled THEN
      l_log_module := C_DEFAULT_MODULE||'.AcctLineType_49';
END IF;
--
IF (C_LEVEL_PROCEDURE >= g_log_level) THEN

      trace
         (p_msg      => 'BEGIN of AcctLineType_49'
         ,p_level    => C_LEVEL_PROCEDURE
         ,p_module   => l_log_module);

END IF;
--
l_component_type             := 'AMB_JLT';
l_component_code             := 'AP_PP_NON_REC_TAX_PO_ENC';
l_component_type_code        := 'S';
l_component_appl_id          :=  200;
l_amb_context_code           := 'DEFAULT';
l_entity_code                := 'AP_INVOICES';
l_event_class_code           := 'PREPAYMENTS';
l_event_type_code            := 'PREPAYMENTS_ALL';
l_line_definition_owner_code := 'S';
l_line_definition_code       := 'ENC_PREPAY_ALL';
--
l_balance_type_code          := 'E';
l_segment                     := NULL;
l_ccid                        := NULL;
l_adr_transaction_coa_id      := NULL;
l_adr_accounting_coa_id       := NULL;
l_adr_flexfield_segment_code  := NULL;
l_adr_flex_value_set_id       := NULL;
l_adr_value_type_code         := NULL;
l_adr_value_combination_id    := NULL;
l_adr_value_segment_code      := NULL;

l_bflow_method_code          := 'PRIOR_ENTRY';   -- 4219869 Business Flow
l_bflow_class_code           := 'PO_ENCUMBRANCE';    -- 4219869 Business Flow
l_inherit_desc_flag          := 'Y';   -- 4219869 Business Flow
l_budgetary_control_flag     := 'Y';

l_bflow_applied_to_amt_idx   := NULL; -- 5132302
l_bflow_applied_to_amt       := NULL; -- 5132302
l_entered_amt_idx            := NULL;          -- 4262811
l_accted_amt_idx             := NULL;          -- 4262811
l_acc_rev_flag               := NULL;          -- 4262811
l_accrual_line_num           := NULL;          -- 4262811
l_tmp_amt                    := NULL;          -- 4262811
--
 
IF XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id = XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.ledger_id OR
    l_balance_type_code <> 'B' THEN
IF p_source_58 IS NOT NULL AND 
NVL(p_source_15,'
') =  'NONREC_TAX' AND 
NVL(p_source_59,'
') <>  'Y' AND 
NVL(p_source_18,'
') <>  'Y'
 THEN 

   --
   XLA_AE_LINES_PKG.SetNewLine;

   p_balance_type_code          := l_balance_type_code;
   -- set the flag so later we will know whether the gain loss line needs to be created
   
   IF(l_balance_type_code = 'A' and p_actual_flag is null) THEN
     p_actual_flag :='A';
   END IF;

   --
   -- bulk performance
   --
   XLA_AE_LINES_PKG.set_ae_header_id (p_ae_header_id => p_event_id ,
                                      p_header_num   => 0); -- 4262811
   --
   -- set accounting line options
   --
   l_ae_header_id:= xla_ae_lines_pkg.SetAcctLineOption(
           p_natural_side_code          => 'C'
         , p_gain_or_loss_flag          => 'N'
         , p_gl_transfer_mode_code      => 'S'
         , p_acct_entry_type_code       => 'E'
         , p_switch_side_flag           => 'Y'
         , p_merge_duplicate_code       => 'N'
         );
   --
   l_acc_rev_natural_side_code := 'D';  -- 4262811
   -- 
   --
   -- set accounting line type info
   --
   xla_ae_lines_pkg.SetAcctLineType
      (p_component_type             => l_component_type
      ,p_event_type_code            => l_event_type_code
      ,p_line_definition_owner_code => l_line_definition_owner_code
      ,p_line_definition_code       => l_line_definition_code
      ,p_accounting_line_code       => l_component_code
      ,p_accounting_line_type_code  => l_component_type_code
      ,p_accounting_line_appl_id    => l_component_appl_id
      ,p_amb_context_code           => l_amb_context_code
      ,p_entity_code                => l_entity_code
      ,p_event_class_code           => l_event_class_code);
   --
   -- set accounting class
   --
   xla_ae_lines_pkg.SetAcctClass(
           p_accounting_class_code  => 'PURCHASE_ORDER'
         , p_ae_header_id           => l_ae_header_id
         );

   --
   -- set rounding class
   --
   XLA_AE_LINES_PKG.g_rec_lines.array_rounding_class(XLA_AE_LINES_PKG.g_LineNumber) :=
                      'PURCHASE_ORDER';

   --
   xla_ae_lines_pkg.g_rec_lines.array_calculate_acctd_flag(xla_ae_lines_pkg.g_LineNumber) := p_calculate_acctd_flag;
   xla_ae_lines_pkg.g_rec_lines.array_calculate_g_l_flag(xla_ae_lines_pkg.g_LineNumber) := p_calculate_g_l_flag;
   --
   -- bulk performance
   --
   XLA_AE_LINES_PKG.g_rec_lines.array_balance_type_code(XLA_AE_LINES_PKG.g_LineNumber) := l_balance_type_code;

   XLA_AE_LINES_PKG.g_rec_lines.array_ledger_id(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id;

   -- 4955764
   XLA_AE_LINES_PKG.g_rec_lines.array_gl_date(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_HEADER_PKG.g_rec_header_new.array_gl_date(g_array_event(p_event_id).array_value_num('header_index'));

   -- 4458381 Public Sector Enh
   
   --
   -- set accounting attributes for the line type
   --
   l_entered_amt_idx := 23;
   l_accted_amt_idx  := 25;
   l_bflow_applied_to_amt_idx  := NULL;  -- 5132302
   l_rec_acct_attrs.array_acct_attr_code(1) := 'ACCOUNTING_REVERSAL_OPTION';
   l_rec_acct_attrs.array_char_value(1)  := p_source_19;
   l_rec_acct_attrs.array_acct_attr_code(2) := 'ALLOC_TO_APPLICATION_ID';
   l_rec_acct_attrs.array_num_value(2)  := 
xla_ae_sources_pkg.GetSystemSourceNum(
   p_source_code           => 'XLA_EVENT_APPL_ID'
 , p_source_type_code      => 'Y'
 , p_source_application_id =>  602
);
   l_rec_acct_attrs.array_acct_attr_code(3) := 'ALLOC_TO_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(3)  := p_source_21;
   l_rec_acct_attrs.array_acct_attr_code(4) := 'ALLOC_TO_ENTITY_CODE';
   l_rec_acct_attrs.array_char_value(4)  := 
xla_ae_sources_pkg.GetSystemSourceChar(
   p_source_code           => 'XLA_ENTITY_CODE'
 , p_source_type_code      => 'Y'
 , p_source_application_id =>  602
);
   l_rec_acct_attrs.array_acct_attr_code(5) := 'ALLOC_TO_FIRST_DIST_ID';
   l_rec_acct_attrs.array_num_value(5)  :=  to_char(p_source_23);
   l_rec_acct_attrs.array_acct_attr_code(6) := 'ALLOC_TO_FIRST_SYS_TRAN_ID';
   l_rec_acct_attrs.array_num_value(6)  :=  to_char(p_source_24);
   l_rec_acct_attrs.array_acct_attr_code(7) := 'APPLIED_TO_APPLICATION_ID';
   l_rec_acct_attrs.array_num_value(7)  := p_source_60;
   l_rec_acct_attrs.array_acct_attr_code(8) := 'APPLIED_TO_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(8)  := p_source_61;
   l_rec_acct_attrs.array_acct_attr_code(9) := 'APPLIED_TO_ENTITY_CODE';
   l_rec_acct_attrs.array_char_value(9)  := p_source_62;
   l_rec_acct_attrs.array_acct_attr_code(10) := 'APPLIED_TO_FIRST_DIST_ID';
   l_rec_acct_attrs.array_num_value(10)  :=  to_char(p_source_63);
   l_rec_acct_attrs.array_acct_attr_code(11) := 'APPLIED_TO_FIRST_SYS_TRAN_ID';
   l_rec_acct_attrs.array_num_value(11)  :=  to_char(p_source_64);
   l_rec_acct_attrs.array_acct_attr_code(12) := 'DISTRIBUTION_IDENTIFIER_1';
   l_rec_acct_attrs.array_num_value(12)  :=  to_char(p_source_30);
   l_rec_acct_attrs.array_acct_attr_code(13) := 'DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(13)  := p_source_21;
   l_rec_acct_attrs.array_acct_attr_code(14) := 'ENC_UPG_CR_CCID';
   l_rec_acct_attrs.array_num_value(14)  := p_source_31;
   l_rec_acct_attrs.array_acct_attr_code(15) := 'ENC_UPG_CR_ENTERED_AMT';
   l_rec_acct_attrs.array_num_value(15)  := p_source_32;
   l_rec_acct_attrs.array_acct_attr_code(16) := 'ENC_UPG_CR_ENTERED_CURR';
   l_rec_acct_attrs.array_char_value(16)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(17) := 'ENC_UPG_CR_LEDGER_AMT';
   l_rec_acct_attrs.array_num_value(17)  := p_source_34;
   l_rec_acct_attrs.array_acct_attr_code(18) := 'ENC_UPG_DR_CCID';
   l_rec_acct_attrs.array_num_value(18)  := p_source_35;
   l_rec_acct_attrs.array_acct_attr_code(19) := 'ENC_UPG_DR_ENTERED_AMT';
   l_rec_acct_attrs.array_num_value(19)  := p_source_36;
   l_rec_acct_attrs.array_acct_attr_code(20) := 'ENC_UPG_DR_ENTERED_CURR';
   l_rec_acct_attrs.array_char_value(20)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(21) := 'ENC_UPG_DR_LEDGER_AMT';
   l_rec_acct_attrs.array_num_value(21)  := p_source_37;
   l_rec_acct_attrs.array_acct_attr_code(22) := 'ENC_UPG_OPTION';
   l_rec_acct_attrs.array_char_value(22)  := p_source_38;
   l_rec_acct_attrs.array_acct_attr_code(23) := 'ENTERED_CURRENCY_AMOUNT';
   l_rec_acct_attrs.array_num_value(23)  := p_source_65;
   l_rec_acct_attrs.array_acct_attr_code(24) := 'ENTERED_CURRENCY_CODE';
   l_rec_acct_attrs.array_char_value(24)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(25) := 'LEDGER_AMOUNT';
   l_rec_acct_attrs.array_num_value(25)  := p_source_66;
   l_rec_acct_attrs.array_acct_attr_code(26) := 'MULTIPERIOD_END_DATE';
   l_rec_acct_attrs.array_date_value(26)  := p_source_43;
   l_rec_acct_attrs.array_acct_attr_code(27) := 'MULTIPERIOD_OPTION';
   l_rec_acct_attrs.array_char_value(27)  := p_source_44;
   l_rec_acct_attrs.array_acct_attr_code(28) := 'MULTIPERIOD_START_DATE';
   l_rec_acct_attrs.array_date_value(28)  := p_source_45;
   l_rec_acct_attrs.array_acct_attr_code(29) := 'OVERRIDE_ACCTD_AMT_FLAG';
   l_rec_acct_attrs.array_char_value(29)  := p_source_46;
   l_rec_acct_attrs.array_acct_attr_code(30) := 'PARTY_TYPE';
   l_rec_acct_attrs.array_char_value(30)  := p_source_49;
   l_rec_acct_attrs.array_acct_attr_code(31) := 'REVERSED_DISTRIBUTION_ID1';
   l_rec_acct_attrs.array_num_value(31)  :=  to_char(p_source_50);
   l_rec_acct_attrs.array_acct_attr_code(32) := 'REVERSED_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(32)  := p_source_21;
   l_rec_acct_attrs.array_acct_attr_code(33) := 'STATISTICAL_AMOUNT';
   l_rec_acct_attrs.array_num_value(33)  := p_source_51;
   l_rec_acct_attrs.array_acct_attr_code(34) := 'TAX_LINE_REF_ID';
   l_rec_acct_attrs.array_num_value(34)  := p_source_52;
   l_rec_acct_attrs.array_acct_attr_code(35) := 'TAX_REC_NREC_DIST_REF_ID';
   l_rec_acct_attrs.array_num_value(35)  := p_source_53;
   l_rec_acct_attrs.array_acct_attr_code(36) := 'TAX_SUMMARY_LINE_REF_ID';
   l_rec_acct_attrs.array_num_value(36)  := p_source_54;
   l_rec_acct_attrs.array_acct_attr_code(37) := 'UPG_CR_ENC_TYPE_ID';
   l_rec_acct_attrs.array_num_value(37)  := p_source_55;
   l_rec_acct_attrs.array_acct_attr_code(38) := 'UPG_DR_ENC_TYPE_ID';
   l_rec_acct_attrs.array_num_value(38)  := p_source_56;

   XLA_AE_LINES_PKG.SetLineAcctAttrs(l_rec_acct_attrs);
   p_gain_or_loss_ref  := XLA_AE_LINES_PKG.g_rec_lines.array_gain_or_loss_ref(XLA_AE_LINES_PKG.g_LineNumber);

   ---------------------------------------------------------------------------------------------------------------
   -- 4336173 -- assign Business Flow Class (replace code in xla_ae_lines_pkg.Business_Flow_Validation)
   ---------------------------------------------------------------------------------------------------------------
   XLA_AE_LINES_PKG.g_rec_lines.array_business_class_code(XLA_AE_LINES_PKG.g_LineNumber) := l_bflow_class_code;

   l_actual_upg_option  := XLA_AE_LINES_PKG.g_rec_lines.array_actual_upg_option(XLA_AE_LINES_PKG.g_LineNumber);
   l_enc_upg_option     := XLA_AE_LINES_PKG.g_rec_lines.array_enc_upg_option(XLA_AE_LINES_PKG.g_LineNumber);

   IF xla_accounting_cache_pkg.GetValueChar
         (p_source_code         => 'LEDGER_CATEGORY_CODE'
         ,p_target_ledger_id    => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id) IN ('PRIMARY','ALC')
   AND l_bflow_method_code = 'PRIOR_ENTRY'
--   AND (l_actual_upg_option = 'Y' OR l_enc_upg_option = 'Y') Bug 4922099
   AND ( (NVL(l_actual_upg_option, 'N') IN ('Y', 'O')) OR
         (NVL(l_enc_upg_option, 'N') IN ('Y', 'O'))
       )
   THEN
         xla_ae_lines_pkg.BflowUpgEntry
           (p_business_method_code    => l_bflow_method_code
           ,p_business_class_code     => l_bflow_class_code
           ,p_balance_type            => l_balance_type_code);
   ELSE
      NULL;
XLA_AE_LINES_PKG.business_flow_validation(
                                p_business_method_code     => l_bflow_method_code
                               ,p_business_class_code      => l_bflow_class_code
                               ,p_inherit_description_flag => l_inherit_desc_flag);
   END IF;

   --
   -- call analytical criteria
   --
   -- Inherited Analytical Criteria for business flow method of Prior Entry.
   --
   -- call description
   --
   -- No description or it is inherited.
   --
   -- call ADRs
   -- Bug 4922099
   --
   IF ( (l_bflow_method_code <> 'PRIOR_ENTRY') OR
        (NVL(l_actual_upg_option, 'N') = 'O') OR
        (NVL(l_enc_upg_option, 'N') = 'O')
      )
   THEN
   NULL;
   --
   --
   
   --
   --
   END IF;
   --
   -- Bug 4922099
   IF ( ( (NVL(l_actual_upg_option, 'N') = 'O') OR
          (NVL(l_enc_upg_option, 'N') = 'O')
        ) AND
        (l_bflow_method_code = 'PRIOR_ENTRY')
      )
   THEN
      IF
      --
      1 = 1
      --
      THEN
      xla_accounting_err_pkg.build_message
                                    (p_appli_s_name            => 'XLA'
                                    ,p_msg_name                => 'XLA_UPG_OVERRIDE_ADR_UNDEFINED'
                                    ,p_token_1                 => 'LINE_NUMBER'
                                    ,p_value_1                 => XLA_AE_LINES_PKG.g_LineNumber
                                    ,p_token_2                 => 'LINE_TYPE_NAME'
                                    ,p_value_2                 => XLA_AE_SOURCES_PKG.GetComponentName (
                                                                             l_component_type
                                                                            ,l_component_code
                                                                            ,l_component_type_code
                                                                            ,l_component_appl_id
                                                                            ,l_amb_context_code
                                                                            ,l_entity_code
                                                                            ,l_event_class_code
                                                                           )
                                    ,p_token_3                 => 'OWNER'
                                    ,p_value_3                 => xla_lookups_pkg.get_meaning(
                                                                          p_lookup_type     => 'XLA_OWNER_TYPE'
                                                                          ,p_lookup_code    => l_component_type_code
                                                                         )
                                    ,p_token_4                 => 'PRODUCT_NAME'
                                    ,p_value_4                 => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.application_name
                                    ,p_entity_id               => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.entity_id
                                    ,p_event_id                => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.event_id
                                    ,p_ledger_id               => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id
                                    ,p_ae_header_id            =>  NULL
                                       );

        IF (C_LEVEL_ERROR>= g_log_level) THEN
                 trace
                      (p_msg      => 'ERROR: XLA_UPG_OVERRIDE_ADR_UNDEFINED'
                      ,p_level    => C_LEVEL_ERROR
                      ,p_module   => l_log_module);
        END IF;
      END IF;
   END IF;
   --
   --
   ------------------------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- NOTE: XLA_AE_LINES_PKG.ValidateCurrentLine should NOT be generated if business flow method is
   -- Prior Entry.  Currently, the following code is always generated.
   ------------------------------------------------------------------------------------------------
   -- No ValidateCurrentLine for business flow method of Prior Entry

   ------------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- Populated credit and debit amounts -- Need to generate this within IF <condition>
   ------------------------------------------------------------------------------------
   XLA_AE_LINES_PKG.SetDebitCreditAmounts;

   ----------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- Update journal entry status -- Need to generate this within IF <condition>
   ----------------------------------------------------------------------------------
   XLA_AE_JOURNAL_ENTRY_PKG.UpdateJournalEntryStatus
         (p_hdr_idx => g_array_event(p_event_id).array_value_num('header_index')
         ,p_balance_type_code => l_balance_type_code
         );

   -------------------------------------------------------------------------------------------
   -- 4262811 - Generate the Accrual Reversal lines
   -------------------------------------------------------------------------------------------
   BEGIN
      l_acc_rev_flag := XLA_AE_HEADER_PKG.g_rec_header_new.array_accrual_reversal_flag
                              (g_array_event(p_event_id).array_value_num('header_index'));
      IF l_acc_rev_flag IS NULL THEN
         l_acc_rev_flag := 'N';
      END IF;
   EXCEPTION
      WHEN OTHERS THEN
         l_acc_rev_flag := 'N';
   END;
   --
   IF (l_acc_rev_flag = 'Y') THEN

       -- 4645092  ------------------------------------------------------------------------------
       -- To allow MPA report to determine if it should generate report process
       XLA_ACCOUNTING_PKG.g_mpa_accrual_exists := 'Y';
       ------------------------------------------------------------------------------------------

       l_accrual_line_num := XLA_AE_LINES_PKG.g_LineNumber;
       XLA_AE_LINES_PKG.CopyLineInfo(l_accrual_line_num);
   -- added call to set_ccid to execute mapping  for secondary accrual reversal entries bug 7444204
   -- call ADRs
   -- Bug 4922099
   --
   IF ( (l_bflow_method_code <> 'PRIOR_ENTRY') OR
        (NVL(l_actual_upg_option, 'N') = 'O') OR
        (NVL(l_enc_upg_option, 'N') = 'O')
      )
   THEN
   NULL;
   --
   --
   
   --
   --
   END IF;

       --
       -- Update the line information that should be overwritten
       --
       XLA_AE_LINES_PKG.set_ae_header_id(p_ae_header_id => p_event_id ,
                                         p_header_num   => 1);
       XLA_AE_LINES_PKG.g_rec_lines.array_header_num(XLA_AE_LINES_PKG.g_LineNumber)  :=1;

       XLA_AE_LINES_PKG.g_rec_lines.array_business_class_code(XLA_AE_LINES_PKG.g_LineNumber) := NULL; -- 4669271

       IF l_bflow_method_code <> 'NONE' THEN  -- 4655713b
          XLA_AE_LINES_PKG.g_rec_lines.array_reversal_code(XLA_AE_LINES_PKG.g_LineNumber) := CONCAT('MPA_',l_bflow_method_code);
       END IF;

      --
      -- Depending on the Reversal Method setup, do a switch side or changes sign for the amounts
      --
      IF (XLA_AE_JOURNAL_ENTRY_PKG.g_cache_ledgers_info.ledger_reversal_option = 'SIDE') THEN
          XLA_AE_LINES_PKG.g_rec_lines.array_natural_side_code(XLA_AE_LINES_PKG.g_LineNumber) :=  l_acc_rev_natural_side_code;
      ELSE
          ---------------------------------------------------------------------------------------------------
          -- 4262811a Switch Sign
          ---------------------------------------------------------------------------------------------------
          XLA_AE_LINES_PKG.g_rec_lines.array_switch_side_flag(XLA_AE_LINES_PKG.g_LineNumber) := 'N';  -- 5052518
          XLA_AE_LINES_PKG.g_rec_lines.array_ledger_amount(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_ledger_amount(XLA_AE_LINES_PKG.g_LineNumber) * -1;
          XLA_AE_LINES_PKG.g_rec_lines.array_entered_amount(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_entered_amount(XLA_AE_LINES_PKG.g_LineNumber) * -1;
          -- 5132302
          XLA_AE_LINES_PKG.g_rec_lines.array_bflow_applied_to_amt(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_bflow_applied_to_amt(XLA_AE_LINES_PKG.g_LineNumber) * -1;

      END IF;

      -- 4955764
      XLA_AE_LINES_PKG.g_rec_lines.array_gl_date(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_HEADER_PKG.g_rec_header_new.array_gl_date(g_array_event(p_event_id).array_value_num('acc_rev_header_index'));


      XLA_AE_LINES_PKG.ValidateCurrentLine;
      XLA_AE_LINES_PKG.SetDebitCreditAmounts;

      XLA_AE_JOURNAL_ENTRY_PKG.UpdateJournalEntryStatus
               (p_hdr_idx           => g_array_event(p_event_id).array_value_num('acc_rev_header_index')
               ,p_balance_type_code => l_balance_type_code);

   END IF;

   -----------------------------------------------------------------------------------------
   -- 4262811 Multiperiod Accounting
   -----------------------------------------------------------------------------------------
     -- No MPA option is assigned.


END IF;
END IF;
--

--
IF (C_LEVEL_PROCEDURE >= g_log_level) THEN
   trace
      (p_msg      => 'END of AcctLineType_49'
      ,p_level    => C_LEVEL_PROCEDURE
      ,p_module   => l_log_module);
END IF;
--
EXCEPTION
  WHEN xla_exceptions_pkg.application_exception THEN
      RAISE;
  WHEN OTHERS THEN
       xla_exceptions_pkg.raise_message
           (p_location => 'XLA_00200_AAD_S_000010_BC_PKG.AcctLineType_49');
END AcctLineType_49;
--

---------------------------------------
--
-- PRIVATE FUNCTION
--         AcctLineType_50
--
---------------------------------------
PROCEDURE AcctLineType_50 (
  p_application_id        IN NUMBER
 ,p_event_id              IN NUMBER
 ,p_calculate_acctd_flag  IN VARCHAR2
 ,p_calculate_g_l_flag    IN VARCHAR2
 ,p_actual_flag           IN OUT VARCHAR2
 ,p_balance_type_code     OUT VARCHAR2
 ,p_gain_or_loss_ref      OUT VARCHAR2
 
--Purchasing Encumbrance Option
 , p_source_17            IN VARCHAR2
 , p_source_17_meaning    IN VARCHAR2
--Accounting Reversal Indicator
 , p_source_19            IN VARCHAR2
--Distribution Link Type
 , p_source_21            IN VARCHAR2
--Invoice Identifier
 , p_source_24            IN NUMBER
--Business Flow Accounts Payable Application Identifier
 , p_source_25            IN NUMBER
--Payables Encumbrance Upgrade Credit Account
 , p_source_31            IN NUMBER
--Payables Encumbrance Upgrade Credit Amount
 , p_source_32            IN NUMBER
--Invoice Currency Code
 , p_source_33            IN VARCHAR2
--Payables Encumbrance Upgrade Credit Base Amount
 , p_source_34            IN NUMBER
--Payables Encumbrance Upgrade Debit Account
 , p_source_35            IN NUMBER
--Payables Encumbrance Upgrade Debit Amount
 , p_source_36            IN NUMBER
--Payables Encumbrance Upgrade Debit Base Amount
 , p_source_37            IN NUMBER
--Payables Encumbrance Upgrade Option
 , p_source_38            IN VARCHAR2
--Deferred Accounting End Date
 , p_source_43            IN DATE
--Deferred Accounting Option
 , p_source_44            IN VARCHAR2
--Deferred Accounting Start Date
 , p_source_45            IN DATE
--Override Accounted Amount Indicator
 , p_source_46            IN VARCHAR2
 , p_source_46_meaning    IN VARCHAR2
--Third Party Type
 , p_source_49            IN VARCHAR2
--Invoice Distribution Tax Line Identifier
 , p_source_52            IN NUMBER
--Invoice Distribution Tax Distribution Identifier from Tax
 , p_source_53            IN NUMBER
--Invoice Distribution Summary Tax Line Identifier
 , p_source_54            IN NUMBER
--Payables Upgrade Credit Encumbrance Type Identifier
 , p_source_55            IN NUMBER
--Payables Upgrade Debit Encumbrance Type Identifier
 , p_source_56            IN NUMBER
--Prepayment Distribution Type
 , p_source_69            IN VARCHAR2
--Prepayment Application Distribution Identifier
 , p_source_71            IN NUMBER
--Business Flow Prepayment Invoice Distribution Type
 , p_source_72            IN VARCHAR2
--Business Flow Prepayment Invoice Entity Code
 , p_source_73            IN VARCHAR2
--Business Flow Prepayment Invoice Distribution Identifier
 , p_source_74            IN NUMBER
--Business Flow Prepayment Invoice Identifier
 , p_source_75            IN NUMBER
--Upgrade Encumbrance Credit Account Class
 , p_source_76            IN VARCHAR2
--Upgrade Encumbrance Debit Account Class
 , p_source_77            IN VARCHAR2
--Prepayment Distribution Amount
 , p_source_78            IN NUMBER
--Prepayment Distribution (Invoice Rate) Ledger Amount
 , p_source_79            IN NUMBER
--Identifier of the Prepayment Application Reversed
 , p_source_80            IN NUMBER
)
IS

l_component_type              VARCHAR2(80);
l_component_code              VARCHAR2(30);
l_component_type_code         VARCHAR2(1);
l_component_appl_id           INTEGER;
l_amb_context_code            VARCHAR2(30);
l_entity_code                 VARCHAR2(30);
l_event_class_code            VARCHAR2(30);
l_ae_header_id                NUMBER;
l_event_type_code             VARCHAR2(30);
l_line_definition_code        VARCHAR2(30);
l_line_definition_owner_code  VARCHAR2(1);
--
-- adr variables
l_segment                     VARCHAR2(30);
l_ccid                        NUMBER;
l_adr_transaction_coa_id      NUMBER;
l_adr_accounting_coa_id       NUMBER;
l_adr_flexfield_segment_code  VARCHAR2(30);
l_adr_flex_value_set_id       NUMBER;
l_adr_value_type_code         VARCHAR2(30);
l_adr_value_combination_id    NUMBER;
l_adr_value_segment_code      VARCHAR2(30);

l_bflow_method_code           VARCHAR2(30);  -- 4219869 Business Flow
l_bflow_class_code            VARCHAR2(30);  -- 4219869 Business Flow
l_inherit_desc_flag           VARCHAR2(1);   -- 4219869 Business Flow
l_budgetary_control_flag      VARCHAR2(1);   -- 4458381 Public Sector Enh

-- 4262811 Variables ------------------------------------------------------------------------------------------
l_entered_amt_idx             NUMBER;
l_accted_amt_idx              NUMBER;
l_acc_rev_flag                VARCHAR2(1);
l_accrual_line_num            NUMBER;
l_tmp_amt                     NUMBER;
l_acc_rev_natural_side_code   VARCHAR2(1);

l_num_entries                 NUMBER;
l_gl_dates                    xla_ae_journal_entry_pkg.t_array_date;
l_accted_amts                 xla_ae_journal_entry_pkg.t_array_num;
l_entered_amts                xla_ae_journal_entry_pkg.t_array_num;
l_period_names                xla_ae_journal_entry_pkg.t_array_V15L;
l_recog_line_1                NUMBER;
l_recog_line_2                NUMBER;

l_bflow_applied_to_amt_idx    NUMBER;                                -- 5132302
l_bflow_applied_to_amt        NUMBER;                                -- 5132302
l_bflow_applied_to_amts       xla_ae_journal_entry_pkg.t_array_num;  -- 5132302

l_event_id                    NUMBER;  -- To handle MPA header Description: xla_ae_header_pkg.SetHdrDescription

--l_rounding_ccy                VARCHAR2(15); -- To handle MPA rounding  4262811b
l_same_currency               BOOLEAN;        -- To handle MPA rounding  4262811b

---------------------------------------------------------------------------------------------------------------


--
-- bulk performance
--
l_balance_type_code           VARCHAR2(1);
l_rec_acct_attrs              XLA_AE_LINES_PKG.t_rec_acct_attrs;
l_log_module                  VARCHAR2(240);

--
-- Upgrade strategy
--
l_actual_upg_option           VARCHAR2(1);
l_enc_upg_option           VARCHAR2(1);

--
BEGIN
--
IF g_log_enabled THEN
      l_log_module := C_DEFAULT_MODULE||'.AcctLineType_50';
END IF;
--
IF (C_LEVEL_PROCEDURE >= g_log_level) THEN

      trace
         (p_msg      => 'BEGIN of AcctLineType_50'
         ,p_level    => C_LEVEL_PROCEDURE
         ,p_module   => l_log_module);

END IF;
--
l_component_type             := 'AMB_JLT';
l_component_code             := 'AP_PREPAID_EXP_PREPAY_APP_E_CR';
l_component_type_code        := 'S';
l_component_appl_id          :=  200;
l_amb_context_code           := 'DEFAULT';
l_entity_code                := 'AP_INVOICES';
l_event_class_code           := 'PREPAYMENT APPLICATIONS';
l_event_type_code            := 'PREPAYMENT APPLICATIONS_ALL';
l_line_definition_owner_code := 'S';
l_line_definition_code       := 'ENC_PREPAY_APPL_ALL';
--
l_balance_type_code          := 'E';
l_segment                     := NULL;
l_ccid                        := NULL;
l_adr_transaction_coa_id      := NULL;
l_adr_accounting_coa_id       := NULL;
l_adr_flexfield_segment_code  := NULL;
l_adr_flex_value_set_id       := NULL;
l_adr_value_type_code         := NULL;
l_adr_value_combination_id    := NULL;
l_adr_value_segment_code      := NULL;

l_bflow_method_code          := 'PRIOR_ENTRY';   -- 4219869 Business Flow
l_bflow_class_code           := 'AP_INV_ENCUM';    -- 4219869 Business Flow
l_inherit_desc_flag          := 'Y';   -- 4219869 Business Flow
l_budgetary_control_flag     := 'Y';

l_bflow_applied_to_amt_idx   := NULL; -- 5132302
l_bflow_applied_to_amt       := NULL; -- 5132302
l_entered_amt_idx            := NULL;          -- 4262811
l_accted_amt_idx             := NULL;          -- 4262811
l_acc_rev_flag               := NULL;          -- 4262811
l_accrual_line_num           := NULL;          -- 4262811
l_tmp_amt                    := NULL;          -- 4262811
--
 
IF XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id = XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.ledger_id OR
    l_balance_type_code <> 'B' THEN
IF (NVL(p_source_69,'
') =  'PREPAY APPL' OR 
NVL(p_source_69,'
') =  'TAX DIFF' OR 
NVL(p_source_69,'
') =  'FINAL APPLICATION ROUNDING' OR 
NVL(p_source_69,'
') =  'PREPAY APPL REC TAX' OR 
NVL(p_source_69,'
') =  'PREPAY APPL NONREC TAX') AND 
NVL(p_source_17,'
') =  'Y' AND 
NVL(
xla_ae_sources_pkg.GetSystemSourceChar(
   p_source_code           => 'XLA_EVENT_TYPE_CODE'
 , p_source_type_code      => 'Y'
 , p_source_application_id =>  602
),'
') <>  'PREPAYMENT UNAPPLIED'
 THEN 

   --
   XLA_AE_LINES_PKG.SetNewLine;

   p_balance_type_code          := l_balance_type_code;
   -- set the flag so later we will know whether the gain loss line needs to be created
   
   IF(l_balance_type_code = 'A' and p_actual_flag is null) THEN
     p_actual_flag :='A';
   END IF;

   --
   -- bulk performance
   --
   XLA_AE_LINES_PKG.set_ae_header_id (p_ae_header_id => p_event_id ,
                                      p_header_num   => 0); -- 4262811
   --
   -- set accounting line options
   --
   l_ae_header_id:= xla_ae_lines_pkg.SetAcctLineOption(
           p_natural_side_code          => 'D'
         , p_gain_or_loss_flag          => 'N'
         , p_gl_transfer_mode_code      => 'S'
         , p_acct_entry_type_code       => 'E'
         , p_switch_side_flag           => 'Y'
         , p_merge_duplicate_code       => 'N'
         );
   --
   l_acc_rev_natural_side_code := 'C';  -- 4262811
   -- 
   --
   -- set accounting line type info
   --
   xla_ae_lines_pkg.SetAcctLineType
      (p_component_type             => l_component_type
      ,p_event_type_code            => l_event_type_code
      ,p_line_definition_owner_code => l_line_definition_owner_code
      ,p_line_definition_code       => l_line_definition_code
      ,p_accounting_line_code       => l_component_code
      ,p_accounting_line_type_code  => l_component_type_code
      ,p_accounting_line_appl_id    => l_component_appl_id
      ,p_amb_context_code           => l_amb_context_code
      ,p_entity_code                => l_entity_code
      ,p_event_class_code           => l_event_class_code);
   --
   -- set accounting class
   --
   xla_ae_lines_pkg.SetAcctClass(
           p_accounting_class_code  => 'PREPAID_EXPENSE'
         , p_ae_header_id           => l_ae_header_id
         );

   --
   -- set rounding class
   --
   XLA_AE_LINES_PKG.g_rec_lines.array_rounding_class(XLA_AE_LINES_PKG.g_LineNumber) :=
                      'PREPAID_EXPENSE';

   --
   xla_ae_lines_pkg.g_rec_lines.array_calculate_acctd_flag(xla_ae_lines_pkg.g_LineNumber) := p_calculate_acctd_flag;
   xla_ae_lines_pkg.g_rec_lines.array_calculate_g_l_flag(xla_ae_lines_pkg.g_LineNumber) := p_calculate_g_l_flag;
   --
   -- bulk performance
   --
   XLA_AE_LINES_PKG.g_rec_lines.array_balance_type_code(XLA_AE_LINES_PKG.g_LineNumber) := l_balance_type_code;

   XLA_AE_LINES_PKG.g_rec_lines.array_ledger_id(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id;

   -- 4955764
   XLA_AE_LINES_PKG.g_rec_lines.array_gl_date(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_HEADER_PKG.g_rec_header_new.array_gl_date(g_array_event(p_event_id).array_value_num('header_index'));

   -- 4458381 Public Sector Enh
   
   --
   -- set accounting attributes for the line type
   --
   l_entered_amt_idx := 25;
   l_accted_amt_idx  := 27;
   l_bflow_applied_to_amt_idx  := NULL;  -- 5132302
   l_rec_acct_attrs.array_acct_attr_code(1) := 'ACCOUNTING_REVERSAL_OPTION';
   l_rec_acct_attrs.array_char_value(1)  := p_source_19;
   l_rec_acct_attrs.array_acct_attr_code(2) := 'ALLOC_TO_APPLICATION_ID';
   l_rec_acct_attrs.array_num_value(2)  := 
xla_ae_sources_pkg.GetSystemSourceNum(
   p_source_code           => 'XLA_EVENT_APPL_ID'
 , p_source_type_code      => 'Y'
 , p_source_application_id =>  602
);
   l_rec_acct_attrs.array_acct_attr_code(3) := 'ALLOC_TO_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(3)  := p_source_21;
   l_rec_acct_attrs.array_acct_attr_code(4) := 'ALLOC_TO_ENTITY_CODE';
   l_rec_acct_attrs.array_char_value(4)  := 
xla_ae_sources_pkg.GetSystemSourceChar(
   p_source_code           => 'XLA_ENTITY_CODE'
 , p_source_type_code      => 'Y'
 , p_source_application_id =>  602
);
   l_rec_acct_attrs.array_acct_attr_code(5) := 'ALLOC_TO_FIRST_DIST_ID';
   l_rec_acct_attrs.array_num_value(5)  :=  to_char(p_source_71);
   l_rec_acct_attrs.array_acct_attr_code(6) := 'ALLOC_TO_FIRST_SYS_TRAN_ID';
   l_rec_acct_attrs.array_num_value(6)  :=  to_char(p_source_24);
   l_rec_acct_attrs.array_acct_attr_code(7) := 'APPLIED_TO_APPLICATION_ID';
   l_rec_acct_attrs.array_num_value(7)  := p_source_25;
   l_rec_acct_attrs.array_acct_attr_code(8) := 'APPLIED_TO_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(8)  := p_source_72;
   l_rec_acct_attrs.array_acct_attr_code(9) := 'APPLIED_TO_ENTITY_CODE';
   l_rec_acct_attrs.array_char_value(9)  := p_source_73;
   l_rec_acct_attrs.array_acct_attr_code(10) := 'APPLIED_TO_FIRST_DIST_ID';
   l_rec_acct_attrs.array_num_value(10)  :=  to_char(p_source_74);
   l_rec_acct_attrs.array_acct_attr_code(11) := 'APPLIED_TO_FIRST_SYS_TRAN_ID';
   l_rec_acct_attrs.array_num_value(11)  :=  to_char(p_source_75);
   l_rec_acct_attrs.array_acct_attr_code(12) := 'DISTRIBUTION_IDENTIFIER_1';
   l_rec_acct_attrs.array_num_value(12)  :=  to_char(p_source_71);
   l_rec_acct_attrs.array_acct_attr_code(13) := 'DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(13)  := p_source_21;
   l_rec_acct_attrs.array_acct_attr_code(14) := 'ENC_UPG_CR_ACCT_CLASS';
   l_rec_acct_attrs.array_char_value(14)  := p_source_76;
   l_rec_acct_attrs.array_acct_attr_code(15) := 'ENC_UPG_CR_CCID';
   l_rec_acct_attrs.array_num_value(15)  := p_source_31;
   l_rec_acct_attrs.array_acct_attr_code(16) := 'ENC_UPG_CR_ENTERED_AMT';
   l_rec_acct_attrs.array_num_value(16)  := p_source_32;
   l_rec_acct_attrs.array_acct_attr_code(17) := 'ENC_UPG_CR_ENTERED_CURR';
   l_rec_acct_attrs.array_char_value(17)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(18) := 'ENC_UPG_CR_LEDGER_AMT';
   l_rec_acct_attrs.array_num_value(18)  := p_source_34;
   l_rec_acct_attrs.array_acct_attr_code(19) := 'ENC_UPG_DR_ACCT_CLASS';
   l_rec_acct_attrs.array_char_value(19)  := p_source_77;
   l_rec_acct_attrs.array_acct_attr_code(20) := 'ENC_UPG_DR_CCID';
   l_rec_acct_attrs.array_num_value(20)  := p_source_35;
   l_rec_acct_attrs.array_acct_attr_code(21) := 'ENC_UPG_DR_ENTERED_AMT';
   l_rec_acct_attrs.array_num_value(21)  := p_source_36;
   l_rec_acct_attrs.array_acct_attr_code(22) := 'ENC_UPG_DR_ENTERED_CURR';
   l_rec_acct_attrs.array_char_value(22)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(23) := 'ENC_UPG_DR_LEDGER_AMT';
   l_rec_acct_attrs.array_num_value(23)  := p_source_37;
   l_rec_acct_attrs.array_acct_attr_code(24) := 'ENC_UPG_OPTION';
   l_rec_acct_attrs.array_char_value(24)  := p_source_38;
   l_rec_acct_attrs.array_acct_attr_code(25) := 'ENTERED_CURRENCY_AMOUNT';
   l_rec_acct_attrs.array_num_value(25)  := p_source_78;
   l_rec_acct_attrs.array_acct_attr_code(26) := 'ENTERED_CURRENCY_CODE';
   l_rec_acct_attrs.array_char_value(26)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(27) := 'LEDGER_AMOUNT';
   l_rec_acct_attrs.array_num_value(27)  := p_source_79;
   l_rec_acct_attrs.array_acct_attr_code(28) := 'MULTIPERIOD_END_DATE';
   l_rec_acct_attrs.array_date_value(28)  := p_source_43;
   l_rec_acct_attrs.array_acct_attr_code(29) := 'MULTIPERIOD_OPTION';
   l_rec_acct_attrs.array_char_value(29)  := p_source_44;
   l_rec_acct_attrs.array_acct_attr_code(30) := 'MULTIPERIOD_START_DATE';
   l_rec_acct_attrs.array_date_value(30)  := p_source_45;
   l_rec_acct_attrs.array_acct_attr_code(31) := 'OVERRIDE_ACCTD_AMT_FLAG';
   l_rec_acct_attrs.array_char_value(31)  := p_source_46;
   l_rec_acct_attrs.array_acct_attr_code(32) := 'PARTY_TYPE';
   l_rec_acct_attrs.array_char_value(32)  := p_source_49;
   l_rec_acct_attrs.array_acct_attr_code(33) := 'REVERSED_DISTRIBUTION_ID1';
   l_rec_acct_attrs.array_num_value(33)  :=  to_char(p_source_80);
   l_rec_acct_attrs.array_acct_attr_code(34) := 'REVERSED_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(34)  := p_source_21;
   l_rec_acct_attrs.array_acct_attr_code(35) := 'TAX_LINE_REF_ID';
   l_rec_acct_attrs.array_num_value(35)  := p_source_52;
   l_rec_acct_attrs.array_acct_attr_code(36) := 'TAX_REC_NREC_DIST_REF_ID';
   l_rec_acct_attrs.array_num_value(36)  := p_source_53;
   l_rec_acct_attrs.array_acct_attr_code(37) := 'TAX_SUMMARY_LINE_REF_ID';
   l_rec_acct_attrs.array_num_value(37)  := p_source_54;
   l_rec_acct_attrs.array_acct_attr_code(38) := 'UPG_CR_ENC_TYPE_ID';
   l_rec_acct_attrs.array_num_value(38)  := p_source_55;
   l_rec_acct_attrs.array_acct_attr_code(39) := 'UPG_DR_ENC_TYPE_ID';
   l_rec_acct_attrs.array_num_value(39)  := p_source_56;

   XLA_AE_LINES_PKG.SetLineAcctAttrs(l_rec_acct_attrs);
   p_gain_or_loss_ref  := XLA_AE_LINES_PKG.g_rec_lines.array_gain_or_loss_ref(XLA_AE_LINES_PKG.g_LineNumber);

   ---------------------------------------------------------------------------------------------------------------
   -- 4336173 -- assign Business Flow Class (replace code in xla_ae_lines_pkg.Business_Flow_Validation)
   ---------------------------------------------------------------------------------------------------------------
   XLA_AE_LINES_PKG.g_rec_lines.array_business_class_code(XLA_AE_LINES_PKG.g_LineNumber) := l_bflow_class_code;

   l_actual_upg_option  := XLA_AE_LINES_PKG.g_rec_lines.array_actual_upg_option(XLA_AE_LINES_PKG.g_LineNumber);
   l_enc_upg_option     := XLA_AE_LINES_PKG.g_rec_lines.array_enc_upg_option(XLA_AE_LINES_PKG.g_LineNumber);

   IF xla_accounting_cache_pkg.GetValueChar
         (p_source_code         => 'LEDGER_CATEGORY_CODE'
         ,p_target_ledger_id    => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id) IN ('PRIMARY','ALC')
   AND l_bflow_method_code = 'PRIOR_ENTRY'
--   AND (l_actual_upg_option = 'Y' OR l_enc_upg_option = 'Y') Bug 4922099
   AND ( (NVL(l_actual_upg_option, 'N') IN ('Y', 'O')) OR
         (NVL(l_enc_upg_option, 'N') IN ('Y', 'O'))
       )
   THEN
         xla_ae_lines_pkg.BflowUpgEntry
           (p_business_method_code    => l_bflow_method_code
           ,p_business_class_code     => l_bflow_class_code
           ,p_balance_type            => l_balance_type_code);
   ELSE
      NULL;
XLA_AE_LINES_PKG.business_flow_validation(
                                p_business_method_code     => l_bflow_method_code
                               ,p_business_class_code      => l_bflow_class_code
                               ,p_inherit_description_flag => l_inherit_desc_flag);
   END IF;

   --
   -- call analytical criteria
   --
   -- Inherited Analytical Criteria for business flow method of Prior Entry.
   --
   -- call description
   --
   -- No description or it is inherited.
   --
   -- call ADRs
   -- Bug 4922099
   --
   IF ( (l_bflow_method_code <> 'PRIOR_ENTRY') OR
        (NVL(l_actual_upg_option, 'N') = 'O') OR
        (NVL(l_enc_upg_option, 'N') = 'O')
      )
   THEN
   NULL;
   --
   --
   
   --
   --
   END IF;
   --
   -- Bug 4922099
   IF ( ( (NVL(l_actual_upg_option, 'N') = 'O') OR
          (NVL(l_enc_upg_option, 'N') = 'O')
        ) AND
        (l_bflow_method_code = 'PRIOR_ENTRY')
      )
   THEN
      IF
      --
      1 = 1
      --
      THEN
      xla_accounting_err_pkg.build_message
                                    (p_appli_s_name            => 'XLA'
                                    ,p_msg_name                => 'XLA_UPG_OVERRIDE_ADR_UNDEFINED'
                                    ,p_token_1                 => 'LINE_NUMBER'
                                    ,p_value_1                 => XLA_AE_LINES_PKG.g_LineNumber
                                    ,p_token_2                 => 'LINE_TYPE_NAME'
                                    ,p_value_2                 => XLA_AE_SOURCES_PKG.GetComponentName (
                                                                             l_component_type
                                                                            ,l_component_code
                                                                            ,l_component_type_code
                                                                            ,l_component_appl_id
                                                                            ,l_amb_context_code
                                                                            ,l_entity_code
                                                                            ,l_event_class_code
                                                                           )
                                    ,p_token_3                 => 'OWNER'
                                    ,p_value_3                 => xla_lookups_pkg.get_meaning(
                                                                          p_lookup_type     => 'XLA_OWNER_TYPE'
                                                                          ,p_lookup_code    => l_component_type_code
                                                                         )
                                    ,p_token_4                 => 'PRODUCT_NAME'
                                    ,p_value_4                 => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.application_name
                                    ,p_entity_id               => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.entity_id
                                    ,p_event_id                => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.event_id
                                    ,p_ledger_id               => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id
                                    ,p_ae_header_id            =>  NULL
                                       );

        IF (C_LEVEL_ERROR>= g_log_level) THEN
                 trace
                      (p_msg      => 'ERROR: XLA_UPG_OVERRIDE_ADR_UNDEFINED'
                      ,p_level    => C_LEVEL_ERROR
                      ,p_module   => l_log_module);
        END IF;
      END IF;
   END IF;
   --
   --
   ------------------------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- NOTE: XLA_AE_LINES_PKG.ValidateCurrentLine should NOT be generated if business flow method is
   -- Prior Entry.  Currently, the following code is always generated.
   ------------------------------------------------------------------------------------------------
   -- No ValidateCurrentLine for business flow method of Prior Entry

   ------------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- Populated credit and debit amounts -- Need to generate this within IF <condition>
   ------------------------------------------------------------------------------------
   XLA_AE_LINES_PKG.SetDebitCreditAmounts;

   ----------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- Update journal entry status -- Need to generate this within IF <condition>
   ----------------------------------------------------------------------------------
   XLA_AE_JOURNAL_ENTRY_PKG.UpdateJournalEntryStatus
         (p_hdr_idx => g_array_event(p_event_id).array_value_num('header_index')
         ,p_balance_type_code => l_balance_type_code
         );

   -------------------------------------------------------------------------------------------
   -- 4262811 - Generate the Accrual Reversal lines
   -------------------------------------------------------------------------------------------
   BEGIN
      l_acc_rev_flag := XLA_AE_HEADER_PKG.g_rec_header_new.array_accrual_reversal_flag
                              (g_array_event(p_event_id).array_value_num('header_index'));
      IF l_acc_rev_flag IS NULL THEN
         l_acc_rev_flag := 'N';
      END IF;
   EXCEPTION
      WHEN OTHERS THEN
         l_acc_rev_flag := 'N';
   END;
   --
   IF (l_acc_rev_flag = 'Y') THEN

       -- 4645092  ------------------------------------------------------------------------------
       -- To allow MPA report to determine if it should generate report process
       XLA_ACCOUNTING_PKG.g_mpa_accrual_exists := 'Y';
       ------------------------------------------------------------------------------------------

       l_accrual_line_num := XLA_AE_LINES_PKG.g_LineNumber;
       XLA_AE_LINES_PKG.CopyLineInfo(l_accrual_line_num);
   -- added call to set_ccid to execute mapping  for secondary accrual reversal entries bug 7444204
   -- call ADRs
   -- Bug 4922099
   --
   IF ( (l_bflow_method_code <> 'PRIOR_ENTRY') OR
        (NVL(l_actual_upg_option, 'N') = 'O') OR
        (NVL(l_enc_upg_option, 'N') = 'O')
      )
   THEN
   NULL;
   --
   --
   
   --
   --
   END IF;

       --
       -- Update the line information that should be overwritten
       --
       XLA_AE_LINES_PKG.set_ae_header_id(p_ae_header_id => p_event_id ,
                                         p_header_num   => 1);
       XLA_AE_LINES_PKG.g_rec_lines.array_header_num(XLA_AE_LINES_PKG.g_LineNumber)  :=1;

       XLA_AE_LINES_PKG.g_rec_lines.array_business_class_code(XLA_AE_LINES_PKG.g_LineNumber) := NULL; -- 4669271

       IF l_bflow_method_code <> 'NONE' THEN  -- 4655713b
          XLA_AE_LINES_PKG.g_rec_lines.array_reversal_code(XLA_AE_LINES_PKG.g_LineNumber) := CONCAT('MPA_',l_bflow_method_code);
       END IF;

      --
      -- Depending on the Reversal Method setup, do a switch side or changes sign for the amounts
      --
      IF (XLA_AE_JOURNAL_ENTRY_PKG.g_cache_ledgers_info.ledger_reversal_option = 'SIDE') THEN
          XLA_AE_LINES_PKG.g_rec_lines.array_natural_side_code(XLA_AE_LINES_PKG.g_LineNumber) :=  l_acc_rev_natural_side_code;
      ELSE
          ---------------------------------------------------------------------------------------------------
          -- 4262811a Switch Sign
          ---------------------------------------------------------------------------------------------------
          XLA_AE_LINES_PKG.g_rec_lines.array_switch_side_flag(XLA_AE_LINES_PKG.g_LineNumber) := 'N';  -- 5052518
          XLA_AE_LINES_PKG.g_rec_lines.array_ledger_amount(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_ledger_amount(XLA_AE_LINES_PKG.g_LineNumber) * -1;
          XLA_AE_LINES_PKG.g_rec_lines.array_entered_amount(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_entered_amount(XLA_AE_LINES_PKG.g_LineNumber) * -1;
          -- 5132302
          XLA_AE_LINES_PKG.g_rec_lines.array_bflow_applied_to_amt(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_bflow_applied_to_amt(XLA_AE_LINES_PKG.g_LineNumber) * -1;

      END IF;

      -- 4955764
      XLA_AE_LINES_PKG.g_rec_lines.array_gl_date(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_HEADER_PKG.g_rec_header_new.array_gl_date(g_array_event(p_event_id).array_value_num('acc_rev_header_index'));


      XLA_AE_LINES_PKG.ValidateCurrentLine;
      XLA_AE_LINES_PKG.SetDebitCreditAmounts;

      XLA_AE_JOURNAL_ENTRY_PKG.UpdateJournalEntryStatus
               (p_hdr_idx           => g_array_event(p_event_id).array_value_num('acc_rev_header_index')
               ,p_balance_type_code => l_balance_type_code);

   END IF;

   -----------------------------------------------------------------------------------------
   -- 4262811 Multiperiod Accounting
   -----------------------------------------------------------------------------------------
     -- No MPA option is assigned.


END IF;
END IF;
--

--
IF (C_LEVEL_PROCEDURE >= g_log_level) THEN
   trace
      (p_msg      => 'END of AcctLineType_50'
      ,p_level    => C_LEVEL_PROCEDURE
      ,p_module   => l_log_module);
END IF;
--
EXCEPTION
  WHEN xla_exceptions_pkg.application_exception THEN
      RAISE;
  WHEN OTHERS THEN
       xla_exceptions_pkg.raise_message
           (p_location => 'XLA_00200_AAD_S_000010_BC_PKG.AcctLineType_50');
END AcctLineType_50;
--

---------------------------------------
--
-- PRIVATE FUNCTION
--         AcctLineType_51
--
---------------------------------------
PROCEDURE AcctLineType_51 (
  p_application_id        IN NUMBER
 ,p_event_id              IN NUMBER
 ,p_calculate_acctd_flag  IN VARCHAR2
 ,p_calculate_g_l_flag    IN VARCHAR2
 ,p_actual_flag           IN OUT VARCHAR2
 ,p_balance_type_code     OUT VARCHAR2
 ,p_gain_or_loss_ref      OUT VARCHAR2
 
--Accounting Reversal Indicator
 , p_source_19            IN VARCHAR2
--Distribution Link Type
 , p_source_21            IN VARCHAR2
--Invoice Identifier
 , p_source_24            IN NUMBER
--Payables Encumbrance Upgrade Credit Account
 , p_source_31            IN NUMBER
--Payables Encumbrance Upgrade Credit Amount
 , p_source_32            IN NUMBER
--Invoice Currency Code
 , p_source_33            IN VARCHAR2
--Payables Encumbrance Upgrade Credit Base Amount
 , p_source_34            IN NUMBER
--Payables Encumbrance Upgrade Debit Account
 , p_source_35            IN NUMBER
--Payables Encumbrance Upgrade Debit Amount
 , p_source_36            IN NUMBER
--Payables Encumbrance Upgrade Debit Base Amount
 , p_source_37            IN NUMBER
--Payables Encumbrance Upgrade Option
 , p_source_38            IN VARCHAR2
--Deferred Accounting End Date
 , p_source_43            IN DATE
--Deferred Accounting Option
 , p_source_44            IN VARCHAR2
--Deferred Accounting Start Date
 , p_source_45            IN DATE
--Override Accounted Amount Indicator
 , p_source_46            IN VARCHAR2
 , p_source_46_meaning    IN VARCHAR2
--Third Party Type
 , p_source_49            IN VARCHAR2
--Invoice Distribution Tax Line Identifier
 , p_source_52            IN NUMBER
--Invoice Distribution Tax Distribution Identifier from Tax
 , p_source_53            IN NUMBER
--Invoice Distribution Summary Tax Line Identifier
 , p_source_54            IN NUMBER
--Payables Upgrade Credit Encumbrance Type Identifier
 , p_source_55            IN NUMBER
--Payables Upgrade Debit Encumbrance Type Identifier
 , p_source_56            IN NUMBER
--Purchase Order Distribution Identifier
 , p_source_58            IN NUMBER
--Business Flow Purchasing Application Identifier
 , p_source_60            IN NUMBER
--Business Flow Purchase Order Distribution Type
 , p_source_61            IN VARCHAR2
--Business Flow Purchase Order Entity Code
 , p_source_62            IN VARCHAR2
--Business Flow Purchasing Document Identifier
 , p_source_64            IN NUMBER
--Prepayment Distribution Type
 , p_source_69            IN VARCHAR2
--Prepayment Application Distribution Identifier
 , p_source_71            IN NUMBER
--Upgrade Encumbrance Credit Account Class
 , p_source_76            IN VARCHAR2
--Upgrade Encumbrance Debit Account Class
 , p_source_77            IN VARCHAR2
--Prepayment Distribution Amount
 , p_source_78            IN NUMBER
--Prepayment Distribution (Invoice Rate) Ledger Amount
 , p_source_79            IN NUMBER
--Identifier of the Prepayment Application Reversed
 , p_source_80            IN NUMBER
)
IS

l_component_type              VARCHAR2(80);
l_component_code              VARCHAR2(30);
l_component_type_code         VARCHAR2(1);
l_component_appl_id           INTEGER;
l_amb_context_code            VARCHAR2(30);
l_entity_code                 VARCHAR2(30);
l_event_class_code            VARCHAR2(30);
l_ae_header_id                NUMBER;
l_event_type_code             VARCHAR2(30);
l_line_definition_code        VARCHAR2(30);
l_line_definition_owner_code  VARCHAR2(1);
--
-- adr variables
l_segment                     VARCHAR2(30);
l_ccid                        NUMBER;
l_adr_transaction_coa_id      NUMBER;
l_adr_accounting_coa_id       NUMBER;
l_adr_flexfield_segment_code  VARCHAR2(30);
l_adr_flex_value_set_id       NUMBER;
l_adr_value_type_code         VARCHAR2(30);
l_adr_value_combination_id    NUMBER;
l_adr_value_segment_code      VARCHAR2(30);

l_bflow_method_code           VARCHAR2(30);  -- 4219869 Business Flow
l_bflow_class_code            VARCHAR2(30);  -- 4219869 Business Flow
l_inherit_desc_flag           VARCHAR2(1);   -- 4219869 Business Flow
l_budgetary_control_flag      VARCHAR2(1);   -- 4458381 Public Sector Enh

-- 4262811 Variables ------------------------------------------------------------------------------------------
l_entered_amt_idx             NUMBER;
l_accted_amt_idx              NUMBER;
l_acc_rev_flag                VARCHAR2(1);
l_accrual_line_num            NUMBER;
l_tmp_amt                     NUMBER;
l_acc_rev_natural_side_code   VARCHAR2(1);

l_num_entries                 NUMBER;
l_gl_dates                    xla_ae_journal_entry_pkg.t_array_date;
l_accted_amts                 xla_ae_journal_entry_pkg.t_array_num;
l_entered_amts                xla_ae_journal_entry_pkg.t_array_num;
l_period_names                xla_ae_journal_entry_pkg.t_array_V15L;
l_recog_line_1                NUMBER;
l_recog_line_2                NUMBER;

l_bflow_applied_to_amt_idx    NUMBER;                                -- 5132302
l_bflow_applied_to_amt        NUMBER;                                -- 5132302
l_bflow_applied_to_amts       xla_ae_journal_entry_pkg.t_array_num;  -- 5132302

l_event_id                    NUMBER;  -- To handle MPA header Description: xla_ae_header_pkg.SetHdrDescription

--l_rounding_ccy                VARCHAR2(15); -- To handle MPA rounding  4262811b
l_same_currency               BOOLEAN;        -- To handle MPA rounding  4262811b

---------------------------------------------------------------------------------------------------------------


--
-- bulk performance
--
l_balance_type_code           VARCHAR2(1);
l_rec_acct_attrs              XLA_AE_LINES_PKG.t_rec_acct_attrs;
l_log_module                  VARCHAR2(240);

--
-- Upgrade strategy
--
l_actual_upg_option           VARCHAR2(1);
l_enc_upg_option           VARCHAR2(1);

--
BEGIN
--
IF g_log_enabled THEN
      l_log_module := C_DEFAULT_MODULE||'.AcctLineType_51';
END IF;
--
IF (C_LEVEL_PROCEDURE >= g_log_level) THEN

      trace
         (p_msg      => 'BEGIN of AcctLineType_51'
         ,p_level    => C_LEVEL_PROCEDURE
         ,p_module   => l_log_module);

END IF;
--
l_component_type             := 'AMB_JLT';
l_component_code             := 'AP_PREPAY_APPL_PO_ENC';
l_component_type_code        := 'S';
l_component_appl_id          :=  200;
l_amb_context_code           := 'DEFAULT';
l_entity_code                := 'AP_INVOICES';
l_event_class_code           := 'PREPAYMENT APPLICATIONS';
l_event_type_code            := 'PREPAYMENT APPLICATIONS_ALL';
l_line_definition_owner_code := 'S';
l_line_definition_code       := 'ENC_PREPAY_APPL_ALL';
--
l_balance_type_code          := 'E';
l_segment                     := NULL;
l_ccid                        := NULL;
l_adr_transaction_coa_id      := NULL;
l_adr_accounting_coa_id       := NULL;
l_adr_flexfield_segment_code  := NULL;
l_adr_flex_value_set_id       := NULL;
l_adr_value_type_code         := NULL;
l_adr_value_combination_id    := NULL;
l_adr_value_segment_code      := NULL;

l_bflow_method_code          := 'PRIOR_ENTRY';   -- 4219869 Business Flow
l_bflow_class_code           := 'PO_ENCUMBRANCE';    -- 4219869 Business Flow
l_inherit_desc_flag          := 'Y';   -- 4219869 Business Flow
l_budgetary_control_flag     := 'Y';

l_bflow_applied_to_amt_idx   := NULL; -- 5132302
l_bflow_applied_to_amt       := NULL; -- 5132302
l_entered_amt_idx            := NULL;          -- 4262811
l_accted_amt_idx             := NULL;          -- 4262811
l_acc_rev_flag               := NULL;          -- 4262811
l_accrual_line_num           := NULL;          -- 4262811
l_tmp_amt                    := NULL;          -- 4262811
--
 
IF XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id = XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.ledger_id OR
    l_balance_type_code <> 'B' THEN
IF p_source_58 IS NOT NULL AND 
NVL(p_source_69,'
') =  'PREPAY APPL'
 THEN 

   --
   XLA_AE_LINES_PKG.SetNewLine;

   p_balance_type_code          := l_balance_type_code;
   -- set the flag so later we will know whether the gain loss line needs to be created
   
   IF(l_balance_type_code = 'A' and p_actual_flag is null) THEN
     p_actual_flag :='A';
   END IF;

   --
   -- bulk performance
   --
   XLA_AE_LINES_PKG.set_ae_header_id (p_ae_header_id => p_event_id ,
                                      p_header_num   => 0); -- 4262811
   --
   -- set accounting line options
   --
   l_ae_header_id:= xla_ae_lines_pkg.SetAcctLineOption(
           p_natural_side_code          => 'C'
         , p_gain_or_loss_flag          => 'N'
         , p_gl_transfer_mode_code      => 'S'
         , p_acct_entry_type_code       => 'E'
         , p_switch_side_flag           => 'Y'
         , p_merge_duplicate_code       => 'N'
         );
   --
   l_acc_rev_natural_side_code := 'D';  -- 4262811
   -- 
   --
   -- set accounting line type info
   --
   xla_ae_lines_pkg.SetAcctLineType
      (p_component_type             => l_component_type
      ,p_event_type_code            => l_event_type_code
      ,p_line_definition_owner_code => l_line_definition_owner_code
      ,p_line_definition_code       => l_line_definition_code
      ,p_accounting_line_code       => l_component_code
      ,p_accounting_line_type_code  => l_component_type_code
      ,p_accounting_line_appl_id    => l_component_appl_id
      ,p_amb_context_code           => l_amb_context_code
      ,p_entity_code                => l_entity_code
      ,p_event_class_code           => l_event_class_code);
   --
   -- set accounting class
   --
   xla_ae_lines_pkg.SetAcctClass(
           p_accounting_class_code  => 'PURCHASE_ORDER'
         , p_ae_header_id           => l_ae_header_id
         );

   --
   -- set rounding class
   --
   XLA_AE_LINES_PKG.g_rec_lines.array_rounding_class(XLA_AE_LINES_PKG.g_LineNumber) :=
                      'PURCHASE_ORDER';

   --
   xla_ae_lines_pkg.g_rec_lines.array_calculate_acctd_flag(xla_ae_lines_pkg.g_LineNumber) := p_calculate_acctd_flag;
   xla_ae_lines_pkg.g_rec_lines.array_calculate_g_l_flag(xla_ae_lines_pkg.g_LineNumber) := p_calculate_g_l_flag;
   --
   -- bulk performance
   --
   XLA_AE_LINES_PKG.g_rec_lines.array_balance_type_code(XLA_AE_LINES_PKG.g_LineNumber) := l_balance_type_code;

   XLA_AE_LINES_PKG.g_rec_lines.array_ledger_id(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id;

   -- 4955764
   XLA_AE_LINES_PKG.g_rec_lines.array_gl_date(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_HEADER_PKG.g_rec_header_new.array_gl_date(g_array_event(p_event_id).array_value_num('header_index'));

   -- 4458381 Public Sector Enh
   
   --
   -- set accounting attributes for the line type
   --
   l_entered_amt_idx := 25;
   l_accted_amt_idx  := 27;
   l_bflow_applied_to_amt_idx  := NULL;  -- 5132302
   l_rec_acct_attrs.array_acct_attr_code(1) := 'ACCOUNTING_REVERSAL_OPTION';
   l_rec_acct_attrs.array_char_value(1)  := p_source_19;
   l_rec_acct_attrs.array_acct_attr_code(2) := 'ALLOC_TO_APPLICATION_ID';
   l_rec_acct_attrs.array_num_value(2)  := 
xla_ae_sources_pkg.GetSystemSourceNum(
   p_source_code           => 'XLA_EVENT_APPL_ID'
 , p_source_type_code      => 'Y'
 , p_source_application_id =>  602
);
   l_rec_acct_attrs.array_acct_attr_code(3) := 'ALLOC_TO_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(3)  := p_source_21;
   l_rec_acct_attrs.array_acct_attr_code(4) := 'ALLOC_TO_ENTITY_CODE';
   l_rec_acct_attrs.array_char_value(4)  := 
xla_ae_sources_pkg.GetSystemSourceChar(
   p_source_code           => 'XLA_ENTITY_CODE'
 , p_source_type_code      => 'Y'
 , p_source_application_id =>  602
);
   l_rec_acct_attrs.array_acct_attr_code(5) := 'ALLOC_TO_FIRST_DIST_ID';
   l_rec_acct_attrs.array_num_value(5)  :=  to_char(p_source_71);
   l_rec_acct_attrs.array_acct_attr_code(6) := 'ALLOC_TO_FIRST_SYS_TRAN_ID';
   l_rec_acct_attrs.array_num_value(6)  :=  to_char(p_source_24);
   l_rec_acct_attrs.array_acct_attr_code(7) := 'APPLIED_TO_APPLICATION_ID';
   l_rec_acct_attrs.array_num_value(7)  := p_source_60;
   l_rec_acct_attrs.array_acct_attr_code(8) := 'APPLIED_TO_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(8)  := p_source_61;
   l_rec_acct_attrs.array_acct_attr_code(9) := 'APPLIED_TO_ENTITY_CODE';
   l_rec_acct_attrs.array_char_value(9)  := p_source_62;
   l_rec_acct_attrs.array_acct_attr_code(10) := 'APPLIED_TO_FIRST_DIST_ID';
   l_rec_acct_attrs.array_num_value(10)  :=  to_char(p_source_58);
   l_rec_acct_attrs.array_acct_attr_code(11) := 'APPLIED_TO_FIRST_SYS_TRAN_ID';
   l_rec_acct_attrs.array_num_value(11)  :=  to_char(p_source_64);
   l_rec_acct_attrs.array_acct_attr_code(12) := 'DISTRIBUTION_IDENTIFIER_1';
   l_rec_acct_attrs.array_num_value(12)  :=  to_char(p_source_71);
   l_rec_acct_attrs.array_acct_attr_code(13) := 'DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(13)  := p_source_21;
   l_rec_acct_attrs.array_acct_attr_code(14) := 'ENC_UPG_CR_ACCT_CLASS';
   l_rec_acct_attrs.array_char_value(14)  := p_source_76;
   l_rec_acct_attrs.array_acct_attr_code(15) := 'ENC_UPG_CR_CCID';
   l_rec_acct_attrs.array_num_value(15)  := p_source_31;
   l_rec_acct_attrs.array_acct_attr_code(16) := 'ENC_UPG_CR_ENTERED_AMT';
   l_rec_acct_attrs.array_num_value(16)  := p_source_32;
   l_rec_acct_attrs.array_acct_attr_code(17) := 'ENC_UPG_CR_ENTERED_CURR';
   l_rec_acct_attrs.array_char_value(17)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(18) := 'ENC_UPG_CR_LEDGER_AMT';
   l_rec_acct_attrs.array_num_value(18)  := p_source_34;
   l_rec_acct_attrs.array_acct_attr_code(19) := 'ENC_UPG_DR_ACCT_CLASS';
   l_rec_acct_attrs.array_char_value(19)  := p_source_77;
   l_rec_acct_attrs.array_acct_attr_code(20) := 'ENC_UPG_DR_CCID';
   l_rec_acct_attrs.array_num_value(20)  := p_source_35;
   l_rec_acct_attrs.array_acct_attr_code(21) := 'ENC_UPG_DR_ENTERED_AMT';
   l_rec_acct_attrs.array_num_value(21)  := p_source_36;
   l_rec_acct_attrs.array_acct_attr_code(22) := 'ENC_UPG_DR_ENTERED_CURR';
   l_rec_acct_attrs.array_char_value(22)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(23) := 'ENC_UPG_DR_LEDGER_AMT';
   l_rec_acct_attrs.array_num_value(23)  := p_source_37;
   l_rec_acct_attrs.array_acct_attr_code(24) := 'ENC_UPG_OPTION';
   l_rec_acct_attrs.array_char_value(24)  := p_source_38;
   l_rec_acct_attrs.array_acct_attr_code(25) := 'ENTERED_CURRENCY_AMOUNT';
   l_rec_acct_attrs.array_num_value(25)  := p_source_78;
   l_rec_acct_attrs.array_acct_attr_code(26) := 'ENTERED_CURRENCY_CODE';
   l_rec_acct_attrs.array_char_value(26)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(27) := 'LEDGER_AMOUNT';
   l_rec_acct_attrs.array_num_value(27)  := p_source_79;
   l_rec_acct_attrs.array_acct_attr_code(28) := 'MULTIPERIOD_END_DATE';
   l_rec_acct_attrs.array_date_value(28)  := p_source_43;
   l_rec_acct_attrs.array_acct_attr_code(29) := 'MULTIPERIOD_OPTION';
   l_rec_acct_attrs.array_char_value(29)  := p_source_44;
   l_rec_acct_attrs.array_acct_attr_code(30) := 'MULTIPERIOD_START_DATE';
   l_rec_acct_attrs.array_date_value(30)  := p_source_45;
   l_rec_acct_attrs.array_acct_attr_code(31) := 'OVERRIDE_ACCTD_AMT_FLAG';
   l_rec_acct_attrs.array_char_value(31)  := p_source_46;
   l_rec_acct_attrs.array_acct_attr_code(32) := 'PARTY_TYPE';
   l_rec_acct_attrs.array_char_value(32)  := p_source_49;
   l_rec_acct_attrs.array_acct_attr_code(33) := 'REVERSED_DISTRIBUTION_ID1';
   l_rec_acct_attrs.array_num_value(33)  :=  to_char(p_source_80);
   l_rec_acct_attrs.array_acct_attr_code(34) := 'REVERSED_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(34)  := p_source_21;
   l_rec_acct_attrs.array_acct_attr_code(35) := 'TAX_LINE_REF_ID';
   l_rec_acct_attrs.array_num_value(35)  := p_source_52;
   l_rec_acct_attrs.array_acct_attr_code(36) := 'TAX_REC_NREC_DIST_REF_ID';
   l_rec_acct_attrs.array_num_value(36)  := p_source_53;
   l_rec_acct_attrs.array_acct_attr_code(37) := 'TAX_SUMMARY_LINE_REF_ID';
   l_rec_acct_attrs.array_num_value(37)  := p_source_54;
   l_rec_acct_attrs.array_acct_attr_code(38) := 'UPG_CR_ENC_TYPE_ID';
   l_rec_acct_attrs.array_num_value(38)  := p_source_55;
   l_rec_acct_attrs.array_acct_attr_code(39) := 'UPG_DR_ENC_TYPE_ID';
   l_rec_acct_attrs.array_num_value(39)  := p_source_56;

   XLA_AE_LINES_PKG.SetLineAcctAttrs(l_rec_acct_attrs);
   p_gain_or_loss_ref  := XLA_AE_LINES_PKG.g_rec_lines.array_gain_or_loss_ref(XLA_AE_LINES_PKG.g_LineNumber);

   ---------------------------------------------------------------------------------------------------------------
   -- 4336173 -- assign Business Flow Class (replace code in xla_ae_lines_pkg.Business_Flow_Validation)
   ---------------------------------------------------------------------------------------------------------------
   XLA_AE_LINES_PKG.g_rec_lines.array_business_class_code(XLA_AE_LINES_PKG.g_LineNumber) := l_bflow_class_code;

   l_actual_upg_option  := XLA_AE_LINES_PKG.g_rec_lines.array_actual_upg_option(XLA_AE_LINES_PKG.g_LineNumber);
   l_enc_upg_option     := XLA_AE_LINES_PKG.g_rec_lines.array_enc_upg_option(XLA_AE_LINES_PKG.g_LineNumber);

   IF xla_accounting_cache_pkg.GetValueChar
         (p_source_code         => 'LEDGER_CATEGORY_CODE'
         ,p_target_ledger_id    => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id) IN ('PRIMARY','ALC')
   AND l_bflow_method_code = 'PRIOR_ENTRY'
--   AND (l_actual_upg_option = 'Y' OR l_enc_upg_option = 'Y') Bug 4922099
   AND ( (NVL(l_actual_upg_option, 'N') IN ('Y', 'O')) OR
         (NVL(l_enc_upg_option, 'N') IN ('Y', 'O'))
       )
   THEN
         xla_ae_lines_pkg.BflowUpgEntry
           (p_business_method_code    => l_bflow_method_code
           ,p_business_class_code     => l_bflow_class_code
           ,p_balance_type            => l_balance_type_code);
   ELSE
      NULL;
XLA_AE_LINES_PKG.business_flow_validation(
                                p_business_method_code     => l_bflow_method_code
                               ,p_business_class_code      => l_bflow_class_code
                               ,p_inherit_description_flag => l_inherit_desc_flag);
   END IF;

   --
   -- call analytical criteria
   --
   -- Inherited Analytical Criteria for business flow method of Prior Entry.
   --
   -- call description
   --
   -- No description or it is inherited.
   --
   -- call ADRs
   -- Bug 4922099
   --
   IF ( (l_bflow_method_code <> 'PRIOR_ENTRY') OR
        (NVL(l_actual_upg_option, 'N') = 'O') OR
        (NVL(l_enc_upg_option, 'N') = 'O')
      )
   THEN
   NULL;
   --
   --
   
   --
   --
   END IF;
   --
   -- Bug 4922099
   IF ( ( (NVL(l_actual_upg_option, 'N') = 'O') OR
          (NVL(l_enc_upg_option, 'N') = 'O')
        ) AND
        (l_bflow_method_code = 'PRIOR_ENTRY')
      )
   THEN
      IF
      --
      1 = 1
      --
      THEN
      xla_accounting_err_pkg.build_message
                                    (p_appli_s_name            => 'XLA'
                                    ,p_msg_name                => 'XLA_UPG_OVERRIDE_ADR_UNDEFINED'
                                    ,p_token_1                 => 'LINE_NUMBER'
                                    ,p_value_1                 => XLA_AE_LINES_PKG.g_LineNumber
                                    ,p_token_2                 => 'LINE_TYPE_NAME'
                                    ,p_value_2                 => XLA_AE_SOURCES_PKG.GetComponentName (
                                                                             l_component_type
                                                                            ,l_component_code
                                                                            ,l_component_type_code
                                                                            ,l_component_appl_id
                                                                            ,l_amb_context_code
                                                                            ,l_entity_code
                                                                            ,l_event_class_code
                                                                           )
                                    ,p_token_3                 => 'OWNER'
                                    ,p_value_3                 => xla_lookups_pkg.get_meaning(
                                                                          p_lookup_type     => 'XLA_OWNER_TYPE'
                                                                          ,p_lookup_code    => l_component_type_code
                                                                         )
                                    ,p_token_4                 => 'PRODUCT_NAME'
                                    ,p_value_4                 => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.application_name
                                    ,p_entity_id               => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.entity_id
                                    ,p_event_id                => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.event_id
                                    ,p_ledger_id               => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id
                                    ,p_ae_header_id            =>  NULL
                                       );

        IF (C_LEVEL_ERROR>= g_log_level) THEN
                 trace
                      (p_msg      => 'ERROR: XLA_UPG_OVERRIDE_ADR_UNDEFINED'
                      ,p_level    => C_LEVEL_ERROR
                      ,p_module   => l_log_module);
        END IF;
      END IF;
   END IF;
   --
   --
   ------------------------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- NOTE: XLA_AE_LINES_PKG.ValidateCurrentLine should NOT be generated if business flow method is
   -- Prior Entry.  Currently, the following code is always generated.
   ------------------------------------------------------------------------------------------------
   -- No ValidateCurrentLine for business flow method of Prior Entry

   ------------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- Populated credit and debit amounts -- Need to generate this within IF <condition>
   ------------------------------------------------------------------------------------
   XLA_AE_LINES_PKG.SetDebitCreditAmounts;

   ----------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- Update journal entry status -- Need to generate this within IF <condition>
   ----------------------------------------------------------------------------------
   XLA_AE_JOURNAL_ENTRY_PKG.UpdateJournalEntryStatus
         (p_hdr_idx => g_array_event(p_event_id).array_value_num('header_index')
         ,p_balance_type_code => l_balance_type_code
         );

   -------------------------------------------------------------------------------------------
   -- 4262811 - Generate the Accrual Reversal lines
   -------------------------------------------------------------------------------------------
   BEGIN
      l_acc_rev_flag := XLA_AE_HEADER_PKG.g_rec_header_new.array_accrual_reversal_flag
                              (g_array_event(p_event_id).array_value_num('header_index'));
      IF l_acc_rev_flag IS NULL THEN
         l_acc_rev_flag := 'N';
      END IF;
   EXCEPTION
      WHEN OTHERS THEN
         l_acc_rev_flag := 'N';
   END;
   --
   IF (l_acc_rev_flag = 'Y') THEN

       -- 4645092  ------------------------------------------------------------------------------
       -- To allow MPA report to determine if it should generate report process
       XLA_ACCOUNTING_PKG.g_mpa_accrual_exists := 'Y';
       ------------------------------------------------------------------------------------------

       l_accrual_line_num := XLA_AE_LINES_PKG.g_LineNumber;
       XLA_AE_LINES_PKG.CopyLineInfo(l_accrual_line_num);
   -- added call to set_ccid to execute mapping  for secondary accrual reversal entries bug 7444204
   -- call ADRs
   -- Bug 4922099
   --
   IF ( (l_bflow_method_code <> 'PRIOR_ENTRY') OR
        (NVL(l_actual_upg_option, 'N') = 'O') OR
        (NVL(l_enc_upg_option, 'N') = 'O')
      )
   THEN
   NULL;
   --
   --
   
   --
   --
   END IF;

       --
       -- Update the line information that should be overwritten
       --
       XLA_AE_LINES_PKG.set_ae_header_id(p_ae_header_id => p_event_id ,
                                         p_header_num   => 1);
       XLA_AE_LINES_PKG.g_rec_lines.array_header_num(XLA_AE_LINES_PKG.g_LineNumber)  :=1;

       XLA_AE_LINES_PKG.g_rec_lines.array_business_class_code(XLA_AE_LINES_PKG.g_LineNumber) := NULL; -- 4669271

       IF l_bflow_method_code <> 'NONE' THEN  -- 4655713b
          XLA_AE_LINES_PKG.g_rec_lines.array_reversal_code(XLA_AE_LINES_PKG.g_LineNumber) := CONCAT('MPA_',l_bflow_method_code);
       END IF;

      --
      -- Depending on the Reversal Method setup, do a switch side or changes sign for the amounts
      --
      IF (XLA_AE_JOURNAL_ENTRY_PKG.g_cache_ledgers_info.ledger_reversal_option = 'SIDE') THEN
          XLA_AE_LINES_PKG.g_rec_lines.array_natural_side_code(XLA_AE_LINES_PKG.g_LineNumber) :=  l_acc_rev_natural_side_code;
      ELSE
          ---------------------------------------------------------------------------------------------------
          -- 4262811a Switch Sign
          ---------------------------------------------------------------------------------------------------
          XLA_AE_LINES_PKG.g_rec_lines.array_switch_side_flag(XLA_AE_LINES_PKG.g_LineNumber) := 'N';  -- 5052518
          XLA_AE_LINES_PKG.g_rec_lines.array_ledger_amount(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_ledger_amount(XLA_AE_LINES_PKG.g_LineNumber) * -1;
          XLA_AE_LINES_PKG.g_rec_lines.array_entered_amount(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_entered_amount(XLA_AE_LINES_PKG.g_LineNumber) * -1;
          -- 5132302
          XLA_AE_LINES_PKG.g_rec_lines.array_bflow_applied_to_amt(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_bflow_applied_to_amt(XLA_AE_LINES_PKG.g_LineNumber) * -1;

      END IF;

      -- 4955764
      XLA_AE_LINES_PKG.g_rec_lines.array_gl_date(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_HEADER_PKG.g_rec_header_new.array_gl_date(g_array_event(p_event_id).array_value_num('acc_rev_header_index'));


      XLA_AE_LINES_PKG.ValidateCurrentLine;
      XLA_AE_LINES_PKG.SetDebitCreditAmounts;

      XLA_AE_JOURNAL_ENTRY_PKG.UpdateJournalEntryStatus
               (p_hdr_idx           => g_array_event(p_event_id).array_value_num('acc_rev_header_index')
               ,p_balance_type_code => l_balance_type_code);

   END IF;

   -----------------------------------------------------------------------------------------
   -- 4262811 Multiperiod Accounting
   -----------------------------------------------------------------------------------------
     -- No MPA option is assigned.


END IF;
END IF;
--

--
IF (C_LEVEL_PROCEDURE >= g_log_level) THEN
   trace
      (p_msg      => 'END of AcctLineType_51'
      ,p_level    => C_LEVEL_PROCEDURE
      ,p_module   => l_log_module);
END IF;
--
EXCEPTION
  WHEN xla_exceptions_pkg.application_exception THEN
      RAISE;
  WHEN OTHERS THEN
       xla_exceptions_pkg.raise_message
           (p_location => 'XLA_00200_AAD_S_000010_BC_PKG.AcctLineType_51');
END AcctLineType_51;
--

---------------------------------------
--
-- PRIVATE FUNCTION
--         AcctLineType_52
--
---------------------------------------
PROCEDURE AcctLineType_52 (
  p_application_id        IN NUMBER
 ,p_event_id              IN NUMBER
 ,p_calculate_acctd_flag  IN VARCHAR2
 ,p_calculate_g_l_flag    IN VARCHAR2
 ,p_actual_flag           IN OUT VARCHAR2
 ,p_balance_type_code     OUT VARCHAR2
 ,p_gain_or_loss_ref      OUT VARCHAR2
 
--Invoice Distribution Type
 , p_source_15            IN VARCHAR2
 , p_source_15_meaning    IN VARCHAR2
--Accrue on Receipt Option
 , p_source_18            IN VARCHAR2
 , p_source_18_meaning    IN VARCHAR2
--Accounting Reversal Indicator
 , p_source_19            IN VARCHAR2
--Distribution Link Type
 , p_source_21            IN VARCHAR2
--Allocation to Main Distribution Identifier
 , p_source_23            IN NUMBER
--Invoice Identifier
 , p_source_24            IN NUMBER
--Invoice Distribution Identifier
 , p_source_30            IN NUMBER
--Payables Encumbrance Upgrade Credit Account
 , p_source_31            IN NUMBER
--Payables Encumbrance Upgrade Credit Amount
 , p_source_32            IN NUMBER
--Invoice Currency Code
 , p_source_33            IN VARCHAR2
--Payables Encumbrance Upgrade Credit Base Amount
 , p_source_34            IN NUMBER
--Payables Encumbrance Upgrade Debit Account
 , p_source_35            IN NUMBER
--Payables Encumbrance Upgrade Debit Amount
 , p_source_36            IN NUMBER
--Payables Encumbrance Upgrade Debit Base Amount
 , p_source_37            IN NUMBER
--Payables Encumbrance Upgrade Option
 , p_source_38            IN VARCHAR2
--Deferred Accounting End Date
 , p_source_43            IN DATE
--Deferred Accounting Option
 , p_source_44            IN VARCHAR2
--Deferred Accounting Start Date
 , p_source_45            IN DATE
--Override Accounted Amount Indicator
 , p_source_46            IN VARCHAR2
 , p_source_46_meaning    IN VARCHAR2
--Third Party Type
 , p_source_49            IN VARCHAR2
--Parent Reversal Identifier
 , p_source_50            IN NUMBER
--Invoice Distribution Statistical Amount
 , p_source_51            IN NUMBER
--Invoice Distribution Tax Line Identifier
 , p_source_52            IN NUMBER
--Invoice Distribution Tax Distribution Identifier from Tax
 , p_source_53            IN NUMBER
--Invoice Distribution Summary Tax Line Identifier
 , p_source_54            IN NUMBER
--Payables Upgrade Credit Encumbrance Type Identifier
 , p_source_55            IN NUMBER
--Payables Upgrade Debit Encumbrance Type Identifier
 , p_source_56            IN NUMBER
--Purchase Order Distribution Identifier
 , p_source_58            IN NUMBER
--Business Flow Purchasing Application Identifier
 , p_source_60            IN NUMBER
--Business Flow Purchase Order Distribution Type
 , p_source_61            IN VARCHAR2
--Business Flow Purchase Order Entity Code
 , p_source_62            IN VARCHAR2
--Business Flow Purchase Order Distribution Identifier
 , p_source_63            IN NUMBER
--Business Flow Purchasing Document Identifier
 , p_source_64            IN NUMBER
--Invoice Distribution Encumbrance Amount
 , p_source_65            IN NUMBER
--Invoice Distribution Encumbrance Ledger Amount
 , p_source_66            IN NUMBER
)
IS

l_component_type              VARCHAR2(80);
l_component_code              VARCHAR2(30);
l_component_type_code         VARCHAR2(1);
l_component_appl_id           INTEGER;
l_amb_context_code            VARCHAR2(30);
l_entity_code                 VARCHAR2(30);
l_event_class_code            VARCHAR2(30);
l_ae_header_id                NUMBER;
l_event_type_code             VARCHAR2(30);
l_line_definition_code        VARCHAR2(30);
l_line_definition_owner_code  VARCHAR2(1);
--
-- adr variables
l_segment                     VARCHAR2(30);
l_ccid                        NUMBER;
l_adr_transaction_coa_id      NUMBER;
l_adr_accounting_coa_id       NUMBER;
l_adr_flexfield_segment_code  VARCHAR2(30);
l_adr_flex_value_set_id       NUMBER;
l_adr_value_type_code         VARCHAR2(30);
l_adr_value_combination_id    NUMBER;
l_adr_value_segment_code      VARCHAR2(30);

l_bflow_method_code           VARCHAR2(30);  -- 4219869 Business Flow
l_bflow_class_code            VARCHAR2(30);  -- 4219869 Business Flow
l_inherit_desc_flag           VARCHAR2(1);   -- 4219869 Business Flow
l_budgetary_control_flag      VARCHAR2(1);   -- 4458381 Public Sector Enh

-- 4262811 Variables ------------------------------------------------------------------------------------------
l_entered_amt_idx             NUMBER;
l_accted_amt_idx              NUMBER;
l_acc_rev_flag                VARCHAR2(1);
l_accrual_line_num            NUMBER;
l_tmp_amt                     NUMBER;
l_acc_rev_natural_side_code   VARCHAR2(1);

l_num_entries                 NUMBER;
l_gl_dates                    xla_ae_journal_entry_pkg.t_array_date;
l_accted_amts                 xla_ae_journal_entry_pkg.t_array_num;
l_entered_amts                xla_ae_journal_entry_pkg.t_array_num;
l_period_names                xla_ae_journal_entry_pkg.t_array_V15L;
l_recog_line_1                NUMBER;
l_recog_line_2                NUMBER;

l_bflow_applied_to_amt_idx    NUMBER;                                -- 5132302
l_bflow_applied_to_amt        NUMBER;                                -- 5132302
l_bflow_applied_to_amts       xla_ae_journal_entry_pkg.t_array_num;  -- 5132302

l_event_id                    NUMBER;  -- To handle MPA header Description: xla_ae_header_pkg.SetHdrDescription

--l_rounding_ccy                VARCHAR2(15); -- To handle MPA rounding  4262811b
l_same_currency               BOOLEAN;        -- To handle MPA rounding  4262811b

---------------------------------------------------------------------------------------------------------------


--
-- bulk performance
--
l_balance_type_code           VARCHAR2(1);
l_rec_acct_attrs              XLA_AE_LINES_PKG.t_rec_acct_attrs;
l_log_module                  VARCHAR2(240);

--
-- Upgrade strategy
--
l_actual_upg_option           VARCHAR2(1);
l_enc_upg_option           VARCHAR2(1);

--
BEGIN
--
IF g_log_enabled THEN
      l_log_module := C_DEFAULT_MODULE||'.AcctLineType_52';
END IF;
--
IF (C_LEVEL_PROCEDURE >= g_log_level) THEN

      trace
         (p_msg      => 'BEGIN of AcctLineType_52'
         ,p_level    => C_LEVEL_PROCEDURE
         ,p_module   => l_log_module);

END IF;
--
l_component_type             := 'AMB_JLT';
l_component_code             := 'AP_PREPAY_PO_ENC';
l_component_type_code        := 'S';
l_component_appl_id          :=  200;
l_amb_context_code           := 'DEFAULT';
l_entity_code                := 'AP_INVOICES';
l_event_class_code           := 'PREPAYMENTS';
l_event_type_code            := 'PREPAYMENTS_ALL';
l_line_definition_owner_code := 'S';
l_line_definition_code       := 'ENC_PREPAY_ALL';
--
l_balance_type_code          := 'E';
l_segment                     := NULL;
l_ccid                        := NULL;
l_adr_transaction_coa_id      := NULL;
l_adr_accounting_coa_id       := NULL;
l_adr_flexfield_segment_code  := NULL;
l_adr_flex_value_set_id       := NULL;
l_adr_value_type_code         := NULL;
l_adr_value_combination_id    := NULL;
l_adr_value_segment_code      := NULL;

l_bflow_method_code          := 'PRIOR_ENTRY';   -- 4219869 Business Flow
l_bflow_class_code           := 'PO_ENCUMBRANCE';    -- 4219869 Business Flow
l_inherit_desc_flag          := 'Y';   -- 4219869 Business Flow
l_budgetary_control_flag     := 'Y';

l_bflow_applied_to_amt_idx   := NULL; -- 5132302
l_bflow_applied_to_amt       := NULL; -- 5132302
l_entered_amt_idx            := NULL;          -- 4262811
l_accted_amt_idx             := NULL;          -- 4262811
l_acc_rev_flag               := NULL;          -- 4262811
l_accrual_line_num           := NULL;          -- 4262811
l_tmp_amt                    := NULL;          -- 4262811
--
 
IF XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id = XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.ledger_id OR
    l_balance_type_code <> 'B' THEN
IF p_source_58 IS NOT NULL AND 
(NVL(p_source_15,'
') =  'ACCRUAL' OR 
NVL(p_source_15,'
') =  'ITEM') AND 
NVL(p_source_18,'
') <>  'Y'
 THEN 

   --
   XLA_AE_LINES_PKG.SetNewLine;

   p_balance_type_code          := l_balance_type_code;
   -- set the flag so later we will know whether the gain loss line needs to be created
   
   IF(l_balance_type_code = 'A' and p_actual_flag is null) THEN
     p_actual_flag :='A';
   END IF;

   --
   -- bulk performance
   --
   XLA_AE_LINES_PKG.set_ae_header_id (p_ae_header_id => p_event_id ,
                                      p_header_num   => 0); -- 4262811
   --
   -- set accounting line options
   --
   l_ae_header_id:= xla_ae_lines_pkg.SetAcctLineOption(
           p_natural_side_code          => 'C'
         , p_gain_or_loss_flag          => 'N'
         , p_gl_transfer_mode_code      => 'S'
         , p_acct_entry_type_code       => 'E'
         , p_switch_side_flag           => 'Y'
         , p_merge_duplicate_code       => 'N'
         );
   --
   l_acc_rev_natural_side_code := 'D';  -- 4262811
   -- 
   --
   -- set accounting line type info
   --
   xla_ae_lines_pkg.SetAcctLineType
      (p_component_type             => l_component_type
      ,p_event_type_code            => l_event_type_code
      ,p_line_definition_owner_code => l_line_definition_owner_code
      ,p_line_definition_code       => l_line_definition_code
      ,p_accounting_line_code       => l_component_code
      ,p_accounting_line_type_code  => l_component_type_code
      ,p_accounting_line_appl_id    => l_component_appl_id
      ,p_amb_context_code           => l_amb_context_code
      ,p_entity_code                => l_entity_code
      ,p_event_class_code           => l_event_class_code);
   --
   -- set accounting class
   --
   xla_ae_lines_pkg.SetAcctClass(
           p_accounting_class_code  => 'PURCHASE_ORDER'
         , p_ae_header_id           => l_ae_header_id
         );

   --
   -- set rounding class
   --
   XLA_AE_LINES_PKG.g_rec_lines.array_rounding_class(XLA_AE_LINES_PKG.g_LineNumber) :=
                      'PURCHASE_ORDER';

   --
   xla_ae_lines_pkg.g_rec_lines.array_calculate_acctd_flag(xla_ae_lines_pkg.g_LineNumber) := p_calculate_acctd_flag;
   xla_ae_lines_pkg.g_rec_lines.array_calculate_g_l_flag(xla_ae_lines_pkg.g_LineNumber) := p_calculate_g_l_flag;
   --
   -- bulk performance
   --
   XLA_AE_LINES_PKG.g_rec_lines.array_balance_type_code(XLA_AE_LINES_PKG.g_LineNumber) := l_balance_type_code;

   XLA_AE_LINES_PKG.g_rec_lines.array_ledger_id(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id;

   -- 4955764
   XLA_AE_LINES_PKG.g_rec_lines.array_gl_date(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_HEADER_PKG.g_rec_header_new.array_gl_date(g_array_event(p_event_id).array_value_num('header_index'));

   -- 4458381 Public Sector Enh
   
   --
   -- set accounting attributes for the line type
   --
   l_entered_amt_idx := 23;
   l_accted_amt_idx  := 25;
   l_bflow_applied_to_amt_idx  := NULL;  -- 5132302
   l_rec_acct_attrs.array_acct_attr_code(1) := 'ACCOUNTING_REVERSAL_OPTION';
   l_rec_acct_attrs.array_char_value(1)  := p_source_19;
   l_rec_acct_attrs.array_acct_attr_code(2) := 'ALLOC_TO_APPLICATION_ID';
   l_rec_acct_attrs.array_num_value(2)  := 
xla_ae_sources_pkg.GetSystemSourceNum(
   p_source_code           => 'XLA_EVENT_APPL_ID'
 , p_source_type_code      => 'Y'
 , p_source_application_id =>  602
);
   l_rec_acct_attrs.array_acct_attr_code(3) := 'ALLOC_TO_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(3)  := p_source_21;
   l_rec_acct_attrs.array_acct_attr_code(4) := 'ALLOC_TO_ENTITY_CODE';
   l_rec_acct_attrs.array_char_value(4)  := 
xla_ae_sources_pkg.GetSystemSourceChar(
   p_source_code           => 'XLA_ENTITY_CODE'
 , p_source_type_code      => 'Y'
 , p_source_application_id =>  602
);
   l_rec_acct_attrs.array_acct_attr_code(5) := 'ALLOC_TO_FIRST_DIST_ID';
   l_rec_acct_attrs.array_num_value(5)  :=  to_char(p_source_23);
   l_rec_acct_attrs.array_acct_attr_code(6) := 'ALLOC_TO_FIRST_SYS_TRAN_ID';
   l_rec_acct_attrs.array_num_value(6)  :=  to_char(p_source_24);
   l_rec_acct_attrs.array_acct_attr_code(7) := 'APPLIED_TO_APPLICATION_ID';
   l_rec_acct_attrs.array_num_value(7)  := p_source_60;
   l_rec_acct_attrs.array_acct_attr_code(8) := 'APPLIED_TO_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(8)  := p_source_61;
   l_rec_acct_attrs.array_acct_attr_code(9) := 'APPLIED_TO_ENTITY_CODE';
   l_rec_acct_attrs.array_char_value(9)  := p_source_62;
   l_rec_acct_attrs.array_acct_attr_code(10) := 'APPLIED_TO_FIRST_DIST_ID';
   l_rec_acct_attrs.array_num_value(10)  :=  to_char(p_source_63);
   l_rec_acct_attrs.array_acct_attr_code(11) := 'APPLIED_TO_FIRST_SYS_TRAN_ID';
   l_rec_acct_attrs.array_num_value(11)  :=  to_char(p_source_64);
   l_rec_acct_attrs.array_acct_attr_code(12) := 'DISTRIBUTION_IDENTIFIER_1';
   l_rec_acct_attrs.array_num_value(12)  :=  to_char(p_source_30);
   l_rec_acct_attrs.array_acct_attr_code(13) := 'DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(13)  := p_source_21;
   l_rec_acct_attrs.array_acct_attr_code(14) := 'ENC_UPG_CR_CCID';
   l_rec_acct_attrs.array_num_value(14)  := p_source_31;
   l_rec_acct_attrs.array_acct_attr_code(15) := 'ENC_UPG_CR_ENTERED_AMT';
   l_rec_acct_attrs.array_num_value(15)  := p_source_32;
   l_rec_acct_attrs.array_acct_attr_code(16) := 'ENC_UPG_CR_ENTERED_CURR';
   l_rec_acct_attrs.array_char_value(16)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(17) := 'ENC_UPG_CR_LEDGER_AMT';
   l_rec_acct_attrs.array_num_value(17)  := p_source_34;
   l_rec_acct_attrs.array_acct_attr_code(18) := 'ENC_UPG_DR_CCID';
   l_rec_acct_attrs.array_num_value(18)  := p_source_35;
   l_rec_acct_attrs.array_acct_attr_code(19) := 'ENC_UPG_DR_ENTERED_AMT';
   l_rec_acct_attrs.array_num_value(19)  := p_source_36;
   l_rec_acct_attrs.array_acct_attr_code(20) := 'ENC_UPG_DR_ENTERED_CURR';
   l_rec_acct_attrs.array_char_value(20)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(21) := 'ENC_UPG_DR_LEDGER_AMT';
   l_rec_acct_attrs.array_num_value(21)  := p_source_37;
   l_rec_acct_attrs.array_acct_attr_code(22) := 'ENC_UPG_OPTION';
   l_rec_acct_attrs.array_char_value(22)  := p_source_38;
   l_rec_acct_attrs.array_acct_attr_code(23) := 'ENTERED_CURRENCY_AMOUNT';
   l_rec_acct_attrs.array_num_value(23)  := p_source_65;
   l_rec_acct_attrs.array_acct_attr_code(24) := 'ENTERED_CURRENCY_CODE';
   l_rec_acct_attrs.array_char_value(24)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(25) := 'LEDGER_AMOUNT';
   l_rec_acct_attrs.array_num_value(25)  := p_source_66;
   l_rec_acct_attrs.array_acct_attr_code(26) := 'MULTIPERIOD_END_DATE';
   l_rec_acct_attrs.array_date_value(26)  := p_source_43;
   l_rec_acct_attrs.array_acct_attr_code(27) := 'MULTIPERIOD_OPTION';
   l_rec_acct_attrs.array_char_value(27)  := p_source_44;
   l_rec_acct_attrs.array_acct_attr_code(28) := 'MULTIPERIOD_START_DATE';
   l_rec_acct_attrs.array_date_value(28)  := p_source_45;
   l_rec_acct_attrs.array_acct_attr_code(29) := 'OVERRIDE_ACCTD_AMT_FLAG';
   l_rec_acct_attrs.array_char_value(29)  := p_source_46;
   l_rec_acct_attrs.array_acct_attr_code(30) := 'PARTY_TYPE';
   l_rec_acct_attrs.array_char_value(30)  := p_source_49;
   l_rec_acct_attrs.array_acct_attr_code(31) := 'REVERSED_DISTRIBUTION_ID1';
   l_rec_acct_attrs.array_num_value(31)  :=  to_char(p_source_50);
   l_rec_acct_attrs.array_acct_attr_code(32) := 'REVERSED_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(32)  := p_source_21;
   l_rec_acct_attrs.array_acct_attr_code(33) := 'STATISTICAL_AMOUNT';
   l_rec_acct_attrs.array_num_value(33)  := p_source_51;
   l_rec_acct_attrs.array_acct_attr_code(34) := 'TAX_LINE_REF_ID';
   l_rec_acct_attrs.array_num_value(34)  := p_source_52;
   l_rec_acct_attrs.array_acct_attr_code(35) := 'TAX_REC_NREC_DIST_REF_ID';
   l_rec_acct_attrs.array_num_value(35)  := p_source_53;
   l_rec_acct_attrs.array_acct_attr_code(36) := 'TAX_SUMMARY_LINE_REF_ID';
   l_rec_acct_attrs.array_num_value(36)  := p_source_54;
   l_rec_acct_attrs.array_acct_attr_code(37) := 'UPG_CR_ENC_TYPE_ID';
   l_rec_acct_attrs.array_num_value(37)  := p_source_55;
   l_rec_acct_attrs.array_acct_attr_code(38) := 'UPG_DR_ENC_TYPE_ID';
   l_rec_acct_attrs.array_num_value(38)  := p_source_56;

   XLA_AE_LINES_PKG.SetLineAcctAttrs(l_rec_acct_attrs);
   p_gain_or_loss_ref  := XLA_AE_LINES_PKG.g_rec_lines.array_gain_or_loss_ref(XLA_AE_LINES_PKG.g_LineNumber);

   ---------------------------------------------------------------------------------------------------------------
   -- 4336173 -- assign Business Flow Class (replace code in xla_ae_lines_pkg.Business_Flow_Validation)
   ---------------------------------------------------------------------------------------------------------------
   XLA_AE_LINES_PKG.g_rec_lines.array_business_class_code(XLA_AE_LINES_PKG.g_LineNumber) := l_bflow_class_code;

   l_actual_upg_option  := XLA_AE_LINES_PKG.g_rec_lines.array_actual_upg_option(XLA_AE_LINES_PKG.g_LineNumber);
   l_enc_upg_option     := XLA_AE_LINES_PKG.g_rec_lines.array_enc_upg_option(XLA_AE_LINES_PKG.g_LineNumber);

   IF xla_accounting_cache_pkg.GetValueChar
         (p_source_code         => 'LEDGER_CATEGORY_CODE'
         ,p_target_ledger_id    => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id) IN ('PRIMARY','ALC')
   AND l_bflow_method_code = 'PRIOR_ENTRY'
--   AND (l_actual_upg_option = 'Y' OR l_enc_upg_option = 'Y') Bug 4922099
   AND ( (NVL(l_actual_upg_option, 'N') IN ('Y', 'O')) OR
         (NVL(l_enc_upg_option, 'N') IN ('Y', 'O'))
       )
   THEN
         xla_ae_lines_pkg.BflowUpgEntry
           (p_business_method_code    => l_bflow_method_code
           ,p_business_class_code     => l_bflow_class_code
           ,p_balance_type            => l_balance_type_code);
   ELSE
      NULL;
XLA_AE_LINES_PKG.business_flow_validation(
                                p_business_method_code     => l_bflow_method_code
                               ,p_business_class_code      => l_bflow_class_code
                               ,p_inherit_description_flag => l_inherit_desc_flag);
   END IF;

   --
   -- call analytical criteria
   --
   -- Inherited Analytical Criteria for business flow method of Prior Entry.
   --
   -- call description
   --
   -- No description or it is inherited.
   --
   -- call ADRs
   -- Bug 4922099
   --
   IF ( (l_bflow_method_code <> 'PRIOR_ENTRY') OR
        (NVL(l_actual_upg_option, 'N') = 'O') OR
        (NVL(l_enc_upg_option, 'N') = 'O')
      )
   THEN
   NULL;
   --
   --
   
   --
   --
   END IF;
   --
   -- Bug 4922099
   IF ( ( (NVL(l_actual_upg_option, 'N') = 'O') OR
          (NVL(l_enc_upg_option, 'N') = 'O')
        ) AND
        (l_bflow_method_code = 'PRIOR_ENTRY')
      )
   THEN
      IF
      --
      1 = 1
      --
      THEN
      xla_accounting_err_pkg.build_message
                                    (p_appli_s_name            => 'XLA'
                                    ,p_msg_name                => 'XLA_UPG_OVERRIDE_ADR_UNDEFINED'
                                    ,p_token_1                 => 'LINE_NUMBER'
                                    ,p_value_1                 => XLA_AE_LINES_PKG.g_LineNumber
                                    ,p_token_2                 => 'LINE_TYPE_NAME'
                                    ,p_value_2                 => XLA_AE_SOURCES_PKG.GetComponentName (
                                                                             l_component_type
                                                                            ,l_component_code
                                                                            ,l_component_type_code
                                                                            ,l_component_appl_id
                                                                            ,l_amb_context_code
                                                                            ,l_entity_code
                                                                            ,l_event_class_code
                                                                           )
                                    ,p_token_3                 => 'OWNER'
                                    ,p_value_3                 => xla_lookups_pkg.get_meaning(
                                                                          p_lookup_type     => 'XLA_OWNER_TYPE'
                                                                          ,p_lookup_code    => l_component_type_code
                                                                         )
                                    ,p_token_4                 => 'PRODUCT_NAME'
                                    ,p_value_4                 => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.application_name
                                    ,p_entity_id               => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.entity_id
                                    ,p_event_id                => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.event_id
                                    ,p_ledger_id               => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id
                                    ,p_ae_header_id            =>  NULL
                                       );

        IF (C_LEVEL_ERROR>= g_log_level) THEN
                 trace
                      (p_msg      => 'ERROR: XLA_UPG_OVERRIDE_ADR_UNDEFINED'
                      ,p_level    => C_LEVEL_ERROR
                      ,p_module   => l_log_module);
        END IF;
      END IF;
   END IF;
   --
   --
   ------------------------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- NOTE: XLA_AE_LINES_PKG.ValidateCurrentLine should NOT be generated if business flow method is
   -- Prior Entry.  Currently, the following code is always generated.
   ------------------------------------------------------------------------------------------------
   -- No ValidateCurrentLine for business flow method of Prior Entry

   ------------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- Populated credit and debit amounts -- Need to generate this within IF <condition>
   ------------------------------------------------------------------------------------
   XLA_AE_LINES_PKG.SetDebitCreditAmounts;

   ----------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- Update journal entry status -- Need to generate this within IF <condition>
   ----------------------------------------------------------------------------------
   XLA_AE_JOURNAL_ENTRY_PKG.UpdateJournalEntryStatus
         (p_hdr_idx => g_array_event(p_event_id).array_value_num('header_index')
         ,p_balance_type_code => l_balance_type_code
         );

   -------------------------------------------------------------------------------------------
   -- 4262811 - Generate the Accrual Reversal lines
   -------------------------------------------------------------------------------------------
   BEGIN
      l_acc_rev_flag := XLA_AE_HEADER_PKG.g_rec_header_new.array_accrual_reversal_flag
                              (g_array_event(p_event_id).array_value_num('header_index'));
      IF l_acc_rev_flag IS NULL THEN
         l_acc_rev_flag := 'N';
      END IF;
   EXCEPTION
      WHEN OTHERS THEN
         l_acc_rev_flag := 'N';
   END;
   --
   IF (l_acc_rev_flag = 'Y') THEN

       -- 4645092  ------------------------------------------------------------------------------
       -- To allow MPA report to determine if it should generate report process
       XLA_ACCOUNTING_PKG.g_mpa_accrual_exists := 'Y';
       ------------------------------------------------------------------------------------------

       l_accrual_line_num := XLA_AE_LINES_PKG.g_LineNumber;
       XLA_AE_LINES_PKG.CopyLineInfo(l_accrual_line_num);
   -- added call to set_ccid to execute mapping  for secondary accrual reversal entries bug 7444204
   -- call ADRs
   -- Bug 4922099
   --
   IF ( (l_bflow_method_code <> 'PRIOR_ENTRY') OR
        (NVL(l_actual_upg_option, 'N') = 'O') OR
        (NVL(l_enc_upg_option, 'N') = 'O')
      )
   THEN
   NULL;
   --
   --
   
   --
   --
   END IF;

       --
       -- Update the line information that should be overwritten
       --
       XLA_AE_LINES_PKG.set_ae_header_id(p_ae_header_id => p_event_id ,
                                         p_header_num   => 1);
       XLA_AE_LINES_PKG.g_rec_lines.array_header_num(XLA_AE_LINES_PKG.g_LineNumber)  :=1;

       XLA_AE_LINES_PKG.g_rec_lines.array_business_class_code(XLA_AE_LINES_PKG.g_LineNumber) := NULL; -- 4669271

       IF l_bflow_method_code <> 'NONE' THEN  -- 4655713b
          XLA_AE_LINES_PKG.g_rec_lines.array_reversal_code(XLA_AE_LINES_PKG.g_LineNumber) := CONCAT('MPA_',l_bflow_method_code);
       END IF;

      --
      -- Depending on the Reversal Method setup, do a switch side or changes sign for the amounts
      --
      IF (XLA_AE_JOURNAL_ENTRY_PKG.g_cache_ledgers_info.ledger_reversal_option = 'SIDE') THEN
          XLA_AE_LINES_PKG.g_rec_lines.array_natural_side_code(XLA_AE_LINES_PKG.g_LineNumber) :=  l_acc_rev_natural_side_code;
      ELSE
          ---------------------------------------------------------------------------------------------------
          -- 4262811a Switch Sign
          ---------------------------------------------------------------------------------------------------
          XLA_AE_LINES_PKG.g_rec_lines.array_switch_side_flag(XLA_AE_LINES_PKG.g_LineNumber) := 'N';  -- 5052518
          XLA_AE_LINES_PKG.g_rec_lines.array_ledger_amount(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_ledger_amount(XLA_AE_LINES_PKG.g_LineNumber) * -1;
          XLA_AE_LINES_PKG.g_rec_lines.array_entered_amount(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_entered_amount(XLA_AE_LINES_PKG.g_LineNumber) * -1;
          -- 5132302
          XLA_AE_LINES_PKG.g_rec_lines.array_bflow_applied_to_amt(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_bflow_applied_to_amt(XLA_AE_LINES_PKG.g_LineNumber) * -1;

      END IF;

      -- 4955764
      XLA_AE_LINES_PKG.g_rec_lines.array_gl_date(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_HEADER_PKG.g_rec_header_new.array_gl_date(g_array_event(p_event_id).array_value_num('acc_rev_header_index'));


      XLA_AE_LINES_PKG.ValidateCurrentLine;
      XLA_AE_LINES_PKG.SetDebitCreditAmounts;

      XLA_AE_JOURNAL_ENTRY_PKG.UpdateJournalEntryStatus
               (p_hdr_idx           => g_array_event(p_event_id).array_value_num('acc_rev_header_index')
               ,p_balance_type_code => l_balance_type_code);

   END IF;

   -----------------------------------------------------------------------------------------
   -- 4262811 Multiperiod Accounting
   -----------------------------------------------------------------------------------------
     -- No MPA option is assigned.


END IF;
END IF;
--

--
IF (C_LEVEL_PROCEDURE >= g_log_level) THEN
   trace
      (p_msg      => 'END of AcctLineType_52'
      ,p_level    => C_LEVEL_PROCEDURE
      ,p_module   => l_log_module);
END IF;
--
EXCEPTION
  WHEN xla_exceptions_pkg.application_exception THEN
      RAISE;
  WHEN OTHERS THEN
       xla_exceptions_pkg.raise_message
           (p_location => 'XLA_00200_AAD_S_000010_BC_PKG.AcctLineType_52');
END AcctLineType_52;
--

---------------------------------------
--
-- PRIVATE FUNCTION
--         AcctLineType_53
--
---------------------------------------
PROCEDURE AcctLineType_53 (
  p_application_id        IN NUMBER
 ,p_event_id              IN NUMBER
 ,p_calculate_acctd_flag  IN VARCHAR2
 ,p_calculate_g_l_flag    IN VARCHAR2
 ,p_actual_flag           IN OUT VARCHAR2
 ,p_balance_type_code     OUT VARCHAR2
 ,p_gain_or_loss_ref      OUT VARCHAR2
 
--Invoice Distribution Description
 , p_source_1            IN VARCHAR2
--Invoice Distribution Account
 , p_source_11            IN NUMBER
--Invoice Distribution Type
 , p_source_15            IN VARCHAR2
 , p_source_15_meaning    IN VARCHAR2
--Purchasing Encumbrance Option
 , p_source_17            IN VARCHAR2
 , p_source_17_meaning    IN VARCHAR2
--Accrue on Receipt Option
 , p_source_18            IN VARCHAR2
 , p_source_18_meaning    IN VARCHAR2
--Accounting Reversal Indicator
 , p_source_19            IN VARCHAR2
--Distribution Link Type
 , p_source_21            IN VARCHAR2
--Allocation to Main Distribution Identifier
 , p_source_23            IN NUMBER
--Invoice Identifier
 , p_source_24            IN NUMBER
--Business Flow Accounts Payable Application Identifier
 , p_source_25            IN NUMBER
--Business Flow Invoice Distribution Type
 , p_source_26            IN VARCHAR2
--Business Flow Invoice Entity Code
 , p_source_27            IN VARCHAR2
--Business Flow Invoice Distribution Identifier
 , p_source_28            IN NUMBER
--Business Flow Invoice Identifier
 , p_source_29            IN NUMBER
--Invoice Distribution Identifier
 , p_source_30            IN NUMBER
--Payables Encumbrance Upgrade Credit Account
 , p_source_31            IN NUMBER
--Payables Encumbrance Upgrade Credit Amount
 , p_source_32            IN NUMBER
--Invoice Currency Code
 , p_source_33            IN VARCHAR2
--Payables Encumbrance Upgrade Credit Base Amount
 , p_source_34            IN NUMBER
--Payables Encumbrance Upgrade Debit Account
 , p_source_35            IN NUMBER
--Payables Encumbrance Upgrade Debit Amount
 , p_source_36            IN NUMBER
--Payables Encumbrance Upgrade Debit Base Amount
 , p_source_37            IN NUMBER
--Payables Encumbrance Upgrade Option
 , p_source_38            IN VARCHAR2
--Invoice Exchange Date
 , p_source_39            IN DATE
--Invoice Exchange Rate
 , p_source_40            IN NUMBER
--Invoice Exchange Rate Type
 , p_source_41            IN VARCHAR2
--Deferred Accounting End Date
 , p_source_43            IN DATE
--Deferred Accounting Option
 , p_source_44            IN VARCHAR2
--Deferred Accounting Start Date
 , p_source_45            IN DATE
--Override Accounted Amount Indicator
 , p_source_46            IN VARCHAR2
 , p_source_46_meaning    IN VARCHAR2
--Invoice Supplier Identifier
 , p_source_47            IN NUMBER
--Invoice Supplier Site Identifier
 , p_source_48            IN NUMBER
--Third Party Type
 , p_source_49            IN VARCHAR2
--Parent Reversal Identifier
 , p_source_50            IN NUMBER
--Invoice Distribution Statistical Amount
 , p_source_51            IN NUMBER
--Invoice Distribution Tax Line Identifier
 , p_source_52            IN NUMBER
--Invoice Distribution Tax Distribution Identifier from Tax
 , p_source_53            IN NUMBER
--Invoice Distribution Summary Tax Line Identifier
 , p_source_54            IN NUMBER
--Payables Upgrade Credit Encumbrance Type Identifier
 , p_source_55            IN NUMBER
--Payables Upgrade Debit Encumbrance Type Identifier
 , p_source_56            IN NUMBER
--Invoice Distribution Amount
 , p_source_57            IN NUMBER
--Quantity Variance Amount
 , p_source_81            IN NUMBER
--Quantity Variance Amount in Ledger Currency
 , p_source_82            IN NUMBER
)
IS

l_component_type              VARCHAR2(80);
l_component_code              VARCHAR2(30);
l_component_type_code         VARCHAR2(1);
l_component_appl_id           INTEGER;
l_amb_context_code            VARCHAR2(30);
l_entity_code                 VARCHAR2(30);
l_event_class_code            VARCHAR2(30);
l_ae_header_id                NUMBER;
l_event_type_code             VARCHAR2(30);
l_line_definition_code        VARCHAR2(30);
l_line_definition_owner_code  VARCHAR2(1);
--
-- adr variables
l_segment                     VARCHAR2(30);
l_ccid                        NUMBER;
l_adr_transaction_coa_id      NUMBER;
l_adr_accounting_coa_id       NUMBER;
l_adr_flexfield_segment_code  VARCHAR2(30);
l_adr_flex_value_set_id       NUMBER;
l_adr_value_type_code         VARCHAR2(30);
l_adr_value_combination_id    NUMBER;
l_adr_value_segment_code      VARCHAR2(30);

l_bflow_method_code           VARCHAR2(30);  -- 4219869 Business Flow
l_bflow_class_code            VARCHAR2(30);  -- 4219869 Business Flow
l_inherit_desc_flag           VARCHAR2(1);   -- 4219869 Business Flow
l_budgetary_control_flag      VARCHAR2(1);   -- 4458381 Public Sector Enh

-- 4262811 Variables ------------------------------------------------------------------------------------------
l_entered_amt_idx             NUMBER;
l_accted_amt_idx              NUMBER;
l_acc_rev_flag                VARCHAR2(1);
l_accrual_line_num            NUMBER;
l_tmp_amt                     NUMBER;
l_acc_rev_natural_side_code   VARCHAR2(1);

l_num_entries                 NUMBER;
l_gl_dates                    xla_ae_journal_entry_pkg.t_array_date;
l_accted_amts                 xla_ae_journal_entry_pkg.t_array_num;
l_entered_amts                xla_ae_journal_entry_pkg.t_array_num;
l_period_names                xla_ae_journal_entry_pkg.t_array_V15L;
l_recog_line_1                NUMBER;
l_recog_line_2                NUMBER;

l_bflow_applied_to_amt_idx    NUMBER;                                -- 5132302
l_bflow_applied_to_amt        NUMBER;                                -- 5132302
l_bflow_applied_to_amts       xla_ae_journal_entry_pkg.t_array_num;  -- 5132302

l_event_id                    NUMBER;  -- To handle MPA header Description: xla_ae_header_pkg.SetHdrDescription

--l_rounding_ccy                VARCHAR2(15); -- To handle MPA rounding  4262811b
l_same_currency               BOOLEAN;        -- To handle MPA rounding  4262811b

---------------------------------------------------------------------------------------------------------------


--
-- bulk performance
--
l_balance_type_code           VARCHAR2(1);
l_rec_acct_attrs              XLA_AE_LINES_PKG.t_rec_acct_attrs;
l_log_module                  VARCHAR2(240);

--
-- Upgrade strategy
--
l_actual_upg_option           VARCHAR2(1);
l_enc_upg_option           VARCHAR2(1);

--
BEGIN
--
IF g_log_enabled THEN
      l_log_module := C_DEFAULT_MODULE||'.AcctLineType_53';
END IF;
--
IF (C_LEVEL_PROCEDURE >= g_log_level) THEN

      trace
         (p_msg      => 'BEGIN of AcctLineType_53'
         ,p_level    => C_LEVEL_PROCEDURE
         ,p_module   => l_log_module);

END IF;
--
l_component_type             := 'AMB_JLT';
l_component_code             := 'AP_QTY_VARIANCE_INV_ENC_DR';
l_component_type_code        := 'S';
l_component_appl_id          :=  200;
l_amb_context_code           := 'DEFAULT';
l_entity_code                := 'AP_INVOICES';
l_event_class_code           := 'INVOICES';
l_event_type_code            := 'INVOICES_ALL';
l_line_definition_owner_code := 'S';
l_line_definition_code       := 'ENC_INVOICES_ALL';
--
l_balance_type_code          := 'E';
l_segment                     := NULL;
l_ccid                        := NULL;
l_adr_transaction_coa_id      := NULL;
l_adr_accounting_coa_id       := NULL;
l_adr_flexfield_segment_code  := NULL;
l_adr_flex_value_set_id       := NULL;
l_adr_value_type_code         := NULL;
l_adr_value_combination_id    := NULL;
l_adr_value_segment_code      := NULL;

l_bflow_method_code          := 'NONE';   -- 4219869 Business Flow
l_bflow_class_code           := 'AP_INV_ENCUM';    -- 4219869 Business Flow
l_inherit_desc_flag          := 'N';   -- 4219869 Business Flow
l_budgetary_control_flag     := 'Y';

l_bflow_applied_to_amt_idx   := NULL; -- 5132302
l_bflow_applied_to_amt       := NULL; -- 5132302
l_entered_amt_idx            := NULL;          -- 4262811
l_accted_amt_idx             := NULL;          -- 4262811
l_acc_rev_flag               := NULL;          -- 4262811
l_accrual_line_num           := NULL;          -- 4262811
l_tmp_amt                    := NULL;          -- 4262811
--
 
IF XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id = XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.ledger_id OR
    l_balance_type_code <> 'B' THEN
IF NVL(p_source_15,'
') =  'ITEM' AND 
p_source_81 IS NOT NULL AND 
NVL(p_source_17,'
') =  'Y' AND 
NVL(p_source_18,'
') <>  'Y'
 THEN 

   --
   XLA_AE_LINES_PKG.SetNewLine;

   p_balance_type_code          := l_balance_type_code;
   -- set the flag so later we will know whether the gain loss line needs to be created
   
   IF(l_balance_type_code = 'A' and p_actual_flag is null) THEN
     p_actual_flag :='A';
   END IF;

   --
   -- bulk performance
   --
   XLA_AE_LINES_PKG.set_ae_header_id (p_ae_header_id => p_event_id ,
                                      p_header_num   => 0); -- 4262811
   --
   -- set accounting line options
   --
   l_ae_header_id:= xla_ae_lines_pkg.SetAcctLineOption(
           p_natural_side_code          => 'D'
         , p_gain_or_loss_flag          => 'N'
         , p_gl_transfer_mode_code      => 'S'
         , p_acct_entry_type_code       => 'E'
         , p_switch_side_flag           => 'Y'
         , p_merge_duplicate_code       => 'N'
         );
   --
   l_acc_rev_natural_side_code := 'C';  -- 4262811
   -- 
   --
   -- set accounting line type info
   --
   xla_ae_lines_pkg.SetAcctLineType
      (p_component_type             => l_component_type
      ,p_event_type_code            => l_event_type_code
      ,p_line_definition_owner_code => l_line_definition_owner_code
      ,p_line_definition_code       => l_line_definition_code
      ,p_accounting_line_code       => l_component_code
      ,p_accounting_line_type_code  => l_component_type_code
      ,p_accounting_line_appl_id    => l_component_appl_id
      ,p_amb_context_code           => l_amb_context_code
      ,p_entity_code                => l_entity_code
      ,p_event_class_code           => l_event_class_code);
   --
   -- set accounting class
   --
   xla_ae_lines_pkg.SetAcctClass(
           p_accounting_class_code  => 'QV'
         , p_ae_header_id           => l_ae_header_id
         );

   --
   -- set rounding class
   --
   XLA_AE_LINES_PKG.g_rec_lines.array_rounding_class(XLA_AE_LINES_PKG.g_LineNumber) :=
                      'QV';

   --
   xla_ae_lines_pkg.g_rec_lines.array_calculate_acctd_flag(xla_ae_lines_pkg.g_LineNumber) := p_calculate_acctd_flag;
   xla_ae_lines_pkg.g_rec_lines.array_calculate_g_l_flag(xla_ae_lines_pkg.g_LineNumber) := p_calculate_g_l_flag;
   --
   -- bulk performance
   --
   XLA_AE_LINES_PKG.g_rec_lines.array_balance_type_code(XLA_AE_LINES_PKG.g_LineNumber) := l_balance_type_code;

   XLA_AE_LINES_PKG.g_rec_lines.array_ledger_id(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id;

   -- 4955764
   XLA_AE_LINES_PKG.g_rec_lines.array_gl_date(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_HEADER_PKG.g_rec_header_new.array_gl_date(g_array_event(p_event_id).array_value_num('header_index'));

   -- 4458381 Public Sector Enh
      XLA_AE_LINES_PKG.g_rec_lines.array_encumbrance_type_id(XLA_AE_LINES_PKG.g_LineNumber) := 1060;
   --
   -- set accounting attributes for the line type
   --
   l_entered_amt_idx := 24;
   l_accted_amt_idx  := 29;
   l_bflow_applied_to_amt_idx  := 7;  -- 5132302
   l_rec_acct_attrs.array_acct_attr_code(1) := 'ACCOUNTING_REVERSAL_OPTION';
   l_rec_acct_attrs.array_char_value(1)  := p_source_19;
   l_rec_acct_attrs.array_acct_attr_code(2) := 'ALLOC_TO_APPLICATION_ID';
   l_rec_acct_attrs.array_num_value(2)  := 
xla_ae_sources_pkg.GetSystemSourceNum(
   p_source_code           => 'XLA_EVENT_APPL_ID'
 , p_source_type_code      => 'Y'
 , p_source_application_id =>  602
);
   l_rec_acct_attrs.array_acct_attr_code(3) := 'ALLOC_TO_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(3)  := p_source_21;
   l_rec_acct_attrs.array_acct_attr_code(4) := 'ALLOC_TO_ENTITY_CODE';
   l_rec_acct_attrs.array_char_value(4)  := 
xla_ae_sources_pkg.GetSystemSourceChar(
   p_source_code           => 'XLA_ENTITY_CODE'
 , p_source_type_code      => 'Y'
 , p_source_application_id =>  602
);
   l_rec_acct_attrs.array_acct_attr_code(5) := 'ALLOC_TO_FIRST_DIST_ID';
   l_rec_acct_attrs.array_num_value(5)  :=  to_char(p_source_23);
   l_rec_acct_attrs.array_acct_attr_code(6) := 'ALLOC_TO_FIRST_SYS_TRAN_ID';
   l_rec_acct_attrs.array_num_value(6)  :=  to_char(p_source_24);
   l_rec_acct_attrs.array_acct_attr_code(7) := 'APPLIED_TO_AMOUNT';
   l_rec_acct_attrs.array_num_value(7)  := p_source_57;
   l_rec_acct_attrs.array_acct_attr_code(8) := 'APPLIED_TO_APPLICATION_ID';
   l_rec_acct_attrs.array_num_value(8)  := p_source_25;
   l_rec_acct_attrs.array_acct_attr_code(9) := 'APPLIED_TO_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(9)  := p_source_26;
   l_rec_acct_attrs.array_acct_attr_code(10) := 'APPLIED_TO_ENTITY_CODE';
   l_rec_acct_attrs.array_char_value(10)  := p_source_27;
   l_rec_acct_attrs.array_acct_attr_code(11) := 'APPLIED_TO_FIRST_DIST_ID';
   l_rec_acct_attrs.array_num_value(11)  :=  to_char(p_source_28);
   l_rec_acct_attrs.array_acct_attr_code(12) := 'APPLIED_TO_FIRST_SYS_TRAN_ID';
   l_rec_acct_attrs.array_num_value(12)  :=  to_char(p_source_29);
   l_rec_acct_attrs.array_acct_attr_code(13) := 'DISTRIBUTION_IDENTIFIER_1';
   l_rec_acct_attrs.array_num_value(13)  :=  to_char(p_source_30);
   l_rec_acct_attrs.array_acct_attr_code(14) := 'DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(14)  := p_source_21;
   l_rec_acct_attrs.array_acct_attr_code(15) := 'ENC_UPG_CR_CCID';
   l_rec_acct_attrs.array_num_value(15)  := p_source_31;
   l_rec_acct_attrs.array_acct_attr_code(16) := 'ENC_UPG_CR_ENTERED_AMT';
   l_rec_acct_attrs.array_num_value(16)  := p_source_32;
   l_rec_acct_attrs.array_acct_attr_code(17) := 'ENC_UPG_CR_ENTERED_CURR';
   l_rec_acct_attrs.array_char_value(17)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(18) := 'ENC_UPG_CR_LEDGER_AMT';
   l_rec_acct_attrs.array_num_value(18)  := p_source_34;
   l_rec_acct_attrs.array_acct_attr_code(19) := 'ENC_UPG_DR_CCID';
   l_rec_acct_attrs.array_num_value(19)  := p_source_35;
   l_rec_acct_attrs.array_acct_attr_code(20) := 'ENC_UPG_DR_ENTERED_AMT';
   l_rec_acct_attrs.array_num_value(20)  := p_source_36;
   l_rec_acct_attrs.array_acct_attr_code(21) := 'ENC_UPG_DR_ENTERED_CURR';
   l_rec_acct_attrs.array_char_value(21)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(22) := 'ENC_UPG_DR_LEDGER_AMT';
   l_rec_acct_attrs.array_num_value(22)  := p_source_37;
   l_rec_acct_attrs.array_acct_attr_code(23) := 'ENC_UPG_OPTION';
   l_rec_acct_attrs.array_char_value(23)  := p_source_38;
   l_rec_acct_attrs.array_acct_attr_code(24) := 'ENTERED_CURRENCY_AMOUNT';
   l_rec_acct_attrs.array_num_value(24)  := p_source_81;
   l_rec_acct_attrs.array_acct_attr_code(25) := 'ENTERED_CURRENCY_CODE';
   l_rec_acct_attrs.array_char_value(25)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(26) := 'EXCHANGE_DATE';
   l_rec_acct_attrs.array_date_value(26)  := p_source_39;
   l_rec_acct_attrs.array_acct_attr_code(27) := 'EXCHANGE_RATE';
   l_rec_acct_attrs.array_num_value(27)  := p_source_40;
   l_rec_acct_attrs.array_acct_attr_code(28) := 'EXCHANGE_RATE_TYPE';
   l_rec_acct_attrs.array_char_value(28)  := p_source_41;
   l_rec_acct_attrs.array_acct_attr_code(29) := 'LEDGER_AMOUNT';
   l_rec_acct_attrs.array_num_value(29)  := p_source_82;
   l_rec_acct_attrs.array_acct_attr_code(30) := 'MULTIPERIOD_END_DATE';
   l_rec_acct_attrs.array_date_value(30)  := p_source_43;
   l_rec_acct_attrs.array_acct_attr_code(31) := 'MULTIPERIOD_OPTION';
   l_rec_acct_attrs.array_char_value(31)  := p_source_44;
   l_rec_acct_attrs.array_acct_attr_code(32) := 'MULTIPERIOD_START_DATE';
   l_rec_acct_attrs.array_date_value(32)  := p_source_45;
   l_rec_acct_attrs.array_acct_attr_code(33) := 'OVERRIDE_ACCTD_AMT_FLAG';
   l_rec_acct_attrs.array_char_value(33)  := p_source_46;
   l_rec_acct_attrs.array_acct_attr_code(34) := 'PARTY_ID';
   l_rec_acct_attrs.array_num_value(34)  := p_source_47;
   l_rec_acct_attrs.array_acct_attr_code(35) := 'PARTY_SITE_ID';
   l_rec_acct_attrs.array_num_value(35)  := p_source_48;
   l_rec_acct_attrs.array_acct_attr_code(36) := 'PARTY_TYPE';
   l_rec_acct_attrs.array_char_value(36)  := p_source_49;
   l_rec_acct_attrs.array_acct_attr_code(37) := 'REVERSED_DISTRIBUTION_ID1';
   l_rec_acct_attrs.array_num_value(37)  :=  to_char(p_source_50);
   l_rec_acct_attrs.array_acct_attr_code(38) := 'REVERSED_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(38)  := p_source_21;
   l_rec_acct_attrs.array_acct_attr_code(39) := 'STATISTICAL_AMOUNT';
   l_rec_acct_attrs.array_num_value(39)  := p_source_51;
   l_rec_acct_attrs.array_acct_attr_code(40) := 'TAX_LINE_REF_ID';
   l_rec_acct_attrs.array_num_value(40)  := p_source_52;
   l_rec_acct_attrs.array_acct_attr_code(41) := 'TAX_REC_NREC_DIST_REF_ID';
   l_rec_acct_attrs.array_num_value(41)  := p_source_53;
   l_rec_acct_attrs.array_acct_attr_code(42) := 'TAX_SUMMARY_LINE_REF_ID';
   l_rec_acct_attrs.array_num_value(42)  := p_source_54;
   l_rec_acct_attrs.array_acct_attr_code(43) := 'UPG_CR_ENC_TYPE_ID';
   l_rec_acct_attrs.array_num_value(43)  := p_source_55;
   l_rec_acct_attrs.array_acct_attr_code(44) := 'UPG_DR_ENC_TYPE_ID';
   l_rec_acct_attrs.array_num_value(44)  := p_source_56;

   XLA_AE_LINES_PKG.SetLineAcctAttrs(l_rec_acct_attrs);
   p_gain_or_loss_ref  := XLA_AE_LINES_PKG.g_rec_lines.array_gain_or_loss_ref(XLA_AE_LINES_PKG.g_LineNumber);

   ---------------------------------------------------------------------------------------------------------------
   -- 4336173 -- assign Business Flow Class (replace code in xla_ae_lines_pkg.Business_Flow_Validation)
   ---------------------------------------------------------------------------------------------------------------
   XLA_AE_LINES_PKG.g_rec_lines.array_business_class_code(XLA_AE_LINES_PKG.g_LineNumber) := l_bflow_class_code;

   l_actual_upg_option  := XLA_AE_LINES_PKG.g_rec_lines.array_actual_upg_option(XLA_AE_LINES_PKG.g_LineNumber);
   l_enc_upg_option     := XLA_AE_LINES_PKG.g_rec_lines.array_enc_upg_option(XLA_AE_LINES_PKG.g_LineNumber);

   IF xla_accounting_cache_pkg.GetValueChar
         (p_source_code         => 'LEDGER_CATEGORY_CODE'
         ,p_target_ledger_id    => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id) IN ('PRIMARY','ALC')
   AND l_bflow_method_code = 'PRIOR_ENTRY'
--   AND (l_actual_upg_option = 'Y' OR l_enc_upg_option = 'Y') Bug 4922099
   AND ( (NVL(l_actual_upg_option, 'N') IN ('Y', 'O')) OR
         (NVL(l_enc_upg_option, 'N') IN ('Y', 'O'))
       )
   THEN
         xla_ae_lines_pkg.BflowUpgEntry
           (p_business_method_code    => l_bflow_method_code
           ,p_business_class_code     => l_bflow_class_code
           ,p_balance_type            => l_balance_type_code);
   ELSE
      NULL;
-- No business flow processing for business flow method of NONE.
   END IF;

   --
   -- call analytical criteria
   --
   
   --
   -- call description
   --
   
xla_ae_lines_pkg.SetLineDescription(
   p_ae_header_id => l_ae_header_id
  ,p_description  => Description_2 (
     p_application_id         => p_application_id
   , p_ae_header_id           => l_ae_header_id 
, p_source_1 => p_source_1
   )
);


   --
   -- call ADRs
   -- Bug 4922099
   --
   IF ( (l_bflow_method_code <> 'PRIOR_ENTRY') OR
        (NVL(l_actual_upg_option, 'N') = 'O') OR
        (NVL(l_enc_upg_option, 'N') = 'O')
      )
   THEN
   NULL;
   --
   --
   
  l_ccid := AcctDerRule_7(
           p_application_id           => p_application_id
         , p_ae_header_id             => l_ae_header_id 
, p_source_11 => p_source_11
         , x_transaction_coa_id       => l_adr_transaction_coa_id
         , x_accounting_coa_id        => l_adr_accounting_coa_id
         , x_value_type_code          => l_adr_value_type_code
         , p_side                     => 'NA'
   );

   xla_ae_lines_pkg.set_ccid(
    p_code_combination_id          => l_ccid
  , p_value_type_code              => l_adr_value_type_code
  , p_transaction_coa_id           => l_adr_transaction_coa_id
  , p_accounting_coa_id            => l_adr_accounting_coa_id
  , p_adr_code                     => 'AP_INVOICE_DIST'
  , p_adr_type_code                => 'S'
  , p_component_type               => l_component_type
  , p_component_code               => l_component_code
  , p_component_type_code          => l_component_type_code
  , p_component_appl_id            => l_component_appl_id
  , p_amb_context_code             => l_amb_context_code
  , p_side                         => 'NA'
  );


   --
   --
   END IF;
   --
   -- Bug 4922099
   IF ( ( (NVL(l_actual_upg_option, 'N') = 'O') OR
          (NVL(l_enc_upg_option, 'N') = 'O')
        ) AND
        (l_bflow_method_code = 'PRIOR_ENTRY')
      )
   THEN
      IF
      --
      1 = 2
      --
      THEN
      xla_accounting_err_pkg.build_message
                                    (p_appli_s_name            => 'XLA'
                                    ,p_msg_name                => 'XLA_UPG_OVERRIDE_ADR_UNDEFINED'
                                    ,p_token_1                 => 'LINE_NUMBER'
                                    ,p_value_1                 => XLA_AE_LINES_PKG.g_LineNumber
                                    ,p_token_2                 => 'LINE_TYPE_NAME'
                                    ,p_value_2                 => XLA_AE_SOURCES_PKG.GetComponentName (
                                                                             l_component_type
                                                                            ,l_component_code
                                                                            ,l_component_type_code
                                                                            ,l_component_appl_id
                                                                            ,l_amb_context_code
                                                                            ,l_entity_code
                                                                            ,l_event_class_code
                                                                           )
                                    ,p_token_3                 => 'OWNER'
                                    ,p_value_3                 => xla_lookups_pkg.get_meaning(
                                                                          p_lookup_type     => 'XLA_OWNER_TYPE'
                                                                          ,p_lookup_code    => l_component_type_code
                                                                         )
                                    ,p_token_4                 => 'PRODUCT_NAME'
                                    ,p_value_4                 => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.application_name
                                    ,p_entity_id               => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.entity_id
                                    ,p_event_id                => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.event_id
                                    ,p_ledger_id               => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id
                                    ,p_ae_header_id            =>  NULL
                                       );

        IF (C_LEVEL_ERROR>= g_log_level) THEN
                 trace
                      (p_msg      => 'ERROR: XLA_UPG_OVERRIDE_ADR_UNDEFINED'
                      ,p_level    => C_LEVEL_ERROR
                      ,p_module   => l_log_module);
        END IF;
      END IF;
   END IF;
   --
   --
   ------------------------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- NOTE: XLA_AE_LINES_PKG.ValidateCurrentLine should NOT be generated if business flow method is
   -- Prior Entry.  Currently, the following code is always generated.
   ------------------------------------------------------------------------------------------------
   XLA_AE_LINES_PKG.ValidateCurrentLine;

   ------------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- Populated credit and debit amounts -- Need to generate this within IF <condition>
   ------------------------------------------------------------------------------------
   XLA_AE_LINES_PKG.SetDebitCreditAmounts;

   ----------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- Update journal entry status -- Need to generate this within IF <condition>
   ----------------------------------------------------------------------------------
   XLA_AE_JOURNAL_ENTRY_PKG.UpdateJournalEntryStatus
         (p_hdr_idx => g_array_event(p_event_id).array_value_num('header_index')
         ,p_balance_type_code => l_balance_type_code
         );

   -------------------------------------------------------------------------------------------
   -- 4262811 - Generate the Accrual Reversal lines
   -------------------------------------------------------------------------------------------
   BEGIN
      l_acc_rev_flag := XLA_AE_HEADER_PKG.g_rec_header_new.array_accrual_reversal_flag
                              (g_array_event(p_event_id).array_value_num('header_index'));
      IF l_acc_rev_flag IS NULL THEN
         l_acc_rev_flag := 'N';
      END IF;
   EXCEPTION
      WHEN OTHERS THEN
         l_acc_rev_flag := 'N';
   END;
   --
   IF (l_acc_rev_flag = 'Y') THEN

       -- 4645092  ------------------------------------------------------------------------------
       -- To allow MPA report to determine if it should generate report process
       XLA_ACCOUNTING_PKG.g_mpa_accrual_exists := 'Y';
       ------------------------------------------------------------------------------------------

       l_accrual_line_num := XLA_AE_LINES_PKG.g_LineNumber;
       XLA_AE_LINES_PKG.CopyLineInfo(l_accrual_line_num);
   -- added call to set_ccid to execute mapping  for secondary accrual reversal entries bug 7444204
   -- call ADRs
   -- Bug 4922099
   --
   IF ( (l_bflow_method_code <> 'PRIOR_ENTRY') OR
        (NVL(l_actual_upg_option, 'N') = 'O') OR
        (NVL(l_enc_upg_option, 'N') = 'O')
      )
   THEN
   NULL;
   --
   --
   
  l_ccid := AcctDerRule_7(
           p_application_id           => p_application_id
         , p_ae_header_id             => l_ae_header_id 
, p_source_11 => p_source_11
         , x_transaction_coa_id       => l_adr_transaction_coa_id
         , x_accounting_coa_id        => l_adr_accounting_coa_id
         , x_value_type_code          => l_adr_value_type_code
         , p_side                     => 'NA'
   );

   xla_ae_lines_pkg.set_ccid(
    p_code_combination_id          => l_ccid
  , p_value_type_code              => l_adr_value_type_code
  , p_transaction_coa_id           => l_adr_transaction_coa_id
  , p_accounting_coa_id            => l_adr_accounting_coa_id
  , p_adr_code                     => 'AP_INVOICE_DIST'
  , p_adr_type_code                => 'S'
  , p_component_type               => l_component_type
  , p_component_code               => l_component_code
  , p_component_type_code          => l_component_type_code
  , p_component_appl_id            => l_component_appl_id
  , p_amb_context_code             => l_amb_context_code
  , p_side                         => 'NA'
  );


   --
   --
   END IF;

       --
       -- Update the line information that should be overwritten
       --
       XLA_AE_LINES_PKG.set_ae_header_id(p_ae_header_id => p_event_id ,
                                         p_header_num   => 1);
       XLA_AE_LINES_PKG.g_rec_lines.array_header_num(XLA_AE_LINES_PKG.g_LineNumber)  :=1;

       XLA_AE_LINES_PKG.g_rec_lines.array_business_class_code(XLA_AE_LINES_PKG.g_LineNumber) := NULL; -- 4669271

       IF l_bflow_method_code <> 'NONE' THEN  -- 4655713b
          XLA_AE_LINES_PKG.g_rec_lines.array_reversal_code(XLA_AE_LINES_PKG.g_LineNumber) := CONCAT('MPA_',l_bflow_method_code);
       END IF;

      --
      -- Depending on the Reversal Method setup, do a switch side or changes sign for the amounts
      --
      IF (XLA_AE_JOURNAL_ENTRY_PKG.g_cache_ledgers_info.ledger_reversal_option = 'SIDE') THEN
          XLA_AE_LINES_PKG.g_rec_lines.array_natural_side_code(XLA_AE_LINES_PKG.g_LineNumber) :=  l_acc_rev_natural_side_code;
      ELSE
          ---------------------------------------------------------------------------------------------------
          -- 4262811a Switch Sign
          ---------------------------------------------------------------------------------------------------
          XLA_AE_LINES_PKG.g_rec_lines.array_switch_side_flag(XLA_AE_LINES_PKG.g_LineNumber) := 'N';  -- 5052518
          XLA_AE_LINES_PKG.g_rec_lines.array_ledger_amount(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_ledger_amount(XLA_AE_LINES_PKG.g_LineNumber) * -1;
          XLA_AE_LINES_PKG.g_rec_lines.array_entered_amount(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_entered_amount(XLA_AE_LINES_PKG.g_LineNumber) * -1;
          -- 5132302
          XLA_AE_LINES_PKG.g_rec_lines.array_bflow_applied_to_amt(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_bflow_applied_to_amt(XLA_AE_LINES_PKG.g_LineNumber) * -1;

      END IF;

      -- 4955764
      XLA_AE_LINES_PKG.g_rec_lines.array_gl_date(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_HEADER_PKG.g_rec_header_new.array_gl_date(g_array_event(p_event_id).array_value_num('acc_rev_header_index'));


      XLA_AE_LINES_PKG.ValidateCurrentLine;
      XLA_AE_LINES_PKG.SetDebitCreditAmounts;

      XLA_AE_JOURNAL_ENTRY_PKG.UpdateJournalEntryStatus
               (p_hdr_idx           => g_array_event(p_event_id).array_value_num('acc_rev_header_index')
               ,p_balance_type_code => l_balance_type_code);

   END IF;

   -----------------------------------------------------------------------------------------
   -- 4262811 Multiperiod Accounting
   -----------------------------------------------------------------------------------------
     -- No MPA option is assigned.


END IF;
END IF;
--

--
IF (C_LEVEL_PROCEDURE >= g_log_level) THEN
   trace
      (p_msg      => 'END of AcctLineType_53'
      ,p_level    => C_LEVEL_PROCEDURE
      ,p_module   => l_log_module);
END IF;
--
EXCEPTION
  WHEN xla_exceptions_pkg.application_exception THEN
      RAISE;
  WHEN OTHERS THEN
       xla_exceptions_pkg.raise_message
           (p_location => 'XLA_00200_AAD_S_000010_BC_PKG.AcctLineType_53');
END AcctLineType_53;
--

---------------------------------------
--
-- PRIVATE FUNCTION
--         AcctLineType_54
--
---------------------------------------
PROCEDURE AcctLineType_54 (
  p_application_id        IN NUMBER
 ,p_event_id              IN NUMBER
 ,p_calculate_acctd_flag  IN VARCHAR2
 ,p_calculate_g_l_flag    IN VARCHAR2
 ,p_actual_flag           IN OUT VARCHAR2
 ,p_balance_type_code     OUT VARCHAR2
 ,p_gain_or_loss_ref      OUT VARCHAR2
 
--Invoice Distribution Description
 , p_source_1            IN VARCHAR2
--Invoice Distribution Account
 , p_source_11            IN NUMBER
--Invoice Distribution Type
 , p_source_15            IN VARCHAR2
 , p_source_15_meaning    IN VARCHAR2
--Purchasing Encumbrance Option
 , p_source_17            IN VARCHAR2
 , p_source_17_meaning    IN VARCHAR2
--Accrue on Receipt Option
 , p_source_18            IN VARCHAR2
 , p_source_18_meaning    IN VARCHAR2
--Accounting Reversal Indicator
 , p_source_19            IN VARCHAR2
--Distribution Link Type
 , p_source_21            IN VARCHAR2
--Allocation to Main Distribution Identifier
 , p_source_23            IN NUMBER
--Invoice Identifier
 , p_source_24            IN NUMBER
--Business Flow Accounts Payable Application Identifier
 , p_source_25            IN NUMBER
--Business Flow Invoice Distribution Type
 , p_source_26            IN VARCHAR2
--Business Flow Invoice Entity Code
 , p_source_27            IN VARCHAR2
--Business Flow Invoice Distribution Identifier
 , p_source_28            IN NUMBER
--Business Flow Invoice Identifier
 , p_source_29            IN NUMBER
--Invoice Distribution Identifier
 , p_source_30            IN NUMBER
--Payables Encumbrance Upgrade Credit Account
 , p_source_31            IN NUMBER
--Payables Encumbrance Upgrade Credit Amount
 , p_source_32            IN NUMBER
--Invoice Currency Code
 , p_source_33            IN VARCHAR2
--Payables Encumbrance Upgrade Credit Base Amount
 , p_source_34            IN NUMBER
--Payables Encumbrance Upgrade Debit Account
 , p_source_35            IN NUMBER
--Payables Encumbrance Upgrade Debit Amount
 , p_source_36            IN NUMBER
--Payables Encumbrance Upgrade Debit Base Amount
 , p_source_37            IN NUMBER
--Payables Encumbrance Upgrade Option
 , p_source_38            IN VARCHAR2
--Invoice Exchange Date
 , p_source_39            IN DATE
--Invoice Exchange Rate
 , p_source_40            IN NUMBER
--Invoice Exchange Rate Type
 , p_source_41            IN VARCHAR2
--Deferred Accounting End Date
 , p_source_43            IN DATE
--Deferred Accounting Option
 , p_source_44            IN VARCHAR2
--Deferred Accounting Start Date
 , p_source_45            IN DATE
--Override Accounted Amount Indicator
 , p_source_46            IN VARCHAR2
 , p_source_46_meaning    IN VARCHAR2
--Invoice Supplier Identifier
 , p_source_47            IN NUMBER
--Invoice Supplier Site Identifier
 , p_source_48            IN NUMBER
--Third Party Type
 , p_source_49            IN VARCHAR2
--Parent Reversal Identifier
 , p_source_50            IN NUMBER
--Invoice Distribution Statistical Amount
 , p_source_51            IN NUMBER
--Invoice Distribution Tax Line Identifier
 , p_source_52            IN NUMBER
--Invoice Distribution Tax Distribution Identifier from Tax
 , p_source_53            IN NUMBER
--Invoice Distribution Summary Tax Line Identifier
 , p_source_54            IN NUMBER
--Payables Upgrade Credit Encumbrance Type Identifier
 , p_source_55            IN NUMBER
--Payables Upgrade Debit Encumbrance Type Identifier
 , p_source_56            IN NUMBER
--Quantity Variance Amount
 , p_source_81            IN NUMBER
--Quantity Variance Amount in Ledger Currency
 , p_source_82            IN NUMBER
)
IS

l_component_type              VARCHAR2(80);
l_component_code              VARCHAR2(30);
l_component_type_code         VARCHAR2(1);
l_component_appl_id           INTEGER;
l_amb_context_code            VARCHAR2(30);
l_entity_code                 VARCHAR2(30);
l_event_class_code            VARCHAR2(30);
l_ae_header_id                NUMBER;
l_event_type_code             VARCHAR2(30);
l_line_definition_code        VARCHAR2(30);
l_line_definition_owner_code  VARCHAR2(1);
--
-- adr variables
l_segment                     VARCHAR2(30);
l_ccid                        NUMBER;
l_adr_transaction_coa_id      NUMBER;
l_adr_accounting_coa_id       NUMBER;
l_adr_flexfield_segment_code  VARCHAR2(30);
l_adr_flex_value_set_id       NUMBER;
l_adr_value_type_code         VARCHAR2(30);
l_adr_value_combination_id    NUMBER;
l_adr_value_segment_code      VARCHAR2(30);

l_bflow_method_code           VARCHAR2(30);  -- 4219869 Business Flow
l_bflow_class_code            VARCHAR2(30);  -- 4219869 Business Flow
l_inherit_desc_flag           VARCHAR2(1);   -- 4219869 Business Flow
l_budgetary_control_flag      VARCHAR2(1);   -- 4458381 Public Sector Enh

-- 4262811 Variables ------------------------------------------------------------------------------------------
l_entered_amt_idx             NUMBER;
l_accted_amt_idx              NUMBER;
l_acc_rev_flag                VARCHAR2(1);
l_accrual_line_num            NUMBER;
l_tmp_amt                     NUMBER;
l_acc_rev_natural_side_code   VARCHAR2(1);

l_num_entries                 NUMBER;
l_gl_dates                    xla_ae_journal_entry_pkg.t_array_date;
l_accted_amts                 xla_ae_journal_entry_pkg.t_array_num;
l_entered_amts                xla_ae_journal_entry_pkg.t_array_num;
l_period_names                xla_ae_journal_entry_pkg.t_array_V15L;
l_recog_line_1                NUMBER;
l_recog_line_2                NUMBER;

l_bflow_applied_to_amt_idx    NUMBER;                                -- 5132302
l_bflow_applied_to_amt        NUMBER;                                -- 5132302
l_bflow_applied_to_amts       xla_ae_journal_entry_pkg.t_array_num;  -- 5132302

l_event_id                    NUMBER;  -- To handle MPA header Description: xla_ae_header_pkg.SetHdrDescription

--l_rounding_ccy                VARCHAR2(15); -- To handle MPA rounding  4262811b
l_same_currency               BOOLEAN;        -- To handle MPA rounding  4262811b

---------------------------------------------------------------------------------------------------------------


--
-- bulk performance
--
l_balance_type_code           VARCHAR2(1);
l_rec_acct_attrs              XLA_AE_LINES_PKG.t_rec_acct_attrs;
l_log_module                  VARCHAR2(240);

--
-- Upgrade strategy
--
l_actual_upg_option           VARCHAR2(1);
l_enc_upg_option           VARCHAR2(1);

--
BEGIN
--
IF g_log_enabled THEN
      l_log_module := C_DEFAULT_MODULE||'.AcctLineType_54';
END IF;
--
IF (C_LEVEL_PROCEDURE >= g_log_level) THEN

      trace
         (p_msg      => 'BEGIN of AcctLineType_54'
         ,p_level    => C_LEVEL_PROCEDURE
         ,p_module   => l_log_module);

END IF;
--
l_component_type             := 'AMB_JLT';
l_component_code             := 'AP_QUANTITY_VARIANCE_CM_ENC_DR';
l_component_type_code        := 'S';
l_component_appl_id          :=  200;
l_amb_context_code           := 'DEFAULT';
l_entity_code                := 'AP_INVOICES';
l_event_class_code           := 'CREDIT MEMOS';
l_event_type_code            := 'CREDIT MEMOS_ALL';
l_line_definition_owner_code := 'S';
l_line_definition_code       := 'ENC_CM_ALL';
--
l_balance_type_code          := 'E';
l_segment                     := NULL;
l_ccid                        := NULL;
l_adr_transaction_coa_id      := NULL;
l_adr_accounting_coa_id       := NULL;
l_adr_flexfield_segment_code  := NULL;
l_adr_flex_value_set_id       := NULL;
l_adr_value_type_code         := NULL;
l_adr_value_combination_id    := NULL;
l_adr_value_segment_code      := NULL;

l_bflow_method_code          := 'NONE';   -- 4219869 Business Flow
l_bflow_class_code           := 'AP_INV_ENCUM';    -- 4219869 Business Flow
l_inherit_desc_flag          := 'N';   -- 4219869 Business Flow
l_budgetary_control_flag     := 'Y';

l_bflow_applied_to_amt_idx   := NULL; -- 5132302
l_bflow_applied_to_amt       := NULL; -- 5132302
l_entered_amt_idx            := NULL;          -- 4262811
l_accted_amt_idx             := NULL;          -- 4262811
l_acc_rev_flag               := NULL;          -- 4262811
l_accrual_line_num           := NULL;          -- 4262811
l_tmp_amt                    := NULL;          -- 4262811
--
 
IF XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id = XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.ledger_id OR
    l_balance_type_code <> 'B' THEN
IF NVL(p_source_15,'
') <>  'ACCRUAL' AND 
p_source_81 IS NOT NULL AND 
NVL(p_source_17,'
') =  'Y' AND 
NVL(p_source_18,'
') <>  'Y'
 THEN 

   --
   XLA_AE_LINES_PKG.SetNewLine;

   p_balance_type_code          := l_balance_type_code;
   -- set the flag so later we will know whether the gain loss line needs to be created
   
   IF(l_balance_type_code = 'A' and p_actual_flag is null) THEN
     p_actual_flag :='A';
   END IF;

   --
   -- bulk performance
   --
   XLA_AE_LINES_PKG.set_ae_header_id (p_ae_header_id => p_event_id ,
                                      p_header_num   => 0); -- 4262811
   --
   -- set accounting line options
   --
   l_ae_header_id:= xla_ae_lines_pkg.SetAcctLineOption(
           p_natural_side_code          => 'D'
         , p_gain_or_loss_flag          => 'N'
         , p_gl_transfer_mode_code      => 'S'
         , p_acct_entry_type_code       => 'E'
         , p_switch_side_flag           => 'Y'
         , p_merge_duplicate_code       => 'N'
         );
   --
   l_acc_rev_natural_side_code := 'C';  -- 4262811
   -- 
   --
   -- set accounting line type info
   --
   xla_ae_lines_pkg.SetAcctLineType
      (p_component_type             => l_component_type
      ,p_event_type_code            => l_event_type_code
      ,p_line_definition_owner_code => l_line_definition_owner_code
      ,p_line_definition_code       => l_line_definition_code
      ,p_accounting_line_code       => l_component_code
      ,p_accounting_line_type_code  => l_component_type_code
      ,p_accounting_line_appl_id    => l_component_appl_id
      ,p_amb_context_code           => l_amb_context_code
      ,p_entity_code                => l_entity_code
      ,p_event_class_code           => l_event_class_code);
   --
   -- set accounting class
   --
   xla_ae_lines_pkg.SetAcctClass(
           p_accounting_class_code  => 'QV'
         , p_ae_header_id           => l_ae_header_id
         );

   --
   -- set rounding class
   --
   XLA_AE_LINES_PKG.g_rec_lines.array_rounding_class(XLA_AE_LINES_PKG.g_LineNumber) :=
                      'QV';

   --
   xla_ae_lines_pkg.g_rec_lines.array_calculate_acctd_flag(xla_ae_lines_pkg.g_LineNumber) := p_calculate_acctd_flag;
   xla_ae_lines_pkg.g_rec_lines.array_calculate_g_l_flag(xla_ae_lines_pkg.g_LineNumber) := p_calculate_g_l_flag;
   --
   -- bulk performance
   --
   XLA_AE_LINES_PKG.g_rec_lines.array_balance_type_code(XLA_AE_LINES_PKG.g_LineNumber) := l_balance_type_code;

   XLA_AE_LINES_PKG.g_rec_lines.array_ledger_id(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id;

   -- 4955764
   XLA_AE_LINES_PKG.g_rec_lines.array_gl_date(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_HEADER_PKG.g_rec_header_new.array_gl_date(g_array_event(p_event_id).array_value_num('header_index'));

   -- 4458381 Public Sector Enh
      XLA_AE_LINES_PKG.g_rec_lines.array_encumbrance_type_id(XLA_AE_LINES_PKG.g_LineNumber) := 1060;
   --
   -- set accounting attributes for the line type
   --
   l_entered_amt_idx := 23;
   l_accted_amt_idx  := 28;
   l_bflow_applied_to_amt_idx  := NULL;  -- 5132302
   l_rec_acct_attrs.array_acct_attr_code(1) := 'ACCOUNTING_REVERSAL_OPTION';
   l_rec_acct_attrs.array_char_value(1)  := p_source_19;
   l_rec_acct_attrs.array_acct_attr_code(2) := 'ALLOC_TO_APPLICATION_ID';
   l_rec_acct_attrs.array_num_value(2)  := 
xla_ae_sources_pkg.GetSystemSourceNum(
   p_source_code           => 'XLA_EVENT_APPL_ID'
 , p_source_type_code      => 'Y'
 , p_source_application_id =>  602
);
   l_rec_acct_attrs.array_acct_attr_code(3) := 'ALLOC_TO_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(3)  := p_source_21;
   l_rec_acct_attrs.array_acct_attr_code(4) := 'ALLOC_TO_ENTITY_CODE';
   l_rec_acct_attrs.array_char_value(4)  := 
xla_ae_sources_pkg.GetSystemSourceChar(
   p_source_code           => 'XLA_ENTITY_CODE'
 , p_source_type_code      => 'Y'
 , p_source_application_id =>  602
);
   l_rec_acct_attrs.array_acct_attr_code(5) := 'ALLOC_TO_FIRST_DIST_ID';
   l_rec_acct_attrs.array_num_value(5)  :=  to_char(p_source_23);
   l_rec_acct_attrs.array_acct_attr_code(6) := 'ALLOC_TO_FIRST_SYS_TRAN_ID';
   l_rec_acct_attrs.array_num_value(6)  :=  to_char(p_source_24);
   l_rec_acct_attrs.array_acct_attr_code(7) := 'APPLIED_TO_APPLICATION_ID';
   l_rec_acct_attrs.array_num_value(7)  := p_source_25;
   l_rec_acct_attrs.array_acct_attr_code(8) := 'APPLIED_TO_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(8)  := p_source_26;
   l_rec_acct_attrs.array_acct_attr_code(9) := 'APPLIED_TO_ENTITY_CODE';
   l_rec_acct_attrs.array_char_value(9)  := p_source_27;
   l_rec_acct_attrs.array_acct_attr_code(10) := 'APPLIED_TO_FIRST_DIST_ID';
   l_rec_acct_attrs.array_num_value(10)  :=  to_char(p_source_28);
   l_rec_acct_attrs.array_acct_attr_code(11) := 'APPLIED_TO_FIRST_SYS_TRAN_ID';
   l_rec_acct_attrs.array_num_value(11)  :=  to_char(p_source_29);
   l_rec_acct_attrs.array_acct_attr_code(12) := 'DISTRIBUTION_IDENTIFIER_1';
   l_rec_acct_attrs.array_num_value(12)  :=  to_char(p_source_30);
   l_rec_acct_attrs.array_acct_attr_code(13) := 'DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(13)  := p_source_21;
   l_rec_acct_attrs.array_acct_attr_code(14) := 'ENC_UPG_CR_CCID';
   l_rec_acct_attrs.array_num_value(14)  := p_source_31;
   l_rec_acct_attrs.array_acct_attr_code(15) := 'ENC_UPG_CR_ENTERED_AMT';
   l_rec_acct_attrs.array_num_value(15)  := p_source_32;
   l_rec_acct_attrs.array_acct_attr_code(16) := 'ENC_UPG_CR_ENTERED_CURR';
   l_rec_acct_attrs.array_char_value(16)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(17) := 'ENC_UPG_CR_LEDGER_AMT';
   l_rec_acct_attrs.array_num_value(17)  := p_source_34;
   l_rec_acct_attrs.array_acct_attr_code(18) := 'ENC_UPG_DR_CCID';
   l_rec_acct_attrs.array_num_value(18)  := p_source_35;
   l_rec_acct_attrs.array_acct_attr_code(19) := 'ENC_UPG_DR_ENTERED_AMT';
   l_rec_acct_attrs.array_num_value(19)  := p_source_36;
   l_rec_acct_attrs.array_acct_attr_code(20) := 'ENC_UPG_DR_ENTERED_CURR';
   l_rec_acct_attrs.array_char_value(20)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(21) := 'ENC_UPG_DR_LEDGER_AMT';
   l_rec_acct_attrs.array_num_value(21)  := p_source_37;
   l_rec_acct_attrs.array_acct_attr_code(22) := 'ENC_UPG_OPTION';
   l_rec_acct_attrs.array_char_value(22)  := p_source_38;
   l_rec_acct_attrs.array_acct_attr_code(23) := 'ENTERED_CURRENCY_AMOUNT';
   l_rec_acct_attrs.array_num_value(23)  := p_source_81;
   l_rec_acct_attrs.array_acct_attr_code(24) := 'ENTERED_CURRENCY_CODE';
   l_rec_acct_attrs.array_char_value(24)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(25) := 'EXCHANGE_DATE';
   l_rec_acct_attrs.array_date_value(25)  := p_source_39;
   l_rec_acct_attrs.array_acct_attr_code(26) := 'EXCHANGE_RATE';
   l_rec_acct_attrs.array_num_value(26)  := p_source_40;
   l_rec_acct_attrs.array_acct_attr_code(27) := 'EXCHANGE_RATE_TYPE';
   l_rec_acct_attrs.array_char_value(27)  := p_source_41;
   l_rec_acct_attrs.array_acct_attr_code(28) := 'LEDGER_AMOUNT';
   l_rec_acct_attrs.array_num_value(28)  := p_source_82;
   l_rec_acct_attrs.array_acct_attr_code(29) := 'MULTIPERIOD_END_DATE';
   l_rec_acct_attrs.array_date_value(29)  := p_source_43;
   l_rec_acct_attrs.array_acct_attr_code(30) := 'MULTIPERIOD_OPTION';
   l_rec_acct_attrs.array_char_value(30)  := p_source_44;
   l_rec_acct_attrs.array_acct_attr_code(31) := 'MULTIPERIOD_START_DATE';
   l_rec_acct_attrs.array_date_value(31)  := p_source_45;
   l_rec_acct_attrs.array_acct_attr_code(32) := 'OVERRIDE_ACCTD_AMT_FLAG';
   l_rec_acct_attrs.array_char_value(32)  := p_source_46;
   l_rec_acct_attrs.array_acct_attr_code(33) := 'PARTY_ID';
   l_rec_acct_attrs.array_num_value(33)  := p_source_47;
   l_rec_acct_attrs.array_acct_attr_code(34) := 'PARTY_SITE_ID';
   l_rec_acct_attrs.array_num_value(34)  := p_source_48;
   l_rec_acct_attrs.array_acct_attr_code(35) := 'PARTY_TYPE';
   l_rec_acct_attrs.array_char_value(35)  := p_source_49;
   l_rec_acct_attrs.array_acct_attr_code(36) := 'REVERSED_DISTRIBUTION_ID1';
   l_rec_acct_attrs.array_num_value(36)  :=  to_char(p_source_50);
   l_rec_acct_attrs.array_acct_attr_code(37) := 'REVERSED_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(37)  := p_source_21;
   l_rec_acct_attrs.array_acct_attr_code(38) := 'STATISTICAL_AMOUNT';
   l_rec_acct_attrs.array_num_value(38)  := p_source_51;
   l_rec_acct_attrs.array_acct_attr_code(39) := 'TAX_LINE_REF_ID';
   l_rec_acct_attrs.array_num_value(39)  := p_source_52;
   l_rec_acct_attrs.array_acct_attr_code(40) := 'TAX_REC_NREC_DIST_REF_ID';
   l_rec_acct_attrs.array_num_value(40)  := p_source_53;
   l_rec_acct_attrs.array_acct_attr_code(41) := 'TAX_SUMMARY_LINE_REF_ID';
   l_rec_acct_attrs.array_num_value(41)  := p_source_54;
   l_rec_acct_attrs.array_acct_attr_code(42) := 'UPG_CR_ENC_TYPE_ID';
   l_rec_acct_attrs.array_num_value(42)  := p_source_55;
   l_rec_acct_attrs.array_acct_attr_code(43) := 'UPG_DR_ENC_TYPE_ID';
   l_rec_acct_attrs.array_num_value(43)  := p_source_56;

   XLA_AE_LINES_PKG.SetLineAcctAttrs(l_rec_acct_attrs);
   p_gain_or_loss_ref  := XLA_AE_LINES_PKG.g_rec_lines.array_gain_or_loss_ref(XLA_AE_LINES_PKG.g_LineNumber);

   ---------------------------------------------------------------------------------------------------------------
   -- 4336173 -- assign Business Flow Class (replace code in xla_ae_lines_pkg.Business_Flow_Validation)
   ---------------------------------------------------------------------------------------------------------------
   XLA_AE_LINES_PKG.g_rec_lines.array_business_class_code(XLA_AE_LINES_PKG.g_LineNumber) := l_bflow_class_code;

   l_actual_upg_option  := XLA_AE_LINES_PKG.g_rec_lines.array_actual_upg_option(XLA_AE_LINES_PKG.g_LineNumber);
   l_enc_upg_option     := XLA_AE_LINES_PKG.g_rec_lines.array_enc_upg_option(XLA_AE_LINES_PKG.g_LineNumber);

   IF xla_accounting_cache_pkg.GetValueChar
         (p_source_code         => 'LEDGER_CATEGORY_CODE'
         ,p_target_ledger_id    => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id) IN ('PRIMARY','ALC')
   AND l_bflow_method_code = 'PRIOR_ENTRY'
--   AND (l_actual_upg_option = 'Y' OR l_enc_upg_option = 'Y') Bug 4922099
   AND ( (NVL(l_actual_upg_option, 'N') IN ('Y', 'O')) OR
         (NVL(l_enc_upg_option, 'N') IN ('Y', 'O'))
       )
   THEN
         xla_ae_lines_pkg.BflowUpgEntry
           (p_business_method_code    => l_bflow_method_code
           ,p_business_class_code     => l_bflow_class_code
           ,p_balance_type            => l_balance_type_code);
   ELSE
      NULL;
-- No business flow processing for business flow method of NONE.
   END IF;

   --
   -- call analytical criteria
   --
   
   --
   -- call description
   --
   
xla_ae_lines_pkg.SetLineDescription(
   p_ae_header_id => l_ae_header_id
  ,p_description  => Description_2 (
     p_application_id         => p_application_id
   , p_ae_header_id           => l_ae_header_id 
, p_source_1 => p_source_1
   )
);


   --
   -- call ADRs
   -- Bug 4922099
   --
   IF ( (l_bflow_method_code <> 'PRIOR_ENTRY') OR
        (NVL(l_actual_upg_option, 'N') = 'O') OR
        (NVL(l_enc_upg_option, 'N') = 'O')
      )
   THEN
   NULL;
   --
   --
   
  l_ccid := AcctDerRule_7(
           p_application_id           => p_application_id
         , p_ae_header_id             => l_ae_header_id 
, p_source_11 => p_source_11
         , x_transaction_coa_id       => l_adr_transaction_coa_id
         , x_accounting_coa_id        => l_adr_accounting_coa_id
         , x_value_type_code          => l_adr_value_type_code
         , p_side                     => 'NA'
   );

   xla_ae_lines_pkg.set_ccid(
    p_code_combination_id          => l_ccid
  , p_value_type_code              => l_adr_value_type_code
  , p_transaction_coa_id           => l_adr_transaction_coa_id
  , p_accounting_coa_id            => l_adr_accounting_coa_id
  , p_adr_code                     => 'AP_INVOICE_DIST'
  , p_adr_type_code                => 'S'
  , p_component_type               => l_component_type
  , p_component_code               => l_component_code
  , p_component_type_code          => l_component_type_code
  , p_component_appl_id            => l_component_appl_id
  , p_amb_context_code             => l_amb_context_code
  , p_side                         => 'NA'
  );


   --
   --
   END IF;
   --
   -- Bug 4922099
   IF ( ( (NVL(l_actual_upg_option, 'N') = 'O') OR
          (NVL(l_enc_upg_option, 'N') = 'O')
        ) AND
        (l_bflow_method_code = 'PRIOR_ENTRY')
      )
   THEN
      IF
      --
      1 = 2
      --
      THEN
      xla_accounting_err_pkg.build_message
                                    (p_appli_s_name            => 'XLA'
                                    ,p_msg_name                => 'XLA_UPG_OVERRIDE_ADR_UNDEFINED'
                                    ,p_token_1                 => 'LINE_NUMBER'
                                    ,p_value_1                 => XLA_AE_LINES_PKG.g_LineNumber
                                    ,p_token_2                 => 'LINE_TYPE_NAME'
                                    ,p_value_2                 => XLA_AE_SOURCES_PKG.GetComponentName (
                                                                             l_component_type
                                                                            ,l_component_code
                                                                            ,l_component_type_code
                                                                            ,l_component_appl_id
                                                                            ,l_amb_context_code
                                                                            ,l_entity_code
                                                                            ,l_event_class_code
                                                                           )
                                    ,p_token_3                 => 'OWNER'
                                    ,p_value_3                 => xla_lookups_pkg.get_meaning(
                                                                          p_lookup_type     => 'XLA_OWNER_TYPE'
                                                                          ,p_lookup_code    => l_component_type_code
                                                                         )
                                    ,p_token_4                 => 'PRODUCT_NAME'
                                    ,p_value_4                 => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.application_name
                                    ,p_entity_id               => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.entity_id
                                    ,p_event_id                => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.event_id
                                    ,p_ledger_id               => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id
                                    ,p_ae_header_id            =>  NULL
                                       );

        IF (C_LEVEL_ERROR>= g_log_level) THEN
                 trace
                      (p_msg      => 'ERROR: XLA_UPG_OVERRIDE_ADR_UNDEFINED'
                      ,p_level    => C_LEVEL_ERROR
                      ,p_module   => l_log_module);
        END IF;
      END IF;
   END IF;
   --
   --
   ------------------------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- NOTE: XLA_AE_LINES_PKG.ValidateCurrentLine should NOT be generated if business flow method is
   -- Prior Entry.  Currently, the following code is always generated.
   ------------------------------------------------------------------------------------------------
   XLA_AE_LINES_PKG.ValidateCurrentLine;

   ------------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- Populated credit and debit amounts -- Need to generate this within IF <condition>
   ------------------------------------------------------------------------------------
   XLA_AE_LINES_PKG.SetDebitCreditAmounts;

   ----------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- Update journal entry status -- Need to generate this within IF <condition>
   ----------------------------------------------------------------------------------
   XLA_AE_JOURNAL_ENTRY_PKG.UpdateJournalEntryStatus
         (p_hdr_idx => g_array_event(p_event_id).array_value_num('header_index')
         ,p_balance_type_code => l_balance_type_code
         );

   -------------------------------------------------------------------------------------------
   -- 4262811 - Generate the Accrual Reversal lines
   -------------------------------------------------------------------------------------------
   BEGIN
      l_acc_rev_flag := XLA_AE_HEADER_PKG.g_rec_header_new.array_accrual_reversal_flag
                              (g_array_event(p_event_id).array_value_num('header_index'));
      IF l_acc_rev_flag IS NULL THEN
         l_acc_rev_flag := 'N';
      END IF;
   EXCEPTION
      WHEN OTHERS THEN
         l_acc_rev_flag := 'N';
   END;
   --
   IF (l_acc_rev_flag = 'Y') THEN

       -- 4645092  ------------------------------------------------------------------------------
       -- To allow MPA report to determine if it should generate report process
       XLA_ACCOUNTING_PKG.g_mpa_accrual_exists := 'Y';
       ------------------------------------------------------------------------------------------

       l_accrual_line_num := XLA_AE_LINES_PKG.g_LineNumber;
       XLA_AE_LINES_PKG.CopyLineInfo(l_accrual_line_num);
   -- added call to set_ccid to execute mapping  for secondary accrual reversal entries bug 7444204
   -- call ADRs
   -- Bug 4922099
   --
   IF ( (l_bflow_method_code <> 'PRIOR_ENTRY') OR
        (NVL(l_actual_upg_option, 'N') = 'O') OR
        (NVL(l_enc_upg_option, 'N') = 'O')
      )
   THEN
   NULL;
   --
   --
   
  l_ccid := AcctDerRule_7(
           p_application_id           => p_application_id
         , p_ae_header_id             => l_ae_header_id 
, p_source_11 => p_source_11
         , x_transaction_coa_id       => l_adr_transaction_coa_id
         , x_accounting_coa_id        => l_adr_accounting_coa_id
         , x_value_type_code          => l_adr_value_type_code
         , p_side                     => 'NA'
   );

   xla_ae_lines_pkg.set_ccid(
    p_code_combination_id          => l_ccid
  , p_value_type_code              => l_adr_value_type_code
  , p_transaction_coa_id           => l_adr_transaction_coa_id
  , p_accounting_coa_id            => l_adr_accounting_coa_id
  , p_adr_code                     => 'AP_INVOICE_DIST'
  , p_adr_type_code                => 'S'
  , p_component_type               => l_component_type
  , p_component_code               => l_component_code
  , p_component_type_code          => l_component_type_code
  , p_component_appl_id            => l_component_appl_id
  , p_amb_context_code             => l_amb_context_code
  , p_side                         => 'NA'
  );


   --
   --
   END IF;

       --
       -- Update the line information that should be overwritten
       --
       XLA_AE_LINES_PKG.set_ae_header_id(p_ae_header_id => p_event_id ,
                                         p_header_num   => 1);
       XLA_AE_LINES_PKG.g_rec_lines.array_header_num(XLA_AE_LINES_PKG.g_LineNumber)  :=1;

       XLA_AE_LINES_PKG.g_rec_lines.array_business_class_code(XLA_AE_LINES_PKG.g_LineNumber) := NULL; -- 4669271

       IF l_bflow_method_code <> 'NONE' THEN  -- 4655713b
          XLA_AE_LINES_PKG.g_rec_lines.array_reversal_code(XLA_AE_LINES_PKG.g_LineNumber) := CONCAT('MPA_',l_bflow_method_code);
       END IF;

      --
      -- Depending on the Reversal Method setup, do a switch side or changes sign for the amounts
      --
      IF (XLA_AE_JOURNAL_ENTRY_PKG.g_cache_ledgers_info.ledger_reversal_option = 'SIDE') THEN
          XLA_AE_LINES_PKG.g_rec_lines.array_natural_side_code(XLA_AE_LINES_PKG.g_LineNumber) :=  l_acc_rev_natural_side_code;
      ELSE
          ---------------------------------------------------------------------------------------------------
          -- 4262811a Switch Sign
          ---------------------------------------------------------------------------------------------------
          XLA_AE_LINES_PKG.g_rec_lines.array_switch_side_flag(XLA_AE_LINES_PKG.g_LineNumber) := 'N';  -- 5052518
          XLA_AE_LINES_PKG.g_rec_lines.array_ledger_amount(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_ledger_amount(XLA_AE_LINES_PKG.g_LineNumber) * -1;
          XLA_AE_LINES_PKG.g_rec_lines.array_entered_amount(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_entered_amount(XLA_AE_LINES_PKG.g_LineNumber) * -1;
          -- 5132302
          XLA_AE_LINES_PKG.g_rec_lines.array_bflow_applied_to_amt(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_bflow_applied_to_amt(XLA_AE_LINES_PKG.g_LineNumber) * -1;

      END IF;

      -- 4955764
      XLA_AE_LINES_PKG.g_rec_lines.array_gl_date(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_HEADER_PKG.g_rec_header_new.array_gl_date(g_array_event(p_event_id).array_value_num('acc_rev_header_index'));


      XLA_AE_LINES_PKG.ValidateCurrentLine;
      XLA_AE_LINES_PKG.SetDebitCreditAmounts;

      XLA_AE_JOURNAL_ENTRY_PKG.UpdateJournalEntryStatus
               (p_hdr_idx           => g_array_event(p_event_id).array_value_num('acc_rev_header_index')
               ,p_balance_type_code => l_balance_type_code);

   END IF;

   -----------------------------------------------------------------------------------------
   -- 4262811 Multiperiod Accounting
   -----------------------------------------------------------------------------------------
     -- No MPA option is assigned.


END IF;
END IF;
--

--
IF (C_LEVEL_PROCEDURE >= g_log_level) THEN
   trace
      (p_msg      => 'END of AcctLineType_54'
      ,p_level    => C_LEVEL_PROCEDURE
      ,p_module   => l_log_module);
END IF;
--
EXCEPTION
  WHEN xla_exceptions_pkg.application_exception THEN
      RAISE;
  WHEN OTHERS THEN
       xla_exceptions_pkg.raise_message
           (p_location => 'XLA_00200_AAD_S_000010_BC_PKG.AcctLineType_54');
END AcctLineType_54;
--

---------------------------------------
--
-- PRIVATE FUNCTION
--         AcctLineType_55
--
---------------------------------------
PROCEDURE AcctLineType_55 (
  p_application_id        IN NUMBER
 ,p_event_id              IN NUMBER
 ,p_calculate_acctd_flag  IN VARCHAR2
 ,p_calculate_g_l_flag    IN VARCHAR2
 ,p_actual_flag           IN OUT VARCHAR2
 ,p_balance_type_code     OUT VARCHAR2
 ,p_gain_or_loss_ref      OUT VARCHAR2
 
--Invoice Distribution Description
 , p_source_1            IN VARCHAR2
--Invoice Distribution Account
 , p_source_11            IN NUMBER
--Invoice Distribution Type
 , p_source_15            IN VARCHAR2
 , p_source_15_meaning    IN VARCHAR2
--Amount for Variance Amount
 , p_source_16            IN NUMBER
--Purchasing Encumbrance Option
 , p_source_17            IN VARCHAR2
 , p_source_17_meaning    IN VARCHAR2
--Accrue on Receipt Option
 , p_source_18            IN VARCHAR2
 , p_source_18_meaning    IN VARCHAR2
--Accounting Reversal Indicator
 , p_source_19            IN VARCHAR2
--Distribution Link Type
 , p_source_21            IN VARCHAR2
--Allocation to Main Distribution Identifier
 , p_source_23            IN NUMBER
--Invoice Identifier
 , p_source_24            IN NUMBER
--Business Flow Accounts Payable Application Identifier
 , p_source_25            IN NUMBER
--Business Flow Invoice Distribution Type
 , p_source_26            IN VARCHAR2
--Business Flow Invoice Entity Code
 , p_source_27            IN VARCHAR2
--Business Flow Invoice Distribution Identifier
 , p_source_28            IN NUMBER
--Business Flow Invoice Identifier
 , p_source_29            IN NUMBER
--Invoice Distribution Identifier
 , p_source_30            IN NUMBER
--Payables Encumbrance Upgrade Credit Account
 , p_source_31            IN NUMBER
--Payables Encumbrance Upgrade Credit Amount
 , p_source_32            IN NUMBER
--Invoice Currency Code
 , p_source_33            IN VARCHAR2
--Payables Encumbrance Upgrade Credit Base Amount
 , p_source_34            IN NUMBER
--Payables Encumbrance Upgrade Debit Account
 , p_source_35            IN NUMBER
--Payables Encumbrance Upgrade Debit Amount
 , p_source_36            IN NUMBER
--Payables Encumbrance Upgrade Debit Base Amount
 , p_source_37            IN NUMBER
--Payables Encumbrance Upgrade Option
 , p_source_38            IN VARCHAR2
--Invoice Exchange Date
 , p_source_39            IN DATE
--Invoice Exchange Rate
 , p_source_40            IN NUMBER
--Invoice Exchange Rate Type
 , p_source_41            IN VARCHAR2
--Deferred Accounting End Date
 , p_source_43            IN DATE
--Deferred Accounting Option
 , p_source_44            IN VARCHAR2
--Deferred Accounting Start Date
 , p_source_45            IN DATE
--Override Accounted Amount Indicator
 , p_source_46            IN VARCHAR2
 , p_source_46_meaning    IN VARCHAR2
--Invoice Supplier Identifier
 , p_source_47            IN NUMBER
--Invoice Supplier Site Identifier
 , p_source_48            IN NUMBER
--Third Party Type
 , p_source_49            IN VARCHAR2
--Parent Reversal Identifier
 , p_source_50            IN NUMBER
--Invoice Distribution Tax Line Identifier
 , p_source_52            IN NUMBER
--Invoice Distribution Tax Distribution Identifier from Tax
 , p_source_53            IN NUMBER
--Invoice Distribution Summary Tax Line Identifier
 , p_source_54            IN NUMBER
--Payables Upgrade Credit Encumbrance Type Identifier
 , p_source_55            IN NUMBER
--Payables Upgrade Debit Encumbrance Type Identifier
 , p_source_56            IN NUMBER
--Quantity Variance Amount
 , p_source_81            IN NUMBER
--Quantity Variance Amount in Ledger Currency
 , p_source_82            IN NUMBER
)
IS

l_component_type              VARCHAR2(80);
l_component_code              VARCHAR2(30);
l_component_type_code         VARCHAR2(1);
l_component_appl_id           INTEGER;
l_amb_context_code            VARCHAR2(30);
l_entity_code                 VARCHAR2(30);
l_event_class_code            VARCHAR2(30);
l_ae_header_id                NUMBER;
l_event_type_code             VARCHAR2(30);
l_line_definition_code        VARCHAR2(30);
l_line_definition_owner_code  VARCHAR2(1);
--
-- adr variables
l_segment                     VARCHAR2(30);
l_ccid                        NUMBER;
l_adr_transaction_coa_id      NUMBER;
l_adr_accounting_coa_id       NUMBER;
l_adr_flexfield_segment_code  VARCHAR2(30);
l_adr_flex_value_set_id       NUMBER;
l_adr_value_type_code         VARCHAR2(30);
l_adr_value_combination_id    NUMBER;
l_adr_value_segment_code      VARCHAR2(30);

l_bflow_method_code           VARCHAR2(30);  -- 4219869 Business Flow
l_bflow_class_code            VARCHAR2(30);  -- 4219869 Business Flow
l_inherit_desc_flag           VARCHAR2(1);   -- 4219869 Business Flow
l_budgetary_control_flag      VARCHAR2(1);   -- 4458381 Public Sector Enh

-- 4262811 Variables ------------------------------------------------------------------------------------------
l_entered_amt_idx             NUMBER;
l_accted_amt_idx              NUMBER;
l_acc_rev_flag                VARCHAR2(1);
l_accrual_line_num            NUMBER;
l_tmp_amt                     NUMBER;
l_acc_rev_natural_side_code   VARCHAR2(1);

l_num_entries                 NUMBER;
l_gl_dates                    xla_ae_journal_entry_pkg.t_array_date;
l_accted_amts                 xla_ae_journal_entry_pkg.t_array_num;
l_entered_amts                xla_ae_journal_entry_pkg.t_array_num;
l_period_names                xla_ae_journal_entry_pkg.t_array_V15L;
l_recog_line_1                NUMBER;
l_recog_line_2                NUMBER;

l_bflow_applied_to_amt_idx    NUMBER;                                -- 5132302
l_bflow_applied_to_amt        NUMBER;                                -- 5132302
l_bflow_applied_to_amts       xla_ae_journal_entry_pkg.t_array_num;  -- 5132302

l_event_id                    NUMBER;  -- To handle MPA header Description: xla_ae_header_pkg.SetHdrDescription

--l_rounding_ccy                VARCHAR2(15); -- To handle MPA rounding  4262811b
l_same_currency               BOOLEAN;        -- To handle MPA rounding  4262811b

---------------------------------------------------------------------------------------------------------------


--
-- bulk performance
--
l_balance_type_code           VARCHAR2(1);
l_rec_acct_attrs              XLA_AE_LINES_PKG.t_rec_acct_attrs;
l_log_module                  VARCHAR2(240);

--
-- Upgrade strategy
--
l_actual_upg_option           VARCHAR2(1);
l_enc_upg_option           VARCHAR2(1);

--
BEGIN
--
IF g_log_enabled THEN
      l_log_module := C_DEFAULT_MODULE||'.AcctLineType_55';
END IF;
--
IF (C_LEVEL_PROCEDURE >= g_log_level) THEN

      trace
         (p_msg      => 'BEGIN of AcctLineType_55'
         ,p_level    => C_LEVEL_PROCEDURE
         ,p_module   => l_log_module);

END IF;
--
l_component_type             := 'AMB_JLT';
l_component_code             := 'AP_QUANTITY_VARIANCE_DM_ENC_DR';
l_component_type_code        := 'S';
l_component_appl_id          :=  200;
l_amb_context_code           := 'DEFAULT';
l_entity_code                := 'AP_INVOICES';
l_event_class_code           := 'DEBIT MEMOS';
l_event_type_code            := 'DEBIT MEMOS_ALL';
l_line_definition_owner_code := 'S';
l_line_definition_code       := 'ENC_DM_ALL';
--
l_balance_type_code          := 'E';
l_segment                     := NULL;
l_ccid                        := NULL;
l_adr_transaction_coa_id      := NULL;
l_adr_accounting_coa_id       := NULL;
l_adr_flexfield_segment_code  := NULL;
l_adr_flex_value_set_id       := NULL;
l_adr_value_type_code         := NULL;
l_adr_value_combination_id    := NULL;
l_adr_value_segment_code      := NULL;

l_bflow_method_code          := 'NONE';   -- 4219869 Business Flow
l_bflow_class_code           := 'AP_INV_ENCUM';    -- 4219869 Business Flow
l_inherit_desc_flag          := 'N';   -- 4219869 Business Flow
l_budgetary_control_flag     := 'Y';

l_bflow_applied_to_amt_idx   := NULL; -- 5132302
l_bflow_applied_to_amt       := NULL; -- 5132302
l_entered_amt_idx            := NULL;          -- 4262811
l_accted_amt_idx             := NULL;          -- 4262811
l_acc_rev_flag               := NULL;          -- 4262811
l_accrual_line_num           := NULL;          -- 4262811
l_tmp_amt                    := NULL;          -- 4262811
--
 
IF XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id = XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.ledger_id OR
    l_balance_type_code <> 'B' THEN
IF NVL(p_source_15,'
') =  'ITEM' AND 
p_source_16 IS NOT NULL AND 
NVL(p_source_17,'
') =  'Y' AND 
NVL(p_source_18,'
') <>  'Y'
 THEN 

   --
   XLA_AE_LINES_PKG.SetNewLine;

   p_balance_type_code          := l_balance_type_code;
   -- set the flag so later we will know whether the gain loss line needs to be created
   
   IF(l_balance_type_code = 'A' and p_actual_flag is null) THEN
     p_actual_flag :='A';
   END IF;

   --
   -- bulk performance
   --
   XLA_AE_LINES_PKG.set_ae_header_id (p_ae_header_id => p_event_id ,
                                      p_header_num   => 0); -- 4262811
   --
   -- set accounting line options
   --
   l_ae_header_id:= xla_ae_lines_pkg.SetAcctLineOption(
           p_natural_side_code          => 'D'
         , p_gain_or_loss_flag          => 'N'
         , p_gl_transfer_mode_code      => 'S'
         , p_acct_entry_type_code       => 'E'
         , p_switch_side_flag           => 'Y'
         , p_merge_duplicate_code       => 'N'
         );
   --
   l_acc_rev_natural_side_code := 'C';  -- 4262811
   -- 
   --
   -- set accounting line type info
   --
   xla_ae_lines_pkg.SetAcctLineType
      (p_component_type             => l_component_type
      ,p_event_type_code            => l_event_type_code
      ,p_line_definition_owner_code => l_line_definition_owner_code
      ,p_line_definition_code       => l_line_definition_code
      ,p_accounting_line_code       => l_component_code
      ,p_accounting_line_type_code  => l_component_type_code
      ,p_accounting_line_appl_id    => l_component_appl_id
      ,p_amb_context_code           => l_amb_context_code
      ,p_entity_code                => l_entity_code
      ,p_event_class_code           => l_event_class_code);
   --
   -- set accounting class
   --
   xla_ae_lines_pkg.SetAcctClass(
           p_accounting_class_code  => 'QV'
         , p_ae_header_id           => l_ae_header_id
         );

   --
   -- set rounding class
   --
   XLA_AE_LINES_PKG.g_rec_lines.array_rounding_class(XLA_AE_LINES_PKG.g_LineNumber) :=
                      'QV';

   --
   xla_ae_lines_pkg.g_rec_lines.array_calculate_acctd_flag(xla_ae_lines_pkg.g_LineNumber) := p_calculate_acctd_flag;
   xla_ae_lines_pkg.g_rec_lines.array_calculate_g_l_flag(xla_ae_lines_pkg.g_LineNumber) := p_calculate_g_l_flag;
   --
   -- bulk performance
   --
   XLA_AE_LINES_PKG.g_rec_lines.array_balance_type_code(XLA_AE_LINES_PKG.g_LineNumber) := l_balance_type_code;

   XLA_AE_LINES_PKG.g_rec_lines.array_ledger_id(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id;

   -- 4955764
   XLA_AE_LINES_PKG.g_rec_lines.array_gl_date(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_HEADER_PKG.g_rec_header_new.array_gl_date(g_array_event(p_event_id).array_value_num('header_index'));

   -- 4458381 Public Sector Enh
      XLA_AE_LINES_PKG.g_rec_lines.array_encumbrance_type_id(XLA_AE_LINES_PKG.g_LineNumber) := 1060;
   --
   -- set accounting attributes for the line type
   --
   l_entered_amt_idx := 23;
   l_accted_amt_idx  := 28;
   l_bflow_applied_to_amt_idx  := NULL;  -- 5132302
   l_rec_acct_attrs.array_acct_attr_code(1) := 'ACCOUNTING_REVERSAL_OPTION';
   l_rec_acct_attrs.array_char_value(1)  := p_source_19;
   l_rec_acct_attrs.array_acct_attr_code(2) := 'ALLOC_TO_APPLICATION_ID';
   l_rec_acct_attrs.array_num_value(2)  := 
xla_ae_sources_pkg.GetSystemSourceNum(
   p_source_code           => 'XLA_EVENT_APPL_ID'
 , p_source_type_code      => 'Y'
 , p_source_application_id =>  602
);
   l_rec_acct_attrs.array_acct_attr_code(3) := 'ALLOC_TO_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(3)  := p_source_21;
   l_rec_acct_attrs.array_acct_attr_code(4) := 'ALLOC_TO_ENTITY_CODE';
   l_rec_acct_attrs.array_char_value(4)  := 
xla_ae_sources_pkg.GetSystemSourceChar(
   p_source_code           => 'XLA_ENTITY_CODE'
 , p_source_type_code      => 'Y'
 , p_source_application_id =>  602
);
   l_rec_acct_attrs.array_acct_attr_code(5) := 'ALLOC_TO_FIRST_DIST_ID';
   l_rec_acct_attrs.array_num_value(5)  :=  to_char(p_source_23);
   l_rec_acct_attrs.array_acct_attr_code(6) := 'ALLOC_TO_FIRST_SYS_TRAN_ID';
   l_rec_acct_attrs.array_num_value(6)  :=  to_char(p_source_24);
   l_rec_acct_attrs.array_acct_attr_code(7) := 'APPLIED_TO_APPLICATION_ID';
   l_rec_acct_attrs.array_num_value(7)  := p_source_25;
   l_rec_acct_attrs.array_acct_attr_code(8) := 'APPLIED_TO_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(8)  := p_source_26;
   l_rec_acct_attrs.array_acct_attr_code(9) := 'APPLIED_TO_ENTITY_CODE';
   l_rec_acct_attrs.array_char_value(9)  := p_source_27;
   l_rec_acct_attrs.array_acct_attr_code(10) := 'APPLIED_TO_FIRST_DIST_ID';
   l_rec_acct_attrs.array_num_value(10)  :=  to_char(p_source_28);
   l_rec_acct_attrs.array_acct_attr_code(11) := 'APPLIED_TO_FIRST_SYS_TRAN_ID';
   l_rec_acct_attrs.array_num_value(11)  :=  to_char(p_source_29);
   l_rec_acct_attrs.array_acct_attr_code(12) := 'DISTRIBUTION_IDENTIFIER_1';
   l_rec_acct_attrs.array_num_value(12)  :=  to_char(p_source_30);
   l_rec_acct_attrs.array_acct_attr_code(13) := 'DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(13)  := p_source_21;
   l_rec_acct_attrs.array_acct_attr_code(14) := 'ENC_UPG_CR_CCID';
   l_rec_acct_attrs.array_num_value(14)  := p_source_31;
   l_rec_acct_attrs.array_acct_attr_code(15) := 'ENC_UPG_CR_ENTERED_AMT';
   l_rec_acct_attrs.array_num_value(15)  := p_source_32;
   l_rec_acct_attrs.array_acct_attr_code(16) := 'ENC_UPG_CR_ENTERED_CURR';
   l_rec_acct_attrs.array_char_value(16)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(17) := 'ENC_UPG_CR_LEDGER_AMT';
   l_rec_acct_attrs.array_num_value(17)  := p_source_34;
   l_rec_acct_attrs.array_acct_attr_code(18) := 'ENC_UPG_DR_CCID';
   l_rec_acct_attrs.array_num_value(18)  := p_source_35;
   l_rec_acct_attrs.array_acct_attr_code(19) := 'ENC_UPG_DR_ENTERED_AMT';
   l_rec_acct_attrs.array_num_value(19)  := p_source_36;
   l_rec_acct_attrs.array_acct_attr_code(20) := 'ENC_UPG_DR_ENTERED_CURR';
   l_rec_acct_attrs.array_char_value(20)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(21) := 'ENC_UPG_DR_LEDGER_AMT';
   l_rec_acct_attrs.array_num_value(21)  := p_source_37;
   l_rec_acct_attrs.array_acct_attr_code(22) := 'ENC_UPG_OPTION';
   l_rec_acct_attrs.array_char_value(22)  := p_source_38;
   l_rec_acct_attrs.array_acct_attr_code(23) := 'ENTERED_CURRENCY_AMOUNT';
   l_rec_acct_attrs.array_num_value(23)  := p_source_81;
   l_rec_acct_attrs.array_acct_attr_code(24) := 'ENTERED_CURRENCY_CODE';
   l_rec_acct_attrs.array_char_value(24)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(25) := 'EXCHANGE_DATE';
   l_rec_acct_attrs.array_date_value(25)  := p_source_39;
   l_rec_acct_attrs.array_acct_attr_code(26) := 'EXCHANGE_RATE';
   l_rec_acct_attrs.array_num_value(26)  := p_source_40;
   l_rec_acct_attrs.array_acct_attr_code(27) := 'EXCHANGE_RATE_TYPE';
   l_rec_acct_attrs.array_char_value(27)  := p_source_41;
   l_rec_acct_attrs.array_acct_attr_code(28) := 'LEDGER_AMOUNT';
   l_rec_acct_attrs.array_num_value(28)  := p_source_82;
   l_rec_acct_attrs.array_acct_attr_code(29) := 'MULTIPERIOD_END_DATE';
   l_rec_acct_attrs.array_date_value(29)  := p_source_43;
   l_rec_acct_attrs.array_acct_attr_code(30) := 'MULTIPERIOD_OPTION';
   l_rec_acct_attrs.array_char_value(30)  := p_source_44;
   l_rec_acct_attrs.array_acct_attr_code(31) := 'MULTIPERIOD_START_DATE';
   l_rec_acct_attrs.array_date_value(31)  := p_source_45;
   l_rec_acct_attrs.array_acct_attr_code(32) := 'OVERRIDE_ACCTD_AMT_FLAG';
   l_rec_acct_attrs.array_char_value(32)  := p_source_46;
   l_rec_acct_attrs.array_acct_attr_code(33) := 'PARTY_ID';
   l_rec_acct_attrs.array_num_value(33)  := p_source_47;
   l_rec_acct_attrs.array_acct_attr_code(34) := 'PARTY_SITE_ID';
   l_rec_acct_attrs.array_num_value(34)  := p_source_48;
   l_rec_acct_attrs.array_acct_attr_code(35) := 'PARTY_TYPE';
   l_rec_acct_attrs.array_char_value(35)  := p_source_49;
   l_rec_acct_attrs.array_acct_attr_code(36) := 'REVERSED_DISTRIBUTION_ID1';
   l_rec_acct_attrs.array_num_value(36)  :=  to_char(p_source_50);
   l_rec_acct_attrs.array_acct_attr_code(37) := 'REVERSED_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(37)  := p_source_21;
   l_rec_acct_attrs.array_acct_attr_code(38) := 'TAX_LINE_REF_ID';
   l_rec_acct_attrs.array_num_value(38)  := p_source_52;
   l_rec_acct_attrs.array_acct_attr_code(39) := 'TAX_REC_NREC_DIST_REF_ID';
   l_rec_acct_attrs.array_num_value(39)  := p_source_53;
   l_rec_acct_attrs.array_acct_attr_code(40) := 'TAX_SUMMARY_LINE_REF_ID';
   l_rec_acct_attrs.array_num_value(40)  := p_source_54;
   l_rec_acct_attrs.array_acct_attr_code(41) := 'UPG_CR_ENC_TYPE_ID';
   l_rec_acct_attrs.array_num_value(41)  := p_source_55;
   l_rec_acct_attrs.array_acct_attr_code(42) := 'UPG_DR_ENC_TYPE_ID';
   l_rec_acct_attrs.array_num_value(42)  := p_source_56;

   XLA_AE_LINES_PKG.SetLineAcctAttrs(l_rec_acct_attrs);
   p_gain_or_loss_ref  := XLA_AE_LINES_PKG.g_rec_lines.array_gain_or_loss_ref(XLA_AE_LINES_PKG.g_LineNumber);

   ---------------------------------------------------------------------------------------------------------------
   -- 4336173 -- assign Business Flow Class (replace code in xla_ae_lines_pkg.Business_Flow_Validation)
   ---------------------------------------------------------------------------------------------------------------
   XLA_AE_LINES_PKG.g_rec_lines.array_business_class_code(XLA_AE_LINES_PKG.g_LineNumber) := l_bflow_class_code;

   l_actual_upg_option  := XLA_AE_LINES_PKG.g_rec_lines.array_actual_upg_option(XLA_AE_LINES_PKG.g_LineNumber);
   l_enc_upg_option     := XLA_AE_LINES_PKG.g_rec_lines.array_enc_upg_option(XLA_AE_LINES_PKG.g_LineNumber);

   IF xla_accounting_cache_pkg.GetValueChar
         (p_source_code         => 'LEDGER_CATEGORY_CODE'
         ,p_target_ledger_id    => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id) IN ('PRIMARY','ALC')
   AND l_bflow_method_code = 'PRIOR_ENTRY'
--   AND (l_actual_upg_option = 'Y' OR l_enc_upg_option = 'Y') Bug 4922099
   AND ( (NVL(l_actual_upg_option, 'N') IN ('Y', 'O')) OR
         (NVL(l_enc_upg_option, 'N') IN ('Y', 'O'))
       )
   THEN
         xla_ae_lines_pkg.BflowUpgEntry
           (p_business_method_code    => l_bflow_method_code
           ,p_business_class_code     => l_bflow_class_code
           ,p_balance_type            => l_balance_type_code);
   ELSE
      NULL;
-- No business flow processing for business flow method of NONE.
   END IF;

   --
   -- call analytical criteria
   --
   
   --
   -- call description
   --
   
xla_ae_lines_pkg.SetLineDescription(
   p_ae_header_id => l_ae_header_id
  ,p_description  => Description_2 (
     p_application_id         => p_application_id
   , p_ae_header_id           => l_ae_header_id 
, p_source_1 => p_source_1
   )
);


   --
   -- call ADRs
   -- Bug 4922099
   --
   IF ( (l_bflow_method_code <> 'PRIOR_ENTRY') OR
        (NVL(l_actual_upg_option, 'N') = 'O') OR
        (NVL(l_enc_upg_option, 'N') = 'O')
      )
   THEN
   NULL;
   --
   --
   
  l_ccid := AcctDerRule_7(
           p_application_id           => p_application_id
         , p_ae_header_id             => l_ae_header_id 
, p_source_11 => p_source_11
         , x_transaction_coa_id       => l_adr_transaction_coa_id
         , x_accounting_coa_id        => l_adr_accounting_coa_id
         , x_value_type_code          => l_adr_value_type_code
         , p_side                     => 'NA'
   );

   xla_ae_lines_pkg.set_ccid(
    p_code_combination_id          => l_ccid
  , p_value_type_code              => l_adr_value_type_code
  , p_transaction_coa_id           => l_adr_transaction_coa_id
  , p_accounting_coa_id            => l_adr_accounting_coa_id
  , p_adr_code                     => 'AP_INVOICE_DIST'
  , p_adr_type_code                => 'S'
  , p_component_type               => l_component_type
  , p_component_code               => l_component_code
  , p_component_type_code          => l_component_type_code
  , p_component_appl_id            => l_component_appl_id
  , p_amb_context_code             => l_amb_context_code
  , p_side                         => 'NA'
  );


   --
   --
   END IF;
   --
   -- Bug 4922099
   IF ( ( (NVL(l_actual_upg_option, 'N') = 'O') OR
          (NVL(l_enc_upg_option, 'N') = 'O')
        ) AND
        (l_bflow_method_code = 'PRIOR_ENTRY')
      )
   THEN
      IF
      --
      1 = 2
      --
      THEN
      xla_accounting_err_pkg.build_message
                                    (p_appli_s_name            => 'XLA'
                                    ,p_msg_name                => 'XLA_UPG_OVERRIDE_ADR_UNDEFINED'
                                    ,p_token_1                 => 'LINE_NUMBER'
                                    ,p_value_1                 => XLA_AE_LINES_PKG.g_LineNumber
                                    ,p_token_2                 => 'LINE_TYPE_NAME'
                                    ,p_value_2                 => XLA_AE_SOURCES_PKG.GetComponentName (
                                                                             l_component_type
                                                                            ,l_component_code
                                                                            ,l_component_type_code
                                                                            ,l_component_appl_id
                                                                            ,l_amb_context_code
                                                                            ,l_entity_code
                                                                            ,l_event_class_code
                                                                           )
                                    ,p_token_3                 => 'OWNER'
                                    ,p_value_3                 => xla_lookups_pkg.get_meaning(
                                                                          p_lookup_type     => 'XLA_OWNER_TYPE'
                                                                          ,p_lookup_code    => l_component_type_code
                                                                         )
                                    ,p_token_4                 => 'PRODUCT_NAME'
                                    ,p_value_4                 => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.application_name
                                    ,p_entity_id               => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.entity_id
                                    ,p_event_id                => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.event_id
                                    ,p_ledger_id               => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id
                                    ,p_ae_header_id            =>  NULL
                                       );

        IF (C_LEVEL_ERROR>= g_log_level) THEN
                 trace
                      (p_msg      => 'ERROR: XLA_UPG_OVERRIDE_ADR_UNDEFINED'
                      ,p_level    => C_LEVEL_ERROR
                      ,p_module   => l_log_module);
        END IF;
      END IF;
   END IF;
   --
   --
   ------------------------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- NOTE: XLA_AE_LINES_PKG.ValidateCurrentLine should NOT be generated if business flow method is
   -- Prior Entry.  Currently, the following code is always generated.
   ------------------------------------------------------------------------------------------------
   XLA_AE_LINES_PKG.ValidateCurrentLine;

   ------------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- Populated credit and debit amounts -- Need to generate this within IF <condition>
   ------------------------------------------------------------------------------------
   XLA_AE_LINES_PKG.SetDebitCreditAmounts;

   ----------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- Update journal entry status -- Need to generate this within IF <condition>
   ----------------------------------------------------------------------------------
   XLA_AE_JOURNAL_ENTRY_PKG.UpdateJournalEntryStatus
         (p_hdr_idx => g_array_event(p_event_id).array_value_num('header_index')
         ,p_balance_type_code => l_balance_type_code
         );

   -------------------------------------------------------------------------------------------
   -- 4262811 - Generate the Accrual Reversal lines
   -------------------------------------------------------------------------------------------
   BEGIN
      l_acc_rev_flag := XLA_AE_HEADER_PKG.g_rec_header_new.array_accrual_reversal_flag
                              (g_array_event(p_event_id).array_value_num('header_index'));
      IF l_acc_rev_flag IS NULL THEN
         l_acc_rev_flag := 'N';
      END IF;
   EXCEPTION
      WHEN OTHERS THEN
         l_acc_rev_flag := 'N';
   END;
   --
   IF (l_acc_rev_flag = 'Y') THEN

       -- 4645092  ------------------------------------------------------------------------------
       -- To allow MPA report to determine if it should generate report process
       XLA_ACCOUNTING_PKG.g_mpa_accrual_exists := 'Y';
       ------------------------------------------------------------------------------------------

       l_accrual_line_num := XLA_AE_LINES_PKG.g_LineNumber;
       XLA_AE_LINES_PKG.CopyLineInfo(l_accrual_line_num);
   -- added call to set_ccid to execute mapping  for secondary accrual reversal entries bug 7444204
   -- call ADRs
   -- Bug 4922099
   --
   IF ( (l_bflow_method_code <> 'PRIOR_ENTRY') OR
        (NVL(l_actual_upg_option, 'N') = 'O') OR
        (NVL(l_enc_upg_option, 'N') = 'O')
      )
   THEN
   NULL;
   --
   --
   
  l_ccid := AcctDerRule_7(
           p_application_id           => p_application_id
         , p_ae_header_id             => l_ae_header_id 
, p_source_11 => p_source_11
         , x_transaction_coa_id       => l_adr_transaction_coa_id
         , x_accounting_coa_id        => l_adr_accounting_coa_id
         , x_value_type_code          => l_adr_value_type_code
         , p_side                     => 'NA'
   );

   xla_ae_lines_pkg.set_ccid(
    p_code_combination_id          => l_ccid
  , p_value_type_code              => l_adr_value_type_code
  , p_transaction_coa_id           => l_adr_transaction_coa_id
  , p_accounting_coa_id            => l_adr_accounting_coa_id
  , p_adr_code                     => 'AP_INVOICE_DIST'
  , p_adr_type_code                => 'S'
  , p_component_type               => l_component_type
  , p_component_code               => l_component_code
  , p_component_type_code          => l_component_type_code
  , p_component_appl_id            => l_component_appl_id
  , p_amb_context_code             => l_amb_context_code
  , p_side                         => 'NA'
  );


   --
   --
   END IF;

       --
       -- Update the line information that should be overwritten
       --
       XLA_AE_LINES_PKG.set_ae_header_id(p_ae_header_id => p_event_id ,
                                         p_header_num   => 1);
       XLA_AE_LINES_PKG.g_rec_lines.array_header_num(XLA_AE_LINES_PKG.g_LineNumber)  :=1;

       XLA_AE_LINES_PKG.g_rec_lines.array_business_class_code(XLA_AE_LINES_PKG.g_LineNumber) := NULL; -- 4669271

       IF l_bflow_method_code <> 'NONE' THEN  -- 4655713b
          XLA_AE_LINES_PKG.g_rec_lines.array_reversal_code(XLA_AE_LINES_PKG.g_LineNumber) := CONCAT('MPA_',l_bflow_method_code);
       END IF;

      --
      -- Depending on the Reversal Method setup, do a switch side or changes sign for the amounts
      --
      IF (XLA_AE_JOURNAL_ENTRY_PKG.g_cache_ledgers_info.ledger_reversal_option = 'SIDE') THEN
          XLA_AE_LINES_PKG.g_rec_lines.array_natural_side_code(XLA_AE_LINES_PKG.g_LineNumber) :=  l_acc_rev_natural_side_code;
      ELSE
          ---------------------------------------------------------------------------------------------------
          -- 4262811a Switch Sign
          ---------------------------------------------------------------------------------------------------
          XLA_AE_LINES_PKG.g_rec_lines.array_switch_side_flag(XLA_AE_LINES_PKG.g_LineNumber) := 'N';  -- 5052518
          XLA_AE_LINES_PKG.g_rec_lines.array_ledger_amount(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_ledger_amount(XLA_AE_LINES_PKG.g_LineNumber) * -1;
          XLA_AE_LINES_PKG.g_rec_lines.array_entered_amount(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_entered_amount(XLA_AE_LINES_PKG.g_LineNumber) * -1;
          -- 5132302
          XLA_AE_LINES_PKG.g_rec_lines.array_bflow_applied_to_amt(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_bflow_applied_to_amt(XLA_AE_LINES_PKG.g_LineNumber) * -1;

      END IF;

      -- 4955764
      XLA_AE_LINES_PKG.g_rec_lines.array_gl_date(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_HEADER_PKG.g_rec_header_new.array_gl_date(g_array_event(p_event_id).array_value_num('acc_rev_header_index'));


      XLA_AE_LINES_PKG.ValidateCurrentLine;
      XLA_AE_LINES_PKG.SetDebitCreditAmounts;

      XLA_AE_JOURNAL_ENTRY_PKG.UpdateJournalEntryStatus
               (p_hdr_idx           => g_array_event(p_event_id).array_value_num('acc_rev_header_index')
               ,p_balance_type_code => l_balance_type_code);

   END IF;

   -----------------------------------------------------------------------------------------
   -- 4262811 Multiperiod Accounting
   -----------------------------------------------------------------------------------------
     -- No MPA option is assigned.


END IF;
END IF;
--

--
IF (C_LEVEL_PROCEDURE >= g_log_level) THEN
   trace
      (p_msg      => 'END of AcctLineType_55'
      ,p_level    => C_LEVEL_PROCEDURE
      ,p_module   => l_log_module);
END IF;
--
EXCEPTION
  WHEN xla_exceptions_pkg.application_exception THEN
      RAISE;
  WHEN OTHERS THEN
       xla_exceptions_pkg.raise_message
           (p_location => 'XLA_00200_AAD_S_000010_BC_PKG.AcctLineType_55');
END AcctLineType_55;
--

---------------------------------------
--
-- PRIVATE FUNCTION
--         AcctLineType_56
--
---------------------------------------
PROCEDURE AcctLineType_56 (
  p_application_id        IN NUMBER
 ,p_event_id              IN NUMBER
 ,p_calculate_acctd_flag  IN VARCHAR2
 ,p_calculate_g_l_flag    IN VARCHAR2
 ,p_actual_flag           IN OUT VARCHAR2
 ,p_balance_type_code     OUT VARCHAR2
 ,p_gain_or_loss_ref      OUT VARCHAR2
 
--Invoice Distribution Description
 , p_source_1            IN VARCHAR2
--Invoice Distribution Account
 , p_source_11            IN NUMBER
--Invoice Distribution Type
 , p_source_15            IN VARCHAR2
 , p_source_15_meaning    IN VARCHAR2
--Amount for Variance Amount
 , p_source_16            IN NUMBER
--Purchasing Encumbrance Option
 , p_source_17            IN VARCHAR2
 , p_source_17_meaning    IN VARCHAR2
--Accrue on Receipt Option
 , p_source_18            IN VARCHAR2
 , p_source_18_meaning    IN VARCHAR2
--Accounting Reversal Indicator
 , p_source_19            IN VARCHAR2
--Distribution Link Type
 , p_source_21            IN VARCHAR2
--Allocation to Main Distribution Identifier
 , p_source_23            IN NUMBER
--Invoice Identifier
 , p_source_24            IN NUMBER
--Business Flow Accounts Payable Application Identifier
 , p_source_25            IN NUMBER
--Business Flow Invoice Distribution Type
 , p_source_26            IN VARCHAR2
--Business Flow Invoice Entity Code
 , p_source_27            IN VARCHAR2
--Business Flow Invoice Distribution Identifier
 , p_source_28            IN NUMBER
--Business Flow Invoice Identifier
 , p_source_29            IN NUMBER
--Invoice Distribution Identifier
 , p_source_30            IN NUMBER
--Payables Encumbrance Upgrade Credit Account
 , p_source_31            IN NUMBER
--Payables Encumbrance Upgrade Credit Amount
 , p_source_32            IN NUMBER
--Invoice Currency Code
 , p_source_33            IN VARCHAR2
--Payables Encumbrance Upgrade Credit Base Amount
 , p_source_34            IN NUMBER
--Payables Encumbrance Upgrade Debit Account
 , p_source_35            IN NUMBER
--Payables Encumbrance Upgrade Debit Amount
 , p_source_36            IN NUMBER
--Payables Encumbrance Upgrade Debit Base Amount
 , p_source_37            IN NUMBER
--Payables Encumbrance Upgrade Option
 , p_source_38            IN VARCHAR2
--Invoice Exchange Date
 , p_source_39            IN DATE
--Invoice Exchange Rate
 , p_source_40            IN NUMBER
--Invoice Exchange Rate Type
 , p_source_41            IN VARCHAR2
--Deferred Accounting End Date
 , p_source_43            IN DATE
--Deferred Accounting Option
 , p_source_44            IN VARCHAR2
--Deferred Accounting Start Date
 , p_source_45            IN DATE
--Override Accounted Amount Indicator
 , p_source_46            IN VARCHAR2
 , p_source_46_meaning    IN VARCHAR2
--Invoice Supplier Identifier
 , p_source_47            IN NUMBER
--Invoice Supplier Site Identifier
 , p_source_48            IN NUMBER
--Third Party Type
 , p_source_49            IN VARCHAR2
--Parent Reversal Identifier
 , p_source_50            IN NUMBER
--Invoice Distribution Statistical Amount
 , p_source_51            IN NUMBER
--Invoice Distribution Tax Line Identifier
 , p_source_52            IN NUMBER
--Invoice Distribution Tax Distribution Identifier from Tax
 , p_source_53            IN NUMBER
--Invoice Distribution Summary Tax Line Identifier
 , p_source_54            IN NUMBER
--Payables Upgrade Credit Encumbrance Type Identifier
 , p_source_55            IN NUMBER
--Payables Upgrade Debit Encumbrance Type Identifier
 , p_source_56            IN NUMBER
--Quantity Variance Amount
 , p_source_81            IN NUMBER
--Quantity Variance Amount in Ledger Currency
 , p_source_82            IN NUMBER
)
IS

l_component_type              VARCHAR2(80);
l_component_code              VARCHAR2(30);
l_component_type_code         VARCHAR2(1);
l_component_appl_id           INTEGER;
l_amb_context_code            VARCHAR2(30);
l_entity_code                 VARCHAR2(30);
l_event_class_code            VARCHAR2(30);
l_ae_header_id                NUMBER;
l_event_type_code             VARCHAR2(30);
l_line_definition_code        VARCHAR2(30);
l_line_definition_owner_code  VARCHAR2(1);
--
-- adr variables
l_segment                     VARCHAR2(30);
l_ccid                        NUMBER;
l_adr_transaction_coa_id      NUMBER;
l_adr_accounting_coa_id       NUMBER;
l_adr_flexfield_segment_code  VARCHAR2(30);
l_adr_flex_value_set_id       NUMBER;
l_adr_value_type_code         VARCHAR2(30);
l_adr_value_combination_id    NUMBER;
l_adr_value_segment_code      VARCHAR2(30);

l_bflow_method_code           VARCHAR2(30);  -- 4219869 Business Flow
l_bflow_class_code            VARCHAR2(30);  -- 4219869 Business Flow
l_inherit_desc_flag           VARCHAR2(1);   -- 4219869 Business Flow
l_budgetary_control_flag      VARCHAR2(1);   -- 4458381 Public Sector Enh

-- 4262811 Variables ------------------------------------------------------------------------------------------
l_entered_amt_idx             NUMBER;
l_accted_amt_idx              NUMBER;
l_acc_rev_flag                VARCHAR2(1);
l_accrual_line_num            NUMBER;
l_tmp_amt                     NUMBER;
l_acc_rev_natural_side_code   VARCHAR2(1);

l_num_entries                 NUMBER;
l_gl_dates                    xla_ae_journal_entry_pkg.t_array_date;
l_accted_amts                 xla_ae_journal_entry_pkg.t_array_num;
l_entered_amts                xla_ae_journal_entry_pkg.t_array_num;
l_period_names                xla_ae_journal_entry_pkg.t_array_V15L;
l_recog_line_1                NUMBER;
l_recog_line_2                NUMBER;

l_bflow_applied_to_amt_idx    NUMBER;                                -- 5132302
l_bflow_applied_to_amt        NUMBER;                                -- 5132302
l_bflow_applied_to_amts       xla_ae_journal_entry_pkg.t_array_num;  -- 5132302

l_event_id                    NUMBER;  -- To handle MPA header Description: xla_ae_header_pkg.SetHdrDescription

--l_rounding_ccy                VARCHAR2(15); -- To handle MPA rounding  4262811b
l_same_currency               BOOLEAN;        -- To handle MPA rounding  4262811b

---------------------------------------------------------------------------------------------------------------


--
-- bulk performance
--
l_balance_type_code           VARCHAR2(1);
l_rec_acct_attrs              XLA_AE_LINES_PKG.t_rec_acct_attrs;
l_log_module                  VARCHAR2(240);

--
-- Upgrade strategy
--
l_actual_upg_option           VARCHAR2(1);
l_enc_upg_option           VARCHAR2(1);

--
BEGIN
--
IF g_log_enabled THEN
      l_log_module := C_DEFAULT_MODULE||'.AcctLineType_56';
END IF;
--
IF (C_LEVEL_PROCEDURE >= g_log_level) THEN

      trace
         (p_msg      => 'BEGIN of AcctLineType_56'
         ,p_level    => C_LEVEL_PROCEDURE
         ,p_module   => l_log_module);

END IF;
--
l_component_type             := 'AMB_JLT';
l_component_code             := 'AP_QUANTITY_VARIANCE_PP_ENC_DR';
l_component_type_code        := 'S';
l_component_appl_id          :=  200;
l_amb_context_code           := 'DEFAULT';
l_entity_code                := 'AP_INVOICES';
l_event_class_code           := 'PREPAYMENTS';
l_event_type_code            := 'PREPAYMENTS_ALL';
l_line_definition_owner_code := 'S';
l_line_definition_code       := 'ENC_PREPAY_ALL';
--
l_balance_type_code          := 'E';
l_segment                     := NULL;
l_ccid                        := NULL;
l_adr_transaction_coa_id      := NULL;
l_adr_accounting_coa_id       := NULL;
l_adr_flexfield_segment_code  := NULL;
l_adr_flex_value_set_id       := NULL;
l_adr_value_type_code         := NULL;
l_adr_value_combination_id    := NULL;
l_adr_value_segment_code      := NULL;

l_bflow_method_code          := 'NONE';   -- 4219869 Business Flow
l_bflow_class_code           := 'AP_INV_ENCUM';    -- 4219869 Business Flow
l_inherit_desc_flag          := 'N';   -- 4219869 Business Flow
l_budgetary_control_flag     := 'Y';

l_bflow_applied_to_amt_idx   := NULL; -- 5132302
l_bflow_applied_to_amt       := NULL; -- 5132302
l_entered_amt_idx            := NULL;          -- 4262811
l_accted_amt_idx             := NULL;          -- 4262811
l_acc_rev_flag               := NULL;          -- 4262811
l_accrual_line_num           := NULL;          -- 4262811
l_tmp_amt                    := NULL;          -- 4262811
--
 
IF XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id = XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.ledger_id OR
    l_balance_type_code <> 'B' THEN
IF NVL(p_source_15,'
') =  'ITEM' AND 
p_source_16 IS NOT NULL AND 
NVL(p_source_17,'
') =  'Y' AND 
NVL(p_source_18,'
') <>  'Y'
 THEN 

   --
   XLA_AE_LINES_PKG.SetNewLine;

   p_balance_type_code          := l_balance_type_code;
   -- set the flag so later we will know whether the gain loss line needs to be created
   
   IF(l_balance_type_code = 'A' and p_actual_flag is null) THEN
     p_actual_flag :='A';
   END IF;

   --
   -- bulk performance
   --
   XLA_AE_LINES_PKG.set_ae_header_id (p_ae_header_id => p_event_id ,
                                      p_header_num   => 0); -- 4262811
   --
   -- set accounting line options
   --
   l_ae_header_id:= xla_ae_lines_pkg.SetAcctLineOption(
           p_natural_side_code          => 'D'
         , p_gain_or_loss_flag          => 'N'
         , p_gl_transfer_mode_code      => 'S'
         , p_acct_entry_type_code       => 'E'
         , p_switch_side_flag           => 'Y'
         , p_merge_duplicate_code       => 'N'
         );
   --
   l_acc_rev_natural_side_code := 'C';  -- 4262811
   -- 
   --
   -- set accounting line type info
   --
   xla_ae_lines_pkg.SetAcctLineType
      (p_component_type             => l_component_type
      ,p_event_type_code            => l_event_type_code
      ,p_line_definition_owner_code => l_line_definition_owner_code
      ,p_line_definition_code       => l_line_definition_code
      ,p_accounting_line_code       => l_component_code
      ,p_accounting_line_type_code  => l_component_type_code
      ,p_accounting_line_appl_id    => l_component_appl_id
      ,p_amb_context_code           => l_amb_context_code
      ,p_entity_code                => l_entity_code
      ,p_event_class_code           => l_event_class_code);
   --
   -- set accounting class
   --
   xla_ae_lines_pkg.SetAcctClass(
           p_accounting_class_code  => 'QV'
         , p_ae_header_id           => l_ae_header_id
         );

   --
   -- set rounding class
   --
   XLA_AE_LINES_PKG.g_rec_lines.array_rounding_class(XLA_AE_LINES_PKG.g_LineNumber) :=
                      'QV';

   --
   xla_ae_lines_pkg.g_rec_lines.array_calculate_acctd_flag(xla_ae_lines_pkg.g_LineNumber) := p_calculate_acctd_flag;
   xla_ae_lines_pkg.g_rec_lines.array_calculate_g_l_flag(xla_ae_lines_pkg.g_LineNumber) := p_calculate_g_l_flag;
   --
   -- bulk performance
   --
   XLA_AE_LINES_PKG.g_rec_lines.array_balance_type_code(XLA_AE_LINES_PKG.g_LineNumber) := l_balance_type_code;

   XLA_AE_LINES_PKG.g_rec_lines.array_ledger_id(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id;

   -- 4955764
   XLA_AE_LINES_PKG.g_rec_lines.array_gl_date(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_HEADER_PKG.g_rec_header_new.array_gl_date(g_array_event(p_event_id).array_value_num('header_index'));

   -- 4458381 Public Sector Enh
      XLA_AE_LINES_PKG.g_rec_lines.array_encumbrance_type_id(XLA_AE_LINES_PKG.g_LineNumber) := 1060;
   --
   -- set accounting attributes for the line type
   --
   l_entered_amt_idx := 23;
   l_accted_amt_idx  := 28;
   l_bflow_applied_to_amt_idx  := NULL;  -- 5132302
   l_rec_acct_attrs.array_acct_attr_code(1) := 'ACCOUNTING_REVERSAL_OPTION';
   l_rec_acct_attrs.array_char_value(1)  := p_source_19;
   l_rec_acct_attrs.array_acct_attr_code(2) := 'ALLOC_TO_APPLICATION_ID';
   l_rec_acct_attrs.array_num_value(2)  := 
xla_ae_sources_pkg.GetSystemSourceNum(
   p_source_code           => 'XLA_EVENT_APPL_ID'
 , p_source_type_code      => 'Y'
 , p_source_application_id =>  602
);
   l_rec_acct_attrs.array_acct_attr_code(3) := 'ALLOC_TO_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(3)  := p_source_21;
   l_rec_acct_attrs.array_acct_attr_code(4) := 'ALLOC_TO_ENTITY_CODE';
   l_rec_acct_attrs.array_char_value(4)  := 
xla_ae_sources_pkg.GetSystemSourceChar(
   p_source_code           => 'XLA_ENTITY_CODE'
 , p_source_type_code      => 'Y'
 , p_source_application_id =>  602
);
   l_rec_acct_attrs.array_acct_attr_code(5) := 'ALLOC_TO_FIRST_DIST_ID';
   l_rec_acct_attrs.array_num_value(5)  :=  to_char(p_source_23);
   l_rec_acct_attrs.array_acct_attr_code(6) := 'ALLOC_TO_FIRST_SYS_TRAN_ID';
   l_rec_acct_attrs.array_num_value(6)  :=  to_char(p_source_24);
   l_rec_acct_attrs.array_acct_attr_code(7) := 'APPLIED_TO_APPLICATION_ID';
   l_rec_acct_attrs.array_num_value(7)  := p_source_25;
   l_rec_acct_attrs.array_acct_attr_code(8) := 'APPLIED_TO_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(8)  := p_source_26;
   l_rec_acct_attrs.array_acct_attr_code(9) := 'APPLIED_TO_ENTITY_CODE';
   l_rec_acct_attrs.array_char_value(9)  := p_source_27;
   l_rec_acct_attrs.array_acct_attr_code(10) := 'APPLIED_TO_FIRST_DIST_ID';
   l_rec_acct_attrs.array_num_value(10)  :=  to_char(p_source_28);
   l_rec_acct_attrs.array_acct_attr_code(11) := 'APPLIED_TO_FIRST_SYS_TRAN_ID';
   l_rec_acct_attrs.array_num_value(11)  :=  to_char(p_source_29);
   l_rec_acct_attrs.array_acct_attr_code(12) := 'DISTRIBUTION_IDENTIFIER_1';
   l_rec_acct_attrs.array_num_value(12)  :=  to_char(p_source_30);
   l_rec_acct_attrs.array_acct_attr_code(13) := 'DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(13)  := p_source_21;
   l_rec_acct_attrs.array_acct_attr_code(14) := 'ENC_UPG_CR_CCID';
   l_rec_acct_attrs.array_num_value(14)  := p_source_31;
   l_rec_acct_attrs.array_acct_attr_code(15) := 'ENC_UPG_CR_ENTERED_AMT';
   l_rec_acct_attrs.array_num_value(15)  := p_source_32;
   l_rec_acct_attrs.array_acct_attr_code(16) := 'ENC_UPG_CR_ENTERED_CURR';
   l_rec_acct_attrs.array_char_value(16)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(17) := 'ENC_UPG_CR_LEDGER_AMT';
   l_rec_acct_attrs.array_num_value(17)  := p_source_34;
   l_rec_acct_attrs.array_acct_attr_code(18) := 'ENC_UPG_DR_CCID';
   l_rec_acct_attrs.array_num_value(18)  := p_source_35;
   l_rec_acct_attrs.array_acct_attr_code(19) := 'ENC_UPG_DR_ENTERED_AMT';
   l_rec_acct_attrs.array_num_value(19)  := p_source_36;
   l_rec_acct_attrs.array_acct_attr_code(20) := 'ENC_UPG_DR_ENTERED_CURR';
   l_rec_acct_attrs.array_char_value(20)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(21) := 'ENC_UPG_DR_LEDGER_AMT';
   l_rec_acct_attrs.array_num_value(21)  := p_source_37;
   l_rec_acct_attrs.array_acct_attr_code(22) := 'ENC_UPG_OPTION';
   l_rec_acct_attrs.array_char_value(22)  := p_source_38;
   l_rec_acct_attrs.array_acct_attr_code(23) := 'ENTERED_CURRENCY_AMOUNT';
   l_rec_acct_attrs.array_num_value(23)  := p_source_81;
   l_rec_acct_attrs.array_acct_attr_code(24) := 'ENTERED_CURRENCY_CODE';
   l_rec_acct_attrs.array_char_value(24)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(25) := 'EXCHANGE_DATE';
   l_rec_acct_attrs.array_date_value(25)  := p_source_39;
   l_rec_acct_attrs.array_acct_attr_code(26) := 'EXCHANGE_RATE';
   l_rec_acct_attrs.array_num_value(26)  := p_source_40;
   l_rec_acct_attrs.array_acct_attr_code(27) := 'EXCHANGE_RATE_TYPE';
   l_rec_acct_attrs.array_char_value(27)  := p_source_41;
   l_rec_acct_attrs.array_acct_attr_code(28) := 'LEDGER_AMOUNT';
   l_rec_acct_attrs.array_num_value(28)  := p_source_82;
   l_rec_acct_attrs.array_acct_attr_code(29) := 'MULTIPERIOD_END_DATE';
   l_rec_acct_attrs.array_date_value(29)  := p_source_43;
   l_rec_acct_attrs.array_acct_attr_code(30) := 'MULTIPERIOD_OPTION';
   l_rec_acct_attrs.array_char_value(30)  := p_source_44;
   l_rec_acct_attrs.array_acct_attr_code(31) := 'MULTIPERIOD_START_DATE';
   l_rec_acct_attrs.array_date_value(31)  := p_source_45;
   l_rec_acct_attrs.array_acct_attr_code(32) := 'OVERRIDE_ACCTD_AMT_FLAG';
   l_rec_acct_attrs.array_char_value(32)  := p_source_46;
   l_rec_acct_attrs.array_acct_attr_code(33) := 'PARTY_ID';
   l_rec_acct_attrs.array_num_value(33)  := p_source_47;
   l_rec_acct_attrs.array_acct_attr_code(34) := 'PARTY_SITE_ID';
   l_rec_acct_attrs.array_num_value(34)  := p_source_48;
   l_rec_acct_attrs.array_acct_attr_code(35) := 'PARTY_TYPE';
   l_rec_acct_attrs.array_char_value(35)  := p_source_49;
   l_rec_acct_attrs.array_acct_attr_code(36) := 'REVERSED_DISTRIBUTION_ID1';
   l_rec_acct_attrs.array_num_value(36)  :=  to_char(p_source_50);
   l_rec_acct_attrs.array_acct_attr_code(37) := 'REVERSED_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(37)  := p_source_21;
   l_rec_acct_attrs.array_acct_attr_code(38) := 'STATISTICAL_AMOUNT';
   l_rec_acct_attrs.array_num_value(38)  := p_source_51;
   l_rec_acct_attrs.array_acct_attr_code(39) := 'TAX_LINE_REF_ID';
   l_rec_acct_attrs.array_num_value(39)  := p_source_52;
   l_rec_acct_attrs.array_acct_attr_code(40) := 'TAX_REC_NREC_DIST_REF_ID';
   l_rec_acct_attrs.array_num_value(40)  := p_source_53;
   l_rec_acct_attrs.array_acct_attr_code(41) := 'TAX_SUMMARY_LINE_REF_ID';
   l_rec_acct_attrs.array_num_value(41)  := p_source_54;
   l_rec_acct_attrs.array_acct_attr_code(42) := 'UPG_CR_ENC_TYPE_ID';
   l_rec_acct_attrs.array_num_value(42)  := p_source_55;
   l_rec_acct_attrs.array_acct_attr_code(43) := 'UPG_DR_ENC_TYPE_ID';
   l_rec_acct_attrs.array_num_value(43)  := p_source_56;

   XLA_AE_LINES_PKG.SetLineAcctAttrs(l_rec_acct_attrs);
   p_gain_or_loss_ref  := XLA_AE_LINES_PKG.g_rec_lines.array_gain_or_loss_ref(XLA_AE_LINES_PKG.g_LineNumber);

   ---------------------------------------------------------------------------------------------------------------
   -- 4336173 -- assign Business Flow Class (replace code in xla_ae_lines_pkg.Business_Flow_Validation)
   ---------------------------------------------------------------------------------------------------------------
   XLA_AE_LINES_PKG.g_rec_lines.array_business_class_code(XLA_AE_LINES_PKG.g_LineNumber) := l_bflow_class_code;

   l_actual_upg_option  := XLA_AE_LINES_PKG.g_rec_lines.array_actual_upg_option(XLA_AE_LINES_PKG.g_LineNumber);
   l_enc_upg_option     := XLA_AE_LINES_PKG.g_rec_lines.array_enc_upg_option(XLA_AE_LINES_PKG.g_LineNumber);

   IF xla_accounting_cache_pkg.GetValueChar
         (p_source_code         => 'LEDGER_CATEGORY_CODE'
         ,p_target_ledger_id    => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id) IN ('PRIMARY','ALC')
   AND l_bflow_method_code = 'PRIOR_ENTRY'
--   AND (l_actual_upg_option = 'Y' OR l_enc_upg_option = 'Y') Bug 4922099
   AND ( (NVL(l_actual_upg_option, 'N') IN ('Y', 'O')) OR
         (NVL(l_enc_upg_option, 'N') IN ('Y', 'O'))
       )
   THEN
         xla_ae_lines_pkg.BflowUpgEntry
           (p_business_method_code    => l_bflow_method_code
           ,p_business_class_code     => l_bflow_class_code
           ,p_balance_type            => l_balance_type_code);
   ELSE
      NULL;
-- No business flow processing for business flow method of NONE.
   END IF;

   --
   -- call analytical criteria
   --
   
   --
   -- call description
   --
   
xla_ae_lines_pkg.SetLineDescription(
   p_ae_header_id => l_ae_header_id
  ,p_description  => Description_2 (
     p_application_id         => p_application_id
   , p_ae_header_id           => l_ae_header_id 
, p_source_1 => p_source_1
   )
);


   --
   -- call ADRs
   -- Bug 4922099
   --
   IF ( (l_bflow_method_code <> 'PRIOR_ENTRY') OR
        (NVL(l_actual_upg_option, 'N') = 'O') OR
        (NVL(l_enc_upg_option, 'N') = 'O')
      )
   THEN
   NULL;
   --
   --
   
  l_ccid := AcctDerRule_7(
           p_application_id           => p_application_id
         , p_ae_header_id             => l_ae_header_id 
, p_source_11 => p_source_11
         , x_transaction_coa_id       => l_adr_transaction_coa_id
         , x_accounting_coa_id        => l_adr_accounting_coa_id
         , x_value_type_code          => l_adr_value_type_code
         , p_side                     => 'NA'
   );

   xla_ae_lines_pkg.set_ccid(
    p_code_combination_id          => l_ccid
  , p_value_type_code              => l_adr_value_type_code
  , p_transaction_coa_id           => l_adr_transaction_coa_id
  , p_accounting_coa_id            => l_adr_accounting_coa_id
  , p_adr_code                     => 'AP_INVOICE_DIST'
  , p_adr_type_code                => 'S'
  , p_component_type               => l_component_type
  , p_component_code               => l_component_code
  , p_component_type_code          => l_component_type_code
  , p_component_appl_id            => l_component_appl_id
  , p_amb_context_code             => l_amb_context_code
  , p_side                         => 'NA'
  );


   --
   --
   END IF;
   --
   -- Bug 4922099
   IF ( ( (NVL(l_actual_upg_option, 'N') = 'O') OR
          (NVL(l_enc_upg_option, 'N') = 'O')
        ) AND
        (l_bflow_method_code = 'PRIOR_ENTRY')
      )
   THEN
      IF
      --
      1 = 2
      --
      THEN
      xla_accounting_err_pkg.build_message
                                    (p_appli_s_name            => 'XLA'
                                    ,p_msg_name                => 'XLA_UPG_OVERRIDE_ADR_UNDEFINED'
                                    ,p_token_1                 => 'LINE_NUMBER'
                                    ,p_value_1                 => XLA_AE_LINES_PKG.g_LineNumber
                                    ,p_token_2                 => 'LINE_TYPE_NAME'
                                    ,p_value_2                 => XLA_AE_SOURCES_PKG.GetComponentName (
                                                                             l_component_type
                                                                            ,l_component_code
                                                                            ,l_component_type_code
                                                                            ,l_component_appl_id
                                                                            ,l_amb_context_code
                                                                            ,l_entity_code
                                                                            ,l_event_class_code
                                                                           )
                                    ,p_token_3                 => 'OWNER'
                                    ,p_value_3                 => xla_lookups_pkg.get_meaning(
                                                                          p_lookup_type     => 'XLA_OWNER_TYPE'
                                                                          ,p_lookup_code    => l_component_type_code
                                                                         )
                                    ,p_token_4                 => 'PRODUCT_NAME'
                                    ,p_value_4                 => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.application_name
                                    ,p_entity_id               => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.entity_id
                                    ,p_event_id                => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.event_id
                                    ,p_ledger_id               => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id
                                    ,p_ae_header_id            =>  NULL
                                       );

        IF (C_LEVEL_ERROR>= g_log_level) THEN
                 trace
                      (p_msg      => 'ERROR: XLA_UPG_OVERRIDE_ADR_UNDEFINED'
                      ,p_level    => C_LEVEL_ERROR
                      ,p_module   => l_log_module);
        END IF;
      END IF;
   END IF;
   --
   --
   ------------------------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- NOTE: XLA_AE_LINES_PKG.ValidateCurrentLine should NOT be generated if business flow method is
   -- Prior Entry.  Currently, the following code is always generated.
   ------------------------------------------------------------------------------------------------
   XLA_AE_LINES_PKG.ValidateCurrentLine;

   ------------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- Populated credit and debit amounts -- Need to generate this within IF <condition>
   ------------------------------------------------------------------------------------
   XLA_AE_LINES_PKG.SetDebitCreditAmounts;

   ----------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- Update journal entry status -- Need to generate this within IF <condition>
   ----------------------------------------------------------------------------------
   XLA_AE_JOURNAL_ENTRY_PKG.UpdateJournalEntryStatus
         (p_hdr_idx => g_array_event(p_event_id).array_value_num('header_index')
         ,p_balance_type_code => l_balance_type_code
         );

   -------------------------------------------------------------------------------------------
   -- 4262811 - Generate the Accrual Reversal lines
   -------------------------------------------------------------------------------------------
   BEGIN
      l_acc_rev_flag := XLA_AE_HEADER_PKG.g_rec_header_new.array_accrual_reversal_flag
                              (g_array_event(p_event_id).array_value_num('header_index'));
      IF l_acc_rev_flag IS NULL THEN
         l_acc_rev_flag := 'N';
      END IF;
   EXCEPTION
      WHEN OTHERS THEN
         l_acc_rev_flag := 'N';
   END;
   --
   IF (l_acc_rev_flag = 'Y') THEN

       -- 4645092  ------------------------------------------------------------------------------
       -- To allow MPA report to determine if it should generate report process
       XLA_ACCOUNTING_PKG.g_mpa_accrual_exists := 'Y';
       ------------------------------------------------------------------------------------------

       l_accrual_line_num := XLA_AE_LINES_PKG.g_LineNumber;
       XLA_AE_LINES_PKG.CopyLineInfo(l_accrual_line_num);
   -- added call to set_ccid to execute mapping  for secondary accrual reversal entries bug 7444204
   -- call ADRs
   -- Bug 4922099
   --
   IF ( (l_bflow_method_code <> 'PRIOR_ENTRY') OR
        (NVL(l_actual_upg_option, 'N') = 'O') OR
        (NVL(l_enc_upg_option, 'N') = 'O')
      )
   THEN
   NULL;
   --
   --
   
  l_ccid := AcctDerRule_7(
           p_application_id           => p_application_id
         , p_ae_header_id             => l_ae_header_id 
, p_source_11 => p_source_11
         , x_transaction_coa_id       => l_adr_transaction_coa_id
         , x_accounting_coa_id        => l_adr_accounting_coa_id
         , x_value_type_code          => l_adr_value_type_code
         , p_side                     => 'NA'
   );

   xla_ae_lines_pkg.set_ccid(
    p_code_combination_id          => l_ccid
  , p_value_type_code              => l_adr_value_type_code
  , p_transaction_coa_id           => l_adr_transaction_coa_id
  , p_accounting_coa_id            => l_adr_accounting_coa_id
  , p_adr_code                     => 'AP_INVOICE_DIST'
  , p_adr_type_code                => 'S'
  , p_component_type               => l_component_type
  , p_component_code               => l_component_code
  , p_component_type_code          => l_component_type_code
  , p_component_appl_id            => l_component_appl_id
  , p_amb_context_code             => l_amb_context_code
  , p_side                         => 'NA'
  );


   --
   --
   END IF;

       --
       -- Update the line information that should be overwritten
       --
       XLA_AE_LINES_PKG.set_ae_header_id(p_ae_header_id => p_event_id ,
                                         p_header_num   => 1);
       XLA_AE_LINES_PKG.g_rec_lines.array_header_num(XLA_AE_LINES_PKG.g_LineNumber)  :=1;

       XLA_AE_LINES_PKG.g_rec_lines.array_business_class_code(XLA_AE_LINES_PKG.g_LineNumber) := NULL; -- 4669271

       IF l_bflow_method_code <> 'NONE' THEN  -- 4655713b
          XLA_AE_LINES_PKG.g_rec_lines.array_reversal_code(XLA_AE_LINES_PKG.g_LineNumber) := CONCAT('MPA_',l_bflow_method_code);
       END IF;

      --
      -- Depending on the Reversal Method setup, do a switch side or changes sign for the amounts
      --
      IF (XLA_AE_JOURNAL_ENTRY_PKG.g_cache_ledgers_info.ledger_reversal_option = 'SIDE') THEN
          XLA_AE_LINES_PKG.g_rec_lines.array_natural_side_code(XLA_AE_LINES_PKG.g_LineNumber) :=  l_acc_rev_natural_side_code;
      ELSE
          ---------------------------------------------------------------------------------------------------
          -- 4262811a Switch Sign
          ---------------------------------------------------------------------------------------------------
          XLA_AE_LINES_PKG.g_rec_lines.array_switch_side_flag(XLA_AE_LINES_PKG.g_LineNumber) := 'N';  -- 5052518
          XLA_AE_LINES_PKG.g_rec_lines.array_ledger_amount(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_ledger_amount(XLA_AE_LINES_PKG.g_LineNumber) * -1;
          XLA_AE_LINES_PKG.g_rec_lines.array_entered_amount(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_entered_amount(XLA_AE_LINES_PKG.g_LineNumber) * -1;
          -- 5132302
          XLA_AE_LINES_PKG.g_rec_lines.array_bflow_applied_to_amt(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_bflow_applied_to_amt(XLA_AE_LINES_PKG.g_LineNumber) * -1;

      END IF;

      -- 4955764
      XLA_AE_LINES_PKG.g_rec_lines.array_gl_date(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_HEADER_PKG.g_rec_header_new.array_gl_date(g_array_event(p_event_id).array_value_num('acc_rev_header_index'));


      XLA_AE_LINES_PKG.ValidateCurrentLine;
      XLA_AE_LINES_PKG.SetDebitCreditAmounts;

      XLA_AE_JOURNAL_ENTRY_PKG.UpdateJournalEntryStatus
               (p_hdr_idx           => g_array_event(p_event_id).array_value_num('acc_rev_header_index')
               ,p_balance_type_code => l_balance_type_code);

   END IF;

   -----------------------------------------------------------------------------------------
   -- 4262811 Multiperiod Accounting
   -----------------------------------------------------------------------------------------
     -- No MPA option is assigned.


END IF;
END IF;
--

--
IF (C_LEVEL_PROCEDURE >= g_log_level) THEN
   trace
      (p_msg      => 'END of AcctLineType_56'
      ,p_level    => C_LEVEL_PROCEDURE
      ,p_module   => l_log_module);
END IF;
--
EXCEPTION
  WHEN xla_exceptions_pkg.application_exception THEN
      RAISE;
  WHEN OTHERS THEN
       xla_exceptions_pkg.raise_message
           (p_location => 'XLA_00200_AAD_S_000010_BC_PKG.AcctLineType_56');
END AcctLineType_56;
--

---------------------------------------
--
-- PRIVATE FUNCTION
--         AcctLineType_57
--
---------------------------------------
PROCEDURE AcctLineType_57 (
  p_application_id        IN NUMBER
 ,p_event_id              IN NUMBER
 ,p_calculate_acctd_flag  IN VARCHAR2
 ,p_calculate_g_l_flag    IN VARCHAR2
 ,p_actual_flag           IN OUT VARCHAR2
 ,p_balance_type_code     OUT VARCHAR2
 ,p_gain_or_loss_ref      OUT VARCHAR2
 
--Invoice Distribution Description
 , p_source_1            IN VARCHAR2
--Invoice Distribution Account
 , p_source_11            IN NUMBER
--Invoice Distribution Type
 , p_source_15            IN VARCHAR2
 , p_source_15_meaning    IN VARCHAR2
--Purchasing Encumbrance Option
 , p_source_17            IN VARCHAR2
 , p_source_17_meaning    IN VARCHAR2
--Accounting Reversal Indicator
 , p_source_19            IN VARCHAR2
--Distribution Link Type
 , p_source_21            IN VARCHAR2
--Allocation to Main Distribution Identifier
 , p_source_23            IN NUMBER
--Invoice Identifier
 , p_source_24            IN NUMBER
--Business Flow Accounts Payable Application Identifier
 , p_source_25            IN NUMBER
--Business Flow Invoice Distribution Type
 , p_source_26            IN VARCHAR2
--Business Flow Invoice Entity Code
 , p_source_27            IN VARCHAR2
--Business Flow Invoice Distribution Identifier
 , p_source_28            IN NUMBER
--Business Flow Invoice Identifier
 , p_source_29            IN NUMBER
--Invoice Distribution Identifier
 , p_source_30            IN NUMBER
--Payables Encumbrance Upgrade Credit Account
 , p_source_31            IN NUMBER
--Payables Encumbrance Upgrade Credit Amount
 , p_source_32            IN NUMBER
--Invoice Currency Code
 , p_source_33            IN VARCHAR2
--Payables Encumbrance Upgrade Credit Base Amount
 , p_source_34            IN NUMBER
--Payables Encumbrance Upgrade Debit Account
 , p_source_35            IN NUMBER
--Payables Encumbrance Upgrade Debit Amount
 , p_source_36            IN NUMBER
--Payables Encumbrance Upgrade Debit Base Amount
 , p_source_37            IN NUMBER
--Payables Encumbrance Upgrade Option
 , p_source_38            IN VARCHAR2
--Invoice Exchange Date
 , p_source_39            IN DATE
--Invoice Exchange Rate
 , p_source_40            IN NUMBER
--Invoice Exchange Rate Type
 , p_source_41            IN VARCHAR2
--Deferred Accounting End Date
 , p_source_43            IN DATE
--Deferred Accounting Option
 , p_source_44            IN VARCHAR2
--Deferred Accounting Start Date
 , p_source_45            IN DATE
--Override Accounted Amount Indicator
 , p_source_46            IN VARCHAR2
 , p_source_46_meaning    IN VARCHAR2
--Invoice Supplier Identifier
 , p_source_47            IN NUMBER
--Invoice Supplier Site Identifier
 , p_source_48            IN NUMBER
--Third Party Type
 , p_source_49            IN VARCHAR2
--Parent Reversal Identifier
 , p_source_50            IN NUMBER
--Invoice Distribution Statistical Amount
 , p_source_51            IN NUMBER
--Invoice Distribution Tax Line Identifier
 , p_source_52            IN NUMBER
--Invoice Distribution Tax Distribution Identifier from Tax
 , p_source_53            IN NUMBER
--Invoice Distribution Summary Tax Line Identifier
 , p_source_54            IN NUMBER
--Payables Upgrade Credit Encumbrance Type Identifier
 , p_source_55            IN NUMBER
--Payables Upgrade Debit Encumbrance Type Identifier
 , p_source_56            IN NUMBER
--Self-Assessed Tax Flag
 , p_source_59            IN VARCHAR2
 , p_source_59_meaning    IN VARCHAR2
--Invoice Distribution Encumbrance Amount
 , p_source_65            IN NUMBER
--Invoice Distribution Encumbrance Ledger Amount
 , p_source_66            IN NUMBER
)
IS

l_component_type              VARCHAR2(80);
l_component_code              VARCHAR2(30);
l_component_type_code         VARCHAR2(1);
l_component_appl_id           INTEGER;
l_amb_context_code            VARCHAR2(30);
l_entity_code                 VARCHAR2(30);
l_event_class_code            VARCHAR2(30);
l_ae_header_id                NUMBER;
l_event_type_code             VARCHAR2(30);
l_line_definition_code        VARCHAR2(30);
l_line_definition_owner_code  VARCHAR2(1);
--
-- adr variables
l_segment                     VARCHAR2(30);
l_ccid                        NUMBER;
l_adr_transaction_coa_id      NUMBER;
l_adr_accounting_coa_id       NUMBER;
l_adr_flexfield_segment_code  VARCHAR2(30);
l_adr_flex_value_set_id       NUMBER;
l_adr_value_type_code         VARCHAR2(30);
l_adr_value_combination_id    NUMBER;
l_adr_value_segment_code      VARCHAR2(30);

l_bflow_method_code           VARCHAR2(30);  -- 4219869 Business Flow
l_bflow_class_code            VARCHAR2(30);  -- 4219869 Business Flow
l_inherit_desc_flag           VARCHAR2(1);   -- 4219869 Business Flow
l_budgetary_control_flag      VARCHAR2(1);   -- 4458381 Public Sector Enh

-- 4262811 Variables ------------------------------------------------------------------------------------------
l_entered_amt_idx             NUMBER;
l_accted_amt_idx              NUMBER;
l_acc_rev_flag                VARCHAR2(1);
l_accrual_line_num            NUMBER;
l_tmp_amt                     NUMBER;
l_acc_rev_natural_side_code   VARCHAR2(1);

l_num_entries                 NUMBER;
l_gl_dates                    xla_ae_journal_entry_pkg.t_array_date;
l_accted_amts                 xla_ae_journal_entry_pkg.t_array_num;
l_entered_amts                xla_ae_journal_entry_pkg.t_array_num;
l_period_names                xla_ae_journal_entry_pkg.t_array_V15L;
l_recog_line_1                NUMBER;
l_recog_line_2                NUMBER;

l_bflow_applied_to_amt_idx    NUMBER;                                -- 5132302
l_bflow_applied_to_amt        NUMBER;                                -- 5132302
l_bflow_applied_to_amts       xla_ae_journal_entry_pkg.t_array_num;  -- 5132302

l_event_id                    NUMBER;  -- To handle MPA header Description: xla_ae_header_pkg.SetHdrDescription

--l_rounding_ccy                VARCHAR2(15); -- To handle MPA rounding  4262811b
l_same_currency               BOOLEAN;        -- To handle MPA rounding  4262811b

---------------------------------------------------------------------------------------------------------------


--
-- bulk performance
--
l_balance_type_code           VARCHAR2(1);
l_rec_acct_attrs              XLA_AE_LINES_PKG.t_rec_acct_attrs;
l_log_module                  VARCHAR2(240);

--
-- Upgrade strategy
--
l_actual_upg_option           VARCHAR2(1);
l_enc_upg_option           VARCHAR2(1);

--
BEGIN
--
IF g_log_enabled THEN
      l_log_module := C_DEFAULT_MODULE||'.AcctLineType_57';
END IF;
--
IF (C_LEVEL_PROCEDURE >= g_log_level) THEN

      trace
         (p_msg      => 'BEGIN of AcctLineType_57'
         ,p_level    => C_LEVEL_PROCEDURE
         ,p_module   => l_log_module);

END IF;
--
l_component_type             := 'AMB_JLT';
l_component_code             := 'AP_RECOV_TAX_CM_ENC_DR';
l_component_type_code        := 'S';
l_component_appl_id          :=  200;
l_amb_context_code           := 'DEFAULT';
l_entity_code                := 'AP_INVOICES';
l_event_class_code           := 'CREDIT MEMOS';
l_event_type_code            := 'CREDIT MEMOS_ALL';
l_line_definition_owner_code := 'S';
l_line_definition_code       := 'ENC_CM_ALL';
--
l_balance_type_code          := 'E';
l_segment                     := NULL;
l_ccid                        := NULL;
l_adr_transaction_coa_id      := NULL;
l_adr_accounting_coa_id       := NULL;
l_adr_flexfield_segment_code  := NULL;
l_adr_flex_value_set_id       := NULL;
l_adr_value_type_code         := NULL;
l_adr_value_combination_id    := NULL;
l_adr_value_segment_code      := NULL;

l_bflow_method_code          := 'NONE';   -- 4219869 Business Flow
l_bflow_class_code           := 'AP_INV_ENCUM';    -- 4219869 Business Flow
l_inherit_desc_flag          := 'N';   -- 4219869 Business Flow
l_budgetary_control_flag     := 'Y';

l_bflow_applied_to_amt_idx   := NULL; -- 5132302
l_bflow_applied_to_amt       := NULL; -- 5132302
l_entered_amt_idx            := NULL;          -- 4262811
l_accted_amt_idx             := NULL;          -- 4262811
l_acc_rev_flag               := NULL;          -- 4262811
l_accrual_line_num           := NULL;          -- 4262811
l_tmp_amt                    := NULL;          -- 4262811
--
 
IF XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id = XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.ledger_id OR
    l_balance_type_code <> 'B' THEN
IF NVL(p_source_15,'
') =  'REC_TAX' AND 
NVL(p_source_59,'
') <>  'Y' AND 
NVL(p_source_17,'
') =  'Y'
 THEN 

   --
   XLA_AE_LINES_PKG.SetNewLine;

   p_balance_type_code          := l_balance_type_code;
   -- set the flag so later we will know whether the gain loss line needs to be created
   
   IF(l_balance_type_code = 'A' and p_actual_flag is null) THEN
     p_actual_flag :='A';
   END IF;

   --
   -- bulk performance
   --
   XLA_AE_LINES_PKG.set_ae_header_id (p_ae_header_id => p_event_id ,
                                      p_header_num   => 0); -- 4262811
   --
   -- set accounting line options
   --
   l_ae_header_id:= xla_ae_lines_pkg.SetAcctLineOption(
           p_natural_side_code          => 'D'
         , p_gain_or_loss_flag          => 'N'
         , p_gl_transfer_mode_code      => 'S'
         , p_acct_entry_type_code       => 'E'
         , p_switch_side_flag           => 'Y'
         , p_merge_duplicate_code       => 'N'
         );
   --
   l_acc_rev_natural_side_code := 'C';  -- 4262811
   -- 
   --
   -- set accounting line type info
   --
   xla_ae_lines_pkg.SetAcctLineType
      (p_component_type             => l_component_type
      ,p_event_type_code            => l_event_type_code
      ,p_line_definition_owner_code => l_line_definition_owner_code
      ,p_line_definition_code       => l_line_definition_code
      ,p_accounting_line_code       => l_component_code
      ,p_accounting_line_type_code  => l_component_type_code
      ,p_accounting_line_appl_id    => l_component_appl_id
      ,p_amb_context_code           => l_amb_context_code
      ,p_entity_code                => l_entity_code
      ,p_event_class_code           => l_event_class_code);
   --
   -- set accounting class
   --
   xla_ae_lines_pkg.SetAcctClass(
           p_accounting_class_code  => 'RTAX'
         , p_ae_header_id           => l_ae_header_id
         );

   --
   -- set rounding class
   --
   XLA_AE_LINES_PKG.g_rec_lines.array_rounding_class(XLA_AE_LINES_PKG.g_LineNumber) :=
                      'RTAX';

   --
   xla_ae_lines_pkg.g_rec_lines.array_calculate_acctd_flag(xla_ae_lines_pkg.g_LineNumber) := p_calculate_acctd_flag;
   xla_ae_lines_pkg.g_rec_lines.array_calculate_g_l_flag(xla_ae_lines_pkg.g_LineNumber) := p_calculate_g_l_flag;
   --
   -- bulk performance
   --
   XLA_AE_LINES_PKG.g_rec_lines.array_balance_type_code(XLA_AE_LINES_PKG.g_LineNumber) := l_balance_type_code;

   XLA_AE_LINES_PKG.g_rec_lines.array_ledger_id(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id;

   -- 4955764
   XLA_AE_LINES_PKG.g_rec_lines.array_gl_date(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_HEADER_PKG.g_rec_header_new.array_gl_date(g_array_event(p_event_id).array_value_num('header_index'));

   -- 4458381 Public Sector Enh
      XLA_AE_LINES_PKG.g_rec_lines.array_encumbrance_type_id(XLA_AE_LINES_PKG.g_LineNumber) := 1060;
   --
   -- set accounting attributes for the line type
   --
   l_entered_amt_idx := 23;
   l_accted_amt_idx  := 28;
   l_bflow_applied_to_amt_idx  := NULL;  -- 5132302
   l_rec_acct_attrs.array_acct_attr_code(1) := 'ACCOUNTING_REVERSAL_OPTION';
   l_rec_acct_attrs.array_char_value(1)  := p_source_19;
   l_rec_acct_attrs.array_acct_attr_code(2) := 'ALLOC_TO_APPLICATION_ID';
   l_rec_acct_attrs.array_num_value(2)  := 
xla_ae_sources_pkg.GetSystemSourceNum(
   p_source_code           => 'XLA_EVENT_APPL_ID'
 , p_source_type_code      => 'Y'
 , p_source_application_id =>  602
);
   l_rec_acct_attrs.array_acct_attr_code(3) := 'ALLOC_TO_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(3)  := p_source_21;
   l_rec_acct_attrs.array_acct_attr_code(4) := 'ALLOC_TO_ENTITY_CODE';
   l_rec_acct_attrs.array_char_value(4)  := 
xla_ae_sources_pkg.GetSystemSourceChar(
   p_source_code           => 'XLA_ENTITY_CODE'
 , p_source_type_code      => 'Y'
 , p_source_application_id =>  602
);
   l_rec_acct_attrs.array_acct_attr_code(5) := 'ALLOC_TO_FIRST_DIST_ID';
   l_rec_acct_attrs.array_num_value(5)  :=  to_char(p_source_23);
   l_rec_acct_attrs.array_acct_attr_code(6) := 'ALLOC_TO_FIRST_SYS_TRAN_ID';
   l_rec_acct_attrs.array_num_value(6)  :=  to_char(p_source_24);
   l_rec_acct_attrs.array_acct_attr_code(7) := 'APPLIED_TO_APPLICATION_ID';
   l_rec_acct_attrs.array_num_value(7)  := p_source_25;
   l_rec_acct_attrs.array_acct_attr_code(8) := 'APPLIED_TO_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(8)  := p_source_26;
   l_rec_acct_attrs.array_acct_attr_code(9) := 'APPLIED_TO_ENTITY_CODE';
   l_rec_acct_attrs.array_char_value(9)  := p_source_27;
   l_rec_acct_attrs.array_acct_attr_code(10) := 'APPLIED_TO_FIRST_DIST_ID';
   l_rec_acct_attrs.array_num_value(10)  :=  to_char(p_source_28);
   l_rec_acct_attrs.array_acct_attr_code(11) := 'APPLIED_TO_FIRST_SYS_TRAN_ID';
   l_rec_acct_attrs.array_num_value(11)  :=  to_char(p_source_29);
   l_rec_acct_attrs.array_acct_attr_code(12) := 'DISTRIBUTION_IDENTIFIER_1';
   l_rec_acct_attrs.array_num_value(12)  :=  to_char(p_source_30);
   l_rec_acct_attrs.array_acct_attr_code(13) := 'DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(13)  := p_source_21;
   l_rec_acct_attrs.array_acct_attr_code(14) := 'ENC_UPG_CR_CCID';
   l_rec_acct_attrs.array_num_value(14)  := p_source_31;
   l_rec_acct_attrs.array_acct_attr_code(15) := 'ENC_UPG_CR_ENTERED_AMT';
   l_rec_acct_attrs.array_num_value(15)  := p_source_32;
   l_rec_acct_attrs.array_acct_attr_code(16) := 'ENC_UPG_CR_ENTERED_CURR';
   l_rec_acct_attrs.array_char_value(16)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(17) := 'ENC_UPG_CR_LEDGER_AMT';
   l_rec_acct_attrs.array_num_value(17)  := p_source_34;
   l_rec_acct_attrs.array_acct_attr_code(18) := 'ENC_UPG_DR_CCID';
   l_rec_acct_attrs.array_num_value(18)  := p_source_35;
   l_rec_acct_attrs.array_acct_attr_code(19) := 'ENC_UPG_DR_ENTERED_AMT';
   l_rec_acct_attrs.array_num_value(19)  := p_source_36;
   l_rec_acct_attrs.array_acct_attr_code(20) := 'ENC_UPG_DR_ENTERED_CURR';
   l_rec_acct_attrs.array_char_value(20)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(21) := 'ENC_UPG_DR_LEDGER_AMT';
   l_rec_acct_attrs.array_num_value(21)  := p_source_37;
   l_rec_acct_attrs.array_acct_attr_code(22) := 'ENC_UPG_OPTION';
   l_rec_acct_attrs.array_char_value(22)  := p_source_38;
   l_rec_acct_attrs.array_acct_attr_code(23) := 'ENTERED_CURRENCY_AMOUNT';
   l_rec_acct_attrs.array_num_value(23)  := p_source_65;
   l_rec_acct_attrs.array_acct_attr_code(24) := 'ENTERED_CURRENCY_CODE';
   l_rec_acct_attrs.array_char_value(24)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(25) := 'EXCHANGE_DATE';
   l_rec_acct_attrs.array_date_value(25)  := p_source_39;
   l_rec_acct_attrs.array_acct_attr_code(26) := 'EXCHANGE_RATE';
   l_rec_acct_attrs.array_num_value(26)  := p_source_40;
   l_rec_acct_attrs.array_acct_attr_code(27) := 'EXCHANGE_RATE_TYPE';
   l_rec_acct_attrs.array_char_value(27)  := p_source_41;
   l_rec_acct_attrs.array_acct_attr_code(28) := 'LEDGER_AMOUNT';
   l_rec_acct_attrs.array_num_value(28)  := p_source_66;
   l_rec_acct_attrs.array_acct_attr_code(29) := 'MULTIPERIOD_END_DATE';
   l_rec_acct_attrs.array_date_value(29)  := p_source_43;
   l_rec_acct_attrs.array_acct_attr_code(30) := 'MULTIPERIOD_OPTION';
   l_rec_acct_attrs.array_char_value(30)  := p_source_44;
   l_rec_acct_attrs.array_acct_attr_code(31) := 'MULTIPERIOD_START_DATE';
   l_rec_acct_attrs.array_date_value(31)  := p_source_45;
   l_rec_acct_attrs.array_acct_attr_code(32) := 'OVERRIDE_ACCTD_AMT_FLAG';
   l_rec_acct_attrs.array_char_value(32)  := p_source_46;
   l_rec_acct_attrs.array_acct_attr_code(33) := 'PARTY_ID';
   l_rec_acct_attrs.array_num_value(33)  := p_source_47;
   l_rec_acct_attrs.array_acct_attr_code(34) := 'PARTY_SITE_ID';
   l_rec_acct_attrs.array_num_value(34)  := p_source_48;
   l_rec_acct_attrs.array_acct_attr_code(35) := 'PARTY_TYPE';
   l_rec_acct_attrs.array_char_value(35)  := p_source_49;
   l_rec_acct_attrs.array_acct_attr_code(36) := 'REVERSED_DISTRIBUTION_ID1';
   l_rec_acct_attrs.array_num_value(36)  :=  to_char(p_source_50);
   l_rec_acct_attrs.array_acct_attr_code(37) := 'REVERSED_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(37)  := p_source_21;
   l_rec_acct_attrs.array_acct_attr_code(38) := 'STATISTICAL_AMOUNT';
   l_rec_acct_attrs.array_num_value(38)  := p_source_51;
   l_rec_acct_attrs.array_acct_attr_code(39) := 'TAX_LINE_REF_ID';
   l_rec_acct_attrs.array_num_value(39)  := p_source_52;
   l_rec_acct_attrs.array_acct_attr_code(40) := 'TAX_REC_NREC_DIST_REF_ID';
   l_rec_acct_attrs.array_num_value(40)  := p_source_53;
   l_rec_acct_attrs.array_acct_attr_code(41) := 'TAX_SUMMARY_LINE_REF_ID';
   l_rec_acct_attrs.array_num_value(41)  := p_source_54;
   l_rec_acct_attrs.array_acct_attr_code(42) := 'UPG_CR_ENC_TYPE_ID';
   l_rec_acct_attrs.array_num_value(42)  := p_source_55;
   l_rec_acct_attrs.array_acct_attr_code(43) := 'UPG_DR_ENC_TYPE_ID';
   l_rec_acct_attrs.array_num_value(43)  := p_source_56;

   XLA_AE_LINES_PKG.SetLineAcctAttrs(l_rec_acct_attrs);
   p_gain_or_loss_ref  := XLA_AE_LINES_PKG.g_rec_lines.array_gain_or_loss_ref(XLA_AE_LINES_PKG.g_LineNumber);

   ---------------------------------------------------------------------------------------------------------------
   -- 4336173 -- assign Business Flow Class (replace code in xla_ae_lines_pkg.Business_Flow_Validation)
   ---------------------------------------------------------------------------------------------------------------
   XLA_AE_LINES_PKG.g_rec_lines.array_business_class_code(XLA_AE_LINES_PKG.g_LineNumber) := l_bflow_class_code;

   l_actual_upg_option  := XLA_AE_LINES_PKG.g_rec_lines.array_actual_upg_option(XLA_AE_LINES_PKG.g_LineNumber);
   l_enc_upg_option     := XLA_AE_LINES_PKG.g_rec_lines.array_enc_upg_option(XLA_AE_LINES_PKG.g_LineNumber);

   IF xla_accounting_cache_pkg.GetValueChar
         (p_source_code         => 'LEDGER_CATEGORY_CODE'
         ,p_target_ledger_id    => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id) IN ('PRIMARY','ALC')
   AND l_bflow_method_code = 'PRIOR_ENTRY'
--   AND (l_actual_upg_option = 'Y' OR l_enc_upg_option = 'Y') Bug 4922099
   AND ( (NVL(l_actual_upg_option, 'N') IN ('Y', 'O')) OR
         (NVL(l_enc_upg_option, 'N') IN ('Y', 'O'))
       )
   THEN
         xla_ae_lines_pkg.BflowUpgEntry
           (p_business_method_code    => l_bflow_method_code
           ,p_business_class_code     => l_bflow_class_code
           ,p_balance_type            => l_balance_type_code);
   ELSE
      NULL;
-- No business flow processing for business flow method of NONE.
   END IF;

   --
   -- call analytical criteria
   --
   
   --
   -- call description
   --
   
xla_ae_lines_pkg.SetLineDescription(
   p_ae_header_id => l_ae_header_id
  ,p_description  => Description_2 (
     p_application_id         => p_application_id
   , p_ae_header_id           => l_ae_header_id 
, p_source_1 => p_source_1
   )
);


   --
   -- call ADRs
   -- Bug 4922099
   --
   IF ( (l_bflow_method_code <> 'PRIOR_ENTRY') OR
        (NVL(l_actual_upg_option, 'N') = 'O') OR
        (NVL(l_enc_upg_option, 'N') = 'O')
      )
   THEN
   NULL;
   --
   --
   
  l_ccid := AcctDerRule_7(
           p_application_id           => p_application_id
         , p_ae_header_id             => l_ae_header_id 
, p_source_11 => p_source_11
         , x_transaction_coa_id       => l_adr_transaction_coa_id
         , x_accounting_coa_id        => l_adr_accounting_coa_id
         , x_value_type_code          => l_adr_value_type_code
         , p_side                     => 'NA'
   );

   xla_ae_lines_pkg.set_ccid(
    p_code_combination_id          => l_ccid
  , p_value_type_code              => l_adr_value_type_code
  , p_transaction_coa_id           => l_adr_transaction_coa_id
  , p_accounting_coa_id            => l_adr_accounting_coa_id
  , p_adr_code                     => 'AP_INVOICE_DIST'
  , p_adr_type_code                => 'S'
  , p_component_type               => l_component_type
  , p_component_code               => l_component_code
  , p_component_type_code          => l_component_type_code
  , p_component_appl_id            => l_component_appl_id
  , p_amb_context_code             => l_amb_context_code
  , p_side                         => 'NA'
  );


   --
   --
   END IF;
   --
   -- Bug 4922099
   IF ( ( (NVL(l_actual_upg_option, 'N') = 'O') OR
          (NVL(l_enc_upg_option, 'N') = 'O')
        ) AND
        (l_bflow_method_code = 'PRIOR_ENTRY')
      )
   THEN
      IF
      --
      1 = 2
      --
      THEN
      xla_accounting_err_pkg.build_message
                                    (p_appli_s_name            => 'XLA'
                                    ,p_msg_name                => 'XLA_UPG_OVERRIDE_ADR_UNDEFINED'
                                    ,p_token_1                 => 'LINE_NUMBER'
                                    ,p_value_1                 => XLA_AE_LINES_PKG.g_LineNumber
                                    ,p_token_2                 => 'LINE_TYPE_NAME'
                                    ,p_value_2                 => XLA_AE_SOURCES_PKG.GetComponentName (
                                                                             l_component_type
                                                                            ,l_component_code
                                                                            ,l_component_type_code
                                                                            ,l_component_appl_id
                                                                            ,l_amb_context_code
                                                                            ,l_entity_code
                                                                            ,l_event_class_code
                                                                           )
                                    ,p_token_3                 => 'OWNER'
                                    ,p_value_3                 => xla_lookups_pkg.get_meaning(
                                                                          p_lookup_type     => 'XLA_OWNER_TYPE'
                                                                          ,p_lookup_code    => l_component_type_code
                                                                         )
                                    ,p_token_4                 => 'PRODUCT_NAME'
                                    ,p_value_4                 => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.application_name
                                    ,p_entity_id               => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.entity_id
                                    ,p_event_id                => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.event_id
                                    ,p_ledger_id               => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id
                                    ,p_ae_header_id            =>  NULL
                                       );

        IF (C_LEVEL_ERROR>= g_log_level) THEN
                 trace
                      (p_msg      => 'ERROR: XLA_UPG_OVERRIDE_ADR_UNDEFINED'
                      ,p_level    => C_LEVEL_ERROR
                      ,p_module   => l_log_module);
        END IF;
      END IF;
   END IF;
   --
   --
   ------------------------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- NOTE: XLA_AE_LINES_PKG.ValidateCurrentLine should NOT be generated if business flow method is
   -- Prior Entry.  Currently, the following code is always generated.
   ------------------------------------------------------------------------------------------------
   XLA_AE_LINES_PKG.ValidateCurrentLine;

   ------------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- Populated credit and debit amounts -- Need to generate this within IF <condition>
   ------------------------------------------------------------------------------------
   XLA_AE_LINES_PKG.SetDebitCreditAmounts;

   ----------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- Update journal entry status -- Need to generate this within IF <condition>
   ----------------------------------------------------------------------------------
   XLA_AE_JOURNAL_ENTRY_PKG.UpdateJournalEntryStatus
         (p_hdr_idx => g_array_event(p_event_id).array_value_num('header_index')
         ,p_balance_type_code => l_balance_type_code
         );

   -------------------------------------------------------------------------------------------
   -- 4262811 - Generate the Accrual Reversal lines
   -------------------------------------------------------------------------------------------
   BEGIN
      l_acc_rev_flag := XLA_AE_HEADER_PKG.g_rec_header_new.array_accrual_reversal_flag
                              (g_array_event(p_event_id).array_value_num('header_index'));
      IF l_acc_rev_flag IS NULL THEN
         l_acc_rev_flag := 'N';
      END IF;
   EXCEPTION
      WHEN OTHERS THEN
         l_acc_rev_flag := 'N';
   END;
   --
   IF (l_acc_rev_flag = 'Y') THEN

       -- 4645092  ------------------------------------------------------------------------------
       -- To allow MPA report to determine if it should generate report process
       XLA_ACCOUNTING_PKG.g_mpa_accrual_exists := 'Y';
       ------------------------------------------------------------------------------------------

       l_accrual_line_num := XLA_AE_LINES_PKG.g_LineNumber;
       XLA_AE_LINES_PKG.CopyLineInfo(l_accrual_line_num);
   -- added call to set_ccid to execute mapping  for secondary accrual reversal entries bug 7444204
   -- call ADRs
   -- Bug 4922099
   --
   IF ( (l_bflow_method_code <> 'PRIOR_ENTRY') OR
        (NVL(l_actual_upg_option, 'N') = 'O') OR
        (NVL(l_enc_upg_option, 'N') = 'O')
      )
   THEN
   NULL;
   --
   --
   
  l_ccid := AcctDerRule_7(
           p_application_id           => p_application_id
         , p_ae_header_id             => l_ae_header_id 
, p_source_11 => p_source_11
         , x_transaction_coa_id       => l_adr_transaction_coa_id
         , x_accounting_coa_id        => l_adr_accounting_coa_id
         , x_value_type_code          => l_adr_value_type_code
         , p_side                     => 'NA'
   );

   xla_ae_lines_pkg.set_ccid(
    p_code_combination_id          => l_ccid
  , p_value_type_code              => l_adr_value_type_code
  , p_transaction_coa_id           => l_adr_transaction_coa_id
  , p_accounting_coa_id            => l_adr_accounting_coa_id
  , p_adr_code                     => 'AP_INVOICE_DIST'
  , p_adr_type_code                => 'S'
  , p_component_type               => l_component_type
  , p_component_code               => l_component_code
  , p_component_type_code          => l_component_type_code
  , p_component_appl_id            => l_component_appl_id
  , p_amb_context_code             => l_amb_context_code
  , p_side                         => 'NA'
  );


   --
   --
   END IF;

       --
       -- Update the line information that should be overwritten
       --
       XLA_AE_LINES_PKG.set_ae_header_id(p_ae_header_id => p_event_id ,
                                         p_header_num   => 1);
       XLA_AE_LINES_PKG.g_rec_lines.array_header_num(XLA_AE_LINES_PKG.g_LineNumber)  :=1;

       XLA_AE_LINES_PKG.g_rec_lines.array_business_class_code(XLA_AE_LINES_PKG.g_LineNumber) := NULL; -- 4669271

       IF l_bflow_method_code <> 'NONE' THEN  -- 4655713b
          XLA_AE_LINES_PKG.g_rec_lines.array_reversal_code(XLA_AE_LINES_PKG.g_LineNumber) := CONCAT('MPA_',l_bflow_method_code);
       END IF;

      --
      -- Depending on the Reversal Method setup, do a switch side or changes sign for the amounts
      --
      IF (XLA_AE_JOURNAL_ENTRY_PKG.g_cache_ledgers_info.ledger_reversal_option = 'SIDE') THEN
          XLA_AE_LINES_PKG.g_rec_lines.array_natural_side_code(XLA_AE_LINES_PKG.g_LineNumber) :=  l_acc_rev_natural_side_code;
      ELSE
          ---------------------------------------------------------------------------------------------------
          -- 4262811a Switch Sign
          ---------------------------------------------------------------------------------------------------
          XLA_AE_LINES_PKG.g_rec_lines.array_switch_side_flag(XLA_AE_LINES_PKG.g_LineNumber) := 'N';  -- 5052518
          XLA_AE_LINES_PKG.g_rec_lines.array_ledger_amount(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_ledger_amount(XLA_AE_LINES_PKG.g_LineNumber) * -1;
          XLA_AE_LINES_PKG.g_rec_lines.array_entered_amount(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_entered_amount(XLA_AE_LINES_PKG.g_LineNumber) * -1;
          -- 5132302
          XLA_AE_LINES_PKG.g_rec_lines.array_bflow_applied_to_amt(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_bflow_applied_to_amt(XLA_AE_LINES_PKG.g_LineNumber) * -1;

      END IF;

      -- 4955764
      XLA_AE_LINES_PKG.g_rec_lines.array_gl_date(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_HEADER_PKG.g_rec_header_new.array_gl_date(g_array_event(p_event_id).array_value_num('acc_rev_header_index'));


      XLA_AE_LINES_PKG.ValidateCurrentLine;
      XLA_AE_LINES_PKG.SetDebitCreditAmounts;

      XLA_AE_JOURNAL_ENTRY_PKG.UpdateJournalEntryStatus
               (p_hdr_idx           => g_array_event(p_event_id).array_value_num('acc_rev_header_index')
               ,p_balance_type_code => l_balance_type_code);

   END IF;

   -----------------------------------------------------------------------------------------
   -- 4262811 Multiperiod Accounting
   -----------------------------------------------------------------------------------------
     -- No MPA option is assigned.


END IF;
END IF;
--

--
IF (C_LEVEL_PROCEDURE >= g_log_level) THEN
   trace
      (p_msg      => 'END of AcctLineType_57'
      ,p_level    => C_LEVEL_PROCEDURE
      ,p_module   => l_log_module);
END IF;
--
EXCEPTION
  WHEN xla_exceptions_pkg.application_exception THEN
      RAISE;
  WHEN OTHERS THEN
       xla_exceptions_pkg.raise_message
           (p_location => 'XLA_00200_AAD_S_000010_BC_PKG.AcctLineType_57');
END AcctLineType_57;
--

---------------------------------------
--
-- PRIVATE FUNCTION
--         AcctLineType_58
--
---------------------------------------
PROCEDURE AcctLineType_58 (
  p_application_id        IN NUMBER
 ,p_event_id              IN NUMBER
 ,p_calculate_acctd_flag  IN VARCHAR2
 ,p_calculate_g_l_flag    IN VARCHAR2
 ,p_actual_flag           IN OUT VARCHAR2
 ,p_balance_type_code     OUT VARCHAR2
 ,p_gain_or_loss_ref      OUT VARCHAR2
 
--Invoice Distribution Description
 , p_source_1            IN VARCHAR2
--Invoice Distribution Account
 , p_source_11            IN NUMBER
--Invoice Distribution Type
 , p_source_15            IN VARCHAR2
 , p_source_15_meaning    IN VARCHAR2
--Purchasing Encumbrance Option
 , p_source_17            IN VARCHAR2
 , p_source_17_meaning    IN VARCHAR2
--Accounting Reversal Indicator
 , p_source_19            IN VARCHAR2
--Distribution Link Type
 , p_source_21            IN VARCHAR2
--Allocation to Main Distribution Identifier
 , p_source_23            IN NUMBER
--Invoice Identifier
 , p_source_24            IN NUMBER
--Business Flow Accounts Payable Application Identifier
 , p_source_25            IN NUMBER
--Business Flow Invoice Distribution Type
 , p_source_26            IN VARCHAR2
--Business Flow Invoice Entity Code
 , p_source_27            IN VARCHAR2
--Business Flow Invoice Distribution Identifier
 , p_source_28            IN NUMBER
--Business Flow Invoice Identifier
 , p_source_29            IN NUMBER
--Invoice Distribution Identifier
 , p_source_30            IN NUMBER
--Payables Encumbrance Upgrade Credit Account
 , p_source_31            IN NUMBER
--Payables Encumbrance Upgrade Credit Amount
 , p_source_32            IN NUMBER
--Invoice Currency Code
 , p_source_33            IN VARCHAR2
--Payables Encumbrance Upgrade Credit Base Amount
 , p_source_34            IN NUMBER
--Payables Encumbrance Upgrade Debit Account
 , p_source_35            IN NUMBER
--Payables Encumbrance Upgrade Debit Amount
 , p_source_36            IN NUMBER
--Payables Encumbrance Upgrade Debit Base Amount
 , p_source_37            IN NUMBER
--Payables Encumbrance Upgrade Option
 , p_source_38            IN VARCHAR2
--Invoice Exchange Date
 , p_source_39            IN DATE
--Invoice Exchange Rate
 , p_source_40            IN NUMBER
--Invoice Exchange Rate Type
 , p_source_41            IN VARCHAR2
--Deferred Accounting End Date
 , p_source_43            IN DATE
--Deferred Accounting Option
 , p_source_44            IN VARCHAR2
--Deferred Accounting Start Date
 , p_source_45            IN DATE
--Override Accounted Amount Indicator
 , p_source_46            IN VARCHAR2
 , p_source_46_meaning    IN VARCHAR2
--Invoice Supplier Identifier
 , p_source_47            IN NUMBER
--Invoice Supplier Site Identifier
 , p_source_48            IN NUMBER
--Third Party Type
 , p_source_49            IN VARCHAR2
--Parent Reversal Identifier
 , p_source_50            IN NUMBER
--Invoice Distribution Tax Line Identifier
 , p_source_52            IN NUMBER
--Invoice Distribution Tax Distribution Identifier from Tax
 , p_source_53            IN NUMBER
--Invoice Distribution Summary Tax Line Identifier
 , p_source_54            IN NUMBER
--Payables Upgrade Credit Encumbrance Type Identifier
 , p_source_55            IN NUMBER
--Payables Upgrade Debit Encumbrance Type Identifier
 , p_source_56            IN NUMBER
--Self-Assessed Tax Flag
 , p_source_59            IN VARCHAR2
 , p_source_59_meaning    IN VARCHAR2
--Invoice Distribution Encumbrance Amount
 , p_source_65            IN NUMBER
--Invoice Distribution Encumbrance Ledger Amount
 , p_source_66            IN NUMBER
)
IS

l_component_type              VARCHAR2(80);
l_component_code              VARCHAR2(30);
l_component_type_code         VARCHAR2(1);
l_component_appl_id           INTEGER;
l_amb_context_code            VARCHAR2(30);
l_entity_code                 VARCHAR2(30);
l_event_class_code            VARCHAR2(30);
l_ae_header_id                NUMBER;
l_event_type_code             VARCHAR2(30);
l_line_definition_code        VARCHAR2(30);
l_line_definition_owner_code  VARCHAR2(1);
--
-- adr variables
l_segment                     VARCHAR2(30);
l_ccid                        NUMBER;
l_adr_transaction_coa_id      NUMBER;
l_adr_accounting_coa_id       NUMBER;
l_adr_flexfield_segment_code  VARCHAR2(30);
l_adr_flex_value_set_id       NUMBER;
l_adr_value_type_code         VARCHAR2(30);
l_adr_value_combination_id    NUMBER;
l_adr_value_segment_code      VARCHAR2(30);

l_bflow_method_code           VARCHAR2(30);  -- 4219869 Business Flow
l_bflow_class_code            VARCHAR2(30);  -- 4219869 Business Flow
l_inherit_desc_flag           VARCHAR2(1);   -- 4219869 Business Flow
l_budgetary_control_flag      VARCHAR2(1);   -- 4458381 Public Sector Enh

-- 4262811 Variables ------------------------------------------------------------------------------------------
l_entered_amt_idx             NUMBER;
l_accted_amt_idx              NUMBER;
l_acc_rev_flag                VARCHAR2(1);
l_accrual_line_num            NUMBER;
l_tmp_amt                     NUMBER;
l_acc_rev_natural_side_code   VARCHAR2(1);

l_num_entries                 NUMBER;
l_gl_dates                    xla_ae_journal_entry_pkg.t_array_date;
l_accted_amts                 xla_ae_journal_entry_pkg.t_array_num;
l_entered_amts                xla_ae_journal_entry_pkg.t_array_num;
l_period_names                xla_ae_journal_entry_pkg.t_array_V15L;
l_recog_line_1                NUMBER;
l_recog_line_2                NUMBER;

l_bflow_applied_to_amt_idx    NUMBER;                                -- 5132302
l_bflow_applied_to_amt        NUMBER;                                -- 5132302
l_bflow_applied_to_amts       xla_ae_journal_entry_pkg.t_array_num;  -- 5132302

l_event_id                    NUMBER;  -- To handle MPA header Description: xla_ae_header_pkg.SetHdrDescription

--l_rounding_ccy                VARCHAR2(15); -- To handle MPA rounding  4262811b
l_same_currency               BOOLEAN;        -- To handle MPA rounding  4262811b

---------------------------------------------------------------------------------------------------------------


--
-- bulk performance
--
l_balance_type_code           VARCHAR2(1);
l_rec_acct_attrs              XLA_AE_LINES_PKG.t_rec_acct_attrs;
l_log_module                  VARCHAR2(240);

--
-- Upgrade strategy
--
l_actual_upg_option           VARCHAR2(1);
l_enc_upg_option           VARCHAR2(1);

--
BEGIN
--
IF g_log_enabled THEN
      l_log_module := C_DEFAULT_MODULE||'.AcctLineType_58';
END IF;
--
IF (C_LEVEL_PROCEDURE >= g_log_level) THEN

      trace
         (p_msg      => 'BEGIN of AcctLineType_58'
         ,p_level    => C_LEVEL_PROCEDURE
         ,p_module   => l_log_module);

END IF;
--
l_component_type             := 'AMB_JLT';
l_component_code             := 'AP_RECOV_TAX_DM_ENC_DR';
l_component_type_code        := 'S';
l_component_appl_id          :=  200;
l_amb_context_code           := 'DEFAULT';
l_entity_code                := 'AP_INVOICES';
l_event_class_code           := 'DEBIT MEMOS';
l_event_type_code            := 'DEBIT MEMOS_ALL';
l_line_definition_owner_code := 'S';
l_line_definition_code       := 'ENC_DM_ALL';
--
l_balance_type_code          := 'E';
l_segment                     := NULL;
l_ccid                        := NULL;
l_adr_transaction_coa_id      := NULL;
l_adr_accounting_coa_id       := NULL;
l_adr_flexfield_segment_code  := NULL;
l_adr_flex_value_set_id       := NULL;
l_adr_value_type_code         := NULL;
l_adr_value_combination_id    := NULL;
l_adr_value_segment_code      := NULL;

l_bflow_method_code          := 'NONE';   -- 4219869 Business Flow
l_bflow_class_code           := 'AP_INV_ENCUM';    -- 4219869 Business Flow
l_inherit_desc_flag          := 'N';   -- 4219869 Business Flow
l_budgetary_control_flag     := 'Y';

l_bflow_applied_to_amt_idx   := NULL; -- 5132302
l_bflow_applied_to_amt       := NULL; -- 5132302
l_entered_amt_idx            := NULL;          -- 4262811
l_accted_amt_idx             := NULL;          -- 4262811
l_acc_rev_flag               := NULL;          -- 4262811
l_accrual_line_num           := NULL;          -- 4262811
l_tmp_amt                    := NULL;          -- 4262811
--
 
IF XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id = XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.ledger_id OR
    l_balance_type_code <> 'B' THEN
IF NVL(p_source_15,'
') =  'REC_TAX' AND 
NVL(p_source_59,'
') <>  'Y' AND 
NVL(p_source_17,'
') =  'Y'
 THEN 

   --
   XLA_AE_LINES_PKG.SetNewLine;

   p_balance_type_code          := l_balance_type_code;
   -- set the flag so later we will know whether the gain loss line needs to be created
   
   IF(l_balance_type_code = 'A' and p_actual_flag is null) THEN
     p_actual_flag :='A';
   END IF;

   --
   -- bulk performance
   --
   XLA_AE_LINES_PKG.set_ae_header_id (p_ae_header_id => p_event_id ,
                                      p_header_num   => 0); -- 4262811
   --
   -- set accounting line options
   --
   l_ae_header_id:= xla_ae_lines_pkg.SetAcctLineOption(
           p_natural_side_code          => 'D'
         , p_gain_or_loss_flag          => 'N'
         , p_gl_transfer_mode_code      => 'S'
         , p_acct_entry_type_code       => 'E'
         , p_switch_side_flag           => 'Y'
         , p_merge_duplicate_code       => 'N'
         );
   --
   l_acc_rev_natural_side_code := 'C';  -- 4262811
   -- 
   --
   -- set accounting line type info
   --
   xla_ae_lines_pkg.SetAcctLineType
      (p_component_type             => l_component_type
      ,p_event_type_code            => l_event_type_code
      ,p_line_definition_owner_code => l_line_definition_owner_code
      ,p_line_definition_code       => l_line_definition_code
      ,p_accounting_line_code       => l_component_code
      ,p_accounting_line_type_code  => l_component_type_code
      ,p_accounting_line_appl_id    => l_component_appl_id
      ,p_amb_context_code           => l_amb_context_code
      ,p_entity_code                => l_entity_code
      ,p_event_class_code           => l_event_class_code);
   --
   -- set accounting class
   --
   xla_ae_lines_pkg.SetAcctClass(
           p_accounting_class_code  => 'RTAX'
         , p_ae_header_id           => l_ae_header_id
         );

   --
   -- set rounding class
   --
   XLA_AE_LINES_PKG.g_rec_lines.array_rounding_class(XLA_AE_LINES_PKG.g_LineNumber) :=
                      'RTAX';

   --
   xla_ae_lines_pkg.g_rec_lines.array_calculate_acctd_flag(xla_ae_lines_pkg.g_LineNumber) := p_calculate_acctd_flag;
   xla_ae_lines_pkg.g_rec_lines.array_calculate_g_l_flag(xla_ae_lines_pkg.g_LineNumber) := p_calculate_g_l_flag;
   --
   -- bulk performance
   --
   XLA_AE_LINES_PKG.g_rec_lines.array_balance_type_code(XLA_AE_LINES_PKG.g_LineNumber) := l_balance_type_code;

   XLA_AE_LINES_PKG.g_rec_lines.array_ledger_id(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id;

   -- 4955764
   XLA_AE_LINES_PKG.g_rec_lines.array_gl_date(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_HEADER_PKG.g_rec_header_new.array_gl_date(g_array_event(p_event_id).array_value_num('header_index'));

   -- 4458381 Public Sector Enh
      XLA_AE_LINES_PKG.g_rec_lines.array_encumbrance_type_id(XLA_AE_LINES_PKG.g_LineNumber) := 1060;
   --
   -- set accounting attributes for the line type
   --
   l_entered_amt_idx := 23;
   l_accted_amt_idx  := 28;
   l_bflow_applied_to_amt_idx  := NULL;  -- 5132302
   l_rec_acct_attrs.array_acct_attr_code(1) := 'ACCOUNTING_REVERSAL_OPTION';
   l_rec_acct_attrs.array_char_value(1)  := p_source_19;
   l_rec_acct_attrs.array_acct_attr_code(2) := 'ALLOC_TO_APPLICATION_ID';
   l_rec_acct_attrs.array_num_value(2)  := 
xla_ae_sources_pkg.GetSystemSourceNum(
   p_source_code           => 'XLA_EVENT_APPL_ID'
 , p_source_type_code      => 'Y'
 , p_source_application_id =>  602
);
   l_rec_acct_attrs.array_acct_attr_code(3) := 'ALLOC_TO_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(3)  := p_source_21;
   l_rec_acct_attrs.array_acct_attr_code(4) := 'ALLOC_TO_ENTITY_CODE';
   l_rec_acct_attrs.array_char_value(4)  := 
xla_ae_sources_pkg.GetSystemSourceChar(
   p_source_code           => 'XLA_ENTITY_CODE'
 , p_source_type_code      => 'Y'
 , p_source_application_id =>  602
);
   l_rec_acct_attrs.array_acct_attr_code(5) := 'ALLOC_TO_FIRST_DIST_ID';
   l_rec_acct_attrs.array_num_value(5)  :=  to_char(p_source_23);
   l_rec_acct_attrs.array_acct_attr_code(6) := 'ALLOC_TO_FIRST_SYS_TRAN_ID';
   l_rec_acct_attrs.array_num_value(6)  :=  to_char(p_source_24);
   l_rec_acct_attrs.array_acct_attr_code(7) := 'APPLIED_TO_APPLICATION_ID';
   l_rec_acct_attrs.array_num_value(7)  := p_source_25;
   l_rec_acct_attrs.array_acct_attr_code(8) := 'APPLIED_TO_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(8)  := p_source_26;
   l_rec_acct_attrs.array_acct_attr_code(9) := 'APPLIED_TO_ENTITY_CODE';
   l_rec_acct_attrs.array_char_value(9)  := p_source_27;
   l_rec_acct_attrs.array_acct_attr_code(10) := 'APPLIED_TO_FIRST_DIST_ID';
   l_rec_acct_attrs.array_num_value(10)  :=  to_char(p_source_28);
   l_rec_acct_attrs.array_acct_attr_code(11) := 'APPLIED_TO_FIRST_SYS_TRAN_ID';
   l_rec_acct_attrs.array_num_value(11)  :=  to_char(p_source_29);
   l_rec_acct_attrs.array_acct_attr_code(12) := 'DISTRIBUTION_IDENTIFIER_1';
   l_rec_acct_attrs.array_num_value(12)  :=  to_char(p_source_30);
   l_rec_acct_attrs.array_acct_attr_code(13) := 'DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(13)  := p_source_21;
   l_rec_acct_attrs.array_acct_attr_code(14) := 'ENC_UPG_CR_CCID';
   l_rec_acct_attrs.array_num_value(14)  := p_source_31;
   l_rec_acct_attrs.array_acct_attr_code(15) := 'ENC_UPG_CR_ENTERED_AMT';
   l_rec_acct_attrs.array_num_value(15)  := p_source_32;
   l_rec_acct_attrs.array_acct_attr_code(16) := 'ENC_UPG_CR_ENTERED_CURR';
   l_rec_acct_attrs.array_char_value(16)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(17) := 'ENC_UPG_CR_LEDGER_AMT';
   l_rec_acct_attrs.array_num_value(17)  := p_source_34;
   l_rec_acct_attrs.array_acct_attr_code(18) := 'ENC_UPG_DR_CCID';
   l_rec_acct_attrs.array_num_value(18)  := p_source_35;
   l_rec_acct_attrs.array_acct_attr_code(19) := 'ENC_UPG_DR_ENTERED_AMT';
   l_rec_acct_attrs.array_num_value(19)  := p_source_36;
   l_rec_acct_attrs.array_acct_attr_code(20) := 'ENC_UPG_DR_ENTERED_CURR';
   l_rec_acct_attrs.array_char_value(20)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(21) := 'ENC_UPG_DR_LEDGER_AMT';
   l_rec_acct_attrs.array_num_value(21)  := p_source_37;
   l_rec_acct_attrs.array_acct_attr_code(22) := 'ENC_UPG_OPTION';
   l_rec_acct_attrs.array_char_value(22)  := p_source_38;
   l_rec_acct_attrs.array_acct_attr_code(23) := 'ENTERED_CURRENCY_AMOUNT';
   l_rec_acct_attrs.array_num_value(23)  := p_source_65;
   l_rec_acct_attrs.array_acct_attr_code(24) := 'ENTERED_CURRENCY_CODE';
   l_rec_acct_attrs.array_char_value(24)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(25) := 'EXCHANGE_DATE';
   l_rec_acct_attrs.array_date_value(25)  := p_source_39;
   l_rec_acct_attrs.array_acct_attr_code(26) := 'EXCHANGE_RATE';
   l_rec_acct_attrs.array_num_value(26)  := p_source_40;
   l_rec_acct_attrs.array_acct_attr_code(27) := 'EXCHANGE_RATE_TYPE';
   l_rec_acct_attrs.array_char_value(27)  := p_source_41;
   l_rec_acct_attrs.array_acct_attr_code(28) := 'LEDGER_AMOUNT';
   l_rec_acct_attrs.array_num_value(28)  := p_source_66;
   l_rec_acct_attrs.array_acct_attr_code(29) := 'MULTIPERIOD_END_DATE';
   l_rec_acct_attrs.array_date_value(29)  := p_source_43;
   l_rec_acct_attrs.array_acct_attr_code(30) := 'MULTIPERIOD_OPTION';
   l_rec_acct_attrs.array_char_value(30)  := p_source_44;
   l_rec_acct_attrs.array_acct_attr_code(31) := 'MULTIPERIOD_START_DATE';
   l_rec_acct_attrs.array_date_value(31)  := p_source_45;
   l_rec_acct_attrs.array_acct_attr_code(32) := 'OVERRIDE_ACCTD_AMT_FLAG';
   l_rec_acct_attrs.array_char_value(32)  := p_source_46;
   l_rec_acct_attrs.array_acct_attr_code(33) := 'PARTY_ID';
   l_rec_acct_attrs.array_num_value(33)  := p_source_47;
   l_rec_acct_attrs.array_acct_attr_code(34) := 'PARTY_SITE_ID';
   l_rec_acct_attrs.array_num_value(34)  := p_source_48;
   l_rec_acct_attrs.array_acct_attr_code(35) := 'PARTY_TYPE';
   l_rec_acct_attrs.array_char_value(35)  := p_source_49;
   l_rec_acct_attrs.array_acct_attr_code(36) := 'REVERSED_DISTRIBUTION_ID1';
   l_rec_acct_attrs.array_num_value(36)  :=  to_char(p_source_50);
   l_rec_acct_attrs.array_acct_attr_code(37) := 'REVERSED_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(37)  := p_source_21;
   l_rec_acct_attrs.array_acct_attr_code(38) := 'TAX_LINE_REF_ID';
   l_rec_acct_attrs.array_num_value(38)  := p_source_52;
   l_rec_acct_attrs.array_acct_attr_code(39) := 'TAX_REC_NREC_DIST_REF_ID';
   l_rec_acct_attrs.array_num_value(39)  := p_source_53;
   l_rec_acct_attrs.array_acct_attr_code(40) := 'TAX_SUMMARY_LINE_REF_ID';
   l_rec_acct_attrs.array_num_value(40)  := p_source_54;
   l_rec_acct_attrs.array_acct_attr_code(41) := 'UPG_CR_ENC_TYPE_ID';
   l_rec_acct_attrs.array_num_value(41)  := p_source_55;
   l_rec_acct_attrs.array_acct_attr_code(42) := 'UPG_DR_ENC_TYPE_ID';
   l_rec_acct_attrs.array_num_value(42)  := p_source_56;

   XLA_AE_LINES_PKG.SetLineAcctAttrs(l_rec_acct_attrs);
   p_gain_or_loss_ref  := XLA_AE_LINES_PKG.g_rec_lines.array_gain_or_loss_ref(XLA_AE_LINES_PKG.g_LineNumber);

   ---------------------------------------------------------------------------------------------------------------
   -- 4336173 -- assign Business Flow Class (replace code in xla_ae_lines_pkg.Business_Flow_Validation)
   ---------------------------------------------------------------------------------------------------------------
   XLA_AE_LINES_PKG.g_rec_lines.array_business_class_code(XLA_AE_LINES_PKG.g_LineNumber) := l_bflow_class_code;

   l_actual_upg_option  := XLA_AE_LINES_PKG.g_rec_lines.array_actual_upg_option(XLA_AE_LINES_PKG.g_LineNumber);
   l_enc_upg_option     := XLA_AE_LINES_PKG.g_rec_lines.array_enc_upg_option(XLA_AE_LINES_PKG.g_LineNumber);

   IF xla_accounting_cache_pkg.GetValueChar
         (p_source_code         => 'LEDGER_CATEGORY_CODE'
         ,p_target_ledger_id    => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id) IN ('PRIMARY','ALC')
   AND l_bflow_method_code = 'PRIOR_ENTRY'
--   AND (l_actual_upg_option = 'Y' OR l_enc_upg_option = 'Y') Bug 4922099
   AND ( (NVL(l_actual_upg_option, 'N') IN ('Y', 'O')) OR
         (NVL(l_enc_upg_option, 'N') IN ('Y', 'O'))
       )
   THEN
         xla_ae_lines_pkg.BflowUpgEntry
           (p_business_method_code    => l_bflow_method_code
           ,p_business_class_code     => l_bflow_class_code
           ,p_balance_type            => l_balance_type_code);
   ELSE
      NULL;
-- No business flow processing for business flow method of NONE.
   END IF;

   --
   -- call analytical criteria
   --
   
   --
   -- call description
   --
   
xla_ae_lines_pkg.SetLineDescription(
   p_ae_header_id => l_ae_header_id
  ,p_description  => Description_2 (
     p_application_id         => p_application_id
   , p_ae_header_id           => l_ae_header_id 
, p_source_1 => p_source_1
   )
);


   --
   -- call ADRs
   -- Bug 4922099
   --
   IF ( (l_bflow_method_code <> 'PRIOR_ENTRY') OR
        (NVL(l_actual_upg_option, 'N') = 'O') OR
        (NVL(l_enc_upg_option, 'N') = 'O')
      )
   THEN
   NULL;
   --
   --
   
  l_ccid := AcctDerRule_7(
           p_application_id           => p_application_id
         , p_ae_header_id             => l_ae_header_id 
, p_source_11 => p_source_11
         , x_transaction_coa_id       => l_adr_transaction_coa_id
         , x_accounting_coa_id        => l_adr_accounting_coa_id
         , x_value_type_code          => l_adr_value_type_code
         , p_side                     => 'NA'
   );

   xla_ae_lines_pkg.set_ccid(
    p_code_combination_id          => l_ccid
  , p_value_type_code              => l_adr_value_type_code
  , p_transaction_coa_id           => l_adr_transaction_coa_id
  , p_accounting_coa_id            => l_adr_accounting_coa_id
  , p_adr_code                     => 'AP_INVOICE_DIST'
  , p_adr_type_code                => 'S'
  , p_component_type               => l_component_type
  , p_component_code               => l_component_code
  , p_component_type_code          => l_component_type_code
  , p_component_appl_id            => l_component_appl_id
  , p_amb_context_code             => l_amb_context_code
  , p_side                         => 'NA'
  );


   --
   --
   END IF;
   --
   -- Bug 4922099
   IF ( ( (NVL(l_actual_upg_option, 'N') = 'O') OR
          (NVL(l_enc_upg_option, 'N') = 'O')
        ) AND
        (l_bflow_method_code = 'PRIOR_ENTRY')
      )
   THEN
      IF
      --
      1 = 2
      --
      THEN
      xla_accounting_err_pkg.build_message
                                    (p_appli_s_name            => 'XLA'
                                    ,p_msg_name                => 'XLA_UPG_OVERRIDE_ADR_UNDEFINED'
                                    ,p_token_1                 => 'LINE_NUMBER'
                                    ,p_value_1                 => XLA_AE_LINES_PKG.g_LineNumber
                                    ,p_token_2                 => 'LINE_TYPE_NAME'
                                    ,p_value_2                 => XLA_AE_SOURCES_PKG.GetComponentName (
                                                                             l_component_type
                                                                            ,l_component_code
                                                                            ,l_component_type_code
                                                                            ,l_component_appl_id
                                                                            ,l_amb_context_code
                                                                            ,l_entity_code
                                                                            ,l_event_class_code
                                                                           )
                                    ,p_token_3                 => 'OWNER'
                                    ,p_value_3                 => xla_lookups_pkg.get_meaning(
                                                                          p_lookup_type     => 'XLA_OWNER_TYPE'
                                                                          ,p_lookup_code    => l_component_type_code
                                                                         )
                                    ,p_token_4                 => 'PRODUCT_NAME'
                                    ,p_value_4                 => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.application_name
                                    ,p_entity_id               => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.entity_id
                                    ,p_event_id                => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.event_id
                                    ,p_ledger_id               => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id
                                    ,p_ae_header_id            =>  NULL
                                       );

        IF (C_LEVEL_ERROR>= g_log_level) THEN
                 trace
                      (p_msg      => 'ERROR: XLA_UPG_OVERRIDE_ADR_UNDEFINED'
                      ,p_level    => C_LEVEL_ERROR
                      ,p_module   => l_log_module);
        END IF;
      END IF;
   END IF;
   --
   --
   ------------------------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- NOTE: XLA_AE_LINES_PKG.ValidateCurrentLine should NOT be generated if business flow method is
   -- Prior Entry.  Currently, the following code is always generated.
   ------------------------------------------------------------------------------------------------
   XLA_AE_LINES_PKG.ValidateCurrentLine;

   ------------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- Populated credit and debit amounts -- Need to generate this within IF <condition>
   ------------------------------------------------------------------------------------
   XLA_AE_LINES_PKG.SetDebitCreditAmounts;

   ----------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- Update journal entry status -- Need to generate this within IF <condition>
   ----------------------------------------------------------------------------------
   XLA_AE_JOURNAL_ENTRY_PKG.UpdateJournalEntryStatus
         (p_hdr_idx => g_array_event(p_event_id).array_value_num('header_index')
         ,p_balance_type_code => l_balance_type_code
         );

   -------------------------------------------------------------------------------------------
   -- 4262811 - Generate the Accrual Reversal lines
   -------------------------------------------------------------------------------------------
   BEGIN
      l_acc_rev_flag := XLA_AE_HEADER_PKG.g_rec_header_new.array_accrual_reversal_flag
                              (g_array_event(p_event_id).array_value_num('header_index'));
      IF l_acc_rev_flag IS NULL THEN
         l_acc_rev_flag := 'N';
      END IF;
   EXCEPTION
      WHEN OTHERS THEN
         l_acc_rev_flag := 'N';
   END;
   --
   IF (l_acc_rev_flag = 'Y') THEN

       -- 4645092  ------------------------------------------------------------------------------
       -- To allow MPA report to determine if it should generate report process
       XLA_ACCOUNTING_PKG.g_mpa_accrual_exists := 'Y';
       ------------------------------------------------------------------------------------------

       l_accrual_line_num := XLA_AE_LINES_PKG.g_LineNumber;
       XLA_AE_LINES_PKG.CopyLineInfo(l_accrual_line_num);
   -- added call to set_ccid to execute mapping  for secondary accrual reversal entries bug 7444204
   -- call ADRs
   -- Bug 4922099
   --
   IF ( (l_bflow_method_code <> 'PRIOR_ENTRY') OR
        (NVL(l_actual_upg_option, 'N') = 'O') OR
        (NVL(l_enc_upg_option, 'N') = 'O')
      )
   THEN
   NULL;
   --
   --
   
  l_ccid := AcctDerRule_7(
           p_application_id           => p_application_id
         , p_ae_header_id             => l_ae_header_id 
, p_source_11 => p_source_11
         , x_transaction_coa_id       => l_adr_transaction_coa_id
         , x_accounting_coa_id        => l_adr_accounting_coa_id
         , x_value_type_code          => l_adr_value_type_code
         , p_side                     => 'NA'
   );

   xla_ae_lines_pkg.set_ccid(
    p_code_combination_id          => l_ccid
  , p_value_type_code              => l_adr_value_type_code
  , p_transaction_coa_id           => l_adr_transaction_coa_id
  , p_accounting_coa_id            => l_adr_accounting_coa_id
  , p_adr_code                     => 'AP_INVOICE_DIST'
  , p_adr_type_code                => 'S'
  , p_component_type               => l_component_type
  , p_component_code               => l_component_code
  , p_component_type_code          => l_component_type_code
  , p_component_appl_id            => l_component_appl_id
  , p_amb_context_code             => l_amb_context_code
  , p_side                         => 'NA'
  );


   --
   --
   END IF;

       --
       -- Update the line information that should be overwritten
       --
       XLA_AE_LINES_PKG.set_ae_header_id(p_ae_header_id => p_event_id ,
                                         p_header_num   => 1);
       XLA_AE_LINES_PKG.g_rec_lines.array_header_num(XLA_AE_LINES_PKG.g_LineNumber)  :=1;

       XLA_AE_LINES_PKG.g_rec_lines.array_business_class_code(XLA_AE_LINES_PKG.g_LineNumber) := NULL; -- 4669271

       IF l_bflow_method_code <> 'NONE' THEN  -- 4655713b
          XLA_AE_LINES_PKG.g_rec_lines.array_reversal_code(XLA_AE_LINES_PKG.g_LineNumber) := CONCAT('MPA_',l_bflow_method_code);
       END IF;

      --
      -- Depending on the Reversal Method setup, do a switch side or changes sign for the amounts
      --
      IF (XLA_AE_JOURNAL_ENTRY_PKG.g_cache_ledgers_info.ledger_reversal_option = 'SIDE') THEN
          XLA_AE_LINES_PKG.g_rec_lines.array_natural_side_code(XLA_AE_LINES_PKG.g_LineNumber) :=  l_acc_rev_natural_side_code;
      ELSE
          ---------------------------------------------------------------------------------------------------
          -- 4262811a Switch Sign
          ---------------------------------------------------------------------------------------------------
          XLA_AE_LINES_PKG.g_rec_lines.array_switch_side_flag(XLA_AE_LINES_PKG.g_LineNumber) := 'N';  -- 5052518
          XLA_AE_LINES_PKG.g_rec_lines.array_ledger_amount(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_ledger_amount(XLA_AE_LINES_PKG.g_LineNumber) * -1;
          XLA_AE_LINES_PKG.g_rec_lines.array_entered_amount(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_entered_amount(XLA_AE_LINES_PKG.g_LineNumber) * -1;
          -- 5132302
          XLA_AE_LINES_PKG.g_rec_lines.array_bflow_applied_to_amt(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_bflow_applied_to_amt(XLA_AE_LINES_PKG.g_LineNumber) * -1;

      END IF;

      -- 4955764
      XLA_AE_LINES_PKG.g_rec_lines.array_gl_date(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_HEADER_PKG.g_rec_header_new.array_gl_date(g_array_event(p_event_id).array_value_num('acc_rev_header_index'));


      XLA_AE_LINES_PKG.ValidateCurrentLine;
      XLA_AE_LINES_PKG.SetDebitCreditAmounts;

      XLA_AE_JOURNAL_ENTRY_PKG.UpdateJournalEntryStatus
               (p_hdr_idx           => g_array_event(p_event_id).array_value_num('acc_rev_header_index')
               ,p_balance_type_code => l_balance_type_code);

   END IF;

   -----------------------------------------------------------------------------------------
   -- 4262811 Multiperiod Accounting
   -----------------------------------------------------------------------------------------
     -- No MPA option is assigned.


END IF;
END IF;
--

--
IF (C_LEVEL_PROCEDURE >= g_log_level) THEN
   trace
      (p_msg      => 'END of AcctLineType_58'
      ,p_level    => C_LEVEL_PROCEDURE
      ,p_module   => l_log_module);
END IF;
--
EXCEPTION
  WHEN xla_exceptions_pkg.application_exception THEN
      RAISE;
  WHEN OTHERS THEN
       xla_exceptions_pkg.raise_message
           (p_location => 'XLA_00200_AAD_S_000010_BC_PKG.AcctLineType_58');
END AcctLineType_58;
--

---------------------------------------
--
-- PRIVATE FUNCTION
--         AcctLineType_59
--
---------------------------------------
PROCEDURE AcctLineType_59 (
  p_application_id        IN NUMBER
 ,p_event_id              IN NUMBER
 ,p_calculate_acctd_flag  IN VARCHAR2
 ,p_calculate_g_l_flag    IN VARCHAR2
 ,p_actual_flag           IN OUT VARCHAR2
 ,p_balance_type_code     OUT VARCHAR2
 ,p_gain_or_loss_ref      OUT VARCHAR2
 
--Invoice Distribution Description
 , p_source_1            IN VARCHAR2
--Invoice Distribution Account
 , p_source_11            IN NUMBER
--Invoice Distribution Type
 , p_source_15            IN VARCHAR2
 , p_source_15_meaning    IN VARCHAR2
--Purchasing Encumbrance Option
 , p_source_17            IN VARCHAR2
 , p_source_17_meaning    IN VARCHAR2
--Accounting Reversal Indicator
 , p_source_19            IN VARCHAR2
--Distribution Link Type
 , p_source_21            IN VARCHAR2
--Allocation to Main Distribution Identifier
 , p_source_23            IN NUMBER
--Invoice Identifier
 , p_source_24            IN NUMBER
--Business Flow Accounts Payable Application Identifier
 , p_source_25            IN NUMBER
--Business Flow Invoice Distribution Type
 , p_source_26            IN VARCHAR2
--Business Flow Invoice Entity Code
 , p_source_27            IN VARCHAR2
--Business Flow Invoice Distribution Identifier
 , p_source_28            IN NUMBER
--Business Flow Invoice Identifier
 , p_source_29            IN NUMBER
--Invoice Distribution Identifier
 , p_source_30            IN NUMBER
--Payables Encumbrance Upgrade Credit Account
 , p_source_31            IN NUMBER
--Payables Encumbrance Upgrade Credit Amount
 , p_source_32            IN NUMBER
--Invoice Currency Code
 , p_source_33            IN VARCHAR2
--Payables Encumbrance Upgrade Credit Base Amount
 , p_source_34            IN NUMBER
--Payables Encumbrance Upgrade Debit Account
 , p_source_35            IN NUMBER
--Payables Encumbrance Upgrade Debit Amount
 , p_source_36            IN NUMBER
--Payables Encumbrance Upgrade Debit Base Amount
 , p_source_37            IN NUMBER
--Payables Encumbrance Upgrade Option
 , p_source_38            IN VARCHAR2
--Invoice Exchange Date
 , p_source_39            IN DATE
--Invoice Exchange Rate
 , p_source_40            IN NUMBER
--Invoice Exchange Rate Type
 , p_source_41            IN VARCHAR2
--Deferred Accounting End Date
 , p_source_43            IN DATE
--Deferred Accounting Option
 , p_source_44            IN VARCHAR2
--Deferred Accounting Start Date
 , p_source_45            IN DATE
--Override Accounted Amount Indicator
 , p_source_46            IN VARCHAR2
 , p_source_46_meaning    IN VARCHAR2
--Invoice Supplier Identifier
 , p_source_47            IN NUMBER
--Invoice Supplier Site Identifier
 , p_source_48            IN NUMBER
--Third Party Type
 , p_source_49            IN VARCHAR2
--Parent Reversal Identifier
 , p_source_50            IN NUMBER
--Invoice Distribution Statistical Amount
 , p_source_51            IN NUMBER
--Invoice Distribution Tax Line Identifier
 , p_source_52            IN NUMBER
--Invoice Distribution Tax Distribution Identifier from Tax
 , p_source_53            IN NUMBER
--Invoice Distribution Summary Tax Line Identifier
 , p_source_54            IN NUMBER
--Payables Upgrade Credit Encumbrance Type Identifier
 , p_source_55            IN NUMBER
--Payables Upgrade Debit Encumbrance Type Identifier
 , p_source_56            IN NUMBER
--Invoice Distribution Amount
 , p_source_57            IN NUMBER
--Self-Assessed Tax Flag
 , p_source_59            IN VARCHAR2
 , p_source_59_meaning    IN VARCHAR2
--Invoice Distribution Encumbrance Amount
 , p_source_65            IN NUMBER
--Invoice Distribution Encumbrance Ledger Amount
 , p_source_66            IN NUMBER
)
IS

l_component_type              VARCHAR2(80);
l_component_code              VARCHAR2(30);
l_component_type_code         VARCHAR2(1);
l_component_appl_id           INTEGER;
l_amb_context_code            VARCHAR2(30);
l_entity_code                 VARCHAR2(30);
l_event_class_code            VARCHAR2(30);
l_ae_header_id                NUMBER;
l_event_type_code             VARCHAR2(30);
l_line_definition_code        VARCHAR2(30);
l_line_definition_owner_code  VARCHAR2(1);
--
-- adr variables
l_segment                     VARCHAR2(30);
l_ccid                        NUMBER;
l_adr_transaction_coa_id      NUMBER;
l_adr_accounting_coa_id       NUMBER;
l_adr_flexfield_segment_code  VARCHAR2(30);
l_adr_flex_value_set_id       NUMBER;
l_adr_value_type_code         VARCHAR2(30);
l_adr_value_combination_id    NUMBER;
l_adr_value_segment_code      VARCHAR2(30);

l_bflow_method_code           VARCHAR2(30);  -- 4219869 Business Flow
l_bflow_class_code            VARCHAR2(30);  -- 4219869 Business Flow
l_inherit_desc_flag           VARCHAR2(1);   -- 4219869 Business Flow
l_budgetary_control_flag      VARCHAR2(1);   -- 4458381 Public Sector Enh

-- 4262811 Variables ------------------------------------------------------------------------------------------
l_entered_amt_idx             NUMBER;
l_accted_amt_idx              NUMBER;
l_acc_rev_flag                VARCHAR2(1);
l_accrual_line_num            NUMBER;
l_tmp_amt                     NUMBER;
l_acc_rev_natural_side_code   VARCHAR2(1);

l_num_entries                 NUMBER;
l_gl_dates                    xla_ae_journal_entry_pkg.t_array_date;
l_accted_amts                 xla_ae_journal_entry_pkg.t_array_num;
l_entered_amts                xla_ae_journal_entry_pkg.t_array_num;
l_period_names                xla_ae_journal_entry_pkg.t_array_V15L;
l_recog_line_1                NUMBER;
l_recog_line_2                NUMBER;

l_bflow_applied_to_amt_idx    NUMBER;                                -- 5132302
l_bflow_applied_to_amt        NUMBER;                                -- 5132302
l_bflow_applied_to_amts       xla_ae_journal_entry_pkg.t_array_num;  -- 5132302

l_event_id                    NUMBER;  -- To handle MPA header Description: xla_ae_header_pkg.SetHdrDescription

--l_rounding_ccy                VARCHAR2(15); -- To handle MPA rounding  4262811b
l_same_currency               BOOLEAN;        -- To handle MPA rounding  4262811b

---------------------------------------------------------------------------------------------------------------


--
-- bulk performance
--
l_balance_type_code           VARCHAR2(1);
l_rec_acct_attrs              XLA_AE_LINES_PKG.t_rec_acct_attrs;
l_log_module                  VARCHAR2(240);

--
-- Upgrade strategy
--
l_actual_upg_option           VARCHAR2(1);
l_enc_upg_option           VARCHAR2(1);

--
BEGIN
--
IF g_log_enabled THEN
      l_log_module := C_DEFAULT_MODULE||'.AcctLineType_59';
END IF;
--
IF (C_LEVEL_PROCEDURE >= g_log_level) THEN

      trace
         (p_msg      => 'BEGIN of AcctLineType_59'
         ,p_level    => C_LEVEL_PROCEDURE
         ,p_module   => l_log_module);

END IF;
--
l_component_type             := 'AMB_JLT';
l_component_code             := 'AP_RECOV_TAX_INV_ENC_DR';
l_component_type_code        := 'S';
l_component_appl_id          :=  200;
l_amb_context_code           := 'DEFAULT';
l_entity_code                := 'AP_INVOICES';
l_event_class_code           := 'INVOICES';
l_event_type_code            := 'INVOICES_ALL';
l_line_definition_owner_code := 'S';
l_line_definition_code       := 'ENC_INVOICES_ALL';
--
l_balance_type_code          := 'E';
l_segment                     := NULL;
l_ccid                        := NULL;
l_adr_transaction_coa_id      := NULL;
l_adr_accounting_coa_id       := NULL;
l_adr_flexfield_segment_code  := NULL;
l_adr_flex_value_set_id       := NULL;
l_adr_value_type_code         := NULL;
l_adr_value_combination_id    := NULL;
l_adr_value_segment_code      := NULL;

l_bflow_method_code          := 'NONE';   -- 4219869 Business Flow
l_bflow_class_code           := 'AP_INV_ENCUM';    -- 4219869 Business Flow
l_inherit_desc_flag          := 'N';   -- 4219869 Business Flow
l_budgetary_control_flag     := 'Y';

l_bflow_applied_to_amt_idx   := NULL; -- 5132302
l_bflow_applied_to_amt       := NULL; -- 5132302
l_entered_amt_idx            := NULL;          -- 4262811
l_accted_amt_idx             := NULL;          -- 4262811
l_acc_rev_flag               := NULL;          -- 4262811
l_accrual_line_num           := NULL;          -- 4262811
l_tmp_amt                    := NULL;          -- 4262811
--
 
IF XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id = XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.ledger_id OR
    l_balance_type_code <> 'B' THEN
IF NVL(p_source_15,'
') =  'REC_TAX' AND 
NVL(p_source_59,'
') <>  'Y' AND 
NVL(p_source_17,'
') =  'Y'
 THEN 

   --
   XLA_AE_LINES_PKG.SetNewLine;

   p_balance_type_code          := l_balance_type_code;
   -- set the flag so later we will know whether the gain loss line needs to be created
   
   IF(l_balance_type_code = 'A' and p_actual_flag is null) THEN
     p_actual_flag :='A';
   END IF;

   --
   -- bulk performance
   --
   XLA_AE_LINES_PKG.set_ae_header_id (p_ae_header_id => p_event_id ,
                                      p_header_num   => 0); -- 4262811
   --
   -- set accounting line options
   --
   l_ae_header_id:= xla_ae_lines_pkg.SetAcctLineOption(
           p_natural_side_code          => 'D'
         , p_gain_or_loss_flag          => 'N'
         , p_gl_transfer_mode_code      => 'S'
         , p_acct_entry_type_code       => 'E'
         , p_switch_side_flag           => 'Y'
         , p_merge_duplicate_code       => 'N'
         );
   --
   l_acc_rev_natural_side_code := 'C';  -- 4262811
   -- 
   --
   -- set accounting line type info
   --
   xla_ae_lines_pkg.SetAcctLineType
      (p_component_type             => l_component_type
      ,p_event_type_code            => l_event_type_code
      ,p_line_definition_owner_code => l_line_definition_owner_code
      ,p_line_definition_code       => l_line_definition_code
      ,p_accounting_line_code       => l_component_code
      ,p_accounting_line_type_code  => l_component_type_code
      ,p_accounting_line_appl_id    => l_component_appl_id
      ,p_amb_context_code           => l_amb_context_code
      ,p_entity_code                => l_entity_code
      ,p_event_class_code           => l_event_class_code);
   --
   -- set accounting class
   --
   xla_ae_lines_pkg.SetAcctClass(
           p_accounting_class_code  => 'RTAX'
         , p_ae_header_id           => l_ae_header_id
         );

   --
   -- set rounding class
   --
   XLA_AE_LINES_PKG.g_rec_lines.array_rounding_class(XLA_AE_LINES_PKG.g_LineNumber) :=
                      'RTAX';

   --
   xla_ae_lines_pkg.g_rec_lines.array_calculate_acctd_flag(xla_ae_lines_pkg.g_LineNumber) := p_calculate_acctd_flag;
   xla_ae_lines_pkg.g_rec_lines.array_calculate_g_l_flag(xla_ae_lines_pkg.g_LineNumber) := p_calculate_g_l_flag;
   --
   -- bulk performance
   --
   XLA_AE_LINES_PKG.g_rec_lines.array_balance_type_code(XLA_AE_LINES_PKG.g_LineNumber) := l_balance_type_code;

   XLA_AE_LINES_PKG.g_rec_lines.array_ledger_id(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id;

   -- 4955764
   XLA_AE_LINES_PKG.g_rec_lines.array_gl_date(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_HEADER_PKG.g_rec_header_new.array_gl_date(g_array_event(p_event_id).array_value_num('header_index'));

   -- 4458381 Public Sector Enh
      XLA_AE_LINES_PKG.g_rec_lines.array_encumbrance_type_id(XLA_AE_LINES_PKG.g_LineNumber) := 1060;
   --
   -- set accounting attributes for the line type
   --
   l_entered_amt_idx := 24;
   l_accted_amt_idx  := 29;
   l_bflow_applied_to_amt_idx  := 7;  -- 5132302
   l_rec_acct_attrs.array_acct_attr_code(1) := 'ACCOUNTING_REVERSAL_OPTION';
   l_rec_acct_attrs.array_char_value(1)  := p_source_19;
   l_rec_acct_attrs.array_acct_attr_code(2) := 'ALLOC_TO_APPLICATION_ID';
   l_rec_acct_attrs.array_num_value(2)  := 
xla_ae_sources_pkg.GetSystemSourceNum(
   p_source_code           => 'XLA_EVENT_APPL_ID'
 , p_source_type_code      => 'Y'
 , p_source_application_id =>  602
);
   l_rec_acct_attrs.array_acct_attr_code(3) := 'ALLOC_TO_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(3)  := p_source_21;
   l_rec_acct_attrs.array_acct_attr_code(4) := 'ALLOC_TO_ENTITY_CODE';
   l_rec_acct_attrs.array_char_value(4)  := 
xla_ae_sources_pkg.GetSystemSourceChar(
   p_source_code           => 'XLA_ENTITY_CODE'
 , p_source_type_code      => 'Y'
 , p_source_application_id =>  602
);
   l_rec_acct_attrs.array_acct_attr_code(5) := 'ALLOC_TO_FIRST_DIST_ID';
   l_rec_acct_attrs.array_num_value(5)  :=  to_char(p_source_23);
   l_rec_acct_attrs.array_acct_attr_code(6) := 'ALLOC_TO_FIRST_SYS_TRAN_ID';
   l_rec_acct_attrs.array_num_value(6)  :=  to_char(p_source_24);
   l_rec_acct_attrs.array_acct_attr_code(7) := 'APPLIED_TO_AMOUNT';
   l_rec_acct_attrs.array_num_value(7)  := p_source_57;
   l_rec_acct_attrs.array_acct_attr_code(8) := 'APPLIED_TO_APPLICATION_ID';
   l_rec_acct_attrs.array_num_value(8)  := p_source_25;
   l_rec_acct_attrs.array_acct_attr_code(9) := 'APPLIED_TO_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(9)  := p_source_26;
   l_rec_acct_attrs.array_acct_attr_code(10) := 'APPLIED_TO_ENTITY_CODE';
   l_rec_acct_attrs.array_char_value(10)  := p_source_27;
   l_rec_acct_attrs.array_acct_attr_code(11) := 'APPLIED_TO_FIRST_DIST_ID';
   l_rec_acct_attrs.array_num_value(11)  :=  to_char(p_source_28);
   l_rec_acct_attrs.array_acct_attr_code(12) := 'APPLIED_TO_FIRST_SYS_TRAN_ID';
   l_rec_acct_attrs.array_num_value(12)  :=  to_char(p_source_29);
   l_rec_acct_attrs.array_acct_attr_code(13) := 'DISTRIBUTION_IDENTIFIER_1';
   l_rec_acct_attrs.array_num_value(13)  :=  to_char(p_source_30);
   l_rec_acct_attrs.array_acct_attr_code(14) := 'DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(14)  := p_source_21;
   l_rec_acct_attrs.array_acct_attr_code(15) := 'ENC_UPG_CR_CCID';
   l_rec_acct_attrs.array_num_value(15)  := p_source_31;
   l_rec_acct_attrs.array_acct_attr_code(16) := 'ENC_UPG_CR_ENTERED_AMT';
   l_rec_acct_attrs.array_num_value(16)  := p_source_32;
   l_rec_acct_attrs.array_acct_attr_code(17) := 'ENC_UPG_CR_ENTERED_CURR';
   l_rec_acct_attrs.array_char_value(17)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(18) := 'ENC_UPG_CR_LEDGER_AMT';
   l_rec_acct_attrs.array_num_value(18)  := p_source_34;
   l_rec_acct_attrs.array_acct_attr_code(19) := 'ENC_UPG_DR_CCID';
   l_rec_acct_attrs.array_num_value(19)  := p_source_35;
   l_rec_acct_attrs.array_acct_attr_code(20) := 'ENC_UPG_DR_ENTERED_AMT';
   l_rec_acct_attrs.array_num_value(20)  := p_source_36;
   l_rec_acct_attrs.array_acct_attr_code(21) := 'ENC_UPG_DR_ENTERED_CURR';
   l_rec_acct_attrs.array_char_value(21)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(22) := 'ENC_UPG_DR_LEDGER_AMT';
   l_rec_acct_attrs.array_num_value(22)  := p_source_37;
   l_rec_acct_attrs.array_acct_attr_code(23) := 'ENC_UPG_OPTION';
   l_rec_acct_attrs.array_char_value(23)  := p_source_38;
   l_rec_acct_attrs.array_acct_attr_code(24) := 'ENTERED_CURRENCY_AMOUNT';
   l_rec_acct_attrs.array_num_value(24)  := p_source_65;
   l_rec_acct_attrs.array_acct_attr_code(25) := 'ENTERED_CURRENCY_CODE';
   l_rec_acct_attrs.array_char_value(25)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(26) := 'EXCHANGE_DATE';
   l_rec_acct_attrs.array_date_value(26)  := p_source_39;
   l_rec_acct_attrs.array_acct_attr_code(27) := 'EXCHANGE_RATE';
   l_rec_acct_attrs.array_num_value(27)  := p_source_40;
   l_rec_acct_attrs.array_acct_attr_code(28) := 'EXCHANGE_RATE_TYPE';
   l_rec_acct_attrs.array_char_value(28)  := p_source_41;
   l_rec_acct_attrs.array_acct_attr_code(29) := 'LEDGER_AMOUNT';
   l_rec_acct_attrs.array_num_value(29)  := p_source_66;
   l_rec_acct_attrs.array_acct_attr_code(30) := 'MULTIPERIOD_END_DATE';
   l_rec_acct_attrs.array_date_value(30)  := p_source_43;
   l_rec_acct_attrs.array_acct_attr_code(31) := 'MULTIPERIOD_OPTION';
   l_rec_acct_attrs.array_char_value(31)  := p_source_44;
   l_rec_acct_attrs.array_acct_attr_code(32) := 'MULTIPERIOD_START_DATE';
   l_rec_acct_attrs.array_date_value(32)  := p_source_45;
   l_rec_acct_attrs.array_acct_attr_code(33) := 'OVERRIDE_ACCTD_AMT_FLAG';
   l_rec_acct_attrs.array_char_value(33)  := p_source_46;
   l_rec_acct_attrs.array_acct_attr_code(34) := 'PARTY_ID';
   l_rec_acct_attrs.array_num_value(34)  := p_source_47;
   l_rec_acct_attrs.array_acct_attr_code(35) := 'PARTY_SITE_ID';
   l_rec_acct_attrs.array_num_value(35)  := p_source_48;
   l_rec_acct_attrs.array_acct_attr_code(36) := 'PARTY_TYPE';
   l_rec_acct_attrs.array_char_value(36)  := p_source_49;
   l_rec_acct_attrs.array_acct_attr_code(37) := 'REVERSED_DISTRIBUTION_ID1';
   l_rec_acct_attrs.array_num_value(37)  :=  to_char(p_source_50);
   l_rec_acct_attrs.array_acct_attr_code(38) := 'REVERSED_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(38)  := p_source_21;
   l_rec_acct_attrs.array_acct_attr_code(39) := 'STATISTICAL_AMOUNT';
   l_rec_acct_attrs.array_num_value(39)  := p_source_51;
   l_rec_acct_attrs.array_acct_attr_code(40) := 'TAX_LINE_REF_ID';
   l_rec_acct_attrs.array_num_value(40)  := p_source_52;
   l_rec_acct_attrs.array_acct_attr_code(41) := 'TAX_REC_NREC_DIST_REF_ID';
   l_rec_acct_attrs.array_num_value(41)  := p_source_53;
   l_rec_acct_attrs.array_acct_attr_code(42) := 'TAX_SUMMARY_LINE_REF_ID';
   l_rec_acct_attrs.array_num_value(42)  := p_source_54;
   l_rec_acct_attrs.array_acct_attr_code(43) := 'UPG_CR_ENC_TYPE_ID';
   l_rec_acct_attrs.array_num_value(43)  := p_source_55;
   l_rec_acct_attrs.array_acct_attr_code(44) := 'UPG_DR_ENC_TYPE_ID';
   l_rec_acct_attrs.array_num_value(44)  := p_source_56;

   XLA_AE_LINES_PKG.SetLineAcctAttrs(l_rec_acct_attrs);
   p_gain_or_loss_ref  := XLA_AE_LINES_PKG.g_rec_lines.array_gain_or_loss_ref(XLA_AE_LINES_PKG.g_LineNumber);

   ---------------------------------------------------------------------------------------------------------------
   -- 4336173 -- assign Business Flow Class (replace code in xla_ae_lines_pkg.Business_Flow_Validation)
   ---------------------------------------------------------------------------------------------------------------
   XLA_AE_LINES_PKG.g_rec_lines.array_business_class_code(XLA_AE_LINES_PKG.g_LineNumber) := l_bflow_class_code;

   l_actual_upg_option  := XLA_AE_LINES_PKG.g_rec_lines.array_actual_upg_option(XLA_AE_LINES_PKG.g_LineNumber);
   l_enc_upg_option     := XLA_AE_LINES_PKG.g_rec_lines.array_enc_upg_option(XLA_AE_LINES_PKG.g_LineNumber);

   IF xla_accounting_cache_pkg.GetValueChar
         (p_source_code         => 'LEDGER_CATEGORY_CODE'
         ,p_target_ledger_id    => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id) IN ('PRIMARY','ALC')
   AND l_bflow_method_code = 'PRIOR_ENTRY'
--   AND (l_actual_upg_option = 'Y' OR l_enc_upg_option = 'Y') Bug 4922099
   AND ( (NVL(l_actual_upg_option, 'N') IN ('Y', 'O')) OR
         (NVL(l_enc_upg_option, 'N') IN ('Y', 'O'))
       )
   THEN
         xla_ae_lines_pkg.BflowUpgEntry
           (p_business_method_code    => l_bflow_method_code
           ,p_business_class_code     => l_bflow_class_code
           ,p_balance_type            => l_balance_type_code);
   ELSE
      NULL;
-- No business flow processing for business flow method of NONE.
   END IF;

   --
   -- call analytical criteria
   --
   
   --
   -- call description
   --
   
xla_ae_lines_pkg.SetLineDescription(
   p_ae_header_id => l_ae_header_id
  ,p_description  => Description_2 (
     p_application_id         => p_application_id
   , p_ae_header_id           => l_ae_header_id 
, p_source_1 => p_source_1
   )
);


   --
   -- call ADRs
   -- Bug 4922099
   --
   IF ( (l_bflow_method_code <> 'PRIOR_ENTRY') OR
        (NVL(l_actual_upg_option, 'N') = 'O') OR
        (NVL(l_enc_upg_option, 'N') = 'O')
      )
   THEN
   NULL;
   --
   --
   
  l_ccid := AcctDerRule_7(
           p_application_id           => p_application_id
         , p_ae_header_id             => l_ae_header_id 
, p_source_11 => p_source_11
         , x_transaction_coa_id       => l_adr_transaction_coa_id
         , x_accounting_coa_id        => l_adr_accounting_coa_id
         , x_value_type_code          => l_adr_value_type_code
         , p_side                     => 'NA'
   );

   xla_ae_lines_pkg.set_ccid(
    p_code_combination_id          => l_ccid
  , p_value_type_code              => l_adr_value_type_code
  , p_transaction_coa_id           => l_adr_transaction_coa_id
  , p_accounting_coa_id            => l_adr_accounting_coa_id
  , p_adr_code                     => 'AP_INVOICE_DIST'
  , p_adr_type_code                => 'S'
  , p_component_type               => l_component_type
  , p_component_code               => l_component_code
  , p_component_type_code          => l_component_type_code
  , p_component_appl_id            => l_component_appl_id
  , p_amb_context_code             => l_amb_context_code
  , p_side                         => 'NA'
  );


   --
   --
   END IF;
   --
   -- Bug 4922099
   IF ( ( (NVL(l_actual_upg_option, 'N') = 'O') OR
          (NVL(l_enc_upg_option, 'N') = 'O')
        ) AND
        (l_bflow_method_code = 'PRIOR_ENTRY')
      )
   THEN
      IF
      --
      1 = 2
      --
      THEN
      xla_accounting_err_pkg.build_message
                                    (p_appli_s_name            => 'XLA'
                                    ,p_msg_name                => 'XLA_UPG_OVERRIDE_ADR_UNDEFINED'
                                    ,p_token_1                 => 'LINE_NUMBER'
                                    ,p_value_1                 => XLA_AE_LINES_PKG.g_LineNumber
                                    ,p_token_2                 => 'LINE_TYPE_NAME'
                                    ,p_value_2                 => XLA_AE_SOURCES_PKG.GetComponentName (
                                                                             l_component_type
                                                                            ,l_component_code
                                                                            ,l_component_type_code
                                                                            ,l_component_appl_id
                                                                            ,l_amb_context_code
                                                                            ,l_entity_code
                                                                            ,l_event_class_code
                                                                           )
                                    ,p_token_3                 => 'OWNER'
                                    ,p_value_3                 => xla_lookups_pkg.get_meaning(
                                                                          p_lookup_type     => 'XLA_OWNER_TYPE'
                                                                          ,p_lookup_code    => l_component_type_code
                                                                         )
                                    ,p_token_4                 => 'PRODUCT_NAME'
                                    ,p_value_4                 => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.application_name
                                    ,p_entity_id               => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.entity_id
                                    ,p_event_id                => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.event_id
                                    ,p_ledger_id               => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id
                                    ,p_ae_header_id            =>  NULL
                                       );

        IF (C_LEVEL_ERROR>= g_log_level) THEN
                 trace
                      (p_msg      => 'ERROR: XLA_UPG_OVERRIDE_ADR_UNDEFINED'
                      ,p_level    => C_LEVEL_ERROR
                      ,p_module   => l_log_module);
        END IF;
      END IF;
   END IF;
   --
   --
   ------------------------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- NOTE: XLA_AE_LINES_PKG.ValidateCurrentLine should NOT be generated if business flow method is
   -- Prior Entry.  Currently, the following code is always generated.
   ------------------------------------------------------------------------------------------------
   XLA_AE_LINES_PKG.ValidateCurrentLine;

   ------------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- Populated credit and debit amounts -- Need to generate this within IF <condition>
   ------------------------------------------------------------------------------------
   XLA_AE_LINES_PKG.SetDebitCreditAmounts;

   ----------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- Update journal entry status -- Need to generate this within IF <condition>
   ----------------------------------------------------------------------------------
   XLA_AE_JOURNAL_ENTRY_PKG.UpdateJournalEntryStatus
         (p_hdr_idx => g_array_event(p_event_id).array_value_num('header_index')
         ,p_balance_type_code => l_balance_type_code
         );

   -------------------------------------------------------------------------------------------
   -- 4262811 - Generate the Accrual Reversal lines
   -------------------------------------------------------------------------------------------
   BEGIN
      l_acc_rev_flag := XLA_AE_HEADER_PKG.g_rec_header_new.array_accrual_reversal_flag
                              (g_array_event(p_event_id).array_value_num('header_index'));
      IF l_acc_rev_flag IS NULL THEN
         l_acc_rev_flag := 'N';
      END IF;
   EXCEPTION
      WHEN OTHERS THEN
         l_acc_rev_flag := 'N';
   END;
   --
   IF (l_acc_rev_flag = 'Y') THEN

       -- 4645092  ------------------------------------------------------------------------------
       -- To allow MPA report to determine if it should generate report process
       XLA_ACCOUNTING_PKG.g_mpa_accrual_exists := 'Y';
       ------------------------------------------------------------------------------------------

       l_accrual_line_num := XLA_AE_LINES_PKG.g_LineNumber;
       XLA_AE_LINES_PKG.CopyLineInfo(l_accrual_line_num);
   -- added call to set_ccid to execute mapping  for secondary accrual reversal entries bug 7444204
   -- call ADRs
   -- Bug 4922099
   --
   IF ( (l_bflow_method_code <> 'PRIOR_ENTRY') OR
        (NVL(l_actual_upg_option, 'N') = 'O') OR
        (NVL(l_enc_upg_option, 'N') = 'O')
      )
   THEN
   NULL;
   --
   --
   
  l_ccid := AcctDerRule_7(
           p_application_id           => p_application_id
         , p_ae_header_id             => l_ae_header_id 
, p_source_11 => p_source_11
         , x_transaction_coa_id       => l_adr_transaction_coa_id
         , x_accounting_coa_id        => l_adr_accounting_coa_id
         , x_value_type_code          => l_adr_value_type_code
         , p_side                     => 'NA'
   );

   xla_ae_lines_pkg.set_ccid(
    p_code_combination_id          => l_ccid
  , p_value_type_code              => l_adr_value_type_code
  , p_transaction_coa_id           => l_adr_transaction_coa_id
  , p_accounting_coa_id            => l_adr_accounting_coa_id
  , p_adr_code                     => 'AP_INVOICE_DIST'
  , p_adr_type_code                => 'S'
  , p_component_type               => l_component_type
  , p_component_code               => l_component_code
  , p_component_type_code          => l_component_type_code
  , p_component_appl_id            => l_component_appl_id
  , p_amb_context_code             => l_amb_context_code
  , p_side                         => 'NA'
  );


   --
   --
   END IF;

       --
       -- Update the line information that should be overwritten
       --
       XLA_AE_LINES_PKG.set_ae_header_id(p_ae_header_id => p_event_id ,
                                         p_header_num   => 1);
       XLA_AE_LINES_PKG.g_rec_lines.array_header_num(XLA_AE_LINES_PKG.g_LineNumber)  :=1;

       XLA_AE_LINES_PKG.g_rec_lines.array_business_class_code(XLA_AE_LINES_PKG.g_LineNumber) := NULL; -- 4669271

       IF l_bflow_method_code <> 'NONE' THEN  -- 4655713b
          XLA_AE_LINES_PKG.g_rec_lines.array_reversal_code(XLA_AE_LINES_PKG.g_LineNumber) := CONCAT('MPA_',l_bflow_method_code);
       END IF;

      --
      -- Depending on the Reversal Method setup, do a switch side or changes sign for the amounts
      --
      IF (XLA_AE_JOURNAL_ENTRY_PKG.g_cache_ledgers_info.ledger_reversal_option = 'SIDE') THEN
          XLA_AE_LINES_PKG.g_rec_lines.array_natural_side_code(XLA_AE_LINES_PKG.g_LineNumber) :=  l_acc_rev_natural_side_code;
      ELSE
          ---------------------------------------------------------------------------------------------------
          -- 4262811a Switch Sign
          ---------------------------------------------------------------------------------------------------
          XLA_AE_LINES_PKG.g_rec_lines.array_switch_side_flag(XLA_AE_LINES_PKG.g_LineNumber) := 'N';  -- 5052518
          XLA_AE_LINES_PKG.g_rec_lines.array_ledger_amount(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_ledger_amount(XLA_AE_LINES_PKG.g_LineNumber) * -1;
          XLA_AE_LINES_PKG.g_rec_lines.array_entered_amount(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_entered_amount(XLA_AE_LINES_PKG.g_LineNumber) * -1;
          -- 5132302
          XLA_AE_LINES_PKG.g_rec_lines.array_bflow_applied_to_amt(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_bflow_applied_to_amt(XLA_AE_LINES_PKG.g_LineNumber) * -1;

      END IF;

      -- 4955764
      XLA_AE_LINES_PKG.g_rec_lines.array_gl_date(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_HEADER_PKG.g_rec_header_new.array_gl_date(g_array_event(p_event_id).array_value_num('acc_rev_header_index'));


      XLA_AE_LINES_PKG.ValidateCurrentLine;
      XLA_AE_LINES_PKG.SetDebitCreditAmounts;

      XLA_AE_JOURNAL_ENTRY_PKG.UpdateJournalEntryStatus
               (p_hdr_idx           => g_array_event(p_event_id).array_value_num('acc_rev_header_index')
               ,p_balance_type_code => l_balance_type_code);

   END IF;

   -----------------------------------------------------------------------------------------
   -- 4262811 Multiperiod Accounting
   -----------------------------------------------------------------------------------------
     -- No MPA option is assigned.


END IF;
END IF;
--

--
IF (C_LEVEL_PROCEDURE >= g_log_level) THEN
   trace
      (p_msg      => 'END of AcctLineType_59'
      ,p_level    => C_LEVEL_PROCEDURE
      ,p_module   => l_log_module);
END IF;
--
EXCEPTION
  WHEN xla_exceptions_pkg.application_exception THEN
      RAISE;
  WHEN OTHERS THEN
       xla_exceptions_pkg.raise_message
           (p_location => 'XLA_00200_AAD_S_000010_BC_PKG.AcctLineType_59');
END AcctLineType_59;
--

---------------------------------------
--
-- PRIVATE FUNCTION
--         AcctLineType_60
--
---------------------------------------
PROCEDURE AcctLineType_60 (
  p_application_id        IN NUMBER
 ,p_event_id              IN NUMBER
 ,p_calculate_acctd_flag  IN VARCHAR2
 ,p_calculate_g_l_flag    IN VARCHAR2
 ,p_actual_flag           IN OUT VARCHAR2
 ,p_balance_type_code     OUT VARCHAR2
 ,p_gain_or_loss_ref      OUT VARCHAR2
 
--Invoice Distribution Description
 , p_source_1            IN VARCHAR2
--Invoice Distribution Account
 , p_source_11            IN NUMBER
--Invoice Distribution Type
 , p_source_15            IN VARCHAR2
 , p_source_15_meaning    IN VARCHAR2
--Purchasing Encumbrance Option
 , p_source_17            IN VARCHAR2
 , p_source_17_meaning    IN VARCHAR2
--Accounting Reversal Indicator
 , p_source_19            IN VARCHAR2
--Distribution Link Type
 , p_source_21            IN VARCHAR2
--Allocation to Main Distribution Identifier
 , p_source_23            IN NUMBER
--Invoice Identifier
 , p_source_24            IN NUMBER
--Business Flow Accounts Payable Application Identifier
 , p_source_25            IN NUMBER
--Business Flow Invoice Distribution Type
 , p_source_26            IN VARCHAR2
--Business Flow Invoice Entity Code
 , p_source_27            IN VARCHAR2
--Business Flow Invoice Distribution Identifier
 , p_source_28            IN NUMBER
--Business Flow Invoice Identifier
 , p_source_29            IN NUMBER
--Invoice Distribution Identifier
 , p_source_30            IN NUMBER
--Payables Encumbrance Upgrade Credit Account
 , p_source_31            IN NUMBER
--Payables Encumbrance Upgrade Credit Amount
 , p_source_32            IN NUMBER
--Invoice Currency Code
 , p_source_33            IN VARCHAR2
--Payables Encumbrance Upgrade Credit Base Amount
 , p_source_34            IN NUMBER
--Payables Encumbrance Upgrade Debit Account
 , p_source_35            IN NUMBER
--Payables Encumbrance Upgrade Debit Amount
 , p_source_36            IN NUMBER
--Payables Encumbrance Upgrade Debit Base Amount
 , p_source_37            IN NUMBER
--Payables Encumbrance Upgrade Option
 , p_source_38            IN VARCHAR2
--Invoice Exchange Date
 , p_source_39            IN DATE
--Invoice Exchange Rate
 , p_source_40            IN NUMBER
--Invoice Exchange Rate Type
 , p_source_41            IN VARCHAR2
--Deferred Accounting End Date
 , p_source_43            IN DATE
--Deferred Accounting Option
 , p_source_44            IN VARCHAR2
--Deferred Accounting Start Date
 , p_source_45            IN DATE
--Override Accounted Amount Indicator
 , p_source_46            IN VARCHAR2
 , p_source_46_meaning    IN VARCHAR2
--Invoice Supplier Identifier
 , p_source_47            IN NUMBER
--Invoice Supplier Site Identifier
 , p_source_48            IN NUMBER
--Third Party Type
 , p_source_49            IN VARCHAR2
--Parent Reversal Identifier
 , p_source_50            IN NUMBER
--Invoice Distribution Statistical Amount
 , p_source_51            IN NUMBER
--Invoice Distribution Tax Line Identifier
 , p_source_52            IN NUMBER
--Invoice Distribution Tax Distribution Identifier from Tax
 , p_source_53            IN NUMBER
--Invoice Distribution Summary Tax Line Identifier
 , p_source_54            IN NUMBER
--Payables Upgrade Credit Encumbrance Type Identifier
 , p_source_55            IN NUMBER
--Payables Upgrade Debit Encumbrance Type Identifier
 , p_source_56            IN NUMBER
--Self-Assessed Tax Flag
 , p_source_59            IN VARCHAR2
 , p_source_59_meaning    IN VARCHAR2
--Invoice Distribution Encumbrance Amount
 , p_source_65            IN NUMBER
--Invoice Distribution Encumbrance Ledger Amount
 , p_source_66            IN NUMBER
)
IS

l_component_type              VARCHAR2(80);
l_component_code              VARCHAR2(30);
l_component_type_code         VARCHAR2(1);
l_component_appl_id           INTEGER;
l_amb_context_code            VARCHAR2(30);
l_entity_code                 VARCHAR2(30);
l_event_class_code            VARCHAR2(30);
l_ae_header_id                NUMBER;
l_event_type_code             VARCHAR2(30);
l_line_definition_code        VARCHAR2(30);
l_line_definition_owner_code  VARCHAR2(1);
--
-- adr variables
l_segment                     VARCHAR2(30);
l_ccid                        NUMBER;
l_adr_transaction_coa_id      NUMBER;
l_adr_accounting_coa_id       NUMBER;
l_adr_flexfield_segment_code  VARCHAR2(30);
l_adr_flex_value_set_id       NUMBER;
l_adr_value_type_code         VARCHAR2(30);
l_adr_value_combination_id    NUMBER;
l_adr_value_segment_code      VARCHAR2(30);

l_bflow_method_code           VARCHAR2(30);  -- 4219869 Business Flow
l_bflow_class_code            VARCHAR2(30);  -- 4219869 Business Flow
l_inherit_desc_flag           VARCHAR2(1);   -- 4219869 Business Flow
l_budgetary_control_flag      VARCHAR2(1);   -- 4458381 Public Sector Enh

-- 4262811 Variables ------------------------------------------------------------------------------------------
l_entered_amt_idx             NUMBER;
l_accted_amt_idx              NUMBER;
l_acc_rev_flag                VARCHAR2(1);
l_accrual_line_num            NUMBER;
l_tmp_amt                     NUMBER;
l_acc_rev_natural_side_code   VARCHAR2(1);

l_num_entries                 NUMBER;
l_gl_dates                    xla_ae_journal_entry_pkg.t_array_date;
l_accted_amts                 xla_ae_journal_entry_pkg.t_array_num;
l_entered_amts                xla_ae_journal_entry_pkg.t_array_num;
l_period_names                xla_ae_journal_entry_pkg.t_array_V15L;
l_recog_line_1                NUMBER;
l_recog_line_2                NUMBER;

l_bflow_applied_to_amt_idx    NUMBER;                                -- 5132302
l_bflow_applied_to_amt        NUMBER;                                -- 5132302
l_bflow_applied_to_amts       xla_ae_journal_entry_pkg.t_array_num;  -- 5132302

l_event_id                    NUMBER;  -- To handle MPA header Description: xla_ae_header_pkg.SetHdrDescription

--l_rounding_ccy                VARCHAR2(15); -- To handle MPA rounding  4262811b
l_same_currency               BOOLEAN;        -- To handle MPA rounding  4262811b

---------------------------------------------------------------------------------------------------------------


--
-- bulk performance
--
l_balance_type_code           VARCHAR2(1);
l_rec_acct_attrs              XLA_AE_LINES_PKG.t_rec_acct_attrs;
l_log_module                  VARCHAR2(240);

--
-- Upgrade strategy
--
l_actual_upg_option           VARCHAR2(1);
l_enc_upg_option           VARCHAR2(1);

--
BEGIN
--
IF g_log_enabled THEN
      l_log_module := C_DEFAULT_MODULE||'.AcctLineType_60';
END IF;
--
IF (C_LEVEL_PROCEDURE >= g_log_level) THEN

      trace
         (p_msg      => 'BEGIN of AcctLineType_60'
         ,p_level    => C_LEVEL_PROCEDURE
         ,p_module   => l_log_module);

END IF;
--
l_component_type             := 'AMB_JLT';
l_component_code             := 'AP_RECOV_TAX_PP_ENC_DR';
l_component_type_code        := 'S';
l_component_appl_id          :=  200;
l_amb_context_code           := 'DEFAULT';
l_entity_code                := 'AP_INVOICES';
l_event_class_code           := 'PREPAYMENTS';
l_event_type_code            := 'PREPAYMENTS_ALL';
l_line_definition_owner_code := 'S';
l_line_definition_code       := 'ENC_PREPAY_ALL';
--
l_balance_type_code          := 'E';
l_segment                     := NULL;
l_ccid                        := NULL;
l_adr_transaction_coa_id      := NULL;
l_adr_accounting_coa_id       := NULL;
l_adr_flexfield_segment_code  := NULL;
l_adr_flex_value_set_id       := NULL;
l_adr_value_type_code         := NULL;
l_adr_value_combination_id    := NULL;
l_adr_value_segment_code      := NULL;

l_bflow_method_code          := 'NONE';   -- 4219869 Business Flow
l_bflow_class_code           := 'AP_INV_ENCUM';    -- 4219869 Business Flow
l_inherit_desc_flag          := 'N';   -- 4219869 Business Flow
l_budgetary_control_flag     := 'Y';

l_bflow_applied_to_amt_idx   := NULL; -- 5132302
l_bflow_applied_to_amt       := NULL; -- 5132302
l_entered_amt_idx            := NULL;          -- 4262811
l_accted_amt_idx             := NULL;          -- 4262811
l_acc_rev_flag               := NULL;          -- 4262811
l_accrual_line_num           := NULL;          -- 4262811
l_tmp_amt                    := NULL;          -- 4262811
--
 
IF XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id = XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.ledger_id OR
    l_balance_type_code <> 'B' THEN
IF NVL(p_source_15,'
') =  'REC_TAX' AND 
NVL(p_source_59,'
') <>  'Y' AND 
NVL(p_source_17,'
') =  'Y'
 THEN 

   --
   XLA_AE_LINES_PKG.SetNewLine;

   p_balance_type_code          := l_balance_type_code;
   -- set the flag so later we will know whether the gain loss line needs to be created
   
   IF(l_balance_type_code = 'A' and p_actual_flag is null) THEN
     p_actual_flag :='A';
   END IF;

   --
   -- bulk performance
   --
   XLA_AE_LINES_PKG.set_ae_header_id (p_ae_header_id => p_event_id ,
                                      p_header_num   => 0); -- 4262811
   --
   -- set accounting line options
   --
   l_ae_header_id:= xla_ae_lines_pkg.SetAcctLineOption(
           p_natural_side_code          => 'D'
         , p_gain_or_loss_flag          => 'N'
         , p_gl_transfer_mode_code      => 'S'
         , p_acct_entry_type_code       => 'E'
         , p_switch_side_flag           => 'Y'
         , p_merge_duplicate_code       => 'N'
         );
   --
   l_acc_rev_natural_side_code := 'C';  -- 4262811
   -- 
   --
   -- set accounting line type info
   --
   xla_ae_lines_pkg.SetAcctLineType
      (p_component_type             => l_component_type
      ,p_event_type_code            => l_event_type_code
      ,p_line_definition_owner_code => l_line_definition_owner_code
      ,p_line_definition_code       => l_line_definition_code
      ,p_accounting_line_code       => l_component_code
      ,p_accounting_line_type_code  => l_component_type_code
      ,p_accounting_line_appl_id    => l_component_appl_id
      ,p_amb_context_code           => l_amb_context_code
      ,p_entity_code                => l_entity_code
      ,p_event_class_code           => l_event_class_code);
   --
   -- set accounting class
   --
   xla_ae_lines_pkg.SetAcctClass(
           p_accounting_class_code  => 'RTAX'
         , p_ae_header_id           => l_ae_header_id
         );

   --
   -- set rounding class
   --
   XLA_AE_LINES_PKG.g_rec_lines.array_rounding_class(XLA_AE_LINES_PKG.g_LineNumber) :=
                      'RTAX';

   --
   xla_ae_lines_pkg.g_rec_lines.array_calculate_acctd_flag(xla_ae_lines_pkg.g_LineNumber) := p_calculate_acctd_flag;
   xla_ae_lines_pkg.g_rec_lines.array_calculate_g_l_flag(xla_ae_lines_pkg.g_LineNumber) := p_calculate_g_l_flag;
   --
   -- bulk performance
   --
   XLA_AE_LINES_PKG.g_rec_lines.array_balance_type_code(XLA_AE_LINES_PKG.g_LineNumber) := l_balance_type_code;

   XLA_AE_LINES_PKG.g_rec_lines.array_ledger_id(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id;

   -- 4955764
   XLA_AE_LINES_PKG.g_rec_lines.array_gl_date(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_HEADER_PKG.g_rec_header_new.array_gl_date(g_array_event(p_event_id).array_value_num('header_index'));

   -- 4458381 Public Sector Enh
      XLA_AE_LINES_PKG.g_rec_lines.array_encumbrance_type_id(XLA_AE_LINES_PKG.g_LineNumber) := 1060;
   --
   -- set accounting attributes for the line type
   --
   l_entered_amt_idx := 23;
   l_accted_amt_idx  := 28;
   l_bflow_applied_to_amt_idx  := NULL;  -- 5132302
   l_rec_acct_attrs.array_acct_attr_code(1) := 'ACCOUNTING_REVERSAL_OPTION';
   l_rec_acct_attrs.array_char_value(1)  := p_source_19;
   l_rec_acct_attrs.array_acct_attr_code(2) := 'ALLOC_TO_APPLICATION_ID';
   l_rec_acct_attrs.array_num_value(2)  := 
xla_ae_sources_pkg.GetSystemSourceNum(
   p_source_code           => 'XLA_EVENT_APPL_ID'
 , p_source_type_code      => 'Y'
 , p_source_application_id =>  602
);
   l_rec_acct_attrs.array_acct_attr_code(3) := 'ALLOC_TO_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(3)  := p_source_21;
   l_rec_acct_attrs.array_acct_attr_code(4) := 'ALLOC_TO_ENTITY_CODE';
   l_rec_acct_attrs.array_char_value(4)  := 
xla_ae_sources_pkg.GetSystemSourceChar(
   p_source_code           => 'XLA_ENTITY_CODE'
 , p_source_type_code      => 'Y'
 , p_source_application_id =>  602
);
   l_rec_acct_attrs.array_acct_attr_code(5) := 'ALLOC_TO_FIRST_DIST_ID';
   l_rec_acct_attrs.array_num_value(5)  :=  to_char(p_source_23);
   l_rec_acct_attrs.array_acct_attr_code(6) := 'ALLOC_TO_FIRST_SYS_TRAN_ID';
   l_rec_acct_attrs.array_num_value(6)  :=  to_char(p_source_24);
   l_rec_acct_attrs.array_acct_attr_code(7) := 'APPLIED_TO_APPLICATION_ID';
   l_rec_acct_attrs.array_num_value(7)  := p_source_25;
   l_rec_acct_attrs.array_acct_attr_code(8) := 'APPLIED_TO_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(8)  := p_source_26;
   l_rec_acct_attrs.array_acct_attr_code(9) := 'APPLIED_TO_ENTITY_CODE';
   l_rec_acct_attrs.array_char_value(9)  := p_source_27;
   l_rec_acct_attrs.array_acct_attr_code(10) := 'APPLIED_TO_FIRST_DIST_ID';
   l_rec_acct_attrs.array_num_value(10)  :=  to_char(p_source_28);
   l_rec_acct_attrs.array_acct_attr_code(11) := 'APPLIED_TO_FIRST_SYS_TRAN_ID';
   l_rec_acct_attrs.array_num_value(11)  :=  to_char(p_source_29);
   l_rec_acct_attrs.array_acct_attr_code(12) := 'DISTRIBUTION_IDENTIFIER_1';
   l_rec_acct_attrs.array_num_value(12)  :=  to_char(p_source_30);
   l_rec_acct_attrs.array_acct_attr_code(13) := 'DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(13)  := p_source_21;
   l_rec_acct_attrs.array_acct_attr_code(14) := 'ENC_UPG_CR_CCID';
   l_rec_acct_attrs.array_num_value(14)  := p_source_31;
   l_rec_acct_attrs.array_acct_attr_code(15) := 'ENC_UPG_CR_ENTERED_AMT';
   l_rec_acct_attrs.array_num_value(15)  := p_source_32;
   l_rec_acct_attrs.array_acct_attr_code(16) := 'ENC_UPG_CR_ENTERED_CURR';
   l_rec_acct_attrs.array_char_value(16)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(17) := 'ENC_UPG_CR_LEDGER_AMT';
   l_rec_acct_attrs.array_num_value(17)  := p_source_34;
   l_rec_acct_attrs.array_acct_attr_code(18) := 'ENC_UPG_DR_CCID';
   l_rec_acct_attrs.array_num_value(18)  := p_source_35;
   l_rec_acct_attrs.array_acct_attr_code(19) := 'ENC_UPG_DR_ENTERED_AMT';
   l_rec_acct_attrs.array_num_value(19)  := p_source_36;
   l_rec_acct_attrs.array_acct_attr_code(20) := 'ENC_UPG_DR_ENTERED_CURR';
   l_rec_acct_attrs.array_char_value(20)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(21) := 'ENC_UPG_DR_LEDGER_AMT';
   l_rec_acct_attrs.array_num_value(21)  := p_source_37;
   l_rec_acct_attrs.array_acct_attr_code(22) := 'ENC_UPG_OPTION';
   l_rec_acct_attrs.array_char_value(22)  := p_source_38;
   l_rec_acct_attrs.array_acct_attr_code(23) := 'ENTERED_CURRENCY_AMOUNT';
   l_rec_acct_attrs.array_num_value(23)  := p_source_65;
   l_rec_acct_attrs.array_acct_attr_code(24) := 'ENTERED_CURRENCY_CODE';
   l_rec_acct_attrs.array_char_value(24)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(25) := 'EXCHANGE_DATE';
   l_rec_acct_attrs.array_date_value(25)  := p_source_39;
   l_rec_acct_attrs.array_acct_attr_code(26) := 'EXCHANGE_RATE';
   l_rec_acct_attrs.array_num_value(26)  := p_source_40;
   l_rec_acct_attrs.array_acct_attr_code(27) := 'EXCHANGE_RATE_TYPE';
   l_rec_acct_attrs.array_char_value(27)  := p_source_41;
   l_rec_acct_attrs.array_acct_attr_code(28) := 'LEDGER_AMOUNT';
   l_rec_acct_attrs.array_num_value(28)  := p_source_66;
   l_rec_acct_attrs.array_acct_attr_code(29) := 'MULTIPERIOD_END_DATE';
   l_rec_acct_attrs.array_date_value(29)  := p_source_43;
   l_rec_acct_attrs.array_acct_attr_code(30) := 'MULTIPERIOD_OPTION';
   l_rec_acct_attrs.array_char_value(30)  := p_source_44;
   l_rec_acct_attrs.array_acct_attr_code(31) := 'MULTIPERIOD_START_DATE';
   l_rec_acct_attrs.array_date_value(31)  := p_source_45;
   l_rec_acct_attrs.array_acct_attr_code(32) := 'OVERRIDE_ACCTD_AMT_FLAG';
   l_rec_acct_attrs.array_char_value(32)  := p_source_46;
   l_rec_acct_attrs.array_acct_attr_code(33) := 'PARTY_ID';
   l_rec_acct_attrs.array_num_value(33)  := p_source_47;
   l_rec_acct_attrs.array_acct_attr_code(34) := 'PARTY_SITE_ID';
   l_rec_acct_attrs.array_num_value(34)  := p_source_48;
   l_rec_acct_attrs.array_acct_attr_code(35) := 'PARTY_TYPE';
   l_rec_acct_attrs.array_char_value(35)  := p_source_49;
   l_rec_acct_attrs.array_acct_attr_code(36) := 'REVERSED_DISTRIBUTION_ID1';
   l_rec_acct_attrs.array_num_value(36)  :=  to_char(p_source_50);
   l_rec_acct_attrs.array_acct_attr_code(37) := 'REVERSED_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(37)  := p_source_21;
   l_rec_acct_attrs.array_acct_attr_code(38) := 'STATISTICAL_AMOUNT';
   l_rec_acct_attrs.array_num_value(38)  := p_source_51;
   l_rec_acct_attrs.array_acct_attr_code(39) := 'TAX_LINE_REF_ID';
   l_rec_acct_attrs.array_num_value(39)  := p_source_52;
   l_rec_acct_attrs.array_acct_attr_code(40) := 'TAX_REC_NREC_DIST_REF_ID';
   l_rec_acct_attrs.array_num_value(40)  := p_source_53;
   l_rec_acct_attrs.array_acct_attr_code(41) := 'TAX_SUMMARY_LINE_REF_ID';
   l_rec_acct_attrs.array_num_value(41)  := p_source_54;
   l_rec_acct_attrs.array_acct_attr_code(42) := 'UPG_CR_ENC_TYPE_ID';
   l_rec_acct_attrs.array_num_value(42)  := p_source_55;
   l_rec_acct_attrs.array_acct_attr_code(43) := 'UPG_DR_ENC_TYPE_ID';
   l_rec_acct_attrs.array_num_value(43)  := p_source_56;

   XLA_AE_LINES_PKG.SetLineAcctAttrs(l_rec_acct_attrs);
   p_gain_or_loss_ref  := XLA_AE_LINES_PKG.g_rec_lines.array_gain_or_loss_ref(XLA_AE_LINES_PKG.g_LineNumber);

   ---------------------------------------------------------------------------------------------------------------
   -- 4336173 -- assign Business Flow Class (replace code in xla_ae_lines_pkg.Business_Flow_Validation)
   ---------------------------------------------------------------------------------------------------------------
   XLA_AE_LINES_PKG.g_rec_lines.array_business_class_code(XLA_AE_LINES_PKG.g_LineNumber) := l_bflow_class_code;

   l_actual_upg_option  := XLA_AE_LINES_PKG.g_rec_lines.array_actual_upg_option(XLA_AE_LINES_PKG.g_LineNumber);
   l_enc_upg_option     := XLA_AE_LINES_PKG.g_rec_lines.array_enc_upg_option(XLA_AE_LINES_PKG.g_LineNumber);

   IF xla_accounting_cache_pkg.GetValueChar
         (p_source_code         => 'LEDGER_CATEGORY_CODE'
         ,p_target_ledger_id    => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id) IN ('PRIMARY','ALC')
   AND l_bflow_method_code = 'PRIOR_ENTRY'
--   AND (l_actual_upg_option = 'Y' OR l_enc_upg_option = 'Y') Bug 4922099
   AND ( (NVL(l_actual_upg_option, 'N') IN ('Y', 'O')) OR
         (NVL(l_enc_upg_option, 'N') IN ('Y', 'O'))
       )
   THEN
         xla_ae_lines_pkg.BflowUpgEntry
           (p_business_method_code    => l_bflow_method_code
           ,p_business_class_code     => l_bflow_class_code
           ,p_balance_type            => l_balance_type_code);
   ELSE
      NULL;
-- No business flow processing for business flow method of NONE.
   END IF;

   --
   -- call analytical criteria
   --
   
   --
   -- call description
   --
   
xla_ae_lines_pkg.SetLineDescription(
   p_ae_header_id => l_ae_header_id
  ,p_description  => Description_2 (
     p_application_id         => p_application_id
   , p_ae_header_id           => l_ae_header_id 
, p_source_1 => p_source_1
   )
);


   --
   -- call ADRs
   -- Bug 4922099
   --
   IF ( (l_bflow_method_code <> 'PRIOR_ENTRY') OR
        (NVL(l_actual_upg_option, 'N') = 'O') OR
        (NVL(l_enc_upg_option, 'N') = 'O')
      )
   THEN
   NULL;
   --
   --
   
  l_ccid := AcctDerRule_7(
           p_application_id           => p_application_id
         , p_ae_header_id             => l_ae_header_id 
, p_source_11 => p_source_11
         , x_transaction_coa_id       => l_adr_transaction_coa_id
         , x_accounting_coa_id        => l_adr_accounting_coa_id
         , x_value_type_code          => l_adr_value_type_code
         , p_side                     => 'NA'
   );

   xla_ae_lines_pkg.set_ccid(
    p_code_combination_id          => l_ccid
  , p_value_type_code              => l_adr_value_type_code
  , p_transaction_coa_id           => l_adr_transaction_coa_id
  , p_accounting_coa_id            => l_adr_accounting_coa_id
  , p_adr_code                     => 'AP_INVOICE_DIST'
  , p_adr_type_code                => 'S'
  , p_component_type               => l_component_type
  , p_component_code               => l_component_code
  , p_component_type_code          => l_component_type_code
  , p_component_appl_id            => l_component_appl_id
  , p_amb_context_code             => l_amb_context_code
  , p_side                         => 'NA'
  );


   --
   --
   END IF;
   --
   -- Bug 4922099
   IF ( ( (NVL(l_actual_upg_option, 'N') = 'O') OR
          (NVL(l_enc_upg_option, 'N') = 'O')
        ) AND
        (l_bflow_method_code = 'PRIOR_ENTRY')
      )
   THEN
      IF
      --
      1 = 2
      --
      THEN
      xla_accounting_err_pkg.build_message
                                    (p_appli_s_name            => 'XLA'
                                    ,p_msg_name                => 'XLA_UPG_OVERRIDE_ADR_UNDEFINED'
                                    ,p_token_1                 => 'LINE_NUMBER'
                                    ,p_value_1                 => XLA_AE_LINES_PKG.g_LineNumber
                                    ,p_token_2                 => 'LINE_TYPE_NAME'
                                    ,p_value_2                 => XLA_AE_SOURCES_PKG.GetComponentName (
                                                                             l_component_type
                                                                            ,l_component_code
                                                                            ,l_component_type_code
                                                                            ,l_component_appl_id
                                                                            ,l_amb_context_code
                                                                            ,l_entity_code
                                                                            ,l_event_class_code
                                                                           )
                                    ,p_token_3                 => 'OWNER'
                                    ,p_value_3                 => xla_lookups_pkg.get_meaning(
                                                                          p_lookup_type     => 'XLA_OWNER_TYPE'
                                                                          ,p_lookup_code    => l_component_type_code
                                                                         )
                                    ,p_token_4                 => 'PRODUCT_NAME'
                                    ,p_value_4                 => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.application_name
                                    ,p_entity_id               => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.entity_id
                                    ,p_event_id                => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.event_id
                                    ,p_ledger_id               => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id
                                    ,p_ae_header_id            =>  NULL
                                       );

        IF (C_LEVEL_ERROR>= g_log_level) THEN
                 trace
                      (p_msg      => 'ERROR: XLA_UPG_OVERRIDE_ADR_UNDEFINED'
                      ,p_level    => C_LEVEL_ERROR
                      ,p_module   => l_log_module);
        END IF;
      END IF;
   END IF;
   --
   --
   ------------------------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- NOTE: XLA_AE_LINES_PKG.ValidateCurrentLine should NOT be generated if business flow method is
   -- Prior Entry.  Currently, the following code is always generated.
   ------------------------------------------------------------------------------------------------
   XLA_AE_LINES_PKG.ValidateCurrentLine;

   ------------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- Populated credit and debit amounts -- Need to generate this within IF <condition>
   ------------------------------------------------------------------------------------
   XLA_AE_LINES_PKG.SetDebitCreditAmounts;

   ----------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- Update journal entry status -- Need to generate this within IF <condition>
   ----------------------------------------------------------------------------------
   XLA_AE_JOURNAL_ENTRY_PKG.UpdateJournalEntryStatus
         (p_hdr_idx => g_array_event(p_event_id).array_value_num('header_index')
         ,p_balance_type_code => l_balance_type_code
         );

   -------------------------------------------------------------------------------------------
   -- 4262811 - Generate the Accrual Reversal lines
   -------------------------------------------------------------------------------------------
   BEGIN
      l_acc_rev_flag := XLA_AE_HEADER_PKG.g_rec_header_new.array_accrual_reversal_flag
                              (g_array_event(p_event_id).array_value_num('header_index'));
      IF l_acc_rev_flag IS NULL THEN
         l_acc_rev_flag := 'N';
      END IF;
   EXCEPTION
      WHEN OTHERS THEN
         l_acc_rev_flag := 'N';
   END;
   --
   IF (l_acc_rev_flag = 'Y') THEN

       -- 4645092  ------------------------------------------------------------------------------
       -- To allow MPA report to determine if it should generate report process
       XLA_ACCOUNTING_PKG.g_mpa_accrual_exists := 'Y';
       ------------------------------------------------------------------------------------------

       l_accrual_line_num := XLA_AE_LINES_PKG.g_LineNumber;
       XLA_AE_LINES_PKG.CopyLineInfo(l_accrual_line_num);
   -- added call to set_ccid to execute mapping  for secondary accrual reversal entries bug 7444204
   -- call ADRs
   -- Bug 4922099
   --
   IF ( (l_bflow_method_code <> 'PRIOR_ENTRY') OR
        (NVL(l_actual_upg_option, 'N') = 'O') OR
        (NVL(l_enc_upg_option, 'N') = 'O')
      )
   THEN
   NULL;
   --
   --
   
  l_ccid := AcctDerRule_7(
           p_application_id           => p_application_id
         , p_ae_header_id             => l_ae_header_id 
, p_source_11 => p_source_11
         , x_transaction_coa_id       => l_adr_transaction_coa_id
         , x_accounting_coa_id        => l_adr_accounting_coa_id
         , x_value_type_code          => l_adr_value_type_code
         , p_side                     => 'NA'
   );

   xla_ae_lines_pkg.set_ccid(
    p_code_combination_id          => l_ccid
  , p_value_type_code              => l_adr_value_type_code
  , p_transaction_coa_id           => l_adr_transaction_coa_id
  , p_accounting_coa_id            => l_adr_accounting_coa_id
  , p_adr_code                     => 'AP_INVOICE_DIST'
  , p_adr_type_code                => 'S'
  , p_component_type               => l_component_type
  , p_component_code               => l_component_code
  , p_component_type_code          => l_component_type_code
  , p_component_appl_id            => l_component_appl_id
  , p_amb_context_code             => l_amb_context_code
  , p_side                         => 'NA'
  );


   --
   --
   END IF;

       --
       -- Update the line information that should be overwritten
       --
       XLA_AE_LINES_PKG.set_ae_header_id(p_ae_header_id => p_event_id ,
                                         p_header_num   => 1);
       XLA_AE_LINES_PKG.g_rec_lines.array_header_num(XLA_AE_LINES_PKG.g_LineNumber)  :=1;

       XLA_AE_LINES_PKG.g_rec_lines.array_business_class_code(XLA_AE_LINES_PKG.g_LineNumber) := NULL; -- 4669271

       IF l_bflow_method_code <> 'NONE' THEN  -- 4655713b
          XLA_AE_LINES_PKG.g_rec_lines.array_reversal_code(XLA_AE_LINES_PKG.g_LineNumber) := CONCAT('MPA_',l_bflow_method_code);
       END IF;

      --
      -- Depending on the Reversal Method setup, do a switch side or changes sign for the amounts
      --
      IF (XLA_AE_JOURNAL_ENTRY_PKG.g_cache_ledgers_info.ledger_reversal_option = 'SIDE') THEN
          XLA_AE_LINES_PKG.g_rec_lines.array_natural_side_code(XLA_AE_LINES_PKG.g_LineNumber) :=  l_acc_rev_natural_side_code;
      ELSE
          ---------------------------------------------------------------------------------------------------
          -- 4262811a Switch Sign
          ---------------------------------------------------------------------------------------------------
          XLA_AE_LINES_PKG.g_rec_lines.array_switch_side_flag(XLA_AE_LINES_PKG.g_LineNumber) := 'N';  -- 5052518
          XLA_AE_LINES_PKG.g_rec_lines.array_ledger_amount(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_ledger_amount(XLA_AE_LINES_PKG.g_LineNumber) * -1;
          XLA_AE_LINES_PKG.g_rec_lines.array_entered_amount(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_entered_amount(XLA_AE_LINES_PKG.g_LineNumber) * -1;
          -- 5132302
          XLA_AE_LINES_PKG.g_rec_lines.array_bflow_applied_to_amt(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_bflow_applied_to_amt(XLA_AE_LINES_PKG.g_LineNumber) * -1;

      END IF;

      -- 4955764
      XLA_AE_LINES_PKG.g_rec_lines.array_gl_date(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_HEADER_PKG.g_rec_header_new.array_gl_date(g_array_event(p_event_id).array_value_num('acc_rev_header_index'));


      XLA_AE_LINES_PKG.ValidateCurrentLine;
      XLA_AE_LINES_PKG.SetDebitCreditAmounts;

      XLA_AE_JOURNAL_ENTRY_PKG.UpdateJournalEntryStatus
               (p_hdr_idx           => g_array_event(p_event_id).array_value_num('acc_rev_header_index')
               ,p_balance_type_code => l_balance_type_code);

   END IF;

   -----------------------------------------------------------------------------------------
   -- 4262811 Multiperiod Accounting
   -----------------------------------------------------------------------------------------
     -- No MPA option is assigned.


END IF;
END IF;
--

--
IF (C_LEVEL_PROCEDURE >= g_log_level) THEN
   trace
      (p_msg      => 'END of AcctLineType_60'
      ,p_level    => C_LEVEL_PROCEDURE
      ,p_module   => l_log_module);
END IF;
--
EXCEPTION
  WHEN xla_exceptions_pkg.application_exception THEN
      RAISE;
  WHEN OTHERS THEN
       xla_exceptions_pkg.raise_message
           (p_location => 'XLA_00200_AAD_S_000010_BC_PKG.AcctLineType_60');
END AcctLineType_60;
--

---------------------------------------
--
-- PRIVATE FUNCTION
--         AcctLineType_61
--
---------------------------------------
PROCEDURE AcctLineType_61 (
  p_application_id        IN NUMBER
 ,p_event_id              IN NUMBER
 ,p_calculate_acctd_flag  IN VARCHAR2
 ,p_calculate_g_l_flag    IN VARCHAR2
 ,p_actual_flag           IN OUT VARCHAR2
 ,p_balance_type_code     OUT VARCHAR2
 ,p_gain_or_loss_ref      OUT VARCHAR2
 
--Invoice Distribution Description
 , p_source_1            IN VARCHAR2
--Self-Assessed Tax Account
 , p_source_13            IN NUMBER
--Invoice Distribution Type
 , p_source_15            IN VARCHAR2
 , p_source_15_meaning    IN VARCHAR2
--Purchasing Encumbrance Option
 , p_source_17            IN VARCHAR2
 , p_source_17_meaning    IN VARCHAR2
--Accounting Reversal Indicator
 , p_source_19            IN VARCHAR2
--Distribution Link Type
 , p_source_21            IN VARCHAR2
--Allocation to Main Distribution Identifier
 , p_source_23            IN NUMBER
--Invoice Identifier
 , p_source_24            IN NUMBER
--Business Flow Accounts Payable Application Identifier
 , p_source_25            IN NUMBER
--Business Flow Invoice Distribution Type
 , p_source_26            IN VARCHAR2
--Business Flow Invoice Entity Code
 , p_source_27            IN VARCHAR2
--Business Flow Invoice Distribution Identifier
 , p_source_28            IN NUMBER
--Business Flow Invoice Identifier
 , p_source_29            IN NUMBER
--Invoice Distribution Identifier
 , p_source_30            IN NUMBER
--Payables Encumbrance Upgrade Credit Account
 , p_source_31            IN NUMBER
--Payables Encumbrance Upgrade Credit Amount
 , p_source_32            IN NUMBER
--Invoice Currency Code
 , p_source_33            IN VARCHAR2
--Payables Encumbrance Upgrade Credit Base Amount
 , p_source_34            IN NUMBER
--Payables Encumbrance Upgrade Debit Account
 , p_source_35            IN NUMBER
--Payables Encumbrance Upgrade Debit Amount
 , p_source_36            IN NUMBER
--Payables Encumbrance Upgrade Debit Base Amount
 , p_source_37            IN NUMBER
--Payables Encumbrance Upgrade Option
 , p_source_38            IN VARCHAR2
--Invoice Exchange Date
 , p_source_39            IN DATE
--Invoice Exchange Rate
 , p_source_40            IN NUMBER
--Invoice Exchange Rate Type
 , p_source_41            IN VARCHAR2
--Deferred Accounting End Date
 , p_source_43            IN DATE
--Deferred Accounting Option
 , p_source_44            IN VARCHAR2
--Deferred Accounting Start Date
 , p_source_45            IN DATE
--Override Accounted Amount Indicator
 , p_source_46            IN VARCHAR2
 , p_source_46_meaning    IN VARCHAR2
--Invoice Supplier Identifier
 , p_source_47            IN NUMBER
--Invoice Supplier Site Identifier
 , p_source_48            IN NUMBER
--Third Party Type
 , p_source_49            IN VARCHAR2
--Parent Reversal Identifier
 , p_source_50            IN NUMBER
--Invoice Distribution Statistical Amount
 , p_source_51            IN NUMBER
--Invoice Distribution Tax Line Identifier
 , p_source_52            IN NUMBER
--Invoice Distribution Tax Distribution Identifier from Tax
 , p_source_53            IN NUMBER
--Invoice Distribution Summary Tax Line Identifier
 , p_source_54            IN NUMBER
--Payables Upgrade Credit Encumbrance Type Identifier
 , p_source_55            IN NUMBER
--Payables Upgrade Debit Encumbrance Type Identifier
 , p_source_56            IN NUMBER
--Self-Assessed Tax Flag
 , p_source_59            IN VARCHAR2
 , p_source_59_meaning    IN VARCHAR2
--Invoice Distribution Encumbrance Amount
 , p_source_65            IN NUMBER
--Invoice Distribution Encumbrance Ledger Amount
 , p_source_66            IN NUMBER
)
IS

l_component_type              VARCHAR2(80);
l_component_code              VARCHAR2(30);
l_component_type_code         VARCHAR2(1);
l_component_appl_id           INTEGER;
l_amb_context_code            VARCHAR2(30);
l_entity_code                 VARCHAR2(30);
l_event_class_code            VARCHAR2(30);
l_ae_header_id                NUMBER;
l_event_type_code             VARCHAR2(30);
l_line_definition_code        VARCHAR2(30);
l_line_definition_owner_code  VARCHAR2(1);
--
-- adr variables
l_segment                     VARCHAR2(30);
l_ccid                        NUMBER;
l_adr_transaction_coa_id      NUMBER;
l_adr_accounting_coa_id       NUMBER;
l_adr_flexfield_segment_code  VARCHAR2(30);
l_adr_flex_value_set_id       NUMBER;
l_adr_value_type_code         VARCHAR2(30);
l_adr_value_combination_id    NUMBER;
l_adr_value_segment_code      VARCHAR2(30);

l_bflow_method_code           VARCHAR2(30);  -- 4219869 Business Flow
l_bflow_class_code            VARCHAR2(30);  -- 4219869 Business Flow
l_inherit_desc_flag           VARCHAR2(1);   -- 4219869 Business Flow
l_budgetary_control_flag      VARCHAR2(1);   -- 4458381 Public Sector Enh

-- 4262811 Variables ------------------------------------------------------------------------------------------
l_entered_amt_idx             NUMBER;
l_accted_amt_idx              NUMBER;
l_acc_rev_flag                VARCHAR2(1);
l_accrual_line_num            NUMBER;
l_tmp_amt                     NUMBER;
l_acc_rev_natural_side_code   VARCHAR2(1);

l_num_entries                 NUMBER;
l_gl_dates                    xla_ae_journal_entry_pkg.t_array_date;
l_accted_amts                 xla_ae_journal_entry_pkg.t_array_num;
l_entered_amts                xla_ae_journal_entry_pkg.t_array_num;
l_period_names                xla_ae_journal_entry_pkg.t_array_V15L;
l_recog_line_1                NUMBER;
l_recog_line_2                NUMBER;

l_bflow_applied_to_amt_idx    NUMBER;                                -- 5132302
l_bflow_applied_to_amt        NUMBER;                                -- 5132302
l_bflow_applied_to_amts       xla_ae_journal_entry_pkg.t_array_num;  -- 5132302

l_event_id                    NUMBER;  -- To handle MPA header Description: xla_ae_header_pkg.SetHdrDescription

--l_rounding_ccy                VARCHAR2(15); -- To handle MPA rounding  4262811b
l_same_currency               BOOLEAN;        -- To handle MPA rounding  4262811b

---------------------------------------------------------------------------------------------------------------


--
-- bulk performance
--
l_balance_type_code           VARCHAR2(1);
l_rec_acct_attrs              XLA_AE_LINES_PKG.t_rec_acct_attrs;
l_log_module                  VARCHAR2(240);

--
-- Upgrade strategy
--
l_actual_upg_option           VARCHAR2(1);
l_enc_upg_option           VARCHAR2(1);

--
BEGIN
--
IF g_log_enabled THEN
      l_log_module := C_DEFAULT_MODULE||'.AcctLineType_61';
END IF;
--
IF (C_LEVEL_PROCEDURE >= g_log_level) THEN

      trace
         (p_msg      => 'BEGIN of AcctLineType_61'
         ,p_level    => C_LEVEL_PROCEDURE
         ,p_module   => l_log_module);

END IF;
--
l_component_type             := 'AMB_JLT';
l_component_code             := 'AP_SELFASSDNREC_TAX_CM_ENC_DR';
l_component_type_code        := 'S';
l_component_appl_id          :=  200;
l_amb_context_code           := 'DEFAULT';
l_entity_code                := 'AP_INVOICES';
l_event_class_code           := 'CREDIT MEMOS';
l_event_type_code            := 'CREDIT MEMOS_ALL';
l_line_definition_owner_code := 'S';
l_line_definition_code       := 'ENC_CM_ALL';
--
l_balance_type_code          := 'E';
l_segment                     := NULL;
l_ccid                        := NULL;
l_adr_transaction_coa_id      := NULL;
l_adr_accounting_coa_id       := NULL;
l_adr_flexfield_segment_code  := NULL;
l_adr_flex_value_set_id       := NULL;
l_adr_value_type_code         := NULL;
l_adr_value_combination_id    := NULL;
l_adr_value_segment_code      := NULL;

l_bflow_method_code          := 'NONE';   -- 4219869 Business Flow
l_bflow_class_code           := 'AP_INV_ENCUM';    -- 4219869 Business Flow
l_inherit_desc_flag          := 'N';   -- 4219869 Business Flow
l_budgetary_control_flag     := 'Y';

l_bflow_applied_to_amt_idx   := NULL; -- 5132302
l_bflow_applied_to_amt       := NULL; -- 5132302
l_entered_amt_idx            := NULL;          -- 4262811
l_accted_amt_idx             := NULL;          -- 4262811
l_acc_rev_flag               := NULL;          -- 4262811
l_accrual_line_num           := NULL;          -- 4262811
l_tmp_amt                    := NULL;          -- 4262811
--
 
IF XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id = XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.ledger_id OR
    l_balance_type_code <> 'B' THEN
IF NVL(p_source_15,'
') =  'NONREC_TAX' AND 
NVL(p_source_59,'
') =  'Y' AND 
NVL(p_source_17,'
') =  'Y'
 THEN 

   --
   XLA_AE_LINES_PKG.SetNewLine;

   p_balance_type_code          := l_balance_type_code;
   -- set the flag so later we will know whether the gain loss line needs to be created
   
   IF(l_balance_type_code = 'A' and p_actual_flag is null) THEN
     p_actual_flag :='A';
   END IF;

   --
   -- bulk performance
   --
   XLA_AE_LINES_PKG.set_ae_header_id (p_ae_header_id => p_event_id ,
                                      p_header_num   => 0); -- 4262811
   --
   -- set accounting line options
   --
   l_ae_header_id:= xla_ae_lines_pkg.SetAcctLineOption(
           p_natural_side_code          => 'D'
         , p_gain_or_loss_flag          => 'N'
         , p_gl_transfer_mode_code      => 'S'
         , p_acct_entry_type_code       => 'E'
         , p_switch_side_flag           => 'Y'
         , p_merge_duplicate_code       => 'N'
         );
   --
   l_acc_rev_natural_side_code := 'C';  -- 4262811
   -- 
   --
   -- set accounting line type info
   --
   xla_ae_lines_pkg.SetAcctLineType
      (p_component_type             => l_component_type
      ,p_event_type_code            => l_event_type_code
      ,p_line_definition_owner_code => l_line_definition_owner_code
      ,p_line_definition_code       => l_line_definition_code
      ,p_accounting_line_code       => l_component_code
      ,p_accounting_line_type_code  => l_component_type_code
      ,p_accounting_line_appl_id    => l_component_appl_id
      ,p_amb_context_code           => l_amb_context_code
      ,p_entity_code                => l_entity_code
      ,p_event_class_code           => l_event_class_code);
   --
   -- set accounting class
   --
   xla_ae_lines_pkg.SetAcctClass(
           p_accounting_class_code  => 'SELF_ASSESSED_TAX'
         , p_ae_header_id           => l_ae_header_id
         );

   --
   -- set rounding class
   --
   XLA_AE_LINES_PKG.g_rec_lines.array_rounding_class(XLA_AE_LINES_PKG.g_LineNumber) :=
                      'SELF_ASSESSED_TAX';

   --
   xla_ae_lines_pkg.g_rec_lines.array_calculate_acctd_flag(xla_ae_lines_pkg.g_LineNumber) := p_calculate_acctd_flag;
   xla_ae_lines_pkg.g_rec_lines.array_calculate_g_l_flag(xla_ae_lines_pkg.g_LineNumber) := p_calculate_g_l_flag;
   --
   -- bulk performance
   --
   XLA_AE_LINES_PKG.g_rec_lines.array_balance_type_code(XLA_AE_LINES_PKG.g_LineNumber) := l_balance_type_code;

   XLA_AE_LINES_PKG.g_rec_lines.array_ledger_id(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id;

   -- 4955764
   XLA_AE_LINES_PKG.g_rec_lines.array_gl_date(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_HEADER_PKG.g_rec_header_new.array_gl_date(g_array_event(p_event_id).array_value_num('header_index'));

   -- 4458381 Public Sector Enh
      XLA_AE_LINES_PKG.g_rec_lines.array_encumbrance_type_id(XLA_AE_LINES_PKG.g_LineNumber) := 1060;
   --
   -- set accounting attributes for the line type
   --
   l_entered_amt_idx := 23;
   l_accted_amt_idx  := 28;
   l_bflow_applied_to_amt_idx  := NULL;  -- 5132302
   l_rec_acct_attrs.array_acct_attr_code(1) := 'ACCOUNTING_REVERSAL_OPTION';
   l_rec_acct_attrs.array_char_value(1)  := p_source_19;
   l_rec_acct_attrs.array_acct_attr_code(2) := 'ALLOC_TO_APPLICATION_ID';
   l_rec_acct_attrs.array_num_value(2)  := 
xla_ae_sources_pkg.GetSystemSourceNum(
   p_source_code           => 'XLA_EVENT_APPL_ID'
 , p_source_type_code      => 'Y'
 , p_source_application_id =>  602
);
   l_rec_acct_attrs.array_acct_attr_code(3) := 'ALLOC_TO_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(3)  := p_source_21;
   l_rec_acct_attrs.array_acct_attr_code(4) := 'ALLOC_TO_ENTITY_CODE';
   l_rec_acct_attrs.array_char_value(4)  := 
xla_ae_sources_pkg.GetSystemSourceChar(
   p_source_code           => 'XLA_ENTITY_CODE'
 , p_source_type_code      => 'Y'
 , p_source_application_id =>  602
);
   l_rec_acct_attrs.array_acct_attr_code(5) := 'ALLOC_TO_FIRST_DIST_ID';
   l_rec_acct_attrs.array_num_value(5)  :=  to_char(p_source_23);
   l_rec_acct_attrs.array_acct_attr_code(6) := 'ALLOC_TO_FIRST_SYS_TRAN_ID';
   l_rec_acct_attrs.array_num_value(6)  :=  to_char(p_source_24);
   l_rec_acct_attrs.array_acct_attr_code(7) := 'APPLIED_TO_APPLICATION_ID';
   l_rec_acct_attrs.array_num_value(7)  := p_source_25;
   l_rec_acct_attrs.array_acct_attr_code(8) := 'APPLIED_TO_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(8)  := p_source_26;
   l_rec_acct_attrs.array_acct_attr_code(9) := 'APPLIED_TO_ENTITY_CODE';
   l_rec_acct_attrs.array_char_value(9)  := p_source_27;
   l_rec_acct_attrs.array_acct_attr_code(10) := 'APPLIED_TO_FIRST_DIST_ID';
   l_rec_acct_attrs.array_num_value(10)  :=  to_char(p_source_28);
   l_rec_acct_attrs.array_acct_attr_code(11) := 'APPLIED_TO_FIRST_SYS_TRAN_ID';
   l_rec_acct_attrs.array_num_value(11)  :=  to_char(p_source_29);
   l_rec_acct_attrs.array_acct_attr_code(12) := 'DISTRIBUTION_IDENTIFIER_1';
   l_rec_acct_attrs.array_num_value(12)  :=  to_char(p_source_30);
   l_rec_acct_attrs.array_acct_attr_code(13) := 'DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(13)  := p_source_21;
   l_rec_acct_attrs.array_acct_attr_code(14) := 'ENC_UPG_CR_CCID';
   l_rec_acct_attrs.array_num_value(14)  := p_source_31;
   l_rec_acct_attrs.array_acct_attr_code(15) := 'ENC_UPG_CR_ENTERED_AMT';
   l_rec_acct_attrs.array_num_value(15)  := p_source_32;
   l_rec_acct_attrs.array_acct_attr_code(16) := 'ENC_UPG_CR_ENTERED_CURR';
   l_rec_acct_attrs.array_char_value(16)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(17) := 'ENC_UPG_CR_LEDGER_AMT';
   l_rec_acct_attrs.array_num_value(17)  := p_source_34;
   l_rec_acct_attrs.array_acct_attr_code(18) := 'ENC_UPG_DR_CCID';
   l_rec_acct_attrs.array_num_value(18)  := p_source_35;
   l_rec_acct_attrs.array_acct_attr_code(19) := 'ENC_UPG_DR_ENTERED_AMT';
   l_rec_acct_attrs.array_num_value(19)  := p_source_36;
   l_rec_acct_attrs.array_acct_attr_code(20) := 'ENC_UPG_DR_ENTERED_CURR';
   l_rec_acct_attrs.array_char_value(20)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(21) := 'ENC_UPG_DR_LEDGER_AMT';
   l_rec_acct_attrs.array_num_value(21)  := p_source_37;
   l_rec_acct_attrs.array_acct_attr_code(22) := 'ENC_UPG_OPTION';
   l_rec_acct_attrs.array_char_value(22)  := p_source_38;
   l_rec_acct_attrs.array_acct_attr_code(23) := 'ENTERED_CURRENCY_AMOUNT';
   l_rec_acct_attrs.array_num_value(23)  := p_source_65;
   l_rec_acct_attrs.array_acct_attr_code(24) := 'ENTERED_CURRENCY_CODE';
   l_rec_acct_attrs.array_char_value(24)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(25) := 'EXCHANGE_DATE';
   l_rec_acct_attrs.array_date_value(25)  := p_source_39;
   l_rec_acct_attrs.array_acct_attr_code(26) := 'EXCHANGE_RATE';
   l_rec_acct_attrs.array_num_value(26)  := p_source_40;
   l_rec_acct_attrs.array_acct_attr_code(27) := 'EXCHANGE_RATE_TYPE';
   l_rec_acct_attrs.array_char_value(27)  := p_source_41;
   l_rec_acct_attrs.array_acct_attr_code(28) := 'LEDGER_AMOUNT';
   l_rec_acct_attrs.array_num_value(28)  := p_source_66;
   l_rec_acct_attrs.array_acct_attr_code(29) := 'MULTIPERIOD_END_DATE';
   l_rec_acct_attrs.array_date_value(29)  := p_source_43;
   l_rec_acct_attrs.array_acct_attr_code(30) := 'MULTIPERIOD_OPTION';
   l_rec_acct_attrs.array_char_value(30)  := p_source_44;
   l_rec_acct_attrs.array_acct_attr_code(31) := 'MULTIPERIOD_START_DATE';
   l_rec_acct_attrs.array_date_value(31)  := p_source_45;
   l_rec_acct_attrs.array_acct_attr_code(32) := 'OVERRIDE_ACCTD_AMT_FLAG';
   l_rec_acct_attrs.array_char_value(32)  := p_source_46;
   l_rec_acct_attrs.array_acct_attr_code(33) := 'PARTY_ID';
   l_rec_acct_attrs.array_num_value(33)  := p_source_47;
   l_rec_acct_attrs.array_acct_attr_code(34) := 'PARTY_SITE_ID';
   l_rec_acct_attrs.array_num_value(34)  := p_source_48;
   l_rec_acct_attrs.array_acct_attr_code(35) := 'PARTY_TYPE';
   l_rec_acct_attrs.array_char_value(35)  := p_source_49;
   l_rec_acct_attrs.array_acct_attr_code(36) := 'REVERSED_DISTRIBUTION_ID1';
   l_rec_acct_attrs.array_num_value(36)  :=  to_char(p_source_50);
   l_rec_acct_attrs.array_acct_attr_code(37) := 'REVERSED_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(37)  := p_source_21;
   l_rec_acct_attrs.array_acct_attr_code(38) := 'STATISTICAL_AMOUNT';
   l_rec_acct_attrs.array_num_value(38)  := p_source_51;
   l_rec_acct_attrs.array_acct_attr_code(39) := 'TAX_LINE_REF_ID';
   l_rec_acct_attrs.array_num_value(39)  := p_source_52;
   l_rec_acct_attrs.array_acct_attr_code(40) := 'TAX_REC_NREC_DIST_REF_ID';
   l_rec_acct_attrs.array_num_value(40)  := p_source_53;
   l_rec_acct_attrs.array_acct_attr_code(41) := 'TAX_SUMMARY_LINE_REF_ID';
   l_rec_acct_attrs.array_num_value(41)  := p_source_54;
   l_rec_acct_attrs.array_acct_attr_code(42) := 'UPG_CR_ENC_TYPE_ID';
   l_rec_acct_attrs.array_num_value(42)  := p_source_55;
   l_rec_acct_attrs.array_acct_attr_code(43) := 'UPG_DR_ENC_TYPE_ID';
   l_rec_acct_attrs.array_num_value(43)  := p_source_56;

   XLA_AE_LINES_PKG.SetLineAcctAttrs(l_rec_acct_attrs);
   p_gain_or_loss_ref  := XLA_AE_LINES_PKG.g_rec_lines.array_gain_or_loss_ref(XLA_AE_LINES_PKG.g_LineNumber);

   ---------------------------------------------------------------------------------------------------------------
   -- 4336173 -- assign Business Flow Class (replace code in xla_ae_lines_pkg.Business_Flow_Validation)
   ---------------------------------------------------------------------------------------------------------------
   XLA_AE_LINES_PKG.g_rec_lines.array_business_class_code(XLA_AE_LINES_PKG.g_LineNumber) := l_bflow_class_code;

   l_actual_upg_option  := XLA_AE_LINES_PKG.g_rec_lines.array_actual_upg_option(XLA_AE_LINES_PKG.g_LineNumber);
   l_enc_upg_option     := XLA_AE_LINES_PKG.g_rec_lines.array_enc_upg_option(XLA_AE_LINES_PKG.g_LineNumber);

   IF xla_accounting_cache_pkg.GetValueChar
         (p_source_code         => 'LEDGER_CATEGORY_CODE'
         ,p_target_ledger_id    => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id) IN ('PRIMARY','ALC')
   AND l_bflow_method_code = 'PRIOR_ENTRY'
--   AND (l_actual_upg_option = 'Y' OR l_enc_upg_option = 'Y') Bug 4922099
   AND ( (NVL(l_actual_upg_option, 'N') IN ('Y', 'O')) OR
         (NVL(l_enc_upg_option, 'N') IN ('Y', 'O'))
       )
   THEN
         xla_ae_lines_pkg.BflowUpgEntry
           (p_business_method_code    => l_bflow_method_code
           ,p_business_class_code     => l_bflow_class_code
           ,p_balance_type            => l_balance_type_code);
   ELSE
      NULL;
-- No business flow processing for business flow method of NONE.
   END IF;

   --
   -- call analytical criteria
   --
   
   --
   -- call description
   --
   
xla_ae_lines_pkg.SetLineDescription(
   p_ae_header_id => l_ae_header_id
  ,p_description  => Description_2 (
     p_application_id         => p_application_id
   , p_ae_header_id           => l_ae_header_id 
, p_source_1 => p_source_1
   )
);


   --
   -- call ADRs
   -- Bug 4922099
   --
   IF ( (l_bflow_method_code <> 'PRIOR_ENTRY') OR
        (NVL(l_actual_upg_option, 'N') = 'O') OR
        (NVL(l_enc_upg_option, 'N') = 'O')
      )
   THEN
   NULL;
   --
   --
   
  l_ccid := AcctDerRule_8(
           p_application_id           => p_application_id
         , p_ae_header_id             => l_ae_header_id 
, p_source_13 => p_source_13
         , x_transaction_coa_id       => l_adr_transaction_coa_id
         , x_accounting_coa_id        => l_adr_accounting_coa_id
         , x_value_type_code          => l_adr_value_type_code
         , p_side                     => 'NA'
   );

   xla_ae_lines_pkg.set_ccid(
    p_code_combination_id          => l_ccid
  , p_value_type_code              => l_adr_value_type_code
  , p_transaction_coa_id           => l_adr_transaction_coa_id
  , p_accounting_coa_id            => l_adr_accounting_coa_id
  , p_adr_code                     => 'AP_SELF_ASSESSED_TAX'
  , p_adr_type_code                => 'S'
  , p_component_type               => l_component_type
  , p_component_code               => l_component_code
  , p_component_type_code          => l_component_type_code
  , p_component_appl_id            => l_component_appl_id
  , p_amb_context_code             => l_amb_context_code
  , p_side                         => 'NA'
  );


   --
   --
   END IF;
   --
   -- Bug 4922099
   IF ( ( (NVL(l_actual_upg_option, 'N') = 'O') OR
          (NVL(l_enc_upg_option, 'N') = 'O')
        ) AND
        (l_bflow_method_code = 'PRIOR_ENTRY')
      )
   THEN
      IF
      --
      1 = 2
      --
      THEN
      xla_accounting_err_pkg.build_message
                                    (p_appli_s_name            => 'XLA'
                                    ,p_msg_name                => 'XLA_UPG_OVERRIDE_ADR_UNDEFINED'
                                    ,p_token_1                 => 'LINE_NUMBER'
                                    ,p_value_1                 => XLA_AE_LINES_PKG.g_LineNumber
                                    ,p_token_2                 => 'LINE_TYPE_NAME'
                                    ,p_value_2                 => XLA_AE_SOURCES_PKG.GetComponentName (
                                                                             l_component_type
                                                                            ,l_component_code
                                                                            ,l_component_type_code
                                                                            ,l_component_appl_id
                                                                            ,l_amb_context_code
                                                                            ,l_entity_code
                                                                            ,l_event_class_code
                                                                           )
                                    ,p_token_3                 => 'OWNER'
                                    ,p_value_3                 => xla_lookups_pkg.get_meaning(
                                                                          p_lookup_type     => 'XLA_OWNER_TYPE'
                                                                          ,p_lookup_code    => l_component_type_code
                                                                         )
                                    ,p_token_4                 => 'PRODUCT_NAME'
                                    ,p_value_4                 => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.application_name
                                    ,p_entity_id               => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.entity_id
                                    ,p_event_id                => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.event_id
                                    ,p_ledger_id               => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id
                                    ,p_ae_header_id            =>  NULL
                                       );

        IF (C_LEVEL_ERROR>= g_log_level) THEN
                 trace
                      (p_msg      => 'ERROR: XLA_UPG_OVERRIDE_ADR_UNDEFINED'
                      ,p_level    => C_LEVEL_ERROR
                      ,p_module   => l_log_module);
        END IF;
      END IF;
   END IF;
   --
   --
   ------------------------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- NOTE: XLA_AE_LINES_PKG.ValidateCurrentLine should NOT be generated if business flow method is
   -- Prior Entry.  Currently, the following code is always generated.
   ------------------------------------------------------------------------------------------------
   XLA_AE_LINES_PKG.ValidateCurrentLine;

   ------------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- Populated credit and debit amounts -- Need to generate this within IF <condition>
   ------------------------------------------------------------------------------------
   XLA_AE_LINES_PKG.SetDebitCreditAmounts;

   ----------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- Update journal entry status -- Need to generate this within IF <condition>
   ----------------------------------------------------------------------------------
   XLA_AE_JOURNAL_ENTRY_PKG.UpdateJournalEntryStatus
         (p_hdr_idx => g_array_event(p_event_id).array_value_num('header_index')
         ,p_balance_type_code => l_balance_type_code
         );

   -------------------------------------------------------------------------------------------
   -- 4262811 - Generate the Accrual Reversal lines
   -------------------------------------------------------------------------------------------
   BEGIN
      l_acc_rev_flag := XLA_AE_HEADER_PKG.g_rec_header_new.array_accrual_reversal_flag
                              (g_array_event(p_event_id).array_value_num('header_index'));
      IF l_acc_rev_flag IS NULL THEN
         l_acc_rev_flag := 'N';
      END IF;
   EXCEPTION
      WHEN OTHERS THEN
         l_acc_rev_flag := 'N';
   END;
   --
   IF (l_acc_rev_flag = 'Y') THEN

       -- 4645092  ------------------------------------------------------------------------------
       -- To allow MPA report to determine if it should generate report process
       XLA_ACCOUNTING_PKG.g_mpa_accrual_exists := 'Y';
       ------------------------------------------------------------------------------------------

       l_accrual_line_num := XLA_AE_LINES_PKG.g_LineNumber;
       XLA_AE_LINES_PKG.CopyLineInfo(l_accrual_line_num);
   -- added call to set_ccid to execute mapping  for secondary accrual reversal entries bug 7444204
   -- call ADRs
   -- Bug 4922099
   --
   IF ( (l_bflow_method_code <> 'PRIOR_ENTRY') OR
        (NVL(l_actual_upg_option, 'N') = 'O') OR
        (NVL(l_enc_upg_option, 'N') = 'O')
      )
   THEN
   NULL;
   --
   --
   
  l_ccid := AcctDerRule_8(
           p_application_id           => p_application_id
         , p_ae_header_id             => l_ae_header_id 
, p_source_13 => p_source_13
         , x_transaction_coa_id       => l_adr_transaction_coa_id
         , x_accounting_coa_id        => l_adr_accounting_coa_id
         , x_value_type_code          => l_adr_value_type_code
         , p_side                     => 'NA'
   );

   xla_ae_lines_pkg.set_ccid(
    p_code_combination_id          => l_ccid
  , p_value_type_code              => l_adr_value_type_code
  , p_transaction_coa_id           => l_adr_transaction_coa_id
  , p_accounting_coa_id            => l_adr_accounting_coa_id
  , p_adr_code                     => 'AP_SELF_ASSESSED_TAX'
  , p_adr_type_code                => 'S'
  , p_component_type               => l_component_type
  , p_component_code               => l_component_code
  , p_component_type_code          => l_component_type_code
  , p_component_appl_id            => l_component_appl_id
  , p_amb_context_code             => l_amb_context_code
  , p_side                         => 'NA'
  );


   --
   --
   END IF;

       --
       -- Update the line information that should be overwritten
       --
       XLA_AE_LINES_PKG.set_ae_header_id(p_ae_header_id => p_event_id ,
                                         p_header_num   => 1);
       XLA_AE_LINES_PKG.g_rec_lines.array_header_num(XLA_AE_LINES_PKG.g_LineNumber)  :=1;

       XLA_AE_LINES_PKG.g_rec_lines.array_business_class_code(XLA_AE_LINES_PKG.g_LineNumber) := NULL; -- 4669271

       IF l_bflow_method_code <> 'NONE' THEN  -- 4655713b
          XLA_AE_LINES_PKG.g_rec_lines.array_reversal_code(XLA_AE_LINES_PKG.g_LineNumber) := CONCAT('MPA_',l_bflow_method_code);
       END IF;

      --
      -- Depending on the Reversal Method setup, do a switch side or changes sign for the amounts
      --
      IF (XLA_AE_JOURNAL_ENTRY_PKG.g_cache_ledgers_info.ledger_reversal_option = 'SIDE') THEN
          XLA_AE_LINES_PKG.g_rec_lines.array_natural_side_code(XLA_AE_LINES_PKG.g_LineNumber) :=  l_acc_rev_natural_side_code;
      ELSE
          ---------------------------------------------------------------------------------------------------
          -- 4262811a Switch Sign
          ---------------------------------------------------------------------------------------------------
          XLA_AE_LINES_PKG.g_rec_lines.array_switch_side_flag(XLA_AE_LINES_PKG.g_LineNumber) := 'N';  -- 5052518
          XLA_AE_LINES_PKG.g_rec_lines.array_ledger_amount(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_ledger_amount(XLA_AE_LINES_PKG.g_LineNumber) * -1;
          XLA_AE_LINES_PKG.g_rec_lines.array_entered_amount(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_entered_amount(XLA_AE_LINES_PKG.g_LineNumber) * -1;
          -- 5132302
          XLA_AE_LINES_PKG.g_rec_lines.array_bflow_applied_to_amt(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_bflow_applied_to_amt(XLA_AE_LINES_PKG.g_LineNumber) * -1;

      END IF;

      -- 4955764
      XLA_AE_LINES_PKG.g_rec_lines.array_gl_date(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_HEADER_PKG.g_rec_header_new.array_gl_date(g_array_event(p_event_id).array_value_num('acc_rev_header_index'));


      XLA_AE_LINES_PKG.ValidateCurrentLine;
      XLA_AE_LINES_PKG.SetDebitCreditAmounts;

      XLA_AE_JOURNAL_ENTRY_PKG.UpdateJournalEntryStatus
               (p_hdr_idx           => g_array_event(p_event_id).array_value_num('acc_rev_header_index')
               ,p_balance_type_code => l_balance_type_code);

   END IF;

   -----------------------------------------------------------------------------------------
   -- 4262811 Multiperiod Accounting
   -----------------------------------------------------------------------------------------
     -- No MPA option is assigned.


END IF;
END IF;
--

--
IF (C_LEVEL_PROCEDURE >= g_log_level) THEN
   trace
      (p_msg      => 'END of AcctLineType_61'
      ,p_level    => C_LEVEL_PROCEDURE
      ,p_module   => l_log_module);
END IF;
--
EXCEPTION
  WHEN xla_exceptions_pkg.application_exception THEN
      RAISE;
  WHEN OTHERS THEN
       xla_exceptions_pkg.raise_message
           (p_location => 'XLA_00200_AAD_S_000010_BC_PKG.AcctLineType_61');
END AcctLineType_61;
--

---------------------------------------
--
-- PRIVATE FUNCTION
--         AcctLineType_62
--
---------------------------------------
PROCEDURE AcctLineType_62 (
  p_application_id        IN NUMBER
 ,p_event_id              IN NUMBER
 ,p_calculate_acctd_flag  IN VARCHAR2
 ,p_calculate_g_l_flag    IN VARCHAR2
 ,p_actual_flag           IN OUT VARCHAR2
 ,p_balance_type_code     OUT VARCHAR2
 ,p_gain_or_loss_ref      OUT VARCHAR2
 
--Invoice Distribution Description
 , p_source_1            IN VARCHAR2
--Self-Assessed Tax Account
 , p_source_13            IN NUMBER
--Invoice Distribution Type
 , p_source_15            IN VARCHAR2
 , p_source_15_meaning    IN VARCHAR2
--Purchasing Encumbrance Option
 , p_source_17            IN VARCHAR2
 , p_source_17_meaning    IN VARCHAR2
--Accounting Reversal Indicator
 , p_source_19            IN VARCHAR2
--Distribution Link Type
 , p_source_21            IN VARCHAR2
--Allocation to Main Distribution Identifier
 , p_source_23            IN NUMBER
--Invoice Identifier
 , p_source_24            IN NUMBER
--Business Flow Accounts Payable Application Identifier
 , p_source_25            IN NUMBER
--Business Flow Invoice Distribution Type
 , p_source_26            IN VARCHAR2
--Business Flow Invoice Entity Code
 , p_source_27            IN VARCHAR2
--Business Flow Invoice Distribution Identifier
 , p_source_28            IN NUMBER
--Business Flow Invoice Identifier
 , p_source_29            IN NUMBER
--Invoice Distribution Identifier
 , p_source_30            IN NUMBER
--Payables Encumbrance Upgrade Credit Account
 , p_source_31            IN NUMBER
--Payables Encumbrance Upgrade Credit Amount
 , p_source_32            IN NUMBER
--Invoice Currency Code
 , p_source_33            IN VARCHAR2
--Payables Encumbrance Upgrade Credit Base Amount
 , p_source_34            IN NUMBER
--Payables Encumbrance Upgrade Debit Account
 , p_source_35            IN NUMBER
--Payables Encumbrance Upgrade Debit Amount
 , p_source_36            IN NUMBER
--Payables Encumbrance Upgrade Debit Base Amount
 , p_source_37            IN NUMBER
--Payables Encumbrance Upgrade Option
 , p_source_38            IN VARCHAR2
--Invoice Exchange Date
 , p_source_39            IN DATE
--Invoice Exchange Rate
 , p_source_40            IN NUMBER
--Invoice Exchange Rate Type
 , p_source_41            IN VARCHAR2
--Deferred Accounting End Date
 , p_source_43            IN DATE
--Deferred Accounting Option
 , p_source_44            IN VARCHAR2
--Deferred Accounting Start Date
 , p_source_45            IN DATE
--Override Accounted Amount Indicator
 , p_source_46            IN VARCHAR2
 , p_source_46_meaning    IN VARCHAR2
--Invoice Supplier Identifier
 , p_source_47            IN NUMBER
--Invoice Supplier Site Identifier
 , p_source_48            IN NUMBER
--Third Party Type
 , p_source_49            IN VARCHAR2
--Parent Reversal Identifier
 , p_source_50            IN NUMBER
--Invoice Distribution Statistical Amount
 , p_source_51            IN NUMBER
--Invoice Distribution Tax Line Identifier
 , p_source_52            IN NUMBER
--Invoice Distribution Tax Distribution Identifier from Tax
 , p_source_53            IN NUMBER
--Invoice Distribution Summary Tax Line Identifier
 , p_source_54            IN NUMBER
--Payables Upgrade Credit Encumbrance Type Identifier
 , p_source_55            IN NUMBER
--Payables Upgrade Debit Encumbrance Type Identifier
 , p_source_56            IN NUMBER
--Invoice Distribution Amount
 , p_source_57            IN NUMBER
--Self-Assessed Tax Flag
 , p_source_59            IN VARCHAR2
 , p_source_59_meaning    IN VARCHAR2
--Invoice Distribution Encumbrance Amount
 , p_source_65            IN NUMBER
--Invoice Distribution Encumbrance Ledger Amount
 , p_source_66            IN NUMBER
)
IS

l_component_type              VARCHAR2(80);
l_component_code              VARCHAR2(30);
l_component_type_code         VARCHAR2(1);
l_component_appl_id           INTEGER;
l_amb_context_code            VARCHAR2(30);
l_entity_code                 VARCHAR2(30);
l_event_class_code            VARCHAR2(30);
l_ae_header_id                NUMBER;
l_event_type_code             VARCHAR2(30);
l_line_definition_code        VARCHAR2(30);
l_line_definition_owner_code  VARCHAR2(1);
--
-- adr variables
l_segment                     VARCHAR2(30);
l_ccid                        NUMBER;
l_adr_transaction_coa_id      NUMBER;
l_adr_accounting_coa_id       NUMBER;
l_adr_flexfield_segment_code  VARCHAR2(30);
l_adr_flex_value_set_id       NUMBER;
l_adr_value_type_code         VARCHAR2(30);
l_adr_value_combination_id    NUMBER;
l_adr_value_segment_code      VARCHAR2(30);

l_bflow_method_code           VARCHAR2(30);  -- 4219869 Business Flow
l_bflow_class_code            VARCHAR2(30);  -- 4219869 Business Flow
l_inherit_desc_flag           VARCHAR2(1);   -- 4219869 Business Flow
l_budgetary_control_flag      VARCHAR2(1);   -- 4458381 Public Sector Enh

-- 4262811 Variables ------------------------------------------------------------------------------------------
l_entered_amt_idx             NUMBER;
l_accted_amt_idx              NUMBER;
l_acc_rev_flag                VARCHAR2(1);
l_accrual_line_num            NUMBER;
l_tmp_amt                     NUMBER;
l_acc_rev_natural_side_code   VARCHAR2(1);

l_num_entries                 NUMBER;
l_gl_dates                    xla_ae_journal_entry_pkg.t_array_date;
l_accted_amts                 xla_ae_journal_entry_pkg.t_array_num;
l_entered_amts                xla_ae_journal_entry_pkg.t_array_num;
l_period_names                xla_ae_journal_entry_pkg.t_array_V15L;
l_recog_line_1                NUMBER;
l_recog_line_2                NUMBER;

l_bflow_applied_to_amt_idx    NUMBER;                                -- 5132302
l_bflow_applied_to_amt        NUMBER;                                -- 5132302
l_bflow_applied_to_amts       xla_ae_journal_entry_pkg.t_array_num;  -- 5132302

l_event_id                    NUMBER;  -- To handle MPA header Description: xla_ae_header_pkg.SetHdrDescription

--l_rounding_ccy                VARCHAR2(15); -- To handle MPA rounding  4262811b
l_same_currency               BOOLEAN;        -- To handle MPA rounding  4262811b

---------------------------------------------------------------------------------------------------------------


--
-- bulk performance
--
l_balance_type_code           VARCHAR2(1);
l_rec_acct_attrs              XLA_AE_LINES_PKG.t_rec_acct_attrs;
l_log_module                  VARCHAR2(240);

--
-- Upgrade strategy
--
l_actual_upg_option           VARCHAR2(1);
l_enc_upg_option           VARCHAR2(1);

--
BEGIN
--
IF g_log_enabled THEN
      l_log_module := C_DEFAULT_MODULE||'.AcctLineType_62';
END IF;
--
IF (C_LEVEL_PROCEDURE >= g_log_level) THEN

      trace
         (p_msg      => 'BEGIN of AcctLineType_62'
         ,p_level    => C_LEVEL_PROCEDURE
         ,p_module   => l_log_module);

END IF;
--
l_component_type             := 'AMB_JLT';
l_component_code             := 'AP_SELFASSDNREC_TAX_INV_ENC_DR';
l_component_type_code        := 'S';
l_component_appl_id          :=  200;
l_amb_context_code           := 'DEFAULT';
l_entity_code                := 'AP_INVOICES';
l_event_class_code           := 'INVOICES';
l_event_type_code            := 'INVOICES_ALL';
l_line_definition_owner_code := 'S';
l_line_definition_code       := 'ENC_INVOICES_ALL';
--
l_balance_type_code          := 'E';
l_segment                     := NULL;
l_ccid                        := NULL;
l_adr_transaction_coa_id      := NULL;
l_adr_accounting_coa_id       := NULL;
l_adr_flexfield_segment_code  := NULL;
l_adr_flex_value_set_id       := NULL;
l_adr_value_type_code         := NULL;
l_adr_value_combination_id    := NULL;
l_adr_value_segment_code      := NULL;

l_bflow_method_code          := 'NONE';   -- 4219869 Business Flow
l_bflow_class_code           := 'AP_INV_ENCUM';    -- 4219869 Business Flow
l_inherit_desc_flag          := 'N';   -- 4219869 Business Flow
l_budgetary_control_flag     := 'Y';

l_bflow_applied_to_amt_idx   := NULL; -- 5132302
l_bflow_applied_to_amt       := NULL; -- 5132302
l_entered_amt_idx            := NULL;          -- 4262811
l_accted_amt_idx             := NULL;          -- 4262811
l_acc_rev_flag               := NULL;          -- 4262811
l_accrual_line_num           := NULL;          -- 4262811
l_tmp_amt                    := NULL;          -- 4262811
--
 
IF XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id = XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.ledger_id OR
    l_balance_type_code <> 'B' THEN
IF NVL(p_source_15,'
') =  'NONREC_TAX' AND 
NVL(p_source_59,'
') =  'Y' AND 
NVL(p_source_17,'
') =  'Y'
 THEN 

   --
   XLA_AE_LINES_PKG.SetNewLine;

   p_balance_type_code          := l_balance_type_code;
   -- set the flag so later we will know whether the gain loss line needs to be created
   
   IF(l_balance_type_code = 'A' and p_actual_flag is null) THEN
     p_actual_flag :='A';
   END IF;

   --
   -- bulk performance
   --
   XLA_AE_LINES_PKG.set_ae_header_id (p_ae_header_id => p_event_id ,
                                      p_header_num   => 0); -- 4262811
   --
   -- set accounting line options
   --
   l_ae_header_id:= xla_ae_lines_pkg.SetAcctLineOption(
           p_natural_side_code          => 'D'
         , p_gain_or_loss_flag          => 'N'
         , p_gl_transfer_mode_code      => 'S'
         , p_acct_entry_type_code       => 'E'
         , p_switch_side_flag           => 'Y'
         , p_merge_duplicate_code       => 'N'
         );
   --
   l_acc_rev_natural_side_code := 'C';  -- 4262811
   -- 
   --
   -- set accounting line type info
   --
   xla_ae_lines_pkg.SetAcctLineType
      (p_component_type             => l_component_type
      ,p_event_type_code            => l_event_type_code
      ,p_line_definition_owner_code => l_line_definition_owner_code
      ,p_line_definition_code       => l_line_definition_code
      ,p_accounting_line_code       => l_component_code
      ,p_accounting_line_type_code  => l_component_type_code
      ,p_accounting_line_appl_id    => l_component_appl_id
      ,p_amb_context_code           => l_amb_context_code
      ,p_entity_code                => l_entity_code
      ,p_event_class_code           => l_event_class_code);
   --
   -- set accounting class
   --
   xla_ae_lines_pkg.SetAcctClass(
           p_accounting_class_code  => 'SELF_ASSESSED_TAX'
         , p_ae_header_id           => l_ae_header_id
         );

   --
   -- set rounding class
   --
   XLA_AE_LINES_PKG.g_rec_lines.array_rounding_class(XLA_AE_LINES_PKG.g_LineNumber) :=
                      'SELF_ASSESSED_TAX';

   --
   xla_ae_lines_pkg.g_rec_lines.array_calculate_acctd_flag(xla_ae_lines_pkg.g_LineNumber) := p_calculate_acctd_flag;
   xla_ae_lines_pkg.g_rec_lines.array_calculate_g_l_flag(xla_ae_lines_pkg.g_LineNumber) := p_calculate_g_l_flag;
   --
   -- bulk performance
   --
   XLA_AE_LINES_PKG.g_rec_lines.array_balance_type_code(XLA_AE_LINES_PKG.g_LineNumber) := l_balance_type_code;

   XLA_AE_LINES_PKG.g_rec_lines.array_ledger_id(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id;

   -- 4955764
   XLA_AE_LINES_PKG.g_rec_lines.array_gl_date(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_HEADER_PKG.g_rec_header_new.array_gl_date(g_array_event(p_event_id).array_value_num('header_index'));

   -- 4458381 Public Sector Enh
      XLA_AE_LINES_PKG.g_rec_lines.array_encumbrance_type_id(XLA_AE_LINES_PKG.g_LineNumber) := 1060;
   --
   -- set accounting attributes for the line type
   --
   l_entered_amt_idx := 24;
   l_accted_amt_idx  := 29;
   l_bflow_applied_to_amt_idx  := 7;  -- 5132302
   l_rec_acct_attrs.array_acct_attr_code(1) := 'ACCOUNTING_REVERSAL_OPTION';
   l_rec_acct_attrs.array_char_value(1)  := p_source_19;
   l_rec_acct_attrs.array_acct_attr_code(2) := 'ALLOC_TO_APPLICATION_ID';
   l_rec_acct_attrs.array_num_value(2)  := 
xla_ae_sources_pkg.GetSystemSourceNum(
   p_source_code           => 'XLA_EVENT_APPL_ID'
 , p_source_type_code      => 'Y'
 , p_source_application_id =>  602
);
   l_rec_acct_attrs.array_acct_attr_code(3) := 'ALLOC_TO_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(3)  := p_source_21;
   l_rec_acct_attrs.array_acct_attr_code(4) := 'ALLOC_TO_ENTITY_CODE';
   l_rec_acct_attrs.array_char_value(4)  := 
xla_ae_sources_pkg.GetSystemSourceChar(
   p_source_code           => 'XLA_ENTITY_CODE'
 , p_source_type_code      => 'Y'
 , p_source_application_id =>  602
);
   l_rec_acct_attrs.array_acct_attr_code(5) := 'ALLOC_TO_FIRST_DIST_ID';
   l_rec_acct_attrs.array_num_value(5)  :=  to_char(p_source_23);
   l_rec_acct_attrs.array_acct_attr_code(6) := 'ALLOC_TO_FIRST_SYS_TRAN_ID';
   l_rec_acct_attrs.array_num_value(6)  :=  to_char(p_source_24);
   l_rec_acct_attrs.array_acct_attr_code(7) := 'APPLIED_TO_AMOUNT';
   l_rec_acct_attrs.array_num_value(7)  := p_source_57;
   l_rec_acct_attrs.array_acct_attr_code(8) := 'APPLIED_TO_APPLICATION_ID';
   l_rec_acct_attrs.array_num_value(8)  := p_source_25;
   l_rec_acct_attrs.array_acct_attr_code(9) := 'APPLIED_TO_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(9)  := p_source_26;
   l_rec_acct_attrs.array_acct_attr_code(10) := 'APPLIED_TO_ENTITY_CODE';
   l_rec_acct_attrs.array_char_value(10)  := p_source_27;
   l_rec_acct_attrs.array_acct_attr_code(11) := 'APPLIED_TO_FIRST_DIST_ID';
   l_rec_acct_attrs.array_num_value(11)  :=  to_char(p_source_28);
   l_rec_acct_attrs.array_acct_attr_code(12) := 'APPLIED_TO_FIRST_SYS_TRAN_ID';
   l_rec_acct_attrs.array_num_value(12)  :=  to_char(p_source_29);
   l_rec_acct_attrs.array_acct_attr_code(13) := 'DISTRIBUTION_IDENTIFIER_1';
   l_rec_acct_attrs.array_num_value(13)  :=  to_char(p_source_30);
   l_rec_acct_attrs.array_acct_attr_code(14) := 'DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(14)  := p_source_21;
   l_rec_acct_attrs.array_acct_attr_code(15) := 'ENC_UPG_CR_CCID';
   l_rec_acct_attrs.array_num_value(15)  := p_source_31;
   l_rec_acct_attrs.array_acct_attr_code(16) := 'ENC_UPG_CR_ENTERED_AMT';
   l_rec_acct_attrs.array_num_value(16)  := p_source_32;
   l_rec_acct_attrs.array_acct_attr_code(17) := 'ENC_UPG_CR_ENTERED_CURR';
   l_rec_acct_attrs.array_char_value(17)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(18) := 'ENC_UPG_CR_LEDGER_AMT';
   l_rec_acct_attrs.array_num_value(18)  := p_source_34;
   l_rec_acct_attrs.array_acct_attr_code(19) := 'ENC_UPG_DR_CCID';
   l_rec_acct_attrs.array_num_value(19)  := p_source_35;
   l_rec_acct_attrs.array_acct_attr_code(20) := 'ENC_UPG_DR_ENTERED_AMT';
   l_rec_acct_attrs.array_num_value(20)  := p_source_36;
   l_rec_acct_attrs.array_acct_attr_code(21) := 'ENC_UPG_DR_ENTERED_CURR';
   l_rec_acct_attrs.array_char_value(21)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(22) := 'ENC_UPG_DR_LEDGER_AMT';
   l_rec_acct_attrs.array_num_value(22)  := p_source_37;
   l_rec_acct_attrs.array_acct_attr_code(23) := 'ENC_UPG_OPTION';
   l_rec_acct_attrs.array_char_value(23)  := p_source_38;
   l_rec_acct_attrs.array_acct_attr_code(24) := 'ENTERED_CURRENCY_AMOUNT';
   l_rec_acct_attrs.array_num_value(24)  := p_source_65;
   l_rec_acct_attrs.array_acct_attr_code(25) := 'ENTERED_CURRENCY_CODE';
   l_rec_acct_attrs.array_char_value(25)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(26) := 'EXCHANGE_DATE';
   l_rec_acct_attrs.array_date_value(26)  := p_source_39;
   l_rec_acct_attrs.array_acct_attr_code(27) := 'EXCHANGE_RATE';
   l_rec_acct_attrs.array_num_value(27)  := p_source_40;
   l_rec_acct_attrs.array_acct_attr_code(28) := 'EXCHANGE_RATE_TYPE';
   l_rec_acct_attrs.array_char_value(28)  := p_source_41;
   l_rec_acct_attrs.array_acct_attr_code(29) := 'LEDGER_AMOUNT';
   l_rec_acct_attrs.array_num_value(29)  := p_source_66;
   l_rec_acct_attrs.array_acct_attr_code(30) := 'MULTIPERIOD_END_DATE';
   l_rec_acct_attrs.array_date_value(30)  := p_source_43;
   l_rec_acct_attrs.array_acct_attr_code(31) := 'MULTIPERIOD_OPTION';
   l_rec_acct_attrs.array_char_value(31)  := p_source_44;
   l_rec_acct_attrs.array_acct_attr_code(32) := 'MULTIPERIOD_START_DATE';
   l_rec_acct_attrs.array_date_value(32)  := p_source_45;
   l_rec_acct_attrs.array_acct_attr_code(33) := 'OVERRIDE_ACCTD_AMT_FLAG';
   l_rec_acct_attrs.array_char_value(33)  := p_source_46;
   l_rec_acct_attrs.array_acct_attr_code(34) := 'PARTY_ID';
   l_rec_acct_attrs.array_num_value(34)  := p_source_47;
   l_rec_acct_attrs.array_acct_attr_code(35) := 'PARTY_SITE_ID';
   l_rec_acct_attrs.array_num_value(35)  := p_source_48;
   l_rec_acct_attrs.array_acct_attr_code(36) := 'PARTY_TYPE';
   l_rec_acct_attrs.array_char_value(36)  := p_source_49;
   l_rec_acct_attrs.array_acct_attr_code(37) := 'REVERSED_DISTRIBUTION_ID1';
   l_rec_acct_attrs.array_num_value(37)  :=  to_char(p_source_50);
   l_rec_acct_attrs.array_acct_attr_code(38) := 'REVERSED_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(38)  := p_source_21;
   l_rec_acct_attrs.array_acct_attr_code(39) := 'STATISTICAL_AMOUNT';
   l_rec_acct_attrs.array_num_value(39)  := p_source_51;
   l_rec_acct_attrs.array_acct_attr_code(40) := 'TAX_LINE_REF_ID';
   l_rec_acct_attrs.array_num_value(40)  := p_source_52;
   l_rec_acct_attrs.array_acct_attr_code(41) := 'TAX_REC_NREC_DIST_REF_ID';
   l_rec_acct_attrs.array_num_value(41)  := p_source_53;
   l_rec_acct_attrs.array_acct_attr_code(42) := 'TAX_SUMMARY_LINE_REF_ID';
   l_rec_acct_attrs.array_num_value(42)  := p_source_54;
   l_rec_acct_attrs.array_acct_attr_code(43) := 'UPG_CR_ENC_TYPE_ID';
   l_rec_acct_attrs.array_num_value(43)  := p_source_55;
   l_rec_acct_attrs.array_acct_attr_code(44) := 'UPG_DR_ENC_TYPE_ID';
   l_rec_acct_attrs.array_num_value(44)  := p_source_56;

   XLA_AE_LINES_PKG.SetLineAcctAttrs(l_rec_acct_attrs);
   p_gain_or_loss_ref  := XLA_AE_LINES_PKG.g_rec_lines.array_gain_or_loss_ref(XLA_AE_LINES_PKG.g_LineNumber);

   ---------------------------------------------------------------------------------------------------------------
   -- 4336173 -- assign Business Flow Class (replace code in xla_ae_lines_pkg.Business_Flow_Validation)
   ---------------------------------------------------------------------------------------------------------------
   XLA_AE_LINES_PKG.g_rec_lines.array_business_class_code(XLA_AE_LINES_PKG.g_LineNumber) := l_bflow_class_code;

   l_actual_upg_option  := XLA_AE_LINES_PKG.g_rec_lines.array_actual_upg_option(XLA_AE_LINES_PKG.g_LineNumber);
   l_enc_upg_option     := XLA_AE_LINES_PKG.g_rec_lines.array_enc_upg_option(XLA_AE_LINES_PKG.g_LineNumber);

   IF xla_accounting_cache_pkg.GetValueChar
         (p_source_code         => 'LEDGER_CATEGORY_CODE'
         ,p_target_ledger_id    => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id) IN ('PRIMARY','ALC')
   AND l_bflow_method_code = 'PRIOR_ENTRY'
--   AND (l_actual_upg_option = 'Y' OR l_enc_upg_option = 'Y') Bug 4922099
   AND ( (NVL(l_actual_upg_option, 'N') IN ('Y', 'O')) OR
         (NVL(l_enc_upg_option, 'N') IN ('Y', 'O'))
       )
   THEN
         xla_ae_lines_pkg.BflowUpgEntry
           (p_business_method_code    => l_bflow_method_code
           ,p_business_class_code     => l_bflow_class_code
           ,p_balance_type            => l_balance_type_code);
   ELSE
      NULL;
-- No business flow processing for business flow method of NONE.
   END IF;

   --
   -- call analytical criteria
   --
   
   --
   -- call description
   --
   
xla_ae_lines_pkg.SetLineDescription(
   p_ae_header_id => l_ae_header_id
  ,p_description  => Description_2 (
     p_application_id         => p_application_id
   , p_ae_header_id           => l_ae_header_id 
, p_source_1 => p_source_1
   )
);


   --
   -- call ADRs
   -- Bug 4922099
   --
   IF ( (l_bflow_method_code <> 'PRIOR_ENTRY') OR
        (NVL(l_actual_upg_option, 'N') = 'O') OR
        (NVL(l_enc_upg_option, 'N') = 'O')
      )
   THEN
   NULL;
   --
   --
   
  l_ccid := AcctDerRule_8(
           p_application_id           => p_application_id
         , p_ae_header_id             => l_ae_header_id 
, p_source_13 => p_source_13
         , x_transaction_coa_id       => l_adr_transaction_coa_id
         , x_accounting_coa_id        => l_adr_accounting_coa_id
         , x_value_type_code          => l_adr_value_type_code
         , p_side                     => 'NA'
   );

   xla_ae_lines_pkg.set_ccid(
    p_code_combination_id          => l_ccid
  , p_value_type_code              => l_adr_value_type_code
  , p_transaction_coa_id           => l_adr_transaction_coa_id
  , p_accounting_coa_id            => l_adr_accounting_coa_id
  , p_adr_code                     => 'AP_SELF_ASSESSED_TAX'
  , p_adr_type_code                => 'S'
  , p_component_type               => l_component_type
  , p_component_code               => l_component_code
  , p_component_type_code          => l_component_type_code
  , p_component_appl_id            => l_component_appl_id
  , p_amb_context_code             => l_amb_context_code
  , p_side                         => 'NA'
  );


   --
   --
   END IF;
   --
   -- Bug 4922099
   IF ( ( (NVL(l_actual_upg_option, 'N') = 'O') OR
          (NVL(l_enc_upg_option, 'N') = 'O')
        ) AND
        (l_bflow_method_code = 'PRIOR_ENTRY')
      )
   THEN
      IF
      --
      1 = 2
      --
      THEN
      xla_accounting_err_pkg.build_message
                                    (p_appli_s_name            => 'XLA'
                                    ,p_msg_name                => 'XLA_UPG_OVERRIDE_ADR_UNDEFINED'
                                    ,p_token_1                 => 'LINE_NUMBER'
                                    ,p_value_1                 => XLA_AE_LINES_PKG.g_LineNumber
                                    ,p_token_2                 => 'LINE_TYPE_NAME'
                                    ,p_value_2                 => XLA_AE_SOURCES_PKG.GetComponentName (
                                                                             l_component_type
                                                                            ,l_component_code
                                                                            ,l_component_type_code
                                                                            ,l_component_appl_id
                                                                            ,l_amb_context_code
                                                                            ,l_entity_code
                                                                            ,l_event_class_code
                                                                           )
                                    ,p_token_3                 => 'OWNER'
                                    ,p_value_3                 => xla_lookups_pkg.get_meaning(
                                                                          p_lookup_type     => 'XLA_OWNER_TYPE'
                                                                          ,p_lookup_code    => l_component_type_code
                                                                         )
                                    ,p_token_4                 => 'PRODUCT_NAME'
                                    ,p_value_4                 => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.application_name
                                    ,p_entity_id               => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.entity_id
                                    ,p_event_id                => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.event_id
                                    ,p_ledger_id               => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id
                                    ,p_ae_header_id            =>  NULL
                                       );

        IF (C_LEVEL_ERROR>= g_log_level) THEN
                 trace
                      (p_msg      => 'ERROR: XLA_UPG_OVERRIDE_ADR_UNDEFINED'
                      ,p_level    => C_LEVEL_ERROR
                      ,p_module   => l_log_module);
        END IF;
      END IF;
   END IF;
   --
   --
   ------------------------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- NOTE: XLA_AE_LINES_PKG.ValidateCurrentLine should NOT be generated if business flow method is
   -- Prior Entry.  Currently, the following code is always generated.
   ------------------------------------------------------------------------------------------------
   XLA_AE_LINES_PKG.ValidateCurrentLine;

   ------------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- Populated credit and debit amounts -- Need to generate this within IF <condition>
   ------------------------------------------------------------------------------------
   XLA_AE_LINES_PKG.SetDebitCreditAmounts;

   ----------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- Update journal entry status -- Need to generate this within IF <condition>
   ----------------------------------------------------------------------------------
   XLA_AE_JOURNAL_ENTRY_PKG.UpdateJournalEntryStatus
         (p_hdr_idx => g_array_event(p_event_id).array_value_num('header_index')
         ,p_balance_type_code => l_balance_type_code
         );

   -------------------------------------------------------------------------------------------
   -- 4262811 - Generate the Accrual Reversal lines
   -------------------------------------------------------------------------------------------
   BEGIN
      l_acc_rev_flag := XLA_AE_HEADER_PKG.g_rec_header_new.array_accrual_reversal_flag
                              (g_array_event(p_event_id).array_value_num('header_index'));
      IF l_acc_rev_flag IS NULL THEN
         l_acc_rev_flag := 'N';
      END IF;
   EXCEPTION
      WHEN OTHERS THEN
         l_acc_rev_flag := 'N';
   END;
   --
   IF (l_acc_rev_flag = 'Y') THEN

       -- 4645092  ------------------------------------------------------------------------------
       -- To allow MPA report to determine if it should generate report process
       XLA_ACCOUNTING_PKG.g_mpa_accrual_exists := 'Y';
       ------------------------------------------------------------------------------------------

       l_accrual_line_num := XLA_AE_LINES_PKG.g_LineNumber;
       XLA_AE_LINES_PKG.CopyLineInfo(l_accrual_line_num);
   -- added call to set_ccid to execute mapping  for secondary accrual reversal entries bug 7444204
   -- call ADRs
   -- Bug 4922099
   --
   IF ( (l_bflow_method_code <> 'PRIOR_ENTRY') OR
        (NVL(l_actual_upg_option, 'N') = 'O') OR
        (NVL(l_enc_upg_option, 'N') = 'O')
      )
   THEN
   NULL;
   --
   --
   
  l_ccid := AcctDerRule_8(
           p_application_id           => p_application_id
         , p_ae_header_id             => l_ae_header_id 
, p_source_13 => p_source_13
         , x_transaction_coa_id       => l_adr_transaction_coa_id
         , x_accounting_coa_id        => l_adr_accounting_coa_id
         , x_value_type_code          => l_adr_value_type_code
         , p_side                     => 'NA'
   );

   xla_ae_lines_pkg.set_ccid(
    p_code_combination_id          => l_ccid
  , p_value_type_code              => l_adr_value_type_code
  , p_transaction_coa_id           => l_adr_transaction_coa_id
  , p_accounting_coa_id            => l_adr_accounting_coa_id
  , p_adr_code                     => 'AP_SELF_ASSESSED_TAX'
  , p_adr_type_code                => 'S'
  , p_component_type               => l_component_type
  , p_component_code               => l_component_code
  , p_component_type_code          => l_component_type_code
  , p_component_appl_id            => l_component_appl_id
  , p_amb_context_code             => l_amb_context_code
  , p_side                         => 'NA'
  );


   --
   --
   END IF;

       --
       -- Update the line information that should be overwritten
       --
       XLA_AE_LINES_PKG.set_ae_header_id(p_ae_header_id => p_event_id ,
                                         p_header_num   => 1);
       XLA_AE_LINES_PKG.g_rec_lines.array_header_num(XLA_AE_LINES_PKG.g_LineNumber)  :=1;

       XLA_AE_LINES_PKG.g_rec_lines.array_business_class_code(XLA_AE_LINES_PKG.g_LineNumber) := NULL; -- 4669271

       IF l_bflow_method_code <> 'NONE' THEN  -- 4655713b
          XLA_AE_LINES_PKG.g_rec_lines.array_reversal_code(XLA_AE_LINES_PKG.g_LineNumber) := CONCAT('MPA_',l_bflow_method_code);
       END IF;

      --
      -- Depending on the Reversal Method setup, do a switch side or changes sign for the amounts
      --
      IF (XLA_AE_JOURNAL_ENTRY_PKG.g_cache_ledgers_info.ledger_reversal_option = 'SIDE') THEN
          XLA_AE_LINES_PKG.g_rec_lines.array_natural_side_code(XLA_AE_LINES_PKG.g_LineNumber) :=  l_acc_rev_natural_side_code;
      ELSE
          ---------------------------------------------------------------------------------------------------
          -- 4262811a Switch Sign
          ---------------------------------------------------------------------------------------------------
          XLA_AE_LINES_PKG.g_rec_lines.array_switch_side_flag(XLA_AE_LINES_PKG.g_LineNumber) := 'N';  -- 5052518
          XLA_AE_LINES_PKG.g_rec_lines.array_ledger_amount(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_ledger_amount(XLA_AE_LINES_PKG.g_LineNumber) * -1;
          XLA_AE_LINES_PKG.g_rec_lines.array_entered_amount(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_entered_amount(XLA_AE_LINES_PKG.g_LineNumber) * -1;
          -- 5132302
          XLA_AE_LINES_PKG.g_rec_lines.array_bflow_applied_to_amt(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_bflow_applied_to_amt(XLA_AE_LINES_PKG.g_LineNumber) * -1;

      END IF;

      -- 4955764
      XLA_AE_LINES_PKG.g_rec_lines.array_gl_date(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_HEADER_PKG.g_rec_header_new.array_gl_date(g_array_event(p_event_id).array_value_num('acc_rev_header_index'));


      XLA_AE_LINES_PKG.ValidateCurrentLine;
      XLA_AE_LINES_PKG.SetDebitCreditAmounts;

      XLA_AE_JOURNAL_ENTRY_PKG.UpdateJournalEntryStatus
               (p_hdr_idx           => g_array_event(p_event_id).array_value_num('acc_rev_header_index')
               ,p_balance_type_code => l_balance_type_code);

   END IF;

   -----------------------------------------------------------------------------------------
   -- 4262811 Multiperiod Accounting
   -----------------------------------------------------------------------------------------
     -- No MPA option is assigned.


END IF;
END IF;
--

--
IF (C_LEVEL_PROCEDURE >= g_log_level) THEN
   trace
      (p_msg      => 'END of AcctLineType_62'
      ,p_level    => C_LEVEL_PROCEDURE
      ,p_module   => l_log_module);
END IF;
--
EXCEPTION
  WHEN xla_exceptions_pkg.application_exception THEN
      RAISE;
  WHEN OTHERS THEN
       xla_exceptions_pkg.raise_message
           (p_location => 'XLA_00200_AAD_S_000010_BC_PKG.AcctLineType_62');
END AcctLineType_62;
--

---------------------------------------
--
-- PRIVATE FUNCTION
--         AcctLineType_63
--
---------------------------------------
PROCEDURE AcctLineType_63 (
  p_application_id        IN NUMBER
 ,p_event_id              IN NUMBER
 ,p_calculate_acctd_flag  IN VARCHAR2
 ,p_calculate_g_l_flag    IN VARCHAR2
 ,p_actual_flag           IN OUT VARCHAR2
 ,p_balance_type_code     OUT VARCHAR2
 ,p_gain_or_loss_ref      OUT VARCHAR2
 
--Invoice Distribution Description
 , p_source_1            IN VARCHAR2
--Self-Assessed Tax Account
 , p_source_13            IN NUMBER
--Invoice Distribution Type
 , p_source_15            IN VARCHAR2
 , p_source_15_meaning    IN VARCHAR2
--Purchasing Encumbrance Option
 , p_source_17            IN VARCHAR2
 , p_source_17_meaning    IN VARCHAR2
--Accounting Reversal Indicator
 , p_source_19            IN VARCHAR2
--Distribution Link Type
 , p_source_21            IN VARCHAR2
--Allocation to Main Distribution Identifier
 , p_source_23            IN NUMBER
--Invoice Identifier
 , p_source_24            IN NUMBER
--Business Flow Accounts Payable Application Identifier
 , p_source_25            IN NUMBER
--Business Flow Invoice Distribution Type
 , p_source_26            IN VARCHAR2
--Business Flow Invoice Entity Code
 , p_source_27            IN VARCHAR2
--Business Flow Invoice Distribution Identifier
 , p_source_28            IN NUMBER
--Business Flow Invoice Identifier
 , p_source_29            IN NUMBER
--Invoice Distribution Identifier
 , p_source_30            IN NUMBER
--Payables Encumbrance Upgrade Credit Account
 , p_source_31            IN NUMBER
--Payables Encumbrance Upgrade Credit Amount
 , p_source_32            IN NUMBER
--Invoice Currency Code
 , p_source_33            IN VARCHAR2
--Payables Encumbrance Upgrade Credit Base Amount
 , p_source_34            IN NUMBER
--Payables Encumbrance Upgrade Debit Account
 , p_source_35            IN NUMBER
--Payables Encumbrance Upgrade Debit Amount
 , p_source_36            IN NUMBER
--Payables Encumbrance Upgrade Debit Base Amount
 , p_source_37            IN NUMBER
--Payables Encumbrance Upgrade Option
 , p_source_38            IN VARCHAR2
--Invoice Exchange Date
 , p_source_39            IN DATE
--Invoice Exchange Rate
 , p_source_40            IN NUMBER
--Invoice Exchange Rate Type
 , p_source_41            IN VARCHAR2
--Deferred Accounting End Date
 , p_source_43            IN DATE
--Deferred Accounting Option
 , p_source_44            IN VARCHAR2
--Deferred Accounting Start Date
 , p_source_45            IN DATE
--Override Accounted Amount Indicator
 , p_source_46            IN VARCHAR2
 , p_source_46_meaning    IN VARCHAR2
--Invoice Supplier Identifier
 , p_source_47            IN NUMBER
--Invoice Supplier Site Identifier
 , p_source_48            IN NUMBER
--Third Party Type
 , p_source_49            IN VARCHAR2
--Parent Reversal Identifier
 , p_source_50            IN NUMBER
--Invoice Distribution Tax Line Identifier
 , p_source_52            IN NUMBER
--Invoice Distribution Tax Distribution Identifier from Tax
 , p_source_53            IN NUMBER
--Invoice Distribution Summary Tax Line Identifier
 , p_source_54            IN NUMBER
--Payables Upgrade Credit Encumbrance Type Identifier
 , p_source_55            IN NUMBER
--Payables Upgrade Debit Encumbrance Type Identifier
 , p_source_56            IN NUMBER
--Self-Assessed Tax Flag
 , p_source_59            IN VARCHAR2
 , p_source_59_meaning    IN VARCHAR2
--Invoice Distribution Encumbrance Amount
 , p_source_65            IN NUMBER
--Invoice Distribution Encumbrance Ledger Amount
 , p_source_66            IN NUMBER
)
IS

l_component_type              VARCHAR2(80);
l_component_code              VARCHAR2(30);
l_component_type_code         VARCHAR2(1);
l_component_appl_id           INTEGER;
l_amb_context_code            VARCHAR2(30);
l_entity_code                 VARCHAR2(30);
l_event_class_code            VARCHAR2(30);
l_ae_header_id                NUMBER;
l_event_type_code             VARCHAR2(30);
l_line_definition_code        VARCHAR2(30);
l_line_definition_owner_code  VARCHAR2(1);
--
-- adr variables
l_segment                     VARCHAR2(30);
l_ccid                        NUMBER;
l_adr_transaction_coa_id      NUMBER;
l_adr_accounting_coa_id       NUMBER;
l_adr_flexfield_segment_code  VARCHAR2(30);
l_adr_flex_value_set_id       NUMBER;
l_adr_value_type_code         VARCHAR2(30);
l_adr_value_combination_id    NUMBER;
l_adr_value_segment_code      VARCHAR2(30);

l_bflow_method_code           VARCHAR2(30);  -- 4219869 Business Flow
l_bflow_class_code            VARCHAR2(30);  -- 4219869 Business Flow
l_inherit_desc_flag           VARCHAR2(1);   -- 4219869 Business Flow
l_budgetary_control_flag      VARCHAR2(1);   -- 4458381 Public Sector Enh

-- 4262811 Variables ------------------------------------------------------------------------------------------
l_entered_amt_idx             NUMBER;
l_accted_amt_idx              NUMBER;
l_acc_rev_flag                VARCHAR2(1);
l_accrual_line_num            NUMBER;
l_tmp_amt                     NUMBER;
l_acc_rev_natural_side_code   VARCHAR2(1);

l_num_entries                 NUMBER;
l_gl_dates                    xla_ae_journal_entry_pkg.t_array_date;
l_accted_amts                 xla_ae_journal_entry_pkg.t_array_num;
l_entered_amts                xla_ae_journal_entry_pkg.t_array_num;
l_period_names                xla_ae_journal_entry_pkg.t_array_V15L;
l_recog_line_1                NUMBER;
l_recog_line_2                NUMBER;

l_bflow_applied_to_amt_idx    NUMBER;                                -- 5132302
l_bflow_applied_to_amt        NUMBER;                                -- 5132302
l_bflow_applied_to_amts       xla_ae_journal_entry_pkg.t_array_num;  -- 5132302

l_event_id                    NUMBER;  -- To handle MPA header Description: xla_ae_header_pkg.SetHdrDescription

--l_rounding_ccy                VARCHAR2(15); -- To handle MPA rounding  4262811b
l_same_currency               BOOLEAN;        -- To handle MPA rounding  4262811b

---------------------------------------------------------------------------------------------------------------


--
-- bulk performance
--
l_balance_type_code           VARCHAR2(1);
l_rec_acct_attrs              XLA_AE_LINES_PKG.t_rec_acct_attrs;
l_log_module                  VARCHAR2(240);

--
-- Upgrade strategy
--
l_actual_upg_option           VARCHAR2(1);
l_enc_upg_option           VARCHAR2(1);

--
BEGIN
--
IF g_log_enabled THEN
      l_log_module := C_DEFAULT_MODULE||'.AcctLineType_63';
END IF;
--
IF (C_LEVEL_PROCEDURE >= g_log_level) THEN

      trace
         (p_msg      => 'BEGIN of AcctLineType_63'
         ,p_level    => C_LEVEL_PROCEDURE
         ,p_module   => l_log_module);

END IF;
--
l_component_type             := 'AMB_JLT';
l_component_code             := 'AP_SELFASSD_NREC_TAX_DM_ENC_DR';
l_component_type_code        := 'S';
l_component_appl_id          :=  200;
l_amb_context_code           := 'DEFAULT';
l_entity_code                := 'AP_INVOICES';
l_event_class_code           := 'DEBIT MEMOS';
l_event_type_code            := 'DEBIT MEMOS_ALL';
l_line_definition_owner_code := 'S';
l_line_definition_code       := 'ENC_DM_ALL';
--
l_balance_type_code          := 'E';
l_segment                     := NULL;
l_ccid                        := NULL;
l_adr_transaction_coa_id      := NULL;
l_adr_accounting_coa_id       := NULL;
l_adr_flexfield_segment_code  := NULL;
l_adr_flex_value_set_id       := NULL;
l_adr_value_type_code         := NULL;
l_adr_value_combination_id    := NULL;
l_adr_value_segment_code      := NULL;

l_bflow_method_code          := 'NONE';   -- 4219869 Business Flow
l_bflow_class_code           := 'AP_INV_ENCUM';    -- 4219869 Business Flow
l_inherit_desc_flag          := 'N';   -- 4219869 Business Flow
l_budgetary_control_flag     := 'Y';

l_bflow_applied_to_amt_idx   := NULL; -- 5132302
l_bflow_applied_to_amt       := NULL; -- 5132302
l_entered_amt_idx            := NULL;          -- 4262811
l_accted_amt_idx             := NULL;          -- 4262811
l_acc_rev_flag               := NULL;          -- 4262811
l_accrual_line_num           := NULL;          -- 4262811
l_tmp_amt                    := NULL;          -- 4262811
--
 
IF XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id = XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.ledger_id OR
    l_balance_type_code <> 'B' THEN
IF NVL(p_source_15,'
') =  'NONREC_TAX' AND 
NVL(p_source_59,'
') =  'Y' AND 
NVL(p_source_17,'
') =  'Y'
 THEN 

   --
   XLA_AE_LINES_PKG.SetNewLine;

   p_balance_type_code          := l_balance_type_code;
   -- set the flag so later we will know whether the gain loss line needs to be created
   
   IF(l_balance_type_code = 'A' and p_actual_flag is null) THEN
     p_actual_flag :='A';
   END IF;

   --
   -- bulk performance
   --
   XLA_AE_LINES_PKG.set_ae_header_id (p_ae_header_id => p_event_id ,
                                      p_header_num   => 0); -- 4262811
   --
   -- set accounting line options
   --
   l_ae_header_id:= xla_ae_lines_pkg.SetAcctLineOption(
           p_natural_side_code          => 'D'
         , p_gain_or_loss_flag          => 'N'
         , p_gl_transfer_mode_code      => 'S'
         , p_acct_entry_type_code       => 'E'
         , p_switch_side_flag           => 'Y'
         , p_merge_duplicate_code       => 'N'
         );
   --
   l_acc_rev_natural_side_code := 'C';  -- 4262811
   -- 
   --
   -- set accounting line type info
   --
   xla_ae_lines_pkg.SetAcctLineType
      (p_component_type             => l_component_type
      ,p_event_type_code            => l_event_type_code
      ,p_line_definition_owner_code => l_line_definition_owner_code
      ,p_line_definition_code       => l_line_definition_code
      ,p_accounting_line_code       => l_component_code
      ,p_accounting_line_type_code  => l_component_type_code
      ,p_accounting_line_appl_id    => l_component_appl_id
      ,p_amb_context_code           => l_amb_context_code
      ,p_entity_code                => l_entity_code
      ,p_event_class_code           => l_event_class_code);
   --
   -- set accounting class
   --
   xla_ae_lines_pkg.SetAcctClass(
           p_accounting_class_code  => 'SELF_ASSESSED_TAX'
         , p_ae_header_id           => l_ae_header_id
         );

   --
   -- set rounding class
   --
   XLA_AE_LINES_PKG.g_rec_lines.array_rounding_class(XLA_AE_LINES_PKG.g_LineNumber) :=
                      'SELF_ASSESSED_TAX';

   --
   xla_ae_lines_pkg.g_rec_lines.array_calculate_acctd_flag(xla_ae_lines_pkg.g_LineNumber) := p_calculate_acctd_flag;
   xla_ae_lines_pkg.g_rec_lines.array_calculate_g_l_flag(xla_ae_lines_pkg.g_LineNumber) := p_calculate_g_l_flag;
   --
   -- bulk performance
   --
   XLA_AE_LINES_PKG.g_rec_lines.array_balance_type_code(XLA_AE_LINES_PKG.g_LineNumber) := l_balance_type_code;

   XLA_AE_LINES_PKG.g_rec_lines.array_ledger_id(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id;

   -- 4955764
   XLA_AE_LINES_PKG.g_rec_lines.array_gl_date(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_HEADER_PKG.g_rec_header_new.array_gl_date(g_array_event(p_event_id).array_value_num('header_index'));

   -- 4458381 Public Sector Enh
      XLA_AE_LINES_PKG.g_rec_lines.array_encumbrance_type_id(XLA_AE_LINES_PKG.g_LineNumber) := 1060;
   --
   -- set accounting attributes for the line type
   --
   l_entered_amt_idx := 23;
   l_accted_amt_idx  := 28;
   l_bflow_applied_to_amt_idx  := NULL;  -- 5132302
   l_rec_acct_attrs.array_acct_attr_code(1) := 'ACCOUNTING_REVERSAL_OPTION';
   l_rec_acct_attrs.array_char_value(1)  := p_source_19;
   l_rec_acct_attrs.array_acct_attr_code(2) := 'ALLOC_TO_APPLICATION_ID';
   l_rec_acct_attrs.array_num_value(2)  := 
xla_ae_sources_pkg.GetSystemSourceNum(
   p_source_code           => 'XLA_EVENT_APPL_ID'
 , p_source_type_code      => 'Y'
 , p_source_application_id =>  602
);
   l_rec_acct_attrs.array_acct_attr_code(3) := 'ALLOC_TO_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(3)  := p_source_21;
   l_rec_acct_attrs.array_acct_attr_code(4) := 'ALLOC_TO_ENTITY_CODE';
   l_rec_acct_attrs.array_char_value(4)  := 
xla_ae_sources_pkg.GetSystemSourceChar(
   p_source_code           => 'XLA_ENTITY_CODE'
 , p_source_type_code      => 'Y'
 , p_source_application_id =>  602
);
   l_rec_acct_attrs.array_acct_attr_code(5) := 'ALLOC_TO_FIRST_DIST_ID';
   l_rec_acct_attrs.array_num_value(5)  :=  to_char(p_source_23);
   l_rec_acct_attrs.array_acct_attr_code(6) := 'ALLOC_TO_FIRST_SYS_TRAN_ID';
   l_rec_acct_attrs.array_num_value(6)  :=  to_char(p_source_24);
   l_rec_acct_attrs.array_acct_attr_code(7) := 'APPLIED_TO_APPLICATION_ID';
   l_rec_acct_attrs.array_num_value(7)  := p_source_25;
   l_rec_acct_attrs.array_acct_attr_code(8) := 'APPLIED_TO_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(8)  := p_source_26;
   l_rec_acct_attrs.array_acct_attr_code(9) := 'APPLIED_TO_ENTITY_CODE';
   l_rec_acct_attrs.array_char_value(9)  := p_source_27;
   l_rec_acct_attrs.array_acct_attr_code(10) := 'APPLIED_TO_FIRST_DIST_ID';
   l_rec_acct_attrs.array_num_value(10)  :=  to_char(p_source_28);
   l_rec_acct_attrs.array_acct_attr_code(11) := 'APPLIED_TO_FIRST_SYS_TRAN_ID';
   l_rec_acct_attrs.array_num_value(11)  :=  to_char(p_source_29);
   l_rec_acct_attrs.array_acct_attr_code(12) := 'DISTRIBUTION_IDENTIFIER_1';
   l_rec_acct_attrs.array_num_value(12)  :=  to_char(p_source_30);
   l_rec_acct_attrs.array_acct_attr_code(13) := 'DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(13)  := p_source_21;
   l_rec_acct_attrs.array_acct_attr_code(14) := 'ENC_UPG_CR_CCID';
   l_rec_acct_attrs.array_num_value(14)  := p_source_31;
   l_rec_acct_attrs.array_acct_attr_code(15) := 'ENC_UPG_CR_ENTERED_AMT';
   l_rec_acct_attrs.array_num_value(15)  := p_source_32;
   l_rec_acct_attrs.array_acct_attr_code(16) := 'ENC_UPG_CR_ENTERED_CURR';
   l_rec_acct_attrs.array_char_value(16)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(17) := 'ENC_UPG_CR_LEDGER_AMT';
   l_rec_acct_attrs.array_num_value(17)  := p_source_34;
   l_rec_acct_attrs.array_acct_attr_code(18) := 'ENC_UPG_DR_CCID';
   l_rec_acct_attrs.array_num_value(18)  := p_source_35;
   l_rec_acct_attrs.array_acct_attr_code(19) := 'ENC_UPG_DR_ENTERED_AMT';
   l_rec_acct_attrs.array_num_value(19)  := p_source_36;
   l_rec_acct_attrs.array_acct_attr_code(20) := 'ENC_UPG_DR_ENTERED_CURR';
   l_rec_acct_attrs.array_char_value(20)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(21) := 'ENC_UPG_DR_LEDGER_AMT';
   l_rec_acct_attrs.array_num_value(21)  := p_source_37;
   l_rec_acct_attrs.array_acct_attr_code(22) := 'ENC_UPG_OPTION';
   l_rec_acct_attrs.array_char_value(22)  := p_source_38;
   l_rec_acct_attrs.array_acct_attr_code(23) := 'ENTERED_CURRENCY_AMOUNT';
   l_rec_acct_attrs.array_num_value(23)  := p_source_65;
   l_rec_acct_attrs.array_acct_attr_code(24) := 'ENTERED_CURRENCY_CODE';
   l_rec_acct_attrs.array_char_value(24)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(25) := 'EXCHANGE_DATE';
   l_rec_acct_attrs.array_date_value(25)  := p_source_39;
   l_rec_acct_attrs.array_acct_attr_code(26) := 'EXCHANGE_RATE';
   l_rec_acct_attrs.array_num_value(26)  := p_source_40;
   l_rec_acct_attrs.array_acct_attr_code(27) := 'EXCHANGE_RATE_TYPE';
   l_rec_acct_attrs.array_char_value(27)  := p_source_41;
   l_rec_acct_attrs.array_acct_attr_code(28) := 'LEDGER_AMOUNT';
   l_rec_acct_attrs.array_num_value(28)  := p_source_66;
   l_rec_acct_attrs.array_acct_attr_code(29) := 'MULTIPERIOD_END_DATE';
   l_rec_acct_attrs.array_date_value(29)  := p_source_43;
   l_rec_acct_attrs.array_acct_attr_code(30) := 'MULTIPERIOD_OPTION';
   l_rec_acct_attrs.array_char_value(30)  := p_source_44;
   l_rec_acct_attrs.array_acct_attr_code(31) := 'MULTIPERIOD_START_DATE';
   l_rec_acct_attrs.array_date_value(31)  := p_source_45;
   l_rec_acct_attrs.array_acct_attr_code(32) := 'OVERRIDE_ACCTD_AMT_FLAG';
   l_rec_acct_attrs.array_char_value(32)  := p_source_46;
   l_rec_acct_attrs.array_acct_attr_code(33) := 'PARTY_ID';
   l_rec_acct_attrs.array_num_value(33)  := p_source_47;
   l_rec_acct_attrs.array_acct_attr_code(34) := 'PARTY_SITE_ID';
   l_rec_acct_attrs.array_num_value(34)  := p_source_48;
   l_rec_acct_attrs.array_acct_attr_code(35) := 'PARTY_TYPE';
   l_rec_acct_attrs.array_char_value(35)  := p_source_49;
   l_rec_acct_attrs.array_acct_attr_code(36) := 'REVERSED_DISTRIBUTION_ID1';
   l_rec_acct_attrs.array_num_value(36)  :=  to_char(p_source_50);
   l_rec_acct_attrs.array_acct_attr_code(37) := 'REVERSED_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(37)  := p_source_21;
   l_rec_acct_attrs.array_acct_attr_code(38) := 'TAX_LINE_REF_ID';
   l_rec_acct_attrs.array_num_value(38)  := p_source_52;
   l_rec_acct_attrs.array_acct_attr_code(39) := 'TAX_REC_NREC_DIST_REF_ID';
   l_rec_acct_attrs.array_num_value(39)  := p_source_53;
   l_rec_acct_attrs.array_acct_attr_code(40) := 'TAX_SUMMARY_LINE_REF_ID';
   l_rec_acct_attrs.array_num_value(40)  := p_source_54;
   l_rec_acct_attrs.array_acct_attr_code(41) := 'UPG_CR_ENC_TYPE_ID';
   l_rec_acct_attrs.array_num_value(41)  := p_source_55;
   l_rec_acct_attrs.array_acct_attr_code(42) := 'UPG_DR_ENC_TYPE_ID';
   l_rec_acct_attrs.array_num_value(42)  := p_source_56;

   XLA_AE_LINES_PKG.SetLineAcctAttrs(l_rec_acct_attrs);
   p_gain_or_loss_ref  := XLA_AE_LINES_PKG.g_rec_lines.array_gain_or_loss_ref(XLA_AE_LINES_PKG.g_LineNumber);

   ---------------------------------------------------------------------------------------------------------------
   -- 4336173 -- assign Business Flow Class (replace code in xla_ae_lines_pkg.Business_Flow_Validation)
   ---------------------------------------------------------------------------------------------------------------
   XLA_AE_LINES_PKG.g_rec_lines.array_business_class_code(XLA_AE_LINES_PKG.g_LineNumber) := l_bflow_class_code;

   l_actual_upg_option  := XLA_AE_LINES_PKG.g_rec_lines.array_actual_upg_option(XLA_AE_LINES_PKG.g_LineNumber);
   l_enc_upg_option     := XLA_AE_LINES_PKG.g_rec_lines.array_enc_upg_option(XLA_AE_LINES_PKG.g_LineNumber);

   IF xla_accounting_cache_pkg.GetValueChar
         (p_source_code         => 'LEDGER_CATEGORY_CODE'
         ,p_target_ledger_id    => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id) IN ('PRIMARY','ALC')
   AND l_bflow_method_code = 'PRIOR_ENTRY'
--   AND (l_actual_upg_option = 'Y' OR l_enc_upg_option = 'Y') Bug 4922099
   AND ( (NVL(l_actual_upg_option, 'N') IN ('Y', 'O')) OR
         (NVL(l_enc_upg_option, 'N') IN ('Y', 'O'))
       )
   THEN
         xla_ae_lines_pkg.BflowUpgEntry
           (p_business_method_code    => l_bflow_method_code
           ,p_business_class_code     => l_bflow_class_code
           ,p_balance_type            => l_balance_type_code);
   ELSE
      NULL;
-- No business flow processing for business flow method of NONE.
   END IF;

   --
   -- call analytical criteria
   --
   
   --
   -- call description
   --
   
xla_ae_lines_pkg.SetLineDescription(
   p_ae_header_id => l_ae_header_id
  ,p_description  => Description_2 (
     p_application_id         => p_application_id
   , p_ae_header_id           => l_ae_header_id 
, p_source_1 => p_source_1
   )
);


   --
   -- call ADRs
   -- Bug 4922099
   --
   IF ( (l_bflow_method_code <> 'PRIOR_ENTRY') OR
        (NVL(l_actual_upg_option, 'N') = 'O') OR
        (NVL(l_enc_upg_option, 'N') = 'O')
      )
   THEN
   NULL;
   --
   --
   
  l_ccid := AcctDerRule_8(
           p_application_id           => p_application_id
         , p_ae_header_id             => l_ae_header_id 
, p_source_13 => p_source_13
         , x_transaction_coa_id       => l_adr_transaction_coa_id
         , x_accounting_coa_id        => l_adr_accounting_coa_id
         , x_value_type_code          => l_adr_value_type_code
         , p_side                     => 'NA'
   );

   xla_ae_lines_pkg.set_ccid(
    p_code_combination_id          => l_ccid
  , p_value_type_code              => l_adr_value_type_code
  , p_transaction_coa_id           => l_adr_transaction_coa_id
  , p_accounting_coa_id            => l_adr_accounting_coa_id
  , p_adr_code                     => 'AP_SELF_ASSESSED_TAX'
  , p_adr_type_code                => 'S'
  , p_component_type               => l_component_type
  , p_component_code               => l_component_code
  , p_component_type_code          => l_component_type_code
  , p_component_appl_id            => l_component_appl_id
  , p_amb_context_code             => l_amb_context_code
  , p_side                         => 'NA'
  );


   --
   --
   END IF;
   --
   -- Bug 4922099
   IF ( ( (NVL(l_actual_upg_option, 'N') = 'O') OR
          (NVL(l_enc_upg_option, 'N') = 'O')
        ) AND
        (l_bflow_method_code = 'PRIOR_ENTRY')
      )
   THEN
      IF
      --
      1 = 2
      --
      THEN
      xla_accounting_err_pkg.build_message
                                    (p_appli_s_name            => 'XLA'
                                    ,p_msg_name                => 'XLA_UPG_OVERRIDE_ADR_UNDEFINED'
                                    ,p_token_1                 => 'LINE_NUMBER'
                                    ,p_value_1                 => XLA_AE_LINES_PKG.g_LineNumber
                                    ,p_token_2                 => 'LINE_TYPE_NAME'
                                    ,p_value_2                 => XLA_AE_SOURCES_PKG.GetComponentName (
                                                                             l_component_type
                                                                            ,l_component_code
                                                                            ,l_component_type_code
                                                                            ,l_component_appl_id
                                                                            ,l_amb_context_code
                                                                            ,l_entity_code
                                                                            ,l_event_class_code
                                                                           )
                                    ,p_token_3                 => 'OWNER'
                                    ,p_value_3                 => xla_lookups_pkg.get_meaning(
                                                                          p_lookup_type     => 'XLA_OWNER_TYPE'
                                                                          ,p_lookup_code    => l_component_type_code
                                                                         )
                                    ,p_token_4                 => 'PRODUCT_NAME'
                                    ,p_value_4                 => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.application_name
                                    ,p_entity_id               => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.entity_id
                                    ,p_event_id                => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.event_id
                                    ,p_ledger_id               => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id
                                    ,p_ae_header_id            =>  NULL
                                       );

        IF (C_LEVEL_ERROR>= g_log_level) THEN
                 trace
                      (p_msg      => 'ERROR: XLA_UPG_OVERRIDE_ADR_UNDEFINED'
                      ,p_level    => C_LEVEL_ERROR
                      ,p_module   => l_log_module);
        END IF;
      END IF;
   END IF;
   --
   --
   ------------------------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- NOTE: XLA_AE_LINES_PKG.ValidateCurrentLine should NOT be generated if business flow method is
   -- Prior Entry.  Currently, the following code is always generated.
   ------------------------------------------------------------------------------------------------
   XLA_AE_LINES_PKG.ValidateCurrentLine;

   ------------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- Populated credit and debit amounts -- Need to generate this within IF <condition>
   ------------------------------------------------------------------------------------
   XLA_AE_LINES_PKG.SetDebitCreditAmounts;

   ----------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- Update journal entry status -- Need to generate this within IF <condition>
   ----------------------------------------------------------------------------------
   XLA_AE_JOURNAL_ENTRY_PKG.UpdateJournalEntryStatus
         (p_hdr_idx => g_array_event(p_event_id).array_value_num('header_index')
         ,p_balance_type_code => l_balance_type_code
         );

   -------------------------------------------------------------------------------------------
   -- 4262811 - Generate the Accrual Reversal lines
   -------------------------------------------------------------------------------------------
   BEGIN
      l_acc_rev_flag := XLA_AE_HEADER_PKG.g_rec_header_new.array_accrual_reversal_flag
                              (g_array_event(p_event_id).array_value_num('header_index'));
      IF l_acc_rev_flag IS NULL THEN
         l_acc_rev_flag := 'N';
      END IF;
   EXCEPTION
      WHEN OTHERS THEN
         l_acc_rev_flag := 'N';
   END;
   --
   IF (l_acc_rev_flag = 'Y') THEN

       -- 4645092  ------------------------------------------------------------------------------
       -- To allow MPA report to determine if it should generate report process
       XLA_ACCOUNTING_PKG.g_mpa_accrual_exists := 'Y';
       ------------------------------------------------------------------------------------------

       l_accrual_line_num := XLA_AE_LINES_PKG.g_LineNumber;
       XLA_AE_LINES_PKG.CopyLineInfo(l_accrual_line_num);
   -- added call to set_ccid to execute mapping  for secondary accrual reversal entries bug 7444204
   -- call ADRs
   -- Bug 4922099
   --
   IF ( (l_bflow_method_code <> 'PRIOR_ENTRY') OR
        (NVL(l_actual_upg_option, 'N') = 'O') OR
        (NVL(l_enc_upg_option, 'N') = 'O')
      )
   THEN
   NULL;
   --
   --
   
  l_ccid := AcctDerRule_8(
           p_application_id           => p_application_id
         , p_ae_header_id             => l_ae_header_id 
, p_source_13 => p_source_13
         , x_transaction_coa_id       => l_adr_transaction_coa_id
         , x_accounting_coa_id        => l_adr_accounting_coa_id
         , x_value_type_code          => l_adr_value_type_code
         , p_side                     => 'NA'
   );

   xla_ae_lines_pkg.set_ccid(
    p_code_combination_id          => l_ccid
  , p_value_type_code              => l_adr_value_type_code
  , p_transaction_coa_id           => l_adr_transaction_coa_id
  , p_accounting_coa_id            => l_adr_accounting_coa_id
  , p_adr_code                     => 'AP_SELF_ASSESSED_TAX'
  , p_adr_type_code                => 'S'
  , p_component_type               => l_component_type
  , p_component_code               => l_component_code
  , p_component_type_code          => l_component_type_code
  , p_component_appl_id            => l_component_appl_id
  , p_amb_context_code             => l_amb_context_code
  , p_side                         => 'NA'
  );


   --
   --
   END IF;

       --
       -- Update the line information that should be overwritten
       --
       XLA_AE_LINES_PKG.set_ae_header_id(p_ae_header_id => p_event_id ,
                                         p_header_num   => 1);
       XLA_AE_LINES_PKG.g_rec_lines.array_header_num(XLA_AE_LINES_PKG.g_LineNumber)  :=1;

       XLA_AE_LINES_PKG.g_rec_lines.array_business_class_code(XLA_AE_LINES_PKG.g_LineNumber) := NULL; -- 4669271

       IF l_bflow_method_code <> 'NONE' THEN  -- 4655713b
          XLA_AE_LINES_PKG.g_rec_lines.array_reversal_code(XLA_AE_LINES_PKG.g_LineNumber) := CONCAT('MPA_',l_bflow_method_code);
       END IF;

      --
      -- Depending on the Reversal Method setup, do a switch side or changes sign for the amounts
      --
      IF (XLA_AE_JOURNAL_ENTRY_PKG.g_cache_ledgers_info.ledger_reversal_option = 'SIDE') THEN
          XLA_AE_LINES_PKG.g_rec_lines.array_natural_side_code(XLA_AE_LINES_PKG.g_LineNumber) :=  l_acc_rev_natural_side_code;
      ELSE
          ---------------------------------------------------------------------------------------------------
          -- 4262811a Switch Sign
          ---------------------------------------------------------------------------------------------------
          XLA_AE_LINES_PKG.g_rec_lines.array_switch_side_flag(XLA_AE_LINES_PKG.g_LineNumber) := 'N';  -- 5052518
          XLA_AE_LINES_PKG.g_rec_lines.array_ledger_amount(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_ledger_amount(XLA_AE_LINES_PKG.g_LineNumber) * -1;
          XLA_AE_LINES_PKG.g_rec_lines.array_entered_amount(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_entered_amount(XLA_AE_LINES_PKG.g_LineNumber) * -1;
          -- 5132302
          XLA_AE_LINES_PKG.g_rec_lines.array_bflow_applied_to_amt(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_bflow_applied_to_amt(XLA_AE_LINES_PKG.g_LineNumber) * -1;

      END IF;

      -- 4955764
      XLA_AE_LINES_PKG.g_rec_lines.array_gl_date(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_HEADER_PKG.g_rec_header_new.array_gl_date(g_array_event(p_event_id).array_value_num('acc_rev_header_index'));


      XLA_AE_LINES_PKG.ValidateCurrentLine;
      XLA_AE_LINES_PKG.SetDebitCreditAmounts;

      XLA_AE_JOURNAL_ENTRY_PKG.UpdateJournalEntryStatus
               (p_hdr_idx           => g_array_event(p_event_id).array_value_num('acc_rev_header_index')
               ,p_balance_type_code => l_balance_type_code);

   END IF;

   -----------------------------------------------------------------------------------------
   -- 4262811 Multiperiod Accounting
   -----------------------------------------------------------------------------------------
     -- No MPA option is assigned.


END IF;
END IF;
--

--
IF (C_LEVEL_PROCEDURE >= g_log_level) THEN
   trace
      (p_msg      => 'END of AcctLineType_63'
      ,p_level    => C_LEVEL_PROCEDURE
      ,p_module   => l_log_module);
END IF;
--
EXCEPTION
  WHEN xla_exceptions_pkg.application_exception THEN
      RAISE;
  WHEN OTHERS THEN
       xla_exceptions_pkg.raise_message
           (p_location => 'XLA_00200_AAD_S_000010_BC_PKG.AcctLineType_63');
END AcctLineType_63;
--

---------------------------------------
--
-- PRIVATE FUNCTION
--         AcctLineType_64
--
---------------------------------------
PROCEDURE AcctLineType_64 (
  p_application_id        IN NUMBER
 ,p_event_id              IN NUMBER
 ,p_calculate_acctd_flag  IN VARCHAR2
 ,p_calculate_g_l_flag    IN VARCHAR2
 ,p_actual_flag           IN OUT VARCHAR2
 ,p_balance_type_code     OUT VARCHAR2
 ,p_gain_or_loss_ref      OUT VARCHAR2
 
--Invoice Distribution Description
 , p_source_1            IN VARCHAR2
--Self-Assessed Tax Account
 , p_source_13            IN NUMBER
--Invoice Distribution Type
 , p_source_15            IN VARCHAR2
 , p_source_15_meaning    IN VARCHAR2
--Purchasing Encumbrance Option
 , p_source_17            IN VARCHAR2
 , p_source_17_meaning    IN VARCHAR2
--Accounting Reversal Indicator
 , p_source_19            IN VARCHAR2
--Distribution Link Type
 , p_source_21            IN VARCHAR2
--Allocation to Main Distribution Identifier
 , p_source_23            IN NUMBER
--Invoice Identifier
 , p_source_24            IN NUMBER
--Business Flow Accounts Payable Application Identifier
 , p_source_25            IN NUMBER
--Business Flow Invoice Distribution Type
 , p_source_26            IN VARCHAR2
--Business Flow Invoice Entity Code
 , p_source_27            IN VARCHAR2
--Business Flow Invoice Distribution Identifier
 , p_source_28            IN NUMBER
--Business Flow Invoice Identifier
 , p_source_29            IN NUMBER
--Invoice Distribution Identifier
 , p_source_30            IN NUMBER
--Payables Encumbrance Upgrade Credit Account
 , p_source_31            IN NUMBER
--Payables Encumbrance Upgrade Credit Amount
 , p_source_32            IN NUMBER
--Invoice Currency Code
 , p_source_33            IN VARCHAR2
--Payables Encumbrance Upgrade Credit Base Amount
 , p_source_34            IN NUMBER
--Payables Encumbrance Upgrade Debit Account
 , p_source_35            IN NUMBER
--Payables Encumbrance Upgrade Debit Amount
 , p_source_36            IN NUMBER
--Payables Encumbrance Upgrade Debit Base Amount
 , p_source_37            IN NUMBER
--Payables Encumbrance Upgrade Option
 , p_source_38            IN VARCHAR2
--Invoice Exchange Date
 , p_source_39            IN DATE
--Invoice Exchange Rate
 , p_source_40            IN NUMBER
--Invoice Exchange Rate Type
 , p_source_41            IN VARCHAR2
--Deferred Accounting End Date
 , p_source_43            IN DATE
--Deferred Accounting Option
 , p_source_44            IN VARCHAR2
--Deferred Accounting Start Date
 , p_source_45            IN DATE
--Override Accounted Amount Indicator
 , p_source_46            IN VARCHAR2
 , p_source_46_meaning    IN VARCHAR2
--Invoice Supplier Identifier
 , p_source_47            IN NUMBER
--Invoice Supplier Site Identifier
 , p_source_48            IN NUMBER
--Third Party Type
 , p_source_49            IN VARCHAR2
--Parent Reversal Identifier
 , p_source_50            IN NUMBER
--Invoice Distribution Statistical Amount
 , p_source_51            IN NUMBER
--Invoice Distribution Tax Line Identifier
 , p_source_52            IN NUMBER
--Invoice Distribution Tax Distribution Identifier from Tax
 , p_source_53            IN NUMBER
--Invoice Distribution Summary Tax Line Identifier
 , p_source_54            IN NUMBER
--Payables Upgrade Credit Encumbrance Type Identifier
 , p_source_55            IN NUMBER
--Payables Upgrade Debit Encumbrance Type Identifier
 , p_source_56            IN NUMBER
--Self-Assessed Tax Flag
 , p_source_59            IN VARCHAR2
 , p_source_59_meaning    IN VARCHAR2
--Invoice Distribution Encumbrance Amount
 , p_source_65            IN NUMBER
--Invoice Distribution Encumbrance Ledger Amount
 , p_source_66            IN NUMBER
)
IS

l_component_type              VARCHAR2(80);
l_component_code              VARCHAR2(30);
l_component_type_code         VARCHAR2(1);
l_component_appl_id           INTEGER;
l_amb_context_code            VARCHAR2(30);
l_entity_code                 VARCHAR2(30);
l_event_class_code            VARCHAR2(30);
l_ae_header_id                NUMBER;
l_event_type_code             VARCHAR2(30);
l_line_definition_code        VARCHAR2(30);
l_line_definition_owner_code  VARCHAR2(1);
--
-- adr variables
l_segment                     VARCHAR2(30);
l_ccid                        NUMBER;
l_adr_transaction_coa_id      NUMBER;
l_adr_accounting_coa_id       NUMBER;
l_adr_flexfield_segment_code  VARCHAR2(30);
l_adr_flex_value_set_id       NUMBER;
l_adr_value_type_code         VARCHAR2(30);
l_adr_value_combination_id    NUMBER;
l_adr_value_segment_code      VARCHAR2(30);

l_bflow_method_code           VARCHAR2(30);  -- 4219869 Business Flow
l_bflow_class_code            VARCHAR2(30);  -- 4219869 Business Flow
l_inherit_desc_flag           VARCHAR2(1);   -- 4219869 Business Flow
l_budgetary_control_flag      VARCHAR2(1);   -- 4458381 Public Sector Enh

-- 4262811 Variables ------------------------------------------------------------------------------------------
l_entered_amt_idx             NUMBER;
l_accted_amt_idx              NUMBER;
l_acc_rev_flag                VARCHAR2(1);
l_accrual_line_num            NUMBER;
l_tmp_amt                     NUMBER;
l_acc_rev_natural_side_code   VARCHAR2(1);

l_num_entries                 NUMBER;
l_gl_dates                    xla_ae_journal_entry_pkg.t_array_date;
l_accted_amts                 xla_ae_journal_entry_pkg.t_array_num;
l_entered_amts                xla_ae_journal_entry_pkg.t_array_num;
l_period_names                xla_ae_journal_entry_pkg.t_array_V15L;
l_recog_line_1                NUMBER;
l_recog_line_2                NUMBER;

l_bflow_applied_to_amt_idx    NUMBER;                                -- 5132302
l_bflow_applied_to_amt        NUMBER;                                -- 5132302
l_bflow_applied_to_amts       xla_ae_journal_entry_pkg.t_array_num;  -- 5132302

l_event_id                    NUMBER;  -- To handle MPA header Description: xla_ae_header_pkg.SetHdrDescription

--l_rounding_ccy                VARCHAR2(15); -- To handle MPA rounding  4262811b
l_same_currency               BOOLEAN;        -- To handle MPA rounding  4262811b

---------------------------------------------------------------------------------------------------------------


--
-- bulk performance
--
l_balance_type_code           VARCHAR2(1);
l_rec_acct_attrs              XLA_AE_LINES_PKG.t_rec_acct_attrs;
l_log_module                  VARCHAR2(240);

--
-- Upgrade strategy
--
l_actual_upg_option           VARCHAR2(1);
l_enc_upg_option           VARCHAR2(1);

--
BEGIN
--
IF g_log_enabled THEN
      l_log_module := C_DEFAULT_MODULE||'.AcctLineType_64';
END IF;
--
IF (C_LEVEL_PROCEDURE >= g_log_level) THEN

      trace
         (p_msg      => 'BEGIN of AcctLineType_64'
         ,p_level    => C_LEVEL_PROCEDURE
         ,p_module   => l_log_module);

END IF;
--
l_component_type             := 'AMB_JLT';
l_component_code             := 'AP_SELFASSD_NREC_TAX_PP_ENC_DR';
l_component_type_code        := 'S';
l_component_appl_id          :=  200;
l_amb_context_code           := 'DEFAULT';
l_entity_code                := 'AP_INVOICES';
l_event_class_code           := 'PREPAYMENTS';
l_event_type_code            := 'PREPAYMENTS_ALL';
l_line_definition_owner_code := 'S';
l_line_definition_code       := 'ENC_PREPAY_ALL';
--
l_balance_type_code          := 'E';
l_segment                     := NULL;
l_ccid                        := NULL;
l_adr_transaction_coa_id      := NULL;
l_adr_accounting_coa_id       := NULL;
l_adr_flexfield_segment_code  := NULL;
l_adr_flex_value_set_id       := NULL;
l_adr_value_type_code         := NULL;
l_adr_value_combination_id    := NULL;
l_adr_value_segment_code      := NULL;

l_bflow_method_code          := 'NONE';   -- 4219869 Business Flow
l_bflow_class_code           := 'AP_INV_ENCUM';    -- 4219869 Business Flow
l_inherit_desc_flag          := 'N';   -- 4219869 Business Flow
l_budgetary_control_flag     := 'Y';

l_bflow_applied_to_amt_idx   := NULL; -- 5132302
l_bflow_applied_to_amt       := NULL; -- 5132302
l_entered_amt_idx            := NULL;          -- 4262811
l_accted_amt_idx             := NULL;          -- 4262811
l_acc_rev_flag               := NULL;          -- 4262811
l_accrual_line_num           := NULL;          -- 4262811
l_tmp_amt                    := NULL;          -- 4262811
--
 
IF XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id = XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.ledger_id OR
    l_balance_type_code <> 'B' THEN
IF NVL(p_source_15,'
') =  'NONREC_TAX' AND 
NVL(p_source_59,'
') =  'Y' AND 
NVL(p_source_17,'
') =  'Y'
 THEN 

   --
   XLA_AE_LINES_PKG.SetNewLine;

   p_balance_type_code          := l_balance_type_code;
   -- set the flag so later we will know whether the gain loss line needs to be created
   
   IF(l_balance_type_code = 'A' and p_actual_flag is null) THEN
     p_actual_flag :='A';
   END IF;

   --
   -- bulk performance
   --
   XLA_AE_LINES_PKG.set_ae_header_id (p_ae_header_id => p_event_id ,
                                      p_header_num   => 0); -- 4262811
   --
   -- set accounting line options
   --
   l_ae_header_id:= xla_ae_lines_pkg.SetAcctLineOption(
           p_natural_side_code          => 'D'
         , p_gain_or_loss_flag          => 'N'
         , p_gl_transfer_mode_code      => 'S'
         , p_acct_entry_type_code       => 'E'
         , p_switch_side_flag           => 'Y'
         , p_merge_duplicate_code       => 'N'
         );
   --
   l_acc_rev_natural_side_code := 'C';  -- 4262811
   -- 
   --
   -- set accounting line type info
   --
   xla_ae_lines_pkg.SetAcctLineType
      (p_component_type             => l_component_type
      ,p_event_type_code            => l_event_type_code
      ,p_line_definition_owner_code => l_line_definition_owner_code
      ,p_line_definition_code       => l_line_definition_code
      ,p_accounting_line_code       => l_component_code
      ,p_accounting_line_type_code  => l_component_type_code
      ,p_accounting_line_appl_id    => l_component_appl_id
      ,p_amb_context_code           => l_amb_context_code
      ,p_entity_code                => l_entity_code
      ,p_event_class_code           => l_event_class_code);
   --
   -- set accounting class
   --
   xla_ae_lines_pkg.SetAcctClass(
           p_accounting_class_code  => 'SELF_ASSESSED_TAX'
         , p_ae_header_id           => l_ae_header_id
         );

   --
   -- set rounding class
   --
   XLA_AE_LINES_PKG.g_rec_lines.array_rounding_class(XLA_AE_LINES_PKG.g_LineNumber) :=
                      'SELF_ASSESSED_TAX';

   --
   xla_ae_lines_pkg.g_rec_lines.array_calculate_acctd_flag(xla_ae_lines_pkg.g_LineNumber) := p_calculate_acctd_flag;
   xla_ae_lines_pkg.g_rec_lines.array_calculate_g_l_flag(xla_ae_lines_pkg.g_LineNumber) := p_calculate_g_l_flag;
   --
   -- bulk performance
   --
   XLA_AE_LINES_PKG.g_rec_lines.array_balance_type_code(XLA_AE_LINES_PKG.g_LineNumber) := l_balance_type_code;

   XLA_AE_LINES_PKG.g_rec_lines.array_ledger_id(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id;

   -- 4955764
   XLA_AE_LINES_PKG.g_rec_lines.array_gl_date(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_HEADER_PKG.g_rec_header_new.array_gl_date(g_array_event(p_event_id).array_value_num('header_index'));

   -- 4458381 Public Sector Enh
      XLA_AE_LINES_PKG.g_rec_lines.array_encumbrance_type_id(XLA_AE_LINES_PKG.g_LineNumber) := 1060;
   --
   -- set accounting attributes for the line type
   --
   l_entered_amt_idx := 23;
   l_accted_amt_idx  := 28;
   l_bflow_applied_to_amt_idx  := NULL;  -- 5132302
   l_rec_acct_attrs.array_acct_attr_code(1) := 'ACCOUNTING_REVERSAL_OPTION';
   l_rec_acct_attrs.array_char_value(1)  := p_source_19;
   l_rec_acct_attrs.array_acct_attr_code(2) := 'ALLOC_TO_APPLICATION_ID';
   l_rec_acct_attrs.array_num_value(2)  := 
xla_ae_sources_pkg.GetSystemSourceNum(
   p_source_code           => 'XLA_EVENT_APPL_ID'
 , p_source_type_code      => 'Y'
 , p_source_application_id =>  602
);
   l_rec_acct_attrs.array_acct_attr_code(3) := 'ALLOC_TO_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(3)  := p_source_21;
   l_rec_acct_attrs.array_acct_attr_code(4) := 'ALLOC_TO_ENTITY_CODE';
   l_rec_acct_attrs.array_char_value(4)  := 
xla_ae_sources_pkg.GetSystemSourceChar(
   p_source_code           => 'XLA_ENTITY_CODE'
 , p_source_type_code      => 'Y'
 , p_source_application_id =>  602
);
   l_rec_acct_attrs.array_acct_attr_code(5) := 'ALLOC_TO_FIRST_DIST_ID';
   l_rec_acct_attrs.array_num_value(5)  :=  to_char(p_source_23);
   l_rec_acct_attrs.array_acct_attr_code(6) := 'ALLOC_TO_FIRST_SYS_TRAN_ID';
   l_rec_acct_attrs.array_num_value(6)  :=  to_char(p_source_24);
   l_rec_acct_attrs.array_acct_attr_code(7) := 'APPLIED_TO_APPLICATION_ID';
   l_rec_acct_attrs.array_num_value(7)  := p_source_25;
   l_rec_acct_attrs.array_acct_attr_code(8) := 'APPLIED_TO_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(8)  := p_source_26;
   l_rec_acct_attrs.array_acct_attr_code(9) := 'APPLIED_TO_ENTITY_CODE';
   l_rec_acct_attrs.array_char_value(9)  := p_source_27;
   l_rec_acct_attrs.array_acct_attr_code(10) := 'APPLIED_TO_FIRST_DIST_ID';
   l_rec_acct_attrs.array_num_value(10)  :=  to_char(p_source_28);
   l_rec_acct_attrs.array_acct_attr_code(11) := 'APPLIED_TO_FIRST_SYS_TRAN_ID';
   l_rec_acct_attrs.array_num_value(11)  :=  to_char(p_source_29);
   l_rec_acct_attrs.array_acct_attr_code(12) := 'DISTRIBUTION_IDENTIFIER_1';
   l_rec_acct_attrs.array_num_value(12)  :=  to_char(p_source_30);
   l_rec_acct_attrs.array_acct_attr_code(13) := 'DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(13)  := p_source_21;
   l_rec_acct_attrs.array_acct_attr_code(14) := 'ENC_UPG_CR_CCID';
   l_rec_acct_attrs.array_num_value(14)  := p_source_31;
   l_rec_acct_attrs.array_acct_attr_code(15) := 'ENC_UPG_CR_ENTERED_AMT';
   l_rec_acct_attrs.array_num_value(15)  := p_source_32;
   l_rec_acct_attrs.array_acct_attr_code(16) := 'ENC_UPG_CR_ENTERED_CURR';
   l_rec_acct_attrs.array_char_value(16)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(17) := 'ENC_UPG_CR_LEDGER_AMT';
   l_rec_acct_attrs.array_num_value(17)  := p_source_34;
   l_rec_acct_attrs.array_acct_attr_code(18) := 'ENC_UPG_DR_CCID';
   l_rec_acct_attrs.array_num_value(18)  := p_source_35;
   l_rec_acct_attrs.array_acct_attr_code(19) := 'ENC_UPG_DR_ENTERED_AMT';
   l_rec_acct_attrs.array_num_value(19)  := p_source_36;
   l_rec_acct_attrs.array_acct_attr_code(20) := 'ENC_UPG_DR_ENTERED_CURR';
   l_rec_acct_attrs.array_char_value(20)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(21) := 'ENC_UPG_DR_LEDGER_AMT';
   l_rec_acct_attrs.array_num_value(21)  := p_source_37;
   l_rec_acct_attrs.array_acct_attr_code(22) := 'ENC_UPG_OPTION';
   l_rec_acct_attrs.array_char_value(22)  := p_source_38;
   l_rec_acct_attrs.array_acct_attr_code(23) := 'ENTERED_CURRENCY_AMOUNT';
   l_rec_acct_attrs.array_num_value(23)  := p_source_65;
   l_rec_acct_attrs.array_acct_attr_code(24) := 'ENTERED_CURRENCY_CODE';
   l_rec_acct_attrs.array_char_value(24)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(25) := 'EXCHANGE_DATE';
   l_rec_acct_attrs.array_date_value(25)  := p_source_39;
   l_rec_acct_attrs.array_acct_attr_code(26) := 'EXCHANGE_RATE';
   l_rec_acct_attrs.array_num_value(26)  := p_source_40;
   l_rec_acct_attrs.array_acct_attr_code(27) := 'EXCHANGE_RATE_TYPE';
   l_rec_acct_attrs.array_char_value(27)  := p_source_41;
   l_rec_acct_attrs.array_acct_attr_code(28) := 'LEDGER_AMOUNT';
   l_rec_acct_attrs.array_num_value(28)  := p_source_66;
   l_rec_acct_attrs.array_acct_attr_code(29) := 'MULTIPERIOD_END_DATE';
   l_rec_acct_attrs.array_date_value(29)  := p_source_43;
   l_rec_acct_attrs.array_acct_attr_code(30) := 'MULTIPERIOD_OPTION';
   l_rec_acct_attrs.array_char_value(30)  := p_source_44;
   l_rec_acct_attrs.array_acct_attr_code(31) := 'MULTIPERIOD_START_DATE';
   l_rec_acct_attrs.array_date_value(31)  := p_source_45;
   l_rec_acct_attrs.array_acct_attr_code(32) := 'OVERRIDE_ACCTD_AMT_FLAG';
   l_rec_acct_attrs.array_char_value(32)  := p_source_46;
   l_rec_acct_attrs.array_acct_attr_code(33) := 'PARTY_ID';
   l_rec_acct_attrs.array_num_value(33)  := p_source_47;
   l_rec_acct_attrs.array_acct_attr_code(34) := 'PARTY_SITE_ID';
   l_rec_acct_attrs.array_num_value(34)  := p_source_48;
   l_rec_acct_attrs.array_acct_attr_code(35) := 'PARTY_TYPE';
   l_rec_acct_attrs.array_char_value(35)  := p_source_49;
   l_rec_acct_attrs.array_acct_attr_code(36) := 'REVERSED_DISTRIBUTION_ID1';
   l_rec_acct_attrs.array_num_value(36)  :=  to_char(p_source_50);
   l_rec_acct_attrs.array_acct_attr_code(37) := 'REVERSED_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(37)  := p_source_21;
   l_rec_acct_attrs.array_acct_attr_code(38) := 'STATISTICAL_AMOUNT';
   l_rec_acct_attrs.array_num_value(38)  := p_source_51;
   l_rec_acct_attrs.array_acct_attr_code(39) := 'TAX_LINE_REF_ID';
   l_rec_acct_attrs.array_num_value(39)  := p_source_52;
   l_rec_acct_attrs.array_acct_attr_code(40) := 'TAX_REC_NREC_DIST_REF_ID';
   l_rec_acct_attrs.array_num_value(40)  := p_source_53;
   l_rec_acct_attrs.array_acct_attr_code(41) := 'TAX_SUMMARY_LINE_REF_ID';
   l_rec_acct_attrs.array_num_value(41)  := p_source_54;
   l_rec_acct_attrs.array_acct_attr_code(42) := 'UPG_CR_ENC_TYPE_ID';
   l_rec_acct_attrs.array_num_value(42)  := p_source_55;
   l_rec_acct_attrs.array_acct_attr_code(43) := 'UPG_DR_ENC_TYPE_ID';
   l_rec_acct_attrs.array_num_value(43)  := p_source_56;

   XLA_AE_LINES_PKG.SetLineAcctAttrs(l_rec_acct_attrs);
   p_gain_or_loss_ref  := XLA_AE_LINES_PKG.g_rec_lines.array_gain_or_loss_ref(XLA_AE_LINES_PKG.g_LineNumber);

   ---------------------------------------------------------------------------------------------------------------
   -- 4336173 -- assign Business Flow Class (replace code in xla_ae_lines_pkg.Business_Flow_Validation)
   ---------------------------------------------------------------------------------------------------------------
   XLA_AE_LINES_PKG.g_rec_lines.array_business_class_code(XLA_AE_LINES_PKG.g_LineNumber) := l_bflow_class_code;

   l_actual_upg_option  := XLA_AE_LINES_PKG.g_rec_lines.array_actual_upg_option(XLA_AE_LINES_PKG.g_LineNumber);
   l_enc_upg_option     := XLA_AE_LINES_PKG.g_rec_lines.array_enc_upg_option(XLA_AE_LINES_PKG.g_LineNumber);

   IF xla_accounting_cache_pkg.GetValueChar
         (p_source_code         => 'LEDGER_CATEGORY_CODE'
         ,p_target_ledger_id    => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id) IN ('PRIMARY','ALC')
   AND l_bflow_method_code = 'PRIOR_ENTRY'
--   AND (l_actual_upg_option = 'Y' OR l_enc_upg_option = 'Y') Bug 4922099
   AND ( (NVL(l_actual_upg_option, 'N') IN ('Y', 'O')) OR
         (NVL(l_enc_upg_option, 'N') IN ('Y', 'O'))
       )
   THEN
         xla_ae_lines_pkg.BflowUpgEntry
           (p_business_method_code    => l_bflow_method_code
           ,p_business_class_code     => l_bflow_class_code
           ,p_balance_type            => l_balance_type_code);
   ELSE
      NULL;
-- No business flow processing for business flow method of NONE.
   END IF;

   --
   -- call analytical criteria
   --
   
   --
   -- call description
   --
   
xla_ae_lines_pkg.SetLineDescription(
   p_ae_header_id => l_ae_header_id
  ,p_description  => Description_2 (
     p_application_id         => p_application_id
   , p_ae_header_id           => l_ae_header_id 
, p_source_1 => p_source_1
   )
);


   --
   -- call ADRs
   -- Bug 4922099
   --
   IF ( (l_bflow_method_code <> 'PRIOR_ENTRY') OR
        (NVL(l_actual_upg_option, 'N') = 'O') OR
        (NVL(l_enc_upg_option, 'N') = 'O')
      )
   THEN
   NULL;
   --
   --
   
  l_ccid := AcctDerRule_8(
           p_application_id           => p_application_id
         , p_ae_header_id             => l_ae_header_id 
, p_source_13 => p_source_13
         , x_transaction_coa_id       => l_adr_transaction_coa_id
         , x_accounting_coa_id        => l_adr_accounting_coa_id
         , x_value_type_code          => l_adr_value_type_code
         , p_side                     => 'NA'
   );

   xla_ae_lines_pkg.set_ccid(
    p_code_combination_id          => l_ccid
  , p_value_type_code              => l_adr_value_type_code
  , p_transaction_coa_id           => l_adr_transaction_coa_id
  , p_accounting_coa_id            => l_adr_accounting_coa_id
  , p_adr_code                     => 'AP_SELF_ASSESSED_TAX'
  , p_adr_type_code                => 'S'
  , p_component_type               => l_component_type
  , p_component_code               => l_component_code
  , p_component_type_code          => l_component_type_code
  , p_component_appl_id            => l_component_appl_id
  , p_amb_context_code             => l_amb_context_code
  , p_side                         => 'NA'
  );


   --
   --
   END IF;
   --
   -- Bug 4922099
   IF ( ( (NVL(l_actual_upg_option, 'N') = 'O') OR
          (NVL(l_enc_upg_option, 'N') = 'O')
        ) AND
        (l_bflow_method_code = 'PRIOR_ENTRY')
      )
   THEN
      IF
      --
      1 = 2
      --
      THEN
      xla_accounting_err_pkg.build_message
                                    (p_appli_s_name            => 'XLA'
                                    ,p_msg_name                => 'XLA_UPG_OVERRIDE_ADR_UNDEFINED'
                                    ,p_token_1                 => 'LINE_NUMBER'
                                    ,p_value_1                 => XLA_AE_LINES_PKG.g_LineNumber
                                    ,p_token_2                 => 'LINE_TYPE_NAME'
                                    ,p_value_2                 => XLA_AE_SOURCES_PKG.GetComponentName (
                                                                             l_component_type
                                                                            ,l_component_code
                                                                            ,l_component_type_code
                                                                            ,l_component_appl_id
                                                                            ,l_amb_context_code
                                                                            ,l_entity_code
                                                                            ,l_event_class_code
                                                                           )
                                    ,p_token_3                 => 'OWNER'
                                    ,p_value_3                 => xla_lookups_pkg.get_meaning(
                                                                          p_lookup_type     => 'XLA_OWNER_TYPE'
                                                                          ,p_lookup_code    => l_component_type_code
                                                                         )
                                    ,p_token_4                 => 'PRODUCT_NAME'
                                    ,p_value_4                 => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.application_name
                                    ,p_entity_id               => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.entity_id
                                    ,p_event_id                => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.event_id
                                    ,p_ledger_id               => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id
                                    ,p_ae_header_id            =>  NULL
                                       );

        IF (C_LEVEL_ERROR>= g_log_level) THEN
                 trace
                      (p_msg      => 'ERROR: XLA_UPG_OVERRIDE_ADR_UNDEFINED'
                      ,p_level    => C_LEVEL_ERROR
                      ,p_module   => l_log_module);
        END IF;
      END IF;
   END IF;
   --
   --
   ------------------------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- NOTE: XLA_AE_LINES_PKG.ValidateCurrentLine should NOT be generated if business flow method is
   -- Prior Entry.  Currently, the following code is always generated.
   ------------------------------------------------------------------------------------------------
   XLA_AE_LINES_PKG.ValidateCurrentLine;

   ------------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- Populated credit and debit amounts -- Need to generate this within IF <condition>
   ------------------------------------------------------------------------------------
   XLA_AE_LINES_PKG.SetDebitCreditAmounts;

   ----------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- Update journal entry status -- Need to generate this within IF <condition>
   ----------------------------------------------------------------------------------
   XLA_AE_JOURNAL_ENTRY_PKG.UpdateJournalEntryStatus
         (p_hdr_idx => g_array_event(p_event_id).array_value_num('header_index')
         ,p_balance_type_code => l_balance_type_code
         );

   -------------------------------------------------------------------------------------------
   -- 4262811 - Generate the Accrual Reversal lines
   -------------------------------------------------------------------------------------------
   BEGIN
      l_acc_rev_flag := XLA_AE_HEADER_PKG.g_rec_header_new.array_accrual_reversal_flag
                              (g_array_event(p_event_id).array_value_num('header_index'));
      IF l_acc_rev_flag IS NULL THEN
         l_acc_rev_flag := 'N';
      END IF;
   EXCEPTION
      WHEN OTHERS THEN
         l_acc_rev_flag := 'N';
   END;
   --
   IF (l_acc_rev_flag = 'Y') THEN

       -- 4645092  ------------------------------------------------------------------------------
       -- To allow MPA report to determine if it should generate report process
       XLA_ACCOUNTING_PKG.g_mpa_accrual_exists := 'Y';
       ------------------------------------------------------------------------------------------

       l_accrual_line_num := XLA_AE_LINES_PKG.g_LineNumber;
       XLA_AE_LINES_PKG.CopyLineInfo(l_accrual_line_num);
   -- added call to set_ccid to execute mapping  for secondary accrual reversal entries bug 7444204
   -- call ADRs
   -- Bug 4922099
   --
   IF ( (l_bflow_method_code <> 'PRIOR_ENTRY') OR
        (NVL(l_actual_upg_option, 'N') = 'O') OR
        (NVL(l_enc_upg_option, 'N') = 'O')
      )
   THEN
   NULL;
   --
   --
   
  l_ccid := AcctDerRule_8(
           p_application_id           => p_application_id
         , p_ae_header_id             => l_ae_header_id 
, p_source_13 => p_source_13
         , x_transaction_coa_id       => l_adr_transaction_coa_id
         , x_accounting_coa_id        => l_adr_accounting_coa_id
         , x_value_type_code          => l_adr_value_type_code
         , p_side                     => 'NA'
   );

   xla_ae_lines_pkg.set_ccid(
    p_code_combination_id          => l_ccid
  , p_value_type_code              => l_adr_value_type_code
  , p_transaction_coa_id           => l_adr_transaction_coa_id
  , p_accounting_coa_id            => l_adr_accounting_coa_id
  , p_adr_code                     => 'AP_SELF_ASSESSED_TAX'
  , p_adr_type_code                => 'S'
  , p_component_type               => l_component_type
  , p_component_code               => l_component_code
  , p_component_type_code          => l_component_type_code
  , p_component_appl_id            => l_component_appl_id
  , p_amb_context_code             => l_amb_context_code
  , p_side                         => 'NA'
  );


   --
   --
   END IF;

       --
       -- Update the line information that should be overwritten
       --
       XLA_AE_LINES_PKG.set_ae_header_id(p_ae_header_id => p_event_id ,
                                         p_header_num   => 1);
       XLA_AE_LINES_PKG.g_rec_lines.array_header_num(XLA_AE_LINES_PKG.g_LineNumber)  :=1;

       XLA_AE_LINES_PKG.g_rec_lines.array_business_class_code(XLA_AE_LINES_PKG.g_LineNumber) := NULL; -- 4669271

       IF l_bflow_method_code <> 'NONE' THEN  -- 4655713b
          XLA_AE_LINES_PKG.g_rec_lines.array_reversal_code(XLA_AE_LINES_PKG.g_LineNumber) := CONCAT('MPA_',l_bflow_method_code);
       END IF;

      --
      -- Depending on the Reversal Method setup, do a switch side or changes sign for the amounts
      --
      IF (XLA_AE_JOURNAL_ENTRY_PKG.g_cache_ledgers_info.ledger_reversal_option = 'SIDE') THEN
          XLA_AE_LINES_PKG.g_rec_lines.array_natural_side_code(XLA_AE_LINES_PKG.g_LineNumber) :=  l_acc_rev_natural_side_code;
      ELSE
          ---------------------------------------------------------------------------------------------------
          -- 4262811a Switch Sign
          ---------------------------------------------------------------------------------------------------
          XLA_AE_LINES_PKG.g_rec_lines.array_switch_side_flag(XLA_AE_LINES_PKG.g_LineNumber) := 'N';  -- 5052518
          XLA_AE_LINES_PKG.g_rec_lines.array_ledger_amount(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_ledger_amount(XLA_AE_LINES_PKG.g_LineNumber) * -1;
          XLA_AE_LINES_PKG.g_rec_lines.array_entered_amount(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_entered_amount(XLA_AE_LINES_PKG.g_LineNumber) * -1;
          -- 5132302
          XLA_AE_LINES_PKG.g_rec_lines.array_bflow_applied_to_amt(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_bflow_applied_to_amt(XLA_AE_LINES_PKG.g_LineNumber) * -1;

      END IF;

      -- 4955764
      XLA_AE_LINES_PKG.g_rec_lines.array_gl_date(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_HEADER_PKG.g_rec_header_new.array_gl_date(g_array_event(p_event_id).array_value_num('acc_rev_header_index'));


      XLA_AE_LINES_PKG.ValidateCurrentLine;
      XLA_AE_LINES_PKG.SetDebitCreditAmounts;

      XLA_AE_JOURNAL_ENTRY_PKG.UpdateJournalEntryStatus
               (p_hdr_idx           => g_array_event(p_event_id).array_value_num('acc_rev_header_index')
               ,p_balance_type_code => l_balance_type_code);

   END IF;

   -----------------------------------------------------------------------------------------
   -- 4262811 Multiperiod Accounting
   -----------------------------------------------------------------------------------------
     -- No MPA option is assigned.


END IF;
END IF;
--

--
IF (C_LEVEL_PROCEDURE >= g_log_level) THEN
   trace
      (p_msg      => 'END of AcctLineType_64'
      ,p_level    => C_LEVEL_PROCEDURE
      ,p_module   => l_log_module);
END IF;
--
EXCEPTION
  WHEN xla_exceptions_pkg.application_exception THEN
      RAISE;
  WHEN OTHERS THEN
       xla_exceptions_pkg.raise_message
           (p_location => 'XLA_00200_AAD_S_000010_BC_PKG.AcctLineType_64');
END AcctLineType_64;
--

---------------------------------------
--
-- PRIVATE FUNCTION
--         AcctLineType_65
--
---------------------------------------
PROCEDURE AcctLineType_65 (
  p_application_id        IN NUMBER
 ,p_event_id              IN NUMBER
 ,p_calculate_acctd_flag  IN VARCHAR2
 ,p_calculate_g_l_flag    IN VARCHAR2
 ,p_actual_flag           IN OUT VARCHAR2
 ,p_balance_type_code     OUT VARCHAR2
 ,p_gain_or_loss_ref      OUT VARCHAR2
 
--Invoice Distribution Description
 , p_source_1            IN VARCHAR2
--Purchase Order Rate Variance Gain Account
 , p_source_6            IN NUMBER
--Automatic Offsets Value
 , p_source_7            IN VARCHAR2
 , p_source_7_meaning    IN VARCHAR2
--Invoice Distribution Ledger Amount
 , p_source_8            IN NUMBER
--Destination Type of the PO Distribution
 , p_source_9            IN VARCHAR2
 , p_source_9_meaning    IN VARCHAR2
--Purchase Order Rate Variance Loss Account
 , p_source_10            IN NUMBER
--Invoice Distribution Account
 , p_source_11            IN NUMBER
--Automatic Offsets Flag
 , p_source_12            IN VARCHAR2
 , p_source_12_meaning    IN VARCHAR2
--Invoice Distribution Type
 , p_source_15            IN VARCHAR2
 , p_source_15_meaning    IN VARCHAR2
--Purchasing Encumbrance Option
 , p_source_17            IN VARCHAR2
 , p_source_17_meaning    IN VARCHAR2
--Accounting Reversal Indicator
 , p_source_19            IN VARCHAR2
--Distribution Link Type
 , p_source_21            IN VARCHAR2
--Allocation to Main Distribution Identifier
 , p_source_23            IN NUMBER
--Invoice Identifier
 , p_source_24            IN NUMBER
--Business Flow Accounts Payable Application Identifier
 , p_source_25            IN NUMBER
--Business Flow Invoice Distribution Type
 , p_source_26            IN VARCHAR2
--Business Flow Invoice Entity Code
 , p_source_27            IN VARCHAR2
--Business Flow Invoice Distribution Identifier
 , p_source_28            IN NUMBER
--Business Flow Invoice Identifier
 , p_source_29            IN NUMBER
--Invoice Distribution Identifier
 , p_source_30            IN NUMBER
--Payables Encumbrance Upgrade Credit Account
 , p_source_31            IN NUMBER
--Payables Encumbrance Upgrade Credit Amount
 , p_source_32            IN NUMBER
--Invoice Currency Code
 , p_source_33            IN VARCHAR2
--Payables Encumbrance Upgrade Credit Base Amount
 , p_source_34            IN NUMBER
--Payables Encumbrance Upgrade Debit Account
 , p_source_35            IN NUMBER
--Payables Encumbrance Upgrade Debit Amount
 , p_source_36            IN NUMBER
--Payables Encumbrance Upgrade Debit Base Amount
 , p_source_37            IN NUMBER
--Payables Encumbrance Upgrade Option
 , p_source_38            IN VARCHAR2
--Invoice Exchange Date
 , p_source_39            IN DATE
--Invoice Exchange Rate
 , p_source_40            IN NUMBER
--Invoice Exchange Rate Type
 , p_source_41            IN VARCHAR2
--Deferred Accounting End Date
 , p_source_43            IN DATE
--Deferred Accounting Option
 , p_source_44            IN VARCHAR2
--Deferred Accounting Start Date
 , p_source_45            IN DATE
--Override Accounted Amount Indicator
 , p_source_46            IN VARCHAR2
 , p_source_46_meaning    IN VARCHAR2
--Invoice Supplier Identifier
 , p_source_47            IN NUMBER
--Invoice Supplier Site Identifier
 , p_source_48            IN NUMBER
--Third Party Type
 , p_source_49            IN VARCHAR2
--Parent Reversal Identifier
 , p_source_50            IN NUMBER
--Invoice Distribution Statistical Amount
 , p_source_51            IN NUMBER
--Invoice Distribution Tax Line Identifier
 , p_source_52            IN NUMBER
--Invoice Distribution Tax Distribution Identifier from Tax
 , p_source_53            IN NUMBER
--Invoice Distribution Summary Tax Line Identifier
 , p_source_54            IN NUMBER
--Payables Upgrade Credit Encumbrance Type Identifier
 , p_source_55            IN NUMBER
--Payables Upgrade Debit Encumbrance Type Identifier
 , p_source_56            IN NUMBER
--Invoice Distribution Amount
 , p_source_57            IN NUMBER
--Invoice Distribution Encumbrance Ledger Amount
 , p_source_66            IN NUMBER
)
IS

l_component_type              VARCHAR2(80);
l_component_code              VARCHAR2(30);
l_component_type_code         VARCHAR2(1);
l_component_appl_id           INTEGER;
l_amb_context_code            VARCHAR2(30);
l_entity_code                 VARCHAR2(30);
l_event_class_code            VARCHAR2(30);
l_ae_header_id                NUMBER;
l_event_type_code             VARCHAR2(30);
l_line_definition_code        VARCHAR2(30);
l_line_definition_owner_code  VARCHAR2(1);
--
-- adr variables
l_segment                     VARCHAR2(30);
l_ccid                        NUMBER;
l_adr_transaction_coa_id      NUMBER;
l_adr_accounting_coa_id       NUMBER;
l_adr_flexfield_segment_code  VARCHAR2(30);
l_adr_flex_value_set_id       NUMBER;
l_adr_value_type_code         VARCHAR2(30);
l_adr_value_combination_id    NUMBER;
l_adr_value_segment_code      VARCHAR2(30);

l_bflow_method_code           VARCHAR2(30);  -- 4219869 Business Flow
l_bflow_class_code            VARCHAR2(30);  -- 4219869 Business Flow
l_inherit_desc_flag           VARCHAR2(1);   -- 4219869 Business Flow
l_budgetary_control_flag      VARCHAR2(1);   -- 4458381 Public Sector Enh

-- 4262811 Variables ------------------------------------------------------------------------------------------
l_entered_amt_idx             NUMBER;
l_accted_amt_idx              NUMBER;
l_acc_rev_flag                VARCHAR2(1);
l_accrual_line_num            NUMBER;
l_tmp_amt                     NUMBER;
l_acc_rev_natural_side_code   VARCHAR2(1);

l_num_entries                 NUMBER;
l_gl_dates                    xla_ae_journal_entry_pkg.t_array_date;
l_accted_amts                 xla_ae_journal_entry_pkg.t_array_num;
l_entered_amts                xla_ae_journal_entry_pkg.t_array_num;
l_period_names                xla_ae_journal_entry_pkg.t_array_V15L;
l_recog_line_1                NUMBER;
l_recog_line_2                NUMBER;

l_bflow_applied_to_amt_idx    NUMBER;                                -- 5132302
l_bflow_applied_to_amt        NUMBER;                                -- 5132302
l_bflow_applied_to_amts       xla_ae_journal_entry_pkg.t_array_num;  -- 5132302

l_event_id                    NUMBER;  -- To handle MPA header Description: xla_ae_header_pkg.SetHdrDescription

--l_rounding_ccy                VARCHAR2(15); -- To handle MPA rounding  4262811b
l_same_currency               BOOLEAN;        -- To handle MPA rounding  4262811b

---------------------------------------------------------------------------------------------------------------


--
-- bulk performance
--
l_balance_type_code           VARCHAR2(1);
l_rec_acct_attrs              XLA_AE_LINES_PKG.t_rec_acct_attrs;
l_log_module                  VARCHAR2(240);

--
-- Upgrade strategy
--
l_actual_upg_option           VARCHAR2(1);
l_enc_upg_option           VARCHAR2(1);

--
BEGIN
--
IF g_log_enabled THEN
      l_log_module := C_DEFAULT_MODULE||'.AcctLineType_65';
END IF;
--
IF (C_LEVEL_PROCEDURE >= g_log_level) THEN

      trace
         (p_msg      => 'BEGIN of AcctLineType_65'
         ,p_level    => C_LEVEL_PROCEDURE
         ,p_module   => l_log_module);

END IF;
--
l_component_type             := 'AMB_JLT';
l_component_code             := 'AP_TAXEXCHGRATE_VAR_INV_ENC_DR';
l_component_type_code        := 'S';
l_component_appl_id          :=  200;
l_amb_context_code           := 'DEFAULT';
l_entity_code                := 'AP_INVOICES';
l_event_class_code           := 'INVOICES';
l_event_type_code            := 'INVOICES_ALL';
l_line_definition_owner_code := 'S';
l_line_definition_code       := 'ENC_INVOICES_ALL';
--
l_balance_type_code          := 'E';
l_segment                     := NULL;
l_ccid                        := NULL;
l_adr_transaction_coa_id      := NULL;
l_adr_accounting_coa_id       := NULL;
l_adr_flexfield_segment_code  := NULL;
l_adr_flex_value_set_id       := NULL;
l_adr_value_type_code         := NULL;
l_adr_value_combination_id    := NULL;
l_adr_value_segment_code      := NULL;

l_bflow_method_code          := 'NONE';   -- 4219869 Business Flow
l_bflow_class_code           := 'AP_INV_ENCUM';    -- 4219869 Business Flow
l_inherit_desc_flag          := 'N';   -- 4219869 Business Flow
l_budgetary_control_flag     := 'Y';

l_bflow_applied_to_amt_idx   := NULL; -- 5132302
l_bflow_applied_to_amt       := NULL; -- 5132302
l_entered_amt_idx            := NULL;          -- 4262811
l_accted_amt_idx             := NULL;          -- 4262811
l_acc_rev_flag               := NULL;          -- 4262811
l_accrual_line_num           := NULL;          -- 4262811
l_tmp_amt                    := NULL;          -- 4262811
--
IF ((p_calculate_g_l_flag = 'Y' AND XLA_AE_JOURNAL_ENTRY_PKG.g_cache_ledgers_info.ledger_category_code <> 'ALC') or
            (XLA_AE_JOURNAL_ENTRY_PKG.g_cache_ledgers_info.ledger_category_code in ('ALC', 'SECONDARY') AND XLA_AE_JOURNAL_ENTRY_PKG.g_cache_ledgers_info.calculate_amts_flag='Y')) THEN
               return;
  END IF;
  
IF XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id = XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.ledger_id OR
    l_balance_type_code <> 'B' THEN
IF NVL(p_source_15,'
') =  'TERV' AND 
p_source_66 IS NOT NULL AND 
NVL(p_source_17,'
') =  'Y'
 THEN 

   --
   XLA_AE_LINES_PKG.SetNewLine;

   p_balance_type_code          := l_balance_type_code;
   -- set the flag so later we will know whether the gain loss line needs to be created
   
   IF(l_balance_type_code = 'A' ) THEN
     p_actual_flag :='G';
   END IF;

   --
   -- bulk performance
   --
   XLA_AE_LINES_PKG.set_ae_header_id (p_ae_header_id => p_event_id ,
                                      p_header_num   => 0); -- 4262811
   --
   -- set accounting line options
   --
   l_ae_header_id:= xla_ae_lines_pkg.SetAcctLineOption(
           p_natural_side_code          => 'D'
         , p_gain_or_loss_flag          => 'Y'
         , p_gl_transfer_mode_code      => 'S'
         , p_acct_entry_type_code       => 'E'
         , p_switch_side_flag           => 'Y'
         , p_merge_duplicate_code       => 'N'
         );
   --
   l_acc_rev_natural_side_code := 'C';  -- 4262811
   -- 
   --
   -- set accounting line type info
   --
   xla_ae_lines_pkg.SetAcctLineType
      (p_component_type             => l_component_type
      ,p_event_type_code            => l_event_type_code
      ,p_line_definition_owner_code => l_line_definition_owner_code
      ,p_line_definition_code       => l_line_definition_code
      ,p_accounting_line_code       => l_component_code
      ,p_accounting_line_type_code  => l_component_type_code
      ,p_accounting_line_appl_id    => l_component_appl_id
      ,p_amb_context_code           => l_amb_context_code
      ,p_entity_code                => l_entity_code
      ,p_event_class_code           => l_event_class_code);
   --
   -- set accounting class
   --
   xla_ae_lines_pkg.SetAcctClass(
           p_accounting_class_code  => 'TERV'
         , p_ae_header_id           => l_ae_header_id
         );

   --
   -- set rounding class
   --
   XLA_AE_LINES_PKG.g_rec_lines.array_rounding_class(XLA_AE_LINES_PKG.g_LineNumber) :=
                      'TERV';

   --
   xla_ae_lines_pkg.g_rec_lines.array_calculate_acctd_flag(xla_ae_lines_pkg.g_LineNumber) := p_calculate_acctd_flag;
   xla_ae_lines_pkg.g_rec_lines.array_calculate_g_l_flag(xla_ae_lines_pkg.g_LineNumber) := p_calculate_g_l_flag;
   --
   -- bulk performance
   --
   XLA_AE_LINES_PKG.g_rec_lines.array_balance_type_code(XLA_AE_LINES_PKG.g_LineNumber) := l_balance_type_code;

   XLA_AE_LINES_PKG.g_rec_lines.array_ledger_id(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id;

   -- 4955764
   XLA_AE_LINES_PKG.g_rec_lines.array_gl_date(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_HEADER_PKG.g_rec_header_new.array_gl_date(g_array_event(p_event_id).array_value_num('header_index'));

   -- 4458381 Public Sector Enh
      XLA_AE_LINES_PKG.g_rec_lines.array_encumbrance_type_id(XLA_AE_LINES_PKG.g_LineNumber) := 1060;
   --
   -- set accounting attributes for the line type
   --
   l_entered_amt_idx := 24;
   l_accted_amt_idx  := 29;
   l_bflow_applied_to_amt_idx  := 7;  -- 5132302
   l_rec_acct_attrs.array_acct_attr_code(1) := 'ACCOUNTING_REVERSAL_OPTION';
   l_rec_acct_attrs.array_char_value(1)  := p_source_19;
   l_rec_acct_attrs.array_acct_attr_code(2) := 'ALLOC_TO_APPLICATION_ID';
   l_rec_acct_attrs.array_num_value(2)  := 
xla_ae_sources_pkg.GetSystemSourceNum(
   p_source_code           => 'XLA_EVENT_APPL_ID'
 , p_source_type_code      => 'Y'
 , p_source_application_id =>  602
);
   l_rec_acct_attrs.array_acct_attr_code(3) := 'ALLOC_TO_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(3)  := p_source_21;
   l_rec_acct_attrs.array_acct_attr_code(4) := 'ALLOC_TO_ENTITY_CODE';
   l_rec_acct_attrs.array_char_value(4)  := 
xla_ae_sources_pkg.GetSystemSourceChar(
   p_source_code           => 'XLA_ENTITY_CODE'
 , p_source_type_code      => 'Y'
 , p_source_application_id =>  602
);
   l_rec_acct_attrs.array_acct_attr_code(5) := 'ALLOC_TO_FIRST_DIST_ID';
   l_rec_acct_attrs.array_num_value(5)  :=  to_char(p_source_23);
   l_rec_acct_attrs.array_acct_attr_code(6) := 'ALLOC_TO_FIRST_SYS_TRAN_ID';
   l_rec_acct_attrs.array_num_value(6)  :=  to_char(p_source_24);
   l_rec_acct_attrs.array_acct_attr_code(7) := 'APPLIED_TO_AMOUNT';
   l_rec_acct_attrs.array_num_value(7)  := p_source_57;
   l_rec_acct_attrs.array_acct_attr_code(8) := 'APPLIED_TO_APPLICATION_ID';
   l_rec_acct_attrs.array_num_value(8)  := p_source_25;
   l_rec_acct_attrs.array_acct_attr_code(9) := 'APPLIED_TO_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(9)  := p_source_26;
   l_rec_acct_attrs.array_acct_attr_code(10) := 'APPLIED_TO_ENTITY_CODE';
   l_rec_acct_attrs.array_char_value(10)  := p_source_27;
   l_rec_acct_attrs.array_acct_attr_code(11) := 'APPLIED_TO_FIRST_DIST_ID';
   l_rec_acct_attrs.array_num_value(11)  :=  to_char(p_source_28);
   l_rec_acct_attrs.array_acct_attr_code(12) := 'APPLIED_TO_FIRST_SYS_TRAN_ID';
   l_rec_acct_attrs.array_num_value(12)  :=  to_char(p_source_29);
   l_rec_acct_attrs.array_acct_attr_code(13) := 'DISTRIBUTION_IDENTIFIER_1';
   l_rec_acct_attrs.array_num_value(13)  :=  to_char(p_source_30);
   l_rec_acct_attrs.array_acct_attr_code(14) := 'DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(14)  := p_source_21;
   l_rec_acct_attrs.array_acct_attr_code(15) := 'ENC_UPG_CR_CCID';
   l_rec_acct_attrs.array_num_value(15)  := p_source_31;
   l_rec_acct_attrs.array_acct_attr_code(16) := 'ENC_UPG_CR_ENTERED_AMT';
   l_rec_acct_attrs.array_num_value(16)  := p_source_32;
   l_rec_acct_attrs.array_acct_attr_code(17) := 'ENC_UPG_CR_ENTERED_CURR';
   l_rec_acct_attrs.array_char_value(17)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(18) := 'ENC_UPG_CR_LEDGER_AMT';
   l_rec_acct_attrs.array_num_value(18)  := p_source_34;
   l_rec_acct_attrs.array_acct_attr_code(19) := 'ENC_UPG_DR_CCID';
   l_rec_acct_attrs.array_num_value(19)  := p_source_35;
   l_rec_acct_attrs.array_acct_attr_code(20) := 'ENC_UPG_DR_ENTERED_AMT';
   l_rec_acct_attrs.array_num_value(20)  := p_source_36;
   l_rec_acct_attrs.array_acct_attr_code(21) := 'ENC_UPG_DR_ENTERED_CURR';
   l_rec_acct_attrs.array_char_value(21)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(22) := 'ENC_UPG_DR_LEDGER_AMT';
   l_rec_acct_attrs.array_num_value(22)  := p_source_37;
   l_rec_acct_attrs.array_acct_attr_code(23) := 'ENC_UPG_OPTION';
   l_rec_acct_attrs.array_char_value(23)  := p_source_38;
   l_rec_acct_attrs.array_acct_attr_code(24) := 'ENTERED_CURRENCY_AMOUNT';
   l_rec_acct_attrs.array_num_value(24)  := p_source_57;
   l_rec_acct_attrs.array_acct_attr_code(25) := 'ENTERED_CURRENCY_CODE';
   l_rec_acct_attrs.array_char_value(25)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(26) := 'EXCHANGE_DATE';
   l_rec_acct_attrs.array_date_value(26)  := p_source_39;
   l_rec_acct_attrs.array_acct_attr_code(27) := 'EXCHANGE_RATE';
   l_rec_acct_attrs.array_num_value(27)  := p_source_40;
   l_rec_acct_attrs.array_acct_attr_code(28) := 'EXCHANGE_RATE_TYPE';
   l_rec_acct_attrs.array_char_value(28)  := p_source_41;
   l_rec_acct_attrs.array_acct_attr_code(29) := 'LEDGER_AMOUNT';
   l_rec_acct_attrs.array_num_value(29)  := p_source_8;
   l_rec_acct_attrs.array_acct_attr_code(30) := 'MULTIPERIOD_END_DATE';
   l_rec_acct_attrs.array_date_value(30)  := p_source_43;
   l_rec_acct_attrs.array_acct_attr_code(31) := 'MULTIPERIOD_OPTION';
   l_rec_acct_attrs.array_char_value(31)  := p_source_44;
   l_rec_acct_attrs.array_acct_attr_code(32) := 'MULTIPERIOD_START_DATE';
   l_rec_acct_attrs.array_date_value(32)  := p_source_45;
   l_rec_acct_attrs.array_acct_attr_code(33) := 'OVERRIDE_ACCTD_AMT_FLAG';
   l_rec_acct_attrs.array_char_value(33)  := p_source_46;
   l_rec_acct_attrs.array_acct_attr_code(34) := 'PARTY_ID';
   l_rec_acct_attrs.array_num_value(34)  := p_source_47;
   l_rec_acct_attrs.array_acct_attr_code(35) := 'PARTY_SITE_ID';
   l_rec_acct_attrs.array_num_value(35)  := p_source_48;
   l_rec_acct_attrs.array_acct_attr_code(36) := 'PARTY_TYPE';
   l_rec_acct_attrs.array_char_value(36)  := p_source_49;
   l_rec_acct_attrs.array_acct_attr_code(37) := 'REVERSED_DISTRIBUTION_ID1';
   l_rec_acct_attrs.array_num_value(37)  :=  to_char(p_source_50);
   l_rec_acct_attrs.array_acct_attr_code(38) := 'REVERSED_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(38)  := p_source_21;
   l_rec_acct_attrs.array_acct_attr_code(39) := 'STATISTICAL_AMOUNT';
   l_rec_acct_attrs.array_num_value(39)  := p_source_51;
   l_rec_acct_attrs.array_acct_attr_code(40) := 'TAX_LINE_REF_ID';
   l_rec_acct_attrs.array_num_value(40)  := p_source_52;
   l_rec_acct_attrs.array_acct_attr_code(41) := 'TAX_REC_NREC_DIST_REF_ID';
   l_rec_acct_attrs.array_num_value(41)  := p_source_53;
   l_rec_acct_attrs.array_acct_attr_code(42) := 'TAX_SUMMARY_LINE_REF_ID';
   l_rec_acct_attrs.array_num_value(42)  := p_source_54;
   l_rec_acct_attrs.array_acct_attr_code(43) := 'UPG_CR_ENC_TYPE_ID';
   l_rec_acct_attrs.array_num_value(43)  := p_source_55;
   l_rec_acct_attrs.array_acct_attr_code(44) := 'UPG_DR_ENC_TYPE_ID';
   l_rec_acct_attrs.array_num_value(44)  := p_source_56;

   XLA_AE_LINES_PKG.SetLineAcctAttrs(l_rec_acct_attrs);
   p_gain_or_loss_ref  := XLA_AE_LINES_PKG.g_rec_lines.array_gain_or_loss_ref(XLA_AE_LINES_PKG.g_LineNumber);

   ---------------------------------------------------------------------------------------------------------------
   -- 4336173 -- assign Business Flow Class (replace code in xla_ae_lines_pkg.Business_Flow_Validation)
   ---------------------------------------------------------------------------------------------------------------
   XLA_AE_LINES_PKG.g_rec_lines.array_business_class_code(XLA_AE_LINES_PKG.g_LineNumber) := l_bflow_class_code;

   l_actual_upg_option  := XLA_AE_LINES_PKG.g_rec_lines.array_actual_upg_option(XLA_AE_LINES_PKG.g_LineNumber);
   l_enc_upg_option     := XLA_AE_LINES_PKG.g_rec_lines.array_enc_upg_option(XLA_AE_LINES_PKG.g_LineNumber);

   IF xla_accounting_cache_pkg.GetValueChar
         (p_source_code         => 'LEDGER_CATEGORY_CODE'
         ,p_target_ledger_id    => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id) IN ('PRIMARY','ALC')
   AND l_bflow_method_code = 'PRIOR_ENTRY'
--   AND (l_actual_upg_option = 'Y' OR l_enc_upg_option = 'Y') Bug 4922099
   AND ( (NVL(l_actual_upg_option, 'N') IN ('Y', 'O')) OR
         (NVL(l_enc_upg_option, 'N') IN ('Y', 'O'))
       )
   THEN
         xla_ae_lines_pkg.BflowUpgEntry
           (p_business_method_code    => l_bflow_method_code
           ,p_business_class_code     => l_bflow_class_code
           ,p_balance_type            => l_balance_type_code);
   ELSE
      NULL;
-- No business flow processing for business flow method of NONE.
   END IF;

   --
   -- call analytical criteria
   --
   
   --
   -- call description
   --
   
xla_ae_lines_pkg.SetLineDescription(
   p_ae_header_id => l_ae_header_id
  ,p_description  => Description_2 (
     p_application_id         => p_application_id
   , p_ae_header_id           => l_ae_header_id 
, p_source_1 => p_source_1
   )
);


   --
   -- call ADRs
   -- Bug 4922099
   --
   IF ( (l_bflow_method_code <> 'PRIOR_ENTRY') OR
        (NVL(l_actual_upg_option, 'N') = 'O') OR
        (NVL(l_enc_upg_option, 'N') = 'O')
      )
   THEN
   NULL;
   --
   --
   
  l_ccid := AcctDerRule_6(
           p_application_id           => p_application_id
         , p_ae_header_id             => l_ae_header_id 
, p_source_6 => p_source_6
, p_source_7 => p_source_7
, p_source_7_meaning => p_source_7_meaning
, p_source_8 => p_source_8
, p_source_9 => p_source_9
, p_source_9_meaning => p_source_9_meaning
, p_source_10 => p_source_10
, p_source_11 => p_source_11
, p_source_12 => p_source_12
, p_source_12_meaning => p_source_12_meaning
         , x_transaction_coa_id       => l_adr_transaction_coa_id
         , x_accounting_coa_id        => l_adr_accounting_coa_id
         , x_value_type_code          => l_adr_value_type_code
         , p_side                     => 'NA'
   );

   xla_ae_lines_pkg.set_ccid(
    p_code_combination_id          => l_ccid
  , p_value_type_code              => l_adr_value_type_code
  , p_transaction_coa_id           => l_adr_transaction_coa_id
  , p_accounting_coa_id            => l_adr_accounting_coa_id
  , p_adr_code                     => 'AP_EXCHG_TAXEXCHG_RATE_VAR'
  , p_adr_type_code                => 'S'
  , p_component_type               => l_component_type
  , p_component_code               => l_component_code
  , p_component_type_code          => l_component_type_code
  , p_component_appl_id            => l_component_appl_id
  , p_amb_context_code             => l_amb_context_code
  , p_side                         => 'NA'
  );


   l_segment := AcctDerRule_4(
           p_application_id           => p_application_id
         , p_ae_header_id             => l_ae_header_id 
, p_source_6 => p_source_6
, p_source_7 => p_source_7
, p_source_7_meaning => p_source_7_meaning
, p_source_8 => p_source_8
, p_source_9 => p_source_9
, p_source_9_meaning => p_source_9_meaning
, p_source_10 => p_source_10
         , x_transaction_coa_id       => l_adr_transaction_coa_id
         , x_accounting_coa_id        => l_adr_accounting_coa_id
         , x_flexfield_segment_code   => l_adr_flexfield_segment_code
         , x_flex_value_set_id        => l_adr_flex_value_set_id
         , x_value_type_code          => l_adr_value_type_code
         , x_value_combination_id     => l_adr_value_combination_id
         , x_value_segment_code       => l_adr_value_segment_code
         , p_side                     => 'NA'
         , p_override_seg_flag        => 'Y'
   );

   IF NVL(l_segment,'NULL') <> '#$NO_OVERRIDE#$' THEN  -- 4465612

      xla_ae_lines_pkg.set_segment(
          p_to_segment_code         => 'GL_ACCOUNT'
        , p_segment_value           => l_segment
        , p_from_segment_code       => l_adr_value_segment_code
        , p_from_combination_id     => l_adr_value_combination_id
        , p_value_type_code         => l_adr_value_type_code
        , p_transaction_coa_id      => l_adr_transaction_coa_id
        , p_accounting_coa_id       => l_adr_accounting_coa_id
        , p_flexfield_segment_code  => l_adr_flexfield_segment_code
        , p_flex_value_set_id       => l_adr_flex_value_set_id
        , p_adr_code                => 'AP_ERV_GAIN_LOSS_NAT_ACCT_SEG'
        , p_adr_type_code           => 'S'
        , p_component_type          => l_component_type
        , p_component_code          => l_component_code
        , p_component_type_code     => l_component_type_code
        , p_component_appl_id       => l_component_appl_id
        , p_amb_context_code        => l_amb_context_code
        , p_entity_code             => 'AP_INVOICES'
        , p_event_class_code        => 'INVOICES'
        , p_side                    => 'NA'
        );

  END IF;

   l_segment := AcctDerRule_5(
           p_application_id           => p_application_id
         , p_ae_header_id             => l_ae_header_id 
, p_source_7 => p_source_7
, p_source_7_meaning => p_source_7_meaning
, p_source_9 => p_source_9
, p_source_9_meaning => p_source_9_meaning
, p_source_11 => p_source_11
         , x_transaction_coa_id       => l_adr_transaction_coa_id
         , x_accounting_coa_id        => l_adr_accounting_coa_id
         , x_flexfield_segment_code   => l_adr_flexfield_segment_code
         , x_flex_value_set_id        => l_adr_flex_value_set_id
         , x_value_type_code          => l_adr_value_type_code
         , x_value_combination_id     => l_adr_value_combination_id
         , x_value_segment_code       => l_adr_value_segment_code
         , p_side                     => 'NA'
         , p_override_seg_flag        => 'Y'
   );

   IF NVL(l_segment,'NULL') <> '#$NO_OVERRIDE#$' THEN  -- 4465612

      xla_ae_lines_pkg.set_segment(
          p_to_segment_code         => 'GL_BALANCING'
        , p_segment_value           => l_segment
        , p_from_segment_code       => l_adr_value_segment_code
        , p_from_combination_id     => l_adr_value_combination_id
        , p_value_type_code         => l_adr_value_type_code
        , p_transaction_coa_id      => l_adr_transaction_coa_id
        , p_accounting_coa_id       => l_adr_accounting_coa_id
        , p_flexfield_segment_code  => l_adr_flexfield_segment_code
        , p_flex_value_set_id       => l_adr_flex_value_set_id
        , p_adr_code                => 'AP_RELATED_DIST_BAL_SEG'
        , p_adr_type_code           => 'S'
        , p_component_type          => l_component_type
        , p_component_code          => l_component_code
        , p_component_type_code     => l_component_type_code
        , p_component_appl_id       => l_component_appl_id
        , p_amb_context_code        => l_amb_context_code
        , p_entity_code             => 'AP_INVOICES'
        , p_event_class_code        => 'INVOICES'
        , p_side                    => 'NA'
        );

  END IF;

   --
   --
   END IF;
   --
   -- Bug 4922099
   IF ( ( (NVL(l_actual_upg_option, 'N') = 'O') OR
          (NVL(l_enc_upg_option, 'N') = 'O')
        ) AND
        (l_bflow_method_code = 'PRIOR_ENTRY')
      )
   THEN
      IF
      --
      1 = 2
      --
      THEN
      xla_accounting_err_pkg.build_message
                                    (p_appli_s_name            => 'XLA'
                                    ,p_msg_name                => 'XLA_UPG_OVERRIDE_ADR_UNDEFINED'
                                    ,p_token_1                 => 'LINE_NUMBER'
                                    ,p_value_1                 => XLA_AE_LINES_PKG.g_LineNumber
                                    ,p_token_2                 => 'LINE_TYPE_NAME'
                                    ,p_value_2                 => XLA_AE_SOURCES_PKG.GetComponentName (
                                                                             l_component_type
                                                                            ,l_component_code
                                                                            ,l_component_type_code
                                                                            ,l_component_appl_id
                                                                            ,l_amb_context_code
                                                                            ,l_entity_code
                                                                            ,l_event_class_code
                                                                           )
                                    ,p_token_3                 => 'OWNER'
                                    ,p_value_3                 => xla_lookups_pkg.get_meaning(
                                                                          p_lookup_type     => 'XLA_OWNER_TYPE'
                                                                          ,p_lookup_code    => l_component_type_code
                                                                         )
                                    ,p_token_4                 => 'PRODUCT_NAME'
                                    ,p_value_4                 => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.application_name
                                    ,p_entity_id               => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.entity_id
                                    ,p_event_id                => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.event_id
                                    ,p_ledger_id               => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id
                                    ,p_ae_header_id            =>  NULL
                                       );

        IF (C_LEVEL_ERROR>= g_log_level) THEN
                 trace
                      (p_msg      => 'ERROR: XLA_UPG_OVERRIDE_ADR_UNDEFINED'
                      ,p_level    => C_LEVEL_ERROR
                      ,p_module   => l_log_module);
        END IF;
      END IF;
   END IF;
   --
   --
   ------------------------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- NOTE: XLA_AE_LINES_PKG.ValidateCurrentLine should NOT be generated if business flow method is
   -- Prior Entry.  Currently, the following code is always generated.
   ------------------------------------------------------------------------------------------------
   XLA_AE_LINES_PKG.ValidateCurrentLine;

   ------------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- Populated credit and debit amounts -- Need to generate this within IF <condition>
   ------------------------------------------------------------------------------------
   XLA_AE_LINES_PKG.SetDebitCreditAmounts;

   ----------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- Update journal entry status -- Need to generate this within IF <condition>
   ----------------------------------------------------------------------------------
   XLA_AE_JOURNAL_ENTRY_PKG.UpdateJournalEntryStatus
         (p_hdr_idx => g_array_event(p_event_id).array_value_num('header_index')
         ,p_balance_type_code => l_balance_type_code
         );

   -------------------------------------------------------------------------------------------
   -- 4262811 - Generate the Accrual Reversal lines
   -------------------------------------------------------------------------------------------
   BEGIN
      l_acc_rev_flag := XLA_AE_HEADER_PKG.g_rec_header_new.array_accrual_reversal_flag
                              (g_array_event(p_event_id).array_value_num('header_index'));
      IF l_acc_rev_flag IS NULL THEN
         l_acc_rev_flag := 'N';
      END IF;
   EXCEPTION
      WHEN OTHERS THEN
         l_acc_rev_flag := 'N';
   END;
   --
   IF (l_acc_rev_flag = 'Y') THEN

       -- 4645092  ------------------------------------------------------------------------------
       -- To allow MPA report to determine if it should generate report process
       XLA_ACCOUNTING_PKG.g_mpa_accrual_exists := 'Y';
       ------------------------------------------------------------------------------------------

       l_accrual_line_num := XLA_AE_LINES_PKG.g_LineNumber;
       XLA_AE_LINES_PKG.CopyLineInfo(l_accrual_line_num);
   -- added call to set_ccid to execute mapping  for secondary accrual reversal entries bug 7444204
   -- call ADRs
   -- Bug 4922099
   --
   IF ( (l_bflow_method_code <> 'PRIOR_ENTRY') OR
        (NVL(l_actual_upg_option, 'N') = 'O') OR
        (NVL(l_enc_upg_option, 'N') = 'O')
      )
   THEN
   NULL;
   --
   --
   
  l_ccid := AcctDerRule_6(
           p_application_id           => p_application_id
         , p_ae_header_id             => l_ae_header_id 
, p_source_6 => p_source_6
, p_source_7 => p_source_7
, p_source_7_meaning => p_source_7_meaning
, p_source_8 => p_source_8
, p_source_9 => p_source_9
, p_source_9_meaning => p_source_9_meaning
, p_source_10 => p_source_10
, p_source_11 => p_source_11
, p_source_12 => p_source_12
, p_source_12_meaning => p_source_12_meaning
         , x_transaction_coa_id       => l_adr_transaction_coa_id
         , x_accounting_coa_id        => l_adr_accounting_coa_id
         , x_value_type_code          => l_adr_value_type_code
         , p_side                     => 'NA'
   );

   xla_ae_lines_pkg.set_ccid(
    p_code_combination_id          => l_ccid
  , p_value_type_code              => l_adr_value_type_code
  , p_transaction_coa_id           => l_adr_transaction_coa_id
  , p_accounting_coa_id            => l_adr_accounting_coa_id
  , p_adr_code                     => 'AP_EXCHG_TAXEXCHG_RATE_VAR'
  , p_adr_type_code                => 'S'
  , p_component_type               => l_component_type
  , p_component_code               => l_component_code
  , p_component_type_code          => l_component_type_code
  , p_component_appl_id            => l_component_appl_id
  , p_amb_context_code             => l_amb_context_code
  , p_side                         => 'NA'
  );


   l_segment := AcctDerRule_4(
           p_application_id           => p_application_id
         , p_ae_header_id             => l_ae_header_id 
, p_source_6 => p_source_6
, p_source_7 => p_source_7
, p_source_7_meaning => p_source_7_meaning
, p_source_8 => p_source_8
, p_source_9 => p_source_9
, p_source_9_meaning => p_source_9_meaning
, p_source_10 => p_source_10
         , x_transaction_coa_id       => l_adr_transaction_coa_id
         , x_accounting_coa_id        => l_adr_accounting_coa_id
         , x_flexfield_segment_code   => l_adr_flexfield_segment_code
         , x_flex_value_set_id        => l_adr_flex_value_set_id
         , x_value_type_code          => l_adr_value_type_code
         , x_value_combination_id     => l_adr_value_combination_id
         , x_value_segment_code       => l_adr_value_segment_code
         , p_side                     => 'NA'
         , p_override_seg_flag        => 'Y'
   );

   IF NVL(l_segment,'NULL') <> '#$NO_OVERRIDE#$' THEN  -- 4465612

      xla_ae_lines_pkg.set_segment(
          p_to_segment_code         => 'GL_ACCOUNT'
        , p_segment_value           => l_segment
        , p_from_segment_code       => l_adr_value_segment_code
        , p_from_combination_id     => l_adr_value_combination_id
        , p_value_type_code         => l_adr_value_type_code
        , p_transaction_coa_id      => l_adr_transaction_coa_id
        , p_accounting_coa_id       => l_adr_accounting_coa_id
        , p_flexfield_segment_code  => l_adr_flexfield_segment_code
        , p_flex_value_set_id       => l_adr_flex_value_set_id
        , p_adr_code                => 'AP_ERV_GAIN_LOSS_NAT_ACCT_SEG'
        , p_adr_type_code           => 'S'
        , p_component_type          => l_component_type
        , p_component_code          => l_component_code
        , p_component_type_code     => l_component_type_code
        , p_component_appl_id       => l_component_appl_id
        , p_amb_context_code        => l_amb_context_code
        , p_entity_code             => 'AP_INVOICES'
        , p_event_class_code        => 'INVOICES'
        , p_side                    => 'NA'
        );

  END IF;

   l_segment := AcctDerRule_5(
           p_application_id           => p_application_id
         , p_ae_header_id             => l_ae_header_id 
, p_source_7 => p_source_7
, p_source_7_meaning => p_source_7_meaning
, p_source_9 => p_source_9
, p_source_9_meaning => p_source_9_meaning
, p_source_11 => p_source_11
         , x_transaction_coa_id       => l_adr_transaction_coa_id
         , x_accounting_coa_id        => l_adr_accounting_coa_id
         , x_flexfield_segment_code   => l_adr_flexfield_segment_code
         , x_flex_value_set_id        => l_adr_flex_value_set_id
         , x_value_type_code          => l_adr_value_type_code
         , x_value_combination_id     => l_adr_value_combination_id
         , x_value_segment_code       => l_adr_value_segment_code
         , p_side                     => 'NA'
         , p_override_seg_flag        => 'Y'
   );

   IF NVL(l_segment,'NULL') <> '#$NO_OVERRIDE#$' THEN  -- 4465612

      xla_ae_lines_pkg.set_segment(
          p_to_segment_code         => 'GL_BALANCING'
        , p_segment_value           => l_segment
        , p_from_segment_code       => l_adr_value_segment_code
        , p_from_combination_id     => l_adr_value_combination_id
        , p_value_type_code         => l_adr_value_type_code
        , p_transaction_coa_id      => l_adr_transaction_coa_id
        , p_accounting_coa_id       => l_adr_accounting_coa_id
        , p_flexfield_segment_code  => l_adr_flexfield_segment_code
        , p_flex_value_set_id       => l_adr_flex_value_set_id
        , p_adr_code                => 'AP_RELATED_DIST_BAL_SEG'
        , p_adr_type_code           => 'S'
        , p_component_type          => l_component_type
        , p_component_code          => l_component_code
        , p_component_type_code     => l_component_type_code
        , p_component_appl_id       => l_component_appl_id
        , p_amb_context_code        => l_amb_context_code
        , p_entity_code             => 'AP_INVOICES'
        , p_event_class_code        => 'INVOICES'
        , p_side                    => 'NA'
        );

  END IF;

   --
   --
   END IF;

       --
       -- Update the line information that should be overwritten
       --
       XLA_AE_LINES_PKG.set_ae_header_id(p_ae_header_id => p_event_id ,
                                         p_header_num   => 1);
       XLA_AE_LINES_PKG.g_rec_lines.array_header_num(XLA_AE_LINES_PKG.g_LineNumber)  :=1;

       XLA_AE_LINES_PKG.g_rec_lines.array_business_class_code(XLA_AE_LINES_PKG.g_LineNumber) := NULL; -- 4669271

       IF l_bflow_method_code <> 'NONE' THEN  -- 4655713b
          XLA_AE_LINES_PKG.g_rec_lines.array_reversal_code(XLA_AE_LINES_PKG.g_LineNumber) := CONCAT('MPA_',l_bflow_method_code);
       END IF;

      --
      -- Depending on the Reversal Method setup, do a switch side or changes sign for the amounts
      --
      IF (XLA_AE_JOURNAL_ENTRY_PKG.g_cache_ledgers_info.ledger_reversal_option = 'SIDE') THEN
          XLA_AE_LINES_PKG.g_rec_lines.array_natural_side_code(XLA_AE_LINES_PKG.g_LineNumber) :=  l_acc_rev_natural_side_code;
      ELSE
          ---------------------------------------------------------------------------------------------------
          -- 4262811a Switch Sign
          ---------------------------------------------------------------------------------------------------
          XLA_AE_LINES_PKG.g_rec_lines.array_switch_side_flag(XLA_AE_LINES_PKG.g_LineNumber) := 'N';  -- 5052518
          XLA_AE_LINES_PKG.g_rec_lines.array_ledger_amount(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_ledger_amount(XLA_AE_LINES_PKG.g_LineNumber) * -1;
          XLA_AE_LINES_PKG.g_rec_lines.array_entered_amount(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_entered_amount(XLA_AE_LINES_PKG.g_LineNumber) * -1;
          -- 5132302
          XLA_AE_LINES_PKG.g_rec_lines.array_bflow_applied_to_amt(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_bflow_applied_to_amt(XLA_AE_LINES_PKG.g_LineNumber) * -1;

      END IF;

      -- 4955764
      XLA_AE_LINES_PKG.g_rec_lines.array_gl_date(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_HEADER_PKG.g_rec_header_new.array_gl_date(g_array_event(p_event_id).array_value_num('acc_rev_header_index'));


      XLA_AE_LINES_PKG.ValidateCurrentLine;
      XLA_AE_LINES_PKG.SetDebitCreditAmounts;

      XLA_AE_JOURNAL_ENTRY_PKG.UpdateJournalEntryStatus
               (p_hdr_idx           => g_array_event(p_event_id).array_value_num('acc_rev_header_index')
               ,p_balance_type_code => l_balance_type_code);

   END IF;

   -----------------------------------------------------------------------------------------
   -- 4262811 Multiperiod Accounting
   -----------------------------------------------------------------------------------------
     -- No MPA option is assigned.


END IF;
END IF;
--

--
IF (C_LEVEL_PROCEDURE >= g_log_level) THEN
   trace
      (p_msg      => 'END of AcctLineType_65'
      ,p_level    => C_LEVEL_PROCEDURE
      ,p_module   => l_log_module);
END IF;
--
EXCEPTION
  WHEN xla_exceptions_pkg.application_exception THEN
      RAISE;
  WHEN OTHERS THEN
       xla_exceptions_pkg.raise_message
           (p_location => 'XLA_00200_AAD_S_000010_BC_PKG.AcctLineType_65');
END AcctLineType_65;
--

---------------------------------------
--
-- PRIVATE FUNCTION
--         AcctLineType_66
--
---------------------------------------
PROCEDURE AcctLineType_66 (
  p_application_id        IN NUMBER
 ,p_event_id              IN NUMBER
 ,p_calculate_acctd_flag  IN VARCHAR2
 ,p_calculate_g_l_flag    IN VARCHAR2
 ,p_actual_flag           IN OUT VARCHAR2
 ,p_balance_type_code     OUT VARCHAR2
 ,p_gain_or_loss_ref      OUT VARCHAR2
 
--Invoice Distribution Description
 , p_source_1            IN VARCHAR2
--Invoice Distribution Account
 , p_source_11            IN NUMBER
--Invoice Distribution Type
 , p_source_15            IN VARCHAR2
 , p_source_15_meaning    IN VARCHAR2
--Amount for Variance Amount
 , p_source_16            IN NUMBER
--Purchasing Encumbrance Option
 , p_source_17            IN VARCHAR2
 , p_source_17_meaning    IN VARCHAR2
--Accrue on Receipt Option
 , p_source_18            IN VARCHAR2
 , p_source_18_meaning    IN VARCHAR2
--Accounting Reversal Indicator
 , p_source_19            IN VARCHAR2
--Distribution Link Type
 , p_source_21            IN VARCHAR2
--Allocation to Main Distribution Identifier
 , p_source_23            IN NUMBER
--Invoice Identifier
 , p_source_24            IN NUMBER
--Business Flow Accounts Payable Application Identifier
 , p_source_25            IN NUMBER
--Business Flow Invoice Distribution Type
 , p_source_26            IN VARCHAR2
--Business Flow Invoice Entity Code
 , p_source_27            IN VARCHAR2
--Business Flow Invoice Distribution Identifier
 , p_source_28            IN NUMBER
--Business Flow Invoice Identifier
 , p_source_29            IN NUMBER
--Invoice Distribution Identifier
 , p_source_30            IN NUMBER
--Payables Encumbrance Upgrade Credit Account
 , p_source_31            IN NUMBER
--Payables Encumbrance Upgrade Credit Amount
 , p_source_32            IN NUMBER
--Invoice Currency Code
 , p_source_33            IN VARCHAR2
--Payables Encumbrance Upgrade Credit Base Amount
 , p_source_34            IN NUMBER
--Payables Encumbrance Upgrade Debit Account
 , p_source_35            IN NUMBER
--Payables Encumbrance Upgrade Debit Amount
 , p_source_36            IN NUMBER
--Payables Encumbrance Upgrade Debit Base Amount
 , p_source_37            IN NUMBER
--Payables Encumbrance Upgrade Option
 , p_source_38            IN VARCHAR2
--Invoice Exchange Date
 , p_source_39            IN DATE
--Invoice Exchange Rate
 , p_source_40            IN NUMBER
--Invoice Exchange Rate Type
 , p_source_41            IN VARCHAR2
--Variance Amount in Ledger Currency
 , p_source_42            IN NUMBER
--Deferred Accounting End Date
 , p_source_43            IN DATE
--Deferred Accounting Option
 , p_source_44            IN VARCHAR2
--Deferred Accounting Start Date
 , p_source_45            IN DATE
--Override Accounted Amount Indicator
 , p_source_46            IN VARCHAR2
 , p_source_46_meaning    IN VARCHAR2
--Invoice Supplier Identifier
 , p_source_47            IN NUMBER
--Invoice Supplier Site Identifier
 , p_source_48            IN NUMBER
--Third Party Type
 , p_source_49            IN VARCHAR2
--Parent Reversal Identifier
 , p_source_50            IN NUMBER
--Invoice Distribution Statistical Amount
 , p_source_51            IN NUMBER
--Invoice Distribution Tax Line Identifier
 , p_source_52            IN NUMBER
--Invoice Distribution Tax Distribution Identifier from Tax
 , p_source_53            IN NUMBER
--Invoice Distribution Summary Tax Line Identifier
 , p_source_54            IN NUMBER
--Payables Upgrade Credit Encumbrance Type Identifier
 , p_source_55            IN NUMBER
--Payables Upgrade Debit Encumbrance Type Identifier
 , p_source_56            IN NUMBER
)
IS

l_component_type              VARCHAR2(80);
l_component_code              VARCHAR2(30);
l_component_type_code         VARCHAR2(1);
l_component_appl_id           INTEGER;
l_amb_context_code            VARCHAR2(30);
l_entity_code                 VARCHAR2(30);
l_event_class_code            VARCHAR2(30);
l_ae_header_id                NUMBER;
l_event_type_code             VARCHAR2(30);
l_line_definition_code        VARCHAR2(30);
l_line_definition_owner_code  VARCHAR2(1);
--
-- adr variables
l_segment                     VARCHAR2(30);
l_ccid                        NUMBER;
l_adr_transaction_coa_id      NUMBER;
l_adr_accounting_coa_id       NUMBER;
l_adr_flexfield_segment_code  VARCHAR2(30);
l_adr_flex_value_set_id       NUMBER;
l_adr_value_type_code         VARCHAR2(30);
l_adr_value_combination_id    NUMBER;
l_adr_value_segment_code      VARCHAR2(30);

l_bflow_method_code           VARCHAR2(30);  -- 4219869 Business Flow
l_bflow_class_code            VARCHAR2(30);  -- 4219869 Business Flow
l_inherit_desc_flag           VARCHAR2(1);   -- 4219869 Business Flow
l_budgetary_control_flag      VARCHAR2(1);   -- 4458381 Public Sector Enh

-- 4262811 Variables ------------------------------------------------------------------------------------------
l_entered_amt_idx             NUMBER;
l_accted_amt_idx              NUMBER;
l_acc_rev_flag                VARCHAR2(1);
l_accrual_line_num            NUMBER;
l_tmp_amt                     NUMBER;
l_acc_rev_natural_side_code   VARCHAR2(1);

l_num_entries                 NUMBER;
l_gl_dates                    xla_ae_journal_entry_pkg.t_array_date;
l_accted_amts                 xla_ae_journal_entry_pkg.t_array_num;
l_entered_amts                xla_ae_journal_entry_pkg.t_array_num;
l_period_names                xla_ae_journal_entry_pkg.t_array_V15L;
l_recog_line_1                NUMBER;
l_recog_line_2                NUMBER;

l_bflow_applied_to_amt_idx    NUMBER;                                -- 5132302
l_bflow_applied_to_amt        NUMBER;                                -- 5132302
l_bflow_applied_to_amts       xla_ae_journal_entry_pkg.t_array_num;  -- 5132302

l_event_id                    NUMBER;  -- To handle MPA header Description: xla_ae_header_pkg.SetHdrDescription

--l_rounding_ccy                VARCHAR2(15); -- To handle MPA rounding  4262811b
l_same_currency               BOOLEAN;        -- To handle MPA rounding  4262811b

---------------------------------------------------------------------------------------------------------------


--
-- bulk performance
--
l_balance_type_code           VARCHAR2(1);
l_rec_acct_attrs              XLA_AE_LINES_PKG.t_rec_acct_attrs;
l_log_module                  VARCHAR2(240);

--
-- Upgrade strategy
--
l_actual_upg_option           VARCHAR2(1);
l_enc_upg_option           VARCHAR2(1);

--
BEGIN
--
IF g_log_enabled THEN
      l_log_module := C_DEFAULT_MODULE||'.AcctLineType_66';
END IF;
--
IF (C_LEVEL_PROCEDURE >= g_log_level) THEN

      trace
         (p_msg      => 'BEGIN of AcctLineType_66'
         ,p_level    => C_LEVEL_PROCEDURE
         ,p_module   => l_log_module);

END IF;
--
l_component_type             := 'AMB_JLT';
l_component_code             := 'AP_TAX_AMT_VARIANCE_CM_ENC_DR';
l_component_type_code        := 'S';
l_component_appl_id          :=  200;
l_amb_context_code           := 'DEFAULT';
l_entity_code                := 'AP_INVOICES';
l_event_class_code           := 'CREDIT MEMOS';
l_event_type_code            := 'CREDIT MEMOS_ALL';
l_line_definition_owner_code := 'S';
l_line_definition_code       := 'ENC_CM_ALL';
--
l_balance_type_code          := 'E';
l_segment                     := NULL;
l_ccid                        := NULL;
l_adr_transaction_coa_id      := NULL;
l_adr_accounting_coa_id       := NULL;
l_adr_flexfield_segment_code  := NULL;
l_adr_flex_value_set_id       := NULL;
l_adr_value_type_code         := NULL;
l_adr_value_combination_id    := NULL;
l_adr_value_segment_code      := NULL;

l_bflow_method_code          := 'NONE';   -- 4219869 Business Flow
l_bflow_class_code           := 'AP_INV_ENCUM';    -- 4219869 Business Flow
l_inherit_desc_flag          := 'N';   -- 4219869 Business Flow
l_budgetary_control_flag     := 'Y';

l_bflow_applied_to_amt_idx   := NULL; -- 5132302
l_bflow_applied_to_amt       := NULL; -- 5132302
l_entered_amt_idx            := NULL;          -- 4262811
l_accted_amt_idx             := NULL;          -- 4262811
l_acc_rev_flag               := NULL;          -- 4262811
l_accrual_line_num           := NULL;          -- 4262811
l_tmp_amt                    := NULL;          -- 4262811
--
 
IF XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id = XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.ledger_id OR
    l_balance_type_code <> 'B' THEN
IF NVL(p_source_15,'
') =  'NONREC_TAX' AND 
p_source_16 IS NOT NULL AND 
NVL(p_source_17,'
') =  'Y' AND 
NVL(p_source_18,'
') <>  'Y'
 THEN 

   --
   XLA_AE_LINES_PKG.SetNewLine;

   p_balance_type_code          := l_balance_type_code;
   -- set the flag so later we will know whether the gain loss line needs to be created
   
   IF(l_balance_type_code = 'A' and p_actual_flag is null) THEN
     p_actual_flag :='A';
   END IF;

   --
   -- bulk performance
   --
   XLA_AE_LINES_PKG.set_ae_header_id (p_ae_header_id => p_event_id ,
                                      p_header_num   => 0); -- 4262811
   --
   -- set accounting line options
   --
   l_ae_header_id:= xla_ae_lines_pkg.SetAcctLineOption(
           p_natural_side_code          => 'D'
         , p_gain_or_loss_flag          => 'N'
         , p_gl_transfer_mode_code      => 'S'
         , p_acct_entry_type_code       => 'E'
         , p_switch_side_flag           => 'Y'
         , p_merge_duplicate_code       => 'N'
         );
   --
   l_acc_rev_natural_side_code := 'C';  -- 4262811
   -- 
   --
   -- set accounting line type info
   --
   xla_ae_lines_pkg.SetAcctLineType
      (p_component_type             => l_component_type
      ,p_event_type_code            => l_event_type_code
      ,p_line_definition_owner_code => l_line_definition_owner_code
      ,p_line_definition_code       => l_line_definition_code
      ,p_accounting_line_code       => l_component_code
      ,p_accounting_line_type_code  => l_component_type_code
      ,p_accounting_line_appl_id    => l_component_appl_id
      ,p_amb_context_code           => l_amb_context_code
      ,p_entity_code                => l_entity_code
      ,p_event_class_code           => l_event_class_code);
   --
   -- set accounting class
   --
   xla_ae_lines_pkg.SetAcctClass(
           p_accounting_class_code  => 'TAV'
         , p_ae_header_id           => l_ae_header_id
         );

   --
   -- set rounding class
   --
   XLA_AE_LINES_PKG.g_rec_lines.array_rounding_class(XLA_AE_LINES_PKG.g_LineNumber) :=
                      'TAV';

   --
   xla_ae_lines_pkg.g_rec_lines.array_calculate_acctd_flag(xla_ae_lines_pkg.g_LineNumber) := p_calculate_acctd_flag;
   xla_ae_lines_pkg.g_rec_lines.array_calculate_g_l_flag(xla_ae_lines_pkg.g_LineNumber) := p_calculate_g_l_flag;
   --
   -- bulk performance
   --
   XLA_AE_LINES_PKG.g_rec_lines.array_balance_type_code(XLA_AE_LINES_PKG.g_LineNumber) := l_balance_type_code;

   XLA_AE_LINES_PKG.g_rec_lines.array_ledger_id(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id;

   -- 4955764
   XLA_AE_LINES_PKG.g_rec_lines.array_gl_date(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_HEADER_PKG.g_rec_header_new.array_gl_date(g_array_event(p_event_id).array_value_num('header_index'));

   -- 4458381 Public Sector Enh
      XLA_AE_LINES_PKG.g_rec_lines.array_encumbrance_type_id(XLA_AE_LINES_PKG.g_LineNumber) := 1060;
   --
   -- set accounting attributes for the line type
   --
   l_entered_amt_idx := 23;
   l_accted_amt_idx  := 28;
   l_bflow_applied_to_amt_idx  := NULL;  -- 5132302
   l_rec_acct_attrs.array_acct_attr_code(1) := 'ACCOUNTING_REVERSAL_OPTION';
   l_rec_acct_attrs.array_char_value(1)  := p_source_19;
   l_rec_acct_attrs.array_acct_attr_code(2) := 'ALLOC_TO_APPLICATION_ID';
   l_rec_acct_attrs.array_num_value(2)  := 
xla_ae_sources_pkg.GetSystemSourceNum(
   p_source_code           => 'XLA_EVENT_APPL_ID'
 , p_source_type_code      => 'Y'
 , p_source_application_id =>  602
);
   l_rec_acct_attrs.array_acct_attr_code(3) := 'ALLOC_TO_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(3)  := p_source_21;
   l_rec_acct_attrs.array_acct_attr_code(4) := 'ALLOC_TO_ENTITY_CODE';
   l_rec_acct_attrs.array_char_value(4)  := 
xla_ae_sources_pkg.GetSystemSourceChar(
   p_source_code           => 'XLA_ENTITY_CODE'
 , p_source_type_code      => 'Y'
 , p_source_application_id =>  602
);
   l_rec_acct_attrs.array_acct_attr_code(5) := 'ALLOC_TO_FIRST_DIST_ID';
   l_rec_acct_attrs.array_num_value(5)  :=  to_char(p_source_23);
   l_rec_acct_attrs.array_acct_attr_code(6) := 'ALLOC_TO_FIRST_SYS_TRAN_ID';
   l_rec_acct_attrs.array_num_value(6)  :=  to_char(p_source_24);
   l_rec_acct_attrs.array_acct_attr_code(7) := 'APPLIED_TO_APPLICATION_ID';
   l_rec_acct_attrs.array_num_value(7)  := p_source_25;
   l_rec_acct_attrs.array_acct_attr_code(8) := 'APPLIED_TO_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(8)  := p_source_26;
   l_rec_acct_attrs.array_acct_attr_code(9) := 'APPLIED_TO_ENTITY_CODE';
   l_rec_acct_attrs.array_char_value(9)  := p_source_27;
   l_rec_acct_attrs.array_acct_attr_code(10) := 'APPLIED_TO_FIRST_DIST_ID';
   l_rec_acct_attrs.array_num_value(10)  :=  to_char(p_source_28);
   l_rec_acct_attrs.array_acct_attr_code(11) := 'APPLIED_TO_FIRST_SYS_TRAN_ID';
   l_rec_acct_attrs.array_num_value(11)  :=  to_char(p_source_29);
   l_rec_acct_attrs.array_acct_attr_code(12) := 'DISTRIBUTION_IDENTIFIER_1';
   l_rec_acct_attrs.array_num_value(12)  :=  to_char(p_source_30);
   l_rec_acct_attrs.array_acct_attr_code(13) := 'DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(13)  := p_source_21;
   l_rec_acct_attrs.array_acct_attr_code(14) := 'ENC_UPG_CR_CCID';
   l_rec_acct_attrs.array_num_value(14)  := p_source_31;
   l_rec_acct_attrs.array_acct_attr_code(15) := 'ENC_UPG_CR_ENTERED_AMT';
   l_rec_acct_attrs.array_num_value(15)  := p_source_32;
   l_rec_acct_attrs.array_acct_attr_code(16) := 'ENC_UPG_CR_ENTERED_CURR';
   l_rec_acct_attrs.array_char_value(16)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(17) := 'ENC_UPG_CR_LEDGER_AMT';
   l_rec_acct_attrs.array_num_value(17)  := p_source_34;
   l_rec_acct_attrs.array_acct_attr_code(18) := 'ENC_UPG_DR_CCID';
   l_rec_acct_attrs.array_num_value(18)  := p_source_35;
   l_rec_acct_attrs.array_acct_attr_code(19) := 'ENC_UPG_DR_ENTERED_AMT';
   l_rec_acct_attrs.array_num_value(19)  := p_source_36;
   l_rec_acct_attrs.array_acct_attr_code(20) := 'ENC_UPG_DR_ENTERED_CURR';
   l_rec_acct_attrs.array_char_value(20)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(21) := 'ENC_UPG_DR_LEDGER_AMT';
   l_rec_acct_attrs.array_num_value(21)  := p_source_37;
   l_rec_acct_attrs.array_acct_attr_code(22) := 'ENC_UPG_OPTION';
   l_rec_acct_attrs.array_char_value(22)  := p_source_38;
   l_rec_acct_attrs.array_acct_attr_code(23) := 'ENTERED_CURRENCY_AMOUNT';
   l_rec_acct_attrs.array_num_value(23)  := p_source_16;
   l_rec_acct_attrs.array_acct_attr_code(24) := 'ENTERED_CURRENCY_CODE';
   l_rec_acct_attrs.array_char_value(24)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(25) := 'EXCHANGE_DATE';
   l_rec_acct_attrs.array_date_value(25)  := p_source_39;
   l_rec_acct_attrs.array_acct_attr_code(26) := 'EXCHANGE_RATE';
   l_rec_acct_attrs.array_num_value(26)  := p_source_40;
   l_rec_acct_attrs.array_acct_attr_code(27) := 'EXCHANGE_RATE_TYPE';
   l_rec_acct_attrs.array_char_value(27)  := p_source_41;
   l_rec_acct_attrs.array_acct_attr_code(28) := 'LEDGER_AMOUNT';
   l_rec_acct_attrs.array_num_value(28)  := p_source_42;
   l_rec_acct_attrs.array_acct_attr_code(29) := 'MULTIPERIOD_END_DATE';
   l_rec_acct_attrs.array_date_value(29)  := p_source_43;
   l_rec_acct_attrs.array_acct_attr_code(30) := 'MULTIPERIOD_OPTION';
   l_rec_acct_attrs.array_char_value(30)  := p_source_44;
   l_rec_acct_attrs.array_acct_attr_code(31) := 'MULTIPERIOD_START_DATE';
   l_rec_acct_attrs.array_date_value(31)  := p_source_45;
   l_rec_acct_attrs.array_acct_attr_code(32) := 'OVERRIDE_ACCTD_AMT_FLAG';
   l_rec_acct_attrs.array_char_value(32)  := p_source_46;
   l_rec_acct_attrs.array_acct_attr_code(33) := 'PARTY_ID';
   l_rec_acct_attrs.array_num_value(33)  := p_source_47;
   l_rec_acct_attrs.array_acct_attr_code(34) := 'PARTY_SITE_ID';
   l_rec_acct_attrs.array_num_value(34)  := p_source_48;
   l_rec_acct_attrs.array_acct_attr_code(35) := 'PARTY_TYPE';
   l_rec_acct_attrs.array_char_value(35)  := p_source_49;
   l_rec_acct_attrs.array_acct_attr_code(36) := 'REVERSED_DISTRIBUTION_ID1';
   l_rec_acct_attrs.array_num_value(36)  :=  to_char(p_source_50);
   l_rec_acct_attrs.array_acct_attr_code(37) := 'REVERSED_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(37)  := p_source_21;
   l_rec_acct_attrs.array_acct_attr_code(38) := 'STATISTICAL_AMOUNT';
   l_rec_acct_attrs.array_num_value(38)  := p_source_51;
   l_rec_acct_attrs.array_acct_attr_code(39) := 'TAX_LINE_REF_ID';
   l_rec_acct_attrs.array_num_value(39)  := p_source_52;
   l_rec_acct_attrs.array_acct_attr_code(40) := 'TAX_REC_NREC_DIST_REF_ID';
   l_rec_acct_attrs.array_num_value(40)  := p_source_53;
   l_rec_acct_attrs.array_acct_attr_code(41) := 'TAX_SUMMARY_LINE_REF_ID';
   l_rec_acct_attrs.array_num_value(41)  := p_source_54;
   l_rec_acct_attrs.array_acct_attr_code(42) := 'UPG_CR_ENC_TYPE_ID';
   l_rec_acct_attrs.array_num_value(42)  := p_source_55;
   l_rec_acct_attrs.array_acct_attr_code(43) := 'UPG_DR_ENC_TYPE_ID';
   l_rec_acct_attrs.array_num_value(43)  := p_source_56;

   XLA_AE_LINES_PKG.SetLineAcctAttrs(l_rec_acct_attrs);
   p_gain_or_loss_ref  := XLA_AE_LINES_PKG.g_rec_lines.array_gain_or_loss_ref(XLA_AE_LINES_PKG.g_LineNumber);

   ---------------------------------------------------------------------------------------------------------------
   -- 4336173 -- assign Business Flow Class (replace code in xla_ae_lines_pkg.Business_Flow_Validation)
   ---------------------------------------------------------------------------------------------------------------
   XLA_AE_LINES_PKG.g_rec_lines.array_business_class_code(XLA_AE_LINES_PKG.g_LineNumber) := l_bflow_class_code;

   l_actual_upg_option  := XLA_AE_LINES_PKG.g_rec_lines.array_actual_upg_option(XLA_AE_LINES_PKG.g_LineNumber);
   l_enc_upg_option     := XLA_AE_LINES_PKG.g_rec_lines.array_enc_upg_option(XLA_AE_LINES_PKG.g_LineNumber);

   IF xla_accounting_cache_pkg.GetValueChar
         (p_source_code         => 'LEDGER_CATEGORY_CODE'
         ,p_target_ledger_id    => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id) IN ('PRIMARY','ALC')
   AND l_bflow_method_code = 'PRIOR_ENTRY'
--   AND (l_actual_upg_option = 'Y' OR l_enc_upg_option = 'Y') Bug 4922099
   AND ( (NVL(l_actual_upg_option, 'N') IN ('Y', 'O')) OR
         (NVL(l_enc_upg_option, 'N') IN ('Y', 'O'))
       )
   THEN
         xla_ae_lines_pkg.BflowUpgEntry
           (p_business_method_code    => l_bflow_method_code
           ,p_business_class_code     => l_bflow_class_code
           ,p_balance_type            => l_balance_type_code);
   ELSE
      NULL;
-- No business flow processing for business flow method of NONE.
   END IF;

   --
   -- call analytical criteria
   --
   
   --
   -- call description
   --
   
xla_ae_lines_pkg.SetLineDescription(
   p_ae_header_id => l_ae_header_id
  ,p_description  => Description_2 (
     p_application_id         => p_application_id
   , p_ae_header_id           => l_ae_header_id 
, p_source_1 => p_source_1
   )
);


   --
   -- call ADRs
   -- Bug 4922099
   --
   IF ( (l_bflow_method_code <> 'PRIOR_ENTRY') OR
        (NVL(l_actual_upg_option, 'N') = 'O') OR
        (NVL(l_enc_upg_option, 'N') = 'O')
      )
   THEN
   NULL;
   --
   --
   
  l_ccid := AcctDerRule_7(
           p_application_id           => p_application_id
         , p_ae_header_id             => l_ae_header_id 
, p_source_11 => p_source_11
         , x_transaction_coa_id       => l_adr_transaction_coa_id
         , x_accounting_coa_id        => l_adr_accounting_coa_id
         , x_value_type_code          => l_adr_value_type_code
         , p_side                     => 'NA'
   );

   xla_ae_lines_pkg.set_ccid(
    p_code_combination_id          => l_ccid
  , p_value_type_code              => l_adr_value_type_code
  , p_transaction_coa_id           => l_adr_transaction_coa_id
  , p_accounting_coa_id            => l_adr_accounting_coa_id
  , p_adr_code                     => 'AP_INVOICE_DIST'
  , p_adr_type_code                => 'S'
  , p_component_type               => l_component_type
  , p_component_code               => l_component_code
  , p_component_type_code          => l_component_type_code
  , p_component_appl_id            => l_component_appl_id
  , p_amb_context_code             => l_amb_context_code
  , p_side                         => 'NA'
  );


   --
   --
   END IF;
   --
   -- Bug 4922099
   IF ( ( (NVL(l_actual_upg_option, 'N') = 'O') OR
          (NVL(l_enc_upg_option, 'N') = 'O')
        ) AND
        (l_bflow_method_code = 'PRIOR_ENTRY')
      )
   THEN
      IF
      --
      1 = 2
      --
      THEN
      xla_accounting_err_pkg.build_message
                                    (p_appli_s_name            => 'XLA'
                                    ,p_msg_name                => 'XLA_UPG_OVERRIDE_ADR_UNDEFINED'
                                    ,p_token_1                 => 'LINE_NUMBER'
                                    ,p_value_1                 => XLA_AE_LINES_PKG.g_LineNumber
                                    ,p_token_2                 => 'LINE_TYPE_NAME'
                                    ,p_value_2                 => XLA_AE_SOURCES_PKG.GetComponentName (
                                                                             l_component_type
                                                                            ,l_component_code
                                                                            ,l_component_type_code
                                                                            ,l_component_appl_id
                                                                            ,l_amb_context_code
                                                                            ,l_entity_code
                                                                            ,l_event_class_code
                                                                           )
                                    ,p_token_3                 => 'OWNER'
                                    ,p_value_3                 => xla_lookups_pkg.get_meaning(
                                                                          p_lookup_type     => 'XLA_OWNER_TYPE'
                                                                          ,p_lookup_code    => l_component_type_code
                                                                         )
                                    ,p_token_4                 => 'PRODUCT_NAME'
                                    ,p_value_4                 => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.application_name
                                    ,p_entity_id               => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.entity_id
                                    ,p_event_id                => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.event_id
                                    ,p_ledger_id               => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id
                                    ,p_ae_header_id            =>  NULL
                                       );

        IF (C_LEVEL_ERROR>= g_log_level) THEN
                 trace
                      (p_msg      => 'ERROR: XLA_UPG_OVERRIDE_ADR_UNDEFINED'
                      ,p_level    => C_LEVEL_ERROR
                      ,p_module   => l_log_module);
        END IF;
      END IF;
   END IF;
   --
   --
   ------------------------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- NOTE: XLA_AE_LINES_PKG.ValidateCurrentLine should NOT be generated if business flow method is
   -- Prior Entry.  Currently, the following code is always generated.
   ------------------------------------------------------------------------------------------------
   XLA_AE_LINES_PKG.ValidateCurrentLine;

   ------------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- Populated credit and debit amounts -- Need to generate this within IF <condition>
   ------------------------------------------------------------------------------------
   XLA_AE_LINES_PKG.SetDebitCreditAmounts;

   ----------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- Update journal entry status -- Need to generate this within IF <condition>
   ----------------------------------------------------------------------------------
   XLA_AE_JOURNAL_ENTRY_PKG.UpdateJournalEntryStatus
         (p_hdr_idx => g_array_event(p_event_id).array_value_num('header_index')
         ,p_balance_type_code => l_balance_type_code
         );

   -------------------------------------------------------------------------------------------
   -- 4262811 - Generate the Accrual Reversal lines
   -------------------------------------------------------------------------------------------
   BEGIN
      l_acc_rev_flag := XLA_AE_HEADER_PKG.g_rec_header_new.array_accrual_reversal_flag
                              (g_array_event(p_event_id).array_value_num('header_index'));
      IF l_acc_rev_flag IS NULL THEN
         l_acc_rev_flag := 'N';
      END IF;
   EXCEPTION
      WHEN OTHERS THEN
         l_acc_rev_flag := 'N';
   END;
   --
   IF (l_acc_rev_flag = 'Y') THEN

       -- 4645092  ------------------------------------------------------------------------------
       -- To allow MPA report to determine if it should generate report process
       XLA_ACCOUNTING_PKG.g_mpa_accrual_exists := 'Y';
       ------------------------------------------------------------------------------------------

       l_accrual_line_num := XLA_AE_LINES_PKG.g_LineNumber;
       XLA_AE_LINES_PKG.CopyLineInfo(l_accrual_line_num);
   -- added call to set_ccid to execute mapping  for secondary accrual reversal entries bug 7444204
   -- call ADRs
   -- Bug 4922099
   --
   IF ( (l_bflow_method_code <> 'PRIOR_ENTRY') OR
        (NVL(l_actual_upg_option, 'N') = 'O') OR
        (NVL(l_enc_upg_option, 'N') = 'O')
      )
   THEN
   NULL;
   --
   --
   
  l_ccid := AcctDerRule_7(
           p_application_id           => p_application_id
         , p_ae_header_id             => l_ae_header_id 
, p_source_11 => p_source_11
         , x_transaction_coa_id       => l_adr_transaction_coa_id
         , x_accounting_coa_id        => l_adr_accounting_coa_id
         , x_value_type_code          => l_adr_value_type_code
         , p_side                     => 'NA'
   );

   xla_ae_lines_pkg.set_ccid(
    p_code_combination_id          => l_ccid
  , p_value_type_code              => l_adr_value_type_code
  , p_transaction_coa_id           => l_adr_transaction_coa_id
  , p_accounting_coa_id            => l_adr_accounting_coa_id
  , p_adr_code                     => 'AP_INVOICE_DIST'
  , p_adr_type_code                => 'S'
  , p_component_type               => l_component_type
  , p_component_code               => l_component_code
  , p_component_type_code          => l_component_type_code
  , p_component_appl_id            => l_component_appl_id
  , p_amb_context_code             => l_amb_context_code
  , p_side                         => 'NA'
  );


   --
   --
   END IF;

       --
       -- Update the line information that should be overwritten
       --
       XLA_AE_LINES_PKG.set_ae_header_id(p_ae_header_id => p_event_id ,
                                         p_header_num   => 1);
       XLA_AE_LINES_PKG.g_rec_lines.array_header_num(XLA_AE_LINES_PKG.g_LineNumber)  :=1;

       XLA_AE_LINES_PKG.g_rec_lines.array_business_class_code(XLA_AE_LINES_PKG.g_LineNumber) := NULL; -- 4669271

       IF l_bflow_method_code <> 'NONE' THEN  -- 4655713b
          XLA_AE_LINES_PKG.g_rec_lines.array_reversal_code(XLA_AE_LINES_PKG.g_LineNumber) := CONCAT('MPA_',l_bflow_method_code);
       END IF;

      --
      -- Depending on the Reversal Method setup, do a switch side or changes sign for the amounts
      --
      IF (XLA_AE_JOURNAL_ENTRY_PKG.g_cache_ledgers_info.ledger_reversal_option = 'SIDE') THEN
          XLA_AE_LINES_PKG.g_rec_lines.array_natural_side_code(XLA_AE_LINES_PKG.g_LineNumber) :=  l_acc_rev_natural_side_code;
      ELSE
          ---------------------------------------------------------------------------------------------------
          -- 4262811a Switch Sign
          ---------------------------------------------------------------------------------------------------
          XLA_AE_LINES_PKG.g_rec_lines.array_switch_side_flag(XLA_AE_LINES_PKG.g_LineNumber) := 'N';  -- 5052518
          XLA_AE_LINES_PKG.g_rec_lines.array_ledger_amount(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_ledger_amount(XLA_AE_LINES_PKG.g_LineNumber) * -1;
          XLA_AE_LINES_PKG.g_rec_lines.array_entered_amount(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_entered_amount(XLA_AE_LINES_PKG.g_LineNumber) * -1;
          -- 5132302
          XLA_AE_LINES_PKG.g_rec_lines.array_bflow_applied_to_amt(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_bflow_applied_to_amt(XLA_AE_LINES_PKG.g_LineNumber) * -1;

      END IF;

      -- 4955764
      XLA_AE_LINES_PKG.g_rec_lines.array_gl_date(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_HEADER_PKG.g_rec_header_new.array_gl_date(g_array_event(p_event_id).array_value_num('acc_rev_header_index'));


      XLA_AE_LINES_PKG.ValidateCurrentLine;
      XLA_AE_LINES_PKG.SetDebitCreditAmounts;

      XLA_AE_JOURNAL_ENTRY_PKG.UpdateJournalEntryStatus
               (p_hdr_idx           => g_array_event(p_event_id).array_value_num('acc_rev_header_index')
               ,p_balance_type_code => l_balance_type_code);

   END IF;

   -----------------------------------------------------------------------------------------
   -- 4262811 Multiperiod Accounting
   -----------------------------------------------------------------------------------------
     -- No MPA option is assigned.


END IF;
END IF;
--

--
IF (C_LEVEL_PROCEDURE >= g_log_level) THEN
   trace
      (p_msg      => 'END of AcctLineType_66'
      ,p_level    => C_LEVEL_PROCEDURE
      ,p_module   => l_log_module);
END IF;
--
EXCEPTION
  WHEN xla_exceptions_pkg.application_exception THEN
      RAISE;
  WHEN OTHERS THEN
       xla_exceptions_pkg.raise_message
           (p_location => 'XLA_00200_AAD_S_000010_BC_PKG.AcctLineType_66');
END AcctLineType_66;
--

---------------------------------------
--
-- PRIVATE FUNCTION
--         AcctLineType_67
--
---------------------------------------
PROCEDURE AcctLineType_67 (
  p_application_id        IN NUMBER
 ,p_event_id              IN NUMBER
 ,p_calculate_acctd_flag  IN VARCHAR2
 ,p_calculate_g_l_flag    IN VARCHAR2
 ,p_actual_flag           IN OUT VARCHAR2
 ,p_balance_type_code     OUT VARCHAR2
 ,p_gain_or_loss_ref      OUT VARCHAR2
 
--Invoice Distribution Description
 , p_source_1            IN VARCHAR2
--Invoice Distribution Account
 , p_source_11            IN NUMBER
--Invoice Distribution Type
 , p_source_15            IN VARCHAR2
 , p_source_15_meaning    IN VARCHAR2
--Amount for Variance Amount
 , p_source_16            IN NUMBER
--Purchasing Encumbrance Option
 , p_source_17            IN VARCHAR2
 , p_source_17_meaning    IN VARCHAR2
--Accrue on Receipt Option
 , p_source_18            IN VARCHAR2
 , p_source_18_meaning    IN VARCHAR2
--Accounting Reversal Indicator
 , p_source_19            IN VARCHAR2
--Distribution Link Type
 , p_source_21            IN VARCHAR2
--Allocation to Main Distribution Identifier
 , p_source_23            IN NUMBER
--Invoice Identifier
 , p_source_24            IN NUMBER
--Business Flow Accounts Payable Application Identifier
 , p_source_25            IN NUMBER
--Business Flow Invoice Distribution Type
 , p_source_26            IN VARCHAR2
--Business Flow Invoice Entity Code
 , p_source_27            IN VARCHAR2
--Business Flow Invoice Distribution Identifier
 , p_source_28            IN NUMBER
--Business Flow Invoice Identifier
 , p_source_29            IN NUMBER
--Invoice Distribution Identifier
 , p_source_30            IN NUMBER
--Payables Encumbrance Upgrade Credit Account
 , p_source_31            IN NUMBER
--Payables Encumbrance Upgrade Credit Amount
 , p_source_32            IN NUMBER
--Invoice Currency Code
 , p_source_33            IN VARCHAR2
--Payables Encumbrance Upgrade Credit Base Amount
 , p_source_34            IN NUMBER
--Payables Encumbrance Upgrade Debit Account
 , p_source_35            IN NUMBER
--Payables Encumbrance Upgrade Debit Amount
 , p_source_36            IN NUMBER
--Payables Encumbrance Upgrade Debit Base Amount
 , p_source_37            IN NUMBER
--Payables Encumbrance Upgrade Option
 , p_source_38            IN VARCHAR2
--Invoice Exchange Date
 , p_source_39            IN DATE
--Invoice Exchange Rate
 , p_source_40            IN NUMBER
--Invoice Exchange Rate Type
 , p_source_41            IN VARCHAR2
--Variance Amount in Ledger Currency
 , p_source_42            IN NUMBER
--Deferred Accounting End Date
 , p_source_43            IN DATE
--Deferred Accounting Option
 , p_source_44            IN VARCHAR2
--Deferred Accounting Start Date
 , p_source_45            IN DATE
--Override Accounted Amount Indicator
 , p_source_46            IN VARCHAR2
 , p_source_46_meaning    IN VARCHAR2
--Invoice Supplier Identifier
 , p_source_47            IN NUMBER
--Invoice Supplier Site Identifier
 , p_source_48            IN NUMBER
--Third Party Type
 , p_source_49            IN VARCHAR2
--Parent Reversal Identifier
 , p_source_50            IN NUMBER
--Invoice Distribution Tax Line Identifier
 , p_source_52            IN NUMBER
--Invoice Distribution Tax Distribution Identifier from Tax
 , p_source_53            IN NUMBER
--Invoice Distribution Summary Tax Line Identifier
 , p_source_54            IN NUMBER
--Payables Upgrade Credit Encumbrance Type Identifier
 , p_source_55            IN NUMBER
--Payables Upgrade Debit Encumbrance Type Identifier
 , p_source_56            IN NUMBER
)
IS

l_component_type              VARCHAR2(80);
l_component_code              VARCHAR2(30);
l_component_type_code         VARCHAR2(1);
l_component_appl_id           INTEGER;
l_amb_context_code            VARCHAR2(30);
l_entity_code                 VARCHAR2(30);
l_event_class_code            VARCHAR2(30);
l_ae_header_id                NUMBER;
l_event_type_code             VARCHAR2(30);
l_line_definition_code        VARCHAR2(30);
l_line_definition_owner_code  VARCHAR2(1);
--
-- adr variables
l_segment                     VARCHAR2(30);
l_ccid                        NUMBER;
l_adr_transaction_coa_id      NUMBER;
l_adr_accounting_coa_id       NUMBER;
l_adr_flexfield_segment_code  VARCHAR2(30);
l_adr_flex_value_set_id       NUMBER;
l_adr_value_type_code         VARCHAR2(30);
l_adr_value_combination_id    NUMBER;
l_adr_value_segment_code      VARCHAR2(30);

l_bflow_method_code           VARCHAR2(30);  -- 4219869 Business Flow
l_bflow_class_code            VARCHAR2(30);  -- 4219869 Business Flow
l_inherit_desc_flag           VARCHAR2(1);   -- 4219869 Business Flow
l_budgetary_control_flag      VARCHAR2(1);   -- 4458381 Public Sector Enh

-- 4262811 Variables ------------------------------------------------------------------------------------------
l_entered_amt_idx             NUMBER;
l_accted_amt_idx              NUMBER;
l_acc_rev_flag                VARCHAR2(1);
l_accrual_line_num            NUMBER;
l_tmp_amt                     NUMBER;
l_acc_rev_natural_side_code   VARCHAR2(1);

l_num_entries                 NUMBER;
l_gl_dates                    xla_ae_journal_entry_pkg.t_array_date;
l_accted_amts                 xla_ae_journal_entry_pkg.t_array_num;
l_entered_amts                xla_ae_journal_entry_pkg.t_array_num;
l_period_names                xla_ae_journal_entry_pkg.t_array_V15L;
l_recog_line_1                NUMBER;
l_recog_line_2                NUMBER;

l_bflow_applied_to_amt_idx    NUMBER;                                -- 5132302
l_bflow_applied_to_amt        NUMBER;                                -- 5132302
l_bflow_applied_to_amts       xla_ae_journal_entry_pkg.t_array_num;  -- 5132302

l_event_id                    NUMBER;  -- To handle MPA header Description: xla_ae_header_pkg.SetHdrDescription

--l_rounding_ccy                VARCHAR2(15); -- To handle MPA rounding  4262811b
l_same_currency               BOOLEAN;        -- To handle MPA rounding  4262811b

---------------------------------------------------------------------------------------------------------------


--
-- bulk performance
--
l_balance_type_code           VARCHAR2(1);
l_rec_acct_attrs              XLA_AE_LINES_PKG.t_rec_acct_attrs;
l_log_module                  VARCHAR2(240);

--
-- Upgrade strategy
--
l_actual_upg_option           VARCHAR2(1);
l_enc_upg_option           VARCHAR2(1);

--
BEGIN
--
IF g_log_enabled THEN
      l_log_module := C_DEFAULT_MODULE||'.AcctLineType_67';
END IF;
--
IF (C_LEVEL_PROCEDURE >= g_log_level) THEN

      trace
         (p_msg      => 'BEGIN of AcctLineType_67'
         ,p_level    => C_LEVEL_PROCEDURE
         ,p_module   => l_log_module);

END IF;
--
l_component_type             := 'AMB_JLT';
l_component_code             := 'AP_TAX_AMT_VARIANCE_DM_ENC_DR';
l_component_type_code        := 'S';
l_component_appl_id          :=  200;
l_amb_context_code           := 'DEFAULT';
l_entity_code                := 'AP_INVOICES';
l_event_class_code           := 'DEBIT MEMOS';
l_event_type_code            := 'DEBIT MEMOS_ALL';
l_line_definition_owner_code := 'S';
l_line_definition_code       := 'ENC_DM_ALL';
--
l_balance_type_code          := 'E';
l_segment                     := NULL;
l_ccid                        := NULL;
l_adr_transaction_coa_id      := NULL;
l_adr_accounting_coa_id       := NULL;
l_adr_flexfield_segment_code  := NULL;
l_adr_flex_value_set_id       := NULL;
l_adr_value_type_code         := NULL;
l_adr_value_combination_id    := NULL;
l_adr_value_segment_code      := NULL;

l_bflow_method_code          := 'NONE';   -- 4219869 Business Flow
l_bflow_class_code           := 'AP_INV_ENCUM';    -- 4219869 Business Flow
l_inherit_desc_flag          := 'N';   -- 4219869 Business Flow
l_budgetary_control_flag     := 'Y';

l_bflow_applied_to_amt_idx   := NULL; -- 5132302
l_bflow_applied_to_amt       := NULL; -- 5132302
l_entered_amt_idx            := NULL;          -- 4262811
l_accted_amt_idx             := NULL;          -- 4262811
l_acc_rev_flag               := NULL;          -- 4262811
l_accrual_line_num           := NULL;          -- 4262811
l_tmp_amt                    := NULL;          -- 4262811
--
 
IF XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id = XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.ledger_id OR
    l_balance_type_code <> 'B' THEN
IF NVL(p_source_15,'
') =  'NONREC_TAX' AND 
p_source_16 IS NOT NULL AND 
NVL(p_source_17,'
') =  'Y' AND 
NVL(p_source_18,'
') <>  'Y'
 THEN 

   --
   XLA_AE_LINES_PKG.SetNewLine;

   p_balance_type_code          := l_balance_type_code;
   -- set the flag so later we will know whether the gain loss line needs to be created
   
   IF(l_balance_type_code = 'A' and p_actual_flag is null) THEN
     p_actual_flag :='A';
   END IF;

   --
   -- bulk performance
   --
   XLA_AE_LINES_PKG.set_ae_header_id (p_ae_header_id => p_event_id ,
                                      p_header_num   => 0); -- 4262811
   --
   -- set accounting line options
   --
   l_ae_header_id:= xla_ae_lines_pkg.SetAcctLineOption(
           p_natural_side_code          => 'D'
         , p_gain_or_loss_flag          => 'N'
         , p_gl_transfer_mode_code      => 'S'
         , p_acct_entry_type_code       => 'E'
         , p_switch_side_flag           => 'Y'
         , p_merge_duplicate_code       => 'N'
         );
   --
   l_acc_rev_natural_side_code := 'C';  -- 4262811
   -- 
   --
   -- set accounting line type info
   --
   xla_ae_lines_pkg.SetAcctLineType
      (p_component_type             => l_component_type
      ,p_event_type_code            => l_event_type_code
      ,p_line_definition_owner_code => l_line_definition_owner_code
      ,p_line_definition_code       => l_line_definition_code
      ,p_accounting_line_code       => l_component_code
      ,p_accounting_line_type_code  => l_component_type_code
      ,p_accounting_line_appl_id    => l_component_appl_id
      ,p_amb_context_code           => l_amb_context_code
      ,p_entity_code                => l_entity_code
      ,p_event_class_code           => l_event_class_code);
   --
   -- set accounting class
   --
   xla_ae_lines_pkg.SetAcctClass(
           p_accounting_class_code  => 'TAV'
         , p_ae_header_id           => l_ae_header_id
         );

   --
   -- set rounding class
   --
   XLA_AE_LINES_PKG.g_rec_lines.array_rounding_class(XLA_AE_LINES_PKG.g_LineNumber) :=
                      'TAV';

   --
   xla_ae_lines_pkg.g_rec_lines.array_calculate_acctd_flag(xla_ae_lines_pkg.g_LineNumber) := p_calculate_acctd_flag;
   xla_ae_lines_pkg.g_rec_lines.array_calculate_g_l_flag(xla_ae_lines_pkg.g_LineNumber) := p_calculate_g_l_flag;
   --
   -- bulk performance
   --
   XLA_AE_LINES_PKG.g_rec_lines.array_balance_type_code(XLA_AE_LINES_PKG.g_LineNumber) := l_balance_type_code;

   XLA_AE_LINES_PKG.g_rec_lines.array_ledger_id(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id;

   -- 4955764
   XLA_AE_LINES_PKG.g_rec_lines.array_gl_date(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_HEADER_PKG.g_rec_header_new.array_gl_date(g_array_event(p_event_id).array_value_num('header_index'));

   -- 4458381 Public Sector Enh
      XLA_AE_LINES_PKG.g_rec_lines.array_encumbrance_type_id(XLA_AE_LINES_PKG.g_LineNumber) := 1060;
   --
   -- set accounting attributes for the line type
   --
   l_entered_amt_idx := 23;
   l_accted_amt_idx  := 28;
   l_bflow_applied_to_amt_idx  := NULL;  -- 5132302
   l_rec_acct_attrs.array_acct_attr_code(1) := 'ACCOUNTING_REVERSAL_OPTION';
   l_rec_acct_attrs.array_char_value(1)  := p_source_19;
   l_rec_acct_attrs.array_acct_attr_code(2) := 'ALLOC_TO_APPLICATION_ID';
   l_rec_acct_attrs.array_num_value(2)  := 
xla_ae_sources_pkg.GetSystemSourceNum(
   p_source_code           => 'XLA_EVENT_APPL_ID'
 , p_source_type_code      => 'Y'
 , p_source_application_id =>  602
);
   l_rec_acct_attrs.array_acct_attr_code(3) := 'ALLOC_TO_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(3)  := p_source_21;
   l_rec_acct_attrs.array_acct_attr_code(4) := 'ALLOC_TO_ENTITY_CODE';
   l_rec_acct_attrs.array_char_value(4)  := 
xla_ae_sources_pkg.GetSystemSourceChar(
   p_source_code           => 'XLA_ENTITY_CODE'
 , p_source_type_code      => 'Y'
 , p_source_application_id =>  602
);
   l_rec_acct_attrs.array_acct_attr_code(5) := 'ALLOC_TO_FIRST_DIST_ID';
   l_rec_acct_attrs.array_num_value(5)  :=  to_char(p_source_23);
   l_rec_acct_attrs.array_acct_attr_code(6) := 'ALLOC_TO_FIRST_SYS_TRAN_ID';
   l_rec_acct_attrs.array_num_value(6)  :=  to_char(p_source_24);
   l_rec_acct_attrs.array_acct_attr_code(7) := 'APPLIED_TO_APPLICATION_ID';
   l_rec_acct_attrs.array_num_value(7)  := p_source_25;
   l_rec_acct_attrs.array_acct_attr_code(8) := 'APPLIED_TO_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(8)  := p_source_26;
   l_rec_acct_attrs.array_acct_attr_code(9) := 'APPLIED_TO_ENTITY_CODE';
   l_rec_acct_attrs.array_char_value(9)  := p_source_27;
   l_rec_acct_attrs.array_acct_attr_code(10) := 'APPLIED_TO_FIRST_DIST_ID';
   l_rec_acct_attrs.array_num_value(10)  :=  to_char(p_source_28);
   l_rec_acct_attrs.array_acct_attr_code(11) := 'APPLIED_TO_FIRST_SYS_TRAN_ID';
   l_rec_acct_attrs.array_num_value(11)  :=  to_char(p_source_29);
   l_rec_acct_attrs.array_acct_attr_code(12) := 'DISTRIBUTION_IDENTIFIER_1';
   l_rec_acct_attrs.array_num_value(12)  :=  to_char(p_source_30);
   l_rec_acct_attrs.array_acct_attr_code(13) := 'DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(13)  := p_source_21;
   l_rec_acct_attrs.array_acct_attr_code(14) := 'ENC_UPG_CR_CCID';
   l_rec_acct_attrs.array_num_value(14)  := p_source_31;
   l_rec_acct_attrs.array_acct_attr_code(15) := 'ENC_UPG_CR_ENTERED_AMT';
   l_rec_acct_attrs.array_num_value(15)  := p_source_32;
   l_rec_acct_attrs.array_acct_attr_code(16) := 'ENC_UPG_CR_ENTERED_CURR';
   l_rec_acct_attrs.array_char_value(16)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(17) := 'ENC_UPG_CR_LEDGER_AMT';
   l_rec_acct_attrs.array_num_value(17)  := p_source_34;
   l_rec_acct_attrs.array_acct_attr_code(18) := 'ENC_UPG_DR_CCID';
   l_rec_acct_attrs.array_num_value(18)  := p_source_35;
   l_rec_acct_attrs.array_acct_attr_code(19) := 'ENC_UPG_DR_ENTERED_AMT';
   l_rec_acct_attrs.array_num_value(19)  := p_source_36;
   l_rec_acct_attrs.array_acct_attr_code(20) := 'ENC_UPG_DR_ENTERED_CURR';
   l_rec_acct_attrs.array_char_value(20)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(21) := 'ENC_UPG_DR_LEDGER_AMT';
   l_rec_acct_attrs.array_num_value(21)  := p_source_37;
   l_rec_acct_attrs.array_acct_attr_code(22) := 'ENC_UPG_OPTION';
   l_rec_acct_attrs.array_char_value(22)  := p_source_38;
   l_rec_acct_attrs.array_acct_attr_code(23) := 'ENTERED_CURRENCY_AMOUNT';
   l_rec_acct_attrs.array_num_value(23)  := p_source_16;
   l_rec_acct_attrs.array_acct_attr_code(24) := 'ENTERED_CURRENCY_CODE';
   l_rec_acct_attrs.array_char_value(24)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(25) := 'EXCHANGE_DATE';
   l_rec_acct_attrs.array_date_value(25)  := p_source_39;
   l_rec_acct_attrs.array_acct_attr_code(26) := 'EXCHANGE_RATE';
   l_rec_acct_attrs.array_num_value(26)  := p_source_40;
   l_rec_acct_attrs.array_acct_attr_code(27) := 'EXCHANGE_RATE_TYPE';
   l_rec_acct_attrs.array_char_value(27)  := p_source_41;
   l_rec_acct_attrs.array_acct_attr_code(28) := 'LEDGER_AMOUNT';
   l_rec_acct_attrs.array_num_value(28)  := p_source_42;
   l_rec_acct_attrs.array_acct_attr_code(29) := 'MULTIPERIOD_END_DATE';
   l_rec_acct_attrs.array_date_value(29)  := p_source_43;
   l_rec_acct_attrs.array_acct_attr_code(30) := 'MULTIPERIOD_OPTION';
   l_rec_acct_attrs.array_char_value(30)  := p_source_44;
   l_rec_acct_attrs.array_acct_attr_code(31) := 'MULTIPERIOD_START_DATE';
   l_rec_acct_attrs.array_date_value(31)  := p_source_45;
   l_rec_acct_attrs.array_acct_attr_code(32) := 'OVERRIDE_ACCTD_AMT_FLAG';
   l_rec_acct_attrs.array_char_value(32)  := p_source_46;
   l_rec_acct_attrs.array_acct_attr_code(33) := 'PARTY_ID';
   l_rec_acct_attrs.array_num_value(33)  := p_source_47;
   l_rec_acct_attrs.array_acct_attr_code(34) := 'PARTY_SITE_ID';
   l_rec_acct_attrs.array_num_value(34)  := p_source_48;
   l_rec_acct_attrs.array_acct_attr_code(35) := 'PARTY_TYPE';
   l_rec_acct_attrs.array_char_value(35)  := p_source_49;
   l_rec_acct_attrs.array_acct_attr_code(36) := 'REVERSED_DISTRIBUTION_ID1';
   l_rec_acct_attrs.array_num_value(36)  :=  to_char(p_source_50);
   l_rec_acct_attrs.array_acct_attr_code(37) := 'REVERSED_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(37)  := p_source_21;
   l_rec_acct_attrs.array_acct_attr_code(38) := 'TAX_LINE_REF_ID';
   l_rec_acct_attrs.array_num_value(38)  := p_source_52;
   l_rec_acct_attrs.array_acct_attr_code(39) := 'TAX_REC_NREC_DIST_REF_ID';
   l_rec_acct_attrs.array_num_value(39)  := p_source_53;
   l_rec_acct_attrs.array_acct_attr_code(40) := 'TAX_SUMMARY_LINE_REF_ID';
   l_rec_acct_attrs.array_num_value(40)  := p_source_54;
   l_rec_acct_attrs.array_acct_attr_code(41) := 'UPG_CR_ENC_TYPE_ID';
   l_rec_acct_attrs.array_num_value(41)  := p_source_55;
   l_rec_acct_attrs.array_acct_attr_code(42) := 'UPG_DR_ENC_TYPE_ID';
   l_rec_acct_attrs.array_num_value(42)  := p_source_56;

   XLA_AE_LINES_PKG.SetLineAcctAttrs(l_rec_acct_attrs);
   p_gain_or_loss_ref  := XLA_AE_LINES_PKG.g_rec_lines.array_gain_or_loss_ref(XLA_AE_LINES_PKG.g_LineNumber);

   ---------------------------------------------------------------------------------------------------------------
   -- 4336173 -- assign Business Flow Class (replace code in xla_ae_lines_pkg.Business_Flow_Validation)
   ---------------------------------------------------------------------------------------------------------------
   XLA_AE_LINES_PKG.g_rec_lines.array_business_class_code(XLA_AE_LINES_PKG.g_LineNumber) := l_bflow_class_code;

   l_actual_upg_option  := XLA_AE_LINES_PKG.g_rec_lines.array_actual_upg_option(XLA_AE_LINES_PKG.g_LineNumber);
   l_enc_upg_option     := XLA_AE_LINES_PKG.g_rec_lines.array_enc_upg_option(XLA_AE_LINES_PKG.g_LineNumber);

   IF xla_accounting_cache_pkg.GetValueChar
         (p_source_code         => 'LEDGER_CATEGORY_CODE'
         ,p_target_ledger_id    => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id) IN ('PRIMARY','ALC')
   AND l_bflow_method_code = 'PRIOR_ENTRY'
--   AND (l_actual_upg_option = 'Y' OR l_enc_upg_option = 'Y') Bug 4922099
   AND ( (NVL(l_actual_upg_option, 'N') IN ('Y', 'O')) OR
         (NVL(l_enc_upg_option, 'N') IN ('Y', 'O'))
       )
   THEN
         xla_ae_lines_pkg.BflowUpgEntry
           (p_business_method_code    => l_bflow_method_code
           ,p_business_class_code     => l_bflow_class_code
           ,p_balance_type            => l_balance_type_code);
   ELSE
      NULL;
-- No business flow processing for business flow method of NONE.
   END IF;

   --
   -- call analytical criteria
   --
   
   --
   -- call description
   --
   
xla_ae_lines_pkg.SetLineDescription(
   p_ae_header_id => l_ae_header_id
  ,p_description  => Description_2 (
     p_application_id         => p_application_id
   , p_ae_header_id           => l_ae_header_id 
, p_source_1 => p_source_1
   )
);


   --
   -- call ADRs
   -- Bug 4922099
   --
   IF ( (l_bflow_method_code <> 'PRIOR_ENTRY') OR
        (NVL(l_actual_upg_option, 'N') = 'O') OR
        (NVL(l_enc_upg_option, 'N') = 'O')
      )
   THEN
   NULL;
   --
   --
   
  l_ccid := AcctDerRule_7(
           p_application_id           => p_application_id
         , p_ae_header_id             => l_ae_header_id 
, p_source_11 => p_source_11
         , x_transaction_coa_id       => l_adr_transaction_coa_id
         , x_accounting_coa_id        => l_adr_accounting_coa_id
         , x_value_type_code          => l_adr_value_type_code
         , p_side                     => 'NA'
   );

   xla_ae_lines_pkg.set_ccid(
    p_code_combination_id          => l_ccid
  , p_value_type_code              => l_adr_value_type_code
  , p_transaction_coa_id           => l_adr_transaction_coa_id
  , p_accounting_coa_id            => l_adr_accounting_coa_id
  , p_adr_code                     => 'AP_INVOICE_DIST'
  , p_adr_type_code                => 'S'
  , p_component_type               => l_component_type
  , p_component_code               => l_component_code
  , p_component_type_code          => l_component_type_code
  , p_component_appl_id            => l_component_appl_id
  , p_amb_context_code             => l_amb_context_code
  , p_side                         => 'NA'
  );


   --
   --
   END IF;
   --
   -- Bug 4922099
   IF ( ( (NVL(l_actual_upg_option, 'N') = 'O') OR
          (NVL(l_enc_upg_option, 'N') = 'O')
        ) AND
        (l_bflow_method_code = 'PRIOR_ENTRY')
      )
   THEN
      IF
      --
      1 = 2
      --
      THEN
      xla_accounting_err_pkg.build_message
                                    (p_appli_s_name            => 'XLA'
                                    ,p_msg_name                => 'XLA_UPG_OVERRIDE_ADR_UNDEFINED'
                                    ,p_token_1                 => 'LINE_NUMBER'
                                    ,p_value_1                 => XLA_AE_LINES_PKG.g_LineNumber
                                    ,p_token_2                 => 'LINE_TYPE_NAME'
                                    ,p_value_2                 => XLA_AE_SOURCES_PKG.GetComponentName (
                                                                             l_component_type
                                                                            ,l_component_code
                                                                            ,l_component_type_code
                                                                            ,l_component_appl_id
                                                                            ,l_amb_context_code
                                                                            ,l_entity_code
                                                                            ,l_event_class_code
                                                                           )
                                    ,p_token_3                 => 'OWNER'
                                    ,p_value_3                 => xla_lookups_pkg.get_meaning(
                                                                          p_lookup_type     => 'XLA_OWNER_TYPE'
                                                                          ,p_lookup_code    => l_component_type_code
                                                                         )
                                    ,p_token_4                 => 'PRODUCT_NAME'
                                    ,p_value_4                 => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.application_name
                                    ,p_entity_id               => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.entity_id
                                    ,p_event_id                => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.event_id
                                    ,p_ledger_id               => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id
                                    ,p_ae_header_id            =>  NULL
                                       );

        IF (C_LEVEL_ERROR>= g_log_level) THEN
                 trace
                      (p_msg      => 'ERROR: XLA_UPG_OVERRIDE_ADR_UNDEFINED'
                      ,p_level    => C_LEVEL_ERROR
                      ,p_module   => l_log_module);
        END IF;
      END IF;
   END IF;
   --
   --
   ------------------------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- NOTE: XLA_AE_LINES_PKG.ValidateCurrentLine should NOT be generated if business flow method is
   -- Prior Entry.  Currently, the following code is always generated.
   ------------------------------------------------------------------------------------------------
   XLA_AE_LINES_PKG.ValidateCurrentLine;

   ------------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- Populated credit and debit amounts -- Need to generate this within IF <condition>
   ------------------------------------------------------------------------------------
   XLA_AE_LINES_PKG.SetDebitCreditAmounts;

   ----------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- Update journal entry status -- Need to generate this within IF <condition>
   ----------------------------------------------------------------------------------
   XLA_AE_JOURNAL_ENTRY_PKG.UpdateJournalEntryStatus
         (p_hdr_idx => g_array_event(p_event_id).array_value_num('header_index')
         ,p_balance_type_code => l_balance_type_code
         );

   -------------------------------------------------------------------------------------------
   -- 4262811 - Generate the Accrual Reversal lines
   -------------------------------------------------------------------------------------------
   BEGIN
      l_acc_rev_flag := XLA_AE_HEADER_PKG.g_rec_header_new.array_accrual_reversal_flag
                              (g_array_event(p_event_id).array_value_num('header_index'));
      IF l_acc_rev_flag IS NULL THEN
         l_acc_rev_flag := 'N';
      END IF;
   EXCEPTION
      WHEN OTHERS THEN
         l_acc_rev_flag := 'N';
   END;
   --
   IF (l_acc_rev_flag = 'Y') THEN

       -- 4645092  ------------------------------------------------------------------------------
       -- To allow MPA report to determine if it should generate report process
       XLA_ACCOUNTING_PKG.g_mpa_accrual_exists := 'Y';
       ------------------------------------------------------------------------------------------

       l_accrual_line_num := XLA_AE_LINES_PKG.g_LineNumber;
       XLA_AE_LINES_PKG.CopyLineInfo(l_accrual_line_num);
   -- added call to set_ccid to execute mapping  for secondary accrual reversal entries bug 7444204
   -- call ADRs
   -- Bug 4922099
   --
   IF ( (l_bflow_method_code <> 'PRIOR_ENTRY') OR
        (NVL(l_actual_upg_option, 'N') = 'O') OR
        (NVL(l_enc_upg_option, 'N') = 'O')
      )
   THEN
   NULL;
   --
   --
   
  l_ccid := AcctDerRule_7(
           p_application_id           => p_application_id
         , p_ae_header_id             => l_ae_header_id 
, p_source_11 => p_source_11
         , x_transaction_coa_id       => l_adr_transaction_coa_id
         , x_accounting_coa_id        => l_adr_accounting_coa_id
         , x_value_type_code          => l_adr_value_type_code
         , p_side                     => 'NA'
   );

   xla_ae_lines_pkg.set_ccid(
    p_code_combination_id          => l_ccid
  , p_value_type_code              => l_adr_value_type_code
  , p_transaction_coa_id           => l_adr_transaction_coa_id
  , p_accounting_coa_id            => l_adr_accounting_coa_id
  , p_adr_code                     => 'AP_INVOICE_DIST'
  , p_adr_type_code                => 'S'
  , p_component_type               => l_component_type
  , p_component_code               => l_component_code
  , p_component_type_code          => l_component_type_code
  , p_component_appl_id            => l_component_appl_id
  , p_amb_context_code             => l_amb_context_code
  , p_side                         => 'NA'
  );


   --
   --
   END IF;

       --
       -- Update the line information that should be overwritten
       --
       XLA_AE_LINES_PKG.set_ae_header_id(p_ae_header_id => p_event_id ,
                                         p_header_num   => 1);
       XLA_AE_LINES_PKG.g_rec_lines.array_header_num(XLA_AE_LINES_PKG.g_LineNumber)  :=1;

       XLA_AE_LINES_PKG.g_rec_lines.array_business_class_code(XLA_AE_LINES_PKG.g_LineNumber) := NULL; -- 4669271

       IF l_bflow_method_code <> 'NONE' THEN  -- 4655713b
          XLA_AE_LINES_PKG.g_rec_lines.array_reversal_code(XLA_AE_LINES_PKG.g_LineNumber) := CONCAT('MPA_',l_bflow_method_code);
       END IF;

      --
      -- Depending on the Reversal Method setup, do a switch side or changes sign for the amounts
      --
      IF (XLA_AE_JOURNAL_ENTRY_PKG.g_cache_ledgers_info.ledger_reversal_option = 'SIDE') THEN
          XLA_AE_LINES_PKG.g_rec_lines.array_natural_side_code(XLA_AE_LINES_PKG.g_LineNumber) :=  l_acc_rev_natural_side_code;
      ELSE
          ---------------------------------------------------------------------------------------------------
          -- 4262811a Switch Sign
          ---------------------------------------------------------------------------------------------------
          XLA_AE_LINES_PKG.g_rec_lines.array_switch_side_flag(XLA_AE_LINES_PKG.g_LineNumber) := 'N';  -- 5052518
          XLA_AE_LINES_PKG.g_rec_lines.array_ledger_amount(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_ledger_amount(XLA_AE_LINES_PKG.g_LineNumber) * -1;
          XLA_AE_LINES_PKG.g_rec_lines.array_entered_amount(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_entered_amount(XLA_AE_LINES_PKG.g_LineNumber) * -1;
          -- 5132302
          XLA_AE_LINES_PKG.g_rec_lines.array_bflow_applied_to_amt(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_bflow_applied_to_amt(XLA_AE_LINES_PKG.g_LineNumber) * -1;

      END IF;

      -- 4955764
      XLA_AE_LINES_PKG.g_rec_lines.array_gl_date(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_HEADER_PKG.g_rec_header_new.array_gl_date(g_array_event(p_event_id).array_value_num('acc_rev_header_index'));


      XLA_AE_LINES_PKG.ValidateCurrentLine;
      XLA_AE_LINES_PKG.SetDebitCreditAmounts;

      XLA_AE_JOURNAL_ENTRY_PKG.UpdateJournalEntryStatus
               (p_hdr_idx           => g_array_event(p_event_id).array_value_num('acc_rev_header_index')
               ,p_balance_type_code => l_balance_type_code);

   END IF;

   -----------------------------------------------------------------------------------------
   -- 4262811 Multiperiod Accounting
   -----------------------------------------------------------------------------------------
     -- No MPA option is assigned.


END IF;
END IF;
--

--
IF (C_LEVEL_PROCEDURE >= g_log_level) THEN
   trace
      (p_msg      => 'END of AcctLineType_67'
      ,p_level    => C_LEVEL_PROCEDURE
      ,p_module   => l_log_module);
END IF;
--
EXCEPTION
  WHEN xla_exceptions_pkg.application_exception THEN
      RAISE;
  WHEN OTHERS THEN
       xla_exceptions_pkg.raise_message
           (p_location => 'XLA_00200_AAD_S_000010_BC_PKG.AcctLineType_67');
END AcctLineType_67;
--

---------------------------------------
--
-- PRIVATE FUNCTION
--         AcctLineType_68
--
---------------------------------------
PROCEDURE AcctLineType_68 (
  p_application_id        IN NUMBER
 ,p_event_id              IN NUMBER
 ,p_calculate_acctd_flag  IN VARCHAR2
 ,p_calculate_g_l_flag    IN VARCHAR2
 ,p_actual_flag           IN OUT VARCHAR2
 ,p_balance_type_code     OUT VARCHAR2
 ,p_gain_or_loss_ref      OUT VARCHAR2
 
--Invoice Distribution Description
 , p_source_1            IN VARCHAR2
--Invoice Distribution Account
 , p_source_11            IN NUMBER
--Invoice Distribution Type
 , p_source_15            IN VARCHAR2
 , p_source_15_meaning    IN VARCHAR2
--Amount for Variance Amount
 , p_source_16            IN NUMBER
--Purchasing Encumbrance Option
 , p_source_17            IN VARCHAR2
 , p_source_17_meaning    IN VARCHAR2
--Accrue on Receipt Option
 , p_source_18            IN VARCHAR2
 , p_source_18_meaning    IN VARCHAR2
--Accounting Reversal Indicator
 , p_source_19            IN VARCHAR2
--Distribution Link Type
 , p_source_21            IN VARCHAR2
--Allocation to Main Distribution Identifier
 , p_source_23            IN NUMBER
--Invoice Identifier
 , p_source_24            IN NUMBER
--Business Flow Accounts Payable Application Identifier
 , p_source_25            IN NUMBER
--Business Flow Invoice Distribution Type
 , p_source_26            IN VARCHAR2
--Business Flow Invoice Entity Code
 , p_source_27            IN VARCHAR2
--Business Flow Invoice Distribution Identifier
 , p_source_28            IN NUMBER
--Business Flow Invoice Identifier
 , p_source_29            IN NUMBER
--Invoice Distribution Identifier
 , p_source_30            IN NUMBER
--Payables Encumbrance Upgrade Credit Account
 , p_source_31            IN NUMBER
--Payables Encumbrance Upgrade Credit Amount
 , p_source_32            IN NUMBER
--Invoice Currency Code
 , p_source_33            IN VARCHAR2
--Payables Encumbrance Upgrade Credit Base Amount
 , p_source_34            IN NUMBER
--Payables Encumbrance Upgrade Debit Account
 , p_source_35            IN NUMBER
--Payables Encumbrance Upgrade Debit Amount
 , p_source_36            IN NUMBER
--Payables Encumbrance Upgrade Debit Base Amount
 , p_source_37            IN NUMBER
--Payables Encumbrance Upgrade Option
 , p_source_38            IN VARCHAR2
--Invoice Exchange Date
 , p_source_39            IN DATE
--Invoice Exchange Rate
 , p_source_40            IN NUMBER
--Invoice Exchange Rate Type
 , p_source_41            IN VARCHAR2
--Variance Amount in Ledger Currency
 , p_source_42            IN NUMBER
--Deferred Accounting End Date
 , p_source_43            IN DATE
--Deferred Accounting Option
 , p_source_44            IN VARCHAR2
--Deferred Accounting Start Date
 , p_source_45            IN DATE
--Override Accounted Amount Indicator
 , p_source_46            IN VARCHAR2
 , p_source_46_meaning    IN VARCHAR2
--Invoice Supplier Identifier
 , p_source_47            IN NUMBER
--Invoice Supplier Site Identifier
 , p_source_48            IN NUMBER
--Third Party Type
 , p_source_49            IN VARCHAR2
--Parent Reversal Identifier
 , p_source_50            IN NUMBER
--Invoice Distribution Statistical Amount
 , p_source_51            IN NUMBER
--Invoice Distribution Tax Line Identifier
 , p_source_52            IN NUMBER
--Invoice Distribution Tax Distribution Identifier from Tax
 , p_source_53            IN NUMBER
--Invoice Distribution Summary Tax Line Identifier
 , p_source_54            IN NUMBER
--Payables Upgrade Credit Encumbrance Type Identifier
 , p_source_55            IN NUMBER
--Payables Upgrade Debit Encumbrance Type Identifier
 , p_source_56            IN NUMBER
--Invoice Distribution Amount
 , p_source_57            IN NUMBER
)
IS

l_component_type              VARCHAR2(80);
l_component_code              VARCHAR2(30);
l_component_type_code         VARCHAR2(1);
l_component_appl_id           INTEGER;
l_amb_context_code            VARCHAR2(30);
l_entity_code                 VARCHAR2(30);
l_event_class_code            VARCHAR2(30);
l_ae_header_id                NUMBER;
l_event_type_code             VARCHAR2(30);
l_line_definition_code        VARCHAR2(30);
l_line_definition_owner_code  VARCHAR2(1);
--
-- adr variables
l_segment                     VARCHAR2(30);
l_ccid                        NUMBER;
l_adr_transaction_coa_id      NUMBER;
l_adr_accounting_coa_id       NUMBER;
l_adr_flexfield_segment_code  VARCHAR2(30);
l_adr_flex_value_set_id       NUMBER;
l_adr_value_type_code         VARCHAR2(30);
l_adr_value_combination_id    NUMBER;
l_adr_value_segment_code      VARCHAR2(30);

l_bflow_method_code           VARCHAR2(30);  -- 4219869 Business Flow
l_bflow_class_code            VARCHAR2(30);  -- 4219869 Business Flow
l_inherit_desc_flag           VARCHAR2(1);   -- 4219869 Business Flow
l_budgetary_control_flag      VARCHAR2(1);   -- 4458381 Public Sector Enh

-- 4262811 Variables ------------------------------------------------------------------------------------------
l_entered_amt_idx             NUMBER;
l_accted_amt_idx              NUMBER;
l_acc_rev_flag                VARCHAR2(1);
l_accrual_line_num            NUMBER;
l_tmp_amt                     NUMBER;
l_acc_rev_natural_side_code   VARCHAR2(1);

l_num_entries                 NUMBER;
l_gl_dates                    xla_ae_journal_entry_pkg.t_array_date;
l_accted_amts                 xla_ae_journal_entry_pkg.t_array_num;
l_entered_amts                xla_ae_journal_entry_pkg.t_array_num;
l_period_names                xla_ae_journal_entry_pkg.t_array_V15L;
l_recog_line_1                NUMBER;
l_recog_line_2                NUMBER;

l_bflow_applied_to_amt_idx    NUMBER;                                -- 5132302
l_bflow_applied_to_amt        NUMBER;                                -- 5132302
l_bflow_applied_to_amts       xla_ae_journal_entry_pkg.t_array_num;  -- 5132302

l_event_id                    NUMBER;  -- To handle MPA header Description: xla_ae_header_pkg.SetHdrDescription

--l_rounding_ccy                VARCHAR2(15); -- To handle MPA rounding  4262811b
l_same_currency               BOOLEAN;        -- To handle MPA rounding  4262811b

---------------------------------------------------------------------------------------------------------------


--
-- bulk performance
--
l_balance_type_code           VARCHAR2(1);
l_rec_acct_attrs              XLA_AE_LINES_PKG.t_rec_acct_attrs;
l_log_module                  VARCHAR2(240);

--
-- Upgrade strategy
--
l_actual_upg_option           VARCHAR2(1);
l_enc_upg_option           VARCHAR2(1);

--
BEGIN
--
IF g_log_enabled THEN
      l_log_module := C_DEFAULT_MODULE||'.AcctLineType_68';
END IF;
--
IF (C_LEVEL_PROCEDURE >= g_log_level) THEN

      trace
         (p_msg      => 'BEGIN of AcctLineType_68'
         ,p_level    => C_LEVEL_PROCEDURE
         ,p_module   => l_log_module);

END IF;
--
l_component_type             := 'AMB_JLT';
l_component_code             := 'AP_TAX_AMT_VARIANCE_INV_ENC_DR';
l_component_type_code        := 'S';
l_component_appl_id          :=  200;
l_amb_context_code           := 'DEFAULT';
l_entity_code                := 'AP_INVOICES';
l_event_class_code           := 'INVOICES';
l_event_type_code            := 'INVOICES_ALL';
l_line_definition_owner_code := 'S';
l_line_definition_code       := 'ENC_INVOICES_ALL';
--
l_balance_type_code          := 'E';
l_segment                     := NULL;
l_ccid                        := NULL;
l_adr_transaction_coa_id      := NULL;
l_adr_accounting_coa_id       := NULL;
l_adr_flexfield_segment_code  := NULL;
l_adr_flex_value_set_id       := NULL;
l_adr_value_type_code         := NULL;
l_adr_value_combination_id    := NULL;
l_adr_value_segment_code      := NULL;

l_bflow_method_code          := 'NONE';   -- 4219869 Business Flow
l_bflow_class_code           := 'AP_INV_ENCUM';    -- 4219869 Business Flow
l_inherit_desc_flag          := 'N';   -- 4219869 Business Flow
l_budgetary_control_flag     := 'Y';

l_bflow_applied_to_amt_idx   := NULL; -- 5132302
l_bflow_applied_to_amt       := NULL; -- 5132302
l_entered_amt_idx            := NULL;          -- 4262811
l_accted_amt_idx             := NULL;          -- 4262811
l_acc_rev_flag               := NULL;          -- 4262811
l_accrual_line_num           := NULL;          -- 4262811
l_tmp_amt                    := NULL;          -- 4262811
--
 
IF XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id = XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.ledger_id OR
    l_balance_type_code <> 'B' THEN
IF NVL(p_source_15,'
') =  'NONREC_TAX' AND 
NVL(p_source_17,'
') =  'Y' AND 
p_source_16 IS NOT NULL AND 
NVL(p_source_18,'
') <>  'Y'
 THEN 

   --
   XLA_AE_LINES_PKG.SetNewLine;

   p_balance_type_code          := l_balance_type_code;
   -- set the flag so later we will know whether the gain loss line needs to be created
   
   IF(l_balance_type_code = 'A' and p_actual_flag is null) THEN
     p_actual_flag :='A';
   END IF;

   --
   -- bulk performance
   --
   XLA_AE_LINES_PKG.set_ae_header_id (p_ae_header_id => p_event_id ,
                                      p_header_num   => 0); -- 4262811
   --
   -- set accounting line options
   --
   l_ae_header_id:= xla_ae_lines_pkg.SetAcctLineOption(
           p_natural_side_code          => 'D'
         , p_gain_or_loss_flag          => 'N'
         , p_gl_transfer_mode_code      => 'S'
         , p_acct_entry_type_code       => 'E'
         , p_switch_side_flag           => 'Y'
         , p_merge_duplicate_code       => 'N'
         );
   --
   l_acc_rev_natural_side_code := 'C';  -- 4262811
   -- 
   --
   -- set accounting line type info
   --
   xla_ae_lines_pkg.SetAcctLineType
      (p_component_type             => l_component_type
      ,p_event_type_code            => l_event_type_code
      ,p_line_definition_owner_code => l_line_definition_owner_code
      ,p_line_definition_code       => l_line_definition_code
      ,p_accounting_line_code       => l_component_code
      ,p_accounting_line_type_code  => l_component_type_code
      ,p_accounting_line_appl_id    => l_component_appl_id
      ,p_amb_context_code           => l_amb_context_code
      ,p_entity_code                => l_entity_code
      ,p_event_class_code           => l_event_class_code);
   --
   -- set accounting class
   --
   xla_ae_lines_pkg.SetAcctClass(
           p_accounting_class_code  => 'TAV'
         , p_ae_header_id           => l_ae_header_id
         );

   --
   -- set rounding class
   --
   XLA_AE_LINES_PKG.g_rec_lines.array_rounding_class(XLA_AE_LINES_PKG.g_LineNumber) :=
                      'TAV';

   --
   xla_ae_lines_pkg.g_rec_lines.array_calculate_acctd_flag(xla_ae_lines_pkg.g_LineNumber) := p_calculate_acctd_flag;
   xla_ae_lines_pkg.g_rec_lines.array_calculate_g_l_flag(xla_ae_lines_pkg.g_LineNumber) := p_calculate_g_l_flag;
   --
   -- bulk performance
   --
   XLA_AE_LINES_PKG.g_rec_lines.array_balance_type_code(XLA_AE_LINES_PKG.g_LineNumber) := l_balance_type_code;

   XLA_AE_LINES_PKG.g_rec_lines.array_ledger_id(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id;

   -- 4955764
   XLA_AE_LINES_PKG.g_rec_lines.array_gl_date(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_HEADER_PKG.g_rec_header_new.array_gl_date(g_array_event(p_event_id).array_value_num('header_index'));

   -- 4458381 Public Sector Enh
      XLA_AE_LINES_PKG.g_rec_lines.array_encumbrance_type_id(XLA_AE_LINES_PKG.g_LineNumber) := 1060;
   --
   -- set accounting attributes for the line type
   --
   l_entered_amt_idx := 24;
   l_accted_amt_idx  := 29;
   l_bflow_applied_to_amt_idx  := 7;  -- 5132302
   l_rec_acct_attrs.array_acct_attr_code(1) := 'ACCOUNTING_REVERSAL_OPTION';
   l_rec_acct_attrs.array_char_value(1)  := p_source_19;
   l_rec_acct_attrs.array_acct_attr_code(2) := 'ALLOC_TO_APPLICATION_ID';
   l_rec_acct_attrs.array_num_value(2)  := 
xla_ae_sources_pkg.GetSystemSourceNum(
   p_source_code           => 'XLA_EVENT_APPL_ID'
 , p_source_type_code      => 'Y'
 , p_source_application_id =>  602
);
   l_rec_acct_attrs.array_acct_attr_code(3) := 'ALLOC_TO_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(3)  := p_source_21;
   l_rec_acct_attrs.array_acct_attr_code(4) := 'ALLOC_TO_ENTITY_CODE';
   l_rec_acct_attrs.array_char_value(4)  := 
xla_ae_sources_pkg.GetSystemSourceChar(
   p_source_code           => 'XLA_ENTITY_CODE'
 , p_source_type_code      => 'Y'
 , p_source_application_id =>  602
);
   l_rec_acct_attrs.array_acct_attr_code(5) := 'ALLOC_TO_FIRST_DIST_ID';
   l_rec_acct_attrs.array_num_value(5)  :=  to_char(p_source_23);
   l_rec_acct_attrs.array_acct_attr_code(6) := 'ALLOC_TO_FIRST_SYS_TRAN_ID';
   l_rec_acct_attrs.array_num_value(6)  :=  to_char(p_source_24);
   l_rec_acct_attrs.array_acct_attr_code(7) := 'APPLIED_TO_AMOUNT';
   l_rec_acct_attrs.array_num_value(7)  := p_source_57;
   l_rec_acct_attrs.array_acct_attr_code(8) := 'APPLIED_TO_APPLICATION_ID';
   l_rec_acct_attrs.array_num_value(8)  := p_source_25;
   l_rec_acct_attrs.array_acct_attr_code(9) := 'APPLIED_TO_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(9)  := p_source_26;
   l_rec_acct_attrs.array_acct_attr_code(10) := 'APPLIED_TO_ENTITY_CODE';
   l_rec_acct_attrs.array_char_value(10)  := p_source_27;
   l_rec_acct_attrs.array_acct_attr_code(11) := 'APPLIED_TO_FIRST_DIST_ID';
   l_rec_acct_attrs.array_num_value(11)  :=  to_char(p_source_28);
   l_rec_acct_attrs.array_acct_attr_code(12) := 'APPLIED_TO_FIRST_SYS_TRAN_ID';
   l_rec_acct_attrs.array_num_value(12)  :=  to_char(p_source_29);
   l_rec_acct_attrs.array_acct_attr_code(13) := 'DISTRIBUTION_IDENTIFIER_1';
   l_rec_acct_attrs.array_num_value(13)  :=  to_char(p_source_30);
   l_rec_acct_attrs.array_acct_attr_code(14) := 'DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(14)  := p_source_21;
   l_rec_acct_attrs.array_acct_attr_code(15) := 'ENC_UPG_CR_CCID';
   l_rec_acct_attrs.array_num_value(15)  := p_source_31;
   l_rec_acct_attrs.array_acct_attr_code(16) := 'ENC_UPG_CR_ENTERED_AMT';
   l_rec_acct_attrs.array_num_value(16)  := p_source_32;
   l_rec_acct_attrs.array_acct_attr_code(17) := 'ENC_UPG_CR_ENTERED_CURR';
   l_rec_acct_attrs.array_char_value(17)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(18) := 'ENC_UPG_CR_LEDGER_AMT';
   l_rec_acct_attrs.array_num_value(18)  := p_source_34;
   l_rec_acct_attrs.array_acct_attr_code(19) := 'ENC_UPG_DR_CCID';
   l_rec_acct_attrs.array_num_value(19)  := p_source_35;
   l_rec_acct_attrs.array_acct_attr_code(20) := 'ENC_UPG_DR_ENTERED_AMT';
   l_rec_acct_attrs.array_num_value(20)  := p_source_36;
   l_rec_acct_attrs.array_acct_attr_code(21) := 'ENC_UPG_DR_ENTERED_CURR';
   l_rec_acct_attrs.array_char_value(21)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(22) := 'ENC_UPG_DR_LEDGER_AMT';
   l_rec_acct_attrs.array_num_value(22)  := p_source_37;
   l_rec_acct_attrs.array_acct_attr_code(23) := 'ENC_UPG_OPTION';
   l_rec_acct_attrs.array_char_value(23)  := p_source_38;
   l_rec_acct_attrs.array_acct_attr_code(24) := 'ENTERED_CURRENCY_AMOUNT';
   l_rec_acct_attrs.array_num_value(24)  := p_source_16;
   l_rec_acct_attrs.array_acct_attr_code(25) := 'ENTERED_CURRENCY_CODE';
   l_rec_acct_attrs.array_char_value(25)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(26) := 'EXCHANGE_DATE';
   l_rec_acct_attrs.array_date_value(26)  := p_source_39;
   l_rec_acct_attrs.array_acct_attr_code(27) := 'EXCHANGE_RATE';
   l_rec_acct_attrs.array_num_value(27)  := p_source_40;
   l_rec_acct_attrs.array_acct_attr_code(28) := 'EXCHANGE_RATE_TYPE';
   l_rec_acct_attrs.array_char_value(28)  := p_source_41;
   l_rec_acct_attrs.array_acct_attr_code(29) := 'LEDGER_AMOUNT';
   l_rec_acct_attrs.array_num_value(29)  := p_source_42;
   l_rec_acct_attrs.array_acct_attr_code(30) := 'MULTIPERIOD_END_DATE';
   l_rec_acct_attrs.array_date_value(30)  := p_source_43;
   l_rec_acct_attrs.array_acct_attr_code(31) := 'MULTIPERIOD_OPTION';
   l_rec_acct_attrs.array_char_value(31)  := p_source_44;
   l_rec_acct_attrs.array_acct_attr_code(32) := 'MULTIPERIOD_START_DATE';
   l_rec_acct_attrs.array_date_value(32)  := p_source_45;
   l_rec_acct_attrs.array_acct_attr_code(33) := 'OVERRIDE_ACCTD_AMT_FLAG';
   l_rec_acct_attrs.array_char_value(33)  := p_source_46;
   l_rec_acct_attrs.array_acct_attr_code(34) := 'PARTY_ID';
   l_rec_acct_attrs.array_num_value(34)  := p_source_47;
   l_rec_acct_attrs.array_acct_attr_code(35) := 'PARTY_SITE_ID';
   l_rec_acct_attrs.array_num_value(35)  := p_source_48;
   l_rec_acct_attrs.array_acct_attr_code(36) := 'PARTY_TYPE';
   l_rec_acct_attrs.array_char_value(36)  := p_source_49;
   l_rec_acct_attrs.array_acct_attr_code(37) := 'REVERSED_DISTRIBUTION_ID1';
   l_rec_acct_attrs.array_num_value(37)  :=  to_char(p_source_50);
   l_rec_acct_attrs.array_acct_attr_code(38) := 'REVERSED_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(38)  := p_source_21;
   l_rec_acct_attrs.array_acct_attr_code(39) := 'STATISTICAL_AMOUNT';
   l_rec_acct_attrs.array_num_value(39)  := p_source_51;
   l_rec_acct_attrs.array_acct_attr_code(40) := 'TAX_LINE_REF_ID';
   l_rec_acct_attrs.array_num_value(40)  := p_source_52;
   l_rec_acct_attrs.array_acct_attr_code(41) := 'TAX_REC_NREC_DIST_REF_ID';
   l_rec_acct_attrs.array_num_value(41)  := p_source_53;
   l_rec_acct_attrs.array_acct_attr_code(42) := 'TAX_SUMMARY_LINE_REF_ID';
   l_rec_acct_attrs.array_num_value(42)  := p_source_54;
   l_rec_acct_attrs.array_acct_attr_code(43) := 'UPG_CR_ENC_TYPE_ID';
   l_rec_acct_attrs.array_num_value(43)  := p_source_55;
   l_rec_acct_attrs.array_acct_attr_code(44) := 'UPG_DR_ENC_TYPE_ID';
   l_rec_acct_attrs.array_num_value(44)  := p_source_56;

   XLA_AE_LINES_PKG.SetLineAcctAttrs(l_rec_acct_attrs);
   p_gain_or_loss_ref  := XLA_AE_LINES_PKG.g_rec_lines.array_gain_or_loss_ref(XLA_AE_LINES_PKG.g_LineNumber);

   ---------------------------------------------------------------------------------------------------------------
   -- 4336173 -- assign Business Flow Class (replace code in xla_ae_lines_pkg.Business_Flow_Validation)
   ---------------------------------------------------------------------------------------------------------------
   XLA_AE_LINES_PKG.g_rec_lines.array_business_class_code(XLA_AE_LINES_PKG.g_LineNumber) := l_bflow_class_code;

   l_actual_upg_option  := XLA_AE_LINES_PKG.g_rec_lines.array_actual_upg_option(XLA_AE_LINES_PKG.g_LineNumber);
   l_enc_upg_option     := XLA_AE_LINES_PKG.g_rec_lines.array_enc_upg_option(XLA_AE_LINES_PKG.g_LineNumber);

   IF xla_accounting_cache_pkg.GetValueChar
         (p_source_code         => 'LEDGER_CATEGORY_CODE'
         ,p_target_ledger_id    => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id) IN ('PRIMARY','ALC')
   AND l_bflow_method_code = 'PRIOR_ENTRY'
--   AND (l_actual_upg_option = 'Y' OR l_enc_upg_option = 'Y') Bug 4922099
   AND ( (NVL(l_actual_upg_option, 'N') IN ('Y', 'O')) OR
         (NVL(l_enc_upg_option, 'N') IN ('Y', 'O'))
       )
   THEN
         xla_ae_lines_pkg.BflowUpgEntry
           (p_business_method_code    => l_bflow_method_code
           ,p_business_class_code     => l_bflow_class_code
           ,p_balance_type            => l_balance_type_code);
   ELSE
      NULL;
-- No business flow processing for business flow method of NONE.
   END IF;

   --
   -- call analytical criteria
   --
   
   --
   -- call description
   --
   
xla_ae_lines_pkg.SetLineDescription(
   p_ae_header_id => l_ae_header_id
  ,p_description  => Description_2 (
     p_application_id         => p_application_id
   , p_ae_header_id           => l_ae_header_id 
, p_source_1 => p_source_1
   )
);


   --
   -- call ADRs
   -- Bug 4922099
   --
   IF ( (l_bflow_method_code <> 'PRIOR_ENTRY') OR
        (NVL(l_actual_upg_option, 'N') = 'O') OR
        (NVL(l_enc_upg_option, 'N') = 'O')
      )
   THEN
   NULL;
   --
   --
   
  l_ccid := AcctDerRule_7(
           p_application_id           => p_application_id
         , p_ae_header_id             => l_ae_header_id 
, p_source_11 => p_source_11
         , x_transaction_coa_id       => l_adr_transaction_coa_id
         , x_accounting_coa_id        => l_adr_accounting_coa_id
         , x_value_type_code          => l_adr_value_type_code
         , p_side                     => 'NA'
   );

   xla_ae_lines_pkg.set_ccid(
    p_code_combination_id          => l_ccid
  , p_value_type_code              => l_adr_value_type_code
  , p_transaction_coa_id           => l_adr_transaction_coa_id
  , p_accounting_coa_id            => l_adr_accounting_coa_id
  , p_adr_code                     => 'AP_INVOICE_DIST'
  , p_adr_type_code                => 'S'
  , p_component_type               => l_component_type
  , p_component_code               => l_component_code
  , p_component_type_code          => l_component_type_code
  , p_component_appl_id            => l_component_appl_id
  , p_amb_context_code             => l_amb_context_code
  , p_side                         => 'NA'
  );


   --
   --
   END IF;
   --
   -- Bug 4922099
   IF ( ( (NVL(l_actual_upg_option, 'N') = 'O') OR
          (NVL(l_enc_upg_option, 'N') = 'O')
        ) AND
        (l_bflow_method_code = 'PRIOR_ENTRY')
      )
   THEN
      IF
      --
      1 = 2
      --
      THEN
      xla_accounting_err_pkg.build_message
                                    (p_appli_s_name            => 'XLA'
                                    ,p_msg_name                => 'XLA_UPG_OVERRIDE_ADR_UNDEFINED'
                                    ,p_token_1                 => 'LINE_NUMBER'
                                    ,p_value_1                 => XLA_AE_LINES_PKG.g_LineNumber
                                    ,p_token_2                 => 'LINE_TYPE_NAME'
                                    ,p_value_2                 => XLA_AE_SOURCES_PKG.GetComponentName (
                                                                             l_component_type
                                                                            ,l_component_code
                                                                            ,l_component_type_code
                                                                            ,l_component_appl_id
                                                                            ,l_amb_context_code
                                                                            ,l_entity_code
                                                                            ,l_event_class_code
                                                                           )
                                    ,p_token_3                 => 'OWNER'
                                    ,p_value_3                 => xla_lookups_pkg.get_meaning(
                                                                          p_lookup_type     => 'XLA_OWNER_TYPE'
                                                                          ,p_lookup_code    => l_component_type_code
                                                                         )
                                    ,p_token_4                 => 'PRODUCT_NAME'
                                    ,p_value_4                 => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.application_name
                                    ,p_entity_id               => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.entity_id
                                    ,p_event_id                => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.event_id
                                    ,p_ledger_id               => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id
                                    ,p_ae_header_id            =>  NULL
                                       );

        IF (C_LEVEL_ERROR>= g_log_level) THEN
                 trace
                      (p_msg      => 'ERROR: XLA_UPG_OVERRIDE_ADR_UNDEFINED'
                      ,p_level    => C_LEVEL_ERROR
                      ,p_module   => l_log_module);
        END IF;
      END IF;
   END IF;
   --
   --
   ------------------------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- NOTE: XLA_AE_LINES_PKG.ValidateCurrentLine should NOT be generated if business flow method is
   -- Prior Entry.  Currently, the following code is always generated.
   ------------------------------------------------------------------------------------------------
   XLA_AE_LINES_PKG.ValidateCurrentLine;

   ------------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- Populated credit and debit amounts -- Need to generate this within IF <condition>
   ------------------------------------------------------------------------------------
   XLA_AE_LINES_PKG.SetDebitCreditAmounts;

   ----------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- Update journal entry status -- Need to generate this within IF <condition>
   ----------------------------------------------------------------------------------
   XLA_AE_JOURNAL_ENTRY_PKG.UpdateJournalEntryStatus
         (p_hdr_idx => g_array_event(p_event_id).array_value_num('header_index')
         ,p_balance_type_code => l_balance_type_code
         );

   -------------------------------------------------------------------------------------------
   -- 4262811 - Generate the Accrual Reversal lines
   -------------------------------------------------------------------------------------------
   BEGIN
      l_acc_rev_flag := XLA_AE_HEADER_PKG.g_rec_header_new.array_accrual_reversal_flag
                              (g_array_event(p_event_id).array_value_num('header_index'));
      IF l_acc_rev_flag IS NULL THEN
         l_acc_rev_flag := 'N';
      END IF;
   EXCEPTION
      WHEN OTHERS THEN
         l_acc_rev_flag := 'N';
   END;
   --
   IF (l_acc_rev_flag = 'Y') THEN

       -- 4645092  ------------------------------------------------------------------------------
       -- To allow MPA report to determine if it should generate report process
       XLA_ACCOUNTING_PKG.g_mpa_accrual_exists := 'Y';
       ------------------------------------------------------------------------------------------

       l_accrual_line_num := XLA_AE_LINES_PKG.g_LineNumber;
       XLA_AE_LINES_PKG.CopyLineInfo(l_accrual_line_num);
   -- added call to set_ccid to execute mapping  for secondary accrual reversal entries bug 7444204
   -- call ADRs
   -- Bug 4922099
   --
   IF ( (l_bflow_method_code <> 'PRIOR_ENTRY') OR
        (NVL(l_actual_upg_option, 'N') = 'O') OR
        (NVL(l_enc_upg_option, 'N') = 'O')
      )
   THEN
   NULL;
   --
   --
   
  l_ccid := AcctDerRule_7(
           p_application_id           => p_application_id
         , p_ae_header_id             => l_ae_header_id 
, p_source_11 => p_source_11
         , x_transaction_coa_id       => l_adr_transaction_coa_id
         , x_accounting_coa_id        => l_adr_accounting_coa_id
         , x_value_type_code          => l_adr_value_type_code
         , p_side                     => 'NA'
   );

   xla_ae_lines_pkg.set_ccid(
    p_code_combination_id          => l_ccid
  , p_value_type_code              => l_adr_value_type_code
  , p_transaction_coa_id           => l_adr_transaction_coa_id
  , p_accounting_coa_id            => l_adr_accounting_coa_id
  , p_adr_code                     => 'AP_INVOICE_DIST'
  , p_adr_type_code                => 'S'
  , p_component_type               => l_component_type
  , p_component_code               => l_component_code
  , p_component_type_code          => l_component_type_code
  , p_component_appl_id            => l_component_appl_id
  , p_amb_context_code             => l_amb_context_code
  , p_side                         => 'NA'
  );


   --
   --
   END IF;

       --
       -- Update the line information that should be overwritten
       --
       XLA_AE_LINES_PKG.set_ae_header_id(p_ae_header_id => p_event_id ,
                                         p_header_num   => 1);
       XLA_AE_LINES_PKG.g_rec_lines.array_header_num(XLA_AE_LINES_PKG.g_LineNumber)  :=1;

       XLA_AE_LINES_PKG.g_rec_lines.array_business_class_code(XLA_AE_LINES_PKG.g_LineNumber) := NULL; -- 4669271

       IF l_bflow_method_code <> 'NONE' THEN  -- 4655713b
          XLA_AE_LINES_PKG.g_rec_lines.array_reversal_code(XLA_AE_LINES_PKG.g_LineNumber) := CONCAT('MPA_',l_bflow_method_code);
       END IF;

      --
      -- Depending on the Reversal Method setup, do a switch side or changes sign for the amounts
      --
      IF (XLA_AE_JOURNAL_ENTRY_PKG.g_cache_ledgers_info.ledger_reversal_option = 'SIDE') THEN
          XLA_AE_LINES_PKG.g_rec_lines.array_natural_side_code(XLA_AE_LINES_PKG.g_LineNumber) :=  l_acc_rev_natural_side_code;
      ELSE
          ---------------------------------------------------------------------------------------------------
          -- 4262811a Switch Sign
          ---------------------------------------------------------------------------------------------------
          XLA_AE_LINES_PKG.g_rec_lines.array_switch_side_flag(XLA_AE_LINES_PKG.g_LineNumber) := 'N';  -- 5052518
          XLA_AE_LINES_PKG.g_rec_lines.array_ledger_amount(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_ledger_amount(XLA_AE_LINES_PKG.g_LineNumber) * -1;
          XLA_AE_LINES_PKG.g_rec_lines.array_entered_amount(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_entered_amount(XLA_AE_LINES_PKG.g_LineNumber) * -1;
          -- 5132302
          XLA_AE_LINES_PKG.g_rec_lines.array_bflow_applied_to_amt(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_bflow_applied_to_amt(XLA_AE_LINES_PKG.g_LineNumber) * -1;

      END IF;

      -- 4955764
      XLA_AE_LINES_PKG.g_rec_lines.array_gl_date(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_HEADER_PKG.g_rec_header_new.array_gl_date(g_array_event(p_event_id).array_value_num('acc_rev_header_index'));


      XLA_AE_LINES_PKG.ValidateCurrentLine;
      XLA_AE_LINES_PKG.SetDebitCreditAmounts;

      XLA_AE_JOURNAL_ENTRY_PKG.UpdateJournalEntryStatus
               (p_hdr_idx           => g_array_event(p_event_id).array_value_num('acc_rev_header_index')
               ,p_balance_type_code => l_balance_type_code);

   END IF;

   -----------------------------------------------------------------------------------------
   -- 4262811 Multiperiod Accounting
   -----------------------------------------------------------------------------------------
     -- No MPA option is assigned.


END IF;
END IF;
--

--
IF (C_LEVEL_PROCEDURE >= g_log_level) THEN
   trace
      (p_msg      => 'END of AcctLineType_68'
      ,p_level    => C_LEVEL_PROCEDURE
      ,p_module   => l_log_module);
END IF;
--
EXCEPTION
  WHEN xla_exceptions_pkg.application_exception THEN
      RAISE;
  WHEN OTHERS THEN
       xla_exceptions_pkg.raise_message
           (p_location => 'XLA_00200_AAD_S_000010_BC_PKG.AcctLineType_68');
END AcctLineType_68;
--

---------------------------------------
--
-- PRIVATE FUNCTION
--         AcctLineType_69
--
---------------------------------------
PROCEDURE AcctLineType_69 (
  p_application_id        IN NUMBER
 ,p_event_id              IN NUMBER
 ,p_calculate_acctd_flag  IN VARCHAR2
 ,p_calculate_g_l_flag    IN VARCHAR2
 ,p_actual_flag           IN OUT VARCHAR2
 ,p_balance_type_code     OUT VARCHAR2
 ,p_gain_or_loss_ref      OUT VARCHAR2
 
--Invoice Distribution Description
 , p_source_1            IN VARCHAR2
--Invoice Distribution Account
 , p_source_11            IN NUMBER
--Invoice Distribution Type
 , p_source_15            IN VARCHAR2
 , p_source_15_meaning    IN VARCHAR2
--Amount for Variance Amount
 , p_source_16            IN NUMBER
--Purchasing Encumbrance Option
 , p_source_17            IN VARCHAR2
 , p_source_17_meaning    IN VARCHAR2
--Accrue on Receipt Option
 , p_source_18            IN VARCHAR2
 , p_source_18_meaning    IN VARCHAR2
--Accounting Reversal Indicator
 , p_source_19            IN VARCHAR2
--Distribution Link Type
 , p_source_21            IN VARCHAR2
--Allocation to Main Distribution Identifier
 , p_source_23            IN NUMBER
--Invoice Identifier
 , p_source_24            IN NUMBER
--Business Flow Accounts Payable Application Identifier
 , p_source_25            IN NUMBER
--Business Flow Invoice Distribution Type
 , p_source_26            IN VARCHAR2
--Business Flow Invoice Entity Code
 , p_source_27            IN VARCHAR2
--Business Flow Invoice Distribution Identifier
 , p_source_28            IN NUMBER
--Business Flow Invoice Identifier
 , p_source_29            IN NUMBER
--Invoice Distribution Identifier
 , p_source_30            IN NUMBER
--Payables Encumbrance Upgrade Credit Account
 , p_source_31            IN NUMBER
--Payables Encumbrance Upgrade Credit Amount
 , p_source_32            IN NUMBER
--Invoice Currency Code
 , p_source_33            IN VARCHAR2
--Payables Encumbrance Upgrade Credit Base Amount
 , p_source_34            IN NUMBER
--Payables Encumbrance Upgrade Debit Account
 , p_source_35            IN NUMBER
--Payables Encumbrance Upgrade Debit Amount
 , p_source_36            IN NUMBER
--Payables Encumbrance Upgrade Debit Base Amount
 , p_source_37            IN NUMBER
--Payables Encumbrance Upgrade Option
 , p_source_38            IN VARCHAR2
--Invoice Exchange Date
 , p_source_39            IN DATE
--Invoice Exchange Rate
 , p_source_40            IN NUMBER
--Invoice Exchange Rate Type
 , p_source_41            IN VARCHAR2
--Variance Amount in Ledger Currency
 , p_source_42            IN NUMBER
--Deferred Accounting End Date
 , p_source_43            IN DATE
--Deferred Accounting Option
 , p_source_44            IN VARCHAR2
--Deferred Accounting Start Date
 , p_source_45            IN DATE
--Override Accounted Amount Indicator
 , p_source_46            IN VARCHAR2
 , p_source_46_meaning    IN VARCHAR2
--Invoice Supplier Identifier
 , p_source_47            IN NUMBER
--Invoice Supplier Site Identifier
 , p_source_48            IN NUMBER
--Third Party Type
 , p_source_49            IN VARCHAR2
--Parent Reversal Identifier
 , p_source_50            IN NUMBER
--Invoice Distribution Statistical Amount
 , p_source_51            IN NUMBER
--Invoice Distribution Tax Line Identifier
 , p_source_52            IN NUMBER
--Invoice Distribution Tax Distribution Identifier from Tax
 , p_source_53            IN NUMBER
--Invoice Distribution Summary Tax Line Identifier
 , p_source_54            IN NUMBER
--Payables Upgrade Credit Encumbrance Type Identifier
 , p_source_55            IN NUMBER
--Payables Upgrade Debit Encumbrance Type Identifier
 , p_source_56            IN NUMBER
)
IS

l_component_type              VARCHAR2(80);
l_component_code              VARCHAR2(30);
l_component_type_code         VARCHAR2(1);
l_component_appl_id           INTEGER;
l_amb_context_code            VARCHAR2(30);
l_entity_code                 VARCHAR2(30);
l_event_class_code            VARCHAR2(30);
l_ae_header_id                NUMBER;
l_event_type_code             VARCHAR2(30);
l_line_definition_code        VARCHAR2(30);
l_line_definition_owner_code  VARCHAR2(1);
--
-- adr variables
l_segment                     VARCHAR2(30);
l_ccid                        NUMBER;
l_adr_transaction_coa_id      NUMBER;
l_adr_accounting_coa_id       NUMBER;
l_adr_flexfield_segment_code  VARCHAR2(30);
l_adr_flex_value_set_id       NUMBER;
l_adr_value_type_code         VARCHAR2(30);
l_adr_value_combination_id    NUMBER;
l_adr_value_segment_code      VARCHAR2(30);

l_bflow_method_code           VARCHAR2(30);  -- 4219869 Business Flow
l_bflow_class_code            VARCHAR2(30);  -- 4219869 Business Flow
l_inherit_desc_flag           VARCHAR2(1);   -- 4219869 Business Flow
l_budgetary_control_flag      VARCHAR2(1);   -- 4458381 Public Sector Enh

-- 4262811 Variables ------------------------------------------------------------------------------------------
l_entered_amt_idx             NUMBER;
l_accted_amt_idx              NUMBER;
l_acc_rev_flag                VARCHAR2(1);
l_accrual_line_num            NUMBER;
l_tmp_amt                     NUMBER;
l_acc_rev_natural_side_code   VARCHAR2(1);

l_num_entries                 NUMBER;
l_gl_dates                    xla_ae_journal_entry_pkg.t_array_date;
l_accted_amts                 xla_ae_journal_entry_pkg.t_array_num;
l_entered_amts                xla_ae_journal_entry_pkg.t_array_num;
l_period_names                xla_ae_journal_entry_pkg.t_array_V15L;
l_recog_line_1                NUMBER;
l_recog_line_2                NUMBER;

l_bflow_applied_to_amt_idx    NUMBER;                                -- 5132302
l_bflow_applied_to_amt        NUMBER;                                -- 5132302
l_bflow_applied_to_amts       xla_ae_journal_entry_pkg.t_array_num;  -- 5132302

l_event_id                    NUMBER;  -- To handle MPA header Description: xla_ae_header_pkg.SetHdrDescription

--l_rounding_ccy                VARCHAR2(15); -- To handle MPA rounding  4262811b
l_same_currency               BOOLEAN;        -- To handle MPA rounding  4262811b

---------------------------------------------------------------------------------------------------------------


--
-- bulk performance
--
l_balance_type_code           VARCHAR2(1);
l_rec_acct_attrs              XLA_AE_LINES_PKG.t_rec_acct_attrs;
l_log_module                  VARCHAR2(240);

--
-- Upgrade strategy
--
l_actual_upg_option           VARCHAR2(1);
l_enc_upg_option           VARCHAR2(1);

--
BEGIN
--
IF g_log_enabled THEN
      l_log_module := C_DEFAULT_MODULE||'.AcctLineType_69';
END IF;
--
IF (C_LEVEL_PROCEDURE >= g_log_level) THEN

      trace
         (p_msg      => 'BEGIN of AcctLineType_69'
         ,p_level    => C_LEVEL_PROCEDURE
         ,p_module   => l_log_module);

END IF;
--
l_component_type             := 'AMB_JLT';
l_component_code             := 'AP_TAX_AMT_VARIANCE_PP_ENC_DR';
l_component_type_code        := 'S';
l_component_appl_id          :=  200;
l_amb_context_code           := 'DEFAULT';
l_entity_code                := 'AP_INVOICES';
l_event_class_code           := 'PREPAYMENTS';
l_event_type_code            := 'PREPAYMENTS_ALL';
l_line_definition_owner_code := 'S';
l_line_definition_code       := 'ENC_PREPAY_ALL';
--
l_balance_type_code          := 'E';
l_segment                     := NULL;
l_ccid                        := NULL;
l_adr_transaction_coa_id      := NULL;
l_adr_accounting_coa_id       := NULL;
l_adr_flexfield_segment_code  := NULL;
l_adr_flex_value_set_id       := NULL;
l_adr_value_type_code         := NULL;
l_adr_value_combination_id    := NULL;
l_adr_value_segment_code      := NULL;

l_bflow_method_code          := 'NONE';   -- 4219869 Business Flow
l_bflow_class_code           := 'AP_INV_ENCUM';    -- 4219869 Business Flow
l_inherit_desc_flag          := 'N';   -- 4219869 Business Flow
l_budgetary_control_flag     := 'Y';

l_bflow_applied_to_amt_idx   := NULL; -- 5132302
l_bflow_applied_to_amt       := NULL; -- 5132302
l_entered_amt_idx            := NULL;          -- 4262811
l_accted_amt_idx             := NULL;          -- 4262811
l_acc_rev_flag               := NULL;          -- 4262811
l_accrual_line_num           := NULL;          -- 4262811
l_tmp_amt                    := NULL;          -- 4262811
--
 
IF XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id = XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.ledger_id OR
    l_balance_type_code <> 'B' THEN
IF NVL(p_source_15,'
') =  'NONREC_TAX' AND 
p_source_16 IS NOT NULL AND 
NVL(p_source_17,'
') =  'Y' AND 
NVL(p_source_18,'
') <>  'Y'
 THEN 

   --
   XLA_AE_LINES_PKG.SetNewLine;

   p_balance_type_code          := l_balance_type_code;
   -- set the flag so later we will know whether the gain loss line needs to be created
   
   IF(l_balance_type_code = 'A' and p_actual_flag is null) THEN
     p_actual_flag :='A';
   END IF;

   --
   -- bulk performance
   --
   XLA_AE_LINES_PKG.set_ae_header_id (p_ae_header_id => p_event_id ,
                                      p_header_num   => 0); -- 4262811
   --
   -- set accounting line options
   --
   l_ae_header_id:= xla_ae_lines_pkg.SetAcctLineOption(
           p_natural_side_code          => 'D'
         , p_gain_or_loss_flag          => 'N'
         , p_gl_transfer_mode_code      => 'S'
         , p_acct_entry_type_code       => 'E'
         , p_switch_side_flag           => 'Y'
         , p_merge_duplicate_code       => 'N'
         );
   --
   l_acc_rev_natural_side_code := 'C';  -- 4262811
   -- 
   --
   -- set accounting line type info
   --
   xla_ae_lines_pkg.SetAcctLineType
      (p_component_type             => l_component_type
      ,p_event_type_code            => l_event_type_code
      ,p_line_definition_owner_code => l_line_definition_owner_code
      ,p_line_definition_code       => l_line_definition_code
      ,p_accounting_line_code       => l_component_code
      ,p_accounting_line_type_code  => l_component_type_code
      ,p_accounting_line_appl_id    => l_component_appl_id
      ,p_amb_context_code           => l_amb_context_code
      ,p_entity_code                => l_entity_code
      ,p_event_class_code           => l_event_class_code);
   --
   -- set accounting class
   --
   xla_ae_lines_pkg.SetAcctClass(
           p_accounting_class_code  => 'TAV'
         , p_ae_header_id           => l_ae_header_id
         );

   --
   -- set rounding class
   --
   XLA_AE_LINES_PKG.g_rec_lines.array_rounding_class(XLA_AE_LINES_PKG.g_LineNumber) :=
                      'TAV';

   --
   xla_ae_lines_pkg.g_rec_lines.array_calculate_acctd_flag(xla_ae_lines_pkg.g_LineNumber) := p_calculate_acctd_flag;
   xla_ae_lines_pkg.g_rec_lines.array_calculate_g_l_flag(xla_ae_lines_pkg.g_LineNumber) := p_calculate_g_l_flag;
   --
   -- bulk performance
   --
   XLA_AE_LINES_PKG.g_rec_lines.array_balance_type_code(XLA_AE_LINES_PKG.g_LineNumber) := l_balance_type_code;

   XLA_AE_LINES_PKG.g_rec_lines.array_ledger_id(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id;

   -- 4955764
   XLA_AE_LINES_PKG.g_rec_lines.array_gl_date(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_HEADER_PKG.g_rec_header_new.array_gl_date(g_array_event(p_event_id).array_value_num('header_index'));

   -- 4458381 Public Sector Enh
      XLA_AE_LINES_PKG.g_rec_lines.array_encumbrance_type_id(XLA_AE_LINES_PKG.g_LineNumber) := 1060;
   --
   -- set accounting attributes for the line type
   --
   l_entered_amt_idx := 23;
   l_accted_amt_idx  := 28;
   l_bflow_applied_to_amt_idx  := NULL;  -- 5132302
   l_rec_acct_attrs.array_acct_attr_code(1) := 'ACCOUNTING_REVERSAL_OPTION';
   l_rec_acct_attrs.array_char_value(1)  := p_source_19;
   l_rec_acct_attrs.array_acct_attr_code(2) := 'ALLOC_TO_APPLICATION_ID';
   l_rec_acct_attrs.array_num_value(2)  := 
xla_ae_sources_pkg.GetSystemSourceNum(
   p_source_code           => 'XLA_EVENT_APPL_ID'
 , p_source_type_code      => 'Y'
 , p_source_application_id =>  602
);
   l_rec_acct_attrs.array_acct_attr_code(3) := 'ALLOC_TO_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(3)  := p_source_21;
   l_rec_acct_attrs.array_acct_attr_code(4) := 'ALLOC_TO_ENTITY_CODE';
   l_rec_acct_attrs.array_char_value(4)  := 
xla_ae_sources_pkg.GetSystemSourceChar(
   p_source_code           => 'XLA_ENTITY_CODE'
 , p_source_type_code      => 'Y'
 , p_source_application_id =>  602
);
   l_rec_acct_attrs.array_acct_attr_code(5) := 'ALLOC_TO_FIRST_DIST_ID';
   l_rec_acct_attrs.array_num_value(5)  :=  to_char(p_source_23);
   l_rec_acct_attrs.array_acct_attr_code(6) := 'ALLOC_TO_FIRST_SYS_TRAN_ID';
   l_rec_acct_attrs.array_num_value(6)  :=  to_char(p_source_24);
   l_rec_acct_attrs.array_acct_attr_code(7) := 'APPLIED_TO_APPLICATION_ID';
   l_rec_acct_attrs.array_num_value(7)  := p_source_25;
   l_rec_acct_attrs.array_acct_attr_code(8) := 'APPLIED_TO_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(8)  := p_source_26;
   l_rec_acct_attrs.array_acct_attr_code(9) := 'APPLIED_TO_ENTITY_CODE';
   l_rec_acct_attrs.array_char_value(9)  := p_source_27;
   l_rec_acct_attrs.array_acct_attr_code(10) := 'APPLIED_TO_FIRST_DIST_ID';
   l_rec_acct_attrs.array_num_value(10)  :=  to_char(p_source_28);
   l_rec_acct_attrs.array_acct_attr_code(11) := 'APPLIED_TO_FIRST_SYS_TRAN_ID';
   l_rec_acct_attrs.array_num_value(11)  :=  to_char(p_source_29);
   l_rec_acct_attrs.array_acct_attr_code(12) := 'DISTRIBUTION_IDENTIFIER_1';
   l_rec_acct_attrs.array_num_value(12)  :=  to_char(p_source_30);
   l_rec_acct_attrs.array_acct_attr_code(13) := 'DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(13)  := p_source_21;
   l_rec_acct_attrs.array_acct_attr_code(14) := 'ENC_UPG_CR_CCID';
   l_rec_acct_attrs.array_num_value(14)  := p_source_31;
   l_rec_acct_attrs.array_acct_attr_code(15) := 'ENC_UPG_CR_ENTERED_AMT';
   l_rec_acct_attrs.array_num_value(15)  := p_source_32;
   l_rec_acct_attrs.array_acct_attr_code(16) := 'ENC_UPG_CR_ENTERED_CURR';
   l_rec_acct_attrs.array_char_value(16)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(17) := 'ENC_UPG_CR_LEDGER_AMT';
   l_rec_acct_attrs.array_num_value(17)  := p_source_34;
   l_rec_acct_attrs.array_acct_attr_code(18) := 'ENC_UPG_DR_CCID';
   l_rec_acct_attrs.array_num_value(18)  := p_source_35;
   l_rec_acct_attrs.array_acct_attr_code(19) := 'ENC_UPG_DR_ENTERED_AMT';
   l_rec_acct_attrs.array_num_value(19)  := p_source_36;
   l_rec_acct_attrs.array_acct_attr_code(20) := 'ENC_UPG_DR_ENTERED_CURR';
   l_rec_acct_attrs.array_char_value(20)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(21) := 'ENC_UPG_DR_LEDGER_AMT';
   l_rec_acct_attrs.array_num_value(21)  := p_source_37;
   l_rec_acct_attrs.array_acct_attr_code(22) := 'ENC_UPG_OPTION';
   l_rec_acct_attrs.array_char_value(22)  := p_source_38;
   l_rec_acct_attrs.array_acct_attr_code(23) := 'ENTERED_CURRENCY_AMOUNT';
   l_rec_acct_attrs.array_num_value(23)  := p_source_16;
   l_rec_acct_attrs.array_acct_attr_code(24) := 'ENTERED_CURRENCY_CODE';
   l_rec_acct_attrs.array_char_value(24)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(25) := 'EXCHANGE_DATE';
   l_rec_acct_attrs.array_date_value(25)  := p_source_39;
   l_rec_acct_attrs.array_acct_attr_code(26) := 'EXCHANGE_RATE';
   l_rec_acct_attrs.array_num_value(26)  := p_source_40;
   l_rec_acct_attrs.array_acct_attr_code(27) := 'EXCHANGE_RATE_TYPE';
   l_rec_acct_attrs.array_char_value(27)  := p_source_41;
   l_rec_acct_attrs.array_acct_attr_code(28) := 'LEDGER_AMOUNT';
   l_rec_acct_attrs.array_num_value(28)  := p_source_42;
   l_rec_acct_attrs.array_acct_attr_code(29) := 'MULTIPERIOD_END_DATE';
   l_rec_acct_attrs.array_date_value(29)  := p_source_43;
   l_rec_acct_attrs.array_acct_attr_code(30) := 'MULTIPERIOD_OPTION';
   l_rec_acct_attrs.array_char_value(30)  := p_source_44;
   l_rec_acct_attrs.array_acct_attr_code(31) := 'MULTIPERIOD_START_DATE';
   l_rec_acct_attrs.array_date_value(31)  := p_source_45;
   l_rec_acct_attrs.array_acct_attr_code(32) := 'OVERRIDE_ACCTD_AMT_FLAG';
   l_rec_acct_attrs.array_char_value(32)  := p_source_46;
   l_rec_acct_attrs.array_acct_attr_code(33) := 'PARTY_ID';
   l_rec_acct_attrs.array_num_value(33)  := p_source_47;
   l_rec_acct_attrs.array_acct_attr_code(34) := 'PARTY_SITE_ID';
   l_rec_acct_attrs.array_num_value(34)  := p_source_48;
   l_rec_acct_attrs.array_acct_attr_code(35) := 'PARTY_TYPE';
   l_rec_acct_attrs.array_char_value(35)  := p_source_49;
   l_rec_acct_attrs.array_acct_attr_code(36) := 'REVERSED_DISTRIBUTION_ID1';
   l_rec_acct_attrs.array_num_value(36)  :=  to_char(p_source_50);
   l_rec_acct_attrs.array_acct_attr_code(37) := 'REVERSED_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(37)  := p_source_21;
   l_rec_acct_attrs.array_acct_attr_code(38) := 'STATISTICAL_AMOUNT';
   l_rec_acct_attrs.array_num_value(38)  := p_source_51;
   l_rec_acct_attrs.array_acct_attr_code(39) := 'TAX_LINE_REF_ID';
   l_rec_acct_attrs.array_num_value(39)  := p_source_52;
   l_rec_acct_attrs.array_acct_attr_code(40) := 'TAX_REC_NREC_DIST_REF_ID';
   l_rec_acct_attrs.array_num_value(40)  := p_source_53;
   l_rec_acct_attrs.array_acct_attr_code(41) := 'TAX_SUMMARY_LINE_REF_ID';
   l_rec_acct_attrs.array_num_value(41)  := p_source_54;
   l_rec_acct_attrs.array_acct_attr_code(42) := 'UPG_CR_ENC_TYPE_ID';
   l_rec_acct_attrs.array_num_value(42)  := p_source_55;
   l_rec_acct_attrs.array_acct_attr_code(43) := 'UPG_DR_ENC_TYPE_ID';
   l_rec_acct_attrs.array_num_value(43)  := p_source_56;

   XLA_AE_LINES_PKG.SetLineAcctAttrs(l_rec_acct_attrs);
   p_gain_or_loss_ref  := XLA_AE_LINES_PKG.g_rec_lines.array_gain_or_loss_ref(XLA_AE_LINES_PKG.g_LineNumber);

   ---------------------------------------------------------------------------------------------------------------
   -- 4336173 -- assign Business Flow Class (replace code in xla_ae_lines_pkg.Business_Flow_Validation)
   ---------------------------------------------------------------------------------------------------------------
   XLA_AE_LINES_PKG.g_rec_lines.array_business_class_code(XLA_AE_LINES_PKG.g_LineNumber) := l_bflow_class_code;

   l_actual_upg_option  := XLA_AE_LINES_PKG.g_rec_lines.array_actual_upg_option(XLA_AE_LINES_PKG.g_LineNumber);
   l_enc_upg_option     := XLA_AE_LINES_PKG.g_rec_lines.array_enc_upg_option(XLA_AE_LINES_PKG.g_LineNumber);

   IF xla_accounting_cache_pkg.GetValueChar
         (p_source_code         => 'LEDGER_CATEGORY_CODE'
         ,p_target_ledger_id    => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id) IN ('PRIMARY','ALC')
   AND l_bflow_method_code = 'PRIOR_ENTRY'
--   AND (l_actual_upg_option = 'Y' OR l_enc_upg_option = 'Y') Bug 4922099
   AND ( (NVL(l_actual_upg_option, 'N') IN ('Y', 'O')) OR
         (NVL(l_enc_upg_option, 'N') IN ('Y', 'O'))
       )
   THEN
         xla_ae_lines_pkg.BflowUpgEntry
           (p_business_method_code    => l_bflow_method_code
           ,p_business_class_code     => l_bflow_class_code
           ,p_balance_type            => l_balance_type_code);
   ELSE
      NULL;
-- No business flow processing for business flow method of NONE.
   END IF;

   --
   -- call analytical criteria
   --
   
   --
   -- call description
   --
   
xla_ae_lines_pkg.SetLineDescription(
   p_ae_header_id => l_ae_header_id
  ,p_description  => Description_2 (
     p_application_id         => p_application_id
   , p_ae_header_id           => l_ae_header_id 
, p_source_1 => p_source_1
   )
);


   --
   -- call ADRs
   -- Bug 4922099
   --
   IF ( (l_bflow_method_code <> 'PRIOR_ENTRY') OR
        (NVL(l_actual_upg_option, 'N') = 'O') OR
        (NVL(l_enc_upg_option, 'N') = 'O')
      )
   THEN
   NULL;
   --
   --
   
  l_ccid := AcctDerRule_7(
           p_application_id           => p_application_id
         , p_ae_header_id             => l_ae_header_id 
, p_source_11 => p_source_11
         , x_transaction_coa_id       => l_adr_transaction_coa_id
         , x_accounting_coa_id        => l_adr_accounting_coa_id
         , x_value_type_code          => l_adr_value_type_code
         , p_side                     => 'NA'
   );

   xla_ae_lines_pkg.set_ccid(
    p_code_combination_id          => l_ccid
  , p_value_type_code              => l_adr_value_type_code
  , p_transaction_coa_id           => l_adr_transaction_coa_id
  , p_accounting_coa_id            => l_adr_accounting_coa_id
  , p_adr_code                     => 'AP_INVOICE_DIST'
  , p_adr_type_code                => 'S'
  , p_component_type               => l_component_type
  , p_component_code               => l_component_code
  , p_component_type_code          => l_component_type_code
  , p_component_appl_id            => l_component_appl_id
  , p_amb_context_code             => l_amb_context_code
  , p_side                         => 'NA'
  );


   --
   --
   END IF;
   --
   -- Bug 4922099
   IF ( ( (NVL(l_actual_upg_option, 'N') = 'O') OR
          (NVL(l_enc_upg_option, 'N') = 'O')
        ) AND
        (l_bflow_method_code = 'PRIOR_ENTRY')
      )
   THEN
      IF
      --
      1 = 2
      --
      THEN
      xla_accounting_err_pkg.build_message
                                    (p_appli_s_name            => 'XLA'
                                    ,p_msg_name                => 'XLA_UPG_OVERRIDE_ADR_UNDEFINED'
                                    ,p_token_1                 => 'LINE_NUMBER'
                                    ,p_value_1                 => XLA_AE_LINES_PKG.g_LineNumber
                                    ,p_token_2                 => 'LINE_TYPE_NAME'
                                    ,p_value_2                 => XLA_AE_SOURCES_PKG.GetComponentName (
                                                                             l_component_type
                                                                            ,l_component_code
                                                                            ,l_component_type_code
                                                                            ,l_component_appl_id
                                                                            ,l_amb_context_code
                                                                            ,l_entity_code
                                                                            ,l_event_class_code
                                                                           )
                                    ,p_token_3                 => 'OWNER'
                                    ,p_value_3                 => xla_lookups_pkg.get_meaning(
                                                                          p_lookup_type     => 'XLA_OWNER_TYPE'
                                                                          ,p_lookup_code    => l_component_type_code
                                                                         )
                                    ,p_token_4                 => 'PRODUCT_NAME'
                                    ,p_value_4                 => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.application_name
                                    ,p_entity_id               => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.entity_id
                                    ,p_event_id                => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.event_id
                                    ,p_ledger_id               => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id
                                    ,p_ae_header_id            =>  NULL
                                       );

        IF (C_LEVEL_ERROR>= g_log_level) THEN
                 trace
                      (p_msg      => 'ERROR: XLA_UPG_OVERRIDE_ADR_UNDEFINED'
                      ,p_level    => C_LEVEL_ERROR
                      ,p_module   => l_log_module);
        END IF;
      END IF;
   END IF;
   --
   --
   ------------------------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- NOTE: XLA_AE_LINES_PKG.ValidateCurrentLine should NOT be generated if business flow method is
   -- Prior Entry.  Currently, the following code is always generated.
   ------------------------------------------------------------------------------------------------
   XLA_AE_LINES_PKG.ValidateCurrentLine;

   ------------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- Populated credit and debit amounts -- Need to generate this within IF <condition>
   ------------------------------------------------------------------------------------
   XLA_AE_LINES_PKG.SetDebitCreditAmounts;

   ----------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- Update journal entry status -- Need to generate this within IF <condition>
   ----------------------------------------------------------------------------------
   XLA_AE_JOURNAL_ENTRY_PKG.UpdateJournalEntryStatus
         (p_hdr_idx => g_array_event(p_event_id).array_value_num('header_index')
         ,p_balance_type_code => l_balance_type_code
         );

   -------------------------------------------------------------------------------------------
   -- 4262811 - Generate the Accrual Reversal lines
   -------------------------------------------------------------------------------------------
   BEGIN
      l_acc_rev_flag := XLA_AE_HEADER_PKG.g_rec_header_new.array_accrual_reversal_flag
                              (g_array_event(p_event_id).array_value_num('header_index'));
      IF l_acc_rev_flag IS NULL THEN
         l_acc_rev_flag := 'N';
      END IF;
   EXCEPTION
      WHEN OTHERS THEN
         l_acc_rev_flag := 'N';
   END;
   --
   IF (l_acc_rev_flag = 'Y') THEN

       -- 4645092  ------------------------------------------------------------------------------
       -- To allow MPA report to determine if it should generate report process
       XLA_ACCOUNTING_PKG.g_mpa_accrual_exists := 'Y';
       ------------------------------------------------------------------------------------------

       l_accrual_line_num := XLA_AE_LINES_PKG.g_LineNumber;
       XLA_AE_LINES_PKG.CopyLineInfo(l_accrual_line_num);
   -- added call to set_ccid to execute mapping  for secondary accrual reversal entries bug 7444204
   -- call ADRs
   -- Bug 4922099
   --
   IF ( (l_bflow_method_code <> 'PRIOR_ENTRY') OR
        (NVL(l_actual_upg_option, 'N') = 'O') OR
        (NVL(l_enc_upg_option, 'N') = 'O')
      )
   THEN
   NULL;
   --
   --
   
  l_ccid := AcctDerRule_7(
           p_application_id           => p_application_id
         , p_ae_header_id             => l_ae_header_id 
, p_source_11 => p_source_11
         , x_transaction_coa_id       => l_adr_transaction_coa_id
         , x_accounting_coa_id        => l_adr_accounting_coa_id
         , x_value_type_code          => l_adr_value_type_code
         , p_side                     => 'NA'
   );

   xla_ae_lines_pkg.set_ccid(
    p_code_combination_id          => l_ccid
  , p_value_type_code              => l_adr_value_type_code
  , p_transaction_coa_id           => l_adr_transaction_coa_id
  , p_accounting_coa_id            => l_adr_accounting_coa_id
  , p_adr_code                     => 'AP_INVOICE_DIST'
  , p_adr_type_code                => 'S'
  , p_component_type               => l_component_type
  , p_component_code               => l_component_code
  , p_component_type_code          => l_component_type_code
  , p_component_appl_id            => l_component_appl_id
  , p_amb_context_code             => l_amb_context_code
  , p_side                         => 'NA'
  );


   --
   --
   END IF;

       --
       -- Update the line information that should be overwritten
       --
       XLA_AE_LINES_PKG.set_ae_header_id(p_ae_header_id => p_event_id ,
                                         p_header_num   => 1);
       XLA_AE_LINES_PKG.g_rec_lines.array_header_num(XLA_AE_LINES_PKG.g_LineNumber)  :=1;

       XLA_AE_LINES_PKG.g_rec_lines.array_business_class_code(XLA_AE_LINES_PKG.g_LineNumber) := NULL; -- 4669271

       IF l_bflow_method_code <> 'NONE' THEN  -- 4655713b
          XLA_AE_LINES_PKG.g_rec_lines.array_reversal_code(XLA_AE_LINES_PKG.g_LineNumber) := CONCAT('MPA_',l_bflow_method_code);
       END IF;

      --
      -- Depending on the Reversal Method setup, do a switch side or changes sign for the amounts
      --
      IF (XLA_AE_JOURNAL_ENTRY_PKG.g_cache_ledgers_info.ledger_reversal_option = 'SIDE') THEN
          XLA_AE_LINES_PKG.g_rec_lines.array_natural_side_code(XLA_AE_LINES_PKG.g_LineNumber) :=  l_acc_rev_natural_side_code;
      ELSE
          ---------------------------------------------------------------------------------------------------
          -- 4262811a Switch Sign
          ---------------------------------------------------------------------------------------------------
          XLA_AE_LINES_PKG.g_rec_lines.array_switch_side_flag(XLA_AE_LINES_PKG.g_LineNumber) := 'N';  -- 5052518
          XLA_AE_LINES_PKG.g_rec_lines.array_ledger_amount(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_ledger_amount(XLA_AE_LINES_PKG.g_LineNumber) * -1;
          XLA_AE_LINES_PKG.g_rec_lines.array_entered_amount(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_entered_amount(XLA_AE_LINES_PKG.g_LineNumber) * -1;
          -- 5132302
          XLA_AE_LINES_PKG.g_rec_lines.array_bflow_applied_to_amt(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_bflow_applied_to_amt(XLA_AE_LINES_PKG.g_LineNumber) * -1;

      END IF;

      -- 4955764
      XLA_AE_LINES_PKG.g_rec_lines.array_gl_date(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_HEADER_PKG.g_rec_header_new.array_gl_date(g_array_event(p_event_id).array_value_num('acc_rev_header_index'));


      XLA_AE_LINES_PKG.ValidateCurrentLine;
      XLA_AE_LINES_PKG.SetDebitCreditAmounts;

      XLA_AE_JOURNAL_ENTRY_PKG.UpdateJournalEntryStatus
               (p_hdr_idx           => g_array_event(p_event_id).array_value_num('acc_rev_header_index')
               ,p_balance_type_code => l_balance_type_code);

   END IF;

   -----------------------------------------------------------------------------------------
   -- 4262811 Multiperiod Accounting
   -----------------------------------------------------------------------------------------
     -- No MPA option is assigned.


END IF;
END IF;
--

--
IF (C_LEVEL_PROCEDURE >= g_log_level) THEN
   trace
      (p_msg      => 'END of AcctLineType_69'
      ,p_level    => C_LEVEL_PROCEDURE
      ,p_module   => l_log_module);
END IF;
--
EXCEPTION
  WHEN xla_exceptions_pkg.application_exception THEN
      RAISE;
  WHEN OTHERS THEN
       xla_exceptions_pkg.raise_message
           (p_location => 'XLA_00200_AAD_S_000010_BC_PKG.AcctLineType_69');
END AcctLineType_69;
--

---------------------------------------
--
-- PRIVATE FUNCTION
--         AcctLineType_70
--
---------------------------------------
PROCEDURE AcctLineType_70 (
  p_application_id        IN NUMBER
 ,p_event_id              IN NUMBER
 ,p_calculate_acctd_flag  IN VARCHAR2
 ,p_calculate_g_l_flag    IN VARCHAR2
 ,p_actual_flag           IN OUT VARCHAR2
 ,p_balance_type_code     OUT VARCHAR2
 ,p_gain_or_loss_ref      OUT VARCHAR2
 
--Invoice Distribution Description
 , p_source_1            IN VARCHAR2
--Purchase Order Rate Variance Gain Account
 , p_source_6            IN NUMBER
--Automatic Offsets Value
 , p_source_7            IN VARCHAR2
 , p_source_7_meaning    IN VARCHAR2
--Invoice Distribution Ledger Amount
 , p_source_8            IN NUMBER
--Destination Type of the PO Distribution
 , p_source_9            IN VARCHAR2
 , p_source_9_meaning    IN VARCHAR2
--Purchase Order Rate Variance Loss Account
 , p_source_10            IN NUMBER
--Invoice Distribution Account
 , p_source_11            IN NUMBER
--Automatic Offsets Flag
 , p_source_12            IN VARCHAR2
 , p_source_12_meaning    IN VARCHAR2
--Invoice Distribution Type
 , p_source_15            IN VARCHAR2
 , p_source_15_meaning    IN VARCHAR2
--Purchasing Encumbrance Option
 , p_source_17            IN VARCHAR2
 , p_source_17_meaning    IN VARCHAR2
--Accounting Reversal Indicator
 , p_source_19            IN VARCHAR2
--Distribution Link Type
 , p_source_21            IN VARCHAR2
--Allocation to Main Distribution Identifier
 , p_source_23            IN NUMBER
--Invoice Identifier
 , p_source_24            IN NUMBER
--Business Flow Accounts Payable Application Identifier
 , p_source_25            IN NUMBER
--Business Flow Invoice Distribution Type
 , p_source_26            IN VARCHAR2
--Business Flow Invoice Entity Code
 , p_source_27            IN VARCHAR2
--Business Flow Invoice Distribution Identifier
 , p_source_28            IN NUMBER
--Business Flow Invoice Identifier
 , p_source_29            IN NUMBER
--Invoice Distribution Identifier
 , p_source_30            IN NUMBER
--Payables Encumbrance Upgrade Credit Account
 , p_source_31            IN NUMBER
--Payables Encumbrance Upgrade Credit Amount
 , p_source_32            IN NUMBER
--Invoice Currency Code
 , p_source_33            IN VARCHAR2
--Payables Encumbrance Upgrade Credit Base Amount
 , p_source_34            IN NUMBER
--Payables Encumbrance Upgrade Debit Account
 , p_source_35            IN NUMBER
--Payables Encumbrance Upgrade Debit Amount
 , p_source_36            IN NUMBER
--Payables Encumbrance Upgrade Debit Base Amount
 , p_source_37            IN NUMBER
--Payables Encumbrance Upgrade Option
 , p_source_38            IN VARCHAR2
--Invoice Exchange Date
 , p_source_39            IN DATE
--Invoice Exchange Rate
 , p_source_40            IN NUMBER
--Invoice Exchange Rate Type
 , p_source_41            IN VARCHAR2
--Deferred Accounting End Date
 , p_source_43            IN DATE
--Deferred Accounting Option
 , p_source_44            IN VARCHAR2
--Deferred Accounting Start Date
 , p_source_45            IN DATE
--Override Accounted Amount Indicator
 , p_source_46            IN VARCHAR2
 , p_source_46_meaning    IN VARCHAR2
--Invoice Supplier Identifier
 , p_source_47            IN NUMBER
--Invoice Supplier Site Identifier
 , p_source_48            IN NUMBER
--Third Party Type
 , p_source_49            IN VARCHAR2
--Parent Reversal Identifier
 , p_source_50            IN NUMBER
--Invoice Distribution Statistical Amount
 , p_source_51            IN NUMBER
--Invoice Distribution Tax Line Identifier
 , p_source_52            IN NUMBER
--Invoice Distribution Tax Distribution Identifier from Tax
 , p_source_53            IN NUMBER
--Invoice Distribution Summary Tax Line Identifier
 , p_source_54            IN NUMBER
--Payables Upgrade Credit Encumbrance Type Identifier
 , p_source_55            IN NUMBER
--Payables Upgrade Debit Encumbrance Type Identifier
 , p_source_56            IN NUMBER
--Invoice Distribution Encumbrance Amount
 , p_source_65            IN NUMBER
--Invoice Distribution Encumbrance Ledger Amount
 , p_source_66            IN NUMBER
)
IS

l_component_type              VARCHAR2(80);
l_component_code              VARCHAR2(30);
l_component_type_code         VARCHAR2(1);
l_component_appl_id           INTEGER;
l_amb_context_code            VARCHAR2(30);
l_entity_code                 VARCHAR2(30);
l_event_class_code            VARCHAR2(30);
l_ae_header_id                NUMBER;
l_event_type_code             VARCHAR2(30);
l_line_definition_code        VARCHAR2(30);
l_line_definition_owner_code  VARCHAR2(1);
--
-- adr variables
l_segment                     VARCHAR2(30);
l_ccid                        NUMBER;
l_adr_transaction_coa_id      NUMBER;
l_adr_accounting_coa_id       NUMBER;
l_adr_flexfield_segment_code  VARCHAR2(30);
l_adr_flex_value_set_id       NUMBER;
l_adr_value_type_code         VARCHAR2(30);
l_adr_value_combination_id    NUMBER;
l_adr_value_segment_code      VARCHAR2(30);

l_bflow_method_code           VARCHAR2(30);  -- 4219869 Business Flow
l_bflow_class_code            VARCHAR2(30);  -- 4219869 Business Flow
l_inherit_desc_flag           VARCHAR2(1);   -- 4219869 Business Flow
l_budgetary_control_flag      VARCHAR2(1);   -- 4458381 Public Sector Enh

-- 4262811 Variables ------------------------------------------------------------------------------------------
l_entered_amt_idx             NUMBER;
l_accted_amt_idx              NUMBER;
l_acc_rev_flag                VARCHAR2(1);
l_accrual_line_num            NUMBER;
l_tmp_amt                     NUMBER;
l_acc_rev_natural_side_code   VARCHAR2(1);

l_num_entries                 NUMBER;
l_gl_dates                    xla_ae_journal_entry_pkg.t_array_date;
l_accted_amts                 xla_ae_journal_entry_pkg.t_array_num;
l_entered_amts                xla_ae_journal_entry_pkg.t_array_num;
l_period_names                xla_ae_journal_entry_pkg.t_array_V15L;
l_recog_line_1                NUMBER;
l_recog_line_2                NUMBER;

l_bflow_applied_to_amt_idx    NUMBER;                                -- 5132302
l_bflow_applied_to_amt        NUMBER;                                -- 5132302
l_bflow_applied_to_amts       xla_ae_journal_entry_pkg.t_array_num;  -- 5132302

l_event_id                    NUMBER;  -- To handle MPA header Description: xla_ae_header_pkg.SetHdrDescription

--l_rounding_ccy                VARCHAR2(15); -- To handle MPA rounding  4262811b
l_same_currency               BOOLEAN;        -- To handle MPA rounding  4262811b

---------------------------------------------------------------------------------------------------------------


--
-- bulk performance
--
l_balance_type_code           VARCHAR2(1);
l_rec_acct_attrs              XLA_AE_LINES_PKG.t_rec_acct_attrs;
l_log_module                  VARCHAR2(240);

--
-- Upgrade strategy
--
l_actual_upg_option           VARCHAR2(1);
l_enc_upg_option           VARCHAR2(1);

--
BEGIN
--
IF g_log_enabled THEN
      l_log_module := C_DEFAULT_MODULE||'.AcctLineType_70';
END IF;
--
IF (C_LEVEL_PROCEDURE >= g_log_level) THEN

      trace
         (p_msg      => 'BEGIN of AcctLineType_70'
         ,p_level    => C_LEVEL_PROCEDURE
         ,p_module   => l_log_module);

END IF;
--
l_component_type             := 'AMB_JLT';
l_component_code             := 'AP_TAX_EXCHGRATE_VAR_CM_ENC_DR';
l_component_type_code        := 'S';
l_component_appl_id          :=  200;
l_amb_context_code           := 'DEFAULT';
l_entity_code                := 'AP_INVOICES';
l_event_class_code           := 'CREDIT MEMOS';
l_event_type_code            := 'CREDIT MEMOS_ALL';
l_line_definition_owner_code := 'S';
l_line_definition_code       := 'ENC_CM_ALL';
--
l_balance_type_code          := 'E';
l_segment                     := NULL;
l_ccid                        := NULL;
l_adr_transaction_coa_id      := NULL;
l_adr_accounting_coa_id       := NULL;
l_adr_flexfield_segment_code  := NULL;
l_adr_flex_value_set_id       := NULL;
l_adr_value_type_code         := NULL;
l_adr_value_combination_id    := NULL;
l_adr_value_segment_code      := NULL;

l_bflow_method_code          := 'NONE';   -- 4219869 Business Flow
l_bflow_class_code           := 'AP_INV_ENCUM';    -- 4219869 Business Flow
l_inherit_desc_flag          := 'N';   -- 4219869 Business Flow
l_budgetary_control_flag     := 'Y';

l_bflow_applied_to_amt_idx   := NULL; -- 5132302
l_bflow_applied_to_amt       := NULL; -- 5132302
l_entered_amt_idx            := NULL;          -- 4262811
l_accted_amt_idx             := NULL;          -- 4262811
l_acc_rev_flag               := NULL;          -- 4262811
l_accrual_line_num           := NULL;          -- 4262811
l_tmp_amt                    := NULL;          -- 4262811
--
IF ((p_calculate_g_l_flag = 'Y' AND XLA_AE_JOURNAL_ENTRY_PKG.g_cache_ledgers_info.ledger_category_code <> 'ALC') or
            (XLA_AE_JOURNAL_ENTRY_PKG.g_cache_ledgers_info.ledger_category_code in ('ALC', 'SECONDARY') AND XLA_AE_JOURNAL_ENTRY_PKG.g_cache_ledgers_info.calculate_amts_flag='Y')) THEN
               return;
  END IF;
  
IF XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id = XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.ledger_id OR
    l_balance_type_code <> 'B' THEN
IF NVL(p_source_15,'
') =  'TERV' AND 
NVL(p_source_17,'
') =  'Y'
 THEN 

   --
   XLA_AE_LINES_PKG.SetNewLine;

   p_balance_type_code          := l_balance_type_code;
   -- set the flag so later we will know whether the gain loss line needs to be created
   
   IF(l_balance_type_code = 'A' ) THEN
     p_actual_flag :='G';
   END IF;

   --
   -- bulk performance
   --
   XLA_AE_LINES_PKG.set_ae_header_id (p_ae_header_id => p_event_id ,
                                      p_header_num   => 0); -- 4262811
   --
   -- set accounting line options
   --
   l_ae_header_id:= xla_ae_lines_pkg.SetAcctLineOption(
           p_natural_side_code          => 'D'
         , p_gain_or_loss_flag          => 'Y'
         , p_gl_transfer_mode_code      => 'S'
         , p_acct_entry_type_code       => 'E'
         , p_switch_side_flag           => 'Y'
         , p_merge_duplicate_code       => 'N'
         );
   --
   l_acc_rev_natural_side_code := 'C';  -- 4262811
   -- 
   --
   -- set accounting line type info
   --
   xla_ae_lines_pkg.SetAcctLineType
      (p_component_type             => l_component_type
      ,p_event_type_code            => l_event_type_code
      ,p_line_definition_owner_code => l_line_definition_owner_code
      ,p_line_definition_code       => l_line_definition_code
      ,p_accounting_line_code       => l_component_code
      ,p_accounting_line_type_code  => l_component_type_code
      ,p_accounting_line_appl_id    => l_component_appl_id
      ,p_amb_context_code           => l_amb_context_code
      ,p_entity_code                => l_entity_code
      ,p_event_class_code           => l_event_class_code);
   --
   -- set accounting class
   --
   xla_ae_lines_pkg.SetAcctClass(
           p_accounting_class_code  => 'TERV'
         , p_ae_header_id           => l_ae_header_id
         );

   --
   -- set rounding class
   --
   XLA_AE_LINES_PKG.g_rec_lines.array_rounding_class(XLA_AE_LINES_PKG.g_LineNumber) :=
                      'TERV';

   --
   xla_ae_lines_pkg.g_rec_lines.array_calculate_acctd_flag(xla_ae_lines_pkg.g_LineNumber) := p_calculate_acctd_flag;
   xla_ae_lines_pkg.g_rec_lines.array_calculate_g_l_flag(xla_ae_lines_pkg.g_LineNumber) := p_calculate_g_l_flag;
   --
   -- bulk performance
   --
   XLA_AE_LINES_PKG.g_rec_lines.array_balance_type_code(XLA_AE_LINES_PKG.g_LineNumber) := l_balance_type_code;

   XLA_AE_LINES_PKG.g_rec_lines.array_ledger_id(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id;

   -- 4955764
   XLA_AE_LINES_PKG.g_rec_lines.array_gl_date(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_HEADER_PKG.g_rec_header_new.array_gl_date(g_array_event(p_event_id).array_value_num('header_index'));

   -- 4458381 Public Sector Enh
      XLA_AE_LINES_PKG.g_rec_lines.array_encumbrance_type_id(XLA_AE_LINES_PKG.g_LineNumber) := 1060;
   --
   -- set accounting attributes for the line type
   --
   l_entered_amt_idx := 23;
   l_accted_amt_idx  := 28;
   l_bflow_applied_to_amt_idx  := NULL;  -- 5132302
   l_rec_acct_attrs.array_acct_attr_code(1) := 'ACCOUNTING_REVERSAL_OPTION';
   l_rec_acct_attrs.array_char_value(1)  := p_source_19;
   l_rec_acct_attrs.array_acct_attr_code(2) := 'ALLOC_TO_APPLICATION_ID';
   l_rec_acct_attrs.array_num_value(2)  := 
xla_ae_sources_pkg.GetSystemSourceNum(
   p_source_code           => 'XLA_EVENT_APPL_ID'
 , p_source_type_code      => 'Y'
 , p_source_application_id =>  602
);
   l_rec_acct_attrs.array_acct_attr_code(3) := 'ALLOC_TO_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(3)  := p_source_21;
   l_rec_acct_attrs.array_acct_attr_code(4) := 'ALLOC_TO_ENTITY_CODE';
   l_rec_acct_attrs.array_char_value(4)  := 
xla_ae_sources_pkg.GetSystemSourceChar(
   p_source_code           => 'XLA_ENTITY_CODE'
 , p_source_type_code      => 'Y'
 , p_source_application_id =>  602
);
   l_rec_acct_attrs.array_acct_attr_code(5) := 'ALLOC_TO_FIRST_DIST_ID';
   l_rec_acct_attrs.array_num_value(5)  :=  to_char(p_source_23);
   l_rec_acct_attrs.array_acct_attr_code(6) := 'ALLOC_TO_FIRST_SYS_TRAN_ID';
   l_rec_acct_attrs.array_num_value(6)  :=  to_char(p_source_24);
   l_rec_acct_attrs.array_acct_attr_code(7) := 'APPLIED_TO_APPLICATION_ID';
   l_rec_acct_attrs.array_num_value(7)  := p_source_25;
   l_rec_acct_attrs.array_acct_attr_code(8) := 'APPLIED_TO_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(8)  := p_source_26;
   l_rec_acct_attrs.array_acct_attr_code(9) := 'APPLIED_TO_ENTITY_CODE';
   l_rec_acct_attrs.array_char_value(9)  := p_source_27;
   l_rec_acct_attrs.array_acct_attr_code(10) := 'APPLIED_TO_FIRST_DIST_ID';
   l_rec_acct_attrs.array_num_value(10)  :=  to_char(p_source_28);
   l_rec_acct_attrs.array_acct_attr_code(11) := 'APPLIED_TO_FIRST_SYS_TRAN_ID';
   l_rec_acct_attrs.array_num_value(11)  :=  to_char(p_source_29);
   l_rec_acct_attrs.array_acct_attr_code(12) := 'DISTRIBUTION_IDENTIFIER_1';
   l_rec_acct_attrs.array_num_value(12)  :=  to_char(p_source_30);
   l_rec_acct_attrs.array_acct_attr_code(13) := 'DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(13)  := p_source_21;
   l_rec_acct_attrs.array_acct_attr_code(14) := 'ENC_UPG_CR_CCID';
   l_rec_acct_attrs.array_num_value(14)  := p_source_31;
   l_rec_acct_attrs.array_acct_attr_code(15) := 'ENC_UPG_CR_ENTERED_AMT';
   l_rec_acct_attrs.array_num_value(15)  := p_source_32;
   l_rec_acct_attrs.array_acct_attr_code(16) := 'ENC_UPG_CR_ENTERED_CURR';
   l_rec_acct_attrs.array_char_value(16)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(17) := 'ENC_UPG_CR_LEDGER_AMT';
   l_rec_acct_attrs.array_num_value(17)  := p_source_34;
   l_rec_acct_attrs.array_acct_attr_code(18) := 'ENC_UPG_DR_CCID';
   l_rec_acct_attrs.array_num_value(18)  := p_source_35;
   l_rec_acct_attrs.array_acct_attr_code(19) := 'ENC_UPG_DR_ENTERED_AMT';
   l_rec_acct_attrs.array_num_value(19)  := p_source_36;
   l_rec_acct_attrs.array_acct_attr_code(20) := 'ENC_UPG_DR_ENTERED_CURR';
   l_rec_acct_attrs.array_char_value(20)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(21) := 'ENC_UPG_DR_LEDGER_AMT';
   l_rec_acct_attrs.array_num_value(21)  := p_source_37;
   l_rec_acct_attrs.array_acct_attr_code(22) := 'ENC_UPG_OPTION';
   l_rec_acct_attrs.array_char_value(22)  := p_source_38;
   l_rec_acct_attrs.array_acct_attr_code(23) := 'ENTERED_CURRENCY_AMOUNT';
   l_rec_acct_attrs.array_num_value(23)  := p_source_65;
   l_rec_acct_attrs.array_acct_attr_code(24) := 'ENTERED_CURRENCY_CODE';
   l_rec_acct_attrs.array_char_value(24)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(25) := 'EXCHANGE_DATE';
   l_rec_acct_attrs.array_date_value(25)  := p_source_39;
   l_rec_acct_attrs.array_acct_attr_code(26) := 'EXCHANGE_RATE';
   l_rec_acct_attrs.array_num_value(26)  := p_source_40;
   l_rec_acct_attrs.array_acct_attr_code(27) := 'EXCHANGE_RATE_TYPE';
   l_rec_acct_attrs.array_char_value(27)  := p_source_41;
   l_rec_acct_attrs.array_acct_attr_code(28) := 'LEDGER_AMOUNT';
   l_rec_acct_attrs.array_num_value(28)  := p_source_66;
   l_rec_acct_attrs.array_acct_attr_code(29) := 'MULTIPERIOD_END_DATE';
   l_rec_acct_attrs.array_date_value(29)  := p_source_43;
   l_rec_acct_attrs.array_acct_attr_code(30) := 'MULTIPERIOD_OPTION';
   l_rec_acct_attrs.array_char_value(30)  := p_source_44;
   l_rec_acct_attrs.array_acct_attr_code(31) := 'MULTIPERIOD_START_DATE';
   l_rec_acct_attrs.array_date_value(31)  := p_source_45;
   l_rec_acct_attrs.array_acct_attr_code(32) := 'OVERRIDE_ACCTD_AMT_FLAG';
   l_rec_acct_attrs.array_char_value(32)  := p_source_46;
   l_rec_acct_attrs.array_acct_attr_code(33) := 'PARTY_ID';
   l_rec_acct_attrs.array_num_value(33)  := p_source_47;
   l_rec_acct_attrs.array_acct_attr_code(34) := 'PARTY_SITE_ID';
   l_rec_acct_attrs.array_num_value(34)  := p_source_48;
   l_rec_acct_attrs.array_acct_attr_code(35) := 'PARTY_TYPE';
   l_rec_acct_attrs.array_char_value(35)  := p_source_49;
   l_rec_acct_attrs.array_acct_attr_code(36) := 'REVERSED_DISTRIBUTION_ID1';
   l_rec_acct_attrs.array_num_value(36)  :=  to_char(p_source_50);
   l_rec_acct_attrs.array_acct_attr_code(37) := 'REVERSED_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(37)  := p_source_21;
   l_rec_acct_attrs.array_acct_attr_code(38) := 'STATISTICAL_AMOUNT';
   l_rec_acct_attrs.array_num_value(38)  := p_source_51;
   l_rec_acct_attrs.array_acct_attr_code(39) := 'TAX_LINE_REF_ID';
   l_rec_acct_attrs.array_num_value(39)  := p_source_52;
   l_rec_acct_attrs.array_acct_attr_code(40) := 'TAX_REC_NREC_DIST_REF_ID';
   l_rec_acct_attrs.array_num_value(40)  := p_source_53;
   l_rec_acct_attrs.array_acct_attr_code(41) := 'TAX_SUMMARY_LINE_REF_ID';
   l_rec_acct_attrs.array_num_value(41)  := p_source_54;
   l_rec_acct_attrs.array_acct_attr_code(42) := 'UPG_CR_ENC_TYPE_ID';
   l_rec_acct_attrs.array_num_value(42)  := p_source_55;
   l_rec_acct_attrs.array_acct_attr_code(43) := 'UPG_DR_ENC_TYPE_ID';
   l_rec_acct_attrs.array_num_value(43)  := p_source_56;

   XLA_AE_LINES_PKG.SetLineAcctAttrs(l_rec_acct_attrs);
   p_gain_or_loss_ref  := XLA_AE_LINES_PKG.g_rec_lines.array_gain_or_loss_ref(XLA_AE_LINES_PKG.g_LineNumber);

   ---------------------------------------------------------------------------------------------------------------
   -- 4336173 -- assign Business Flow Class (replace code in xla_ae_lines_pkg.Business_Flow_Validation)
   ---------------------------------------------------------------------------------------------------------------
   XLA_AE_LINES_PKG.g_rec_lines.array_business_class_code(XLA_AE_LINES_PKG.g_LineNumber) := l_bflow_class_code;

   l_actual_upg_option  := XLA_AE_LINES_PKG.g_rec_lines.array_actual_upg_option(XLA_AE_LINES_PKG.g_LineNumber);
   l_enc_upg_option     := XLA_AE_LINES_PKG.g_rec_lines.array_enc_upg_option(XLA_AE_LINES_PKG.g_LineNumber);

   IF xla_accounting_cache_pkg.GetValueChar
         (p_source_code         => 'LEDGER_CATEGORY_CODE'
         ,p_target_ledger_id    => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id) IN ('PRIMARY','ALC')
   AND l_bflow_method_code = 'PRIOR_ENTRY'
--   AND (l_actual_upg_option = 'Y' OR l_enc_upg_option = 'Y') Bug 4922099
   AND ( (NVL(l_actual_upg_option, 'N') IN ('Y', 'O')) OR
         (NVL(l_enc_upg_option, 'N') IN ('Y', 'O'))
       )
   THEN
         xla_ae_lines_pkg.BflowUpgEntry
           (p_business_method_code    => l_bflow_method_code
           ,p_business_class_code     => l_bflow_class_code
           ,p_balance_type            => l_balance_type_code);
   ELSE
      NULL;
-- No business flow processing for business flow method of NONE.
   END IF;

   --
   -- call analytical criteria
   --
   
   --
   -- call description
   --
   
xla_ae_lines_pkg.SetLineDescription(
   p_ae_header_id => l_ae_header_id
  ,p_description  => Description_2 (
     p_application_id         => p_application_id
   , p_ae_header_id           => l_ae_header_id 
, p_source_1 => p_source_1
   )
);


   --
   -- call ADRs
   -- Bug 4922099
   --
   IF ( (l_bflow_method_code <> 'PRIOR_ENTRY') OR
        (NVL(l_actual_upg_option, 'N') = 'O') OR
        (NVL(l_enc_upg_option, 'N') = 'O')
      )
   THEN
   NULL;
   --
   --
   
  l_ccid := AcctDerRule_6(
           p_application_id           => p_application_id
         , p_ae_header_id             => l_ae_header_id 
, p_source_6 => p_source_6
, p_source_7 => p_source_7
, p_source_7_meaning => p_source_7_meaning
, p_source_8 => p_source_8
, p_source_9 => p_source_9
, p_source_9_meaning => p_source_9_meaning
, p_source_10 => p_source_10
, p_source_11 => p_source_11
, p_source_12 => p_source_12
, p_source_12_meaning => p_source_12_meaning
         , x_transaction_coa_id       => l_adr_transaction_coa_id
         , x_accounting_coa_id        => l_adr_accounting_coa_id
         , x_value_type_code          => l_adr_value_type_code
         , p_side                     => 'NA'
   );

   xla_ae_lines_pkg.set_ccid(
    p_code_combination_id          => l_ccid
  , p_value_type_code              => l_adr_value_type_code
  , p_transaction_coa_id           => l_adr_transaction_coa_id
  , p_accounting_coa_id            => l_adr_accounting_coa_id
  , p_adr_code                     => 'AP_EXCHG_TAXEXCHG_RATE_VAR'
  , p_adr_type_code                => 'S'
  , p_component_type               => l_component_type
  , p_component_code               => l_component_code
  , p_component_type_code          => l_component_type_code
  , p_component_appl_id            => l_component_appl_id
  , p_amb_context_code             => l_amb_context_code
  , p_side                         => 'NA'
  );


   l_segment := AcctDerRule_4(
           p_application_id           => p_application_id
         , p_ae_header_id             => l_ae_header_id 
, p_source_6 => p_source_6
, p_source_7 => p_source_7
, p_source_7_meaning => p_source_7_meaning
, p_source_8 => p_source_8
, p_source_9 => p_source_9
, p_source_9_meaning => p_source_9_meaning
, p_source_10 => p_source_10
         , x_transaction_coa_id       => l_adr_transaction_coa_id
         , x_accounting_coa_id        => l_adr_accounting_coa_id
         , x_flexfield_segment_code   => l_adr_flexfield_segment_code
         , x_flex_value_set_id        => l_adr_flex_value_set_id
         , x_value_type_code          => l_adr_value_type_code
         , x_value_combination_id     => l_adr_value_combination_id
         , x_value_segment_code       => l_adr_value_segment_code
         , p_side                     => 'NA'
         , p_override_seg_flag        => 'Y'
   );

   IF NVL(l_segment,'NULL') <> '#$NO_OVERRIDE#$' THEN  -- 4465612

      xla_ae_lines_pkg.set_segment(
          p_to_segment_code         => 'GL_ACCOUNT'
        , p_segment_value           => l_segment
        , p_from_segment_code       => l_adr_value_segment_code
        , p_from_combination_id     => l_adr_value_combination_id
        , p_value_type_code         => l_adr_value_type_code
        , p_transaction_coa_id      => l_adr_transaction_coa_id
        , p_accounting_coa_id       => l_adr_accounting_coa_id
        , p_flexfield_segment_code  => l_adr_flexfield_segment_code
        , p_flex_value_set_id       => l_adr_flex_value_set_id
        , p_adr_code                => 'AP_ERV_GAIN_LOSS_NAT_ACCT_SEG'
        , p_adr_type_code           => 'S'
        , p_component_type          => l_component_type
        , p_component_code          => l_component_code
        , p_component_type_code     => l_component_type_code
        , p_component_appl_id       => l_component_appl_id
        , p_amb_context_code        => l_amb_context_code
        , p_entity_code             => 'AP_INVOICES'
        , p_event_class_code        => 'CREDIT MEMOS'
        , p_side                    => 'NA'
        );

  END IF;

   l_segment := AcctDerRule_5(
           p_application_id           => p_application_id
         , p_ae_header_id             => l_ae_header_id 
, p_source_7 => p_source_7
, p_source_7_meaning => p_source_7_meaning
, p_source_9 => p_source_9
, p_source_9_meaning => p_source_9_meaning
, p_source_11 => p_source_11
         , x_transaction_coa_id       => l_adr_transaction_coa_id
         , x_accounting_coa_id        => l_adr_accounting_coa_id
         , x_flexfield_segment_code   => l_adr_flexfield_segment_code
         , x_flex_value_set_id        => l_adr_flex_value_set_id
         , x_value_type_code          => l_adr_value_type_code
         , x_value_combination_id     => l_adr_value_combination_id
         , x_value_segment_code       => l_adr_value_segment_code
         , p_side                     => 'NA'
         , p_override_seg_flag        => 'Y'
   );

   IF NVL(l_segment,'NULL') <> '#$NO_OVERRIDE#$' THEN  -- 4465612

      xla_ae_lines_pkg.set_segment(
          p_to_segment_code         => 'GL_BALANCING'
        , p_segment_value           => l_segment
        , p_from_segment_code       => l_adr_value_segment_code
        , p_from_combination_id     => l_adr_value_combination_id
        , p_value_type_code         => l_adr_value_type_code
        , p_transaction_coa_id      => l_adr_transaction_coa_id
        , p_accounting_coa_id       => l_adr_accounting_coa_id
        , p_flexfield_segment_code  => l_adr_flexfield_segment_code
        , p_flex_value_set_id       => l_adr_flex_value_set_id
        , p_adr_code                => 'AP_RELATED_DIST_BAL_SEG'
        , p_adr_type_code           => 'S'
        , p_component_type          => l_component_type
        , p_component_code          => l_component_code
        , p_component_type_code     => l_component_type_code
        , p_component_appl_id       => l_component_appl_id
        , p_amb_context_code        => l_amb_context_code
        , p_entity_code             => 'AP_INVOICES'
        , p_event_class_code        => 'CREDIT MEMOS'
        , p_side                    => 'NA'
        );

  END IF;

   --
   --
   END IF;
   --
   -- Bug 4922099
   IF ( ( (NVL(l_actual_upg_option, 'N') = 'O') OR
          (NVL(l_enc_upg_option, 'N') = 'O')
        ) AND
        (l_bflow_method_code = 'PRIOR_ENTRY')
      )
   THEN
      IF
      --
      1 = 2
      --
      THEN
      xla_accounting_err_pkg.build_message
                                    (p_appli_s_name            => 'XLA'
                                    ,p_msg_name                => 'XLA_UPG_OVERRIDE_ADR_UNDEFINED'
                                    ,p_token_1                 => 'LINE_NUMBER'
                                    ,p_value_1                 => XLA_AE_LINES_PKG.g_LineNumber
                                    ,p_token_2                 => 'LINE_TYPE_NAME'
                                    ,p_value_2                 => XLA_AE_SOURCES_PKG.GetComponentName (
                                                                             l_component_type
                                                                            ,l_component_code
                                                                            ,l_component_type_code
                                                                            ,l_component_appl_id
                                                                            ,l_amb_context_code
                                                                            ,l_entity_code
                                                                            ,l_event_class_code
                                                                           )
                                    ,p_token_3                 => 'OWNER'
                                    ,p_value_3                 => xla_lookups_pkg.get_meaning(
                                                                          p_lookup_type     => 'XLA_OWNER_TYPE'
                                                                          ,p_lookup_code    => l_component_type_code
                                                                         )
                                    ,p_token_4                 => 'PRODUCT_NAME'
                                    ,p_value_4                 => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.application_name
                                    ,p_entity_id               => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.entity_id
                                    ,p_event_id                => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.event_id
                                    ,p_ledger_id               => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id
                                    ,p_ae_header_id            =>  NULL
                                       );

        IF (C_LEVEL_ERROR>= g_log_level) THEN
                 trace
                      (p_msg      => 'ERROR: XLA_UPG_OVERRIDE_ADR_UNDEFINED'
                      ,p_level    => C_LEVEL_ERROR
                      ,p_module   => l_log_module);
        END IF;
      END IF;
   END IF;
   --
   --
   ------------------------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- NOTE: XLA_AE_LINES_PKG.ValidateCurrentLine should NOT be generated if business flow method is
   -- Prior Entry.  Currently, the following code is always generated.
   ------------------------------------------------------------------------------------------------
   XLA_AE_LINES_PKG.ValidateCurrentLine;

   ------------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- Populated credit and debit amounts -- Need to generate this within IF <condition>
   ------------------------------------------------------------------------------------
   XLA_AE_LINES_PKG.SetDebitCreditAmounts;

   ----------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- Update journal entry status -- Need to generate this within IF <condition>
   ----------------------------------------------------------------------------------
   XLA_AE_JOURNAL_ENTRY_PKG.UpdateJournalEntryStatus
         (p_hdr_idx => g_array_event(p_event_id).array_value_num('header_index')
         ,p_balance_type_code => l_balance_type_code
         );

   -------------------------------------------------------------------------------------------
   -- 4262811 - Generate the Accrual Reversal lines
   -------------------------------------------------------------------------------------------
   BEGIN
      l_acc_rev_flag := XLA_AE_HEADER_PKG.g_rec_header_new.array_accrual_reversal_flag
                              (g_array_event(p_event_id).array_value_num('header_index'));
      IF l_acc_rev_flag IS NULL THEN
         l_acc_rev_flag := 'N';
      END IF;
   EXCEPTION
      WHEN OTHERS THEN
         l_acc_rev_flag := 'N';
   END;
   --
   IF (l_acc_rev_flag = 'Y') THEN

       -- 4645092  ------------------------------------------------------------------------------
       -- To allow MPA report to determine if it should generate report process
       XLA_ACCOUNTING_PKG.g_mpa_accrual_exists := 'Y';
       ------------------------------------------------------------------------------------------

       l_accrual_line_num := XLA_AE_LINES_PKG.g_LineNumber;
       XLA_AE_LINES_PKG.CopyLineInfo(l_accrual_line_num);
   -- added call to set_ccid to execute mapping  for secondary accrual reversal entries bug 7444204
   -- call ADRs
   -- Bug 4922099
   --
   IF ( (l_bflow_method_code <> 'PRIOR_ENTRY') OR
        (NVL(l_actual_upg_option, 'N') = 'O') OR
        (NVL(l_enc_upg_option, 'N') = 'O')
      )
   THEN
   NULL;
   --
   --
   
  l_ccid := AcctDerRule_6(
           p_application_id           => p_application_id
         , p_ae_header_id             => l_ae_header_id 
, p_source_6 => p_source_6
, p_source_7 => p_source_7
, p_source_7_meaning => p_source_7_meaning
, p_source_8 => p_source_8
, p_source_9 => p_source_9
, p_source_9_meaning => p_source_9_meaning
, p_source_10 => p_source_10
, p_source_11 => p_source_11
, p_source_12 => p_source_12
, p_source_12_meaning => p_source_12_meaning
         , x_transaction_coa_id       => l_adr_transaction_coa_id
         , x_accounting_coa_id        => l_adr_accounting_coa_id
         , x_value_type_code          => l_adr_value_type_code
         , p_side                     => 'NA'
   );

   xla_ae_lines_pkg.set_ccid(
    p_code_combination_id          => l_ccid
  , p_value_type_code              => l_adr_value_type_code
  , p_transaction_coa_id           => l_adr_transaction_coa_id
  , p_accounting_coa_id            => l_adr_accounting_coa_id
  , p_adr_code                     => 'AP_EXCHG_TAXEXCHG_RATE_VAR'
  , p_adr_type_code                => 'S'
  , p_component_type               => l_component_type
  , p_component_code               => l_component_code
  , p_component_type_code          => l_component_type_code
  , p_component_appl_id            => l_component_appl_id
  , p_amb_context_code             => l_amb_context_code
  , p_side                         => 'NA'
  );


   l_segment := AcctDerRule_4(
           p_application_id           => p_application_id
         , p_ae_header_id             => l_ae_header_id 
, p_source_6 => p_source_6
, p_source_7 => p_source_7
, p_source_7_meaning => p_source_7_meaning
, p_source_8 => p_source_8
, p_source_9 => p_source_9
, p_source_9_meaning => p_source_9_meaning
, p_source_10 => p_source_10
         , x_transaction_coa_id       => l_adr_transaction_coa_id
         , x_accounting_coa_id        => l_adr_accounting_coa_id
         , x_flexfield_segment_code   => l_adr_flexfield_segment_code
         , x_flex_value_set_id        => l_adr_flex_value_set_id
         , x_value_type_code          => l_adr_value_type_code
         , x_value_combination_id     => l_adr_value_combination_id
         , x_value_segment_code       => l_adr_value_segment_code
         , p_side                     => 'NA'
         , p_override_seg_flag        => 'Y'
   );

   IF NVL(l_segment,'NULL') <> '#$NO_OVERRIDE#$' THEN  -- 4465612

      xla_ae_lines_pkg.set_segment(
          p_to_segment_code         => 'GL_ACCOUNT'
        , p_segment_value           => l_segment
        , p_from_segment_code       => l_adr_value_segment_code
        , p_from_combination_id     => l_adr_value_combination_id
        , p_value_type_code         => l_adr_value_type_code
        , p_transaction_coa_id      => l_adr_transaction_coa_id
        , p_accounting_coa_id       => l_adr_accounting_coa_id
        , p_flexfield_segment_code  => l_adr_flexfield_segment_code
        , p_flex_value_set_id       => l_adr_flex_value_set_id
        , p_adr_code                => 'AP_ERV_GAIN_LOSS_NAT_ACCT_SEG'
        , p_adr_type_code           => 'S'
        , p_component_type          => l_component_type
        , p_component_code          => l_component_code
        , p_component_type_code     => l_component_type_code
        , p_component_appl_id       => l_component_appl_id
        , p_amb_context_code        => l_amb_context_code
        , p_entity_code             => 'AP_INVOICES'
        , p_event_class_code        => 'CREDIT MEMOS'
        , p_side                    => 'NA'
        );

  END IF;

   l_segment := AcctDerRule_5(
           p_application_id           => p_application_id
         , p_ae_header_id             => l_ae_header_id 
, p_source_7 => p_source_7
, p_source_7_meaning => p_source_7_meaning
, p_source_9 => p_source_9
, p_source_9_meaning => p_source_9_meaning
, p_source_11 => p_source_11
         , x_transaction_coa_id       => l_adr_transaction_coa_id
         , x_accounting_coa_id        => l_adr_accounting_coa_id
         , x_flexfield_segment_code   => l_adr_flexfield_segment_code
         , x_flex_value_set_id        => l_adr_flex_value_set_id
         , x_value_type_code          => l_adr_value_type_code
         , x_value_combination_id     => l_adr_value_combination_id
         , x_value_segment_code       => l_adr_value_segment_code
         , p_side                     => 'NA'
         , p_override_seg_flag        => 'Y'
   );

   IF NVL(l_segment,'NULL') <> '#$NO_OVERRIDE#$' THEN  -- 4465612

      xla_ae_lines_pkg.set_segment(
          p_to_segment_code         => 'GL_BALANCING'
        , p_segment_value           => l_segment
        , p_from_segment_code       => l_adr_value_segment_code
        , p_from_combination_id     => l_adr_value_combination_id
        , p_value_type_code         => l_adr_value_type_code
        , p_transaction_coa_id      => l_adr_transaction_coa_id
        , p_accounting_coa_id       => l_adr_accounting_coa_id
        , p_flexfield_segment_code  => l_adr_flexfield_segment_code
        , p_flex_value_set_id       => l_adr_flex_value_set_id
        , p_adr_code                => 'AP_RELATED_DIST_BAL_SEG'
        , p_adr_type_code           => 'S'
        , p_component_type          => l_component_type
        , p_component_code          => l_component_code
        , p_component_type_code     => l_component_type_code
        , p_component_appl_id       => l_component_appl_id
        , p_amb_context_code        => l_amb_context_code
        , p_entity_code             => 'AP_INVOICES'
        , p_event_class_code        => 'CREDIT MEMOS'
        , p_side                    => 'NA'
        );

  END IF;

   --
   --
   END IF;

       --
       -- Update the line information that should be overwritten
       --
       XLA_AE_LINES_PKG.set_ae_header_id(p_ae_header_id => p_event_id ,
                                         p_header_num   => 1);
       XLA_AE_LINES_PKG.g_rec_lines.array_header_num(XLA_AE_LINES_PKG.g_LineNumber)  :=1;

       XLA_AE_LINES_PKG.g_rec_lines.array_business_class_code(XLA_AE_LINES_PKG.g_LineNumber) := NULL; -- 4669271

       IF l_bflow_method_code <> 'NONE' THEN  -- 4655713b
          XLA_AE_LINES_PKG.g_rec_lines.array_reversal_code(XLA_AE_LINES_PKG.g_LineNumber) := CONCAT('MPA_',l_bflow_method_code);
       END IF;

      --
      -- Depending on the Reversal Method setup, do a switch side or changes sign for the amounts
      --
      IF (XLA_AE_JOURNAL_ENTRY_PKG.g_cache_ledgers_info.ledger_reversal_option = 'SIDE') THEN
          XLA_AE_LINES_PKG.g_rec_lines.array_natural_side_code(XLA_AE_LINES_PKG.g_LineNumber) :=  l_acc_rev_natural_side_code;
      ELSE
          ---------------------------------------------------------------------------------------------------
          -- 4262811a Switch Sign
          ---------------------------------------------------------------------------------------------------
          XLA_AE_LINES_PKG.g_rec_lines.array_switch_side_flag(XLA_AE_LINES_PKG.g_LineNumber) := 'N';  -- 5052518
          XLA_AE_LINES_PKG.g_rec_lines.array_ledger_amount(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_ledger_amount(XLA_AE_LINES_PKG.g_LineNumber) * -1;
          XLA_AE_LINES_PKG.g_rec_lines.array_entered_amount(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_entered_amount(XLA_AE_LINES_PKG.g_LineNumber) * -1;
          -- 5132302
          XLA_AE_LINES_PKG.g_rec_lines.array_bflow_applied_to_amt(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_bflow_applied_to_amt(XLA_AE_LINES_PKG.g_LineNumber) * -1;

      END IF;

      -- 4955764
      XLA_AE_LINES_PKG.g_rec_lines.array_gl_date(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_HEADER_PKG.g_rec_header_new.array_gl_date(g_array_event(p_event_id).array_value_num('acc_rev_header_index'));


      XLA_AE_LINES_PKG.ValidateCurrentLine;
      XLA_AE_LINES_PKG.SetDebitCreditAmounts;

      XLA_AE_JOURNAL_ENTRY_PKG.UpdateJournalEntryStatus
               (p_hdr_idx           => g_array_event(p_event_id).array_value_num('acc_rev_header_index')
               ,p_balance_type_code => l_balance_type_code);

   END IF;

   -----------------------------------------------------------------------------------------
   -- 4262811 Multiperiod Accounting
   -----------------------------------------------------------------------------------------
     -- No MPA option is assigned.


END IF;
END IF;
--

--
IF (C_LEVEL_PROCEDURE >= g_log_level) THEN
   trace
      (p_msg      => 'END of AcctLineType_70'
      ,p_level    => C_LEVEL_PROCEDURE
      ,p_module   => l_log_module);
END IF;
--
EXCEPTION
  WHEN xla_exceptions_pkg.application_exception THEN
      RAISE;
  WHEN OTHERS THEN
       xla_exceptions_pkg.raise_message
           (p_location => 'XLA_00200_AAD_S_000010_BC_PKG.AcctLineType_70');
END AcctLineType_70;
--

---------------------------------------
--
-- PRIVATE FUNCTION
--         AcctLineType_71
--
---------------------------------------
PROCEDURE AcctLineType_71 (
  p_application_id        IN NUMBER
 ,p_event_id              IN NUMBER
 ,p_calculate_acctd_flag  IN VARCHAR2
 ,p_calculate_g_l_flag    IN VARCHAR2
 ,p_actual_flag           IN OUT VARCHAR2
 ,p_balance_type_code     OUT VARCHAR2
 ,p_gain_or_loss_ref      OUT VARCHAR2
 
--Invoice Distribution Description
 , p_source_1            IN VARCHAR2
--Purchase Order Rate Variance Gain Account
 , p_source_6            IN NUMBER
--Automatic Offsets Value
 , p_source_7            IN VARCHAR2
 , p_source_7_meaning    IN VARCHAR2
--Invoice Distribution Ledger Amount
 , p_source_8            IN NUMBER
--Destination Type of the PO Distribution
 , p_source_9            IN VARCHAR2
 , p_source_9_meaning    IN VARCHAR2
--Purchase Order Rate Variance Loss Account
 , p_source_10            IN NUMBER
--Invoice Distribution Account
 , p_source_11            IN NUMBER
--Automatic Offsets Flag
 , p_source_12            IN VARCHAR2
 , p_source_12_meaning    IN VARCHAR2
--Invoice Distribution Type
 , p_source_15            IN VARCHAR2
 , p_source_15_meaning    IN VARCHAR2
--Purchasing Encumbrance Option
 , p_source_17            IN VARCHAR2
 , p_source_17_meaning    IN VARCHAR2
--Accounting Reversal Indicator
 , p_source_19            IN VARCHAR2
--Distribution Link Type
 , p_source_21            IN VARCHAR2
--Allocation to Main Distribution Identifier
 , p_source_23            IN NUMBER
--Invoice Identifier
 , p_source_24            IN NUMBER
--Business Flow Accounts Payable Application Identifier
 , p_source_25            IN NUMBER
--Business Flow Invoice Distribution Type
 , p_source_26            IN VARCHAR2
--Business Flow Invoice Entity Code
 , p_source_27            IN VARCHAR2
--Business Flow Invoice Distribution Identifier
 , p_source_28            IN NUMBER
--Business Flow Invoice Identifier
 , p_source_29            IN NUMBER
--Invoice Distribution Identifier
 , p_source_30            IN NUMBER
--Payables Encumbrance Upgrade Credit Account
 , p_source_31            IN NUMBER
--Payables Encumbrance Upgrade Credit Amount
 , p_source_32            IN NUMBER
--Invoice Currency Code
 , p_source_33            IN VARCHAR2
--Payables Encumbrance Upgrade Credit Base Amount
 , p_source_34            IN NUMBER
--Payables Encumbrance Upgrade Debit Account
 , p_source_35            IN NUMBER
--Payables Encumbrance Upgrade Debit Amount
 , p_source_36            IN NUMBER
--Payables Encumbrance Upgrade Debit Base Amount
 , p_source_37            IN NUMBER
--Payables Encumbrance Upgrade Option
 , p_source_38            IN VARCHAR2
--Invoice Exchange Date
 , p_source_39            IN DATE
--Invoice Exchange Rate
 , p_source_40            IN NUMBER
--Invoice Exchange Rate Type
 , p_source_41            IN VARCHAR2
--Deferred Accounting End Date
 , p_source_43            IN DATE
--Deferred Accounting Option
 , p_source_44            IN VARCHAR2
--Deferred Accounting Start Date
 , p_source_45            IN DATE
--Override Accounted Amount Indicator
 , p_source_46            IN VARCHAR2
 , p_source_46_meaning    IN VARCHAR2
--Invoice Supplier Identifier
 , p_source_47            IN NUMBER
--Invoice Supplier Site Identifier
 , p_source_48            IN NUMBER
--Third Party Type
 , p_source_49            IN VARCHAR2
--Parent Reversal Identifier
 , p_source_50            IN NUMBER
--Invoice Distribution Tax Line Identifier
 , p_source_52            IN NUMBER
--Invoice Distribution Tax Distribution Identifier from Tax
 , p_source_53            IN NUMBER
--Invoice Distribution Summary Tax Line Identifier
 , p_source_54            IN NUMBER
--Payables Upgrade Credit Encumbrance Type Identifier
 , p_source_55            IN NUMBER
--Payables Upgrade Debit Encumbrance Type Identifier
 , p_source_56            IN NUMBER
--Invoice Distribution Encumbrance Amount
 , p_source_65            IN NUMBER
--Invoice Distribution Encumbrance Ledger Amount
 , p_source_66            IN NUMBER
)
IS

l_component_type              VARCHAR2(80);
l_component_code              VARCHAR2(30);
l_component_type_code         VARCHAR2(1);
l_component_appl_id           INTEGER;
l_amb_context_code            VARCHAR2(30);
l_entity_code                 VARCHAR2(30);
l_event_class_code            VARCHAR2(30);
l_ae_header_id                NUMBER;
l_event_type_code             VARCHAR2(30);
l_line_definition_code        VARCHAR2(30);
l_line_definition_owner_code  VARCHAR2(1);
--
-- adr variables
l_segment                     VARCHAR2(30);
l_ccid                        NUMBER;
l_adr_transaction_coa_id      NUMBER;
l_adr_accounting_coa_id       NUMBER;
l_adr_flexfield_segment_code  VARCHAR2(30);
l_adr_flex_value_set_id       NUMBER;
l_adr_value_type_code         VARCHAR2(30);
l_adr_value_combination_id    NUMBER;
l_adr_value_segment_code      VARCHAR2(30);

l_bflow_method_code           VARCHAR2(30);  -- 4219869 Business Flow
l_bflow_class_code            VARCHAR2(30);  -- 4219869 Business Flow
l_inherit_desc_flag           VARCHAR2(1);   -- 4219869 Business Flow
l_budgetary_control_flag      VARCHAR2(1);   -- 4458381 Public Sector Enh

-- 4262811 Variables ------------------------------------------------------------------------------------------
l_entered_amt_idx             NUMBER;
l_accted_amt_idx              NUMBER;
l_acc_rev_flag                VARCHAR2(1);
l_accrual_line_num            NUMBER;
l_tmp_amt                     NUMBER;
l_acc_rev_natural_side_code   VARCHAR2(1);

l_num_entries                 NUMBER;
l_gl_dates                    xla_ae_journal_entry_pkg.t_array_date;
l_accted_amts                 xla_ae_journal_entry_pkg.t_array_num;
l_entered_amts                xla_ae_journal_entry_pkg.t_array_num;
l_period_names                xla_ae_journal_entry_pkg.t_array_V15L;
l_recog_line_1                NUMBER;
l_recog_line_2                NUMBER;

l_bflow_applied_to_amt_idx    NUMBER;                                -- 5132302
l_bflow_applied_to_amt        NUMBER;                                -- 5132302
l_bflow_applied_to_amts       xla_ae_journal_entry_pkg.t_array_num;  -- 5132302

l_event_id                    NUMBER;  -- To handle MPA header Description: xla_ae_header_pkg.SetHdrDescription

--l_rounding_ccy                VARCHAR2(15); -- To handle MPA rounding  4262811b
l_same_currency               BOOLEAN;        -- To handle MPA rounding  4262811b

---------------------------------------------------------------------------------------------------------------


--
-- bulk performance
--
l_balance_type_code           VARCHAR2(1);
l_rec_acct_attrs              XLA_AE_LINES_PKG.t_rec_acct_attrs;
l_log_module                  VARCHAR2(240);

--
-- Upgrade strategy
--
l_actual_upg_option           VARCHAR2(1);
l_enc_upg_option           VARCHAR2(1);

--
BEGIN
--
IF g_log_enabled THEN
      l_log_module := C_DEFAULT_MODULE||'.AcctLineType_71';
END IF;
--
IF (C_LEVEL_PROCEDURE >= g_log_level) THEN

      trace
         (p_msg      => 'BEGIN of AcctLineType_71'
         ,p_level    => C_LEVEL_PROCEDURE
         ,p_module   => l_log_module);

END IF;
--
l_component_type             := 'AMB_JLT';
l_component_code             := 'AP_TAX_EX_RATE_VAR_DM_ENC_DR';
l_component_type_code        := 'S';
l_component_appl_id          :=  200;
l_amb_context_code           := 'DEFAULT';
l_entity_code                := 'AP_INVOICES';
l_event_class_code           := 'DEBIT MEMOS';
l_event_type_code            := 'DEBIT MEMOS_ALL';
l_line_definition_owner_code := 'S';
l_line_definition_code       := 'ENC_DM_ALL';
--
l_balance_type_code          := 'E';
l_segment                     := NULL;
l_ccid                        := NULL;
l_adr_transaction_coa_id      := NULL;
l_adr_accounting_coa_id       := NULL;
l_adr_flexfield_segment_code  := NULL;
l_adr_flex_value_set_id       := NULL;
l_adr_value_type_code         := NULL;
l_adr_value_combination_id    := NULL;
l_adr_value_segment_code      := NULL;

l_bflow_method_code          := 'NONE';   -- 4219869 Business Flow
l_bflow_class_code           := 'AP_INV_ENCUM';    -- 4219869 Business Flow
l_inherit_desc_flag          := 'N';   -- 4219869 Business Flow
l_budgetary_control_flag     := 'Y';

l_bflow_applied_to_amt_idx   := NULL; -- 5132302
l_bflow_applied_to_amt       := NULL; -- 5132302
l_entered_amt_idx            := NULL;          -- 4262811
l_accted_amt_idx             := NULL;          -- 4262811
l_acc_rev_flag               := NULL;          -- 4262811
l_accrual_line_num           := NULL;          -- 4262811
l_tmp_amt                    := NULL;          -- 4262811
--
IF ((p_calculate_g_l_flag = 'Y' AND XLA_AE_JOURNAL_ENTRY_PKG.g_cache_ledgers_info.ledger_category_code <> 'ALC') or
            (XLA_AE_JOURNAL_ENTRY_PKG.g_cache_ledgers_info.ledger_category_code in ('ALC', 'SECONDARY') AND XLA_AE_JOURNAL_ENTRY_PKG.g_cache_ledgers_info.calculate_amts_flag='Y')) THEN
               return;
  END IF;
  
IF XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id = XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.ledger_id OR
    l_balance_type_code <> 'B' THEN
IF NVL(p_source_15,'
') =  'TERV' AND 
NVL(p_source_17,'
') =  'Y'
 THEN 

   --
   XLA_AE_LINES_PKG.SetNewLine;

   p_balance_type_code          := l_balance_type_code;
   -- set the flag so later we will know whether the gain loss line needs to be created
   
   IF(l_balance_type_code = 'A' ) THEN
     p_actual_flag :='G';
   END IF;

   --
   -- bulk performance
   --
   XLA_AE_LINES_PKG.set_ae_header_id (p_ae_header_id => p_event_id ,
                                      p_header_num   => 0); -- 4262811
   --
   -- set accounting line options
   --
   l_ae_header_id:= xla_ae_lines_pkg.SetAcctLineOption(
           p_natural_side_code          => 'D'
         , p_gain_or_loss_flag          => 'Y'
         , p_gl_transfer_mode_code      => 'S'
         , p_acct_entry_type_code       => 'E'
         , p_switch_side_flag           => 'Y'
         , p_merge_duplicate_code       => 'N'
         );
   --
   l_acc_rev_natural_side_code := 'C';  -- 4262811
   -- 
   --
   -- set accounting line type info
   --
   xla_ae_lines_pkg.SetAcctLineType
      (p_component_type             => l_component_type
      ,p_event_type_code            => l_event_type_code
      ,p_line_definition_owner_code => l_line_definition_owner_code
      ,p_line_definition_code       => l_line_definition_code
      ,p_accounting_line_code       => l_component_code
      ,p_accounting_line_type_code  => l_component_type_code
      ,p_accounting_line_appl_id    => l_component_appl_id
      ,p_amb_context_code           => l_amb_context_code
      ,p_entity_code                => l_entity_code
      ,p_event_class_code           => l_event_class_code);
   --
   -- set accounting class
   --
   xla_ae_lines_pkg.SetAcctClass(
           p_accounting_class_code  => 'TERV'
         , p_ae_header_id           => l_ae_header_id
         );

   --
   -- set rounding class
   --
   XLA_AE_LINES_PKG.g_rec_lines.array_rounding_class(XLA_AE_LINES_PKG.g_LineNumber) :=
                      'TERV';

   --
   xla_ae_lines_pkg.g_rec_lines.array_calculate_acctd_flag(xla_ae_lines_pkg.g_LineNumber) := p_calculate_acctd_flag;
   xla_ae_lines_pkg.g_rec_lines.array_calculate_g_l_flag(xla_ae_lines_pkg.g_LineNumber) := p_calculate_g_l_flag;
   --
   -- bulk performance
   --
   XLA_AE_LINES_PKG.g_rec_lines.array_balance_type_code(XLA_AE_LINES_PKG.g_LineNumber) := l_balance_type_code;

   XLA_AE_LINES_PKG.g_rec_lines.array_ledger_id(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id;

   -- 4955764
   XLA_AE_LINES_PKG.g_rec_lines.array_gl_date(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_HEADER_PKG.g_rec_header_new.array_gl_date(g_array_event(p_event_id).array_value_num('header_index'));

   -- 4458381 Public Sector Enh
      XLA_AE_LINES_PKG.g_rec_lines.array_encumbrance_type_id(XLA_AE_LINES_PKG.g_LineNumber) := 1060;
   --
   -- set accounting attributes for the line type
   --
   l_entered_amt_idx := 23;
   l_accted_amt_idx  := 28;
   l_bflow_applied_to_amt_idx  := NULL;  -- 5132302
   l_rec_acct_attrs.array_acct_attr_code(1) := 'ACCOUNTING_REVERSAL_OPTION';
   l_rec_acct_attrs.array_char_value(1)  := p_source_19;
   l_rec_acct_attrs.array_acct_attr_code(2) := 'ALLOC_TO_APPLICATION_ID';
   l_rec_acct_attrs.array_num_value(2)  := 
xla_ae_sources_pkg.GetSystemSourceNum(
   p_source_code           => 'XLA_EVENT_APPL_ID'
 , p_source_type_code      => 'Y'
 , p_source_application_id =>  602
);
   l_rec_acct_attrs.array_acct_attr_code(3) := 'ALLOC_TO_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(3)  := p_source_21;
   l_rec_acct_attrs.array_acct_attr_code(4) := 'ALLOC_TO_ENTITY_CODE';
   l_rec_acct_attrs.array_char_value(4)  := 
xla_ae_sources_pkg.GetSystemSourceChar(
   p_source_code           => 'XLA_ENTITY_CODE'
 , p_source_type_code      => 'Y'
 , p_source_application_id =>  602
);
   l_rec_acct_attrs.array_acct_attr_code(5) := 'ALLOC_TO_FIRST_DIST_ID';
   l_rec_acct_attrs.array_num_value(5)  :=  to_char(p_source_23);
   l_rec_acct_attrs.array_acct_attr_code(6) := 'ALLOC_TO_FIRST_SYS_TRAN_ID';
   l_rec_acct_attrs.array_num_value(6)  :=  to_char(p_source_24);
   l_rec_acct_attrs.array_acct_attr_code(7) := 'APPLIED_TO_APPLICATION_ID';
   l_rec_acct_attrs.array_num_value(7)  := p_source_25;
   l_rec_acct_attrs.array_acct_attr_code(8) := 'APPLIED_TO_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(8)  := p_source_26;
   l_rec_acct_attrs.array_acct_attr_code(9) := 'APPLIED_TO_ENTITY_CODE';
   l_rec_acct_attrs.array_char_value(9)  := p_source_27;
   l_rec_acct_attrs.array_acct_attr_code(10) := 'APPLIED_TO_FIRST_DIST_ID';
   l_rec_acct_attrs.array_num_value(10)  :=  to_char(p_source_28);
   l_rec_acct_attrs.array_acct_attr_code(11) := 'APPLIED_TO_FIRST_SYS_TRAN_ID';
   l_rec_acct_attrs.array_num_value(11)  :=  to_char(p_source_29);
   l_rec_acct_attrs.array_acct_attr_code(12) := 'DISTRIBUTION_IDENTIFIER_1';
   l_rec_acct_attrs.array_num_value(12)  :=  to_char(p_source_30);
   l_rec_acct_attrs.array_acct_attr_code(13) := 'DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(13)  := p_source_21;
   l_rec_acct_attrs.array_acct_attr_code(14) := 'ENC_UPG_CR_CCID';
   l_rec_acct_attrs.array_num_value(14)  := p_source_31;
   l_rec_acct_attrs.array_acct_attr_code(15) := 'ENC_UPG_CR_ENTERED_AMT';
   l_rec_acct_attrs.array_num_value(15)  := p_source_32;
   l_rec_acct_attrs.array_acct_attr_code(16) := 'ENC_UPG_CR_ENTERED_CURR';
   l_rec_acct_attrs.array_char_value(16)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(17) := 'ENC_UPG_CR_LEDGER_AMT';
   l_rec_acct_attrs.array_num_value(17)  := p_source_34;
   l_rec_acct_attrs.array_acct_attr_code(18) := 'ENC_UPG_DR_CCID';
   l_rec_acct_attrs.array_num_value(18)  := p_source_35;
   l_rec_acct_attrs.array_acct_attr_code(19) := 'ENC_UPG_DR_ENTERED_AMT';
   l_rec_acct_attrs.array_num_value(19)  := p_source_36;
   l_rec_acct_attrs.array_acct_attr_code(20) := 'ENC_UPG_DR_ENTERED_CURR';
   l_rec_acct_attrs.array_char_value(20)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(21) := 'ENC_UPG_DR_LEDGER_AMT';
   l_rec_acct_attrs.array_num_value(21)  := p_source_37;
   l_rec_acct_attrs.array_acct_attr_code(22) := 'ENC_UPG_OPTION';
   l_rec_acct_attrs.array_char_value(22)  := p_source_38;
   l_rec_acct_attrs.array_acct_attr_code(23) := 'ENTERED_CURRENCY_AMOUNT';
   l_rec_acct_attrs.array_num_value(23)  := p_source_65;
   l_rec_acct_attrs.array_acct_attr_code(24) := 'ENTERED_CURRENCY_CODE';
   l_rec_acct_attrs.array_char_value(24)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(25) := 'EXCHANGE_DATE';
   l_rec_acct_attrs.array_date_value(25)  := p_source_39;
   l_rec_acct_attrs.array_acct_attr_code(26) := 'EXCHANGE_RATE';
   l_rec_acct_attrs.array_num_value(26)  := p_source_40;
   l_rec_acct_attrs.array_acct_attr_code(27) := 'EXCHANGE_RATE_TYPE';
   l_rec_acct_attrs.array_char_value(27)  := p_source_41;
   l_rec_acct_attrs.array_acct_attr_code(28) := 'LEDGER_AMOUNT';
   l_rec_acct_attrs.array_num_value(28)  := p_source_66;
   l_rec_acct_attrs.array_acct_attr_code(29) := 'MULTIPERIOD_END_DATE';
   l_rec_acct_attrs.array_date_value(29)  := p_source_43;
   l_rec_acct_attrs.array_acct_attr_code(30) := 'MULTIPERIOD_OPTION';
   l_rec_acct_attrs.array_char_value(30)  := p_source_44;
   l_rec_acct_attrs.array_acct_attr_code(31) := 'MULTIPERIOD_START_DATE';
   l_rec_acct_attrs.array_date_value(31)  := p_source_45;
   l_rec_acct_attrs.array_acct_attr_code(32) := 'OVERRIDE_ACCTD_AMT_FLAG';
   l_rec_acct_attrs.array_char_value(32)  := p_source_46;
   l_rec_acct_attrs.array_acct_attr_code(33) := 'PARTY_ID';
   l_rec_acct_attrs.array_num_value(33)  := p_source_47;
   l_rec_acct_attrs.array_acct_attr_code(34) := 'PARTY_SITE_ID';
   l_rec_acct_attrs.array_num_value(34)  := p_source_48;
   l_rec_acct_attrs.array_acct_attr_code(35) := 'PARTY_TYPE';
   l_rec_acct_attrs.array_char_value(35)  := p_source_49;
   l_rec_acct_attrs.array_acct_attr_code(36) := 'REVERSED_DISTRIBUTION_ID1';
   l_rec_acct_attrs.array_num_value(36)  :=  to_char(p_source_50);
   l_rec_acct_attrs.array_acct_attr_code(37) := 'REVERSED_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(37)  := p_source_21;
   l_rec_acct_attrs.array_acct_attr_code(38) := 'TAX_LINE_REF_ID';
   l_rec_acct_attrs.array_num_value(38)  := p_source_52;
   l_rec_acct_attrs.array_acct_attr_code(39) := 'TAX_REC_NREC_DIST_REF_ID';
   l_rec_acct_attrs.array_num_value(39)  := p_source_53;
   l_rec_acct_attrs.array_acct_attr_code(40) := 'TAX_SUMMARY_LINE_REF_ID';
   l_rec_acct_attrs.array_num_value(40)  := p_source_54;
   l_rec_acct_attrs.array_acct_attr_code(41) := 'UPG_CR_ENC_TYPE_ID';
   l_rec_acct_attrs.array_num_value(41)  := p_source_55;
   l_rec_acct_attrs.array_acct_attr_code(42) := 'UPG_DR_ENC_TYPE_ID';
   l_rec_acct_attrs.array_num_value(42)  := p_source_56;

   XLA_AE_LINES_PKG.SetLineAcctAttrs(l_rec_acct_attrs);
   p_gain_or_loss_ref  := XLA_AE_LINES_PKG.g_rec_lines.array_gain_or_loss_ref(XLA_AE_LINES_PKG.g_LineNumber);

   ---------------------------------------------------------------------------------------------------------------
   -- 4336173 -- assign Business Flow Class (replace code in xla_ae_lines_pkg.Business_Flow_Validation)
   ---------------------------------------------------------------------------------------------------------------
   XLA_AE_LINES_PKG.g_rec_lines.array_business_class_code(XLA_AE_LINES_PKG.g_LineNumber) := l_bflow_class_code;

   l_actual_upg_option  := XLA_AE_LINES_PKG.g_rec_lines.array_actual_upg_option(XLA_AE_LINES_PKG.g_LineNumber);
   l_enc_upg_option     := XLA_AE_LINES_PKG.g_rec_lines.array_enc_upg_option(XLA_AE_LINES_PKG.g_LineNumber);

   IF xla_accounting_cache_pkg.GetValueChar
         (p_source_code         => 'LEDGER_CATEGORY_CODE'
         ,p_target_ledger_id    => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id) IN ('PRIMARY','ALC')
   AND l_bflow_method_code = 'PRIOR_ENTRY'
--   AND (l_actual_upg_option = 'Y' OR l_enc_upg_option = 'Y') Bug 4922099
   AND ( (NVL(l_actual_upg_option, 'N') IN ('Y', 'O')) OR
         (NVL(l_enc_upg_option, 'N') IN ('Y', 'O'))
       )
   THEN
         xla_ae_lines_pkg.BflowUpgEntry
           (p_business_method_code    => l_bflow_method_code
           ,p_business_class_code     => l_bflow_class_code
           ,p_balance_type            => l_balance_type_code);
   ELSE
      NULL;
-- No business flow processing for business flow method of NONE.
   END IF;

   --
   -- call analytical criteria
   --
   
   --
   -- call description
   --
   
xla_ae_lines_pkg.SetLineDescription(
   p_ae_header_id => l_ae_header_id
  ,p_description  => Description_2 (
     p_application_id         => p_application_id
   , p_ae_header_id           => l_ae_header_id 
, p_source_1 => p_source_1
   )
);


   --
   -- call ADRs
   -- Bug 4922099
   --
   IF ( (l_bflow_method_code <> 'PRIOR_ENTRY') OR
        (NVL(l_actual_upg_option, 'N') = 'O') OR
        (NVL(l_enc_upg_option, 'N') = 'O')
      )
   THEN
   NULL;
   --
   --
   
  l_ccid := AcctDerRule_6(
           p_application_id           => p_application_id
         , p_ae_header_id             => l_ae_header_id 
, p_source_6 => p_source_6
, p_source_7 => p_source_7
, p_source_7_meaning => p_source_7_meaning
, p_source_8 => p_source_8
, p_source_9 => p_source_9
, p_source_9_meaning => p_source_9_meaning
, p_source_10 => p_source_10
, p_source_11 => p_source_11
, p_source_12 => p_source_12
, p_source_12_meaning => p_source_12_meaning
         , x_transaction_coa_id       => l_adr_transaction_coa_id
         , x_accounting_coa_id        => l_adr_accounting_coa_id
         , x_value_type_code          => l_adr_value_type_code
         , p_side                     => 'NA'
   );

   xla_ae_lines_pkg.set_ccid(
    p_code_combination_id          => l_ccid
  , p_value_type_code              => l_adr_value_type_code
  , p_transaction_coa_id           => l_adr_transaction_coa_id
  , p_accounting_coa_id            => l_adr_accounting_coa_id
  , p_adr_code                     => 'AP_EXCHG_TAXEXCHG_RATE_VAR'
  , p_adr_type_code                => 'S'
  , p_component_type               => l_component_type
  , p_component_code               => l_component_code
  , p_component_type_code          => l_component_type_code
  , p_component_appl_id            => l_component_appl_id
  , p_amb_context_code             => l_amb_context_code
  , p_side                         => 'NA'
  );


   l_segment := AcctDerRule_4(
           p_application_id           => p_application_id
         , p_ae_header_id             => l_ae_header_id 
, p_source_6 => p_source_6
, p_source_7 => p_source_7
, p_source_7_meaning => p_source_7_meaning
, p_source_8 => p_source_8
, p_source_9 => p_source_9
, p_source_9_meaning => p_source_9_meaning
, p_source_10 => p_source_10
         , x_transaction_coa_id       => l_adr_transaction_coa_id
         , x_accounting_coa_id        => l_adr_accounting_coa_id
         , x_flexfield_segment_code   => l_adr_flexfield_segment_code
         , x_flex_value_set_id        => l_adr_flex_value_set_id
         , x_value_type_code          => l_adr_value_type_code
         , x_value_combination_id     => l_adr_value_combination_id
         , x_value_segment_code       => l_adr_value_segment_code
         , p_side                     => 'NA'
         , p_override_seg_flag        => 'Y'
   );

   IF NVL(l_segment,'NULL') <> '#$NO_OVERRIDE#$' THEN  -- 4465612

      xla_ae_lines_pkg.set_segment(
          p_to_segment_code         => 'GL_ACCOUNT'
        , p_segment_value           => l_segment
        , p_from_segment_code       => l_adr_value_segment_code
        , p_from_combination_id     => l_adr_value_combination_id
        , p_value_type_code         => l_adr_value_type_code
        , p_transaction_coa_id      => l_adr_transaction_coa_id
        , p_accounting_coa_id       => l_adr_accounting_coa_id
        , p_flexfield_segment_code  => l_adr_flexfield_segment_code
        , p_flex_value_set_id       => l_adr_flex_value_set_id
        , p_adr_code                => 'AP_ERV_GAIN_LOSS_NAT_ACCT_SEG'
        , p_adr_type_code           => 'S'
        , p_component_type          => l_component_type
        , p_component_code          => l_component_code
        , p_component_type_code     => l_component_type_code
        , p_component_appl_id       => l_component_appl_id
        , p_amb_context_code        => l_amb_context_code
        , p_entity_code             => 'AP_INVOICES'
        , p_event_class_code        => 'DEBIT MEMOS'
        , p_side                    => 'NA'
        );

  END IF;

   l_segment := AcctDerRule_5(
           p_application_id           => p_application_id
         , p_ae_header_id             => l_ae_header_id 
, p_source_7 => p_source_7
, p_source_7_meaning => p_source_7_meaning
, p_source_9 => p_source_9
, p_source_9_meaning => p_source_9_meaning
, p_source_11 => p_source_11
         , x_transaction_coa_id       => l_adr_transaction_coa_id
         , x_accounting_coa_id        => l_adr_accounting_coa_id
         , x_flexfield_segment_code   => l_adr_flexfield_segment_code
         , x_flex_value_set_id        => l_adr_flex_value_set_id
         , x_value_type_code          => l_adr_value_type_code
         , x_value_combination_id     => l_adr_value_combination_id
         , x_value_segment_code       => l_adr_value_segment_code
         , p_side                     => 'NA'
         , p_override_seg_flag        => 'Y'
   );

   IF NVL(l_segment,'NULL') <> '#$NO_OVERRIDE#$' THEN  -- 4465612

      xla_ae_lines_pkg.set_segment(
          p_to_segment_code         => 'GL_BALANCING'
        , p_segment_value           => l_segment
        , p_from_segment_code       => l_adr_value_segment_code
        , p_from_combination_id     => l_adr_value_combination_id
        , p_value_type_code         => l_adr_value_type_code
        , p_transaction_coa_id      => l_adr_transaction_coa_id
        , p_accounting_coa_id       => l_adr_accounting_coa_id
        , p_flexfield_segment_code  => l_adr_flexfield_segment_code
        , p_flex_value_set_id       => l_adr_flex_value_set_id
        , p_adr_code                => 'AP_RELATED_DIST_BAL_SEG'
        , p_adr_type_code           => 'S'
        , p_component_type          => l_component_type
        , p_component_code          => l_component_code
        , p_component_type_code     => l_component_type_code
        , p_component_appl_id       => l_component_appl_id
        , p_amb_context_code        => l_amb_context_code
        , p_entity_code             => 'AP_INVOICES'
        , p_event_class_code        => 'DEBIT MEMOS'
        , p_side                    => 'NA'
        );

  END IF;

   --
   --
   END IF;
   --
   -- Bug 4922099
   IF ( ( (NVL(l_actual_upg_option, 'N') = 'O') OR
          (NVL(l_enc_upg_option, 'N') = 'O')
        ) AND
        (l_bflow_method_code = 'PRIOR_ENTRY')
      )
   THEN
      IF
      --
      1 = 2
      --
      THEN
      xla_accounting_err_pkg.build_message
                                    (p_appli_s_name            => 'XLA'
                                    ,p_msg_name                => 'XLA_UPG_OVERRIDE_ADR_UNDEFINED'
                                    ,p_token_1                 => 'LINE_NUMBER'
                                    ,p_value_1                 => XLA_AE_LINES_PKG.g_LineNumber
                                    ,p_token_2                 => 'LINE_TYPE_NAME'
                                    ,p_value_2                 => XLA_AE_SOURCES_PKG.GetComponentName (
                                                                             l_component_type
                                                                            ,l_component_code
                                                                            ,l_component_type_code
                                                                            ,l_component_appl_id
                                                                            ,l_amb_context_code
                                                                            ,l_entity_code
                                                                            ,l_event_class_code
                                                                           )
                                    ,p_token_3                 => 'OWNER'
                                    ,p_value_3                 => xla_lookups_pkg.get_meaning(
                                                                          p_lookup_type     => 'XLA_OWNER_TYPE'
                                                                          ,p_lookup_code    => l_component_type_code
                                                                         )
                                    ,p_token_4                 => 'PRODUCT_NAME'
                                    ,p_value_4                 => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.application_name
                                    ,p_entity_id               => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.entity_id
                                    ,p_event_id                => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.event_id
                                    ,p_ledger_id               => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id
                                    ,p_ae_header_id            =>  NULL
                                       );

        IF (C_LEVEL_ERROR>= g_log_level) THEN
                 trace
                      (p_msg      => 'ERROR: XLA_UPG_OVERRIDE_ADR_UNDEFINED'
                      ,p_level    => C_LEVEL_ERROR
                      ,p_module   => l_log_module);
        END IF;
      END IF;
   END IF;
   --
   --
   ------------------------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- NOTE: XLA_AE_LINES_PKG.ValidateCurrentLine should NOT be generated if business flow method is
   -- Prior Entry.  Currently, the following code is always generated.
   ------------------------------------------------------------------------------------------------
   XLA_AE_LINES_PKG.ValidateCurrentLine;

   ------------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- Populated credit and debit amounts -- Need to generate this within IF <condition>
   ------------------------------------------------------------------------------------
   XLA_AE_LINES_PKG.SetDebitCreditAmounts;

   ----------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- Update journal entry status -- Need to generate this within IF <condition>
   ----------------------------------------------------------------------------------
   XLA_AE_JOURNAL_ENTRY_PKG.UpdateJournalEntryStatus
         (p_hdr_idx => g_array_event(p_event_id).array_value_num('header_index')
         ,p_balance_type_code => l_balance_type_code
         );

   -------------------------------------------------------------------------------------------
   -- 4262811 - Generate the Accrual Reversal lines
   -------------------------------------------------------------------------------------------
   BEGIN
      l_acc_rev_flag := XLA_AE_HEADER_PKG.g_rec_header_new.array_accrual_reversal_flag
                              (g_array_event(p_event_id).array_value_num('header_index'));
      IF l_acc_rev_flag IS NULL THEN
         l_acc_rev_flag := 'N';
      END IF;
   EXCEPTION
      WHEN OTHERS THEN
         l_acc_rev_flag := 'N';
   END;
   --
   IF (l_acc_rev_flag = 'Y') THEN

       -- 4645092  ------------------------------------------------------------------------------
       -- To allow MPA report to determine if it should generate report process
       XLA_ACCOUNTING_PKG.g_mpa_accrual_exists := 'Y';
       ------------------------------------------------------------------------------------------

       l_accrual_line_num := XLA_AE_LINES_PKG.g_LineNumber;
       XLA_AE_LINES_PKG.CopyLineInfo(l_accrual_line_num);
   -- added call to set_ccid to execute mapping  for secondary accrual reversal entries bug 7444204
   -- call ADRs
   -- Bug 4922099
   --
   IF ( (l_bflow_method_code <> 'PRIOR_ENTRY') OR
        (NVL(l_actual_upg_option, 'N') = 'O') OR
        (NVL(l_enc_upg_option, 'N') = 'O')
      )
   THEN
   NULL;
   --
   --
   
  l_ccid := AcctDerRule_6(
           p_application_id           => p_application_id
         , p_ae_header_id             => l_ae_header_id 
, p_source_6 => p_source_6
, p_source_7 => p_source_7
, p_source_7_meaning => p_source_7_meaning
, p_source_8 => p_source_8
, p_source_9 => p_source_9
, p_source_9_meaning => p_source_9_meaning
, p_source_10 => p_source_10
, p_source_11 => p_source_11
, p_source_12 => p_source_12
, p_source_12_meaning => p_source_12_meaning
         , x_transaction_coa_id       => l_adr_transaction_coa_id
         , x_accounting_coa_id        => l_adr_accounting_coa_id
         , x_value_type_code          => l_adr_value_type_code
         , p_side                     => 'NA'
   );

   xla_ae_lines_pkg.set_ccid(
    p_code_combination_id          => l_ccid
  , p_value_type_code              => l_adr_value_type_code
  , p_transaction_coa_id           => l_adr_transaction_coa_id
  , p_accounting_coa_id            => l_adr_accounting_coa_id
  , p_adr_code                     => 'AP_EXCHG_TAXEXCHG_RATE_VAR'
  , p_adr_type_code                => 'S'
  , p_component_type               => l_component_type
  , p_component_code               => l_component_code
  , p_component_type_code          => l_component_type_code
  , p_component_appl_id            => l_component_appl_id
  , p_amb_context_code             => l_amb_context_code
  , p_side                         => 'NA'
  );


   l_segment := AcctDerRule_4(
           p_application_id           => p_application_id
         , p_ae_header_id             => l_ae_header_id 
, p_source_6 => p_source_6
, p_source_7 => p_source_7
, p_source_7_meaning => p_source_7_meaning
, p_source_8 => p_source_8
, p_source_9 => p_source_9
, p_source_9_meaning => p_source_9_meaning
, p_source_10 => p_source_10
         , x_transaction_coa_id       => l_adr_transaction_coa_id
         , x_accounting_coa_id        => l_adr_accounting_coa_id
         , x_flexfield_segment_code   => l_adr_flexfield_segment_code
         , x_flex_value_set_id        => l_adr_flex_value_set_id
         , x_value_type_code          => l_adr_value_type_code
         , x_value_combination_id     => l_adr_value_combination_id
         , x_value_segment_code       => l_adr_value_segment_code
         , p_side                     => 'NA'
         , p_override_seg_flag        => 'Y'
   );

   IF NVL(l_segment,'NULL') <> '#$NO_OVERRIDE#$' THEN  -- 4465612

      xla_ae_lines_pkg.set_segment(
          p_to_segment_code         => 'GL_ACCOUNT'
        , p_segment_value           => l_segment
        , p_from_segment_code       => l_adr_value_segment_code
        , p_from_combination_id     => l_adr_value_combination_id
        , p_value_type_code         => l_adr_value_type_code
        , p_transaction_coa_id      => l_adr_transaction_coa_id
        , p_accounting_coa_id       => l_adr_accounting_coa_id
        , p_flexfield_segment_code  => l_adr_flexfield_segment_code
        , p_flex_value_set_id       => l_adr_flex_value_set_id
        , p_adr_code                => 'AP_ERV_GAIN_LOSS_NAT_ACCT_SEG'
        , p_adr_type_code           => 'S'
        , p_component_type          => l_component_type
        , p_component_code          => l_component_code
        , p_component_type_code     => l_component_type_code
        , p_component_appl_id       => l_component_appl_id
        , p_amb_context_code        => l_amb_context_code
        , p_entity_code             => 'AP_INVOICES'
        , p_event_class_code        => 'DEBIT MEMOS'
        , p_side                    => 'NA'
        );

  END IF;

   l_segment := AcctDerRule_5(
           p_application_id           => p_application_id
         , p_ae_header_id             => l_ae_header_id 
, p_source_7 => p_source_7
, p_source_7_meaning => p_source_7_meaning
, p_source_9 => p_source_9
, p_source_9_meaning => p_source_9_meaning
, p_source_11 => p_source_11
         , x_transaction_coa_id       => l_adr_transaction_coa_id
         , x_accounting_coa_id        => l_adr_accounting_coa_id
         , x_flexfield_segment_code   => l_adr_flexfield_segment_code
         , x_flex_value_set_id        => l_adr_flex_value_set_id
         , x_value_type_code          => l_adr_value_type_code
         , x_value_combination_id     => l_adr_value_combination_id
         , x_value_segment_code       => l_adr_value_segment_code
         , p_side                     => 'NA'
         , p_override_seg_flag        => 'Y'
   );

   IF NVL(l_segment,'NULL') <> '#$NO_OVERRIDE#$' THEN  -- 4465612

      xla_ae_lines_pkg.set_segment(
          p_to_segment_code         => 'GL_BALANCING'
        , p_segment_value           => l_segment
        , p_from_segment_code       => l_adr_value_segment_code
        , p_from_combination_id     => l_adr_value_combination_id
        , p_value_type_code         => l_adr_value_type_code
        , p_transaction_coa_id      => l_adr_transaction_coa_id
        , p_accounting_coa_id       => l_adr_accounting_coa_id
        , p_flexfield_segment_code  => l_adr_flexfield_segment_code
        , p_flex_value_set_id       => l_adr_flex_value_set_id
        , p_adr_code                => 'AP_RELATED_DIST_BAL_SEG'
        , p_adr_type_code           => 'S'
        , p_component_type          => l_component_type
        , p_component_code          => l_component_code
        , p_component_type_code     => l_component_type_code
        , p_component_appl_id       => l_component_appl_id
        , p_amb_context_code        => l_amb_context_code
        , p_entity_code             => 'AP_INVOICES'
        , p_event_class_code        => 'DEBIT MEMOS'
        , p_side                    => 'NA'
        );

  END IF;

   --
   --
   END IF;

       --
       -- Update the line information that should be overwritten
       --
       XLA_AE_LINES_PKG.set_ae_header_id(p_ae_header_id => p_event_id ,
                                         p_header_num   => 1);
       XLA_AE_LINES_PKG.g_rec_lines.array_header_num(XLA_AE_LINES_PKG.g_LineNumber)  :=1;

       XLA_AE_LINES_PKG.g_rec_lines.array_business_class_code(XLA_AE_LINES_PKG.g_LineNumber) := NULL; -- 4669271

       IF l_bflow_method_code <> 'NONE' THEN  -- 4655713b
          XLA_AE_LINES_PKG.g_rec_lines.array_reversal_code(XLA_AE_LINES_PKG.g_LineNumber) := CONCAT('MPA_',l_bflow_method_code);
       END IF;

      --
      -- Depending on the Reversal Method setup, do a switch side or changes sign for the amounts
      --
      IF (XLA_AE_JOURNAL_ENTRY_PKG.g_cache_ledgers_info.ledger_reversal_option = 'SIDE') THEN
          XLA_AE_LINES_PKG.g_rec_lines.array_natural_side_code(XLA_AE_LINES_PKG.g_LineNumber) :=  l_acc_rev_natural_side_code;
      ELSE
          ---------------------------------------------------------------------------------------------------
          -- 4262811a Switch Sign
          ---------------------------------------------------------------------------------------------------
          XLA_AE_LINES_PKG.g_rec_lines.array_switch_side_flag(XLA_AE_LINES_PKG.g_LineNumber) := 'N';  -- 5052518
          XLA_AE_LINES_PKG.g_rec_lines.array_ledger_amount(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_ledger_amount(XLA_AE_LINES_PKG.g_LineNumber) * -1;
          XLA_AE_LINES_PKG.g_rec_lines.array_entered_amount(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_entered_amount(XLA_AE_LINES_PKG.g_LineNumber) * -1;
          -- 5132302
          XLA_AE_LINES_PKG.g_rec_lines.array_bflow_applied_to_amt(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_bflow_applied_to_amt(XLA_AE_LINES_PKG.g_LineNumber) * -1;

      END IF;

      -- 4955764
      XLA_AE_LINES_PKG.g_rec_lines.array_gl_date(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_HEADER_PKG.g_rec_header_new.array_gl_date(g_array_event(p_event_id).array_value_num('acc_rev_header_index'));


      XLA_AE_LINES_PKG.ValidateCurrentLine;
      XLA_AE_LINES_PKG.SetDebitCreditAmounts;

      XLA_AE_JOURNAL_ENTRY_PKG.UpdateJournalEntryStatus
               (p_hdr_idx           => g_array_event(p_event_id).array_value_num('acc_rev_header_index')
               ,p_balance_type_code => l_balance_type_code);

   END IF;

   -----------------------------------------------------------------------------------------
   -- 4262811 Multiperiod Accounting
   -----------------------------------------------------------------------------------------
     -- No MPA option is assigned.


END IF;
END IF;
--

--
IF (C_LEVEL_PROCEDURE >= g_log_level) THEN
   trace
      (p_msg      => 'END of AcctLineType_71'
      ,p_level    => C_LEVEL_PROCEDURE
      ,p_module   => l_log_module);
END IF;
--
EXCEPTION
  WHEN xla_exceptions_pkg.application_exception THEN
      RAISE;
  WHEN OTHERS THEN
       xla_exceptions_pkg.raise_message
           (p_location => 'XLA_00200_AAD_S_000010_BC_PKG.AcctLineType_71');
END AcctLineType_71;
--

---------------------------------------
--
-- PRIVATE FUNCTION
--         AcctLineType_72
--
---------------------------------------
PROCEDURE AcctLineType_72 (
  p_application_id        IN NUMBER
 ,p_event_id              IN NUMBER
 ,p_calculate_acctd_flag  IN VARCHAR2
 ,p_calculate_g_l_flag    IN VARCHAR2
 ,p_actual_flag           IN OUT VARCHAR2
 ,p_balance_type_code     OUT VARCHAR2
 ,p_gain_or_loss_ref      OUT VARCHAR2
 
--Invoice Distribution Description
 , p_source_1            IN VARCHAR2
--Purchase Order Rate Variance Gain Account
 , p_source_6            IN NUMBER
--Automatic Offsets Value
 , p_source_7            IN VARCHAR2
 , p_source_7_meaning    IN VARCHAR2
--Invoice Distribution Ledger Amount
 , p_source_8            IN NUMBER
--Destination Type of the PO Distribution
 , p_source_9            IN VARCHAR2
 , p_source_9_meaning    IN VARCHAR2
--Purchase Order Rate Variance Loss Account
 , p_source_10            IN NUMBER
--Invoice Distribution Account
 , p_source_11            IN NUMBER
--Automatic Offsets Flag
 , p_source_12            IN VARCHAR2
 , p_source_12_meaning    IN VARCHAR2
--Invoice Distribution Type
 , p_source_15            IN VARCHAR2
 , p_source_15_meaning    IN VARCHAR2
--Purchasing Encumbrance Option
 , p_source_17            IN VARCHAR2
 , p_source_17_meaning    IN VARCHAR2
--Accounting Reversal Indicator
 , p_source_19            IN VARCHAR2
--Distribution Link Type
 , p_source_21            IN VARCHAR2
--Allocation to Main Distribution Identifier
 , p_source_23            IN NUMBER
--Invoice Identifier
 , p_source_24            IN NUMBER
--Business Flow Accounts Payable Application Identifier
 , p_source_25            IN NUMBER
--Business Flow Invoice Distribution Type
 , p_source_26            IN VARCHAR2
--Business Flow Invoice Entity Code
 , p_source_27            IN VARCHAR2
--Business Flow Invoice Distribution Identifier
 , p_source_28            IN NUMBER
--Business Flow Invoice Identifier
 , p_source_29            IN NUMBER
--Invoice Distribution Identifier
 , p_source_30            IN NUMBER
--Payables Encumbrance Upgrade Credit Account
 , p_source_31            IN NUMBER
--Payables Encumbrance Upgrade Credit Amount
 , p_source_32            IN NUMBER
--Invoice Currency Code
 , p_source_33            IN VARCHAR2
--Payables Encumbrance Upgrade Credit Base Amount
 , p_source_34            IN NUMBER
--Payables Encumbrance Upgrade Debit Account
 , p_source_35            IN NUMBER
--Payables Encumbrance Upgrade Debit Amount
 , p_source_36            IN NUMBER
--Payables Encumbrance Upgrade Debit Base Amount
 , p_source_37            IN NUMBER
--Payables Encumbrance Upgrade Option
 , p_source_38            IN VARCHAR2
--Invoice Exchange Date
 , p_source_39            IN DATE
--Invoice Exchange Rate
 , p_source_40            IN NUMBER
--Invoice Exchange Rate Type
 , p_source_41            IN VARCHAR2
--Deferred Accounting End Date
 , p_source_43            IN DATE
--Deferred Accounting Option
 , p_source_44            IN VARCHAR2
--Deferred Accounting Start Date
 , p_source_45            IN DATE
--Override Accounted Amount Indicator
 , p_source_46            IN VARCHAR2
 , p_source_46_meaning    IN VARCHAR2
--Invoice Supplier Identifier
 , p_source_47            IN NUMBER
--Invoice Supplier Site Identifier
 , p_source_48            IN NUMBER
--Third Party Type
 , p_source_49            IN VARCHAR2
--Parent Reversal Identifier
 , p_source_50            IN NUMBER
--Invoice Distribution Statistical Amount
 , p_source_51            IN NUMBER
--Invoice Distribution Tax Line Identifier
 , p_source_52            IN NUMBER
--Invoice Distribution Tax Distribution Identifier from Tax
 , p_source_53            IN NUMBER
--Invoice Distribution Summary Tax Line Identifier
 , p_source_54            IN NUMBER
--Payables Upgrade Credit Encumbrance Type Identifier
 , p_source_55            IN NUMBER
--Payables Upgrade Debit Encumbrance Type Identifier
 , p_source_56            IN NUMBER
--Invoice Distribution Encumbrance Amount
 , p_source_65            IN NUMBER
--Invoice Distribution Encumbrance Ledger Amount
 , p_source_66            IN NUMBER
)
IS

l_component_type              VARCHAR2(80);
l_component_code              VARCHAR2(30);
l_component_type_code         VARCHAR2(1);
l_component_appl_id           INTEGER;
l_amb_context_code            VARCHAR2(30);
l_entity_code                 VARCHAR2(30);
l_event_class_code            VARCHAR2(30);
l_ae_header_id                NUMBER;
l_event_type_code             VARCHAR2(30);
l_line_definition_code        VARCHAR2(30);
l_line_definition_owner_code  VARCHAR2(1);
--
-- adr variables
l_segment                     VARCHAR2(30);
l_ccid                        NUMBER;
l_adr_transaction_coa_id      NUMBER;
l_adr_accounting_coa_id       NUMBER;
l_adr_flexfield_segment_code  VARCHAR2(30);
l_adr_flex_value_set_id       NUMBER;
l_adr_value_type_code         VARCHAR2(30);
l_adr_value_combination_id    NUMBER;
l_adr_value_segment_code      VARCHAR2(30);

l_bflow_method_code           VARCHAR2(30);  -- 4219869 Business Flow
l_bflow_class_code            VARCHAR2(30);  -- 4219869 Business Flow
l_inherit_desc_flag           VARCHAR2(1);   -- 4219869 Business Flow
l_budgetary_control_flag      VARCHAR2(1);   -- 4458381 Public Sector Enh

-- 4262811 Variables ------------------------------------------------------------------------------------------
l_entered_amt_idx             NUMBER;
l_accted_amt_idx              NUMBER;
l_acc_rev_flag                VARCHAR2(1);
l_accrual_line_num            NUMBER;
l_tmp_amt                     NUMBER;
l_acc_rev_natural_side_code   VARCHAR2(1);

l_num_entries                 NUMBER;
l_gl_dates                    xla_ae_journal_entry_pkg.t_array_date;
l_accted_amts                 xla_ae_journal_entry_pkg.t_array_num;
l_entered_amts                xla_ae_journal_entry_pkg.t_array_num;
l_period_names                xla_ae_journal_entry_pkg.t_array_V15L;
l_recog_line_1                NUMBER;
l_recog_line_2                NUMBER;

l_bflow_applied_to_amt_idx    NUMBER;                                -- 5132302
l_bflow_applied_to_amt        NUMBER;                                -- 5132302
l_bflow_applied_to_amts       xla_ae_journal_entry_pkg.t_array_num;  -- 5132302

l_event_id                    NUMBER;  -- To handle MPA header Description: xla_ae_header_pkg.SetHdrDescription

--l_rounding_ccy                VARCHAR2(15); -- To handle MPA rounding  4262811b
l_same_currency               BOOLEAN;        -- To handle MPA rounding  4262811b

---------------------------------------------------------------------------------------------------------------


--
-- bulk performance
--
l_balance_type_code           VARCHAR2(1);
l_rec_acct_attrs              XLA_AE_LINES_PKG.t_rec_acct_attrs;
l_log_module                  VARCHAR2(240);

--
-- Upgrade strategy
--
l_actual_upg_option           VARCHAR2(1);
l_enc_upg_option           VARCHAR2(1);

--
BEGIN
--
IF g_log_enabled THEN
      l_log_module := C_DEFAULT_MODULE||'.AcctLineType_72';
END IF;
--
IF (C_LEVEL_PROCEDURE >= g_log_level) THEN

      trace
         (p_msg      => 'BEGIN of AcctLineType_72'
         ,p_level    => C_LEVEL_PROCEDURE
         ,p_module   => l_log_module);

END IF;
--
l_component_type             := 'AMB_JLT';
l_component_code             := 'AP_TAX_EX_RATE_VAR_PP_ENC_DR';
l_component_type_code        := 'S';
l_component_appl_id          :=  200;
l_amb_context_code           := 'DEFAULT';
l_entity_code                := 'AP_INVOICES';
l_event_class_code           := 'PREPAYMENTS';
l_event_type_code            := 'PREPAYMENTS_ALL';
l_line_definition_owner_code := 'S';
l_line_definition_code       := 'ENC_PREPAY_ALL';
--
l_balance_type_code          := 'E';
l_segment                     := NULL;
l_ccid                        := NULL;
l_adr_transaction_coa_id      := NULL;
l_adr_accounting_coa_id       := NULL;
l_adr_flexfield_segment_code  := NULL;
l_adr_flex_value_set_id       := NULL;
l_adr_value_type_code         := NULL;
l_adr_value_combination_id    := NULL;
l_adr_value_segment_code      := NULL;

l_bflow_method_code          := 'NONE';   -- 4219869 Business Flow
l_bflow_class_code           := 'AP_INV_ENCUM';    -- 4219869 Business Flow
l_inherit_desc_flag          := 'N';   -- 4219869 Business Flow
l_budgetary_control_flag     := 'Y';

l_bflow_applied_to_amt_idx   := NULL; -- 5132302
l_bflow_applied_to_amt       := NULL; -- 5132302
l_entered_amt_idx            := NULL;          -- 4262811
l_accted_amt_idx             := NULL;          -- 4262811
l_acc_rev_flag               := NULL;          -- 4262811
l_accrual_line_num           := NULL;          -- 4262811
l_tmp_amt                    := NULL;          -- 4262811
--
IF ((p_calculate_g_l_flag = 'Y' AND XLA_AE_JOURNAL_ENTRY_PKG.g_cache_ledgers_info.ledger_category_code <> 'ALC') or
            (XLA_AE_JOURNAL_ENTRY_PKG.g_cache_ledgers_info.ledger_category_code in ('ALC', 'SECONDARY') AND XLA_AE_JOURNAL_ENTRY_PKG.g_cache_ledgers_info.calculate_amts_flag='Y')) THEN
               return;
  END IF;
  
IF XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id = XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.ledger_id OR
    l_balance_type_code <> 'B' THEN
IF NVL(p_source_15,'
') =  'TERV' AND 
NVL(p_source_17,'
') =  'Y'
 THEN 

   --
   XLA_AE_LINES_PKG.SetNewLine;

   p_balance_type_code          := l_balance_type_code;
   -- set the flag so later we will know whether the gain loss line needs to be created
   
   IF(l_balance_type_code = 'A' ) THEN
     p_actual_flag :='G';
   END IF;

   --
   -- bulk performance
   --
   XLA_AE_LINES_PKG.set_ae_header_id (p_ae_header_id => p_event_id ,
                                      p_header_num   => 0); -- 4262811
   --
   -- set accounting line options
   --
   l_ae_header_id:= xla_ae_lines_pkg.SetAcctLineOption(
           p_natural_side_code          => 'D'
         , p_gain_or_loss_flag          => 'Y'
         , p_gl_transfer_mode_code      => 'S'
         , p_acct_entry_type_code       => 'E'
         , p_switch_side_flag           => 'Y'
         , p_merge_duplicate_code       => 'N'
         );
   --
   l_acc_rev_natural_side_code := 'C';  -- 4262811
   -- 
   --
   -- set accounting line type info
   --
   xla_ae_lines_pkg.SetAcctLineType
      (p_component_type             => l_component_type
      ,p_event_type_code            => l_event_type_code
      ,p_line_definition_owner_code => l_line_definition_owner_code
      ,p_line_definition_code       => l_line_definition_code
      ,p_accounting_line_code       => l_component_code
      ,p_accounting_line_type_code  => l_component_type_code
      ,p_accounting_line_appl_id    => l_component_appl_id
      ,p_amb_context_code           => l_amb_context_code
      ,p_entity_code                => l_entity_code
      ,p_event_class_code           => l_event_class_code);
   --
   -- set accounting class
   --
   xla_ae_lines_pkg.SetAcctClass(
           p_accounting_class_code  => 'TERV'
         , p_ae_header_id           => l_ae_header_id
         );

   --
   -- set rounding class
   --
   XLA_AE_LINES_PKG.g_rec_lines.array_rounding_class(XLA_AE_LINES_PKG.g_LineNumber) :=
                      'TERV';

   --
   xla_ae_lines_pkg.g_rec_lines.array_calculate_acctd_flag(xla_ae_lines_pkg.g_LineNumber) := p_calculate_acctd_flag;
   xla_ae_lines_pkg.g_rec_lines.array_calculate_g_l_flag(xla_ae_lines_pkg.g_LineNumber) := p_calculate_g_l_flag;
   --
   -- bulk performance
   --
   XLA_AE_LINES_PKG.g_rec_lines.array_balance_type_code(XLA_AE_LINES_PKG.g_LineNumber) := l_balance_type_code;

   XLA_AE_LINES_PKG.g_rec_lines.array_ledger_id(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id;

   -- 4955764
   XLA_AE_LINES_PKG.g_rec_lines.array_gl_date(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_HEADER_PKG.g_rec_header_new.array_gl_date(g_array_event(p_event_id).array_value_num('header_index'));

   -- 4458381 Public Sector Enh
      XLA_AE_LINES_PKG.g_rec_lines.array_encumbrance_type_id(XLA_AE_LINES_PKG.g_LineNumber) := 1060;
   --
   -- set accounting attributes for the line type
   --
   l_entered_amt_idx := 23;
   l_accted_amt_idx  := 28;
   l_bflow_applied_to_amt_idx  := NULL;  -- 5132302
   l_rec_acct_attrs.array_acct_attr_code(1) := 'ACCOUNTING_REVERSAL_OPTION';
   l_rec_acct_attrs.array_char_value(1)  := p_source_19;
   l_rec_acct_attrs.array_acct_attr_code(2) := 'ALLOC_TO_APPLICATION_ID';
   l_rec_acct_attrs.array_num_value(2)  := 
xla_ae_sources_pkg.GetSystemSourceNum(
   p_source_code           => 'XLA_EVENT_APPL_ID'
 , p_source_type_code      => 'Y'
 , p_source_application_id =>  602
);
   l_rec_acct_attrs.array_acct_attr_code(3) := 'ALLOC_TO_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(3)  := p_source_21;
   l_rec_acct_attrs.array_acct_attr_code(4) := 'ALLOC_TO_ENTITY_CODE';
   l_rec_acct_attrs.array_char_value(4)  := 
xla_ae_sources_pkg.GetSystemSourceChar(
   p_source_code           => 'XLA_ENTITY_CODE'
 , p_source_type_code      => 'Y'
 , p_source_application_id =>  602
);
   l_rec_acct_attrs.array_acct_attr_code(5) := 'ALLOC_TO_FIRST_DIST_ID';
   l_rec_acct_attrs.array_num_value(5)  :=  to_char(p_source_23);
   l_rec_acct_attrs.array_acct_attr_code(6) := 'ALLOC_TO_FIRST_SYS_TRAN_ID';
   l_rec_acct_attrs.array_num_value(6)  :=  to_char(p_source_24);
   l_rec_acct_attrs.array_acct_attr_code(7) := 'APPLIED_TO_APPLICATION_ID';
   l_rec_acct_attrs.array_num_value(7)  := p_source_25;
   l_rec_acct_attrs.array_acct_attr_code(8) := 'APPLIED_TO_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(8)  := p_source_26;
   l_rec_acct_attrs.array_acct_attr_code(9) := 'APPLIED_TO_ENTITY_CODE';
   l_rec_acct_attrs.array_char_value(9)  := p_source_27;
   l_rec_acct_attrs.array_acct_attr_code(10) := 'APPLIED_TO_FIRST_DIST_ID';
   l_rec_acct_attrs.array_num_value(10)  :=  to_char(p_source_28);
   l_rec_acct_attrs.array_acct_attr_code(11) := 'APPLIED_TO_FIRST_SYS_TRAN_ID';
   l_rec_acct_attrs.array_num_value(11)  :=  to_char(p_source_29);
   l_rec_acct_attrs.array_acct_attr_code(12) := 'DISTRIBUTION_IDENTIFIER_1';
   l_rec_acct_attrs.array_num_value(12)  :=  to_char(p_source_30);
   l_rec_acct_attrs.array_acct_attr_code(13) := 'DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(13)  := p_source_21;
   l_rec_acct_attrs.array_acct_attr_code(14) := 'ENC_UPG_CR_CCID';
   l_rec_acct_attrs.array_num_value(14)  := p_source_31;
   l_rec_acct_attrs.array_acct_attr_code(15) := 'ENC_UPG_CR_ENTERED_AMT';
   l_rec_acct_attrs.array_num_value(15)  := p_source_32;
   l_rec_acct_attrs.array_acct_attr_code(16) := 'ENC_UPG_CR_ENTERED_CURR';
   l_rec_acct_attrs.array_char_value(16)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(17) := 'ENC_UPG_CR_LEDGER_AMT';
   l_rec_acct_attrs.array_num_value(17)  := p_source_34;
   l_rec_acct_attrs.array_acct_attr_code(18) := 'ENC_UPG_DR_CCID';
   l_rec_acct_attrs.array_num_value(18)  := p_source_35;
   l_rec_acct_attrs.array_acct_attr_code(19) := 'ENC_UPG_DR_ENTERED_AMT';
   l_rec_acct_attrs.array_num_value(19)  := p_source_36;
   l_rec_acct_attrs.array_acct_attr_code(20) := 'ENC_UPG_DR_ENTERED_CURR';
   l_rec_acct_attrs.array_char_value(20)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(21) := 'ENC_UPG_DR_LEDGER_AMT';
   l_rec_acct_attrs.array_num_value(21)  := p_source_37;
   l_rec_acct_attrs.array_acct_attr_code(22) := 'ENC_UPG_OPTION';
   l_rec_acct_attrs.array_char_value(22)  := p_source_38;
   l_rec_acct_attrs.array_acct_attr_code(23) := 'ENTERED_CURRENCY_AMOUNT';
   l_rec_acct_attrs.array_num_value(23)  := p_source_65;
   l_rec_acct_attrs.array_acct_attr_code(24) := 'ENTERED_CURRENCY_CODE';
   l_rec_acct_attrs.array_char_value(24)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(25) := 'EXCHANGE_DATE';
   l_rec_acct_attrs.array_date_value(25)  := p_source_39;
   l_rec_acct_attrs.array_acct_attr_code(26) := 'EXCHANGE_RATE';
   l_rec_acct_attrs.array_num_value(26)  := p_source_40;
   l_rec_acct_attrs.array_acct_attr_code(27) := 'EXCHANGE_RATE_TYPE';
   l_rec_acct_attrs.array_char_value(27)  := p_source_41;
   l_rec_acct_attrs.array_acct_attr_code(28) := 'LEDGER_AMOUNT';
   l_rec_acct_attrs.array_num_value(28)  := p_source_66;
   l_rec_acct_attrs.array_acct_attr_code(29) := 'MULTIPERIOD_END_DATE';
   l_rec_acct_attrs.array_date_value(29)  := p_source_43;
   l_rec_acct_attrs.array_acct_attr_code(30) := 'MULTIPERIOD_OPTION';
   l_rec_acct_attrs.array_char_value(30)  := p_source_44;
   l_rec_acct_attrs.array_acct_attr_code(31) := 'MULTIPERIOD_START_DATE';
   l_rec_acct_attrs.array_date_value(31)  := p_source_45;
   l_rec_acct_attrs.array_acct_attr_code(32) := 'OVERRIDE_ACCTD_AMT_FLAG';
   l_rec_acct_attrs.array_char_value(32)  := p_source_46;
   l_rec_acct_attrs.array_acct_attr_code(33) := 'PARTY_ID';
   l_rec_acct_attrs.array_num_value(33)  := p_source_47;
   l_rec_acct_attrs.array_acct_attr_code(34) := 'PARTY_SITE_ID';
   l_rec_acct_attrs.array_num_value(34)  := p_source_48;
   l_rec_acct_attrs.array_acct_attr_code(35) := 'PARTY_TYPE';
   l_rec_acct_attrs.array_char_value(35)  := p_source_49;
   l_rec_acct_attrs.array_acct_attr_code(36) := 'REVERSED_DISTRIBUTION_ID1';
   l_rec_acct_attrs.array_num_value(36)  :=  to_char(p_source_50);
   l_rec_acct_attrs.array_acct_attr_code(37) := 'REVERSED_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(37)  := p_source_21;
   l_rec_acct_attrs.array_acct_attr_code(38) := 'STATISTICAL_AMOUNT';
   l_rec_acct_attrs.array_num_value(38)  := p_source_51;
   l_rec_acct_attrs.array_acct_attr_code(39) := 'TAX_LINE_REF_ID';
   l_rec_acct_attrs.array_num_value(39)  := p_source_52;
   l_rec_acct_attrs.array_acct_attr_code(40) := 'TAX_REC_NREC_DIST_REF_ID';
   l_rec_acct_attrs.array_num_value(40)  := p_source_53;
   l_rec_acct_attrs.array_acct_attr_code(41) := 'TAX_SUMMARY_LINE_REF_ID';
   l_rec_acct_attrs.array_num_value(41)  := p_source_54;
   l_rec_acct_attrs.array_acct_attr_code(42) := 'UPG_CR_ENC_TYPE_ID';
   l_rec_acct_attrs.array_num_value(42)  := p_source_55;
   l_rec_acct_attrs.array_acct_attr_code(43) := 'UPG_DR_ENC_TYPE_ID';
   l_rec_acct_attrs.array_num_value(43)  := p_source_56;

   XLA_AE_LINES_PKG.SetLineAcctAttrs(l_rec_acct_attrs);
   p_gain_or_loss_ref  := XLA_AE_LINES_PKG.g_rec_lines.array_gain_or_loss_ref(XLA_AE_LINES_PKG.g_LineNumber);

   ---------------------------------------------------------------------------------------------------------------
   -- 4336173 -- assign Business Flow Class (replace code in xla_ae_lines_pkg.Business_Flow_Validation)
   ---------------------------------------------------------------------------------------------------------------
   XLA_AE_LINES_PKG.g_rec_lines.array_business_class_code(XLA_AE_LINES_PKG.g_LineNumber) := l_bflow_class_code;

   l_actual_upg_option  := XLA_AE_LINES_PKG.g_rec_lines.array_actual_upg_option(XLA_AE_LINES_PKG.g_LineNumber);
   l_enc_upg_option     := XLA_AE_LINES_PKG.g_rec_lines.array_enc_upg_option(XLA_AE_LINES_PKG.g_LineNumber);

   IF xla_accounting_cache_pkg.GetValueChar
         (p_source_code         => 'LEDGER_CATEGORY_CODE'
         ,p_target_ledger_id    => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id) IN ('PRIMARY','ALC')
   AND l_bflow_method_code = 'PRIOR_ENTRY'
--   AND (l_actual_upg_option = 'Y' OR l_enc_upg_option = 'Y') Bug 4922099
   AND ( (NVL(l_actual_upg_option, 'N') IN ('Y', 'O')) OR
         (NVL(l_enc_upg_option, 'N') IN ('Y', 'O'))
       )
   THEN
         xla_ae_lines_pkg.BflowUpgEntry
           (p_business_method_code    => l_bflow_method_code
           ,p_business_class_code     => l_bflow_class_code
           ,p_balance_type            => l_balance_type_code);
   ELSE
      NULL;
-- No business flow processing for business flow method of NONE.
   END IF;

   --
   -- call analytical criteria
   --
   
   --
   -- call description
   --
   
xla_ae_lines_pkg.SetLineDescription(
   p_ae_header_id => l_ae_header_id
  ,p_description  => Description_2 (
     p_application_id         => p_application_id
   , p_ae_header_id           => l_ae_header_id 
, p_source_1 => p_source_1
   )
);


   --
   -- call ADRs
   -- Bug 4922099
   --
   IF ( (l_bflow_method_code <> 'PRIOR_ENTRY') OR
        (NVL(l_actual_upg_option, 'N') = 'O') OR
        (NVL(l_enc_upg_option, 'N') = 'O')
      )
   THEN
   NULL;
   --
   --
   
  l_ccid := AcctDerRule_6(
           p_application_id           => p_application_id
         , p_ae_header_id             => l_ae_header_id 
, p_source_6 => p_source_6
, p_source_7 => p_source_7
, p_source_7_meaning => p_source_7_meaning
, p_source_8 => p_source_8
, p_source_9 => p_source_9
, p_source_9_meaning => p_source_9_meaning
, p_source_10 => p_source_10
, p_source_11 => p_source_11
, p_source_12 => p_source_12
, p_source_12_meaning => p_source_12_meaning
         , x_transaction_coa_id       => l_adr_transaction_coa_id
         , x_accounting_coa_id        => l_adr_accounting_coa_id
         , x_value_type_code          => l_adr_value_type_code
         , p_side                     => 'NA'
   );

   xla_ae_lines_pkg.set_ccid(
    p_code_combination_id          => l_ccid
  , p_value_type_code              => l_adr_value_type_code
  , p_transaction_coa_id           => l_adr_transaction_coa_id
  , p_accounting_coa_id            => l_adr_accounting_coa_id
  , p_adr_code                     => 'AP_EXCHG_TAXEXCHG_RATE_VAR'
  , p_adr_type_code                => 'S'
  , p_component_type               => l_component_type
  , p_component_code               => l_component_code
  , p_component_type_code          => l_component_type_code
  , p_component_appl_id            => l_component_appl_id
  , p_amb_context_code             => l_amb_context_code
  , p_side                         => 'NA'
  );


   l_segment := AcctDerRule_4(
           p_application_id           => p_application_id
         , p_ae_header_id             => l_ae_header_id 
, p_source_6 => p_source_6
, p_source_7 => p_source_7
, p_source_7_meaning => p_source_7_meaning
, p_source_8 => p_source_8
, p_source_9 => p_source_9
, p_source_9_meaning => p_source_9_meaning
, p_source_10 => p_source_10
         , x_transaction_coa_id       => l_adr_transaction_coa_id
         , x_accounting_coa_id        => l_adr_accounting_coa_id
         , x_flexfield_segment_code   => l_adr_flexfield_segment_code
         , x_flex_value_set_id        => l_adr_flex_value_set_id
         , x_value_type_code          => l_adr_value_type_code
         , x_value_combination_id     => l_adr_value_combination_id
         , x_value_segment_code       => l_adr_value_segment_code
         , p_side                     => 'NA'
         , p_override_seg_flag        => 'Y'
   );

   IF NVL(l_segment,'NULL') <> '#$NO_OVERRIDE#$' THEN  -- 4465612

      xla_ae_lines_pkg.set_segment(
          p_to_segment_code         => 'GL_ACCOUNT'
        , p_segment_value           => l_segment
        , p_from_segment_code       => l_adr_value_segment_code
        , p_from_combination_id     => l_adr_value_combination_id
        , p_value_type_code         => l_adr_value_type_code
        , p_transaction_coa_id      => l_adr_transaction_coa_id
        , p_accounting_coa_id       => l_adr_accounting_coa_id
        , p_flexfield_segment_code  => l_adr_flexfield_segment_code
        , p_flex_value_set_id       => l_adr_flex_value_set_id
        , p_adr_code                => 'AP_ERV_GAIN_LOSS_NAT_ACCT_SEG'
        , p_adr_type_code           => 'S'
        , p_component_type          => l_component_type
        , p_component_code          => l_component_code
        , p_component_type_code     => l_component_type_code
        , p_component_appl_id       => l_component_appl_id
        , p_amb_context_code        => l_amb_context_code
        , p_entity_code             => 'AP_INVOICES'
        , p_event_class_code        => 'PREPAYMENTS'
        , p_side                    => 'NA'
        );

  END IF;

   l_segment := AcctDerRule_5(
           p_application_id           => p_application_id
         , p_ae_header_id             => l_ae_header_id 
, p_source_7 => p_source_7
, p_source_7_meaning => p_source_7_meaning
, p_source_9 => p_source_9
, p_source_9_meaning => p_source_9_meaning
, p_source_11 => p_source_11
         , x_transaction_coa_id       => l_adr_transaction_coa_id
         , x_accounting_coa_id        => l_adr_accounting_coa_id
         , x_flexfield_segment_code   => l_adr_flexfield_segment_code
         , x_flex_value_set_id        => l_adr_flex_value_set_id
         , x_value_type_code          => l_adr_value_type_code
         , x_value_combination_id     => l_adr_value_combination_id
         , x_value_segment_code       => l_adr_value_segment_code
         , p_side                     => 'NA'
         , p_override_seg_flag        => 'Y'
   );

   IF NVL(l_segment,'NULL') <> '#$NO_OVERRIDE#$' THEN  -- 4465612

      xla_ae_lines_pkg.set_segment(
          p_to_segment_code         => 'GL_BALANCING'
        , p_segment_value           => l_segment
        , p_from_segment_code       => l_adr_value_segment_code
        , p_from_combination_id     => l_adr_value_combination_id
        , p_value_type_code         => l_adr_value_type_code
        , p_transaction_coa_id      => l_adr_transaction_coa_id
        , p_accounting_coa_id       => l_adr_accounting_coa_id
        , p_flexfield_segment_code  => l_adr_flexfield_segment_code
        , p_flex_value_set_id       => l_adr_flex_value_set_id
        , p_adr_code                => 'AP_RELATED_DIST_BAL_SEG'
        , p_adr_type_code           => 'S'
        , p_component_type          => l_component_type
        , p_component_code          => l_component_code
        , p_component_type_code     => l_component_type_code
        , p_component_appl_id       => l_component_appl_id
        , p_amb_context_code        => l_amb_context_code
        , p_entity_code             => 'AP_INVOICES'
        , p_event_class_code        => 'PREPAYMENTS'
        , p_side                    => 'NA'
        );

  END IF;

   --
   --
   END IF;
   --
   -- Bug 4922099
   IF ( ( (NVL(l_actual_upg_option, 'N') = 'O') OR
          (NVL(l_enc_upg_option, 'N') = 'O')
        ) AND
        (l_bflow_method_code = 'PRIOR_ENTRY')
      )
   THEN
      IF
      --
      1 = 2
      --
      THEN
      xla_accounting_err_pkg.build_message
                                    (p_appli_s_name            => 'XLA'
                                    ,p_msg_name                => 'XLA_UPG_OVERRIDE_ADR_UNDEFINED'
                                    ,p_token_1                 => 'LINE_NUMBER'
                                    ,p_value_1                 => XLA_AE_LINES_PKG.g_LineNumber
                                    ,p_token_2                 => 'LINE_TYPE_NAME'
                                    ,p_value_2                 => XLA_AE_SOURCES_PKG.GetComponentName (
                                                                             l_component_type
                                                                            ,l_component_code
                                                                            ,l_component_type_code
                                                                            ,l_component_appl_id
                                                                            ,l_amb_context_code
                                                                            ,l_entity_code
                                                                            ,l_event_class_code
                                                                           )
                                    ,p_token_3                 => 'OWNER'
                                    ,p_value_3                 => xla_lookups_pkg.get_meaning(
                                                                          p_lookup_type     => 'XLA_OWNER_TYPE'
                                                                          ,p_lookup_code    => l_component_type_code
                                                                         )
                                    ,p_token_4                 => 'PRODUCT_NAME'
                                    ,p_value_4                 => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.application_name
                                    ,p_entity_id               => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.entity_id
                                    ,p_event_id                => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.event_id
                                    ,p_ledger_id               => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id
                                    ,p_ae_header_id            =>  NULL
                                       );

        IF (C_LEVEL_ERROR>= g_log_level) THEN
                 trace
                      (p_msg      => 'ERROR: XLA_UPG_OVERRIDE_ADR_UNDEFINED'
                      ,p_level    => C_LEVEL_ERROR
                      ,p_module   => l_log_module);
        END IF;
      END IF;
   END IF;
   --
   --
   ------------------------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- NOTE: XLA_AE_LINES_PKG.ValidateCurrentLine should NOT be generated if business flow method is
   -- Prior Entry.  Currently, the following code is always generated.
   ------------------------------------------------------------------------------------------------
   XLA_AE_LINES_PKG.ValidateCurrentLine;

   ------------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- Populated credit and debit amounts -- Need to generate this within IF <condition>
   ------------------------------------------------------------------------------------
   XLA_AE_LINES_PKG.SetDebitCreditAmounts;

   ----------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- Update journal entry status -- Need to generate this within IF <condition>
   ----------------------------------------------------------------------------------
   XLA_AE_JOURNAL_ENTRY_PKG.UpdateJournalEntryStatus
         (p_hdr_idx => g_array_event(p_event_id).array_value_num('header_index')
         ,p_balance_type_code => l_balance_type_code
         );

   -------------------------------------------------------------------------------------------
   -- 4262811 - Generate the Accrual Reversal lines
   -------------------------------------------------------------------------------------------
   BEGIN
      l_acc_rev_flag := XLA_AE_HEADER_PKG.g_rec_header_new.array_accrual_reversal_flag
                              (g_array_event(p_event_id).array_value_num('header_index'));
      IF l_acc_rev_flag IS NULL THEN
         l_acc_rev_flag := 'N';
      END IF;
   EXCEPTION
      WHEN OTHERS THEN
         l_acc_rev_flag := 'N';
   END;
   --
   IF (l_acc_rev_flag = 'Y') THEN

       -- 4645092  ------------------------------------------------------------------------------
       -- To allow MPA report to determine if it should generate report process
       XLA_ACCOUNTING_PKG.g_mpa_accrual_exists := 'Y';
       ------------------------------------------------------------------------------------------

       l_accrual_line_num := XLA_AE_LINES_PKG.g_LineNumber;
       XLA_AE_LINES_PKG.CopyLineInfo(l_accrual_line_num);
   -- added call to set_ccid to execute mapping  for secondary accrual reversal entries bug 7444204
   -- call ADRs
   -- Bug 4922099
   --
   IF ( (l_bflow_method_code <> 'PRIOR_ENTRY') OR
        (NVL(l_actual_upg_option, 'N') = 'O') OR
        (NVL(l_enc_upg_option, 'N') = 'O')
      )
   THEN
   NULL;
   --
   --
   
  l_ccid := AcctDerRule_6(
           p_application_id           => p_application_id
         , p_ae_header_id             => l_ae_header_id 
, p_source_6 => p_source_6
, p_source_7 => p_source_7
, p_source_7_meaning => p_source_7_meaning
, p_source_8 => p_source_8
, p_source_9 => p_source_9
, p_source_9_meaning => p_source_9_meaning
, p_source_10 => p_source_10
, p_source_11 => p_source_11
, p_source_12 => p_source_12
, p_source_12_meaning => p_source_12_meaning
         , x_transaction_coa_id       => l_adr_transaction_coa_id
         , x_accounting_coa_id        => l_adr_accounting_coa_id
         , x_value_type_code          => l_adr_value_type_code
         , p_side                     => 'NA'
   );

   xla_ae_lines_pkg.set_ccid(
    p_code_combination_id          => l_ccid
  , p_value_type_code              => l_adr_value_type_code
  , p_transaction_coa_id           => l_adr_transaction_coa_id
  , p_accounting_coa_id            => l_adr_accounting_coa_id
  , p_adr_code                     => 'AP_EXCHG_TAXEXCHG_RATE_VAR'
  , p_adr_type_code                => 'S'
  , p_component_type               => l_component_type
  , p_component_code               => l_component_code
  , p_component_type_code          => l_component_type_code
  , p_component_appl_id            => l_component_appl_id
  , p_amb_context_code             => l_amb_context_code
  , p_side                         => 'NA'
  );


   l_segment := AcctDerRule_4(
           p_application_id           => p_application_id
         , p_ae_header_id             => l_ae_header_id 
, p_source_6 => p_source_6
, p_source_7 => p_source_7
, p_source_7_meaning => p_source_7_meaning
, p_source_8 => p_source_8
, p_source_9 => p_source_9
, p_source_9_meaning => p_source_9_meaning
, p_source_10 => p_source_10
         , x_transaction_coa_id       => l_adr_transaction_coa_id
         , x_accounting_coa_id        => l_adr_accounting_coa_id
         , x_flexfield_segment_code   => l_adr_flexfield_segment_code
         , x_flex_value_set_id        => l_adr_flex_value_set_id
         , x_value_type_code          => l_adr_value_type_code
         , x_value_combination_id     => l_adr_value_combination_id
         , x_value_segment_code       => l_adr_value_segment_code
         , p_side                     => 'NA'
         , p_override_seg_flag        => 'Y'
   );

   IF NVL(l_segment,'NULL') <> '#$NO_OVERRIDE#$' THEN  -- 4465612

      xla_ae_lines_pkg.set_segment(
          p_to_segment_code         => 'GL_ACCOUNT'
        , p_segment_value           => l_segment
        , p_from_segment_code       => l_adr_value_segment_code
        , p_from_combination_id     => l_adr_value_combination_id
        , p_value_type_code         => l_adr_value_type_code
        , p_transaction_coa_id      => l_adr_transaction_coa_id
        , p_accounting_coa_id       => l_adr_accounting_coa_id
        , p_flexfield_segment_code  => l_adr_flexfield_segment_code
        , p_flex_value_set_id       => l_adr_flex_value_set_id
        , p_adr_code                => 'AP_ERV_GAIN_LOSS_NAT_ACCT_SEG'
        , p_adr_type_code           => 'S'
        , p_component_type          => l_component_type
        , p_component_code          => l_component_code
        , p_component_type_code     => l_component_type_code
        , p_component_appl_id       => l_component_appl_id
        , p_amb_context_code        => l_amb_context_code
        , p_entity_code             => 'AP_INVOICES'
        , p_event_class_code        => 'PREPAYMENTS'
        , p_side                    => 'NA'
        );

  END IF;

   l_segment := AcctDerRule_5(
           p_application_id           => p_application_id
         , p_ae_header_id             => l_ae_header_id 
, p_source_7 => p_source_7
, p_source_7_meaning => p_source_7_meaning
, p_source_9 => p_source_9
, p_source_9_meaning => p_source_9_meaning
, p_source_11 => p_source_11
         , x_transaction_coa_id       => l_adr_transaction_coa_id
         , x_accounting_coa_id        => l_adr_accounting_coa_id
         , x_flexfield_segment_code   => l_adr_flexfield_segment_code
         , x_flex_value_set_id        => l_adr_flex_value_set_id
         , x_value_type_code          => l_adr_value_type_code
         , x_value_combination_id     => l_adr_value_combination_id
         , x_value_segment_code       => l_adr_value_segment_code
         , p_side                     => 'NA'
         , p_override_seg_flag        => 'Y'
   );

   IF NVL(l_segment,'NULL') <> '#$NO_OVERRIDE#$' THEN  -- 4465612

      xla_ae_lines_pkg.set_segment(
          p_to_segment_code         => 'GL_BALANCING'
        , p_segment_value           => l_segment
        , p_from_segment_code       => l_adr_value_segment_code
        , p_from_combination_id     => l_adr_value_combination_id
        , p_value_type_code         => l_adr_value_type_code
        , p_transaction_coa_id      => l_adr_transaction_coa_id
        , p_accounting_coa_id       => l_adr_accounting_coa_id
        , p_flexfield_segment_code  => l_adr_flexfield_segment_code
        , p_flex_value_set_id       => l_adr_flex_value_set_id
        , p_adr_code                => 'AP_RELATED_DIST_BAL_SEG'
        , p_adr_type_code           => 'S'
        , p_component_type          => l_component_type
        , p_component_code          => l_component_code
        , p_component_type_code     => l_component_type_code
        , p_component_appl_id       => l_component_appl_id
        , p_amb_context_code        => l_amb_context_code
        , p_entity_code             => 'AP_INVOICES'
        , p_event_class_code        => 'PREPAYMENTS'
        , p_side                    => 'NA'
        );

  END IF;

   --
   --
   END IF;

       --
       -- Update the line information that should be overwritten
       --
       XLA_AE_LINES_PKG.set_ae_header_id(p_ae_header_id => p_event_id ,
                                         p_header_num   => 1);
       XLA_AE_LINES_PKG.g_rec_lines.array_header_num(XLA_AE_LINES_PKG.g_LineNumber)  :=1;

       XLA_AE_LINES_PKG.g_rec_lines.array_business_class_code(XLA_AE_LINES_PKG.g_LineNumber) := NULL; -- 4669271

       IF l_bflow_method_code <> 'NONE' THEN  -- 4655713b
          XLA_AE_LINES_PKG.g_rec_lines.array_reversal_code(XLA_AE_LINES_PKG.g_LineNumber) := CONCAT('MPA_',l_bflow_method_code);
       END IF;

      --
      -- Depending on the Reversal Method setup, do a switch side or changes sign for the amounts
      --
      IF (XLA_AE_JOURNAL_ENTRY_PKG.g_cache_ledgers_info.ledger_reversal_option = 'SIDE') THEN
          XLA_AE_LINES_PKG.g_rec_lines.array_natural_side_code(XLA_AE_LINES_PKG.g_LineNumber) :=  l_acc_rev_natural_side_code;
      ELSE
          ---------------------------------------------------------------------------------------------------
          -- 4262811a Switch Sign
          ---------------------------------------------------------------------------------------------------
          XLA_AE_LINES_PKG.g_rec_lines.array_switch_side_flag(XLA_AE_LINES_PKG.g_LineNumber) := 'N';  -- 5052518
          XLA_AE_LINES_PKG.g_rec_lines.array_ledger_amount(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_ledger_amount(XLA_AE_LINES_PKG.g_LineNumber) * -1;
          XLA_AE_LINES_PKG.g_rec_lines.array_entered_amount(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_entered_amount(XLA_AE_LINES_PKG.g_LineNumber) * -1;
          -- 5132302
          XLA_AE_LINES_PKG.g_rec_lines.array_bflow_applied_to_amt(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_bflow_applied_to_amt(XLA_AE_LINES_PKG.g_LineNumber) * -1;

      END IF;

      -- 4955764
      XLA_AE_LINES_PKG.g_rec_lines.array_gl_date(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_HEADER_PKG.g_rec_header_new.array_gl_date(g_array_event(p_event_id).array_value_num('acc_rev_header_index'));


      XLA_AE_LINES_PKG.ValidateCurrentLine;
      XLA_AE_LINES_PKG.SetDebitCreditAmounts;

      XLA_AE_JOURNAL_ENTRY_PKG.UpdateJournalEntryStatus
               (p_hdr_idx           => g_array_event(p_event_id).array_value_num('acc_rev_header_index')
               ,p_balance_type_code => l_balance_type_code);

   END IF;

   -----------------------------------------------------------------------------------------
   -- 4262811 Multiperiod Accounting
   -----------------------------------------------------------------------------------------
     -- No MPA option is assigned.


END IF;
END IF;
--

--
IF (C_LEVEL_PROCEDURE >= g_log_level) THEN
   trace
      (p_msg      => 'END of AcctLineType_72'
      ,p_level    => C_LEVEL_PROCEDURE
      ,p_module   => l_log_module);
END IF;
--
EXCEPTION
  WHEN xla_exceptions_pkg.application_exception THEN
      RAISE;
  WHEN OTHERS THEN
       xla_exceptions_pkg.raise_message
           (p_location => 'XLA_00200_AAD_S_000010_BC_PKG.AcctLineType_72');
END AcctLineType_72;
--

---------------------------------------
--
-- PRIVATE FUNCTION
--         AcctLineType_73
--
---------------------------------------
PROCEDURE AcctLineType_73 (
  p_application_id        IN NUMBER
 ,p_event_id              IN NUMBER
 ,p_calculate_acctd_flag  IN VARCHAR2
 ,p_calculate_g_l_flag    IN VARCHAR2
 ,p_actual_flag           IN OUT VARCHAR2
 ,p_balance_type_code     OUT VARCHAR2
 ,p_gain_or_loss_ref      OUT VARCHAR2
 
--Invoice Distribution Description
 , p_source_1            IN VARCHAR2
--Invoice Distribution Account
 , p_source_11            IN NUMBER
--Invoice Distribution Type
 , p_source_15            IN VARCHAR2
 , p_source_15_meaning    IN VARCHAR2
--Purchasing Encumbrance Option
 , p_source_17            IN VARCHAR2
 , p_source_17_meaning    IN VARCHAR2
--Accounting Reversal Indicator
 , p_source_19            IN VARCHAR2
--Distribution Link Type
 , p_source_21            IN VARCHAR2
--Allocation to Main Distribution Identifier
 , p_source_23            IN NUMBER
--Invoice Identifier
 , p_source_24            IN NUMBER
--Business Flow Accounts Payable Application Identifier
 , p_source_25            IN NUMBER
--Business Flow Invoice Distribution Type
 , p_source_26            IN VARCHAR2
--Business Flow Invoice Entity Code
 , p_source_27            IN VARCHAR2
--Business Flow Invoice Distribution Identifier
 , p_source_28            IN NUMBER
--Business Flow Invoice Identifier
 , p_source_29            IN NUMBER
--Invoice Distribution Identifier
 , p_source_30            IN NUMBER
--Payables Encumbrance Upgrade Credit Account
 , p_source_31            IN NUMBER
--Payables Encumbrance Upgrade Credit Amount
 , p_source_32            IN NUMBER
--Invoice Currency Code
 , p_source_33            IN VARCHAR2
--Payables Encumbrance Upgrade Credit Base Amount
 , p_source_34            IN NUMBER
--Payables Encumbrance Upgrade Debit Account
 , p_source_35            IN NUMBER
--Payables Encumbrance Upgrade Debit Amount
 , p_source_36            IN NUMBER
--Payables Encumbrance Upgrade Debit Base Amount
 , p_source_37            IN NUMBER
--Payables Encumbrance Upgrade Option
 , p_source_38            IN VARCHAR2
--Invoice Exchange Date
 , p_source_39            IN DATE
--Invoice Exchange Rate
 , p_source_40            IN NUMBER
--Invoice Exchange Rate Type
 , p_source_41            IN VARCHAR2
--Deferred Accounting End Date
 , p_source_43            IN DATE
--Deferred Accounting Option
 , p_source_44            IN VARCHAR2
--Deferred Accounting Start Date
 , p_source_45            IN DATE
--Override Accounted Amount Indicator
 , p_source_46            IN VARCHAR2
 , p_source_46_meaning    IN VARCHAR2
--Invoice Supplier Identifier
 , p_source_47            IN NUMBER
--Invoice Supplier Site Identifier
 , p_source_48            IN NUMBER
--Third Party Type
 , p_source_49            IN VARCHAR2
--Parent Reversal Identifier
 , p_source_50            IN NUMBER
--Invoice Distribution Statistical Amount
 , p_source_51            IN NUMBER
--Invoice Distribution Tax Line Identifier
 , p_source_52            IN NUMBER
--Invoice Distribution Tax Distribution Identifier from Tax
 , p_source_53            IN NUMBER
--Invoice Distribution Summary Tax Line Identifier
 , p_source_54            IN NUMBER
--Payables Upgrade Credit Encumbrance Type Identifier
 , p_source_55            IN NUMBER
--Payables Upgrade Debit Encumbrance Type Identifier
 , p_source_56            IN NUMBER
--Invoice Distribution Encumbrance Amount
 , p_source_65            IN NUMBER
--Invoice Distribution Encumbrance Ledger Amount
 , p_source_66            IN NUMBER
)
IS

l_component_type              VARCHAR2(80);
l_component_code              VARCHAR2(30);
l_component_type_code         VARCHAR2(1);
l_component_appl_id           INTEGER;
l_amb_context_code            VARCHAR2(30);
l_entity_code                 VARCHAR2(30);
l_event_class_code            VARCHAR2(30);
l_ae_header_id                NUMBER;
l_event_type_code             VARCHAR2(30);
l_line_definition_code        VARCHAR2(30);
l_line_definition_owner_code  VARCHAR2(1);
--
-- adr variables
l_segment                     VARCHAR2(30);
l_ccid                        NUMBER;
l_adr_transaction_coa_id      NUMBER;
l_adr_accounting_coa_id       NUMBER;
l_adr_flexfield_segment_code  VARCHAR2(30);
l_adr_flex_value_set_id       NUMBER;
l_adr_value_type_code         VARCHAR2(30);
l_adr_value_combination_id    NUMBER;
l_adr_value_segment_code      VARCHAR2(30);

l_bflow_method_code           VARCHAR2(30);  -- 4219869 Business Flow
l_bflow_class_code            VARCHAR2(30);  -- 4219869 Business Flow
l_inherit_desc_flag           VARCHAR2(1);   -- 4219869 Business Flow
l_budgetary_control_flag      VARCHAR2(1);   -- 4458381 Public Sector Enh

-- 4262811 Variables ------------------------------------------------------------------------------------------
l_entered_amt_idx             NUMBER;
l_accted_amt_idx              NUMBER;
l_acc_rev_flag                VARCHAR2(1);
l_accrual_line_num            NUMBER;
l_tmp_amt                     NUMBER;
l_acc_rev_natural_side_code   VARCHAR2(1);

l_num_entries                 NUMBER;
l_gl_dates                    xla_ae_journal_entry_pkg.t_array_date;
l_accted_amts                 xla_ae_journal_entry_pkg.t_array_num;
l_entered_amts                xla_ae_journal_entry_pkg.t_array_num;
l_period_names                xla_ae_journal_entry_pkg.t_array_V15L;
l_recog_line_1                NUMBER;
l_recog_line_2                NUMBER;

l_bflow_applied_to_amt_idx    NUMBER;                                -- 5132302
l_bflow_applied_to_amt        NUMBER;                                -- 5132302
l_bflow_applied_to_amts       xla_ae_journal_entry_pkg.t_array_num;  -- 5132302

l_event_id                    NUMBER;  -- To handle MPA header Description: xla_ae_header_pkg.SetHdrDescription

--l_rounding_ccy                VARCHAR2(15); -- To handle MPA rounding  4262811b
l_same_currency               BOOLEAN;        -- To handle MPA rounding  4262811b

---------------------------------------------------------------------------------------------------------------


--
-- bulk performance
--
l_balance_type_code           VARCHAR2(1);
l_rec_acct_attrs              XLA_AE_LINES_PKG.t_rec_acct_attrs;
l_log_module                  VARCHAR2(240);

--
-- Upgrade strategy
--
l_actual_upg_option           VARCHAR2(1);
l_enc_upg_option           VARCHAR2(1);

--
BEGIN
--
IF g_log_enabled THEN
      l_log_module := C_DEFAULT_MODULE||'.AcctLineType_73';
END IF;
--
IF (C_LEVEL_PROCEDURE >= g_log_level) THEN

      trace
         (p_msg      => 'BEGIN of AcctLineType_73'
         ,p_level    => C_LEVEL_PROCEDURE
         ,p_module   => l_log_module);

END IF;
--
l_component_type             := 'AMB_JLT';
l_component_code             := 'AP_TAX_INV_PRICE_VAR_CM_ENC_DR';
l_component_type_code        := 'S';
l_component_appl_id          :=  200;
l_amb_context_code           := 'DEFAULT';
l_entity_code                := 'AP_INVOICES';
l_event_class_code           := 'CREDIT MEMOS';
l_event_type_code            := 'CREDIT MEMOS_ALL';
l_line_definition_owner_code := 'S';
l_line_definition_code       := 'ENC_CM_ALL';
--
l_balance_type_code          := 'E';
l_segment                     := NULL;
l_ccid                        := NULL;
l_adr_transaction_coa_id      := NULL;
l_adr_accounting_coa_id       := NULL;
l_adr_flexfield_segment_code  := NULL;
l_adr_flex_value_set_id       := NULL;
l_adr_value_type_code         := NULL;
l_adr_value_combination_id    := NULL;
l_adr_value_segment_code      := NULL;

l_bflow_method_code          := 'NONE';   -- 4219869 Business Flow
l_bflow_class_code           := 'AP_INV_ENCUM';    -- 4219869 Business Flow
l_inherit_desc_flag          := 'N';   -- 4219869 Business Flow
l_budgetary_control_flag     := 'Y';

l_bflow_applied_to_amt_idx   := NULL; -- 5132302
l_bflow_applied_to_amt       := NULL; -- 5132302
l_entered_amt_idx            := NULL;          -- 4262811
l_accted_amt_idx             := NULL;          -- 4262811
l_acc_rev_flag               := NULL;          -- 4262811
l_accrual_line_num           := NULL;          -- 4262811
l_tmp_amt                    := NULL;          -- 4262811
--
 
IF XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id = XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.ledger_id OR
    l_balance_type_code <> 'B' THEN
IF NVL(p_source_15,'
') =  'TIPV' AND 
NVL(p_source_17,'
') =  'Y'
 THEN 

   --
   XLA_AE_LINES_PKG.SetNewLine;

   p_balance_type_code          := l_balance_type_code;
   -- set the flag so later we will know whether the gain loss line needs to be created
   
   IF(l_balance_type_code = 'A' and p_actual_flag is null) THEN
     p_actual_flag :='A';
   END IF;

   --
   -- bulk performance
   --
   XLA_AE_LINES_PKG.set_ae_header_id (p_ae_header_id => p_event_id ,
                                      p_header_num   => 0); -- 4262811
   --
   -- set accounting line options
   --
   l_ae_header_id:= xla_ae_lines_pkg.SetAcctLineOption(
           p_natural_side_code          => 'D'
         , p_gain_or_loss_flag          => 'N'
         , p_gl_transfer_mode_code      => 'S'
         , p_acct_entry_type_code       => 'E'
         , p_switch_side_flag           => 'Y'
         , p_merge_duplicate_code       => 'N'
         );
   --
   l_acc_rev_natural_side_code := 'C';  -- 4262811
   -- 
   --
   -- set accounting line type info
   --
   xla_ae_lines_pkg.SetAcctLineType
      (p_component_type             => l_component_type
      ,p_event_type_code            => l_event_type_code
      ,p_line_definition_owner_code => l_line_definition_owner_code
      ,p_line_definition_code       => l_line_definition_code
      ,p_accounting_line_code       => l_component_code
      ,p_accounting_line_type_code  => l_component_type_code
      ,p_accounting_line_appl_id    => l_component_appl_id
      ,p_amb_context_code           => l_amb_context_code
      ,p_entity_code                => l_entity_code
      ,p_event_class_code           => l_event_class_code);
   --
   -- set accounting class
   --
   xla_ae_lines_pkg.SetAcctClass(
           p_accounting_class_code  => 'TIPV'
         , p_ae_header_id           => l_ae_header_id
         );

   --
   -- set rounding class
   --
   XLA_AE_LINES_PKG.g_rec_lines.array_rounding_class(XLA_AE_LINES_PKG.g_LineNumber) :=
                      'TIPV';

   --
   xla_ae_lines_pkg.g_rec_lines.array_calculate_acctd_flag(xla_ae_lines_pkg.g_LineNumber) := p_calculate_acctd_flag;
   xla_ae_lines_pkg.g_rec_lines.array_calculate_g_l_flag(xla_ae_lines_pkg.g_LineNumber) := p_calculate_g_l_flag;
   --
   -- bulk performance
   --
   XLA_AE_LINES_PKG.g_rec_lines.array_balance_type_code(XLA_AE_LINES_PKG.g_LineNumber) := l_balance_type_code;

   XLA_AE_LINES_PKG.g_rec_lines.array_ledger_id(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id;

   -- 4955764
   XLA_AE_LINES_PKG.g_rec_lines.array_gl_date(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_HEADER_PKG.g_rec_header_new.array_gl_date(g_array_event(p_event_id).array_value_num('header_index'));

   -- 4458381 Public Sector Enh
      XLA_AE_LINES_PKG.g_rec_lines.array_encumbrance_type_id(XLA_AE_LINES_PKG.g_LineNumber) := 1060;
   --
   -- set accounting attributes for the line type
   --
   l_entered_amt_idx := 23;
   l_accted_amt_idx  := 28;
   l_bflow_applied_to_amt_idx  := NULL;  -- 5132302
   l_rec_acct_attrs.array_acct_attr_code(1) := 'ACCOUNTING_REVERSAL_OPTION';
   l_rec_acct_attrs.array_char_value(1)  := p_source_19;
   l_rec_acct_attrs.array_acct_attr_code(2) := 'ALLOC_TO_APPLICATION_ID';
   l_rec_acct_attrs.array_num_value(2)  := 
xla_ae_sources_pkg.GetSystemSourceNum(
   p_source_code           => 'XLA_EVENT_APPL_ID'
 , p_source_type_code      => 'Y'
 , p_source_application_id =>  602
);
   l_rec_acct_attrs.array_acct_attr_code(3) := 'ALLOC_TO_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(3)  := p_source_21;
   l_rec_acct_attrs.array_acct_attr_code(4) := 'ALLOC_TO_ENTITY_CODE';
   l_rec_acct_attrs.array_char_value(4)  := 
xla_ae_sources_pkg.GetSystemSourceChar(
   p_source_code           => 'XLA_ENTITY_CODE'
 , p_source_type_code      => 'Y'
 , p_source_application_id =>  602
);
   l_rec_acct_attrs.array_acct_attr_code(5) := 'ALLOC_TO_FIRST_DIST_ID';
   l_rec_acct_attrs.array_num_value(5)  :=  to_char(p_source_23);
   l_rec_acct_attrs.array_acct_attr_code(6) := 'ALLOC_TO_FIRST_SYS_TRAN_ID';
   l_rec_acct_attrs.array_num_value(6)  :=  to_char(p_source_24);
   l_rec_acct_attrs.array_acct_attr_code(7) := 'APPLIED_TO_APPLICATION_ID';
   l_rec_acct_attrs.array_num_value(7)  := p_source_25;
   l_rec_acct_attrs.array_acct_attr_code(8) := 'APPLIED_TO_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(8)  := p_source_26;
   l_rec_acct_attrs.array_acct_attr_code(9) := 'APPLIED_TO_ENTITY_CODE';
   l_rec_acct_attrs.array_char_value(9)  := p_source_27;
   l_rec_acct_attrs.array_acct_attr_code(10) := 'APPLIED_TO_FIRST_DIST_ID';
   l_rec_acct_attrs.array_num_value(10)  :=  to_char(p_source_28);
   l_rec_acct_attrs.array_acct_attr_code(11) := 'APPLIED_TO_FIRST_SYS_TRAN_ID';
   l_rec_acct_attrs.array_num_value(11)  :=  to_char(p_source_29);
   l_rec_acct_attrs.array_acct_attr_code(12) := 'DISTRIBUTION_IDENTIFIER_1';
   l_rec_acct_attrs.array_num_value(12)  :=  to_char(p_source_30);
   l_rec_acct_attrs.array_acct_attr_code(13) := 'DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(13)  := p_source_21;
   l_rec_acct_attrs.array_acct_attr_code(14) := 'ENC_UPG_CR_CCID';
   l_rec_acct_attrs.array_num_value(14)  := p_source_31;
   l_rec_acct_attrs.array_acct_attr_code(15) := 'ENC_UPG_CR_ENTERED_AMT';
   l_rec_acct_attrs.array_num_value(15)  := p_source_32;
   l_rec_acct_attrs.array_acct_attr_code(16) := 'ENC_UPG_CR_ENTERED_CURR';
   l_rec_acct_attrs.array_char_value(16)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(17) := 'ENC_UPG_CR_LEDGER_AMT';
   l_rec_acct_attrs.array_num_value(17)  := p_source_34;
   l_rec_acct_attrs.array_acct_attr_code(18) := 'ENC_UPG_DR_CCID';
   l_rec_acct_attrs.array_num_value(18)  := p_source_35;
   l_rec_acct_attrs.array_acct_attr_code(19) := 'ENC_UPG_DR_ENTERED_AMT';
   l_rec_acct_attrs.array_num_value(19)  := p_source_36;
   l_rec_acct_attrs.array_acct_attr_code(20) := 'ENC_UPG_DR_ENTERED_CURR';
   l_rec_acct_attrs.array_char_value(20)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(21) := 'ENC_UPG_DR_LEDGER_AMT';
   l_rec_acct_attrs.array_num_value(21)  := p_source_37;
   l_rec_acct_attrs.array_acct_attr_code(22) := 'ENC_UPG_OPTION';
   l_rec_acct_attrs.array_char_value(22)  := p_source_38;
   l_rec_acct_attrs.array_acct_attr_code(23) := 'ENTERED_CURRENCY_AMOUNT';
   l_rec_acct_attrs.array_num_value(23)  := p_source_65;
   l_rec_acct_attrs.array_acct_attr_code(24) := 'ENTERED_CURRENCY_CODE';
   l_rec_acct_attrs.array_char_value(24)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(25) := 'EXCHANGE_DATE';
   l_rec_acct_attrs.array_date_value(25)  := p_source_39;
   l_rec_acct_attrs.array_acct_attr_code(26) := 'EXCHANGE_RATE';
   l_rec_acct_attrs.array_num_value(26)  := p_source_40;
   l_rec_acct_attrs.array_acct_attr_code(27) := 'EXCHANGE_RATE_TYPE';
   l_rec_acct_attrs.array_char_value(27)  := p_source_41;
   l_rec_acct_attrs.array_acct_attr_code(28) := 'LEDGER_AMOUNT';
   l_rec_acct_attrs.array_num_value(28)  := p_source_66;
   l_rec_acct_attrs.array_acct_attr_code(29) := 'MULTIPERIOD_END_DATE';
   l_rec_acct_attrs.array_date_value(29)  := p_source_43;
   l_rec_acct_attrs.array_acct_attr_code(30) := 'MULTIPERIOD_OPTION';
   l_rec_acct_attrs.array_char_value(30)  := p_source_44;
   l_rec_acct_attrs.array_acct_attr_code(31) := 'MULTIPERIOD_START_DATE';
   l_rec_acct_attrs.array_date_value(31)  := p_source_45;
   l_rec_acct_attrs.array_acct_attr_code(32) := 'OVERRIDE_ACCTD_AMT_FLAG';
   l_rec_acct_attrs.array_char_value(32)  := p_source_46;
   l_rec_acct_attrs.array_acct_attr_code(33) := 'PARTY_ID';
   l_rec_acct_attrs.array_num_value(33)  := p_source_47;
   l_rec_acct_attrs.array_acct_attr_code(34) := 'PARTY_SITE_ID';
   l_rec_acct_attrs.array_num_value(34)  := p_source_48;
   l_rec_acct_attrs.array_acct_attr_code(35) := 'PARTY_TYPE';
   l_rec_acct_attrs.array_char_value(35)  := p_source_49;
   l_rec_acct_attrs.array_acct_attr_code(36) := 'REVERSED_DISTRIBUTION_ID1';
   l_rec_acct_attrs.array_num_value(36)  :=  to_char(p_source_50);
   l_rec_acct_attrs.array_acct_attr_code(37) := 'REVERSED_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(37)  := p_source_21;
   l_rec_acct_attrs.array_acct_attr_code(38) := 'STATISTICAL_AMOUNT';
   l_rec_acct_attrs.array_num_value(38)  := p_source_51;
   l_rec_acct_attrs.array_acct_attr_code(39) := 'TAX_LINE_REF_ID';
   l_rec_acct_attrs.array_num_value(39)  := p_source_52;
   l_rec_acct_attrs.array_acct_attr_code(40) := 'TAX_REC_NREC_DIST_REF_ID';
   l_rec_acct_attrs.array_num_value(40)  := p_source_53;
   l_rec_acct_attrs.array_acct_attr_code(41) := 'TAX_SUMMARY_LINE_REF_ID';
   l_rec_acct_attrs.array_num_value(41)  := p_source_54;
   l_rec_acct_attrs.array_acct_attr_code(42) := 'UPG_CR_ENC_TYPE_ID';
   l_rec_acct_attrs.array_num_value(42)  := p_source_55;
   l_rec_acct_attrs.array_acct_attr_code(43) := 'UPG_DR_ENC_TYPE_ID';
   l_rec_acct_attrs.array_num_value(43)  := p_source_56;

   XLA_AE_LINES_PKG.SetLineAcctAttrs(l_rec_acct_attrs);
   p_gain_or_loss_ref  := XLA_AE_LINES_PKG.g_rec_lines.array_gain_or_loss_ref(XLA_AE_LINES_PKG.g_LineNumber);

   ---------------------------------------------------------------------------------------------------------------
   -- 4336173 -- assign Business Flow Class (replace code in xla_ae_lines_pkg.Business_Flow_Validation)
   ---------------------------------------------------------------------------------------------------------------
   XLA_AE_LINES_PKG.g_rec_lines.array_business_class_code(XLA_AE_LINES_PKG.g_LineNumber) := l_bflow_class_code;

   l_actual_upg_option  := XLA_AE_LINES_PKG.g_rec_lines.array_actual_upg_option(XLA_AE_LINES_PKG.g_LineNumber);
   l_enc_upg_option     := XLA_AE_LINES_PKG.g_rec_lines.array_enc_upg_option(XLA_AE_LINES_PKG.g_LineNumber);

   IF xla_accounting_cache_pkg.GetValueChar
         (p_source_code         => 'LEDGER_CATEGORY_CODE'
         ,p_target_ledger_id    => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id) IN ('PRIMARY','ALC')
   AND l_bflow_method_code = 'PRIOR_ENTRY'
--   AND (l_actual_upg_option = 'Y' OR l_enc_upg_option = 'Y') Bug 4922099
   AND ( (NVL(l_actual_upg_option, 'N') IN ('Y', 'O')) OR
         (NVL(l_enc_upg_option, 'N') IN ('Y', 'O'))
       )
   THEN
         xla_ae_lines_pkg.BflowUpgEntry
           (p_business_method_code    => l_bflow_method_code
           ,p_business_class_code     => l_bflow_class_code
           ,p_balance_type            => l_balance_type_code);
   ELSE
      NULL;
-- No business flow processing for business flow method of NONE.
   END IF;

   --
   -- call analytical criteria
   --
   
   --
   -- call description
   --
   
xla_ae_lines_pkg.SetLineDescription(
   p_ae_header_id => l_ae_header_id
  ,p_description  => Description_2 (
     p_application_id         => p_application_id
   , p_ae_header_id           => l_ae_header_id 
, p_source_1 => p_source_1
   )
);


   --
   -- call ADRs
   -- Bug 4922099
   --
   IF ( (l_bflow_method_code <> 'PRIOR_ENTRY') OR
        (NVL(l_actual_upg_option, 'N') = 'O') OR
        (NVL(l_enc_upg_option, 'N') = 'O')
      )
   THEN
   NULL;
   --
   --
   
  l_ccid := AcctDerRule_7(
           p_application_id           => p_application_id
         , p_ae_header_id             => l_ae_header_id 
, p_source_11 => p_source_11
         , x_transaction_coa_id       => l_adr_transaction_coa_id
         , x_accounting_coa_id        => l_adr_accounting_coa_id
         , x_value_type_code          => l_adr_value_type_code
         , p_side                     => 'NA'
   );

   xla_ae_lines_pkg.set_ccid(
    p_code_combination_id          => l_ccid
  , p_value_type_code              => l_adr_value_type_code
  , p_transaction_coa_id           => l_adr_transaction_coa_id
  , p_accounting_coa_id            => l_adr_accounting_coa_id
  , p_adr_code                     => 'AP_INVOICE_DIST'
  , p_adr_type_code                => 'S'
  , p_component_type               => l_component_type
  , p_component_code               => l_component_code
  , p_component_type_code          => l_component_type_code
  , p_component_appl_id            => l_component_appl_id
  , p_amb_context_code             => l_amb_context_code
  , p_side                         => 'NA'
  );


   --
   --
   END IF;
   --
   -- Bug 4922099
   IF ( ( (NVL(l_actual_upg_option, 'N') = 'O') OR
          (NVL(l_enc_upg_option, 'N') = 'O')
        ) AND
        (l_bflow_method_code = 'PRIOR_ENTRY')
      )
   THEN
      IF
      --
      1 = 2
      --
      THEN
      xla_accounting_err_pkg.build_message
                                    (p_appli_s_name            => 'XLA'
                                    ,p_msg_name                => 'XLA_UPG_OVERRIDE_ADR_UNDEFINED'
                                    ,p_token_1                 => 'LINE_NUMBER'
                                    ,p_value_1                 => XLA_AE_LINES_PKG.g_LineNumber
                                    ,p_token_2                 => 'LINE_TYPE_NAME'
                                    ,p_value_2                 => XLA_AE_SOURCES_PKG.GetComponentName (
                                                                             l_component_type
                                                                            ,l_component_code
                                                                            ,l_component_type_code
                                                                            ,l_component_appl_id
                                                                            ,l_amb_context_code
                                                                            ,l_entity_code
                                                                            ,l_event_class_code
                                                                           )
                                    ,p_token_3                 => 'OWNER'
                                    ,p_value_3                 => xla_lookups_pkg.get_meaning(
                                                                          p_lookup_type     => 'XLA_OWNER_TYPE'
                                                                          ,p_lookup_code    => l_component_type_code
                                                                         )
                                    ,p_token_4                 => 'PRODUCT_NAME'
                                    ,p_value_4                 => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.application_name
                                    ,p_entity_id               => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.entity_id
                                    ,p_event_id                => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.event_id
                                    ,p_ledger_id               => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id
                                    ,p_ae_header_id            =>  NULL
                                       );

        IF (C_LEVEL_ERROR>= g_log_level) THEN
                 trace
                      (p_msg      => 'ERROR: XLA_UPG_OVERRIDE_ADR_UNDEFINED'
                      ,p_level    => C_LEVEL_ERROR
                      ,p_module   => l_log_module);
        END IF;
      END IF;
   END IF;
   --
   --
   ------------------------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- NOTE: XLA_AE_LINES_PKG.ValidateCurrentLine should NOT be generated if business flow method is
   -- Prior Entry.  Currently, the following code is always generated.
   ------------------------------------------------------------------------------------------------
   XLA_AE_LINES_PKG.ValidateCurrentLine;

   ------------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- Populated credit and debit amounts -- Need to generate this within IF <condition>
   ------------------------------------------------------------------------------------
   XLA_AE_LINES_PKG.SetDebitCreditAmounts;

   ----------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- Update journal entry status -- Need to generate this within IF <condition>
   ----------------------------------------------------------------------------------
   XLA_AE_JOURNAL_ENTRY_PKG.UpdateJournalEntryStatus
         (p_hdr_idx => g_array_event(p_event_id).array_value_num('header_index')
         ,p_balance_type_code => l_balance_type_code
         );

   -------------------------------------------------------------------------------------------
   -- 4262811 - Generate the Accrual Reversal lines
   -------------------------------------------------------------------------------------------
   BEGIN
      l_acc_rev_flag := XLA_AE_HEADER_PKG.g_rec_header_new.array_accrual_reversal_flag
                              (g_array_event(p_event_id).array_value_num('header_index'));
      IF l_acc_rev_flag IS NULL THEN
         l_acc_rev_flag := 'N';
      END IF;
   EXCEPTION
      WHEN OTHERS THEN
         l_acc_rev_flag := 'N';
   END;
   --
   IF (l_acc_rev_flag = 'Y') THEN

       -- 4645092  ------------------------------------------------------------------------------
       -- To allow MPA report to determine if it should generate report process
       XLA_ACCOUNTING_PKG.g_mpa_accrual_exists := 'Y';
       ------------------------------------------------------------------------------------------

       l_accrual_line_num := XLA_AE_LINES_PKG.g_LineNumber;
       XLA_AE_LINES_PKG.CopyLineInfo(l_accrual_line_num);
   -- added call to set_ccid to execute mapping  for secondary accrual reversal entries bug 7444204
   -- call ADRs
   -- Bug 4922099
   --
   IF ( (l_bflow_method_code <> 'PRIOR_ENTRY') OR
        (NVL(l_actual_upg_option, 'N') = 'O') OR
        (NVL(l_enc_upg_option, 'N') = 'O')
      )
   THEN
   NULL;
   --
   --
   
  l_ccid := AcctDerRule_7(
           p_application_id           => p_application_id
         , p_ae_header_id             => l_ae_header_id 
, p_source_11 => p_source_11
         , x_transaction_coa_id       => l_adr_transaction_coa_id
         , x_accounting_coa_id        => l_adr_accounting_coa_id
         , x_value_type_code          => l_adr_value_type_code
         , p_side                     => 'NA'
   );

   xla_ae_lines_pkg.set_ccid(
    p_code_combination_id          => l_ccid
  , p_value_type_code              => l_adr_value_type_code
  , p_transaction_coa_id           => l_adr_transaction_coa_id
  , p_accounting_coa_id            => l_adr_accounting_coa_id
  , p_adr_code                     => 'AP_INVOICE_DIST'
  , p_adr_type_code                => 'S'
  , p_component_type               => l_component_type
  , p_component_code               => l_component_code
  , p_component_type_code          => l_component_type_code
  , p_component_appl_id            => l_component_appl_id
  , p_amb_context_code             => l_amb_context_code
  , p_side                         => 'NA'
  );


   --
   --
   END IF;

       --
       -- Update the line information that should be overwritten
       --
       XLA_AE_LINES_PKG.set_ae_header_id(p_ae_header_id => p_event_id ,
                                         p_header_num   => 1);
       XLA_AE_LINES_PKG.g_rec_lines.array_header_num(XLA_AE_LINES_PKG.g_LineNumber)  :=1;

       XLA_AE_LINES_PKG.g_rec_lines.array_business_class_code(XLA_AE_LINES_PKG.g_LineNumber) := NULL; -- 4669271

       IF l_bflow_method_code <> 'NONE' THEN  -- 4655713b
          XLA_AE_LINES_PKG.g_rec_lines.array_reversal_code(XLA_AE_LINES_PKG.g_LineNumber) := CONCAT('MPA_',l_bflow_method_code);
       END IF;

      --
      -- Depending on the Reversal Method setup, do a switch side or changes sign for the amounts
      --
      IF (XLA_AE_JOURNAL_ENTRY_PKG.g_cache_ledgers_info.ledger_reversal_option = 'SIDE') THEN
          XLA_AE_LINES_PKG.g_rec_lines.array_natural_side_code(XLA_AE_LINES_PKG.g_LineNumber) :=  l_acc_rev_natural_side_code;
      ELSE
          ---------------------------------------------------------------------------------------------------
          -- 4262811a Switch Sign
          ---------------------------------------------------------------------------------------------------
          XLA_AE_LINES_PKG.g_rec_lines.array_switch_side_flag(XLA_AE_LINES_PKG.g_LineNumber) := 'N';  -- 5052518
          XLA_AE_LINES_PKG.g_rec_lines.array_ledger_amount(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_ledger_amount(XLA_AE_LINES_PKG.g_LineNumber) * -1;
          XLA_AE_LINES_PKG.g_rec_lines.array_entered_amount(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_entered_amount(XLA_AE_LINES_PKG.g_LineNumber) * -1;
          -- 5132302
          XLA_AE_LINES_PKG.g_rec_lines.array_bflow_applied_to_amt(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_bflow_applied_to_amt(XLA_AE_LINES_PKG.g_LineNumber) * -1;

      END IF;

      -- 4955764
      XLA_AE_LINES_PKG.g_rec_lines.array_gl_date(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_HEADER_PKG.g_rec_header_new.array_gl_date(g_array_event(p_event_id).array_value_num('acc_rev_header_index'));


      XLA_AE_LINES_PKG.ValidateCurrentLine;
      XLA_AE_LINES_PKG.SetDebitCreditAmounts;

      XLA_AE_JOURNAL_ENTRY_PKG.UpdateJournalEntryStatus
               (p_hdr_idx           => g_array_event(p_event_id).array_value_num('acc_rev_header_index')
               ,p_balance_type_code => l_balance_type_code);

   END IF;

   -----------------------------------------------------------------------------------------
   -- 4262811 Multiperiod Accounting
   -----------------------------------------------------------------------------------------
     -- No MPA option is assigned.


END IF;
END IF;
--

--
IF (C_LEVEL_PROCEDURE >= g_log_level) THEN
   trace
      (p_msg      => 'END of AcctLineType_73'
      ,p_level    => C_LEVEL_PROCEDURE
      ,p_module   => l_log_module);
END IF;
--
EXCEPTION
  WHEN xla_exceptions_pkg.application_exception THEN
      RAISE;
  WHEN OTHERS THEN
       xla_exceptions_pkg.raise_message
           (p_location => 'XLA_00200_AAD_S_000010_BC_PKG.AcctLineType_73');
END AcctLineType_73;
--

---------------------------------------
--
-- PRIVATE FUNCTION
--         AcctLineType_74
--
---------------------------------------
PROCEDURE AcctLineType_74 (
  p_application_id        IN NUMBER
 ,p_event_id              IN NUMBER
 ,p_calculate_acctd_flag  IN VARCHAR2
 ,p_calculate_g_l_flag    IN VARCHAR2
 ,p_actual_flag           IN OUT VARCHAR2
 ,p_balance_type_code     OUT VARCHAR2
 ,p_gain_or_loss_ref      OUT VARCHAR2
 
--Invoice Distribution Description
 , p_source_1            IN VARCHAR2
--Invoice Distribution Account
 , p_source_11            IN NUMBER
--Invoice Distribution Type
 , p_source_15            IN VARCHAR2
 , p_source_15_meaning    IN VARCHAR2
--Purchasing Encumbrance Option
 , p_source_17            IN VARCHAR2
 , p_source_17_meaning    IN VARCHAR2
--Accounting Reversal Indicator
 , p_source_19            IN VARCHAR2
--Distribution Link Type
 , p_source_21            IN VARCHAR2
--Allocation to Main Distribution Identifier
 , p_source_23            IN NUMBER
--Invoice Identifier
 , p_source_24            IN NUMBER
--Business Flow Accounts Payable Application Identifier
 , p_source_25            IN NUMBER
--Business Flow Invoice Distribution Type
 , p_source_26            IN VARCHAR2
--Business Flow Invoice Entity Code
 , p_source_27            IN VARCHAR2
--Business Flow Invoice Distribution Identifier
 , p_source_28            IN NUMBER
--Business Flow Invoice Identifier
 , p_source_29            IN NUMBER
--Invoice Distribution Identifier
 , p_source_30            IN NUMBER
--Payables Encumbrance Upgrade Credit Account
 , p_source_31            IN NUMBER
--Payables Encumbrance Upgrade Credit Amount
 , p_source_32            IN NUMBER
--Invoice Currency Code
 , p_source_33            IN VARCHAR2
--Payables Encumbrance Upgrade Credit Base Amount
 , p_source_34            IN NUMBER
--Payables Encumbrance Upgrade Debit Account
 , p_source_35            IN NUMBER
--Payables Encumbrance Upgrade Debit Amount
 , p_source_36            IN NUMBER
--Payables Encumbrance Upgrade Debit Base Amount
 , p_source_37            IN NUMBER
--Payables Encumbrance Upgrade Option
 , p_source_38            IN VARCHAR2
--Invoice Exchange Date
 , p_source_39            IN DATE
--Invoice Exchange Rate
 , p_source_40            IN NUMBER
--Invoice Exchange Rate Type
 , p_source_41            IN VARCHAR2
--Deferred Accounting End Date
 , p_source_43            IN DATE
--Deferred Accounting Option
 , p_source_44            IN VARCHAR2
--Deferred Accounting Start Date
 , p_source_45            IN DATE
--Override Accounted Amount Indicator
 , p_source_46            IN VARCHAR2
 , p_source_46_meaning    IN VARCHAR2
--Invoice Supplier Identifier
 , p_source_47            IN NUMBER
--Invoice Supplier Site Identifier
 , p_source_48            IN NUMBER
--Third Party Type
 , p_source_49            IN VARCHAR2
--Parent Reversal Identifier
 , p_source_50            IN NUMBER
--Invoice Distribution Tax Line Identifier
 , p_source_52            IN NUMBER
--Invoice Distribution Tax Distribution Identifier from Tax
 , p_source_53            IN NUMBER
--Invoice Distribution Summary Tax Line Identifier
 , p_source_54            IN NUMBER
--Payables Upgrade Credit Encumbrance Type Identifier
 , p_source_55            IN NUMBER
--Payables Upgrade Debit Encumbrance Type Identifier
 , p_source_56            IN NUMBER
--Invoice Distribution Encumbrance Amount
 , p_source_65            IN NUMBER
--Invoice Distribution Encumbrance Ledger Amount
 , p_source_66            IN NUMBER
)
IS

l_component_type              VARCHAR2(80);
l_component_code              VARCHAR2(30);
l_component_type_code         VARCHAR2(1);
l_component_appl_id           INTEGER;
l_amb_context_code            VARCHAR2(30);
l_entity_code                 VARCHAR2(30);
l_event_class_code            VARCHAR2(30);
l_ae_header_id                NUMBER;
l_event_type_code             VARCHAR2(30);
l_line_definition_code        VARCHAR2(30);
l_line_definition_owner_code  VARCHAR2(1);
--
-- adr variables
l_segment                     VARCHAR2(30);
l_ccid                        NUMBER;
l_adr_transaction_coa_id      NUMBER;
l_adr_accounting_coa_id       NUMBER;
l_adr_flexfield_segment_code  VARCHAR2(30);
l_adr_flex_value_set_id       NUMBER;
l_adr_value_type_code         VARCHAR2(30);
l_adr_value_combination_id    NUMBER;
l_adr_value_segment_code      VARCHAR2(30);

l_bflow_method_code           VARCHAR2(30);  -- 4219869 Business Flow
l_bflow_class_code            VARCHAR2(30);  -- 4219869 Business Flow
l_inherit_desc_flag           VARCHAR2(1);   -- 4219869 Business Flow
l_budgetary_control_flag      VARCHAR2(1);   -- 4458381 Public Sector Enh

-- 4262811 Variables ------------------------------------------------------------------------------------------
l_entered_amt_idx             NUMBER;
l_accted_amt_idx              NUMBER;
l_acc_rev_flag                VARCHAR2(1);
l_accrual_line_num            NUMBER;
l_tmp_amt                     NUMBER;
l_acc_rev_natural_side_code   VARCHAR2(1);

l_num_entries                 NUMBER;
l_gl_dates                    xla_ae_journal_entry_pkg.t_array_date;
l_accted_amts                 xla_ae_journal_entry_pkg.t_array_num;
l_entered_amts                xla_ae_journal_entry_pkg.t_array_num;
l_period_names                xla_ae_journal_entry_pkg.t_array_V15L;
l_recog_line_1                NUMBER;
l_recog_line_2                NUMBER;

l_bflow_applied_to_amt_idx    NUMBER;                                -- 5132302
l_bflow_applied_to_amt        NUMBER;                                -- 5132302
l_bflow_applied_to_amts       xla_ae_journal_entry_pkg.t_array_num;  -- 5132302

l_event_id                    NUMBER;  -- To handle MPA header Description: xla_ae_header_pkg.SetHdrDescription

--l_rounding_ccy                VARCHAR2(15); -- To handle MPA rounding  4262811b
l_same_currency               BOOLEAN;        -- To handle MPA rounding  4262811b

---------------------------------------------------------------------------------------------------------------


--
-- bulk performance
--
l_balance_type_code           VARCHAR2(1);
l_rec_acct_attrs              XLA_AE_LINES_PKG.t_rec_acct_attrs;
l_log_module                  VARCHAR2(240);

--
-- Upgrade strategy
--
l_actual_upg_option           VARCHAR2(1);
l_enc_upg_option           VARCHAR2(1);

--
BEGIN
--
IF g_log_enabled THEN
      l_log_module := C_DEFAULT_MODULE||'.AcctLineType_74';
END IF;
--
IF (C_LEVEL_PROCEDURE >= g_log_level) THEN

      trace
         (p_msg      => 'BEGIN of AcctLineType_74'
         ,p_level    => C_LEVEL_PROCEDURE
         ,p_module   => l_log_module);

END IF;
--
l_component_type             := 'AMB_JLT';
l_component_code             := 'AP_TAX_INV_PRICE_VAR_DM_ENC_DR';
l_component_type_code        := 'S';
l_component_appl_id          :=  200;
l_amb_context_code           := 'DEFAULT';
l_entity_code                := 'AP_INVOICES';
l_event_class_code           := 'DEBIT MEMOS';
l_event_type_code            := 'DEBIT MEMOS_ALL';
l_line_definition_owner_code := 'S';
l_line_definition_code       := 'ENC_DM_ALL';
--
l_balance_type_code          := 'E';
l_segment                     := NULL;
l_ccid                        := NULL;
l_adr_transaction_coa_id      := NULL;
l_adr_accounting_coa_id       := NULL;
l_adr_flexfield_segment_code  := NULL;
l_adr_flex_value_set_id       := NULL;
l_adr_value_type_code         := NULL;
l_adr_value_combination_id    := NULL;
l_adr_value_segment_code      := NULL;

l_bflow_method_code          := 'NONE';   -- 4219869 Business Flow
l_bflow_class_code           := 'AP_INV_ENCUM';    -- 4219869 Business Flow
l_inherit_desc_flag          := 'N';   -- 4219869 Business Flow
l_budgetary_control_flag     := 'Y';

l_bflow_applied_to_amt_idx   := NULL; -- 5132302
l_bflow_applied_to_amt       := NULL; -- 5132302
l_entered_amt_idx            := NULL;          -- 4262811
l_accted_amt_idx             := NULL;          -- 4262811
l_acc_rev_flag               := NULL;          -- 4262811
l_accrual_line_num           := NULL;          -- 4262811
l_tmp_amt                    := NULL;          -- 4262811
--
 
IF XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id = XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.ledger_id OR
    l_balance_type_code <> 'B' THEN
IF NVL(p_source_15,'
') =  'TIPV' AND 
NVL(p_source_17,'
') =  'Y'
 THEN 

   --
   XLA_AE_LINES_PKG.SetNewLine;

   p_balance_type_code          := l_balance_type_code;
   -- set the flag so later we will know whether the gain loss line needs to be created
   
   IF(l_balance_type_code = 'A' and p_actual_flag is null) THEN
     p_actual_flag :='A';
   END IF;

   --
   -- bulk performance
   --
   XLA_AE_LINES_PKG.set_ae_header_id (p_ae_header_id => p_event_id ,
                                      p_header_num   => 0); -- 4262811
   --
   -- set accounting line options
   --
   l_ae_header_id:= xla_ae_lines_pkg.SetAcctLineOption(
           p_natural_side_code          => 'D'
         , p_gain_or_loss_flag          => 'N'
         , p_gl_transfer_mode_code      => 'S'
         , p_acct_entry_type_code       => 'E'
         , p_switch_side_flag           => 'Y'
         , p_merge_duplicate_code       => 'N'
         );
   --
   l_acc_rev_natural_side_code := 'C';  -- 4262811
   -- 
   --
   -- set accounting line type info
   --
   xla_ae_lines_pkg.SetAcctLineType
      (p_component_type             => l_component_type
      ,p_event_type_code            => l_event_type_code
      ,p_line_definition_owner_code => l_line_definition_owner_code
      ,p_line_definition_code       => l_line_definition_code
      ,p_accounting_line_code       => l_component_code
      ,p_accounting_line_type_code  => l_component_type_code
      ,p_accounting_line_appl_id    => l_component_appl_id
      ,p_amb_context_code           => l_amb_context_code
      ,p_entity_code                => l_entity_code
      ,p_event_class_code           => l_event_class_code);
   --
   -- set accounting class
   --
   xla_ae_lines_pkg.SetAcctClass(
           p_accounting_class_code  => 'TIPV'
         , p_ae_header_id           => l_ae_header_id
         );

   --
   -- set rounding class
   --
   XLA_AE_LINES_PKG.g_rec_lines.array_rounding_class(XLA_AE_LINES_PKG.g_LineNumber) :=
                      'TIPV';

   --
   xla_ae_lines_pkg.g_rec_lines.array_calculate_acctd_flag(xla_ae_lines_pkg.g_LineNumber) := p_calculate_acctd_flag;
   xla_ae_lines_pkg.g_rec_lines.array_calculate_g_l_flag(xla_ae_lines_pkg.g_LineNumber) := p_calculate_g_l_flag;
   --
   -- bulk performance
   --
   XLA_AE_LINES_PKG.g_rec_lines.array_balance_type_code(XLA_AE_LINES_PKG.g_LineNumber) := l_balance_type_code;

   XLA_AE_LINES_PKG.g_rec_lines.array_ledger_id(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id;

   -- 4955764
   XLA_AE_LINES_PKG.g_rec_lines.array_gl_date(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_HEADER_PKG.g_rec_header_new.array_gl_date(g_array_event(p_event_id).array_value_num('header_index'));

   -- 4458381 Public Sector Enh
      XLA_AE_LINES_PKG.g_rec_lines.array_encumbrance_type_id(XLA_AE_LINES_PKG.g_LineNumber) := 1060;
   --
   -- set accounting attributes for the line type
   --
   l_entered_amt_idx := 23;
   l_accted_amt_idx  := 28;
   l_bflow_applied_to_amt_idx  := NULL;  -- 5132302
   l_rec_acct_attrs.array_acct_attr_code(1) := 'ACCOUNTING_REVERSAL_OPTION';
   l_rec_acct_attrs.array_char_value(1)  := p_source_19;
   l_rec_acct_attrs.array_acct_attr_code(2) := 'ALLOC_TO_APPLICATION_ID';
   l_rec_acct_attrs.array_num_value(2)  := 
xla_ae_sources_pkg.GetSystemSourceNum(
   p_source_code           => 'XLA_EVENT_APPL_ID'
 , p_source_type_code      => 'Y'
 , p_source_application_id =>  602
);
   l_rec_acct_attrs.array_acct_attr_code(3) := 'ALLOC_TO_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(3)  := p_source_21;
   l_rec_acct_attrs.array_acct_attr_code(4) := 'ALLOC_TO_ENTITY_CODE';
   l_rec_acct_attrs.array_char_value(4)  := 
xla_ae_sources_pkg.GetSystemSourceChar(
   p_source_code           => 'XLA_ENTITY_CODE'
 , p_source_type_code      => 'Y'
 , p_source_application_id =>  602
);
   l_rec_acct_attrs.array_acct_attr_code(5) := 'ALLOC_TO_FIRST_DIST_ID';
   l_rec_acct_attrs.array_num_value(5)  :=  to_char(p_source_23);
   l_rec_acct_attrs.array_acct_attr_code(6) := 'ALLOC_TO_FIRST_SYS_TRAN_ID';
   l_rec_acct_attrs.array_num_value(6)  :=  to_char(p_source_24);
   l_rec_acct_attrs.array_acct_attr_code(7) := 'APPLIED_TO_APPLICATION_ID';
   l_rec_acct_attrs.array_num_value(7)  := p_source_25;
   l_rec_acct_attrs.array_acct_attr_code(8) := 'APPLIED_TO_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(8)  := p_source_26;
   l_rec_acct_attrs.array_acct_attr_code(9) := 'APPLIED_TO_ENTITY_CODE';
   l_rec_acct_attrs.array_char_value(9)  := p_source_27;
   l_rec_acct_attrs.array_acct_attr_code(10) := 'APPLIED_TO_FIRST_DIST_ID';
   l_rec_acct_attrs.array_num_value(10)  :=  to_char(p_source_28);
   l_rec_acct_attrs.array_acct_attr_code(11) := 'APPLIED_TO_FIRST_SYS_TRAN_ID';
   l_rec_acct_attrs.array_num_value(11)  :=  to_char(p_source_29);
   l_rec_acct_attrs.array_acct_attr_code(12) := 'DISTRIBUTION_IDENTIFIER_1';
   l_rec_acct_attrs.array_num_value(12)  :=  to_char(p_source_30);
   l_rec_acct_attrs.array_acct_attr_code(13) := 'DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(13)  := p_source_21;
   l_rec_acct_attrs.array_acct_attr_code(14) := 'ENC_UPG_CR_CCID';
   l_rec_acct_attrs.array_num_value(14)  := p_source_31;
   l_rec_acct_attrs.array_acct_attr_code(15) := 'ENC_UPG_CR_ENTERED_AMT';
   l_rec_acct_attrs.array_num_value(15)  := p_source_32;
   l_rec_acct_attrs.array_acct_attr_code(16) := 'ENC_UPG_CR_ENTERED_CURR';
   l_rec_acct_attrs.array_char_value(16)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(17) := 'ENC_UPG_CR_LEDGER_AMT';
   l_rec_acct_attrs.array_num_value(17)  := p_source_34;
   l_rec_acct_attrs.array_acct_attr_code(18) := 'ENC_UPG_DR_CCID';
   l_rec_acct_attrs.array_num_value(18)  := p_source_35;
   l_rec_acct_attrs.array_acct_attr_code(19) := 'ENC_UPG_DR_ENTERED_AMT';
   l_rec_acct_attrs.array_num_value(19)  := p_source_36;
   l_rec_acct_attrs.array_acct_attr_code(20) := 'ENC_UPG_DR_ENTERED_CURR';
   l_rec_acct_attrs.array_char_value(20)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(21) := 'ENC_UPG_DR_LEDGER_AMT';
   l_rec_acct_attrs.array_num_value(21)  := p_source_37;
   l_rec_acct_attrs.array_acct_attr_code(22) := 'ENC_UPG_OPTION';
   l_rec_acct_attrs.array_char_value(22)  := p_source_38;
   l_rec_acct_attrs.array_acct_attr_code(23) := 'ENTERED_CURRENCY_AMOUNT';
   l_rec_acct_attrs.array_num_value(23)  := p_source_65;
   l_rec_acct_attrs.array_acct_attr_code(24) := 'ENTERED_CURRENCY_CODE';
   l_rec_acct_attrs.array_char_value(24)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(25) := 'EXCHANGE_DATE';
   l_rec_acct_attrs.array_date_value(25)  := p_source_39;
   l_rec_acct_attrs.array_acct_attr_code(26) := 'EXCHANGE_RATE';
   l_rec_acct_attrs.array_num_value(26)  := p_source_40;
   l_rec_acct_attrs.array_acct_attr_code(27) := 'EXCHANGE_RATE_TYPE';
   l_rec_acct_attrs.array_char_value(27)  := p_source_41;
   l_rec_acct_attrs.array_acct_attr_code(28) := 'LEDGER_AMOUNT';
   l_rec_acct_attrs.array_num_value(28)  := p_source_66;
   l_rec_acct_attrs.array_acct_attr_code(29) := 'MULTIPERIOD_END_DATE';
   l_rec_acct_attrs.array_date_value(29)  := p_source_43;
   l_rec_acct_attrs.array_acct_attr_code(30) := 'MULTIPERIOD_OPTION';
   l_rec_acct_attrs.array_char_value(30)  := p_source_44;
   l_rec_acct_attrs.array_acct_attr_code(31) := 'MULTIPERIOD_START_DATE';
   l_rec_acct_attrs.array_date_value(31)  := p_source_45;
   l_rec_acct_attrs.array_acct_attr_code(32) := 'OVERRIDE_ACCTD_AMT_FLAG';
   l_rec_acct_attrs.array_char_value(32)  := p_source_46;
   l_rec_acct_attrs.array_acct_attr_code(33) := 'PARTY_ID';
   l_rec_acct_attrs.array_num_value(33)  := p_source_47;
   l_rec_acct_attrs.array_acct_attr_code(34) := 'PARTY_SITE_ID';
   l_rec_acct_attrs.array_num_value(34)  := p_source_48;
   l_rec_acct_attrs.array_acct_attr_code(35) := 'PARTY_TYPE';
   l_rec_acct_attrs.array_char_value(35)  := p_source_49;
   l_rec_acct_attrs.array_acct_attr_code(36) := 'REVERSED_DISTRIBUTION_ID1';
   l_rec_acct_attrs.array_num_value(36)  :=  to_char(p_source_50);
   l_rec_acct_attrs.array_acct_attr_code(37) := 'REVERSED_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(37)  := p_source_21;
   l_rec_acct_attrs.array_acct_attr_code(38) := 'TAX_LINE_REF_ID';
   l_rec_acct_attrs.array_num_value(38)  := p_source_52;
   l_rec_acct_attrs.array_acct_attr_code(39) := 'TAX_REC_NREC_DIST_REF_ID';
   l_rec_acct_attrs.array_num_value(39)  := p_source_53;
   l_rec_acct_attrs.array_acct_attr_code(40) := 'TAX_SUMMARY_LINE_REF_ID';
   l_rec_acct_attrs.array_num_value(40)  := p_source_54;
   l_rec_acct_attrs.array_acct_attr_code(41) := 'UPG_CR_ENC_TYPE_ID';
   l_rec_acct_attrs.array_num_value(41)  := p_source_55;
   l_rec_acct_attrs.array_acct_attr_code(42) := 'UPG_DR_ENC_TYPE_ID';
   l_rec_acct_attrs.array_num_value(42)  := p_source_56;

   XLA_AE_LINES_PKG.SetLineAcctAttrs(l_rec_acct_attrs);
   p_gain_or_loss_ref  := XLA_AE_LINES_PKG.g_rec_lines.array_gain_or_loss_ref(XLA_AE_LINES_PKG.g_LineNumber);

   ---------------------------------------------------------------------------------------------------------------
   -- 4336173 -- assign Business Flow Class (replace code in xla_ae_lines_pkg.Business_Flow_Validation)
   ---------------------------------------------------------------------------------------------------------------
   XLA_AE_LINES_PKG.g_rec_lines.array_business_class_code(XLA_AE_LINES_PKG.g_LineNumber) := l_bflow_class_code;

   l_actual_upg_option  := XLA_AE_LINES_PKG.g_rec_lines.array_actual_upg_option(XLA_AE_LINES_PKG.g_LineNumber);
   l_enc_upg_option     := XLA_AE_LINES_PKG.g_rec_lines.array_enc_upg_option(XLA_AE_LINES_PKG.g_LineNumber);

   IF xla_accounting_cache_pkg.GetValueChar
         (p_source_code         => 'LEDGER_CATEGORY_CODE'
         ,p_target_ledger_id    => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id) IN ('PRIMARY','ALC')
   AND l_bflow_method_code = 'PRIOR_ENTRY'
--   AND (l_actual_upg_option = 'Y' OR l_enc_upg_option = 'Y') Bug 4922099
   AND ( (NVL(l_actual_upg_option, 'N') IN ('Y', 'O')) OR
         (NVL(l_enc_upg_option, 'N') IN ('Y', 'O'))
       )
   THEN
         xla_ae_lines_pkg.BflowUpgEntry
           (p_business_method_code    => l_bflow_method_code
           ,p_business_class_code     => l_bflow_class_code
           ,p_balance_type            => l_balance_type_code);
   ELSE
      NULL;
-- No business flow processing for business flow method of NONE.
   END IF;

   --
   -- call analytical criteria
   --
   
   --
   -- call description
   --
   
xla_ae_lines_pkg.SetLineDescription(
   p_ae_header_id => l_ae_header_id
  ,p_description  => Description_2 (
     p_application_id         => p_application_id
   , p_ae_header_id           => l_ae_header_id 
, p_source_1 => p_source_1
   )
);


   --
   -- call ADRs
   -- Bug 4922099
   --
   IF ( (l_bflow_method_code <> 'PRIOR_ENTRY') OR
        (NVL(l_actual_upg_option, 'N') = 'O') OR
        (NVL(l_enc_upg_option, 'N') = 'O')
      )
   THEN
   NULL;
   --
   --
   
  l_ccid := AcctDerRule_7(
           p_application_id           => p_application_id
         , p_ae_header_id             => l_ae_header_id 
, p_source_11 => p_source_11
         , x_transaction_coa_id       => l_adr_transaction_coa_id
         , x_accounting_coa_id        => l_adr_accounting_coa_id
         , x_value_type_code          => l_adr_value_type_code
         , p_side                     => 'NA'
   );

   xla_ae_lines_pkg.set_ccid(
    p_code_combination_id          => l_ccid
  , p_value_type_code              => l_adr_value_type_code
  , p_transaction_coa_id           => l_adr_transaction_coa_id
  , p_accounting_coa_id            => l_adr_accounting_coa_id
  , p_adr_code                     => 'AP_INVOICE_DIST'
  , p_adr_type_code                => 'S'
  , p_component_type               => l_component_type
  , p_component_code               => l_component_code
  , p_component_type_code          => l_component_type_code
  , p_component_appl_id            => l_component_appl_id
  , p_amb_context_code             => l_amb_context_code
  , p_side                         => 'NA'
  );


   --
   --
   END IF;
   --
   -- Bug 4922099
   IF ( ( (NVL(l_actual_upg_option, 'N') = 'O') OR
          (NVL(l_enc_upg_option, 'N') = 'O')
        ) AND
        (l_bflow_method_code = 'PRIOR_ENTRY')
      )
   THEN
      IF
      --
      1 = 2
      --
      THEN
      xla_accounting_err_pkg.build_message
                                    (p_appli_s_name            => 'XLA'
                                    ,p_msg_name                => 'XLA_UPG_OVERRIDE_ADR_UNDEFINED'
                                    ,p_token_1                 => 'LINE_NUMBER'
                                    ,p_value_1                 => XLA_AE_LINES_PKG.g_LineNumber
                                    ,p_token_2                 => 'LINE_TYPE_NAME'
                                    ,p_value_2                 => XLA_AE_SOURCES_PKG.GetComponentName (
                                                                             l_component_type
                                                                            ,l_component_code
                                                                            ,l_component_type_code
                                                                            ,l_component_appl_id
                                                                            ,l_amb_context_code
                                                                            ,l_entity_code
                                                                            ,l_event_class_code
                                                                           )
                                    ,p_token_3                 => 'OWNER'
                                    ,p_value_3                 => xla_lookups_pkg.get_meaning(
                                                                          p_lookup_type     => 'XLA_OWNER_TYPE'
                                                                          ,p_lookup_code    => l_component_type_code
                                                                         )
                                    ,p_token_4                 => 'PRODUCT_NAME'
                                    ,p_value_4                 => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.application_name
                                    ,p_entity_id               => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.entity_id
                                    ,p_event_id                => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.event_id
                                    ,p_ledger_id               => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id
                                    ,p_ae_header_id            =>  NULL
                                       );

        IF (C_LEVEL_ERROR>= g_log_level) THEN
                 trace
                      (p_msg      => 'ERROR: XLA_UPG_OVERRIDE_ADR_UNDEFINED'
                      ,p_level    => C_LEVEL_ERROR
                      ,p_module   => l_log_module);
        END IF;
      END IF;
   END IF;
   --
   --
   ------------------------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- NOTE: XLA_AE_LINES_PKG.ValidateCurrentLine should NOT be generated if business flow method is
   -- Prior Entry.  Currently, the following code is always generated.
   ------------------------------------------------------------------------------------------------
   XLA_AE_LINES_PKG.ValidateCurrentLine;

   ------------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- Populated credit and debit amounts -- Need to generate this within IF <condition>
   ------------------------------------------------------------------------------------
   XLA_AE_LINES_PKG.SetDebitCreditAmounts;

   ----------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- Update journal entry status -- Need to generate this within IF <condition>
   ----------------------------------------------------------------------------------
   XLA_AE_JOURNAL_ENTRY_PKG.UpdateJournalEntryStatus
         (p_hdr_idx => g_array_event(p_event_id).array_value_num('header_index')
         ,p_balance_type_code => l_balance_type_code
         );

   -------------------------------------------------------------------------------------------
   -- 4262811 - Generate the Accrual Reversal lines
   -------------------------------------------------------------------------------------------
   BEGIN
      l_acc_rev_flag := XLA_AE_HEADER_PKG.g_rec_header_new.array_accrual_reversal_flag
                              (g_array_event(p_event_id).array_value_num('header_index'));
      IF l_acc_rev_flag IS NULL THEN
         l_acc_rev_flag := 'N';
      END IF;
   EXCEPTION
      WHEN OTHERS THEN
         l_acc_rev_flag := 'N';
   END;
   --
   IF (l_acc_rev_flag = 'Y') THEN

       -- 4645092  ------------------------------------------------------------------------------
       -- To allow MPA report to determine if it should generate report process
       XLA_ACCOUNTING_PKG.g_mpa_accrual_exists := 'Y';
       ------------------------------------------------------------------------------------------

       l_accrual_line_num := XLA_AE_LINES_PKG.g_LineNumber;
       XLA_AE_LINES_PKG.CopyLineInfo(l_accrual_line_num);
   -- added call to set_ccid to execute mapping  for secondary accrual reversal entries bug 7444204
   -- call ADRs
   -- Bug 4922099
   --
   IF ( (l_bflow_method_code <> 'PRIOR_ENTRY') OR
        (NVL(l_actual_upg_option, 'N') = 'O') OR
        (NVL(l_enc_upg_option, 'N') = 'O')
      )
   THEN
   NULL;
   --
   --
   
  l_ccid := AcctDerRule_7(
           p_application_id           => p_application_id
         , p_ae_header_id             => l_ae_header_id 
, p_source_11 => p_source_11
         , x_transaction_coa_id       => l_adr_transaction_coa_id
         , x_accounting_coa_id        => l_adr_accounting_coa_id
         , x_value_type_code          => l_adr_value_type_code
         , p_side                     => 'NA'
   );

   xla_ae_lines_pkg.set_ccid(
    p_code_combination_id          => l_ccid
  , p_value_type_code              => l_adr_value_type_code
  , p_transaction_coa_id           => l_adr_transaction_coa_id
  , p_accounting_coa_id            => l_adr_accounting_coa_id
  , p_adr_code                     => 'AP_INVOICE_DIST'
  , p_adr_type_code                => 'S'
  , p_component_type               => l_component_type
  , p_component_code               => l_component_code
  , p_component_type_code          => l_component_type_code
  , p_component_appl_id            => l_component_appl_id
  , p_amb_context_code             => l_amb_context_code
  , p_side                         => 'NA'
  );


   --
   --
   END IF;

       --
       -- Update the line information that should be overwritten
       --
       XLA_AE_LINES_PKG.set_ae_header_id(p_ae_header_id => p_event_id ,
                                         p_header_num   => 1);
       XLA_AE_LINES_PKG.g_rec_lines.array_header_num(XLA_AE_LINES_PKG.g_LineNumber)  :=1;

       XLA_AE_LINES_PKG.g_rec_lines.array_business_class_code(XLA_AE_LINES_PKG.g_LineNumber) := NULL; -- 4669271

       IF l_bflow_method_code <> 'NONE' THEN  -- 4655713b
          XLA_AE_LINES_PKG.g_rec_lines.array_reversal_code(XLA_AE_LINES_PKG.g_LineNumber) := CONCAT('MPA_',l_bflow_method_code);
       END IF;

      --
      -- Depending on the Reversal Method setup, do a switch side or changes sign for the amounts
      --
      IF (XLA_AE_JOURNAL_ENTRY_PKG.g_cache_ledgers_info.ledger_reversal_option = 'SIDE') THEN
          XLA_AE_LINES_PKG.g_rec_lines.array_natural_side_code(XLA_AE_LINES_PKG.g_LineNumber) :=  l_acc_rev_natural_side_code;
      ELSE
          ---------------------------------------------------------------------------------------------------
          -- 4262811a Switch Sign
          ---------------------------------------------------------------------------------------------------
          XLA_AE_LINES_PKG.g_rec_lines.array_switch_side_flag(XLA_AE_LINES_PKG.g_LineNumber) := 'N';  -- 5052518
          XLA_AE_LINES_PKG.g_rec_lines.array_ledger_amount(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_ledger_amount(XLA_AE_LINES_PKG.g_LineNumber) * -1;
          XLA_AE_LINES_PKG.g_rec_lines.array_entered_amount(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_entered_amount(XLA_AE_LINES_PKG.g_LineNumber) * -1;
          -- 5132302
          XLA_AE_LINES_PKG.g_rec_lines.array_bflow_applied_to_amt(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_bflow_applied_to_amt(XLA_AE_LINES_PKG.g_LineNumber) * -1;

      END IF;

      -- 4955764
      XLA_AE_LINES_PKG.g_rec_lines.array_gl_date(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_HEADER_PKG.g_rec_header_new.array_gl_date(g_array_event(p_event_id).array_value_num('acc_rev_header_index'));


      XLA_AE_LINES_PKG.ValidateCurrentLine;
      XLA_AE_LINES_PKG.SetDebitCreditAmounts;

      XLA_AE_JOURNAL_ENTRY_PKG.UpdateJournalEntryStatus
               (p_hdr_idx           => g_array_event(p_event_id).array_value_num('acc_rev_header_index')
               ,p_balance_type_code => l_balance_type_code);

   END IF;

   -----------------------------------------------------------------------------------------
   -- 4262811 Multiperiod Accounting
   -----------------------------------------------------------------------------------------
     -- No MPA option is assigned.


END IF;
END IF;
--

--
IF (C_LEVEL_PROCEDURE >= g_log_level) THEN
   trace
      (p_msg      => 'END of AcctLineType_74'
      ,p_level    => C_LEVEL_PROCEDURE
      ,p_module   => l_log_module);
END IF;
--
EXCEPTION
  WHEN xla_exceptions_pkg.application_exception THEN
      RAISE;
  WHEN OTHERS THEN
       xla_exceptions_pkg.raise_message
           (p_location => 'XLA_00200_AAD_S_000010_BC_PKG.AcctLineType_74');
END AcctLineType_74;
--

---------------------------------------
--
-- PRIVATE FUNCTION
--         AcctLineType_75
--
---------------------------------------
PROCEDURE AcctLineType_75 (
  p_application_id        IN NUMBER
 ,p_event_id              IN NUMBER
 ,p_calculate_acctd_flag  IN VARCHAR2
 ,p_calculate_g_l_flag    IN VARCHAR2
 ,p_actual_flag           IN OUT VARCHAR2
 ,p_balance_type_code     OUT VARCHAR2
 ,p_gain_or_loss_ref      OUT VARCHAR2
 
--Invoice Distribution Description
 , p_source_1            IN VARCHAR2
--Invoice Distribution Account
 , p_source_11            IN NUMBER
--Invoice Distribution Type
 , p_source_15            IN VARCHAR2
 , p_source_15_meaning    IN VARCHAR2
--Purchasing Encumbrance Option
 , p_source_17            IN VARCHAR2
 , p_source_17_meaning    IN VARCHAR2
--Accounting Reversal Indicator
 , p_source_19            IN VARCHAR2
--Distribution Link Type
 , p_source_21            IN VARCHAR2
--Allocation to Main Distribution Identifier
 , p_source_23            IN NUMBER
--Invoice Identifier
 , p_source_24            IN NUMBER
--Business Flow Accounts Payable Application Identifier
 , p_source_25            IN NUMBER
--Business Flow Invoice Distribution Type
 , p_source_26            IN VARCHAR2
--Business Flow Invoice Entity Code
 , p_source_27            IN VARCHAR2
--Business Flow Invoice Distribution Identifier
 , p_source_28            IN NUMBER
--Business Flow Invoice Identifier
 , p_source_29            IN NUMBER
--Invoice Distribution Identifier
 , p_source_30            IN NUMBER
--Payables Encumbrance Upgrade Credit Account
 , p_source_31            IN NUMBER
--Payables Encumbrance Upgrade Credit Amount
 , p_source_32            IN NUMBER
--Invoice Currency Code
 , p_source_33            IN VARCHAR2
--Payables Encumbrance Upgrade Credit Base Amount
 , p_source_34            IN NUMBER
--Payables Encumbrance Upgrade Debit Account
 , p_source_35            IN NUMBER
--Payables Encumbrance Upgrade Debit Amount
 , p_source_36            IN NUMBER
--Payables Encumbrance Upgrade Debit Base Amount
 , p_source_37            IN NUMBER
--Payables Encumbrance Upgrade Option
 , p_source_38            IN VARCHAR2
--Invoice Exchange Date
 , p_source_39            IN DATE
--Invoice Exchange Rate
 , p_source_40            IN NUMBER
--Invoice Exchange Rate Type
 , p_source_41            IN VARCHAR2
--Deferred Accounting End Date
 , p_source_43            IN DATE
--Deferred Accounting Option
 , p_source_44            IN VARCHAR2
--Deferred Accounting Start Date
 , p_source_45            IN DATE
--Override Accounted Amount Indicator
 , p_source_46            IN VARCHAR2
 , p_source_46_meaning    IN VARCHAR2
--Invoice Supplier Identifier
 , p_source_47            IN NUMBER
--Invoice Supplier Site Identifier
 , p_source_48            IN NUMBER
--Third Party Type
 , p_source_49            IN VARCHAR2
--Parent Reversal Identifier
 , p_source_50            IN NUMBER
--Invoice Distribution Statistical Amount
 , p_source_51            IN NUMBER
--Invoice Distribution Tax Line Identifier
 , p_source_52            IN NUMBER
--Invoice Distribution Tax Distribution Identifier from Tax
 , p_source_53            IN NUMBER
--Invoice Distribution Summary Tax Line Identifier
 , p_source_54            IN NUMBER
--Payables Upgrade Credit Encumbrance Type Identifier
 , p_source_55            IN NUMBER
--Payables Upgrade Debit Encumbrance Type Identifier
 , p_source_56            IN NUMBER
--Invoice Distribution Encumbrance Amount
 , p_source_65            IN NUMBER
--Invoice Distribution Encumbrance Ledger Amount
 , p_source_66            IN NUMBER
)
IS

l_component_type              VARCHAR2(80);
l_component_code              VARCHAR2(30);
l_component_type_code         VARCHAR2(1);
l_component_appl_id           INTEGER;
l_amb_context_code            VARCHAR2(30);
l_entity_code                 VARCHAR2(30);
l_event_class_code            VARCHAR2(30);
l_ae_header_id                NUMBER;
l_event_type_code             VARCHAR2(30);
l_line_definition_code        VARCHAR2(30);
l_line_definition_owner_code  VARCHAR2(1);
--
-- adr variables
l_segment                     VARCHAR2(30);
l_ccid                        NUMBER;
l_adr_transaction_coa_id      NUMBER;
l_adr_accounting_coa_id       NUMBER;
l_adr_flexfield_segment_code  VARCHAR2(30);
l_adr_flex_value_set_id       NUMBER;
l_adr_value_type_code         VARCHAR2(30);
l_adr_value_combination_id    NUMBER;
l_adr_value_segment_code      VARCHAR2(30);

l_bflow_method_code           VARCHAR2(30);  -- 4219869 Business Flow
l_bflow_class_code            VARCHAR2(30);  -- 4219869 Business Flow
l_inherit_desc_flag           VARCHAR2(1);   -- 4219869 Business Flow
l_budgetary_control_flag      VARCHAR2(1);   -- 4458381 Public Sector Enh

-- 4262811 Variables ------------------------------------------------------------------------------------------
l_entered_amt_idx             NUMBER;
l_accted_amt_idx              NUMBER;
l_acc_rev_flag                VARCHAR2(1);
l_accrual_line_num            NUMBER;
l_tmp_amt                     NUMBER;
l_acc_rev_natural_side_code   VARCHAR2(1);

l_num_entries                 NUMBER;
l_gl_dates                    xla_ae_journal_entry_pkg.t_array_date;
l_accted_amts                 xla_ae_journal_entry_pkg.t_array_num;
l_entered_amts                xla_ae_journal_entry_pkg.t_array_num;
l_period_names                xla_ae_journal_entry_pkg.t_array_V15L;
l_recog_line_1                NUMBER;
l_recog_line_2                NUMBER;

l_bflow_applied_to_amt_idx    NUMBER;                                -- 5132302
l_bflow_applied_to_amt        NUMBER;                                -- 5132302
l_bflow_applied_to_amts       xla_ae_journal_entry_pkg.t_array_num;  -- 5132302

l_event_id                    NUMBER;  -- To handle MPA header Description: xla_ae_header_pkg.SetHdrDescription

--l_rounding_ccy                VARCHAR2(15); -- To handle MPA rounding  4262811b
l_same_currency               BOOLEAN;        -- To handle MPA rounding  4262811b

---------------------------------------------------------------------------------------------------------------


--
-- bulk performance
--
l_balance_type_code           VARCHAR2(1);
l_rec_acct_attrs              XLA_AE_LINES_PKG.t_rec_acct_attrs;
l_log_module                  VARCHAR2(240);

--
-- Upgrade strategy
--
l_actual_upg_option           VARCHAR2(1);
l_enc_upg_option           VARCHAR2(1);

--
BEGIN
--
IF g_log_enabled THEN
      l_log_module := C_DEFAULT_MODULE||'.AcctLineType_75';
END IF;
--
IF (C_LEVEL_PROCEDURE >= g_log_level) THEN

      trace
         (p_msg      => 'BEGIN of AcctLineType_75'
         ,p_level    => C_LEVEL_PROCEDURE
         ,p_module   => l_log_module);

END IF;
--
l_component_type             := 'AMB_JLT';
l_component_code             := 'AP_TAX_INV_PRICE_VAR_PP_ENC_DR';
l_component_type_code        := 'S';
l_component_appl_id          :=  200;
l_amb_context_code           := 'DEFAULT';
l_entity_code                := 'AP_INVOICES';
l_event_class_code           := 'PREPAYMENTS';
l_event_type_code            := 'PREPAYMENTS_ALL';
l_line_definition_owner_code := 'S';
l_line_definition_code       := 'ENC_PREPAY_ALL';
--
l_balance_type_code          := 'E';
l_segment                     := NULL;
l_ccid                        := NULL;
l_adr_transaction_coa_id      := NULL;
l_adr_accounting_coa_id       := NULL;
l_adr_flexfield_segment_code  := NULL;
l_adr_flex_value_set_id       := NULL;
l_adr_value_type_code         := NULL;
l_adr_value_combination_id    := NULL;
l_adr_value_segment_code      := NULL;

l_bflow_method_code          := 'NONE';   -- 4219869 Business Flow
l_bflow_class_code           := 'AP_INV_ENCUM';    -- 4219869 Business Flow
l_inherit_desc_flag          := 'N';   -- 4219869 Business Flow
l_budgetary_control_flag     := 'Y';

l_bflow_applied_to_amt_idx   := NULL; -- 5132302
l_bflow_applied_to_amt       := NULL; -- 5132302
l_entered_amt_idx            := NULL;          -- 4262811
l_accted_amt_idx             := NULL;          -- 4262811
l_acc_rev_flag               := NULL;          -- 4262811
l_accrual_line_num           := NULL;          -- 4262811
l_tmp_amt                    := NULL;          -- 4262811
--
 
IF XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id = XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.ledger_id OR
    l_balance_type_code <> 'B' THEN
IF NVL(p_source_15,'
') =  'TIPV' AND 
NVL(p_source_17,'
') =  'Y'
 THEN 

   --
   XLA_AE_LINES_PKG.SetNewLine;

   p_balance_type_code          := l_balance_type_code;
   -- set the flag so later we will know whether the gain loss line needs to be created
   
   IF(l_balance_type_code = 'A' and p_actual_flag is null) THEN
     p_actual_flag :='A';
   END IF;

   --
   -- bulk performance
   --
   XLA_AE_LINES_PKG.set_ae_header_id (p_ae_header_id => p_event_id ,
                                      p_header_num   => 0); -- 4262811
   --
   -- set accounting line options
   --
   l_ae_header_id:= xla_ae_lines_pkg.SetAcctLineOption(
           p_natural_side_code          => 'D'
         , p_gain_or_loss_flag          => 'N'
         , p_gl_transfer_mode_code      => 'S'
         , p_acct_entry_type_code       => 'E'
         , p_switch_side_flag           => 'Y'
         , p_merge_duplicate_code       => 'N'
         );
   --
   l_acc_rev_natural_side_code := 'C';  -- 4262811
   -- 
   --
   -- set accounting line type info
   --
   xla_ae_lines_pkg.SetAcctLineType
      (p_component_type             => l_component_type
      ,p_event_type_code            => l_event_type_code
      ,p_line_definition_owner_code => l_line_definition_owner_code
      ,p_line_definition_code       => l_line_definition_code
      ,p_accounting_line_code       => l_component_code
      ,p_accounting_line_type_code  => l_component_type_code
      ,p_accounting_line_appl_id    => l_component_appl_id
      ,p_amb_context_code           => l_amb_context_code
      ,p_entity_code                => l_entity_code
      ,p_event_class_code           => l_event_class_code);
   --
   -- set accounting class
   --
   xla_ae_lines_pkg.SetAcctClass(
           p_accounting_class_code  => 'TIPV'
         , p_ae_header_id           => l_ae_header_id
         );

   --
   -- set rounding class
   --
   XLA_AE_LINES_PKG.g_rec_lines.array_rounding_class(XLA_AE_LINES_PKG.g_LineNumber) :=
                      'TIPV';

   --
   xla_ae_lines_pkg.g_rec_lines.array_calculate_acctd_flag(xla_ae_lines_pkg.g_LineNumber) := p_calculate_acctd_flag;
   xla_ae_lines_pkg.g_rec_lines.array_calculate_g_l_flag(xla_ae_lines_pkg.g_LineNumber) := p_calculate_g_l_flag;
   --
   -- bulk performance
   --
   XLA_AE_LINES_PKG.g_rec_lines.array_balance_type_code(XLA_AE_LINES_PKG.g_LineNumber) := l_balance_type_code;

   XLA_AE_LINES_PKG.g_rec_lines.array_ledger_id(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id;

   -- 4955764
   XLA_AE_LINES_PKG.g_rec_lines.array_gl_date(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_HEADER_PKG.g_rec_header_new.array_gl_date(g_array_event(p_event_id).array_value_num('header_index'));

   -- 4458381 Public Sector Enh
      XLA_AE_LINES_PKG.g_rec_lines.array_encumbrance_type_id(XLA_AE_LINES_PKG.g_LineNumber) := 1060;
   --
   -- set accounting attributes for the line type
   --
   l_entered_amt_idx := 23;
   l_accted_amt_idx  := 28;
   l_bflow_applied_to_amt_idx  := NULL;  -- 5132302
   l_rec_acct_attrs.array_acct_attr_code(1) := 'ACCOUNTING_REVERSAL_OPTION';
   l_rec_acct_attrs.array_char_value(1)  := p_source_19;
   l_rec_acct_attrs.array_acct_attr_code(2) := 'ALLOC_TO_APPLICATION_ID';
   l_rec_acct_attrs.array_num_value(2)  := 
xla_ae_sources_pkg.GetSystemSourceNum(
   p_source_code           => 'XLA_EVENT_APPL_ID'
 , p_source_type_code      => 'Y'
 , p_source_application_id =>  602
);
   l_rec_acct_attrs.array_acct_attr_code(3) := 'ALLOC_TO_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(3)  := p_source_21;
   l_rec_acct_attrs.array_acct_attr_code(4) := 'ALLOC_TO_ENTITY_CODE';
   l_rec_acct_attrs.array_char_value(4)  := 
xla_ae_sources_pkg.GetSystemSourceChar(
   p_source_code           => 'XLA_ENTITY_CODE'
 , p_source_type_code      => 'Y'
 , p_source_application_id =>  602
);
   l_rec_acct_attrs.array_acct_attr_code(5) := 'ALLOC_TO_FIRST_DIST_ID';
   l_rec_acct_attrs.array_num_value(5)  :=  to_char(p_source_23);
   l_rec_acct_attrs.array_acct_attr_code(6) := 'ALLOC_TO_FIRST_SYS_TRAN_ID';
   l_rec_acct_attrs.array_num_value(6)  :=  to_char(p_source_24);
   l_rec_acct_attrs.array_acct_attr_code(7) := 'APPLIED_TO_APPLICATION_ID';
   l_rec_acct_attrs.array_num_value(7)  := p_source_25;
   l_rec_acct_attrs.array_acct_attr_code(8) := 'APPLIED_TO_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(8)  := p_source_26;
   l_rec_acct_attrs.array_acct_attr_code(9) := 'APPLIED_TO_ENTITY_CODE';
   l_rec_acct_attrs.array_char_value(9)  := p_source_27;
   l_rec_acct_attrs.array_acct_attr_code(10) := 'APPLIED_TO_FIRST_DIST_ID';
   l_rec_acct_attrs.array_num_value(10)  :=  to_char(p_source_28);
   l_rec_acct_attrs.array_acct_attr_code(11) := 'APPLIED_TO_FIRST_SYS_TRAN_ID';
   l_rec_acct_attrs.array_num_value(11)  :=  to_char(p_source_29);
   l_rec_acct_attrs.array_acct_attr_code(12) := 'DISTRIBUTION_IDENTIFIER_1';
   l_rec_acct_attrs.array_num_value(12)  :=  to_char(p_source_30);
   l_rec_acct_attrs.array_acct_attr_code(13) := 'DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(13)  := p_source_21;
   l_rec_acct_attrs.array_acct_attr_code(14) := 'ENC_UPG_CR_CCID';
   l_rec_acct_attrs.array_num_value(14)  := p_source_31;
   l_rec_acct_attrs.array_acct_attr_code(15) := 'ENC_UPG_CR_ENTERED_AMT';
   l_rec_acct_attrs.array_num_value(15)  := p_source_32;
   l_rec_acct_attrs.array_acct_attr_code(16) := 'ENC_UPG_CR_ENTERED_CURR';
   l_rec_acct_attrs.array_char_value(16)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(17) := 'ENC_UPG_CR_LEDGER_AMT';
   l_rec_acct_attrs.array_num_value(17)  := p_source_34;
   l_rec_acct_attrs.array_acct_attr_code(18) := 'ENC_UPG_DR_CCID';
   l_rec_acct_attrs.array_num_value(18)  := p_source_35;
   l_rec_acct_attrs.array_acct_attr_code(19) := 'ENC_UPG_DR_ENTERED_AMT';
   l_rec_acct_attrs.array_num_value(19)  := p_source_36;
   l_rec_acct_attrs.array_acct_attr_code(20) := 'ENC_UPG_DR_ENTERED_CURR';
   l_rec_acct_attrs.array_char_value(20)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(21) := 'ENC_UPG_DR_LEDGER_AMT';
   l_rec_acct_attrs.array_num_value(21)  := p_source_37;
   l_rec_acct_attrs.array_acct_attr_code(22) := 'ENC_UPG_OPTION';
   l_rec_acct_attrs.array_char_value(22)  := p_source_38;
   l_rec_acct_attrs.array_acct_attr_code(23) := 'ENTERED_CURRENCY_AMOUNT';
   l_rec_acct_attrs.array_num_value(23)  := p_source_65;
   l_rec_acct_attrs.array_acct_attr_code(24) := 'ENTERED_CURRENCY_CODE';
   l_rec_acct_attrs.array_char_value(24)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(25) := 'EXCHANGE_DATE';
   l_rec_acct_attrs.array_date_value(25)  := p_source_39;
   l_rec_acct_attrs.array_acct_attr_code(26) := 'EXCHANGE_RATE';
   l_rec_acct_attrs.array_num_value(26)  := p_source_40;
   l_rec_acct_attrs.array_acct_attr_code(27) := 'EXCHANGE_RATE_TYPE';
   l_rec_acct_attrs.array_char_value(27)  := p_source_41;
   l_rec_acct_attrs.array_acct_attr_code(28) := 'LEDGER_AMOUNT';
   l_rec_acct_attrs.array_num_value(28)  := p_source_66;
   l_rec_acct_attrs.array_acct_attr_code(29) := 'MULTIPERIOD_END_DATE';
   l_rec_acct_attrs.array_date_value(29)  := p_source_43;
   l_rec_acct_attrs.array_acct_attr_code(30) := 'MULTIPERIOD_OPTION';
   l_rec_acct_attrs.array_char_value(30)  := p_source_44;
   l_rec_acct_attrs.array_acct_attr_code(31) := 'MULTIPERIOD_START_DATE';
   l_rec_acct_attrs.array_date_value(31)  := p_source_45;
   l_rec_acct_attrs.array_acct_attr_code(32) := 'OVERRIDE_ACCTD_AMT_FLAG';
   l_rec_acct_attrs.array_char_value(32)  := p_source_46;
   l_rec_acct_attrs.array_acct_attr_code(33) := 'PARTY_ID';
   l_rec_acct_attrs.array_num_value(33)  := p_source_47;
   l_rec_acct_attrs.array_acct_attr_code(34) := 'PARTY_SITE_ID';
   l_rec_acct_attrs.array_num_value(34)  := p_source_48;
   l_rec_acct_attrs.array_acct_attr_code(35) := 'PARTY_TYPE';
   l_rec_acct_attrs.array_char_value(35)  := p_source_49;
   l_rec_acct_attrs.array_acct_attr_code(36) := 'REVERSED_DISTRIBUTION_ID1';
   l_rec_acct_attrs.array_num_value(36)  :=  to_char(p_source_50);
   l_rec_acct_attrs.array_acct_attr_code(37) := 'REVERSED_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(37)  := p_source_21;
   l_rec_acct_attrs.array_acct_attr_code(38) := 'STATISTICAL_AMOUNT';
   l_rec_acct_attrs.array_num_value(38)  := p_source_51;
   l_rec_acct_attrs.array_acct_attr_code(39) := 'TAX_LINE_REF_ID';
   l_rec_acct_attrs.array_num_value(39)  := p_source_52;
   l_rec_acct_attrs.array_acct_attr_code(40) := 'TAX_REC_NREC_DIST_REF_ID';
   l_rec_acct_attrs.array_num_value(40)  := p_source_53;
   l_rec_acct_attrs.array_acct_attr_code(41) := 'TAX_SUMMARY_LINE_REF_ID';
   l_rec_acct_attrs.array_num_value(41)  := p_source_54;
   l_rec_acct_attrs.array_acct_attr_code(42) := 'UPG_CR_ENC_TYPE_ID';
   l_rec_acct_attrs.array_num_value(42)  := p_source_55;
   l_rec_acct_attrs.array_acct_attr_code(43) := 'UPG_DR_ENC_TYPE_ID';
   l_rec_acct_attrs.array_num_value(43)  := p_source_56;

   XLA_AE_LINES_PKG.SetLineAcctAttrs(l_rec_acct_attrs);
   p_gain_or_loss_ref  := XLA_AE_LINES_PKG.g_rec_lines.array_gain_or_loss_ref(XLA_AE_LINES_PKG.g_LineNumber);

   ---------------------------------------------------------------------------------------------------------------
   -- 4336173 -- assign Business Flow Class (replace code in xla_ae_lines_pkg.Business_Flow_Validation)
   ---------------------------------------------------------------------------------------------------------------
   XLA_AE_LINES_PKG.g_rec_lines.array_business_class_code(XLA_AE_LINES_PKG.g_LineNumber) := l_bflow_class_code;

   l_actual_upg_option  := XLA_AE_LINES_PKG.g_rec_lines.array_actual_upg_option(XLA_AE_LINES_PKG.g_LineNumber);
   l_enc_upg_option     := XLA_AE_LINES_PKG.g_rec_lines.array_enc_upg_option(XLA_AE_LINES_PKG.g_LineNumber);

   IF xla_accounting_cache_pkg.GetValueChar
         (p_source_code         => 'LEDGER_CATEGORY_CODE'
         ,p_target_ledger_id    => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id) IN ('PRIMARY','ALC')
   AND l_bflow_method_code = 'PRIOR_ENTRY'
--   AND (l_actual_upg_option = 'Y' OR l_enc_upg_option = 'Y') Bug 4922099
   AND ( (NVL(l_actual_upg_option, 'N') IN ('Y', 'O')) OR
         (NVL(l_enc_upg_option, 'N') IN ('Y', 'O'))
       )
   THEN
         xla_ae_lines_pkg.BflowUpgEntry
           (p_business_method_code    => l_bflow_method_code
           ,p_business_class_code     => l_bflow_class_code
           ,p_balance_type            => l_balance_type_code);
   ELSE
      NULL;
-- No business flow processing for business flow method of NONE.
   END IF;

   --
   -- call analytical criteria
   --
   
   --
   -- call description
   --
   
xla_ae_lines_pkg.SetLineDescription(
   p_ae_header_id => l_ae_header_id
  ,p_description  => Description_2 (
     p_application_id         => p_application_id
   , p_ae_header_id           => l_ae_header_id 
, p_source_1 => p_source_1
   )
);


   --
   -- call ADRs
   -- Bug 4922099
   --
   IF ( (l_bflow_method_code <> 'PRIOR_ENTRY') OR
        (NVL(l_actual_upg_option, 'N') = 'O') OR
        (NVL(l_enc_upg_option, 'N') = 'O')
      )
   THEN
   NULL;
   --
   --
   
  l_ccid := AcctDerRule_7(
           p_application_id           => p_application_id
         , p_ae_header_id             => l_ae_header_id 
, p_source_11 => p_source_11
         , x_transaction_coa_id       => l_adr_transaction_coa_id
         , x_accounting_coa_id        => l_adr_accounting_coa_id
         , x_value_type_code          => l_adr_value_type_code
         , p_side                     => 'NA'
   );

   xla_ae_lines_pkg.set_ccid(
    p_code_combination_id          => l_ccid
  , p_value_type_code              => l_adr_value_type_code
  , p_transaction_coa_id           => l_adr_transaction_coa_id
  , p_accounting_coa_id            => l_adr_accounting_coa_id
  , p_adr_code                     => 'AP_INVOICE_DIST'
  , p_adr_type_code                => 'S'
  , p_component_type               => l_component_type
  , p_component_code               => l_component_code
  , p_component_type_code          => l_component_type_code
  , p_component_appl_id            => l_component_appl_id
  , p_amb_context_code             => l_amb_context_code
  , p_side                         => 'NA'
  );


   --
   --
   END IF;
   --
   -- Bug 4922099
   IF ( ( (NVL(l_actual_upg_option, 'N') = 'O') OR
          (NVL(l_enc_upg_option, 'N') = 'O')
        ) AND
        (l_bflow_method_code = 'PRIOR_ENTRY')
      )
   THEN
      IF
      --
      1 = 2
      --
      THEN
      xla_accounting_err_pkg.build_message
                                    (p_appli_s_name            => 'XLA'
                                    ,p_msg_name                => 'XLA_UPG_OVERRIDE_ADR_UNDEFINED'
                                    ,p_token_1                 => 'LINE_NUMBER'
                                    ,p_value_1                 => XLA_AE_LINES_PKG.g_LineNumber
                                    ,p_token_2                 => 'LINE_TYPE_NAME'
                                    ,p_value_2                 => XLA_AE_SOURCES_PKG.GetComponentName (
                                                                             l_component_type
                                                                            ,l_component_code
                                                                            ,l_component_type_code
                                                                            ,l_component_appl_id
                                                                            ,l_amb_context_code
                                                                            ,l_entity_code
                                                                            ,l_event_class_code
                                                                           )
                                    ,p_token_3                 => 'OWNER'
                                    ,p_value_3                 => xla_lookups_pkg.get_meaning(
                                                                          p_lookup_type     => 'XLA_OWNER_TYPE'
                                                                          ,p_lookup_code    => l_component_type_code
                                                                         )
                                    ,p_token_4                 => 'PRODUCT_NAME'
                                    ,p_value_4                 => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.application_name
                                    ,p_entity_id               => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.entity_id
                                    ,p_event_id                => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.event_id
                                    ,p_ledger_id               => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id
                                    ,p_ae_header_id            =>  NULL
                                       );

        IF (C_LEVEL_ERROR>= g_log_level) THEN
                 trace
                      (p_msg      => 'ERROR: XLA_UPG_OVERRIDE_ADR_UNDEFINED'
                      ,p_level    => C_LEVEL_ERROR
                      ,p_module   => l_log_module);
        END IF;
      END IF;
   END IF;
   --
   --
   ------------------------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- NOTE: XLA_AE_LINES_PKG.ValidateCurrentLine should NOT be generated if business flow method is
   -- Prior Entry.  Currently, the following code is always generated.
   ------------------------------------------------------------------------------------------------
   XLA_AE_LINES_PKG.ValidateCurrentLine;

   ------------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- Populated credit and debit amounts -- Need to generate this within IF <condition>
   ------------------------------------------------------------------------------------
   XLA_AE_LINES_PKG.SetDebitCreditAmounts;

   ----------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- Update journal entry status -- Need to generate this within IF <condition>
   ----------------------------------------------------------------------------------
   XLA_AE_JOURNAL_ENTRY_PKG.UpdateJournalEntryStatus
         (p_hdr_idx => g_array_event(p_event_id).array_value_num('header_index')
         ,p_balance_type_code => l_balance_type_code
         );

   -------------------------------------------------------------------------------------------
   -- 4262811 - Generate the Accrual Reversal lines
   -------------------------------------------------------------------------------------------
   BEGIN
      l_acc_rev_flag := XLA_AE_HEADER_PKG.g_rec_header_new.array_accrual_reversal_flag
                              (g_array_event(p_event_id).array_value_num('header_index'));
      IF l_acc_rev_flag IS NULL THEN
         l_acc_rev_flag := 'N';
      END IF;
   EXCEPTION
      WHEN OTHERS THEN
         l_acc_rev_flag := 'N';
   END;
   --
   IF (l_acc_rev_flag = 'Y') THEN

       -- 4645092  ------------------------------------------------------------------------------
       -- To allow MPA report to determine if it should generate report process
       XLA_ACCOUNTING_PKG.g_mpa_accrual_exists := 'Y';
       ------------------------------------------------------------------------------------------

       l_accrual_line_num := XLA_AE_LINES_PKG.g_LineNumber;
       XLA_AE_LINES_PKG.CopyLineInfo(l_accrual_line_num);
   -- added call to set_ccid to execute mapping  for secondary accrual reversal entries bug 7444204
   -- call ADRs
   -- Bug 4922099
   --
   IF ( (l_bflow_method_code <> 'PRIOR_ENTRY') OR
        (NVL(l_actual_upg_option, 'N') = 'O') OR
        (NVL(l_enc_upg_option, 'N') = 'O')
      )
   THEN
   NULL;
   --
   --
   
  l_ccid := AcctDerRule_7(
           p_application_id           => p_application_id
         , p_ae_header_id             => l_ae_header_id 
, p_source_11 => p_source_11
         , x_transaction_coa_id       => l_adr_transaction_coa_id
         , x_accounting_coa_id        => l_adr_accounting_coa_id
         , x_value_type_code          => l_adr_value_type_code
         , p_side                     => 'NA'
   );

   xla_ae_lines_pkg.set_ccid(
    p_code_combination_id          => l_ccid
  , p_value_type_code              => l_adr_value_type_code
  , p_transaction_coa_id           => l_adr_transaction_coa_id
  , p_accounting_coa_id            => l_adr_accounting_coa_id
  , p_adr_code                     => 'AP_INVOICE_DIST'
  , p_adr_type_code                => 'S'
  , p_component_type               => l_component_type
  , p_component_code               => l_component_code
  , p_component_type_code          => l_component_type_code
  , p_component_appl_id            => l_component_appl_id
  , p_amb_context_code             => l_amb_context_code
  , p_side                         => 'NA'
  );


   --
   --
   END IF;

       --
       -- Update the line information that should be overwritten
       --
       XLA_AE_LINES_PKG.set_ae_header_id(p_ae_header_id => p_event_id ,
                                         p_header_num   => 1);
       XLA_AE_LINES_PKG.g_rec_lines.array_header_num(XLA_AE_LINES_PKG.g_LineNumber)  :=1;

       XLA_AE_LINES_PKG.g_rec_lines.array_business_class_code(XLA_AE_LINES_PKG.g_LineNumber) := NULL; -- 4669271

       IF l_bflow_method_code <> 'NONE' THEN  -- 4655713b
          XLA_AE_LINES_PKG.g_rec_lines.array_reversal_code(XLA_AE_LINES_PKG.g_LineNumber) := CONCAT('MPA_',l_bflow_method_code);
       END IF;

      --
      -- Depending on the Reversal Method setup, do a switch side or changes sign for the amounts
      --
      IF (XLA_AE_JOURNAL_ENTRY_PKG.g_cache_ledgers_info.ledger_reversal_option = 'SIDE') THEN
          XLA_AE_LINES_PKG.g_rec_lines.array_natural_side_code(XLA_AE_LINES_PKG.g_LineNumber) :=  l_acc_rev_natural_side_code;
      ELSE
          ---------------------------------------------------------------------------------------------------
          -- 4262811a Switch Sign
          ---------------------------------------------------------------------------------------------------
          XLA_AE_LINES_PKG.g_rec_lines.array_switch_side_flag(XLA_AE_LINES_PKG.g_LineNumber) := 'N';  -- 5052518
          XLA_AE_LINES_PKG.g_rec_lines.array_ledger_amount(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_ledger_amount(XLA_AE_LINES_PKG.g_LineNumber) * -1;
          XLA_AE_LINES_PKG.g_rec_lines.array_entered_amount(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_entered_amount(XLA_AE_LINES_PKG.g_LineNumber) * -1;
          -- 5132302
          XLA_AE_LINES_PKG.g_rec_lines.array_bflow_applied_to_amt(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_bflow_applied_to_amt(XLA_AE_LINES_PKG.g_LineNumber) * -1;

      END IF;

      -- 4955764
      XLA_AE_LINES_PKG.g_rec_lines.array_gl_date(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_HEADER_PKG.g_rec_header_new.array_gl_date(g_array_event(p_event_id).array_value_num('acc_rev_header_index'));


      XLA_AE_LINES_PKG.ValidateCurrentLine;
      XLA_AE_LINES_PKG.SetDebitCreditAmounts;

      XLA_AE_JOURNAL_ENTRY_PKG.UpdateJournalEntryStatus
               (p_hdr_idx           => g_array_event(p_event_id).array_value_num('acc_rev_header_index')
               ,p_balance_type_code => l_balance_type_code);

   END IF;

   -----------------------------------------------------------------------------------------
   -- 4262811 Multiperiod Accounting
   -----------------------------------------------------------------------------------------
     -- No MPA option is assigned.


END IF;
END IF;
--

--
IF (C_LEVEL_PROCEDURE >= g_log_level) THEN
   trace
      (p_msg      => 'END of AcctLineType_75'
      ,p_level    => C_LEVEL_PROCEDURE
      ,p_module   => l_log_module);
END IF;
--
EXCEPTION
  WHEN xla_exceptions_pkg.application_exception THEN
      RAISE;
  WHEN OTHERS THEN
       xla_exceptions_pkg.raise_message
           (p_location => 'XLA_00200_AAD_S_000010_BC_PKG.AcctLineType_75');
END AcctLineType_75;
--

---------------------------------------
--
-- PRIVATE FUNCTION
--         AcctLineType_76
--
---------------------------------------
PROCEDURE AcctLineType_76 (
  p_application_id        IN NUMBER
 ,p_event_id              IN NUMBER
 ,p_calculate_acctd_flag  IN VARCHAR2
 ,p_calculate_g_l_flag    IN VARCHAR2
 ,p_actual_flag           IN OUT VARCHAR2
 ,p_balance_type_code     OUT VARCHAR2
 ,p_gain_or_loss_ref      OUT VARCHAR2
 
--Invoice Distribution Description
 , p_source_1            IN VARCHAR2
--Invoice Distribution Account
 , p_source_11            IN NUMBER
--Invoice Distribution Type
 , p_source_15            IN VARCHAR2
 , p_source_15_meaning    IN VARCHAR2
--Purchasing Encumbrance Option
 , p_source_17            IN VARCHAR2
 , p_source_17_meaning    IN VARCHAR2
--Accounting Reversal Indicator
 , p_source_19            IN VARCHAR2
--Distribution Link Type
 , p_source_21            IN VARCHAR2
--Allocation to Main Distribution Identifier
 , p_source_23            IN NUMBER
--Invoice Identifier
 , p_source_24            IN NUMBER
--Business Flow Accounts Payable Application Identifier
 , p_source_25            IN NUMBER
--Business Flow Invoice Distribution Type
 , p_source_26            IN VARCHAR2
--Business Flow Invoice Entity Code
 , p_source_27            IN VARCHAR2
--Business Flow Invoice Distribution Identifier
 , p_source_28            IN NUMBER
--Business Flow Invoice Identifier
 , p_source_29            IN NUMBER
--Invoice Distribution Identifier
 , p_source_30            IN NUMBER
--Payables Encumbrance Upgrade Credit Account
 , p_source_31            IN NUMBER
--Payables Encumbrance Upgrade Credit Amount
 , p_source_32            IN NUMBER
--Invoice Currency Code
 , p_source_33            IN VARCHAR2
--Payables Encumbrance Upgrade Credit Base Amount
 , p_source_34            IN NUMBER
--Payables Encumbrance Upgrade Debit Account
 , p_source_35            IN NUMBER
--Payables Encumbrance Upgrade Debit Amount
 , p_source_36            IN NUMBER
--Payables Encumbrance Upgrade Debit Base Amount
 , p_source_37            IN NUMBER
--Payables Encumbrance Upgrade Option
 , p_source_38            IN VARCHAR2
--Invoice Exchange Date
 , p_source_39            IN DATE
--Invoice Exchange Rate
 , p_source_40            IN NUMBER
--Invoice Exchange Rate Type
 , p_source_41            IN VARCHAR2
--Deferred Accounting End Date
 , p_source_43            IN DATE
--Deferred Accounting Option
 , p_source_44            IN VARCHAR2
--Deferred Accounting Start Date
 , p_source_45            IN DATE
--Override Accounted Amount Indicator
 , p_source_46            IN VARCHAR2
 , p_source_46_meaning    IN VARCHAR2
--Invoice Supplier Identifier
 , p_source_47            IN NUMBER
--Invoice Supplier Site Identifier
 , p_source_48            IN NUMBER
--Third Party Type
 , p_source_49            IN VARCHAR2
--Parent Reversal Identifier
 , p_source_50            IN NUMBER
--Invoice Distribution Statistical Amount
 , p_source_51            IN NUMBER
--Invoice Distribution Tax Line Identifier
 , p_source_52            IN NUMBER
--Invoice Distribution Tax Distribution Identifier from Tax
 , p_source_53            IN NUMBER
--Invoice Distribution Summary Tax Line Identifier
 , p_source_54            IN NUMBER
--Payables Upgrade Credit Encumbrance Type Identifier
 , p_source_55            IN NUMBER
--Payables Upgrade Debit Encumbrance Type Identifier
 , p_source_56            IN NUMBER
--Invoice Distribution Amount
 , p_source_57            IN NUMBER
--Invoice Distribution Encumbrance Amount
 , p_source_65            IN NUMBER
--Invoice Distribution Encumbrance Ledger Amount
 , p_source_66            IN NUMBER
)
IS

l_component_type              VARCHAR2(80);
l_component_code              VARCHAR2(30);
l_component_type_code         VARCHAR2(1);
l_component_appl_id           INTEGER;
l_amb_context_code            VARCHAR2(30);
l_entity_code                 VARCHAR2(30);
l_event_class_code            VARCHAR2(30);
l_ae_header_id                NUMBER;
l_event_type_code             VARCHAR2(30);
l_line_definition_code        VARCHAR2(30);
l_line_definition_owner_code  VARCHAR2(1);
--
-- adr variables
l_segment                     VARCHAR2(30);
l_ccid                        NUMBER;
l_adr_transaction_coa_id      NUMBER;
l_adr_accounting_coa_id       NUMBER;
l_adr_flexfield_segment_code  VARCHAR2(30);
l_adr_flex_value_set_id       NUMBER;
l_adr_value_type_code         VARCHAR2(30);
l_adr_value_combination_id    NUMBER;
l_adr_value_segment_code      VARCHAR2(30);

l_bflow_method_code           VARCHAR2(30);  -- 4219869 Business Flow
l_bflow_class_code            VARCHAR2(30);  -- 4219869 Business Flow
l_inherit_desc_flag           VARCHAR2(1);   -- 4219869 Business Flow
l_budgetary_control_flag      VARCHAR2(1);   -- 4458381 Public Sector Enh

-- 4262811 Variables ------------------------------------------------------------------------------------------
l_entered_amt_idx             NUMBER;
l_accted_amt_idx              NUMBER;
l_acc_rev_flag                VARCHAR2(1);
l_accrual_line_num            NUMBER;
l_tmp_amt                     NUMBER;
l_acc_rev_natural_side_code   VARCHAR2(1);

l_num_entries                 NUMBER;
l_gl_dates                    xla_ae_journal_entry_pkg.t_array_date;
l_accted_amts                 xla_ae_journal_entry_pkg.t_array_num;
l_entered_amts                xla_ae_journal_entry_pkg.t_array_num;
l_period_names                xla_ae_journal_entry_pkg.t_array_V15L;
l_recog_line_1                NUMBER;
l_recog_line_2                NUMBER;

l_bflow_applied_to_amt_idx    NUMBER;                                -- 5132302
l_bflow_applied_to_amt        NUMBER;                                -- 5132302
l_bflow_applied_to_amts       xla_ae_journal_entry_pkg.t_array_num;  -- 5132302

l_event_id                    NUMBER;  -- To handle MPA header Description: xla_ae_header_pkg.SetHdrDescription

--l_rounding_ccy                VARCHAR2(15); -- To handle MPA rounding  4262811b
l_same_currency               BOOLEAN;        -- To handle MPA rounding  4262811b

---------------------------------------------------------------------------------------------------------------


--
-- bulk performance
--
l_balance_type_code           VARCHAR2(1);
l_rec_acct_attrs              XLA_AE_LINES_PKG.t_rec_acct_attrs;
l_log_module                  VARCHAR2(240);

--
-- Upgrade strategy
--
l_actual_upg_option           VARCHAR2(1);
l_enc_upg_option           VARCHAR2(1);

--
BEGIN
--
IF g_log_enabled THEN
      l_log_module := C_DEFAULT_MODULE||'.AcctLineType_76';
END IF;
--
IF (C_LEVEL_PROCEDURE >= g_log_level) THEN

      trace
         (p_msg      => 'BEGIN of AcctLineType_76'
         ,p_level    => C_LEVEL_PROCEDURE
         ,p_module   => l_log_module);

END IF;
--
l_component_type             := 'AMB_JLT';
l_component_code             := 'AP_TAX_INV_PR_VAR_INV_ENC_DR';
l_component_type_code        := 'S';
l_component_appl_id          :=  200;
l_amb_context_code           := 'DEFAULT';
l_entity_code                := 'AP_INVOICES';
l_event_class_code           := 'INVOICES';
l_event_type_code            := 'INVOICES_ALL';
l_line_definition_owner_code := 'S';
l_line_definition_code       := 'ENC_INVOICES_ALL';
--
l_balance_type_code          := 'E';
l_segment                     := NULL;
l_ccid                        := NULL;
l_adr_transaction_coa_id      := NULL;
l_adr_accounting_coa_id       := NULL;
l_adr_flexfield_segment_code  := NULL;
l_adr_flex_value_set_id       := NULL;
l_adr_value_type_code         := NULL;
l_adr_value_combination_id    := NULL;
l_adr_value_segment_code      := NULL;

l_bflow_method_code          := 'NONE';   -- 4219869 Business Flow
l_bflow_class_code           := 'AP_INV_ENCUM';    -- 4219869 Business Flow
l_inherit_desc_flag          := 'N';   -- 4219869 Business Flow
l_budgetary_control_flag     := 'Y';

l_bflow_applied_to_amt_idx   := NULL; -- 5132302
l_bflow_applied_to_amt       := NULL; -- 5132302
l_entered_amt_idx            := NULL;          -- 4262811
l_accted_amt_idx             := NULL;          -- 4262811
l_acc_rev_flag               := NULL;          -- 4262811
l_accrual_line_num           := NULL;          -- 4262811
l_tmp_amt                    := NULL;          -- 4262811
--
 
IF XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id = XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.ledger_id OR
    l_balance_type_code <> 'B' THEN
IF NVL(p_source_15,'
') =  'TIPV' AND 
NVL(p_source_17,'
') =  'Y'
 THEN 

   --
   XLA_AE_LINES_PKG.SetNewLine;

   p_balance_type_code          := l_balance_type_code;
   -- set the flag so later we will know whether the gain loss line needs to be created
   
   IF(l_balance_type_code = 'A' and p_actual_flag is null) THEN
     p_actual_flag :='A';
   END IF;

   --
   -- bulk performance
   --
   XLA_AE_LINES_PKG.set_ae_header_id (p_ae_header_id => p_event_id ,
                                      p_header_num   => 0); -- 4262811
   --
   -- set accounting line options
   --
   l_ae_header_id:= xla_ae_lines_pkg.SetAcctLineOption(
           p_natural_side_code          => 'D'
         , p_gain_or_loss_flag          => 'N'
         , p_gl_transfer_mode_code      => 'S'
         , p_acct_entry_type_code       => 'E'
         , p_switch_side_flag           => 'Y'
         , p_merge_duplicate_code       => 'N'
         );
   --
   l_acc_rev_natural_side_code := 'C';  -- 4262811
   -- 
   --
   -- set accounting line type info
   --
   xla_ae_lines_pkg.SetAcctLineType
      (p_component_type             => l_component_type
      ,p_event_type_code            => l_event_type_code
      ,p_line_definition_owner_code => l_line_definition_owner_code
      ,p_line_definition_code       => l_line_definition_code
      ,p_accounting_line_code       => l_component_code
      ,p_accounting_line_type_code  => l_component_type_code
      ,p_accounting_line_appl_id    => l_component_appl_id
      ,p_amb_context_code           => l_amb_context_code
      ,p_entity_code                => l_entity_code
      ,p_event_class_code           => l_event_class_code);
   --
   -- set accounting class
   --
   xla_ae_lines_pkg.SetAcctClass(
           p_accounting_class_code  => 'TIPV'
         , p_ae_header_id           => l_ae_header_id
         );

   --
   -- set rounding class
   --
   XLA_AE_LINES_PKG.g_rec_lines.array_rounding_class(XLA_AE_LINES_PKG.g_LineNumber) :=
                      'TIPV';

   --
   xla_ae_lines_pkg.g_rec_lines.array_calculate_acctd_flag(xla_ae_lines_pkg.g_LineNumber) := p_calculate_acctd_flag;
   xla_ae_lines_pkg.g_rec_lines.array_calculate_g_l_flag(xla_ae_lines_pkg.g_LineNumber) := p_calculate_g_l_flag;
   --
   -- bulk performance
   --
   XLA_AE_LINES_PKG.g_rec_lines.array_balance_type_code(XLA_AE_LINES_PKG.g_LineNumber) := l_balance_type_code;

   XLA_AE_LINES_PKG.g_rec_lines.array_ledger_id(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id;

   -- 4955764
   XLA_AE_LINES_PKG.g_rec_lines.array_gl_date(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_HEADER_PKG.g_rec_header_new.array_gl_date(g_array_event(p_event_id).array_value_num('header_index'));

   -- 4458381 Public Sector Enh
      XLA_AE_LINES_PKG.g_rec_lines.array_encumbrance_type_id(XLA_AE_LINES_PKG.g_LineNumber) := 1060;
   --
   -- set accounting attributes for the line type
   --
   l_entered_amt_idx := 24;
   l_accted_amt_idx  := 29;
   l_bflow_applied_to_amt_idx  := 7;  -- 5132302
   l_rec_acct_attrs.array_acct_attr_code(1) := 'ACCOUNTING_REVERSAL_OPTION';
   l_rec_acct_attrs.array_char_value(1)  := p_source_19;
   l_rec_acct_attrs.array_acct_attr_code(2) := 'ALLOC_TO_APPLICATION_ID';
   l_rec_acct_attrs.array_num_value(2)  := 
xla_ae_sources_pkg.GetSystemSourceNum(
   p_source_code           => 'XLA_EVENT_APPL_ID'
 , p_source_type_code      => 'Y'
 , p_source_application_id =>  602
);
   l_rec_acct_attrs.array_acct_attr_code(3) := 'ALLOC_TO_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(3)  := p_source_21;
   l_rec_acct_attrs.array_acct_attr_code(4) := 'ALLOC_TO_ENTITY_CODE';
   l_rec_acct_attrs.array_char_value(4)  := 
xla_ae_sources_pkg.GetSystemSourceChar(
   p_source_code           => 'XLA_ENTITY_CODE'
 , p_source_type_code      => 'Y'
 , p_source_application_id =>  602
);
   l_rec_acct_attrs.array_acct_attr_code(5) := 'ALLOC_TO_FIRST_DIST_ID';
   l_rec_acct_attrs.array_num_value(5)  :=  to_char(p_source_23);
   l_rec_acct_attrs.array_acct_attr_code(6) := 'ALLOC_TO_FIRST_SYS_TRAN_ID';
   l_rec_acct_attrs.array_num_value(6)  :=  to_char(p_source_24);
   l_rec_acct_attrs.array_acct_attr_code(7) := 'APPLIED_TO_AMOUNT';
   l_rec_acct_attrs.array_num_value(7)  := p_source_57;
   l_rec_acct_attrs.array_acct_attr_code(8) := 'APPLIED_TO_APPLICATION_ID';
   l_rec_acct_attrs.array_num_value(8)  := p_source_25;
   l_rec_acct_attrs.array_acct_attr_code(9) := 'APPLIED_TO_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(9)  := p_source_26;
   l_rec_acct_attrs.array_acct_attr_code(10) := 'APPLIED_TO_ENTITY_CODE';
   l_rec_acct_attrs.array_char_value(10)  := p_source_27;
   l_rec_acct_attrs.array_acct_attr_code(11) := 'APPLIED_TO_FIRST_DIST_ID';
   l_rec_acct_attrs.array_num_value(11)  :=  to_char(p_source_28);
   l_rec_acct_attrs.array_acct_attr_code(12) := 'APPLIED_TO_FIRST_SYS_TRAN_ID';
   l_rec_acct_attrs.array_num_value(12)  :=  to_char(p_source_29);
   l_rec_acct_attrs.array_acct_attr_code(13) := 'DISTRIBUTION_IDENTIFIER_1';
   l_rec_acct_attrs.array_num_value(13)  :=  to_char(p_source_30);
   l_rec_acct_attrs.array_acct_attr_code(14) := 'DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(14)  := p_source_21;
   l_rec_acct_attrs.array_acct_attr_code(15) := 'ENC_UPG_CR_CCID';
   l_rec_acct_attrs.array_num_value(15)  := p_source_31;
   l_rec_acct_attrs.array_acct_attr_code(16) := 'ENC_UPG_CR_ENTERED_AMT';
   l_rec_acct_attrs.array_num_value(16)  := p_source_32;
   l_rec_acct_attrs.array_acct_attr_code(17) := 'ENC_UPG_CR_ENTERED_CURR';
   l_rec_acct_attrs.array_char_value(17)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(18) := 'ENC_UPG_CR_LEDGER_AMT';
   l_rec_acct_attrs.array_num_value(18)  := p_source_34;
   l_rec_acct_attrs.array_acct_attr_code(19) := 'ENC_UPG_DR_CCID';
   l_rec_acct_attrs.array_num_value(19)  := p_source_35;
   l_rec_acct_attrs.array_acct_attr_code(20) := 'ENC_UPG_DR_ENTERED_AMT';
   l_rec_acct_attrs.array_num_value(20)  := p_source_36;
   l_rec_acct_attrs.array_acct_attr_code(21) := 'ENC_UPG_DR_ENTERED_CURR';
   l_rec_acct_attrs.array_char_value(21)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(22) := 'ENC_UPG_DR_LEDGER_AMT';
   l_rec_acct_attrs.array_num_value(22)  := p_source_37;
   l_rec_acct_attrs.array_acct_attr_code(23) := 'ENC_UPG_OPTION';
   l_rec_acct_attrs.array_char_value(23)  := p_source_38;
   l_rec_acct_attrs.array_acct_attr_code(24) := 'ENTERED_CURRENCY_AMOUNT';
   l_rec_acct_attrs.array_num_value(24)  := p_source_65;
   l_rec_acct_attrs.array_acct_attr_code(25) := 'ENTERED_CURRENCY_CODE';
   l_rec_acct_attrs.array_char_value(25)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(26) := 'EXCHANGE_DATE';
   l_rec_acct_attrs.array_date_value(26)  := p_source_39;
   l_rec_acct_attrs.array_acct_attr_code(27) := 'EXCHANGE_RATE';
   l_rec_acct_attrs.array_num_value(27)  := p_source_40;
   l_rec_acct_attrs.array_acct_attr_code(28) := 'EXCHANGE_RATE_TYPE';
   l_rec_acct_attrs.array_char_value(28)  := p_source_41;
   l_rec_acct_attrs.array_acct_attr_code(29) := 'LEDGER_AMOUNT';
   l_rec_acct_attrs.array_num_value(29)  := p_source_66;
   l_rec_acct_attrs.array_acct_attr_code(30) := 'MULTIPERIOD_END_DATE';
   l_rec_acct_attrs.array_date_value(30)  := p_source_43;
   l_rec_acct_attrs.array_acct_attr_code(31) := 'MULTIPERIOD_OPTION';
   l_rec_acct_attrs.array_char_value(31)  := p_source_44;
   l_rec_acct_attrs.array_acct_attr_code(32) := 'MULTIPERIOD_START_DATE';
   l_rec_acct_attrs.array_date_value(32)  := p_source_45;
   l_rec_acct_attrs.array_acct_attr_code(33) := 'OVERRIDE_ACCTD_AMT_FLAG';
   l_rec_acct_attrs.array_char_value(33)  := p_source_46;
   l_rec_acct_attrs.array_acct_attr_code(34) := 'PARTY_ID';
   l_rec_acct_attrs.array_num_value(34)  := p_source_47;
   l_rec_acct_attrs.array_acct_attr_code(35) := 'PARTY_SITE_ID';
   l_rec_acct_attrs.array_num_value(35)  := p_source_48;
   l_rec_acct_attrs.array_acct_attr_code(36) := 'PARTY_TYPE';
   l_rec_acct_attrs.array_char_value(36)  := p_source_49;
   l_rec_acct_attrs.array_acct_attr_code(37) := 'REVERSED_DISTRIBUTION_ID1';
   l_rec_acct_attrs.array_num_value(37)  :=  to_char(p_source_50);
   l_rec_acct_attrs.array_acct_attr_code(38) := 'REVERSED_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(38)  := p_source_21;
   l_rec_acct_attrs.array_acct_attr_code(39) := 'STATISTICAL_AMOUNT';
   l_rec_acct_attrs.array_num_value(39)  := p_source_51;
   l_rec_acct_attrs.array_acct_attr_code(40) := 'TAX_LINE_REF_ID';
   l_rec_acct_attrs.array_num_value(40)  := p_source_52;
   l_rec_acct_attrs.array_acct_attr_code(41) := 'TAX_REC_NREC_DIST_REF_ID';
   l_rec_acct_attrs.array_num_value(41)  := p_source_53;
   l_rec_acct_attrs.array_acct_attr_code(42) := 'TAX_SUMMARY_LINE_REF_ID';
   l_rec_acct_attrs.array_num_value(42)  := p_source_54;
   l_rec_acct_attrs.array_acct_attr_code(43) := 'UPG_CR_ENC_TYPE_ID';
   l_rec_acct_attrs.array_num_value(43)  := p_source_55;
   l_rec_acct_attrs.array_acct_attr_code(44) := 'UPG_DR_ENC_TYPE_ID';
   l_rec_acct_attrs.array_num_value(44)  := p_source_56;

   XLA_AE_LINES_PKG.SetLineAcctAttrs(l_rec_acct_attrs);
   p_gain_or_loss_ref  := XLA_AE_LINES_PKG.g_rec_lines.array_gain_or_loss_ref(XLA_AE_LINES_PKG.g_LineNumber);

   ---------------------------------------------------------------------------------------------------------------
   -- 4336173 -- assign Business Flow Class (replace code in xla_ae_lines_pkg.Business_Flow_Validation)
   ---------------------------------------------------------------------------------------------------------------
   XLA_AE_LINES_PKG.g_rec_lines.array_business_class_code(XLA_AE_LINES_PKG.g_LineNumber) := l_bflow_class_code;

   l_actual_upg_option  := XLA_AE_LINES_PKG.g_rec_lines.array_actual_upg_option(XLA_AE_LINES_PKG.g_LineNumber);
   l_enc_upg_option     := XLA_AE_LINES_PKG.g_rec_lines.array_enc_upg_option(XLA_AE_LINES_PKG.g_LineNumber);

   IF xla_accounting_cache_pkg.GetValueChar
         (p_source_code         => 'LEDGER_CATEGORY_CODE'
         ,p_target_ledger_id    => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id) IN ('PRIMARY','ALC')
   AND l_bflow_method_code = 'PRIOR_ENTRY'
--   AND (l_actual_upg_option = 'Y' OR l_enc_upg_option = 'Y') Bug 4922099
   AND ( (NVL(l_actual_upg_option, 'N') IN ('Y', 'O')) OR
         (NVL(l_enc_upg_option, 'N') IN ('Y', 'O'))
       )
   THEN
         xla_ae_lines_pkg.BflowUpgEntry
           (p_business_method_code    => l_bflow_method_code
           ,p_business_class_code     => l_bflow_class_code
           ,p_balance_type            => l_balance_type_code);
   ELSE
      NULL;
-- No business flow processing for business flow method of NONE.
   END IF;

   --
   -- call analytical criteria
   --
   
   --
   -- call description
   --
   
xla_ae_lines_pkg.SetLineDescription(
   p_ae_header_id => l_ae_header_id
  ,p_description  => Description_2 (
     p_application_id         => p_application_id
   , p_ae_header_id           => l_ae_header_id 
, p_source_1 => p_source_1
   )
);


   --
   -- call ADRs
   -- Bug 4922099
   --
   IF ( (l_bflow_method_code <> 'PRIOR_ENTRY') OR
        (NVL(l_actual_upg_option, 'N') = 'O') OR
        (NVL(l_enc_upg_option, 'N') = 'O')
      )
   THEN
   NULL;
   --
   --
   
  l_ccid := AcctDerRule_7(
           p_application_id           => p_application_id
         , p_ae_header_id             => l_ae_header_id 
, p_source_11 => p_source_11
         , x_transaction_coa_id       => l_adr_transaction_coa_id
         , x_accounting_coa_id        => l_adr_accounting_coa_id
         , x_value_type_code          => l_adr_value_type_code
         , p_side                     => 'NA'
   );

   xla_ae_lines_pkg.set_ccid(
    p_code_combination_id          => l_ccid
  , p_value_type_code              => l_adr_value_type_code
  , p_transaction_coa_id           => l_adr_transaction_coa_id
  , p_accounting_coa_id            => l_adr_accounting_coa_id
  , p_adr_code                     => 'AP_INVOICE_DIST'
  , p_adr_type_code                => 'S'
  , p_component_type               => l_component_type
  , p_component_code               => l_component_code
  , p_component_type_code          => l_component_type_code
  , p_component_appl_id            => l_component_appl_id
  , p_amb_context_code             => l_amb_context_code
  , p_side                         => 'NA'
  );


   --
   --
   END IF;
   --
   -- Bug 4922099
   IF ( ( (NVL(l_actual_upg_option, 'N') = 'O') OR
          (NVL(l_enc_upg_option, 'N') = 'O')
        ) AND
        (l_bflow_method_code = 'PRIOR_ENTRY')
      )
   THEN
      IF
      --
      1 = 2
      --
      THEN
      xla_accounting_err_pkg.build_message
                                    (p_appli_s_name            => 'XLA'
                                    ,p_msg_name                => 'XLA_UPG_OVERRIDE_ADR_UNDEFINED'
                                    ,p_token_1                 => 'LINE_NUMBER'
                                    ,p_value_1                 => XLA_AE_LINES_PKG.g_LineNumber
                                    ,p_token_2                 => 'LINE_TYPE_NAME'
                                    ,p_value_2                 => XLA_AE_SOURCES_PKG.GetComponentName (
                                                                             l_component_type
                                                                            ,l_component_code
                                                                            ,l_component_type_code
                                                                            ,l_component_appl_id
                                                                            ,l_amb_context_code
                                                                            ,l_entity_code
                                                                            ,l_event_class_code
                                                                           )
                                    ,p_token_3                 => 'OWNER'
                                    ,p_value_3                 => xla_lookups_pkg.get_meaning(
                                                                          p_lookup_type     => 'XLA_OWNER_TYPE'
                                                                          ,p_lookup_code    => l_component_type_code
                                                                         )
                                    ,p_token_4                 => 'PRODUCT_NAME'
                                    ,p_value_4                 => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.application_name
                                    ,p_entity_id               => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.entity_id
                                    ,p_event_id                => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.event_id
                                    ,p_ledger_id               => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id
                                    ,p_ae_header_id            =>  NULL
                                       );

        IF (C_LEVEL_ERROR>= g_log_level) THEN
                 trace
                      (p_msg      => 'ERROR: XLA_UPG_OVERRIDE_ADR_UNDEFINED'
                      ,p_level    => C_LEVEL_ERROR
                      ,p_module   => l_log_module);
        END IF;
      END IF;
   END IF;
   --
   --
   ------------------------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- NOTE: XLA_AE_LINES_PKG.ValidateCurrentLine should NOT be generated if business flow method is
   -- Prior Entry.  Currently, the following code is always generated.
   ------------------------------------------------------------------------------------------------
   XLA_AE_LINES_PKG.ValidateCurrentLine;

   ------------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- Populated credit and debit amounts -- Need to generate this within IF <condition>
   ------------------------------------------------------------------------------------
   XLA_AE_LINES_PKG.SetDebitCreditAmounts;

   ----------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- Update journal entry status -- Need to generate this within IF <condition>
   ----------------------------------------------------------------------------------
   XLA_AE_JOURNAL_ENTRY_PKG.UpdateJournalEntryStatus
         (p_hdr_idx => g_array_event(p_event_id).array_value_num('header_index')
         ,p_balance_type_code => l_balance_type_code
         );

   -------------------------------------------------------------------------------------------
   -- 4262811 - Generate the Accrual Reversal lines
   -------------------------------------------------------------------------------------------
   BEGIN
      l_acc_rev_flag := XLA_AE_HEADER_PKG.g_rec_header_new.array_accrual_reversal_flag
                              (g_array_event(p_event_id).array_value_num('header_index'));
      IF l_acc_rev_flag IS NULL THEN
         l_acc_rev_flag := 'N';
      END IF;
   EXCEPTION
      WHEN OTHERS THEN
         l_acc_rev_flag := 'N';
   END;
   --
   IF (l_acc_rev_flag = 'Y') THEN

       -- 4645092  ------------------------------------------------------------------------------
       -- To allow MPA report to determine if it should generate report process
       XLA_ACCOUNTING_PKG.g_mpa_accrual_exists := 'Y';
       ------------------------------------------------------------------------------------------

       l_accrual_line_num := XLA_AE_LINES_PKG.g_LineNumber;
       XLA_AE_LINES_PKG.CopyLineInfo(l_accrual_line_num);
   -- added call to set_ccid to execute mapping  for secondary accrual reversal entries bug 7444204
   -- call ADRs
   -- Bug 4922099
   --
   IF ( (l_bflow_method_code <> 'PRIOR_ENTRY') OR
        (NVL(l_actual_upg_option, 'N') = 'O') OR
        (NVL(l_enc_upg_option, 'N') = 'O')
      )
   THEN
   NULL;
   --
   --
   
  l_ccid := AcctDerRule_7(
           p_application_id           => p_application_id
         , p_ae_header_id             => l_ae_header_id 
, p_source_11 => p_source_11
         , x_transaction_coa_id       => l_adr_transaction_coa_id
         , x_accounting_coa_id        => l_adr_accounting_coa_id
         , x_value_type_code          => l_adr_value_type_code
         , p_side                     => 'NA'
   );

   xla_ae_lines_pkg.set_ccid(
    p_code_combination_id          => l_ccid
  , p_value_type_code              => l_adr_value_type_code
  , p_transaction_coa_id           => l_adr_transaction_coa_id
  , p_accounting_coa_id            => l_adr_accounting_coa_id
  , p_adr_code                     => 'AP_INVOICE_DIST'
  , p_adr_type_code                => 'S'
  , p_component_type               => l_component_type
  , p_component_code               => l_component_code
  , p_component_type_code          => l_component_type_code
  , p_component_appl_id            => l_component_appl_id
  , p_amb_context_code             => l_amb_context_code
  , p_side                         => 'NA'
  );


   --
   --
   END IF;

       --
       -- Update the line information that should be overwritten
       --
       XLA_AE_LINES_PKG.set_ae_header_id(p_ae_header_id => p_event_id ,
                                         p_header_num   => 1);
       XLA_AE_LINES_PKG.g_rec_lines.array_header_num(XLA_AE_LINES_PKG.g_LineNumber)  :=1;

       XLA_AE_LINES_PKG.g_rec_lines.array_business_class_code(XLA_AE_LINES_PKG.g_LineNumber) := NULL; -- 4669271

       IF l_bflow_method_code <> 'NONE' THEN  -- 4655713b
          XLA_AE_LINES_PKG.g_rec_lines.array_reversal_code(XLA_AE_LINES_PKG.g_LineNumber) := CONCAT('MPA_',l_bflow_method_code);
       END IF;

      --
      -- Depending on the Reversal Method setup, do a switch side or changes sign for the amounts
      --
      IF (XLA_AE_JOURNAL_ENTRY_PKG.g_cache_ledgers_info.ledger_reversal_option = 'SIDE') THEN
          XLA_AE_LINES_PKG.g_rec_lines.array_natural_side_code(XLA_AE_LINES_PKG.g_LineNumber) :=  l_acc_rev_natural_side_code;
      ELSE
          ---------------------------------------------------------------------------------------------------
          -- 4262811a Switch Sign
          ---------------------------------------------------------------------------------------------------
          XLA_AE_LINES_PKG.g_rec_lines.array_switch_side_flag(XLA_AE_LINES_PKG.g_LineNumber) := 'N';  -- 5052518
          XLA_AE_LINES_PKG.g_rec_lines.array_ledger_amount(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_ledger_amount(XLA_AE_LINES_PKG.g_LineNumber) * -1;
          XLA_AE_LINES_PKG.g_rec_lines.array_entered_amount(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_entered_amount(XLA_AE_LINES_PKG.g_LineNumber) * -1;
          -- 5132302
          XLA_AE_LINES_PKG.g_rec_lines.array_bflow_applied_to_amt(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_bflow_applied_to_amt(XLA_AE_LINES_PKG.g_LineNumber) * -1;

      END IF;

      -- 4955764
      XLA_AE_LINES_PKG.g_rec_lines.array_gl_date(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_HEADER_PKG.g_rec_header_new.array_gl_date(g_array_event(p_event_id).array_value_num('acc_rev_header_index'));


      XLA_AE_LINES_PKG.ValidateCurrentLine;
      XLA_AE_LINES_PKG.SetDebitCreditAmounts;

      XLA_AE_JOURNAL_ENTRY_PKG.UpdateJournalEntryStatus
               (p_hdr_idx           => g_array_event(p_event_id).array_value_num('acc_rev_header_index')
               ,p_balance_type_code => l_balance_type_code);

   END IF;

   -----------------------------------------------------------------------------------------
   -- 4262811 Multiperiod Accounting
   -----------------------------------------------------------------------------------------
     -- No MPA option is assigned.


END IF;
END IF;
--

--
IF (C_LEVEL_PROCEDURE >= g_log_level) THEN
   trace
      (p_msg      => 'END of AcctLineType_76'
      ,p_level    => C_LEVEL_PROCEDURE
      ,p_module   => l_log_module);
END IF;
--
EXCEPTION
  WHEN xla_exceptions_pkg.application_exception THEN
      RAISE;
  WHEN OTHERS THEN
       xla_exceptions_pkg.raise_message
           (p_location => 'XLA_00200_AAD_S_000010_BC_PKG.AcctLineType_76');
END AcctLineType_76;
--

---------------------------------------
--
-- PRIVATE FUNCTION
--         AcctLineType_77
--
---------------------------------------
PROCEDURE AcctLineType_77 (
  p_application_id        IN NUMBER
 ,p_event_id              IN NUMBER
 ,p_calculate_acctd_flag  IN VARCHAR2
 ,p_calculate_g_l_flag    IN VARCHAR2
 ,p_actual_flag           IN OUT VARCHAR2
 ,p_balance_type_code     OUT VARCHAR2
 ,p_gain_or_loss_ref      OUT VARCHAR2
 
--Invoice Distribution Description
 , p_source_1            IN VARCHAR2
--Invoice Distribution Account
 , p_source_11            IN NUMBER
--Invoice Distribution Type
 , p_source_15            IN VARCHAR2
 , p_source_15_meaning    IN VARCHAR2
--Amount for Variance Amount
 , p_source_16            IN NUMBER
--Purchasing Encumbrance Option
 , p_source_17            IN VARCHAR2
 , p_source_17_meaning    IN VARCHAR2
--Accrue on Receipt Option
 , p_source_18            IN VARCHAR2
 , p_source_18_meaning    IN VARCHAR2
--Accounting Reversal Indicator
 , p_source_19            IN VARCHAR2
--Distribution Link Type
 , p_source_21            IN VARCHAR2
--Allocation to Main Distribution Identifier
 , p_source_23            IN NUMBER
--Invoice Identifier
 , p_source_24            IN NUMBER
--Business Flow Accounts Payable Application Identifier
 , p_source_25            IN NUMBER
--Business Flow Invoice Distribution Type
 , p_source_26            IN VARCHAR2
--Business Flow Invoice Entity Code
 , p_source_27            IN VARCHAR2
--Business Flow Invoice Distribution Identifier
 , p_source_28            IN NUMBER
--Business Flow Invoice Identifier
 , p_source_29            IN NUMBER
--Invoice Distribution Identifier
 , p_source_30            IN NUMBER
--Payables Encumbrance Upgrade Credit Account
 , p_source_31            IN NUMBER
--Payables Encumbrance Upgrade Credit Amount
 , p_source_32            IN NUMBER
--Invoice Currency Code
 , p_source_33            IN VARCHAR2
--Payables Encumbrance Upgrade Credit Base Amount
 , p_source_34            IN NUMBER
--Payables Encumbrance Upgrade Debit Account
 , p_source_35            IN NUMBER
--Payables Encumbrance Upgrade Debit Amount
 , p_source_36            IN NUMBER
--Payables Encumbrance Upgrade Debit Base Amount
 , p_source_37            IN NUMBER
--Payables Encumbrance Upgrade Option
 , p_source_38            IN VARCHAR2
--Invoice Exchange Date
 , p_source_39            IN DATE
--Invoice Exchange Rate
 , p_source_40            IN NUMBER
--Invoice Exchange Rate Type
 , p_source_41            IN VARCHAR2
--Deferred Accounting End Date
 , p_source_43            IN DATE
--Deferred Accounting Option
 , p_source_44            IN VARCHAR2
--Deferred Accounting Start Date
 , p_source_45            IN DATE
--Override Accounted Amount Indicator
 , p_source_46            IN VARCHAR2
 , p_source_46_meaning    IN VARCHAR2
--Invoice Supplier Identifier
 , p_source_47            IN NUMBER
--Invoice Supplier Site Identifier
 , p_source_48            IN NUMBER
--Third Party Type
 , p_source_49            IN VARCHAR2
--Parent Reversal Identifier
 , p_source_50            IN NUMBER
--Invoice Distribution Statistical Amount
 , p_source_51            IN NUMBER
--Invoice Distribution Tax Line Identifier
 , p_source_52            IN NUMBER
--Invoice Distribution Tax Distribution Identifier from Tax
 , p_source_53            IN NUMBER
--Invoice Distribution Summary Tax Line Identifier
 , p_source_54            IN NUMBER
--Payables Upgrade Credit Encumbrance Type Identifier
 , p_source_55            IN NUMBER
--Payables Upgrade Debit Encumbrance Type Identifier
 , p_source_56            IN NUMBER
--Quantity Variance Amount
 , p_source_81            IN NUMBER
--Quantity Variance Amount in Ledger Currency
 , p_source_82            IN NUMBER
)
IS

l_component_type              VARCHAR2(80);
l_component_code              VARCHAR2(30);
l_component_type_code         VARCHAR2(1);
l_component_appl_id           INTEGER;
l_amb_context_code            VARCHAR2(30);
l_entity_code                 VARCHAR2(30);
l_event_class_code            VARCHAR2(30);
l_ae_header_id                NUMBER;
l_event_type_code             VARCHAR2(30);
l_line_definition_code        VARCHAR2(30);
l_line_definition_owner_code  VARCHAR2(1);
--
-- adr variables
l_segment                     VARCHAR2(30);
l_ccid                        NUMBER;
l_adr_transaction_coa_id      NUMBER;
l_adr_accounting_coa_id       NUMBER;
l_adr_flexfield_segment_code  VARCHAR2(30);
l_adr_flex_value_set_id       NUMBER;
l_adr_value_type_code         VARCHAR2(30);
l_adr_value_combination_id    NUMBER;
l_adr_value_segment_code      VARCHAR2(30);

l_bflow_method_code           VARCHAR2(30);  -- 4219869 Business Flow
l_bflow_class_code            VARCHAR2(30);  -- 4219869 Business Flow
l_inherit_desc_flag           VARCHAR2(1);   -- 4219869 Business Flow
l_budgetary_control_flag      VARCHAR2(1);   -- 4458381 Public Sector Enh

-- 4262811 Variables ------------------------------------------------------------------------------------------
l_entered_amt_idx             NUMBER;
l_accted_amt_idx              NUMBER;
l_acc_rev_flag                VARCHAR2(1);
l_accrual_line_num            NUMBER;
l_tmp_amt                     NUMBER;
l_acc_rev_natural_side_code   VARCHAR2(1);

l_num_entries                 NUMBER;
l_gl_dates                    xla_ae_journal_entry_pkg.t_array_date;
l_accted_amts                 xla_ae_journal_entry_pkg.t_array_num;
l_entered_amts                xla_ae_journal_entry_pkg.t_array_num;
l_period_names                xla_ae_journal_entry_pkg.t_array_V15L;
l_recog_line_1                NUMBER;
l_recog_line_2                NUMBER;

l_bflow_applied_to_amt_idx    NUMBER;                                -- 5132302
l_bflow_applied_to_amt        NUMBER;                                -- 5132302
l_bflow_applied_to_amts       xla_ae_journal_entry_pkg.t_array_num;  -- 5132302

l_event_id                    NUMBER;  -- To handle MPA header Description: xla_ae_header_pkg.SetHdrDescription

--l_rounding_ccy                VARCHAR2(15); -- To handle MPA rounding  4262811b
l_same_currency               BOOLEAN;        -- To handle MPA rounding  4262811b

---------------------------------------------------------------------------------------------------------------


--
-- bulk performance
--
l_balance_type_code           VARCHAR2(1);
l_rec_acct_attrs              XLA_AE_LINES_PKG.t_rec_acct_attrs;
l_log_module                  VARCHAR2(240);

--
-- Upgrade strategy
--
l_actual_upg_option           VARCHAR2(1);
l_enc_upg_option           VARCHAR2(1);

--
BEGIN
--
IF g_log_enabled THEN
      l_log_module := C_DEFAULT_MODULE||'.AcctLineType_77';
END IF;
--
IF (C_LEVEL_PROCEDURE >= g_log_level) THEN

      trace
         (p_msg      => 'BEGIN of AcctLineType_77'
         ,p_level    => C_LEVEL_PROCEDURE
         ,p_module   => l_log_module);

END IF;
--
l_component_type             := 'AMB_JLT';
l_component_code             := 'AP_TAX_QTY_VARIANCE_CM_ENC_DR';
l_component_type_code        := 'S';
l_component_appl_id          :=  200;
l_amb_context_code           := 'DEFAULT';
l_entity_code                := 'AP_INVOICES';
l_event_class_code           := 'CREDIT MEMOS';
l_event_type_code            := 'CREDIT MEMOS_ALL';
l_line_definition_owner_code := 'S';
l_line_definition_code       := 'ENC_CM_ALL';
--
l_balance_type_code          := 'E';
l_segment                     := NULL;
l_ccid                        := NULL;
l_adr_transaction_coa_id      := NULL;
l_adr_accounting_coa_id       := NULL;
l_adr_flexfield_segment_code  := NULL;
l_adr_flex_value_set_id       := NULL;
l_adr_value_type_code         := NULL;
l_adr_value_combination_id    := NULL;
l_adr_value_segment_code      := NULL;

l_bflow_method_code          := 'NONE';   -- 4219869 Business Flow
l_bflow_class_code           := 'AP_INV_ENCUM';    -- 4219869 Business Flow
l_inherit_desc_flag          := 'N';   -- 4219869 Business Flow
l_budgetary_control_flag     := 'Y';

l_bflow_applied_to_amt_idx   := NULL; -- 5132302
l_bflow_applied_to_amt       := NULL; -- 5132302
l_entered_amt_idx            := NULL;          -- 4262811
l_accted_amt_idx             := NULL;          -- 4262811
l_acc_rev_flag               := NULL;          -- 4262811
l_accrual_line_num           := NULL;          -- 4262811
l_tmp_amt                    := NULL;          -- 4262811
--
 
IF XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id = XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.ledger_id OR
    l_balance_type_code <> 'B' THEN
IF NVL(p_source_15,'
') =  'NONREC_TAX' AND 
p_source_16 IS NOT NULL AND 
NVL(p_source_17,'
') =  'Y' AND 
NVL(p_source_18,'
') <>  'Y'
 THEN 

   --
   XLA_AE_LINES_PKG.SetNewLine;

   p_balance_type_code          := l_balance_type_code;
   -- set the flag so later we will know whether the gain loss line needs to be created
   
   IF(l_balance_type_code = 'A' and p_actual_flag is null) THEN
     p_actual_flag :='A';
   END IF;

   --
   -- bulk performance
   --
   XLA_AE_LINES_PKG.set_ae_header_id (p_ae_header_id => p_event_id ,
                                      p_header_num   => 0); -- 4262811
   --
   -- set accounting line options
   --
   l_ae_header_id:= xla_ae_lines_pkg.SetAcctLineOption(
           p_natural_side_code          => 'D'
         , p_gain_or_loss_flag          => 'N'
         , p_gl_transfer_mode_code      => 'S'
         , p_acct_entry_type_code       => 'E'
         , p_switch_side_flag           => 'Y'
         , p_merge_duplicate_code       => 'N'
         );
   --
   l_acc_rev_natural_side_code := 'C';  -- 4262811
   -- 
   --
   -- set accounting line type info
   --
   xla_ae_lines_pkg.SetAcctLineType
      (p_component_type             => l_component_type
      ,p_event_type_code            => l_event_type_code
      ,p_line_definition_owner_code => l_line_definition_owner_code
      ,p_line_definition_code       => l_line_definition_code
      ,p_accounting_line_code       => l_component_code
      ,p_accounting_line_type_code  => l_component_type_code
      ,p_accounting_line_appl_id    => l_component_appl_id
      ,p_amb_context_code           => l_amb_context_code
      ,p_entity_code                => l_entity_code
      ,p_event_class_code           => l_event_class_code);
   --
   -- set accounting class
   --
   xla_ae_lines_pkg.SetAcctClass(
           p_accounting_class_code  => 'TQV'
         , p_ae_header_id           => l_ae_header_id
         );

   --
   -- set rounding class
   --
   XLA_AE_LINES_PKG.g_rec_lines.array_rounding_class(XLA_AE_LINES_PKG.g_LineNumber) :=
                      'TQV';

   --
   xla_ae_lines_pkg.g_rec_lines.array_calculate_acctd_flag(xla_ae_lines_pkg.g_LineNumber) := p_calculate_acctd_flag;
   xla_ae_lines_pkg.g_rec_lines.array_calculate_g_l_flag(xla_ae_lines_pkg.g_LineNumber) := p_calculate_g_l_flag;
   --
   -- bulk performance
   --
   XLA_AE_LINES_PKG.g_rec_lines.array_balance_type_code(XLA_AE_LINES_PKG.g_LineNumber) := l_balance_type_code;

   XLA_AE_LINES_PKG.g_rec_lines.array_ledger_id(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id;

   -- 4955764
   XLA_AE_LINES_PKG.g_rec_lines.array_gl_date(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_HEADER_PKG.g_rec_header_new.array_gl_date(g_array_event(p_event_id).array_value_num('header_index'));

   -- 4458381 Public Sector Enh
      XLA_AE_LINES_PKG.g_rec_lines.array_encumbrance_type_id(XLA_AE_LINES_PKG.g_LineNumber) := 1060;
   --
   -- set accounting attributes for the line type
   --
   l_entered_amt_idx := 23;
   l_accted_amt_idx  := 28;
   l_bflow_applied_to_amt_idx  := NULL;  -- 5132302
   l_rec_acct_attrs.array_acct_attr_code(1) := 'ACCOUNTING_REVERSAL_OPTION';
   l_rec_acct_attrs.array_char_value(1)  := p_source_19;
   l_rec_acct_attrs.array_acct_attr_code(2) := 'ALLOC_TO_APPLICATION_ID';
   l_rec_acct_attrs.array_num_value(2)  := 
xla_ae_sources_pkg.GetSystemSourceNum(
   p_source_code           => 'XLA_EVENT_APPL_ID'
 , p_source_type_code      => 'Y'
 , p_source_application_id =>  602
);
   l_rec_acct_attrs.array_acct_attr_code(3) := 'ALLOC_TO_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(3)  := p_source_21;
   l_rec_acct_attrs.array_acct_attr_code(4) := 'ALLOC_TO_ENTITY_CODE';
   l_rec_acct_attrs.array_char_value(4)  := 
xla_ae_sources_pkg.GetSystemSourceChar(
   p_source_code           => 'XLA_ENTITY_CODE'
 , p_source_type_code      => 'Y'
 , p_source_application_id =>  602
);
   l_rec_acct_attrs.array_acct_attr_code(5) := 'ALLOC_TO_FIRST_DIST_ID';
   l_rec_acct_attrs.array_num_value(5)  :=  to_char(p_source_23);
   l_rec_acct_attrs.array_acct_attr_code(6) := 'ALLOC_TO_FIRST_SYS_TRAN_ID';
   l_rec_acct_attrs.array_num_value(6)  :=  to_char(p_source_24);
   l_rec_acct_attrs.array_acct_attr_code(7) := 'APPLIED_TO_APPLICATION_ID';
   l_rec_acct_attrs.array_num_value(7)  := p_source_25;
   l_rec_acct_attrs.array_acct_attr_code(8) := 'APPLIED_TO_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(8)  := p_source_26;
   l_rec_acct_attrs.array_acct_attr_code(9) := 'APPLIED_TO_ENTITY_CODE';
   l_rec_acct_attrs.array_char_value(9)  := p_source_27;
   l_rec_acct_attrs.array_acct_attr_code(10) := 'APPLIED_TO_FIRST_DIST_ID';
   l_rec_acct_attrs.array_num_value(10)  :=  to_char(p_source_28);
   l_rec_acct_attrs.array_acct_attr_code(11) := 'APPLIED_TO_FIRST_SYS_TRAN_ID';
   l_rec_acct_attrs.array_num_value(11)  :=  to_char(p_source_29);
   l_rec_acct_attrs.array_acct_attr_code(12) := 'DISTRIBUTION_IDENTIFIER_1';
   l_rec_acct_attrs.array_num_value(12)  :=  to_char(p_source_30);
   l_rec_acct_attrs.array_acct_attr_code(13) := 'DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(13)  := p_source_21;
   l_rec_acct_attrs.array_acct_attr_code(14) := 'ENC_UPG_CR_CCID';
   l_rec_acct_attrs.array_num_value(14)  := p_source_31;
   l_rec_acct_attrs.array_acct_attr_code(15) := 'ENC_UPG_CR_ENTERED_AMT';
   l_rec_acct_attrs.array_num_value(15)  := p_source_32;
   l_rec_acct_attrs.array_acct_attr_code(16) := 'ENC_UPG_CR_ENTERED_CURR';
   l_rec_acct_attrs.array_char_value(16)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(17) := 'ENC_UPG_CR_LEDGER_AMT';
   l_rec_acct_attrs.array_num_value(17)  := p_source_34;
   l_rec_acct_attrs.array_acct_attr_code(18) := 'ENC_UPG_DR_CCID';
   l_rec_acct_attrs.array_num_value(18)  := p_source_35;
   l_rec_acct_attrs.array_acct_attr_code(19) := 'ENC_UPG_DR_ENTERED_AMT';
   l_rec_acct_attrs.array_num_value(19)  := p_source_36;
   l_rec_acct_attrs.array_acct_attr_code(20) := 'ENC_UPG_DR_ENTERED_CURR';
   l_rec_acct_attrs.array_char_value(20)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(21) := 'ENC_UPG_DR_LEDGER_AMT';
   l_rec_acct_attrs.array_num_value(21)  := p_source_37;
   l_rec_acct_attrs.array_acct_attr_code(22) := 'ENC_UPG_OPTION';
   l_rec_acct_attrs.array_char_value(22)  := p_source_38;
   l_rec_acct_attrs.array_acct_attr_code(23) := 'ENTERED_CURRENCY_AMOUNT';
   l_rec_acct_attrs.array_num_value(23)  := p_source_81;
   l_rec_acct_attrs.array_acct_attr_code(24) := 'ENTERED_CURRENCY_CODE';
   l_rec_acct_attrs.array_char_value(24)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(25) := 'EXCHANGE_DATE';
   l_rec_acct_attrs.array_date_value(25)  := p_source_39;
   l_rec_acct_attrs.array_acct_attr_code(26) := 'EXCHANGE_RATE';
   l_rec_acct_attrs.array_num_value(26)  := p_source_40;
   l_rec_acct_attrs.array_acct_attr_code(27) := 'EXCHANGE_RATE_TYPE';
   l_rec_acct_attrs.array_char_value(27)  := p_source_41;
   l_rec_acct_attrs.array_acct_attr_code(28) := 'LEDGER_AMOUNT';
   l_rec_acct_attrs.array_num_value(28)  := p_source_82;
   l_rec_acct_attrs.array_acct_attr_code(29) := 'MULTIPERIOD_END_DATE';
   l_rec_acct_attrs.array_date_value(29)  := p_source_43;
   l_rec_acct_attrs.array_acct_attr_code(30) := 'MULTIPERIOD_OPTION';
   l_rec_acct_attrs.array_char_value(30)  := p_source_44;
   l_rec_acct_attrs.array_acct_attr_code(31) := 'MULTIPERIOD_START_DATE';
   l_rec_acct_attrs.array_date_value(31)  := p_source_45;
   l_rec_acct_attrs.array_acct_attr_code(32) := 'OVERRIDE_ACCTD_AMT_FLAG';
   l_rec_acct_attrs.array_char_value(32)  := p_source_46;
   l_rec_acct_attrs.array_acct_attr_code(33) := 'PARTY_ID';
   l_rec_acct_attrs.array_num_value(33)  := p_source_47;
   l_rec_acct_attrs.array_acct_attr_code(34) := 'PARTY_SITE_ID';
   l_rec_acct_attrs.array_num_value(34)  := p_source_48;
   l_rec_acct_attrs.array_acct_attr_code(35) := 'PARTY_TYPE';
   l_rec_acct_attrs.array_char_value(35)  := p_source_49;
   l_rec_acct_attrs.array_acct_attr_code(36) := 'REVERSED_DISTRIBUTION_ID1';
   l_rec_acct_attrs.array_num_value(36)  :=  to_char(p_source_50);
   l_rec_acct_attrs.array_acct_attr_code(37) := 'REVERSED_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(37)  := p_source_21;
   l_rec_acct_attrs.array_acct_attr_code(38) := 'STATISTICAL_AMOUNT';
   l_rec_acct_attrs.array_num_value(38)  := p_source_51;
   l_rec_acct_attrs.array_acct_attr_code(39) := 'TAX_LINE_REF_ID';
   l_rec_acct_attrs.array_num_value(39)  := p_source_52;
   l_rec_acct_attrs.array_acct_attr_code(40) := 'TAX_REC_NREC_DIST_REF_ID';
   l_rec_acct_attrs.array_num_value(40)  := p_source_53;
   l_rec_acct_attrs.array_acct_attr_code(41) := 'TAX_SUMMARY_LINE_REF_ID';
   l_rec_acct_attrs.array_num_value(41)  := p_source_54;
   l_rec_acct_attrs.array_acct_attr_code(42) := 'UPG_CR_ENC_TYPE_ID';
   l_rec_acct_attrs.array_num_value(42)  := p_source_55;
   l_rec_acct_attrs.array_acct_attr_code(43) := 'UPG_DR_ENC_TYPE_ID';
   l_rec_acct_attrs.array_num_value(43)  := p_source_56;

   XLA_AE_LINES_PKG.SetLineAcctAttrs(l_rec_acct_attrs);
   p_gain_or_loss_ref  := XLA_AE_LINES_PKG.g_rec_lines.array_gain_or_loss_ref(XLA_AE_LINES_PKG.g_LineNumber);

   ---------------------------------------------------------------------------------------------------------------
   -- 4336173 -- assign Business Flow Class (replace code in xla_ae_lines_pkg.Business_Flow_Validation)
   ---------------------------------------------------------------------------------------------------------------
   XLA_AE_LINES_PKG.g_rec_lines.array_business_class_code(XLA_AE_LINES_PKG.g_LineNumber) := l_bflow_class_code;

   l_actual_upg_option  := XLA_AE_LINES_PKG.g_rec_lines.array_actual_upg_option(XLA_AE_LINES_PKG.g_LineNumber);
   l_enc_upg_option     := XLA_AE_LINES_PKG.g_rec_lines.array_enc_upg_option(XLA_AE_LINES_PKG.g_LineNumber);

   IF xla_accounting_cache_pkg.GetValueChar
         (p_source_code         => 'LEDGER_CATEGORY_CODE'
         ,p_target_ledger_id    => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id) IN ('PRIMARY','ALC')
   AND l_bflow_method_code = 'PRIOR_ENTRY'
--   AND (l_actual_upg_option = 'Y' OR l_enc_upg_option = 'Y') Bug 4922099
   AND ( (NVL(l_actual_upg_option, 'N') IN ('Y', 'O')) OR
         (NVL(l_enc_upg_option, 'N') IN ('Y', 'O'))
       )
   THEN
         xla_ae_lines_pkg.BflowUpgEntry
           (p_business_method_code    => l_bflow_method_code
           ,p_business_class_code     => l_bflow_class_code
           ,p_balance_type            => l_balance_type_code);
   ELSE
      NULL;
-- No business flow processing for business flow method of NONE.
   END IF;

   --
   -- call analytical criteria
   --
   
   --
   -- call description
   --
   
xla_ae_lines_pkg.SetLineDescription(
   p_ae_header_id => l_ae_header_id
  ,p_description  => Description_2 (
     p_application_id         => p_application_id
   , p_ae_header_id           => l_ae_header_id 
, p_source_1 => p_source_1
   )
);


   --
   -- call ADRs
   -- Bug 4922099
   --
   IF ( (l_bflow_method_code <> 'PRIOR_ENTRY') OR
        (NVL(l_actual_upg_option, 'N') = 'O') OR
        (NVL(l_enc_upg_option, 'N') = 'O')
      )
   THEN
   NULL;
   --
   --
   
  l_ccid := AcctDerRule_7(
           p_application_id           => p_application_id
         , p_ae_header_id             => l_ae_header_id 
, p_source_11 => p_source_11
         , x_transaction_coa_id       => l_adr_transaction_coa_id
         , x_accounting_coa_id        => l_adr_accounting_coa_id
         , x_value_type_code          => l_adr_value_type_code
         , p_side                     => 'NA'
   );

   xla_ae_lines_pkg.set_ccid(
    p_code_combination_id          => l_ccid
  , p_value_type_code              => l_adr_value_type_code
  , p_transaction_coa_id           => l_adr_transaction_coa_id
  , p_accounting_coa_id            => l_adr_accounting_coa_id
  , p_adr_code                     => 'AP_INVOICE_DIST'
  , p_adr_type_code                => 'S'
  , p_component_type               => l_component_type
  , p_component_code               => l_component_code
  , p_component_type_code          => l_component_type_code
  , p_component_appl_id            => l_component_appl_id
  , p_amb_context_code             => l_amb_context_code
  , p_side                         => 'NA'
  );


   --
   --
   END IF;
   --
   -- Bug 4922099
   IF ( ( (NVL(l_actual_upg_option, 'N') = 'O') OR
          (NVL(l_enc_upg_option, 'N') = 'O')
        ) AND
        (l_bflow_method_code = 'PRIOR_ENTRY')
      )
   THEN
      IF
      --
      1 = 2
      --
      THEN
      xla_accounting_err_pkg.build_message
                                    (p_appli_s_name            => 'XLA'
                                    ,p_msg_name                => 'XLA_UPG_OVERRIDE_ADR_UNDEFINED'
                                    ,p_token_1                 => 'LINE_NUMBER'
                                    ,p_value_1                 => XLA_AE_LINES_PKG.g_LineNumber
                                    ,p_token_2                 => 'LINE_TYPE_NAME'
                                    ,p_value_2                 => XLA_AE_SOURCES_PKG.GetComponentName (
                                                                             l_component_type
                                                                            ,l_component_code
                                                                            ,l_component_type_code
                                                                            ,l_component_appl_id
                                                                            ,l_amb_context_code
                                                                            ,l_entity_code
                                                                            ,l_event_class_code
                                                                           )
                                    ,p_token_3                 => 'OWNER'
                                    ,p_value_3                 => xla_lookups_pkg.get_meaning(
                                                                          p_lookup_type     => 'XLA_OWNER_TYPE'
                                                                          ,p_lookup_code    => l_component_type_code
                                                                         )
                                    ,p_token_4                 => 'PRODUCT_NAME'
                                    ,p_value_4                 => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.application_name
                                    ,p_entity_id               => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.entity_id
                                    ,p_event_id                => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.event_id
                                    ,p_ledger_id               => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id
                                    ,p_ae_header_id            =>  NULL
                                       );

        IF (C_LEVEL_ERROR>= g_log_level) THEN
                 trace
                      (p_msg      => 'ERROR: XLA_UPG_OVERRIDE_ADR_UNDEFINED'
                      ,p_level    => C_LEVEL_ERROR
                      ,p_module   => l_log_module);
        END IF;
      END IF;
   END IF;
   --
   --
   ------------------------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- NOTE: XLA_AE_LINES_PKG.ValidateCurrentLine should NOT be generated if business flow method is
   -- Prior Entry.  Currently, the following code is always generated.
   ------------------------------------------------------------------------------------------------
   XLA_AE_LINES_PKG.ValidateCurrentLine;

   ------------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- Populated credit and debit amounts -- Need to generate this within IF <condition>
   ------------------------------------------------------------------------------------
   XLA_AE_LINES_PKG.SetDebitCreditAmounts;

   ----------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- Update journal entry status -- Need to generate this within IF <condition>
   ----------------------------------------------------------------------------------
   XLA_AE_JOURNAL_ENTRY_PKG.UpdateJournalEntryStatus
         (p_hdr_idx => g_array_event(p_event_id).array_value_num('header_index')
         ,p_balance_type_code => l_balance_type_code
         );

   -------------------------------------------------------------------------------------------
   -- 4262811 - Generate the Accrual Reversal lines
   -------------------------------------------------------------------------------------------
   BEGIN
      l_acc_rev_flag := XLA_AE_HEADER_PKG.g_rec_header_new.array_accrual_reversal_flag
                              (g_array_event(p_event_id).array_value_num('header_index'));
      IF l_acc_rev_flag IS NULL THEN
         l_acc_rev_flag := 'N';
      END IF;
   EXCEPTION
      WHEN OTHERS THEN
         l_acc_rev_flag := 'N';
   END;
   --
   IF (l_acc_rev_flag = 'Y') THEN

       -- 4645092  ------------------------------------------------------------------------------
       -- To allow MPA report to determine if it should generate report process
       XLA_ACCOUNTING_PKG.g_mpa_accrual_exists := 'Y';
       ------------------------------------------------------------------------------------------

       l_accrual_line_num := XLA_AE_LINES_PKG.g_LineNumber;
       XLA_AE_LINES_PKG.CopyLineInfo(l_accrual_line_num);
   -- added call to set_ccid to execute mapping  for secondary accrual reversal entries bug 7444204
   -- call ADRs
   -- Bug 4922099
   --
   IF ( (l_bflow_method_code <> 'PRIOR_ENTRY') OR
        (NVL(l_actual_upg_option, 'N') = 'O') OR
        (NVL(l_enc_upg_option, 'N') = 'O')
      )
   THEN
   NULL;
   --
   --
   
  l_ccid := AcctDerRule_7(
           p_application_id           => p_application_id
         , p_ae_header_id             => l_ae_header_id 
, p_source_11 => p_source_11
         , x_transaction_coa_id       => l_adr_transaction_coa_id
         , x_accounting_coa_id        => l_adr_accounting_coa_id
         , x_value_type_code          => l_adr_value_type_code
         , p_side                     => 'NA'
   );

   xla_ae_lines_pkg.set_ccid(
    p_code_combination_id          => l_ccid
  , p_value_type_code              => l_adr_value_type_code
  , p_transaction_coa_id           => l_adr_transaction_coa_id
  , p_accounting_coa_id            => l_adr_accounting_coa_id
  , p_adr_code                     => 'AP_INVOICE_DIST'
  , p_adr_type_code                => 'S'
  , p_component_type               => l_component_type
  , p_component_code               => l_component_code
  , p_component_type_code          => l_component_type_code
  , p_component_appl_id            => l_component_appl_id
  , p_amb_context_code             => l_amb_context_code
  , p_side                         => 'NA'
  );


   --
   --
   END IF;

       --
       -- Update the line information that should be overwritten
       --
       XLA_AE_LINES_PKG.set_ae_header_id(p_ae_header_id => p_event_id ,
                                         p_header_num   => 1);
       XLA_AE_LINES_PKG.g_rec_lines.array_header_num(XLA_AE_LINES_PKG.g_LineNumber)  :=1;

       XLA_AE_LINES_PKG.g_rec_lines.array_business_class_code(XLA_AE_LINES_PKG.g_LineNumber) := NULL; -- 4669271

       IF l_bflow_method_code <> 'NONE' THEN  -- 4655713b
          XLA_AE_LINES_PKG.g_rec_lines.array_reversal_code(XLA_AE_LINES_PKG.g_LineNumber) := CONCAT('MPA_',l_bflow_method_code);
       END IF;

      --
      -- Depending on the Reversal Method setup, do a switch side or changes sign for the amounts
      --
      IF (XLA_AE_JOURNAL_ENTRY_PKG.g_cache_ledgers_info.ledger_reversal_option = 'SIDE') THEN
          XLA_AE_LINES_PKG.g_rec_lines.array_natural_side_code(XLA_AE_LINES_PKG.g_LineNumber) :=  l_acc_rev_natural_side_code;
      ELSE
          ---------------------------------------------------------------------------------------------------
          -- 4262811a Switch Sign
          ---------------------------------------------------------------------------------------------------
          XLA_AE_LINES_PKG.g_rec_lines.array_switch_side_flag(XLA_AE_LINES_PKG.g_LineNumber) := 'N';  -- 5052518
          XLA_AE_LINES_PKG.g_rec_lines.array_ledger_amount(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_ledger_amount(XLA_AE_LINES_PKG.g_LineNumber) * -1;
          XLA_AE_LINES_PKG.g_rec_lines.array_entered_amount(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_entered_amount(XLA_AE_LINES_PKG.g_LineNumber) * -1;
          -- 5132302
          XLA_AE_LINES_PKG.g_rec_lines.array_bflow_applied_to_amt(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_bflow_applied_to_amt(XLA_AE_LINES_PKG.g_LineNumber) * -1;

      END IF;

      -- 4955764
      XLA_AE_LINES_PKG.g_rec_lines.array_gl_date(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_HEADER_PKG.g_rec_header_new.array_gl_date(g_array_event(p_event_id).array_value_num('acc_rev_header_index'));


      XLA_AE_LINES_PKG.ValidateCurrentLine;
      XLA_AE_LINES_PKG.SetDebitCreditAmounts;

      XLA_AE_JOURNAL_ENTRY_PKG.UpdateJournalEntryStatus
               (p_hdr_idx           => g_array_event(p_event_id).array_value_num('acc_rev_header_index')
               ,p_balance_type_code => l_balance_type_code);

   END IF;

   -----------------------------------------------------------------------------------------
   -- 4262811 Multiperiod Accounting
   -----------------------------------------------------------------------------------------
     -- No MPA option is assigned.


END IF;
END IF;
--

--
IF (C_LEVEL_PROCEDURE >= g_log_level) THEN
   trace
      (p_msg      => 'END of AcctLineType_77'
      ,p_level    => C_LEVEL_PROCEDURE
      ,p_module   => l_log_module);
END IF;
--
EXCEPTION
  WHEN xla_exceptions_pkg.application_exception THEN
      RAISE;
  WHEN OTHERS THEN
       xla_exceptions_pkg.raise_message
           (p_location => 'XLA_00200_AAD_S_000010_BC_PKG.AcctLineType_77');
END AcctLineType_77;
--

---------------------------------------
--
-- PRIVATE FUNCTION
--         AcctLineType_78
--
---------------------------------------
PROCEDURE AcctLineType_78 (
  p_application_id        IN NUMBER
 ,p_event_id              IN NUMBER
 ,p_calculate_acctd_flag  IN VARCHAR2
 ,p_calculate_g_l_flag    IN VARCHAR2
 ,p_actual_flag           IN OUT VARCHAR2
 ,p_balance_type_code     OUT VARCHAR2
 ,p_gain_or_loss_ref      OUT VARCHAR2
 
--Invoice Distribution Description
 , p_source_1            IN VARCHAR2
--Invoice Distribution Account
 , p_source_11            IN NUMBER
--Invoice Distribution Type
 , p_source_15            IN VARCHAR2
 , p_source_15_meaning    IN VARCHAR2
--Purchasing Encumbrance Option
 , p_source_17            IN VARCHAR2
 , p_source_17_meaning    IN VARCHAR2
--Accrue on Receipt Option
 , p_source_18            IN VARCHAR2
 , p_source_18_meaning    IN VARCHAR2
--Accounting Reversal Indicator
 , p_source_19            IN VARCHAR2
--Distribution Link Type
 , p_source_21            IN VARCHAR2
--Allocation to Main Distribution Identifier
 , p_source_23            IN NUMBER
--Invoice Identifier
 , p_source_24            IN NUMBER
--Business Flow Accounts Payable Application Identifier
 , p_source_25            IN NUMBER
--Business Flow Invoice Distribution Type
 , p_source_26            IN VARCHAR2
--Business Flow Invoice Entity Code
 , p_source_27            IN VARCHAR2
--Business Flow Invoice Distribution Identifier
 , p_source_28            IN NUMBER
--Business Flow Invoice Identifier
 , p_source_29            IN NUMBER
--Invoice Distribution Identifier
 , p_source_30            IN NUMBER
--Payables Encumbrance Upgrade Credit Account
 , p_source_31            IN NUMBER
--Payables Encumbrance Upgrade Credit Amount
 , p_source_32            IN NUMBER
--Invoice Currency Code
 , p_source_33            IN VARCHAR2
--Payables Encumbrance Upgrade Credit Base Amount
 , p_source_34            IN NUMBER
--Payables Encumbrance Upgrade Debit Account
 , p_source_35            IN NUMBER
--Payables Encumbrance Upgrade Debit Amount
 , p_source_36            IN NUMBER
--Payables Encumbrance Upgrade Debit Base Amount
 , p_source_37            IN NUMBER
--Payables Encumbrance Upgrade Option
 , p_source_38            IN VARCHAR2
--Invoice Exchange Date
 , p_source_39            IN DATE
--Invoice Exchange Rate
 , p_source_40            IN NUMBER
--Invoice Exchange Rate Type
 , p_source_41            IN VARCHAR2
--Deferred Accounting End Date
 , p_source_43            IN DATE
--Deferred Accounting Option
 , p_source_44            IN VARCHAR2
--Deferred Accounting Start Date
 , p_source_45            IN DATE
--Override Accounted Amount Indicator
 , p_source_46            IN VARCHAR2
 , p_source_46_meaning    IN VARCHAR2
--Invoice Supplier Identifier
 , p_source_47            IN NUMBER
--Invoice Supplier Site Identifier
 , p_source_48            IN NUMBER
--Third Party Type
 , p_source_49            IN VARCHAR2
--Parent Reversal Identifier
 , p_source_50            IN NUMBER
--Invoice Distribution Tax Line Identifier
 , p_source_52            IN NUMBER
--Invoice Distribution Tax Distribution Identifier from Tax
 , p_source_53            IN NUMBER
--Invoice Distribution Summary Tax Line Identifier
 , p_source_54            IN NUMBER
--Payables Upgrade Credit Encumbrance Type Identifier
 , p_source_55            IN NUMBER
--Payables Upgrade Debit Encumbrance Type Identifier
 , p_source_56            IN NUMBER
--Quantity Variance Amount
 , p_source_81            IN NUMBER
--Quantity Variance Amount in Ledger Currency
 , p_source_82            IN NUMBER
)
IS

l_component_type              VARCHAR2(80);
l_component_code              VARCHAR2(30);
l_component_type_code         VARCHAR2(1);
l_component_appl_id           INTEGER;
l_amb_context_code            VARCHAR2(30);
l_entity_code                 VARCHAR2(30);
l_event_class_code            VARCHAR2(30);
l_ae_header_id                NUMBER;
l_event_type_code             VARCHAR2(30);
l_line_definition_code        VARCHAR2(30);
l_line_definition_owner_code  VARCHAR2(1);
--
-- adr variables
l_segment                     VARCHAR2(30);
l_ccid                        NUMBER;
l_adr_transaction_coa_id      NUMBER;
l_adr_accounting_coa_id       NUMBER;
l_adr_flexfield_segment_code  VARCHAR2(30);
l_adr_flex_value_set_id       NUMBER;
l_adr_value_type_code         VARCHAR2(30);
l_adr_value_combination_id    NUMBER;
l_adr_value_segment_code      VARCHAR2(30);

l_bflow_method_code           VARCHAR2(30);  -- 4219869 Business Flow
l_bflow_class_code            VARCHAR2(30);  -- 4219869 Business Flow
l_inherit_desc_flag           VARCHAR2(1);   -- 4219869 Business Flow
l_budgetary_control_flag      VARCHAR2(1);   -- 4458381 Public Sector Enh

-- 4262811 Variables ------------------------------------------------------------------------------------------
l_entered_amt_idx             NUMBER;
l_accted_amt_idx              NUMBER;
l_acc_rev_flag                VARCHAR2(1);
l_accrual_line_num            NUMBER;
l_tmp_amt                     NUMBER;
l_acc_rev_natural_side_code   VARCHAR2(1);

l_num_entries                 NUMBER;
l_gl_dates                    xla_ae_journal_entry_pkg.t_array_date;
l_accted_amts                 xla_ae_journal_entry_pkg.t_array_num;
l_entered_amts                xla_ae_journal_entry_pkg.t_array_num;
l_period_names                xla_ae_journal_entry_pkg.t_array_V15L;
l_recog_line_1                NUMBER;
l_recog_line_2                NUMBER;

l_bflow_applied_to_amt_idx    NUMBER;                                -- 5132302
l_bflow_applied_to_amt        NUMBER;                                -- 5132302
l_bflow_applied_to_amts       xla_ae_journal_entry_pkg.t_array_num;  -- 5132302

l_event_id                    NUMBER;  -- To handle MPA header Description: xla_ae_header_pkg.SetHdrDescription

--l_rounding_ccy                VARCHAR2(15); -- To handle MPA rounding  4262811b
l_same_currency               BOOLEAN;        -- To handle MPA rounding  4262811b

---------------------------------------------------------------------------------------------------------------


--
-- bulk performance
--
l_balance_type_code           VARCHAR2(1);
l_rec_acct_attrs              XLA_AE_LINES_PKG.t_rec_acct_attrs;
l_log_module                  VARCHAR2(240);

--
-- Upgrade strategy
--
l_actual_upg_option           VARCHAR2(1);
l_enc_upg_option           VARCHAR2(1);

--
BEGIN
--
IF g_log_enabled THEN
      l_log_module := C_DEFAULT_MODULE||'.AcctLineType_78';
END IF;
--
IF (C_LEVEL_PROCEDURE >= g_log_level) THEN

      trace
         (p_msg      => 'BEGIN of AcctLineType_78'
         ,p_level    => C_LEVEL_PROCEDURE
         ,p_module   => l_log_module);

END IF;
--
l_component_type             := 'AMB_JLT';
l_component_code             := 'AP_TAX_QTY_VARIANCE_DM_ENC_DR';
l_component_type_code        := 'S';
l_component_appl_id          :=  200;
l_amb_context_code           := 'DEFAULT';
l_entity_code                := 'AP_INVOICES';
l_event_class_code           := 'DEBIT MEMOS';
l_event_type_code            := 'DEBIT MEMOS_ALL';
l_line_definition_owner_code := 'S';
l_line_definition_code       := 'ENC_DM_ALL';
--
l_balance_type_code          := 'E';
l_segment                     := NULL;
l_ccid                        := NULL;
l_adr_transaction_coa_id      := NULL;
l_adr_accounting_coa_id       := NULL;
l_adr_flexfield_segment_code  := NULL;
l_adr_flex_value_set_id       := NULL;
l_adr_value_type_code         := NULL;
l_adr_value_combination_id    := NULL;
l_adr_value_segment_code      := NULL;

l_bflow_method_code          := 'NONE';   -- 4219869 Business Flow
l_bflow_class_code           := 'AP_INV_ENCUM';    -- 4219869 Business Flow
l_inherit_desc_flag          := 'N';   -- 4219869 Business Flow
l_budgetary_control_flag     := 'Y';

l_bflow_applied_to_amt_idx   := NULL; -- 5132302
l_bflow_applied_to_amt       := NULL; -- 5132302
l_entered_amt_idx            := NULL;          -- 4262811
l_accted_amt_idx             := NULL;          -- 4262811
l_acc_rev_flag               := NULL;          -- 4262811
l_accrual_line_num           := NULL;          -- 4262811
l_tmp_amt                    := NULL;          -- 4262811
--
 
IF XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id = XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.ledger_id OR
    l_balance_type_code <> 'B' THEN
IF NVL(p_source_15,'
') =  'NONREC_TAX' AND 
p_source_81 IS NOT NULL AND 
NVL(p_source_17,'
') =  'Y' AND 
NVL(p_source_18,'
') <>  'Y'
 THEN 

   --
   XLA_AE_LINES_PKG.SetNewLine;

   p_balance_type_code          := l_balance_type_code;
   -- set the flag so later we will know whether the gain loss line needs to be created
   
   IF(l_balance_type_code = 'A' and p_actual_flag is null) THEN
     p_actual_flag :='A';
   END IF;

   --
   -- bulk performance
   --
   XLA_AE_LINES_PKG.set_ae_header_id (p_ae_header_id => p_event_id ,
                                      p_header_num   => 0); -- 4262811
   --
   -- set accounting line options
   --
   l_ae_header_id:= xla_ae_lines_pkg.SetAcctLineOption(
           p_natural_side_code          => 'D'
         , p_gain_or_loss_flag          => 'N'
         , p_gl_transfer_mode_code      => 'S'
         , p_acct_entry_type_code       => 'E'
         , p_switch_side_flag           => 'Y'
         , p_merge_duplicate_code       => 'N'
         );
   --
   l_acc_rev_natural_side_code := 'C';  -- 4262811
   -- 
   --
   -- set accounting line type info
   --
   xla_ae_lines_pkg.SetAcctLineType
      (p_component_type             => l_component_type
      ,p_event_type_code            => l_event_type_code
      ,p_line_definition_owner_code => l_line_definition_owner_code
      ,p_line_definition_code       => l_line_definition_code
      ,p_accounting_line_code       => l_component_code
      ,p_accounting_line_type_code  => l_component_type_code
      ,p_accounting_line_appl_id    => l_component_appl_id
      ,p_amb_context_code           => l_amb_context_code
      ,p_entity_code                => l_entity_code
      ,p_event_class_code           => l_event_class_code);
   --
   -- set accounting class
   --
   xla_ae_lines_pkg.SetAcctClass(
           p_accounting_class_code  => 'TQV'
         , p_ae_header_id           => l_ae_header_id
         );

   --
   -- set rounding class
   --
   XLA_AE_LINES_PKG.g_rec_lines.array_rounding_class(XLA_AE_LINES_PKG.g_LineNumber) :=
                      'TQV';

   --
   xla_ae_lines_pkg.g_rec_lines.array_calculate_acctd_flag(xla_ae_lines_pkg.g_LineNumber) := p_calculate_acctd_flag;
   xla_ae_lines_pkg.g_rec_lines.array_calculate_g_l_flag(xla_ae_lines_pkg.g_LineNumber) := p_calculate_g_l_flag;
   --
   -- bulk performance
   --
   XLA_AE_LINES_PKG.g_rec_lines.array_balance_type_code(XLA_AE_LINES_PKG.g_LineNumber) := l_balance_type_code;

   XLA_AE_LINES_PKG.g_rec_lines.array_ledger_id(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id;

   -- 4955764
   XLA_AE_LINES_PKG.g_rec_lines.array_gl_date(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_HEADER_PKG.g_rec_header_new.array_gl_date(g_array_event(p_event_id).array_value_num('header_index'));

   -- 4458381 Public Sector Enh
      XLA_AE_LINES_PKG.g_rec_lines.array_encumbrance_type_id(XLA_AE_LINES_PKG.g_LineNumber) := 1060;
   --
   -- set accounting attributes for the line type
   --
   l_entered_amt_idx := 23;
   l_accted_amt_idx  := 28;
   l_bflow_applied_to_amt_idx  := NULL;  -- 5132302
   l_rec_acct_attrs.array_acct_attr_code(1) := 'ACCOUNTING_REVERSAL_OPTION';
   l_rec_acct_attrs.array_char_value(1)  := p_source_19;
   l_rec_acct_attrs.array_acct_attr_code(2) := 'ALLOC_TO_APPLICATION_ID';
   l_rec_acct_attrs.array_num_value(2)  := 
xla_ae_sources_pkg.GetSystemSourceNum(
   p_source_code           => 'XLA_EVENT_APPL_ID'
 , p_source_type_code      => 'Y'
 , p_source_application_id =>  602
);
   l_rec_acct_attrs.array_acct_attr_code(3) := 'ALLOC_TO_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(3)  := p_source_21;
   l_rec_acct_attrs.array_acct_attr_code(4) := 'ALLOC_TO_ENTITY_CODE';
   l_rec_acct_attrs.array_char_value(4)  := 
xla_ae_sources_pkg.GetSystemSourceChar(
   p_source_code           => 'XLA_ENTITY_CODE'
 , p_source_type_code      => 'Y'
 , p_source_application_id =>  602
);
   l_rec_acct_attrs.array_acct_attr_code(5) := 'ALLOC_TO_FIRST_DIST_ID';
   l_rec_acct_attrs.array_num_value(5)  :=  to_char(p_source_23);
   l_rec_acct_attrs.array_acct_attr_code(6) := 'ALLOC_TO_FIRST_SYS_TRAN_ID';
   l_rec_acct_attrs.array_num_value(6)  :=  to_char(p_source_24);
   l_rec_acct_attrs.array_acct_attr_code(7) := 'APPLIED_TO_APPLICATION_ID';
   l_rec_acct_attrs.array_num_value(7)  := p_source_25;
   l_rec_acct_attrs.array_acct_attr_code(8) := 'APPLIED_TO_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(8)  := p_source_26;
   l_rec_acct_attrs.array_acct_attr_code(9) := 'APPLIED_TO_ENTITY_CODE';
   l_rec_acct_attrs.array_char_value(9)  := p_source_27;
   l_rec_acct_attrs.array_acct_attr_code(10) := 'APPLIED_TO_FIRST_DIST_ID';
   l_rec_acct_attrs.array_num_value(10)  :=  to_char(p_source_28);
   l_rec_acct_attrs.array_acct_attr_code(11) := 'APPLIED_TO_FIRST_SYS_TRAN_ID';
   l_rec_acct_attrs.array_num_value(11)  :=  to_char(p_source_29);
   l_rec_acct_attrs.array_acct_attr_code(12) := 'DISTRIBUTION_IDENTIFIER_1';
   l_rec_acct_attrs.array_num_value(12)  :=  to_char(p_source_30);
   l_rec_acct_attrs.array_acct_attr_code(13) := 'DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(13)  := p_source_21;
   l_rec_acct_attrs.array_acct_attr_code(14) := 'ENC_UPG_CR_CCID';
   l_rec_acct_attrs.array_num_value(14)  := p_source_31;
   l_rec_acct_attrs.array_acct_attr_code(15) := 'ENC_UPG_CR_ENTERED_AMT';
   l_rec_acct_attrs.array_num_value(15)  := p_source_32;
   l_rec_acct_attrs.array_acct_attr_code(16) := 'ENC_UPG_CR_ENTERED_CURR';
   l_rec_acct_attrs.array_char_value(16)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(17) := 'ENC_UPG_CR_LEDGER_AMT';
   l_rec_acct_attrs.array_num_value(17)  := p_source_34;
   l_rec_acct_attrs.array_acct_attr_code(18) := 'ENC_UPG_DR_CCID';
   l_rec_acct_attrs.array_num_value(18)  := p_source_35;
   l_rec_acct_attrs.array_acct_attr_code(19) := 'ENC_UPG_DR_ENTERED_AMT';
   l_rec_acct_attrs.array_num_value(19)  := p_source_36;
   l_rec_acct_attrs.array_acct_attr_code(20) := 'ENC_UPG_DR_ENTERED_CURR';
   l_rec_acct_attrs.array_char_value(20)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(21) := 'ENC_UPG_DR_LEDGER_AMT';
   l_rec_acct_attrs.array_num_value(21)  := p_source_37;
   l_rec_acct_attrs.array_acct_attr_code(22) := 'ENC_UPG_OPTION';
   l_rec_acct_attrs.array_char_value(22)  := p_source_38;
   l_rec_acct_attrs.array_acct_attr_code(23) := 'ENTERED_CURRENCY_AMOUNT';
   l_rec_acct_attrs.array_num_value(23)  := p_source_81;
   l_rec_acct_attrs.array_acct_attr_code(24) := 'ENTERED_CURRENCY_CODE';
   l_rec_acct_attrs.array_char_value(24)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(25) := 'EXCHANGE_DATE';
   l_rec_acct_attrs.array_date_value(25)  := p_source_39;
   l_rec_acct_attrs.array_acct_attr_code(26) := 'EXCHANGE_RATE';
   l_rec_acct_attrs.array_num_value(26)  := p_source_40;
   l_rec_acct_attrs.array_acct_attr_code(27) := 'EXCHANGE_RATE_TYPE';
   l_rec_acct_attrs.array_char_value(27)  := p_source_41;
   l_rec_acct_attrs.array_acct_attr_code(28) := 'LEDGER_AMOUNT';
   l_rec_acct_attrs.array_num_value(28)  := p_source_82;
   l_rec_acct_attrs.array_acct_attr_code(29) := 'MULTIPERIOD_END_DATE';
   l_rec_acct_attrs.array_date_value(29)  := p_source_43;
   l_rec_acct_attrs.array_acct_attr_code(30) := 'MULTIPERIOD_OPTION';
   l_rec_acct_attrs.array_char_value(30)  := p_source_44;
   l_rec_acct_attrs.array_acct_attr_code(31) := 'MULTIPERIOD_START_DATE';
   l_rec_acct_attrs.array_date_value(31)  := p_source_45;
   l_rec_acct_attrs.array_acct_attr_code(32) := 'OVERRIDE_ACCTD_AMT_FLAG';
   l_rec_acct_attrs.array_char_value(32)  := p_source_46;
   l_rec_acct_attrs.array_acct_attr_code(33) := 'PARTY_ID';
   l_rec_acct_attrs.array_num_value(33)  := p_source_47;
   l_rec_acct_attrs.array_acct_attr_code(34) := 'PARTY_SITE_ID';
   l_rec_acct_attrs.array_num_value(34)  := p_source_48;
   l_rec_acct_attrs.array_acct_attr_code(35) := 'PARTY_TYPE';
   l_rec_acct_attrs.array_char_value(35)  := p_source_49;
   l_rec_acct_attrs.array_acct_attr_code(36) := 'REVERSED_DISTRIBUTION_ID1';
   l_rec_acct_attrs.array_num_value(36)  :=  to_char(p_source_50);
   l_rec_acct_attrs.array_acct_attr_code(37) := 'REVERSED_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(37)  := p_source_21;
   l_rec_acct_attrs.array_acct_attr_code(38) := 'TAX_LINE_REF_ID';
   l_rec_acct_attrs.array_num_value(38)  := p_source_52;
   l_rec_acct_attrs.array_acct_attr_code(39) := 'TAX_REC_NREC_DIST_REF_ID';
   l_rec_acct_attrs.array_num_value(39)  := p_source_53;
   l_rec_acct_attrs.array_acct_attr_code(40) := 'TAX_SUMMARY_LINE_REF_ID';
   l_rec_acct_attrs.array_num_value(40)  := p_source_54;
   l_rec_acct_attrs.array_acct_attr_code(41) := 'UPG_CR_ENC_TYPE_ID';
   l_rec_acct_attrs.array_num_value(41)  := p_source_55;
   l_rec_acct_attrs.array_acct_attr_code(42) := 'UPG_DR_ENC_TYPE_ID';
   l_rec_acct_attrs.array_num_value(42)  := p_source_56;

   XLA_AE_LINES_PKG.SetLineAcctAttrs(l_rec_acct_attrs);
   p_gain_or_loss_ref  := XLA_AE_LINES_PKG.g_rec_lines.array_gain_or_loss_ref(XLA_AE_LINES_PKG.g_LineNumber);

   ---------------------------------------------------------------------------------------------------------------
   -- 4336173 -- assign Business Flow Class (replace code in xla_ae_lines_pkg.Business_Flow_Validation)
   ---------------------------------------------------------------------------------------------------------------
   XLA_AE_LINES_PKG.g_rec_lines.array_business_class_code(XLA_AE_LINES_PKG.g_LineNumber) := l_bflow_class_code;

   l_actual_upg_option  := XLA_AE_LINES_PKG.g_rec_lines.array_actual_upg_option(XLA_AE_LINES_PKG.g_LineNumber);
   l_enc_upg_option     := XLA_AE_LINES_PKG.g_rec_lines.array_enc_upg_option(XLA_AE_LINES_PKG.g_LineNumber);

   IF xla_accounting_cache_pkg.GetValueChar
         (p_source_code         => 'LEDGER_CATEGORY_CODE'
         ,p_target_ledger_id    => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id) IN ('PRIMARY','ALC')
   AND l_bflow_method_code = 'PRIOR_ENTRY'
--   AND (l_actual_upg_option = 'Y' OR l_enc_upg_option = 'Y') Bug 4922099
   AND ( (NVL(l_actual_upg_option, 'N') IN ('Y', 'O')) OR
         (NVL(l_enc_upg_option, 'N') IN ('Y', 'O'))
       )
   THEN
         xla_ae_lines_pkg.BflowUpgEntry
           (p_business_method_code    => l_bflow_method_code
           ,p_business_class_code     => l_bflow_class_code
           ,p_balance_type            => l_balance_type_code);
   ELSE
      NULL;
-- No business flow processing for business flow method of NONE.
   END IF;

   --
   -- call analytical criteria
   --
   
   --
   -- call description
   --
   
xla_ae_lines_pkg.SetLineDescription(
   p_ae_header_id => l_ae_header_id
  ,p_description  => Description_2 (
     p_application_id         => p_application_id
   , p_ae_header_id           => l_ae_header_id 
, p_source_1 => p_source_1
   )
);


   --
   -- call ADRs
   -- Bug 4922099
   --
   IF ( (l_bflow_method_code <> 'PRIOR_ENTRY') OR
        (NVL(l_actual_upg_option, 'N') = 'O') OR
        (NVL(l_enc_upg_option, 'N') = 'O')
      )
   THEN
   NULL;
   --
   --
   
  l_ccid := AcctDerRule_7(
           p_application_id           => p_application_id
         , p_ae_header_id             => l_ae_header_id 
, p_source_11 => p_source_11
         , x_transaction_coa_id       => l_adr_transaction_coa_id
         , x_accounting_coa_id        => l_adr_accounting_coa_id
         , x_value_type_code          => l_adr_value_type_code
         , p_side                     => 'NA'
   );

   xla_ae_lines_pkg.set_ccid(
    p_code_combination_id          => l_ccid
  , p_value_type_code              => l_adr_value_type_code
  , p_transaction_coa_id           => l_adr_transaction_coa_id
  , p_accounting_coa_id            => l_adr_accounting_coa_id
  , p_adr_code                     => 'AP_INVOICE_DIST'
  , p_adr_type_code                => 'S'
  , p_component_type               => l_component_type
  , p_component_code               => l_component_code
  , p_component_type_code          => l_component_type_code
  , p_component_appl_id            => l_component_appl_id
  , p_amb_context_code             => l_amb_context_code
  , p_side                         => 'NA'
  );


   --
   --
   END IF;
   --
   -- Bug 4922099
   IF ( ( (NVL(l_actual_upg_option, 'N') = 'O') OR
          (NVL(l_enc_upg_option, 'N') = 'O')
        ) AND
        (l_bflow_method_code = 'PRIOR_ENTRY')
      )
   THEN
      IF
      --
      1 = 2
      --
      THEN
      xla_accounting_err_pkg.build_message
                                    (p_appli_s_name            => 'XLA'
                                    ,p_msg_name                => 'XLA_UPG_OVERRIDE_ADR_UNDEFINED'
                                    ,p_token_1                 => 'LINE_NUMBER'
                                    ,p_value_1                 => XLA_AE_LINES_PKG.g_LineNumber
                                    ,p_token_2                 => 'LINE_TYPE_NAME'
                                    ,p_value_2                 => XLA_AE_SOURCES_PKG.GetComponentName (
                                                                             l_component_type
                                                                            ,l_component_code
                                                                            ,l_component_type_code
                                                                            ,l_component_appl_id
                                                                            ,l_amb_context_code
                                                                            ,l_entity_code
                                                                            ,l_event_class_code
                                                                           )
                                    ,p_token_3                 => 'OWNER'
                                    ,p_value_3                 => xla_lookups_pkg.get_meaning(
                                                                          p_lookup_type     => 'XLA_OWNER_TYPE'
                                                                          ,p_lookup_code    => l_component_type_code
                                                                         )
                                    ,p_token_4                 => 'PRODUCT_NAME'
                                    ,p_value_4                 => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.application_name
                                    ,p_entity_id               => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.entity_id
                                    ,p_event_id                => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.event_id
                                    ,p_ledger_id               => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id
                                    ,p_ae_header_id            =>  NULL
                                       );

        IF (C_LEVEL_ERROR>= g_log_level) THEN
                 trace
                      (p_msg      => 'ERROR: XLA_UPG_OVERRIDE_ADR_UNDEFINED'
                      ,p_level    => C_LEVEL_ERROR
                      ,p_module   => l_log_module);
        END IF;
      END IF;
   END IF;
   --
   --
   ------------------------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- NOTE: XLA_AE_LINES_PKG.ValidateCurrentLine should NOT be generated if business flow method is
   -- Prior Entry.  Currently, the following code is always generated.
   ------------------------------------------------------------------------------------------------
   XLA_AE_LINES_PKG.ValidateCurrentLine;

   ------------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- Populated credit and debit amounts -- Need to generate this within IF <condition>
   ------------------------------------------------------------------------------------
   XLA_AE_LINES_PKG.SetDebitCreditAmounts;

   ----------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- Update journal entry status -- Need to generate this within IF <condition>
   ----------------------------------------------------------------------------------
   XLA_AE_JOURNAL_ENTRY_PKG.UpdateJournalEntryStatus
         (p_hdr_idx => g_array_event(p_event_id).array_value_num('header_index')
         ,p_balance_type_code => l_balance_type_code
         );

   -------------------------------------------------------------------------------------------
   -- 4262811 - Generate the Accrual Reversal lines
   -------------------------------------------------------------------------------------------
   BEGIN
      l_acc_rev_flag := XLA_AE_HEADER_PKG.g_rec_header_new.array_accrual_reversal_flag
                              (g_array_event(p_event_id).array_value_num('header_index'));
      IF l_acc_rev_flag IS NULL THEN
         l_acc_rev_flag := 'N';
      END IF;
   EXCEPTION
      WHEN OTHERS THEN
         l_acc_rev_flag := 'N';
   END;
   --
   IF (l_acc_rev_flag = 'Y') THEN

       -- 4645092  ------------------------------------------------------------------------------
       -- To allow MPA report to determine if it should generate report process
       XLA_ACCOUNTING_PKG.g_mpa_accrual_exists := 'Y';
       ------------------------------------------------------------------------------------------

       l_accrual_line_num := XLA_AE_LINES_PKG.g_LineNumber;
       XLA_AE_LINES_PKG.CopyLineInfo(l_accrual_line_num);
   -- added call to set_ccid to execute mapping  for secondary accrual reversal entries bug 7444204
   -- call ADRs
   -- Bug 4922099
   --
   IF ( (l_bflow_method_code <> 'PRIOR_ENTRY') OR
        (NVL(l_actual_upg_option, 'N') = 'O') OR
        (NVL(l_enc_upg_option, 'N') = 'O')
      )
   THEN
   NULL;
   --
   --
   
  l_ccid := AcctDerRule_7(
           p_application_id           => p_application_id
         , p_ae_header_id             => l_ae_header_id 
, p_source_11 => p_source_11
         , x_transaction_coa_id       => l_adr_transaction_coa_id
         , x_accounting_coa_id        => l_adr_accounting_coa_id
         , x_value_type_code          => l_adr_value_type_code
         , p_side                     => 'NA'
   );

   xla_ae_lines_pkg.set_ccid(
    p_code_combination_id          => l_ccid
  , p_value_type_code              => l_adr_value_type_code
  , p_transaction_coa_id           => l_adr_transaction_coa_id
  , p_accounting_coa_id            => l_adr_accounting_coa_id
  , p_adr_code                     => 'AP_INVOICE_DIST'
  , p_adr_type_code                => 'S'
  , p_component_type               => l_component_type
  , p_component_code               => l_component_code
  , p_component_type_code          => l_component_type_code
  , p_component_appl_id            => l_component_appl_id
  , p_amb_context_code             => l_amb_context_code
  , p_side                         => 'NA'
  );


   --
   --
   END IF;

       --
       -- Update the line information that should be overwritten
       --
       XLA_AE_LINES_PKG.set_ae_header_id(p_ae_header_id => p_event_id ,
                                         p_header_num   => 1);
       XLA_AE_LINES_PKG.g_rec_lines.array_header_num(XLA_AE_LINES_PKG.g_LineNumber)  :=1;

       XLA_AE_LINES_PKG.g_rec_lines.array_business_class_code(XLA_AE_LINES_PKG.g_LineNumber) := NULL; -- 4669271

       IF l_bflow_method_code <> 'NONE' THEN  -- 4655713b
          XLA_AE_LINES_PKG.g_rec_lines.array_reversal_code(XLA_AE_LINES_PKG.g_LineNumber) := CONCAT('MPA_',l_bflow_method_code);
       END IF;

      --
      -- Depending on the Reversal Method setup, do a switch side or changes sign for the amounts
      --
      IF (XLA_AE_JOURNAL_ENTRY_PKG.g_cache_ledgers_info.ledger_reversal_option = 'SIDE') THEN
          XLA_AE_LINES_PKG.g_rec_lines.array_natural_side_code(XLA_AE_LINES_PKG.g_LineNumber) :=  l_acc_rev_natural_side_code;
      ELSE
          ---------------------------------------------------------------------------------------------------
          -- 4262811a Switch Sign
          ---------------------------------------------------------------------------------------------------
          XLA_AE_LINES_PKG.g_rec_lines.array_switch_side_flag(XLA_AE_LINES_PKG.g_LineNumber) := 'N';  -- 5052518
          XLA_AE_LINES_PKG.g_rec_lines.array_ledger_amount(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_ledger_amount(XLA_AE_LINES_PKG.g_LineNumber) * -1;
          XLA_AE_LINES_PKG.g_rec_lines.array_entered_amount(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_entered_amount(XLA_AE_LINES_PKG.g_LineNumber) * -1;
          -- 5132302
          XLA_AE_LINES_PKG.g_rec_lines.array_bflow_applied_to_amt(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_bflow_applied_to_amt(XLA_AE_LINES_PKG.g_LineNumber) * -1;

      END IF;

      -- 4955764
      XLA_AE_LINES_PKG.g_rec_lines.array_gl_date(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_HEADER_PKG.g_rec_header_new.array_gl_date(g_array_event(p_event_id).array_value_num('acc_rev_header_index'));


      XLA_AE_LINES_PKG.ValidateCurrentLine;
      XLA_AE_LINES_PKG.SetDebitCreditAmounts;

      XLA_AE_JOURNAL_ENTRY_PKG.UpdateJournalEntryStatus
               (p_hdr_idx           => g_array_event(p_event_id).array_value_num('acc_rev_header_index')
               ,p_balance_type_code => l_balance_type_code);

   END IF;

   -----------------------------------------------------------------------------------------
   -- 4262811 Multiperiod Accounting
   -----------------------------------------------------------------------------------------
     -- No MPA option is assigned.


END IF;
END IF;
--

--
IF (C_LEVEL_PROCEDURE >= g_log_level) THEN
   trace
      (p_msg      => 'END of AcctLineType_78'
      ,p_level    => C_LEVEL_PROCEDURE
      ,p_module   => l_log_module);
END IF;
--
EXCEPTION
  WHEN xla_exceptions_pkg.application_exception THEN
      RAISE;
  WHEN OTHERS THEN
       xla_exceptions_pkg.raise_message
           (p_location => 'XLA_00200_AAD_S_000010_BC_PKG.AcctLineType_78');
END AcctLineType_78;
--

---------------------------------------
--
-- PRIVATE FUNCTION
--         AcctLineType_79
--
---------------------------------------
PROCEDURE AcctLineType_79 (
  p_application_id        IN NUMBER
 ,p_event_id              IN NUMBER
 ,p_calculate_acctd_flag  IN VARCHAR2
 ,p_calculate_g_l_flag    IN VARCHAR2
 ,p_actual_flag           IN OUT VARCHAR2
 ,p_balance_type_code     OUT VARCHAR2
 ,p_gain_or_loss_ref      OUT VARCHAR2
 
--Invoice Distribution Description
 , p_source_1            IN VARCHAR2
--Invoice Distribution Account
 , p_source_11            IN NUMBER
--Invoice Distribution Type
 , p_source_15            IN VARCHAR2
 , p_source_15_meaning    IN VARCHAR2
--Purchasing Encumbrance Option
 , p_source_17            IN VARCHAR2
 , p_source_17_meaning    IN VARCHAR2
--Accrue on Receipt Option
 , p_source_18            IN VARCHAR2
 , p_source_18_meaning    IN VARCHAR2
--Accounting Reversal Indicator
 , p_source_19            IN VARCHAR2
--Distribution Link Type
 , p_source_21            IN VARCHAR2
--Allocation to Main Distribution Identifier
 , p_source_23            IN NUMBER
--Invoice Identifier
 , p_source_24            IN NUMBER
--Business Flow Accounts Payable Application Identifier
 , p_source_25            IN NUMBER
--Business Flow Invoice Distribution Type
 , p_source_26            IN VARCHAR2
--Business Flow Invoice Entity Code
 , p_source_27            IN VARCHAR2
--Business Flow Invoice Distribution Identifier
 , p_source_28            IN NUMBER
--Business Flow Invoice Identifier
 , p_source_29            IN NUMBER
--Invoice Distribution Identifier
 , p_source_30            IN NUMBER
--Payables Encumbrance Upgrade Credit Account
 , p_source_31            IN NUMBER
--Payables Encumbrance Upgrade Credit Amount
 , p_source_32            IN NUMBER
--Invoice Currency Code
 , p_source_33            IN VARCHAR2
--Payables Encumbrance Upgrade Credit Base Amount
 , p_source_34            IN NUMBER
--Payables Encumbrance Upgrade Debit Account
 , p_source_35            IN NUMBER
--Payables Encumbrance Upgrade Debit Amount
 , p_source_36            IN NUMBER
--Payables Encumbrance Upgrade Debit Base Amount
 , p_source_37            IN NUMBER
--Payables Encumbrance Upgrade Option
 , p_source_38            IN VARCHAR2
--Invoice Exchange Date
 , p_source_39            IN DATE
--Invoice Exchange Rate
 , p_source_40            IN NUMBER
--Invoice Exchange Rate Type
 , p_source_41            IN VARCHAR2
--Deferred Accounting End Date
 , p_source_43            IN DATE
--Deferred Accounting Option
 , p_source_44            IN VARCHAR2
--Deferred Accounting Start Date
 , p_source_45            IN DATE
--Override Accounted Amount Indicator
 , p_source_46            IN VARCHAR2
 , p_source_46_meaning    IN VARCHAR2
--Invoice Supplier Identifier
 , p_source_47            IN NUMBER
--Invoice Supplier Site Identifier
 , p_source_48            IN NUMBER
--Third Party Type
 , p_source_49            IN VARCHAR2
--Parent Reversal Identifier
 , p_source_50            IN NUMBER
--Invoice Distribution Statistical Amount
 , p_source_51            IN NUMBER
--Invoice Distribution Tax Line Identifier
 , p_source_52            IN NUMBER
--Invoice Distribution Tax Distribution Identifier from Tax
 , p_source_53            IN NUMBER
--Invoice Distribution Summary Tax Line Identifier
 , p_source_54            IN NUMBER
--Payables Upgrade Credit Encumbrance Type Identifier
 , p_source_55            IN NUMBER
--Payables Upgrade Debit Encumbrance Type Identifier
 , p_source_56            IN NUMBER
--Invoice Distribution Amount
 , p_source_57            IN NUMBER
--Quantity Variance Amount
 , p_source_81            IN NUMBER
--Quantity Variance Amount in Ledger Currency
 , p_source_82            IN NUMBER
)
IS

l_component_type              VARCHAR2(80);
l_component_code              VARCHAR2(30);
l_component_type_code         VARCHAR2(1);
l_component_appl_id           INTEGER;
l_amb_context_code            VARCHAR2(30);
l_entity_code                 VARCHAR2(30);
l_event_class_code            VARCHAR2(30);
l_ae_header_id                NUMBER;
l_event_type_code             VARCHAR2(30);
l_line_definition_code        VARCHAR2(30);
l_line_definition_owner_code  VARCHAR2(1);
--
-- adr variables
l_segment                     VARCHAR2(30);
l_ccid                        NUMBER;
l_adr_transaction_coa_id      NUMBER;
l_adr_accounting_coa_id       NUMBER;
l_adr_flexfield_segment_code  VARCHAR2(30);
l_adr_flex_value_set_id       NUMBER;
l_adr_value_type_code         VARCHAR2(30);
l_adr_value_combination_id    NUMBER;
l_adr_value_segment_code      VARCHAR2(30);

l_bflow_method_code           VARCHAR2(30);  -- 4219869 Business Flow
l_bflow_class_code            VARCHAR2(30);  -- 4219869 Business Flow
l_inherit_desc_flag           VARCHAR2(1);   -- 4219869 Business Flow
l_budgetary_control_flag      VARCHAR2(1);   -- 4458381 Public Sector Enh

-- 4262811 Variables ------------------------------------------------------------------------------------------
l_entered_amt_idx             NUMBER;
l_accted_amt_idx              NUMBER;
l_acc_rev_flag                VARCHAR2(1);
l_accrual_line_num            NUMBER;
l_tmp_amt                     NUMBER;
l_acc_rev_natural_side_code   VARCHAR2(1);

l_num_entries                 NUMBER;
l_gl_dates                    xla_ae_journal_entry_pkg.t_array_date;
l_accted_amts                 xla_ae_journal_entry_pkg.t_array_num;
l_entered_amts                xla_ae_journal_entry_pkg.t_array_num;
l_period_names                xla_ae_journal_entry_pkg.t_array_V15L;
l_recog_line_1                NUMBER;
l_recog_line_2                NUMBER;

l_bflow_applied_to_amt_idx    NUMBER;                                -- 5132302
l_bflow_applied_to_amt        NUMBER;                                -- 5132302
l_bflow_applied_to_amts       xla_ae_journal_entry_pkg.t_array_num;  -- 5132302

l_event_id                    NUMBER;  -- To handle MPA header Description: xla_ae_header_pkg.SetHdrDescription

--l_rounding_ccy                VARCHAR2(15); -- To handle MPA rounding  4262811b
l_same_currency               BOOLEAN;        -- To handle MPA rounding  4262811b

---------------------------------------------------------------------------------------------------------------


--
-- bulk performance
--
l_balance_type_code           VARCHAR2(1);
l_rec_acct_attrs              XLA_AE_LINES_PKG.t_rec_acct_attrs;
l_log_module                  VARCHAR2(240);

--
-- Upgrade strategy
--
l_actual_upg_option           VARCHAR2(1);
l_enc_upg_option           VARCHAR2(1);

--
BEGIN
--
IF g_log_enabled THEN
      l_log_module := C_DEFAULT_MODULE||'.AcctLineType_79';
END IF;
--
IF (C_LEVEL_PROCEDURE >= g_log_level) THEN

      trace
         (p_msg      => 'BEGIN of AcctLineType_79'
         ,p_level    => C_LEVEL_PROCEDURE
         ,p_module   => l_log_module);

END IF;
--
l_component_type             := 'AMB_JLT';
l_component_code             := 'AP_TAX_QTY_VARIANCE_INV_ENC_DR';
l_component_type_code        := 'S';
l_component_appl_id          :=  200;
l_amb_context_code           := 'DEFAULT';
l_entity_code                := 'AP_INVOICES';
l_event_class_code           := 'INVOICES';
l_event_type_code            := 'INVOICES_ALL';
l_line_definition_owner_code := 'S';
l_line_definition_code       := 'ENC_INVOICES_ALL';
--
l_balance_type_code          := 'E';
l_segment                     := NULL;
l_ccid                        := NULL;
l_adr_transaction_coa_id      := NULL;
l_adr_accounting_coa_id       := NULL;
l_adr_flexfield_segment_code  := NULL;
l_adr_flex_value_set_id       := NULL;
l_adr_value_type_code         := NULL;
l_adr_value_combination_id    := NULL;
l_adr_value_segment_code      := NULL;

l_bflow_method_code          := 'NONE';   -- 4219869 Business Flow
l_bflow_class_code           := 'AP_INV_ENCUM';    -- 4219869 Business Flow
l_inherit_desc_flag          := 'N';   -- 4219869 Business Flow
l_budgetary_control_flag     := 'Y';

l_bflow_applied_to_amt_idx   := NULL; -- 5132302
l_bflow_applied_to_amt       := NULL; -- 5132302
l_entered_amt_idx            := NULL;          -- 4262811
l_accted_amt_idx             := NULL;          -- 4262811
l_acc_rev_flag               := NULL;          -- 4262811
l_accrual_line_num           := NULL;          -- 4262811
l_tmp_amt                    := NULL;          -- 4262811
--
 
IF XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id = XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.ledger_id OR
    l_balance_type_code <> 'B' THEN
IF NVL(p_source_15,'
') =  'NONREC_TAX' AND 
p_source_81 IS NOT NULL AND 
NVL(p_source_17,'
') =  'Y' AND 
NVL(p_source_18,'
') <>  'Y'
 THEN 

   --
   XLA_AE_LINES_PKG.SetNewLine;

   p_balance_type_code          := l_balance_type_code;
   -- set the flag so later we will know whether the gain loss line needs to be created
   
   IF(l_balance_type_code = 'A' and p_actual_flag is null) THEN
     p_actual_flag :='A';
   END IF;

   --
   -- bulk performance
   --
   XLA_AE_LINES_PKG.set_ae_header_id (p_ae_header_id => p_event_id ,
                                      p_header_num   => 0); -- 4262811
   --
   -- set accounting line options
   --
   l_ae_header_id:= xla_ae_lines_pkg.SetAcctLineOption(
           p_natural_side_code          => 'D'
         , p_gain_or_loss_flag          => 'N'
         , p_gl_transfer_mode_code      => 'S'
         , p_acct_entry_type_code       => 'E'
         , p_switch_side_flag           => 'Y'
         , p_merge_duplicate_code       => 'N'
         );
   --
   l_acc_rev_natural_side_code := 'C';  -- 4262811
   -- 
   --
   -- set accounting line type info
   --
   xla_ae_lines_pkg.SetAcctLineType
      (p_component_type             => l_component_type
      ,p_event_type_code            => l_event_type_code
      ,p_line_definition_owner_code => l_line_definition_owner_code
      ,p_line_definition_code       => l_line_definition_code
      ,p_accounting_line_code       => l_component_code
      ,p_accounting_line_type_code  => l_component_type_code
      ,p_accounting_line_appl_id    => l_component_appl_id
      ,p_amb_context_code           => l_amb_context_code
      ,p_entity_code                => l_entity_code
      ,p_event_class_code           => l_event_class_code);
   --
   -- set accounting class
   --
   xla_ae_lines_pkg.SetAcctClass(
           p_accounting_class_code  => 'TQV'
         , p_ae_header_id           => l_ae_header_id
         );

   --
   -- set rounding class
   --
   XLA_AE_LINES_PKG.g_rec_lines.array_rounding_class(XLA_AE_LINES_PKG.g_LineNumber) :=
                      'TQV';

   --
   xla_ae_lines_pkg.g_rec_lines.array_calculate_acctd_flag(xla_ae_lines_pkg.g_LineNumber) := p_calculate_acctd_flag;
   xla_ae_lines_pkg.g_rec_lines.array_calculate_g_l_flag(xla_ae_lines_pkg.g_LineNumber) := p_calculate_g_l_flag;
   --
   -- bulk performance
   --
   XLA_AE_LINES_PKG.g_rec_lines.array_balance_type_code(XLA_AE_LINES_PKG.g_LineNumber) := l_balance_type_code;

   XLA_AE_LINES_PKG.g_rec_lines.array_ledger_id(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id;

   -- 4955764
   XLA_AE_LINES_PKG.g_rec_lines.array_gl_date(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_HEADER_PKG.g_rec_header_new.array_gl_date(g_array_event(p_event_id).array_value_num('header_index'));

   -- 4458381 Public Sector Enh
      XLA_AE_LINES_PKG.g_rec_lines.array_encumbrance_type_id(XLA_AE_LINES_PKG.g_LineNumber) := 1060;
   --
   -- set accounting attributes for the line type
   --
   l_entered_amt_idx := 24;
   l_accted_amt_idx  := 29;
   l_bflow_applied_to_amt_idx  := 7;  -- 5132302
   l_rec_acct_attrs.array_acct_attr_code(1) := 'ACCOUNTING_REVERSAL_OPTION';
   l_rec_acct_attrs.array_char_value(1)  := p_source_19;
   l_rec_acct_attrs.array_acct_attr_code(2) := 'ALLOC_TO_APPLICATION_ID';
   l_rec_acct_attrs.array_num_value(2)  := 
xla_ae_sources_pkg.GetSystemSourceNum(
   p_source_code           => 'XLA_EVENT_APPL_ID'
 , p_source_type_code      => 'Y'
 , p_source_application_id =>  602
);
   l_rec_acct_attrs.array_acct_attr_code(3) := 'ALLOC_TO_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(3)  := p_source_21;
   l_rec_acct_attrs.array_acct_attr_code(4) := 'ALLOC_TO_ENTITY_CODE';
   l_rec_acct_attrs.array_char_value(4)  := 
xla_ae_sources_pkg.GetSystemSourceChar(
   p_source_code           => 'XLA_ENTITY_CODE'
 , p_source_type_code      => 'Y'
 , p_source_application_id =>  602
);
   l_rec_acct_attrs.array_acct_attr_code(5) := 'ALLOC_TO_FIRST_DIST_ID';
   l_rec_acct_attrs.array_num_value(5)  :=  to_char(p_source_23);
   l_rec_acct_attrs.array_acct_attr_code(6) := 'ALLOC_TO_FIRST_SYS_TRAN_ID';
   l_rec_acct_attrs.array_num_value(6)  :=  to_char(p_source_24);
   l_rec_acct_attrs.array_acct_attr_code(7) := 'APPLIED_TO_AMOUNT';
   l_rec_acct_attrs.array_num_value(7)  := p_source_57;
   l_rec_acct_attrs.array_acct_attr_code(8) := 'APPLIED_TO_APPLICATION_ID';
   l_rec_acct_attrs.array_num_value(8)  := p_source_25;
   l_rec_acct_attrs.array_acct_attr_code(9) := 'APPLIED_TO_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(9)  := p_source_26;
   l_rec_acct_attrs.array_acct_attr_code(10) := 'APPLIED_TO_ENTITY_CODE';
   l_rec_acct_attrs.array_char_value(10)  := p_source_27;
   l_rec_acct_attrs.array_acct_attr_code(11) := 'APPLIED_TO_FIRST_DIST_ID';
   l_rec_acct_attrs.array_num_value(11)  :=  to_char(p_source_28);
   l_rec_acct_attrs.array_acct_attr_code(12) := 'APPLIED_TO_FIRST_SYS_TRAN_ID';
   l_rec_acct_attrs.array_num_value(12)  :=  to_char(p_source_29);
   l_rec_acct_attrs.array_acct_attr_code(13) := 'DISTRIBUTION_IDENTIFIER_1';
   l_rec_acct_attrs.array_num_value(13)  :=  to_char(p_source_30);
   l_rec_acct_attrs.array_acct_attr_code(14) := 'DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(14)  := p_source_21;
   l_rec_acct_attrs.array_acct_attr_code(15) := 'ENC_UPG_CR_CCID';
   l_rec_acct_attrs.array_num_value(15)  := p_source_31;
   l_rec_acct_attrs.array_acct_attr_code(16) := 'ENC_UPG_CR_ENTERED_AMT';
   l_rec_acct_attrs.array_num_value(16)  := p_source_32;
   l_rec_acct_attrs.array_acct_attr_code(17) := 'ENC_UPG_CR_ENTERED_CURR';
   l_rec_acct_attrs.array_char_value(17)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(18) := 'ENC_UPG_CR_LEDGER_AMT';
   l_rec_acct_attrs.array_num_value(18)  := p_source_34;
   l_rec_acct_attrs.array_acct_attr_code(19) := 'ENC_UPG_DR_CCID';
   l_rec_acct_attrs.array_num_value(19)  := p_source_35;
   l_rec_acct_attrs.array_acct_attr_code(20) := 'ENC_UPG_DR_ENTERED_AMT';
   l_rec_acct_attrs.array_num_value(20)  := p_source_36;
   l_rec_acct_attrs.array_acct_attr_code(21) := 'ENC_UPG_DR_ENTERED_CURR';
   l_rec_acct_attrs.array_char_value(21)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(22) := 'ENC_UPG_DR_LEDGER_AMT';
   l_rec_acct_attrs.array_num_value(22)  := p_source_37;
   l_rec_acct_attrs.array_acct_attr_code(23) := 'ENC_UPG_OPTION';
   l_rec_acct_attrs.array_char_value(23)  := p_source_38;
   l_rec_acct_attrs.array_acct_attr_code(24) := 'ENTERED_CURRENCY_AMOUNT';
   l_rec_acct_attrs.array_num_value(24)  := p_source_81;
   l_rec_acct_attrs.array_acct_attr_code(25) := 'ENTERED_CURRENCY_CODE';
   l_rec_acct_attrs.array_char_value(25)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(26) := 'EXCHANGE_DATE';
   l_rec_acct_attrs.array_date_value(26)  := p_source_39;
   l_rec_acct_attrs.array_acct_attr_code(27) := 'EXCHANGE_RATE';
   l_rec_acct_attrs.array_num_value(27)  := p_source_40;
   l_rec_acct_attrs.array_acct_attr_code(28) := 'EXCHANGE_RATE_TYPE';
   l_rec_acct_attrs.array_char_value(28)  := p_source_41;
   l_rec_acct_attrs.array_acct_attr_code(29) := 'LEDGER_AMOUNT';
   l_rec_acct_attrs.array_num_value(29)  := p_source_82;
   l_rec_acct_attrs.array_acct_attr_code(30) := 'MULTIPERIOD_END_DATE';
   l_rec_acct_attrs.array_date_value(30)  := p_source_43;
   l_rec_acct_attrs.array_acct_attr_code(31) := 'MULTIPERIOD_OPTION';
   l_rec_acct_attrs.array_char_value(31)  := p_source_44;
   l_rec_acct_attrs.array_acct_attr_code(32) := 'MULTIPERIOD_START_DATE';
   l_rec_acct_attrs.array_date_value(32)  := p_source_45;
   l_rec_acct_attrs.array_acct_attr_code(33) := 'OVERRIDE_ACCTD_AMT_FLAG';
   l_rec_acct_attrs.array_char_value(33)  := p_source_46;
   l_rec_acct_attrs.array_acct_attr_code(34) := 'PARTY_ID';
   l_rec_acct_attrs.array_num_value(34)  := p_source_47;
   l_rec_acct_attrs.array_acct_attr_code(35) := 'PARTY_SITE_ID';
   l_rec_acct_attrs.array_num_value(35)  := p_source_48;
   l_rec_acct_attrs.array_acct_attr_code(36) := 'PARTY_TYPE';
   l_rec_acct_attrs.array_char_value(36)  := p_source_49;
   l_rec_acct_attrs.array_acct_attr_code(37) := 'REVERSED_DISTRIBUTION_ID1';
   l_rec_acct_attrs.array_num_value(37)  :=  to_char(p_source_50);
   l_rec_acct_attrs.array_acct_attr_code(38) := 'REVERSED_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(38)  := p_source_21;
   l_rec_acct_attrs.array_acct_attr_code(39) := 'STATISTICAL_AMOUNT';
   l_rec_acct_attrs.array_num_value(39)  := p_source_51;
   l_rec_acct_attrs.array_acct_attr_code(40) := 'TAX_LINE_REF_ID';
   l_rec_acct_attrs.array_num_value(40)  := p_source_52;
   l_rec_acct_attrs.array_acct_attr_code(41) := 'TAX_REC_NREC_DIST_REF_ID';
   l_rec_acct_attrs.array_num_value(41)  := p_source_53;
   l_rec_acct_attrs.array_acct_attr_code(42) := 'TAX_SUMMARY_LINE_REF_ID';
   l_rec_acct_attrs.array_num_value(42)  := p_source_54;
   l_rec_acct_attrs.array_acct_attr_code(43) := 'UPG_CR_ENC_TYPE_ID';
   l_rec_acct_attrs.array_num_value(43)  := p_source_55;
   l_rec_acct_attrs.array_acct_attr_code(44) := 'UPG_DR_ENC_TYPE_ID';
   l_rec_acct_attrs.array_num_value(44)  := p_source_56;

   XLA_AE_LINES_PKG.SetLineAcctAttrs(l_rec_acct_attrs);
   p_gain_or_loss_ref  := XLA_AE_LINES_PKG.g_rec_lines.array_gain_or_loss_ref(XLA_AE_LINES_PKG.g_LineNumber);

   ---------------------------------------------------------------------------------------------------------------
   -- 4336173 -- assign Business Flow Class (replace code in xla_ae_lines_pkg.Business_Flow_Validation)
   ---------------------------------------------------------------------------------------------------------------
   XLA_AE_LINES_PKG.g_rec_lines.array_business_class_code(XLA_AE_LINES_PKG.g_LineNumber) := l_bflow_class_code;

   l_actual_upg_option  := XLA_AE_LINES_PKG.g_rec_lines.array_actual_upg_option(XLA_AE_LINES_PKG.g_LineNumber);
   l_enc_upg_option     := XLA_AE_LINES_PKG.g_rec_lines.array_enc_upg_option(XLA_AE_LINES_PKG.g_LineNumber);

   IF xla_accounting_cache_pkg.GetValueChar
         (p_source_code         => 'LEDGER_CATEGORY_CODE'
         ,p_target_ledger_id    => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id) IN ('PRIMARY','ALC')
   AND l_bflow_method_code = 'PRIOR_ENTRY'
--   AND (l_actual_upg_option = 'Y' OR l_enc_upg_option = 'Y') Bug 4922099
   AND ( (NVL(l_actual_upg_option, 'N') IN ('Y', 'O')) OR
         (NVL(l_enc_upg_option, 'N') IN ('Y', 'O'))
       )
   THEN
         xla_ae_lines_pkg.BflowUpgEntry
           (p_business_method_code    => l_bflow_method_code
           ,p_business_class_code     => l_bflow_class_code
           ,p_balance_type            => l_balance_type_code);
   ELSE
      NULL;
-- No business flow processing for business flow method of NONE.
   END IF;

   --
   -- call analytical criteria
   --
   
   --
   -- call description
   --
   
xla_ae_lines_pkg.SetLineDescription(
   p_ae_header_id => l_ae_header_id
  ,p_description  => Description_2 (
     p_application_id         => p_application_id
   , p_ae_header_id           => l_ae_header_id 
, p_source_1 => p_source_1
   )
);


   --
   -- call ADRs
   -- Bug 4922099
   --
   IF ( (l_bflow_method_code <> 'PRIOR_ENTRY') OR
        (NVL(l_actual_upg_option, 'N') = 'O') OR
        (NVL(l_enc_upg_option, 'N') = 'O')
      )
   THEN
   NULL;
   --
   --
   
  l_ccid := AcctDerRule_7(
           p_application_id           => p_application_id
         , p_ae_header_id             => l_ae_header_id 
, p_source_11 => p_source_11
         , x_transaction_coa_id       => l_adr_transaction_coa_id
         , x_accounting_coa_id        => l_adr_accounting_coa_id
         , x_value_type_code          => l_adr_value_type_code
         , p_side                     => 'NA'
   );

   xla_ae_lines_pkg.set_ccid(
    p_code_combination_id          => l_ccid
  , p_value_type_code              => l_adr_value_type_code
  , p_transaction_coa_id           => l_adr_transaction_coa_id
  , p_accounting_coa_id            => l_adr_accounting_coa_id
  , p_adr_code                     => 'AP_INVOICE_DIST'
  , p_adr_type_code                => 'S'
  , p_component_type               => l_component_type
  , p_component_code               => l_component_code
  , p_component_type_code          => l_component_type_code
  , p_component_appl_id            => l_component_appl_id
  , p_amb_context_code             => l_amb_context_code
  , p_side                         => 'NA'
  );


   --
   --
   END IF;
   --
   -- Bug 4922099
   IF ( ( (NVL(l_actual_upg_option, 'N') = 'O') OR
          (NVL(l_enc_upg_option, 'N') = 'O')
        ) AND
        (l_bflow_method_code = 'PRIOR_ENTRY')
      )
   THEN
      IF
      --
      1 = 2
      --
      THEN
      xla_accounting_err_pkg.build_message
                                    (p_appli_s_name            => 'XLA'
                                    ,p_msg_name                => 'XLA_UPG_OVERRIDE_ADR_UNDEFINED'
                                    ,p_token_1                 => 'LINE_NUMBER'
                                    ,p_value_1                 => XLA_AE_LINES_PKG.g_LineNumber
                                    ,p_token_2                 => 'LINE_TYPE_NAME'
                                    ,p_value_2                 => XLA_AE_SOURCES_PKG.GetComponentName (
                                                                             l_component_type
                                                                            ,l_component_code
                                                                            ,l_component_type_code
                                                                            ,l_component_appl_id
                                                                            ,l_amb_context_code
                                                                            ,l_entity_code
                                                                            ,l_event_class_code
                                                                           )
                                    ,p_token_3                 => 'OWNER'
                                    ,p_value_3                 => xla_lookups_pkg.get_meaning(
                                                                          p_lookup_type     => 'XLA_OWNER_TYPE'
                                                                          ,p_lookup_code    => l_component_type_code
                                                                         )
                                    ,p_token_4                 => 'PRODUCT_NAME'
                                    ,p_value_4                 => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.application_name
                                    ,p_entity_id               => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.entity_id
                                    ,p_event_id                => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.event_id
                                    ,p_ledger_id               => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id
                                    ,p_ae_header_id            =>  NULL
                                       );

        IF (C_LEVEL_ERROR>= g_log_level) THEN
                 trace
                      (p_msg      => 'ERROR: XLA_UPG_OVERRIDE_ADR_UNDEFINED'
                      ,p_level    => C_LEVEL_ERROR
                      ,p_module   => l_log_module);
        END IF;
      END IF;
   END IF;
   --
   --
   ------------------------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- NOTE: XLA_AE_LINES_PKG.ValidateCurrentLine should NOT be generated if business flow method is
   -- Prior Entry.  Currently, the following code is always generated.
   ------------------------------------------------------------------------------------------------
   XLA_AE_LINES_PKG.ValidateCurrentLine;

   ------------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- Populated credit and debit amounts -- Need to generate this within IF <condition>
   ------------------------------------------------------------------------------------
   XLA_AE_LINES_PKG.SetDebitCreditAmounts;

   ----------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- Update journal entry status -- Need to generate this within IF <condition>
   ----------------------------------------------------------------------------------
   XLA_AE_JOURNAL_ENTRY_PKG.UpdateJournalEntryStatus
         (p_hdr_idx => g_array_event(p_event_id).array_value_num('header_index')
         ,p_balance_type_code => l_balance_type_code
         );

   -------------------------------------------------------------------------------------------
   -- 4262811 - Generate the Accrual Reversal lines
   -------------------------------------------------------------------------------------------
   BEGIN
      l_acc_rev_flag := XLA_AE_HEADER_PKG.g_rec_header_new.array_accrual_reversal_flag
                              (g_array_event(p_event_id).array_value_num('header_index'));
      IF l_acc_rev_flag IS NULL THEN
         l_acc_rev_flag := 'N';
      END IF;
   EXCEPTION
      WHEN OTHERS THEN
         l_acc_rev_flag := 'N';
   END;
   --
   IF (l_acc_rev_flag = 'Y') THEN

       -- 4645092  ------------------------------------------------------------------------------
       -- To allow MPA report to determine if it should generate report process
       XLA_ACCOUNTING_PKG.g_mpa_accrual_exists := 'Y';
       ------------------------------------------------------------------------------------------

       l_accrual_line_num := XLA_AE_LINES_PKG.g_LineNumber;
       XLA_AE_LINES_PKG.CopyLineInfo(l_accrual_line_num);
   -- added call to set_ccid to execute mapping  for secondary accrual reversal entries bug 7444204
   -- call ADRs
   -- Bug 4922099
   --
   IF ( (l_bflow_method_code <> 'PRIOR_ENTRY') OR
        (NVL(l_actual_upg_option, 'N') = 'O') OR
        (NVL(l_enc_upg_option, 'N') = 'O')
      )
   THEN
   NULL;
   --
   --
   
  l_ccid := AcctDerRule_7(
           p_application_id           => p_application_id
         , p_ae_header_id             => l_ae_header_id 
, p_source_11 => p_source_11
         , x_transaction_coa_id       => l_adr_transaction_coa_id
         , x_accounting_coa_id        => l_adr_accounting_coa_id
         , x_value_type_code          => l_adr_value_type_code
         , p_side                     => 'NA'
   );

   xla_ae_lines_pkg.set_ccid(
    p_code_combination_id          => l_ccid
  , p_value_type_code              => l_adr_value_type_code
  , p_transaction_coa_id           => l_adr_transaction_coa_id
  , p_accounting_coa_id            => l_adr_accounting_coa_id
  , p_adr_code                     => 'AP_INVOICE_DIST'
  , p_adr_type_code                => 'S'
  , p_component_type               => l_component_type
  , p_component_code               => l_component_code
  , p_component_type_code          => l_component_type_code
  , p_component_appl_id            => l_component_appl_id
  , p_amb_context_code             => l_amb_context_code
  , p_side                         => 'NA'
  );


   --
   --
   END IF;

       --
       -- Update the line information that should be overwritten
       --
       XLA_AE_LINES_PKG.set_ae_header_id(p_ae_header_id => p_event_id ,
                                         p_header_num   => 1);
       XLA_AE_LINES_PKG.g_rec_lines.array_header_num(XLA_AE_LINES_PKG.g_LineNumber)  :=1;

       XLA_AE_LINES_PKG.g_rec_lines.array_business_class_code(XLA_AE_LINES_PKG.g_LineNumber) := NULL; -- 4669271

       IF l_bflow_method_code <> 'NONE' THEN  -- 4655713b
          XLA_AE_LINES_PKG.g_rec_lines.array_reversal_code(XLA_AE_LINES_PKG.g_LineNumber) := CONCAT('MPA_',l_bflow_method_code);
       END IF;

      --
      -- Depending on the Reversal Method setup, do a switch side or changes sign for the amounts
      --
      IF (XLA_AE_JOURNAL_ENTRY_PKG.g_cache_ledgers_info.ledger_reversal_option = 'SIDE') THEN
          XLA_AE_LINES_PKG.g_rec_lines.array_natural_side_code(XLA_AE_LINES_PKG.g_LineNumber) :=  l_acc_rev_natural_side_code;
      ELSE
          ---------------------------------------------------------------------------------------------------
          -- 4262811a Switch Sign
          ---------------------------------------------------------------------------------------------------
          XLA_AE_LINES_PKG.g_rec_lines.array_switch_side_flag(XLA_AE_LINES_PKG.g_LineNumber) := 'N';  -- 5052518
          XLA_AE_LINES_PKG.g_rec_lines.array_ledger_amount(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_ledger_amount(XLA_AE_LINES_PKG.g_LineNumber) * -1;
          XLA_AE_LINES_PKG.g_rec_lines.array_entered_amount(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_entered_amount(XLA_AE_LINES_PKG.g_LineNumber) * -1;
          -- 5132302
          XLA_AE_LINES_PKG.g_rec_lines.array_bflow_applied_to_amt(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_bflow_applied_to_amt(XLA_AE_LINES_PKG.g_LineNumber) * -1;

      END IF;

      -- 4955764
      XLA_AE_LINES_PKG.g_rec_lines.array_gl_date(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_HEADER_PKG.g_rec_header_new.array_gl_date(g_array_event(p_event_id).array_value_num('acc_rev_header_index'));


      XLA_AE_LINES_PKG.ValidateCurrentLine;
      XLA_AE_LINES_PKG.SetDebitCreditAmounts;

      XLA_AE_JOURNAL_ENTRY_PKG.UpdateJournalEntryStatus
               (p_hdr_idx           => g_array_event(p_event_id).array_value_num('acc_rev_header_index')
               ,p_balance_type_code => l_balance_type_code);

   END IF;

   -----------------------------------------------------------------------------------------
   -- 4262811 Multiperiod Accounting
   -----------------------------------------------------------------------------------------
     -- No MPA option is assigned.


END IF;
END IF;
--

--
IF (C_LEVEL_PROCEDURE >= g_log_level) THEN
   trace
      (p_msg      => 'END of AcctLineType_79'
      ,p_level    => C_LEVEL_PROCEDURE
      ,p_module   => l_log_module);
END IF;
--
EXCEPTION
  WHEN xla_exceptions_pkg.application_exception THEN
      RAISE;
  WHEN OTHERS THEN
       xla_exceptions_pkg.raise_message
           (p_location => 'XLA_00200_AAD_S_000010_BC_PKG.AcctLineType_79');
END AcctLineType_79;
--

---------------------------------------
--
-- PRIVATE FUNCTION
--         AcctLineType_80
--
---------------------------------------
PROCEDURE AcctLineType_80 (
  p_application_id        IN NUMBER
 ,p_event_id              IN NUMBER
 ,p_calculate_acctd_flag  IN VARCHAR2
 ,p_calculate_g_l_flag    IN VARCHAR2
 ,p_actual_flag           IN OUT VARCHAR2
 ,p_balance_type_code     OUT VARCHAR2
 ,p_gain_or_loss_ref      OUT VARCHAR2
 
--Invoice Distribution Description
 , p_source_1            IN VARCHAR2
--Invoice Distribution Account
 , p_source_11            IN NUMBER
--Invoice Distribution Type
 , p_source_15            IN VARCHAR2
 , p_source_15_meaning    IN VARCHAR2
--Purchasing Encumbrance Option
 , p_source_17            IN VARCHAR2
 , p_source_17_meaning    IN VARCHAR2
--Accrue on Receipt Option
 , p_source_18            IN VARCHAR2
 , p_source_18_meaning    IN VARCHAR2
--Accounting Reversal Indicator
 , p_source_19            IN VARCHAR2
--Distribution Link Type
 , p_source_21            IN VARCHAR2
--Allocation to Main Distribution Identifier
 , p_source_23            IN NUMBER
--Invoice Identifier
 , p_source_24            IN NUMBER
--Business Flow Accounts Payable Application Identifier
 , p_source_25            IN NUMBER
--Business Flow Invoice Distribution Type
 , p_source_26            IN VARCHAR2
--Business Flow Invoice Entity Code
 , p_source_27            IN VARCHAR2
--Business Flow Invoice Distribution Identifier
 , p_source_28            IN NUMBER
--Business Flow Invoice Identifier
 , p_source_29            IN NUMBER
--Invoice Distribution Identifier
 , p_source_30            IN NUMBER
--Payables Encumbrance Upgrade Credit Account
 , p_source_31            IN NUMBER
--Payables Encumbrance Upgrade Credit Amount
 , p_source_32            IN NUMBER
--Invoice Currency Code
 , p_source_33            IN VARCHAR2
--Payables Encumbrance Upgrade Credit Base Amount
 , p_source_34            IN NUMBER
--Payables Encumbrance Upgrade Debit Account
 , p_source_35            IN NUMBER
--Payables Encumbrance Upgrade Debit Amount
 , p_source_36            IN NUMBER
--Payables Encumbrance Upgrade Debit Base Amount
 , p_source_37            IN NUMBER
--Payables Encumbrance Upgrade Option
 , p_source_38            IN VARCHAR2
--Invoice Exchange Date
 , p_source_39            IN DATE
--Invoice Exchange Rate
 , p_source_40            IN NUMBER
--Invoice Exchange Rate Type
 , p_source_41            IN VARCHAR2
--Deferred Accounting End Date
 , p_source_43            IN DATE
--Deferred Accounting Option
 , p_source_44            IN VARCHAR2
--Deferred Accounting Start Date
 , p_source_45            IN DATE
--Override Accounted Amount Indicator
 , p_source_46            IN VARCHAR2
 , p_source_46_meaning    IN VARCHAR2
--Invoice Supplier Identifier
 , p_source_47            IN NUMBER
--Invoice Supplier Site Identifier
 , p_source_48            IN NUMBER
--Third Party Type
 , p_source_49            IN VARCHAR2
--Parent Reversal Identifier
 , p_source_50            IN NUMBER
--Invoice Distribution Statistical Amount
 , p_source_51            IN NUMBER
--Invoice Distribution Tax Line Identifier
 , p_source_52            IN NUMBER
--Invoice Distribution Tax Distribution Identifier from Tax
 , p_source_53            IN NUMBER
--Invoice Distribution Summary Tax Line Identifier
 , p_source_54            IN NUMBER
--Payables Upgrade Credit Encumbrance Type Identifier
 , p_source_55            IN NUMBER
--Payables Upgrade Debit Encumbrance Type Identifier
 , p_source_56            IN NUMBER
--Quantity Variance Amount
 , p_source_81            IN NUMBER
--Quantity Variance Amount in Ledger Currency
 , p_source_82            IN NUMBER
)
IS

l_component_type              VARCHAR2(80);
l_component_code              VARCHAR2(30);
l_component_type_code         VARCHAR2(1);
l_component_appl_id           INTEGER;
l_amb_context_code            VARCHAR2(30);
l_entity_code                 VARCHAR2(30);
l_event_class_code            VARCHAR2(30);
l_ae_header_id                NUMBER;
l_event_type_code             VARCHAR2(30);
l_line_definition_code        VARCHAR2(30);
l_line_definition_owner_code  VARCHAR2(1);
--
-- adr variables
l_segment                     VARCHAR2(30);
l_ccid                        NUMBER;
l_adr_transaction_coa_id      NUMBER;
l_adr_accounting_coa_id       NUMBER;
l_adr_flexfield_segment_code  VARCHAR2(30);
l_adr_flex_value_set_id       NUMBER;
l_adr_value_type_code         VARCHAR2(30);
l_adr_value_combination_id    NUMBER;
l_adr_value_segment_code      VARCHAR2(30);

l_bflow_method_code           VARCHAR2(30);  -- 4219869 Business Flow
l_bflow_class_code            VARCHAR2(30);  -- 4219869 Business Flow
l_inherit_desc_flag           VARCHAR2(1);   -- 4219869 Business Flow
l_budgetary_control_flag      VARCHAR2(1);   -- 4458381 Public Sector Enh

-- 4262811 Variables ------------------------------------------------------------------------------------------
l_entered_amt_idx             NUMBER;
l_accted_amt_idx              NUMBER;
l_acc_rev_flag                VARCHAR2(1);
l_accrual_line_num            NUMBER;
l_tmp_amt                     NUMBER;
l_acc_rev_natural_side_code   VARCHAR2(1);

l_num_entries                 NUMBER;
l_gl_dates                    xla_ae_journal_entry_pkg.t_array_date;
l_accted_amts                 xla_ae_journal_entry_pkg.t_array_num;
l_entered_amts                xla_ae_journal_entry_pkg.t_array_num;
l_period_names                xla_ae_journal_entry_pkg.t_array_V15L;
l_recog_line_1                NUMBER;
l_recog_line_2                NUMBER;

l_bflow_applied_to_amt_idx    NUMBER;                                -- 5132302
l_bflow_applied_to_amt        NUMBER;                                -- 5132302
l_bflow_applied_to_amts       xla_ae_journal_entry_pkg.t_array_num;  -- 5132302

l_event_id                    NUMBER;  -- To handle MPA header Description: xla_ae_header_pkg.SetHdrDescription

--l_rounding_ccy                VARCHAR2(15); -- To handle MPA rounding  4262811b
l_same_currency               BOOLEAN;        -- To handle MPA rounding  4262811b

---------------------------------------------------------------------------------------------------------------


--
-- bulk performance
--
l_balance_type_code           VARCHAR2(1);
l_rec_acct_attrs              XLA_AE_LINES_PKG.t_rec_acct_attrs;
l_log_module                  VARCHAR2(240);

--
-- Upgrade strategy
--
l_actual_upg_option           VARCHAR2(1);
l_enc_upg_option           VARCHAR2(1);

--
BEGIN
--
IF g_log_enabled THEN
      l_log_module := C_DEFAULT_MODULE||'.AcctLineType_80';
END IF;
--
IF (C_LEVEL_PROCEDURE >= g_log_level) THEN

      trace
         (p_msg      => 'BEGIN of AcctLineType_80'
         ,p_level    => C_LEVEL_PROCEDURE
         ,p_module   => l_log_module);

END IF;
--
l_component_type             := 'AMB_JLT';
l_component_code             := 'AP_TAX_QTY_VARIANCE_PP_ENC_DR';
l_component_type_code        := 'S';
l_component_appl_id          :=  200;
l_amb_context_code           := 'DEFAULT';
l_entity_code                := 'AP_INVOICES';
l_event_class_code           := 'PREPAYMENTS';
l_event_type_code            := 'PREPAYMENTS_ALL';
l_line_definition_owner_code := 'S';
l_line_definition_code       := 'ENC_PREPAY_ALL';
--
l_balance_type_code          := 'E';
l_segment                     := NULL;
l_ccid                        := NULL;
l_adr_transaction_coa_id      := NULL;
l_adr_accounting_coa_id       := NULL;
l_adr_flexfield_segment_code  := NULL;
l_adr_flex_value_set_id       := NULL;
l_adr_value_type_code         := NULL;
l_adr_value_combination_id    := NULL;
l_adr_value_segment_code      := NULL;

l_bflow_method_code          := 'NONE';   -- 4219869 Business Flow
l_bflow_class_code           := 'AP_INV_ENCUM';    -- 4219869 Business Flow
l_inherit_desc_flag          := 'N';   -- 4219869 Business Flow
l_budgetary_control_flag     := 'Y';

l_bflow_applied_to_amt_idx   := NULL; -- 5132302
l_bflow_applied_to_amt       := NULL; -- 5132302
l_entered_amt_idx            := NULL;          -- 4262811
l_accted_amt_idx             := NULL;          -- 4262811
l_acc_rev_flag               := NULL;          -- 4262811
l_accrual_line_num           := NULL;          -- 4262811
l_tmp_amt                    := NULL;          -- 4262811
--
 
IF XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id = XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.ledger_id OR
    l_balance_type_code <> 'B' THEN
IF NVL(p_source_15,'
') =  'NONREC_TAX' AND 
p_source_81 IS NOT NULL AND 
NVL(p_source_17,'
') =  'Y' AND 
NVL(p_source_18,'
') <>  'Y'
 THEN 

   --
   XLA_AE_LINES_PKG.SetNewLine;

   p_balance_type_code          := l_balance_type_code;
   -- set the flag so later we will know whether the gain loss line needs to be created
   
   IF(l_balance_type_code = 'A' and p_actual_flag is null) THEN
     p_actual_flag :='A';
   END IF;

   --
   -- bulk performance
   --
   XLA_AE_LINES_PKG.set_ae_header_id (p_ae_header_id => p_event_id ,
                                      p_header_num   => 0); -- 4262811
   --
   -- set accounting line options
   --
   l_ae_header_id:= xla_ae_lines_pkg.SetAcctLineOption(
           p_natural_side_code          => 'D'
         , p_gain_or_loss_flag          => 'N'
         , p_gl_transfer_mode_code      => 'S'
         , p_acct_entry_type_code       => 'E'
         , p_switch_side_flag           => 'Y'
         , p_merge_duplicate_code       => 'N'
         );
   --
   l_acc_rev_natural_side_code := 'C';  -- 4262811
   -- 
   --
   -- set accounting line type info
   --
   xla_ae_lines_pkg.SetAcctLineType
      (p_component_type             => l_component_type
      ,p_event_type_code            => l_event_type_code
      ,p_line_definition_owner_code => l_line_definition_owner_code
      ,p_line_definition_code       => l_line_definition_code
      ,p_accounting_line_code       => l_component_code
      ,p_accounting_line_type_code  => l_component_type_code
      ,p_accounting_line_appl_id    => l_component_appl_id
      ,p_amb_context_code           => l_amb_context_code
      ,p_entity_code                => l_entity_code
      ,p_event_class_code           => l_event_class_code);
   --
   -- set accounting class
   --
   xla_ae_lines_pkg.SetAcctClass(
           p_accounting_class_code  => 'TQV'
         , p_ae_header_id           => l_ae_header_id
         );

   --
   -- set rounding class
   --
   XLA_AE_LINES_PKG.g_rec_lines.array_rounding_class(XLA_AE_LINES_PKG.g_LineNumber) :=
                      'TQV';

   --
   xla_ae_lines_pkg.g_rec_lines.array_calculate_acctd_flag(xla_ae_lines_pkg.g_LineNumber) := p_calculate_acctd_flag;
   xla_ae_lines_pkg.g_rec_lines.array_calculate_g_l_flag(xla_ae_lines_pkg.g_LineNumber) := p_calculate_g_l_flag;
   --
   -- bulk performance
   --
   XLA_AE_LINES_PKG.g_rec_lines.array_balance_type_code(XLA_AE_LINES_PKG.g_LineNumber) := l_balance_type_code;

   XLA_AE_LINES_PKG.g_rec_lines.array_ledger_id(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id;

   -- 4955764
   XLA_AE_LINES_PKG.g_rec_lines.array_gl_date(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_HEADER_PKG.g_rec_header_new.array_gl_date(g_array_event(p_event_id).array_value_num('header_index'));

   -- 4458381 Public Sector Enh
      XLA_AE_LINES_PKG.g_rec_lines.array_encumbrance_type_id(XLA_AE_LINES_PKG.g_LineNumber) := 1060;
   --
   -- set accounting attributes for the line type
   --
   l_entered_amt_idx := 23;
   l_accted_amt_idx  := 28;
   l_bflow_applied_to_amt_idx  := NULL;  -- 5132302
   l_rec_acct_attrs.array_acct_attr_code(1) := 'ACCOUNTING_REVERSAL_OPTION';
   l_rec_acct_attrs.array_char_value(1)  := p_source_19;
   l_rec_acct_attrs.array_acct_attr_code(2) := 'ALLOC_TO_APPLICATION_ID';
   l_rec_acct_attrs.array_num_value(2)  := 
xla_ae_sources_pkg.GetSystemSourceNum(
   p_source_code           => 'XLA_EVENT_APPL_ID'
 , p_source_type_code      => 'Y'
 , p_source_application_id =>  602
);
   l_rec_acct_attrs.array_acct_attr_code(3) := 'ALLOC_TO_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(3)  := p_source_21;
   l_rec_acct_attrs.array_acct_attr_code(4) := 'ALLOC_TO_ENTITY_CODE';
   l_rec_acct_attrs.array_char_value(4)  := 
xla_ae_sources_pkg.GetSystemSourceChar(
   p_source_code           => 'XLA_ENTITY_CODE'
 , p_source_type_code      => 'Y'
 , p_source_application_id =>  602
);
   l_rec_acct_attrs.array_acct_attr_code(5) := 'ALLOC_TO_FIRST_DIST_ID';
   l_rec_acct_attrs.array_num_value(5)  :=  to_char(p_source_23);
   l_rec_acct_attrs.array_acct_attr_code(6) := 'ALLOC_TO_FIRST_SYS_TRAN_ID';
   l_rec_acct_attrs.array_num_value(6)  :=  to_char(p_source_24);
   l_rec_acct_attrs.array_acct_attr_code(7) := 'APPLIED_TO_APPLICATION_ID';
   l_rec_acct_attrs.array_num_value(7)  := p_source_25;
   l_rec_acct_attrs.array_acct_attr_code(8) := 'APPLIED_TO_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(8)  := p_source_26;
   l_rec_acct_attrs.array_acct_attr_code(9) := 'APPLIED_TO_ENTITY_CODE';
   l_rec_acct_attrs.array_char_value(9)  := p_source_27;
   l_rec_acct_attrs.array_acct_attr_code(10) := 'APPLIED_TO_FIRST_DIST_ID';
   l_rec_acct_attrs.array_num_value(10)  :=  to_char(p_source_28);
   l_rec_acct_attrs.array_acct_attr_code(11) := 'APPLIED_TO_FIRST_SYS_TRAN_ID';
   l_rec_acct_attrs.array_num_value(11)  :=  to_char(p_source_29);
   l_rec_acct_attrs.array_acct_attr_code(12) := 'DISTRIBUTION_IDENTIFIER_1';
   l_rec_acct_attrs.array_num_value(12)  :=  to_char(p_source_30);
   l_rec_acct_attrs.array_acct_attr_code(13) := 'DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(13)  := p_source_21;
   l_rec_acct_attrs.array_acct_attr_code(14) := 'ENC_UPG_CR_CCID';
   l_rec_acct_attrs.array_num_value(14)  := p_source_31;
   l_rec_acct_attrs.array_acct_attr_code(15) := 'ENC_UPG_CR_ENTERED_AMT';
   l_rec_acct_attrs.array_num_value(15)  := p_source_32;
   l_rec_acct_attrs.array_acct_attr_code(16) := 'ENC_UPG_CR_ENTERED_CURR';
   l_rec_acct_attrs.array_char_value(16)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(17) := 'ENC_UPG_CR_LEDGER_AMT';
   l_rec_acct_attrs.array_num_value(17)  := p_source_34;
   l_rec_acct_attrs.array_acct_attr_code(18) := 'ENC_UPG_DR_CCID';
   l_rec_acct_attrs.array_num_value(18)  := p_source_35;
   l_rec_acct_attrs.array_acct_attr_code(19) := 'ENC_UPG_DR_ENTERED_AMT';
   l_rec_acct_attrs.array_num_value(19)  := p_source_36;
   l_rec_acct_attrs.array_acct_attr_code(20) := 'ENC_UPG_DR_ENTERED_CURR';
   l_rec_acct_attrs.array_char_value(20)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(21) := 'ENC_UPG_DR_LEDGER_AMT';
   l_rec_acct_attrs.array_num_value(21)  := p_source_37;
   l_rec_acct_attrs.array_acct_attr_code(22) := 'ENC_UPG_OPTION';
   l_rec_acct_attrs.array_char_value(22)  := p_source_38;
   l_rec_acct_attrs.array_acct_attr_code(23) := 'ENTERED_CURRENCY_AMOUNT';
   l_rec_acct_attrs.array_num_value(23)  := p_source_81;
   l_rec_acct_attrs.array_acct_attr_code(24) := 'ENTERED_CURRENCY_CODE';
   l_rec_acct_attrs.array_char_value(24)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(25) := 'EXCHANGE_DATE';
   l_rec_acct_attrs.array_date_value(25)  := p_source_39;
   l_rec_acct_attrs.array_acct_attr_code(26) := 'EXCHANGE_RATE';
   l_rec_acct_attrs.array_num_value(26)  := p_source_40;
   l_rec_acct_attrs.array_acct_attr_code(27) := 'EXCHANGE_RATE_TYPE';
   l_rec_acct_attrs.array_char_value(27)  := p_source_41;
   l_rec_acct_attrs.array_acct_attr_code(28) := 'LEDGER_AMOUNT';
   l_rec_acct_attrs.array_num_value(28)  := p_source_82;
   l_rec_acct_attrs.array_acct_attr_code(29) := 'MULTIPERIOD_END_DATE';
   l_rec_acct_attrs.array_date_value(29)  := p_source_43;
   l_rec_acct_attrs.array_acct_attr_code(30) := 'MULTIPERIOD_OPTION';
   l_rec_acct_attrs.array_char_value(30)  := p_source_44;
   l_rec_acct_attrs.array_acct_attr_code(31) := 'MULTIPERIOD_START_DATE';
   l_rec_acct_attrs.array_date_value(31)  := p_source_45;
   l_rec_acct_attrs.array_acct_attr_code(32) := 'OVERRIDE_ACCTD_AMT_FLAG';
   l_rec_acct_attrs.array_char_value(32)  := p_source_46;
   l_rec_acct_attrs.array_acct_attr_code(33) := 'PARTY_ID';
   l_rec_acct_attrs.array_num_value(33)  := p_source_47;
   l_rec_acct_attrs.array_acct_attr_code(34) := 'PARTY_SITE_ID';
   l_rec_acct_attrs.array_num_value(34)  := p_source_48;
   l_rec_acct_attrs.array_acct_attr_code(35) := 'PARTY_TYPE';
   l_rec_acct_attrs.array_char_value(35)  := p_source_49;
   l_rec_acct_attrs.array_acct_attr_code(36) := 'REVERSED_DISTRIBUTION_ID1';
   l_rec_acct_attrs.array_num_value(36)  :=  to_char(p_source_50);
   l_rec_acct_attrs.array_acct_attr_code(37) := 'REVERSED_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(37)  := p_source_21;
   l_rec_acct_attrs.array_acct_attr_code(38) := 'STATISTICAL_AMOUNT';
   l_rec_acct_attrs.array_num_value(38)  := p_source_51;
   l_rec_acct_attrs.array_acct_attr_code(39) := 'TAX_LINE_REF_ID';
   l_rec_acct_attrs.array_num_value(39)  := p_source_52;
   l_rec_acct_attrs.array_acct_attr_code(40) := 'TAX_REC_NREC_DIST_REF_ID';
   l_rec_acct_attrs.array_num_value(40)  := p_source_53;
   l_rec_acct_attrs.array_acct_attr_code(41) := 'TAX_SUMMARY_LINE_REF_ID';
   l_rec_acct_attrs.array_num_value(41)  := p_source_54;
   l_rec_acct_attrs.array_acct_attr_code(42) := 'UPG_CR_ENC_TYPE_ID';
   l_rec_acct_attrs.array_num_value(42)  := p_source_55;
   l_rec_acct_attrs.array_acct_attr_code(43) := 'UPG_DR_ENC_TYPE_ID';
   l_rec_acct_attrs.array_num_value(43)  := p_source_56;

   XLA_AE_LINES_PKG.SetLineAcctAttrs(l_rec_acct_attrs);
   p_gain_or_loss_ref  := XLA_AE_LINES_PKG.g_rec_lines.array_gain_or_loss_ref(XLA_AE_LINES_PKG.g_LineNumber);

   ---------------------------------------------------------------------------------------------------------------
   -- 4336173 -- assign Business Flow Class (replace code in xla_ae_lines_pkg.Business_Flow_Validation)
   ---------------------------------------------------------------------------------------------------------------
   XLA_AE_LINES_PKG.g_rec_lines.array_business_class_code(XLA_AE_LINES_PKG.g_LineNumber) := l_bflow_class_code;

   l_actual_upg_option  := XLA_AE_LINES_PKG.g_rec_lines.array_actual_upg_option(XLA_AE_LINES_PKG.g_LineNumber);
   l_enc_upg_option     := XLA_AE_LINES_PKG.g_rec_lines.array_enc_upg_option(XLA_AE_LINES_PKG.g_LineNumber);

   IF xla_accounting_cache_pkg.GetValueChar
         (p_source_code         => 'LEDGER_CATEGORY_CODE'
         ,p_target_ledger_id    => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id) IN ('PRIMARY','ALC')
   AND l_bflow_method_code = 'PRIOR_ENTRY'
--   AND (l_actual_upg_option = 'Y' OR l_enc_upg_option = 'Y') Bug 4922099
   AND ( (NVL(l_actual_upg_option, 'N') IN ('Y', 'O')) OR
         (NVL(l_enc_upg_option, 'N') IN ('Y', 'O'))
       )
   THEN
         xla_ae_lines_pkg.BflowUpgEntry
           (p_business_method_code    => l_bflow_method_code
           ,p_business_class_code     => l_bflow_class_code
           ,p_balance_type            => l_balance_type_code);
   ELSE
      NULL;
-- No business flow processing for business flow method of NONE.
   END IF;

   --
   -- call analytical criteria
   --
   
   --
   -- call description
   --
   
xla_ae_lines_pkg.SetLineDescription(
   p_ae_header_id => l_ae_header_id
  ,p_description  => Description_2 (
     p_application_id         => p_application_id
   , p_ae_header_id           => l_ae_header_id 
, p_source_1 => p_source_1
   )
);


   --
   -- call ADRs
   -- Bug 4922099
   --
   IF ( (l_bflow_method_code <> 'PRIOR_ENTRY') OR
        (NVL(l_actual_upg_option, 'N') = 'O') OR
        (NVL(l_enc_upg_option, 'N') = 'O')
      )
   THEN
   NULL;
   --
   --
   
  l_ccid := AcctDerRule_7(
           p_application_id           => p_application_id
         , p_ae_header_id             => l_ae_header_id 
, p_source_11 => p_source_11
         , x_transaction_coa_id       => l_adr_transaction_coa_id
         , x_accounting_coa_id        => l_adr_accounting_coa_id
         , x_value_type_code          => l_adr_value_type_code
         , p_side                     => 'NA'
   );

   xla_ae_lines_pkg.set_ccid(
    p_code_combination_id          => l_ccid
  , p_value_type_code              => l_adr_value_type_code
  , p_transaction_coa_id           => l_adr_transaction_coa_id
  , p_accounting_coa_id            => l_adr_accounting_coa_id
  , p_adr_code                     => 'AP_INVOICE_DIST'
  , p_adr_type_code                => 'S'
  , p_component_type               => l_component_type
  , p_component_code               => l_component_code
  , p_component_type_code          => l_component_type_code
  , p_component_appl_id            => l_component_appl_id
  , p_amb_context_code             => l_amb_context_code
  , p_side                         => 'NA'
  );


   --
   --
   END IF;
   --
   -- Bug 4922099
   IF ( ( (NVL(l_actual_upg_option, 'N') = 'O') OR
          (NVL(l_enc_upg_option, 'N') = 'O')
        ) AND
        (l_bflow_method_code = 'PRIOR_ENTRY')
      )
   THEN
      IF
      --
      1 = 2
      --
      THEN
      xla_accounting_err_pkg.build_message
                                    (p_appli_s_name            => 'XLA'
                                    ,p_msg_name                => 'XLA_UPG_OVERRIDE_ADR_UNDEFINED'
                                    ,p_token_1                 => 'LINE_NUMBER'
                                    ,p_value_1                 => XLA_AE_LINES_PKG.g_LineNumber
                                    ,p_token_2                 => 'LINE_TYPE_NAME'
                                    ,p_value_2                 => XLA_AE_SOURCES_PKG.GetComponentName (
                                                                             l_component_type
                                                                            ,l_component_code
                                                                            ,l_component_type_code
                                                                            ,l_component_appl_id
                                                                            ,l_amb_context_code
                                                                            ,l_entity_code
                                                                            ,l_event_class_code
                                                                           )
                                    ,p_token_3                 => 'OWNER'
                                    ,p_value_3                 => xla_lookups_pkg.get_meaning(
                                                                          p_lookup_type     => 'XLA_OWNER_TYPE'
                                                                          ,p_lookup_code    => l_component_type_code
                                                                         )
                                    ,p_token_4                 => 'PRODUCT_NAME'
                                    ,p_value_4                 => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.application_name
                                    ,p_entity_id               => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.entity_id
                                    ,p_event_id                => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.event_id
                                    ,p_ledger_id               => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id
                                    ,p_ae_header_id            =>  NULL
                                       );

        IF (C_LEVEL_ERROR>= g_log_level) THEN
                 trace
                      (p_msg      => 'ERROR: XLA_UPG_OVERRIDE_ADR_UNDEFINED'
                      ,p_level    => C_LEVEL_ERROR
                      ,p_module   => l_log_module);
        END IF;
      END IF;
   END IF;
   --
   --
   ------------------------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- NOTE: XLA_AE_LINES_PKG.ValidateCurrentLine should NOT be generated if business flow method is
   -- Prior Entry.  Currently, the following code is always generated.
   ------------------------------------------------------------------------------------------------
   XLA_AE_LINES_PKG.ValidateCurrentLine;

   ------------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- Populated credit and debit amounts -- Need to generate this within IF <condition>
   ------------------------------------------------------------------------------------
   XLA_AE_LINES_PKG.SetDebitCreditAmounts;

   ----------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- Update journal entry status -- Need to generate this within IF <condition>
   ----------------------------------------------------------------------------------
   XLA_AE_JOURNAL_ENTRY_PKG.UpdateJournalEntryStatus
         (p_hdr_idx => g_array_event(p_event_id).array_value_num('header_index')
         ,p_balance_type_code => l_balance_type_code
         );

   -------------------------------------------------------------------------------------------
   -- 4262811 - Generate the Accrual Reversal lines
   -------------------------------------------------------------------------------------------
   BEGIN
      l_acc_rev_flag := XLA_AE_HEADER_PKG.g_rec_header_new.array_accrual_reversal_flag
                              (g_array_event(p_event_id).array_value_num('header_index'));
      IF l_acc_rev_flag IS NULL THEN
         l_acc_rev_flag := 'N';
      END IF;
   EXCEPTION
      WHEN OTHERS THEN
         l_acc_rev_flag := 'N';
   END;
   --
   IF (l_acc_rev_flag = 'Y') THEN

       -- 4645092  ------------------------------------------------------------------------------
       -- To allow MPA report to determine if it should generate report process
       XLA_ACCOUNTING_PKG.g_mpa_accrual_exists := 'Y';
       ------------------------------------------------------------------------------------------

       l_accrual_line_num := XLA_AE_LINES_PKG.g_LineNumber;
       XLA_AE_LINES_PKG.CopyLineInfo(l_accrual_line_num);
   -- added call to set_ccid to execute mapping  for secondary accrual reversal entries bug 7444204
   -- call ADRs
   -- Bug 4922099
   --
   IF ( (l_bflow_method_code <> 'PRIOR_ENTRY') OR
        (NVL(l_actual_upg_option, 'N') = 'O') OR
        (NVL(l_enc_upg_option, 'N') = 'O')
      )
   THEN
   NULL;
   --
   --
   
  l_ccid := AcctDerRule_7(
           p_application_id           => p_application_id
         , p_ae_header_id             => l_ae_header_id 
, p_source_11 => p_source_11
         , x_transaction_coa_id       => l_adr_transaction_coa_id
         , x_accounting_coa_id        => l_adr_accounting_coa_id
         , x_value_type_code          => l_adr_value_type_code
         , p_side                     => 'NA'
   );

   xla_ae_lines_pkg.set_ccid(
    p_code_combination_id          => l_ccid
  , p_value_type_code              => l_adr_value_type_code
  , p_transaction_coa_id           => l_adr_transaction_coa_id
  , p_accounting_coa_id            => l_adr_accounting_coa_id
  , p_adr_code                     => 'AP_INVOICE_DIST'
  , p_adr_type_code                => 'S'
  , p_component_type               => l_component_type
  , p_component_code               => l_component_code
  , p_component_type_code          => l_component_type_code
  , p_component_appl_id            => l_component_appl_id
  , p_amb_context_code             => l_amb_context_code
  , p_side                         => 'NA'
  );


   --
   --
   END IF;

       --
       -- Update the line information that should be overwritten
       --
       XLA_AE_LINES_PKG.set_ae_header_id(p_ae_header_id => p_event_id ,
                                         p_header_num   => 1);
       XLA_AE_LINES_PKG.g_rec_lines.array_header_num(XLA_AE_LINES_PKG.g_LineNumber)  :=1;

       XLA_AE_LINES_PKG.g_rec_lines.array_business_class_code(XLA_AE_LINES_PKG.g_LineNumber) := NULL; -- 4669271

       IF l_bflow_method_code <> 'NONE' THEN  -- 4655713b
          XLA_AE_LINES_PKG.g_rec_lines.array_reversal_code(XLA_AE_LINES_PKG.g_LineNumber) := CONCAT('MPA_',l_bflow_method_code);
       END IF;

      --
      -- Depending on the Reversal Method setup, do a switch side or changes sign for the amounts
      --
      IF (XLA_AE_JOURNAL_ENTRY_PKG.g_cache_ledgers_info.ledger_reversal_option = 'SIDE') THEN
          XLA_AE_LINES_PKG.g_rec_lines.array_natural_side_code(XLA_AE_LINES_PKG.g_LineNumber) :=  l_acc_rev_natural_side_code;
      ELSE
          ---------------------------------------------------------------------------------------------------
          -- 4262811a Switch Sign
          ---------------------------------------------------------------------------------------------------
          XLA_AE_LINES_PKG.g_rec_lines.array_switch_side_flag(XLA_AE_LINES_PKG.g_LineNumber) := 'N';  -- 5052518
          XLA_AE_LINES_PKG.g_rec_lines.array_ledger_amount(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_ledger_amount(XLA_AE_LINES_PKG.g_LineNumber) * -1;
          XLA_AE_LINES_PKG.g_rec_lines.array_entered_amount(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_entered_amount(XLA_AE_LINES_PKG.g_LineNumber) * -1;
          -- 5132302
          XLA_AE_LINES_PKG.g_rec_lines.array_bflow_applied_to_amt(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_bflow_applied_to_amt(XLA_AE_LINES_PKG.g_LineNumber) * -1;

      END IF;

      -- 4955764
      XLA_AE_LINES_PKG.g_rec_lines.array_gl_date(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_HEADER_PKG.g_rec_header_new.array_gl_date(g_array_event(p_event_id).array_value_num('acc_rev_header_index'));


      XLA_AE_LINES_PKG.ValidateCurrentLine;
      XLA_AE_LINES_PKG.SetDebitCreditAmounts;

      XLA_AE_JOURNAL_ENTRY_PKG.UpdateJournalEntryStatus
               (p_hdr_idx           => g_array_event(p_event_id).array_value_num('acc_rev_header_index')
               ,p_balance_type_code => l_balance_type_code);

   END IF;

   -----------------------------------------------------------------------------------------
   -- 4262811 Multiperiod Accounting
   -----------------------------------------------------------------------------------------
     -- No MPA option is assigned.


END IF;
END IF;
--

--
IF (C_LEVEL_PROCEDURE >= g_log_level) THEN
   trace
      (p_msg      => 'END of AcctLineType_80'
      ,p_level    => C_LEVEL_PROCEDURE
      ,p_module   => l_log_module);
END IF;
--
EXCEPTION
  WHEN xla_exceptions_pkg.application_exception THEN
      RAISE;
  WHEN OTHERS THEN
       xla_exceptions_pkg.raise_message
           (p_location => 'XLA_00200_AAD_S_000010_BC_PKG.AcctLineType_80');
END AcctLineType_80;
--

---------------------------------------
--
-- PRIVATE FUNCTION
--         AcctLineType_81
--
---------------------------------------
PROCEDURE AcctLineType_81 (
  p_application_id        IN NUMBER
 ,p_event_id              IN NUMBER
 ,p_calculate_acctd_flag  IN VARCHAR2
 ,p_calculate_g_l_flag    IN VARCHAR2
 ,p_actual_flag           IN OUT VARCHAR2
 ,p_balance_type_code     OUT VARCHAR2
 ,p_gain_or_loss_ref      OUT VARCHAR2
 
--Invoice Distribution Description
 , p_source_1            IN VARCHAR2
--Invoice Distribution Account
 , p_source_11            IN NUMBER
--Invoice Distribution Type
 , p_source_15            IN VARCHAR2
 , p_source_15_meaning    IN VARCHAR2
--Purchasing Encumbrance Option
 , p_source_17            IN VARCHAR2
 , p_source_17_meaning    IN VARCHAR2
--Accounting Reversal Indicator
 , p_source_19            IN VARCHAR2
--Distribution Link Type
 , p_source_21            IN VARCHAR2
--Allocation to Main Distribution Identifier
 , p_source_23            IN NUMBER
--Invoice Identifier
 , p_source_24            IN NUMBER
--Business Flow Accounts Payable Application Identifier
 , p_source_25            IN NUMBER
--Business Flow Invoice Distribution Type
 , p_source_26            IN VARCHAR2
--Business Flow Invoice Entity Code
 , p_source_27            IN VARCHAR2
--Business Flow Invoice Distribution Identifier
 , p_source_28            IN NUMBER
--Business Flow Invoice Identifier
 , p_source_29            IN NUMBER
--Invoice Distribution Identifier
 , p_source_30            IN NUMBER
--Payables Encumbrance Upgrade Credit Account
 , p_source_31            IN NUMBER
--Payables Encumbrance Upgrade Credit Amount
 , p_source_32            IN NUMBER
--Invoice Currency Code
 , p_source_33            IN VARCHAR2
--Payables Encumbrance Upgrade Credit Base Amount
 , p_source_34            IN NUMBER
--Payables Encumbrance Upgrade Debit Account
 , p_source_35            IN NUMBER
--Payables Encumbrance Upgrade Debit Amount
 , p_source_36            IN NUMBER
--Payables Encumbrance Upgrade Debit Base Amount
 , p_source_37            IN NUMBER
--Payables Encumbrance Upgrade Option
 , p_source_38            IN VARCHAR2
--Invoice Exchange Date
 , p_source_39            IN DATE
--Invoice Exchange Rate
 , p_source_40            IN NUMBER
--Invoice Exchange Rate Type
 , p_source_41            IN VARCHAR2
--Deferred Accounting End Date
 , p_source_43            IN DATE
--Deferred Accounting Option
 , p_source_44            IN VARCHAR2
--Deferred Accounting Start Date
 , p_source_45            IN DATE
--Override Accounted Amount Indicator
 , p_source_46            IN VARCHAR2
 , p_source_46_meaning    IN VARCHAR2
--Invoice Supplier Identifier
 , p_source_47            IN NUMBER
--Invoice Supplier Site Identifier
 , p_source_48            IN NUMBER
--Third Party Type
 , p_source_49            IN VARCHAR2
--Parent Reversal Identifier
 , p_source_50            IN NUMBER
--Invoice Distribution Statistical Amount
 , p_source_51            IN NUMBER
--Invoice Distribution Tax Line Identifier
 , p_source_52            IN NUMBER
--Invoice Distribution Tax Distribution Identifier from Tax
 , p_source_53            IN NUMBER
--Invoice Distribution Summary Tax Line Identifier
 , p_source_54            IN NUMBER
--Payables Upgrade Credit Encumbrance Type Identifier
 , p_source_55            IN NUMBER
--Payables Upgrade Debit Encumbrance Type Identifier
 , p_source_56            IN NUMBER
--Invoice Distribution Encumbrance Amount
 , p_source_65            IN NUMBER
--Invoice Distribution Encumbrance Ledger Amount
 , p_source_66            IN NUMBER
)
IS

l_component_type              VARCHAR2(80);
l_component_code              VARCHAR2(30);
l_component_type_code         VARCHAR2(1);
l_component_appl_id           INTEGER;
l_amb_context_code            VARCHAR2(30);
l_entity_code                 VARCHAR2(30);
l_event_class_code            VARCHAR2(30);
l_ae_header_id                NUMBER;
l_event_type_code             VARCHAR2(30);
l_line_definition_code        VARCHAR2(30);
l_line_definition_owner_code  VARCHAR2(1);
--
-- adr variables
l_segment                     VARCHAR2(30);
l_ccid                        NUMBER;
l_adr_transaction_coa_id      NUMBER;
l_adr_accounting_coa_id       NUMBER;
l_adr_flexfield_segment_code  VARCHAR2(30);
l_adr_flex_value_set_id       NUMBER;
l_adr_value_type_code         VARCHAR2(30);
l_adr_value_combination_id    NUMBER;
l_adr_value_segment_code      VARCHAR2(30);

l_bflow_method_code           VARCHAR2(30);  -- 4219869 Business Flow
l_bflow_class_code            VARCHAR2(30);  -- 4219869 Business Flow
l_inherit_desc_flag           VARCHAR2(1);   -- 4219869 Business Flow
l_budgetary_control_flag      VARCHAR2(1);   -- 4458381 Public Sector Enh

-- 4262811 Variables ------------------------------------------------------------------------------------------
l_entered_amt_idx             NUMBER;
l_accted_amt_idx              NUMBER;
l_acc_rev_flag                VARCHAR2(1);
l_accrual_line_num            NUMBER;
l_tmp_amt                     NUMBER;
l_acc_rev_natural_side_code   VARCHAR2(1);

l_num_entries                 NUMBER;
l_gl_dates                    xla_ae_journal_entry_pkg.t_array_date;
l_accted_amts                 xla_ae_journal_entry_pkg.t_array_num;
l_entered_amts                xla_ae_journal_entry_pkg.t_array_num;
l_period_names                xla_ae_journal_entry_pkg.t_array_V15L;
l_recog_line_1                NUMBER;
l_recog_line_2                NUMBER;

l_bflow_applied_to_amt_idx    NUMBER;                                -- 5132302
l_bflow_applied_to_amt        NUMBER;                                -- 5132302
l_bflow_applied_to_amts       xla_ae_journal_entry_pkg.t_array_num;  -- 5132302

l_event_id                    NUMBER;  -- To handle MPA header Description: xla_ae_header_pkg.SetHdrDescription

--l_rounding_ccy                VARCHAR2(15); -- To handle MPA rounding  4262811b
l_same_currency               BOOLEAN;        -- To handle MPA rounding  4262811b

---------------------------------------------------------------------------------------------------------------


--
-- bulk performance
--
l_balance_type_code           VARCHAR2(1);
l_rec_acct_attrs              XLA_AE_LINES_PKG.t_rec_acct_attrs;
l_log_module                  VARCHAR2(240);

--
-- Upgrade strategy
--
l_actual_upg_option           VARCHAR2(1);
l_enc_upg_option           VARCHAR2(1);

--
BEGIN
--
IF g_log_enabled THEN
      l_log_module := C_DEFAULT_MODULE||'.AcctLineType_81';
END IF;
--
IF (C_LEVEL_PROCEDURE >= g_log_level) THEN

      trace
         (p_msg      => 'BEGIN of AcctLineType_81'
         ,p_level    => C_LEVEL_PROCEDURE
         ,p_module   => l_log_module);

END IF;
--
l_component_type             := 'AMB_JLT';
l_component_code             := 'AP_TAX_RATE_VAR_CM_ENC_DR';
l_component_type_code        := 'S';
l_component_appl_id          :=  200;
l_amb_context_code           := 'DEFAULT';
l_entity_code                := 'AP_INVOICES';
l_event_class_code           := 'CREDIT MEMOS';
l_event_type_code            := 'CREDIT MEMOS_ALL';
l_line_definition_owner_code := 'S';
l_line_definition_code       := 'ENC_CM_ALL';
--
l_balance_type_code          := 'E';
l_segment                     := NULL;
l_ccid                        := NULL;
l_adr_transaction_coa_id      := NULL;
l_adr_accounting_coa_id       := NULL;
l_adr_flexfield_segment_code  := NULL;
l_adr_flex_value_set_id       := NULL;
l_adr_value_type_code         := NULL;
l_adr_value_combination_id    := NULL;
l_adr_value_segment_code      := NULL;

l_bflow_method_code          := 'NONE';   -- 4219869 Business Flow
l_bflow_class_code           := 'AP_INV_ENCUM';    -- 4219869 Business Flow
l_inherit_desc_flag          := 'N';   -- 4219869 Business Flow
l_budgetary_control_flag     := 'Y';

l_bflow_applied_to_amt_idx   := NULL; -- 5132302
l_bflow_applied_to_amt       := NULL; -- 5132302
l_entered_amt_idx            := NULL;          -- 4262811
l_accted_amt_idx             := NULL;          -- 4262811
l_acc_rev_flag               := NULL;          -- 4262811
l_accrual_line_num           := NULL;          -- 4262811
l_tmp_amt                    := NULL;          -- 4262811
--
 
IF XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id = XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.ledger_id OR
    l_balance_type_code <> 'B' THEN
IF NVL(p_source_15,'
') =  'TRV' AND 
NVL(p_source_17,'
') =  'Y'
 THEN 

   --
   XLA_AE_LINES_PKG.SetNewLine;

   p_balance_type_code          := l_balance_type_code;
   -- set the flag so later we will know whether the gain loss line needs to be created
   
   IF(l_balance_type_code = 'A' and p_actual_flag is null) THEN
     p_actual_flag :='A';
   END IF;

   --
   -- bulk performance
   --
   XLA_AE_LINES_PKG.set_ae_header_id (p_ae_header_id => p_event_id ,
                                      p_header_num   => 0); -- 4262811
   --
   -- set accounting line options
   --
   l_ae_header_id:= xla_ae_lines_pkg.SetAcctLineOption(
           p_natural_side_code          => 'D'
         , p_gain_or_loss_flag          => 'N'
         , p_gl_transfer_mode_code      => 'S'
         , p_acct_entry_type_code       => 'E'
         , p_switch_side_flag           => 'Y'
         , p_merge_duplicate_code       => 'N'
         );
   --
   l_acc_rev_natural_side_code := 'C';  -- 4262811
   -- 
   --
   -- set accounting line type info
   --
   xla_ae_lines_pkg.SetAcctLineType
      (p_component_type             => l_component_type
      ,p_event_type_code            => l_event_type_code
      ,p_line_definition_owner_code => l_line_definition_owner_code
      ,p_line_definition_code       => l_line_definition_code
      ,p_accounting_line_code       => l_component_code
      ,p_accounting_line_type_code  => l_component_type_code
      ,p_accounting_line_appl_id    => l_component_appl_id
      ,p_amb_context_code           => l_amb_context_code
      ,p_entity_code                => l_entity_code
      ,p_event_class_code           => l_event_class_code);
   --
   -- set accounting class
   --
   xla_ae_lines_pkg.SetAcctClass(
           p_accounting_class_code  => 'TRV'
         , p_ae_header_id           => l_ae_header_id
         );

   --
   -- set rounding class
   --
   XLA_AE_LINES_PKG.g_rec_lines.array_rounding_class(XLA_AE_LINES_PKG.g_LineNumber) :=
                      'TRV';

   --
   xla_ae_lines_pkg.g_rec_lines.array_calculate_acctd_flag(xla_ae_lines_pkg.g_LineNumber) := p_calculate_acctd_flag;
   xla_ae_lines_pkg.g_rec_lines.array_calculate_g_l_flag(xla_ae_lines_pkg.g_LineNumber) := p_calculate_g_l_flag;
   --
   -- bulk performance
   --
   XLA_AE_LINES_PKG.g_rec_lines.array_balance_type_code(XLA_AE_LINES_PKG.g_LineNumber) := l_balance_type_code;

   XLA_AE_LINES_PKG.g_rec_lines.array_ledger_id(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id;

   -- 4955764
   XLA_AE_LINES_PKG.g_rec_lines.array_gl_date(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_HEADER_PKG.g_rec_header_new.array_gl_date(g_array_event(p_event_id).array_value_num('header_index'));

   -- 4458381 Public Sector Enh
      XLA_AE_LINES_PKG.g_rec_lines.array_encumbrance_type_id(XLA_AE_LINES_PKG.g_LineNumber) := 1060;
   --
   -- set accounting attributes for the line type
   --
   l_entered_amt_idx := 23;
   l_accted_amt_idx  := 28;
   l_bflow_applied_to_amt_idx  := NULL;  -- 5132302
   l_rec_acct_attrs.array_acct_attr_code(1) := 'ACCOUNTING_REVERSAL_OPTION';
   l_rec_acct_attrs.array_char_value(1)  := p_source_19;
   l_rec_acct_attrs.array_acct_attr_code(2) := 'ALLOC_TO_APPLICATION_ID';
   l_rec_acct_attrs.array_num_value(2)  := 
xla_ae_sources_pkg.GetSystemSourceNum(
   p_source_code           => 'XLA_EVENT_APPL_ID'
 , p_source_type_code      => 'Y'
 , p_source_application_id =>  602
);
   l_rec_acct_attrs.array_acct_attr_code(3) := 'ALLOC_TO_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(3)  := p_source_21;
   l_rec_acct_attrs.array_acct_attr_code(4) := 'ALLOC_TO_ENTITY_CODE';
   l_rec_acct_attrs.array_char_value(4)  := 
xla_ae_sources_pkg.GetSystemSourceChar(
   p_source_code           => 'XLA_ENTITY_CODE'
 , p_source_type_code      => 'Y'
 , p_source_application_id =>  602
);
   l_rec_acct_attrs.array_acct_attr_code(5) := 'ALLOC_TO_FIRST_DIST_ID';
   l_rec_acct_attrs.array_num_value(5)  :=  to_char(p_source_23);
   l_rec_acct_attrs.array_acct_attr_code(6) := 'ALLOC_TO_FIRST_SYS_TRAN_ID';
   l_rec_acct_attrs.array_num_value(6)  :=  to_char(p_source_24);
   l_rec_acct_attrs.array_acct_attr_code(7) := 'APPLIED_TO_APPLICATION_ID';
   l_rec_acct_attrs.array_num_value(7)  := p_source_25;
   l_rec_acct_attrs.array_acct_attr_code(8) := 'APPLIED_TO_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(8)  := p_source_26;
   l_rec_acct_attrs.array_acct_attr_code(9) := 'APPLIED_TO_ENTITY_CODE';
   l_rec_acct_attrs.array_char_value(9)  := p_source_27;
   l_rec_acct_attrs.array_acct_attr_code(10) := 'APPLIED_TO_FIRST_DIST_ID';
   l_rec_acct_attrs.array_num_value(10)  :=  to_char(p_source_28);
   l_rec_acct_attrs.array_acct_attr_code(11) := 'APPLIED_TO_FIRST_SYS_TRAN_ID';
   l_rec_acct_attrs.array_num_value(11)  :=  to_char(p_source_29);
   l_rec_acct_attrs.array_acct_attr_code(12) := 'DISTRIBUTION_IDENTIFIER_1';
   l_rec_acct_attrs.array_num_value(12)  :=  to_char(p_source_30);
   l_rec_acct_attrs.array_acct_attr_code(13) := 'DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(13)  := p_source_21;
   l_rec_acct_attrs.array_acct_attr_code(14) := 'ENC_UPG_CR_CCID';
   l_rec_acct_attrs.array_num_value(14)  := p_source_31;
   l_rec_acct_attrs.array_acct_attr_code(15) := 'ENC_UPG_CR_ENTERED_AMT';
   l_rec_acct_attrs.array_num_value(15)  := p_source_32;
   l_rec_acct_attrs.array_acct_attr_code(16) := 'ENC_UPG_CR_ENTERED_CURR';
   l_rec_acct_attrs.array_char_value(16)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(17) := 'ENC_UPG_CR_LEDGER_AMT';
   l_rec_acct_attrs.array_num_value(17)  := p_source_34;
   l_rec_acct_attrs.array_acct_attr_code(18) := 'ENC_UPG_DR_CCID';
   l_rec_acct_attrs.array_num_value(18)  := p_source_35;
   l_rec_acct_attrs.array_acct_attr_code(19) := 'ENC_UPG_DR_ENTERED_AMT';
   l_rec_acct_attrs.array_num_value(19)  := p_source_36;
   l_rec_acct_attrs.array_acct_attr_code(20) := 'ENC_UPG_DR_ENTERED_CURR';
   l_rec_acct_attrs.array_char_value(20)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(21) := 'ENC_UPG_DR_LEDGER_AMT';
   l_rec_acct_attrs.array_num_value(21)  := p_source_37;
   l_rec_acct_attrs.array_acct_attr_code(22) := 'ENC_UPG_OPTION';
   l_rec_acct_attrs.array_char_value(22)  := p_source_38;
   l_rec_acct_attrs.array_acct_attr_code(23) := 'ENTERED_CURRENCY_AMOUNT';
   l_rec_acct_attrs.array_num_value(23)  := p_source_65;
   l_rec_acct_attrs.array_acct_attr_code(24) := 'ENTERED_CURRENCY_CODE';
   l_rec_acct_attrs.array_char_value(24)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(25) := 'EXCHANGE_DATE';
   l_rec_acct_attrs.array_date_value(25)  := p_source_39;
   l_rec_acct_attrs.array_acct_attr_code(26) := 'EXCHANGE_RATE';
   l_rec_acct_attrs.array_num_value(26)  := p_source_40;
   l_rec_acct_attrs.array_acct_attr_code(27) := 'EXCHANGE_RATE_TYPE';
   l_rec_acct_attrs.array_char_value(27)  := p_source_41;
   l_rec_acct_attrs.array_acct_attr_code(28) := 'LEDGER_AMOUNT';
   l_rec_acct_attrs.array_num_value(28)  := p_source_66;
   l_rec_acct_attrs.array_acct_attr_code(29) := 'MULTIPERIOD_END_DATE';
   l_rec_acct_attrs.array_date_value(29)  := p_source_43;
   l_rec_acct_attrs.array_acct_attr_code(30) := 'MULTIPERIOD_OPTION';
   l_rec_acct_attrs.array_char_value(30)  := p_source_44;
   l_rec_acct_attrs.array_acct_attr_code(31) := 'MULTIPERIOD_START_DATE';
   l_rec_acct_attrs.array_date_value(31)  := p_source_45;
   l_rec_acct_attrs.array_acct_attr_code(32) := 'OVERRIDE_ACCTD_AMT_FLAG';
   l_rec_acct_attrs.array_char_value(32)  := p_source_46;
   l_rec_acct_attrs.array_acct_attr_code(33) := 'PARTY_ID';
   l_rec_acct_attrs.array_num_value(33)  := p_source_47;
   l_rec_acct_attrs.array_acct_attr_code(34) := 'PARTY_SITE_ID';
   l_rec_acct_attrs.array_num_value(34)  := p_source_48;
   l_rec_acct_attrs.array_acct_attr_code(35) := 'PARTY_TYPE';
   l_rec_acct_attrs.array_char_value(35)  := p_source_49;
   l_rec_acct_attrs.array_acct_attr_code(36) := 'REVERSED_DISTRIBUTION_ID1';
   l_rec_acct_attrs.array_num_value(36)  :=  to_char(p_source_50);
   l_rec_acct_attrs.array_acct_attr_code(37) := 'REVERSED_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(37)  := p_source_21;
   l_rec_acct_attrs.array_acct_attr_code(38) := 'STATISTICAL_AMOUNT';
   l_rec_acct_attrs.array_num_value(38)  := p_source_51;
   l_rec_acct_attrs.array_acct_attr_code(39) := 'TAX_LINE_REF_ID';
   l_rec_acct_attrs.array_num_value(39)  := p_source_52;
   l_rec_acct_attrs.array_acct_attr_code(40) := 'TAX_REC_NREC_DIST_REF_ID';
   l_rec_acct_attrs.array_num_value(40)  := p_source_53;
   l_rec_acct_attrs.array_acct_attr_code(41) := 'TAX_SUMMARY_LINE_REF_ID';
   l_rec_acct_attrs.array_num_value(41)  := p_source_54;
   l_rec_acct_attrs.array_acct_attr_code(42) := 'UPG_CR_ENC_TYPE_ID';
   l_rec_acct_attrs.array_num_value(42)  := p_source_55;
   l_rec_acct_attrs.array_acct_attr_code(43) := 'UPG_DR_ENC_TYPE_ID';
   l_rec_acct_attrs.array_num_value(43)  := p_source_56;

   XLA_AE_LINES_PKG.SetLineAcctAttrs(l_rec_acct_attrs);
   p_gain_or_loss_ref  := XLA_AE_LINES_PKG.g_rec_lines.array_gain_or_loss_ref(XLA_AE_LINES_PKG.g_LineNumber);

   ---------------------------------------------------------------------------------------------------------------
   -- 4336173 -- assign Business Flow Class (replace code in xla_ae_lines_pkg.Business_Flow_Validation)
   ---------------------------------------------------------------------------------------------------------------
   XLA_AE_LINES_PKG.g_rec_lines.array_business_class_code(XLA_AE_LINES_PKG.g_LineNumber) := l_bflow_class_code;

   l_actual_upg_option  := XLA_AE_LINES_PKG.g_rec_lines.array_actual_upg_option(XLA_AE_LINES_PKG.g_LineNumber);
   l_enc_upg_option     := XLA_AE_LINES_PKG.g_rec_lines.array_enc_upg_option(XLA_AE_LINES_PKG.g_LineNumber);

   IF xla_accounting_cache_pkg.GetValueChar
         (p_source_code         => 'LEDGER_CATEGORY_CODE'
         ,p_target_ledger_id    => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id) IN ('PRIMARY','ALC')
   AND l_bflow_method_code = 'PRIOR_ENTRY'
--   AND (l_actual_upg_option = 'Y' OR l_enc_upg_option = 'Y') Bug 4922099
   AND ( (NVL(l_actual_upg_option, 'N') IN ('Y', 'O')) OR
         (NVL(l_enc_upg_option, 'N') IN ('Y', 'O'))
       )
   THEN
         xla_ae_lines_pkg.BflowUpgEntry
           (p_business_method_code    => l_bflow_method_code
           ,p_business_class_code     => l_bflow_class_code
           ,p_balance_type            => l_balance_type_code);
   ELSE
      NULL;
-- No business flow processing for business flow method of NONE.
   END IF;

   --
   -- call analytical criteria
   --
   
   --
   -- call description
   --
   
xla_ae_lines_pkg.SetLineDescription(
   p_ae_header_id => l_ae_header_id
  ,p_description  => Description_2 (
     p_application_id         => p_application_id
   , p_ae_header_id           => l_ae_header_id 
, p_source_1 => p_source_1
   )
);


   --
   -- call ADRs
   -- Bug 4922099
   --
   IF ( (l_bflow_method_code <> 'PRIOR_ENTRY') OR
        (NVL(l_actual_upg_option, 'N') = 'O') OR
        (NVL(l_enc_upg_option, 'N') = 'O')
      )
   THEN
   NULL;
   --
   --
   
  l_ccid := AcctDerRule_7(
           p_application_id           => p_application_id
         , p_ae_header_id             => l_ae_header_id 
, p_source_11 => p_source_11
         , x_transaction_coa_id       => l_adr_transaction_coa_id
         , x_accounting_coa_id        => l_adr_accounting_coa_id
         , x_value_type_code          => l_adr_value_type_code
         , p_side                     => 'NA'
   );

   xla_ae_lines_pkg.set_ccid(
    p_code_combination_id          => l_ccid
  , p_value_type_code              => l_adr_value_type_code
  , p_transaction_coa_id           => l_adr_transaction_coa_id
  , p_accounting_coa_id            => l_adr_accounting_coa_id
  , p_adr_code                     => 'AP_INVOICE_DIST'
  , p_adr_type_code                => 'S'
  , p_component_type               => l_component_type
  , p_component_code               => l_component_code
  , p_component_type_code          => l_component_type_code
  , p_component_appl_id            => l_component_appl_id
  , p_amb_context_code             => l_amb_context_code
  , p_side                         => 'NA'
  );


   --
   --
   END IF;
   --
   -- Bug 4922099
   IF ( ( (NVL(l_actual_upg_option, 'N') = 'O') OR
          (NVL(l_enc_upg_option, 'N') = 'O')
        ) AND
        (l_bflow_method_code = 'PRIOR_ENTRY')
      )
   THEN
      IF
      --
      1 = 2
      --
      THEN
      xla_accounting_err_pkg.build_message
                                    (p_appli_s_name            => 'XLA'
                                    ,p_msg_name                => 'XLA_UPG_OVERRIDE_ADR_UNDEFINED'
                                    ,p_token_1                 => 'LINE_NUMBER'
                                    ,p_value_1                 => XLA_AE_LINES_PKG.g_LineNumber
                                    ,p_token_2                 => 'LINE_TYPE_NAME'
                                    ,p_value_2                 => XLA_AE_SOURCES_PKG.GetComponentName (
                                                                             l_component_type
                                                                            ,l_component_code
                                                                            ,l_component_type_code
                                                                            ,l_component_appl_id
                                                                            ,l_amb_context_code
                                                                            ,l_entity_code
                                                                            ,l_event_class_code
                                                                           )
                                    ,p_token_3                 => 'OWNER'
                                    ,p_value_3                 => xla_lookups_pkg.get_meaning(
                                                                          p_lookup_type     => 'XLA_OWNER_TYPE'
                                                                          ,p_lookup_code    => l_component_type_code
                                                                         )
                                    ,p_token_4                 => 'PRODUCT_NAME'
                                    ,p_value_4                 => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.application_name
                                    ,p_entity_id               => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.entity_id
                                    ,p_event_id                => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.event_id
                                    ,p_ledger_id               => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id
                                    ,p_ae_header_id            =>  NULL
                                       );

        IF (C_LEVEL_ERROR>= g_log_level) THEN
                 trace
                      (p_msg      => 'ERROR: XLA_UPG_OVERRIDE_ADR_UNDEFINED'
                      ,p_level    => C_LEVEL_ERROR
                      ,p_module   => l_log_module);
        END IF;
      END IF;
   END IF;
   --
   --
   ------------------------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- NOTE: XLA_AE_LINES_PKG.ValidateCurrentLine should NOT be generated if business flow method is
   -- Prior Entry.  Currently, the following code is always generated.
   ------------------------------------------------------------------------------------------------
   XLA_AE_LINES_PKG.ValidateCurrentLine;

   ------------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- Populated credit and debit amounts -- Need to generate this within IF <condition>
   ------------------------------------------------------------------------------------
   XLA_AE_LINES_PKG.SetDebitCreditAmounts;

   ----------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- Update journal entry status -- Need to generate this within IF <condition>
   ----------------------------------------------------------------------------------
   XLA_AE_JOURNAL_ENTRY_PKG.UpdateJournalEntryStatus
         (p_hdr_idx => g_array_event(p_event_id).array_value_num('header_index')
         ,p_balance_type_code => l_balance_type_code
         );

   -------------------------------------------------------------------------------------------
   -- 4262811 - Generate the Accrual Reversal lines
   -------------------------------------------------------------------------------------------
   BEGIN
      l_acc_rev_flag := XLA_AE_HEADER_PKG.g_rec_header_new.array_accrual_reversal_flag
                              (g_array_event(p_event_id).array_value_num('header_index'));
      IF l_acc_rev_flag IS NULL THEN
         l_acc_rev_flag := 'N';
      END IF;
   EXCEPTION
      WHEN OTHERS THEN
         l_acc_rev_flag := 'N';
   END;
   --
   IF (l_acc_rev_flag = 'Y') THEN

       -- 4645092  ------------------------------------------------------------------------------
       -- To allow MPA report to determine if it should generate report process
       XLA_ACCOUNTING_PKG.g_mpa_accrual_exists := 'Y';
       ------------------------------------------------------------------------------------------

       l_accrual_line_num := XLA_AE_LINES_PKG.g_LineNumber;
       XLA_AE_LINES_PKG.CopyLineInfo(l_accrual_line_num);
   -- added call to set_ccid to execute mapping  for secondary accrual reversal entries bug 7444204
   -- call ADRs
   -- Bug 4922099
   --
   IF ( (l_bflow_method_code <> 'PRIOR_ENTRY') OR
        (NVL(l_actual_upg_option, 'N') = 'O') OR
        (NVL(l_enc_upg_option, 'N') = 'O')
      )
   THEN
   NULL;
   --
   --
   
  l_ccid := AcctDerRule_7(
           p_application_id           => p_application_id
         , p_ae_header_id             => l_ae_header_id 
, p_source_11 => p_source_11
         , x_transaction_coa_id       => l_adr_transaction_coa_id
         , x_accounting_coa_id        => l_adr_accounting_coa_id
         , x_value_type_code          => l_adr_value_type_code
         , p_side                     => 'NA'
   );

   xla_ae_lines_pkg.set_ccid(
    p_code_combination_id          => l_ccid
  , p_value_type_code              => l_adr_value_type_code
  , p_transaction_coa_id           => l_adr_transaction_coa_id
  , p_accounting_coa_id            => l_adr_accounting_coa_id
  , p_adr_code                     => 'AP_INVOICE_DIST'
  , p_adr_type_code                => 'S'
  , p_component_type               => l_component_type
  , p_component_code               => l_component_code
  , p_component_type_code          => l_component_type_code
  , p_component_appl_id            => l_component_appl_id
  , p_amb_context_code             => l_amb_context_code
  , p_side                         => 'NA'
  );


   --
   --
   END IF;

       --
       -- Update the line information that should be overwritten
       --
       XLA_AE_LINES_PKG.set_ae_header_id(p_ae_header_id => p_event_id ,
                                         p_header_num   => 1);
       XLA_AE_LINES_PKG.g_rec_lines.array_header_num(XLA_AE_LINES_PKG.g_LineNumber)  :=1;

       XLA_AE_LINES_PKG.g_rec_lines.array_business_class_code(XLA_AE_LINES_PKG.g_LineNumber) := NULL; -- 4669271

       IF l_bflow_method_code <> 'NONE' THEN  -- 4655713b
          XLA_AE_LINES_PKG.g_rec_lines.array_reversal_code(XLA_AE_LINES_PKG.g_LineNumber) := CONCAT('MPA_',l_bflow_method_code);
       END IF;

      --
      -- Depending on the Reversal Method setup, do a switch side or changes sign for the amounts
      --
      IF (XLA_AE_JOURNAL_ENTRY_PKG.g_cache_ledgers_info.ledger_reversal_option = 'SIDE') THEN
          XLA_AE_LINES_PKG.g_rec_lines.array_natural_side_code(XLA_AE_LINES_PKG.g_LineNumber) :=  l_acc_rev_natural_side_code;
      ELSE
          ---------------------------------------------------------------------------------------------------
          -- 4262811a Switch Sign
          ---------------------------------------------------------------------------------------------------
          XLA_AE_LINES_PKG.g_rec_lines.array_switch_side_flag(XLA_AE_LINES_PKG.g_LineNumber) := 'N';  -- 5052518
          XLA_AE_LINES_PKG.g_rec_lines.array_ledger_amount(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_ledger_amount(XLA_AE_LINES_PKG.g_LineNumber) * -1;
          XLA_AE_LINES_PKG.g_rec_lines.array_entered_amount(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_entered_amount(XLA_AE_LINES_PKG.g_LineNumber) * -1;
          -- 5132302
          XLA_AE_LINES_PKG.g_rec_lines.array_bflow_applied_to_amt(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_bflow_applied_to_amt(XLA_AE_LINES_PKG.g_LineNumber) * -1;

      END IF;

      -- 4955764
      XLA_AE_LINES_PKG.g_rec_lines.array_gl_date(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_HEADER_PKG.g_rec_header_new.array_gl_date(g_array_event(p_event_id).array_value_num('acc_rev_header_index'));


      XLA_AE_LINES_PKG.ValidateCurrentLine;
      XLA_AE_LINES_PKG.SetDebitCreditAmounts;

      XLA_AE_JOURNAL_ENTRY_PKG.UpdateJournalEntryStatus
               (p_hdr_idx           => g_array_event(p_event_id).array_value_num('acc_rev_header_index')
               ,p_balance_type_code => l_balance_type_code);

   END IF;

   -----------------------------------------------------------------------------------------
   -- 4262811 Multiperiod Accounting
   -----------------------------------------------------------------------------------------
     -- No MPA option is assigned.


END IF;
END IF;
--

--
IF (C_LEVEL_PROCEDURE >= g_log_level) THEN
   trace
      (p_msg      => 'END of AcctLineType_81'
      ,p_level    => C_LEVEL_PROCEDURE
      ,p_module   => l_log_module);
END IF;
--
EXCEPTION
  WHEN xla_exceptions_pkg.application_exception THEN
      RAISE;
  WHEN OTHERS THEN
       xla_exceptions_pkg.raise_message
           (p_location => 'XLA_00200_AAD_S_000010_BC_PKG.AcctLineType_81');
END AcctLineType_81;
--

---------------------------------------
--
-- PRIVATE FUNCTION
--         AcctLineType_82
--
---------------------------------------
PROCEDURE AcctLineType_82 (
  p_application_id        IN NUMBER
 ,p_event_id              IN NUMBER
 ,p_calculate_acctd_flag  IN VARCHAR2
 ,p_calculate_g_l_flag    IN VARCHAR2
 ,p_actual_flag           IN OUT VARCHAR2
 ,p_balance_type_code     OUT VARCHAR2
 ,p_gain_or_loss_ref      OUT VARCHAR2
 
--Invoice Distribution Description
 , p_source_1            IN VARCHAR2
--Invoice Distribution Account
 , p_source_11            IN NUMBER
--Invoice Distribution Type
 , p_source_15            IN VARCHAR2
 , p_source_15_meaning    IN VARCHAR2
--Purchasing Encumbrance Option
 , p_source_17            IN VARCHAR2
 , p_source_17_meaning    IN VARCHAR2
--Accounting Reversal Indicator
 , p_source_19            IN VARCHAR2
--Distribution Link Type
 , p_source_21            IN VARCHAR2
--Allocation to Main Distribution Identifier
 , p_source_23            IN NUMBER
--Invoice Identifier
 , p_source_24            IN NUMBER
--Business Flow Accounts Payable Application Identifier
 , p_source_25            IN NUMBER
--Business Flow Invoice Distribution Type
 , p_source_26            IN VARCHAR2
--Business Flow Invoice Entity Code
 , p_source_27            IN VARCHAR2
--Business Flow Invoice Distribution Identifier
 , p_source_28            IN NUMBER
--Business Flow Invoice Identifier
 , p_source_29            IN NUMBER
--Invoice Distribution Identifier
 , p_source_30            IN NUMBER
--Payables Encumbrance Upgrade Credit Account
 , p_source_31            IN NUMBER
--Payables Encumbrance Upgrade Credit Amount
 , p_source_32            IN NUMBER
--Invoice Currency Code
 , p_source_33            IN VARCHAR2
--Payables Encumbrance Upgrade Credit Base Amount
 , p_source_34            IN NUMBER
--Payables Encumbrance Upgrade Debit Account
 , p_source_35            IN NUMBER
--Payables Encumbrance Upgrade Debit Amount
 , p_source_36            IN NUMBER
--Payables Encumbrance Upgrade Debit Base Amount
 , p_source_37            IN NUMBER
--Payables Encumbrance Upgrade Option
 , p_source_38            IN VARCHAR2
--Invoice Exchange Date
 , p_source_39            IN DATE
--Invoice Exchange Rate
 , p_source_40            IN NUMBER
--Invoice Exchange Rate Type
 , p_source_41            IN VARCHAR2
--Deferred Accounting End Date
 , p_source_43            IN DATE
--Deferred Accounting Option
 , p_source_44            IN VARCHAR2
--Deferred Accounting Start Date
 , p_source_45            IN DATE
--Override Accounted Amount Indicator
 , p_source_46            IN VARCHAR2
 , p_source_46_meaning    IN VARCHAR2
--Invoice Supplier Identifier
 , p_source_47            IN NUMBER
--Invoice Supplier Site Identifier
 , p_source_48            IN NUMBER
--Third Party Type
 , p_source_49            IN VARCHAR2
--Parent Reversal Identifier
 , p_source_50            IN NUMBER
--Invoice Distribution Tax Line Identifier
 , p_source_52            IN NUMBER
--Invoice Distribution Tax Distribution Identifier from Tax
 , p_source_53            IN NUMBER
--Invoice Distribution Summary Tax Line Identifier
 , p_source_54            IN NUMBER
--Payables Upgrade Credit Encumbrance Type Identifier
 , p_source_55            IN NUMBER
--Payables Upgrade Debit Encumbrance Type Identifier
 , p_source_56            IN NUMBER
--Invoice Distribution Encumbrance Amount
 , p_source_65            IN NUMBER
--Invoice Distribution Encumbrance Ledger Amount
 , p_source_66            IN NUMBER
)
IS

l_component_type              VARCHAR2(80);
l_component_code              VARCHAR2(30);
l_component_type_code         VARCHAR2(1);
l_component_appl_id           INTEGER;
l_amb_context_code            VARCHAR2(30);
l_entity_code                 VARCHAR2(30);
l_event_class_code            VARCHAR2(30);
l_ae_header_id                NUMBER;
l_event_type_code             VARCHAR2(30);
l_line_definition_code        VARCHAR2(30);
l_line_definition_owner_code  VARCHAR2(1);
--
-- adr variables
l_segment                     VARCHAR2(30);
l_ccid                        NUMBER;
l_adr_transaction_coa_id      NUMBER;
l_adr_accounting_coa_id       NUMBER;
l_adr_flexfield_segment_code  VARCHAR2(30);
l_adr_flex_value_set_id       NUMBER;
l_adr_value_type_code         VARCHAR2(30);
l_adr_value_combination_id    NUMBER;
l_adr_value_segment_code      VARCHAR2(30);

l_bflow_method_code           VARCHAR2(30);  -- 4219869 Business Flow
l_bflow_class_code            VARCHAR2(30);  -- 4219869 Business Flow
l_inherit_desc_flag           VARCHAR2(1);   -- 4219869 Business Flow
l_budgetary_control_flag      VARCHAR2(1);   -- 4458381 Public Sector Enh

-- 4262811 Variables ------------------------------------------------------------------------------------------
l_entered_amt_idx             NUMBER;
l_accted_amt_idx              NUMBER;
l_acc_rev_flag                VARCHAR2(1);
l_accrual_line_num            NUMBER;
l_tmp_amt                     NUMBER;
l_acc_rev_natural_side_code   VARCHAR2(1);

l_num_entries                 NUMBER;
l_gl_dates                    xla_ae_journal_entry_pkg.t_array_date;
l_accted_amts                 xla_ae_journal_entry_pkg.t_array_num;
l_entered_amts                xla_ae_journal_entry_pkg.t_array_num;
l_period_names                xla_ae_journal_entry_pkg.t_array_V15L;
l_recog_line_1                NUMBER;
l_recog_line_2                NUMBER;

l_bflow_applied_to_amt_idx    NUMBER;                                -- 5132302
l_bflow_applied_to_amt        NUMBER;                                -- 5132302
l_bflow_applied_to_amts       xla_ae_journal_entry_pkg.t_array_num;  -- 5132302

l_event_id                    NUMBER;  -- To handle MPA header Description: xla_ae_header_pkg.SetHdrDescription

--l_rounding_ccy                VARCHAR2(15); -- To handle MPA rounding  4262811b
l_same_currency               BOOLEAN;        -- To handle MPA rounding  4262811b

---------------------------------------------------------------------------------------------------------------


--
-- bulk performance
--
l_balance_type_code           VARCHAR2(1);
l_rec_acct_attrs              XLA_AE_LINES_PKG.t_rec_acct_attrs;
l_log_module                  VARCHAR2(240);

--
-- Upgrade strategy
--
l_actual_upg_option           VARCHAR2(1);
l_enc_upg_option           VARCHAR2(1);

--
BEGIN
--
IF g_log_enabled THEN
      l_log_module := C_DEFAULT_MODULE||'.AcctLineType_82';
END IF;
--
IF (C_LEVEL_PROCEDURE >= g_log_level) THEN

      trace
         (p_msg      => 'BEGIN of AcctLineType_82'
         ,p_level    => C_LEVEL_PROCEDURE
         ,p_module   => l_log_module);

END IF;
--
l_component_type             := 'AMB_JLT';
l_component_code             := 'AP_TAX_RATE_VAR_DM_ENC_DR';
l_component_type_code        := 'S';
l_component_appl_id          :=  200;
l_amb_context_code           := 'DEFAULT';
l_entity_code                := 'AP_INVOICES';
l_event_class_code           := 'DEBIT MEMOS';
l_event_type_code            := 'DEBIT MEMOS_ALL';
l_line_definition_owner_code := 'S';
l_line_definition_code       := 'ENC_DM_ALL';
--
l_balance_type_code          := 'E';
l_segment                     := NULL;
l_ccid                        := NULL;
l_adr_transaction_coa_id      := NULL;
l_adr_accounting_coa_id       := NULL;
l_adr_flexfield_segment_code  := NULL;
l_adr_flex_value_set_id       := NULL;
l_adr_value_type_code         := NULL;
l_adr_value_combination_id    := NULL;
l_adr_value_segment_code      := NULL;

l_bflow_method_code          := 'NONE';   -- 4219869 Business Flow
l_bflow_class_code           := 'AP_INV_ENCUM';    -- 4219869 Business Flow
l_inherit_desc_flag          := 'N';   -- 4219869 Business Flow
l_budgetary_control_flag     := 'Y';

l_bflow_applied_to_amt_idx   := NULL; -- 5132302
l_bflow_applied_to_amt       := NULL; -- 5132302
l_entered_amt_idx            := NULL;          -- 4262811
l_accted_amt_idx             := NULL;          -- 4262811
l_acc_rev_flag               := NULL;          -- 4262811
l_accrual_line_num           := NULL;          -- 4262811
l_tmp_amt                    := NULL;          -- 4262811
--
 
IF XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id = XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.ledger_id OR
    l_balance_type_code <> 'B' THEN
IF NVL(p_source_15,'
') =  'TRV' AND 
NVL(p_source_17,'
') =  'Y'
 THEN 

   --
   XLA_AE_LINES_PKG.SetNewLine;

   p_balance_type_code          := l_balance_type_code;
   -- set the flag so later we will know whether the gain loss line needs to be created
   
   IF(l_balance_type_code = 'A' and p_actual_flag is null) THEN
     p_actual_flag :='A';
   END IF;

   --
   -- bulk performance
   --
   XLA_AE_LINES_PKG.set_ae_header_id (p_ae_header_id => p_event_id ,
                                      p_header_num   => 0); -- 4262811
   --
   -- set accounting line options
   --
   l_ae_header_id:= xla_ae_lines_pkg.SetAcctLineOption(
           p_natural_side_code          => 'D'
         , p_gain_or_loss_flag          => 'N'
         , p_gl_transfer_mode_code      => 'S'
         , p_acct_entry_type_code       => 'E'
         , p_switch_side_flag           => 'Y'
         , p_merge_duplicate_code       => 'N'
         );
   --
   l_acc_rev_natural_side_code := 'C';  -- 4262811
   -- 
   --
   -- set accounting line type info
   --
   xla_ae_lines_pkg.SetAcctLineType
      (p_component_type             => l_component_type
      ,p_event_type_code            => l_event_type_code
      ,p_line_definition_owner_code => l_line_definition_owner_code
      ,p_line_definition_code       => l_line_definition_code
      ,p_accounting_line_code       => l_component_code
      ,p_accounting_line_type_code  => l_component_type_code
      ,p_accounting_line_appl_id    => l_component_appl_id
      ,p_amb_context_code           => l_amb_context_code
      ,p_entity_code                => l_entity_code
      ,p_event_class_code           => l_event_class_code);
   --
   -- set accounting class
   --
   xla_ae_lines_pkg.SetAcctClass(
           p_accounting_class_code  => 'TRV'
         , p_ae_header_id           => l_ae_header_id
         );

   --
   -- set rounding class
   --
   XLA_AE_LINES_PKG.g_rec_lines.array_rounding_class(XLA_AE_LINES_PKG.g_LineNumber) :=
                      'TRV';

   --
   xla_ae_lines_pkg.g_rec_lines.array_calculate_acctd_flag(xla_ae_lines_pkg.g_LineNumber) := p_calculate_acctd_flag;
   xla_ae_lines_pkg.g_rec_lines.array_calculate_g_l_flag(xla_ae_lines_pkg.g_LineNumber) := p_calculate_g_l_flag;
   --
   -- bulk performance
   --
   XLA_AE_LINES_PKG.g_rec_lines.array_balance_type_code(XLA_AE_LINES_PKG.g_LineNumber) := l_balance_type_code;

   XLA_AE_LINES_PKG.g_rec_lines.array_ledger_id(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id;

   -- 4955764
   XLA_AE_LINES_PKG.g_rec_lines.array_gl_date(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_HEADER_PKG.g_rec_header_new.array_gl_date(g_array_event(p_event_id).array_value_num('header_index'));

   -- 4458381 Public Sector Enh
      XLA_AE_LINES_PKG.g_rec_lines.array_encumbrance_type_id(XLA_AE_LINES_PKG.g_LineNumber) := 1060;
   --
   -- set accounting attributes for the line type
   --
   l_entered_amt_idx := 23;
   l_accted_amt_idx  := 28;
   l_bflow_applied_to_amt_idx  := NULL;  -- 5132302
   l_rec_acct_attrs.array_acct_attr_code(1) := 'ACCOUNTING_REVERSAL_OPTION';
   l_rec_acct_attrs.array_char_value(1)  := p_source_19;
   l_rec_acct_attrs.array_acct_attr_code(2) := 'ALLOC_TO_APPLICATION_ID';
   l_rec_acct_attrs.array_num_value(2)  := 
xla_ae_sources_pkg.GetSystemSourceNum(
   p_source_code           => 'XLA_EVENT_APPL_ID'
 , p_source_type_code      => 'Y'
 , p_source_application_id =>  602
);
   l_rec_acct_attrs.array_acct_attr_code(3) := 'ALLOC_TO_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(3)  := p_source_21;
   l_rec_acct_attrs.array_acct_attr_code(4) := 'ALLOC_TO_ENTITY_CODE';
   l_rec_acct_attrs.array_char_value(4)  := 
xla_ae_sources_pkg.GetSystemSourceChar(
   p_source_code           => 'XLA_ENTITY_CODE'
 , p_source_type_code      => 'Y'
 , p_source_application_id =>  602
);
   l_rec_acct_attrs.array_acct_attr_code(5) := 'ALLOC_TO_FIRST_DIST_ID';
   l_rec_acct_attrs.array_num_value(5)  :=  to_char(p_source_23);
   l_rec_acct_attrs.array_acct_attr_code(6) := 'ALLOC_TO_FIRST_SYS_TRAN_ID';
   l_rec_acct_attrs.array_num_value(6)  :=  to_char(p_source_24);
   l_rec_acct_attrs.array_acct_attr_code(7) := 'APPLIED_TO_APPLICATION_ID';
   l_rec_acct_attrs.array_num_value(7)  := p_source_25;
   l_rec_acct_attrs.array_acct_attr_code(8) := 'APPLIED_TO_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(8)  := p_source_26;
   l_rec_acct_attrs.array_acct_attr_code(9) := 'APPLIED_TO_ENTITY_CODE';
   l_rec_acct_attrs.array_char_value(9)  := p_source_27;
   l_rec_acct_attrs.array_acct_attr_code(10) := 'APPLIED_TO_FIRST_DIST_ID';
   l_rec_acct_attrs.array_num_value(10)  :=  to_char(p_source_28);
   l_rec_acct_attrs.array_acct_attr_code(11) := 'APPLIED_TO_FIRST_SYS_TRAN_ID';
   l_rec_acct_attrs.array_num_value(11)  :=  to_char(p_source_29);
   l_rec_acct_attrs.array_acct_attr_code(12) := 'DISTRIBUTION_IDENTIFIER_1';
   l_rec_acct_attrs.array_num_value(12)  :=  to_char(p_source_30);
   l_rec_acct_attrs.array_acct_attr_code(13) := 'DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(13)  := p_source_21;
   l_rec_acct_attrs.array_acct_attr_code(14) := 'ENC_UPG_CR_CCID';
   l_rec_acct_attrs.array_num_value(14)  := p_source_31;
   l_rec_acct_attrs.array_acct_attr_code(15) := 'ENC_UPG_CR_ENTERED_AMT';
   l_rec_acct_attrs.array_num_value(15)  := p_source_32;
   l_rec_acct_attrs.array_acct_attr_code(16) := 'ENC_UPG_CR_ENTERED_CURR';
   l_rec_acct_attrs.array_char_value(16)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(17) := 'ENC_UPG_CR_LEDGER_AMT';
   l_rec_acct_attrs.array_num_value(17)  := p_source_34;
   l_rec_acct_attrs.array_acct_attr_code(18) := 'ENC_UPG_DR_CCID';
   l_rec_acct_attrs.array_num_value(18)  := p_source_35;
   l_rec_acct_attrs.array_acct_attr_code(19) := 'ENC_UPG_DR_ENTERED_AMT';
   l_rec_acct_attrs.array_num_value(19)  := p_source_36;
   l_rec_acct_attrs.array_acct_attr_code(20) := 'ENC_UPG_DR_ENTERED_CURR';
   l_rec_acct_attrs.array_char_value(20)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(21) := 'ENC_UPG_DR_LEDGER_AMT';
   l_rec_acct_attrs.array_num_value(21)  := p_source_37;
   l_rec_acct_attrs.array_acct_attr_code(22) := 'ENC_UPG_OPTION';
   l_rec_acct_attrs.array_char_value(22)  := p_source_38;
   l_rec_acct_attrs.array_acct_attr_code(23) := 'ENTERED_CURRENCY_AMOUNT';
   l_rec_acct_attrs.array_num_value(23)  := p_source_65;
   l_rec_acct_attrs.array_acct_attr_code(24) := 'ENTERED_CURRENCY_CODE';
   l_rec_acct_attrs.array_char_value(24)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(25) := 'EXCHANGE_DATE';
   l_rec_acct_attrs.array_date_value(25)  := p_source_39;
   l_rec_acct_attrs.array_acct_attr_code(26) := 'EXCHANGE_RATE';
   l_rec_acct_attrs.array_num_value(26)  := p_source_40;
   l_rec_acct_attrs.array_acct_attr_code(27) := 'EXCHANGE_RATE_TYPE';
   l_rec_acct_attrs.array_char_value(27)  := p_source_41;
   l_rec_acct_attrs.array_acct_attr_code(28) := 'LEDGER_AMOUNT';
   l_rec_acct_attrs.array_num_value(28)  := p_source_66;
   l_rec_acct_attrs.array_acct_attr_code(29) := 'MULTIPERIOD_END_DATE';
   l_rec_acct_attrs.array_date_value(29)  := p_source_43;
   l_rec_acct_attrs.array_acct_attr_code(30) := 'MULTIPERIOD_OPTION';
   l_rec_acct_attrs.array_char_value(30)  := p_source_44;
   l_rec_acct_attrs.array_acct_attr_code(31) := 'MULTIPERIOD_START_DATE';
   l_rec_acct_attrs.array_date_value(31)  := p_source_45;
   l_rec_acct_attrs.array_acct_attr_code(32) := 'OVERRIDE_ACCTD_AMT_FLAG';
   l_rec_acct_attrs.array_char_value(32)  := p_source_46;
   l_rec_acct_attrs.array_acct_attr_code(33) := 'PARTY_ID';
   l_rec_acct_attrs.array_num_value(33)  := p_source_47;
   l_rec_acct_attrs.array_acct_attr_code(34) := 'PARTY_SITE_ID';
   l_rec_acct_attrs.array_num_value(34)  := p_source_48;
   l_rec_acct_attrs.array_acct_attr_code(35) := 'PARTY_TYPE';
   l_rec_acct_attrs.array_char_value(35)  := p_source_49;
   l_rec_acct_attrs.array_acct_attr_code(36) := 'REVERSED_DISTRIBUTION_ID1';
   l_rec_acct_attrs.array_num_value(36)  :=  to_char(p_source_50);
   l_rec_acct_attrs.array_acct_attr_code(37) := 'REVERSED_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(37)  := p_source_21;
   l_rec_acct_attrs.array_acct_attr_code(38) := 'TAX_LINE_REF_ID';
   l_rec_acct_attrs.array_num_value(38)  := p_source_52;
   l_rec_acct_attrs.array_acct_attr_code(39) := 'TAX_REC_NREC_DIST_REF_ID';
   l_rec_acct_attrs.array_num_value(39)  := p_source_53;
   l_rec_acct_attrs.array_acct_attr_code(40) := 'TAX_SUMMARY_LINE_REF_ID';
   l_rec_acct_attrs.array_num_value(40)  := p_source_54;
   l_rec_acct_attrs.array_acct_attr_code(41) := 'UPG_CR_ENC_TYPE_ID';
   l_rec_acct_attrs.array_num_value(41)  := p_source_55;
   l_rec_acct_attrs.array_acct_attr_code(42) := 'UPG_DR_ENC_TYPE_ID';
   l_rec_acct_attrs.array_num_value(42)  := p_source_56;

   XLA_AE_LINES_PKG.SetLineAcctAttrs(l_rec_acct_attrs);
   p_gain_or_loss_ref  := XLA_AE_LINES_PKG.g_rec_lines.array_gain_or_loss_ref(XLA_AE_LINES_PKG.g_LineNumber);

   ---------------------------------------------------------------------------------------------------------------
   -- 4336173 -- assign Business Flow Class (replace code in xla_ae_lines_pkg.Business_Flow_Validation)
   ---------------------------------------------------------------------------------------------------------------
   XLA_AE_LINES_PKG.g_rec_lines.array_business_class_code(XLA_AE_LINES_PKG.g_LineNumber) := l_bflow_class_code;

   l_actual_upg_option  := XLA_AE_LINES_PKG.g_rec_lines.array_actual_upg_option(XLA_AE_LINES_PKG.g_LineNumber);
   l_enc_upg_option     := XLA_AE_LINES_PKG.g_rec_lines.array_enc_upg_option(XLA_AE_LINES_PKG.g_LineNumber);

   IF xla_accounting_cache_pkg.GetValueChar
         (p_source_code         => 'LEDGER_CATEGORY_CODE'
         ,p_target_ledger_id    => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id) IN ('PRIMARY','ALC')
   AND l_bflow_method_code = 'PRIOR_ENTRY'
--   AND (l_actual_upg_option = 'Y' OR l_enc_upg_option = 'Y') Bug 4922099
   AND ( (NVL(l_actual_upg_option, 'N') IN ('Y', 'O')) OR
         (NVL(l_enc_upg_option, 'N') IN ('Y', 'O'))
       )
   THEN
         xla_ae_lines_pkg.BflowUpgEntry
           (p_business_method_code    => l_bflow_method_code
           ,p_business_class_code     => l_bflow_class_code
           ,p_balance_type            => l_balance_type_code);
   ELSE
      NULL;
-- No business flow processing for business flow method of NONE.
   END IF;

   --
   -- call analytical criteria
   --
   
   --
   -- call description
   --
   
xla_ae_lines_pkg.SetLineDescription(
   p_ae_header_id => l_ae_header_id
  ,p_description  => Description_2 (
     p_application_id         => p_application_id
   , p_ae_header_id           => l_ae_header_id 
, p_source_1 => p_source_1
   )
);


   --
   -- call ADRs
   -- Bug 4922099
   --
   IF ( (l_bflow_method_code <> 'PRIOR_ENTRY') OR
        (NVL(l_actual_upg_option, 'N') = 'O') OR
        (NVL(l_enc_upg_option, 'N') = 'O')
      )
   THEN
   NULL;
   --
   --
   
  l_ccid := AcctDerRule_7(
           p_application_id           => p_application_id
         , p_ae_header_id             => l_ae_header_id 
, p_source_11 => p_source_11
         , x_transaction_coa_id       => l_adr_transaction_coa_id
         , x_accounting_coa_id        => l_adr_accounting_coa_id
         , x_value_type_code          => l_adr_value_type_code
         , p_side                     => 'NA'
   );

   xla_ae_lines_pkg.set_ccid(
    p_code_combination_id          => l_ccid
  , p_value_type_code              => l_adr_value_type_code
  , p_transaction_coa_id           => l_adr_transaction_coa_id
  , p_accounting_coa_id            => l_adr_accounting_coa_id
  , p_adr_code                     => 'AP_INVOICE_DIST'
  , p_adr_type_code                => 'S'
  , p_component_type               => l_component_type
  , p_component_code               => l_component_code
  , p_component_type_code          => l_component_type_code
  , p_component_appl_id            => l_component_appl_id
  , p_amb_context_code             => l_amb_context_code
  , p_side                         => 'NA'
  );


   --
   --
   END IF;
   --
   -- Bug 4922099
   IF ( ( (NVL(l_actual_upg_option, 'N') = 'O') OR
          (NVL(l_enc_upg_option, 'N') = 'O')
        ) AND
        (l_bflow_method_code = 'PRIOR_ENTRY')
      )
   THEN
      IF
      --
      1 = 2
      --
      THEN
      xla_accounting_err_pkg.build_message
                                    (p_appli_s_name            => 'XLA'
                                    ,p_msg_name                => 'XLA_UPG_OVERRIDE_ADR_UNDEFINED'
                                    ,p_token_1                 => 'LINE_NUMBER'
                                    ,p_value_1                 => XLA_AE_LINES_PKG.g_LineNumber
                                    ,p_token_2                 => 'LINE_TYPE_NAME'
                                    ,p_value_2                 => XLA_AE_SOURCES_PKG.GetComponentName (
                                                                             l_component_type
                                                                            ,l_component_code
                                                                            ,l_component_type_code
                                                                            ,l_component_appl_id
                                                                            ,l_amb_context_code
                                                                            ,l_entity_code
                                                                            ,l_event_class_code
                                                                           )
                                    ,p_token_3                 => 'OWNER'
                                    ,p_value_3                 => xla_lookups_pkg.get_meaning(
                                                                          p_lookup_type     => 'XLA_OWNER_TYPE'
                                                                          ,p_lookup_code    => l_component_type_code
                                                                         )
                                    ,p_token_4                 => 'PRODUCT_NAME'
                                    ,p_value_4                 => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.application_name
                                    ,p_entity_id               => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.entity_id
                                    ,p_event_id                => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.event_id
                                    ,p_ledger_id               => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id
                                    ,p_ae_header_id            =>  NULL
                                       );

        IF (C_LEVEL_ERROR>= g_log_level) THEN
                 trace
                      (p_msg      => 'ERROR: XLA_UPG_OVERRIDE_ADR_UNDEFINED'
                      ,p_level    => C_LEVEL_ERROR
                      ,p_module   => l_log_module);
        END IF;
      END IF;
   END IF;
   --
   --
   ------------------------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- NOTE: XLA_AE_LINES_PKG.ValidateCurrentLine should NOT be generated if business flow method is
   -- Prior Entry.  Currently, the following code is always generated.
   ------------------------------------------------------------------------------------------------
   XLA_AE_LINES_PKG.ValidateCurrentLine;

   ------------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- Populated credit and debit amounts -- Need to generate this within IF <condition>
   ------------------------------------------------------------------------------------
   XLA_AE_LINES_PKG.SetDebitCreditAmounts;

   ----------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- Update journal entry status -- Need to generate this within IF <condition>
   ----------------------------------------------------------------------------------
   XLA_AE_JOURNAL_ENTRY_PKG.UpdateJournalEntryStatus
         (p_hdr_idx => g_array_event(p_event_id).array_value_num('header_index')
         ,p_balance_type_code => l_balance_type_code
         );

   -------------------------------------------------------------------------------------------
   -- 4262811 - Generate the Accrual Reversal lines
   -------------------------------------------------------------------------------------------
   BEGIN
      l_acc_rev_flag := XLA_AE_HEADER_PKG.g_rec_header_new.array_accrual_reversal_flag
                              (g_array_event(p_event_id).array_value_num('header_index'));
      IF l_acc_rev_flag IS NULL THEN
         l_acc_rev_flag := 'N';
      END IF;
   EXCEPTION
      WHEN OTHERS THEN
         l_acc_rev_flag := 'N';
   END;
   --
   IF (l_acc_rev_flag = 'Y') THEN

       -- 4645092  ------------------------------------------------------------------------------
       -- To allow MPA report to determine if it should generate report process
       XLA_ACCOUNTING_PKG.g_mpa_accrual_exists := 'Y';
       ------------------------------------------------------------------------------------------

       l_accrual_line_num := XLA_AE_LINES_PKG.g_LineNumber;
       XLA_AE_LINES_PKG.CopyLineInfo(l_accrual_line_num);
   -- added call to set_ccid to execute mapping  for secondary accrual reversal entries bug 7444204
   -- call ADRs
   -- Bug 4922099
   --
   IF ( (l_bflow_method_code <> 'PRIOR_ENTRY') OR
        (NVL(l_actual_upg_option, 'N') = 'O') OR
        (NVL(l_enc_upg_option, 'N') = 'O')
      )
   THEN
   NULL;
   --
   --
   
  l_ccid := AcctDerRule_7(
           p_application_id           => p_application_id
         , p_ae_header_id             => l_ae_header_id 
, p_source_11 => p_source_11
         , x_transaction_coa_id       => l_adr_transaction_coa_id
         , x_accounting_coa_id        => l_adr_accounting_coa_id
         , x_value_type_code          => l_adr_value_type_code
         , p_side                     => 'NA'
   );

   xla_ae_lines_pkg.set_ccid(
    p_code_combination_id          => l_ccid
  , p_value_type_code              => l_adr_value_type_code
  , p_transaction_coa_id           => l_adr_transaction_coa_id
  , p_accounting_coa_id            => l_adr_accounting_coa_id
  , p_adr_code                     => 'AP_INVOICE_DIST'
  , p_adr_type_code                => 'S'
  , p_component_type               => l_component_type
  , p_component_code               => l_component_code
  , p_component_type_code          => l_component_type_code
  , p_component_appl_id            => l_component_appl_id
  , p_amb_context_code             => l_amb_context_code
  , p_side                         => 'NA'
  );


   --
   --
   END IF;

       --
       -- Update the line information that should be overwritten
       --
       XLA_AE_LINES_PKG.set_ae_header_id(p_ae_header_id => p_event_id ,
                                         p_header_num   => 1);
       XLA_AE_LINES_PKG.g_rec_lines.array_header_num(XLA_AE_LINES_PKG.g_LineNumber)  :=1;

       XLA_AE_LINES_PKG.g_rec_lines.array_business_class_code(XLA_AE_LINES_PKG.g_LineNumber) := NULL; -- 4669271

       IF l_bflow_method_code <> 'NONE' THEN  -- 4655713b
          XLA_AE_LINES_PKG.g_rec_lines.array_reversal_code(XLA_AE_LINES_PKG.g_LineNumber) := CONCAT('MPA_',l_bflow_method_code);
       END IF;

      --
      -- Depending on the Reversal Method setup, do a switch side or changes sign for the amounts
      --
      IF (XLA_AE_JOURNAL_ENTRY_PKG.g_cache_ledgers_info.ledger_reversal_option = 'SIDE') THEN
          XLA_AE_LINES_PKG.g_rec_lines.array_natural_side_code(XLA_AE_LINES_PKG.g_LineNumber) :=  l_acc_rev_natural_side_code;
      ELSE
          ---------------------------------------------------------------------------------------------------
          -- 4262811a Switch Sign
          ---------------------------------------------------------------------------------------------------
          XLA_AE_LINES_PKG.g_rec_lines.array_switch_side_flag(XLA_AE_LINES_PKG.g_LineNumber) := 'N';  -- 5052518
          XLA_AE_LINES_PKG.g_rec_lines.array_ledger_amount(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_ledger_amount(XLA_AE_LINES_PKG.g_LineNumber) * -1;
          XLA_AE_LINES_PKG.g_rec_lines.array_entered_amount(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_entered_amount(XLA_AE_LINES_PKG.g_LineNumber) * -1;
          -- 5132302
          XLA_AE_LINES_PKG.g_rec_lines.array_bflow_applied_to_amt(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_bflow_applied_to_amt(XLA_AE_LINES_PKG.g_LineNumber) * -1;

      END IF;

      -- 4955764
      XLA_AE_LINES_PKG.g_rec_lines.array_gl_date(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_HEADER_PKG.g_rec_header_new.array_gl_date(g_array_event(p_event_id).array_value_num('acc_rev_header_index'));


      XLA_AE_LINES_PKG.ValidateCurrentLine;
      XLA_AE_LINES_PKG.SetDebitCreditAmounts;

      XLA_AE_JOURNAL_ENTRY_PKG.UpdateJournalEntryStatus
               (p_hdr_idx           => g_array_event(p_event_id).array_value_num('acc_rev_header_index')
               ,p_balance_type_code => l_balance_type_code);

   END IF;

   -----------------------------------------------------------------------------------------
   -- 4262811 Multiperiod Accounting
   -----------------------------------------------------------------------------------------
     -- No MPA option is assigned.


END IF;
END IF;
--

--
IF (C_LEVEL_PROCEDURE >= g_log_level) THEN
   trace
      (p_msg      => 'END of AcctLineType_82'
      ,p_level    => C_LEVEL_PROCEDURE
      ,p_module   => l_log_module);
END IF;
--
EXCEPTION
  WHEN xla_exceptions_pkg.application_exception THEN
      RAISE;
  WHEN OTHERS THEN
       xla_exceptions_pkg.raise_message
           (p_location => 'XLA_00200_AAD_S_000010_BC_PKG.AcctLineType_82');
END AcctLineType_82;
--

---------------------------------------
--
-- PRIVATE FUNCTION
--         AcctLineType_83
--
---------------------------------------
PROCEDURE AcctLineType_83 (
  p_application_id        IN NUMBER
 ,p_event_id              IN NUMBER
 ,p_calculate_acctd_flag  IN VARCHAR2
 ,p_calculate_g_l_flag    IN VARCHAR2
 ,p_actual_flag           IN OUT VARCHAR2
 ,p_balance_type_code     OUT VARCHAR2
 ,p_gain_or_loss_ref      OUT VARCHAR2
 
--Invoice Distribution Description
 , p_source_1            IN VARCHAR2
--Invoice Distribution Account
 , p_source_11            IN NUMBER
--Invoice Distribution Type
 , p_source_15            IN VARCHAR2
 , p_source_15_meaning    IN VARCHAR2
--Purchasing Encumbrance Option
 , p_source_17            IN VARCHAR2
 , p_source_17_meaning    IN VARCHAR2
--Accounting Reversal Indicator
 , p_source_19            IN VARCHAR2
--Distribution Link Type
 , p_source_21            IN VARCHAR2
--Allocation to Main Distribution Identifier
 , p_source_23            IN NUMBER
--Invoice Identifier
 , p_source_24            IN NUMBER
--Business Flow Accounts Payable Application Identifier
 , p_source_25            IN NUMBER
--Business Flow Invoice Distribution Type
 , p_source_26            IN VARCHAR2
--Business Flow Invoice Entity Code
 , p_source_27            IN VARCHAR2
--Business Flow Invoice Distribution Identifier
 , p_source_28            IN NUMBER
--Business Flow Invoice Identifier
 , p_source_29            IN NUMBER
--Invoice Distribution Identifier
 , p_source_30            IN NUMBER
--Payables Encumbrance Upgrade Credit Account
 , p_source_31            IN NUMBER
--Payables Encumbrance Upgrade Credit Amount
 , p_source_32            IN NUMBER
--Invoice Currency Code
 , p_source_33            IN VARCHAR2
--Payables Encumbrance Upgrade Credit Base Amount
 , p_source_34            IN NUMBER
--Payables Encumbrance Upgrade Debit Account
 , p_source_35            IN NUMBER
--Payables Encumbrance Upgrade Debit Amount
 , p_source_36            IN NUMBER
--Payables Encumbrance Upgrade Debit Base Amount
 , p_source_37            IN NUMBER
--Payables Encumbrance Upgrade Option
 , p_source_38            IN VARCHAR2
--Invoice Exchange Date
 , p_source_39            IN DATE
--Invoice Exchange Rate
 , p_source_40            IN NUMBER
--Invoice Exchange Rate Type
 , p_source_41            IN VARCHAR2
--Deferred Accounting End Date
 , p_source_43            IN DATE
--Deferred Accounting Option
 , p_source_44            IN VARCHAR2
--Deferred Accounting Start Date
 , p_source_45            IN DATE
--Override Accounted Amount Indicator
 , p_source_46            IN VARCHAR2
 , p_source_46_meaning    IN VARCHAR2
--Invoice Supplier Identifier
 , p_source_47            IN NUMBER
--Invoice Supplier Site Identifier
 , p_source_48            IN NUMBER
--Third Party Type
 , p_source_49            IN VARCHAR2
--Parent Reversal Identifier
 , p_source_50            IN NUMBER
--Invoice Distribution Statistical Amount
 , p_source_51            IN NUMBER
--Invoice Distribution Tax Line Identifier
 , p_source_52            IN NUMBER
--Invoice Distribution Tax Distribution Identifier from Tax
 , p_source_53            IN NUMBER
--Invoice Distribution Summary Tax Line Identifier
 , p_source_54            IN NUMBER
--Payables Upgrade Credit Encumbrance Type Identifier
 , p_source_55            IN NUMBER
--Payables Upgrade Debit Encumbrance Type Identifier
 , p_source_56            IN NUMBER
--Invoice Distribution Amount
 , p_source_57            IN NUMBER
--Invoice Distribution Encumbrance Ledger Amount
 , p_source_66            IN NUMBER
)
IS

l_component_type              VARCHAR2(80);
l_component_code              VARCHAR2(30);
l_component_type_code         VARCHAR2(1);
l_component_appl_id           INTEGER;
l_amb_context_code            VARCHAR2(30);
l_entity_code                 VARCHAR2(30);
l_event_class_code            VARCHAR2(30);
l_ae_header_id                NUMBER;
l_event_type_code             VARCHAR2(30);
l_line_definition_code        VARCHAR2(30);
l_line_definition_owner_code  VARCHAR2(1);
--
-- adr variables
l_segment                     VARCHAR2(30);
l_ccid                        NUMBER;
l_adr_transaction_coa_id      NUMBER;
l_adr_accounting_coa_id       NUMBER;
l_adr_flexfield_segment_code  VARCHAR2(30);
l_adr_flex_value_set_id       NUMBER;
l_adr_value_type_code         VARCHAR2(30);
l_adr_value_combination_id    NUMBER;
l_adr_value_segment_code      VARCHAR2(30);

l_bflow_method_code           VARCHAR2(30);  -- 4219869 Business Flow
l_bflow_class_code            VARCHAR2(30);  -- 4219869 Business Flow
l_inherit_desc_flag           VARCHAR2(1);   -- 4219869 Business Flow
l_budgetary_control_flag      VARCHAR2(1);   -- 4458381 Public Sector Enh

-- 4262811 Variables ------------------------------------------------------------------------------------------
l_entered_amt_idx             NUMBER;
l_accted_amt_idx              NUMBER;
l_acc_rev_flag                VARCHAR2(1);
l_accrual_line_num            NUMBER;
l_tmp_amt                     NUMBER;
l_acc_rev_natural_side_code   VARCHAR2(1);

l_num_entries                 NUMBER;
l_gl_dates                    xla_ae_journal_entry_pkg.t_array_date;
l_accted_amts                 xla_ae_journal_entry_pkg.t_array_num;
l_entered_amts                xla_ae_journal_entry_pkg.t_array_num;
l_period_names                xla_ae_journal_entry_pkg.t_array_V15L;
l_recog_line_1                NUMBER;
l_recog_line_2                NUMBER;

l_bflow_applied_to_amt_idx    NUMBER;                                -- 5132302
l_bflow_applied_to_amt        NUMBER;                                -- 5132302
l_bflow_applied_to_amts       xla_ae_journal_entry_pkg.t_array_num;  -- 5132302

l_event_id                    NUMBER;  -- To handle MPA header Description: xla_ae_header_pkg.SetHdrDescription

--l_rounding_ccy                VARCHAR2(15); -- To handle MPA rounding  4262811b
l_same_currency               BOOLEAN;        -- To handle MPA rounding  4262811b

---------------------------------------------------------------------------------------------------------------


--
-- bulk performance
--
l_balance_type_code           VARCHAR2(1);
l_rec_acct_attrs              XLA_AE_LINES_PKG.t_rec_acct_attrs;
l_log_module                  VARCHAR2(240);

--
-- Upgrade strategy
--
l_actual_upg_option           VARCHAR2(1);
l_enc_upg_option           VARCHAR2(1);

--
BEGIN
--
IF g_log_enabled THEN
      l_log_module := C_DEFAULT_MODULE||'.AcctLineType_83';
END IF;
--
IF (C_LEVEL_PROCEDURE >= g_log_level) THEN

      trace
         (p_msg      => 'BEGIN of AcctLineType_83'
         ,p_level    => C_LEVEL_PROCEDURE
         ,p_module   => l_log_module);

END IF;
--
l_component_type             := 'AMB_JLT';
l_component_code             := 'AP_TAX_RATE_VAR_INV_ENC_DR';
l_component_type_code        := 'S';
l_component_appl_id          :=  200;
l_amb_context_code           := 'DEFAULT';
l_entity_code                := 'AP_INVOICES';
l_event_class_code           := 'INVOICES';
l_event_type_code            := 'INVOICES_ALL';
l_line_definition_owner_code := 'S';
l_line_definition_code       := 'ENC_INVOICES_ALL';
--
l_balance_type_code          := 'E';
l_segment                     := NULL;
l_ccid                        := NULL;
l_adr_transaction_coa_id      := NULL;
l_adr_accounting_coa_id       := NULL;
l_adr_flexfield_segment_code  := NULL;
l_adr_flex_value_set_id       := NULL;
l_adr_value_type_code         := NULL;
l_adr_value_combination_id    := NULL;
l_adr_value_segment_code      := NULL;

l_bflow_method_code          := 'NONE';   -- 4219869 Business Flow
l_bflow_class_code           := 'AP_INV_ENCUM';    -- 4219869 Business Flow
l_inherit_desc_flag          := 'N';   -- 4219869 Business Flow
l_budgetary_control_flag     := 'Y';

l_bflow_applied_to_amt_idx   := NULL; -- 5132302
l_bflow_applied_to_amt       := NULL; -- 5132302
l_entered_amt_idx            := NULL;          -- 4262811
l_accted_amt_idx             := NULL;          -- 4262811
l_acc_rev_flag               := NULL;          -- 4262811
l_accrual_line_num           := NULL;          -- 4262811
l_tmp_amt                    := NULL;          -- 4262811
--
 
IF XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id = XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.ledger_id OR
    l_balance_type_code <> 'B' THEN
IF NVL(p_source_15,'
') =  'TRV' AND 
NVL(p_source_17,'
') =  'Y'
 THEN 

   --
   XLA_AE_LINES_PKG.SetNewLine;

   p_balance_type_code          := l_balance_type_code;
   -- set the flag so later we will know whether the gain loss line needs to be created
   
   IF(l_balance_type_code = 'A' and p_actual_flag is null) THEN
     p_actual_flag :='A';
   END IF;

   --
   -- bulk performance
   --
   XLA_AE_LINES_PKG.set_ae_header_id (p_ae_header_id => p_event_id ,
                                      p_header_num   => 0); -- 4262811
   --
   -- set accounting line options
   --
   l_ae_header_id:= xla_ae_lines_pkg.SetAcctLineOption(
           p_natural_side_code          => 'D'
         , p_gain_or_loss_flag          => 'N'
         , p_gl_transfer_mode_code      => 'S'
         , p_acct_entry_type_code       => 'E'
         , p_switch_side_flag           => 'Y'
         , p_merge_duplicate_code       => 'N'
         );
   --
   l_acc_rev_natural_side_code := 'C';  -- 4262811
   -- 
   --
   -- set accounting line type info
   --
   xla_ae_lines_pkg.SetAcctLineType
      (p_component_type             => l_component_type
      ,p_event_type_code            => l_event_type_code
      ,p_line_definition_owner_code => l_line_definition_owner_code
      ,p_line_definition_code       => l_line_definition_code
      ,p_accounting_line_code       => l_component_code
      ,p_accounting_line_type_code  => l_component_type_code
      ,p_accounting_line_appl_id    => l_component_appl_id
      ,p_amb_context_code           => l_amb_context_code
      ,p_entity_code                => l_entity_code
      ,p_event_class_code           => l_event_class_code);
   --
   -- set accounting class
   --
   xla_ae_lines_pkg.SetAcctClass(
           p_accounting_class_code  => 'TRV'
         , p_ae_header_id           => l_ae_header_id
         );

   --
   -- set rounding class
   --
   XLA_AE_LINES_PKG.g_rec_lines.array_rounding_class(XLA_AE_LINES_PKG.g_LineNumber) :=
                      'TRV';

   --
   xla_ae_lines_pkg.g_rec_lines.array_calculate_acctd_flag(xla_ae_lines_pkg.g_LineNumber) := p_calculate_acctd_flag;
   xla_ae_lines_pkg.g_rec_lines.array_calculate_g_l_flag(xla_ae_lines_pkg.g_LineNumber) := p_calculate_g_l_flag;
   --
   -- bulk performance
   --
   XLA_AE_LINES_PKG.g_rec_lines.array_balance_type_code(XLA_AE_LINES_PKG.g_LineNumber) := l_balance_type_code;

   XLA_AE_LINES_PKG.g_rec_lines.array_ledger_id(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id;

   -- 4955764
   XLA_AE_LINES_PKG.g_rec_lines.array_gl_date(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_HEADER_PKG.g_rec_header_new.array_gl_date(g_array_event(p_event_id).array_value_num('header_index'));

   -- 4458381 Public Sector Enh
      XLA_AE_LINES_PKG.g_rec_lines.array_encumbrance_type_id(XLA_AE_LINES_PKG.g_LineNumber) := 1060;
   --
   -- set accounting attributes for the line type
   --
   l_entered_amt_idx := 24;
   l_accted_amt_idx  := 29;
   l_bflow_applied_to_amt_idx  := 7;  -- 5132302
   l_rec_acct_attrs.array_acct_attr_code(1) := 'ACCOUNTING_REVERSAL_OPTION';
   l_rec_acct_attrs.array_char_value(1)  := p_source_19;
   l_rec_acct_attrs.array_acct_attr_code(2) := 'ALLOC_TO_APPLICATION_ID';
   l_rec_acct_attrs.array_num_value(2)  := 
xla_ae_sources_pkg.GetSystemSourceNum(
   p_source_code           => 'XLA_EVENT_APPL_ID'
 , p_source_type_code      => 'Y'
 , p_source_application_id =>  602
);
   l_rec_acct_attrs.array_acct_attr_code(3) := 'ALLOC_TO_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(3)  := p_source_21;
   l_rec_acct_attrs.array_acct_attr_code(4) := 'ALLOC_TO_ENTITY_CODE';
   l_rec_acct_attrs.array_char_value(4)  := 
xla_ae_sources_pkg.GetSystemSourceChar(
   p_source_code           => 'XLA_ENTITY_CODE'
 , p_source_type_code      => 'Y'
 , p_source_application_id =>  602
);
   l_rec_acct_attrs.array_acct_attr_code(5) := 'ALLOC_TO_FIRST_DIST_ID';
   l_rec_acct_attrs.array_num_value(5)  :=  to_char(p_source_23);
   l_rec_acct_attrs.array_acct_attr_code(6) := 'ALLOC_TO_FIRST_SYS_TRAN_ID';
   l_rec_acct_attrs.array_num_value(6)  :=  to_char(p_source_24);
   l_rec_acct_attrs.array_acct_attr_code(7) := 'APPLIED_TO_AMOUNT';
   l_rec_acct_attrs.array_num_value(7)  := p_source_57;
   l_rec_acct_attrs.array_acct_attr_code(8) := 'APPLIED_TO_APPLICATION_ID';
   l_rec_acct_attrs.array_num_value(8)  := p_source_25;
   l_rec_acct_attrs.array_acct_attr_code(9) := 'APPLIED_TO_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(9)  := p_source_26;
   l_rec_acct_attrs.array_acct_attr_code(10) := 'APPLIED_TO_ENTITY_CODE';
   l_rec_acct_attrs.array_char_value(10)  := p_source_27;
   l_rec_acct_attrs.array_acct_attr_code(11) := 'APPLIED_TO_FIRST_DIST_ID';
   l_rec_acct_attrs.array_num_value(11)  :=  to_char(p_source_28);
   l_rec_acct_attrs.array_acct_attr_code(12) := 'APPLIED_TO_FIRST_SYS_TRAN_ID';
   l_rec_acct_attrs.array_num_value(12)  :=  to_char(p_source_29);
   l_rec_acct_attrs.array_acct_attr_code(13) := 'DISTRIBUTION_IDENTIFIER_1';
   l_rec_acct_attrs.array_num_value(13)  :=  to_char(p_source_30);
   l_rec_acct_attrs.array_acct_attr_code(14) := 'DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(14)  := p_source_21;
   l_rec_acct_attrs.array_acct_attr_code(15) := 'ENC_UPG_CR_CCID';
   l_rec_acct_attrs.array_num_value(15)  := p_source_31;
   l_rec_acct_attrs.array_acct_attr_code(16) := 'ENC_UPG_CR_ENTERED_AMT';
   l_rec_acct_attrs.array_num_value(16)  := p_source_32;
   l_rec_acct_attrs.array_acct_attr_code(17) := 'ENC_UPG_CR_ENTERED_CURR';
   l_rec_acct_attrs.array_char_value(17)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(18) := 'ENC_UPG_CR_LEDGER_AMT';
   l_rec_acct_attrs.array_num_value(18)  := p_source_34;
   l_rec_acct_attrs.array_acct_attr_code(19) := 'ENC_UPG_DR_CCID';
   l_rec_acct_attrs.array_num_value(19)  := p_source_35;
   l_rec_acct_attrs.array_acct_attr_code(20) := 'ENC_UPG_DR_ENTERED_AMT';
   l_rec_acct_attrs.array_num_value(20)  := p_source_36;
   l_rec_acct_attrs.array_acct_attr_code(21) := 'ENC_UPG_DR_ENTERED_CURR';
   l_rec_acct_attrs.array_char_value(21)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(22) := 'ENC_UPG_DR_LEDGER_AMT';
   l_rec_acct_attrs.array_num_value(22)  := p_source_37;
   l_rec_acct_attrs.array_acct_attr_code(23) := 'ENC_UPG_OPTION';
   l_rec_acct_attrs.array_char_value(23)  := p_source_38;
   l_rec_acct_attrs.array_acct_attr_code(24) := 'ENTERED_CURRENCY_AMOUNT';
   l_rec_acct_attrs.array_num_value(24)  := p_source_57;
   l_rec_acct_attrs.array_acct_attr_code(25) := 'ENTERED_CURRENCY_CODE';
   l_rec_acct_attrs.array_char_value(25)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(26) := 'EXCHANGE_DATE';
   l_rec_acct_attrs.array_date_value(26)  := p_source_39;
   l_rec_acct_attrs.array_acct_attr_code(27) := 'EXCHANGE_RATE';
   l_rec_acct_attrs.array_num_value(27)  := p_source_40;
   l_rec_acct_attrs.array_acct_attr_code(28) := 'EXCHANGE_RATE_TYPE';
   l_rec_acct_attrs.array_char_value(28)  := p_source_41;
   l_rec_acct_attrs.array_acct_attr_code(29) := 'LEDGER_AMOUNT';
   l_rec_acct_attrs.array_num_value(29)  := p_source_66;
   l_rec_acct_attrs.array_acct_attr_code(30) := 'MULTIPERIOD_END_DATE';
   l_rec_acct_attrs.array_date_value(30)  := p_source_43;
   l_rec_acct_attrs.array_acct_attr_code(31) := 'MULTIPERIOD_OPTION';
   l_rec_acct_attrs.array_char_value(31)  := p_source_44;
   l_rec_acct_attrs.array_acct_attr_code(32) := 'MULTIPERIOD_START_DATE';
   l_rec_acct_attrs.array_date_value(32)  := p_source_45;
   l_rec_acct_attrs.array_acct_attr_code(33) := 'OVERRIDE_ACCTD_AMT_FLAG';
   l_rec_acct_attrs.array_char_value(33)  := p_source_46;
   l_rec_acct_attrs.array_acct_attr_code(34) := 'PARTY_ID';
   l_rec_acct_attrs.array_num_value(34)  := p_source_47;
   l_rec_acct_attrs.array_acct_attr_code(35) := 'PARTY_SITE_ID';
   l_rec_acct_attrs.array_num_value(35)  := p_source_48;
   l_rec_acct_attrs.array_acct_attr_code(36) := 'PARTY_TYPE';
   l_rec_acct_attrs.array_char_value(36)  := p_source_49;
   l_rec_acct_attrs.array_acct_attr_code(37) := 'REVERSED_DISTRIBUTION_ID1';
   l_rec_acct_attrs.array_num_value(37)  :=  to_char(p_source_50);
   l_rec_acct_attrs.array_acct_attr_code(38) := 'REVERSED_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(38)  := p_source_21;
   l_rec_acct_attrs.array_acct_attr_code(39) := 'STATISTICAL_AMOUNT';
   l_rec_acct_attrs.array_num_value(39)  := p_source_51;
   l_rec_acct_attrs.array_acct_attr_code(40) := 'TAX_LINE_REF_ID';
   l_rec_acct_attrs.array_num_value(40)  := p_source_52;
   l_rec_acct_attrs.array_acct_attr_code(41) := 'TAX_REC_NREC_DIST_REF_ID';
   l_rec_acct_attrs.array_num_value(41)  := p_source_53;
   l_rec_acct_attrs.array_acct_attr_code(42) := 'TAX_SUMMARY_LINE_REF_ID';
   l_rec_acct_attrs.array_num_value(42)  := p_source_54;
   l_rec_acct_attrs.array_acct_attr_code(43) := 'UPG_CR_ENC_TYPE_ID';
   l_rec_acct_attrs.array_num_value(43)  := p_source_55;
   l_rec_acct_attrs.array_acct_attr_code(44) := 'UPG_DR_ENC_TYPE_ID';
   l_rec_acct_attrs.array_num_value(44)  := p_source_56;

   XLA_AE_LINES_PKG.SetLineAcctAttrs(l_rec_acct_attrs);
   p_gain_or_loss_ref  := XLA_AE_LINES_PKG.g_rec_lines.array_gain_or_loss_ref(XLA_AE_LINES_PKG.g_LineNumber);

   ---------------------------------------------------------------------------------------------------------------
   -- 4336173 -- assign Business Flow Class (replace code in xla_ae_lines_pkg.Business_Flow_Validation)
   ---------------------------------------------------------------------------------------------------------------
   XLA_AE_LINES_PKG.g_rec_lines.array_business_class_code(XLA_AE_LINES_PKG.g_LineNumber) := l_bflow_class_code;

   l_actual_upg_option  := XLA_AE_LINES_PKG.g_rec_lines.array_actual_upg_option(XLA_AE_LINES_PKG.g_LineNumber);
   l_enc_upg_option     := XLA_AE_LINES_PKG.g_rec_lines.array_enc_upg_option(XLA_AE_LINES_PKG.g_LineNumber);

   IF xla_accounting_cache_pkg.GetValueChar
         (p_source_code         => 'LEDGER_CATEGORY_CODE'
         ,p_target_ledger_id    => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id) IN ('PRIMARY','ALC')
   AND l_bflow_method_code = 'PRIOR_ENTRY'
--   AND (l_actual_upg_option = 'Y' OR l_enc_upg_option = 'Y') Bug 4922099
   AND ( (NVL(l_actual_upg_option, 'N') IN ('Y', 'O')) OR
         (NVL(l_enc_upg_option, 'N') IN ('Y', 'O'))
       )
   THEN
         xla_ae_lines_pkg.BflowUpgEntry
           (p_business_method_code    => l_bflow_method_code
           ,p_business_class_code     => l_bflow_class_code
           ,p_balance_type            => l_balance_type_code);
   ELSE
      NULL;
-- No business flow processing for business flow method of NONE.
   END IF;

   --
   -- call analytical criteria
   --
   
   --
   -- call description
   --
   
xla_ae_lines_pkg.SetLineDescription(
   p_ae_header_id => l_ae_header_id
  ,p_description  => Description_2 (
     p_application_id         => p_application_id
   , p_ae_header_id           => l_ae_header_id 
, p_source_1 => p_source_1
   )
);


   --
   -- call ADRs
   -- Bug 4922099
   --
   IF ( (l_bflow_method_code <> 'PRIOR_ENTRY') OR
        (NVL(l_actual_upg_option, 'N') = 'O') OR
        (NVL(l_enc_upg_option, 'N') = 'O')
      )
   THEN
   NULL;
   --
   --
   
  l_ccid := AcctDerRule_7(
           p_application_id           => p_application_id
         , p_ae_header_id             => l_ae_header_id 
, p_source_11 => p_source_11
         , x_transaction_coa_id       => l_adr_transaction_coa_id
         , x_accounting_coa_id        => l_adr_accounting_coa_id
         , x_value_type_code          => l_adr_value_type_code
         , p_side                     => 'NA'
   );

   xla_ae_lines_pkg.set_ccid(
    p_code_combination_id          => l_ccid
  , p_value_type_code              => l_adr_value_type_code
  , p_transaction_coa_id           => l_adr_transaction_coa_id
  , p_accounting_coa_id            => l_adr_accounting_coa_id
  , p_adr_code                     => 'AP_INVOICE_DIST'
  , p_adr_type_code                => 'S'
  , p_component_type               => l_component_type
  , p_component_code               => l_component_code
  , p_component_type_code          => l_component_type_code
  , p_component_appl_id            => l_component_appl_id
  , p_amb_context_code             => l_amb_context_code
  , p_side                         => 'NA'
  );


   --
   --
   END IF;
   --
   -- Bug 4922099
   IF ( ( (NVL(l_actual_upg_option, 'N') = 'O') OR
          (NVL(l_enc_upg_option, 'N') = 'O')
        ) AND
        (l_bflow_method_code = 'PRIOR_ENTRY')
      )
   THEN
      IF
      --
      1 = 2
      --
      THEN
      xla_accounting_err_pkg.build_message
                                    (p_appli_s_name            => 'XLA'
                                    ,p_msg_name                => 'XLA_UPG_OVERRIDE_ADR_UNDEFINED'
                                    ,p_token_1                 => 'LINE_NUMBER'
                                    ,p_value_1                 => XLA_AE_LINES_PKG.g_LineNumber
                                    ,p_token_2                 => 'LINE_TYPE_NAME'
                                    ,p_value_2                 => XLA_AE_SOURCES_PKG.GetComponentName (
                                                                             l_component_type
                                                                            ,l_component_code
                                                                            ,l_component_type_code
                                                                            ,l_component_appl_id
                                                                            ,l_amb_context_code
                                                                            ,l_entity_code
                                                                            ,l_event_class_code
                                                                           )
                                    ,p_token_3                 => 'OWNER'
                                    ,p_value_3                 => xla_lookups_pkg.get_meaning(
                                                                          p_lookup_type     => 'XLA_OWNER_TYPE'
                                                                          ,p_lookup_code    => l_component_type_code
                                                                         )
                                    ,p_token_4                 => 'PRODUCT_NAME'
                                    ,p_value_4                 => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.application_name
                                    ,p_entity_id               => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.entity_id
                                    ,p_event_id                => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.event_id
                                    ,p_ledger_id               => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id
                                    ,p_ae_header_id            =>  NULL
                                       );

        IF (C_LEVEL_ERROR>= g_log_level) THEN
                 trace
                      (p_msg      => 'ERROR: XLA_UPG_OVERRIDE_ADR_UNDEFINED'
                      ,p_level    => C_LEVEL_ERROR
                      ,p_module   => l_log_module);
        END IF;
      END IF;
   END IF;
   --
   --
   ------------------------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- NOTE: XLA_AE_LINES_PKG.ValidateCurrentLine should NOT be generated if business flow method is
   -- Prior Entry.  Currently, the following code is always generated.
   ------------------------------------------------------------------------------------------------
   XLA_AE_LINES_PKG.ValidateCurrentLine;

   ------------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- Populated credit and debit amounts -- Need to generate this within IF <condition>
   ------------------------------------------------------------------------------------
   XLA_AE_LINES_PKG.SetDebitCreditAmounts;

   ----------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- Update journal entry status -- Need to generate this within IF <condition>
   ----------------------------------------------------------------------------------
   XLA_AE_JOURNAL_ENTRY_PKG.UpdateJournalEntryStatus
         (p_hdr_idx => g_array_event(p_event_id).array_value_num('header_index')
         ,p_balance_type_code => l_balance_type_code
         );

   -------------------------------------------------------------------------------------------
   -- 4262811 - Generate the Accrual Reversal lines
   -------------------------------------------------------------------------------------------
   BEGIN
      l_acc_rev_flag := XLA_AE_HEADER_PKG.g_rec_header_new.array_accrual_reversal_flag
                              (g_array_event(p_event_id).array_value_num('header_index'));
      IF l_acc_rev_flag IS NULL THEN
         l_acc_rev_flag := 'N';
      END IF;
   EXCEPTION
      WHEN OTHERS THEN
         l_acc_rev_flag := 'N';
   END;
   --
   IF (l_acc_rev_flag = 'Y') THEN

       -- 4645092  ------------------------------------------------------------------------------
       -- To allow MPA report to determine if it should generate report process
       XLA_ACCOUNTING_PKG.g_mpa_accrual_exists := 'Y';
       ------------------------------------------------------------------------------------------

       l_accrual_line_num := XLA_AE_LINES_PKG.g_LineNumber;
       XLA_AE_LINES_PKG.CopyLineInfo(l_accrual_line_num);
   -- added call to set_ccid to execute mapping  for secondary accrual reversal entries bug 7444204
   -- call ADRs
   -- Bug 4922099
   --
   IF ( (l_bflow_method_code <> 'PRIOR_ENTRY') OR
        (NVL(l_actual_upg_option, 'N') = 'O') OR
        (NVL(l_enc_upg_option, 'N') = 'O')
      )
   THEN
   NULL;
   --
   --
   
  l_ccid := AcctDerRule_7(
           p_application_id           => p_application_id
         , p_ae_header_id             => l_ae_header_id 
, p_source_11 => p_source_11
         , x_transaction_coa_id       => l_adr_transaction_coa_id
         , x_accounting_coa_id        => l_adr_accounting_coa_id
         , x_value_type_code          => l_adr_value_type_code
         , p_side                     => 'NA'
   );

   xla_ae_lines_pkg.set_ccid(
    p_code_combination_id          => l_ccid
  , p_value_type_code              => l_adr_value_type_code
  , p_transaction_coa_id           => l_adr_transaction_coa_id
  , p_accounting_coa_id            => l_adr_accounting_coa_id
  , p_adr_code                     => 'AP_INVOICE_DIST'
  , p_adr_type_code                => 'S'
  , p_component_type               => l_component_type
  , p_component_code               => l_component_code
  , p_component_type_code          => l_component_type_code
  , p_component_appl_id            => l_component_appl_id
  , p_amb_context_code             => l_amb_context_code
  , p_side                         => 'NA'
  );


   --
   --
   END IF;

       --
       -- Update the line information that should be overwritten
       --
       XLA_AE_LINES_PKG.set_ae_header_id(p_ae_header_id => p_event_id ,
                                         p_header_num   => 1);
       XLA_AE_LINES_PKG.g_rec_lines.array_header_num(XLA_AE_LINES_PKG.g_LineNumber)  :=1;

       XLA_AE_LINES_PKG.g_rec_lines.array_business_class_code(XLA_AE_LINES_PKG.g_LineNumber) := NULL; -- 4669271

       IF l_bflow_method_code <> 'NONE' THEN  -- 4655713b
          XLA_AE_LINES_PKG.g_rec_lines.array_reversal_code(XLA_AE_LINES_PKG.g_LineNumber) := CONCAT('MPA_',l_bflow_method_code);
       END IF;

      --
      -- Depending on the Reversal Method setup, do a switch side or changes sign for the amounts
      --
      IF (XLA_AE_JOURNAL_ENTRY_PKG.g_cache_ledgers_info.ledger_reversal_option = 'SIDE') THEN
          XLA_AE_LINES_PKG.g_rec_lines.array_natural_side_code(XLA_AE_LINES_PKG.g_LineNumber) :=  l_acc_rev_natural_side_code;
      ELSE
          ---------------------------------------------------------------------------------------------------
          -- 4262811a Switch Sign
          ---------------------------------------------------------------------------------------------------
          XLA_AE_LINES_PKG.g_rec_lines.array_switch_side_flag(XLA_AE_LINES_PKG.g_LineNumber) := 'N';  -- 5052518
          XLA_AE_LINES_PKG.g_rec_lines.array_ledger_amount(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_ledger_amount(XLA_AE_LINES_PKG.g_LineNumber) * -1;
          XLA_AE_LINES_PKG.g_rec_lines.array_entered_amount(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_entered_amount(XLA_AE_LINES_PKG.g_LineNumber) * -1;
          -- 5132302
          XLA_AE_LINES_PKG.g_rec_lines.array_bflow_applied_to_amt(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_bflow_applied_to_amt(XLA_AE_LINES_PKG.g_LineNumber) * -1;

      END IF;

      -- 4955764
      XLA_AE_LINES_PKG.g_rec_lines.array_gl_date(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_HEADER_PKG.g_rec_header_new.array_gl_date(g_array_event(p_event_id).array_value_num('acc_rev_header_index'));


      XLA_AE_LINES_PKG.ValidateCurrentLine;
      XLA_AE_LINES_PKG.SetDebitCreditAmounts;

      XLA_AE_JOURNAL_ENTRY_PKG.UpdateJournalEntryStatus
               (p_hdr_idx           => g_array_event(p_event_id).array_value_num('acc_rev_header_index')
               ,p_balance_type_code => l_balance_type_code);

   END IF;

   -----------------------------------------------------------------------------------------
   -- 4262811 Multiperiod Accounting
   -----------------------------------------------------------------------------------------
     -- No MPA option is assigned.


END IF;
END IF;
--

--
IF (C_LEVEL_PROCEDURE >= g_log_level) THEN
   trace
      (p_msg      => 'END of AcctLineType_83'
      ,p_level    => C_LEVEL_PROCEDURE
      ,p_module   => l_log_module);
END IF;
--
EXCEPTION
  WHEN xla_exceptions_pkg.application_exception THEN
      RAISE;
  WHEN OTHERS THEN
       xla_exceptions_pkg.raise_message
           (p_location => 'XLA_00200_AAD_S_000010_BC_PKG.AcctLineType_83');
END AcctLineType_83;
--

---------------------------------------
--
-- PRIVATE FUNCTION
--         AcctLineType_84
--
---------------------------------------
PROCEDURE AcctLineType_84 (
  p_application_id        IN NUMBER
 ,p_event_id              IN NUMBER
 ,p_calculate_acctd_flag  IN VARCHAR2
 ,p_calculate_g_l_flag    IN VARCHAR2
 ,p_actual_flag           IN OUT VARCHAR2
 ,p_balance_type_code     OUT VARCHAR2
 ,p_gain_or_loss_ref      OUT VARCHAR2
 
--Invoice Distribution Description
 , p_source_1            IN VARCHAR2
--Invoice Distribution Account
 , p_source_11            IN NUMBER
--Invoice Distribution Type
 , p_source_15            IN VARCHAR2
 , p_source_15_meaning    IN VARCHAR2
--Purchasing Encumbrance Option
 , p_source_17            IN VARCHAR2
 , p_source_17_meaning    IN VARCHAR2
--Accounting Reversal Indicator
 , p_source_19            IN VARCHAR2
--Distribution Link Type
 , p_source_21            IN VARCHAR2
--Allocation to Main Distribution Identifier
 , p_source_23            IN NUMBER
--Invoice Identifier
 , p_source_24            IN NUMBER
--Business Flow Accounts Payable Application Identifier
 , p_source_25            IN NUMBER
--Business Flow Invoice Distribution Type
 , p_source_26            IN VARCHAR2
--Business Flow Invoice Entity Code
 , p_source_27            IN VARCHAR2
--Business Flow Invoice Distribution Identifier
 , p_source_28            IN NUMBER
--Business Flow Invoice Identifier
 , p_source_29            IN NUMBER
--Invoice Distribution Identifier
 , p_source_30            IN NUMBER
--Payables Encumbrance Upgrade Credit Account
 , p_source_31            IN NUMBER
--Payables Encumbrance Upgrade Credit Amount
 , p_source_32            IN NUMBER
--Invoice Currency Code
 , p_source_33            IN VARCHAR2
--Payables Encumbrance Upgrade Credit Base Amount
 , p_source_34            IN NUMBER
--Payables Encumbrance Upgrade Debit Account
 , p_source_35            IN NUMBER
--Payables Encumbrance Upgrade Debit Amount
 , p_source_36            IN NUMBER
--Payables Encumbrance Upgrade Debit Base Amount
 , p_source_37            IN NUMBER
--Payables Encumbrance Upgrade Option
 , p_source_38            IN VARCHAR2
--Invoice Exchange Date
 , p_source_39            IN DATE
--Invoice Exchange Rate
 , p_source_40            IN NUMBER
--Invoice Exchange Rate Type
 , p_source_41            IN VARCHAR2
--Deferred Accounting End Date
 , p_source_43            IN DATE
--Deferred Accounting Option
 , p_source_44            IN VARCHAR2
--Deferred Accounting Start Date
 , p_source_45            IN DATE
--Override Accounted Amount Indicator
 , p_source_46            IN VARCHAR2
 , p_source_46_meaning    IN VARCHAR2
--Invoice Supplier Identifier
 , p_source_47            IN NUMBER
--Invoice Supplier Site Identifier
 , p_source_48            IN NUMBER
--Third Party Type
 , p_source_49            IN VARCHAR2
--Parent Reversal Identifier
 , p_source_50            IN NUMBER
--Invoice Distribution Statistical Amount
 , p_source_51            IN NUMBER
--Invoice Distribution Tax Line Identifier
 , p_source_52            IN NUMBER
--Invoice Distribution Tax Distribution Identifier from Tax
 , p_source_53            IN NUMBER
--Invoice Distribution Summary Tax Line Identifier
 , p_source_54            IN NUMBER
--Payables Upgrade Credit Encumbrance Type Identifier
 , p_source_55            IN NUMBER
--Payables Upgrade Debit Encumbrance Type Identifier
 , p_source_56            IN NUMBER
--Invoice Distribution Encumbrance Amount
 , p_source_65            IN NUMBER
--Invoice Distribution Encumbrance Ledger Amount
 , p_source_66            IN NUMBER
)
IS

l_component_type              VARCHAR2(80);
l_component_code              VARCHAR2(30);
l_component_type_code         VARCHAR2(1);
l_component_appl_id           INTEGER;
l_amb_context_code            VARCHAR2(30);
l_entity_code                 VARCHAR2(30);
l_event_class_code            VARCHAR2(30);
l_ae_header_id                NUMBER;
l_event_type_code             VARCHAR2(30);
l_line_definition_code        VARCHAR2(30);
l_line_definition_owner_code  VARCHAR2(1);
--
-- adr variables
l_segment                     VARCHAR2(30);
l_ccid                        NUMBER;
l_adr_transaction_coa_id      NUMBER;
l_adr_accounting_coa_id       NUMBER;
l_adr_flexfield_segment_code  VARCHAR2(30);
l_adr_flex_value_set_id       NUMBER;
l_adr_value_type_code         VARCHAR2(30);
l_adr_value_combination_id    NUMBER;
l_adr_value_segment_code      VARCHAR2(30);

l_bflow_method_code           VARCHAR2(30);  -- 4219869 Business Flow
l_bflow_class_code            VARCHAR2(30);  -- 4219869 Business Flow
l_inherit_desc_flag           VARCHAR2(1);   -- 4219869 Business Flow
l_budgetary_control_flag      VARCHAR2(1);   -- 4458381 Public Sector Enh

-- 4262811 Variables ------------------------------------------------------------------------------------------
l_entered_amt_idx             NUMBER;
l_accted_amt_idx              NUMBER;
l_acc_rev_flag                VARCHAR2(1);
l_accrual_line_num            NUMBER;
l_tmp_amt                     NUMBER;
l_acc_rev_natural_side_code   VARCHAR2(1);

l_num_entries                 NUMBER;
l_gl_dates                    xla_ae_journal_entry_pkg.t_array_date;
l_accted_amts                 xla_ae_journal_entry_pkg.t_array_num;
l_entered_amts                xla_ae_journal_entry_pkg.t_array_num;
l_period_names                xla_ae_journal_entry_pkg.t_array_V15L;
l_recog_line_1                NUMBER;
l_recog_line_2                NUMBER;

l_bflow_applied_to_amt_idx    NUMBER;                                -- 5132302
l_bflow_applied_to_amt        NUMBER;                                -- 5132302
l_bflow_applied_to_amts       xla_ae_journal_entry_pkg.t_array_num;  -- 5132302

l_event_id                    NUMBER;  -- To handle MPA header Description: xla_ae_header_pkg.SetHdrDescription

--l_rounding_ccy                VARCHAR2(15); -- To handle MPA rounding  4262811b
l_same_currency               BOOLEAN;        -- To handle MPA rounding  4262811b

---------------------------------------------------------------------------------------------------------------


--
-- bulk performance
--
l_balance_type_code           VARCHAR2(1);
l_rec_acct_attrs              XLA_AE_LINES_PKG.t_rec_acct_attrs;
l_log_module                  VARCHAR2(240);

--
-- Upgrade strategy
--
l_actual_upg_option           VARCHAR2(1);
l_enc_upg_option           VARCHAR2(1);

--
BEGIN
--
IF g_log_enabled THEN
      l_log_module := C_DEFAULT_MODULE||'.AcctLineType_84';
END IF;
--
IF (C_LEVEL_PROCEDURE >= g_log_level) THEN

      trace
         (p_msg      => 'BEGIN of AcctLineType_84'
         ,p_level    => C_LEVEL_PROCEDURE
         ,p_module   => l_log_module);

END IF;
--
l_component_type             := 'AMB_JLT';
l_component_code             := 'AP_TAX_RATE_VAR_PP_ENC_DR';
l_component_type_code        := 'S';
l_component_appl_id          :=  200;
l_amb_context_code           := 'DEFAULT';
l_entity_code                := 'AP_INVOICES';
l_event_class_code           := 'PREPAYMENTS';
l_event_type_code            := 'PREPAYMENTS_ALL';
l_line_definition_owner_code := 'S';
l_line_definition_code       := 'ENC_PREPAY_ALL';
--
l_balance_type_code          := 'E';
l_segment                     := NULL;
l_ccid                        := NULL;
l_adr_transaction_coa_id      := NULL;
l_adr_accounting_coa_id       := NULL;
l_adr_flexfield_segment_code  := NULL;
l_adr_flex_value_set_id       := NULL;
l_adr_value_type_code         := NULL;
l_adr_value_combination_id    := NULL;
l_adr_value_segment_code      := NULL;

l_bflow_method_code          := 'NONE';   -- 4219869 Business Flow
l_bflow_class_code           := 'AP_INV_ENCUM';    -- 4219869 Business Flow
l_inherit_desc_flag          := 'N';   -- 4219869 Business Flow
l_budgetary_control_flag     := 'Y';

l_bflow_applied_to_amt_idx   := NULL; -- 5132302
l_bflow_applied_to_amt       := NULL; -- 5132302
l_entered_amt_idx            := NULL;          -- 4262811
l_accted_amt_idx             := NULL;          -- 4262811
l_acc_rev_flag               := NULL;          -- 4262811
l_accrual_line_num           := NULL;          -- 4262811
l_tmp_amt                    := NULL;          -- 4262811
--
 
IF XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id = XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.ledger_id OR
    l_balance_type_code <> 'B' THEN
IF NVL(p_source_15,'
') =  'TRV' AND 
NVL(p_source_17,'
') =  'Y'
 THEN 

   --
   XLA_AE_LINES_PKG.SetNewLine;

   p_balance_type_code          := l_balance_type_code;
   -- set the flag so later we will know whether the gain loss line needs to be created
   
   IF(l_balance_type_code = 'A' and p_actual_flag is null) THEN
     p_actual_flag :='A';
   END IF;

   --
   -- bulk performance
   --
   XLA_AE_LINES_PKG.set_ae_header_id (p_ae_header_id => p_event_id ,
                                      p_header_num   => 0); -- 4262811
   --
   -- set accounting line options
   --
   l_ae_header_id:= xla_ae_lines_pkg.SetAcctLineOption(
           p_natural_side_code          => 'D'
         , p_gain_or_loss_flag          => 'N'
         , p_gl_transfer_mode_code      => 'S'
         , p_acct_entry_type_code       => 'E'
         , p_switch_side_flag           => 'Y'
         , p_merge_duplicate_code       => 'N'
         );
   --
   l_acc_rev_natural_side_code := 'C';  -- 4262811
   -- 
   --
   -- set accounting line type info
   --
   xla_ae_lines_pkg.SetAcctLineType
      (p_component_type             => l_component_type
      ,p_event_type_code            => l_event_type_code
      ,p_line_definition_owner_code => l_line_definition_owner_code
      ,p_line_definition_code       => l_line_definition_code
      ,p_accounting_line_code       => l_component_code
      ,p_accounting_line_type_code  => l_component_type_code
      ,p_accounting_line_appl_id    => l_component_appl_id
      ,p_amb_context_code           => l_amb_context_code
      ,p_entity_code                => l_entity_code
      ,p_event_class_code           => l_event_class_code);
   --
   -- set accounting class
   --
   xla_ae_lines_pkg.SetAcctClass(
           p_accounting_class_code  => 'TRV'
         , p_ae_header_id           => l_ae_header_id
         );

   --
   -- set rounding class
   --
   XLA_AE_LINES_PKG.g_rec_lines.array_rounding_class(XLA_AE_LINES_PKG.g_LineNumber) :=
                      'TRV';

   --
   xla_ae_lines_pkg.g_rec_lines.array_calculate_acctd_flag(xla_ae_lines_pkg.g_LineNumber) := p_calculate_acctd_flag;
   xla_ae_lines_pkg.g_rec_lines.array_calculate_g_l_flag(xla_ae_lines_pkg.g_LineNumber) := p_calculate_g_l_flag;
   --
   -- bulk performance
   --
   XLA_AE_LINES_PKG.g_rec_lines.array_balance_type_code(XLA_AE_LINES_PKG.g_LineNumber) := l_balance_type_code;

   XLA_AE_LINES_PKG.g_rec_lines.array_ledger_id(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id;

   -- 4955764
   XLA_AE_LINES_PKG.g_rec_lines.array_gl_date(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_HEADER_PKG.g_rec_header_new.array_gl_date(g_array_event(p_event_id).array_value_num('header_index'));

   -- 4458381 Public Sector Enh
      XLA_AE_LINES_PKG.g_rec_lines.array_encumbrance_type_id(XLA_AE_LINES_PKG.g_LineNumber) := 1060;
   --
   -- set accounting attributes for the line type
   --
   l_entered_amt_idx := 23;
   l_accted_amt_idx  := 28;
   l_bflow_applied_to_amt_idx  := NULL;  -- 5132302
   l_rec_acct_attrs.array_acct_attr_code(1) := 'ACCOUNTING_REVERSAL_OPTION';
   l_rec_acct_attrs.array_char_value(1)  := p_source_19;
   l_rec_acct_attrs.array_acct_attr_code(2) := 'ALLOC_TO_APPLICATION_ID';
   l_rec_acct_attrs.array_num_value(2)  := 
xla_ae_sources_pkg.GetSystemSourceNum(
   p_source_code           => 'XLA_EVENT_APPL_ID'
 , p_source_type_code      => 'Y'
 , p_source_application_id =>  602
);
   l_rec_acct_attrs.array_acct_attr_code(3) := 'ALLOC_TO_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(3)  := p_source_21;
   l_rec_acct_attrs.array_acct_attr_code(4) := 'ALLOC_TO_ENTITY_CODE';
   l_rec_acct_attrs.array_char_value(4)  := 
xla_ae_sources_pkg.GetSystemSourceChar(
   p_source_code           => 'XLA_ENTITY_CODE'
 , p_source_type_code      => 'Y'
 , p_source_application_id =>  602
);
   l_rec_acct_attrs.array_acct_attr_code(5) := 'ALLOC_TO_FIRST_DIST_ID';
   l_rec_acct_attrs.array_num_value(5)  :=  to_char(p_source_23);
   l_rec_acct_attrs.array_acct_attr_code(6) := 'ALLOC_TO_FIRST_SYS_TRAN_ID';
   l_rec_acct_attrs.array_num_value(6)  :=  to_char(p_source_24);
   l_rec_acct_attrs.array_acct_attr_code(7) := 'APPLIED_TO_APPLICATION_ID';
   l_rec_acct_attrs.array_num_value(7)  := p_source_25;
   l_rec_acct_attrs.array_acct_attr_code(8) := 'APPLIED_TO_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(8)  := p_source_26;
   l_rec_acct_attrs.array_acct_attr_code(9) := 'APPLIED_TO_ENTITY_CODE';
   l_rec_acct_attrs.array_char_value(9)  := p_source_27;
   l_rec_acct_attrs.array_acct_attr_code(10) := 'APPLIED_TO_FIRST_DIST_ID';
   l_rec_acct_attrs.array_num_value(10)  :=  to_char(p_source_28);
   l_rec_acct_attrs.array_acct_attr_code(11) := 'APPLIED_TO_FIRST_SYS_TRAN_ID';
   l_rec_acct_attrs.array_num_value(11)  :=  to_char(p_source_29);
   l_rec_acct_attrs.array_acct_attr_code(12) := 'DISTRIBUTION_IDENTIFIER_1';
   l_rec_acct_attrs.array_num_value(12)  :=  to_char(p_source_30);
   l_rec_acct_attrs.array_acct_attr_code(13) := 'DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(13)  := p_source_21;
   l_rec_acct_attrs.array_acct_attr_code(14) := 'ENC_UPG_CR_CCID';
   l_rec_acct_attrs.array_num_value(14)  := p_source_31;
   l_rec_acct_attrs.array_acct_attr_code(15) := 'ENC_UPG_CR_ENTERED_AMT';
   l_rec_acct_attrs.array_num_value(15)  := p_source_32;
   l_rec_acct_attrs.array_acct_attr_code(16) := 'ENC_UPG_CR_ENTERED_CURR';
   l_rec_acct_attrs.array_char_value(16)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(17) := 'ENC_UPG_CR_LEDGER_AMT';
   l_rec_acct_attrs.array_num_value(17)  := p_source_34;
   l_rec_acct_attrs.array_acct_attr_code(18) := 'ENC_UPG_DR_CCID';
   l_rec_acct_attrs.array_num_value(18)  := p_source_35;
   l_rec_acct_attrs.array_acct_attr_code(19) := 'ENC_UPG_DR_ENTERED_AMT';
   l_rec_acct_attrs.array_num_value(19)  := p_source_36;
   l_rec_acct_attrs.array_acct_attr_code(20) := 'ENC_UPG_DR_ENTERED_CURR';
   l_rec_acct_attrs.array_char_value(20)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(21) := 'ENC_UPG_DR_LEDGER_AMT';
   l_rec_acct_attrs.array_num_value(21)  := p_source_37;
   l_rec_acct_attrs.array_acct_attr_code(22) := 'ENC_UPG_OPTION';
   l_rec_acct_attrs.array_char_value(22)  := p_source_38;
   l_rec_acct_attrs.array_acct_attr_code(23) := 'ENTERED_CURRENCY_AMOUNT';
   l_rec_acct_attrs.array_num_value(23)  := p_source_65;
   l_rec_acct_attrs.array_acct_attr_code(24) := 'ENTERED_CURRENCY_CODE';
   l_rec_acct_attrs.array_char_value(24)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(25) := 'EXCHANGE_DATE';
   l_rec_acct_attrs.array_date_value(25)  := p_source_39;
   l_rec_acct_attrs.array_acct_attr_code(26) := 'EXCHANGE_RATE';
   l_rec_acct_attrs.array_num_value(26)  := p_source_40;
   l_rec_acct_attrs.array_acct_attr_code(27) := 'EXCHANGE_RATE_TYPE';
   l_rec_acct_attrs.array_char_value(27)  := p_source_41;
   l_rec_acct_attrs.array_acct_attr_code(28) := 'LEDGER_AMOUNT';
   l_rec_acct_attrs.array_num_value(28)  := p_source_66;
   l_rec_acct_attrs.array_acct_attr_code(29) := 'MULTIPERIOD_END_DATE';
   l_rec_acct_attrs.array_date_value(29)  := p_source_43;
   l_rec_acct_attrs.array_acct_attr_code(30) := 'MULTIPERIOD_OPTION';
   l_rec_acct_attrs.array_char_value(30)  := p_source_44;
   l_rec_acct_attrs.array_acct_attr_code(31) := 'MULTIPERIOD_START_DATE';
   l_rec_acct_attrs.array_date_value(31)  := p_source_45;
   l_rec_acct_attrs.array_acct_attr_code(32) := 'OVERRIDE_ACCTD_AMT_FLAG';
   l_rec_acct_attrs.array_char_value(32)  := p_source_46;
   l_rec_acct_attrs.array_acct_attr_code(33) := 'PARTY_ID';
   l_rec_acct_attrs.array_num_value(33)  := p_source_47;
   l_rec_acct_attrs.array_acct_attr_code(34) := 'PARTY_SITE_ID';
   l_rec_acct_attrs.array_num_value(34)  := p_source_48;
   l_rec_acct_attrs.array_acct_attr_code(35) := 'PARTY_TYPE';
   l_rec_acct_attrs.array_char_value(35)  := p_source_49;
   l_rec_acct_attrs.array_acct_attr_code(36) := 'REVERSED_DISTRIBUTION_ID1';
   l_rec_acct_attrs.array_num_value(36)  :=  to_char(p_source_50);
   l_rec_acct_attrs.array_acct_attr_code(37) := 'REVERSED_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(37)  := p_source_21;
   l_rec_acct_attrs.array_acct_attr_code(38) := 'STATISTICAL_AMOUNT';
   l_rec_acct_attrs.array_num_value(38)  := p_source_51;
   l_rec_acct_attrs.array_acct_attr_code(39) := 'TAX_LINE_REF_ID';
   l_rec_acct_attrs.array_num_value(39)  := p_source_52;
   l_rec_acct_attrs.array_acct_attr_code(40) := 'TAX_REC_NREC_DIST_REF_ID';
   l_rec_acct_attrs.array_num_value(40)  := p_source_53;
   l_rec_acct_attrs.array_acct_attr_code(41) := 'TAX_SUMMARY_LINE_REF_ID';
   l_rec_acct_attrs.array_num_value(41)  := p_source_54;
   l_rec_acct_attrs.array_acct_attr_code(42) := 'UPG_CR_ENC_TYPE_ID';
   l_rec_acct_attrs.array_num_value(42)  := p_source_55;
   l_rec_acct_attrs.array_acct_attr_code(43) := 'UPG_DR_ENC_TYPE_ID';
   l_rec_acct_attrs.array_num_value(43)  := p_source_56;

   XLA_AE_LINES_PKG.SetLineAcctAttrs(l_rec_acct_attrs);
   p_gain_or_loss_ref  := XLA_AE_LINES_PKG.g_rec_lines.array_gain_or_loss_ref(XLA_AE_LINES_PKG.g_LineNumber);

   ---------------------------------------------------------------------------------------------------------------
   -- 4336173 -- assign Business Flow Class (replace code in xla_ae_lines_pkg.Business_Flow_Validation)
   ---------------------------------------------------------------------------------------------------------------
   XLA_AE_LINES_PKG.g_rec_lines.array_business_class_code(XLA_AE_LINES_PKG.g_LineNumber) := l_bflow_class_code;

   l_actual_upg_option  := XLA_AE_LINES_PKG.g_rec_lines.array_actual_upg_option(XLA_AE_LINES_PKG.g_LineNumber);
   l_enc_upg_option     := XLA_AE_LINES_PKG.g_rec_lines.array_enc_upg_option(XLA_AE_LINES_PKG.g_LineNumber);

   IF xla_accounting_cache_pkg.GetValueChar
         (p_source_code         => 'LEDGER_CATEGORY_CODE'
         ,p_target_ledger_id    => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id) IN ('PRIMARY','ALC')
   AND l_bflow_method_code = 'PRIOR_ENTRY'
--   AND (l_actual_upg_option = 'Y' OR l_enc_upg_option = 'Y') Bug 4922099
   AND ( (NVL(l_actual_upg_option, 'N') IN ('Y', 'O')) OR
         (NVL(l_enc_upg_option, 'N') IN ('Y', 'O'))
       )
   THEN
         xla_ae_lines_pkg.BflowUpgEntry
           (p_business_method_code    => l_bflow_method_code
           ,p_business_class_code     => l_bflow_class_code
           ,p_balance_type            => l_balance_type_code);
   ELSE
      NULL;
-- No business flow processing for business flow method of NONE.
   END IF;

   --
   -- call analytical criteria
   --
   
   --
   -- call description
   --
   
xla_ae_lines_pkg.SetLineDescription(
   p_ae_header_id => l_ae_header_id
  ,p_description  => Description_2 (
     p_application_id         => p_application_id
   , p_ae_header_id           => l_ae_header_id 
, p_source_1 => p_source_1
   )
);


   --
   -- call ADRs
   -- Bug 4922099
   --
   IF ( (l_bflow_method_code <> 'PRIOR_ENTRY') OR
        (NVL(l_actual_upg_option, 'N') = 'O') OR
        (NVL(l_enc_upg_option, 'N') = 'O')
      )
   THEN
   NULL;
   --
   --
   
  l_ccid := AcctDerRule_7(
           p_application_id           => p_application_id
         , p_ae_header_id             => l_ae_header_id 
, p_source_11 => p_source_11
         , x_transaction_coa_id       => l_adr_transaction_coa_id
         , x_accounting_coa_id        => l_adr_accounting_coa_id
         , x_value_type_code          => l_adr_value_type_code
         , p_side                     => 'NA'
   );

   xla_ae_lines_pkg.set_ccid(
    p_code_combination_id          => l_ccid
  , p_value_type_code              => l_adr_value_type_code
  , p_transaction_coa_id           => l_adr_transaction_coa_id
  , p_accounting_coa_id            => l_adr_accounting_coa_id
  , p_adr_code                     => 'AP_INVOICE_DIST'
  , p_adr_type_code                => 'S'
  , p_component_type               => l_component_type
  , p_component_code               => l_component_code
  , p_component_type_code          => l_component_type_code
  , p_component_appl_id            => l_component_appl_id
  , p_amb_context_code             => l_amb_context_code
  , p_side                         => 'NA'
  );


   --
   --
   END IF;
   --
   -- Bug 4922099
   IF ( ( (NVL(l_actual_upg_option, 'N') = 'O') OR
          (NVL(l_enc_upg_option, 'N') = 'O')
        ) AND
        (l_bflow_method_code = 'PRIOR_ENTRY')
      )
   THEN
      IF
      --
      1 = 2
      --
      THEN
      xla_accounting_err_pkg.build_message
                                    (p_appli_s_name            => 'XLA'
                                    ,p_msg_name                => 'XLA_UPG_OVERRIDE_ADR_UNDEFINED'
                                    ,p_token_1                 => 'LINE_NUMBER'
                                    ,p_value_1                 => XLA_AE_LINES_PKG.g_LineNumber
                                    ,p_token_2                 => 'LINE_TYPE_NAME'
                                    ,p_value_2                 => XLA_AE_SOURCES_PKG.GetComponentName (
                                                                             l_component_type
                                                                            ,l_component_code
                                                                            ,l_component_type_code
                                                                            ,l_component_appl_id
                                                                            ,l_amb_context_code
                                                                            ,l_entity_code
                                                                            ,l_event_class_code
                                                                           )
                                    ,p_token_3                 => 'OWNER'
                                    ,p_value_3                 => xla_lookups_pkg.get_meaning(
                                                                          p_lookup_type     => 'XLA_OWNER_TYPE'
                                                                          ,p_lookup_code    => l_component_type_code
                                                                         )
                                    ,p_token_4                 => 'PRODUCT_NAME'
                                    ,p_value_4                 => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.application_name
                                    ,p_entity_id               => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.entity_id
                                    ,p_event_id                => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.event_id
                                    ,p_ledger_id               => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id
                                    ,p_ae_header_id            =>  NULL
                                       );

        IF (C_LEVEL_ERROR>= g_log_level) THEN
                 trace
                      (p_msg      => 'ERROR: XLA_UPG_OVERRIDE_ADR_UNDEFINED'
                      ,p_level    => C_LEVEL_ERROR
                      ,p_module   => l_log_module);
        END IF;
      END IF;
   END IF;
   --
   --
   ------------------------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- NOTE: XLA_AE_LINES_PKG.ValidateCurrentLine should NOT be generated if business flow method is
   -- Prior Entry.  Currently, the following code is always generated.
   ------------------------------------------------------------------------------------------------
   XLA_AE_LINES_PKG.ValidateCurrentLine;

   ------------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- Populated credit and debit amounts -- Need to generate this within IF <condition>
   ------------------------------------------------------------------------------------
   XLA_AE_LINES_PKG.SetDebitCreditAmounts;

   ----------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- Update journal entry status -- Need to generate this within IF <condition>
   ----------------------------------------------------------------------------------
   XLA_AE_JOURNAL_ENTRY_PKG.UpdateJournalEntryStatus
         (p_hdr_idx => g_array_event(p_event_id).array_value_num('header_index')
         ,p_balance_type_code => l_balance_type_code
         );

   -------------------------------------------------------------------------------------------
   -- 4262811 - Generate the Accrual Reversal lines
   -------------------------------------------------------------------------------------------
   BEGIN
      l_acc_rev_flag := XLA_AE_HEADER_PKG.g_rec_header_new.array_accrual_reversal_flag
                              (g_array_event(p_event_id).array_value_num('header_index'));
      IF l_acc_rev_flag IS NULL THEN
         l_acc_rev_flag := 'N';
      END IF;
   EXCEPTION
      WHEN OTHERS THEN
         l_acc_rev_flag := 'N';
   END;
   --
   IF (l_acc_rev_flag = 'Y') THEN

       -- 4645092  ------------------------------------------------------------------------------
       -- To allow MPA report to determine if it should generate report process
       XLA_ACCOUNTING_PKG.g_mpa_accrual_exists := 'Y';
       ------------------------------------------------------------------------------------------

       l_accrual_line_num := XLA_AE_LINES_PKG.g_LineNumber;
       XLA_AE_LINES_PKG.CopyLineInfo(l_accrual_line_num);
   -- added call to set_ccid to execute mapping  for secondary accrual reversal entries bug 7444204
   -- call ADRs
   -- Bug 4922099
   --
   IF ( (l_bflow_method_code <> 'PRIOR_ENTRY') OR
        (NVL(l_actual_upg_option, 'N') = 'O') OR
        (NVL(l_enc_upg_option, 'N') = 'O')
      )
   THEN
   NULL;
   --
   --
   
  l_ccid := AcctDerRule_7(
           p_application_id           => p_application_id
         , p_ae_header_id             => l_ae_header_id 
, p_source_11 => p_source_11
         , x_transaction_coa_id       => l_adr_transaction_coa_id
         , x_accounting_coa_id        => l_adr_accounting_coa_id
         , x_value_type_code          => l_adr_value_type_code
         , p_side                     => 'NA'
   );

   xla_ae_lines_pkg.set_ccid(
    p_code_combination_id          => l_ccid
  , p_value_type_code              => l_adr_value_type_code
  , p_transaction_coa_id           => l_adr_transaction_coa_id
  , p_accounting_coa_id            => l_adr_accounting_coa_id
  , p_adr_code                     => 'AP_INVOICE_DIST'
  , p_adr_type_code                => 'S'
  , p_component_type               => l_component_type
  , p_component_code               => l_component_code
  , p_component_type_code          => l_component_type_code
  , p_component_appl_id            => l_component_appl_id
  , p_amb_context_code             => l_amb_context_code
  , p_side                         => 'NA'
  );


   --
   --
   END IF;

       --
       -- Update the line information that should be overwritten
       --
       XLA_AE_LINES_PKG.set_ae_header_id(p_ae_header_id => p_event_id ,
                                         p_header_num   => 1);
       XLA_AE_LINES_PKG.g_rec_lines.array_header_num(XLA_AE_LINES_PKG.g_LineNumber)  :=1;

       XLA_AE_LINES_PKG.g_rec_lines.array_business_class_code(XLA_AE_LINES_PKG.g_LineNumber) := NULL; -- 4669271

       IF l_bflow_method_code <> 'NONE' THEN  -- 4655713b
          XLA_AE_LINES_PKG.g_rec_lines.array_reversal_code(XLA_AE_LINES_PKG.g_LineNumber) := CONCAT('MPA_',l_bflow_method_code);
       END IF;

      --
      -- Depending on the Reversal Method setup, do a switch side or changes sign for the amounts
      --
      IF (XLA_AE_JOURNAL_ENTRY_PKG.g_cache_ledgers_info.ledger_reversal_option = 'SIDE') THEN
          XLA_AE_LINES_PKG.g_rec_lines.array_natural_side_code(XLA_AE_LINES_PKG.g_LineNumber) :=  l_acc_rev_natural_side_code;
      ELSE
          ---------------------------------------------------------------------------------------------------
          -- 4262811a Switch Sign
          ---------------------------------------------------------------------------------------------------
          XLA_AE_LINES_PKG.g_rec_lines.array_switch_side_flag(XLA_AE_LINES_PKG.g_LineNumber) := 'N';  -- 5052518
          XLA_AE_LINES_PKG.g_rec_lines.array_ledger_amount(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_ledger_amount(XLA_AE_LINES_PKG.g_LineNumber) * -1;
          XLA_AE_LINES_PKG.g_rec_lines.array_entered_amount(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_entered_amount(XLA_AE_LINES_PKG.g_LineNumber) * -1;
          -- 5132302
          XLA_AE_LINES_PKG.g_rec_lines.array_bflow_applied_to_amt(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_bflow_applied_to_amt(XLA_AE_LINES_PKG.g_LineNumber) * -1;

      END IF;

      -- 4955764
      XLA_AE_LINES_PKG.g_rec_lines.array_gl_date(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_HEADER_PKG.g_rec_header_new.array_gl_date(g_array_event(p_event_id).array_value_num('acc_rev_header_index'));


      XLA_AE_LINES_PKG.ValidateCurrentLine;
      XLA_AE_LINES_PKG.SetDebitCreditAmounts;

      XLA_AE_JOURNAL_ENTRY_PKG.UpdateJournalEntryStatus
               (p_hdr_idx           => g_array_event(p_event_id).array_value_num('acc_rev_header_index')
               ,p_balance_type_code => l_balance_type_code);

   END IF;

   -----------------------------------------------------------------------------------------
   -- 4262811 Multiperiod Accounting
   -----------------------------------------------------------------------------------------
     -- No MPA option is assigned.


END IF;
END IF;
--

--
IF (C_LEVEL_PROCEDURE >= g_log_level) THEN
   trace
      (p_msg      => 'END of AcctLineType_84'
      ,p_level    => C_LEVEL_PROCEDURE
      ,p_module   => l_log_module);
END IF;
--
EXCEPTION
  WHEN xla_exceptions_pkg.application_exception THEN
      RAISE;
  WHEN OTHERS THEN
       xla_exceptions_pkg.raise_message
           (p_location => 'XLA_00200_AAD_S_000010_BC_PKG.AcctLineType_84');
END AcctLineType_84;
--

---------------------------------------
--
-- PRIVATE FUNCTION
--         AcctLineType_85
--
---------------------------------------
PROCEDURE AcctLineType_85 (
  p_application_id        IN NUMBER
 ,p_event_id              IN NUMBER
 ,p_calculate_acctd_flag  IN VARCHAR2
 ,p_calculate_g_l_flag    IN VARCHAR2
 ,p_actual_flag           IN OUT VARCHAR2
 ,p_balance_type_code     OUT VARCHAR2
 ,p_gain_or_loss_ref      OUT VARCHAR2
 
--Document Distribution Type
 , p_source_2            IN VARCHAR2
--Project Name
 , p_source_3            IN VARCHAR2
--Task Number
 , p_source_4            IN VARCHAR2
--Expenditure Organization
 , p_source_5            IN NUMBER
--Budget Account
 , p_source_14            IN NUMBER
--Distribution Link Type
 , p_source_21            IN VARCHAR2
--Invoice Distribution Identifier
 , p_source_30            IN NUMBER
--Invoice Currency Code
 , p_source_33            IN VARCHAR2
--Invoice Exchange Date
 , p_source_39            IN DATE
--Invoice Exchange Rate
 , p_source_40            IN NUMBER
--Invoice Exchange Rate Type
 , p_source_41            IN VARCHAR2
--Invoice Distribution Amount
 , p_source_57            IN NUMBER
--Document Type
 , p_source_83            IN VARCHAR2
--Burden Amount Display Method
 , p_source_84            IN VARCHAR2
--Accounting reversal indicator for project invoice burden
 , p_source_85            IN VARCHAR2
--Allocated to Application Identifier
 , p_source_86            IN NUMBER
--Allocated to Distribution Type
 , p_source_87            IN VARCHAR2
--Allocated to Entity Code
 , p_source_88            IN VARCHAR2
--Allocated to First Distribution Identifier
 , p_source_89            IN NUMBER
--Allocated to First System Transaction Identifier
 , p_source_90            IN NUMBER
--Invoice Burden Applied to Application Identifier
 , p_source_91            IN NUMBER
--Invoice Burden Applied to Distribution Type
 , p_source_92            IN VARCHAR2
--Invoice Burden Applied to Entity Code
 , p_source_93            IN VARCHAR2
--Invoice Burden Applied to First Distribution Identifier
 , p_source_94            IN NUMBER
--Invoice Burden Applied to System Transaction Identifier
 , p_source_95            IN NUMBER
--Invoice Distribution Expenditure Type
 , p_source_96            IN VARCHAR2
--Encumbrance Upgrade Credit Accounting Class
 , p_source_97            IN VARCHAR2
--Encumbrance Upgrade Credit Account
 , p_source_98            IN NUMBER
--Invoice Distribution Ledger Amount Before Rounding
 , p_source_99            IN NUMBER
--Encumbrance Upgrade Debit Accounting Class
 , p_source_100            IN VARCHAR2
--Encumbrance Upgrade Debit Account
 , p_source_101            IN NUMBER
--Use Encumbrances Upgrade Attributes Flag
 , p_source_102            IN VARCHAR2
--Accounting reversal first distribution identifier for project invoice burden
 , p_source_103            IN NUMBER
--Invoice Burden Applied to Second Distribution Identifier
 , p_source_104            IN VARCHAR2
--Accounting reversal distribution type for project invoice burden
 , p_source_105            IN VARCHAR2
--Encumbrance Upgrade Credit Encumbrance Type
 , p_source_106            IN NUMBER
--Encumbrance Upgrade Debit Encumbrance Type
 , p_source_107            IN NUMBER
)
IS

l_component_type              VARCHAR2(80);
l_component_code              VARCHAR2(30);
l_component_type_code         VARCHAR2(1);
l_component_appl_id           INTEGER;
l_amb_context_code            VARCHAR2(30);
l_entity_code                 VARCHAR2(30);
l_event_class_code            VARCHAR2(30);
l_ae_header_id                NUMBER;
l_event_type_code             VARCHAR2(30);
l_line_definition_code        VARCHAR2(30);
l_line_definition_owner_code  VARCHAR2(1);
--
-- adr variables
l_segment                     VARCHAR2(30);
l_ccid                        NUMBER;
l_adr_transaction_coa_id      NUMBER;
l_adr_accounting_coa_id       NUMBER;
l_adr_flexfield_segment_code  VARCHAR2(30);
l_adr_flex_value_set_id       NUMBER;
l_adr_value_type_code         VARCHAR2(30);
l_adr_value_combination_id    NUMBER;
l_adr_value_segment_code      VARCHAR2(30);

l_bflow_method_code           VARCHAR2(30);  -- 4219869 Business Flow
l_bflow_class_code            VARCHAR2(30);  -- 4219869 Business Flow
l_inherit_desc_flag           VARCHAR2(1);   -- 4219869 Business Flow
l_budgetary_control_flag      VARCHAR2(1);   -- 4458381 Public Sector Enh

-- 4262811 Variables ------------------------------------------------------------------------------------------
l_entered_amt_idx             NUMBER;
l_accted_amt_idx              NUMBER;
l_acc_rev_flag                VARCHAR2(1);
l_accrual_line_num            NUMBER;
l_tmp_amt                     NUMBER;
l_acc_rev_natural_side_code   VARCHAR2(1);

l_num_entries                 NUMBER;
l_gl_dates                    xla_ae_journal_entry_pkg.t_array_date;
l_accted_amts                 xla_ae_journal_entry_pkg.t_array_num;
l_entered_amts                xla_ae_journal_entry_pkg.t_array_num;
l_period_names                xla_ae_journal_entry_pkg.t_array_V15L;
l_recog_line_1                NUMBER;
l_recog_line_2                NUMBER;

l_bflow_applied_to_amt_idx    NUMBER;                                -- 5132302
l_bflow_applied_to_amt        NUMBER;                                -- 5132302
l_bflow_applied_to_amts       xla_ae_journal_entry_pkg.t_array_num;  -- 5132302

l_event_id                    NUMBER;  -- To handle MPA header Description: xla_ae_header_pkg.SetHdrDescription

--l_rounding_ccy                VARCHAR2(15); -- To handle MPA rounding  4262811b
l_same_currency               BOOLEAN;        -- To handle MPA rounding  4262811b

---------------------------------------------------------------------------------------------------------------


--
-- bulk performance
--
l_balance_type_code           VARCHAR2(1);
l_rec_acct_attrs              XLA_AE_LINES_PKG.t_rec_acct_attrs;
l_log_module                  VARCHAR2(240);

--
-- Upgrade strategy
--
l_actual_upg_option           VARCHAR2(1);
l_enc_upg_option           VARCHAR2(1);

--
BEGIN
--
IF g_log_enabled THEN
      l_log_module := C_DEFAULT_MODULE||'.AcctLineType_85';
END IF;
--
IF (C_LEVEL_PROCEDURE >= g_log_level) THEN

      trace
         (p_msg      => 'BEGIN of AcctLineType_85'
         ,p_level    => C_LEVEL_PROCEDURE
         ,p_module   => l_log_module);

END IF;
--
l_component_type             := 'AMB_JLT';
l_component_code             := 'BURDENED_INV_ENC';
l_component_type_code        := 'S';
l_component_appl_id          :=  200;
l_amb_context_code           := 'DEFAULT';
l_entity_code                := 'AP_INVOICES';
l_event_class_code           := 'INVOICE_BURDEN';
l_event_type_code            := 'INVOICE_BURDEN_ALL';
l_line_definition_owner_code := 'S';
l_line_definition_code       := 'AP_INV_BURDEN_ENC_ALL';
--
l_balance_type_code          := 'E';
l_segment                     := NULL;
l_ccid                        := NULL;
l_adr_transaction_coa_id      := NULL;
l_adr_accounting_coa_id       := NULL;
l_adr_flexfield_segment_code  := NULL;
l_adr_flex_value_set_id       := NULL;
l_adr_value_type_code         := NULL;
l_adr_value_combination_id    := NULL;
l_adr_value_segment_code      := NULL;

l_bflow_method_code          := 'NONE';   -- 4219869 Business Flow
l_bflow_class_code           := 'AP_INV_PA_BURDENED_ENC';    -- 4219869 Business Flow
l_inherit_desc_flag          := 'N';   -- 4219869 Business Flow
l_budgetary_control_flag     := 'Y';

l_bflow_applied_to_amt_idx   := NULL; -- 5132302
l_bflow_applied_to_amt       := NULL; -- 5132302
l_entered_amt_idx            := NULL;          -- 4262811
l_accted_amt_idx             := NULL;          -- 4262811
l_acc_rev_flag               := NULL;          -- 4262811
l_accrual_line_num           := NULL;          -- 4262811
l_tmp_amt                    := NULL;          -- 4262811
--
 
IF XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id = XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.ledger_id OR
    l_balance_type_code <> 'B' THEN
IF NVL(p_source_83,'
') =  'AP' AND 
(NVL(p_source_2,'
') <>  'PREPAY APPL' OR 
NVL(p_source_2,'
') <>  'TAX DIFF' OR 
NVL(p_source_2,'
') <>  'FINAL APPLICATION ROUNDING') AND 
NVL(p_source_84,'
') =  'S'
 THEN 

   --
   XLA_AE_LINES_PKG.SetNewLine;

   p_balance_type_code          := l_balance_type_code;
   -- set the flag so later we will know whether the gain loss line needs to be created
   
   IF(l_balance_type_code = 'A' and p_actual_flag is null) THEN
     p_actual_flag :='A';
   END IF;

   --
   -- bulk performance
   --
   XLA_AE_LINES_PKG.set_ae_header_id (p_ae_header_id => p_event_id ,
                                      p_header_num   => 0); -- 4262811
   --
   -- set accounting line options
   --
   l_ae_header_id:= xla_ae_lines_pkg.SetAcctLineOption(
           p_natural_side_code          => 'D'
         , p_gain_or_loss_flag          => 'N'
         , p_gl_transfer_mode_code      => 'S'
         , p_acct_entry_type_code       => 'E'
         , p_switch_side_flag           => 'Y'
         , p_merge_duplicate_code       => 'N'
         );
   --
   l_acc_rev_natural_side_code := 'C';  -- 4262811
   -- 
   --
   -- set accounting line type info
   --
   xla_ae_lines_pkg.SetAcctLineType
      (p_component_type             => l_component_type
      ,p_event_type_code            => l_event_type_code
      ,p_line_definition_owner_code => l_line_definition_owner_code
      ,p_line_definition_code       => l_line_definition_code
      ,p_accounting_line_code       => l_component_code
      ,p_accounting_line_type_code  => l_component_type_code
      ,p_accounting_line_appl_id    => l_component_appl_id
      ,p_amb_context_code           => l_amb_context_code
      ,p_entity_code                => l_entity_code
      ,p_event_class_code           => l_event_class_code);
   --
   -- set accounting class
   --
   xla_ae_lines_pkg.SetAcctClass(
           p_accounting_class_code  => 'AP_INV_PA_BURDENED'
         , p_ae_header_id           => l_ae_header_id
         );

   --
   -- set rounding class
   --
   XLA_AE_LINES_PKG.g_rec_lines.array_rounding_class(XLA_AE_LINES_PKG.g_LineNumber) :=
                      'AP_INV_PA_BURDENED';

   --
   xla_ae_lines_pkg.g_rec_lines.array_calculate_acctd_flag(xla_ae_lines_pkg.g_LineNumber) := p_calculate_acctd_flag;
   xla_ae_lines_pkg.g_rec_lines.array_calculate_g_l_flag(xla_ae_lines_pkg.g_LineNumber) := p_calculate_g_l_flag;
   --
   -- bulk performance
   --
   XLA_AE_LINES_PKG.g_rec_lines.array_balance_type_code(XLA_AE_LINES_PKG.g_LineNumber) := l_balance_type_code;

   XLA_AE_LINES_PKG.g_rec_lines.array_ledger_id(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id;

   -- 4955764
   XLA_AE_LINES_PKG.g_rec_lines.array_gl_date(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_HEADER_PKG.g_rec_header_new.array_gl_date(g_array_event(p_event_id).array_value_num('header_index'));

   -- 4458381 Public Sector Enh
      XLA_AE_LINES_PKG.g_rec_lines.array_encumbrance_type_id(XLA_AE_LINES_PKG.g_LineNumber) := 1060;
   --
   -- set accounting attributes for the line type
   --
   l_entered_amt_idx := 27;
   l_accted_amt_idx  := 32;
   l_bflow_applied_to_amt_idx  := NULL;  -- 5132302
   l_rec_acct_attrs.array_acct_attr_code(1) := 'ACCOUNTING_REVERSAL_OPTION';
   l_rec_acct_attrs.array_char_value(1)  := p_source_85;
   l_rec_acct_attrs.array_acct_attr_code(2) := 'ALLOC_TO_APPLICATION_ID';
   l_rec_acct_attrs.array_num_value(2)  := p_source_86;
   l_rec_acct_attrs.array_acct_attr_code(3) := 'ALLOC_TO_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(3)  := p_source_87;
   l_rec_acct_attrs.array_acct_attr_code(4) := 'ALLOC_TO_ENTITY_CODE';
   l_rec_acct_attrs.array_char_value(4)  := p_source_88;
   l_rec_acct_attrs.array_acct_attr_code(5) := 'ALLOC_TO_FIRST_DIST_ID';
   l_rec_acct_attrs.array_num_value(5)  :=  to_char(p_source_89);
   l_rec_acct_attrs.array_acct_attr_code(6) := 'ALLOC_TO_FIRST_SYS_TRAN_ID';
   l_rec_acct_attrs.array_num_value(6)  :=  to_char(p_source_90);
   l_rec_acct_attrs.array_acct_attr_code(7) := 'APPLIED_TO_APPLICATION_ID';
   l_rec_acct_attrs.array_num_value(7)  := p_source_91;
   l_rec_acct_attrs.array_acct_attr_code(8) := 'APPLIED_TO_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(8)  := p_source_92;
   l_rec_acct_attrs.array_acct_attr_code(9) := 'APPLIED_TO_ENTITY_CODE';
   l_rec_acct_attrs.array_char_value(9)  := p_source_93;
   l_rec_acct_attrs.array_acct_attr_code(10) := 'APPLIED_TO_FIRST_DIST_ID';
   l_rec_acct_attrs.array_num_value(10)  :=  to_char(p_source_94);
   l_rec_acct_attrs.array_acct_attr_code(11) := 'APPLIED_TO_FIRST_SYS_TRAN_ID';
   l_rec_acct_attrs.array_num_value(11)  :=  to_char(p_source_95);
   l_rec_acct_attrs.array_acct_attr_code(12) := 'APPLIED_TO_SECOND_DIST_ID';
   l_rec_acct_attrs.array_char_value(12)  := p_source_96;
   l_rec_acct_attrs.array_acct_attr_code(13) := 'DISTRIBUTION_IDENTIFIER_1';
   l_rec_acct_attrs.array_num_value(13)  :=  to_char(p_source_30);
   l_rec_acct_attrs.array_acct_attr_code(14) := 'DISTRIBUTION_IDENTIFIER_2';
   l_rec_acct_attrs.array_char_value(14)  := p_source_96;
   l_rec_acct_attrs.array_acct_attr_code(15) := 'DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(15)  := p_source_21;
   l_rec_acct_attrs.array_acct_attr_code(16) := 'ENC_UPG_CR_ACCT_CLASS';
   l_rec_acct_attrs.array_char_value(16)  := p_source_97;
   l_rec_acct_attrs.array_acct_attr_code(17) := 'ENC_UPG_CR_CCID';
   l_rec_acct_attrs.array_num_value(17)  := p_source_98;
   l_rec_acct_attrs.array_acct_attr_code(18) := 'ENC_UPG_CR_ENTERED_AMT';
   l_rec_acct_attrs.array_num_value(18)  := p_source_57;
   l_rec_acct_attrs.array_acct_attr_code(19) := 'ENC_UPG_CR_ENTERED_CURR';
   l_rec_acct_attrs.array_char_value(19)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(20) := 'ENC_UPG_CR_LEDGER_AMT';
   l_rec_acct_attrs.array_num_value(20)  := p_source_99;
   l_rec_acct_attrs.array_acct_attr_code(21) := 'ENC_UPG_DR_ACCT_CLASS';
   l_rec_acct_attrs.array_char_value(21)  := p_source_100;
   l_rec_acct_attrs.array_acct_attr_code(22) := 'ENC_UPG_DR_CCID';
   l_rec_acct_attrs.array_num_value(22)  := p_source_101;
   l_rec_acct_attrs.array_acct_attr_code(23) := 'ENC_UPG_DR_ENTERED_AMT';
   l_rec_acct_attrs.array_num_value(23)  := p_source_57;
   l_rec_acct_attrs.array_acct_attr_code(24) := 'ENC_UPG_DR_ENTERED_CURR';
   l_rec_acct_attrs.array_char_value(24)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(25) := 'ENC_UPG_DR_LEDGER_AMT';
   l_rec_acct_attrs.array_num_value(25)  := p_source_99;
   l_rec_acct_attrs.array_acct_attr_code(26) := 'ENC_UPG_OPTION';
   l_rec_acct_attrs.array_char_value(26)  := p_source_102;
   l_rec_acct_attrs.array_acct_attr_code(27) := 'ENTERED_CURRENCY_AMOUNT';
   l_rec_acct_attrs.array_num_value(27)  := p_source_57;
   l_rec_acct_attrs.array_acct_attr_code(28) := 'ENTERED_CURRENCY_CODE';
   l_rec_acct_attrs.array_char_value(28)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(29) := 'EXCHANGE_DATE';
   l_rec_acct_attrs.array_date_value(29)  := p_source_39;
   l_rec_acct_attrs.array_acct_attr_code(30) := 'EXCHANGE_RATE';
   l_rec_acct_attrs.array_num_value(30)  := p_source_40;
   l_rec_acct_attrs.array_acct_attr_code(31) := 'EXCHANGE_RATE_TYPE';
   l_rec_acct_attrs.array_char_value(31)  := p_source_41;
   l_rec_acct_attrs.array_acct_attr_code(32) := 'LEDGER_AMOUNT';
   l_rec_acct_attrs.array_num_value(32)  := p_source_99;
   l_rec_acct_attrs.array_acct_attr_code(33) := 'REVERSED_DISTRIBUTION_ID1';
   l_rec_acct_attrs.array_num_value(33)  :=  to_char(p_source_103);
   l_rec_acct_attrs.array_acct_attr_code(34) := 'REVERSED_DISTRIBUTION_ID2';
   l_rec_acct_attrs.array_char_value(34)  := p_source_104;
   l_rec_acct_attrs.array_acct_attr_code(35) := 'REVERSED_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(35)  := p_source_105;
   l_rec_acct_attrs.array_acct_attr_code(36) := 'UPG_CR_ENC_TYPE_ID';
   l_rec_acct_attrs.array_num_value(36)  := p_source_106;
   l_rec_acct_attrs.array_acct_attr_code(37) := 'UPG_DR_ENC_TYPE_ID';
   l_rec_acct_attrs.array_num_value(37)  := p_source_107;

   XLA_AE_LINES_PKG.SetLineAcctAttrs(l_rec_acct_attrs);
   p_gain_or_loss_ref  := XLA_AE_LINES_PKG.g_rec_lines.array_gain_or_loss_ref(XLA_AE_LINES_PKG.g_LineNumber);

   ---------------------------------------------------------------------------------------------------------------
   -- 4336173 -- assign Business Flow Class (replace code in xla_ae_lines_pkg.Business_Flow_Validation)
   ---------------------------------------------------------------------------------------------------------------
   XLA_AE_LINES_PKG.g_rec_lines.array_business_class_code(XLA_AE_LINES_PKG.g_LineNumber) := l_bflow_class_code;

   l_actual_upg_option  := XLA_AE_LINES_PKG.g_rec_lines.array_actual_upg_option(XLA_AE_LINES_PKG.g_LineNumber);
   l_enc_upg_option     := XLA_AE_LINES_PKG.g_rec_lines.array_enc_upg_option(XLA_AE_LINES_PKG.g_LineNumber);

   IF xla_accounting_cache_pkg.GetValueChar
         (p_source_code         => 'LEDGER_CATEGORY_CODE'
         ,p_target_ledger_id    => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id) IN ('PRIMARY','ALC')
   AND l_bflow_method_code = 'PRIOR_ENTRY'
--   AND (l_actual_upg_option = 'Y' OR l_enc_upg_option = 'Y') Bug 4922099
   AND ( (NVL(l_actual_upg_option, 'N') IN ('Y', 'O')) OR
         (NVL(l_enc_upg_option, 'N') IN ('Y', 'O'))
       )
   THEN
         xla_ae_lines_pkg.BflowUpgEntry
           (p_business_method_code    => l_bflow_method_code
           ,p_business_class_code     => l_bflow_class_code
           ,p_balance_type            => l_balance_type_code);
   ELSE
      NULL;
-- No business flow processing for business flow method of NONE.
   END IF;

   --
   -- call analytical criteria
   --
   
   --
   -- call description
   --
   
xla_ae_lines_pkg.SetLineDescription(
   p_ae_header_id => l_ae_header_id
  ,p_description  => Description_3 (
     p_application_id         => p_application_id
   , p_ae_header_id           => l_ae_header_id 
, p_source_2 => p_source_2
, p_source_3 => p_source_3
, p_source_4 => p_source_4
, p_source_5 => p_source_5
   )
);


   --
   -- call ADRs
   -- Bug 4922099
   --
   IF ( (l_bflow_method_code <> 'PRIOR_ENTRY') OR
        (NVL(l_actual_upg_option, 'N') = 'O') OR
        (NVL(l_enc_upg_option, 'N') = 'O')
      )
   THEN
   NULL;
   --
   --
   
  l_ccid := AcctDerRule_9(
           p_application_id           => p_application_id
         , p_ae_header_id             => l_ae_header_id 
, p_source_14 => p_source_14
         , x_transaction_coa_id       => l_adr_transaction_coa_id
         , x_accounting_coa_id        => l_adr_accounting_coa_id
         , x_value_type_code          => l_adr_value_type_code
         , p_side                     => 'NA'
   );

   xla_ae_lines_pkg.set_ccid(
    p_code_combination_id          => l_ccid
  , p_value_type_code              => l_adr_value_type_code
  , p_transaction_coa_id           => l_adr_transaction_coa_id
  , p_accounting_coa_id            => l_adr_accounting_coa_id
  , p_adr_code                     => 'PROJ_BURDENED_ENC_ACCT_RULE'
  , p_adr_type_code                => 'S'
  , p_component_type               => l_component_type
  , p_component_code               => l_component_code
  , p_component_type_code          => l_component_type_code
  , p_component_appl_id            => l_component_appl_id
  , p_amb_context_code             => l_amb_context_code
  , p_side                         => 'NA'
  );


   --
   --
   END IF;
   --
   -- Bug 4922099
   IF ( ( (NVL(l_actual_upg_option, 'N') = 'O') OR
          (NVL(l_enc_upg_option, 'N') = 'O')
        ) AND
        (l_bflow_method_code = 'PRIOR_ENTRY')
      )
   THEN
      IF
      --
      1 = 2
      --
      THEN
      xla_accounting_err_pkg.build_message
                                    (p_appli_s_name            => 'XLA'
                                    ,p_msg_name                => 'XLA_UPG_OVERRIDE_ADR_UNDEFINED'
                                    ,p_token_1                 => 'LINE_NUMBER'
                                    ,p_value_1                 => XLA_AE_LINES_PKG.g_LineNumber
                                    ,p_token_2                 => 'LINE_TYPE_NAME'
                                    ,p_value_2                 => XLA_AE_SOURCES_PKG.GetComponentName (
                                                                             l_component_type
                                                                            ,l_component_code
                                                                            ,l_component_type_code
                                                                            ,l_component_appl_id
                                                                            ,l_amb_context_code
                                                                            ,l_entity_code
                                                                            ,l_event_class_code
                                                                           )
                                    ,p_token_3                 => 'OWNER'
                                    ,p_value_3                 => xla_lookups_pkg.get_meaning(
                                                                          p_lookup_type     => 'XLA_OWNER_TYPE'
                                                                          ,p_lookup_code    => l_component_type_code
                                                                         )
                                    ,p_token_4                 => 'PRODUCT_NAME'
                                    ,p_value_4                 => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.application_name
                                    ,p_entity_id               => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.entity_id
                                    ,p_event_id                => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.event_id
                                    ,p_ledger_id               => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id
                                    ,p_ae_header_id            =>  NULL
                                       );

        IF (C_LEVEL_ERROR>= g_log_level) THEN
                 trace
                      (p_msg      => 'ERROR: XLA_UPG_OVERRIDE_ADR_UNDEFINED'
                      ,p_level    => C_LEVEL_ERROR
                      ,p_module   => l_log_module);
        END IF;
      END IF;
   END IF;
   --
   --
   ------------------------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- NOTE: XLA_AE_LINES_PKG.ValidateCurrentLine should NOT be generated if business flow method is
   -- Prior Entry.  Currently, the following code is always generated.
   ------------------------------------------------------------------------------------------------
   XLA_AE_LINES_PKG.ValidateCurrentLine;

   ------------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- Populated credit and debit amounts -- Need to generate this within IF <condition>
   ------------------------------------------------------------------------------------
   XLA_AE_LINES_PKG.SetDebitCreditAmounts;

   ----------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- Update journal entry status -- Need to generate this within IF <condition>
   ----------------------------------------------------------------------------------
   XLA_AE_JOURNAL_ENTRY_PKG.UpdateJournalEntryStatus
         (p_hdr_idx => g_array_event(p_event_id).array_value_num('header_index')
         ,p_balance_type_code => l_balance_type_code
         );

   -------------------------------------------------------------------------------------------
   -- 4262811 - Generate the Accrual Reversal lines
   -------------------------------------------------------------------------------------------
   BEGIN
      l_acc_rev_flag := XLA_AE_HEADER_PKG.g_rec_header_new.array_accrual_reversal_flag
                              (g_array_event(p_event_id).array_value_num('header_index'));
      IF l_acc_rev_flag IS NULL THEN
         l_acc_rev_flag := 'N';
      END IF;
   EXCEPTION
      WHEN OTHERS THEN
         l_acc_rev_flag := 'N';
   END;
   --
   IF (l_acc_rev_flag = 'Y') THEN

       -- 4645092  ------------------------------------------------------------------------------
       -- To allow MPA report to determine if it should generate report process
       XLA_ACCOUNTING_PKG.g_mpa_accrual_exists := 'Y';
       ------------------------------------------------------------------------------------------

       l_accrual_line_num := XLA_AE_LINES_PKG.g_LineNumber;
       XLA_AE_LINES_PKG.CopyLineInfo(l_accrual_line_num);
   -- added call to set_ccid to execute mapping  for secondary accrual reversal entries bug 7444204
   -- call ADRs
   -- Bug 4922099
   --
   IF ( (l_bflow_method_code <> 'PRIOR_ENTRY') OR
        (NVL(l_actual_upg_option, 'N') = 'O') OR
        (NVL(l_enc_upg_option, 'N') = 'O')
      )
   THEN
   NULL;
   --
   --
   
  l_ccid := AcctDerRule_9(
           p_application_id           => p_application_id
         , p_ae_header_id             => l_ae_header_id 
, p_source_14 => p_source_14
         , x_transaction_coa_id       => l_adr_transaction_coa_id
         , x_accounting_coa_id        => l_adr_accounting_coa_id
         , x_value_type_code          => l_adr_value_type_code
         , p_side                     => 'NA'
   );

   xla_ae_lines_pkg.set_ccid(
    p_code_combination_id          => l_ccid
  , p_value_type_code              => l_adr_value_type_code
  , p_transaction_coa_id           => l_adr_transaction_coa_id
  , p_accounting_coa_id            => l_adr_accounting_coa_id
  , p_adr_code                     => 'PROJ_BURDENED_ENC_ACCT_RULE'
  , p_adr_type_code                => 'S'
  , p_component_type               => l_component_type
  , p_component_code               => l_component_code
  , p_component_type_code          => l_component_type_code
  , p_component_appl_id            => l_component_appl_id
  , p_amb_context_code             => l_amb_context_code
  , p_side                         => 'NA'
  );


   --
   --
   END IF;

       --
       -- Update the line information that should be overwritten
       --
       XLA_AE_LINES_PKG.set_ae_header_id(p_ae_header_id => p_event_id ,
                                         p_header_num   => 1);
       XLA_AE_LINES_PKG.g_rec_lines.array_header_num(XLA_AE_LINES_PKG.g_LineNumber)  :=1;

       XLA_AE_LINES_PKG.g_rec_lines.array_business_class_code(XLA_AE_LINES_PKG.g_LineNumber) := NULL; -- 4669271

       IF l_bflow_method_code <> 'NONE' THEN  -- 4655713b
          XLA_AE_LINES_PKG.g_rec_lines.array_reversal_code(XLA_AE_LINES_PKG.g_LineNumber) := CONCAT('MPA_',l_bflow_method_code);
       END IF;

      --
      -- Depending on the Reversal Method setup, do a switch side or changes sign for the amounts
      --
      IF (XLA_AE_JOURNAL_ENTRY_PKG.g_cache_ledgers_info.ledger_reversal_option = 'SIDE') THEN
          XLA_AE_LINES_PKG.g_rec_lines.array_natural_side_code(XLA_AE_LINES_PKG.g_LineNumber) :=  l_acc_rev_natural_side_code;
      ELSE
          ---------------------------------------------------------------------------------------------------
          -- 4262811a Switch Sign
          ---------------------------------------------------------------------------------------------------
          XLA_AE_LINES_PKG.g_rec_lines.array_switch_side_flag(XLA_AE_LINES_PKG.g_LineNumber) := 'N';  -- 5052518
          XLA_AE_LINES_PKG.g_rec_lines.array_ledger_amount(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_ledger_amount(XLA_AE_LINES_PKG.g_LineNumber) * -1;
          XLA_AE_LINES_PKG.g_rec_lines.array_entered_amount(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_entered_amount(XLA_AE_LINES_PKG.g_LineNumber) * -1;
          -- 5132302
          XLA_AE_LINES_PKG.g_rec_lines.array_bflow_applied_to_amt(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_bflow_applied_to_amt(XLA_AE_LINES_PKG.g_LineNumber) * -1;

      END IF;

      -- 4955764
      XLA_AE_LINES_PKG.g_rec_lines.array_gl_date(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_HEADER_PKG.g_rec_header_new.array_gl_date(g_array_event(p_event_id).array_value_num('acc_rev_header_index'));


      XLA_AE_LINES_PKG.ValidateCurrentLine;
      XLA_AE_LINES_PKG.SetDebitCreditAmounts;

      XLA_AE_JOURNAL_ENTRY_PKG.UpdateJournalEntryStatus
               (p_hdr_idx           => g_array_event(p_event_id).array_value_num('acc_rev_header_index')
               ,p_balance_type_code => l_balance_type_code);

   END IF;

   -----------------------------------------------------------------------------------------
   -- 4262811 Multiperiod Accounting
   -----------------------------------------------------------------------------------------
     -- No MPA option is assigned.


END IF;
END IF;
--

--
IF (C_LEVEL_PROCEDURE >= g_log_level) THEN
   trace
      (p_msg      => 'END of AcctLineType_85'
      ,p_level    => C_LEVEL_PROCEDURE
      ,p_module   => l_log_module);
END IF;
--
EXCEPTION
  WHEN xla_exceptions_pkg.application_exception THEN
      RAISE;
  WHEN OTHERS THEN
       xla_exceptions_pkg.raise_message
           (p_location => 'XLA_00200_AAD_S_000010_BC_PKG.AcctLineType_85');
END AcctLineType_85;
--

---------------------------------------
--
-- PRIVATE FUNCTION
--         AcctLineType_86
--
---------------------------------------
PROCEDURE AcctLineType_86 (
  p_application_id        IN NUMBER
 ,p_event_id              IN NUMBER
 ,p_calculate_acctd_flag  IN VARCHAR2
 ,p_calculate_g_l_flag    IN VARCHAR2
 ,p_actual_flag           IN OUT VARCHAR2
 ,p_balance_type_code     OUT VARCHAR2
 ,p_gain_or_loss_ref      OUT VARCHAR2
 
--Document Distribution Type
 , p_source_2            IN VARCHAR2
--Project Name
 , p_source_3            IN VARCHAR2
--Task Number
 , p_source_4            IN VARCHAR2
--Expenditure Organization
 , p_source_5            IN NUMBER
--Budget Account
 , p_source_14            IN NUMBER
--Distribution Link Type
 , p_source_21            IN VARCHAR2
--Invoice Distribution Identifier
 , p_source_30            IN NUMBER
--Invoice Currency Code
 , p_source_33            IN VARCHAR2
--Invoice Exchange Date
 , p_source_39            IN DATE
--Invoice Exchange Rate
 , p_source_40            IN NUMBER
--Invoice Exchange Rate Type
 , p_source_41            IN VARCHAR2
--Invoice Distribution Amount
 , p_source_57            IN NUMBER
--Document Type
 , p_source_83            IN VARCHAR2
--Burden Amount Display Method
 , p_source_84            IN VARCHAR2
--Accounting reversal indicator for project invoice burden
 , p_source_85            IN VARCHAR2
--Allocated to Application Identifier
 , p_source_86            IN NUMBER
--Allocated to Distribution Type
 , p_source_87            IN VARCHAR2
--Allocated to Entity Code
 , p_source_88            IN VARCHAR2
--Allocated to First Distribution Identifier
 , p_source_89            IN NUMBER
--Allocated to First System Transaction Identifier
 , p_source_90            IN NUMBER
--Invoice Burden Applied to Application Identifier
 , p_source_91            IN NUMBER
--Invoice Burden Applied to Distribution Type
 , p_source_92            IN VARCHAR2
--Invoice Burden Applied to Entity Code
 , p_source_93            IN VARCHAR2
--Invoice Burden Applied to First Distribution Identifier
 , p_source_94            IN NUMBER
--Invoice Burden Applied to System Transaction Identifier
 , p_source_95            IN NUMBER
--Invoice Distribution Expenditure Type
 , p_source_96            IN VARCHAR2
--Encumbrance Upgrade Credit Accounting Class
 , p_source_97            IN VARCHAR2
--Encumbrance Upgrade Credit Account
 , p_source_98            IN NUMBER
--Invoice Distribution Ledger Amount Before Rounding
 , p_source_99            IN NUMBER
--Encumbrance Upgrade Debit Accounting Class
 , p_source_100            IN VARCHAR2
--Encumbrance Upgrade Debit Account
 , p_source_101            IN NUMBER
--Use Encumbrances Upgrade Attributes Flag
 , p_source_102            IN VARCHAR2
--Accounting reversal first distribution identifier for project invoice burden
 , p_source_103            IN NUMBER
--Invoice Burden Applied to Second Distribution Identifier
 , p_source_104            IN VARCHAR2
--Accounting reversal distribution type for project invoice burden
 , p_source_105            IN VARCHAR2
--Encumbrance Upgrade Credit Encumbrance Type
 , p_source_106            IN NUMBER
--Encumbrance Upgrade Debit Encumbrance Type
 , p_source_107            IN NUMBER
--Burden Record Identifier
 , p_source_108            IN VARCHAR2
 , p_source_108_meaning    IN VARCHAR2
)
IS

l_component_type              VARCHAR2(80);
l_component_code              VARCHAR2(30);
l_component_type_code         VARCHAR2(1);
l_component_appl_id           INTEGER;
l_amb_context_code            VARCHAR2(30);
l_entity_code                 VARCHAR2(30);
l_event_class_code            VARCHAR2(30);
l_ae_header_id                NUMBER;
l_event_type_code             VARCHAR2(30);
l_line_definition_code        VARCHAR2(30);
l_line_definition_owner_code  VARCHAR2(1);
--
-- adr variables
l_segment                     VARCHAR2(30);
l_ccid                        NUMBER;
l_adr_transaction_coa_id      NUMBER;
l_adr_accounting_coa_id       NUMBER;
l_adr_flexfield_segment_code  VARCHAR2(30);
l_adr_flex_value_set_id       NUMBER;
l_adr_value_type_code         VARCHAR2(30);
l_adr_value_combination_id    NUMBER;
l_adr_value_segment_code      VARCHAR2(30);

l_bflow_method_code           VARCHAR2(30);  -- 4219869 Business Flow
l_bflow_class_code            VARCHAR2(30);  -- 4219869 Business Flow
l_inherit_desc_flag           VARCHAR2(1);   -- 4219869 Business Flow
l_budgetary_control_flag      VARCHAR2(1);   -- 4458381 Public Sector Enh

-- 4262811 Variables ------------------------------------------------------------------------------------------
l_entered_amt_idx             NUMBER;
l_accted_amt_idx              NUMBER;
l_acc_rev_flag                VARCHAR2(1);
l_accrual_line_num            NUMBER;
l_tmp_amt                     NUMBER;
l_acc_rev_natural_side_code   VARCHAR2(1);

l_num_entries                 NUMBER;
l_gl_dates                    xla_ae_journal_entry_pkg.t_array_date;
l_accted_amts                 xla_ae_journal_entry_pkg.t_array_num;
l_entered_amts                xla_ae_journal_entry_pkg.t_array_num;
l_period_names                xla_ae_journal_entry_pkg.t_array_V15L;
l_recog_line_1                NUMBER;
l_recog_line_2                NUMBER;

l_bflow_applied_to_amt_idx    NUMBER;                                -- 5132302
l_bflow_applied_to_amt        NUMBER;                                -- 5132302
l_bflow_applied_to_amts       xla_ae_journal_entry_pkg.t_array_num;  -- 5132302

l_event_id                    NUMBER;  -- To handle MPA header Description: xla_ae_header_pkg.SetHdrDescription

--l_rounding_ccy                VARCHAR2(15); -- To handle MPA rounding  4262811b
l_same_currency               BOOLEAN;        -- To handle MPA rounding  4262811b

---------------------------------------------------------------------------------------------------------------


--
-- bulk performance
--
l_balance_type_code           VARCHAR2(1);
l_rec_acct_attrs              XLA_AE_LINES_PKG.t_rec_acct_attrs;
l_log_module                  VARCHAR2(240);

--
-- Upgrade strategy
--
l_actual_upg_option           VARCHAR2(1);
l_enc_upg_option           VARCHAR2(1);

--
BEGIN
--
IF g_log_enabled THEN
      l_log_module := C_DEFAULT_MODULE||'.AcctLineType_86';
END IF;
--
IF (C_LEVEL_PROCEDURE >= g_log_level) THEN

      trace
         (p_msg      => 'BEGIN of AcctLineType_86'
         ,p_level    => C_LEVEL_PROCEDURE
         ,p_module   => l_log_module);

END IF;
--
l_component_type             := 'AMB_JLT';
l_component_code             := 'BURDEN_INV_ENC';
l_component_type_code        := 'S';
l_component_appl_id          :=  200;
l_amb_context_code           := 'DEFAULT';
l_entity_code                := 'AP_INVOICES';
l_event_class_code           := 'INVOICE_BURDEN';
l_event_type_code            := 'INVOICE_BURDEN_ALL';
l_line_definition_owner_code := 'S';
l_line_definition_code       := 'AP_INV_BURDEN_ENC_ALL';
--
l_balance_type_code          := 'E';
l_segment                     := NULL;
l_ccid                        := NULL;
l_adr_transaction_coa_id      := NULL;
l_adr_accounting_coa_id       := NULL;
l_adr_flexfield_segment_code  := NULL;
l_adr_flex_value_set_id       := NULL;
l_adr_value_type_code         := NULL;
l_adr_value_combination_id    := NULL;
l_adr_value_segment_code      := NULL;

l_bflow_method_code          := 'NONE';   -- 4219869 Business Flow
l_bflow_class_code           := 'AP_INV_PA_BURDEN_ENC';    -- 4219869 Business Flow
l_inherit_desc_flag          := 'N';   -- 4219869 Business Flow
l_budgetary_control_flag     := 'Y';

l_bflow_applied_to_amt_idx   := NULL; -- 5132302
l_bflow_applied_to_amt       := NULL; -- 5132302
l_entered_amt_idx            := NULL;          -- 4262811
l_accted_amt_idx             := NULL;          -- 4262811
l_acc_rev_flag               := NULL;          -- 4262811
l_accrual_line_num           := NULL;          -- 4262811
l_tmp_amt                    := NULL;          -- 4262811
--
 
IF XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id = XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.ledger_id OR
    l_balance_type_code <> 'B' THEN
IF NVL(p_source_83,'
') =  'AP' AND 
(NVL(p_source_2,'
') <>  'PREPAY APPL' OR 
NVL(p_source_2,'
') <>  'TAX DIFF' OR 
NVL(p_source_2,'
') <>  'FINAL APPLICATION ROUNDING') AND 
NVL(p_source_84,'
') =  'D' AND 
NVL(p_source_108,'
') =  'O'
 THEN 

   --
   XLA_AE_LINES_PKG.SetNewLine;

   p_balance_type_code          := l_balance_type_code;
   -- set the flag so later we will know whether the gain loss line needs to be created
   
   IF(l_balance_type_code = 'A' and p_actual_flag is null) THEN
     p_actual_flag :='A';
   END IF;

   --
   -- bulk performance
   --
   XLA_AE_LINES_PKG.set_ae_header_id (p_ae_header_id => p_event_id ,
                                      p_header_num   => 0); -- 4262811
   --
   -- set accounting line options
   --
   l_ae_header_id:= xla_ae_lines_pkg.SetAcctLineOption(
           p_natural_side_code          => 'D'
         , p_gain_or_loss_flag          => 'N'
         , p_gl_transfer_mode_code      => 'S'
         , p_acct_entry_type_code       => 'E'
         , p_switch_side_flag           => 'Y'
         , p_merge_duplicate_code       => 'N'
         );
   --
   l_acc_rev_natural_side_code := 'C';  -- 4262811
   -- 
   --
   -- set accounting line type info
   --
   xla_ae_lines_pkg.SetAcctLineType
      (p_component_type             => l_component_type
      ,p_event_type_code            => l_event_type_code
      ,p_line_definition_owner_code => l_line_definition_owner_code
      ,p_line_definition_code       => l_line_definition_code
      ,p_accounting_line_code       => l_component_code
      ,p_accounting_line_type_code  => l_component_type_code
      ,p_accounting_line_appl_id    => l_component_appl_id
      ,p_amb_context_code           => l_amb_context_code
      ,p_entity_code                => l_entity_code
      ,p_event_class_code           => l_event_class_code);
   --
   -- set accounting class
   --
   xla_ae_lines_pkg.SetAcctClass(
           p_accounting_class_code  => 'AP_INV_PA_BURDEN'
         , p_ae_header_id           => l_ae_header_id
         );

   --
   -- set rounding class
   --
   XLA_AE_LINES_PKG.g_rec_lines.array_rounding_class(XLA_AE_LINES_PKG.g_LineNumber) :=
                      'AP_INV_PA_BURDEN';

   --
   xla_ae_lines_pkg.g_rec_lines.array_calculate_acctd_flag(xla_ae_lines_pkg.g_LineNumber) := p_calculate_acctd_flag;
   xla_ae_lines_pkg.g_rec_lines.array_calculate_g_l_flag(xla_ae_lines_pkg.g_LineNumber) := p_calculate_g_l_flag;
   --
   -- bulk performance
   --
   XLA_AE_LINES_PKG.g_rec_lines.array_balance_type_code(XLA_AE_LINES_PKG.g_LineNumber) := l_balance_type_code;

   XLA_AE_LINES_PKG.g_rec_lines.array_ledger_id(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id;

   -- 4955764
   XLA_AE_LINES_PKG.g_rec_lines.array_gl_date(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_HEADER_PKG.g_rec_header_new.array_gl_date(g_array_event(p_event_id).array_value_num('header_index'));

   -- 4458381 Public Sector Enh
      XLA_AE_LINES_PKG.g_rec_lines.array_encumbrance_type_id(XLA_AE_LINES_PKG.g_LineNumber) := 1060;
   --
   -- set accounting attributes for the line type
   --
   l_entered_amt_idx := 27;
   l_accted_amt_idx  := 32;
   l_bflow_applied_to_amt_idx  := NULL;  -- 5132302
   l_rec_acct_attrs.array_acct_attr_code(1) := 'ACCOUNTING_REVERSAL_OPTION';
   l_rec_acct_attrs.array_char_value(1)  := p_source_85;
   l_rec_acct_attrs.array_acct_attr_code(2) := 'ALLOC_TO_APPLICATION_ID';
   l_rec_acct_attrs.array_num_value(2)  := p_source_86;
   l_rec_acct_attrs.array_acct_attr_code(3) := 'ALLOC_TO_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(3)  := p_source_87;
   l_rec_acct_attrs.array_acct_attr_code(4) := 'ALLOC_TO_ENTITY_CODE';
   l_rec_acct_attrs.array_char_value(4)  := p_source_88;
   l_rec_acct_attrs.array_acct_attr_code(5) := 'ALLOC_TO_FIRST_DIST_ID';
   l_rec_acct_attrs.array_num_value(5)  :=  to_char(p_source_89);
   l_rec_acct_attrs.array_acct_attr_code(6) := 'ALLOC_TO_FIRST_SYS_TRAN_ID';
   l_rec_acct_attrs.array_num_value(6)  :=  to_char(p_source_90);
   l_rec_acct_attrs.array_acct_attr_code(7) := 'APPLIED_TO_APPLICATION_ID';
   l_rec_acct_attrs.array_num_value(7)  := p_source_91;
   l_rec_acct_attrs.array_acct_attr_code(8) := 'APPLIED_TO_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(8)  := p_source_92;
   l_rec_acct_attrs.array_acct_attr_code(9) := 'APPLIED_TO_ENTITY_CODE';
   l_rec_acct_attrs.array_char_value(9)  := p_source_93;
   l_rec_acct_attrs.array_acct_attr_code(10) := 'APPLIED_TO_FIRST_DIST_ID';
   l_rec_acct_attrs.array_num_value(10)  :=  to_char(p_source_94);
   l_rec_acct_attrs.array_acct_attr_code(11) := 'APPLIED_TO_FIRST_SYS_TRAN_ID';
   l_rec_acct_attrs.array_num_value(11)  :=  to_char(p_source_95);
   l_rec_acct_attrs.array_acct_attr_code(12) := 'APPLIED_TO_SECOND_DIST_ID';
   l_rec_acct_attrs.array_char_value(12)  := p_source_96;
   l_rec_acct_attrs.array_acct_attr_code(13) := 'DISTRIBUTION_IDENTIFIER_1';
   l_rec_acct_attrs.array_num_value(13)  :=  to_char(p_source_30);
   l_rec_acct_attrs.array_acct_attr_code(14) := 'DISTRIBUTION_IDENTIFIER_2';
   l_rec_acct_attrs.array_char_value(14)  := p_source_96;
   l_rec_acct_attrs.array_acct_attr_code(15) := 'DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(15)  := p_source_21;
   l_rec_acct_attrs.array_acct_attr_code(16) := 'ENC_UPG_CR_ACCT_CLASS';
   l_rec_acct_attrs.array_char_value(16)  := p_source_97;
   l_rec_acct_attrs.array_acct_attr_code(17) := 'ENC_UPG_CR_CCID';
   l_rec_acct_attrs.array_num_value(17)  := p_source_98;
   l_rec_acct_attrs.array_acct_attr_code(18) := 'ENC_UPG_CR_ENTERED_AMT';
   l_rec_acct_attrs.array_num_value(18)  := p_source_57;
   l_rec_acct_attrs.array_acct_attr_code(19) := 'ENC_UPG_CR_ENTERED_CURR';
   l_rec_acct_attrs.array_char_value(19)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(20) := 'ENC_UPG_CR_LEDGER_AMT';
   l_rec_acct_attrs.array_num_value(20)  := p_source_99;
   l_rec_acct_attrs.array_acct_attr_code(21) := 'ENC_UPG_DR_ACCT_CLASS';
   l_rec_acct_attrs.array_char_value(21)  := p_source_100;
   l_rec_acct_attrs.array_acct_attr_code(22) := 'ENC_UPG_DR_CCID';
   l_rec_acct_attrs.array_num_value(22)  := p_source_101;
   l_rec_acct_attrs.array_acct_attr_code(23) := 'ENC_UPG_DR_ENTERED_AMT';
   l_rec_acct_attrs.array_num_value(23)  := p_source_57;
   l_rec_acct_attrs.array_acct_attr_code(24) := 'ENC_UPG_DR_ENTERED_CURR';
   l_rec_acct_attrs.array_char_value(24)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(25) := 'ENC_UPG_DR_LEDGER_AMT';
   l_rec_acct_attrs.array_num_value(25)  := p_source_99;
   l_rec_acct_attrs.array_acct_attr_code(26) := 'ENC_UPG_OPTION';
   l_rec_acct_attrs.array_char_value(26)  := p_source_102;
   l_rec_acct_attrs.array_acct_attr_code(27) := 'ENTERED_CURRENCY_AMOUNT';
   l_rec_acct_attrs.array_num_value(27)  := p_source_57;
   l_rec_acct_attrs.array_acct_attr_code(28) := 'ENTERED_CURRENCY_CODE';
   l_rec_acct_attrs.array_char_value(28)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(29) := 'EXCHANGE_DATE';
   l_rec_acct_attrs.array_date_value(29)  := p_source_39;
   l_rec_acct_attrs.array_acct_attr_code(30) := 'EXCHANGE_RATE';
   l_rec_acct_attrs.array_num_value(30)  := p_source_40;
   l_rec_acct_attrs.array_acct_attr_code(31) := 'EXCHANGE_RATE_TYPE';
   l_rec_acct_attrs.array_char_value(31)  := p_source_41;
   l_rec_acct_attrs.array_acct_attr_code(32) := 'LEDGER_AMOUNT';
   l_rec_acct_attrs.array_num_value(32)  := p_source_99;
   l_rec_acct_attrs.array_acct_attr_code(33) := 'REVERSED_DISTRIBUTION_ID1';
   l_rec_acct_attrs.array_num_value(33)  :=  to_char(p_source_103);
   l_rec_acct_attrs.array_acct_attr_code(34) := 'REVERSED_DISTRIBUTION_ID2';
   l_rec_acct_attrs.array_char_value(34)  := p_source_104;
   l_rec_acct_attrs.array_acct_attr_code(35) := 'REVERSED_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(35)  := p_source_105;
   l_rec_acct_attrs.array_acct_attr_code(36) := 'UPG_CR_ENC_TYPE_ID';
   l_rec_acct_attrs.array_num_value(36)  := p_source_106;
   l_rec_acct_attrs.array_acct_attr_code(37) := 'UPG_DR_ENC_TYPE_ID';
   l_rec_acct_attrs.array_num_value(37)  := p_source_107;

   XLA_AE_LINES_PKG.SetLineAcctAttrs(l_rec_acct_attrs);
   p_gain_or_loss_ref  := XLA_AE_LINES_PKG.g_rec_lines.array_gain_or_loss_ref(XLA_AE_LINES_PKG.g_LineNumber);

   ---------------------------------------------------------------------------------------------------------------
   -- 4336173 -- assign Business Flow Class (replace code in xla_ae_lines_pkg.Business_Flow_Validation)
   ---------------------------------------------------------------------------------------------------------------
   XLA_AE_LINES_PKG.g_rec_lines.array_business_class_code(XLA_AE_LINES_PKG.g_LineNumber) := l_bflow_class_code;

   l_actual_upg_option  := XLA_AE_LINES_PKG.g_rec_lines.array_actual_upg_option(XLA_AE_LINES_PKG.g_LineNumber);
   l_enc_upg_option     := XLA_AE_LINES_PKG.g_rec_lines.array_enc_upg_option(XLA_AE_LINES_PKG.g_LineNumber);

   IF xla_accounting_cache_pkg.GetValueChar
         (p_source_code         => 'LEDGER_CATEGORY_CODE'
         ,p_target_ledger_id    => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id) IN ('PRIMARY','ALC')
   AND l_bflow_method_code = 'PRIOR_ENTRY'
--   AND (l_actual_upg_option = 'Y' OR l_enc_upg_option = 'Y') Bug 4922099
   AND ( (NVL(l_actual_upg_option, 'N') IN ('Y', 'O')) OR
         (NVL(l_enc_upg_option, 'N') IN ('Y', 'O'))
       )
   THEN
         xla_ae_lines_pkg.BflowUpgEntry
           (p_business_method_code    => l_bflow_method_code
           ,p_business_class_code     => l_bflow_class_code
           ,p_balance_type            => l_balance_type_code);
   ELSE
      NULL;
-- No business flow processing for business flow method of NONE.
   END IF;

   --
   -- call analytical criteria
   --
   
   --
   -- call description
   --
   
xla_ae_lines_pkg.SetLineDescription(
   p_ae_header_id => l_ae_header_id
  ,p_description  => Description_3 (
     p_application_id         => p_application_id
   , p_ae_header_id           => l_ae_header_id 
, p_source_2 => p_source_2
, p_source_3 => p_source_3
, p_source_4 => p_source_4
, p_source_5 => p_source_5
   )
);


   --
   -- call ADRs
   -- Bug 4922099
   --
   IF ( (l_bflow_method_code <> 'PRIOR_ENTRY') OR
        (NVL(l_actual_upg_option, 'N') = 'O') OR
        (NVL(l_enc_upg_option, 'N') = 'O')
      )
   THEN
   NULL;
   --
   --
   
  l_ccid := AcctDerRule_10(
           p_application_id           => p_application_id
         , p_ae_header_id             => l_ae_header_id 
, p_source_14 => p_source_14
         , x_transaction_coa_id       => l_adr_transaction_coa_id
         , x_accounting_coa_id        => l_adr_accounting_coa_id
         , x_value_type_code          => l_adr_value_type_code
         , p_side                     => 'NA'
   );

   xla_ae_lines_pkg.set_ccid(
    p_code_combination_id          => l_ccid
  , p_value_type_code              => l_adr_value_type_code
  , p_transaction_coa_id           => l_adr_transaction_coa_id
  , p_accounting_coa_id            => l_adr_accounting_coa_id
  , p_adr_code                     => 'PROJ_BURDEN_ENC_ACCT_RULE'
  , p_adr_type_code                => 'S'
  , p_component_type               => l_component_type
  , p_component_code               => l_component_code
  , p_component_type_code          => l_component_type_code
  , p_component_appl_id            => l_component_appl_id
  , p_amb_context_code             => l_amb_context_code
  , p_side                         => 'NA'
  );


   --
   --
   END IF;
   --
   -- Bug 4922099
   IF ( ( (NVL(l_actual_upg_option, 'N') = 'O') OR
          (NVL(l_enc_upg_option, 'N') = 'O')
        ) AND
        (l_bflow_method_code = 'PRIOR_ENTRY')
      )
   THEN
      IF
      --
      1 = 2
      --
      THEN
      xla_accounting_err_pkg.build_message
                                    (p_appli_s_name            => 'XLA'
                                    ,p_msg_name                => 'XLA_UPG_OVERRIDE_ADR_UNDEFINED'
                                    ,p_token_1                 => 'LINE_NUMBER'
                                    ,p_value_1                 => XLA_AE_LINES_PKG.g_LineNumber
                                    ,p_token_2                 => 'LINE_TYPE_NAME'
                                    ,p_value_2                 => XLA_AE_SOURCES_PKG.GetComponentName (
                                                                             l_component_type
                                                                            ,l_component_code
                                                                            ,l_component_type_code
                                                                            ,l_component_appl_id
                                                                            ,l_amb_context_code
                                                                            ,l_entity_code
                                                                            ,l_event_class_code
                                                                           )
                                    ,p_token_3                 => 'OWNER'
                                    ,p_value_3                 => xla_lookups_pkg.get_meaning(
                                                                          p_lookup_type     => 'XLA_OWNER_TYPE'
                                                                          ,p_lookup_code    => l_component_type_code
                                                                         )
                                    ,p_token_4                 => 'PRODUCT_NAME'
                                    ,p_value_4                 => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.application_name
                                    ,p_entity_id               => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.entity_id
                                    ,p_event_id                => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.event_id
                                    ,p_ledger_id               => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id
                                    ,p_ae_header_id            =>  NULL
                                       );

        IF (C_LEVEL_ERROR>= g_log_level) THEN
                 trace
                      (p_msg      => 'ERROR: XLA_UPG_OVERRIDE_ADR_UNDEFINED'
                      ,p_level    => C_LEVEL_ERROR
                      ,p_module   => l_log_module);
        END IF;
      END IF;
   END IF;
   --
   --
   ------------------------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- NOTE: XLA_AE_LINES_PKG.ValidateCurrentLine should NOT be generated if business flow method is
   -- Prior Entry.  Currently, the following code is always generated.
   ------------------------------------------------------------------------------------------------
   XLA_AE_LINES_PKG.ValidateCurrentLine;

   ------------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- Populated credit and debit amounts -- Need to generate this within IF <condition>
   ------------------------------------------------------------------------------------
   XLA_AE_LINES_PKG.SetDebitCreditAmounts;

   ----------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- Update journal entry status -- Need to generate this within IF <condition>
   ----------------------------------------------------------------------------------
   XLA_AE_JOURNAL_ENTRY_PKG.UpdateJournalEntryStatus
         (p_hdr_idx => g_array_event(p_event_id).array_value_num('header_index')
         ,p_balance_type_code => l_balance_type_code
         );

   -------------------------------------------------------------------------------------------
   -- 4262811 - Generate the Accrual Reversal lines
   -------------------------------------------------------------------------------------------
   BEGIN
      l_acc_rev_flag := XLA_AE_HEADER_PKG.g_rec_header_new.array_accrual_reversal_flag
                              (g_array_event(p_event_id).array_value_num('header_index'));
      IF l_acc_rev_flag IS NULL THEN
         l_acc_rev_flag := 'N';
      END IF;
   EXCEPTION
      WHEN OTHERS THEN
         l_acc_rev_flag := 'N';
   END;
   --
   IF (l_acc_rev_flag = 'Y') THEN

       -- 4645092  ------------------------------------------------------------------------------
       -- To allow MPA report to determine if it should generate report process
       XLA_ACCOUNTING_PKG.g_mpa_accrual_exists := 'Y';
       ------------------------------------------------------------------------------------------

       l_accrual_line_num := XLA_AE_LINES_PKG.g_LineNumber;
       XLA_AE_LINES_PKG.CopyLineInfo(l_accrual_line_num);
   -- added call to set_ccid to execute mapping  for secondary accrual reversal entries bug 7444204
   -- call ADRs
   -- Bug 4922099
   --
   IF ( (l_bflow_method_code <> 'PRIOR_ENTRY') OR
        (NVL(l_actual_upg_option, 'N') = 'O') OR
        (NVL(l_enc_upg_option, 'N') = 'O')
      )
   THEN
   NULL;
   --
   --
   
  l_ccid := AcctDerRule_10(
           p_application_id           => p_application_id
         , p_ae_header_id             => l_ae_header_id 
, p_source_14 => p_source_14
         , x_transaction_coa_id       => l_adr_transaction_coa_id
         , x_accounting_coa_id        => l_adr_accounting_coa_id
         , x_value_type_code          => l_adr_value_type_code
         , p_side                     => 'NA'
   );

   xla_ae_lines_pkg.set_ccid(
    p_code_combination_id          => l_ccid
  , p_value_type_code              => l_adr_value_type_code
  , p_transaction_coa_id           => l_adr_transaction_coa_id
  , p_accounting_coa_id            => l_adr_accounting_coa_id
  , p_adr_code                     => 'PROJ_BURDEN_ENC_ACCT_RULE'
  , p_adr_type_code                => 'S'
  , p_component_type               => l_component_type
  , p_component_code               => l_component_code
  , p_component_type_code          => l_component_type_code
  , p_component_appl_id            => l_component_appl_id
  , p_amb_context_code             => l_amb_context_code
  , p_side                         => 'NA'
  );


   --
   --
   END IF;

       --
       -- Update the line information that should be overwritten
       --
       XLA_AE_LINES_PKG.set_ae_header_id(p_ae_header_id => p_event_id ,
                                         p_header_num   => 1);
       XLA_AE_LINES_PKG.g_rec_lines.array_header_num(XLA_AE_LINES_PKG.g_LineNumber)  :=1;

       XLA_AE_LINES_PKG.g_rec_lines.array_business_class_code(XLA_AE_LINES_PKG.g_LineNumber) := NULL; -- 4669271

       IF l_bflow_method_code <> 'NONE' THEN  -- 4655713b
          XLA_AE_LINES_PKG.g_rec_lines.array_reversal_code(XLA_AE_LINES_PKG.g_LineNumber) := CONCAT('MPA_',l_bflow_method_code);
       END IF;

      --
      -- Depending on the Reversal Method setup, do a switch side or changes sign for the amounts
      --
      IF (XLA_AE_JOURNAL_ENTRY_PKG.g_cache_ledgers_info.ledger_reversal_option = 'SIDE') THEN
          XLA_AE_LINES_PKG.g_rec_lines.array_natural_side_code(XLA_AE_LINES_PKG.g_LineNumber) :=  l_acc_rev_natural_side_code;
      ELSE
          ---------------------------------------------------------------------------------------------------
          -- 4262811a Switch Sign
          ---------------------------------------------------------------------------------------------------
          XLA_AE_LINES_PKG.g_rec_lines.array_switch_side_flag(XLA_AE_LINES_PKG.g_LineNumber) := 'N';  -- 5052518
          XLA_AE_LINES_PKG.g_rec_lines.array_ledger_amount(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_ledger_amount(XLA_AE_LINES_PKG.g_LineNumber) * -1;
          XLA_AE_LINES_PKG.g_rec_lines.array_entered_amount(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_entered_amount(XLA_AE_LINES_PKG.g_LineNumber) * -1;
          -- 5132302
          XLA_AE_LINES_PKG.g_rec_lines.array_bflow_applied_to_amt(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_bflow_applied_to_amt(XLA_AE_LINES_PKG.g_LineNumber) * -1;

      END IF;

      -- 4955764
      XLA_AE_LINES_PKG.g_rec_lines.array_gl_date(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_HEADER_PKG.g_rec_header_new.array_gl_date(g_array_event(p_event_id).array_value_num('acc_rev_header_index'));


      XLA_AE_LINES_PKG.ValidateCurrentLine;
      XLA_AE_LINES_PKG.SetDebitCreditAmounts;

      XLA_AE_JOURNAL_ENTRY_PKG.UpdateJournalEntryStatus
               (p_hdr_idx           => g_array_event(p_event_id).array_value_num('acc_rev_header_index')
               ,p_balance_type_code => l_balance_type_code);

   END IF;

   -----------------------------------------------------------------------------------------
   -- 4262811 Multiperiod Accounting
   -----------------------------------------------------------------------------------------
     -- No MPA option is assigned.


END IF;
END IF;
--

--
IF (C_LEVEL_PROCEDURE >= g_log_level) THEN
   trace
      (p_msg      => 'END of AcctLineType_86'
      ,p_level    => C_LEVEL_PROCEDURE
      ,p_module   => l_log_module);
END IF;
--
EXCEPTION
  WHEN xla_exceptions_pkg.application_exception THEN
      RAISE;
  WHEN OTHERS THEN
       xla_exceptions_pkg.raise_message
           (p_location => 'XLA_00200_AAD_S_000010_BC_PKG.AcctLineType_86');
END AcctLineType_86;
--

---------------------------------------
--
-- PRIVATE FUNCTION
--         AcctLineType_87
--
---------------------------------------
PROCEDURE AcctLineType_87 (
  p_application_id        IN NUMBER
 ,p_event_id              IN NUMBER
 ,p_calculate_acctd_flag  IN VARCHAR2
 ,p_calculate_g_l_flag    IN VARCHAR2
 ,p_actual_flag           IN OUT VARCHAR2
 ,p_balance_type_code     OUT VARCHAR2
 ,p_gain_or_loss_ref      OUT VARCHAR2
 
--Document Distribution Type
 , p_source_2            IN VARCHAR2
--Project Name
 , p_source_3            IN VARCHAR2
--Task Number
 , p_source_4            IN VARCHAR2
--Expenditure Organization
 , p_source_5            IN NUMBER
--Distribution Link Type
 , p_source_21            IN VARCHAR2
--Invoice Distribution Identifier
 , p_source_30            IN NUMBER
--Invoice Currency Code
 , p_source_33            IN VARCHAR2
--Invoice Distribution Amount
 , p_source_57            IN NUMBER
--Document Type
 , p_source_83            IN VARCHAR2
--Burden Amount Display Method
 , p_source_84            IN VARCHAR2
--Accounting reversal indicator for project invoice burden
 , p_source_85            IN VARCHAR2
--Allocated to Application Identifier
 , p_source_86            IN NUMBER
--Allocated to Distribution Type
 , p_source_87            IN VARCHAR2
--Allocated to Entity Code
 , p_source_88            IN VARCHAR2
--Allocated to First Distribution Identifier
 , p_source_89            IN NUMBER
--Allocated to First System Transaction Identifier
 , p_source_90            IN NUMBER
--Invoice Burden Applied to Application Identifier
 , p_source_91            IN NUMBER
--Invoice Burden Applied to Distribution Type
 , p_source_92            IN VARCHAR2
--Invoice Burden Applied to Entity Code
 , p_source_93            IN VARCHAR2
--Invoice Burden Applied to First Distribution Identifier
 , p_source_94            IN NUMBER
--Invoice Burden Applied to System Transaction Identifier
 , p_source_95            IN NUMBER
--Invoice Distribution Expenditure Type
 , p_source_96            IN VARCHAR2
--Encumbrance Upgrade Credit Accounting Class
 , p_source_97            IN VARCHAR2
--Encumbrance Upgrade Credit Account
 , p_source_98            IN NUMBER
--Invoice Distribution Ledger Amount Before Rounding
 , p_source_99            IN NUMBER
--Encumbrance Upgrade Debit Accounting Class
 , p_source_100            IN VARCHAR2
--Encumbrance Upgrade Debit Account
 , p_source_101            IN NUMBER
--Use Encumbrances Upgrade Attributes Flag
 , p_source_102            IN VARCHAR2
--Accounting reversal first distribution identifier for project invoice burden
 , p_source_103            IN NUMBER
--Invoice Burden Applied to Second Distribution Identifier
 , p_source_104            IN VARCHAR2
--Accounting reversal distribution type for project invoice burden
 , p_source_105            IN VARCHAR2
--Encumbrance Upgrade Credit Encumbrance Type
 , p_source_106            IN NUMBER
--Encumbrance Upgrade Debit Encumbrance Type
 , p_source_107            IN NUMBER
)
IS

l_component_type              VARCHAR2(80);
l_component_code              VARCHAR2(30);
l_component_type_code         VARCHAR2(1);
l_component_appl_id           INTEGER;
l_amb_context_code            VARCHAR2(30);
l_entity_code                 VARCHAR2(30);
l_event_class_code            VARCHAR2(30);
l_ae_header_id                NUMBER;
l_event_type_code             VARCHAR2(30);
l_line_definition_code        VARCHAR2(30);
l_line_definition_owner_code  VARCHAR2(1);
--
-- adr variables
l_segment                     VARCHAR2(30);
l_ccid                        NUMBER;
l_adr_transaction_coa_id      NUMBER;
l_adr_accounting_coa_id       NUMBER;
l_adr_flexfield_segment_code  VARCHAR2(30);
l_adr_flex_value_set_id       NUMBER;
l_adr_value_type_code         VARCHAR2(30);
l_adr_value_combination_id    NUMBER;
l_adr_value_segment_code      VARCHAR2(30);

l_bflow_method_code           VARCHAR2(30);  -- 4219869 Business Flow
l_bflow_class_code            VARCHAR2(30);  -- 4219869 Business Flow
l_inherit_desc_flag           VARCHAR2(1);   -- 4219869 Business Flow
l_budgetary_control_flag      VARCHAR2(1);   -- 4458381 Public Sector Enh

-- 4262811 Variables ------------------------------------------------------------------------------------------
l_entered_amt_idx             NUMBER;
l_accted_amt_idx              NUMBER;
l_acc_rev_flag                VARCHAR2(1);
l_accrual_line_num            NUMBER;
l_tmp_amt                     NUMBER;
l_acc_rev_natural_side_code   VARCHAR2(1);

l_num_entries                 NUMBER;
l_gl_dates                    xla_ae_journal_entry_pkg.t_array_date;
l_accted_amts                 xla_ae_journal_entry_pkg.t_array_num;
l_entered_amts                xla_ae_journal_entry_pkg.t_array_num;
l_period_names                xla_ae_journal_entry_pkg.t_array_V15L;
l_recog_line_1                NUMBER;
l_recog_line_2                NUMBER;

l_bflow_applied_to_amt_idx    NUMBER;                                -- 5132302
l_bflow_applied_to_amt        NUMBER;                                -- 5132302
l_bflow_applied_to_amts       xla_ae_journal_entry_pkg.t_array_num;  -- 5132302

l_event_id                    NUMBER;  -- To handle MPA header Description: xla_ae_header_pkg.SetHdrDescription

--l_rounding_ccy                VARCHAR2(15); -- To handle MPA rounding  4262811b
l_same_currency               BOOLEAN;        -- To handle MPA rounding  4262811b

---------------------------------------------------------------------------------------------------------------


--
-- bulk performance
--
l_balance_type_code           VARCHAR2(1);
l_rec_acct_attrs              XLA_AE_LINES_PKG.t_rec_acct_attrs;
l_log_module                  VARCHAR2(240);

--
-- Upgrade strategy
--
l_actual_upg_option           VARCHAR2(1);
l_enc_upg_option           VARCHAR2(1);

--
BEGIN
--
IF g_log_enabled THEN
      l_log_module := C_DEFAULT_MODULE||'.AcctLineType_87';
END IF;
--
IF (C_LEVEL_PROCEDURE >= g_log_level) THEN

      trace
         (p_msg      => 'BEGIN of AcctLineType_87'
         ,p_level    => C_LEVEL_PROCEDURE
         ,p_module   => l_log_module);

END IF;
--
l_component_type             := 'AMB_JLT';
l_component_code             := 'PREPAY_APPL_BURDENED_ENC';
l_component_type_code        := 'S';
l_component_appl_id          :=  200;
l_amb_context_code           := 'DEFAULT';
l_entity_code                := 'AP_INVOICES';
l_event_class_code           := 'PREPAY_APPLICATION_BURDEN';
l_event_type_code            := 'PREPAY_APPLICATION_BURDEN_ALL';
l_line_definition_owner_code := 'S';
l_line_definition_code       := 'AP_PREPAY_APPLY_BURDEN_ENC_ALL';
--
l_balance_type_code          := 'E';
l_segment                     := NULL;
l_ccid                        := NULL;
l_adr_transaction_coa_id      := NULL;
l_adr_accounting_coa_id       := NULL;
l_adr_flexfield_segment_code  := NULL;
l_adr_flex_value_set_id       := NULL;
l_adr_value_type_code         := NULL;
l_adr_value_combination_id    := NULL;
l_adr_value_segment_code      := NULL;

l_bflow_method_code          := 'PRIOR_ENTRY';   -- 4219869 Business Flow
l_bflow_class_code           := 'AP_PREPAY_BURDENED_ENC';    -- 4219869 Business Flow
l_inherit_desc_flag          := 'N';   -- 4219869 Business Flow
l_budgetary_control_flag     := 'Y';

l_bflow_applied_to_amt_idx   := NULL; -- 5132302
l_bflow_applied_to_amt       := NULL; -- 5132302
l_entered_amt_idx            := NULL;          -- 4262811
l_accted_amt_idx             := NULL;          -- 4262811
l_acc_rev_flag               := NULL;          -- 4262811
l_accrual_line_num           := NULL;          -- 4262811
l_tmp_amt                    := NULL;          -- 4262811
--
 
IF XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id = XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.ledger_id OR
    l_balance_type_code <> 'B' THEN
IF NVL(p_source_83,'
') =  'AP' AND 
(NVL(p_source_2,'
') =  'PREPAY APPL' OR 
NVL(p_source_2,'
') =  'TAX DIFF' OR 
NVL(p_source_2,'
') =  'FINAL APPLICATION ROUNDING' OR 
NVL(p_source_2,'
') =  'PREPAY APPL NONREC TAX') AND 
NVL(p_source_84,'
') =  'S'
 THEN 

   --
   XLA_AE_LINES_PKG.SetNewLine;

   p_balance_type_code          := l_balance_type_code;
   -- set the flag so later we will know whether the gain loss line needs to be created
   
   IF(l_balance_type_code = 'A' and p_actual_flag is null) THEN
     p_actual_flag :='A';
   END IF;

   --
   -- bulk performance
   --
   XLA_AE_LINES_PKG.set_ae_header_id (p_ae_header_id => p_event_id ,
                                      p_header_num   => 0); -- 4262811
   --
   -- set accounting line options
   --
   l_ae_header_id:= xla_ae_lines_pkg.SetAcctLineOption(
           p_natural_side_code          => 'C'
         , p_gain_or_loss_flag          => 'N'
         , p_gl_transfer_mode_code      => 'S'
         , p_acct_entry_type_code       => 'E'
         , p_switch_side_flag           => 'Y'
         , p_merge_duplicate_code       => 'N'
         );
   --
   l_acc_rev_natural_side_code := 'D';  -- 4262811
   -- 
   --
   -- set accounting line type info
   --
   xla_ae_lines_pkg.SetAcctLineType
      (p_component_type             => l_component_type
      ,p_event_type_code            => l_event_type_code
      ,p_line_definition_owner_code => l_line_definition_owner_code
      ,p_line_definition_code       => l_line_definition_code
      ,p_accounting_line_code       => l_component_code
      ,p_accounting_line_type_code  => l_component_type_code
      ,p_accounting_line_appl_id    => l_component_appl_id
      ,p_amb_context_code           => l_amb_context_code
      ,p_entity_code                => l_entity_code
      ,p_event_class_code           => l_event_class_code);
   --
   -- set accounting class
   --
   xla_ae_lines_pkg.SetAcctClass(
           p_accounting_class_code  => 'AP_PREPAY_APPL_BURDEN'
         , p_ae_header_id           => l_ae_header_id
         );

   --
   -- set rounding class
   --
   XLA_AE_LINES_PKG.g_rec_lines.array_rounding_class(XLA_AE_LINES_PKG.g_LineNumber) :=
                      'AP_PREPAY_APPL_BURDEN';

   --
   xla_ae_lines_pkg.g_rec_lines.array_calculate_acctd_flag(xla_ae_lines_pkg.g_LineNumber) := p_calculate_acctd_flag;
   xla_ae_lines_pkg.g_rec_lines.array_calculate_g_l_flag(xla_ae_lines_pkg.g_LineNumber) := p_calculate_g_l_flag;
   --
   -- bulk performance
   --
   XLA_AE_LINES_PKG.g_rec_lines.array_balance_type_code(XLA_AE_LINES_PKG.g_LineNumber) := l_balance_type_code;

   XLA_AE_LINES_PKG.g_rec_lines.array_ledger_id(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id;

   -- 4955764
   XLA_AE_LINES_PKG.g_rec_lines.array_gl_date(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_HEADER_PKG.g_rec_header_new.array_gl_date(g_array_event(p_event_id).array_value_num('header_index'));

   -- 4458381 Public Sector Enh
   
   --
   -- set accounting attributes for the line type
   --
   l_entered_amt_idx := 27;
   l_accted_amt_idx  := 29;
   l_bflow_applied_to_amt_idx  := NULL;  -- 5132302
   l_rec_acct_attrs.array_acct_attr_code(1) := 'ACCOUNTING_REVERSAL_OPTION';
   l_rec_acct_attrs.array_char_value(1)  := p_source_85;
   l_rec_acct_attrs.array_acct_attr_code(2) := 'ALLOC_TO_APPLICATION_ID';
   l_rec_acct_attrs.array_num_value(2)  := p_source_86;
   l_rec_acct_attrs.array_acct_attr_code(3) := 'ALLOC_TO_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(3)  := p_source_87;
   l_rec_acct_attrs.array_acct_attr_code(4) := 'ALLOC_TO_ENTITY_CODE';
   l_rec_acct_attrs.array_char_value(4)  := p_source_88;
   l_rec_acct_attrs.array_acct_attr_code(5) := 'ALLOC_TO_FIRST_DIST_ID';
   l_rec_acct_attrs.array_num_value(5)  :=  to_char(p_source_89);
   l_rec_acct_attrs.array_acct_attr_code(6) := 'ALLOC_TO_FIRST_SYS_TRAN_ID';
   l_rec_acct_attrs.array_num_value(6)  :=  to_char(p_source_90);
   l_rec_acct_attrs.array_acct_attr_code(7) := 'APPLIED_TO_APPLICATION_ID';
   l_rec_acct_attrs.array_num_value(7)  := p_source_91;
   l_rec_acct_attrs.array_acct_attr_code(8) := 'APPLIED_TO_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(8)  := p_source_92;
   l_rec_acct_attrs.array_acct_attr_code(9) := 'APPLIED_TO_ENTITY_CODE';
   l_rec_acct_attrs.array_char_value(9)  := p_source_93;
   l_rec_acct_attrs.array_acct_attr_code(10) := 'APPLIED_TO_FIRST_DIST_ID';
   l_rec_acct_attrs.array_num_value(10)  :=  to_char(p_source_94);
   l_rec_acct_attrs.array_acct_attr_code(11) := 'APPLIED_TO_FIRST_SYS_TRAN_ID';
   l_rec_acct_attrs.array_num_value(11)  :=  to_char(p_source_95);
   l_rec_acct_attrs.array_acct_attr_code(12) := 'APPLIED_TO_SECOND_DIST_ID';
   l_rec_acct_attrs.array_char_value(12)  := p_source_104;
   l_rec_acct_attrs.array_acct_attr_code(13) := 'DISTRIBUTION_IDENTIFIER_1';
   l_rec_acct_attrs.array_num_value(13)  :=  to_char(p_source_30);
   l_rec_acct_attrs.array_acct_attr_code(14) := 'DISTRIBUTION_IDENTIFIER_2';
   l_rec_acct_attrs.array_char_value(14)  := p_source_96;
   l_rec_acct_attrs.array_acct_attr_code(15) := 'DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(15)  := p_source_21;
   l_rec_acct_attrs.array_acct_attr_code(16) := 'ENC_UPG_CR_ACCT_CLASS';
   l_rec_acct_attrs.array_char_value(16)  := p_source_97;
   l_rec_acct_attrs.array_acct_attr_code(17) := 'ENC_UPG_CR_CCID';
   l_rec_acct_attrs.array_num_value(17)  := p_source_98;
   l_rec_acct_attrs.array_acct_attr_code(18) := 'ENC_UPG_CR_ENTERED_AMT';
   l_rec_acct_attrs.array_num_value(18)  := p_source_57;
   l_rec_acct_attrs.array_acct_attr_code(19) := 'ENC_UPG_CR_ENTERED_CURR';
   l_rec_acct_attrs.array_char_value(19)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(20) := 'ENC_UPG_CR_LEDGER_AMT';
   l_rec_acct_attrs.array_num_value(20)  := p_source_99;
   l_rec_acct_attrs.array_acct_attr_code(21) := 'ENC_UPG_DR_ACCT_CLASS';
   l_rec_acct_attrs.array_char_value(21)  := p_source_100;
   l_rec_acct_attrs.array_acct_attr_code(22) := 'ENC_UPG_DR_CCID';
   l_rec_acct_attrs.array_num_value(22)  := p_source_101;
   l_rec_acct_attrs.array_acct_attr_code(23) := 'ENC_UPG_DR_ENTERED_AMT';
   l_rec_acct_attrs.array_num_value(23)  := p_source_57;
   l_rec_acct_attrs.array_acct_attr_code(24) := 'ENC_UPG_DR_ENTERED_CURR';
   l_rec_acct_attrs.array_char_value(24)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(25) := 'ENC_UPG_DR_LEDGER_AMT';
   l_rec_acct_attrs.array_num_value(25)  := p_source_99;
   l_rec_acct_attrs.array_acct_attr_code(26) := 'ENC_UPG_OPTION';
   l_rec_acct_attrs.array_char_value(26)  := p_source_102;
   l_rec_acct_attrs.array_acct_attr_code(27) := 'ENTERED_CURRENCY_AMOUNT';
   l_rec_acct_attrs.array_num_value(27)  := p_source_57;
   l_rec_acct_attrs.array_acct_attr_code(28) := 'ENTERED_CURRENCY_CODE';
   l_rec_acct_attrs.array_char_value(28)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(29) := 'LEDGER_AMOUNT';
   l_rec_acct_attrs.array_num_value(29)  := p_source_99;
   l_rec_acct_attrs.array_acct_attr_code(30) := 'REVERSED_DISTRIBUTION_ID1';
   l_rec_acct_attrs.array_num_value(30)  :=  to_char(p_source_103);
   l_rec_acct_attrs.array_acct_attr_code(31) := 'REVERSED_DISTRIBUTION_ID2';
   l_rec_acct_attrs.array_char_value(31)  := p_source_104;
   l_rec_acct_attrs.array_acct_attr_code(32) := 'REVERSED_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(32)  := p_source_105;
   l_rec_acct_attrs.array_acct_attr_code(33) := 'UPG_CR_ENC_TYPE_ID';
   l_rec_acct_attrs.array_num_value(33)  := p_source_106;
   l_rec_acct_attrs.array_acct_attr_code(34) := 'UPG_DR_ENC_TYPE_ID';
   l_rec_acct_attrs.array_num_value(34)  := p_source_107;

   XLA_AE_LINES_PKG.SetLineAcctAttrs(l_rec_acct_attrs);
   p_gain_or_loss_ref  := XLA_AE_LINES_PKG.g_rec_lines.array_gain_or_loss_ref(XLA_AE_LINES_PKG.g_LineNumber);

   ---------------------------------------------------------------------------------------------------------------
   -- 4336173 -- assign Business Flow Class (replace code in xla_ae_lines_pkg.Business_Flow_Validation)
   ---------------------------------------------------------------------------------------------------------------
   XLA_AE_LINES_PKG.g_rec_lines.array_business_class_code(XLA_AE_LINES_PKG.g_LineNumber) := l_bflow_class_code;

   l_actual_upg_option  := XLA_AE_LINES_PKG.g_rec_lines.array_actual_upg_option(XLA_AE_LINES_PKG.g_LineNumber);
   l_enc_upg_option     := XLA_AE_LINES_PKG.g_rec_lines.array_enc_upg_option(XLA_AE_LINES_PKG.g_LineNumber);

   IF xla_accounting_cache_pkg.GetValueChar
         (p_source_code         => 'LEDGER_CATEGORY_CODE'
         ,p_target_ledger_id    => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id) IN ('PRIMARY','ALC')
   AND l_bflow_method_code = 'PRIOR_ENTRY'
--   AND (l_actual_upg_option = 'Y' OR l_enc_upg_option = 'Y') Bug 4922099
   AND ( (NVL(l_actual_upg_option, 'N') IN ('Y', 'O')) OR
         (NVL(l_enc_upg_option, 'N') IN ('Y', 'O'))
       )
   THEN
         xla_ae_lines_pkg.BflowUpgEntry
           (p_business_method_code    => l_bflow_method_code
           ,p_business_class_code     => l_bflow_class_code
           ,p_balance_type            => l_balance_type_code);
   ELSE
      NULL;
XLA_AE_LINES_PKG.business_flow_validation(
                                p_business_method_code     => l_bflow_method_code
                               ,p_business_class_code      => l_bflow_class_code
                               ,p_inherit_description_flag => l_inherit_desc_flag);
   END IF;

   --
   -- call analytical criteria
   --
   -- Inherited Analytical Criteria for business flow method of Prior Entry.
   --
   -- call description
   --
   
xla_ae_lines_pkg.SetLineDescription(
   p_ae_header_id => l_ae_header_id
  ,p_description  => Description_3 (
     p_application_id         => p_application_id
   , p_ae_header_id           => l_ae_header_id 
, p_source_2 => p_source_2
, p_source_3 => p_source_3
, p_source_4 => p_source_4
, p_source_5 => p_source_5
   )
);


   --
   -- call ADRs
   -- Bug 4922099
   --
   IF ( (l_bflow_method_code <> 'PRIOR_ENTRY') OR
        (NVL(l_actual_upg_option, 'N') = 'O') OR
        (NVL(l_enc_upg_option, 'N') = 'O')
      )
   THEN
   NULL;
   --
   --
   
   --
   --
   END IF;
   --
   -- Bug 4922099
   IF ( ( (NVL(l_actual_upg_option, 'N') = 'O') OR
          (NVL(l_enc_upg_option, 'N') = 'O')
        ) AND
        (l_bflow_method_code = 'PRIOR_ENTRY')
      )
   THEN
      IF
      --
      1 = 1
      --
      THEN
      xla_accounting_err_pkg.build_message
                                    (p_appli_s_name            => 'XLA'
                                    ,p_msg_name                => 'XLA_UPG_OVERRIDE_ADR_UNDEFINED'
                                    ,p_token_1                 => 'LINE_NUMBER'
                                    ,p_value_1                 => XLA_AE_LINES_PKG.g_LineNumber
                                    ,p_token_2                 => 'LINE_TYPE_NAME'
                                    ,p_value_2                 => XLA_AE_SOURCES_PKG.GetComponentName (
                                                                             l_component_type
                                                                            ,l_component_code
                                                                            ,l_component_type_code
                                                                            ,l_component_appl_id
                                                                            ,l_amb_context_code
                                                                            ,l_entity_code
                                                                            ,l_event_class_code
                                                                           )
                                    ,p_token_3                 => 'OWNER'
                                    ,p_value_3                 => xla_lookups_pkg.get_meaning(
                                                                          p_lookup_type     => 'XLA_OWNER_TYPE'
                                                                          ,p_lookup_code    => l_component_type_code
                                                                         )
                                    ,p_token_4                 => 'PRODUCT_NAME'
                                    ,p_value_4                 => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.application_name
                                    ,p_entity_id               => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.entity_id
                                    ,p_event_id                => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.event_id
                                    ,p_ledger_id               => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id
                                    ,p_ae_header_id            =>  NULL
                                       );

        IF (C_LEVEL_ERROR>= g_log_level) THEN
                 trace
                      (p_msg      => 'ERROR: XLA_UPG_OVERRIDE_ADR_UNDEFINED'
                      ,p_level    => C_LEVEL_ERROR
                      ,p_module   => l_log_module);
        END IF;
      END IF;
   END IF;
   --
   --
   ------------------------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- NOTE: XLA_AE_LINES_PKG.ValidateCurrentLine should NOT be generated if business flow method is
   -- Prior Entry.  Currently, the following code is always generated.
   ------------------------------------------------------------------------------------------------
   -- No ValidateCurrentLine for business flow method of Prior Entry

   ------------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- Populated credit and debit amounts -- Need to generate this within IF <condition>
   ------------------------------------------------------------------------------------
   XLA_AE_LINES_PKG.SetDebitCreditAmounts;

   ----------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- Update journal entry status -- Need to generate this within IF <condition>
   ----------------------------------------------------------------------------------
   XLA_AE_JOURNAL_ENTRY_PKG.UpdateJournalEntryStatus
         (p_hdr_idx => g_array_event(p_event_id).array_value_num('header_index')
         ,p_balance_type_code => l_balance_type_code
         );

   -------------------------------------------------------------------------------------------
   -- 4262811 - Generate the Accrual Reversal lines
   -------------------------------------------------------------------------------------------
   BEGIN
      l_acc_rev_flag := XLA_AE_HEADER_PKG.g_rec_header_new.array_accrual_reversal_flag
                              (g_array_event(p_event_id).array_value_num('header_index'));
      IF l_acc_rev_flag IS NULL THEN
         l_acc_rev_flag := 'N';
      END IF;
   EXCEPTION
      WHEN OTHERS THEN
         l_acc_rev_flag := 'N';
   END;
   --
   IF (l_acc_rev_flag = 'Y') THEN

       -- 4645092  ------------------------------------------------------------------------------
       -- To allow MPA report to determine if it should generate report process
       XLA_ACCOUNTING_PKG.g_mpa_accrual_exists := 'Y';
       ------------------------------------------------------------------------------------------

       l_accrual_line_num := XLA_AE_LINES_PKG.g_LineNumber;
       XLA_AE_LINES_PKG.CopyLineInfo(l_accrual_line_num);
   -- added call to set_ccid to execute mapping  for secondary accrual reversal entries bug 7444204
   -- call ADRs
   -- Bug 4922099
   --
   IF ( (l_bflow_method_code <> 'PRIOR_ENTRY') OR
        (NVL(l_actual_upg_option, 'N') = 'O') OR
        (NVL(l_enc_upg_option, 'N') = 'O')
      )
   THEN
   NULL;
   --
   --
   
   --
   --
   END IF;

       --
       -- Update the line information that should be overwritten
       --
       XLA_AE_LINES_PKG.set_ae_header_id(p_ae_header_id => p_event_id ,
                                         p_header_num   => 1);
       XLA_AE_LINES_PKG.g_rec_lines.array_header_num(XLA_AE_LINES_PKG.g_LineNumber)  :=1;

       XLA_AE_LINES_PKG.g_rec_lines.array_business_class_code(XLA_AE_LINES_PKG.g_LineNumber) := NULL; -- 4669271

       IF l_bflow_method_code <> 'NONE' THEN  -- 4655713b
          XLA_AE_LINES_PKG.g_rec_lines.array_reversal_code(XLA_AE_LINES_PKG.g_LineNumber) := CONCAT('MPA_',l_bflow_method_code);
       END IF;

      --
      -- Depending on the Reversal Method setup, do a switch side or changes sign for the amounts
      --
      IF (XLA_AE_JOURNAL_ENTRY_PKG.g_cache_ledgers_info.ledger_reversal_option = 'SIDE') THEN
          XLA_AE_LINES_PKG.g_rec_lines.array_natural_side_code(XLA_AE_LINES_PKG.g_LineNumber) :=  l_acc_rev_natural_side_code;
      ELSE
          ---------------------------------------------------------------------------------------------------
          -- 4262811a Switch Sign
          ---------------------------------------------------------------------------------------------------
          XLA_AE_LINES_PKG.g_rec_lines.array_switch_side_flag(XLA_AE_LINES_PKG.g_LineNumber) := 'N';  -- 5052518
          XLA_AE_LINES_PKG.g_rec_lines.array_ledger_amount(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_ledger_amount(XLA_AE_LINES_PKG.g_LineNumber) * -1;
          XLA_AE_LINES_PKG.g_rec_lines.array_entered_amount(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_entered_amount(XLA_AE_LINES_PKG.g_LineNumber) * -1;
          -- 5132302
          XLA_AE_LINES_PKG.g_rec_lines.array_bflow_applied_to_amt(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_bflow_applied_to_amt(XLA_AE_LINES_PKG.g_LineNumber) * -1;

      END IF;

      -- 4955764
      XLA_AE_LINES_PKG.g_rec_lines.array_gl_date(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_HEADER_PKG.g_rec_header_new.array_gl_date(g_array_event(p_event_id).array_value_num('acc_rev_header_index'));


      XLA_AE_LINES_PKG.ValidateCurrentLine;
      XLA_AE_LINES_PKG.SetDebitCreditAmounts;

      XLA_AE_JOURNAL_ENTRY_PKG.UpdateJournalEntryStatus
               (p_hdr_idx           => g_array_event(p_event_id).array_value_num('acc_rev_header_index')
               ,p_balance_type_code => l_balance_type_code);

   END IF;

   -----------------------------------------------------------------------------------------
   -- 4262811 Multiperiod Accounting
   -----------------------------------------------------------------------------------------
     -- No MPA option is assigned.


END IF;
END IF;
--

--
IF (C_LEVEL_PROCEDURE >= g_log_level) THEN
   trace
      (p_msg      => 'END of AcctLineType_87'
      ,p_level    => C_LEVEL_PROCEDURE
      ,p_module   => l_log_module);
END IF;
--
EXCEPTION
  WHEN xla_exceptions_pkg.application_exception THEN
      RAISE;
  WHEN OTHERS THEN
       xla_exceptions_pkg.raise_message
           (p_location => 'XLA_00200_AAD_S_000010_BC_PKG.AcctLineType_87');
END AcctLineType_87;
--

---------------------------------------
--
-- PRIVATE FUNCTION
--         AcctLineType_88
--
---------------------------------------
PROCEDURE AcctLineType_88 (
  p_application_id        IN NUMBER
 ,p_event_id              IN NUMBER
 ,p_calculate_acctd_flag  IN VARCHAR2
 ,p_calculate_g_l_flag    IN VARCHAR2
 ,p_actual_flag           IN OUT VARCHAR2
 ,p_balance_type_code     OUT VARCHAR2
 ,p_gain_or_loss_ref      OUT VARCHAR2
 
--Document Distribution Type
 , p_source_2            IN VARCHAR2
--Project Name
 , p_source_3            IN VARCHAR2
--Task Number
 , p_source_4            IN VARCHAR2
--Expenditure Organization
 , p_source_5            IN NUMBER
--Distribution Link Type
 , p_source_21            IN VARCHAR2
--Invoice Distribution Identifier
 , p_source_30            IN NUMBER
--Invoice Currency Code
 , p_source_33            IN VARCHAR2
--Invoice Distribution Amount
 , p_source_57            IN NUMBER
--Document Type
 , p_source_83            IN VARCHAR2
--Burden Amount Display Method
 , p_source_84            IN VARCHAR2
--Accounting reversal indicator for project invoice burden
 , p_source_85            IN VARCHAR2
--Allocated to Application Identifier
 , p_source_86            IN NUMBER
--Allocated to Distribution Type
 , p_source_87            IN VARCHAR2
--Allocated to Entity Code
 , p_source_88            IN VARCHAR2
--Allocated to First Distribution Identifier
 , p_source_89            IN NUMBER
--Allocated to First System Transaction Identifier
 , p_source_90            IN NUMBER
--Invoice Burden Applied to Application Identifier
 , p_source_91            IN NUMBER
--Invoice Burden Applied to Distribution Type
 , p_source_92            IN VARCHAR2
--Invoice Burden Applied to Entity Code
 , p_source_93            IN VARCHAR2
--Invoice Burden Applied to First Distribution Identifier
 , p_source_94            IN NUMBER
--Invoice Burden Applied to System Transaction Identifier
 , p_source_95            IN NUMBER
--Invoice Distribution Expenditure Type
 , p_source_96            IN VARCHAR2
--Encumbrance Upgrade Credit Accounting Class
 , p_source_97            IN VARCHAR2
--Encumbrance Upgrade Credit Account
 , p_source_98            IN NUMBER
--Invoice Distribution Ledger Amount Before Rounding
 , p_source_99            IN NUMBER
--Encumbrance Upgrade Debit Accounting Class
 , p_source_100            IN VARCHAR2
--Encumbrance Upgrade Debit Account
 , p_source_101            IN NUMBER
--Use Encumbrances Upgrade Attributes Flag
 , p_source_102            IN VARCHAR2
--Accounting reversal first distribution identifier for project invoice burden
 , p_source_103            IN NUMBER
--Invoice Burden Applied to Second Distribution Identifier
 , p_source_104            IN VARCHAR2
--Accounting reversal distribution type for project invoice burden
 , p_source_105            IN VARCHAR2
--Encumbrance Upgrade Credit Encumbrance Type
 , p_source_106            IN NUMBER
--Encumbrance Upgrade Debit Encumbrance Type
 , p_source_107            IN NUMBER
--Burden Record Identifier
 , p_source_108            IN VARCHAR2
 , p_source_108_meaning    IN VARCHAR2
)
IS

l_component_type              VARCHAR2(80);
l_component_code              VARCHAR2(30);
l_component_type_code         VARCHAR2(1);
l_component_appl_id           INTEGER;
l_amb_context_code            VARCHAR2(30);
l_entity_code                 VARCHAR2(30);
l_event_class_code            VARCHAR2(30);
l_ae_header_id                NUMBER;
l_event_type_code             VARCHAR2(30);
l_line_definition_code        VARCHAR2(30);
l_line_definition_owner_code  VARCHAR2(1);
--
-- adr variables
l_segment                     VARCHAR2(30);
l_ccid                        NUMBER;
l_adr_transaction_coa_id      NUMBER;
l_adr_accounting_coa_id       NUMBER;
l_adr_flexfield_segment_code  VARCHAR2(30);
l_adr_flex_value_set_id       NUMBER;
l_adr_value_type_code         VARCHAR2(30);
l_adr_value_combination_id    NUMBER;
l_adr_value_segment_code      VARCHAR2(30);

l_bflow_method_code           VARCHAR2(30);  -- 4219869 Business Flow
l_bflow_class_code            VARCHAR2(30);  -- 4219869 Business Flow
l_inherit_desc_flag           VARCHAR2(1);   -- 4219869 Business Flow
l_budgetary_control_flag      VARCHAR2(1);   -- 4458381 Public Sector Enh

-- 4262811 Variables ------------------------------------------------------------------------------------------
l_entered_amt_idx             NUMBER;
l_accted_amt_idx              NUMBER;
l_acc_rev_flag                VARCHAR2(1);
l_accrual_line_num            NUMBER;
l_tmp_amt                     NUMBER;
l_acc_rev_natural_side_code   VARCHAR2(1);

l_num_entries                 NUMBER;
l_gl_dates                    xla_ae_journal_entry_pkg.t_array_date;
l_accted_amts                 xla_ae_journal_entry_pkg.t_array_num;
l_entered_amts                xla_ae_journal_entry_pkg.t_array_num;
l_period_names                xla_ae_journal_entry_pkg.t_array_V15L;
l_recog_line_1                NUMBER;
l_recog_line_2                NUMBER;

l_bflow_applied_to_amt_idx    NUMBER;                                -- 5132302
l_bflow_applied_to_amt        NUMBER;                                -- 5132302
l_bflow_applied_to_amts       xla_ae_journal_entry_pkg.t_array_num;  -- 5132302

l_event_id                    NUMBER;  -- To handle MPA header Description: xla_ae_header_pkg.SetHdrDescription

--l_rounding_ccy                VARCHAR2(15); -- To handle MPA rounding  4262811b
l_same_currency               BOOLEAN;        -- To handle MPA rounding  4262811b

---------------------------------------------------------------------------------------------------------------


--
-- bulk performance
--
l_balance_type_code           VARCHAR2(1);
l_rec_acct_attrs              XLA_AE_LINES_PKG.t_rec_acct_attrs;
l_log_module                  VARCHAR2(240);

--
-- Upgrade strategy
--
l_actual_upg_option           VARCHAR2(1);
l_enc_upg_option           VARCHAR2(1);

--
BEGIN
--
IF g_log_enabled THEN
      l_log_module := C_DEFAULT_MODULE||'.AcctLineType_88';
END IF;
--
IF (C_LEVEL_PROCEDURE >= g_log_level) THEN

      trace
         (p_msg      => 'BEGIN of AcctLineType_88'
         ,p_level    => C_LEVEL_PROCEDURE
         ,p_module   => l_log_module);

END IF;
--
l_component_type             := 'AMB_JLT';
l_component_code             := 'PREPAY_APPL_BURDEN_ENC';
l_component_type_code        := 'S';
l_component_appl_id          :=  200;
l_amb_context_code           := 'DEFAULT';
l_entity_code                := 'AP_INVOICES';
l_event_class_code           := 'PREPAY_APPLICATION_BURDEN';
l_event_type_code            := 'PREPAY_APPLICATION_BURDEN_ALL';
l_line_definition_owner_code := 'S';
l_line_definition_code       := 'AP_PREPAY_APPLY_BURDEN_ENC_ALL';
--
l_balance_type_code          := 'E';
l_segment                     := NULL;
l_ccid                        := NULL;
l_adr_transaction_coa_id      := NULL;
l_adr_accounting_coa_id       := NULL;
l_adr_flexfield_segment_code  := NULL;
l_adr_flex_value_set_id       := NULL;
l_adr_value_type_code         := NULL;
l_adr_value_combination_id    := NULL;
l_adr_value_segment_code      := NULL;

l_bflow_method_code          := 'PRIOR_ENTRY';   -- 4219869 Business Flow
l_bflow_class_code           := 'AP_PREPAY_BURDEN_ENC';    -- 4219869 Business Flow
l_inherit_desc_flag          := 'N';   -- 4219869 Business Flow
l_budgetary_control_flag     := 'Y';

l_bflow_applied_to_amt_idx   := NULL; -- 5132302
l_bflow_applied_to_amt       := NULL; -- 5132302
l_entered_amt_idx            := NULL;          -- 4262811
l_accted_amt_idx             := NULL;          -- 4262811
l_acc_rev_flag               := NULL;          -- 4262811
l_accrual_line_num           := NULL;          -- 4262811
l_tmp_amt                    := NULL;          -- 4262811
--
 
IF XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id = XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.ledger_id OR
    l_balance_type_code <> 'B' THEN
IF NVL(p_source_83,'
') =  'AP' AND 
(NVL(p_source_2,'
') =  'PREPAY APPL' OR 
NVL(p_source_2,'
') =  'TAX DIFF' OR 
NVL(p_source_2,'
') =  'FINAL APPLICATION ROUNDING' OR 
NVL(p_source_2,'
') =  'PREPAY APPL NONREC TAX') AND 
NVL(p_source_84,'
') =  'D' AND 
NVL(p_source_108,'
') =  'O'
 THEN 

   --
   XLA_AE_LINES_PKG.SetNewLine;

   p_balance_type_code          := l_balance_type_code;
   -- set the flag so later we will know whether the gain loss line needs to be created
   
   IF(l_balance_type_code = 'A' and p_actual_flag is null) THEN
     p_actual_flag :='A';
   END IF;

   --
   -- bulk performance
   --
   XLA_AE_LINES_PKG.set_ae_header_id (p_ae_header_id => p_event_id ,
                                      p_header_num   => 0); -- 4262811
   --
   -- set accounting line options
   --
   l_ae_header_id:= xla_ae_lines_pkg.SetAcctLineOption(
           p_natural_side_code          => 'C'
         , p_gain_or_loss_flag          => 'N'
         , p_gl_transfer_mode_code      => 'S'
         , p_acct_entry_type_code       => 'E'
         , p_switch_side_flag           => 'Y'
         , p_merge_duplicate_code       => 'N'
         );
   --
   l_acc_rev_natural_side_code := 'D';  -- 4262811
   -- 
   --
   -- set accounting line type info
   --
   xla_ae_lines_pkg.SetAcctLineType
      (p_component_type             => l_component_type
      ,p_event_type_code            => l_event_type_code
      ,p_line_definition_owner_code => l_line_definition_owner_code
      ,p_line_definition_code       => l_line_definition_code
      ,p_accounting_line_code       => l_component_code
      ,p_accounting_line_type_code  => l_component_type_code
      ,p_accounting_line_appl_id    => l_component_appl_id
      ,p_amb_context_code           => l_amb_context_code
      ,p_entity_code                => l_entity_code
      ,p_event_class_code           => l_event_class_code);
   --
   -- set accounting class
   --
   xla_ae_lines_pkg.SetAcctClass(
           p_accounting_class_code  => 'AP_PREPAY_APPL_BURDEN'
         , p_ae_header_id           => l_ae_header_id
         );

   --
   -- set rounding class
   --
   XLA_AE_LINES_PKG.g_rec_lines.array_rounding_class(XLA_AE_LINES_PKG.g_LineNumber) :=
                      'AP_PREPAY_APPL_BURDEN';

   --
   xla_ae_lines_pkg.g_rec_lines.array_calculate_acctd_flag(xla_ae_lines_pkg.g_LineNumber) := p_calculate_acctd_flag;
   xla_ae_lines_pkg.g_rec_lines.array_calculate_g_l_flag(xla_ae_lines_pkg.g_LineNumber) := p_calculate_g_l_flag;
   --
   -- bulk performance
   --
   XLA_AE_LINES_PKG.g_rec_lines.array_balance_type_code(XLA_AE_LINES_PKG.g_LineNumber) := l_balance_type_code;

   XLA_AE_LINES_PKG.g_rec_lines.array_ledger_id(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id;

   -- 4955764
   XLA_AE_LINES_PKG.g_rec_lines.array_gl_date(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_HEADER_PKG.g_rec_header_new.array_gl_date(g_array_event(p_event_id).array_value_num('header_index'));

   -- 4458381 Public Sector Enh
   
   --
   -- set accounting attributes for the line type
   --
   l_entered_amt_idx := 27;
   l_accted_amt_idx  := 29;
   l_bflow_applied_to_amt_idx  := NULL;  -- 5132302
   l_rec_acct_attrs.array_acct_attr_code(1) := 'ACCOUNTING_REVERSAL_OPTION';
   l_rec_acct_attrs.array_char_value(1)  := p_source_85;
   l_rec_acct_attrs.array_acct_attr_code(2) := 'ALLOC_TO_APPLICATION_ID';
   l_rec_acct_attrs.array_num_value(2)  := p_source_86;
   l_rec_acct_attrs.array_acct_attr_code(3) := 'ALLOC_TO_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(3)  := p_source_87;
   l_rec_acct_attrs.array_acct_attr_code(4) := 'ALLOC_TO_ENTITY_CODE';
   l_rec_acct_attrs.array_char_value(4)  := p_source_88;
   l_rec_acct_attrs.array_acct_attr_code(5) := 'ALLOC_TO_FIRST_DIST_ID';
   l_rec_acct_attrs.array_num_value(5)  :=  to_char(p_source_89);
   l_rec_acct_attrs.array_acct_attr_code(6) := 'ALLOC_TO_FIRST_SYS_TRAN_ID';
   l_rec_acct_attrs.array_num_value(6)  :=  to_char(p_source_90);
   l_rec_acct_attrs.array_acct_attr_code(7) := 'APPLIED_TO_APPLICATION_ID';
   l_rec_acct_attrs.array_num_value(7)  := p_source_91;
   l_rec_acct_attrs.array_acct_attr_code(8) := 'APPLIED_TO_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(8)  := p_source_92;
   l_rec_acct_attrs.array_acct_attr_code(9) := 'APPLIED_TO_ENTITY_CODE';
   l_rec_acct_attrs.array_char_value(9)  := p_source_93;
   l_rec_acct_attrs.array_acct_attr_code(10) := 'APPLIED_TO_FIRST_DIST_ID';
   l_rec_acct_attrs.array_num_value(10)  :=  to_char(p_source_94);
   l_rec_acct_attrs.array_acct_attr_code(11) := 'APPLIED_TO_FIRST_SYS_TRAN_ID';
   l_rec_acct_attrs.array_num_value(11)  :=  to_char(p_source_95);
   l_rec_acct_attrs.array_acct_attr_code(12) := 'APPLIED_TO_SECOND_DIST_ID';
   l_rec_acct_attrs.array_char_value(12)  := p_source_104;
   l_rec_acct_attrs.array_acct_attr_code(13) := 'DISTRIBUTION_IDENTIFIER_1';
   l_rec_acct_attrs.array_num_value(13)  :=  to_char(p_source_30);
   l_rec_acct_attrs.array_acct_attr_code(14) := 'DISTRIBUTION_IDENTIFIER_2';
   l_rec_acct_attrs.array_char_value(14)  := p_source_96;
   l_rec_acct_attrs.array_acct_attr_code(15) := 'DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(15)  := p_source_21;
   l_rec_acct_attrs.array_acct_attr_code(16) := 'ENC_UPG_CR_ACCT_CLASS';
   l_rec_acct_attrs.array_char_value(16)  := p_source_97;
   l_rec_acct_attrs.array_acct_attr_code(17) := 'ENC_UPG_CR_CCID';
   l_rec_acct_attrs.array_num_value(17)  := p_source_98;
   l_rec_acct_attrs.array_acct_attr_code(18) := 'ENC_UPG_CR_ENTERED_AMT';
   l_rec_acct_attrs.array_num_value(18)  := p_source_57;
   l_rec_acct_attrs.array_acct_attr_code(19) := 'ENC_UPG_CR_ENTERED_CURR';
   l_rec_acct_attrs.array_char_value(19)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(20) := 'ENC_UPG_CR_LEDGER_AMT';
   l_rec_acct_attrs.array_num_value(20)  := p_source_99;
   l_rec_acct_attrs.array_acct_attr_code(21) := 'ENC_UPG_DR_ACCT_CLASS';
   l_rec_acct_attrs.array_char_value(21)  := p_source_100;
   l_rec_acct_attrs.array_acct_attr_code(22) := 'ENC_UPG_DR_CCID';
   l_rec_acct_attrs.array_num_value(22)  := p_source_101;
   l_rec_acct_attrs.array_acct_attr_code(23) := 'ENC_UPG_DR_ENTERED_AMT';
   l_rec_acct_attrs.array_num_value(23)  := p_source_57;
   l_rec_acct_attrs.array_acct_attr_code(24) := 'ENC_UPG_DR_ENTERED_CURR';
   l_rec_acct_attrs.array_char_value(24)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(25) := 'ENC_UPG_DR_LEDGER_AMT';
   l_rec_acct_attrs.array_num_value(25)  := p_source_99;
   l_rec_acct_attrs.array_acct_attr_code(26) := 'ENC_UPG_OPTION';
   l_rec_acct_attrs.array_char_value(26)  := p_source_102;
   l_rec_acct_attrs.array_acct_attr_code(27) := 'ENTERED_CURRENCY_AMOUNT';
   l_rec_acct_attrs.array_num_value(27)  := p_source_57;
   l_rec_acct_attrs.array_acct_attr_code(28) := 'ENTERED_CURRENCY_CODE';
   l_rec_acct_attrs.array_char_value(28)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(29) := 'LEDGER_AMOUNT';
   l_rec_acct_attrs.array_num_value(29)  := p_source_99;
   l_rec_acct_attrs.array_acct_attr_code(30) := 'REVERSED_DISTRIBUTION_ID1';
   l_rec_acct_attrs.array_num_value(30)  :=  to_char(p_source_103);
   l_rec_acct_attrs.array_acct_attr_code(31) := 'REVERSED_DISTRIBUTION_ID2';
   l_rec_acct_attrs.array_char_value(31)  := p_source_104;
   l_rec_acct_attrs.array_acct_attr_code(32) := 'REVERSED_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(32)  := p_source_105;
   l_rec_acct_attrs.array_acct_attr_code(33) := 'UPG_CR_ENC_TYPE_ID';
   l_rec_acct_attrs.array_num_value(33)  := p_source_106;
   l_rec_acct_attrs.array_acct_attr_code(34) := 'UPG_DR_ENC_TYPE_ID';
   l_rec_acct_attrs.array_num_value(34)  := p_source_107;

   XLA_AE_LINES_PKG.SetLineAcctAttrs(l_rec_acct_attrs);
   p_gain_or_loss_ref  := XLA_AE_LINES_PKG.g_rec_lines.array_gain_or_loss_ref(XLA_AE_LINES_PKG.g_LineNumber);

   ---------------------------------------------------------------------------------------------------------------
   -- 4336173 -- assign Business Flow Class (replace code in xla_ae_lines_pkg.Business_Flow_Validation)
   ---------------------------------------------------------------------------------------------------------------
   XLA_AE_LINES_PKG.g_rec_lines.array_business_class_code(XLA_AE_LINES_PKG.g_LineNumber) := l_bflow_class_code;

   l_actual_upg_option  := XLA_AE_LINES_PKG.g_rec_lines.array_actual_upg_option(XLA_AE_LINES_PKG.g_LineNumber);
   l_enc_upg_option     := XLA_AE_LINES_PKG.g_rec_lines.array_enc_upg_option(XLA_AE_LINES_PKG.g_LineNumber);

   IF xla_accounting_cache_pkg.GetValueChar
         (p_source_code         => 'LEDGER_CATEGORY_CODE'
         ,p_target_ledger_id    => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id) IN ('PRIMARY','ALC')
   AND l_bflow_method_code = 'PRIOR_ENTRY'
--   AND (l_actual_upg_option = 'Y' OR l_enc_upg_option = 'Y') Bug 4922099
   AND ( (NVL(l_actual_upg_option, 'N') IN ('Y', 'O')) OR
         (NVL(l_enc_upg_option, 'N') IN ('Y', 'O'))
       )
   THEN
         xla_ae_lines_pkg.BflowUpgEntry
           (p_business_method_code    => l_bflow_method_code
           ,p_business_class_code     => l_bflow_class_code
           ,p_balance_type            => l_balance_type_code);
   ELSE
      NULL;
XLA_AE_LINES_PKG.business_flow_validation(
                                p_business_method_code     => l_bflow_method_code
                               ,p_business_class_code      => l_bflow_class_code
                               ,p_inherit_description_flag => l_inherit_desc_flag);
   END IF;

   --
   -- call analytical criteria
   --
   -- Inherited Analytical Criteria for business flow method of Prior Entry.
   --
   -- call description
   --
   
xla_ae_lines_pkg.SetLineDescription(
   p_ae_header_id => l_ae_header_id
  ,p_description  => Description_3 (
     p_application_id         => p_application_id
   , p_ae_header_id           => l_ae_header_id 
, p_source_2 => p_source_2
, p_source_3 => p_source_3
, p_source_4 => p_source_4
, p_source_5 => p_source_5
   )
);


   --
   -- call ADRs
   -- Bug 4922099
   --
   IF ( (l_bflow_method_code <> 'PRIOR_ENTRY') OR
        (NVL(l_actual_upg_option, 'N') = 'O') OR
        (NVL(l_enc_upg_option, 'N') = 'O')
      )
   THEN
   NULL;
   --
   --
   
   --
   --
   END IF;
   --
   -- Bug 4922099
   IF ( ( (NVL(l_actual_upg_option, 'N') = 'O') OR
          (NVL(l_enc_upg_option, 'N') = 'O')
        ) AND
        (l_bflow_method_code = 'PRIOR_ENTRY')
      )
   THEN
      IF
      --
      1 = 1
      --
      THEN
      xla_accounting_err_pkg.build_message
                                    (p_appli_s_name            => 'XLA'
                                    ,p_msg_name                => 'XLA_UPG_OVERRIDE_ADR_UNDEFINED'
                                    ,p_token_1                 => 'LINE_NUMBER'
                                    ,p_value_1                 => XLA_AE_LINES_PKG.g_LineNumber
                                    ,p_token_2                 => 'LINE_TYPE_NAME'
                                    ,p_value_2                 => XLA_AE_SOURCES_PKG.GetComponentName (
                                                                             l_component_type
                                                                            ,l_component_code
                                                                            ,l_component_type_code
                                                                            ,l_component_appl_id
                                                                            ,l_amb_context_code
                                                                            ,l_entity_code
                                                                            ,l_event_class_code
                                                                           )
                                    ,p_token_3                 => 'OWNER'
                                    ,p_value_3                 => xla_lookups_pkg.get_meaning(
                                                                          p_lookup_type     => 'XLA_OWNER_TYPE'
                                                                          ,p_lookup_code    => l_component_type_code
                                                                         )
                                    ,p_token_4                 => 'PRODUCT_NAME'
                                    ,p_value_4                 => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.application_name
                                    ,p_entity_id               => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.entity_id
                                    ,p_event_id                => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.event_id
                                    ,p_ledger_id               => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id
                                    ,p_ae_header_id            =>  NULL
                                       );

        IF (C_LEVEL_ERROR>= g_log_level) THEN
                 trace
                      (p_msg      => 'ERROR: XLA_UPG_OVERRIDE_ADR_UNDEFINED'
                      ,p_level    => C_LEVEL_ERROR
                      ,p_module   => l_log_module);
        END IF;
      END IF;
   END IF;
   --
   --
   ------------------------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- NOTE: XLA_AE_LINES_PKG.ValidateCurrentLine should NOT be generated if business flow method is
   -- Prior Entry.  Currently, the following code is always generated.
   ------------------------------------------------------------------------------------------------
   -- No ValidateCurrentLine for business flow method of Prior Entry

   ------------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- Populated credit and debit amounts -- Need to generate this within IF <condition>
   ------------------------------------------------------------------------------------
   XLA_AE_LINES_PKG.SetDebitCreditAmounts;

   ----------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- Update journal entry status -- Need to generate this within IF <condition>
   ----------------------------------------------------------------------------------
   XLA_AE_JOURNAL_ENTRY_PKG.UpdateJournalEntryStatus
         (p_hdr_idx => g_array_event(p_event_id).array_value_num('header_index')
         ,p_balance_type_code => l_balance_type_code
         );

   -------------------------------------------------------------------------------------------
   -- 4262811 - Generate the Accrual Reversal lines
   -------------------------------------------------------------------------------------------
   BEGIN
      l_acc_rev_flag := XLA_AE_HEADER_PKG.g_rec_header_new.array_accrual_reversal_flag
                              (g_array_event(p_event_id).array_value_num('header_index'));
      IF l_acc_rev_flag IS NULL THEN
         l_acc_rev_flag := 'N';
      END IF;
   EXCEPTION
      WHEN OTHERS THEN
         l_acc_rev_flag := 'N';
   END;
   --
   IF (l_acc_rev_flag = 'Y') THEN

       -- 4645092  ------------------------------------------------------------------------------
       -- To allow MPA report to determine if it should generate report process
       XLA_ACCOUNTING_PKG.g_mpa_accrual_exists := 'Y';
       ------------------------------------------------------------------------------------------

       l_accrual_line_num := XLA_AE_LINES_PKG.g_LineNumber;
       XLA_AE_LINES_PKG.CopyLineInfo(l_accrual_line_num);
   -- added call to set_ccid to execute mapping  for secondary accrual reversal entries bug 7444204
   -- call ADRs
   -- Bug 4922099
   --
   IF ( (l_bflow_method_code <> 'PRIOR_ENTRY') OR
        (NVL(l_actual_upg_option, 'N') = 'O') OR
        (NVL(l_enc_upg_option, 'N') = 'O')
      )
   THEN
   NULL;
   --
   --
   
   --
   --
   END IF;

       --
       -- Update the line information that should be overwritten
       --
       XLA_AE_LINES_PKG.set_ae_header_id(p_ae_header_id => p_event_id ,
                                         p_header_num   => 1);
       XLA_AE_LINES_PKG.g_rec_lines.array_header_num(XLA_AE_LINES_PKG.g_LineNumber)  :=1;

       XLA_AE_LINES_PKG.g_rec_lines.array_business_class_code(XLA_AE_LINES_PKG.g_LineNumber) := NULL; -- 4669271

       IF l_bflow_method_code <> 'NONE' THEN  -- 4655713b
          XLA_AE_LINES_PKG.g_rec_lines.array_reversal_code(XLA_AE_LINES_PKG.g_LineNumber) := CONCAT('MPA_',l_bflow_method_code);
       END IF;

      --
      -- Depending on the Reversal Method setup, do a switch side or changes sign for the amounts
      --
      IF (XLA_AE_JOURNAL_ENTRY_PKG.g_cache_ledgers_info.ledger_reversal_option = 'SIDE') THEN
          XLA_AE_LINES_PKG.g_rec_lines.array_natural_side_code(XLA_AE_LINES_PKG.g_LineNumber) :=  l_acc_rev_natural_side_code;
      ELSE
          ---------------------------------------------------------------------------------------------------
          -- 4262811a Switch Sign
          ---------------------------------------------------------------------------------------------------
          XLA_AE_LINES_PKG.g_rec_lines.array_switch_side_flag(XLA_AE_LINES_PKG.g_LineNumber) := 'N';  -- 5052518
          XLA_AE_LINES_PKG.g_rec_lines.array_ledger_amount(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_ledger_amount(XLA_AE_LINES_PKG.g_LineNumber) * -1;
          XLA_AE_LINES_PKG.g_rec_lines.array_entered_amount(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_entered_amount(XLA_AE_LINES_PKG.g_LineNumber) * -1;
          -- 5132302
          XLA_AE_LINES_PKG.g_rec_lines.array_bflow_applied_to_amt(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_bflow_applied_to_amt(XLA_AE_LINES_PKG.g_LineNumber) * -1;

      END IF;

      -- 4955764
      XLA_AE_LINES_PKG.g_rec_lines.array_gl_date(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_HEADER_PKG.g_rec_header_new.array_gl_date(g_array_event(p_event_id).array_value_num('acc_rev_header_index'));


      XLA_AE_LINES_PKG.ValidateCurrentLine;
      XLA_AE_LINES_PKG.SetDebitCreditAmounts;

      XLA_AE_JOURNAL_ENTRY_PKG.UpdateJournalEntryStatus
               (p_hdr_idx           => g_array_event(p_event_id).array_value_num('acc_rev_header_index')
               ,p_balance_type_code => l_balance_type_code);

   END IF;

   -----------------------------------------------------------------------------------------
   -- 4262811 Multiperiod Accounting
   -----------------------------------------------------------------------------------------
     -- No MPA option is assigned.


END IF;
END IF;
--

--
IF (C_LEVEL_PROCEDURE >= g_log_level) THEN
   trace
      (p_msg      => 'END of AcctLineType_88'
      ,p_level    => C_LEVEL_PROCEDURE
      ,p_module   => l_log_module);
END IF;
--
EXCEPTION
  WHEN xla_exceptions_pkg.application_exception THEN
      RAISE;
  WHEN OTHERS THEN
       xla_exceptions_pkg.raise_message
           (p_location => 'XLA_00200_AAD_S_000010_BC_PKG.AcctLineType_88');
END AcctLineType_88;
--

---------------------------------------
--
-- PRIVATE FUNCTION
--         AcctLineType_89
--
---------------------------------------
PROCEDURE AcctLineType_89 (
  p_application_id        IN NUMBER
 ,p_event_id              IN NUMBER
 ,p_calculate_acctd_flag  IN VARCHAR2
 ,p_calculate_g_l_flag    IN VARCHAR2
 ,p_actual_flag           IN OUT VARCHAR2
 ,p_balance_type_code     OUT VARCHAR2
 ,p_gain_or_loss_ref      OUT VARCHAR2
 
--Document Distribution Type
 , p_source_2            IN VARCHAR2
--Project Name
 , p_source_3            IN VARCHAR2
--Task Number
 , p_source_4            IN VARCHAR2
--Expenditure Organization
 , p_source_5            IN NUMBER
--Invoice Distribution Account
 , p_source_11            IN NUMBER
--Budget Account
 , p_source_14            IN NUMBER
--Distribution Link Type
 , p_source_21            IN VARCHAR2
--Invoice Distribution Identifier
 , p_source_30            IN NUMBER
--Invoice Currency Code
 , p_source_33            IN VARCHAR2
--Invoice Distribution Amount
 , p_source_57            IN NUMBER
--Document Type
 , p_source_83            IN VARCHAR2
--Burden Amount Display Method
 , p_source_84            IN VARCHAR2
--Accounting reversal indicator for project invoice burden
 , p_source_85            IN VARCHAR2
--Allocated to Application Identifier
 , p_source_86            IN NUMBER
--Allocated to Distribution Type
 , p_source_87            IN VARCHAR2
--Allocated to Entity Code
 , p_source_88            IN VARCHAR2
--Allocated to First Distribution Identifier
 , p_source_89            IN NUMBER
--Allocated to First System Transaction Identifier
 , p_source_90            IN NUMBER
--Invoice Burden Applied to Application Identifier
 , p_source_91            IN NUMBER
--Invoice Burden Applied to Distribution Type
 , p_source_92            IN VARCHAR2
--Invoice Burden Applied to Entity Code
 , p_source_93            IN VARCHAR2
--Invoice Burden Applied to First Distribution Identifier
 , p_source_94            IN NUMBER
--Invoice Burden Applied to System Transaction Identifier
 , p_source_95            IN NUMBER
--Invoice Distribution Expenditure Type
 , p_source_96            IN VARCHAR2
--Encumbrance Upgrade Credit Accounting Class
 , p_source_97            IN VARCHAR2
--Encumbrance Upgrade Credit Account
 , p_source_98            IN NUMBER
--Invoice Distribution Ledger Amount Before Rounding
 , p_source_99            IN NUMBER
--Encumbrance Upgrade Debit Accounting Class
 , p_source_100            IN VARCHAR2
--Encumbrance Upgrade Debit Account
 , p_source_101            IN NUMBER
--Use Encumbrances Upgrade Attributes Flag
 , p_source_102            IN VARCHAR2
--Accounting reversal first distribution identifier for project invoice burden
 , p_source_103            IN NUMBER
--Invoice Burden Applied to Second Distribution Identifier
 , p_source_104            IN VARCHAR2
--Accounting reversal distribution type for project invoice burden
 , p_source_105            IN VARCHAR2
--Encumbrance Upgrade Credit Encumbrance Type
 , p_source_106            IN NUMBER
--Encumbrance Upgrade Debit Encumbrance Type
 , p_source_107            IN NUMBER
--Burden Record Identifier
 , p_source_108            IN VARCHAR2
 , p_source_108_meaning    IN VARCHAR2
)
IS

l_component_type              VARCHAR2(80);
l_component_code              VARCHAR2(30);
l_component_type_code         VARCHAR2(1);
l_component_appl_id           INTEGER;
l_amb_context_code            VARCHAR2(30);
l_entity_code                 VARCHAR2(30);
l_event_class_code            VARCHAR2(30);
l_ae_header_id                NUMBER;
l_event_type_code             VARCHAR2(30);
l_line_definition_code        VARCHAR2(30);
l_line_definition_owner_code  VARCHAR2(1);
--
-- adr variables
l_segment                     VARCHAR2(30);
l_ccid                        NUMBER;
l_adr_transaction_coa_id      NUMBER;
l_adr_accounting_coa_id       NUMBER;
l_adr_flexfield_segment_code  VARCHAR2(30);
l_adr_flex_value_set_id       NUMBER;
l_adr_value_type_code         VARCHAR2(30);
l_adr_value_combination_id    NUMBER;
l_adr_value_segment_code      VARCHAR2(30);

l_bflow_method_code           VARCHAR2(30);  -- 4219869 Business Flow
l_bflow_class_code            VARCHAR2(30);  -- 4219869 Business Flow
l_inherit_desc_flag           VARCHAR2(1);   -- 4219869 Business Flow
l_budgetary_control_flag      VARCHAR2(1);   -- 4458381 Public Sector Enh

-- 4262811 Variables ------------------------------------------------------------------------------------------
l_entered_amt_idx             NUMBER;
l_accted_amt_idx              NUMBER;
l_acc_rev_flag                VARCHAR2(1);
l_accrual_line_num            NUMBER;
l_tmp_amt                     NUMBER;
l_acc_rev_natural_side_code   VARCHAR2(1);

l_num_entries                 NUMBER;
l_gl_dates                    xla_ae_journal_entry_pkg.t_array_date;
l_accted_amts                 xla_ae_journal_entry_pkg.t_array_num;
l_entered_amts                xla_ae_journal_entry_pkg.t_array_num;
l_period_names                xla_ae_journal_entry_pkg.t_array_V15L;
l_recog_line_1                NUMBER;
l_recog_line_2                NUMBER;

l_bflow_applied_to_amt_idx    NUMBER;                                -- 5132302
l_bflow_applied_to_amt        NUMBER;                                -- 5132302
l_bflow_applied_to_amts       xla_ae_journal_entry_pkg.t_array_num;  -- 5132302

l_event_id                    NUMBER;  -- To handle MPA header Description: xla_ae_header_pkg.SetHdrDescription

--l_rounding_ccy                VARCHAR2(15); -- To handle MPA rounding  4262811b
l_same_currency               BOOLEAN;        -- To handle MPA rounding  4262811b

---------------------------------------------------------------------------------------------------------------


--
-- bulk performance
--
l_balance_type_code           VARCHAR2(1);
l_rec_acct_attrs              XLA_AE_LINES_PKG.t_rec_acct_attrs;
l_log_module                  VARCHAR2(240);

--
-- Upgrade strategy
--
l_actual_upg_option           VARCHAR2(1);
l_enc_upg_option           VARCHAR2(1);

--
BEGIN
--
IF g_log_enabled THEN
      l_log_module := C_DEFAULT_MODULE||'.AcctLineType_89';
END IF;
--
IF (C_LEVEL_PROCEDURE >= g_log_level) THEN

      trace
         (p_msg      => 'BEGIN of AcctLineType_89'
         ,p_level    => C_LEVEL_PROCEDURE
         ,p_module   => l_log_module);

END IF;
--
l_component_type             := 'AMB_JLT';
l_component_code             := 'PREPAY_APPL_ENCUMBRANCE';
l_component_type_code        := 'S';
l_component_appl_id          :=  200;
l_amb_context_code           := 'DEFAULT';
l_entity_code                := 'AP_INVOICES';
l_event_class_code           := 'PREPAY_APPLICATION_BURDEN';
l_event_type_code            := 'PREPAY_APPLICATION_BURDEN_ALL';
l_line_definition_owner_code := 'S';
l_line_definition_code       := 'AP_PREPAY_APPLY_BURDEN_ENC_ALL';
--
l_balance_type_code          := 'E';
l_segment                     := NULL;
l_ccid                        := NULL;
l_adr_transaction_coa_id      := NULL;
l_adr_accounting_coa_id       := NULL;
l_adr_flexfield_segment_code  := NULL;
l_adr_flex_value_set_id       := NULL;
l_adr_value_type_code         := NULL;
l_adr_value_combination_id    := NULL;
l_adr_value_segment_code      := NULL;

l_bflow_method_code          := 'PRIOR_ENTRY';   -- 4219869 Business Flow
l_bflow_class_code           := 'AP_PREPAY_PA_ENC';    -- 4219869 Business Flow
l_inherit_desc_flag          := 'N';   -- 4219869 Business Flow
l_budgetary_control_flag     := 'Y';

l_bflow_applied_to_amt_idx   := NULL; -- 5132302
l_bflow_applied_to_amt       := NULL; -- 5132302
l_entered_amt_idx            := NULL;          -- 4262811
l_accted_amt_idx             := NULL;          -- 4262811
l_acc_rev_flag               := NULL;          -- 4262811
l_accrual_line_num           := NULL;          -- 4262811
l_tmp_amt                    := NULL;          -- 4262811
--
 
IF XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id = XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.ledger_id OR
    l_balance_type_code <> 'B' THEN
IF NVL(p_source_83,'
') =  'AP' AND 
(NVL(p_source_2,'
') =  'PREPAY APPL' OR 
NVL(p_source_2,'
') =  'TAX DIFF' OR 
NVL(p_source_2,'
') =  'FINAL APPLICATION ROUNDING' OR 
NVL(p_source_2,'
') =  'PREPAY APPL NONREC TAX') AND 
(NVL(p_source_84,'
') =  'N' OR 
(NVL(p_source_84,'
') =  'D' AND 
NVL(p_source_108,'
') =  'N')
) AND NVL(TO_NUMBER(p_source_14),9E125) <> NVL(TO_NUMBER(p_source_11),9E125) 
 THEN 

   --
   XLA_AE_LINES_PKG.SetNewLine;

   p_balance_type_code          := l_balance_type_code;
   -- set the flag so later we will know whether the gain loss line needs to be created
   
   IF(l_balance_type_code = 'A' and p_actual_flag is null) THEN
     p_actual_flag :='A';
   END IF;

   --
   -- bulk performance
   --
   XLA_AE_LINES_PKG.set_ae_header_id (p_ae_header_id => p_event_id ,
                                      p_header_num   => 0); -- 4262811
   --
   -- set accounting line options
   --
   l_ae_header_id:= xla_ae_lines_pkg.SetAcctLineOption(
           p_natural_side_code          => 'C'
         , p_gain_or_loss_flag          => 'N'
         , p_gl_transfer_mode_code      => 'S'
         , p_acct_entry_type_code       => 'E'
         , p_switch_side_flag           => 'Y'
         , p_merge_duplicate_code       => 'N'
         );
   --
   l_acc_rev_natural_side_code := 'D';  -- 4262811
   -- 
   --
   -- set accounting line type info
   --
   xla_ae_lines_pkg.SetAcctLineType
      (p_component_type             => l_component_type
      ,p_event_type_code            => l_event_type_code
      ,p_line_definition_owner_code => l_line_definition_owner_code
      ,p_line_definition_code       => l_line_definition_code
      ,p_accounting_line_code       => l_component_code
      ,p_accounting_line_type_code  => l_component_type_code
      ,p_accounting_line_appl_id    => l_component_appl_id
      ,p_amb_context_code           => l_amb_context_code
      ,p_entity_code                => l_entity_code
      ,p_event_class_code           => l_event_class_code);
   --
   -- set accounting class
   --
   xla_ae_lines_pkg.SetAcctClass(
           p_accounting_class_code  => 'AP_PREPAY_APPL_BURDEN'
         , p_ae_header_id           => l_ae_header_id
         );

   --
   -- set rounding class
   --
   XLA_AE_LINES_PKG.g_rec_lines.array_rounding_class(XLA_AE_LINES_PKG.g_LineNumber) :=
                      'AP_PREPAY_APPL_BURDEN';

   --
   xla_ae_lines_pkg.g_rec_lines.array_calculate_acctd_flag(xla_ae_lines_pkg.g_LineNumber) := p_calculate_acctd_flag;
   xla_ae_lines_pkg.g_rec_lines.array_calculate_g_l_flag(xla_ae_lines_pkg.g_LineNumber) := p_calculate_g_l_flag;
   --
   -- bulk performance
   --
   XLA_AE_LINES_PKG.g_rec_lines.array_balance_type_code(XLA_AE_LINES_PKG.g_LineNumber) := l_balance_type_code;

   XLA_AE_LINES_PKG.g_rec_lines.array_ledger_id(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id;

   -- 4955764
   XLA_AE_LINES_PKG.g_rec_lines.array_gl_date(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_HEADER_PKG.g_rec_header_new.array_gl_date(g_array_event(p_event_id).array_value_num('header_index'));

   -- 4458381 Public Sector Enh
   
   --
   -- set accounting attributes for the line type
   --
   l_entered_amt_idx := 27;
   l_accted_amt_idx  := 29;
   l_bflow_applied_to_amt_idx  := NULL;  -- 5132302
   l_rec_acct_attrs.array_acct_attr_code(1) := 'ACCOUNTING_REVERSAL_OPTION';
   l_rec_acct_attrs.array_char_value(1)  := p_source_85;
   l_rec_acct_attrs.array_acct_attr_code(2) := 'ALLOC_TO_APPLICATION_ID';
   l_rec_acct_attrs.array_num_value(2)  := p_source_86;
   l_rec_acct_attrs.array_acct_attr_code(3) := 'ALLOC_TO_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(3)  := p_source_87;
   l_rec_acct_attrs.array_acct_attr_code(4) := 'ALLOC_TO_ENTITY_CODE';
   l_rec_acct_attrs.array_char_value(4)  := p_source_88;
   l_rec_acct_attrs.array_acct_attr_code(5) := 'ALLOC_TO_FIRST_DIST_ID';
   l_rec_acct_attrs.array_num_value(5)  :=  to_char(p_source_89);
   l_rec_acct_attrs.array_acct_attr_code(6) := 'ALLOC_TO_FIRST_SYS_TRAN_ID';
   l_rec_acct_attrs.array_num_value(6)  :=  to_char(p_source_90);
   l_rec_acct_attrs.array_acct_attr_code(7) := 'APPLIED_TO_APPLICATION_ID';
   l_rec_acct_attrs.array_num_value(7)  := p_source_91;
   l_rec_acct_attrs.array_acct_attr_code(8) := 'APPLIED_TO_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(8)  := p_source_92;
   l_rec_acct_attrs.array_acct_attr_code(9) := 'APPLIED_TO_ENTITY_CODE';
   l_rec_acct_attrs.array_char_value(9)  := p_source_93;
   l_rec_acct_attrs.array_acct_attr_code(10) := 'APPLIED_TO_FIRST_DIST_ID';
   l_rec_acct_attrs.array_num_value(10)  :=  to_char(p_source_94);
   l_rec_acct_attrs.array_acct_attr_code(11) := 'APPLIED_TO_FIRST_SYS_TRAN_ID';
   l_rec_acct_attrs.array_num_value(11)  :=  to_char(p_source_95);
   l_rec_acct_attrs.array_acct_attr_code(12) := 'APPLIED_TO_SECOND_DIST_ID';
   l_rec_acct_attrs.array_char_value(12)  := p_source_104;
   l_rec_acct_attrs.array_acct_attr_code(13) := 'DISTRIBUTION_IDENTIFIER_1';
   l_rec_acct_attrs.array_num_value(13)  :=  to_char(p_source_30);
   l_rec_acct_attrs.array_acct_attr_code(14) := 'DISTRIBUTION_IDENTIFIER_2';
   l_rec_acct_attrs.array_char_value(14)  := p_source_96;
   l_rec_acct_attrs.array_acct_attr_code(15) := 'DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(15)  := p_source_21;
   l_rec_acct_attrs.array_acct_attr_code(16) := 'ENC_UPG_CR_ACCT_CLASS';
   l_rec_acct_attrs.array_char_value(16)  := p_source_97;
   l_rec_acct_attrs.array_acct_attr_code(17) := 'ENC_UPG_CR_CCID';
   l_rec_acct_attrs.array_num_value(17)  := p_source_98;
   l_rec_acct_attrs.array_acct_attr_code(18) := 'ENC_UPG_CR_ENTERED_AMT';
   l_rec_acct_attrs.array_num_value(18)  := p_source_57;
   l_rec_acct_attrs.array_acct_attr_code(19) := 'ENC_UPG_CR_ENTERED_CURR';
   l_rec_acct_attrs.array_char_value(19)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(20) := 'ENC_UPG_CR_LEDGER_AMT';
   l_rec_acct_attrs.array_num_value(20)  := p_source_99;
   l_rec_acct_attrs.array_acct_attr_code(21) := 'ENC_UPG_DR_ACCT_CLASS';
   l_rec_acct_attrs.array_char_value(21)  := p_source_100;
   l_rec_acct_attrs.array_acct_attr_code(22) := 'ENC_UPG_DR_CCID';
   l_rec_acct_attrs.array_num_value(22)  := p_source_101;
   l_rec_acct_attrs.array_acct_attr_code(23) := 'ENC_UPG_DR_ENTERED_AMT';
   l_rec_acct_attrs.array_num_value(23)  := p_source_57;
   l_rec_acct_attrs.array_acct_attr_code(24) := 'ENC_UPG_DR_ENTERED_CURR';
   l_rec_acct_attrs.array_char_value(24)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(25) := 'ENC_UPG_DR_LEDGER_AMT';
   l_rec_acct_attrs.array_num_value(25)  := p_source_99;
   l_rec_acct_attrs.array_acct_attr_code(26) := 'ENC_UPG_OPTION';
   l_rec_acct_attrs.array_char_value(26)  := p_source_102;
   l_rec_acct_attrs.array_acct_attr_code(27) := 'ENTERED_CURRENCY_AMOUNT';
   l_rec_acct_attrs.array_num_value(27)  := p_source_57;
   l_rec_acct_attrs.array_acct_attr_code(28) := 'ENTERED_CURRENCY_CODE';
   l_rec_acct_attrs.array_char_value(28)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(29) := 'LEDGER_AMOUNT';
   l_rec_acct_attrs.array_num_value(29)  := p_source_99;
   l_rec_acct_attrs.array_acct_attr_code(30) := 'REVERSED_DISTRIBUTION_ID1';
   l_rec_acct_attrs.array_num_value(30)  :=  to_char(p_source_103);
   l_rec_acct_attrs.array_acct_attr_code(31) := 'REVERSED_DISTRIBUTION_ID2';
   l_rec_acct_attrs.array_char_value(31)  := p_source_104;
   l_rec_acct_attrs.array_acct_attr_code(32) := 'REVERSED_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(32)  := p_source_105;
   l_rec_acct_attrs.array_acct_attr_code(33) := 'UPG_CR_ENC_TYPE_ID';
   l_rec_acct_attrs.array_num_value(33)  := p_source_106;
   l_rec_acct_attrs.array_acct_attr_code(34) := 'UPG_DR_ENC_TYPE_ID';
   l_rec_acct_attrs.array_num_value(34)  := p_source_107;

   XLA_AE_LINES_PKG.SetLineAcctAttrs(l_rec_acct_attrs);
   p_gain_or_loss_ref  := XLA_AE_LINES_PKG.g_rec_lines.array_gain_or_loss_ref(XLA_AE_LINES_PKG.g_LineNumber);

   ---------------------------------------------------------------------------------------------------------------
   -- 4336173 -- assign Business Flow Class (replace code in xla_ae_lines_pkg.Business_Flow_Validation)
   ---------------------------------------------------------------------------------------------------------------
   XLA_AE_LINES_PKG.g_rec_lines.array_business_class_code(XLA_AE_LINES_PKG.g_LineNumber) := l_bflow_class_code;

   l_actual_upg_option  := XLA_AE_LINES_PKG.g_rec_lines.array_actual_upg_option(XLA_AE_LINES_PKG.g_LineNumber);
   l_enc_upg_option     := XLA_AE_LINES_PKG.g_rec_lines.array_enc_upg_option(XLA_AE_LINES_PKG.g_LineNumber);

   IF xla_accounting_cache_pkg.GetValueChar
         (p_source_code         => 'LEDGER_CATEGORY_CODE'
         ,p_target_ledger_id    => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id) IN ('PRIMARY','ALC')
   AND l_bflow_method_code = 'PRIOR_ENTRY'
--   AND (l_actual_upg_option = 'Y' OR l_enc_upg_option = 'Y') Bug 4922099
   AND ( (NVL(l_actual_upg_option, 'N') IN ('Y', 'O')) OR
         (NVL(l_enc_upg_option, 'N') IN ('Y', 'O'))
       )
   THEN
         xla_ae_lines_pkg.BflowUpgEntry
           (p_business_method_code    => l_bflow_method_code
           ,p_business_class_code     => l_bflow_class_code
           ,p_balance_type            => l_balance_type_code);
   ELSE
      NULL;
XLA_AE_LINES_PKG.business_flow_validation(
                                p_business_method_code     => l_bflow_method_code
                               ,p_business_class_code      => l_bflow_class_code
                               ,p_inherit_description_flag => l_inherit_desc_flag);
   END IF;

   --
   -- call analytical criteria
   --
   -- Inherited Analytical Criteria for business flow method of Prior Entry.
   --
   -- call description
   --
   
xla_ae_lines_pkg.SetLineDescription(
   p_ae_header_id => l_ae_header_id
  ,p_description  => Description_3 (
     p_application_id         => p_application_id
   , p_ae_header_id           => l_ae_header_id 
, p_source_2 => p_source_2
, p_source_3 => p_source_3
, p_source_4 => p_source_4
, p_source_5 => p_source_5
   )
);


   --
   -- call ADRs
   -- Bug 4922099
   --
   IF ( (l_bflow_method_code <> 'PRIOR_ENTRY') OR
        (NVL(l_actual_upg_option, 'N') = 'O') OR
        (NVL(l_enc_upg_option, 'N') = 'O')
      )
   THEN
   NULL;
   --
   --
   
   --
   --
   END IF;
   --
   -- Bug 4922099
   IF ( ( (NVL(l_actual_upg_option, 'N') = 'O') OR
          (NVL(l_enc_upg_option, 'N') = 'O')
        ) AND
        (l_bflow_method_code = 'PRIOR_ENTRY')
      )
   THEN
      IF
      --
      1 = 1
      --
      THEN
      xla_accounting_err_pkg.build_message
                                    (p_appli_s_name            => 'XLA'
                                    ,p_msg_name                => 'XLA_UPG_OVERRIDE_ADR_UNDEFINED'
                                    ,p_token_1                 => 'LINE_NUMBER'
                                    ,p_value_1                 => XLA_AE_LINES_PKG.g_LineNumber
                                    ,p_token_2                 => 'LINE_TYPE_NAME'
                                    ,p_value_2                 => XLA_AE_SOURCES_PKG.GetComponentName (
                                                                             l_component_type
                                                                            ,l_component_code
                                                                            ,l_component_type_code
                                                                            ,l_component_appl_id
                                                                            ,l_amb_context_code
                                                                            ,l_entity_code
                                                                            ,l_event_class_code
                                                                           )
                                    ,p_token_3                 => 'OWNER'
                                    ,p_value_3                 => xla_lookups_pkg.get_meaning(
                                                                          p_lookup_type     => 'XLA_OWNER_TYPE'
                                                                          ,p_lookup_code    => l_component_type_code
                                                                         )
                                    ,p_token_4                 => 'PRODUCT_NAME'
                                    ,p_value_4                 => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.application_name
                                    ,p_entity_id               => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.entity_id
                                    ,p_event_id                => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.event_id
                                    ,p_ledger_id               => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id
                                    ,p_ae_header_id            =>  NULL
                                       );

        IF (C_LEVEL_ERROR>= g_log_level) THEN
                 trace
                      (p_msg      => 'ERROR: XLA_UPG_OVERRIDE_ADR_UNDEFINED'
                      ,p_level    => C_LEVEL_ERROR
                      ,p_module   => l_log_module);
        END IF;
      END IF;
   END IF;
   --
   --
   ------------------------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- NOTE: XLA_AE_LINES_PKG.ValidateCurrentLine should NOT be generated if business flow method is
   -- Prior Entry.  Currently, the following code is always generated.
   ------------------------------------------------------------------------------------------------
   -- No ValidateCurrentLine for business flow method of Prior Entry

   ------------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- Populated credit and debit amounts -- Need to generate this within IF <condition>
   ------------------------------------------------------------------------------------
   XLA_AE_LINES_PKG.SetDebitCreditAmounts;

   ----------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- Update journal entry status -- Need to generate this within IF <condition>
   ----------------------------------------------------------------------------------
   XLA_AE_JOURNAL_ENTRY_PKG.UpdateJournalEntryStatus
         (p_hdr_idx => g_array_event(p_event_id).array_value_num('header_index')
         ,p_balance_type_code => l_balance_type_code
         );

   -------------------------------------------------------------------------------------------
   -- 4262811 - Generate the Accrual Reversal lines
   -------------------------------------------------------------------------------------------
   BEGIN
      l_acc_rev_flag := XLA_AE_HEADER_PKG.g_rec_header_new.array_accrual_reversal_flag
                              (g_array_event(p_event_id).array_value_num('header_index'));
      IF l_acc_rev_flag IS NULL THEN
         l_acc_rev_flag := 'N';
      END IF;
   EXCEPTION
      WHEN OTHERS THEN
         l_acc_rev_flag := 'N';
   END;
   --
   IF (l_acc_rev_flag = 'Y') THEN

       -- 4645092  ------------------------------------------------------------------------------
       -- To allow MPA report to determine if it should generate report process
       XLA_ACCOUNTING_PKG.g_mpa_accrual_exists := 'Y';
       ------------------------------------------------------------------------------------------

       l_accrual_line_num := XLA_AE_LINES_PKG.g_LineNumber;
       XLA_AE_LINES_PKG.CopyLineInfo(l_accrual_line_num);
   -- added call to set_ccid to execute mapping  for secondary accrual reversal entries bug 7444204
   -- call ADRs
   -- Bug 4922099
   --
   IF ( (l_bflow_method_code <> 'PRIOR_ENTRY') OR
        (NVL(l_actual_upg_option, 'N') = 'O') OR
        (NVL(l_enc_upg_option, 'N') = 'O')
      )
   THEN
   NULL;
   --
   --
   
   --
   --
   END IF;

       --
       -- Update the line information that should be overwritten
       --
       XLA_AE_LINES_PKG.set_ae_header_id(p_ae_header_id => p_event_id ,
                                         p_header_num   => 1);
       XLA_AE_LINES_PKG.g_rec_lines.array_header_num(XLA_AE_LINES_PKG.g_LineNumber)  :=1;

       XLA_AE_LINES_PKG.g_rec_lines.array_business_class_code(XLA_AE_LINES_PKG.g_LineNumber) := NULL; -- 4669271

       IF l_bflow_method_code <> 'NONE' THEN  -- 4655713b
          XLA_AE_LINES_PKG.g_rec_lines.array_reversal_code(XLA_AE_LINES_PKG.g_LineNumber) := CONCAT('MPA_',l_bflow_method_code);
       END IF;

      --
      -- Depending on the Reversal Method setup, do a switch side or changes sign for the amounts
      --
      IF (XLA_AE_JOURNAL_ENTRY_PKG.g_cache_ledgers_info.ledger_reversal_option = 'SIDE') THEN
          XLA_AE_LINES_PKG.g_rec_lines.array_natural_side_code(XLA_AE_LINES_PKG.g_LineNumber) :=  l_acc_rev_natural_side_code;
      ELSE
          ---------------------------------------------------------------------------------------------------
          -- 4262811a Switch Sign
          ---------------------------------------------------------------------------------------------------
          XLA_AE_LINES_PKG.g_rec_lines.array_switch_side_flag(XLA_AE_LINES_PKG.g_LineNumber) := 'N';  -- 5052518
          XLA_AE_LINES_PKG.g_rec_lines.array_ledger_amount(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_ledger_amount(XLA_AE_LINES_PKG.g_LineNumber) * -1;
          XLA_AE_LINES_PKG.g_rec_lines.array_entered_amount(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_entered_amount(XLA_AE_LINES_PKG.g_LineNumber) * -1;
          -- 5132302
          XLA_AE_LINES_PKG.g_rec_lines.array_bflow_applied_to_amt(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_bflow_applied_to_amt(XLA_AE_LINES_PKG.g_LineNumber) * -1;

      END IF;

      -- 4955764
      XLA_AE_LINES_PKG.g_rec_lines.array_gl_date(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_HEADER_PKG.g_rec_header_new.array_gl_date(g_array_event(p_event_id).array_value_num('acc_rev_header_index'));


      XLA_AE_LINES_PKG.ValidateCurrentLine;
      XLA_AE_LINES_PKG.SetDebitCreditAmounts;

      XLA_AE_JOURNAL_ENTRY_PKG.UpdateJournalEntryStatus
               (p_hdr_idx           => g_array_event(p_event_id).array_value_num('acc_rev_header_index')
               ,p_balance_type_code => l_balance_type_code);

   END IF;

   -----------------------------------------------------------------------------------------
   -- 4262811 Multiperiod Accounting
   -----------------------------------------------------------------------------------------
     -- No MPA option is assigned.


END IF;
END IF;
--

--
IF (C_LEVEL_PROCEDURE >= g_log_level) THEN
   trace
      (p_msg      => 'END of AcctLineType_89'
      ,p_level    => C_LEVEL_PROCEDURE
      ,p_module   => l_log_module);
END IF;
--
EXCEPTION
  WHEN xla_exceptions_pkg.application_exception THEN
      RAISE;
  WHEN OTHERS THEN
       xla_exceptions_pkg.raise_message
           (p_location => 'XLA_00200_AAD_S_000010_BC_PKG.AcctLineType_89');
END AcctLineType_89;
--

---------------------------------------
--
-- PRIVATE FUNCTION
--         AcctLineType_90
--
---------------------------------------
PROCEDURE AcctLineType_90 (
  p_application_id        IN NUMBER
 ,p_event_id              IN NUMBER
 ,p_calculate_acctd_flag  IN VARCHAR2
 ,p_calculate_g_l_flag    IN VARCHAR2
 ,p_actual_flag           IN OUT VARCHAR2
 ,p_balance_type_code     OUT VARCHAR2
 ,p_gain_or_loss_ref      OUT VARCHAR2
 
--Document Distribution Type
 , p_source_2            IN VARCHAR2
--Project Name
 , p_source_3            IN VARCHAR2
--Task Number
 , p_source_4            IN VARCHAR2
--Expenditure Organization
 , p_source_5            IN NUMBER
--Budget Account
 , p_source_14            IN NUMBER
--Distribution Link Type
 , p_source_21            IN VARCHAR2
--Invoice Distribution Identifier
 , p_source_30            IN NUMBER
--Invoice Currency Code
 , p_source_33            IN VARCHAR2
--Invoice Exchange Date
 , p_source_39            IN DATE
--Invoice Exchange Rate
 , p_source_40            IN NUMBER
--Invoice Exchange Rate Type
 , p_source_41            IN VARCHAR2
--Invoice Distribution Amount
 , p_source_57            IN NUMBER
--Document Type
 , p_source_83            IN VARCHAR2
--Burden Amount Display Method
 , p_source_84            IN VARCHAR2
--Accounting reversal indicator for project invoice burden
 , p_source_85            IN VARCHAR2
--Allocated to Application Identifier
 , p_source_86            IN NUMBER
--Allocated to Distribution Type
 , p_source_87            IN VARCHAR2
--Allocated to Entity Code
 , p_source_88            IN VARCHAR2
--Allocated to First Distribution Identifier
 , p_source_89            IN NUMBER
--Allocated to First System Transaction Identifier
 , p_source_90            IN NUMBER
--Invoice Burden Applied to Application Identifier
 , p_source_91            IN NUMBER
--Invoice Burden Applied to Distribution Type
 , p_source_92            IN VARCHAR2
--Invoice Burden Applied to Entity Code
 , p_source_93            IN VARCHAR2
--Invoice Burden Applied to First Distribution Identifier
 , p_source_94            IN NUMBER
--Invoice Burden Applied to System Transaction Identifier
 , p_source_95            IN NUMBER
--Invoice Distribution Expenditure Type
 , p_source_96            IN VARCHAR2
--Encumbrance Upgrade Credit Accounting Class
 , p_source_97            IN VARCHAR2
--Encumbrance Upgrade Credit Account
 , p_source_98            IN NUMBER
--Invoice Distribution Ledger Amount Before Rounding
 , p_source_99            IN NUMBER
--Encumbrance Upgrade Debit Accounting Class
 , p_source_100            IN VARCHAR2
--Encumbrance Upgrade Debit Account
 , p_source_101            IN NUMBER
--Use Encumbrances Upgrade Attributes Flag
 , p_source_102            IN VARCHAR2
--Accounting reversal first distribution identifier for project invoice burden
 , p_source_103            IN NUMBER
--Invoice Burden Applied to Second Distribution Identifier
 , p_source_104            IN VARCHAR2
--Accounting reversal distribution type for project invoice burden
 , p_source_105            IN VARCHAR2
--Encumbrance Upgrade Credit Encumbrance Type
 , p_source_106            IN NUMBER
--Encumbrance Upgrade Debit Encumbrance Type
 , p_source_107            IN NUMBER
)
IS

l_component_type              VARCHAR2(80);
l_component_code              VARCHAR2(30);
l_component_type_code         VARCHAR2(1);
l_component_appl_id           INTEGER;
l_amb_context_code            VARCHAR2(30);
l_entity_code                 VARCHAR2(30);
l_event_class_code            VARCHAR2(30);
l_ae_header_id                NUMBER;
l_event_type_code             VARCHAR2(30);
l_line_definition_code        VARCHAR2(30);
l_line_definition_owner_code  VARCHAR2(1);
--
-- adr variables
l_segment                     VARCHAR2(30);
l_ccid                        NUMBER;
l_adr_transaction_coa_id      NUMBER;
l_adr_accounting_coa_id       NUMBER;
l_adr_flexfield_segment_code  VARCHAR2(30);
l_adr_flex_value_set_id       NUMBER;
l_adr_value_type_code         VARCHAR2(30);
l_adr_value_combination_id    NUMBER;
l_adr_value_segment_code      VARCHAR2(30);

l_bflow_method_code           VARCHAR2(30);  -- 4219869 Business Flow
l_bflow_class_code            VARCHAR2(30);  -- 4219869 Business Flow
l_inherit_desc_flag           VARCHAR2(1);   -- 4219869 Business Flow
l_budgetary_control_flag      VARCHAR2(1);   -- 4458381 Public Sector Enh

-- 4262811 Variables ------------------------------------------------------------------------------------------
l_entered_amt_idx             NUMBER;
l_accted_amt_idx              NUMBER;
l_acc_rev_flag                VARCHAR2(1);
l_accrual_line_num            NUMBER;
l_tmp_amt                     NUMBER;
l_acc_rev_natural_side_code   VARCHAR2(1);

l_num_entries                 NUMBER;
l_gl_dates                    xla_ae_journal_entry_pkg.t_array_date;
l_accted_amts                 xla_ae_journal_entry_pkg.t_array_num;
l_entered_amts                xla_ae_journal_entry_pkg.t_array_num;
l_period_names                xla_ae_journal_entry_pkg.t_array_V15L;
l_recog_line_1                NUMBER;
l_recog_line_2                NUMBER;

l_bflow_applied_to_amt_idx    NUMBER;                                -- 5132302
l_bflow_applied_to_amt        NUMBER;                                -- 5132302
l_bflow_applied_to_amts       xla_ae_journal_entry_pkg.t_array_num;  -- 5132302

l_event_id                    NUMBER;  -- To handle MPA header Description: xla_ae_header_pkg.SetHdrDescription

--l_rounding_ccy                VARCHAR2(15); -- To handle MPA rounding  4262811b
l_same_currency               BOOLEAN;        -- To handle MPA rounding  4262811b

---------------------------------------------------------------------------------------------------------------


--
-- bulk performance
--
l_balance_type_code           VARCHAR2(1);
l_rec_acct_attrs              XLA_AE_LINES_PKG.t_rec_acct_attrs;
l_log_module                  VARCHAR2(240);

--
-- Upgrade strategy
--
l_actual_upg_option           VARCHAR2(1);
l_enc_upg_option           VARCHAR2(1);

--
BEGIN
--
IF g_log_enabled THEN
      l_log_module := C_DEFAULT_MODULE||'.AcctLineType_90';
END IF;
--
IF (C_LEVEL_PROCEDURE >= g_log_level) THEN

      trace
         (p_msg      => 'BEGIN of AcctLineType_90'
         ,p_level    => C_LEVEL_PROCEDURE
         ,p_module   => l_log_module);

END IF;
--
l_component_type             := 'AMB_JLT';
l_component_code             := 'PREPAY_BURDENED_ENC';
l_component_type_code        := 'S';
l_component_appl_id          :=  200;
l_amb_context_code           := 'DEFAULT';
l_entity_code                := 'AP_INVOICES';
l_event_class_code           := 'PREPAYMENT_BURDEN';
l_event_type_code            := 'PREPAYMENT_BURDEN_ALL';
l_line_definition_owner_code := 'S';
l_line_definition_code       := 'AP_PREPAY_BURDEN_ENC_ALL';
--
l_balance_type_code          := 'E';
l_segment                     := NULL;
l_ccid                        := NULL;
l_adr_transaction_coa_id      := NULL;
l_adr_accounting_coa_id       := NULL;
l_adr_flexfield_segment_code  := NULL;
l_adr_flex_value_set_id       := NULL;
l_adr_value_type_code         := NULL;
l_adr_value_combination_id    := NULL;
l_adr_value_segment_code      := NULL;

l_bflow_method_code          := 'NONE';   -- 4219869 Business Flow
l_bflow_class_code           := 'AP_PREPAY_BURDENED_ENC';    -- 4219869 Business Flow
l_inherit_desc_flag          := 'N';   -- 4219869 Business Flow
l_budgetary_control_flag     := 'Y';

l_bflow_applied_to_amt_idx   := NULL; -- 5132302
l_bflow_applied_to_amt       := NULL; -- 5132302
l_entered_amt_idx            := NULL;          -- 4262811
l_accted_amt_idx             := NULL;          -- 4262811
l_acc_rev_flag               := NULL;          -- 4262811
l_accrual_line_num           := NULL;          -- 4262811
l_tmp_amt                    := NULL;          -- 4262811
--
 
IF XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id = XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.ledger_id OR
    l_balance_type_code <> 'B' THEN
IF NVL(p_source_83,'
') =  'AP' AND 
(NVL(p_source_2,'
') <>  'PREPAY APPL' OR 
NVL(p_source_2,'
') <>  'TAX DIFF' OR 
NVL(p_source_2,'
') <>  'FINAL APPLICATION ROUNDING') AND 
NVL(p_source_84,'
') =  'S'
 THEN 

   --
   XLA_AE_LINES_PKG.SetNewLine;

   p_balance_type_code          := l_balance_type_code;
   -- set the flag so later we will know whether the gain loss line needs to be created
   
   IF(l_balance_type_code = 'A' and p_actual_flag is null) THEN
     p_actual_flag :='A';
   END IF;

   --
   -- bulk performance
   --
   XLA_AE_LINES_PKG.set_ae_header_id (p_ae_header_id => p_event_id ,
                                      p_header_num   => 0); -- 4262811
   --
   -- set accounting line options
   --
   l_ae_header_id:= xla_ae_lines_pkg.SetAcctLineOption(
           p_natural_side_code          => 'D'
         , p_gain_or_loss_flag          => 'N'
         , p_gl_transfer_mode_code      => 'S'
         , p_acct_entry_type_code       => 'E'
         , p_switch_side_flag           => 'Y'
         , p_merge_duplicate_code       => 'N'
         );
   --
   l_acc_rev_natural_side_code := 'C';  -- 4262811
   -- 
   --
   -- set accounting line type info
   --
   xla_ae_lines_pkg.SetAcctLineType
      (p_component_type             => l_component_type
      ,p_event_type_code            => l_event_type_code
      ,p_line_definition_owner_code => l_line_definition_owner_code
      ,p_line_definition_code       => l_line_definition_code
      ,p_accounting_line_code       => l_component_code
      ,p_accounting_line_type_code  => l_component_type_code
      ,p_accounting_line_appl_id    => l_component_appl_id
      ,p_amb_context_code           => l_amb_context_code
      ,p_entity_code                => l_entity_code
      ,p_event_class_code           => l_event_class_code);
   --
   -- set accounting class
   --
   xla_ae_lines_pkg.SetAcctClass(
           p_accounting_class_code  => 'AP_PREPAY_BURDEN'
         , p_ae_header_id           => l_ae_header_id
         );

   --
   -- set rounding class
   --
   XLA_AE_LINES_PKG.g_rec_lines.array_rounding_class(XLA_AE_LINES_PKG.g_LineNumber) :=
                      'AP_PREPAY_BURDEN';

   --
   xla_ae_lines_pkg.g_rec_lines.array_calculate_acctd_flag(xla_ae_lines_pkg.g_LineNumber) := p_calculate_acctd_flag;
   xla_ae_lines_pkg.g_rec_lines.array_calculate_g_l_flag(xla_ae_lines_pkg.g_LineNumber) := p_calculate_g_l_flag;
   --
   -- bulk performance
   --
   XLA_AE_LINES_PKG.g_rec_lines.array_balance_type_code(XLA_AE_LINES_PKG.g_LineNumber) := l_balance_type_code;

   XLA_AE_LINES_PKG.g_rec_lines.array_ledger_id(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id;

   -- 4955764
   XLA_AE_LINES_PKG.g_rec_lines.array_gl_date(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_HEADER_PKG.g_rec_header_new.array_gl_date(g_array_event(p_event_id).array_value_num('header_index'));

   -- 4458381 Public Sector Enh
      XLA_AE_LINES_PKG.g_rec_lines.array_encumbrance_type_id(XLA_AE_LINES_PKG.g_LineNumber) := 1060;
   --
   -- set accounting attributes for the line type
   --
   l_entered_amt_idx := 27;
   l_accted_amt_idx  := 32;
   l_bflow_applied_to_amt_idx  := NULL;  -- 5132302
   l_rec_acct_attrs.array_acct_attr_code(1) := 'ACCOUNTING_REVERSAL_OPTION';
   l_rec_acct_attrs.array_char_value(1)  := p_source_85;
   l_rec_acct_attrs.array_acct_attr_code(2) := 'ALLOC_TO_APPLICATION_ID';
   l_rec_acct_attrs.array_num_value(2)  := p_source_86;
   l_rec_acct_attrs.array_acct_attr_code(3) := 'ALLOC_TO_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(3)  := p_source_87;
   l_rec_acct_attrs.array_acct_attr_code(4) := 'ALLOC_TO_ENTITY_CODE';
   l_rec_acct_attrs.array_char_value(4)  := p_source_88;
   l_rec_acct_attrs.array_acct_attr_code(5) := 'ALLOC_TO_FIRST_DIST_ID';
   l_rec_acct_attrs.array_num_value(5)  :=  to_char(p_source_89);
   l_rec_acct_attrs.array_acct_attr_code(6) := 'ALLOC_TO_FIRST_SYS_TRAN_ID';
   l_rec_acct_attrs.array_num_value(6)  :=  to_char(p_source_90);
   l_rec_acct_attrs.array_acct_attr_code(7) := 'APPLIED_TO_APPLICATION_ID';
   l_rec_acct_attrs.array_num_value(7)  := p_source_91;
   l_rec_acct_attrs.array_acct_attr_code(8) := 'APPLIED_TO_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(8)  := p_source_92;
   l_rec_acct_attrs.array_acct_attr_code(9) := 'APPLIED_TO_ENTITY_CODE';
   l_rec_acct_attrs.array_char_value(9)  := p_source_93;
   l_rec_acct_attrs.array_acct_attr_code(10) := 'APPLIED_TO_FIRST_DIST_ID';
   l_rec_acct_attrs.array_num_value(10)  :=  to_char(p_source_94);
   l_rec_acct_attrs.array_acct_attr_code(11) := 'APPLIED_TO_FIRST_SYS_TRAN_ID';
   l_rec_acct_attrs.array_num_value(11)  :=  to_char(p_source_95);
   l_rec_acct_attrs.array_acct_attr_code(12) := 'APPLIED_TO_SECOND_DIST_ID';
   l_rec_acct_attrs.array_char_value(12)  := p_source_104;
   l_rec_acct_attrs.array_acct_attr_code(13) := 'DISTRIBUTION_IDENTIFIER_1';
   l_rec_acct_attrs.array_num_value(13)  :=  to_char(p_source_30);
   l_rec_acct_attrs.array_acct_attr_code(14) := 'DISTRIBUTION_IDENTIFIER_2';
   l_rec_acct_attrs.array_char_value(14)  := p_source_96;
   l_rec_acct_attrs.array_acct_attr_code(15) := 'DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(15)  := p_source_21;
   l_rec_acct_attrs.array_acct_attr_code(16) := 'ENC_UPG_CR_ACCT_CLASS';
   l_rec_acct_attrs.array_char_value(16)  := p_source_97;
   l_rec_acct_attrs.array_acct_attr_code(17) := 'ENC_UPG_CR_CCID';
   l_rec_acct_attrs.array_num_value(17)  := p_source_98;
   l_rec_acct_attrs.array_acct_attr_code(18) := 'ENC_UPG_CR_ENTERED_AMT';
   l_rec_acct_attrs.array_num_value(18)  := p_source_57;
   l_rec_acct_attrs.array_acct_attr_code(19) := 'ENC_UPG_CR_ENTERED_CURR';
   l_rec_acct_attrs.array_char_value(19)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(20) := 'ENC_UPG_CR_LEDGER_AMT';
   l_rec_acct_attrs.array_num_value(20)  := p_source_99;
   l_rec_acct_attrs.array_acct_attr_code(21) := 'ENC_UPG_DR_ACCT_CLASS';
   l_rec_acct_attrs.array_char_value(21)  := p_source_100;
   l_rec_acct_attrs.array_acct_attr_code(22) := 'ENC_UPG_DR_CCID';
   l_rec_acct_attrs.array_num_value(22)  := p_source_101;
   l_rec_acct_attrs.array_acct_attr_code(23) := 'ENC_UPG_DR_ENTERED_AMT';
   l_rec_acct_attrs.array_num_value(23)  := p_source_57;
   l_rec_acct_attrs.array_acct_attr_code(24) := 'ENC_UPG_DR_ENTERED_CURR';
   l_rec_acct_attrs.array_char_value(24)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(25) := 'ENC_UPG_DR_LEDGER_AMT';
   l_rec_acct_attrs.array_num_value(25)  := p_source_99;
   l_rec_acct_attrs.array_acct_attr_code(26) := 'ENC_UPG_OPTION';
   l_rec_acct_attrs.array_char_value(26)  := p_source_102;
   l_rec_acct_attrs.array_acct_attr_code(27) := 'ENTERED_CURRENCY_AMOUNT';
   l_rec_acct_attrs.array_num_value(27)  := p_source_57;
   l_rec_acct_attrs.array_acct_attr_code(28) := 'ENTERED_CURRENCY_CODE';
   l_rec_acct_attrs.array_char_value(28)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(29) := 'EXCHANGE_DATE';
   l_rec_acct_attrs.array_date_value(29)  := p_source_39;
   l_rec_acct_attrs.array_acct_attr_code(30) := 'EXCHANGE_RATE';
   l_rec_acct_attrs.array_num_value(30)  := p_source_40;
   l_rec_acct_attrs.array_acct_attr_code(31) := 'EXCHANGE_RATE_TYPE';
   l_rec_acct_attrs.array_char_value(31)  := p_source_41;
   l_rec_acct_attrs.array_acct_attr_code(32) := 'LEDGER_AMOUNT';
   l_rec_acct_attrs.array_num_value(32)  := p_source_99;
   l_rec_acct_attrs.array_acct_attr_code(33) := 'REVERSED_DISTRIBUTION_ID1';
   l_rec_acct_attrs.array_num_value(33)  :=  to_char(p_source_103);
   l_rec_acct_attrs.array_acct_attr_code(34) := 'REVERSED_DISTRIBUTION_ID2';
   l_rec_acct_attrs.array_char_value(34)  := p_source_104;
   l_rec_acct_attrs.array_acct_attr_code(35) := 'REVERSED_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(35)  := p_source_105;
   l_rec_acct_attrs.array_acct_attr_code(36) := 'UPG_CR_ENC_TYPE_ID';
   l_rec_acct_attrs.array_num_value(36)  := p_source_106;
   l_rec_acct_attrs.array_acct_attr_code(37) := 'UPG_DR_ENC_TYPE_ID';
   l_rec_acct_attrs.array_num_value(37)  := p_source_107;

   XLA_AE_LINES_PKG.SetLineAcctAttrs(l_rec_acct_attrs);
   p_gain_or_loss_ref  := XLA_AE_LINES_PKG.g_rec_lines.array_gain_or_loss_ref(XLA_AE_LINES_PKG.g_LineNumber);

   ---------------------------------------------------------------------------------------------------------------
   -- 4336173 -- assign Business Flow Class (replace code in xla_ae_lines_pkg.Business_Flow_Validation)
   ---------------------------------------------------------------------------------------------------------------
   XLA_AE_LINES_PKG.g_rec_lines.array_business_class_code(XLA_AE_LINES_PKG.g_LineNumber) := l_bflow_class_code;

   l_actual_upg_option  := XLA_AE_LINES_PKG.g_rec_lines.array_actual_upg_option(XLA_AE_LINES_PKG.g_LineNumber);
   l_enc_upg_option     := XLA_AE_LINES_PKG.g_rec_lines.array_enc_upg_option(XLA_AE_LINES_PKG.g_LineNumber);

   IF xla_accounting_cache_pkg.GetValueChar
         (p_source_code         => 'LEDGER_CATEGORY_CODE'
         ,p_target_ledger_id    => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id) IN ('PRIMARY','ALC')
   AND l_bflow_method_code = 'PRIOR_ENTRY'
--   AND (l_actual_upg_option = 'Y' OR l_enc_upg_option = 'Y') Bug 4922099
   AND ( (NVL(l_actual_upg_option, 'N') IN ('Y', 'O')) OR
         (NVL(l_enc_upg_option, 'N') IN ('Y', 'O'))
       )
   THEN
         xla_ae_lines_pkg.BflowUpgEntry
           (p_business_method_code    => l_bflow_method_code
           ,p_business_class_code     => l_bflow_class_code
           ,p_balance_type            => l_balance_type_code);
   ELSE
      NULL;
-- No business flow processing for business flow method of NONE.
   END IF;

   --
   -- call analytical criteria
   --
   
   --
   -- call description
   --
   
xla_ae_lines_pkg.SetLineDescription(
   p_ae_header_id => l_ae_header_id
  ,p_description  => Description_3 (
     p_application_id         => p_application_id
   , p_ae_header_id           => l_ae_header_id 
, p_source_2 => p_source_2
, p_source_3 => p_source_3
, p_source_4 => p_source_4
, p_source_5 => p_source_5
   )
);


   --
   -- call ADRs
   -- Bug 4922099
   --
   IF ( (l_bflow_method_code <> 'PRIOR_ENTRY') OR
        (NVL(l_actual_upg_option, 'N') = 'O') OR
        (NVL(l_enc_upg_option, 'N') = 'O')
      )
   THEN
   NULL;
   --
   --
   
  l_ccid := AcctDerRule_11(
           p_application_id           => p_application_id
         , p_ae_header_id             => l_ae_header_id 
, p_source_14 => p_source_14
         , x_transaction_coa_id       => l_adr_transaction_coa_id
         , x_accounting_coa_id        => l_adr_accounting_coa_id
         , x_value_type_code          => l_adr_value_type_code
         , p_side                     => 'NA'
   );

   xla_ae_lines_pkg.set_ccid(
    p_code_combination_id          => l_ccid
  , p_value_type_code              => l_adr_value_type_code
  , p_transaction_coa_id           => l_adr_transaction_coa_id
  , p_accounting_coa_id            => l_adr_accounting_coa_id
  , p_adr_code                     => 'PROJ_PREPAY_BURDENED_ENC_RULE'
  , p_adr_type_code                => 'S'
  , p_component_type               => l_component_type
  , p_component_code               => l_component_code
  , p_component_type_code          => l_component_type_code
  , p_component_appl_id            => l_component_appl_id
  , p_amb_context_code             => l_amb_context_code
  , p_side                         => 'NA'
  );


   --
   --
   END IF;
   --
   -- Bug 4922099
   IF ( ( (NVL(l_actual_upg_option, 'N') = 'O') OR
          (NVL(l_enc_upg_option, 'N') = 'O')
        ) AND
        (l_bflow_method_code = 'PRIOR_ENTRY')
      )
   THEN
      IF
      --
      1 = 2
      --
      THEN
      xla_accounting_err_pkg.build_message
                                    (p_appli_s_name            => 'XLA'
                                    ,p_msg_name                => 'XLA_UPG_OVERRIDE_ADR_UNDEFINED'
                                    ,p_token_1                 => 'LINE_NUMBER'
                                    ,p_value_1                 => XLA_AE_LINES_PKG.g_LineNumber
                                    ,p_token_2                 => 'LINE_TYPE_NAME'
                                    ,p_value_2                 => XLA_AE_SOURCES_PKG.GetComponentName (
                                                                             l_component_type
                                                                            ,l_component_code
                                                                            ,l_component_type_code
                                                                            ,l_component_appl_id
                                                                            ,l_amb_context_code
                                                                            ,l_entity_code
                                                                            ,l_event_class_code
                                                                           )
                                    ,p_token_3                 => 'OWNER'
                                    ,p_value_3                 => xla_lookups_pkg.get_meaning(
                                                                          p_lookup_type     => 'XLA_OWNER_TYPE'
                                                                          ,p_lookup_code    => l_component_type_code
                                                                         )
                                    ,p_token_4                 => 'PRODUCT_NAME'
                                    ,p_value_4                 => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.application_name
                                    ,p_entity_id               => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.entity_id
                                    ,p_event_id                => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.event_id
                                    ,p_ledger_id               => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id
                                    ,p_ae_header_id            =>  NULL
                                       );

        IF (C_LEVEL_ERROR>= g_log_level) THEN
                 trace
                      (p_msg      => 'ERROR: XLA_UPG_OVERRIDE_ADR_UNDEFINED'
                      ,p_level    => C_LEVEL_ERROR
                      ,p_module   => l_log_module);
        END IF;
      END IF;
   END IF;
   --
   --
   ------------------------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- NOTE: XLA_AE_LINES_PKG.ValidateCurrentLine should NOT be generated if business flow method is
   -- Prior Entry.  Currently, the following code is always generated.
   ------------------------------------------------------------------------------------------------
   XLA_AE_LINES_PKG.ValidateCurrentLine;

   ------------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- Populated credit and debit amounts -- Need to generate this within IF <condition>
   ------------------------------------------------------------------------------------
   XLA_AE_LINES_PKG.SetDebitCreditAmounts;

   ----------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- Update journal entry status -- Need to generate this within IF <condition>
   ----------------------------------------------------------------------------------
   XLA_AE_JOURNAL_ENTRY_PKG.UpdateJournalEntryStatus
         (p_hdr_idx => g_array_event(p_event_id).array_value_num('header_index')
         ,p_balance_type_code => l_balance_type_code
         );

   -------------------------------------------------------------------------------------------
   -- 4262811 - Generate the Accrual Reversal lines
   -------------------------------------------------------------------------------------------
   BEGIN
      l_acc_rev_flag := XLA_AE_HEADER_PKG.g_rec_header_new.array_accrual_reversal_flag
                              (g_array_event(p_event_id).array_value_num('header_index'));
      IF l_acc_rev_flag IS NULL THEN
         l_acc_rev_flag := 'N';
      END IF;
   EXCEPTION
      WHEN OTHERS THEN
         l_acc_rev_flag := 'N';
   END;
   --
   IF (l_acc_rev_flag = 'Y') THEN

       -- 4645092  ------------------------------------------------------------------------------
       -- To allow MPA report to determine if it should generate report process
       XLA_ACCOUNTING_PKG.g_mpa_accrual_exists := 'Y';
       ------------------------------------------------------------------------------------------

       l_accrual_line_num := XLA_AE_LINES_PKG.g_LineNumber;
       XLA_AE_LINES_PKG.CopyLineInfo(l_accrual_line_num);
   -- added call to set_ccid to execute mapping  for secondary accrual reversal entries bug 7444204
   -- call ADRs
   -- Bug 4922099
   --
   IF ( (l_bflow_method_code <> 'PRIOR_ENTRY') OR
        (NVL(l_actual_upg_option, 'N') = 'O') OR
        (NVL(l_enc_upg_option, 'N') = 'O')
      )
   THEN
   NULL;
   --
   --
   
  l_ccid := AcctDerRule_11(
           p_application_id           => p_application_id
         , p_ae_header_id             => l_ae_header_id 
, p_source_14 => p_source_14
         , x_transaction_coa_id       => l_adr_transaction_coa_id
         , x_accounting_coa_id        => l_adr_accounting_coa_id
         , x_value_type_code          => l_adr_value_type_code
         , p_side                     => 'NA'
   );

   xla_ae_lines_pkg.set_ccid(
    p_code_combination_id          => l_ccid
  , p_value_type_code              => l_adr_value_type_code
  , p_transaction_coa_id           => l_adr_transaction_coa_id
  , p_accounting_coa_id            => l_adr_accounting_coa_id
  , p_adr_code                     => 'PROJ_PREPAY_BURDENED_ENC_RULE'
  , p_adr_type_code                => 'S'
  , p_component_type               => l_component_type
  , p_component_code               => l_component_code
  , p_component_type_code          => l_component_type_code
  , p_component_appl_id            => l_component_appl_id
  , p_amb_context_code             => l_amb_context_code
  , p_side                         => 'NA'
  );


   --
   --
   END IF;

       --
       -- Update the line information that should be overwritten
       --
       XLA_AE_LINES_PKG.set_ae_header_id(p_ae_header_id => p_event_id ,
                                         p_header_num   => 1);
       XLA_AE_LINES_PKG.g_rec_lines.array_header_num(XLA_AE_LINES_PKG.g_LineNumber)  :=1;

       XLA_AE_LINES_PKG.g_rec_lines.array_business_class_code(XLA_AE_LINES_PKG.g_LineNumber) := NULL; -- 4669271

       IF l_bflow_method_code <> 'NONE' THEN  -- 4655713b
          XLA_AE_LINES_PKG.g_rec_lines.array_reversal_code(XLA_AE_LINES_PKG.g_LineNumber) := CONCAT('MPA_',l_bflow_method_code);
       END IF;

      --
      -- Depending on the Reversal Method setup, do a switch side or changes sign for the amounts
      --
      IF (XLA_AE_JOURNAL_ENTRY_PKG.g_cache_ledgers_info.ledger_reversal_option = 'SIDE') THEN
          XLA_AE_LINES_PKG.g_rec_lines.array_natural_side_code(XLA_AE_LINES_PKG.g_LineNumber) :=  l_acc_rev_natural_side_code;
      ELSE
          ---------------------------------------------------------------------------------------------------
          -- 4262811a Switch Sign
          ---------------------------------------------------------------------------------------------------
          XLA_AE_LINES_PKG.g_rec_lines.array_switch_side_flag(XLA_AE_LINES_PKG.g_LineNumber) := 'N';  -- 5052518
          XLA_AE_LINES_PKG.g_rec_lines.array_ledger_amount(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_ledger_amount(XLA_AE_LINES_PKG.g_LineNumber) * -1;
          XLA_AE_LINES_PKG.g_rec_lines.array_entered_amount(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_entered_amount(XLA_AE_LINES_PKG.g_LineNumber) * -1;
          -- 5132302
          XLA_AE_LINES_PKG.g_rec_lines.array_bflow_applied_to_amt(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_bflow_applied_to_amt(XLA_AE_LINES_PKG.g_LineNumber) * -1;

      END IF;

      -- 4955764
      XLA_AE_LINES_PKG.g_rec_lines.array_gl_date(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_HEADER_PKG.g_rec_header_new.array_gl_date(g_array_event(p_event_id).array_value_num('acc_rev_header_index'));


      XLA_AE_LINES_PKG.ValidateCurrentLine;
      XLA_AE_LINES_PKG.SetDebitCreditAmounts;

      XLA_AE_JOURNAL_ENTRY_PKG.UpdateJournalEntryStatus
               (p_hdr_idx           => g_array_event(p_event_id).array_value_num('acc_rev_header_index')
               ,p_balance_type_code => l_balance_type_code);

   END IF;

   -----------------------------------------------------------------------------------------
   -- 4262811 Multiperiod Accounting
   -----------------------------------------------------------------------------------------
     -- No MPA option is assigned.


END IF;
END IF;
--

--
IF (C_LEVEL_PROCEDURE >= g_log_level) THEN
   trace
      (p_msg      => 'END of AcctLineType_90'
      ,p_level    => C_LEVEL_PROCEDURE
      ,p_module   => l_log_module);
END IF;
--
EXCEPTION
  WHEN xla_exceptions_pkg.application_exception THEN
      RAISE;
  WHEN OTHERS THEN
       xla_exceptions_pkg.raise_message
           (p_location => 'XLA_00200_AAD_S_000010_BC_PKG.AcctLineType_90');
END AcctLineType_90;
--

---------------------------------------
--
-- PRIVATE FUNCTION
--         AcctLineType_91
--
---------------------------------------
PROCEDURE AcctLineType_91 (
  p_application_id        IN NUMBER
 ,p_event_id              IN NUMBER
 ,p_calculate_acctd_flag  IN VARCHAR2
 ,p_calculate_g_l_flag    IN VARCHAR2
 ,p_actual_flag           IN OUT VARCHAR2
 ,p_balance_type_code     OUT VARCHAR2
 ,p_gain_or_loss_ref      OUT VARCHAR2
 
--Document Distribution Type
 , p_source_2            IN VARCHAR2
--Project Name
 , p_source_3            IN VARCHAR2
--Task Number
 , p_source_4            IN VARCHAR2
--Expenditure Organization
 , p_source_5            IN NUMBER
--Invoice Distribution Account
 , p_source_11            IN NUMBER
--Budget Account
 , p_source_14            IN NUMBER
--Distribution Link Type
 , p_source_21            IN VARCHAR2
--Invoice Distribution Identifier
 , p_source_30            IN NUMBER
--Invoice Currency Code
 , p_source_33            IN VARCHAR2
--Invoice Exchange Date
 , p_source_39            IN DATE
--Invoice Exchange Rate
 , p_source_40            IN NUMBER
--Invoice Exchange Rate Type
 , p_source_41            IN VARCHAR2
--Invoice Distribution Amount
 , p_source_57            IN NUMBER
--Document Type
 , p_source_83            IN VARCHAR2
--Burden Amount Display Method
 , p_source_84            IN VARCHAR2
--Accounting reversal indicator for project invoice burden
 , p_source_85            IN VARCHAR2
--Allocated to Application Identifier
 , p_source_86            IN NUMBER
--Allocated to Distribution Type
 , p_source_87            IN VARCHAR2
--Allocated to Entity Code
 , p_source_88            IN VARCHAR2
--Allocated to First Distribution Identifier
 , p_source_89            IN NUMBER
--Allocated to First System Transaction Identifier
 , p_source_90            IN NUMBER
--Invoice Burden Applied to Application Identifier
 , p_source_91            IN NUMBER
--Invoice Burden Applied to Distribution Type
 , p_source_92            IN VARCHAR2
--Invoice Burden Applied to Entity Code
 , p_source_93            IN VARCHAR2
--Invoice Burden Applied to First Distribution Identifier
 , p_source_94            IN NUMBER
--Invoice Burden Applied to System Transaction Identifier
 , p_source_95            IN NUMBER
--Invoice Distribution Expenditure Type
 , p_source_96            IN VARCHAR2
--Encumbrance Upgrade Credit Accounting Class
 , p_source_97            IN VARCHAR2
--Encumbrance Upgrade Credit Account
 , p_source_98            IN NUMBER
--Invoice Distribution Ledger Amount Before Rounding
 , p_source_99            IN NUMBER
--Encumbrance Upgrade Debit Accounting Class
 , p_source_100            IN VARCHAR2
--Encumbrance Upgrade Debit Account
 , p_source_101            IN NUMBER
--Use Encumbrances Upgrade Attributes Flag
 , p_source_102            IN VARCHAR2
--Accounting reversal first distribution identifier for project invoice burden
 , p_source_103            IN NUMBER
--Invoice Burden Applied to Second Distribution Identifier
 , p_source_104            IN VARCHAR2
--Accounting reversal distribution type for project invoice burden
 , p_source_105            IN VARCHAR2
--Encumbrance Upgrade Credit Encumbrance Type
 , p_source_106            IN NUMBER
--Encumbrance Upgrade Debit Encumbrance Type
 , p_source_107            IN NUMBER
--Burden Record Identifier
 , p_source_108            IN VARCHAR2
 , p_source_108_meaning    IN VARCHAR2
)
IS

l_component_type              VARCHAR2(80);
l_component_code              VARCHAR2(30);
l_component_type_code         VARCHAR2(1);
l_component_appl_id           INTEGER;
l_amb_context_code            VARCHAR2(30);
l_entity_code                 VARCHAR2(30);
l_event_class_code            VARCHAR2(30);
l_ae_header_id                NUMBER;
l_event_type_code             VARCHAR2(30);
l_line_definition_code        VARCHAR2(30);
l_line_definition_owner_code  VARCHAR2(1);
--
-- adr variables
l_segment                     VARCHAR2(30);
l_ccid                        NUMBER;
l_adr_transaction_coa_id      NUMBER;
l_adr_accounting_coa_id       NUMBER;
l_adr_flexfield_segment_code  VARCHAR2(30);
l_adr_flex_value_set_id       NUMBER;
l_adr_value_type_code         VARCHAR2(30);
l_adr_value_combination_id    NUMBER;
l_adr_value_segment_code      VARCHAR2(30);

l_bflow_method_code           VARCHAR2(30);  -- 4219869 Business Flow
l_bflow_class_code            VARCHAR2(30);  -- 4219869 Business Flow
l_inherit_desc_flag           VARCHAR2(1);   -- 4219869 Business Flow
l_budgetary_control_flag      VARCHAR2(1);   -- 4458381 Public Sector Enh

-- 4262811 Variables ------------------------------------------------------------------------------------------
l_entered_amt_idx             NUMBER;
l_accted_amt_idx              NUMBER;
l_acc_rev_flag                VARCHAR2(1);
l_accrual_line_num            NUMBER;
l_tmp_amt                     NUMBER;
l_acc_rev_natural_side_code   VARCHAR2(1);

l_num_entries                 NUMBER;
l_gl_dates                    xla_ae_journal_entry_pkg.t_array_date;
l_accted_amts                 xla_ae_journal_entry_pkg.t_array_num;
l_entered_amts                xla_ae_journal_entry_pkg.t_array_num;
l_period_names                xla_ae_journal_entry_pkg.t_array_V15L;
l_recog_line_1                NUMBER;
l_recog_line_2                NUMBER;

l_bflow_applied_to_amt_idx    NUMBER;                                -- 5132302
l_bflow_applied_to_amt        NUMBER;                                -- 5132302
l_bflow_applied_to_amts       xla_ae_journal_entry_pkg.t_array_num;  -- 5132302

l_event_id                    NUMBER;  -- To handle MPA header Description: xla_ae_header_pkg.SetHdrDescription

--l_rounding_ccy                VARCHAR2(15); -- To handle MPA rounding  4262811b
l_same_currency               BOOLEAN;        -- To handle MPA rounding  4262811b

---------------------------------------------------------------------------------------------------------------


--
-- bulk performance
--
l_balance_type_code           VARCHAR2(1);
l_rec_acct_attrs              XLA_AE_LINES_PKG.t_rec_acct_attrs;
l_log_module                  VARCHAR2(240);

--
-- Upgrade strategy
--
l_actual_upg_option           VARCHAR2(1);
l_enc_upg_option           VARCHAR2(1);

--
BEGIN
--
IF g_log_enabled THEN
      l_log_module := C_DEFAULT_MODULE||'.AcctLineType_91';
END IF;
--
IF (C_LEVEL_PROCEDURE >= g_log_level) THEN

      trace
         (p_msg      => 'BEGIN of AcctLineType_91'
         ,p_level    => C_LEVEL_PROCEDURE
         ,p_module   => l_log_module);

END IF;
--
l_component_type             := 'AMB_JLT';
l_component_code             := 'PREPAY_BURDEN_ENC';
l_component_type_code        := 'S';
l_component_appl_id          :=  200;
l_amb_context_code           := 'DEFAULT';
l_entity_code                := 'AP_INVOICES';
l_event_class_code           := 'PREPAYMENT_BURDEN';
l_event_type_code            := 'PREPAYMENT_BURDEN_ALL';
l_line_definition_owner_code := 'S';
l_line_definition_code       := 'AP_PREPAY_BURDEN_ENC_ALL';
--
l_balance_type_code          := 'E';
l_segment                     := NULL;
l_ccid                        := NULL;
l_adr_transaction_coa_id      := NULL;
l_adr_accounting_coa_id       := NULL;
l_adr_flexfield_segment_code  := NULL;
l_adr_flex_value_set_id       := NULL;
l_adr_value_type_code         := NULL;
l_adr_value_combination_id    := NULL;
l_adr_value_segment_code      := NULL;

l_bflow_method_code          := 'NONE';   -- 4219869 Business Flow
l_bflow_class_code           := 'AP_PREPAY_BURDEN_ENC';    -- 4219869 Business Flow
l_inherit_desc_flag          := 'N';   -- 4219869 Business Flow
l_budgetary_control_flag     := 'Y';

l_bflow_applied_to_amt_idx   := NULL; -- 5132302
l_bflow_applied_to_amt       := NULL; -- 5132302
l_entered_amt_idx            := NULL;          -- 4262811
l_accted_amt_idx             := NULL;          -- 4262811
l_acc_rev_flag               := NULL;          -- 4262811
l_accrual_line_num           := NULL;          -- 4262811
l_tmp_amt                    := NULL;          -- 4262811
--
 
IF XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id = XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.ledger_id OR
    l_balance_type_code <> 'B' THEN
IF NVL(p_source_83,'
') =  'AP' AND 
(NVL(p_source_2,'
') <>  'PREPAY APPL' OR 
NVL(p_source_2,'
') <>  'TAX DIFF' OR 
NVL(p_source_2,'
') <>  'FINAL APPLICATION ROUNDING') AND 
NVL(p_source_84,'
') =  'D' AND 
NVL(p_source_108,'
') =  'O' AND 
NVL(TO_NUMBER(p_source_14),9E125) <> NVL(TO_NUMBER(p_source_11),9E125) 
 THEN 

   --
   XLA_AE_LINES_PKG.SetNewLine;

   p_balance_type_code          := l_balance_type_code;
   -- set the flag so later we will know whether the gain loss line needs to be created
   
   IF(l_balance_type_code = 'A' and p_actual_flag is null) THEN
     p_actual_flag :='A';
   END IF;

   --
   -- bulk performance
   --
   XLA_AE_LINES_PKG.set_ae_header_id (p_ae_header_id => p_event_id ,
                                      p_header_num   => 0); -- 4262811
   --
   -- set accounting line options
   --
   l_ae_header_id:= xla_ae_lines_pkg.SetAcctLineOption(
           p_natural_side_code          => 'D'
         , p_gain_or_loss_flag          => 'N'
         , p_gl_transfer_mode_code      => 'S'
         , p_acct_entry_type_code       => 'E'
         , p_switch_side_flag           => 'Y'
         , p_merge_duplicate_code       => 'N'
         );
   --
   l_acc_rev_natural_side_code := 'C';  -- 4262811
   -- 
   --
   -- set accounting line type info
   --
   xla_ae_lines_pkg.SetAcctLineType
      (p_component_type             => l_component_type
      ,p_event_type_code            => l_event_type_code
      ,p_line_definition_owner_code => l_line_definition_owner_code
      ,p_line_definition_code       => l_line_definition_code
      ,p_accounting_line_code       => l_component_code
      ,p_accounting_line_type_code  => l_component_type_code
      ,p_accounting_line_appl_id    => l_component_appl_id
      ,p_amb_context_code           => l_amb_context_code
      ,p_entity_code                => l_entity_code
      ,p_event_class_code           => l_event_class_code);
   --
   -- set accounting class
   --
   xla_ae_lines_pkg.SetAcctClass(
           p_accounting_class_code  => 'AP_PREPAY_BURDEN'
         , p_ae_header_id           => l_ae_header_id
         );

   --
   -- set rounding class
   --
   XLA_AE_LINES_PKG.g_rec_lines.array_rounding_class(XLA_AE_LINES_PKG.g_LineNumber) :=
                      'AP_PREPAY_BURDEN';

   --
   xla_ae_lines_pkg.g_rec_lines.array_calculate_acctd_flag(xla_ae_lines_pkg.g_LineNumber) := p_calculate_acctd_flag;
   xla_ae_lines_pkg.g_rec_lines.array_calculate_g_l_flag(xla_ae_lines_pkg.g_LineNumber) := p_calculate_g_l_flag;
   --
   -- bulk performance
   --
   XLA_AE_LINES_PKG.g_rec_lines.array_balance_type_code(XLA_AE_LINES_PKG.g_LineNumber) := l_balance_type_code;

   XLA_AE_LINES_PKG.g_rec_lines.array_ledger_id(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id;

   -- 4955764
   XLA_AE_LINES_PKG.g_rec_lines.array_gl_date(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_HEADER_PKG.g_rec_header_new.array_gl_date(g_array_event(p_event_id).array_value_num('header_index'));

   -- 4458381 Public Sector Enh
      XLA_AE_LINES_PKG.g_rec_lines.array_encumbrance_type_id(XLA_AE_LINES_PKG.g_LineNumber) := 1060;
   --
   -- set accounting attributes for the line type
   --
   l_entered_amt_idx := 27;
   l_accted_amt_idx  := 32;
   l_bflow_applied_to_amt_idx  := NULL;  -- 5132302
   l_rec_acct_attrs.array_acct_attr_code(1) := 'ACCOUNTING_REVERSAL_OPTION';
   l_rec_acct_attrs.array_char_value(1)  := p_source_85;
   l_rec_acct_attrs.array_acct_attr_code(2) := 'ALLOC_TO_APPLICATION_ID';
   l_rec_acct_attrs.array_num_value(2)  := p_source_86;
   l_rec_acct_attrs.array_acct_attr_code(3) := 'ALLOC_TO_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(3)  := p_source_87;
   l_rec_acct_attrs.array_acct_attr_code(4) := 'ALLOC_TO_ENTITY_CODE';
   l_rec_acct_attrs.array_char_value(4)  := p_source_88;
   l_rec_acct_attrs.array_acct_attr_code(5) := 'ALLOC_TO_FIRST_DIST_ID';
   l_rec_acct_attrs.array_num_value(5)  :=  to_char(p_source_89);
   l_rec_acct_attrs.array_acct_attr_code(6) := 'ALLOC_TO_FIRST_SYS_TRAN_ID';
   l_rec_acct_attrs.array_num_value(6)  :=  to_char(p_source_90);
   l_rec_acct_attrs.array_acct_attr_code(7) := 'APPLIED_TO_APPLICATION_ID';
   l_rec_acct_attrs.array_num_value(7)  := p_source_91;
   l_rec_acct_attrs.array_acct_attr_code(8) := 'APPLIED_TO_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(8)  := p_source_92;
   l_rec_acct_attrs.array_acct_attr_code(9) := 'APPLIED_TO_ENTITY_CODE';
   l_rec_acct_attrs.array_char_value(9)  := p_source_93;
   l_rec_acct_attrs.array_acct_attr_code(10) := 'APPLIED_TO_FIRST_DIST_ID';
   l_rec_acct_attrs.array_num_value(10)  :=  to_char(p_source_94);
   l_rec_acct_attrs.array_acct_attr_code(11) := 'APPLIED_TO_FIRST_SYS_TRAN_ID';
   l_rec_acct_attrs.array_num_value(11)  :=  to_char(p_source_95);
   l_rec_acct_attrs.array_acct_attr_code(12) := 'APPLIED_TO_SECOND_DIST_ID';
   l_rec_acct_attrs.array_char_value(12)  := p_source_104;
   l_rec_acct_attrs.array_acct_attr_code(13) := 'DISTRIBUTION_IDENTIFIER_1';
   l_rec_acct_attrs.array_num_value(13)  :=  to_char(p_source_30);
   l_rec_acct_attrs.array_acct_attr_code(14) := 'DISTRIBUTION_IDENTIFIER_2';
   l_rec_acct_attrs.array_char_value(14)  := p_source_96;
   l_rec_acct_attrs.array_acct_attr_code(15) := 'DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(15)  := p_source_21;
   l_rec_acct_attrs.array_acct_attr_code(16) := 'ENC_UPG_CR_ACCT_CLASS';
   l_rec_acct_attrs.array_char_value(16)  := p_source_97;
   l_rec_acct_attrs.array_acct_attr_code(17) := 'ENC_UPG_CR_CCID';
   l_rec_acct_attrs.array_num_value(17)  := p_source_98;
   l_rec_acct_attrs.array_acct_attr_code(18) := 'ENC_UPG_CR_ENTERED_AMT';
   l_rec_acct_attrs.array_num_value(18)  := p_source_57;
   l_rec_acct_attrs.array_acct_attr_code(19) := 'ENC_UPG_CR_ENTERED_CURR';
   l_rec_acct_attrs.array_char_value(19)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(20) := 'ENC_UPG_CR_LEDGER_AMT';
   l_rec_acct_attrs.array_num_value(20)  := p_source_99;
   l_rec_acct_attrs.array_acct_attr_code(21) := 'ENC_UPG_DR_ACCT_CLASS';
   l_rec_acct_attrs.array_char_value(21)  := p_source_100;
   l_rec_acct_attrs.array_acct_attr_code(22) := 'ENC_UPG_DR_CCID';
   l_rec_acct_attrs.array_num_value(22)  := p_source_101;
   l_rec_acct_attrs.array_acct_attr_code(23) := 'ENC_UPG_DR_ENTERED_AMT';
   l_rec_acct_attrs.array_num_value(23)  := p_source_57;
   l_rec_acct_attrs.array_acct_attr_code(24) := 'ENC_UPG_DR_ENTERED_CURR';
   l_rec_acct_attrs.array_char_value(24)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(25) := 'ENC_UPG_DR_LEDGER_AMT';
   l_rec_acct_attrs.array_num_value(25)  := p_source_99;
   l_rec_acct_attrs.array_acct_attr_code(26) := 'ENC_UPG_OPTION';
   l_rec_acct_attrs.array_char_value(26)  := p_source_102;
   l_rec_acct_attrs.array_acct_attr_code(27) := 'ENTERED_CURRENCY_AMOUNT';
   l_rec_acct_attrs.array_num_value(27)  := p_source_57;
   l_rec_acct_attrs.array_acct_attr_code(28) := 'ENTERED_CURRENCY_CODE';
   l_rec_acct_attrs.array_char_value(28)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(29) := 'EXCHANGE_DATE';
   l_rec_acct_attrs.array_date_value(29)  := p_source_39;
   l_rec_acct_attrs.array_acct_attr_code(30) := 'EXCHANGE_RATE';
   l_rec_acct_attrs.array_num_value(30)  := p_source_40;
   l_rec_acct_attrs.array_acct_attr_code(31) := 'EXCHANGE_RATE_TYPE';
   l_rec_acct_attrs.array_char_value(31)  := p_source_41;
   l_rec_acct_attrs.array_acct_attr_code(32) := 'LEDGER_AMOUNT';
   l_rec_acct_attrs.array_num_value(32)  := p_source_99;
   l_rec_acct_attrs.array_acct_attr_code(33) := 'REVERSED_DISTRIBUTION_ID1';
   l_rec_acct_attrs.array_num_value(33)  :=  to_char(p_source_103);
   l_rec_acct_attrs.array_acct_attr_code(34) := 'REVERSED_DISTRIBUTION_ID2';
   l_rec_acct_attrs.array_char_value(34)  := p_source_104;
   l_rec_acct_attrs.array_acct_attr_code(35) := 'REVERSED_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(35)  := p_source_105;
   l_rec_acct_attrs.array_acct_attr_code(36) := 'UPG_CR_ENC_TYPE_ID';
   l_rec_acct_attrs.array_num_value(36)  := p_source_106;
   l_rec_acct_attrs.array_acct_attr_code(37) := 'UPG_DR_ENC_TYPE_ID';
   l_rec_acct_attrs.array_num_value(37)  := p_source_107;

   XLA_AE_LINES_PKG.SetLineAcctAttrs(l_rec_acct_attrs);
   p_gain_or_loss_ref  := XLA_AE_LINES_PKG.g_rec_lines.array_gain_or_loss_ref(XLA_AE_LINES_PKG.g_LineNumber);

   ---------------------------------------------------------------------------------------------------------------
   -- 4336173 -- assign Business Flow Class (replace code in xla_ae_lines_pkg.Business_Flow_Validation)
   ---------------------------------------------------------------------------------------------------------------
   XLA_AE_LINES_PKG.g_rec_lines.array_business_class_code(XLA_AE_LINES_PKG.g_LineNumber) := l_bflow_class_code;

   l_actual_upg_option  := XLA_AE_LINES_PKG.g_rec_lines.array_actual_upg_option(XLA_AE_LINES_PKG.g_LineNumber);
   l_enc_upg_option     := XLA_AE_LINES_PKG.g_rec_lines.array_enc_upg_option(XLA_AE_LINES_PKG.g_LineNumber);

   IF xla_accounting_cache_pkg.GetValueChar
         (p_source_code         => 'LEDGER_CATEGORY_CODE'
         ,p_target_ledger_id    => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id) IN ('PRIMARY','ALC')
   AND l_bflow_method_code = 'PRIOR_ENTRY'
--   AND (l_actual_upg_option = 'Y' OR l_enc_upg_option = 'Y') Bug 4922099
   AND ( (NVL(l_actual_upg_option, 'N') IN ('Y', 'O')) OR
         (NVL(l_enc_upg_option, 'N') IN ('Y', 'O'))
       )
   THEN
         xla_ae_lines_pkg.BflowUpgEntry
           (p_business_method_code    => l_bflow_method_code
           ,p_business_class_code     => l_bflow_class_code
           ,p_balance_type            => l_balance_type_code);
   ELSE
      NULL;
-- No business flow processing for business flow method of NONE.
   END IF;

   --
   -- call analytical criteria
   --
   
   --
   -- call description
   --
   
xla_ae_lines_pkg.SetLineDescription(
   p_ae_header_id => l_ae_header_id
  ,p_description  => Description_3 (
     p_application_id         => p_application_id
   , p_ae_header_id           => l_ae_header_id 
, p_source_2 => p_source_2
, p_source_3 => p_source_3
, p_source_4 => p_source_4
, p_source_5 => p_source_5
   )
);


   --
   -- call ADRs
   -- Bug 4922099
   --
   IF ( (l_bflow_method_code <> 'PRIOR_ENTRY') OR
        (NVL(l_actual_upg_option, 'N') = 'O') OR
        (NVL(l_enc_upg_option, 'N') = 'O')
      )
   THEN
   NULL;
   --
   --
   
  l_ccid := AcctDerRule_13(
           p_application_id           => p_application_id
         , p_ae_header_id             => l_ae_header_id 
, p_source_14 => p_source_14
         , x_transaction_coa_id       => l_adr_transaction_coa_id
         , x_accounting_coa_id        => l_adr_accounting_coa_id
         , x_value_type_code          => l_adr_value_type_code
         , p_side                     => 'NA'
   );

   xla_ae_lines_pkg.set_ccid(
    p_code_combination_id          => l_ccid
  , p_value_type_code              => l_adr_value_type_code
  , p_transaction_coa_id           => l_adr_transaction_coa_id
  , p_accounting_coa_id            => l_adr_accounting_coa_id
  , p_adr_code                     => 'PROJ_PROJ_BURDEN_ENC_ACCT_RULE'
  , p_adr_type_code                => 'S'
  , p_component_type               => l_component_type
  , p_component_code               => l_component_code
  , p_component_type_code          => l_component_type_code
  , p_component_appl_id            => l_component_appl_id
  , p_amb_context_code             => l_amb_context_code
  , p_side                         => 'NA'
  );


   --
   --
   END IF;
   --
   -- Bug 4922099
   IF ( ( (NVL(l_actual_upg_option, 'N') = 'O') OR
          (NVL(l_enc_upg_option, 'N') = 'O')
        ) AND
        (l_bflow_method_code = 'PRIOR_ENTRY')
      )
   THEN
      IF
      --
      1 = 2
      --
      THEN
      xla_accounting_err_pkg.build_message
                                    (p_appli_s_name            => 'XLA'
                                    ,p_msg_name                => 'XLA_UPG_OVERRIDE_ADR_UNDEFINED'
                                    ,p_token_1                 => 'LINE_NUMBER'
                                    ,p_value_1                 => XLA_AE_LINES_PKG.g_LineNumber
                                    ,p_token_2                 => 'LINE_TYPE_NAME'
                                    ,p_value_2                 => XLA_AE_SOURCES_PKG.GetComponentName (
                                                                             l_component_type
                                                                            ,l_component_code
                                                                            ,l_component_type_code
                                                                            ,l_component_appl_id
                                                                            ,l_amb_context_code
                                                                            ,l_entity_code
                                                                            ,l_event_class_code
                                                                           )
                                    ,p_token_3                 => 'OWNER'
                                    ,p_value_3                 => xla_lookups_pkg.get_meaning(
                                                                          p_lookup_type     => 'XLA_OWNER_TYPE'
                                                                          ,p_lookup_code    => l_component_type_code
                                                                         )
                                    ,p_token_4                 => 'PRODUCT_NAME'
                                    ,p_value_4                 => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.application_name
                                    ,p_entity_id               => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.entity_id
                                    ,p_event_id                => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.event_id
                                    ,p_ledger_id               => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id
                                    ,p_ae_header_id            =>  NULL
                                       );

        IF (C_LEVEL_ERROR>= g_log_level) THEN
                 trace
                      (p_msg      => 'ERROR: XLA_UPG_OVERRIDE_ADR_UNDEFINED'
                      ,p_level    => C_LEVEL_ERROR
                      ,p_module   => l_log_module);
        END IF;
      END IF;
   END IF;
   --
   --
   ------------------------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- NOTE: XLA_AE_LINES_PKG.ValidateCurrentLine should NOT be generated if business flow method is
   -- Prior Entry.  Currently, the following code is always generated.
   ------------------------------------------------------------------------------------------------
   XLA_AE_LINES_PKG.ValidateCurrentLine;

   ------------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- Populated credit and debit amounts -- Need to generate this within IF <condition>
   ------------------------------------------------------------------------------------
   XLA_AE_LINES_PKG.SetDebitCreditAmounts;

   ----------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- Update journal entry status -- Need to generate this within IF <condition>
   ----------------------------------------------------------------------------------
   XLA_AE_JOURNAL_ENTRY_PKG.UpdateJournalEntryStatus
         (p_hdr_idx => g_array_event(p_event_id).array_value_num('header_index')
         ,p_balance_type_code => l_balance_type_code
         );

   -------------------------------------------------------------------------------------------
   -- 4262811 - Generate the Accrual Reversal lines
   -------------------------------------------------------------------------------------------
   BEGIN
      l_acc_rev_flag := XLA_AE_HEADER_PKG.g_rec_header_new.array_accrual_reversal_flag
                              (g_array_event(p_event_id).array_value_num('header_index'));
      IF l_acc_rev_flag IS NULL THEN
         l_acc_rev_flag := 'N';
      END IF;
   EXCEPTION
      WHEN OTHERS THEN
         l_acc_rev_flag := 'N';
   END;
   --
   IF (l_acc_rev_flag = 'Y') THEN

       -- 4645092  ------------------------------------------------------------------------------
       -- To allow MPA report to determine if it should generate report process
       XLA_ACCOUNTING_PKG.g_mpa_accrual_exists := 'Y';
       ------------------------------------------------------------------------------------------

       l_accrual_line_num := XLA_AE_LINES_PKG.g_LineNumber;
       XLA_AE_LINES_PKG.CopyLineInfo(l_accrual_line_num);
   -- added call to set_ccid to execute mapping  for secondary accrual reversal entries bug 7444204
   -- call ADRs
   -- Bug 4922099
   --
   IF ( (l_bflow_method_code <> 'PRIOR_ENTRY') OR
        (NVL(l_actual_upg_option, 'N') = 'O') OR
        (NVL(l_enc_upg_option, 'N') = 'O')
      )
   THEN
   NULL;
   --
   --
   
  l_ccid := AcctDerRule_13(
           p_application_id           => p_application_id
         , p_ae_header_id             => l_ae_header_id 
, p_source_14 => p_source_14
         , x_transaction_coa_id       => l_adr_transaction_coa_id
         , x_accounting_coa_id        => l_adr_accounting_coa_id
         , x_value_type_code          => l_adr_value_type_code
         , p_side                     => 'NA'
   );

   xla_ae_lines_pkg.set_ccid(
    p_code_combination_id          => l_ccid
  , p_value_type_code              => l_adr_value_type_code
  , p_transaction_coa_id           => l_adr_transaction_coa_id
  , p_accounting_coa_id            => l_adr_accounting_coa_id
  , p_adr_code                     => 'PROJ_PROJ_BURDEN_ENC_ACCT_RULE'
  , p_adr_type_code                => 'S'
  , p_component_type               => l_component_type
  , p_component_code               => l_component_code
  , p_component_type_code          => l_component_type_code
  , p_component_appl_id            => l_component_appl_id
  , p_amb_context_code             => l_amb_context_code
  , p_side                         => 'NA'
  );


   --
   --
   END IF;

       --
       -- Update the line information that should be overwritten
       --
       XLA_AE_LINES_PKG.set_ae_header_id(p_ae_header_id => p_event_id ,
                                         p_header_num   => 1);
       XLA_AE_LINES_PKG.g_rec_lines.array_header_num(XLA_AE_LINES_PKG.g_LineNumber)  :=1;

       XLA_AE_LINES_PKG.g_rec_lines.array_business_class_code(XLA_AE_LINES_PKG.g_LineNumber) := NULL; -- 4669271

       IF l_bflow_method_code <> 'NONE' THEN  -- 4655713b
          XLA_AE_LINES_PKG.g_rec_lines.array_reversal_code(XLA_AE_LINES_PKG.g_LineNumber) := CONCAT('MPA_',l_bflow_method_code);
       END IF;

      --
      -- Depending on the Reversal Method setup, do a switch side or changes sign for the amounts
      --
      IF (XLA_AE_JOURNAL_ENTRY_PKG.g_cache_ledgers_info.ledger_reversal_option = 'SIDE') THEN
          XLA_AE_LINES_PKG.g_rec_lines.array_natural_side_code(XLA_AE_LINES_PKG.g_LineNumber) :=  l_acc_rev_natural_side_code;
      ELSE
          ---------------------------------------------------------------------------------------------------
          -- 4262811a Switch Sign
          ---------------------------------------------------------------------------------------------------
          XLA_AE_LINES_PKG.g_rec_lines.array_switch_side_flag(XLA_AE_LINES_PKG.g_LineNumber) := 'N';  -- 5052518
          XLA_AE_LINES_PKG.g_rec_lines.array_ledger_amount(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_ledger_amount(XLA_AE_LINES_PKG.g_LineNumber) * -1;
          XLA_AE_LINES_PKG.g_rec_lines.array_entered_amount(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_entered_amount(XLA_AE_LINES_PKG.g_LineNumber) * -1;
          -- 5132302
          XLA_AE_LINES_PKG.g_rec_lines.array_bflow_applied_to_amt(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_bflow_applied_to_amt(XLA_AE_LINES_PKG.g_LineNumber) * -1;

      END IF;

      -- 4955764
      XLA_AE_LINES_PKG.g_rec_lines.array_gl_date(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_HEADER_PKG.g_rec_header_new.array_gl_date(g_array_event(p_event_id).array_value_num('acc_rev_header_index'));


      XLA_AE_LINES_PKG.ValidateCurrentLine;
      XLA_AE_LINES_PKG.SetDebitCreditAmounts;

      XLA_AE_JOURNAL_ENTRY_PKG.UpdateJournalEntryStatus
               (p_hdr_idx           => g_array_event(p_event_id).array_value_num('acc_rev_header_index')
               ,p_balance_type_code => l_balance_type_code);

   END IF;

   -----------------------------------------------------------------------------------------
   -- 4262811 Multiperiod Accounting
   -----------------------------------------------------------------------------------------
     -- No MPA option is assigned.


END IF;
END IF;
--

--
IF (C_LEVEL_PROCEDURE >= g_log_level) THEN
   trace
      (p_msg      => 'END of AcctLineType_91'
      ,p_level    => C_LEVEL_PROCEDURE
      ,p_module   => l_log_module);
END IF;
--
EXCEPTION
  WHEN xla_exceptions_pkg.application_exception THEN
      RAISE;
  WHEN OTHERS THEN
       xla_exceptions_pkg.raise_message
           (p_location => 'XLA_00200_AAD_S_000010_BC_PKG.AcctLineType_91');
END AcctLineType_91;
--

---------------------------------------
--
-- PRIVATE FUNCTION
--         AcctLineType_92
--
---------------------------------------
PROCEDURE AcctLineType_92 (
  p_application_id        IN NUMBER
 ,p_event_id              IN NUMBER
 ,p_calculate_acctd_flag  IN VARCHAR2
 ,p_calculate_g_l_flag    IN VARCHAR2
 ,p_actual_flag           IN OUT VARCHAR2
 ,p_balance_type_code     OUT VARCHAR2
 ,p_gain_or_loss_ref      OUT VARCHAR2
 
--Document Distribution Type
 , p_source_2            IN VARCHAR2
--Project Name
 , p_source_3            IN VARCHAR2
--Task Number
 , p_source_4            IN VARCHAR2
--Expenditure Organization
 , p_source_5            IN NUMBER
--Budget Account
 , p_source_14            IN NUMBER
--Distribution Link Type
 , p_source_21            IN VARCHAR2
--Invoice Distribution Identifier
 , p_source_30            IN NUMBER
--Invoice Currency Code
 , p_source_33            IN VARCHAR2
--Invoice Exchange Date
 , p_source_39            IN DATE
--Invoice Exchange Rate
 , p_source_40            IN NUMBER
--Invoice Exchange Rate Type
 , p_source_41            IN VARCHAR2
--Invoice Distribution Amount
 , p_source_57            IN NUMBER
--Document Type
 , p_source_83            IN VARCHAR2
--Burden Amount Display Method
 , p_source_84            IN VARCHAR2
--Accounting reversal indicator for project invoice burden
 , p_source_85            IN VARCHAR2
--Allocated to Application Identifier
 , p_source_86            IN NUMBER
--Allocated to Distribution Type
 , p_source_87            IN VARCHAR2
--Allocated to Entity Code
 , p_source_88            IN VARCHAR2
--Allocated to First Distribution Identifier
 , p_source_89            IN NUMBER
--Allocated to First System Transaction Identifier
 , p_source_90            IN NUMBER
--Invoice Burden Applied to Application Identifier
 , p_source_91            IN NUMBER
--Invoice Burden Applied to Distribution Type
 , p_source_92            IN VARCHAR2
--Invoice Burden Applied to Entity Code
 , p_source_93            IN VARCHAR2
--Invoice Burden Applied to First Distribution Identifier
 , p_source_94            IN NUMBER
--Invoice Burden Applied to System Transaction Identifier
 , p_source_95            IN NUMBER
--Invoice Distribution Expenditure Type
 , p_source_96            IN VARCHAR2
--Encumbrance Upgrade Credit Accounting Class
 , p_source_97            IN VARCHAR2
--Encumbrance Upgrade Credit Account
 , p_source_98            IN NUMBER
--Invoice Distribution Ledger Amount Before Rounding
 , p_source_99            IN NUMBER
--Encumbrance Upgrade Debit Accounting Class
 , p_source_100            IN VARCHAR2
--Encumbrance Upgrade Debit Account
 , p_source_101            IN NUMBER
--Use Encumbrances Upgrade Attributes Flag
 , p_source_102            IN VARCHAR2
--Accounting reversal first distribution identifier for project invoice burden
 , p_source_103            IN NUMBER
--Invoice Burden Applied to Second Distribution Identifier
 , p_source_104            IN VARCHAR2
--Accounting reversal distribution type for project invoice burden
 , p_source_105            IN VARCHAR2
--Encumbrance Upgrade Credit Encumbrance Type
 , p_source_106            IN NUMBER
--Encumbrance Upgrade Debit Encumbrance Type
 , p_source_107            IN NUMBER
--Burden Record Identifier
 , p_source_108            IN VARCHAR2
 , p_source_108_meaning    IN VARCHAR2
)
IS

l_component_type              VARCHAR2(80);
l_component_code              VARCHAR2(30);
l_component_type_code         VARCHAR2(1);
l_component_appl_id           INTEGER;
l_amb_context_code            VARCHAR2(30);
l_entity_code                 VARCHAR2(30);
l_event_class_code            VARCHAR2(30);
l_ae_header_id                NUMBER;
l_event_type_code             VARCHAR2(30);
l_line_definition_code        VARCHAR2(30);
l_line_definition_owner_code  VARCHAR2(1);
--
-- adr variables
l_segment                     VARCHAR2(30);
l_ccid                        NUMBER;
l_adr_transaction_coa_id      NUMBER;
l_adr_accounting_coa_id       NUMBER;
l_adr_flexfield_segment_code  VARCHAR2(30);
l_adr_flex_value_set_id       NUMBER;
l_adr_value_type_code         VARCHAR2(30);
l_adr_value_combination_id    NUMBER;
l_adr_value_segment_code      VARCHAR2(30);

l_bflow_method_code           VARCHAR2(30);  -- 4219869 Business Flow
l_bflow_class_code            VARCHAR2(30);  -- 4219869 Business Flow
l_inherit_desc_flag           VARCHAR2(1);   -- 4219869 Business Flow
l_budgetary_control_flag      VARCHAR2(1);   -- 4458381 Public Sector Enh

-- 4262811 Variables ------------------------------------------------------------------------------------------
l_entered_amt_idx             NUMBER;
l_accted_amt_idx              NUMBER;
l_acc_rev_flag                VARCHAR2(1);
l_accrual_line_num            NUMBER;
l_tmp_amt                     NUMBER;
l_acc_rev_natural_side_code   VARCHAR2(1);

l_num_entries                 NUMBER;
l_gl_dates                    xla_ae_journal_entry_pkg.t_array_date;
l_accted_amts                 xla_ae_journal_entry_pkg.t_array_num;
l_entered_amts                xla_ae_journal_entry_pkg.t_array_num;
l_period_names                xla_ae_journal_entry_pkg.t_array_V15L;
l_recog_line_1                NUMBER;
l_recog_line_2                NUMBER;

l_bflow_applied_to_amt_idx    NUMBER;                                -- 5132302
l_bflow_applied_to_amt        NUMBER;                                -- 5132302
l_bflow_applied_to_amts       xla_ae_journal_entry_pkg.t_array_num;  -- 5132302

l_event_id                    NUMBER;  -- To handle MPA header Description: xla_ae_header_pkg.SetHdrDescription

--l_rounding_ccy                VARCHAR2(15); -- To handle MPA rounding  4262811b
l_same_currency               BOOLEAN;        -- To handle MPA rounding  4262811b

---------------------------------------------------------------------------------------------------------------


--
-- bulk performance
--
l_balance_type_code           VARCHAR2(1);
l_rec_acct_attrs              XLA_AE_LINES_PKG.t_rec_acct_attrs;
l_log_module                  VARCHAR2(240);

--
-- Upgrade strategy
--
l_actual_upg_option           VARCHAR2(1);
l_enc_upg_option           VARCHAR2(1);

--
BEGIN
--
IF g_log_enabled THEN
      l_log_module := C_DEFAULT_MODULE||'.AcctLineType_92';
END IF;
--
IF (C_LEVEL_PROCEDURE >= g_log_level) THEN

      trace
         (p_msg      => 'BEGIN of AcctLineType_92'
         ,p_level    => C_LEVEL_PROCEDURE
         ,p_module   => l_log_module);

END IF;
--
l_component_type             := 'AMB_JLT';
l_component_code             := 'PREPAY_ENCUMBRANCE';
l_component_type_code        := 'S';
l_component_appl_id          :=  200;
l_amb_context_code           := 'DEFAULT';
l_entity_code                := 'AP_INVOICES';
l_event_class_code           := 'PREPAYMENT_BURDEN';
l_event_type_code            := 'PREPAYMENT_BURDEN_ALL';
l_line_definition_owner_code := 'S';
l_line_definition_code       := 'AP_PREPAY_BURDEN_ENC_ALL';
--
l_balance_type_code          := 'E';
l_segment                     := NULL;
l_ccid                        := NULL;
l_adr_transaction_coa_id      := NULL;
l_adr_accounting_coa_id       := NULL;
l_adr_flexfield_segment_code  := NULL;
l_adr_flex_value_set_id       := NULL;
l_adr_value_type_code         := NULL;
l_adr_value_combination_id    := NULL;
l_adr_value_segment_code      := NULL;

l_bflow_method_code          := 'NONE';   -- 4219869 Business Flow
l_bflow_class_code           := 'AP_PREPAY_PA_ENC';    -- 4219869 Business Flow
l_inherit_desc_flag          := 'N';   -- 4219869 Business Flow
l_budgetary_control_flag     := 'Y';

l_bflow_applied_to_amt_idx   := NULL; -- 5132302
l_bflow_applied_to_amt       := NULL; -- 5132302
l_entered_amt_idx            := NULL;          -- 4262811
l_accted_amt_idx             := NULL;          -- 4262811
l_acc_rev_flag               := NULL;          -- 4262811
l_accrual_line_num           := NULL;          -- 4262811
l_tmp_amt                    := NULL;          -- 4262811
--
 
IF XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id = XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.ledger_id OR
    l_balance_type_code <> 'B' THEN
IF NVL(p_source_83,'
') =  'AP' AND 
(NVL(p_source_2,'
') <>  'PREPAY APPL' OR 
NVL(p_source_2,'
') <>  'TAX DIFF' OR 
NVL(p_source_2,'
') <>  'FINAL APPLICATION ROUNDING') AND 
(NVL(p_source_84,'
') =  'N' OR 
(NVL(p_source_84,'
') =  'D' AND 
NVL(p_source_108,'
') =  'N')
) THEN 

   --
   XLA_AE_LINES_PKG.SetNewLine;

   p_balance_type_code          := l_balance_type_code;
   -- set the flag so later we will know whether the gain loss line needs to be created
   
   IF(l_balance_type_code = 'A' and p_actual_flag is null) THEN
     p_actual_flag :='A';
   END IF;

   --
   -- bulk performance
   --
   XLA_AE_LINES_PKG.set_ae_header_id (p_ae_header_id => p_event_id ,
                                      p_header_num   => 0); -- 4262811
   --
   -- set accounting line options
   --
   l_ae_header_id:= xla_ae_lines_pkg.SetAcctLineOption(
           p_natural_side_code          => 'D'
         , p_gain_or_loss_flag          => 'N'
         , p_gl_transfer_mode_code      => 'S'
         , p_acct_entry_type_code       => 'E'
         , p_switch_side_flag           => 'Y'
         , p_merge_duplicate_code       => 'N'
         );
   --
   l_acc_rev_natural_side_code := 'C';  -- 4262811
   -- 
   --
   -- set accounting line type info
   --
   xla_ae_lines_pkg.SetAcctLineType
      (p_component_type             => l_component_type
      ,p_event_type_code            => l_event_type_code
      ,p_line_definition_owner_code => l_line_definition_owner_code
      ,p_line_definition_code       => l_line_definition_code
      ,p_accounting_line_code       => l_component_code
      ,p_accounting_line_type_code  => l_component_type_code
      ,p_accounting_line_appl_id    => l_component_appl_id
      ,p_amb_context_code           => l_amb_context_code
      ,p_entity_code                => l_entity_code
      ,p_event_class_code           => l_event_class_code);
   --
   -- set accounting class
   --
   xla_ae_lines_pkg.SetAcctClass(
           p_accounting_class_code  => 'AP_PREPAY_BURDEN'
         , p_ae_header_id           => l_ae_header_id
         );

   --
   -- set rounding class
   --
   XLA_AE_LINES_PKG.g_rec_lines.array_rounding_class(XLA_AE_LINES_PKG.g_LineNumber) :=
                      'AP_PREPAY_BURDEN';

   --
   xla_ae_lines_pkg.g_rec_lines.array_calculate_acctd_flag(xla_ae_lines_pkg.g_LineNumber) := p_calculate_acctd_flag;
   xla_ae_lines_pkg.g_rec_lines.array_calculate_g_l_flag(xla_ae_lines_pkg.g_LineNumber) := p_calculate_g_l_flag;
   --
   -- bulk performance
   --
   XLA_AE_LINES_PKG.g_rec_lines.array_balance_type_code(XLA_AE_LINES_PKG.g_LineNumber) := l_balance_type_code;

   XLA_AE_LINES_PKG.g_rec_lines.array_ledger_id(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id;

   -- 4955764
   XLA_AE_LINES_PKG.g_rec_lines.array_gl_date(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_HEADER_PKG.g_rec_header_new.array_gl_date(g_array_event(p_event_id).array_value_num('header_index'));

   -- 4458381 Public Sector Enh
      XLA_AE_LINES_PKG.g_rec_lines.array_encumbrance_type_id(XLA_AE_LINES_PKG.g_LineNumber) := 1060;
   --
   -- set accounting attributes for the line type
   --
   l_entered_amt_idx := 27;
   l_accted_amt_idx  := 32;
   l_bflow_applied_to_amt_idx  := NULL;  -- 5132302
   l_rec_acct_attrs.array_acct_attr_code(1) := 'ACCOUNTING_REVERSAL_OPTION';
   l_rec_acct_attrs.array_char_value(1)  := p_source_85;
   l_rec_acct_attrs.array_acct_attr_code(2) := 'ALLOC_TO_APPLICATION_ID';
   l_rec_acct_attrs.array_num_value(2)  := p_source_86;
   l_rec_acct_attrs.array_acct_attr_code(3) := 'ALLOC_TO_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(3)  := p_source_87;
   l_rec_acct_attrs.array_acct_attr_code(4) := 'ALLOC_TO_ENTITY_CODE';
   l_rec_acct_attrs.array_char_value(4)  := p_source_88;
   l_rec_acct_attrs.array_acct_attr_code(5) := 'ALLOC_TO_FIRST_DIST_ID';
   l_rec_acct_attrs.array_num_value(5)  :=  to_char(p_source_89);
   l_rec_acct_attrs.array_acct_attr_code(6) := 'ALLOC_TO_FIRST_SYS_TRAN_ID';
   l_rec_acct_attrs.array_num_value(6)  :=  to_char(p_source_90);
   l_rec_acct_attrs.array_acct_attr_code(7) := 'APPLIED_TO_APPLICATION_ID';
   l_rec_acct_attrs.array_num_value(7)  := p_source_91;
   l_rec_acct_attrs.array_acct_attr_code(8) := 'APPLIED_TO_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(8)  := p_source_92;
   l_rec_acct_attrs.array_acct_attr_code(9) := 'APPLIED_TO_ENTITY_CODE';
   l_rec_acct_attrs.array_char_value(9)  := p_source_93;
   l_rec_acct_attrs.array_acct_attr_code(10) := 'APPLIED_TO_FIRST_DIST_ID';
   l_rec_acct_attrs.array_num_value(10)  :=  to_char(p_source_94);
   l_rec_acct_attrs.array_acct_attr_code(11) := 'APPLIED_TO_FIRST_SYS_TRAN_ID';
   l_rec_acct_attrs.array_num_value(11)  :=  to_char(p_source_95);
   l_rec_acct_attrs.array_acct_attr_code(12) := 'APPLIED_TO_SECOND_DIST_ID';
   l_rec_acct_attrs.array_char_value(12)  := p_source_104;
   l_rec_acct_attrs.array_acct_attr_code(13) := 'DISTRIBUTION_IDENTIFIER_1';
   l_rec_acct_attrs.array_num_value(13)  :=  to_char(p_source_30);
   l_rec_acct_attrs.array_acct_attr_code(14) := 'DISTRIBUTION_IDENTIFIER_2';
   l_rec_acct_attrs.array_char_value(14)  := p_source_96;
   l_rec_acct_attrs.array_acct_attr_code(15) := 'DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(15)  := p_source_21;
   l_rec_acct_attrs.array_acct_attr_code(16) := 'ENC_UPG_CR_ACCT_CLASS';
   l_rec_acct_attrs.array_char_value(16)  := p_source_97;
   l_rec_acct_attrs.array_acct_attr_code(17) := 'ENC_UPG_CR_CCID';
   l_rec_acct_attrs.array_num_value(17)  := p_source_98;
   l_rec_acct_attrs.array_acct_attr_code(18) := 'ENC_UPG_CR_ENTERED_AMT';
   l_rec_acct_attrs.array_num_value(18)  := p_source_57;
   l_rec_acct_attrs.array_acct_attr_code(19) := 'ENC_UPG_CR_ENTERED_CURR';
   l_rec_acct_attrs.array_char_value(19)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(20) := 'ENC_UPG_CR_LEDGER_AMT';
   l_rec_acct_attrs.array_num_value(20)  := p_source_99;
   l_rec_acct_attrs.array_acct_attr_code(21) := 'ENC_UPG_DR_ACCT_CLASS';
   l_rec_acct_attrs.array_char_value(21)  := p_source_100;
   l_rec_acct_attrs.array_acct_attr_code(22) := 'ENC_UPG_DR_CCID';
   l_rec_acct_attrs.array_num_value(22)  := p_source_101;
   l_rec_acct_attrs.array_acct_attr_code(23) := 'ENC_UPG_DR_ENTERED_AMT';
   l_rec_acct_attrs.array_num_value(23)  := p_source_57;
   l_rec_acct_attrs.array_acct_attr_code(24) := 'ENC_UPG_DR_ENTERED_CURR';
   l_rec_acct_attrs.array_char_value(24)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(25) := 'ENC_UPG_DR_LEDGER_AMT';
   l_rec_acct_attrs.array_num_value(25)  := p_source_99;
   l_rec_acct_attrs.array_acct_attr_code(26) := 'ENC_UPG_OPTION';
   l_rec_acct_attrs.array_char_value(26)  := p_source_102;
   l_rec_acct_attrs.array_acct_attr_code(27) := 'ENTERED_CURRENCY_AMOUNT';
   l_rec_acct_attrs.array_num_value(27)  := p_source_57;
   l_rec_acct_attrs.array_acct_attr_code(28) := 'ENTERED_CURRENCY_CODE';
   l_rec_acct_attrs.array_char_value(28)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(29) := 'EXCHANGE_DATE';
   l_rec_acct_attrs.array_date_value(29)  := p_source_39;
   l_rec_acct_attrs.array_acct_attr_code(30) := 'EXCHANGE_RATE';
   l_rec_acct_attrs.array_num_value(30)  := p_source_40;
   l_rec_acct_attrs.array_acct_attr_code(31) := 'EXCHANGE_RATE_TYPE';
   l_rec_acct_attrs.array_char_value(31)  := p_source_41;
   l_rec_acct_attrs.array_acct_attr_code(32) := 'LEDGER_AMOUNT';
   l_rec_acct_attrs.array_num_value(32)  := p_source_99;
   l_rec_acct_attrs.array_acct_attr_code(33) := 'REVERSED_DISTRIBUTION_ID1';
   l_rec_acct_attrs.array_num_value(33)  :=  to_char(p_source_103);
   l_rec_acct_attrs.array_acct_attr_code(34) := 'REVERSED_DISTRIBUTION_ID2';
   l_rec_acct_attrs.array_char_value(34)  := p_source_104;
   l_rec_acct_attrs.array_acct_attr_code(35) := 'REVERSED_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(35)  := p_source_105;
   l_rec_acct_attrs.array_acct_attr_code(36) := 'UPG_CR_ENC_TYPE_ID';
   l_rec_acct_attrs.array_num_value(36)  := p_source_106;
   l_rec_acct_attrs.array_acct_attr_code(37) := 'UPG_DR_ENC_TYPE_ID';
   l_rec_acct_attrs.array_num_value(37)  := p_source_107;

   XLA_AE_LINES_PKG.SetLineAcctAttrs(l_rec_acct_attrs);
   p_gain_or_loss_ref  := XLA_AE_LINES_PKG.g_rec_lines.array_gain_or_loss_ref(XLA_AE_LINES_PKG.g_LineNumber);

   ---------------------------------------------------------------------------------------------------------------
   -- 4336173 -- assign Business Flow Class (replace code in xla_ae_lines_pkg.Business_Flow_Validation)
   ---------------------------------------------------------------------------------------------------------------
   XLA_AE_LINES_PKG.g_rec_lines.array_business_class_code(XLA_AE_LINES_PKG.g_LineNumber) := l_bflow_class_code;

   l_actual_upg_option  := XLA_AE_LINES_PKG.g_rec_lines.array_actual_upg_option(XLA_AE_LINES_PKG.g_LineNumber);
   l_enc_upg_option     := XLA_AE_LINES_PKG.g_rec_lines.array_enc_upg_option(XLA_AE_LINES_PKG.g_LineNumber);

   IF xla_accounting_cache_pkg.GetValueChar
         (p_source_code         => 'LEDGER_CATEGORY_CODE'
         ,p_target_ledger_id    => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id) IN ('PRIMARY','ALC')
   AND l_bflow_method_code = 'PRIOR_ENTRY'
--   AND (l_actual_upg_option = 'Y' OR l_enc_upg_option = 'Y') Bug 4922099
   AND ( (NVL(l_actual_upg_option, 'N') IN ('Y', 'O')) OR
         (NVL(l_enc_upg_option, 'N') IN ('Y', 'O'))
       )
   THEN
         xla_ae_lines_pkg.BflowUpgEntry
           (p_business_method_code    => l_bflow_method_code
           ,p_business_class_code     => l_bflow_class_code
           ,p_balance_type            => l_balance_type_code);
   ELSE
      NULL;
-- No business flow processing for business flow method of NONE.
   END IF;

   --
   -- call analytical criteria
   --
   
   --
   -- call description
   --
   
xla_ae_lines_pkg.SetLineDescription(
   p_ae_header_id => l_ae_header_id
  ,p_description  => Description_3 (
     p_application_id         => p_application_id
   , p_ae_header_id           => l_ae_header_id 
, p_source_2 => p_source_2
, p_source_3 => p_source_3
, p_source_4 => p_source_4
, p_source_5 => p_source_5
   )
);


   --
   -- call ADRs
   -- Bug 4922099
   --
   IF ( (l_bflow_method_code <> 'PRIOR_ENTRY') OR
        (NVL(l_actual_upg_option, 'N') = 'O') OR
        (NVL(l_enc_upg_option, 'N') = 'O')
      )
   THEN
   NULL;
   --
   --
   
  l_ccid := AcctDerRule_12(
           p_application_id           => p_application_id
         , p_ae_header_id             => l_ae_header_id 
, p_source_14 => p_source_14
         , x_transaction_coa_id       => l_adr_transaction_coa_id
         , x_accounting_coa_id        => l_adr_accounting_coa_id
         , x_value_type_code          => l_adr_value_type_code
         , p_side                     => 'NA'
   );

   xla_ae_lines_pkg.set_ccid(
    p_code_combination_id          => l_ccid
  , p_value_type_code              => l_adr_value_type_code
  , p_transaction_coa_id           => l_adr_transaction_coa_id
  , p_accounting_coa_id            => l_adr_accounting_coa_id
  , p_adr_code                     => 'PROJ_PREPAY_ENC_ACCT_RULE'
  , p_adr_type_code                => 'S'
  , p_component_type               => l_component_type
  , p_component_code               => l_component_code
  , p_component_type_code          => l_component_type_code
  , p_component_appl_id            => l_component_appl_id
  , p_amb_context_code             => l_amb_context_code
  , p_side                         => 'NA'
  );


   --
   --
   END IF;
   --
   -- Bug 4922099
   IF ( ( (NVL(l_actual_upg_option, 'N') = 'O') OR
          (NVL(l_enc_upg_option, 'N') = 'O')
        ) AND
        (l_bflow_method_code = 'PRIOR_ENTRY')
      )
   THEN
      IF
      --
      1 = 2
      --
      THEN
      xla_accounting_err_pkg.build_message
                                    (p_appli_s_name            => 'XLA'
                                    ,p_msg_name                => 'XLA_UPG_OVERRIDE_ADR_UNDEFINED'
                                    ,p_token_1                 => 'LINE_NUMBER'
                                    ,p_value_1                 => XLA_AE_LINES_PKG.g_LineNumber
                                    ,p_token_2                 => 'LINE_TYPE_NAME'
                                    ,p_value_2                 => XLA_AE_SOURCES_PKG.GetComponentName (
                                                                             l_component_type
                                                                            ,l_component_code
                                                                            ,l_component_type_code
                                                                            ,l_component_appl_id
                                                                            ,l_amb_context_code
                                                                            ,l_entity_code
                                                                            ,l_event_class_code
                                                                           )
                                    ,p_token_3                 => 'OWNER'
                                    ,p_value_3                 => xla_lookups_pkg.get_meaning(
                                                                          p_lookup_type     => 'XLA_OWNER_TYPE'
                                                                          ,p_lookup_code    => l_component_type_code
                                                                         )
                                    ,p_token_4                 => 'PRODUCT_NAME'
                                    ,p_value_4                 => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.application_name
                                    ,p_entity_id               => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.entity_id
                                    ,p_event_id                => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.event_id
                                    ,p_ledger_id               => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id
                                    ,p_ae_header_id            =>  NULL
                                       );

        IF (C_LEVEL_ERROR>= g_log_level) THEN
                 trace
                      (p_msg      => 'ERROR: XLA_UPG_OVERRIDE_ADR_UNDEFINED'
                      ,p_level    => C_LEVEL_ERROR
                      ,p_module   => l_log_module);
        END IF;
      END IF;
   END IF;
   --
   --
   ------------------------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- NOTE: XLA_AE_LINES_PKG.ValidateCurrentLine should NOT be generated if business flow method is
   -- Prior Entry.  Currently, the following code is always generated.
   ------------------------------------------------------------------------------------------------
   XLA_AE_LINES_PKG.ValidateCurrentLine;

   ------------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- Populated credit and debit amounts -- Need to generate this within IF <condition>
   ------------------------------------------------------------------------------------
   XLA_AE_LINES_PKG.SetDebitCreditAmounts;

   ----------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- Update journal entry status -- Need to generate this within IF <condition>
   ----------------------------------------------------------------------------------
   XLA_AE_JOURNAL_ENTRY_PKG.UpdateJournalEntryStatus
         (p_hdr_idx => g_array_event(p_event_id).array_value_num('header_index')
         ,p_balance_type_code => l_balance_type_code
         );

   -------------------------------------------------------------------------------------------
   -- 4262811 - Generate the Accrual Reversal lines
   -------------------------------------------------------------------------------------------
   BEGIN
      l_acc_rev_flag := XLA_AE_HEADER_PKG.g_rec_header_new.array_accrual_reversal_flag
                              (g_array_event(p_event_id).array_value_num('header_index'));
      IF l_acc_rev_flag IS NULL THEN
         l_acc_rev_flag := 'N';
      END IF;
   EXCEPTION
      WHEN OTHERS THEN
         l_acc_rev_flag := 'N';
   END;
   --
   IF (l_acc_rev_flag = 'Y') THEN

       -- 4645092  ------------------------------------------------------------------------------
       -- To allow MPA report to determine if it should generate report process
       XLA_ACCOUNTING_PKG.g_mpa_accrual_exists := 'Y';
       ------------------------------------------------------------------------------------------

       l_accrual_line_num := XLA_AE_LINES_PKG.g_LineNumber;
       XLA_AE_LINES_PKG.CopyLineInfo(l_accrual_line_num);
   -- added call to set_ccid to execute mapping  for secondary accrual reversal entries bug 7444204
   -- call ADRs
   -- Bug 4922099
   --
   IF ( (l_bflow_method_code <> 'PRIOR_ENTRY') OR
        (NVL(l_actual_upg_option, 'N') = 'O') OR
        (NVL(l_enc_upg_option, 'N') = 'O')
      )
   THEN
   NULL;
   --
   --
   
  l_ccid := AcctDerRule_12(
           p_application_id           => p_application_id
         , p_ae_header_id             => l_ae_header_id 
, p_source_14 => p_source_14
         , x_transaction_coa_id       => l_adr_transaction_coa_id
         , x_accounting_coa_id        => l_adr_accounting_coa_id
         , x_value_type_code          => l_adr_value_type_code
         , p_side                     => 'NA'
   );

   xla_ae_lines_pkg.set_ccid(
    p_code_combination_id          => l_ccid
  , p_value_type_code              => l_adr_value_type_code
  , p_transaction_coa_id           => l_adr_transaction_coa_id
  , p_accounting_coa_id            => l_adr_accounting_coa_id
  , p_adr_code                     => 'PROJ_PREPAY_ENC_ACCT_RULE'
  , p_adr_type_code                => 'S'
  , p_component_type               => l_component_type
  , p_component_code               => l_component_code
  , p_component_type_code          => l_component_type_code
  , p_component_appl_id            => l_component_appl_id
  , p_amb_context_code             => l_amb_context_code
  , p_side                         => 'NA'
  );


   --
   --
   END IF;

       --
       -- Update the line information that should be overwritten
       --
       XLA_AE_LINES_PKG.set_ae_header_id(p_ae_header_id => p_event_id ,
                                         p_header_num   => 1);
       XLA_AE_LINES_PKG.g_rec_lines.array_header_num(XLA_AE_LINES_PKG.g_LineNumber)  :=1;

       XLA_AE_LINES_PKG.g_rec_lines.array_business_class_code(XLA_AE_LINES_PKG.g_LineNumber) := NULL; -- 4669271

       IF l_bflow_method_code <> 'NONE' THEN  -- 4655713b
          XLA_AE_LINES_PKG.g_rec_lines.array_reversal_code(XLA_AE_LINES_PKG.g_LineNumber) := CONCAT('MPA_',l_bflow_method_code);
       END IF;

      --
      -- Depending on the Reversal Method setup, do a switch side or changes sign for the amounts
      --
      IF (XLA_AE_JOURNAL_ENTRY_PKG.g_cache_ledgers_info.ledger_reversal_option = 'SIDE') THEN
          XLA_AE_LINES_PKG.g_rec_lines.array_natural_side_code(XLA_AE_LINES_PKG.g_LineNumber) :=  l_acc_rev_natural_side_code;
      ELSE
          ---------------------------------------------------------------------------------------------------
          -- 4262811a Switch Sign
          ---------------------------------------------------------------------------------------------------
          XLA_AE_LINES_PKG.g_rec_lines.array_switch_side_flag(XLA_AE_LINES_PKG.g_LineNumber) := 'N';  -- 5052518
          XLA_AE_LINES_PKG.g_rec_lines.array_ledger_amount(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_ledger_amount(XLA_AE_LINES_PKG.g_LineNumber) * -1;
          XLA_AE_LINES_PKG.g_rec_lines.array_entered_amount(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_entered_amount(XLA_AE_LINES_PKG.g_LineNumber) * -1;
          -- 5132302
          XLA_AE_LINES_PKG.g_rec_lines.array_bflow_applied_to_amt(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_bflow_applied_to_amt(XLA_AE_LINES_PKG.g_LineNumber) * -1;

      END IF;

      -- 4955764
      XLA_AE_LINES_PKG.g_rec_lines.array_gl_date(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_HEADER_PKG.g_rec_header_new.array_gl_date(g_array_event(p_event_id).array_value_num('acc_rev_header_index'));


      XLA_AE_LINES_PKG.ValidateCurrentLine;
      XLA_AE_LINES_PKG.SetDebitCreditAmounts;

      XLA_AE_JOURNAL_ENTRY_PKG.UpdateJournalEntryStatus
               (p_hdr_idx           => g_array_event(p_event_id).array_value_num('acc_rev_header_index')
               ,p_balance_type_code => l_balance_type_code);

   END IF;

   -----------------------------------------------------------------------------------------
   -- 4262811 Multiperiod Accounting
   -----------------------------------------------------------------------------------------
     -- No MPA option is assigned.


END IF;
END IF;
--

--
IF (C_LEVEL_PROCEDURE >= g_log_level) THEN
   trace
      (p_msg      => 'END of AcctLineType_92'
      ,p_level    => C_LEVEL_PROCEDURE
      ,p_module   => l_log_module);
END IF;
--
EXCEPTION
  WHEN xla_exceptions_pkg.application_exception THEN
      RAISE;
  WHEN OTHERS THEN
       xla_exceptions_pkg.raise_message
           (p_location => 'XLA_00200_AAD_S_000010_BC_PKG.AcctLineType_92');
END AcctLineType_92;
--

---------------------------------------
--
-- PRIVATE FUNCTION
--         AcctLineType_93
--
---------------------------------------
PROCEDURE AcctLineType_93 (
  p_application_id        IN NUMBER
 ,p_event_id              IN NUMBER
 ,p_calculate_acctd_flag  IN VARCHAR2
 ,p_calculate_g_l_flag    IN VARCHAR2
 ,p_actual_flag           IN OUT VARCHAR2
 ,p_balance_type_code     OUT VARCHAR2
 ,p_gain_or_loss_ref      OUT VARCHAR2
 
--Document Distribution Type
 , p_source_2            IN VARCHAR2
--Project Name
 , p_source_3            IN VARCHAR2
--Task Number
 , p_source_4            IN VARCHAR2
--Expenditure Organization
 , p_source_5            IN NUMBER
--Distribution Link Type
 , p_source_21            IN VARCHAR2
--Invoice Distribution Identifier
 , p_source_30            IN NUMBER
--Invoice Currency Code
 , p_source_33            IN VARCHAR2
--Invoice Distribution Amount
 , p_source_57            IN NUMBER
--Document Type
 , p_source_83            IN VARCHAR2
--Accounting reversal indicator for project invoice burden
 , p_source_85            IN VARCHAR2
--Allocated to Application Identifier
 , p_source_86            IN NUMBER
--Allocated to Distribution Type
 , p_source_87            IN VARCHAR2
--Allocated to Entity Code
 , p_source_88            IN VARCHAR2
--Allocated to First Distribution Identifier
 , p_source_89            IN NUMBER
--Allocated to First System Transaction Identifier
 , p_source_90            IN NUMBER
--Invoice Distribution Expenditure Type
 , p_source_96            IN VARCHAR2
--Encumbrance Upgrade Credit Accounting Class
 , p_source_97            IN VARCHAR2
--Encumbrance Upgrade Credit Account
 , p_source_98            IN NUMBER
--Invoice Distribution Ledger Amount Before Rounding
 , p_source_99            IN NUMBER
--Encumbrance Upgrade Debit Accounting Class
 , p_source_100            IN VARCHAR2
--Encumbrance Upgrade Debit Account
 , p_source_101            IN NUMBER
--Use Encumbrances Upgrade Attributes Flag
 , p_source_102            IN VARCHAR2
--Accounting reversal first distribution identifier for project invoice burden
 , p_source_103            IN NUMBER
--Invoice Burden Applied to Second Distribution Identifier
 , p_source_104            IN VARCHAR2
--Accounting reversal distribution type for project invoice burden
 , p_source_105            IN VARCHAR2
--Encumbrance Upgrade Credit Encumbrance Type
 , p_source_106            IN NUMBER
--Encumbrance Upgrade Debit Encumbrance Type
 , p_source_107            IN NUMBER
--Project Encumbrance Applied to Application Identifier
 , p_source_109            IN NUMBER
--Project Encumbrance Applied to Distribution Type
 , p_source_110            IN VARCHAR2
--Project Encumbrance Applied to Entity Code
 , p_source_111            IN VARCHAR2
--Project Encumbrance First Distribution Identifier
 , p_source_112            IN NUMBER
--Project Encumbrance First System Transaction Identifier
 , p_source_113            IN NUMBER
--Project Encumbrance Second Distribution Identifier
 , p_source_114            IN VARCHAR2
)
IS

l_component_type              VARCHAR2(80);
l_component_code              VARCHAR2(30);
l_component_type_code         VARCHAR2(1);
l_component_appl_id           INTEGER;
l_amb_context_code            VARCHAR2(30);
l_entity_code                 VARCHAR2(30);
l_event_class_code            VARCHAR2(30);
l_ae_header_id                NUMBER;
l_event_type_code             VARCHAR2(30);
l_line_definition_code        VARCHAR2(30);
l_line_definition_owner_code  VARCHAR2(1);
--
-- adr variables
l_segment                     VARCHAR2(30);
l_ccid                        NUMBER;
l_adr_transaction_coa_id      NUMBER;
l_adr_accounting_coa_id       NUMBER;
l_adr_flexfield_segment_code  VARCHAR2(30);
l_adr_flex_value_set_id       NUMBER;
l_adr_value_type_code         VARCHAR2(30);
l_adr_value_combination_id    NUMBER;
l_adr_value_segment_code      VARCHAR2(30);

l_bflow_method_code           VARCHAR2(30);  -- 4219869 Business Flow
l_bflow_class_code            VARCHAR2(30);  -- 4219869 Business Flow
l_inherit_desc_flag           VARCHAR2(1);   -- 4219869 Business Flow
l_budgetary_control_flag      VARCHAR2(1);   -- 4458381 Public Sector Enh

-- 4262811 Variables ------------------------------------------------------------------------------------------
l_entered_amt_idx             NUMBER;
l_accted_amt_idx              NUMBER;
l_acc_rev_flag                VARCHAR2(1);
l_accrual_line_num            NUMBER;
l_tmp_amt                     NUMBER;
l_acc_rev_natural_side_code   VARCHAR2(1);

l_num_entries                 NUMBER;
l_gl_dates                    xla_ae_journal_entry_pkg.t_array_date;
l_accted_amts                 xla_ae_journal_entry_pkg.t_array_num;
l_entered_amts                xla_ae_journal_entry_pkg.t_array_num;
l_period_names                xla_ae_journal_entry_pkg.t_array_V15L;
l_recog_line_1                NUMBER;
l_recog_line_2                NUMBER;

l_bflow_applied_to_amt_idx    NUMBER;                                -- 5132302
l_bflow_applied_to_amt        NUMBER;                                -- 5132302
l_bflow_applied_to_amts       xla_ae_journal_entry_pkg.t_array_num;  -- 5132302

l_event_id                    NUMBER;  -- To handle MPA header Description: xla_ae_header_pkg.SetHdrDescription

--l_rounding_ccy                VARCHAR2(15); -- To handle MPA rounding  4262811b
l_same_currency               BOOLEAN;        -- To handle MPA rounding  4262811b

---------------------------------------------------------------------------------------------------------------


--
-- bulk performance
--
l_balance_type_code           VARCHAR2(1);
l_rec_acct_attrs              XLA_AE_LINES_PKG.t_rec_acct_attrs;
l_log_module                  VARCHAR2(240);

--
-- Upgrade strategy
--
l_actual_upg_option           VARCHAR2(1);
l_enc_upg_option           VARCHAR2(1);

--
BEGIN
--
IF g_log_enabled THEN
      l_log_module := C_DEFAULT_MODULE||'.AcctLineType_93';
END IF;
--
IF (C_LEVEL_PROCEDURE >= g_log_level) THEN

      trace
         (p_msg      => 'BEGIN of AcctLineType_93'
         ,p_level    => C_LEVEL_PROCEDURE
         ,p_module   => l_log_module);

END IF;
--
l_component_type             := 'AMB_JLT';
l_component_code             := 'RELIEVE_PROJ_ENC';
l_component_type_code        := 'S';
l_component_appl_id          :=  200;
l_amb_context_code           := 'DEFAULT';
l_entity_code                := 'AP_INVOICES';
l_event_class_code           := 'INVOICE_BURDEN';
l_event_type_code            := 'INVOICE_BURDEN_ALL';
l_line_definition_owner_code := 'S';
l_line_definition_code       := 'AP_INV_BURDEN_ENC_ALL';
--
l_balance_type_code          := 'E';
l_segment                     := NULL;
l_ccid                        := NULL;
l_adr_transaction_coa_id      := NULL;
l_adr_accounting_coa_id       := NULL;
l_adr_flexfield_segment_code  := NULL;
l_adr_flex_value_set_id       := NULL;
l_adr_value_type_code         := NULL;
l_adr_value_combination_id    := NULL;
l_adr_value_segment_code      := NULL;

l_bflow_method_code          := 'PRIOR_ENTRY';   -- 4219869 Business Flow
l_bflow_class_code           := 'PA_BUDGET_ENC';    -- 4219869 Business Flow
l_inherit_desc_flag          := 'N';   -- 4219869 Business Flow
l_budgetary_control_flag     := 'Y';

l_bflow_applied_to_amt_idx   := NULL; -- 5132302
l_bflow_applied_to_amt       := NULL; -- 5132302
l_entered_amt_idx            := NULL;          -- 4262811
l_accted_amt_idx             := NULL;          -- 4262811
l_acc_rev_flag               := NULL;          -- 4262811
l_accrual_line_num           := NULL;          -- 4262811
l_tmp_amt                    := NULL;          -- 4262811
--
 
IF XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id = XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.ledger_id OR
    l_balance_type_code <> 'B' THEN
IF NVL(p_source_83,'
') =  'AP'
 THEN 

   --
   XLA_AE_LINES_PKG.SetNewLine;

   p_balance_type_code          := l_balance_type_code;
   -- set the flag so later we will know whether the gain loss line needs to be created
   
   IF(l_balance_type_code = 'A' and p_actual_flag is null) THEN
     p_actual_flag :='A';
   END IF;

   --
   -- bulk performance
   --
   XLA_AE_LINES_PKG.set_ae_header_id (p_ae_header_id => p_event_id ,
                                      p_header_num   => 0); -- 4262811
   --
   -- set accounting line options
   --
   l_ae_header_id:= xla_ae_lines_pkg.SetAcctLineOption(
           p_natural_side_code          => 'C'
         , p_gain_or_loss_flag          => 'N'
         , p_gl_transfer_mode_code      => 'S'
         , p_acct_entry_type_code       => 'E'
         , p_switch_side_flag           => 'Y'
         , p_merge_duplicate_code       => 'N'
         );
   --
   l_acc_rev_natural_side_code := 'D';  -- 4262811
   -- 
   --
   -- set accounting line type info
   --
   xla_ae_lines_pkg.SetAcctLineType
      (p_component_type             => l_component_type
      ,p_event_type_code            => l_event_type_code
      ,p_line_definition_owner_code => l_line_definition_owner_code
      ,p_line_definition_code       => l_line_definition_code
      ,p_accounting_line_code       => l_component_code
      ,p_accounting_line_type_code  => l_component_type_code
      ,p_accounting_line_appl_id    => l_component_appl_id
      ,p_amb_context_code           => l_amb_context_code
      ,p_entity_code                => l_entity_code
      ,p_event_class_code           => l_event_class_code);
   --
   -- set accounting class
   --
   xla_ae_lines_pkg.SetAcctClass(
           p_accounting_class_code  => 'PA_BUDGET_ENC'
         , p_ae_header_id           => l_ae_header_id
         );

   --
   -- set rounding class
   --
   XLA_AE_LINES_PKG.g_rec_lines.array_rounding_class(XLA_AE_LINES_PKG.g_LineNumber) :=
                      'PA_BUDGET_ENC';

   --
   xla_ae_lines_pkg.g_rec_lines.array_calculate_acctd_flag(xla_ae_lines_pkg.g_LineNumber) := p_calculate_acctd_flag;
   xla_ae_lines_pkg.g_rec_lines.array_calculate_g_l_flag(xla_ae_lines_pkg.g_LineNumber) := p_calculate_g_l_flag;
   --
   -- bulk performance
   --
   XLA_AE_LINES_PKG.g_rec_lines.array_balance_type_code(XLA_AE_LINES_PKG.g_LineNumber) := l_balance_type_code;

   XLA_AE_LINES_PKG.g_rec_lines.array_ledger_id(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id;

   -- 4955764
   XLA_AE_LINES_PKG.g_rec_lines.array_gl_date(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_HEADER_PKG.g_rec_header_new.array_gl_date(g_array_event(p_event_id).array_value_num('header_index'));

   -- 4458381 Public Sector Enh
   
   --
   -- set accounting attributes for the line type
   --
   l_entered_amt_idx := 27;
   l_accted_amt_idx  := 29;
   l_bflow_applied_to_amt_idx  := NULL;  -- 5132302
   l_rec_acct_attrs.array_acct_attr_code(1) := 'ACCOUNTING_REVERSAL_OPTION';
   l_rec_acct_attrs.array_char_value(1)  := p_source_85;
   l_rec_acct_attrs.array_acct_attr_code(2) := 'ALLOC_TO_APPLICATION_ID';
   l_rec_acct_attrs.array_num_value(2)  := p_source_86;
   l_rec_acct_attrs.array_acct_attr_code(3) := 'ALLOC_TO_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(3)  := p_source_87;
   l_rec_acct_attrs.array_acct_attr_code(4) := 'ALLOC_TO_ENTITY_CODE';
   l_rec_acct_attrs.array_char_value(4)  := p_source_88;
   l_rec_acct_attrs.array_acct_attr_code(5) := 'ALLOC_TO_FIRST_DIST_ID';
   l_rec_acct_attrs.array_num_value(5)  :=  to_char(p_source_89);
   l_rec_acct_attrs.array_acct_attr_code(6) := 'ALLOC_TO_FIRST_SYS_TRAN_ID';
   l_rec_acct_attrs.array_num_value(6)  :=  to_char(p_source_90);
   l_rec_acct_attrs.array_acct_attr_code(7) := 'APPLIED_TO_APPLICATION_ID';
   l_rec_acct_attrs.array_num_value(7)  := p_source_109;
   l_rec_acct_attrs.array_acct_attr_code(8) := 'APPLIED_TO_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(8)  := p_source_110;
   l_rec_acct_attrs.array_acct_attr_code(9) := 'APPLIED_TO_ENTITY_CODE';
   l_rec_acct_attrs.array_char_value(9)  := p_source_111;
   l_rec_acct_attrs.array_acct_attr_code(10) := 'APPLIED_TO_FIRST_DIST_ID';
   l_rec_acct_attrs.array_num_value(10)  :=  to_char(p_source_112);
   l_rec_acct_attrs.array_acct_attr_code(11) := 'APPLIED_TO_FIRST_SYS_TRAN_ID';
   l_rec_acct_attrs.array_num_value(11)  :=  to_char(p_source_113);
   l_rec_acct_attrs.array_acct_attr_code(12) := 'APPLIED_TO_SECOND_DIST_ID';
   l_rec_acct_attrs.array_char_value(12)  := p_source_114;
   l_rec_acct_attrs.array_acct_attr_code(13) := 'DISTRIBUTION_IDENTIFIER_1';
   l_rec_acct_attrs.array_num_value(13)  :=  to_char(p_source_30);
   l_rec_acct_attrs.array_acct_attr_code(14) := 'DISTRIBUTION_IDENTIFIER_2';
   l_rec_acct_attrs.array_char_value(14)  := p_source_96;
   l_rec_acct_attrs.array_acct_attr_code(15) := 'DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(15)  := p_source_21;
   l_rec_acct_attrs.array_acct_attr_code(16) := 'ENC_UPG_CR_ACCT_CLASS';
   l_rec_acct_attrs.array_char_value(16)  := p_source_97;
   l_rec_acct_attrs.array_acct_attr_code(17) := 'ENC_UPG_CR_CCID';
   l_rec_acct_attrs.array_num_value(17)  := p_source_98;
   l_rec_acct_attrs.array_acct_attr_code(18) := 'ENC_UPG_CR_ENTERED_AMT';
   l_rec_acct_attrs.array_num_value(18)  := p_source_57;
   l_rec_acct_attrs.array_acct_attr_code(19) := 'ENC_UPG_CR_ENTERED_CURR';
   l_rec_acct_attrs.array_char_value(19)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(20) := 'ENC_UPG_CR_LEDGER_AMT';
   l_rec_acct_attrs.array_num_value(20)  := p_source_99;
   l_rec_acct_attrs.array_acct_attr_code(21) := 'ENC_UPG_DR_ACCT_CLASS';
   l_rec_acct_attrs.array_char_value(21)  := p_source_100;
   l_rec_acct_attrs.array_acct_attr_code(22) := 'ENC_UPG_DR_CCID';
   l_rec_acct_attrs.array_num_value(22)  := p_source_101;
   l_rec_acct_attrs.array_acct_attr_code(23) := 'ENC_UPG_DR_ENTERED_AMT';
   l_rec_acct_attrs.array_num_value(23)  := p_source_57;
   l_rec_acct_attrs.array_acct_attr_code(24) := 'ENC_UPG_DR_ENTERED_CURR';
   l_rec_acct_attrs.array_char_value(24)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(25) := 'ENC_UPG_DR_LEDGER_AMT';
   l_rec_acct_attrs.array_num_value(25)  := p_source_99;
   l_rec_acct_attrs.array_acct_attr_code(26) := 'ENC_UPG_OPTION';
   l_rec_acct_attrs.array_char_value(26)  := p_source_102;
   l_rec_acct_attrs.array_acct_attr_code(27) := 'ENTERED_CURRENCY_AMOUNT';
   l_rec_acct_attrs.array_num_value(27)  := p_source_57;
   l_rec_acct_attrs.array_acct_attr_code(28) := 'ENTERED_CURRENCY_CODE';
   l_rec_acct_attrs.array_char_value(28)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(29) := 'LEDGER_AMOUNT';
   l_rec_acct_attrs.array_num_value(29)  := p_source_99;
   l_rec_acct_attrs.array_acct_attr_code(30) := 'REVERSED_DISTRIBUTION_ID1';
   l_rec_acct_attrs.array_num_value(30)  :=  to_char(p_source_103);
   l_rec_acct_attrs.array_acct_attr_code(31) := 'REVERSED_DISTRIBUTION_ID2';
   l_rec_acct_attrs.array_char_value(31)  := p_source_104;
   l_rec_acct_attrs.array_acct_attr_code(32) := 'REVERSED_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(32)  := p_source_105;
   l_rec_acct_attrs.array_acct_attr_code(33) := 'UPG_CR_ENC_TYPE_ID';
   l_rec_acct_attrs.array_num_value(33)  := p_source_106;
   l_rec_acct_attrs.array_acct_attr_code(34) := 'UPG_DR_ENC_TYPE_ID';
   l_rec_acct_attrs.array_num_value(34)  := p_source_107;

   XLA_AE_LINES_PKG.SetLineAcctAttrs(l_rec_acct_attrs);
   p_gain_or_loss_ref  := XLA_AE_LINES_PKG.g_rec_lines.array_gain_or_loss_ref(XLA_AE_LINES_PKG.g_LineNumber);

   ---------------------------------------------------------------------------------------------------------------
   -- 4336173 -- assign Business Flow Class (replace code in xla_ae_lines_pkg.Business_Flow_Validation)
   ---------------------------------------------------------------------------------------------------------------
   XLA_AE_LINES_PKG.g_rec_lines.array_business_class_code(XLA_AE_LINES_PKG.g_LineNumber) := l_bflow_class_code;

   l_actual_upg_option  := XLA_AE_LINES_PKG.g_rec_lines.array_actual_upg_option(XLA_AE_LINES_PKG.g_LineNumber);
   l_enc_upg_option     := XLA_AE_LINES_PKG.g_rec_lines.array_enc_upg_option(XLA_AE_LINES_PKG.g_LineNumber);

   IF xla_accounting_cache_pkg.GetValueChar
         (p_source_code         => 'LEDGER_CATEGORY_CODE'
         ,p_target_ledger_id    => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id) IN ('PRIMARY','ALC')
   AND l_bflow_method_code = 'PRIOR_ENTRY'
--   AND (l_actual_upg_option = 'Y' OR l_enc_upg_option = 'Y') Bug 4922099
   AND ( (NVL(l_actual_upg_option, 'N') IN ('Y', 'O')) OR
         (NVL(l_enc_upg_option, 'N') IN ('Y', 'O'))
       )
   THEN
         xla_ae_lines_pkg.BflowUpgEntry
           (p_business_method_code    => l_bflow_method_code
           ,p_business_class_code     => l_bflow_class_code
           ,p_balance_type            => l_balance_type_code);
   ELSE
      NULL;
XLA_AE_LINES_PKG.business_flow_validation(
                                p_business_method_code     => l_bflow_method_code
                               ,p_business_class_code      => l_bflow_class_code
                               ,p_inherit_description_flag => l_inherit_desc_flag);
   END IF;

   --
   -- call analytical criteria
   --
   -- Inherited Analytical Criteria for business flow method of Prior Entry.
   --
   -- call description
   --
   
xla_ae_lines_pkg.SetLineDescription(
   p_ae_header_id => l_ae_header_id
  ,p_description  => Description_3 (
     p_application_id         => p_application_id
   , p_ae_header_id           => l_ae_header_id 
, p_source_2 => p_source_2
, p_source_3 => p_source_3
, p_source_4 => p_source_4
, p_source_5 => p_source_5
   )
);


   --
   -- call ADRs
   -- Bug 4922099
   --
   IF ( (l_bflow_method_code <> 'PRIOR_ENTRY') OR
        (NVL(l_actual_upg_option, 'N') = 'O') OR
        (NVL(l_enc_upg_option, 'N') = 'O')
      )
   THEN
   NULL;
   --
   --
   
   --
   --
   END IF;
   --
   -- Bug 4922099
   IF ( ( (NVL(l_actual_upg_option, 'N') = 'O') OR
          (NVL(l_enc_upg_option, 'N') = 'O')
        ) AND
        (l_bflow_method_code = 'PRIOR_ENTRY')
      )
   THEN
      IF
      --
      1 = 1
      --
      THEN
      xla_accounting_err_pkg.build_message
                                    (p_appli_s_name            => 'XLA'
                                    ,p_msg_name                => 'XLA_UPG_OVERRIDE_ADR_UNDEFINED'
                                    ,p_token_1                 => 'LINE_NUMBER'
                                    ,p_value_1                 => XLA_AE_LINES_PKG.g_LineNumber
                                    ,p_token_2                 => 'LINE_TYPE_NAME'
                                    ,p_value_2                 => XLA_AE_SOURCES_PKG.GetComponentName (
                                                                             l_component_type
                                                                            ,l_component_code
                                                                            ,l_component_type_code
                                                                            ,l_component_appl_id
                                                                            ,l_amb_context_code
                                                                            ,l_entity_code
                                                                            ,l_event_class_code
                                                                           )
                                    ,p_token_3                 => 'OWNER'
                                    ,p_value_3                 => xla_lookups_pkg.get_meaning(
                                                                          p_lookup_type     => 'XLA_OWNER_TYPE'
                                                                          ,p_lookup_code    => l_component_type_code
                                                                         )
                                    ,p_token_4                 => 'PRODUCT_NAME'
                                    ,p_value_4                 => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.application_name
                                    ,p_entity_id               => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.entity_id
                                    ,p_event_id                => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.event_id
                                    ,p_ledger_id               => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id
                                    ,p_ae_header_id            =>  NULL
                                       );

        IF (C_LEVEL_ERROR>= g_log_level) THEN
                 trace
                      (p_msg      => 'ERROR: XLA_UPG_OVERRIDE_ADR_UNDEFINED'
                      ,p_level    => C_LEVEL_ERROR
                      ,p_module   => l_log_module);
        END IF;
      END IF;
   END IF;
   --
   --
   ------------------------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- NOTE: XLA_AE_LINES_PKG.ValidateCurrentLine should NOT be generated if business flow method is
   -- Prior Entry.  Currently, the following code is always generated.
   ------------------------------------------------------------------------------------------------
   -- No ValidateCurrentLine for business flow method of Prior Entry

   ------------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- Populated credit and debit amounts -- Need to generate this within IF <condition>
   ------------------------------------------------------------------------------------
   XLA_AE_LINES_PKG.SetDebitCreditAmounts;

   ----------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- Update journal entry status -- Need to generate this within IF <condition>
   ----------------------------------------------------------------------------------
   XLA_AE_JOURNAL_ENTRY_PKG.UpdateJournalEntryStatus
         (p_hdr_idx => g_array_event(p_event_id).array_value_num('header_index')
         ,p_balance_type_code => l_balance_type_code
         );

   -------------------------------------------------------------------------------------------
   -- 4262811 - Generate the Accrual Reversal lines
   -------------------------------------------------------------------------------------------
   BEGIN
      l_acc_rev_flag := XLA_AE_HEADER_PKG.g_rec_header_new.array_accrual_reversal_flag
                              (g_array_event(p_event_id).array_value_num('header_index'));
      IF l_acc_rev_flag IS NULL THEN
         l_acc_rev_flag := 'N';
      END IF;
   EXCEPTION
      WHEN OTHERS THEN
         l_acc_rev_flag := 'N';
   END;
   --
   IF (l_acc_rev_flag = 'Y') THEN

       -- 4645092  ------------------------------------------------------------------------------
       -- To allow MPA report to determine if it should generate report process
       XLA_ACCOUNTING_PKG.g_mpa_accrual_exists := 'Y';
       ------------------------------------------------------------------------------------------

       l_accrual_line_num := XLA_AE_LINES_PKG.g_LineNumber;
       XLA_AE_LINES_PKG.CopyLineInfo(l_accrual_line_num);
   -- added call to set_ccid to execute mapping  for secondary accrual reversal entries bug 7444204
   -- call ADRs
   -- Bug 4922099
   --
   IF ( (l_bflow_method_code <> 'PRIOR_ENTRY') OR
        (NVL(l_actual_upg_option, 'N') = 'O') OR
        (NVL(l_enc_upg_option, 'N') = 'O')
      )
   THEN
   NULL;
   --
   --
   
   --
   --
   END IF;

       --
       -- Update the line information that should be overwritten
       --
       XLA_AE_LINES_PKG.set_ae_header_id(p_ae_header_id => p_event_id ,
                                         p_header_num   => 1);
       XLA_AE_LINES_PKG.g_rec_lines.array_header_num(XLA_AE_LINES_PKG.g_LineNumber)  :=1;

       XLA_AE_LINES_PKG.g_rec_lines.array_business_class_code(XLA_AE_LINES_PKG.g_LineNumber) := NULL; -- 4669271

       IF l_bflow_method_code <> 'NONE' THEN  -- 4655713b
          XLA_AE_LINES_PKG.g_rec_lines.array_reversal_code(XLA_AE_LINES_PKG.g_LineNumber) := CONCAT('MPA_',l_bflow_method_code);
       END IF;

      --
      -- Depending on the Reversal Method setup, do a switch side or changes sign for the amounts
      --
      IF (XLA_AE_JOURNAL_ENTRY_PKG.g_cache_ledgers_info.ledger_reversal_option = 'SIDE') THEN
          XLA_AE_LINES_PKG.g_rec_lines.array_natural_side_code(XLA_AE_LINES_PKG.g_LineNumber) :=  l_acc_rev_natural_side_code;
      ELSE
          ---------------------------------------------------------------------------------------------------
          -- 4262811a Switch Sign
          ---------------------------------------------------------------------------------------------------
          XLA_AE_LINES_PKG.g_rec_lines.array_switch_side_flag(XLA_AE_LINES_PKG.g_LineNumber) := 'N';  -- 5052518
          XLA_AE_LINES_PKG.g_rec_lines.array_ledger_amount(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_ledger_amount(XLA_AE_LINES_PKG.g_LineNumber) * -1;
          XLA_AE_LINES_PKG.g_rec_lines.array_entered_amount(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_entered_amount(XLA_AE_LINES_PKG.g_LineNumber) * -1;
          -- 5132302
          XLA_AE_LINES_PKG.g_rec_lines.array_bflow_applied_to_amt(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_bflow_applied_to_amt(XLA_AE_LINES_PKG.g_LineNumber) * -1;

      END IF;

      -- 4955764
      XLA_AE_LINES_PKG.g_rec_lines.array_gl_date(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_HEADER_PKG.g_rec_header_new.array_gl_date(g_array_event(p_event_id).array_value_num('acc_rev_header_index'));


      XLA_AE_LINES_PKG.ValidateCurrentLine;
      XLA_AE_LINES_PKG.SetDebitCreditAmounts;

      XLA_AE_JOURNAL_ENTRY_PKG.UpdateJournalEntryStatus
               (p_hdr_idx           => g_array_event(p_event_id).array_value_num('acc_rev_header_index')
               ,p_balance_type_code => l_balance_type_code);

   END IF;

   -----------------------------------------------------------------------------------------
   -- 4262811 Multiperiod Accounting
   -----------------------------------------------------------------------------------------
     -- No MPA option is assigned.


END IF;
END IF;
--

--
IF (C_LEVEL_PROCEDURE >= g_log_level) THEN
   trace
      (p_msg      => 'END of AcctLineType_93'
      ,p_level    => C_LEVEL_PROCEDURE
      ,p_module   => l_log_module);
END IF;
--
EXCEPTION
  WHEN xla_exceptions_pkg.application_exception THEN
      RAISE;
  WHEN OTHERS THEN
       xla_exceptions_pkg.raise_message
           (p_location => 'XLA_00200_AAD_S_000010_BC_PKG.AcctLineType_93');
END AcctLineType_93;
--

---------------------------------------
--
-- PRIVATE FUNCTION
--         AcctLineType_94
--
---------------------------------------
PROCEDURE AcctLineType_94 (
  p_application_id        IN NUMBER
 ,p_event_id              IN NUMBER
 ,p_calculate_acctd_flag  IN VARCHAR2
 ,p_calculate_g_l_flag    IN VARCHAR2
 ,p_actual_flag           IN OUT VARCHAR2
 ,p_balance_type_code     OUT VARCHAR2
 ,p_gain_or_loss_ref      OUT VARCHAR2
 
--Document Distribution Type
 , p_source_2            IN VARCHAR2
--Project Name
 , p_source_3            IN VARCHAR2
--Task Number
 , p_source_4            IN VARCHAR2
--Expenditure Organization
 , p_source_5            IN NUMBER
--Distribution Link Type
 , p_source_21            IN VARCHAR2
--Invoice Distribution Identifier
 , p_source_30            IN NUMBER
--Invoice Currency Code
 , p_source_33            IN VARCHAR2
--Invoice Distribution Amount
 , p_source_57            IN NUMBER
--Document Type
 , p_source_83            IN VARCHAR2
--Accounting reversal indicator for project invoice burden
 , p_source_85            IN VARCHAR2
--Allocated to Application Identifier
 , p_source_86            IN NUMBER
--Allocated to Distribution Type
 , p_source_87            IN VARCHAR2
--Allocated to Entity Code
 , p_source_88            IN VARCHAR2
--Allocated to First Distribution Identifier
 , p_source_89            IN NUMBER
--Allocated to First System Transaction Identifier
 , p_source_90            IN NUMBER
--Invoice Distribution Expenditure Type
 , p_source_96            IN VARCHAR2
--Encumbrance Upgrade Credit Accounting Class
 , p_source_97            IN VARCHAR2
--Encumbrance Upgrade Credit Account
 , p_source_98            IN NUMBER
--Invoice Distribution Ledger Amount Before Rounding
 , p_source_99            IN NUMBER
--Encumbrance Upgrade Debit Accounting Class
 , p_source_100            IN VARCHAR2
--Encumbrance Upgrade Debit Account
 , p_source_101            IN NUMBER
--Use Encumbrances Upgrade Attributes Flag
 , p_source_102            IN VARCHAR2
--Accounting reversal first distribution identifier for project invoice burden
 , p_source_103            IN NUMBER
--Invoice Burden Applied to Second Distribution Identifier
 , p_source_104            IN VARCHAR2
--Accounting reversal distribution type for project invoice burden
 , p_source_105            IN VARCHAR2
--Encumbrance Upgrade Credit Encumbrance Type
 , p_source_106            IN NUMBER
--Encumbrance Upgrade Debit Encumbrance Type
 , p_source_107            IN NUMBER
--Project Encumbrance Applied to Application Identifier
 , p_source_109            IN NUMBER
--Project Encumbrance Applied to Distribution Type
 , p_source_110            IN VARCHAR2
--Project Encumbrance Applied to Entity Code
 , p_source_111            IN VARCHAR2
--Project Encumbrance First Distribution Identifier
 , p_source_112            IN NUMBER
--Project Encumbrance First System Transaction Identifier
 , p_source_113            IN NUMBER
--Project Encumbrance Second Distribution Identifier
 , p_source_114            IN VARCHAR2
)
IS

l_component_type              VARCHAR2(80);
l_component_code              VARCHAR2(30);
l_component_type_code         VARCHAR2(1);
l_component_appl_id           INTEGER;
l_amb_context_code            VARCHAR2(30);
l_entity_code                 VARCHAR2(30);
l_event_class_code            VARCHAR2(30);
l_ae_header_id                NUMBER;
l_event_type_code             VARCHAR2(30);
l_line_definition_code        VARCHAR2(30);
l_line_definition_owner_code  VARCHAR2(1);
--
-- adr variables
l_segment                     VARCHAR2(30);
l_ccid                        NUMBER;
l_adr_transaction_coa_id      NUMBER;
l_adr_accounting_coa_id       NUMBER;
l_adr_flexfield_segment_code  VARCHAR2(30);
l_adr_flex_value_set_id       NUMBER;
l_adr_value_type_code         VARCHAR2(30);
l_adr_value_combination_id    NUMBER;
l_adr_value_segment_code      VARCHAR2(30);

l_bflow_method_code           VARCHAR2(30);  -- 4219869 Business Flow
l_bflow_class_code            VARCHAR2(30);  -- 4219869 Business Flow
l_inherit_desc_flag           VARCHAR2(1);   -- 4219869 Business Flow
l_budgetary_control_flag      VARCHAR2(1);   -- 4458381 Public Sector Enh

-- 4262811 Variables ------------------------------------------------------------------------------------------
l_entered_amt_idx             NUMBER;
l_accted_amt_idx              NUMBER;
l_acc_rev_flag                VARCHAR2(1);
l_accrual_line_num            NUMBER;
l_tmp_amt                     NUMBER;
l_acc_rev_natural_side_code   VARCHAR2(1);

l_num_entries                 NUMBER;
l_gl_dates                    xla_ae_journal_entry_pkg.t_array_date;
l_accted_amts                 xla_ae_journal_entry_pkg.t_array_num;
l_entered_amts                xla_ae_journal_entry_pkg.t_array_num;
l_period_names                xla_ae_journal_entry_pkg.t_array_V15L;
l_recog_line_1                NUMBER;
l_recog_line_2                NUMBER;

l_bflow_applied_to_amt_idx    NUMBER;                                -- 5132302
l_bflow_applied_to_amt        NUMBER;                                -- 5132302
l_bflow_applied_to_amts       xla_ae_journal_entry_pkg.t_array_num;  -- 5132302

l_event_id                    NUMBER;  -- To handle MPA header Description: xla_ae_header_pkg.SetHdrDescription

--l_rounding_ccy                VARCHAR2(15); -- To handle MPA rounding  4262811b
l_same_currency               BOOLEAN;        -- To handle MPA rounding  4262811b

---------------------------------------------------------------------------------------------------------------


--
-- bulk performance
--
l_balance_type_code           VARCHAR2(1);
l_rec_acct_attrs              XLA_AE_LINES_PKG.t_rec_acct_attrs;
l_log_module                  VARCHAR2(240);

--
-- Upgrade strategy
--
l_actual_upg_option           VARCHAR2(1);
l_enc_upg_option           VARCHAR2(1);

--
BEGIN
--
IF g_log_enabled THEN
      l_log_module := C_DEFAULT_MODULE||'.AcctLineType_94';
END IF;
--
IF (C_LEVEL_PROCEDURE >= g_log_level) THEN

      trace
         (p_msg      => 'BEGIN of AcctLineType_94'
         ,p_level    => C_LEVEL_PROCEDURE
         ,p_module   => l_log_module);

END IF;
--
l_component_type             := 'AMB_JLT';
l_component_code             := 'RELIEVE_PROJ_ENC';
l_component_type_code        := 'S';
l_component_appl_id          :=  200;
l_amb_context_code           := 'DEFAULT';
l_entity_code                := 'AP_INVOICES';
l_event_class_code           := 'PREPAYMENT_BURDEN';
l_event_type_code            := 'PREPAYMENT_BURDEN_ALL';
l_line_definition_owner_code := 'S';
l_line_definition_code       := 'AP_PREPAY_BURDEN_ENC_ALL';
--
l_balance_type_code          := 'E';
l_segment                     := NULL;
l_ccid                        := NULL;
l_adr_transaction_coa_id      := NULL;
l_adr_accounting_coa_id       := NULL;
l_adr_flexfield_segment_code  := NULL;
l_adr_flex_value_set_id       := NULL;
l_adr_value_type_code         := NULL;
l_adr_value_combination_id    := NULL;
l_adr_value_segment_code      := NULL;

l_bflow_method_code          := 'PRIOR_ENTRY';   -- 4219869 Business Flow
l_bflow_class_code           := 'PA_BUDGET_ENC';    -- 4219869 Business Flow
l_inherit_desc_flag          := 'N';   -- 4219869 Business Flow
l_budgetary_control_flag     := 'Y';

l_bflow_applied_to_amt_idx   := NULL; -- 5132302
l_bflow_applied_to_amt       := NULL; -- 5132302
l_entered_amt_idx            := NULL;          -- 4262811
l_accted_amt_idx             := NULL;          -- 4262811
l_acc_rev_flag               := NULL;          -- 4262811
l_accrual_line_num           := NULL;          -- 4262811
l_tmp_amt                    := NULL;          -- 4262811
--
 
IF XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id = XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.ledger_id OR
    l_balance_type_code <> 'B' THEN
IF NVL(p_source_83,'
') =  'AP'
 THEN 

   --
   XLA_AE_LINES_PKG.SetNewLine;

   p_balance_type_code          := l_balance_type_code;
   -- set the flag so later we will know whether the gain loss line needs to be created
   
   IF(l_balance_type_code = 'A' and p_actual_flag is null) THEN
     p_actual_flag :='A';
   END IF;

   --
   -- bulk performance
   --
   XLA_AE_LINES_PKG.set_ae_header_id (p_ae_header_id => p_event_id ,
                                      p_header_num   => 0); -- 4262811
   --
   -- set accounting line options
   --
   l_ae_header_id:= xla_ae_lines_pkg.SetAcctLineOption(
           p_natural_side_code          => 'C'
         , p_gain_or_loss_flag          => 'N'
         , p_gl_transfer_mode_code      => 'S'
         , p_acct_entry_type_code       => 'E'
         , p_switch_side_flag           => 'Y'
         , p_merge_duplicate_code       => 'N'
         );
   --
   l_acc_rev_natural_side_code := 'D';  -- 4262811
   -- 
   --
   -- set accounting line type info
   --
   xla_ae_lines_pkg.SetAcctLineType
      (p_component_type             => l_component_type
      ,p_event_type_code            => l_event_type_code
      ,p_line_definition_owner_code => l_line_definition_owner_code
      ,p_line_definition_code       => l_line_definition_code
      ,p_accounting_line_code       => l_component_code
      ,p_accounting_line_type_code  => l_component_type_code
      ,p_accounting_line_appl_id    => l_component_appl_id
      ,p_amb_context_code           => l_amb_context_code
      ,p_entity_code                => l_entity_code
      ,p_event_class_code           => l_event_class_code);
   --
   -- set accounting class
   --
   xla_ae_lines_pkg.SetAcctClass(
           p_accounting_class_code  => 'PA_BUDGET_ENC'
         , p_ae_header_id           => l_ae_header_id
         );

   --
   -- set rounding class
   --
   XLA_AE_LINES_PKG.g_rec_lines.array_rounding_class(XLA_AE_LINES_PKG.g_LineNumber) :=
                      'PA_BUDGET_ENC';

   --
   xla_ae_lines_pkg.g_rec_lines.array_calculate_acctd_flag(xla_ae_lines_pkg.g_LineNumber) := p_calculate_acctd_flag;
   xla_ae_lines_pkg.g_rec_lines.array_calculate_g_l_flag(xla_ae_lines_pkg.g_LineNumber) := p_calculate_g_l_flag;
   --
   -- bulk performance
   --
   XLA_AE_LINES_PKG.g_rec_lines.array_balance_type_code(XLA_AE_LINES_PKG.g_LineNumber) := l_balance_type_code;

   XLA_AE_LINES_PKG.g_rec_lines.array_ledger_id(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id;

   -- 4955764
   XLA_AE_LINES_PKG.g_rec_lines.array_gl_date(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_HEADER_PKG.g_rec_header_new.array_gl_date(g_array_event(p_event_id).array_value_num('header_index'));

   -- 4458381 Public Sector Enh
   
   --
   -- set accounting attributes for the line type
   --
   l_entered_amt_idx := 27;
   l_accted_amt_idx  := 29;
   l_bflow_applied_to_amt_idx  := NULL;  -- 5132302
   l_rec_acct_attrs.array_acct_attr_code(1) := 'ACCOUNTING_REVERSAL_OPTION';
   l_rec_acct_attrs.array_char_value(1)  := p_source_85;
   l_rec_acct_attrs.array_acct_attr_code(2) := 'ALLOC_TO_APPLICATION_ID';
   l_rec_acct_attrs.array_num_value(2)  := p_source_86;
   l_rec_acct_attrs.array_acct_attr_code(3) := 'ALLOC_TO_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(3)  := p_source_87;
   l_rec_acct_attrs.array_acct_attr_code(4) := 'ALLOC_TO_ENTITY_CODE';
   l_rec_acct_attrs.array_char_value(4)  := p_source_88;
   l_rec_acct_attrs.array_acct_attr_code(5) := 'ALLOC_TO_FIRST_DIST_ID';
   l_rec_acct_attrs.array_num_value(5)  :=  to_char(p_source_89);
   l_rec_acct_attrs.array_acct_attr_code(6) := 'ALLOC_TO_FIRST_SYS_TRAN_ID';
   l_rec_acct_attrs.array_num_value(6)  :=  to_char(p_source_90);
   l_rec_acct_attrs.array_acct_attr_code(7) := 'APPLIED_TO_APPLICATION_ID';
   l_rec_acct_attrs.array_num_value(7)  := p_source_109;
   l_rec_acct_attrs.array_acct_attr_code(8) := 'APPLIED_TO_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(8)  := p_source_110;
   l_rec_acct_attrs.array_acct_attr_code(9) := 'APPLIED_TO_ENTITY_CODE';
   l_rec_acct_attrs.array_char_value(9)  := p_source_111;
   l_rec_acct_attrs.array_acct_attr_code(10) := 'APPLIED_TO_FIRST_DIST_ID';
   l_rec_acct_attrs.array_num_value(10)  :=  to_char(p_source_112);
   l_rec_acct_attrs.array_acct_attr_code(11) := 'APPLIED_TO_FIRST_SYS_TRAN_ID';
   l_rec_acct_attrs.array_num_value(11)  :=  to_char(p_source_113);
   l_rec_acct_attrs.array_acct_attr_code(12) := 'APPLIED_TO_SECOND_DIST_ID';
   l_rec_acct_attrs.array_char_value(12)  := p_source_114;
   l_rec_acct_attrs.array_acct_attr_code(13) := 'DISTRIBUTION_IDENTIFIER_1';
   l_rec_acct_attrs.array_num_value(13)  :=  to_char(p_source_30);
   l_rec_acct_attrs.array_acct_attr_code(14) := 'DISTRIBUTION_IDENTIFIER_2';
   l_rec_acct_attrs.array_char_value(14)  := p_source_96;
   l_rec_acct_attrs.array_acct_attr_code(15) := 'DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(15)  := p_source_21;
   l_rec_acct_attrs.array_acct_attr_code(16) := 'ENC_UPG_CR_ACCT_CLASS';
   l_rec_acct_attrs.array_char_value(16)  := p_source_97;
   l_rec_acct_attrs.array_acct_attr_code(17) := 'ENC_UPG_CR_CCID';
   l_rec_acct_attrs.array_num_value(17)  := p_source_98;
   l_rec_acct_attrs.array_acct_attr_code(18) := 'ENC_UPG_CR_ENTERED_AMT';
   l_rec_acct_attrs.array_num_value(18)  := p_source_57;
   l_rec_acct_attrs.array_acct_attr_code(19) := 'ENC_UPG_CR_ENTERED_CURR';
   l_rec_acct_attrs.array_char_value(19)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(20) := 'ENC_UPG_CR_LEDGER_AMT';
   l_rec_acct_attrs.array_num_value(20)  := p_source_99;
   l_rec_acct_attrs.array_acct_attr_code(21) := 'ENC_UPG_DR_ACCT_CLASS';
   l_rec_acct_attrs.array_char_value(21)  := p_source_100;
   l_rec_acct_attrs.array_acct_attr_code(22) := 'ENC_UPG_DR_CCID';
   l_rec_acct_attrs.array_num_value(22)  := p_source_101;
   l_rec_acct_attrs.array_acct_attr_code(23) := 'ENC_UPG_DR_ENTERED_AMT';
   l_rec_acct_attrs.array_num_value(23)  := p_source_57;
   l_rec_acct_attrs.array_acct_attr_code(24) := 'ENC_UPG_DR_ENTERED_CURR';
   l_rec_acct_attrs.array_char_value(24)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(25) := 'ENC_UPG_DR_LEDGER_AMT';
   l_rec_acct_attrs.array_num_value(25)  := p_source_99;
   l_rec_acct_attrs.array_acct_attr_code(26) := 'ENC_UPG_OPTION';
   l_rec_acct_attrs.array_char_value(26)  := p_source_102;
   l_rec_acct_attrs.array_acct_attr_code(27) := 'ENTERED_CURRENCY_AMOUNT';
   l_rec_acct_attrs.array_num_value(27)  := p_source_57;
   l_rec_acct_attrs.array_acct_attr_code(28) := 'ENTERED_CURRENCY_CODE';
   l_rec_acct_attrs.array_char_value(28)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(29) := 'LEDGER_AMOUNT';
   l_rec_acct_attrs.array_num_value(29)  := p_source_99;
   l_rec_acct_attrs.array_acct_attr_code(30) := 'REVERSED_DISTRIBUTION_ID1';
   l_rec_acct_attrs.array_num_value(30)  :=  to_char(p_source_103);
   l_rec_acct_attrs.array_acct_attr_code(31) := 'REVERSED_DISTRIBUTION_ID2';
   l_rec_acct_attrs.array_char_value(31)  := p_source_104;
   l_rec_acct_attrs.array_acct_attr_code(32) := 'REVERSED_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(32)  := p_source_105;
   l_rec_acct_attrs.array_acct_attr_code(33) := 'UPG_CR_ENC_TYPE_ID';
   l_rec_acct_attrs.array_num_value(33)  := p_source_106;
   l_rec_acct_attrs.array_acct_attr_code(34) := 'UPG_DR_ENC_TYPE_ID';
   l_rec_acct_attrs.array_num_value(34)  := p_source_107;

   XLA_AE_LINES_PKG.SetLineAcctAttrs(l_rec_acct_attrs);
   p_gain_or_loss_ref  := XLA_AE_LINES_PKG.g_rec_lines.array_gain_or_loss_ref(XLA_AE_LINES_PKG.g_LineNumber);

   ---------------------------------------------------------------------------------------------------------------
   -- 4336173 -- assign Business Flow Class (replace code in xla_ae_lines_pkg.Business_Flow_Validation)
   ---------------------------------------------------------------------------------------------------------------
   XLA_AE_LINES_PKG.g_rec_lines.array_business_class_code(XLA_AE_LINES_PKG.g_LineNumber) := l_bflow_class_code;

   l_actual_upg_option  := XLA_AE_LINES_PKG.g_rec_lines.array_actual_upg_option(XLA_AE_LINES_PKG.g_LineNumber);
   l_enc_upg_option     := XLA_AE_LINES_PKG.g_rec_lines.array_enc_upg_option(XLA_AE_LINES_PKG.g_LineNumber);

   IF xla_accounting_cache_pkg.GetValueChar
         (p_source_code         => 'LEDGER_CATEGORY_CODE'
         ,p_target_ledger_id    => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id) IN ('PRIMARY','ALC')
   AND l_bflow_method_code = 'PRIOR_ENTRY'
--   AND (l_actual_upg_option = 'Y' OR l_enc_upg_option = 'Y') Bug 4922099
   AND ( (NVL(l_actual_upg_option, 'N') IN ('Y', 'O')) OR
         (NVL(l_enc_upg_option, 'N') IN ('Y', 'O'))
       )
   THEN
         xla_ae_lines_pkg.BflowUpgEntry
           (p_business_method_code    => l_bflow_method_code
           ,p_business_class_code     => l_bflow_class_code
           ,p_balance_type            => l_balance_type_code);
   ELSE
      NULL;
XLA_AE_LINES_PKG.business_flow_validation(
                                p_business_method_code     => l_bflow_method_code
                               ,p_business_class_code      => l_bflow_class_code
                               ,p_inherit_description_flag => l_inherit_desc_flag);
   END IF;

   --
   -- call analytical criteria
   --
   -- Inherited Analytical Criteria for business flow method of Prior Entry.
   --
   -- call description
   --
   
xla_ae_lines_pkg.SetLineDescription(
   p_ae_header_id => l_ae_header_id
  ,p_description  => Description_3 (
     p_application_id         => p_application_id
   , p_ae_header_id           => l_ae_header_id 
, p_source_2 => p_source_2
, p_source_3 => p_source_3
, p_source_4 => p_source_4
, p_source_5 => p_source_5
   )
);


   --
   -- call ADRs
   -- Bug 4922099
   --
   IF ( (l_bflow_method_code <> 'PRIOR_ENTRY') OR
        (NVL(l_actual_upg_option, 'N') = 'O') OR
        (NVL(l_enc_upg_option, 'N') = 'O')
      )
   THEN
   NULL;
   --
   --
   
   --
   --
   END IF;
   --
   -- Bug 4922099
   IF ( ( (NVL(l_actual_upg_option, 'N') = 'O') OR
          (NVL(l_enc_upg_option, 'N') = 'O')
        ) AND
        (l_bflow_method_code = 'PRIOR_ENTRY')
      )
   THEN
      IF
      --
      1 = 1
      --
      THEN
      xla_accounting_err_pkg.build_message
                                    (p_appli_s_name            => 'XLA'
                                    ,p_msg_name                => 'XLA_UPG_OVERRIDE_ADR_UNDEFINED'
                                    ,p_token_1                 => 'LINE_NUMBER'
                                    ,p_value_1                 => XLA_AE_LINES_PKG.g_LineNumber
                                    ,p_token_2                 => 'LINE_TYPE_NAME'
                                    ,p_value_2                 => XLA_AE_SOURCES_PKG.GetComponentName (
                                                                             l_component_type
                                                                            ,l_component_code
                                                                            ,l_component_type_code
                                                                            ,l_component_appl_id
                                                                            ,l_amb_context_code
                                                                            ,l_entity_code
                                                                            ,l_event_class_code
                                                                           )
                                    ,p_token_3                 => 'OWNER'
                                    ,p_value_3                 => xla_lookups_pkg.get_meaning(
                                                                          p_lookup_type     => 'XLA_OWNER_TYPE'
                                                                          ,p_lookup_code    => l_component_type_code
                                                                         )
                                    ,p_token_4                 => 'PRODUCT_NAME'
                                    ,p_value_4                 => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.application_name
                                    ,p_entity_id               => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.entity_id
                                    ,p_event_id                => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.event_id
                                    ,p_ledger_id               => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id
                                    ,p_ae_header_id            =>  NULL
                                       );

        IF (C_LEVEL_ERROR>= g_log_level) THEN
                 trace
                      (p_msg      => 'ERROR: XLA_UPG_OVERRIDE_ADR_UNDEFINED'
                      ,p_level    => C_LEVEL_ERROR
                      ,p_module   => l_log_module);
        END IF;
      END IF;
   END IF;
   --
   --
   ------------------------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- NOTE: XLA_AE_LINES_PKG.ValidateCurrentLine should NOT be generated if business flow method is
   -- Prior Entry.  Currently, the following code is always generated.
   ------------------------------------------------------------------------------------------------
   -- No ValidateCurrentLine for business flow method of Prior Entry

   ------------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- Populated credit and debit amounts -- Need to generate this within IF <condition>
   ------------------------------------------------------------------------------------
   XLA_AE_LINES_PKG.SetDebitCreditAmounts;

   ----------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- Update journal entry status -- Need to generate this within IF <condition>
   ----------------------------------------------------------------------------------
   XLA_AE_JOURNAL_ENTRY_PKG.UpdateJournalEntryStatus
         (p_hdr_idx => g_array_event(p_event_id).array_value_num('header_index')
         ,p_balance_type_code => l_balance_type_code
         );

   -------------------------------------------------------------------------------------------
   -- 4262811 - Generate the Accrual Reversal lines
   -------------------------------------------------------------------------------------------
   BEGIN
      l_acc_rev_flag := XLA_AE_HEADER_PKG.g_rec_header_new.array_accrual_reversal_flag
                              (g_array_event(p_event_id).array_value_num('header_index'));
      IF l_acc_rev_flag IS NULL THEN
         l_acc_rev_flag := 'N';
      END IF;
   EXCEPTION
      WHEN OTHERS THEN
         l_acc_rev_flag := 'N';
   END;
   --
   IF (l_acc_rev_flag = 'Y') THEN

       -- 4645092  ------------------------------------------------------------------------------
       -- To allow MPA report to determine if it should generate report process
       XLA_ACCOUNTING_PKG.g_mpa_accrual_exists := 'Y';
       ------------------------------------------------------------------------------------------

       l_accrual_line_num := XLA_AE_LINES_PKG.g_LineNumber;
       XLA_AE_LINES_PKG.CopyLineInfo(l_accrual_line_num);
   -- added call to set_ccid to execute mapping  for secondary accrual reversal entries bug 7444204
   -- call ADRs
   -- Bug 4922099
   --
   IF ( (l_bflow_method_code <> 'PRIOR_ENTRY') OR
        (NVL(l_actual_upg_option, 'N') = 'O') OR
        (NVL(l_enc_upg_option, 'N') = 'O')
      )
   THEN
   NULL;
   --
   --
   
   --
   --
   END IF;

       --
       -- Update the line information that should be overwritten
       --
       XLA_AE_LINES_PKG.set_ae_header_id(p_ae_header_id => p_event_id ,
                                         p_header_num   => 1);
       XLA_AE_LINES_PKG.g_rec_lines.array_header_num(XLA_AE_LINES_PKG.g_LineNumber)  :=1;

       XLA_AE_LINES_PKG.g_rec_lines.array_business_class_code(XLA_AE_LINES_PKG.g_LineNumber) := NULL; -- 4669271

       IF l_bflow_method_code <> 'NONE' THEN  -- 4655713b
          XLA_AE_LINES_PKG.g_rec_lines.array_reversal_code(XLA_AE_LINES_PKG.g_LineNumber) := CONCAT('MPA_',l_bflow_method_code);
       END IF;

      --
      -- Depending on the Reversal Method setup, do a switch side or changes sign for the amounts
      --
      IF (XLA_AE_JOURNAL_ENTRY_PKG.g_cache_ledgers_info.ledger_reversal_option = 'SIDE') THEN
          XLA_AE_LINES_PKG.g_rec_lines.array_natural_side_code(XLA_AE_LINES_PKG.g_LineNumber) :=  l_acc_rev_natural_side_code;
      ELSE
          ---------------------------------------------------------------------------------------------------
          -- 4262811a Switch Sign
          ---------------------------------------------------------------------------------------------------
          XLA_AE_LINES_PKG.g_rec_lines.array_switch_side_flag(XLA_AE_LINES_PKG.g_LineNumber) := 'N';  -- 5052518
          XLA_AE_LINES_PKG.g_rec_lines.array_ledger_amount(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_ledger_amount(XLA_AE_LINES_PKG.g_LineNumber) * -1;
          XLA_AE_LINES_PKG.g_rec_lines.array_entered_amount(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_entered_amount(XLA_AE_LINES_PKG.g_LineNumber) * -1;
          -- 5132302
          XLA_AE_LINES_PKG.g_rec_lines.array_bflow_applied_to_amt(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_bflow_applied_to_amt(XLA_AE_LINES_PKG.g_LineNumber) * -1;

      END IF;

      -- 4955764
      XLA_AE_LINES_PKG.g_rec_lines.array_gl_date(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_HEADER_PKG.g_rec_header_new.array_gl_date(g_array_event(p_event_id).array_value_num('acc_rev_header_index'));


      XLA_AE_LINES_PKG.ValidateCurrentLine;
      XLA_AE_LINES_PKG.SetDebitCreditAmounts;

      XLA_AE_JOURNAL_ENTRY_PKG.UpdateJournalEntryStatus
               (p_hdr_idx           => g_array_event(p_event_id).array_value_num('acc_rev_header_index')
               ,p_balance_type_code => l_balance_type_code);

   END IF;

   -----------------------------------------------------------------------------------------
   -- 4262811 Multiperiod Accounting
   -----------------------------------------------------------------------------------------
     -- No MPA option is assigned.


END IF;
END IF;
--

--
IF (C_LEVEL_PROCEDURE >= g_log_level) THEN
   trace
      (p_msg      => 'END of AcctLineType_94'
      ,p_level    => C_LEVEL_PROCEDURE
      ,p_module   => l_log_module);
END IF;
--
EXCEPTION
  WHEN xla_exceptions_pkg.application_exception THEN
      RAISE;
  WHEN OTHERS THEN
       xla_exceptions_pkg.raise_message
           (p_location => 'XLA_00200_AAD_S_000010_BC_PKG.AcctLineType_94');
END AcctLineType_94;
--

---------------------------------------
--
-- PRIVATE FUNCTION
--         AcctLineType_95
--
---------------------------------------
PROCEDURE AcctLineType_95 (
  p_application_id        IN NUMBER
 ,p_event_id              IN NUMBER
 ,p_calculate_acctd_flag  IN VARCHAR2
 ,p_calculate_g_l_flag    IN VARCHAR2
 ,p_actual_flag           IN OUT VARCHAR2
 ,p_balance_type_code     OUT VARCHAR2
 ,p_gain_or_loss_ref      OUT VARCHAR2
 
--Document Distribution Type
 , p_source_2            IN VARCHAR2
--Project Name
 , p_source_3            IN VARCHAR2
--Task Number
 , p_source_4            IN VARCHAR2
--Expenditure Organization
 , p_source_5            IN NUMBER
--Distribution Link Type
 , p_source_21            IN VARCHAR2
--Invoice Distribution Identifier
 , p_source_30            IN NUMBER
--Invoice Currency Code
 , p_source_33            IN VARCHAR2
--Invoice Distribution Amount
 , p_source_57            IN NUMBER
--Document Type
 , p_source_83            IN VARCHAR2
--Accounting reversal indicator for project invoice burden
 , p_source_85            IN VARCHAR2
--Allocated to Application Identifier
 , p_source_86            IN NUMBER
--Allocated to Distribution Type
 , p_source_87            IN VARCHAR2
--Allocated to Entity Code
 , p_source_88            IN VARCHAR2
--Allocated to First Distribution Identifier
 , p_source_89            IN NUMBER
--Allocated to First System Transaction Identifier
 , p_source_90            IN NUMBER
--Invoice Distribution Expenditure Type
 , p_source_96            IN VARCHAR2
--Encumbrance Upgrade Credit Accounting Class
 , p_source_97            IN VARCHAR2
--Encumbrance Upgrade Credit Account
 , p_source_98            IN NUMBER
--Invoice Distribution Ledger Amount Before Rounding
 , p_source_99            IN NUMBER
--Encumbrance Upgrade Debit Accounting Class
 , p_source_100            IN VARCHAR2
--Encumbrance Upgrade Debit Account
 , p_source_101            IN NUMBER
--Use Encumbrances Upgrade Attributes Flag
 , p_source_102            IN VARCHAR2
--Accounting reversal first distribution identifier for project invoice burden
 , p_source_103            IN NUMBER
--Invoice Burden Applied to Second Distribution Identifier
 , p_source_104            IN VARCHAR2
--Accounting reversal distribution type for project invoice burden
 , p_source_105            IN VARCHAR2
--Encumbrance Upgrade Credit Encumbrance Type
 , p_source_106            IN NUMBER
--Encumbrance Upgrade Debit Encumbrance Type
 , p_source_107            IN NUMBER
--Project Encumbrance Applied to Application Identifier
 , p_source_109            IN NUMBER
--Project Encumbrance Applied to Distribution Type
 , p_source_110            IN VARCHAR2
--Project Encumbrance Applied to Entity Code
 , p_source_111            IN VARCHAR2
--Project Encumbrance First Distribution Identifier
 , p_source_112            IN NUMBER
--Project Encumbrance First System Transaction Identifier
 , p_source_113            IN NUMBER
--Project Encumbrance Second Distribution Identifier
 , p_source_114            IN VARCHAR2
)
IS

l_component_type              VARCHAR2(80);
l_component_code              VARCHAR2(30);
l_component_type_code         VARCHAR2(1);
l_component_appl_id           INTEGER;
l_amb_context_code            VARCHAR2(30);
l_entity_code                 VARCHAR2(30);
l_event_class_code            VARCHAR2(30);
l_ae_header_id                NUMBER;
l_event_type_code             VARCHAR2(30);
l_line_definition_code        VARCHAR2(30);
l_line_definition_owner_code  VARCHAR2(1);
--
-- adr variables
l_segment                     VARCHAR2(30);
l_ccid                        NUMBER;
l_adr_transaction_coa_id      NUMBER;
l_adr_accounting_coa_id       NUMBER;
l_adr_flexfield_segment_code  VARCHAR2(30);
l_adr_flex_value_set_id       NUMBER;
l_adr_value_type_code         VARCHAR2(30);
l_adr_value_combination_id    NUMBER;
l_adr_value_segment_code      VARCHAR2(30);

l_bflow_method_code           VARCHAR2(30);  -- 4219869 Business Flow
l_bflow_class_code            VARCHAR2(30);  -- 4219869 Business Flow
l_inherit_desc_flag           VARCHAR2(1);   -- 4219869 Business Flow
l_budgetary_control_flag      VARCHAR2(1);   -- 4458381 Public Sector Enh

-- 4262811 Variables ------------------------------------------------------------------------------------------
l_entered_amt_idx             NUMBER;
l_accted_amt_idx              NUMBER;
l_acc_rev_flag                VARCHAR2(1);
l_accrual_line_num            NUMBER;
l_tmp_amt                     NUMBER;
l_acc_rev_natural_side_code   VARCHAR2(1);

l_num_entries                 NUMBER;
l_gl_dates                    xla_ae_journal_entry_pkg.t_array_date;
l_accted_amts                 xla_ae_journal_entry_pkg.t_array_num;
l_entered_amts                xla_ae_journal_entry_pkg.t_array_num;
l_period_names                xla_ae_journal_entry_pkg.t_array_V15L;
l_recog_line_1                NUMBER;
l_recog_line_2                NUMBER;

l_bflow_applied_to_amt_idx    NUMBER;                                -- 5132302
l_bflow_applied_to_amt        NUMBER;                                -- 5132302
l_bflow_applied_to_amts       xla_ae_journal_entry_pkg.t_array_num;  -- 5132302

l_event_id                    NUMBER;  -- To handle MPA header Description: xla_ae_header_pkg.SetHdrDescription

--l_rounding_ccy                VARCHAR2(15); -- To handle MPA rounding  4262811b
l_same_currency               BOOLEAN;        -- To handle MPA rounding  4262811b

---------------------------------------------------------------------------------------------------------------


--
-- bulk performance
--
l_balance_type_code           VARCHAR2(1);
l_rec_acct_attrs              XLA_AE_LINES_PKG.t_rec_acct_attrs;
l_log_module                  VARCHAR2(240);

--
-- Upgrade strategy
--
l_actual_upg_option           VARCHAR2(1);
l_enc_upg_option           VARCHAR2(1);

--
BEGIN
--
IF g_log_enabled THEN
      l_log_module := C_DEFAULT_MODULE||'.AcctLineType_95';
END IF;
--
IF (C_LEVEL_PROCEDURE >= g_log_level) THEN

      trace
         (p_msg      => 'BEGIN of AcctLineType_95'
         ,p_level    => C_LEVEL_PROCEDURE
         ,p_module   => l_log_module);

END IF;
--
l_component_type             := 'AMB_JLT';
l_component_code             := 'RELIEVE_PROJ_ENC';
l_component_type_code        := 'S';
l_component_appl_id          :=  200;
l_amb_context_code           := 'DEFAULT';
l_entity_code                := 'AP_INVOICES';
l_event_class_code           := 'PREPAY_APPLICATION_BURDEN';
l_event_type_code            := 'PREPAY_APPLICATION_BURDEN_ALL';
l_line_definition_owner_code := 'S';
l_line_definition_code       := 'AP_PREPAY_APPLY_BURDEN_ENC_ALL';
--
l_balance_type_code          := 'E';
l_segment                     := NULL;
l_ccid                        := NULL;
l_adr_transaction_coa_id      := NULL;
l_adr_accounting_coa_id       := NULL;
l_adr_flexfield_segment_code  := NULL;
l_adr_flex_value_set_id       := NULL;
l_adr_value_type_code         := NULL;
l_adr_value_combination_id    := NULL;
l_adr_value_segment_code      := NULL;

l_bflow_method_code          := 'PRIOR_ENTRY';   -- 4219869 Business Flow
l_bflow_class_code           := 'PA_BUDGET_ENC';    -- 4219869 Business Flow
l_inherit_desc_flag          := 'N';   -- 4219869 Business Flow
l_budgetary_control_flag     := 'Y';

l_bflow_applied_to_amt_idx   := NULL; -- 5132302
l_bflow_applied_to_amt       := NULL; -- 5132302
l_entered_amt_idx            := NULL;          -- 4262811
l_accted_amt_idx             := NULL;          -- 4262811
l_acc_rev_flag               := NULL;          -- 4262811
l_accrual_line_num           := NULL;          -- 4262811
l_tmp_amt                    := NULL;          -- 4262811
--
 
IF XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id = XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.ledger_id OR
    l_balance_type_code <> 'B' THEN
IF NVL(p_source_83,'
') =  'PO'
 THEN 

   --
   XLA_AE_LINES_PKG.SetNewLine;

   p_balance_type_code          := l_balance_type_code;
   -- set the flag so later we will know whether the gain loss line needs to be created
   
   IF(l_balance_type_code = 'A' and p_actual_flag is null) THEN
     p_actual_flag :='A';
   END IF;

   --
   -- bulk performance
   --
   XLA_AE_LINES_PKG.set_ae_header_id (p_ae_header_id => p_event_id ,
                                      p_header_num   => 0); -- 4262811
   --
   -- set accounting line options
   --
   l_ae_header_id:= xla_ae_lines_pkg.SetAcctLineOption(
           p_natural_side_code          => 'C'
         , p_gain_or_loss_flag          => 'N'
         , p_gl_transfer_mode_code      => 'S'
         , p_acct_entry_type_code       => 'E'
         , p_switch_side_flag           => 'Y'
         , p_merge_duplicate_code       => 'N'
         );
   --
   l_acc_rev_natural_side_code := 'D';  -- 4262811
   -- 
   --
   -- set accounting line type info
   --
   xla_ae_lines_pkg.SetAcctLineType
      (p_component_type             => l_component_type
      ,p_event_type_code            => l_event_type_code
      ,p_line_definition_owner_code => l_line_definition_owner_code
      ,p_line_definition_code       => l_line_definition_code
      ,p_accounting_line_code       => l_component_code
      ,p_accounting_line_type_code  => l_component_type_code
      ,p_accounting_line_appl_id    => l_component_appl_id
      ,p_amb_context_code           => l_amb_context_code
      ,p_entity_code                => l_entity_code
      ,p_event_class_code           => l_event_class_code);
   --
   -- set accounting class
   --
   xla_ae_lines_pkg.SetAcctClass(
           p_accounting_class_code  => 'PA_BUDGET_ENC'
         , p_ae_header_id           => l_ae_header_id
         );

   --
   -- set rounding class
   --
   XLA_AE_LINES_PKG.g_rec_lines.array_rounding_class(XLA_AE_LINES_PKG.g_LineNumber) :=
                      'PA_BUDGET_ENC';

   --
   xla_ae_lines_pkg.g_rec_lines.array_calculate_acctd_flag(xla_ae_lines_pkg.g_LineNumber) := p_calculate_acctd_flag;
   xla_ae_lines_pkg.g_rec_lines.array_calculate_g_l_flag(xla_ae_lines_pkg.g_LineNumber) := p_calculate_g_l_flag;
   --
   -- bulk performance
   --
   XLA_AE_LINES_PKG.g_rec_lines.array_balance_type_code(XLA_AE_LINES_PKG.g_LineNumber) := l_balance_type_code;

   XLA_AE_LINES_PKG.g_rec_lines.array_ledger_id(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id;

   -- 4955764
   XLA_AE_LINES_PKG.g_rec_lines.array_gl_date(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_HEADER_PKG.g_rec_header_new.array_gl_date(g_array_event(p_event_id).array_value_num('header_index'));

   -- 4458381 Public Sector Enh
   
   --
   -- set accounting attributes for the line type
   --
   l_entered_amt_idx := 27;
   l_accted_amt_idx  := 29;
   l_bflow_applied_to_amt_idx  := NULL;  -- 5132302
   l_rec_acct_attrs.array_acct_attr_code(1) := 'ACCOUNTING_REVERSAL_OPTION';
   l_rec_acct_attrs.array_char_value(1)  := p_source_85;
   l_rec_acct_attrs.array_acct_attr_code(2) := 'ALLOC_TO_APPLICATION_ID';
   l_rec_acct_attrs.array_num_value(2)  := p_source_86;
   l_rec_acct_attrs.array_acct_attr_code(3) := 'ALLOC_TO_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(3)  := p_source_87;
   l_rec_acct_attrs.array_acct_attr_code(4) := 'ALLOC_TO_ENTITY_CODE';
   l_rec_acct_attrs.array_char_value(4)  := p_source_88;
   l_rec_acct_attrs.array_acct_attr_code(5) := 'ALLOC_TO_FIRST_DIST_ID';
   l_rec_acct_attrs.array_num_value(5)  :=  to_char(p_source_89);
   l_rec_acct_attrs.array_acct_attr_code(6) := 'ALLOC_TO_FIRST_SYS_TRAN_ID';
   l_rec_acct_attrs.array_num_value(6)  :=  to_char(p_source_90);
   l_rec_acct_attrs.array_acct_attr_code(7) := 'APPLIED_TO_APPLICATION_ID';
   l_rec_acct_attrs.array_num_value(7)  := p_source_109;
   l_rec_acct_attrs.array_acct_attr_code(8) := 'APPLIED_TO_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(8)  := p_source_110;
   l_rec_acct_attrs.array_acct_attr_code(9) := 'APPLIED_TO_ENTITY_CODE';
   l_rec_acct_attrs.array_char_value(9)  := p_source_111;
   l_rec_acct_attrs.array_acct_attr_code(10) := 'APPLIED_TO_FIRST_DIST_ID';
   l_rec_acct_attrs.array_num_value(10)  :=  to_char(p_source_112);
   l_rec_acct_attrs.array_acct_attr_code(11) := 'APPLIED_TO_FIRST_SYS_TRAN_ID';
   l_rec_acct_attrs.array_num_value(11)  :=  to_char(p_source_113);
   l_rec_acct_attrs.array_acct_attr_code(12) := 'APPLIED_TO_SECOND_DIST_ID';
   l_rec_acct_attrs.array_char_value(12)  := p_source_114;
   l_rec_acct_attrs.array_acct_attr_code(13) := 'DISTRIBUTION_IDENTIFIER_1';
   l_rec_acct_attrs.array_num_value(13)  :=  to_char(p_source_30);
   l_rec_acct_attrs.array_acct_attr_code(14) := 'DISTRIBUTION_IDENTIFIER_2';
   l_rec_acct_attrs.array_char_value(14)  := p_source_96;
   l_rec_acct_attrs.array_acct_attr_code(15) := 'DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(15)  := p_source_21;
   l_rec_acct_attrs.array_acct_attr_code(16) := 'ENC_UPG_CR_ACCT_CLASS';
   l_rec_acct_attrs.array_char_value(16)  := p_source_97;
   l_rec_acct_attrs.array_acct_attr_code(17) := 'ENC_UPG_CR_CCID';
   l_rec_acct_attrs.array_num_value(17)  := p_source_98;
   l_rec_acct_attrs.array_acct_attr_code(18) := 'ENC_UPG_CR_ENTERED_AMT';
   l_rec_acct_attrs.array_num_value(18)  := p_source_57;
   l_rec_acct_attrs.array_acct_attr_code(19) := 'ENC_UPG_CR_ENTERED_CURR';
   l_rec_acct_attrs.array_char_value(19)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(20) := 'ENC_UPG_CR_LEDGER_AMT';
   l_rec_acct_attrs.array_num_value(20)  := p_source_99;
   l_rec_acct_attrs.array_acct_attr_code(21) := 'ENC_UPG_DR_ACCT_CLASS';
   l_rec_acct_attrs.array_char_value(21)  := p_source_100;
   l_rec_acct_attrs.array_acct_attr_code(22) := 'ENC_UPG_DR_CCID';
   l_rec_acct_attrs.array_num_value(22)  := p_source_101;
   l_rec_acct_attrs.array_acct_attr_code(23) := 'ENC_UPG_DR_ENTERED_AMT';
   l_rec_acct_attrs.array_num_value(23)  := p_source_57;
   l_rec_acct_attrs.array_acct_attr_code(24) := 'ENC_UPG_DR_ENTERED_CURR';
   l_rec_acct_attrs.array_char_value(24)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(25) := 'ENC_UPG_DR_LEDGER_AMT';
   l_rec_acct_attrs.array_num_value(25)  := p_source_99;
   l_rec_acct_attrs.array_acct_attr_code(26) := 'ENC_UPG_OPTION';
   l_rec_acct_attrs.array_char_value(26)  := p_source_102;
   l_rec_acct_attrs.array_acct_attr_code(27) := 'ENTERED_CURRENCY_AMOUNT';
   l_rec_acct_attrs.array_num_value(27)  := p_source_57;
   l_rec_acct_attrs.array_acct_attr_code(28) := 'ENTERED_CURRENCY_CODE';
   l_rec_acct_attrs.array_char_value(28)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(29) := 'LEDGER_AMOUNT';
   l_rec_acct_attrs.array_num_value(29)  := p_source_99;
   l_rec_acct_attrs.array_acct_attr_code(30) := 'REVERSED_DISTRIBUTION_ID1';
   l_rec_acct_attrs.array_num_value(30)  :=  to_char(p_source_103);
   l_rec_acct_attrs.array_acct_attr_code(31) := 'REVERSED_DISTRIBUTION_ID2';
   l_rec_acct_attrs.array_char_value(31)  := p_source_104;
   l_rec_acct_attrs.array_acct_attr_code(32) := 'REVERSED_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(32)  := p_source_105;
   l_rec_acct_attrs.array_acct_attr_code(33) := 'UPG_CR_ENC_TYPE_ID';
   l_rec_acct_attrs.array_num_value(33)  := p_source_106;
   l_rec_acct_attrs.array_acct_attr_code(34) := 'UPG_DR_ENC_TYPE_ID';
   l_rec_acct_attrs.array_num_value(34)  := p_source_107;

   XLA_AE_LINES_PKG.SetLineAcctAttrs(l_rec_acct_attrs);
   p_gain_or_loss_ref  := XLA_AE_LINES_PKG.g_rec_lines.array_gain_or_loss_ref(XLA_AE_LINES_PKG.g_LineNumber);

   ---------------------------------------------------------------------------------------------------------------
   -- 4336173 -- assign Business Flow Class (replace code in xla_ae_lines_pkg.Business_Flow_Validation)
   ---------------------------------------------------------------------------------------------------------------
   XLA_AE_LINES_PKG.g_rec_lines.array_business_class_code(XLA_AE_LINES_PKG.g_LineNumber) := l_bflow_class_code;

   l_actual_upg_option  := XLA_AE_LINES_PKG.g_rec_lines.array_actual_upg_option(XLA_AE_LINES_PKG.g_LineNumber);
   l_enc_upg_option     := XLA_AE_LINES_PKG.g_rec_lines.array_enc_upg_option(XLA_AE_LINES_PKG.g_LineNumber);

   IF xla_accounting_cache_pkg.GetValueChar
         (p_source_code         => 'LEDGER_CATEGORY_CODE'
         ,p_target_ledger_id    => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id) IN ('PRIMARY','ALC')
   AND l_bflow_method_code = 'PRIOR_ENTRY'
--   AND (l_actual_upg_option = 'Y' OR l_enc_upg_option = 'Y') Bug 4922099
   AND ( (NVL(l_actual_upg_option, 'N') IN ('Y', 'O')) OR
         (NVL(l_enc_upg_option, 'N') IN ('Y', 'O'))
       )
   THEN
         xla_ae_lines_pkg.BflowUpgEntry
           (p_business_method_code    => l_bflow_method_code
           ,p_business_class_code     => l_bflow_class_code
           ,p_balance_type            => l_balance_type_code);
   ELSE
      NULL;
XLA_AE_LINES_PKG.business_flow_validation(
                                p_business_method_code     => l_bflow_method_code
                               ,p_business_class_code      => l_bflow_class_code
                               ,p_inherit_description_flag => l_inherit_desc_flag);
   END IF;

   --
   -- call analytical criteria
   --
   -- Inherited Analytical Criteria for business flow method of Prior Entry.
   --
   -- call description
   --
   
xla_ae_lines_pkg.SetLineDescription(
   p_ae_header_id => l_ae_header_id
  ,p_description  => Description_3 (
     p_application_id         => p_application_id
   , p_ae_header_id           => l_ae_header_id 
, p_source_2 => p_source_2
, p_source_3 => p_source_3
, p_source_4 => p_source_4
, p_source_5 => p_source_5
   )
);


   --
   -- call ADRs
   -- Bug 4922099
   --
   IF ( (l_bflow_method_code <> 'PRIOR_ENTRY') OR
        (NVL(l_actual_upg_option, 'N') = 'O') OR
        (NVL(l_enc_upg_option, 'N') = 'O')
      )
   THEN
   NULL;
   --
   --
   
   --
   --
   END IF;
   --
   -- Bug 4922099
   IF ( ( (NVL(l_actual_upg_option, 'N') = 'O') OR
          (NVL(l_enc_upg_option, 'N') = 'O')
        ) AND
        (l_bflow_method_code = 'PRIOR_ENTRY')
      )
   THEN
      IF
      --
      1 = 1
      --
      THEN
      xla_accounting_err_pkg.build_message
                                    (p_appli_s_name            => 'XLA'
                                    ,p_msg_name                => 'XLA_UPG_OVERRIDE_ADR_UNDEFINED'
                                    ,p_token_1                 => 'LINE_NUMBER'
                                    ,p_value_1                 => XLA_AE_LINES_PKG.g_LineNumber
                                    ,p_token_2                 => 'LINE_TYPE_NAME'
                                    ,p_value_2                 => XLA_AE_SOURCES_PKG.GetComponentName (
                                                                             l_component_type
                                                                            ,l_component_code
                                                                            ,l_component_type_code
                                                                            ,l_component_appl_id
                                                                            ,l_amb_context_code
                                                                            ,l_entity_code
                                                                            ,l_event_class_code
                                                                           )
                                    ,p_token_3                 => 'OWNER'
                                    ,p_value_3                 => xla_lookups_pkg.get_meaning(
                                                                          p_lookup_type     => 'XLA_OWNER_TYPE'
                                                                          ,p_lookup_code    => l_component_type_code
                                                                         )
                                    ,p_token_4                 => 'PRODUCT_NAME'
                                    ,p_value_4                 => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.application_name
                                    ,p_entity_id               => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.entity_id
                                    ,p_event_id                => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.event_id
                                    ,p_ledger_id               => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id
                                    ,p_ae_header_id            =>  NULL
                                       );

        IF (C_LEVEL_ERROR>= g_log_level) THEN
                 trace
                      (p_msg      => 'ERROR: XLA_UPG_OVERRIDE_ADR_UNDEFINED'
                      ,p_level    => C_LEVEL_ERROR
                      ,p_module   => l_log_module);
        END IF;
      END IF;
   END IF;
   --
   --
   ------------------------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- NOTE: XLA_AE_LINES_PKG.ValidateCurrentLine should NOT be generated if business flow method is
   -- Prior Entry.  Currently, the following code is always generated.
   ------------------------------------------------------------------------------------------------
   -- No ValidateCurrentLine for business flow method of Prior Entry

   ------------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- Populated credit and debit amounts -- Need to generate this within IF <condition>
   ------------------------------------------------------------------------------------
   XLA_AE_LINES_PKG.SetDebitCreditAmounts;

   ----------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- Update journal entry status -- Need to generate this within IF <condition>
   ----------------------------------------------------------------------------------
   XLA_AE_JOURNAL_ENTRY_PKG.UpdateJournalEntryStatus
         (p_hdr_idx => g_array_event(p_event_id).array_value_num('header_index')
         ,p_balance_type_code => l_balance_type_code
         );

   -------------------------------------------------------------------------------------------
   -- 4262811 - Generate the Accrual Reversal lines
   -------------------------------------------------------------------------------------------
   BEGIN
      l_acc_rev_flag := XLA_AE_HEADER_PKG.g_rec_header_new.array_accrual_reversal_flag
                              (g_array_event(p_event_id).array_value_num('header_index'));
      IF l_acc_rev_flag IS NULL THEN
         l_acc_rev_flag := 'N';
      END IF;
   EXCEPTION
      WHEN OTHERS THEN
         l_acc_rev_flag := 'N';
   END;
   --
   IF (l_acc_rev_flag = 'Y') THEN

       -- 4645092  ------------------------------------------------------------------------------
       -- To allow MPA report to determine if it should generate report process
       XLA_ACCOUNTING_PKG.g_mpa_accrual_exists := 'Y';
       ------------------------------------------------------------------------------------------

       l_accrual_line_num := XLA_AE_LINES_PKG.g_LineNumber;
       XLA_AE_LINES_PKG.CopyLineInfo(l_accrual_line_num);
   -- added call to set_ccid to execute mapping  for secondary accrual reversal entries bug 7444204
   -- call ADRs
   -- Bug 4922099
   --
   IF ( (l_bflow_method_code <> 'PRIOR_ENTRY') OR
        (NVL(l_actual_upg_option, 'N') = 'O') OR
        (NVL(l_enc_upg_option, 'N') = 'O')
      )
   THEN
   NULL;
   --
   --
   
   --
   --
   END IF;

       --
       -- Update the line information that should be overwritten
       --
       XLA_AE_LINES_PKG.set_ae_header_id(p_ae_header_id => p_event_id ,
                                         p_header_num   => 1);
       XLA_AE_LINES_PKG.g_rec_lines.array_header_num(XLA_AE_LINES_PKG.g_LineNumber)  :=1;

       XLA_AE_LINES_PKG.g_rec_lines.array_business_class_code(XLA_AE_LINES_PKG.g_LineNumber) := NULL; -- 4669271

       IF l_bflow_method_code <> 'NONE' THEN  -- 4655713b
          XLA_AE_LINES_PKG.g_rec_lines.array_reversal_code(XLA_AE_LINES_PKG.g_LineNumber) := CONCAT('MPA_',l_bflow_method_code);
       END IF;

      --
      -- Depending on the Reversal Method setup, do a switch side or changes sign for the amounts
      --
      IF (XLA_AE_JOURNAL_ENTRY_PKG.g_cache_ledgers_info.ledger_reversal_option = 'SIDE') THEN
          XLA_AE_LINES_PKG.g_rec_lines.array_natural_side_code(XLA_AE_LINES_PKG.g_LineNumber) :=  l_acc_rev_natural_side_code;
      ELSE
          ---------------------------------------------------------------------------------------------------
          -- 4262811a Switch Sign
          ---------------------------------------------------------------------------------------------------
          XLA_AE_LINES_PKG.g_rec_lines.array_switch_side_flag(XLA_AE_LINES_PKG.g_LineNumber) := 'N';  -- 5052518
          XLA_AE_LINES_PKG.g_rec_lines.array_ledger_amount(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_ledger_amount(XLA_AE_LINES_PKG.g_LineNumber) * -1;
          XLA_AE_LINES_PKG.g_rec_lines.array_entered_amount(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_entered_amount(XLA_AE_LINES_PKG.g_LineNumber) * -1;
          -- 5132302
          XLA_AE_LINES_PKG.g_rec_lines.array_bflow_applied_to_amt(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_bflow_applied_to_amt(XLA_AE_LINES_PKG.g_LineNumber) * -1;

      END IF;

      -- 4955764
      XLA_AE_LINES_PKG.g_rec_lines.array_gl_date(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_HEADER_PKG.g_rec_header_new.array_gl_date(g_array_event(p_event_id).array_value_num('acc_rev_header_index'));


      XLA_AE_LINES_PKG.ValidateCurrentLine;
      XLA_AE_LINES_PKG.SetDebitCreditAmounts;

      XLA_AE_JOURNAL_ENTRY_PKG.UpdateJournalEntryStatus
               (p_hdr_idx           => g_array_event(p_event_id).array_value_num('acc_rev_header_index')
               ,p_balance_type_code => l_balance_type_code);

   END IF;

   -----------------------------------------------------------------------------------------
   -- 4262811 Multiperiod Accounting
   -----------------------------------------------------------------------------------------
     -- No MPA option is assigned.


END IF;
END IF;
--

--
IF (C_LEVEL_PROCEDURE >= g_log_level) THEN
   trace
      (p_msg      => 'END of AcctLineType_95'
      ,p_level    => C_LEVEL_PROCEDURE
      ,p_module   => l_log_module);
END IF;
--
EXCEPTION
  WHEN xla_exceptions_pkg.application_exception THEN
      RAISE;
  WHEN OTHERS THEN
       xla_exceptions_pkg.raise_message
           (p_location => 'XLA_00200_AAD_S_000010_BC_PKG.AcctLineType_95');
END AcctLineType_95;
--

---------------------------------------
--
-- PRIVATE FUNCTION
--         AcctLineType_96
--
---------------------------------------
PROCEDURE AcctLineType_96 (
  p_application_id        IN NUMBER
 ,p_event_id              IN NUMBER
 ,p_calculate_acctd_flag  IN VARCHAR2
 ,p_calculate_g_l_flag    IN VARCHAR2
 ,p_actual_flag           IN OUT VARCHAR2
 ,p_balance_type_code     OUT VARCHAR2
 ,p_gain_or_loss_ref      OUT VARCHAR2
 
--Document Distribution Type
 , p_source_2            IN VARCHAR2
--Project Name
 , p_source_3            IN VARCHAR2
--Task Number
 , p_source_4            IN VARCHAR2
--Expenditure Organization
 , p_source_5            IN NUMBER
--Distribution Link Type
 , p_source_21            IN VARCHAR2
--Invoice Distribution Identifier
 , p_source_30            IN NUMBER
--Invoice Currency Code
 , p_source_33            IN VARCHAR2
--Invoice Distribution Amount
 , p_source_57            IN NUMBER
--Document Type
 , p_source_83            IN VARCHAR2
--Accounting reversal indicator for project invoice burden
 , p_source_85            IN VARCHAR2
--Allocated to Application Identifier
 , p_source_86            IN NUMBER
--Allocated to Distribution Type
 , p_source_87            IN VARCHAR2
--Allocated to Entity Code
 , p_source_88            IN VARCHAR2
--Allocated to First Distribution Identifier
 , p_source_89            IN NUMBER
--Allocated to First System Transaction Identifier
 , p_source_90            IN NUMBER
--Invoice Distribution Expenditure Type
 , p_source_96            IN VARCHAR2
--Encumbrance Upgrade Credit Accounting Class
 , p_source_97            IN VARCHAR2
--Encumbrance Upgrade Credit Account
 , p_source_98            IN NUMBER
--Invoice Distribution Ledger Amount Before Rounding
 , p_source_99            IN NUMBER
--Encumbrance Upgrade Debit Accounting Class
 , p_source_100            IN VARCHAR2
--Encumbrance Upgrade Debit Account
 , p_source_101            IN NUMBER
--Use Encumbrances Upgrade Attributes Flag
 , p_source_102            IN VARCHAR2
--Accounting reversal first distribution identifier for project invoice burden
 , p_source_103            IN NUMBER
--Invoice Burden Applied to Second Distribution Identifier
 , p_source_104            IN VARCHAR2
--Accounting reversal distribution type for project invoice burden
 , p_source_105            IN VARCHAR2
--Encumbrance Upgrade Credit Encumbrance Type
 , p_source_106            IN NUMBER
--Encumbrance Upgrade Debit Encumbrance Type
 , p_source_107            IN NUMBER
--Project Encumbrance Applied to Application Identifier
 , p_source_109            IN NUMBER
--Project Encumbrance Applied to Distribution Type
 , p_source_110            IN VARCHAR2
--Project Encumbrance Applied to Entity Code
 , p_source_111            IN VARCHAR2
--Project Encumbrance First Distribution Identifier
 , p_source_112            IN NUMBER
--Project Encumbrance First System Transaction Identifier
 , p_source_113            IN NUMBER
--Project Encumbrance Second Distribution Identifier
 , p_source_114            IN VARCHAR2
)
IS

l_component_type              VARCHAR2(80);
l_component_code              VARCHAR2(30);
l_component_type_code         VARCHAR2(1);
l_component_appl_id           INTEGER;
l_amb_context_code            VARCHAR2(30);
l_entity_code                 VARCHAR2(30);
l_event_class_code            VARCHAR2(30);
l_ae_header_id                NUMBER;
l_event_type_code             VARCHAR2(30);
l_line_definition_code        VARCHAR2(30);
l_line_definition_owner_code  VARCHAR2(1);
--
-- adr variables
l_segment                     VARCHAR2(30);
l_ccid                        NUMBER;
l_adr_transaction_coa_id      NUMBER;
l_adr_accounting_coa_id       NUMBER;
l_adr_flexfield_segment_code  VARCHAR2(30);
l_adr_flex_value_set_id       NUMBER;
l_adr_value_type_code         VARCHAR2(30);
l_adr_value_combination_id    NUMBER;
l_adr_value_segment_code      VARCHAR2(30);

l_bflow_method_code           VARCHAR2(30);  -- 4219869 Business Flow
l_bflow_class_code            VARCHAR2(30);  -- 4219869 Business Flow
l_inherit_desc_flag           VARCHAR2(1);   -- 4219869 Business Flow
l_budgetary_control_flag      VARCHAR2(1);   -- 4458381 Public Sector Enh

-- 4262811 Variables ------------------------------------------------------------------------------------------
l_entered_amt_idx             NUMBER;
l_accted_amt_idx              NUMBER;
l_acc_rev_flag                VARCHAR2(1);
l_accrual_line_num            NUMBER;
l_tmp_amt                     NUMBER;
l_acc_rev_natural_side_code   VARCHAR2(1);

l_num_entries                 NUMBER;
l_gl_dates                    xla_ae_journal_entry_pkg.t_array_date;
l_accted_amts                 xla_ae_journal_entry_pkg.t_array_num;
l_entered_amts                xla_ae_journal_entry_pkg.t_array_num;
l_period_names                xla_ae_journal_entry_pkg.t_array_V15L;
l_recog_line_1                NUMBER;
l_recog_line_2                NUMBER;

l_bflow_applied_to_amt_idx    NUMBER;                                -- 5132302
l_bflow_applied_to_amt        NUMBER;                                -- 5132302
l_bflow_applied_to_amts       xla_ae_journal_entry_pkg.t_array_num;  -- 5132302

l_event_id                    NUMBER;  -- To handle MPA header Description: xla_ae_header_pkg.SetHdrDescription

--l_rounding_ccy                VARCHAR2(15); -- To handle MPA rounding  4262811b
l_same_currency               BOOLEAN;        -- To handle MPA rounding  4262811b

---------------------------------------------------------------------------------------------------------------


--
-- bulk performance
--
l_balance_type_code           VARCHAR2(1);
l_rec_acct_attrs              XLA_AE_LINES_PKG.t_rec_acct_attrs;
l_log_module                  VARCHAR2(240);

--
-- Upgrade strategy
--
l_actual_upg_option           VARCHAR2(1);
l_enc_upg_option           VARCHAR2(1);

--
BEGIN
--
IF g_log_enabled THEN
      l_log_module := C_DEFAULT_MODULE||'.AcctLineType_96';
END IF;
--
IF (C_LEVEL_PROCEDURE >= g_log_level) THEN

      trace
         (p_msg      => 'BEGIN of AcctLineType_96'
         ,p_level    => C_LEVEL_PROCEDURE
         ,p_module   => l_log_module);

END IF;
--
l_component_type             := 'AMB_JLT';
l_component_code             := 'RESERVE_PROJ_ENC';
l_component_type_code        := 'S';
l_component_appl_id          :=  200;
l_amb_context_code           := 'DEFAULT';
l_entity_code                := 'AP_INVOICES';
l_event_class_code           := 'INVOICE_BURDEN';
l_event_type_code            := 'INVOICE_BURDEN_ALL';
l_line_definition_owner_code := 'S';
l_line_definition_code       := 'AP_INV_BURDEN_ENC_ALL';
--
l_balance_type_code          := 'E';
l_segment                     := NULL;
l_ccid                        := NULL;
l_adr_transaction_coa_id      := NULL;
l_adr_accounting_coa_id       := NULL;
l_adr_flexfield_segment_code  := NULL;
l_adr_flex_value_set_id       := NULL;
l_adr_value_type_code         := NULL;
l_adr_value_combination_id    := NULL;
l_adr_value_segment_code      := NULL;

l_bflow_method_code          := 'PRIOR_ENTRY';   -- 4219869 Business Flow
l_bflow_class_code           := 'PA_BUDGET_ENC';    -- 4219869 Business Flow
l_inherit_desc_flag          := 'N';   -- 4219869 Business Flow
l_budgetary_control_flag     := 'Y';

l_bflow_applied_to_amt_idx   := NULL; -- 5132302
l_bflow_applied_to_amt       := NULL; -- 5132302
l_entered_amt_idx            := NULL;          -- 4262811
l_accted_amt_idx             := NULL;          -- 4262811
l_acc_rev_flag               := NULL;          -- 4262811
l_accrual_line_num           := NULL;          -- 4262811
l_tmp_amt                    := NULL;          -- 4262811
--
 
IF XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id = XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.ledger_id OR
    l_balance_type_code <> 'B' THEN
IF NVL(p_source_83,'
') =  'PO'
 THEN 

   --
   XLA_AE_LINES_PKG.SetNewLine;

   p_balance_type_code          := l_balance_type_code;
   -- set the flag so later we will know whether the gain loss line needs to be created
   
   IF(l_balance_type_code = 'A' and p_actual_flag is null) THEN
     p_actual_flag :='A';
   END IF;

   --
   -- bulk performance
   --
   XLA_AE_LINES_PKG.set_ae_header_id (p_ae_header_id => p_event_id ,
                                      p_header_num   => 0); -- 4262811
   --
   -- set accounting line options
   --
   l_ae_header_id:= xla_ae_lines_pkg.SetAcctLineOption(
           p_natural_side_code          => 'D'
         , p_gain_or_loss_flag          => 'N'
         , p_gl_transfer_mode_code      => 'S'
         , p_acct_entry_type_code       => 'E'
         , p_switch_side_flag           => 'Y'
         , p_merge_duplicate_code       => 'N'
         );
   --
   l_acc_rev_natural_side_code := 'C';  -- 4262811
   -- 
   --
   -- set accounting line type info
   --
   xla_ae_lines_pkg.SetAcctLineType
      (p_component_type             => l_component_type
      ,p_event_type_code            => l_event_type_code
      ,p_line_definition_owner_code => l_line_definition_owner_code
      ,p_line_definition_code       => l_line_definition_code
      ,p_accounting_line_code       => l_component_code
      ,p_accounting_line_type_code  => l_component_type_code
      ,p_accounting_line_appl_id    => l_component_appl_id
      ,p_amb_context_code           => l_amb_context_code
      ,p_entity_code                => l_entity_code
      ,p_event_class_code           => l_event_class_code);
   --
   -- set accounting class
   --
   xla_ae_lines_pkg.SetAcctClass(
           p_accounting_class_code  => 'PA_BUDGET_ENC'
         , p_ae_header_id           => l_ae_header_id
         );

   --
   -- set rounding class
   --
   XLA_AE_LINES_PKG.g_rec_lines.array_rounding_class(XLA_AE_LINES_PKG.g_LineNumber) :=
                      'PA_BUDGET_ENC';

   --
   xla_ae_lines_pkg.g_rec_lines.array_calculate_acctd_flag(xla_ae_lines_pkg.g_LineNumber) := p_calculate_acctd_flag;
   xla_ae_lines_pkg.g_rec_lines.array_calculate_g_l_flag(xla_ae_lines_pkg.g_LineNumber) := p_calculate_g_l_flag;
   --
   -- bulk performance
   --
   XLA_AE_LINES_PKG.g_rec_lines.array_balance_type_code(XLA_AE_LINES_PKG.g_LineNumber) := l_balance_type_code;

   XLA_AE_LINES_PKG.g_rec_lines.array_ledger_id(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id;

   -- 4955764
   XLA_AE_LINES_PKG.g_rec_lines.array_gl_date(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_HEADER_PKG.g_rec_header_new.array_gl_date(g_array_event(p_event_id).array_value_num('header_index'));

   -- 4458381 Public Sector Enh
   
   --
   -- set accounting attributes for the line type
   --
   l_entered_amt_idx := 27;
   l_accted_amt_idx  := 29;
   l_bflow_applied_to_amt_idx  := NULL;  -- 5132302
   l_rec_acct_attrs.array_acct_attr_code(1) := 'ACCOUNTING_REVERSAL_OPTION';
   l_rec_acct_attrs.array_char_value(1)  := p_source_85;
   l_rec_acct_attrs.array_acct_attr_code(2) := 'ALLOC_TO_APPLICATION_ID';
   l_rec_acct_attrs.array_num_value(2)  := p_source_86;
   l_rec_acct_attrs.array_acct_attr_code(3) := 'ALLOC_TO_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(3)  := p_source_87;
   l_rec_acct_attrs.array_acct_attr_code(4) := 'ALLOC_TO_ENTITY_CODE';
   l_rec_acct_attrs.array_char_value(4)  := p_source_88;
   l_rec_acct_attrs.array_acct_attr_code(5) := 'ALLOC_TO_FIRST_DIST_ID';
   l_rec_acct_attrs.array_num_value(5)  :=  to_char(p_source_89);
   l_rec_acct_attrs.array_acct_attr_code(6) := 'ALLOC_TO_FIRST_SYS_TRAN_ID';
   l_rec_acct_attrs.array_num_value(6)  :=  to_char(p_source_90);
   l_rec_acct_attrs.array_acct_attr_code(7) := 'APPLIED_TO_APPLICATION_ID';
   l_rec_acct_attrs.array_num_value(7)  := p_source_109;
   l_rec_acct_attrs.array_acct_attr_code(8) := 'APPLIED_TO_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(8)  := p_source_110;
   l_rec_acct_attrs.array_acct_attr_code(9) := 'APPLIED_TO_ENTITY_CODE';
   l_rec_acct_attrs.array_char_value(9)  := p_source_111;
   l_rec_acct_attrs.array_acct_attr_code(10) := 'APPLIED_TO_FIRST_DIST_ID';
   l_rec_acct_attrs.array_num_value(10)  :=  to_char(p_source_112);
   l_rec_acct_attrs.array_acct_attr_code(11) := 'APPLIED_TO_FIRST_SYS_TRAN_ID';
   l_rec_acct_attrs.array_num_value(11)  :=  to_char(p_source_113);
   l_rec_acct_attrs.array_acct_attr_code(12) := 'APPLIED_TO_SECOND_DIST_ID';
   l_rec_acct_attrs.array_char_value(12)  := p_source_114;
   l_rec_acct_attrs.array_acct_attr_code(13) := 'DISTRIBUTION_IDENTIFIER_1';
   l_rec_acct_attrs.array_num_value(13)  :=  to_char(p_source_30);
   l_rec_acct_attrs.array_acct_attr_code(14) := 'DISTRIBUTION_IDENTIFIER_2';
   l_rec_acct_attrs.array_char_value(14)  := p_source_96;
   l_rec_acct_attrs.array_acct_attr_code(15) := 'DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(15)  := p_source_21;
   l_rec_acct_attrs.array_acct_attr_code(16) := 'ENC_UPG_CR_ACCT_CLASS';
   l_rec_acct_attrs.array_char_value(16)  := p_source_97;
   l_rec_acct_attrs.array_acct_attr_code(17) := 'ENC_UPG_CR_CCID';
   l_rec_acct_attrs.array_num_value(17)  := p_source_98;
   l_rec_acct_attrs.array_acct_attr_code(18) := 'ENC_UPG_CR_ENTERED_AMT';
   l_rec_acct_attrs.array_num_value(18)  := p_source_57;
   l_rec_acct_attrs.array_acct_attr_code(19) := 'ENC_UPG_CR_ENTERED_CURR';
   l_rec_acct_attrs.array_char_value(19)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(20) := 'ENC_UPG_CR_LEDGER_AMT';
   l_rec_acct_attrs.array_num_value(20)  := p_source_99;
   l_rec_acct_attrs.array_acct_attr_code(21) := 'ENC_UPG_DR_ACCT_CLASS';
   l_rec_acct_attrs.array_char_value(21)  := p_source_100;
   l_rec_acct_attrs.array_acct_attr_code(22) := 'ENC_UPG_DR_CCID';
   l_rec_acct_attrs.array_num_value(22)  := p_source_101;
   l_rec_acct_attrs.array_acct_attr_code(23) := 'ENC_UPG_DR_ENTERED_AMT';
   l_rec_acct_attrs.array_num_value(23)  := p_source_57;
   l_rec_acct_attrs.array_acct_attr_code(24) := 'ENC_UPG_DR_ENTERED_CURR';
   l_rec_acct_attrs.array_char_value(24)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(25) := 'ENC_UPG_DR_LEDGER_AMT';
   l_rec_acct_attrs.array_num_value(25)  := p_source_99;
   l_rec_acct_attrs.array_acct_attr_code(26) := 'ENC_UPG_OPTION';
   l_rec_acct_attrs.array_char_value(26)  := p_source_102;
   l_rec_acct_attrs.array_acct_attr_code(27) := 'ENTERED_CURRENCY_AMOUNT';
   l_rec_acct_attrs.array_num_value(27)  := p_source_57;
   l_rec_acct_attrs.array_acct_attr_code(28) := 'ENTERED_CURRENCY_CODE';
   l_rec_acct_attrs.array_char_value(28)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(29) := 'LEDGER_AMOUNT';
   l_rec_acct_attrs.array_num_value(29)  := p_source_99;
   l_rec_acct_attrs.array_acct_attr_code(30) := 'REVERSED_DISTRIBUTION_ID1';
   l_rec_acct_attrs.array_num_value(30)  :=  to_char(p_source_103);
   l_rec_acct_attrs.array_acct_attr_code(31) := 'REVERSED_DISTRIBUTION_ID2';
   l_rec_acct_attrs.array_char_value(31)  := p_source_104;
   l_rec_acct_attrs.array_acct_attr_code(32) := 'REVERSED_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(32)  := p_source_105;
   l_rec_acct_attrs.array_acct_attr_code(33) := 'UPG_CR_ENC_TYPE_ID';
   l_rec_acct_attrs.array_num_value(33)  := p_source_106;
   l_rec_acct_attrs.array_acct_attr_code(34) := 'UPG_DR_ENC_TYPE_ID';
   l_rec_acct_attrs.array_num_value(34)  := p_source_107;

   XLA_AE_LINES_PKG.SetLineAcctAttrs(l_rec_acct_attrs);
   p_gain_or_loss_ref  := XLA_AE_LINES_PKG.g_rec_lines.array_gain_or_loss_ref(XLA_AE_LINES_PKG.g_LineNumber);

   ---------------------------------------------------------------------------------------------------------------
   -- 4336173 -- assign Business Flow Class (replace code in xla_ae_lines_pkg.Business_Flow_Validation)
   ---------------------------------------------------------------------------------------------------------------
   XLA_AE_LINES_PKG.g_rec_lines.array_business_class_code(XLA_AE_LINES_PKG.g_LineNumber) := l_bflow_class_code;

   l_actual_upg_option  := XLA_AE_LINES_PKG.g_rec_lines.array_actual_upg_option(XLA_AE_LINES_PKG.g_LineNumber);
   l_enc_upg_option     := XLA_AE_LINES_PKG.g_rec_lines.array_enc_upg_option(XLA_AE_LINES_PKG.g_LineNumber);

   IF xla_accounting_cache_pkg.GetValueChar
         (p_source_code         => 'LEDGER_CATEGORY_CODE'
         ,p_target_ledger_id    => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id) IN ('PRIMARY','ALC')
   AND l_bflow_method_code = 'PRIOR_ENTRY'
--   AND (l_actual_upg_option = 'Y' OR l_enc_upg_option = 'Y') Bug 4922099
   AND ( (NVL(l_actual_upg_option, 'N') IN ('Y', 'O')) OR
         (NVL(l_enc_upg_option, 'N') IN ('Y', 'O'))
       )
   THEN
         xla_ae_lines_pkg.BflowUpgEntry
           (p_business_method_code    => l_bflow_method_code
           ,p_business_class_code     => l_bflow_class_code
           ,p_balance_type            => l_balance_type_code);
   ELSE
      NULL;
XLA_AE_LINES_PKG.business_flow_validation(
                                p_business_method_code     => l_bflow_method_code
                               ,p_business_class_code      => l_bflow_class_code
                               ,p_inherit_description_flag => l_inherit_desc_flag);
   END IF;

   --
   -- call analytical criteria
   --
   -- Inherited Analytical Criteria for business flow method of Prior Entry.
   --
   -- call description
   --
   
xla_ae_lines_pkg.SetLineDescription(
   p_ae_header_id => l_ae_header_id
  ,p_description  => Description_3 (
     p_application_id         => p_application_id
   , p_ae_header_id           => l_ae_header_id 
, p_source_2 => p_source_2
, p_source_3 => p_source_3
, p_source_4 => p_source_4
, p_source_5 => p_source_5
   )
);


   --
   -- call ADRs
   -- Bug 4922099
   --
   IF ( (l_bflow_method_code <> 'PRIOR_ENTRY') OR
        (NVL(l_actual_upg_option, 'N') = 'O') OR
        (NVL(l_enc_upg_option, 'N') = 'O')
      )
   THEN
   NULL;
   --
   --
   
   --
   --
   END IF;
   --
   -- Bug 4922099
   IF ( ( (NVL(l_actual_upg_option, 'N') = 'O') OR
          (NVL(l_enc_upg_option, 'N') = 'O')
        ) AND
        (l_bflow_method_code = 'PRIOR_ENTRY')
      )
   THEN
      IF
      --
      1 = 1
      --
      THEN
      xla_accounting_err_pkg.build_message
                                    (p_appli_s_name            => 'XLA'
                                    ,p_msg_name                => 'XLA_UPG_OVERRIDE_ADR_UNDEFINED'
                                    ,p_token_1                 => 'LINE_NUMBER'
                                    ,p_value_1                 => XLA_AE_LINES_PKG.g_LineNumber
                                    ,p_token_2                 => 'LINE_TYPE_NAME'
                                    ,p_value_2                 => XLA_AE_SOURCES_PKG.GetComponentName (
                                                                             l_component_type
                                                                            ,l_component_code
                                                                            ,l_component_type_code
                                                                            ,l_component_appl_id
                                                                            ,l_amb_context_code
                                                                            ,l_entity_code
                                                                            ,l_event_class_code
                                                                           )
                                    ,p_token_3                 => 'OWNER'
                                    ,p_value_3                 => xla_lookups_pkg.get_meaning(
                                                                          p_lookup_type     => 'XLA_OWNER_TYPE'
                                                                          ,p_lookup_code    => l_component_type_code
                                                                         )
                                    ,p_token_4                 => 'PRODUCT_NAME'
                                    ,p_value_4                 => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.application_name
                                    ,p_entity_id               => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.entity_id
                                    ,p_event_id                => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.event_id
                                    ,p_ledger_id               => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id
                                    ,p_ae_header_id            =>  NULL
                                       );

        IF (C_LEVEL_ERROR>= g_log_level) THEN
                 trace
                      (p_msg      => 'ERROR: XLA_UPG_OVERRIDE_ADR_UNDEFINED'
                      ,p_level    => C_LEVEL_ERROR
                      ,p_module   => l_log_module);
        END IF;
      END IF;
   END IF;
   --
   --
   ------------------------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- NOTE: XLA_AE_LINES_PKG.ValidateCurrentLine should NOT be generated if business flow method is
   -- Prior Entry.  Currently, the following code is always generated.
   ------------------------------------------------------------------------------------------------
   -- No ValidateCurrentLine for business flow method of Prior Entry

   ------------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- Populated credit and debit amounts -- Need to generate this within IF <condition>
   ------------------------------------------------------------------------------------
   XLA_AE_LINES_PKG.SetDebitCreditAmounts;

   ----------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- Update journal entry status -- Need to generate this within IF <condition>
   ----------------------------------------------------------------------------------
   XLA_AE_JOURNAL_ENTRY_PKG.UpdateJournalEntryStatus
         (p_hdr_idx => g_array_event(p_event_id).array_value_num('header_index')
         ,p_balance_type_code => l_balance_type_code
         );

   -------------------------------------------------------------------------------------------
   -- 4262811 - Generate the Accrual Reversal lines
   -------------------------------------------------------------------------------------------
   BEGIN
      l_acc_rev_flag := XLA_AE_HEADER_PKG.g_rec_header_new.array_accrual_reversal_flag
                              (g_array_event(p_event_id).array_value_num('header_index'));
      IF l_acc_rev_flag IS NULL THEN
         l_acc_rev_flag := 'N';
      END IF;
   EXCEPTION
      WHEN OTHERS THEN
         l_acc_rev_flag := 'N';
   END;
   --
   IF (l_acc_rev_flag = 'Y') THEN

       -- 4645092  ------------------------------------------------------------------------------
       -- To allow MPA report to determine if it should generate report process
       XLA_ACCOUNTING_PKG.g_mpa_accrual_exists := 'Y';
       ------------------------------------------------------------------------------------------

       l_accrual_line_num := XLA_AE_LINES_PKG.g_LineNumber;
       XLA_AE_LINES_PKG.CopyLineInfo(l_accrual_line_num);
   -- added call to set_ccid to execute mapping  for secondary accrual reversal entries bug 7444204
   -- call ADRs
   -- Bug 4922099
   --
   IF ( (l_bflow_method_code <> 'PRIOR_ENTRY') OR
        (NVL(l_actual_upg_option, 'N') = 'O') OR
        (NVL(l_enc_upg_option, 'N') = 'O')
      )
   THEN
   NULL;
   --
   --
   
   --
   --
   END IF;

       --
       -- Update the line information that should be overwritten
       --
       XLA_AE_LINES_PKG.set_ae_header_id(p_ae_header_id => p_event_id ,
                                         p_header_num   => 1);
       XLA_AE_LINES_PKG.g_rec_lines.array_header_num(XLA_AE_LINES_PKG.g_LineNumber)  :=1;

       XLA_AE_LINES_PKG.g_rec_lines.array_business_class_code(XLA_AE_LINES_PKG.g_LineNumber) := NULL; -- 4669271

       IF l_bflow_method_code <> 'NONE' THEN  -- 4655713b
          XLA_AE_LINES_PKG.g_rec_lines.array_reversal_code(XLA_AE_LINES_PKG.g_LineNumber) := CONCAT('MPA_',l_bflow_method_code);
       END IF;

      --
      -- Depending on the Reversal Method setup, do a switch side or changes sign for the amounts
      --
      IF (XLA_AE_JOURNAL_ENTRY_PKG.g_cache_ledgers_info.ledger_reversal_option = 'SIDE') THEN
          XLA_AE_LINES_PKG.g_rec_lines.array_natural_side_code(XLA_AE_LINES_PKG.g_LineNumber) :=  l_acc_rev_natural_side_code;
      ELSE
          ---------------------------------------------------------------------------------------------------
          -- 4262811a Switch Sign
          ---------------------------------------------------------------------------------------------------
          XLA_AE_LINES_PKG.g_rec_lines.array_switch_side_flag(XLA_AE_LINES_PKG.g_LineNumber) := 'N';  -- 5052518
          XLA_AE_LINES_PKG.g_rec_lines.array_ledger_amount(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_ledger_amount(XLA_AE_LINES_PKG.g_LineNumber) * -1;
          XLA_AE_LINES_PKG.g_rec_lines.array_entered_amount(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_entered_amount(XLA_AE_LINES_PKG.g_LineNumber) * -1;
          -- 5132302
          XLA_AE_LINES_PKG.g_rec_lines.array_bflow_applied_to_amt(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_bflow_applied_to_amt(XLA_AE_LINES_PKG.g_LineNumber) * -1;

      END IF;

      -- 4955764
      XLA_AE_LINES_PKG.g_rec_lines.array_gl_date(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_HEADER_PKG.g_rec_header_new.array_gl_date(g_array_event(p_event_id).array_value_num('acc_rev_header_index'));


      XLA_AE_LINES_PKG.ValidateCurrentLine;
      XLA_AE_LINES_PKG.SetDebitCreditAmounts;

      XLA_AE_JOURNAL_ENTRY_PKG.UpdateJournalEntryStatus
               (p_hdr_idx           => g_array_event(p_event_id).array_value_num('acc_rev_header_index')
               ,p_balance_type_code => l_balance_type_code);

   END IF;

   -----------------------------------------------------------------------------------------
   -- 4262811 Multiperiod Accounting
   -----------------------------------------------------------------------------------------
     -- No MPA option is assigned.


END IF;
END IF;
--

--
IF (C_LEVEL_PROCEDURE >= g_log_level) THEN
   trace
      (p_msg      => 'END of AcctLineType_96'
      ,p_level    => C_LEVEL_PROCEDURE
      ,p_module   => l_log_module);
END IF;
--
EXCEPTION
  WHEN xla_exceptions_pkg.application_exception THEN
      RAISE;
  WHEN OTHERS THEN
       xla_exceptions_pkg.raise_message
           (p_location => 'XLA_00200_AAD_S_000010_BC_PKG.AcctLineType_96');
END AcctLineType_96;
--

---------------------------------------
--
-- PRIVATE FUNCTION
--         AcctLineType_97
--
---------------------------------------
PROCEDURE AcctLineType_97 (
  p_application_id        IN NUMBER
 ,p_event_id              IN NUMBER
 ,p_calculate_acctd_flag  IN VARCHAR2
 ,p_calculate_g_l_flag    IN VARCHAR2
 ,p_actual_flag           IN OUT VARCHAR2
 ,p_balance_type_code     OUT VARCHAR2
 ,p_gain_or_loss_ref      OUT VARCHAR2
 
--Document Distribution Type
 , p_source_2            IN VARCHAR2
--Project Name
 , p_source_3            IN VARCHAR2
--Task Number
 , p_source_4            IN VARCHAR2
--Expenditure Organization
 , p_source_5            IN NUMBER
--Distribution Link Type
 , p_source_21            IN VARCHAR2
--Invoice Distribution Identifier
 , p_source_30            IN NUMBER
--Invoice Currency Code
 , p_source_33            IN VARCHAR2
--Invoice Distribution Amount
 , p_source_57            IN NUMBER
--Document Type
 , p_source_83            IN VARCHAR2
--Accounting reversal indicator for project invoice burden
 , p_source_85            IN VARCHAR2
--Allocated to Application Identifier
 , p_source_86            IN NUMBER
--Allocated to Distribution Type
 , p_source_87            IN VARCHAR2
--Allocated to Entity Code
 , p_source_88            IN VARCHAR2
--Allocated to First Distribution Identifier
 , p_source_89            IN NUMBER
--Allocated to First System Transaction Identifier
 , p_source_90            IN NUMBER
--Invoice Distribution Expenditure Type
 , p_source_96            IN VARCHAR2
--Encumbrance Upgrade Credit Accounting Class
 , p_source_97            IN VARCHAR2
--Encumbrance Upgrade Credit Account
 , p_source_98            IN NUMBER
--Invoice Distribution Ledger Amount Before Rounding
 , p_source_99            IN NUMBER
--Encumbrance Upgrade Debit Accounting Class
 , p_source_100            IN VARCHAR2
--Encumbrance Upgrade Debit Account
 , p_source_101            IN NUMBER
--Use Encumbrances Upgrade Attributes Flag
 , p_source_102            IN VARCHAR2
--Accounting reversal first distribution identifier for project invoice burden
 , p_source_103            IN NUMBER
--Invoice Burden Applied to Second Distribution Identifier
 , p_source_104            IN VARCHAR2
--Accounting reversal distribution type for project invoice burden
 , p_source_105            IN VARCHAR2
--Encumbrance Upgrade Credit Encumbrance Type
 , p_source_106            IN NUMBER
--Encumbrance Upgrade Debit Encumbrance Type
 , p_source_107            IN NUMBER
--Project Encumbrance Applied to Application Identifier
 , p_source_109            IN NUMBER
--Project Encumbrance Applied to Distribution Type
 , p_source_110            IN VARCHAR2
--Project Encumbrance Applied to Entity Code
 , p_source_111            IN VARCHAR2
--Project Encumbrance First Distribution Identifier
 , p_source_112            IN NUMBER
--Project Encumbrance First System Transaction Identifier
 , p_source_113            IN NUMBER
--Project Encumbrance Second Distribution Identifier
 , p_source_114            IN VARCHAR2
)
IS

l_component_type              VARCHAR2(80);
l_component_code              VARCHAR2(30);
l_component_type_code         VARCHAR2(1);
l_component_appl_id           INTEGER;
l_amb_context_code            VARCHAR2(30);
l_entity_code                 VARCHAR2(30);
l_event_class_code            VARCHAR2(30);
l_ae_header_id                NUMBER;
l_event_type_code             VARCHAR2(30);
l_line_definition_code        VARCHAR2(30);
l_line_definition_owner_code  VARCHAR2(1);
--
-- adr variables
l_segment                     VARCHAR2(30);
l_ccid                        NUMBER;
l_adr_transaction_coa_id      NUMBER;
l_adr_accounting_coa_id       NUMBER;
l_adr_flexfield_segment_code  VARCHAR2(30);
l_adr_flex_value_set_id       NUMBER;
l_adr_value_type_code         VARCHAR2(30);
l_adr_value_combination_id    NUMBER;
l_adr_value_segment_code      VARCHAR2(30);

l_bflow_method_code           VARCHAR2(30);  -- 4219869 Business Flow
l_bflow_class_code            VARCHAR2(30);  -- 4219869 Business Flow
l_inherit_desc_flag           VARCHAR2(1);   -- 4219869 Business Flow
l_budgetary_control_flag      VARCHAR2(1);   -- 4458381 Public Sector Enh

-- 4262811 Variables ------------------------------------------------------------------------------------------
l_entered_amt_idx             NUMBER;
l_accted_amt_idx              NUMBER;
l_acc_rev_flag                VARCHAR2(1);
l_accrual_line_num            NUMBER;
l_tmp_amt                     NUMBER;
l_acc_rev_natural_side_code   VARCHAR2(1);

l_num_entries                 NUMBER;
l_gl_dates                    xla_ae_journal_entry_pkg.t_array_date;
l_accted_amts                 xla_ae_journal_entry_pkg.t_array_num;
l_entered_amts                xla_ae_journal_entry_pkg.t_array_num;
l_period_names                xla_ae_journal_entry_pkg.t_array_V15L;
l_recog_line_1                NUMBER;
l_recog_line_2                NUMBER;

l_bflow_applied_to_amt_idx    NUMBER;                                -- 5132302
l_bflow_applied_to_amt        NUMBER;                                -- 5132302
l_bflow_applied_to_amts       xla_ae_journal_entry_pkg.t_array_num;  -- 5132302

l_event_id                    NUMBER;  -- To handle MPA header Description: xla_ae_header_pkg.SetHdrDescription

--l_rounding_ccy                VARCHAR2(15); -- To handle MPA rounding  4262811b
l_same_currency               BOOLEAN;        -- To handle MPA rounding  4262811b

---------------------------------------------------------------------------------------------------------------


--
-- bulk performance
--
l_balance_type_code           VARCHAR2(1);
l_rec_acct_attrs              XLA_AE_LINES_PKG.t_rec_acct_attrs;
l_log_module                  VARCHAR2(240);

--
-- Upgrade strategy
--
l_actual_upg_option           VARCHAR2(1);
l_enc_upg_option           VARCHAR2(1);

--
BEGIN
--
IF g_log_enabled THEN
      l_log_module := C_DEFAULT_MODULE||'.AcctLineType_97';
END IF;
--
IF (C_LEVEL_PROCEDURE >= g_log_level) THEN

      trace
         (p_msg      => 'BEGIN of AcctLineType_97'
         ,p_level    => C_LEVEL_PROCEDURE
         ,p_module   => l_log_module);

END IF;
--
l_component_type             := 'AMB_JLT';
l_component_code             := 'RESERVE_PROJ_ENC';
l_component_type_code        := 'S';
l_component_appl_id          :=  200;
l_amb_context_code           := 'DEFAULT';
l_entity_code                := 'AP_INVOICES';
l_event_class_code           := 'PREPAYMENT_BURDEN';
l_event_type_code            := 'PREPAYMENT_BURDEN_ALL';
l_line_definition_owner_code := 'S';
l_line_definition_code       := 'AP_PREPAY_BURDEN_ENC_ALL';
--
l_balance_type_code          := 'E';
l_segment                     := NULL;
l_ccid                        := NULL;
l_adr_transaction_coa_id      := NULL;
l_adr_accounting_coa_id       := NULL;
l_adr_flexfield_segment_code  := NULL;
l_adr_flex_value_set_id       := NULL;
l_adr_value_type_code         := NULL;
l_adr_value_combination_id    := NULL;
l_adr_value_segment_code      := NULL;

l_bflow_method_code          := 'PRIOR_ENTRY';   -- 4219869 Business Flow
l_bflow_class_code           := 'PA_BUDGET_ENC';    -- 4219869 Business Flow
l_inherit_desc_flag          := 'N';   -- 4219869 Business Flow
l_budgetary_control_flag     := 'Y';

l_bflow_applied_to_amt_idx   := NULL; -- 5132302
l_bflow_applied_to_amt       := NULL; -- 5132302
l_entered_amt_idx            := NULL;          -- 4262811
l_accted_amt_idx             := NULL;          -- 4262811
l_acc_rev_flag               := NULL;          -- 4262811
l_accrual_line_num           := NULL;          -- 4262811
l_tmp_amt                    := NULL;          -- 4262811
--
 
IF XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id = XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.ledger_id OR
    l_balance_type_code <> 'B' THEN
IF NVL(p_source_83,'
') =  'PO'
 THEN 

   --
   XLA_AE_LINES_PKG.SetNewLine;

   p_balance_type_code          := l_balance_type_code;
   -- set the flag so later we will know whether the gain loss line needs to be created
   
   IF(l_balance_type_code = 'A' and p_actual_flag is null) THEN
     p_actual_flag :='A';
   END IF;

   --
   -- bulk performance
   --
   XLA_AE_LINES_PKG.set_ae_header_id (p_ae_header_id => p_event_id ,
                                      p_header_num   => 0); -- 4262811
   --
   -- set accounting line options
   --
   l_ae_header_id:= xla_ae_lines_pkg.SetAcctLineOption(
           p_natural_side_code          => 'D'
         , p_gain_or_loss_flag          => 'N'
         , p_gl_transfer_mode_code      => 'S'
         , p_acct_entry_type_code       => 'E'
         , p_switch_side_flag           => 'Y'
         , p_merge_duplicate_code       => 'N'
         );
   --
   l_acc_rev_natural_side_code := 'C';  -- 4262811
   -- 
   --
   -- set accounting line type info
   --
   xla_ae_lines_pkg.SetAcctLineType
      (p_component_type             => l_component_type
      ,p_event_type_code            => l_event_type_code
      ,p_line_definition_owner_code => l_line_definition_owner_code
      ,p_line_definition_code       => l_line_definition_code
      ,p_accounting_line_code       => l_component_code
      ,p_accounting_line_type_code  => l_component_type_code
      ,p_accounting_line_appl_id    => l_component_appl_id
      ,p_amb_context_code           => l_amb_context_code
      ,p_entity_code                => l_entity_code
      ,p_event_class_code           => l_event_class_code);
   --
   -- set accounting class
   --
   xla_ae_lines_pkg.SetAcctClass(
           p_accounting_class_code  => 'PA_BUDGET_ENC'
         , p_ae_header_id           => l_ae_header_id
         );

   --
   -- set rounding class
   --
   XLA_AE_LINES_PKG.g_rec_lines.array_rounding_class(XLA_AE_LINES_PKG.g_LineNumber) :=
                      'PA_BUDGET_ENC';

   --
   xla_ae_lines_pkg.g_rec_lines.array_calculate_acctd_flag(xla_ae_lines_pkg.g_LineNumber) := p_calculate_acctd_flag;
   xla_ae_lines_pkg.g_rec_lines.array_calculate_g_l_flag(xla_ae_lines_pkg.g_LineNumber) := p_calculate_g_l_flag;
   --
   -- bulk performance
   --
   XLA_AE_LINES_PKG.g_rec_lines.array_balance_type_code(XLA_AE_LINES_PKG.g_LineNumber) := l_balance_type_code;

   XLA_AE_LINES_PKG.g_rec_lines.array_ledger_id(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id;

   -- 4955764
   XLA_AE_LINES_PKG.g_rec_lines.array_gl_date(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_HEADER_PKG.g_rec_header_new.array_gl_date(g_array_event(p_event_id).array_value_num('header_index'));

   -- 4458381 Public Sector Enh
   
   --
   -- set accounting attributes for the line type
   --
   l_entered_amt_idx := 27;
   l_accted_amt_idx  := 29;
   l_bflow_applied_to_amt_idx  := NULL;  -- 5132302
   l_rec_acct_attrs.array_acct_attr_code(1) := 'ACCOUNTING_REVERSAL_OPTION';
   l_rec_acct_attrs.array_char_value(1)  := p_source_85;
   l_rec_acct_attrs.array_acct_attr_code(2) := 'ALLOC_TO_APPLICATION_ID';
   l_rec_acct_attrs.array_num_value(2)  := p_source_86;
   l_rec_acct_attrs.array_acct_attr_code(3) := 'ALLOC_TO_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(3)  := p_source_87;
   l_rec_acct_attrs.array_acct_attr_code(4) := 'ALLOC_TO_ENTITY_CODE';
   l_rec_acct_attrs.array_char_value(4)  := p_source_88;
   l_rec_acct_attrs.array_acct_attr_code(5) := 'ALLOC_TO_FIRST_DIST_ID';
   l_rec_acct_attrs.array_num_value(5)  :=  to_char(p_source_89);
   l_rec_acct_attrs.array_acct_attr_code(6) := 'ALLOC_TO_FIRST_SYS_TRAN_ID';
   l_rec_acct_attrs.array_num_value(6)  :=  to_char(p_source_90);
   l_rec_acct_attrs.array_acct_attr_code(7) := 'APPLIED_TO_APPLICATION_ID';
   l_rec_acct_attrs.array_num_value(7)  := p_source_109;
   l_rec_acct_attrs.array_acct_attr_code(8) := 'APPLIED_TO_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(8)  := p_source_110;
   l_rec_acct_attrs.array_acct_attr_code(9) := 'APPLIED_TO_ENTITY_CODE';
   l_rec_acct_attrs.array_char_value(9)  := p_source_111;
   l_rec_acct_attrs.array_acct_attr_code(10) := 'APPLIED_TO_FIRST_DIST_ID';
   l_rec_acct_attrs.array_num_value(10)  :=  to_char(p_source_112);
   l_rec_acct_attrs.array_acct_attr_code(11) := 'APPLIED_TO_FIRST_SYS_TRAN_ID';
   l_rec_acct_attrs.array_num_value(11)  :=  to_char(p_source_113);
   l_rec_acct_attrs.array_acct_attr_code(12) := 'APPLIED_TO_SECOND_DIST_ID';
   l_rec_acct_attrs.array_char_value(12)  := p_source_114;
   l_rec_acct_attrs.array_acct_attr_code(13) := 'DISTRIBUTION_IDENTIFIER_1';
   l_rec_acct_attrs.array_num_value(13)  :=  to_char(p_source_30);
   l_rec_acct_attrs.array_acct_attr_code(14) := 'DISTRIBUTION_IDENTIFIER_2';
   l_rec_acct_attrs.array_char_value(14)  := p_source_96;
   l_rec_acct_attrs.array_acct_attr_code(15) := 'DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(15)  := p_source_21;
   l_rec_acct_attrs.array_acct_attr_code(16) := 'ENC_UPG_CR_ACCT_CLASS';
   l_rec_acct_attrs.array_char_value(16)  := p_source_97;
   l_rec_acct_attrs.array_acct_attr_code(17) := 'ENC_UPG_CR_CCID';
   l_rec_acct_attrs.array_num_value(17)  := p_source_98;
   l_rec_acct_attrs.array_acct_attr_code(18) := 'ENC_UPG_CR_ENTERED_AMT';
   l_rec_acct_attrs.array_num_value(18)  := p_source_57;
   l_rec_acct_attrs.array_acct_attr_code(19) := 'ENC_UPG_CR_ENTERED_CURR';
   l_rec_acct_attrs.array_char_value(19)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(20) := 'ENC_UPG_CR_LEDGER_AMT';
   l_rec_acct_attrs.array_num_value(20)  := p_source_99;
   l_rec_acct_attrs.array_acct_attr_code(21) := 'ENC_UPG_DR_ACCT_CLASS';
   l_rec_acct_attrs.array_char_value(21)  := p_source_100;
   l_rec_acct_attrs.array_acct_attr_code(22) := 'ENC_UPG_DR_CCID';
   l_rec_acct_attrs.array_num_value(22)  := p_source_101;
   l_rec_acct_attrs.array_acct_attr_code(23) := 'ENC_UPG_DR_ENTERED_AMT';
   l_rec_acct_attrs.array_num_value(23)  := p_source_57;
   l_rec_acct_attrs.array_acct_attr_code(24) := 'ENC_UPG_DR_ENTERED_CURR';
   l_rec_acct_attrs.array_char_value(24)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(25) := 'ENC_UPG_DR_LEDGER_AMT';
   l_rec_acct_attrs.array_num_value(25)  := p_source_99;
   l_rec_acct_attrs.array_acct_attr_code(26) := 'ENC_UPG_OPTION';
   l_rec_acct_attrs.array_char_value(26)  := p_source_102;
   l_rec_acct_attrs.array_acct_attr_code(27) := 'ENTERED_CURRENCY_AMOUNT';
   l_rec_acct_attrs.array_num_value(27)  := p_source_57;
   l_rec_acct_attrs.array_acct_attr_code(28) := 'ENTERED_CURRENCY_CODE';
   l_rec_acct_attrs.array_char_value(28)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(29) := 'LEDGER_AMOUNT';
   l_rec_acct_attrs.array_num_value(29)  := p_source_99;
   l_rec_acct_attrs.array_acct_attr_code(30) := 'REVERSED_DISTRIBUTION_ID1';
   l_rec_acct_attrs.array_num_value(30)  :=  to_char(p_source_103);
   l_rec_acct_attrs.array_acct_attr_code(31) := 'REVERSED_DISTRIBUTION_ID2';
   l_rec_acct_attrs.array_char_value(31)  := p_source_104;
   l_rec_acct_attrs.array_acct_attr_code(32) := 'REVERSED_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(32)  := p_source_105;
   l_rec_acct_attrs.array_acct_attr_code(33) := 'UPG_CR_ENC_TYPE_ID';
   l_rec_acct_attrs.array_num_value(33)  := p_source_106;
   l_rec_acct_attrs.array_acct_attr_code(34) := 'UPG_DR_ENC_TYPE_ID';
   l_rec_acct_attrs.array_num_value(34)  := p_source_107;

   XLA_AE_LINES_PKG.SetLineAcctAttrs(l_rec_acct_attrs);
   p_gain_or_loss_ref  := XLA_AE_LINES_PKG.g_rec_lines.array_gain_or_loss_ref(XLA_AE_LINES_PKG.g_LineNumber);

   ---------------------------------------------------------------------------------------------------------------
   -- 4336173 -- assign Business Flow Class (replace code in xla_ae_lines_pkg.Business_Flow_Validation)
   ---------------------------------------------------------------------------------------------------------------
   XLA_AE_LINES_PKG.g_rec_lines.array_business_class_code(XLA_AE_LINES_PKG.g_LineNumber) := l_bflow_class_code;

   l_actual_upg_option  := XLA_AE_LINES_PKG.g_rec_lines.array_actual_upg_option(XLA_AE_LINES_PKG.g_LineNumber);
   l_enc_upg_option     := XLA_AE_LINES_PKG.g_rec_lines.array_enc_upg_option(XLA_AE_LINES_PKG.g_LineNumber);

   IF xla_accounting_cache_pkg.GetValueChar
         (p_source_code         => 'LEDGER_CATEGORY_CODE'
         ,p_target_ledger_id    => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id) IN ('PRIMARY','ALC')
   AND l_bflow_method_code = 'PRIOR_ENTRY'
--   AND (l_actual_upg_option = 'Y' OR l_enc_upg_option = 'Y') Bug 4922099
   AND ( (NVL(l_actual_upg_option, 'N') IN ('Y', 'O')) OR
         (NVL(l_enc_upg_option, 'N') IN ('Y', 'O'))
       )
   THEN
         xla_ae_lines_pkg.BflowUpgEntry
           (p_business_method_code    => l_bflow_method_code
           ,p_business_class_code     => l_bflow_class_code
           ,p_balance_type            => l_balance_type_code);
   ELSE
      NULL;
XLA_AE_LINES_PKG.business_flow_validation(
                                p_business_method_code     => l_bflow_method_code
                               ,p_business_class_code      => l_bflow_class_code
                               ,p_inherit_description_flag => l_inherit_desc_flag);
   END IF;

   --
   -- call analytical criteria
   --
   -- Inherited Analytical Criteria for business flow method of Prior Entry.
   --
   -- call description
   --
   
xla_ae_lines_pkg.SetLineDescription(
   p_ae_header_id => l_ae_header_id
  ,p_description  => Description_3 (
     p_application_id         => p_application_id
   , p_ae_header_id           => l_ae_header_id 
, p_source_2 => p_source_2
, p_source_3 => p_source_3
, p_source_4 => p_source_4
, p_source_5 => p_source_5
   )
);


   --
   -- call ADRs
   -- Bug 4922099
   --
   IF ( (l_bflow_method_code <> 'PRIOR_ENTRY') OR
        (NVL(l_actual_upg_option, 'N') = 'O') OR
        (NVL(l_enc_upg_option, 'N') = 'O')
      )
   THEN
   NULL;
   --
   --
   
   --
   --
   END IF;
   --
   -- Bug 4922099
   IF ( ( (NVL(l_actual_upg_option, 'N') = 'O') OR
          (NVL(l_enc_upg_option, 'N') = 'O')
        ) AND
        (l_bflow_method_code = 'PRIOR_ENTRY')
      )
   THEN
      IF
      --
      1 = 1
      --
      THEN
      xla_accounting_err_pkg.build_message
                                    (p_appli_s_name            => 'XLA'
                                    ,p_msg_name                => 'XLA_UPG_OVERRIDE_ADR_UNDEFINED'
                                    ,p_token_1                 => 'LINE_NUMBER'
                                    ,p_value_1                 => XLA_AE_LINES_PKG.g_LineNumber
                                    ,p_token_2                 => 'LINE_TYPE_NAME'
                                    ,p_value_2                 => XLA_AE_SOURCES_PKG.GetComponentName (
                                                                             l_component_type
                                                                            ,l_component_code
                                                                            ,l_component_type_code
                                                                            ,l_component_appl_id
                                                                            ,l_amb_context_code
                                                                            ,l_entity_code
                                                                            ,l_event_class_code
                                                                           )
                                    ,p_token_3                 => 'OWNER'
                                    ,p_value_3                 => xla_lookups_pkg.get_meaning(
                                                                          p_lookup_type     => 'XLA_OWNER_TYPE'
                                                                          ,p_lookup_code    => l_component_type_code
                                                                         )
                                    ,p_token_4                 => 'PRODUCT_NAME'
                                    ,p_value_4                 => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.application_name
                                    ,p_entity_id               => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.entity_id
                                    ,p_event_id                => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.event_id
                                    ,p_ledger_id               => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id
                                    ,p_ae_header_id            =>  NULL
                                       );

        IF (C_LEVEL_ERROR>= g_log_level) THEN
                 trace
                      (p_msg      => 'ERROR: XLA_UPG_OVERRIDE_ADR_UNDEFINED'
                      ,p_level    => C_LEVEL_ERROR
                      ,p_module   => l_log_module);
        END IF;
      END IF;
   END IF;
   --
   --
   ------------------------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- NOTE: XLA_AE_LINES_PKG.ValidateCurrentLine should NOT be generated if business flow method is
   -- Prior Entry.  Currently, the following code is always generated.
   ------------------------------------------------------------------------------------------------
   -- No ValidateCurrentLine for business flow method of Prior Entry

   ------------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- Populated credit and debit amounts -- Need to generate this within IF <condition>
   ------------------------------------------------------------------------------------
   XLA_AE_LINES_PKG.SetDebitCreditAmounts;

   ----------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- Update journal entry status -- Need to generate this within IF <condition>
   ----------------------------------------------------------------------------------
   XLA_AE_JOURNAL_ENTRY_PKG.UpdateJournalEntryStatus
         (p_hdr_idx => g_array_event(p_event_id).array_value_num('header_index')
         ,p_balance_type_code => l_balance_type_code
         );

   -------------------------------------------------------------------------------------------
   -- 4262811 - Generate the Accrual Reversal lines
   -------------------------------------------------------------------------------------------
   BEGIN
      l_acc_rev_flag := XLA_AE_HEADER_PKG.g_rec_header_new.array_accrual_reversal_flag
                              (g_array_event(p_event_id).array_value_num('header_index'));
      IF l_acc_rev_flag IS NULL THEN
         l_acc_rev_flag := 'N';
      END IF;
   EXCEPTION
      WHEN OTHERS THEN
         l_acc_rev_flag := 'N';
   END;
   --
   IF (l_acc_rev_flag = 'Y') THEN

       -- 4645092  ------------------------------------------------------------------------------
       -- To allow MPA report to determine if it should generate report process
       XLA_ACCOUNTING_PKG.g_mpa_accrual_exists := 'Y';
       ------------------------------------------------------------------------------------------

       l_accrual_line_num := XLA_AE_LINES_PKG.g_LineNumber;
       XLA_AE_LINES_PKG.CopyLineInfo(l_accrual_line_num);
   -- added call to set_ccid to execute mapping  for secondary accrual reversal entries bug 7444204
   -- call ADRs
   -- Bug 4922099
   --
   IF ( (l_bflow_method_code <> 'PRIOR_ENTRY') OR
        (NVL(l_actual_upg_option, 'N') = 'O') OR
        (NVL(l_enc_upg_option, 'N') = 'O')
      )
   THEN
   NULL;
   --
   --
   
   --
   --
   END IF;

       --
       -- Update the line information that should be overwritten
       --
       XLA_AE_LINES_PKG.set_ae_header_id(p_ae_header_id => p_event_id ,
                                         p_header_num   => 1);
       XLA_AE_LINES_PKG.g_rec_lines.array_header_num(XLA_AE_LINES_PKG.g_LineNumber)  :=1;

       XLA_AE_LINES_PKG.g_rec_lines.array_business_class_code(XLA_AE_LINES_PKG.g_LineNumber) := NULL; -- 4669271

       IF l_bflow_method_code <> 'NONE' THEN  -- 4655713b
          XLA_AE_LINES_PKG.g_rec_lines.array_reversal_code(XLA_AE_LINES_PKG.g_LineNumber) := CONCAT('MPA_',l_bflow_method_code);
       END IF;

      --
      -- Depending on the Reversal Method setup, do a switch side or changes sign for the amounts
      --
      IF (XLA_AE_JOURNAL_ENTRY_PKG.g_cache_ledgers_info.ledger_reversal_option = 'SIDE') THEN
          XLA_AE_LINES_PKG.g_rec_lines.array_natural_side_code(XLA_AE_LINES_PKG.g_LineNumber) :=  l_acc_rev_natural_side_code;
      ELSE
          ---------------------------------------------------------------------------------------------------
          -- 4262811a Switch Sign
          ---------------------------------------------------------------------------------------------------
          XLA_AE_LINES_PKG.g_rec_lines.array_switch_side_flag(XLA_AE_LINES_PKG.g_LineNumber) := 'N';  -- 5052518
          XLA_AE_LINES_PKG.g_rec_lines.array_ledger_amount(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_ledger_amount(XLA_AE_LINES_PKG.g_LineNumber) * -1;
          XLA_AE_LINES_PKG.g_rec_lines.array_entered_amount(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_entered_amount(XLA_AE_LINES_PKG.g_LineNumber) * -1;
          -- 5132302
          XLA_AE_LINES_PKG.g_rec_lines.array_bflow_applied_to_amt(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_bflow_applied_to_amt(XLA_AE_LINES_PKG.g_LineNumber) * -1;

      END IF;

      -- 4955764
      XLA_AE_LINES_PKG.g_rec_lines.array_gl_date(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_HEADER_PKG.g_rec_header_new.array_gl_date(g_array_event(p_event_id).array_value_num('acc_rev_header_index'));


      XLA_AE_LINES_PKG.ValidateCurrentLine;
      XLA_AE_LINES_PKG.SetDebitCreditAmounts;

      XLA_AE_JOURNAL_ENTRY_PKG.UpdateJournalEntryStatus
               (p_hdr_idx           => g_array_event(p_event_id).array_value_num('acc_rev_header_index')
               ,p_balance_type_code => l_balance_type_code);

   END IF;

   -----------------------------------------------------------------------------------------
   -- 4262811 Multiperiod Accounting
   -----------------------------------------------------------------------------------------
     -- No MPA option is assigned.


END IF;
END IF;
--

--
IF (C_LEVEL_PROCEDURE >= g_log_level) THEN
   trace
      (p_msg      => 'END of AcctLineType_97'
      ,p_level    => C_LEVEL_PROCEDURE
      ,p_module   => l_log_module);
END IF;
--
EXCEPTION
  WHEN xla_exceptions_pkg.application_exception THEN
      RAISE;
  WHEN OTHERS THEN
       xla_exceptions_pkg.raise_message
           (p_location => 'XLA_00200_AAD_S_000010_BC_PKG.AcctLineType_97');
END AcctLineType_97;
--

---------------------------------------
--
-- PRIVATE FUNCTION
--         AcctLineType_98
--
---------------------------------------
PROCEDURE AcctLineType_98 (
  p_application_id        IN NUMBER
 ,p_event_id              IN NUMBER
 ,p_calculate_acctd_flag  IN VARCHAR2
 ,p_calculate_g_l_flag    IN VARCHAR2
 ,p_actual_flag           IN OUT VARCHAR2
 ,p_balance_type_code     OUT VARCHAR2
 ,p_gain_or_loss_ref      OUT VARCHAR2
 
--Document Distribution Type
 , p_source_2            IN VARCHAR2
--Project Name
 , p_source_3            IN VARCHAR2
--Task Number
 , p_source_4            IN VARCHAR2
--Expenditure Organization
 , p_source_5            IN NUMBER
--Distribution Link Type
 , p_source_21            IN VARCHAR2
--Invoice Distribution Identifier
 , p_source_30            IN NUMBER
--Invoice Currency Code
 , p_source_33            IN VARCHAR2
--Invoice Distribution Amount
 , p_source_57            IN NUMBER
--Document Type
 , p_source_83            IN VARCHAR2
--Accounting reversal indicator for project invoice burden
 , p_source_85            IN VARCHAR2
--Allocated to Application Identifier
 , p_source_86            IN NUMBER
--Allocated to Distribution Type
 , p_source_87            IN VARCHAR2
--Allocated to Entity Code
 , p_source_88            IN VARCHAR2
--Allocated to First Distribution Identifier
 , p_source_89            IN NUMBER
--Allocated to First System Transaction Identifier
 , p_source_90            IN NUMBER
--Invoice Distribution Expenditure Type
 , p_source_96            IN VARCHAR2
--Encumbrance Upgrade Credit Accounting Class
 , p_source_97            IN VARCHAR2
--Encumbrance Upgrade Credit Account
 , p_source_98            IN NUMBER
--Invoice Distribution Ledger Amount Before Rounding
 , p_source_99            IN NUMBER
--Encumbrance Upgrade Debit Accounting Class
 , p_source_100            IN VARCHAR2
--Encumbrance Upgrade Debit Account
 , p_source_101            IN NUMBER
--Use Encumbrances Upgrade Attributes Flag
 , p_source_102            IN VARCHAR2
--Accounting reversal first distribution identifier for project invoice burden
 , p_source_103            IN NUMBER
--Invoice Burden Applied to Second Distribution Identifier
 , p_source_104            IN VARCHAR2
--Accounting reversal distribution type for project invoice burden
 , p_source_105            IN VARCHAR2
--Encumbrance Upgrade Credit Encumbrance Type
 , p_source_106            IN NUMBER
--Encumbrance Upgrade Debit Encumbrance Type
 , p_source_107            IN NUMBER
--Project Encumbrance Applied to Application Identifier
 , p_source_109            IN NUMBER
--Project Encumbrance Applied to Distribution Type
 , p_source_110            IN VARCHAR2
--Project Encumbrance Applied to Entity Code
 , p_source_111            IN VARCHAR2
--Project Encumbrance First Distribution Identifier
 , p_source_112            IN NUMBER
--Project Encumbrance First System Transaction Identifier
 , p_source_113            IN NUMBER
--Project Encumbrance Second Distribution Identifier
 , p_source_114            IN VARCHAR2
)
IS

l_component_type              VARCHAR2(80);
l_component_code              VARCHAR2(30);
l_component_type_code         VARCHAR2(1);
l_component_appl_id           INTEGER;
l_amb_context_code            VARCHAR2(30);
l_entity_code                 VARCHAR2(30);
l_event_class_code            VARCHAR2(30);
l_ae_header_id                NUMBER;
l_event_type_code             VARCHAR2(30);
l_line_definition_code        VARCHAR2(30);
l_line_definition_owner_code  VARCHAR2(1);
--
-- adr variables
l_segment                     VARCHAR2(30);
l_ccid                        NUMBER;
l_adr_transaction_coa_id      NUMBER;
l_adr_accounting_coa_id       NUMBER;
l_adr_flexfield_segment_code  VARCHAR2(30);
l_adr_flex_value_set_id       NUMBER;
l_adr_value_type_code         VARCHAR2(30);
l_adr_value_combination_id    NUMBER;
l_adr_value_segment_code      VARCHAR2(30);

l_bflow_method_code           VARCHAR2(30);  -- 4219869 Business Flow
l_bflow_class_code            VARCHAR2(30);  -- 4219869 Business Flow
l_inherit_desc_flag           VARCHAR2(1);   -- 4219869 Business Flow
l_budgetary_control_flag      VARCHAR2(1);   -- 4458381 Public Sector Enh

-- 4262811 Variables ------------------------------------------------------------------------------------------
l_entered_amt_idx             NUMBER;
l_accted_amt_idx              NUMBER;
l_acc_rev_flag                VARCHAR2(1);
l_accrual_line_num            NUMBER;
l_tmp_amt                     NUMBER;
l_acc_rev_natural_side_code   VARCHAR2(1);

l_num_entries                 NUMBER;
l_gl_dates                    xla_ae_journal_entry_pkg.t_array_date;
l_accted_amts                 xla_ae_journal_entry_pkg.t_array_num;
l_entered_amts                xla_ae_journal_entry_pkg.t_array_num;
l_period_names                xla_ae_journal_entry_pkg.t_array_V15L;
l_recog_line_1                NUMBER;
l_recog_line_2                NUMBER;

l_bflow_applied_to_amt_idx    NUMBER;                                -- 5132302
l_bflow_applied_to_amt        NUMBER;                                -- 5132302
l_bflow_applied_to_amts       xla_ae_journal_entry_pkg.t_array_num;  -- 5132302

l_event_id                    NUMBER;  -- To handle MPA header Description: xla_ae_header_pkg.SetHdrDescription

--l_rounding_ccy                VARCHAR2(15); -- To handle MPA rounding  4262811b
l_same_currency               BOOLEAN;        -- To handle MPA rounding  4262811b

---------------------------------------------------------------------------------------------------------------


--
-- bulk performance
--
l_balance_type_code           VARCHAR2(1);
l_rec_acct_attrs              XLA_AE_LINES_PKG.t_rec_acct_attrs;
l_log_module                  VARCHAR2(240);

--
-- Upgrade strategy
--
l_actual_upg_option           VARCHAR2(1);
l_enc_upg_option           VARCHAR2(1);

--
BEGIN
--
IF g_log_enabled THEN
      l_log_module := C_DEFAULT_MODULE||'.AcctLineType_98';
END IF;
--
IF (C_LEVEL_PROCEDURE >= g_log_level) THEN

      trace
         (p_msg      => 'BEGIN of AcctLineType_98'
         ,p_level    => C_LEVEL_PROCEDURE
         ,p_module   => l_log_module);

END IF;
--
l_component_type             := 'AMB_JLT';
l_component_code             := 'RESERVE_PROJ_ENC';
l_component_type_code        := 'S';
l_component_appl_id          :=  200;
l_amb_context_code           := 'DEFAULT';
l_entity_code                := 'AP_INVOICES';
l_event_class_code           := 'PREPAY_APPLICATION_BURDEN';
l_event_type_code            := 'PREPAY_APPLICATION_BURDEN_ALL';
l_line_definition_owner_code := 'S';
l_line_definition_code       := 'AP_PREPAY_APPLY_BURDEN_ENC_ALL';
--
l_balance_type_code          := 'E';
l_segment                     := NULL;
l_ccid                        := NULL;
l_adr_transaction_coa_id      := NULL;
l_adr_accounting_coa_id       := NULL;
l_adr_flexfield_segment_code  := NULL;
l_adr_flex_value_set_id       := NULL;
l_adr_value_type_code         := NULL;
l_adr_value_combination_id    := NULL;
l_adr_value_segment_code      := NULL;

l_bflow_method_code          := 'PRIOR_ENTRY';   -- 4219869 Business Flow
l_bflow_class_code           := 'PA_BUDGET_ENC';    -- 4219869 Business Flow
l_inherit_desc_flag          := 'N';   -- 4219869 Business Flow
l_budgetary_control_flag     := 'Y';

l_bflow_applied_to_amt_idx   := NULL; -- 5132302
l_bflow_applied_to_amt       := NULL; -- 5132302
l_entered_amt_idx            := NULL;          -- 4262811
l_accted_amt_idx             := NULL;          -- 4262811
l_acc_rev_flag               := NULL;          -- 4262811
l_accrual_line_num           := NULL;          -- 4262811
l_tmp_amt                    := NULL;          -- 4262811
--
 
IF XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id = XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.ledger_id OR
    l_balance_type_code <> 'B' THEN
IF NVL(p_source_83,'
') =  'PO' OR 
(NVL(p_source_83,'
') =  'AP' AND 
NVL(p_source_2,'
') =  'PREPAY APPL' OR 
NVL(p_source_2,'
') =  'PREPAY APPL NONREC TAX')
 THEN 

   --
   XLA_AE_LINES_PKG.SetNewLine;

   p_balance_type_code          := l_balance_type_code;
   -- set the flag so later we will know whether the gain loss line needs to be created
   
   IF(l_balance_type_code = 'A' and p_actual_flag is null) THEN
     p_actual_flag :='A';
   END IF;

   --
   -- bulk performance
   --
   XLA_AE_LINES_PKG.set_ae_header_id (p_ae_header_id => p_event_id ,
                                      p_header_num   => 0); -- 4262811
   --
   -- set accounting line options
   --
   l_ae_header_id:= xla_ae_lines_pkg.SetAcctLineOption(
           p_natural_side_code          => 'D'
         , p_gain_or_loss_flag          => 'N'
         , p_gl_transfer_mode_code      => 'S'
         , p_acct_entry_type_code       => 'E'
         , p_switch_side_flag           => 'Y'
         , p_merge_duplicate_code       => 'N'
         );
   --
   l_acc_rev_natural_side_code := 'C';  -- 4262811
   -- 
   --
   -- set accounting line type info
   --
   xla_ae_lines_pkg.SetAcctLineType
      (p_component_type             => l_component_type
      ,p_event_type_code            => l_event_type_code
      ,p_line_definition_owner_code => l_line_definition_owner_code
      ,p_line_definition_code       => l_line_definition_code
      ,p_accounting_line_code       => l_component_code
      ,p_accounting_line_type_code  => l_component_type_code
      ,p_accounting_line_appl_id    => l_component_appl_id
      ,p_amb_context_code           => l_amb_context_code
      ,p_entity_code                => l_entity_code
      ,p_event_class_code           => l_event_class_code);
   --
   -- set accounting class
   --
   xla_ae_lines_pkg.SetAcctClass(
           p_accounting_class_code  => 'PA_BUDGET_ENC'
         , p_ae_header_id           => l_ae_header_id
         );

   --
   -- set rounding class
   --
   XLA_AE_LINES_PKG.g_rec_lines.array_rounding_class(XLA_AE_LINES_PKG.g_LineNumber) :=
                      'PA_BUDGET_ENC';

   --
   xla_ae_lines_pkg.g_rec_lines.array_calculate_acctd_flag(xla_ae_lines_pkg.g_LineNumber) := p_calculate_acctd_flag;
   xla_ae_lines_pkg.g_rec_lines.array_calculate_g_l_flag(xla_ae_lines_pkg.g_LineNumber) := p_calculate_g_l_flag;
   --
   -- bulk performance
   --
   XLA_AE_LINES_PKG.g_rec_lines.array_balance_type_code(XLA_AE_LINES_PKG.g_LineNumber) := l_balance_type_code;

   XLA_AE_LINES_PKG.g_rec_lines.array_ledger_id(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id;

   -- 4955764
   XLA_AE_LINES_PKG.g_rec_lines.array_gl_date(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_HEADER_PKG.g_rec_header_new.array_gl_date(g_array_event(p_event_id).array_value_num('header_index'));

   -- 4458381 Public Sector Enh
   
   --
   -- set accounting attributes for the line type
   --
   l_entered_amt_idx := 27;
   l_accted_amt_idx  := 29;
   l_bflow_applied_to_amt_idx  := NULL;  -- 5132302
   l_rec_acct_attrs.array_acct_attr_code(1) := 'ACCOUNTING_REVERSAL_OPTION';
   l_rec_acct_attrs.array_char_value(1)  := p_source_85;
   l_rec_acct_attrs.array_acct_attr_code(2) := 'ALLOC_TO_APPLICATION_ID';
   l_rec_acct_attrs.array_num_value(2)  := p_source_86;
   l_rec_acct_attrs.array_acct_attr_code(3) := 'ALLOC_TO_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(3)  := p_source_87;
   l_rec_acct_attrs.array_acct_attr_code(4) := 'ALLOC_TO_ENTITY_CODE';
   l_rec_acct_attrs.array_char_value(4)  := p_source_88;
   l_rec_acct_attrs.array_acct_attr_code(5) := 'ALLOC_TO_FIRST_DIST_ID';
   l_rec_acct_attrs.array_num_value(5)  :=  to_char(p_source_89);
   l_rec_acct_attrs.array_acct_attr_code(6) := 'ALLOC_TO_FIRST_SYS_TRAN_ID';
   l_rec_acct_attrs.array_num_value(6)  :=  to_char(p_source_90);
   l_rec_acct_attrs.array_acct_attr_code(7) := 'APPLIED_TO_APPLICATION_ID';
   l_rec_acct_attrs.array_num_value(7)  := p_source_109;
   l_rec_acct_attrs.array_acct_attr_code(8) := 'APPLIED_TO_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(8)  := p_source_110;
   l_rec_acct_attrs.array_acct_attr_code(9) := 'APPLIED_TO_ENTITY_CODE';
   l_rec_acct_attrs.array_char_value(9)  := p_source_111;
   l_rec_acct_attrs.array_acct_attr_code(10) := 'APPLIED_TO_FIRST_DIST_ID';
   l_rec_acct_attrs.array_num_value(10)  :=  to_char(p_source_112);
   l_rec_acct_attrs.array_acct_attr_code(11) := 'APPLIED_TO_FIRST_SYS_TRAN_ID';
   l_rec_acct_attrs.array_num_value(11)  :=  to_char(p_source_113);
   l_rec_acct_attrs.array_acct_attr_code(12) := 'APPLIED_TO_SECOND_DIST_ID';
   l_rec_acct_attrs.array_char_value(12)  := p_source_114;
   l_rec_acct_attrs.array_acct_attr_code(13) := 'DISTRIBUTION_IDENTIFIER_1';
   l_rec_acct_attrs.array_num_value(13)  :=  to_char(p_source_30);
   l_rec_acct_attrs.array_acct_attr_code(14) := 'DISTRIBUTION_IDENTIFIER_2';
   l_rec_acct_attrs.array_char_value(14)  := p_source_96;
   l_rec_acct_attrs.array_acct_attr_code(15) := 'DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(15)  := p_source_21;
   l_rec_acct_attrs.array_acct_attr_code(16) := 'ENC_UPG_CR_ACCT_CLASS';
   l_rec_acct_attrs.array_char_value(16)  := p_source_97;
   l_rec_acct_attrs.array_acct_attr_code(17) := 'ENC_UPG_CR_CCID';
   l_rec_acct_attrs.array_num_value(17)  := p_source_98;
   l_rec_acct_attrs.array_acct_attr_code(18) := 'ENC_UPG_CR_ENTERED_AMT';
   l_rec_acct_attrs.array_num_value(18)  := p_source_57;
   l_rec_acct_attrs.array_acct_attr_code(19) := 'ENC_UPG_CR_ENTERED_CURR';
   l_rec_acct_attrs.array_char_value(19)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(20) := 'ENC_UPG_CR_LEDGER_AMT';
   l_rec_acct_attrs.array_num_value(20)  := p_source_99;
   l_rec_acct_attrs.array_acct_attr_code(21) := 'ENC_UPG_DR_ACCT_CLASS';
   l_rec_acct_attrs.array_char_value(21)  := p_source_100;
   l_rec_acct_attrs.array_acct_attr_code(22) := 'ENC_UPG_DR_CCID';
   l_rec_acct_attrs.array_num_value(22)  := p_source_101;
   l_rec_acct_attrs.array_acct_attr_code(23) := 'ENC_UPG_DR_ENTERED_AMT';
   l_rec_acct_attrs.array_num_value(23)  := p_source_57;
   l_rec_acct_attrs.array_acct_attr_code(24) := 'ENC_UPG_DR_ENTERED_CURR';
   l_rec_acct_attrs.array_char_value(24)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(25) := 'ENC_UPG_DR_LEDGER_AMT';
   l_rec_acct_attrs.array_num_value(25)  := p_source_99;
   l_rec_acct_attrs.array_acct_attr_code(26) := 'ENC_UPG_OPTION';
   l_rec_acct_attrs.array_char_value(26)  := p_source_102;
   l_rec_acct_attrs.array_acct_attr_code(27) := 'ENTERED_CURRENCY_AMOUNT';
   l_rec_acct_attrs.array_num_value(27)  := p_source_57;
   l_rec_acct_attrs.array_acct_attr_code(28) := 'ENTERED_CURRENCY_CODE';
   l_rec_acct_attrs.array_char_value(28)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(29) := 'LEDGER_AMOUNT';
   l_rec_acct_attrs.array_num_value(29)  := p_source_99;
   l_rec_acct_attrs.array_acct_attr_code(30) := 'REVERSED_DISTRIBUTION_ID1';
   l_rec_acct_attrs.array_num_value(30)  :=  to_char(p_source_103);
   l_rec_acct_attrs.array_acct_attr_code(31) := 'REVERSED_DISTRIBUTION_ID2';
   l_rec_acct_attrs.array_char_value(31)  := p_source_104;
   l_rec_acct_attrs.array_acct_attr_code(32) := 'REVERSED_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(32)  := p_source_105;
   l_rec_acct_attrs.array_acct_attr_code(33) := 'UPG_CR_ENC_TYPE_ID';
   l_rec_acct_attrs.array_num_value(33)  := p_source_106;
   l_rec_acct_attrs.array_acct_attr_code(34) := 'UPG_DR_ENC_TYPE_ID';
   l_rec_acct_attrs.array_num_value(34)  := p_source_107;

   XLA_AE_LINES_PKG.SetLineAcctAttrs(l_rec_acct_attrs);
   p_gain_or_loss_ref  := XLA_AE_LINES_PKG.g_rec_lines.array_gain_or_loss_ref(XLA_AE_LINES_PKG.g_LineNumber);

   ---------------------------------------------------------------------------------------------------------------
   -- 4336173 -- assign Business Flow Class (replace code in xla_ae_lines_pkg.Business_Flow_Validation)
   ---------------------------------------------------------------------------------------------------------------
   XLA_AE_LINES_PKG.g_rec_lines.array_business_class_code(XLA_AE_LINES_PKG.g_LineNumber) := l_bflow_class_code;

   l_actual_upg_option  := XLA_AE_LINES_PKG.g_rec_lines.array_actual_upg_option(XLA_AE_LINES_PKG.g_LineNumber);
   l_enc_upg_option     := XLA_AE_LINES_PKG.g_rec_lines.array_enc_upg_option(XLA_AE_LINES_PKG.g_LineNumber);

   IF xla_accounting_cache_pkg.GetValueChar
         (p_source_code         => 'LEDGER_CATEGORY_CODE'
         ,p_target_ledger_id    => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id) IN ('PRIMARY','ALC')
   AND l_bflow_method_code = 'PRIOR_ENTRY'
--   AND (l_actual_upg_option = 'Y' OR l_enc_upg_option = 'Y') Bug 4922099
   AND ( (NVL(l_actual_upg_option, 'N') IN ('Y', 'O')) OR
         (NVL(l_enc_upg_option, 'N') IN ('Y', 'O'))
       )
   THEN
         xla_ae_lines_pkg.BflowUpgEntry
           (p_business_method_code    => l_bflow_method_code
           ,p_business_class_code     => l_bflow_class_code
           ,p_balance_type            => l_balance_type_code);
   ELSE
      NULL;
XLA_AE_LINES_PKG.business_flow_validation(
                                p_business_method_code     => l_bflow_method_code
                               ,p_business_class_code      => l_bflow_class_code
                               ,p_inherit_description_flag => l_inherit_desc_flag);
   END IF;

   --
   -- call analytical criteria
   --
   -- Inherited Analytical Criteria for business flow method of Prior Entry.
   --
   -- call description
   --
   
xla_ae_lines_pkg.SetLineDescription(
   p_ae_header_id => l_ae_header_id
  ,p_description  => Description_3 (
     p_application_id         => p_application_id
   , p_ae_header_id           => l_ae_header_id 
, p_source_2 => p_source_2
, p_source_3 => p_source_3
, p_source_4 => p_source_4
, p_source_5 => p_source_5
   )
);


   --
   -- call ADRs
   -- Bug 4922099
   --
   IF ( (l_bflow_method_code <> 'PRIOR_ENTRY') OR
        (NVL(l_actual_upg_option, 'N') = 'O') OR
        (NVL(l_enc_upg_option, 'N') = 'O')
      )
   THEN
   NULL;
   --
   --
   
   --
   --
   END IF;
   --
   -- Bug 4922099
   IF ( ( (NVL(l_actual_upg_option, 'N') = 'O') OR
          (NVL(l_enc_upg_option, 'N') = 'O')
        ) AND
        (l_bflow_method_code = 'PRIOR_ENTRY')
      )
   THEN
      IF
      --
      1 = 1
      --
      THEN
      xla_accounting_err_pkg.build_message
                                    (p_appli_s_name            => 'XLA'
                                    ,p_msg_name                => 'XLA_UPG_OVERRIDE_ADR_UNDEFINED'
                                    ,p_token_1                 => 'LINE_NUMBER'
                                    ,p_value_1                 => XLA_AE_LINES_PKG.g_LineNumber
                                    ,p_token_2                 => 'LINE_TYPE_NAME'
                                    ,p_value_2                 => XLA_AE_SOURCES_PKG.GetComponentName (
                                                                             l_component_type
                                                                            ,l_component_code
                                                                            ,l_component_type_code
                                                                            ,l_component_appl_id
                                                                            ,l_amb_context_code
                                                                            ,l_entity_code
                                                                            ,l_event_class_code
                                                                           )
                                    ,p_token_3                 => 'OWNER'
                                    ,p_value_3                 => xla_lookups_pkg.get_meaning(
                                                                          p_lookup_type     => 'XLA_OWNER_TYPE'
                                                                          ,p_lookup_code    => l_component_type_code
                                                                         )
                                    ,p_token_4                 => 'PRODUCT_NAME'
                                    ,p_value_4                 => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.application_name
                                    ,p_entity_id               => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.entity_id
                                    ,p_event_id                => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.event_id
                                    ,p_ledger_id               => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id
                                    ,p_ae_header_id            =>  NULL
                                       );

        IF (C_LEVEL_ERROR>= g_log_level) THEN
                 trace
                      (p_msg      => 'ERROR: XLA_UPG_OVERRIDE_ADR_UNDEFINED'
                      ,p_level    => C_LEVEL_ERROR
                      ,p_module   => l_log_module);
        END IF;
      END IF;
   END IF;
   --
   --
   ------------------------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- NOTE: XLA_AE_LINES_PKG.ValidateCurrentLine should NOT be generated if business flow method is
   -- Prior Entry.  Currently, the following code is always generated.
   ------------------------------------------------------------------------------------------------
   -- No ValidateCurrentLine for business flow method of Prior Entry

   ------------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- Populated credit and debit amounts -- Need to generate this within IF <condition>
   ------------------------------------------------------------------------------------
   XLA_AE_LINES_PKG.SetDebitCreditAmounts;

   ----------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- Update journal entry status -- Need to generate this within IF <condition>
   ----------------------------------------------------------------------------------
   XLA_AE_JOURNAL_ENTRY_PKG.UpdateJournalEntryStatus
         (p_hdr_idx => g_array_event(p_event_id).array_value_num('header_index')
         ,p_balance_type_code => l_balance_type_code
         );

   -------------------------------------------------------------------------------------------
   -- 4262811 - Generate the Accrual Reversal lines
   -------------------------------------------------------------------------------------------
   BEGIN
      l_acc_rev_flag := XLA_AE_HEADER_PKG.g_rec_header_new.array_accrual_reversal_flag
                              (g_array_event(p_event_id).array_value_num('header_index'));
      IF l_acc_rev_flag IS NULL THEN
         l_acc_rev_flag := 'N';
      END IF;
   EXCEPTION
      WHEN OTHERS THEN
         l_acc_rev_flag := 'N';
   END;
   --
   IF (l_acc_rev_flag = 'Y') THEN

       -- 4645092  ------------------------------------------------------------------------------
       -- To allow MPA report to determine if it should generate report process
       XLA_ACCOUNTING_PKG.g_mpa_accrual_exists := 'Y';
       ------------------------------------------------------------------------------------------

       l_accrual_line_num := XLA_AE_LINES_PKG.g_LineNumber;
       XLA_AE_LINES_PKG.CopyLineInfo(l_accrual_line_num);
   -- added call to set_ccid to execute mapping  for secondary accrual reversal entries bug 7444204
   -- call ADRs
   -- Bug 4922099
   --
   IF ( (l_bflow_method_code <> 'PRIOR_ENTRY') OR
        (NVL(l_actual_upg_option, 'N') = 'O') OR
        (NVL(l_enc_upg_option, 'N') = 'O')
      )
   THEN
   NULL;
   --
   --
   
   --
   --
   END IF;

       --
       -- Update the line information that should be overwritten
       --
       XLA_AE_LINES_PKG.set_ae_header_id(p_ae_header_id => p_event_id ,
                                         p_header_num   => 1);
       XLA_AE_LINES_PKG.g_rec_lines.array_header_num(XLA_AE_LINES_PKG.g_LineNumber)  :=1;

       XLA_AE_LINES_PKG.g_rec_lines.array_business_class_code(XLA_AE_LINES_PKG.g_LineNumber) := NULL; -- 4669271

       IF l_bflow_method_code <> 'NONE' THEN  -- 4655713b
          XLA_AE_LINES_PKG.g_rec_lines.array_reversal_code(XLA_AE_LINES_PKG.g_LineNumber) := CONCAT('MPA_',l_bflow_method_code);
       END IF;

      --
      -- Depending on the Reversal Method setup, do a switch side or changes sign for the amounts
      --
      IF (XLA_AE_JOURNAL_ENTRY_PKG.g_cache_ledgers_info.ledger_reversal_option = 'SIDE') THEN
          XLA_AE_LINES_PKG.g_rec_lines.array_natural_side_code(XLA_AE_LINES_PKG.g_LineNumber) :=  l_acc_rev_natural_side_code;
      ELSE
          ---------------------------------------------------------------------------------------------------
          -- 4262811a Switch Sign
          ---------------------------------------------------------------------------------------------------
          XLA_AE_LINES_PKG.g_rec_lines.array_switch_side_flag(XLA_AE_LINES_PKG.g_LineNumber) := 'N';  -- 5052518
          XLA_AE_LINES_PKG.g_rec_lines.array_ledger_amount(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_ledger_amount(XLA_AE_LINES_PKG.g_LineNumber) * -1;
          XLA_AE_LINES_PKG.g_rec_lines.array_entered_amount(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_entered_amount(XLA_AE_LINES_PKG.g_LineNumber) * -1;
          -- 5132302
          XLA_AE_LINES_PKG.g_rec_lines.array_bflow_applied_to_amt(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_bflow_applied_to_amt(XLA_AE_LINES_PKG.g_LineNumber) * -1;

      END IF;

      -- 4955764
      XLA_AE_LINES_PKG.g_rec_lines.array_gl_date(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_HEADER_PKG.g_rec_header_new.array_gl_date(g_array_event(p_event_id).array_value_num('acc_rev_header_index'));


      XLA_AE_LINES_PKG.ValidateCurrentLine;
      XLA_AE_LINES_PKG.SetDebitCreditAmounts;

      XLA_AE_JOURNAL_ENTRY_PKG.UpdateJournalEntryStatus
               (p_hdr_idx           => g_array_event(p_event_id).array_value_num('acc_rev_header_index')
               ,p_balance_type_code => l_balance_type_code);

   END IF;

   -----------------------------------------------------------------------------------------
   -- 4262811 Multiperiod Accounting
   -----------------------------------------------------------------------------------------
     -- No MPA option is assigned.


END IF;
END IF;
--

--
IF (C_LEVEL_PROCEDURE >= g_log_level) THEN
   trace
      (p_msg      => 'END of AcctLineType_98'
      ,p_level    => C_LEVEL_PROCEDURE
      ,p_module   => l_log_module);
END IF;
--
EXCEPTION
  WHEN xla_exceptions_pkg.application_exception THEN
      RAISE;
  WHEN OTHERS THEN
       xla_exceptions_pkg.raise_message
           (p_location => 'XLA_00200_AAD_S_000010_BC_PKG.AcctLineType_98');
END AcctLineType_98;
--

---------------------------------------
--
-- PRIVATE FUNCTION
--         AcctLineType_99
--
---------------------------------------
PROCEDURE AcctLineType_99 (
  p_application_id        IN NUMBER
 ,p_event_id              IN NUMBER
 ,p_calculate_acctd_flag  IN VARCHAR2
 ,p_calculate_g_l_flag    IN VARCHAR2
 ,p_actual_flag           IN OUT VARCHAR2
 ,p_balance_type_code     OUT VARCHAR2
 ,p_gain_or_loss_ref      OUT VARCHAR2
 
--Document Distribution Type
 , p_source_2            IN VARCHAR2
--Project Name
 , p_source_3            IN VARCHAR2
--Task Number
 , p_source_4            IN VARCHAR2
--Expenditure Organization
 , p_source_5            IN NUMBER
--Distribution Link Type
 , p_source_21            IN VARCHAR2
--Invoice Distribution Identifier
 , p_source_30            IN NUMBER
--Invoice Currency Code
 , p_source_33            IN VARCHAR2
--Invoice Distribution Amount
 , p_source_57            IN NUMBER
--Document Type
 , p_source_83            IN VARCHAR2
--Burden Amount Display Method
 , p_source_84            IN VARCHAR2
--Accounting reversal indicator for project invoice burden
 , p_source_85            IN VARCHAR2
--Allocated to Application Identifier
 , p_source_86            IN NUMBER
--Allocated to Distribution Type
 , p_source_87            IN VARCHAR2
--Allocated to Entity Code
 , p_source_88            IN VARCHAR2
--Allocated to First Distribution Identifier
 , p_source_89            IN NUMBER
--Allocated to First System Transaction Identifier
 , p_source_90            IN NUMBER
--Invoice Distribution Expenditure Type
 , p_source_96            IN VARCHAR2
--Encumbrance Upgrade Credit Accounting Class
 , p_source_97            IN VARCHAR2
--Encumbrance Upgrade Credit Account
 , p_source_98            IN NUMBER
--Invoice Distribution Ledger Amount Before Rounding
 , p_source_99            IN NUMBER
--Encumbrance Upgrade Debit Accounting Class
 , p_source_100            IN VARCHAR2
--Encumbrance Upgrade Debit Account
 , p_source_101            IN NUMBER
--Use Encumbrances Upgrade Attributes Flag
 , p_source_102            IN VARCHAR2
--Accounting reversal first distribution identifier for project invoice burden
 , p_source_103            IN NUMBER
--Invoice Burden Applied to Second Distribution Identifier
 , p_source_104            IN VARCHAR2
--Accounting reversal distribution type for project invoice burden
 , p_source_105            IN VARCHAR2
--Encumbrance Upgrade Credit Encumbrance Type
 , p_source_106            IN NUMBER
--Encumbrance Upgrade Debit Encumbrance Type
 , p_source_107            IN NUMBER
--Release Identifier
 , p_source_115            IN NUMBER
--Purchase Order Burden Applied to Application Identifier
 , p_source_116            IN NUMBER
--Purchase Order Burden Applied to Distribution Type
 , p_source_117            IN VARCHAR2
--Purchase Order Burden Applied to Entity Code
 , p_source_118            IN VARCHAR2
--Purchase Order Burden Applied to First Distribution Identifier
 , p_source_119            IN NUMBER
--Purchase Order Burden Applied to First System Transaction Identifier
 , p_source_120            IN NUMBER
--Purchase Order Burden Applied to Second Distribution Identifier
 , p_source_121            IN VARCHAR2
)
IS

l_component_type              VARCHAR2(80);
l_component_code              VARCHAR2(30);
l_component_type_code         VARCHAR2(1);
l_component_appl_id           INTEGER;
l_amb_context_code            VARCHAR2(30);
l_entity_code                 VARCHAR2(30);
l_event_class_code            VARCHAR2(30);
l_ae_header_id                NUMBER;
l_event_type_code             VARCHAR2(30);
l_line_definition_code        VARCHAR2(30);
l_line_definition_owner_code  VARCHAR2(1);
--
-- adr variables
l_segment                     VARCHAR2(30);
l_ccid                        NUMBER;
l_adr_transaction_coa_id      NUMBER;
l_adr_accounting_coa_id       NUMBER;
l_adr_flexfield_segment_code  VARCHAR2(30);
l_adr_flex_value_set_id       NUMBER;
l_adr_value_type_code         VARCHAR2(30);
l_adr_value_combination_id    NUMBER;
l_adr_value_segment_code      VARCHAR2(30);

l_bflow_method_code           VARCHAR2(30);  -- 4219869 Business Flow
l_bflow_class_code            VARCHAR2(30);  -- 4219869 Business Flow
l_inherit_desc_flag           VARCHAR2(1);   -- 4219869 Business Flow
l_budgetary_control_flag      VARCHAR2(1);   -- 4458381 Public Sector Enh

-- 4262811 Variables ------------------------------------------------------------------------------------------
l_entered_amt_idx             NUMBER;
l_accted_amt_idx              NUMBER;
l_acc_rev_flag                VARCHAR2(1);
l_accrual_line_num            NUMBER;
l_tmp_amt                     NUMBER;
l_acc_rev_natural_side_code   VARCHAR2(1);

l_num_entries                 NUMBER;
l_gl_dates                    xla_ae_journal_entry_pkg.t_array_date;
l_accted_amts                 xla_ae_journal_entry_pkg.t_array_num;
l_entered_amts                xla_ae_journal_entry_pkg.t_array_num;
l_period_names                xla_ae_journal_entry_pkg.t_array_V15L;
l_recog_line_1                NUMBER;
l_recog_line_2                NUMBER;

l_bflow_applied_to_amt_idx    NUMBER;                                -- 5132302
l_bflow_applied_to_amt        NUMBER;                                -- 5132302
l_bflow_applied_to_amts       xla_ae_journal_entry_pkg.t_array_num;  -- 5132302

l_event_id                    NUMBER;  -- To handle MPA header Description: xla_ae_header_pkg.SetHdrDescription

--l_rounding_ccy                VARCHAR2(15); -- To handle MPA rounding  4262811b
l_same_currency               BOOLEAN;        -- To handle MPA rounding  4262811b

---------------------------------------------------------------------------------------------------------------


--
-- bulk performance
--
l_balance_type_code           VARCHAR2(1);
l_rec_acct_attrs              XLA_AE_LINES_PKG.t_rec_acct_attrs;
l_log_module                  VARCHAR2(240);

--
-- Upgrade strategy
--
l_actual_upg_option           VARCHAR2(1);
l_enc_upg_option           VARCHAR2(1);

--
BEGIN
--
IF g_log_enabled THEN
      l_log_module := C_DEFAULT_MODULE||'.AcctLineType_99';
END IF;
--
IF (C_LEVEL_PROCEDURE >= g_log_level) THEN

      trace
         (p_msg      => 'BEGIN of AcctLineType_99'
         ,p_level    => C_LEVEL_PROCEDURE
         ,p_module   => l_log_module);

END IF;
--
l_component_type             := 'AMB_JLT';
l_component_code             := 'REVERSE_PO_BURDENED_ENC';
l_component_type_code        := 'S';
l_component_appl_id          :=  200;
l_amb_context_code           := 'DEFAULT';
l_entity_code                := 'AP_INVOICES';
l_event_class_code           := 'INVOICE_BURDEN';
l_event_type_code            := 'INVOICE_BURDEN_ALL';
l_line_definition_owner_code := 'S';
l_line_definition_code       := 'AP_INV_BURDEN_ENC_ALL';
--
l_balance_type_code          := 'E';
l_segment                     := NULL;
l_ccid                        := NULL;
l_adr_transaction_coa_id      := NULL;
l_adr_accounting_coa_id       := NULL;
l_adr_flexfield_segment_code  := NULL;
l_adr_flex_value_set_id       := NULL;
l_adr_value_type_code         := NULL;
l_adr_value_combination_id    := NULL;
l_adr_value_segment_code      := NULL;

l_bflow_method_code          := 'PRIOR_ENTRY';   -- 4219869 Business Flow
l_bflow_class_code           := 'PO_PA_BURDENED_ENC';    -- 4219869 Business Flow
l_inherit_desc_flag          := 'N';   -- 4219869 Business Flow
l_budgetary_control_flag     := 'Y';

l_bflow_applied_to_amt_idx   := NULL; -- 5132302
l_bflow_applied_to_amt       := NULL; -- 5132302
l_entered_amt_idx            := NULL;          -- 4262811
l_accted_amt_idx             := NULL;          -- 4262811
l_acc_rev_flag               := NULL;          -- 4262811
l_accrual_line_num           := NULL;          -- 4262811
l_tmp_amt                    := NULL;          -- 4262811
--
 
IF XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id = XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.ledger_id OR
    l_balance_type_code <> 'B' THEN
IF NVL(p_source_83,'
') =  'PO' AND 
NVL(p_source_84,'
') =  'S' AND 
p_source_115 IS NULL 
 THEN 

   --
   XLA_AE_LINES_PKG.SetNewLine;

   p_balance_type_code          := l_balance_type_code;
   -- set the flag so later we will know whether the gain loss line needs to be created
   
   IF(l_balance_type_code = 'A' and p_actual_flag is null) THEN
     p_actual_flag :='A';
   END IF;

   --
   -- bulk performance
   --
   XLA_AE_LINES_PKG.set_ae_header_id (p_ae_header_id => p_event_id ,
                                      p_header_num   => 0); -- 4262811
   --
   -- set accounting line options
   --
   l_ae_header_id:= xla_ae_lines_pkg.SetAcctLineOption(
           p_natural_side_code          => 'C'
         , p_gain_or_loss_flag          => 'N'
         , p_gl_transfer_mode_code      => 'S'
         , p_acct_entry_type_code       => 'E'
         , p_switch_side_flag           => 'Y'
         , p_merge_duplicate_code       => 'N'
         );
   --
   l_acc_rev_natural_side_code := 'D';  -- 4262811
   -- 
   --
   -- set accounting line type info
   --
   xla_ae_lines_pkg.SetAcctLineType
      (p_component_type             => l_component_type
      ,p_event_type_code            => l_event_type_code
      ,p_line_definition_owner_code => l_line_definition_owner_code
      ,p_line_definition_code       => l_line_definition_code
      ,p_accounting_line_code       => l_component_code
      ,p_accounting_line_type_code  => l_component_type_code
      ,p_accounting_line_appl_id    => l_component_appl_id
      ,p_amb_context_code           => l_amb_context_code
      ,p_entity_code                => l_entity_code
      ,p_event_class_code           => l_event_class_code);
   --
   -- set accounting class
   --
   xla_ae_lines_pkg.SetAcctClass(
           p_accounting_class_code  => 'PO_PA_BURDENED'
         , p_ae_header_id           => l_ae_header_id
         );

   --
   -- set rounding class
   --
   XLA_AE_LINES_PKG.g_rec_lines.array_rounding_class(XLA_AE_LINES_PKG.g_LineNumber) :=
                      'PO_PA_BURDENED';

   --
   xla_ae_lines_pkg.g_rec_lines.array_calculate_acctd_flag(xla_ae_lines_pkg.g_LineNumber) := p_calculate_acctd_flag;
   xla_ae_lines_pkg.g_rec_lines.array_calculate_g_l_flag(xla_ae_lines_pkg.g_LineNumber) := p_calculate_g_l_flag;
   --
   -- bulk performance
   --
   XLA_AE_LINES_PKG.g_rec_lines.array_balance_type_code(XLA_AE_LINES_PKG.g_LineNumber) := l_balance_type_code;

   XLA_AE_LINES_PKG.g_rec_lines.array_ledger_id(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id;

   -- 4955764
   XLA_AE_LINES_PKG.g_rec_lines.array_gl_date(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_HEADER_PKG.g_rec_header_new.array_gl_date(g_array_event(p_event_id).array_value_num('header_index'));

   -- 4458381 Public Sector Enh
   
   --
   -- set accounting attributes for the line type
   --
   l_entered_amt_idx := 27;
   l_accted_amt_idx  := 29;
   l_bflow_applied_to_amt_idx  := NULL;  -- 5132302
   l_rec_acct_attrs.array_acct_attr_code(1) := 'ACCOUNTING_REVERSAL_OPTION';
   l_rec_acct_attrs.array_char_value(1)  := p_source_85;
   l_rec_acct_attrs.array_acct_attr_code(2) := 'ALLOC_TO_APPLICATION_ID';
   l_rec_acct_attrs.array_num_value(2)  := p_source_86;
   l_rec_acct_attrs.array_acct_attr_code(3) := 'ALLOC_TO_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(3)  := p_source_87;
   l_rec_acct_attrs.array_acct_attr_code(4) := 'ALLOC_TO_ENTITY_CODE';
   l_rec_acct_attrs.array_char_value(4)  := p_source_88;
   l_rec_acct_attrs.array_acct_attr_code(5) := 'ALLOC_TO_FIRST_DIST_ID';
   l_rec_acct_attrs.array_num_value(5)  :=  to_char(p_source_89);
   l_rec_acct_attrs.array_acct_attr_code(6) := 'ALLOC_TO_FIRST_SYS_TRAN_ID';
   l_rec_acct_attrs.array_num_value(6)  :=  to_char(p_source_90);
   l_rec_acct_attrs.array_acct_attr_code(7) := 'APPLIED_TO_APPLICATION_ID';
   l_rec_acct_attrs.array_num_value(7)  := p_source_116;
   l_rec_acct_attrs.array_acct_attr_code(8) := 'APPLIED_TO_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(8)  := p_source_117;
   l_rec_acct_attrs.array_acct_attr_code(9) := 'APPLIED_TO_ENTITY_CODE';
   l_rec_acct_attrs.array_char_value(9)  := p_source_118;
   l_rec_acct_attrs.array_acct_attr_code(10) := 'APPLIED_TO_FIRST_DIST_ID';
   l_rec_acct_attrs.array_num_value(10)  :=  to_char(p_source_119);
   l_rec_acct_attrs.array_acct_attr_code(11) := 'APPLIED_TO_FIRST_SYS_TRAN_ID';
   l_rec_acct_attrs.array_num_value(11)  :=  to_char(p_source_120);
   l_rec_acct_attrs.array_acct_attr_code(12) := 'APPLIED_TO_SECOND_DIST_ID';
   l_rec_acct_attrs.array_char_value(12)  := p_source_121;
   l_rec_acct_attrs.array_acct_attr_code(13) := 'DISTRIBUTION_IDENTIFIER_1';
   l_rec_acct_attrs.array_num_value(13)  :=  to_char(p_source_30);
   l_rec_acct_attrs.array_acct_attr_code(14) := 'DISTRIBUTION_IDENTIFIER_2';
   l_rec_acct_attrs.array_char_value(14)  := p_source_96;
   l_rec_acct_attrs.array_acct_attr_code(15) := 'DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(15)  := p_source_21;
   l_rec_acct_attrs.array_acct_attr_code(16) := 'ENC_UPG_CR_ACCT_CLASS';
   l_rec_acct_attrs.array_char_value(16)  := p_source_97;
   l_rec_acct_attrs.array_acct_attr_code(17) := 'ENC_UPG_CR_CCID';
   l_rec_acct_attrs.array_num_value(17)  := p_source_98;
   l_rec_acct_attrs.array_acct_attr_code(18) := 'ENC_UPG_CR_ENTERED_AMT';
   l_rec_acct_attrs.array_num_value(18)  := p_source_57;
   l_rec_acct_attrs.array_acct_attr_code(19) := 'ENC_UPG_CR_ENTERED_CURR';
   l_rec_acct_attrs.array_char_value(19)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(20) := 'ENC_UPG_CR_LEDGER_AMT';
   l_rec_acct_attrs.array_num_value(20)  := p_source_99;
   l_rec_acct_attrs.array_acct_attr_code(21) := 'ENC_UPG_DR_ACCT_CLASS';
   l_rec_acct_attrs.array_char_value(21)  := p_source_100;
   l_rec_acct_attrs.array_acct_attr_code(22) := 'ENC_UPG_DR_CCID';
   l_rec_acct_attrs.array_num_value(22)  := p_source_101;
   l_rec_acct_attrs.array_acct_attr_code(23) := 'ENC_UPG_DR_ENTERED_AMT';
   l_rec_acct_attrs.array_num_value(23)  := p_source_57;
   l_rec_acct_attrs.array_acct_attr_code(24) := 'ENC_UPG_DR_ENTERED_CURR';
   l_rec_acct_attrs.array_char_value(24)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(25) := 'ENC_UPG_DR_LEDGER_AMT';
   l_rec_acct_attrs.array_num_value(25)  := p_source_99;
   l_rec_acct_attrs.array_acct_attr_code(26) := 'ENC_UPG_OPTION';
   l_rec_acct_attrs.array_char_value(26)  := p_source_102;
   l_rec_acct_attrs.array_acct_attr_code(27) := 'ENTERED_CURRENCY_AMOUNT';
   l_rec_acct_attrs.array_num_value(27)  := p_source_57;
   l_rec_acct_attrs.array_acct_attr_code(28) := 'ENTERED_CURRENCY_CODE';
   l_rec_acct_attrs.array_char_value(28)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(29) := 'LEDGER_AMOUNT';
   l_rec_acct_attrs.array_num_value(29)  := p_source_99;
   l_rec_acct_attrs.array_acct_attr_code(30) := 'REVERSED_DISTRIBUTION_ID1';
   l_rec_acct_attrs.array_num_value(30)  :=  to_char(p_source_103);
   l_rec_acct_attrs.array_acct_attr_code(31) := 'REVERSED_DISTRIBUTION_ID2';
   l_rec_acct_attrs.array_char_value(31)  := p_source_104;
   l_rec_acct_attrs.array_acct_attr_code(32) := 'REVERSED_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(32)  := p_source_105;
   l_rec_acct_attrs.array_acct_attr_code(33) := 'UPG_CR_ENC_TYPE_ID';
   l_rec_acct_attrs.array_num_value(33)  := p_source_106;
   l_rec_acct_attrs.array_acct_attr_code(34) := 'UPG_DR_ENC_TYPE_ID';
   l_rec_acct_attrs.array_num_value(34)  := p_source_107;

   XLA_AE_LINES_PKG.SetLineAcctAttrs(l_rec_acct_attrs);
   p_gain_or_loss_ref  := XLA_AE_LINES_PKG.g_rec_lines.array_gain_or_loss_ref(XLA_AE_LINES_PKG.g_LineNumber);

   ---------------------------------------------------------------------------------------------------------------
   -- 4336173 -- assign Business Flow Class (replace code in xla_ae_lines_pkg.Business_Flow_Validation)
   ---------------------------------------------------------------------------------------------------------------
   XLA_AE_LINES_PKG.g_rec_lines.array_business_class_code(XLA_AE_LINES_PKG.g_LineNumber) := l_bflow_class_code;

   l_actual_upg_option  := XLA_AE_LINES_PKG.g_rec_lines.array_actual_upg_option(XLA_AE_LINES_PKG.g_LineNumber);
   l_enc_upg_option     := XLA_AE_LINES_PKG.g_rec_lines.array_enc_upg_option(XLA_AE_LINES_PKG.g_LineNumber);

   IF xla_accounting_cache_pkg.GetValueChar
         (p_source_code         => 'LEDGER_CATEGORY_CODE'
         ,p_target_ledger_id    => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id) IN ('PRIMARY','ALC')
   AND l_bflow_method_code = 'PRIOR_ENTRY'
--   AND (l_actual_upg_option = 'Y' OR l_enc_upg_option = 'Y') Bug 4922099
   AND ( (NVL(l_actual_upg_option, 'N') IN ('Y', 'O')) OR
         (NVL(l_enc_upg_option, 'N') IN ('Y', 'O'))
       )
   THEN
         xla_ae_lines_pkg.BflowUpgEntry
           (p_business_method_code    => l_bflow_method_code
           ,p_business_class_code     => l_bflow_class_code
           ,p_balance_type            => l_balance_type_code);
   ELSE
      NULL;
XLA_AE_LINES_PKG.business_flow_validation(
                                p_business_method_code     => l_bflow_method_code
                               ,p_business_class_code      => l_bflow_class_code
                               ,p_inherit_description_flag => l_inherit_desc_flag);
   END IF;

   --
   -- call analytical criteria
   --
   -- Inherited Analytical Criteria for business flow method of Prior Entry.
   --
   -- call description
   --
   
xla_ae_lines_pkg.SetLineDescription(
   p_ae_header_id => l_ae_header_id
  ,p_description  => Description_3 (
     p_application_id         => p_application_id
   , p_ae_header_id           => l_ae_header_id 
, p_source_2 => p_source_2
, p_source_3 => p_source_3
, p_source_4 => p_source_4
, p_source_5 => p_source_5
   )
);


   --
   -- call ADRs
   -- Bug 4922099
   --
   IF ( (l_bflow_method_code <> 'PRIOR_ENTRY') OR
        (NVL(l_actual_upg_option, 'N') = 'O') OR
        (NVL(l_enc_upg_option, 'N') = 'O')
      )
   THEN
   NULL;
   --
   --
   
   --
   --
   END IF;
   --
   -- Bug 4922099
   IF ( ( (NVL(l_actual_upg_option, 'N') = 'O') OR
          (NVL(l_enc_upg_option, 'N') = 'O')
        ) AND
        (l_bflow_method_code = 'PRIOR_ENTRY')
      )
   THEN
      IF
      --
      1 = 1
      --
      THEN
      xla_accounting_err_pkg.build_message
                                    (p_appli_s_name            => 'XLA'
                                    ,p_msg_name                => 'XLA_UPG_OVERRIDE_ADR_UNDEFINED'
                                    ,p_token_1                 => 'LINE_NUMBER'
                                    ,p_value_1                 => XLA_AE_LINES_PKG.g_LineNumber
                                    ,p_token_2                 => 'LINE_TYPE_NAME'
                                    ,p_value_2                 => XLA_AE_SOURCES_PKG.GetComponentName (
                                                                             l_component_type
                                                                            ,l_component_code
                                                                            ,l_component_type_code
                                                                            ,l_component_appl_id
                                                                            ,l_amb_context_code
                                                                            ,l_entity_code
                                                                            ,l_event_class_code
                                                                           )
                                    ,p_token_3                 => 'OWNER'
                                    ,p_value_3                 => xla_lookups_pkg.get_meaning(
                                                                          p_lookup_type     => 'XLA_OWNER_TYPE'
                                                                          ,p_lookup_code    => l_component_type_code
                                                                         )
                                    ,p_token_4                 => 'PRODUCT_NAME'
                                    ,p_value_4                 => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.application_name
                                    ,p_entity_id               => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.entity_id
                                    ,p_event_id                => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.event_id
                                    ,p_ledger_id               => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id
                                    ,p_ae_header_id            =>  NULL
                                       );

        IF (C_LEVEL_ERROR>= g_log_level) THEN
                 trace
                      (p_msg      => 'ERROR: XLA_UPG_OVERRIDE_ADR_UNDEFINED'
                      ,p_level    => C_LEVEL_ERROR
                      ,p_module   => l_log_module);
        END IF;
      END IF;
   END IF;
   --
   --
   ------------------------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- NOTE: XLA_AE_LINES_PKG.ValidateCurrentLine should NOT be generated if business flow method is
   -- Prior Entry.  Currently, the following code is always generated.
   ------------------------------------------------------------------------------------------------
   -- No ValidateCurrentLine for business flow method of Prior Entry

   ------------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- Populated credit and debit amounts -- Need to generate this within IF <condition>
   ------------------------------------------------------------------------------------
   XLA_AE_LINES_PKG.SetDebitCreditAmounts;

   ----------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- Update journal entry status -- Need to generate this within IF <condition>
   ----------------------------------------------------------------------------------
   XLA_AE_JOURNAL_ENTRY_PKG.UpdateJournalEntryStatus
         (p_hdr_idx => g_array_event(p_event_id).array_value_num('header_index')
         ,p_balance_type_code => l_balance_type_code
         );

   -------------------------------------------------------------------------------------------
   -- 4262811 - Generate the Accrual Reversal lines
   -------------------------------------------------------------------------------------------
   BEGIN
      l_acc_rev_flag := XLA_AE_HEADER_PKG.g_rec_header_new.array_accrual_reversal_flag
                              (g_array_event(p_event_id).array_value_num('header_index'));
      IF l_acc_rev_flag IS NULL THEN
         l_acc_rev_flag := 'N';
      END IF;
   EXCEPTION
      WHEN OTHERS THEN
         l_acc_rev_flag := 'N';
   END;
   --
   IF (l_acc_rev_flag = 'Y') THEN

       -- 4645092  ------------------------------------------------------------------------------
       -- To allow MPA report to determine if it should generate report process
       XLA_ACCOUNTING_PKG.g_mpa_accrual_exists := 'Y';
       ------------------------------------------------------------------------------------------

       l_accrual_line_num := XLA_AE_LINES_PKG.g_LineNumber;
       XLA_AE_LINES_PKG.CopyLineInfo(l_accrual_line_num);
   -- added call to set_ccid to execute mapping  for secondary accrual reversal entries bug 7444204
   -- call ADRs
   -- Bug 4922099
   --
   IF ( (l_bflow_method_code <> 'PRIOR_ENTRY') OR
        (NVL(l_actual_upg_option, 'N') = 'O') OR
        (NVL(l_enc_upg_option, 'N') = 'O')
      )
   THEN
   NULL;
   --
   --
   
   --
   --
   END IF;

       --
       -- Update the line information that should be overwritten
       --
       XLA_AE_LINES_PKG.set_ae_header_id(p_ae_header_id => p_event_id ,
                                         p_header_num   => 1);
       XLA_AE_LINES_PKG.g_rec_lines.array_header_num(XLA_AE_LINES_PKG.g_LineNumber)  :=1;

       XLA_AE_LINES_PKG.g_rec_lines.array_business_class_code(XLA_AE_LINES_PKG.g_LineNumber) := NULL; -- 4669271

       IF l_bflow_method_code <> 'NONE' THEN  -- 4655713b
          XLA_AE_LINES_PKG.g_rec_lines.array_reversal_code(XLA_AE_LINES_PKG.g_LineNumber) := CONCAT('MPA_',l_bflow_method_code);
       END IF;

      --
      -- Depending on the Reversal Method setup, do a switch side or changes sign for the amounts
      --
      IF (XLA_AE_JOURNAL_ENTRY_PKG.g_cache_ledgers_info.ledger_reversal_option = 'SIDE') THEN
          XLA_AE_LINES_PKG.g_rec_lines.array_natural_side_code(XLA_AE_LINES_PKG.g_LineNumber) :=  l_acc_rev_natural_side_code;
      ELSE
          ---------------------------------------------------------------------------------------------------
          -- 4262811a Switch Sign
          ---------------------------------------------------------------------------------------------------
          XLA_AE_LINES_PKG.g_rec_lines.array_switch_side_flag(XLA_AE_LINES_PKG.g_LineNumber) := 'N';  -- 5052518
          XLA_AE_LINES_PKG.g_rec_lines.array_ledger_amount(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_ledger_amount(XLA_AE_LINES_PKG.g_LineNumber) * -1;
          XLA_AE_LINES_PKG.g_rec_lines.array_entered_amount(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_entered_amount(XLA_AE_LINES_PKG.g_LineNumber) * -1;
          -- 5132302
          XLA_AE_LINES_PKG.g_rec_lines.array_bflow_applied_to_amt(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_bflow_applied_to_amt(XLA_AE_LINES_PKG.g_LineNumber) * -1;

      END IF;

      -- 4955764
      XLA_AE_LINES_PKG.g_rec_lines.array_gl_date(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_HEADER_PKG.g_rec_header_new.array_gl_date(g_array_event(p_event_id).array_value_num('acc_rev_header_index'));


      XLA_AE_LINES_PKG.ValidateCurrentLine;
      XLA_AE_LINES_PKG.SetDebitCreditAmounts;

      XLA_AE_JOURNAL_ENTRY_PKG.UpdateJournalEntryStatus
               (p_hdr_idx           => g_array_event(p_event_id).array_value_num('acc_rev_header_index')
               ,p_balance_type_code => l_balance_type_code);

   END IF;

   -----------------------------------------------------------------------------------------
   -- 4262811 Multiperiod Accounting
   -----------------------------------------------------------------------------------------
     -- No MPA option is assigned.


END IF;
END IF;
--

--
IF (C_LEVEL_PROCEDURE >= g_log_level) THEN
   trace
      (p_msg      => 'END of AcctLineType_99'
      ,p_level    => C_LEVEL_PROCEDURE
      ,p_module   => l_log_module);
END IF;
--
EXCEPTION
  WHEN xla_exceptions_pkg.application_exception THEN
      RAISE;
  WHEN OTHERS THEN
       xla_exceptions_pkg.raise_message
           (p_location => 'XLA_00200_AAD_S_000010_BC_PKG.AcctLineType_99');
END AcctLineType_99;
--

---------------------------------------
--
-- PRIVATE FUNCTION
--         AcctLineType_100
--
---------------------------------------
PROCEDURE AcctLineType_100 (
  p_application_id        IN NUMBER
 ,p_event_id              IN NUMBER
 ,p_calculate_acctd_flag  IN VARCHAR2
 ,p_calculate_g_l_flag    IN VARCHAR2
 ,p_actual_flag           IN OUT VARCHAR2
 ,p_balance_type_code     OUT VARCHAR2
 ,p_gain_or_loss_ref      OUT VARCHAR2
 
--Document Distribution Type
 , p_source_2            IN VARCHAR2
--Project Name
 , p_source_3            IN VARCHAR2
--Task Number
 , p_source_4            IN VARCHAR2
--Expenditure Organization
 , p_source_5            IN NUMBER
--Distribution Link Type
 , p_source_21            IN VARCHAR2
--Invoice Distribution Identifier
 , p_source_30            IN NUMBER
--Invoice Currency Code
 , p_source_33            IN VARCHAR2
--Invoice Distribution Amount
 , p_source_57            IN NUMBER
--Document Type
 , p_source_83            IN VARCHAR2
--Burden Amount Display Method
 , p_source_84            IN VARCHAR2
--Accounting reversal indicator for project invoice burden
 , p_source_85            IN VARCHAR2
--Allocated to Application Identifier
 , p_source_86            IN NUMBER
--Allocated to Distribution Type
 , p_source_87            IN VARCHAR2
--Allocated to Entity Code
 , p_source_88            IN VARCHAR2
--Allocated to First Distribution Identifier
 , p_source_89            IN NUMBER
--Allocated to First System Transaction Identifier
 , p_source_90            IN NUMBER
--Invoice Distribution Expenditure Type
 , p_source_96            IN VARCHAR2
--Encumbrance Upgrade Credit Accounting Class
 , p_source_97            IN VARCHAR2
--Encumbrance Upgrade Credit Account
 , p_source_98            IN NUMBER
--Invoice Distribution Ledger Amount Before Rounding
 , p_source_99            IN NUMBER
--Encumbrance Upgrade Debit Accounting Class
 , p_source_100            IN VARCHAR2
--Encumbrance Upgrade Debit Account
 , p_source_101            IN NUMBER
--Use Encumbrances Upgrade Attributes Flag
 , p_source_102            IN VARCHAR2
--Accounting reversal first distribution identifier for project invoice burden
 , p_source_103            IN NUMBER
--Invoice Burden Applied to Second Distribution Identifier
 , p_source_104            IN VARCHAR2
--Accounting reversal distribution type for project invoice burden
 , p_source_105            IN VARCHAR2
--Encumbrance Upgrade Credit Encumbrance Type
 , p_source_106            IN NUMBER
--Encumbrance Upgrade Debit Encumbrance Type
 , p_source_107            IN NUMBER
--Burden Record Identifier
 , p_source_108            IN VARCHAR2
 , p_source_108_meaning    IN VARCHAR2
--Release Identifier
 , p_source_115            IN NUMBER
--Purchase Order Burden Applied to Application Identifier
 , p_source_116            IN NUMBER
--Purchase Order Burden Applied to Distribution Type
 , p_source_117            IN VARCHAR2
--Purchase Order Burden Applied to Entity Code
 , p_source_118            IN VARCHAR2
--Purchase Order Burden Applied to First Distribution Identifier
 , p_source_119            IN NUMBER
--Purchase Order Burden Applied to First System Transaction Identifier
 , p_source_120            IN NUMBER
--Purchase Order Burden Applied to Second Distribution Identifier
 , p_source_121            IN VARCHAR2
)
IS

l_component_type              VARCHAR2(80);
l_component_code              VARCHAR2(30);
l_component_type_code         VARCHAR2(1);
l_component_appl_id           INTEGER;
l_amb_context_code            VARCHAR2(30);
l_entity_code                 VARCHAR2(30);
l_event_class_code            VARCHAR2(30);
l_ae_header_id                NUMBER;
l_event_type_code             VARCHAR2(30);
l_line_definition_code        VARCHAR2(30);
l_line_definition_owner_code  VARCHAR2(1);
--
-- adr variables
l_segment                     VARCHAR2(30);
l_ccid                        NUMBER;
l_adr_transaction_coa_id      NUMBER;
l_adr_accounting_coa_id       NUMBER;
l_adr_flexfield_segment_code  VARCHAR2(30);
l_adr_flex_value_set_id       NUMBER;
l_adr_value_type_code         VARCHAR2(30);
l_adr_value_combination_id    NUMBER;
l_adr_value_segment_code      VARCHAR2(30);

l_bflow_method_code           VARCHAR2(30);  -- 4219869 Business Flow
l_bflow_class_code            VARCHAR2(30);  -- 4219869 Business Flow
l_inherit_desc_flag           VARCHAR2(1);   -- 4219869 Business Flow
l_budgetary_control_flag      VARCHAR2(1);   -- 4458381 Public Sector Enh

-- 4262811 Variables ------------------------------------------------------------------------------------------
l_entered_amt_idx             NUMBER;
l_accted_amt_idx              NUMBER;
l_acc_rev_flag                VARCHAR2(1);
l_accrual_line_num            NUMBER;
l_tmp_amt                     NUMBER;
l_acc_rev_natural_side_code   VARCHAR2(1);

l_num_entries                 NUMBER;
l_gl_dates                    xla_ae_journal_entry_pkg.t_array_date;
l_accted_amts                 xla_ae_journal_entry_pkg.t_array_num;
l_entered_amts                xla_ae_journal_entry_pkg.t_array_num;
l_period_names                xla_ae_journal_entry_pkg.t_array_V15L;
l_recog_line_1                NUMBER;
l_recog_line_2                NUMBER;

l_bflow_applied_to_amt_idx    NUMBER;                                -- 5132302
l_bflow_applied_to_amt        NUMBER;                                -- 5132302
l_bflow_applied_to_amts       xla_ae_journal_entry_pkg.t_array_num;  -- 5132302

l_event_id                    NUMBER;  -- To handle MPA header Description: xla_ae_header_pkg.SetHdrDescription

--l_rounding_ccy                VARCHAR2(15); -- To handle MPA rounding  4262811b
l_same_currency               BOOLEAN;        -- To handle MPA rounding  4262811b

---------------------------------------------------------------------------------------------------------------


--
-- bulk performance
--
l_balance_type_code           VARCHAR2(1);
l_rec_acct_attrs              XLA_AE_LINES_PKG.t_rec_acct_attrs;
l_log_module                  VARCHAR2(240);

--
-- Upgrade strategy
--
l_actual_upg_option           VARCHAR2(1);
l_enc_upg_option           VARCHAR2(1);

--
BEGIN
--
IF g_log_enabled THEN
      l_log_module := C_DEFAULT_MODULE||'.AcctLineType_100';
END IF;
--
IF (C_LEVEL_PROCEDURE >= g_log_level) THEN

      trace
         (p_msg      => 'BEGIN of AcctLineType_100'
         ,p_level    => C_LEVEL_PROCEDURE
         ,p_module   => l_log_module);

END IF;
--
l_component_type             := 'AMB_JLT';
l_component_code             := 'REVERSE_PO_BURDEN_ENC';
l_component_type_code        := 'S';
l_component_appl_id          :=  200;
l_amb_context_code           := 'DEFAULT';
l_entity_code                := 'AP_INVOICES';
l_event_class_code           := 'INVOICE_BURDEN';
l_event_type_code            := 'INVOICE_BURDEN_ALL';
l_line_definition_owner_code := 'S';
l_line_definition_code       := 'AP_INV_BURDEN_ENC_ALL';
--
l_balance_type_code          := 'E';
l_segment                     := NULL;
l_ccid                        := NULL;
l_adr_transaction_coa_id      := NULL;
l_adr_accounting_coa_id       := NULL;
l_adr_flexfield_segment_code  := NULL;
l_adr_flex_value_set_id       := NULL;
l_adr_value_type_code         := NULL;
l_adr_value_combination_id    := NULL;
l_adr_value_segment_code      := NULL;

l_bflow_method_code          := 'PRIOR_ENTRY';   -- 4219869 Business Flow
l_bflow_class_code           := 'PO_PA_BURDEN_ENC';    -- 4219869 Business Flow
l_inherit_desc_flag          := 'N';   -- 4219869 Business Flow
l_budgetary_control_flag     := 'Y';

l_bflow_applied_to_amt_idx   := NULL; -- 5132302
l_bflow_applied_to_amt       := NULL; -- 5132302
l_entered_amt_idx            := NULL;          -- 4262811
l_accted_amt_idx             := NULL;          -- 4262811
l_acc_rev_flag               := NULL;          -- 4262811
l_accrual_line_num           := NULL;          -- 4262811
l_tmp_amt                    := NULL;          -- 4262811
--
 
IF XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id = XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.ledger_id OR
    l_balance_type_code <> 'B' THEN
IF NVL(p_source_83,'
') =  'PO' AND 
NVL(p_source_108,'
') =  'O' AND 
NVL(p_source_84,'
') =  'D' AND 
p_source_115 IS NULL 
 THEN 

   --
   XLA_AE_LINES_PKG.SetNewLine;

   p_balance_type_code          := l_balance_type_code;
   -- set the flag so later we will know whether the gain loss line needs to be created
   
   IF(l_balance_type_code = 'A' and p_actual_flag is null) THEN
     p_actual_flag :='A';
   END IF;

   --
   -- bulk performance
   --
   XLA_AE_LINES_PKG.set_ae_header_id (p_ae_header_id => p_event_id ,
                                      p_header_num   => 0); -- 4262811
   --
   -- set accounting line options
   --
   l_ae_header_id:= xla_ae_lines_pkg.SetAcctLineOption(
           p_natural_side_code          => 'C'
         , p_gain_or_loss_flag          => 'N'
         , p_gl_transfer_mode_code      => 'S'
         , p_acct_entry_type_code       => 'E'
         , p_switch_side_flag           => 'Y'
         , p_merge_duplicate_code       => 'N'
         );
   --
   l_acc_rev_natural_side_code := 'D';  -- 4262811
   -- 
   --
   -- set accounting line type info
   --
   xla_ae_lines_pkg.SetAcctLineType
      (p_component_type             => l_component_type
      ,p_event_type_code            => l_event_type_code
      ,p_line_definition_owner_code => l_line_definition_owner_code
      ,p_line_definition_code       => l_line_definition_code
      ,p_accounting_line_code       => l_component_code
      ,p_accounting_line_type_code  => l_component_type_code
      ,p_accounting_line_appl_id    => l_component_appl_id
      ,p_amb_context_code           => l_amb_context_code
      ,p_entity_code                => l_entity_code
      ,p_event_class_code           => l_event_class_code);
   --
   -- set accounting class
   --
   xla_ae_lines_pkg.SetAcctClass(
           p_accounting_class_code  => 'PO_PA_BURDEN'
         , p_ae_header_id           => l_ae_header_id
         );

   --
   -- set rounding class
   --
   XLA_AE_LINES_PKG.g_rec_lines.array_rounding_class(XLA_AE_LINES_PKG.g_LineNumber) :=
                      'PO_PA_BURDEN';

   --
   xla_ae_lines_pkg.g_rec_lines.array_calculate_acctd_flag(xla_ae_lines_pkg.g_LineNumber) := p_calculate_acctd_flag;
   xla_ae_lines_pkg.g_rec_lines.array_calculate_g_l_flag(xla_ae_lines_pkg.g_LineNumber) := p_calculate_g_l_flag;
   --
   -- bulk performance
   --
   XLA_AE_LINES_PKG.g_rec_lines.array_balance_type_code(XLA_AE_LINES_PKG.g_LineNumber) := l_balance_type_code;

   XLA_AE_LINES_PKG.g_rec_lines.array_ledger_id(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id;

   -- 4955764
   XLA_AE_LINES_PKG.g_rec_lines.array_gl_date(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_HEADER_PKG.g_rec_header_new.array_gl_date(g_array_event(p_event_id).array_value_num('header_index'));

   -- 4458381 Public Sector Enh
   
   --
   -- set accounting attributes for the line type
   --
   l_entered_amt_idx := 27;
   l_accted_amt_idx  := 29;
   l_bflow_applied_to_amt_idx  := NULL;  -- 5132302
   l_rec_acct_attrs.array_acct_attr_code(1) := 'ACCOUNTING_REVERSAL_OPTION';
   l_rec_acct_attrs.array_char_value(1)  := p_source_85;
   l_rec_acct_attrs.array_acct_attr_code(2) := 'ALLOC_TO_APPLICATION_ID';
   l_rec_acct_attrs.array_num_value(2)  := p_source_86;
   l_rec_acct_attrs.array_acct_attr_code(3) := 'ALLOC_TO_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(3)  := p_source_87;
   l_rec_acct_attrs.array_acct_attr_code(4) := 'ALLOC_TO_ENTITY_CODE';
   l_rec_acct_attrs.array_char_value(4)  := p_source_88;
   l_rec_acct_attrs.array_acct_attr_code(5) := 'ALLOC_TO_FIRST_DIST_ID';
   l_rec_acct_attrs.array_num_value(5)  :=  to_char(p_source_89);
   l_rec_acct_attrs.array_acct_attr_code(6) := 'ALLOC_TO_FIRST_SYS_TRAN_ID';
   l_rec_acct_attrs.array_num_value(6)  :=  to_char(p_source_90);
   l_rec_acct_attrs.array_acct_attr_code(7) := 'APPLIED_TO_APPLICATION_ID';
   l_rec_acct_attrs.array_num_value(7)  := p_source_116;
   l_rec_acct_attrs.array_acct_attr_code(8) := 'APPLIED_TO_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(8)  := p_source_117;
   l_rec_acct_attrs.array_acct_attr_code(9) := 'APPLIED_TO_ENTITY_CODE';
   l_rec_acct_attrs.array_char_value(9)  := p_source_118;
   l_rec_acct_attrs.array_acct_attr_code(10) := 'APPLIED_TO_FIRST_DIST_ID';
   l_rec_acct_attrs.array_num_value(10)  :=  to_char(p_source_119);
   l_rec_acct_attrs.array_acct_attr_code(11) := 'APPLIED_TO_FIRST_SYS_TRAN_ID';
   l_rec_acct_attrs.array_num_value(11)  :=  to_char(p_source_120);
   l_rec_acct_attrs.array_acct_attr_code(12) := 'APPLIED_TO_SECOND_DIST_ID';
   l_rec_acct_attrs.array_char_value(12)  := p_source_121;
   l_rec_acct_attrs.array_acct_attr_code(13) := 'DISTRIBUTION_IDENTIFIER_1';
   l_rec_acct_attrs.array_num_value(13)  :=  to_char(p_source_30);
   l_rec_acct_attrs.array_acct_attr_code(14) := 'DISTRIBUTION_IDENTIFIER_2';
   l_rec_acct_attrs.array_char_value(14)  := p_source_96;
   l_rec_acct_attrs.array_acct_attr_code(15) := 'DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(15)  := p_source_21;
   l_rec_acct_attrs.array_acct_attr_code(16) := 'ENC_UPG_CR_ACCT_CLASS';
   l_rec_acct_attrs.array_char_value(16)  := p_source_97;
   l_rec_acct_attrs.array_acct_attr_code(17) := 'ENC_UPG_CR_CCID';
   l_rec_acct_attrs.array_num_value(17)  := p_source_98;
   l_rec_acct_attrs.array_acct_attr_code(18) := 'ENC_UPG_CR_ENTERED_AMT';
   l_rec_acct_attrs.array_num_value(18)  := p_source_57;
   l_rec_acct_attrs.array_acct_attr_code(19) := 'ENC_UPG_CR_ENTERED_CURR';
   l_rec_acct_attrs.array_char_value(19)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(20) := 'ENC_UPG_CR_LEDGER_AMT';
   l_rec_acct_attrs.array_num_value(20)  := p_source_99;
   l_rec_acct_attrs.array_acct_attr_code(21) := 'ENC_UPG_DR_ACCT_CLASS';
   l_rec_acct_attrs.array_char_value(21)  := p_source_100;
   l_rec_acct_attrs.array_acct_attr_code(22) := 'ENC_UPG_DR_CCID';
   l_rec_acct_attrs.array_num_value(22)  := p_source_101;
   l_rec_acct_attrs.array_acct_attr_code(23) := 'ENC_UPG_DR_ENTERED_AMT';
   l_rec_acct_attrs.array_num_value(23)  := p_source_57;
   l_rec_acct_attrs.array_acct_attr_code(24) := 'ENC_UPG_DR_ENTERED_CURR';
   l_rec_acct_attrs.array_char_value(24)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(25) := 'ENC_UPG_DR_LEDGER_AMT';
   l_rec_acct_attrs.array_num_value(25)  := p_source_99;
   l_rec_acct_attrs.array_acct_attr_code(26) := 'ENC_UPG_OPTION';
   l_rec_acct_attrs.array_char_value(26)  := p_source_102;
   l_rec_acct_attrs.array_acct_attr_code(27) := 'ENTERED_CURRENCY_AMOUNT';
   l_rec_acct_attrs.array_num_value(27)  := p_source_57;
   l_rec_acct_attrs.array_acct_attr_code(28) := 'ENTERED_CURRENCY_CODE';
   l_rec_acct_attrs.array_char_value(28)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(29) := 'LEDGER_AMOUNT';
   l_rec_acct_attrs.array_num_value(29)  := p_source_99;
   l_rec_acct_attrs.array_acct_attr_code(30) := 'REVERSED_DISTRIBUTION_ID1';
   l_rec_acct_attrs.array_num_value(30)  :=  to_char(p_source_103);
   l_rec_acct_attrs.array_acct_attr_code(31) := 'REVERSED_DISTRIBUTION_ID2';
   l_rec_acct_attrs.array_char_value(31)  := p_source_104;
   l_rec_acct_attrs.array_acct_attr_code(32) := 'REVERSED_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(32)  := p_source_105;
   l_rec_acct_attrs.array_acct_attr_code(33) := 'UPG_CR_ENC_TYPE_ID';
   l_rec_acct_attrs.array_num_value(33)  := p_source_106;
   l_rec_acct_attrs.array_acct_attr_code(34) := 'UPG_DR_ENC_TYPE_ID';
   l_rec_acct_attrs.array_num_value(34)  := p_source_107;

   XLA_AE_LINES_PKG.SetLineAcctAttrs(l_rec_acct_attrs);
   p_gain_or_loss_ref  := XLA_AE_LINES_PKG.g_rec_lines.array_gain_or_loss_ref(XLA_AE_LINES_PKG.g_LineNumber);

   ---------------------------------------------------------------------------------------------------------------
   -- 4336173 -- assign Business Flow Class (replace code in xla_ae_lines_pkg.Business_Flow_Validation)
   ---------------------------------------------------------------------------------------------------------------
   XLA_AE_LINES_PKG.g_rec_lines.array_business_class_code(XLA_AE_LINES_PKG.g_LineNumber) := l_bflow_class_code;

   l_actual_upg_option  := XLA_AE_LINES_PKG.g_rec_lines.array_actual_upg_option(XLA_AE_LINES_PKG.g_LineNumber);
   l_enc_upg_option     := XLA_AE_LINES_PKG.g_rec_lines.array_enc_upg_option(XLA_AE_LINES_PKG.g_LineNumber);

   IF xla_accounting_cache_pkg.GetValueChar
         (p_source_code         => 'LEDGER_CATEGORY_CODE'
         ,p_target_ledger_id    => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id) IN ('PRIMARY','ALC')
   AND l_bflow_method_code = 'PRIOR_ENTRY'
--   AND (l_actual_upg_option = 'Y' OR l_enc_upg_option = 'Y') Bug 4922099
   AND ( (NVL(l_actual_upg_option, 'N') IN ('Y', 'O')) OR
         (NVL(l_enc_upg_option, 'N') IN ('Y', 'O'))
       )
   THEN
         xla_ae_lines_pkg.BflowUpgEntry
           (p_business_method_code    => l_bflow_method_code
           ,p_business_class_code     => l_bflow_class_code
           ,p_balance_type            => l_balance_type_code);
   ELSE
      NULL;
XLA_AE_LINES_PKG.business_flow_validation(
                                p_business_method_code     => l_bflow_method_code
                               ,p_business_class_code      => l_bflow_class_code
                               ,p_inherit_description_flag => l_inherit_desc_flag);
   END IF;

   --
   -- call analytical criteria
   --
   -- Inherited Analytical Criteria for business flow method of Prior Entry.
   --
   -- call description
   --
   
xla_ae_lines_pkg.SetLineDescription(
   p_ae_header_id => l_ae_header_id
  ,p_description  => Description_3 (
     p_application_id         => p_application_id
   , p_ae_header_id           => l_ae_header_id 
, p_source_2 => p_source_2
, p_source_3 => p_source_3
, p_source_4 => p_source_4
, p_source_5 => p_source_5
   )
);


   --
   -- call ADRs
   -- Bug 4922099
   --
   IF ( (l_bflow_method_code <> 'PRIOR_ENTRY') OR
        (NVL(l_actual_upg_option, 'N') = 'O') OR
        (NVL(l_enc_upg_option, 'N') = 'O')
      )
   THEN
   NULL;
   --
   --
   
   --
   --
   END IF;
   --
   -- Bug 4922099
   IF ( ( (NVL(l_actual_upg_option, 'N') = 'O') OR
          (NVL(l_enc_upg_option, 'N') = 'O')
        ) AND
        (l_bflow_method_code = 'PRIOR_ENTRY')
      )
   THEN
      IF
      --
      1 = 1
      --
      THEN
      xla_accounting_err_pkg.build_message
                                    (p_appli_s_name            => 'XLA'
                                    ,p_msg_name                => 'XLA_UPG_OVERRIDE_ADR_UNDEFINED'
                                    ,p_token_1                 => 'LINE_NUMBER'
                                    ,p_value_1                 => XLA_AE_LINES_PKG.g_LineNumber
                                    ,p_token_2                 => 'LINE_TYPE_NAME'
                                    ,p_value_2                 => XLA_AE_SOURCES_PKG.GetComponentName (
                                                                             l_component_type
                                                                            ,l_component_code
                                                                            ,l_component_type_code
                                                                            ,l_component_appl_id
                                                                            ,l_amb_context_code
                                                                            ,l_entity_code
                                                                            ,l_event_class_code
                                                                           )
                                    ,p_token_3                 => 'OWNER'
                                    ,p_value_3                 => xla_lookups_pkg.get_meaning(
                                                                          p_lookup_type     => 'XLA_OWNER_TYPE'
                                                                          ,p_lookup_code    => l_component_type_code
                                                                         )
                                    ,p_token_4                 => 'PRODUCT_NAME'
                                    ,p_value_4                 => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.application_name
                                    ,p_entity_id               => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.entity_id
                                    ,p_event_id                => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.event_id
                                    ,p_ledger_id               => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id
                                    ,p_ae_header_id            =>  NULL
                                       );

        IF (C_LEVEL_ERROR>= g_log_level) THEN
                 trace
                      (p_msg      => 'ERROR: XLA_UPG_OVERRIDE_ADR_UNDEFINED'
                      ,p_level    => C_LEVEL_ERROR
                      ,p_module   => l_log_module);
        END IF;
      END IF;
   END IF;
   --
   --
   ------------------------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- NOTE: XLA_AE_LINES_PKG.ValidateCurrentLine should NOT be generated if business flow method is
   -- Prior Entry.  Currently, the following code is always generated.
   ------------------------------------------------------------------------------------------------
   -- No ValidateCurrentLine for business flow method of Prior Entry

   ------------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- Populated credit and debit amounts -- Need to generate this within IF <condition>
   ------------------------------------------------------------------------------------
   XLA_AE_LINES_PKG.SetDebitCreditAmounts;

   ----------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- Update journal entry status -- Need to generate this within IF <condition>
   ----------------------------------------------------------------------------------
   XLA_AE_JOURNAL_ENTRY_PKG.UpdateJournalEntryStatus
         (p_hdr_idx => g_array_event(p_event_id).array_value_num('header_index')
         ,p_balance_type_code => l_balance_type_code
         );

   -------------------------------------------------------------------------------------------
   -- 4262811 - Generate the Accrual Reversal lines
   -------------------------------------------------------------------------------------------
   BEGIN
      l_acc_rev_flag := XLA_AE_HEADER_PKG.g_rec_header_new.array_accrual_reversal_flag
                              (g_array_event(p_event_id).array_value_num('header_index'));
      IF l_acc_rev_flag IS NULL THEN
         l_acc_rev_flag := 'N';
      END IF;
   EXCEPTION
      WHEN OTHERS THEN
         l_acc_rev_flag := 'N';
   END;
   --
   IF (l_acc_rev_flag = 'Y') THEN

       -- 4645092  ------------------------------------------------------------------------------
       -- To allow MPA report to determine if it should generate report process
       XLA_ACCOUNTING_PKG.g_mpa_accrual_exists := 'Y';
       ------------------------------------------------------------------------------------------

       l_accrual_line_num := XLA_AE_LINES_PKG.g_LineNumber;
       XLA_AE_LINES_PKG.CopyLineInfo(l_accrual_line_num);
   -- added call to set_ccid to execute mapping  for secondary accrual reversal entries bug 7444204
   -- call ADRs
   -- Bug 4922099
   --
   IF ( (l_bflow_method_code <> 'PRIOR_ENTRY') OR
        (NVL(l_actual_upg_option, 'N') = 'O') OR
        (NVL(l_enc_upg_option, 'N') = 'O')
      )
   THEN
   NULL;
   --
   --
   
   --
   --
   END IF;

       --
       -- Update the line information that should be overwritten
       --
       XLA_AE_LINES_PKG.set_ae_header_id(p_ae_header_id => p_event_id ,
                                         p_header_num   => 1);
       XLA_AE_LINES_PKG.g_rec_lines.array_header_num(XLA_AE_LINES_PKG.g_LineNumber)  :=1;

       XLA_AE_LINES_PKG.g_rec_lines.array_business_class_code(XLA_AE_LINES_PKG.g_LineNumber) := NULL; -- 4669271

       IF l_bflow_method_code <> 'NONE' THEN  -- 4655713b
          XLA_AE_LINES_PKG.g_rec_lines.array_reversal_code(XLA_AE_LINES_PKG.g_LineNumber) := CONCAT('MPA_',l_bflow_method_code);
       END IF;

      --
      -- Depending on the Reversal Method setup, do a switch side or changes sign for the amounts
      --
      IF (XLA_AE_JOURNAL_ENTRY_PKG.g_cache_ledgers_info.ledger_reversal_option = 'SIDE') THEN
          XLA_AE_LINES_PKG.g_rec_lines.array_natural_side_code(XLA_AE_LINES_PKG.g_LineNumber) :=  l_acc_rev_natural_side_code;
      ELSE
          ---------------------------------------------------------------------------------------------------
          -- 4262811a Switch Sign
          ---------------------------------------------------------------------------------------------------
          XLA_AE_LINES_PKG.g_rec_lines.array_switch_side_flag(XLA_AE_LINES_PKG.g_LineNumber) := 'N';  -- 5052518
          XLA_AE_LINES_PKG.g_rec_lines.array_ledger_amount(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_ledger_amount(XLA_AE_LINES_PKG.g_LineNumber) * -1;
          XLA_AE_LINES_PKG.g_rec_lines.array_entered_amount(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_entered_amount(XLA_AE_LINES_PKG.g_LineNumber) * -1;
          -- 5132302
          XLA_AE_LINES_PKG.g_rec_lines.array_bflow_applied_to_amt(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_bflow_applied_to_amt(XLA_AE_LINES_PKG.g_LineNumber) * -1;

      END IF;

      -- 4955764
      XLA_AE_LINES_PKG.g_rec_lines.array_gl_date(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_HEADER_PKG.g_rec_header_new.array_gl_date(g_array_event(p_event_id).array_value_num('acc_rev_header_index'));


      XLA_AE_LINES_PKG.ValidateCurrentLine;
      XLA_AE_LINES_PKG.SetDebitCreditAmounts;

      XLA_AE_JOURNAL_ENTRY_PKG.UpdateJournalEntryStatus
               (p_hdr_idx           => g_array_event(p_event_id).array_value_num('acc_rev_header_index')
               ,p_balance_type_code => l_balance_type_code);

   END IF;

   -----------------------------------------------------------------------------------------
   -- 4262811 Multiperiod Accounting
   -----------------------------------------------------------------------------------------
     -- No MPA option is assigned.


END IF;
END IF;
--

--
IF (C_LEVEL_PROCEDURE >= g_log_level) THEN
   trace
      (p_msg      => 'END of AcctLineType_100'
      ,p_level    => C_LEVEL_PROCEDURE
      ,p_module   => l_log_module);
END IF;
--
EXCEPTION
  WHEN xla_exceptions_pkg.application_exception THEN
      RAISE;
  WHEN OTHERS THEN
       xla_exceptions_pkg.raise_message
           (p_location => 'XLA_00200_AAD_S_000010_BC_PKG.AcctLineType_100');
END AcctLineType_100;
--

---------------------------------------
--
-- PRIVATE FUNCTION
--         AcctLineType_101
--
---------------------------------------
PROCEDURE AcctLineType_101 (
  p_application_id        IN NUMBER
 ,p_event_id              IN NUMBER
 ,p_calculate_acctd_flag  IN VARCHAR2
 ,p_calculate_g_l_flag    IN VARCHAR2
 ,p_actual_flag           IN OUT VARCHAR2
 ,p_balance_type_code     OUT VARCHAR2
 ,p_gain_or_loss_ref      OUT VARCHAR2
 
--Document Distribution Type
 , p_source_2            IN VARCHAR2
--Project Name
 , p_source_3            IN VARCHAR2
--Task Number
 , p_source_4            IN VARCHAR2
--Expenditure Organization
 , p_source_5            IN NUMBER
--Distribution Link Type
 , p_source_21            IN VARCHAR2
--Invoice Distribution Identifier
 , p_source_30            IN NUMBER
--Invoice Currency Code
 , p_source_33            IN VARCHAR2
--Invoice Distribution Amount
 , p_source_57            IN NUMBER
--Document Type
 , p_source_83            IN VARCHAR2
--Burden Amount Display Method
 , p_source_84            IN VARCHAR2
--Accounting reversal indicator for project invoice burden
 , p_source_85            IN VARCHAR2
--Allocated to Application Identifier
 , p_source_86            IN NUMBER
--Allocated to Distribution Type
 , p_source_87            IN VARCHAR2
--Allocated to Entity Code
 , p_source_88            IN VARCHAR2
--Allocated to First Distribution Identifier
 , p_source_89            IN NUMBER
--Allocated to First System Transaction Identifier
 , p_source_90            IN NUMBER
--Invoice Distribution Expenditure Type
 , p_source_96            IN VARCHAR2
--Encumbrance Upgrade Credit Accounting Class
 , p_source_97            IN VARCHAR2
--Encumbrance Upgrade Credit Account
 , p_source_98            IN NUMBER
--Invoice Distribution Ledger Amount Before Rounding
 , p_source_99            IN NUMBER
--Encumbrance Upgrade Debit Accounting Class
 , p_source_100            IN VARCHAR2
--Encumbrance Upgrade Debit Account
 , p_source_101            IN NUMBER
--Use Encumbrances Upgrade Attributes Flag
 , p_source_102            IN VARCHAR2
--Accounting reversal first distribution identifier for project invoice burden
 , p_source_103            IN NUMBER
--Invoice Burden Applied to Second Distribution Identifier
 , p_source_104            IN VARCHAR2
--Accounting reversal distribution type for project invoice burden
 , p_source_105            IN VARCHAR2
--Encumbrance Upgrade Credit Encumbrance Type
 , p_source_106            IN NUMBER
--Encumbrance Upgrade Debit Encumbrance Type
 , p_source_107            IN NUMBER
--Release Identifier
 , p_source_115            IN NUMBER
--Purchase Order Burden Applied to Application Identifier
 , p_source_116            IN NUMBER
--Purchase Order Burden Applied to Distribution Type
 , p_source_117            IN VARCHAR2
--Purchase Order Burden Applied to Entity Code
 , p_source_118            IN VARCHAR2
--Purchase Order Burden Applied to First Distribution Identifier
 , p_source_119            IN NUMBER
--Purchase Order Burden Applied to First System Transaction Identifier
 , p_source_120            IN NUMBER
--Purchase Order Burden Applied to Second Distribution Identifier
 , p_source_121            IN VARCHAR2
)
IS

l_component_type              VARCHAR2(80);
l_component_code              VARCHAR2(30);
l_component_type_code         VARCHAR2(1);
l_component_appl_id           INTEGER;
l_amb_context_code            VARCHAR2(30);
l_entity_code                 VARCHAR2(30);
l_event_class_code            VARCHAR2(30);
l_ae_header_id                NUMBER;
l_event_type_code             VARCHAR2(30);
l_line_definition_code        VARCHAR2(30);
l_line_definition_owner_code  VARCHAR2(1);
--
-- adr variables
l_segment                     VARCHAR2(30);
l_ccid                        NUMBER;
l_adr_transaction_coa_id      NUMBER;
l_adr_accounting_coa_id       NUMBER;
l_adr_flexfield_segment_code  VARCHAR2(30);
l_adr_flex_value_set_id       NUMBER;
l_adr_value_type_code         VARCHAR2(30);
l_adr_value_combination_id    NUMBER;
l_adr_value_segment_code      VARCHAR2(30);

l_bflow_method_code           VARCHAR2(30);  -- 4219869 Business Flow
l_bflow_class_code            VARCHAR2(30);  -- 4219869 Business Flow
l_inherit_desc_flag           VARCHAR2(1);   -- 4219869 Business Flow
l_budgetary_control_flag      VARCHAR2(1);   -- 4458381 Public Sector Enh

-- 4262811 Variables ------------------------------------------------------------------------------------------
l_entered_amt_idx             NUMBER;
l_accted_amt_idx              NUMBER;
l_acc_rev_flag                VARCHAR2(1);
l_accrual_line_num            NUMBER;
l_tmp_amt                     NUMBER;
l_acc_rev_natural_side_code   VARCHAR2(1);

l_num_entries                 NUMBER;
l_gl_dates                    xla_ae_journal_entry_pkg.t_array_date;
l_accted_amts                 xla_ae_journal_entry_pkg.t_array_num;
l_entered_amts                xla_ae_journal_entry_pkg.t_array_num;
l_period_names                xla_ae_journal_entry_pkg.t_array_V15L;
l_recog_line_1                NUMBER;
l_recog_line_2                NUMBER;

l_bflow_applied_to_amt_idx    NUMBER;                                -- 5132302
l_bflow_applied_to_amt        NUMBER;                                -- 5132302
l_bflow_applied_to_amts       xla_ae_journal_entry_pkg.t_array_num;  -- 5132302

l_event_id                    NUMBER;  -- To handle MPA header Description: xla_ae_header_pkg.SetHdrDescription

--l_rounding_ccy                VARCHAR2(15); -- To handle MPA rounding  4262811b
l_same_currency               BOOLEAN;        -- To handle MPA rounding  4262811b

---------------------------------------------------------------------------------------------------------------


--
-- bulk performance
--
l_balance_type_code           VARCHAR2(1);
l_rec_acct_attrs              XLA_AE_LINES_PKG.t_rec_acct_attrs;
l_log_module                  VARCHAR2(240);

--
-- Upgrade strategy
--
l_actual_upg_option           VARCHAR2(1);
l_enc_upg_option           VARCHAR2(1);

--
BEGIN
--
IF g_log_enabled THEN
      l_log_module := C_DEFAULT_MODULE||'.AcctLineType_101';
END IF;
--
IF (C_LEVEL_PROCEDURE >= g_log_level) THEN

      trace
         (p_msg      => 'BEGIN of AcctLineType_101'
         ,p_level    => C_LEVEL_PROCEDURE
         ,p_module   => l_log_module);

END IF;
--
l_component_type             := 'AMB_JLT';
l_component_code             := 'REVERSE_REL_BURDENED_ENC';
l_component_type_code        := 'S';
l_component_appl_id          :=  200;
l_amb_context_code           := 'DEFAULT';
l_entity_code                := 'AP_INVOICES';
l_event_class_code           := 'INVOICE_BURDEN';
l_event_type_code            := 'INVOICE_BURDEN_ALL';
l_line_definition_owner_code := 'S';
l_line_definition_code       := 'AP_INV_BURDEN_ENC_ALL';
--
l_balance_type_code          := 'E';
l_segment                     := NULL;
l_ccid                        := NULL;
l_adr_transaction_coa_id      := NULL;
l_adr_accounting_coa_id       := NULL;
l_adr_flexfield_segment_code  := NULL;
l_adr_flex_value_set_id       := NULL;
l_adr_value_type_code         := NULL;
l_adr_value_combination_id    := NULL;
l_adr_value_segment_code      := NULL;

l_bflow_method_code          := 'PRIOR_ENTRY';   -- 4219869 Business Flow
l_bflow_class_code           := 'REL_PA_BURDENED_ENC';    -- 4219869 Business Flow
l_inherit_desc_flag          := 'N';   -- 4219869 Business Flow
l_budgetary_control_flag     := 'Y';

l_bflow_applied_to_amt_idx   := NULL; -- 5132302
l_bflow_applied_to_amt       := NULL; -- 5132302
l_entered_amt_idx            := NULL;          -- 4262811
l_accted_amt_idx             := NULL;          -- 4262811
l_acc_rev_flag               := NULL;          -- 4262811
l_accrual_line_num           := NULL;          -- 4262811
l_tmp_amt                    := NULL;          -- 4262811
--
 
IF XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id = XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.ledger_id OR
    l_balance_type_code <> 'B' THEN
IF NVL(p_source_83,'
') =  'PO' AND 
NVL(p_source_84,'
') =  'S' AND 
p_source_115 IS NOT NULL 
 THEN 

   --
   XLA_AE_LINES_PKG.SetNewLine;

   p_balance_type_code          := l_balance_type_code;
   -- set the flag so later we will know whether the gain loss line needs to be created
   
   IF(l_balance_type_code = 'A' and p_actual_flag is null) THEN
     p_actual_flag :='A';
   END IF;

   --
   -- bulk performance
   --
   XLA_AE_LINES_PKG.set_ae_header_id (p_ae_header_id => p_event_id ,
                                      p_header_num   => 0); -- 4262811
   --
   -- set accounting line options
   --
   l_ae_header_id:= xla_ae_lines_pkg.SetAcctLineOption(
           p_natural_side_code          => 'C'
         , p_gain_or_loss_flag          => 'N'
         , p_gl_transfer_mode_code      => 'S'
         , p_acct_entry_type_code       => 'E'
         , p_switch_side_flag           => 'Y'
         , p_merge_duplicate_code       => 'N'
         );
   --
   l_acc_rev_natural_side_code := 'D';  -- 4262811
   -- 
   --
   -- set accounting line type info
   --
   xla_ae_lines_pkg.SetAcctLineType
      (p_component_type             => l_component_type
      ,p_event_type_code            => l_event_type_code
      ,p_line_definition_owner_code => l_line_definition_owner_code
      ,p_line_definition_code       => l_line_definition_code
      ,p_accounting_line_code       => l_component_code
      ,p_accounting_line_type_code  => l_component_type_code
      ,p_accounting_line_appl_id    => l_component_appl_id
      ,p_amb_context_code           => l_amb_context_code
      ,p_entity_code                => l_entity_code
      ,p_event_class_code           => l_event_class_code);
   --
   -- set accounting class
   --
   xla_ae_lines_pkg.SetAcctClass(
           p_accounting_class_code  => 'PO_PA_BURDENED'
         , p_ae_header_id           => l_ae_header_id
         );

   --
   -- set rounding class
   --
   XLA_AE_LINES_PKG.g_rec_lines.array_rounding_class(XLA_AE_LINES_PKG.g_LineNumber) :=
                      'PO_PA_BURDENED';

   --
   xla_ae_lines_pkg.g_rec_lines.array_calculate_acctd_flag(xla_ae_lines_pkg.g_LineNumber) := p_calculate_acctd_flag;
   xla_ae_lines_pkg.g_rec_lines.array_calculate_g_l_flag(xla_ae_lines_pkg.g_LineNumber) := p_calculate_g_l_flag;
   --
   -- bulk performance
   --
   XLA_AE_LINES_PKG.g_rec_lines.array_balance_type_code(XLA_AE_LINES_PKG.g_LineNumber) := l_balance_type_code;

   XLA_AE_LINES_PKG.g_rec_lines.array_ledger_id(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id;

   -- 4955764
   XLA_AE_LINES_PKG.g_rec_lines.array_gl_date(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_HEADER_PKG.g_rec_header_new.array_gl_date(g_array_event(p_event_id).array_value_num('header_index'));

   -- 4458381 Public Sector Enh
   
   --
   -- set accounting attributes for the line type
   --
   l_entered_amt_idx := 27;
   l_accted_amt_idx  := 29;
   l_bflow_applied_to_amt_idx  := NULL;  -- 5132302
   l_rec_acct_attrs.array_acct_attr_code(1) := 'ACCOUNTING_REVERSAL_OPTION';
   l_rec_acct_attrs.array_char_value(1)  := p_source_85;
   l_rec_acct_attrs.array_acct_attr_code(2) := 'ALLOC_TO_APPLICATION_ID';
   l_rec_acct_attrs.array_num_value(2)  := p_source_86;
   l_rec_acct_attrs.array_acct_attr_code(3) := 'ALLOC_TO_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(3)  := p_source_87;
   l_rec_acct_attrs.array_acct_attr_code(4) := 'ALLOC_TO_ENTITY_CODE';
   l_rec_acct_attrs.array_char_value(4)  := p_source_88;
   l_rec_acct_attrs.array_acct_attr_code(5) := 'ALLOC_TO_FIRST_DIST_ID';
   l_rec_acct_attrs.array_num_value(5)  :=  to_char(p_source_89);
   l_rec_acct_attrs.array_acct_attr_code(6) := 'ALLOC_TO_FIRST_SYS_TRAN_ID';
   l_rec_acct_attrs.array_num_value(6)  :=  to_char(p_source_90);
   l_rec_acct_attrs.array_acct_attr_code(7) := 'APPLIED_TO_APPLICATION_ID';
   l_rec_acct_attrs.array_num_value(7)  := p_source_116;
   l_rec_acct_attrs.array_acct_attr_code(8) := 'APPLIED_TO_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(8)  := p_source_117;
   l_rec_acct_attrs.array_acct_attr_code(9) := 'APPLIED_TO_ENTITY_CODE';
   l_rec_acct_attrs.array_char_value(9)  := p_source_118;
   l_rec_acct_attrs.array_acct_attr_code(10) := 'APPLIED_TO_FIRST_DIST_ID';
   l_rec_acct_attrs.array_num_value(10)  :=  to_char(p_source_119);
   l_rec_acct_attrs.array_acct_attr_code(11) := 'APPLIED_TO_FIRST_SYS_TRAN_ID';
   l_rec_acct_attrs.array_num_value(11)  :=  to_char(p_source_120);
   l_rec_acct_attrs.array_acct_attr_code(12) := 'APPLIED_TO_SECOND_DIST_ID';
   l_rec_acct_attrs.array_char_value(12)  := p_source_121;
   l_rec_acct_attrs.array_acct_attr_code(13) := 'DISTRIBUTION_IDENTIFIER_1';
   l_rec_acct_attrs.array_num_value(13)  :=  to_char(p_source_30);
   l_rec_acct_attrs.array_acct_attr_code(14) := 'DISTRIBUTION_IDENTIFIER_2';
   l_rec_acct_attrs.array_char_value(14)  := p_source_96;
   l_rec_acct_attrs.array_acct_attr_code(15) := 'DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(15)  := p_source_21;
   l_rec_acct_attrs.array_acct_attr_code(16) := 'ENC_UPG_CR_ACCT_CLASS';
   l_rec_acct_attrs.array_char_value(16)  := p_source_97;
   l_rec_acct_attrs.array_acct_attr_code(17) := 'ENC_UPG_CR_CCID';
   l_rec_acct_attrs.array_num_value(17)  := p_source_98;
   l_rec_acct_attrs.array_acct_attr_code(18) := 'ENC_UPG_CR_ENTERED_AMT';
   l_rec_acct_attrs.array_num_value(18)  := p_source_57;
   l_rec_acct_attrs.array_acct_attr_code(19) := 'ENC_UPG_CR_ENTERED_CURR';
   l_rec_acct_attrs.array_char_value(19)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(20) := 'ENC_UPG_CR_LEDGER_AMT';
   l_rec_acct_attrs.array_num_value(20)  := p_source_99;
   l_rec_acct_attrs.array_acct_attr_code(21) := 'ENC_UPG_DR_ACCT_CLASS';
   l_rec_acct_attrs.array_char_value(21)  := p_source_100;
   l_rec_acct_attrs.array_acct_attr_code(22) := 'ENC_UPG_DR_CCID';
   l_rec_acct_attrs.array_num_value(22)  := p_source_101;
   l_rec_acct_attrs.array_acct_attr_code(23) := 'ENC_UPG_DR_ENTERED_AMT';
   l_rec_acct_attrs.array_num_value(23)  := p_source_57;
   l_rec_acct_attrs.array_acct_attr_code(24) := 'ENC_UPG_DR_ENTERED_CURR';
   l_rec_acct_attrs.array_char_value(24)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(25) := 'ENC_UPG_DR_LEDGER_AMT';
   l_rec_acct_attrs.array_num_value(25)  := p_source_99;
   l_rec_acct_attrs.array_acct_attr_code(26) := 'ENC_UPG_OPTION';
   l_rec_acct_attrs.array_char_value(26)  := p_source_102;
   l_rec_acct_attrs.array_acct_attr_code(27) := 'ENTERED_CURRENCY_AMOUNT';
   l_rec_acct_attrs.array_num_value(27)  := p_source_57;
   l_rec_acct_attrs.array_acct_attr_code(28) := 'ENTERED_CURRENCY_CODE';
   l_rec_acct_attrs.array_char_value(28)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(29) := 'LEDGER_AMOUNT';
   l_rec_acct_attrs.array_num_value(29)  := p_source_99;
   l_rec_acct_attrs.array_acct_attr_code(30) := 'REVERSED_DISTRIBUTION_ID1';
   l_rec_acct_attrs.array_num_value(30)  :=  to_char(p_source_103);
   l_rec_acct_attrs.array_acct_attr_code(31) := 'REVERSED_DISTRIBUTION_ID2';
   l_rec_acct_attrs.array_char_value(31)  := p_source_104;
   l_rec_acct_attrs.array_acct_attr_code(32) := 'REVERSED_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(32)  := p_source_105;
   l_rec_acct_attrs.array_acct_attr_code(33) := 'UPG_CR_ENC_TYPE_ID';
   l_rec_acct_attrs.array_num_value(33)  := p_source_106;
   l_rec_acct_attrs.array_acct_attr_code(34) := 'UPG_DR_ENC_TYPE_ID';
   l_rec_acct_attrs.array_num_value(34)  := p_source_107;

   XLA_AE_LINES_PKG.SetLineAcctAttrs(l_rec_acct_attrs);
   p_gain_or_loss_ref  := XLA_AE_LINES_PKG.g_rec_lines.array_gain_or_loss_ref(XLA_AE_LINES_PKG.g_LineNumber);

   ---------------------------------------------------------------------------------------------------------------
   -- 4336173 -- assign Business Flow Class (replace code in xla_ae_lines_pkg.Business_Flow_Validation)
   ---------------------------------------------------------------------------------------------------------------
   XLA_AE_LINES_PKG.g_rec_lines.array_business_class_code(XLA_AE_LINES_PKG.g_LineNumber) := l_bflow_class_code;

   l_actual_upg_option  := XLA_AE_LINES_PKG.g_rec_lines.array_actual_upg_option(XLA_AE_LINES_PKG.g_LineNumber);
   l_enc_upg_option     := XLA_AE_LINES_PKG.g_rec_lines.array_enc_upg_option(XLA_AE_LINES_PKG.g_LineNumber);

   IF xla_accounting_cache_pkg.GetValueChar
         (p_source_code         => 'LEDGER_CATEGORY_CODE'
         ,p_target_ledger_id    => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id) IN ('PRIMARY','ALC')
   AND l_bflow_method_code = 'PRIOR_ENTRY'
--   AND (l_actual_upg_option = 'Y' OR l_enc_upg_option = 'Y') Bug 4922099
   AND ( (NVL(l_actual_upg_option, 'N') IN ('Y', 'O')) OR
         (NVL(l_enc_upg_option, 'N') IN ('Y', 'O'))
       )
   THEN
         xla_ae_lines_pkg.BflowUpgEntry
           (p_business_method_code    => l_bflow_method_code
           ,p_business_class_code     => l_bflow_class_code
           ,p_balance_type            => l_balance_type_code);
   ELSE
      NULL;
XLA_AE_LINES_PKG.business_flow_validation(
                                p_business_method_code     => l_bflow_method_code
                               ,p_business_class_code      => l_bflow_class_code
                               ,p_inherit_description_flag => l_inherit_desc_flag);
   END IF;

   --
   -- call analytical criteria
   --
   -- Inherited Analytical Criteria for business flow method of Prior Entry.
   --
   -- call description
   --
   
xla_ae_lines_pkg.SetLineDescription(
   p_ae_header_id => l_ae_header_id
  ,p_description  => Description_3 (
     p_application_id         => p_application_id
   , p_ae_header_id           => l_ae_header_id 
, p_source_2 => p_source_2
, p_source_3 => p_source_3
, p_source_4 => p_source_4
, p_source_5 => p_source_5
   )
);


   --
   -- call ADRs
   -- Bug 4922099
   --
   IF ( (l_bflow_method_code <> 'PRIOR_ENTRY') OR
        (NVL(l_actual_upg_option, 'N') = 'O') OR
        (NVL(l_enc_upg_option, 'N') = 'O')
      )
   THEN
   NULL;
   --
   --
   
   --
   --
   END IF;
   --
   -- Bug 4922099
   IF ( ( (NVL(l_actual_upg_option, 'N') = 'O') OR
          (NVL(l_enc_upg_option, 'N') = 'O')
        ) AND
        (l_bflow_method_code = 'PRIOR_ENTRY')
      )
   THEN
      IF
      --
      1 = 1
      --
      THEN
      xla_accounting_err_pkg.build_message
                                    (p_appli_s_name            => 'XLA'
                                    ,p_msg_name                => 'XLA_UPG_OVERRIDE_ADR_UNDEFINED'
                                    ,p_token_1                 => 'LINE_NUMBER'
                                    ,p_value_1                 => XLA_AE_LINES_PKG.g_LineNumber
                                    ,p_token_2                 => 'LINE_TYPE_NAME'
                                    ,p_value_2                 => XLA_AE_SOURCES_PKG.GetComponentName (
                                                                             l_component_type
                                                                            ,l_component_code
                                                                            ,l_component_type_code
                                                                            ,l_component_appl_id
                                                                            ,l_amb_context_code
                                                                            ,l_entity_code
                                                                            ,l_event_class_code
                                                                           )
                                    ,p_token_3                 => 'OWNER'
                                    ,p_value_3                 => xla_lookups_pkg.get_meaning(
                                                                          p_lookup_type     => 'XLA_OWNER_TYPE'
                                                                          ,p_lookup_code    => l_component_type_code
                                                                         )
                                    ,p_token_4                 => 'PRODUCT_NAME'
                                    ,p_value_4                 => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.application_name
                                    ,p_entity_id               => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.entity_id
                                    ,p_event_id                => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.event_id
                                    ,p_ledger_id               => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id
                                    ,p_ae_header_id            =>  NULL
                                       );

        IF (C_LEVEL_ERROR>= g_log_level) THEN
                 trace
                      (p_msg      => 'ERROR: XLA_UPG_OVERRIDE_ADR_UNDEFINED'
                      ,p_level    => C_LEVEL_ERROR
                      ,p_module   => l_log_module);
        END IF;
      END IF;
   END IF;
   --
   --
   ------------------------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- NOTE: XLA_AE_LINES_PKG.ValidateCurrentLine should NOT be generated if business flow method is
   -- Prior Entry.  Currently, the following code is always generated.
   ------------------------------------------------------------------------------------------------
   -- No ValidateCurrentLine for business flow method of Prior Entry

   ------------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- Populated credit and debit amounts -- Need to generate this within IF <condition>
   ------------------------------------------------------------------------------------
   XLA_AE_LINES_PKG.SetDebitCreditAmounts;

   ----------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- Update journal entry status -- Need to generate this within IF <condition>
   ----------------------------------------------------------------------------------
   XLA_AE_JOURNAL_ENTRY_PKG.UpdateJournalEntryStatus
         (p_hdr_idx => g_array_event(p_event_id).array_value_num('header_index')
         ,p_balance_type_code => l_balance_type_code
         );

   -------------------------------------------------------------------------------------------
   -- 4262811 - Generate the Accrual Reversal lines
   -------------------------------------------------------------------------------------------
   BEGIN
      l_acc_rev_flag := XLA_AE_HEADER_PKG.g_rec_header_new.array_accrual_reversal_flag
                              (g_array_event(p_event_id).array_value_num('header_index'));
      IF l_acc_rev_flag IS NULL THEN
         l_acc_rev_flag := 'N';
      END IF;
   EXCEPTION
      WHEN OTHERS THEN
         l_acc_rev_flag := 'N';
   END;
   --
   IF (l_acc_rev_flag = 'Y') THEN

       -- 4645092  ------------------------------------------------------------------------------
       -- To allow MPA report to determine if it should generate report process
       XLA_ACCOUNTING_PKG.g_mpa_accrual_exists := 'Y';
       ------------------------------------------------------------------------------------------

       l_accrual_line_num := XLA_AE_LINES_PKG.g_LineNumber;
       XLA_AE_LINES_PKG.CopyLineInfo(l_accrual_line_num);
   -- added call to set_ccid to execute mapping  for secondary accrual reversal entries bug 7444204
   -- call ADRs
   -- Bug 4922099
   --
   IF ( (l_bflow_method_code <> 'PRIOR_ENTRY') OR
        (NVL(l_actual_upg_option, 'N') = 'O') OR
        (NVL(l_enc_upg_option, 'N') = 'O')
      )
   THEN
   NULL;
   --
   --
   
   --
   --
   END IF;

       --
       -- Update the line information that should be overwritten
       --
       XLA_AE_LINES_PKG.set_ae_header_id(p_ae_header_id => p_event_id ,
                                         p_header_num   => 1);
       XLA_AE_LINES_PKG.g_rec_lines.array_header_num(XLA_AE_LINES_PKG.g_LineNumber)  :=1;

       XLA_AE_LINES_PKG.g_rec_lines.array_business_class_code(XLA_AE_LINES_PKG.g_LineNumber) := NULL; -- 4669271

       IF l_bflow_method_code <> 'NONE' THEN  -- 4655713b
          XLA_AE_LINES_PKG.g_rec_lines.array_reversal_code(XLA_AE_LINES_PKG.g_LineNumber) := CONCAT('MPA_',l_bflow_method_code);
       END IF;

      --
      -- Depending on the Reversal Method setup, do a switch side or changes sign for the amounts
      --
      IF (XLA_AE_JOURNAL_ENTRY_PKG.g_cache_ledgers_info.ledger_reversal_option = 'SIDE') THEN
          XLA_AE_LINES_PKG.g_rec_lines.array_natural_side_code(XLA_AE_LINES_PKG.g_LineNumber) :=  l_acc_rev_natural_side_code;
      ELSE
          ---------------------------------------------------------------------------------------------------
          -- 4262811a Switch Sign
          ---------------------------------------------------------------------------------------------------
          XLA_AE_LINES_PKG.g_rec_lines.array_switch_side_flag(XLA_AE_LINES_PKG.g_LineNumber) := 'N';  -- 5052518
          XLA_AE_LINES_PKG.g_rec_lines.array_ledger_amount(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_ledger_amount(XLA_AE_LINES_PKG.g_LineNumber) * -1;
          XLA_AE_LINES_PKG.g_rec_lines.array_entered_amount(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_entered_amount(XLA_AE_LINES_PKG.g_LineNumber) * -1;
          -- 5132302
          XLA_AE_LINES_PKG.g_rec_lines.array_bflow_applied_to_amt(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_bflow_applied_to_amt(XLA_AE_LINES_PKG.g_LineNumber) * -1;

      END IF;

      -- 4955764
      XLA_AE_LINES_PKG.g_rec_lines.array_gl_date(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_HEADER_PKG.g_rec_header_new.array_gl_date(g_array_event(p_event_id).array_value_num('acc_rev_header_index'));


      XLA_AE_LINES_PKG.ValidateCurrentLine;
      XLA_AE_LINES_PKG.SetDebitCreditAmounts;

      XLA_AE_JOURNAL_ENTRY_PKG.UpdateJournalEntryStatus
               (p_hdr_idx           => g_array_event(p_event_id).array_value_num('acc_rev_header_index')
               ,p_balance_type_code => l_balance_type_code);

   END IF;

   -----------------------------------------------------------------------------------------
   -- 4262811 Multiperiod Accounting
   -----------------------------------------------------------------------------------------
     -- No MPA option is assigned.


END IF;
END IF;
--

--
IF (C_LEVEL_PROCEDURE >= g_log_level) THEN
   trace
      (p_msg      => 'END of AcctLineType_101'
      ,p_level    => C_LEVEL_PROCEDURE
      ,p_module   => l_log_module);
END IF;
--
EXCEPTION
  WHEN xla_exceptions_pkg.application_exception THEN
      RAISE;
  WHEN OTHERS THEN
       xla_exceptions_pkg.raise_message
           (p_location => 'XLA_00200_AAD_S_000010_BC_PKG.AcctLineType_101');
END AcctLineType_101;
--

---------------------------------------
--
-- PRIVATE FUNCTION
--         AcctLineType_102
--
---------------------------------------
PROCEDURE AcctLineType_102 (
  p_application_id        IN NUMBER
 ,p_event_id              IN NUMBER
 ,p_calculate_acctd_flag  IN VARCHAR2
 ,p_calculate_g_l_flag    IN VARCHAR2
 ,p_actual_flag           IN OUT VARCHAR2
 ,p_balance_type_code     OUT VARCHAR2
 ,p_gain_or_loss_ref      OUT VARCHAR2
 
--Document Distribution Type
 , p_source_2            IN VARCHAR2
--Project Name
 , p_source_3            IN VARCHAR2
--Task Number
 , p_source_4            IN VARCHAR2
--Expenditure Organization
 , p_source_5            IN NUMBER
--Distribution Link Type
 , p_source_21            IN VARCHAR2
--Invoice Distribution Identifier
 , p_source_30            IN NUMBER
--Invoice Currency Code
 , p_source_33            IN VARCHAR2
--Invoice Distribution Amount
 , p_source_57            IN NUMBER
--Document Type
 , p_source_83            IN VARCHAR2
--Burden Amount Display Method
 , p_source_84            IN VARCHAR2
--Accounting reversal indicator for project invoice burden
 , p_source_85            IN VARCHAR2
--Allocated to Application Identifier
 , p_source_86            IN NUMBER
--Allocated to Distribution Type
 , p_source_87            IN VARCHAR2
--Allocated to Entity Code
 , p_source_88            IN VARCHAR2
--Allocated to First Distribution Identifier
 , p_source_89            IN NUMBER
--Allocated to First System Transaction Identifier
 , p_source_90            IN NUMBER
--Invoice Distribution Expenditure Type
 , p_source_96            IN VARCHAR2
--Encumbrance Upgrade Credit Accounting Class
 , p_source_97            IN VARCHAR2
--Encumbrance Upgrade Credit Account
 , p_source_98            IN NUMBER
--Invoice Distribution Ledger Amount Before Rounding
 , p_source_99            IN NUMBER
--Encumbrance Upgrade Debit Accounting Class
 , p_source_100            IN VARCHAR2
--Encumbrance Upgrade Debit Account
 , p_source_101            IN NUMBER
--Use Encumbrances Upgrade Attributes Flag
 , p_source_102            IN VARCHAR2
--Accounting reversal first distribution identifier for project invoice burden
 , p_source_103            IN NUMBER
--Invoice Burden Applied to Second Distribution Identifier
 , p_source_104            IN VARCHAR2
--Accounting reversal distribution type for project invoice burden
 , p_source_105            IN VARCHAR2
--Encumbrance Upgrade Credit Encumbrance Type
 , p_source_106            IN NUMBER
--Encumbrance Upgrade Debit Encumbrance Type
 , p_source_107            IN NUMBER
--Burden Record Identifier
 , p_source_108            IN VARCHAR2
 , p_source_108_meaning    IN VARCHAR2
--Release Identifier
 , p_source_115            IN NUMBER
--Purchase Order Burden Applied to Application Identifier
 , p_source_116            IN NUMBER
--Purchase Order Burden Applied to Distribution Type
 , p_source_117            IN VARCHAR2
--Purchase Order Burden Applied to Entity Code
 , p_source_118            IN VARCHAR2
--Purchase Order Burden Applied to First Distribution Identifier
 , p_source_119            IN NUMBER
--Purchase Order Burden Applied to First System Transaction Identifier
 , p_source_120            IN NUMBER
--Purchase Order Burden Applied to Second Distribution Identifier
 , p_source_121            IN VARCHAR2
)
IS

l_component_type              VARCHAR2(80);
l_component_code              VARCHAR2(30);
l_component_type_code         VARCHAR2(1);
l_component_appl_id           INTEGER;
l_amb_context_code            VARCHAR2(30);
l_entity_code                 VARCHAR2(30);
l_event_class_code            VARCHAR2(30);
l_ae_header_id                NUMBER;
l_event_type_code             VARCHAR2(30);
l_line_definition_code        VARCHAR2(30);
l_line_definition_owner_code  VARCHAR2(1);
--
-- adr variables
l_segment                     VARCHAR2(30);
l_ccid                        NUMBER;
l_adr_transaction_coa_id      NUMBER;
l_adr_accounting_coa_id       NUMBER;
l_adr_flexfield_segment_code  VARCHAR2(30);
l_adr_flex_value_set_id       NUMBER;
l_adr_value_type_code         VARCHAR2(30);
l_adr_value_combination_id    NUMBER;
l_adr_value_segment_code      VARCHAR2(30);

l_bflow_method_code           VARCHAR2(30);  -- 4219869 Business Flow
l_bflow_class_code            VARCHAR2(30);  -- 4219869 Business Flow
l_inherit_desc_flag           VARCHAR2(1);   -- 4219869 Business Flow
l_budgetary_control_flag      VARCHAR2(1);   -- 4458381 Public Sector Enh

-- 4262811 Variables ------------------------------------------------------------------------------------------
l_entered_amt_idx             NUMBER;
l_accted_amt_idx              NUMBER;
l_acc_rev_flag                VARCHAR2(1);
l_accrual_line_num            NUMBER;
l_tmp_amt                     NUMBER;
l_acc_rev_natural_side_code   VARCHAR2(1);

l_num_entries                 NUMBER;
l_gl_dates                    xla_ae_journal_entry_pkg.t_array_date;
l_accted_amts                 xla_ae_journal_entry_pkg.t_array_num;
l_entered_amts                xla_ae_journal_entry_pkg.t_array_num;
l_period_names                xla_ae_journal_entry_pkg.t_array_V15L;
l_recog_line_1                NUMBER;
l_recog_line_2                NUMBER;

l_bflow_applied_to_amt_idx    NUMBER;                                -- 5132302
l_bflow_applied_to_amt        NUMBER;                                -- 5132302
l_bflow_applied_to_amts       xla_ae_journal_entry_pkg.t_array_num;  -- 5132302

l_event_id                    NUMBER;  -- To handle MPA header Description: xla_ae_header_pkg.SetHdrDescription

--l_rounding_ccy                VARCHAR2(15); -- To handle MPA rounding  4262811b
l_same_currency               BOOLEAN;        -- To handle MPA rounding  4262811b

---------------------------------------------------------------------------------------------------------------


--
-- bulk performance
--
l_balance_type_code           VARCHAR2(1);
l_rec_acct_attrs              XLA_AE_LINES_PKG.t_rec_acct_attrs;
l_log_module                  VARCHAR2(240);

--
-- Upgrade strategy
--
l_actual_upg_option           VARCHAR2(1);
l_enc_upg_option           VARCHAR2(1);

--
BEGIN
--
IF g_log_enabled THEN
      l_log_module := C_DEFAULT_MODULE||'.AcctLineType_102';
END IF;
--
IF (C_LEVEL_PROCEDURE >= g_log_level) THEN

      trace
         (p_msg      => 'BEGIN of AcctLineType_102'
         ,p_level    => C_LEVEL_PROCEDURE
         ,p_module   => l_log_module);

END IF;
--
l_component_type             := 'AMB_JLT';
l_component_code             := 'REVERSE_REL_BURDEN_ENC';
l_component_type_code        := 'S';
l_component_appl_id          :=  200;
l_amb_context_code           := 'DEFAULT';
l_entity_code                := 'AP_INVOICES';
l_event_class_code           := 'INVOICE_BURDEN';
l_event_type_code            := 'INVOICE_BURDEN_ALL';
l_line_definition_owner_code := 'S';
l_line_definition_code       := 'AP_INV_BURDEN_ENC_ALL';
--
l_balance_type_code          := 'E';
l_segment                     := NULL;
l_ccid                        := NULL;
l_adr_transaction_coa_id      := NULL;
l_adr_accounting_coa_id       := NULL;
l_adr_flexfield_segment_code  := NULL;
l_adr_flex_value_set_id       := NULL;
l_adr_value_type_code         := NULL;
l_adr_value_combination_id    := NULL;
l_adr_value_segment_code      := NULL;

l_bflow_method_code          := 'PRIOR_ENTRY';   -- 4219869 Business Flow
l_bflow_class_code           := 'REL_PA_BURDEN_ENC';    -- 4219869 Business Flow
l_inherit_desc_flag          := 'N';   -- 4219869 Business Flow
l_budgetary_control_flag     := 'Y';

l_bflow_applied_to_amt_idx   := NULL; -- 5132302
l_bflow_applied_to_amt       := NULL; -- 5132302
l_entered_amt_idx            := NULL;          -- 4262811
l_accted_amt_idx             := NULL;          -- 4262811
l_acc_rev_flag               := NULL;          -- 4262811
l_accrual_line_num           := NULL;          -- 4262811
l_tmp_amt                    := NULL;          -- 4262811
--
 
IF XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id = XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.ledger_id OR
    l_balance_type_code <> 'B' THEN
IF NVL(p_source_83,'
') =  'PO' AND 
NVL(p_source_108,'
') =  'O' AND 
NVL(p_source_84,'
') =  'D' AND 
p_source_115 IS NOT NULL 
 THEN 

   --
   XLA_AE_LINES_PKG.SetNewLine;

   p_balance_type_code          := l_balance_type_code;
   -- set the flag so later we will know whether the gain loss line needs to be created
   
   IF(l_balance_type_code = 'A' and p_actual_flag is null) THEN
     p_actual_flag :='A';
   END IF;

   --
   -- bulk performance
   --
   XLA_AE_LINES_PKG.set_ae_header_id (p_ae_header_id => p_event_id ,
                                      p_header_num   => 0); -- 4262811
   --
   -- set accounting line options
   --
   l_ae_header_id:= xla_ae_lines_pkg.SetAcctLineOption(
           p_natural_side_code          => 'C'
         , p_gain_or_loss_flag          => 'N'
         , p_gl_transfer_mode_code      => 'S'
         , p_acct_entry_type_code       => 'E'
         , p_switch_side_flag           => 'Y'
         , p_merge_duplicate_code       => 'N'
         );
   --
   l_acc_rev_natural_side_code := 'D';  -- 4262811
   -- 
   --
   -- set accounting line type info
   --
   xla_ae_lines_pkg.SetAcctLineType
      (p_component_type             => l_component_type
      ,p_event_type_code            => l_event_type_code
      ,p_line_definition_owner_code => l_line_definition_owner_code
      ,p_line_definition_code       => l_line_definition_code
      ,p_accounting_line_code       => l_component_code
      ,p_accounting_line_type_code  => l_component_type_code
      ,p_accounting_line_appl_id    => l_component_appl_id
      ,p_amb_context_code           => l_amb_context_code
      ,p_entity_code                => l_entity_code
      ,p_event_class_code           => l_event_class_code);
   --
   -- set accounting class
   --
   xla_ae_lines_pkg.SetAcctClass(
           p_accounting_class_code  => 'PO_PA_BURDEN'
         , p_ae_header_id           => l_ae_header_id
         );

   --
   -- set rounding class
   --
   XLA_AE_LINES_PKG.g_rec_lines.array_rounding_class(XLA_AE_LINES_PKG.g_LineNumber) :=
                      'PO_PA_BURDEN';

   --
   xla_ae_lines_pkg.g_rec_lines.array_calculate_acctd_flag(xla_ae_lines_pkg.g_LineNumber) := p_calculate_acctd_flag;
   xla_ae_lines_pkg.g_rec_lines.array_calculate_g_l_flag(xla_ae_lines_pkg.g_LineNumber) := p_calculate_g_l_flag;
   --
   -- bulk performance
   --
   XLA_AE_LINES_PKG.g_rec_lines.array_balance_type_code(XLA_AE_LINES_PKG.g_LineNumber) := l_balance_type_code;

   XLA_AE_LINES_PKG.g_rec_lines.array_ledger_id(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id;

   -- 4955764
   XLA_AE_LINES_PKG.g_rec_lines.array_gl_date(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_HEADER_PKG.g_rec_header_new.array_gl_date(g_array_event(p_event_id).array_value_num('header_index'));

   -- 4458381 Public Sector Enh
   
   --
   -- set accounting attributes for the line type
   --
   l_entered_amt_idx := 27;
   l_accted_amt_idx  := 29;
   l_bflow_applied_to_amt_idx  := NULL;  -- 5132302
   l_rec_acct_attrs.array_acct_attr_code(1) := 'ACCOUNTING_REVERSAL_OPTION';
   l_rec_acct_attrs.array_char_value(1)  := p_source_85;
   l_rec_acct_attrs.array_acct_attr_code(2) := 'ALLOC_TO_APPLICATION_ID';
   l_rec_acct_attrs.array_num_value(2)  := p_source_86;
   l_rec_acct_attrs.array_acct_attr_code(3) := 'ALLOC_TO_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(3)  := p_source_87;
   l_rec_acct_attrs.array_acct_attr_code(4) := 'ALLOC_TO_ENTITY_CODE';
   l_rec_acct_attrs.array_char_value(4)  := p_source_88;
   l_rec_acct_attrs.array_acct_attr_code(5) := 'ALLOC_TO_FIRST_DIST_ID';
   l_rec_acct_attrs.array_num_value(5)  :=  to_char(p_source_89);
   l_rec_acct_attrs.array_acct_attr_code(6) := 'ALLOC_TO_FIRST_SYS_TRAN_ID';
   l_rec_acct_attrs.array_num_value(6)  :=  to_char(p_source_90);
   l_rec_acct_attrs.array_acct_attr_code(7) := 'APPLIED_TO_APPLICATION_ID';
   l_rec_acct_attrs.array_num_value(7)  := p_source_116;
   l_rec_acct_attrs.array_acct_attr_code(8) := 'APPLIED_TO_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(8)  := p_source_117;
   l_rec_acct_attrs.array_acct_attr_code(9) := 'APPLIED_TO_ENTITY_CODE';
   l_rec_acct_attrs.array_char_value(9)  := p_source_118;
   l_rec_acct_attrs.array_acct_attr_code(10) := 'APPLIED_TO_FIRST_DIST_ID';
   l_rec_acct_attrs.array_num_value(10)  :=  to_char(p_source_119);
   l_rec_acct_attrs.array_acct_attr_code(11) := 'APPLIED_TO_FIRST_SYS_TRAN_ID';
   l_rec_acct_attrs.array_num_value(11)  :=  to_char(p_source_120);
   l_rec_acct_attrs.array_acct_attr_code(12) := 'APPLIED_TO_SECOND_DIST_ID';
   l_rec_acct_attrs.array_char_value(12)  := p_source_121;
   l_rec_acct_attrs.array_acct_attr_code(13) := 'DISTRIBUTION_IDENTIFIER_1';
   l_rec_acct_attrs.array_num_value(13)  :=  to_char(p_source_30);
   l_rec_acct_attrs.array_acct_attr_code(14) := 'DISTRIBUTION_IDENTIFIER_2';
   l_rec_acct_attrs.array_char_value(14)  := p_source_96;
   l_rec_acct_attrs.array_acct_attr_code(15) := 'DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(15)  := p_source_21;
   l_rec_acct_attrs.array_acct_attr_code(16) := 'ENC_UPG_CR_ACCT_CLASS';
   l_rec_acct_attrs.array_char_value(16)  := p_source_97;
   l_rec_acct_attrs.array_acct_attr_code(17) := 'ENC_UPG_CR_CCID';
   l_rec_acct_attrs.array_num_value(17)  := p_source_98;
   l_rec_acct_attrs.array_acct_attr_code(18) := 'ENC_UPG_CR_ENTERED_AMT';
   l_rec_acct_attrs.array_num_value(18)  := p_source_57;
   l_rec_acct_attrs.array_acct_attr_code(19) := 'ENC_UPG_CR_ENTERED_CURR';
   l_rec_acct_attrs.array_char_value(19)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(20) := 'ENC_UPG_CR_LEDGER_AMT';
   l_rec_acct_attrs.array_num_value(20)  := p_source_99;
   l_rec_acct_attrs.array_acct_attr_code(21) := 'ENC_UPG_DR_ACCT_CLASS';
   l_rec_acct_attrs.array_char_value(21)  := p_source_100;
   l_rec_acct_attrs.array_acct_attr_code(22) := 'ENC_UPG_DR_CCID';
   l_rec_acct_attrs.array_num_value(22)  := p_source_101;
   l_rec_acct_attrs.array_acct_attr_code(23) := 'ENC_UPG_DR_ENTERED_AMT';
   l_rec_acct_attrs.array_num_value(23)  := p_source_57;
   l_rec_acct_attrs.array_acct_attr_code(24) := 'ENC_UPG_DR_ENTERED_CURR';
   l_rec_acct_attrs.array_char_value(24)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(25) := 'ENC_UPG_DR_LEDGER_AMT';
   l_rec_acct_attrs.array_num_value(25)  := p_source_99;
   l_rec_acct_attrs.array_acct_attr_code(26) := 'ENC_UPG_OPTION';
   l_rec_acct_attrs.array_char_value(26)  := p_source_102;
   l_rec_acct_attrs.array_acct_attr_code(27) := 'ENTERED_CURRENCY_AMOUNT';
   l_rec_acct_attrs.array_num_value(27)  := p_source_57;
   l_rec_acct_attrs.array_acct_attr_code(28) := 'ENTERED_CURRENCY_CODE';
   l_rec_acct_attrs.array_char_value(28)  := p_source_33;
   l_rec_acct_attrs.array_acct_attr_code(29) := 'LEDGER_AMOUNT';
   l_rec_acct_attrs.array_num_value(29)  := p_source_99;
   l_rec_acct_attrs.array_acct_attr_code(30) := 'REVERSED_DISTRIBUTION_ID1';
   l_rec_acct_attrs.array_num_value(30)  :=  to_char(p_source_103);
   l_rec_acct_attrs.array_acct_attr_code(31) := 'REVERSED_DISTRIBUTION_ID2';
   l_rec_acct_attrs.array_char_value(31)  := p_source_104;
   l_rec_acct_attrs.array_acct_attr_code(32) := 'REVERSED_DISTRIBUTION_TYPE';
   l_rec_acct_attrs.array_char_value(32)  := p_source_105;
   l_rec_acct_attrs.array_acct_attr_code(33) := 'UPG_CR_ENC_TYPE_ID';
   l_rec_acct_attrs.array_num_value(33)  := p_source_106;
   l_rec_acct_attrs.array_acct_attr_code(34) := 'UPG_DR_ENC_TYPE_ID';
   l_rec_acct_attrs.array_num_value(34)  := p_source_107;

   XLA_AE_LINES_PKG.SetLineAcctAttrs(l_rec_acct_attrs);
   p_gain_or_loss_ref  := XLA_AE_LINES_PKG.g_rec_lines.array_gain_or_loss_ref(XLA_AE_LINES_PKG.g_LineNumber);

   ---------------------------------------------------------------------------------------------------------------
   -- 4336173 -- assign Business Flow Class (replace code in xla_ae_lines_pkg.Business_Flow_Validation)
   ---------------------------------------------------------------------------------------------------------------
   XLA_AE_LINES_PKG.g_rec_lines.array_business_class_code(XLA_AE_LINES_PKG.g_LineNumber) := l_bflow_class_code;

   l_actual_upg_option  := XLA_AE_LINES_PKG.g_rec_lines.array_actual_upg_option(XLA_AE_LINES_PKG.g_LineNumber);
   l_enc_upg_option     := XLA_AE_LINES_PKG.g_rec_lines.array_enc_upg_option(XLA_AE_LINES_PKG.g_LineNumber);

   IF xla_accounting_cache_pkg.GetValueChar
         (p_source_code         => 'LEDGER_CATEGORY_CODE'
         ,p_target_ledger_id    => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id) IN ('PRIMARY','ALC')
   AND l_bflow_method_code = 'PRIOR_ENTRY'
--   AND (l_actual_upg_option = 'Y' OR l_enc_upg_option = 'Y') Bug 4922099
   AND ( (NVL(l_actual_upg_option, 'N') IN ('Y', 'O')) OR
         (NVL(l_enc_upg_option, 'N') IN ('Y', 'O'))
       )
   THEN
         xla_ae_lines_pkg.BflowUpgEntry
           (p_business_method_code    => l_bflow_method_code
           ,p_business_class_code     => l_bflow_class_code
           ,p_balance_type            => l_balance_type_code);
   ELSE
      NULL;
XLA_AE_LINES_PKG.business_flow_validation(
                                p_business_method_code     => l_bflow_method_code
                               ,p_business_class_code      => l_bflow_class_code
                               ,p_inherit_description_flag => l_inherit_desc_flag);
   END IF;

   --
   -- call analytical criteria
   --
   -- Inherited Analytical Criteria for business flow method of Prior Entry.
   --
   -- call description
   --
   
xla_ae_lines_pkg.SetLineDescription(
   p_ae_header_id => l_ae_header_id
  ,p_description  => Description_3 (
     p_application_id         => p_application_id
   , p_ae_header_id           => l_ae_header_id 
, p_source_2 => p_source_2
, p_source_3 => p_source_3
, p_source_4 => p_source_4
, p_source_5 => p_source_5
   )
);


   --
   -- call ADRs
   -- Bug 4922099
   --
   IF ( (l_bflow_method_code <> 'PRIOR_ENTRY') OR
        (NVL(l_actual_upg_option, 'N') = 'O') OR
        (NVL(l_enc_upg_option, 'N') = 'O')
      )
   THEN
   NULL;
   --
   --
   
   --
   --
   END IF;
   --
   -- Bug 4922099
   IF ( ( (NVL(l_actual_upg_option, 'N') = 'O') OR
          (NVL(l_enc_upg_option, 'N') = 'O')
        ) AND
        (l_bflow_method_code = 'PRIOR_ENTRY')
      )
   THEN
      IF
      --
      1 = 1
      --
      THEN
      xla_accounting_err_pkg.build_message
                                    (p_appli_s_name            => 'XLA'
                                    ,p_msg_name                => 'XLA_UPG_OVERRIDE_ADR_UNDEFINED'
                                    ,p_token_1                 => 'LINE_NUMBER'
                                    ,p_value_1                 => XLA_AE_LINES_PKG.g_LineNumber
                                    ,p_token_2                 => 'LINE_TYPE_NAME'
                                    ,p_value_2                 => XLA_AE_SOURCES_PKG.GetComponentName (
                                                                             l_component_type
                                                                            ,l_component_code
                                                                            ,l_component_type_code
                                                                            ,l_component_appl_id
                                                                            ,l_amb_context_code
                                                                            ,l_entity_code
                                                                            ,l_event_class_code
                                                                           )
                                    ,p_token_3                 => 'OWNER'
                                    ,p_value_3                 => xla_lookups_pkg.get_meaning(
                                                                          p_lookup_type     => 'XLA_OWNER_TYPE'
                                                                          ,p_lookup_code    => l_component_type_code
                                                                         )
                                    ,p_token_4                 => 'PRODUCT_NAME'
                                    ,p_value_4                 => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.application_name
                                    ,p_entity_id               => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.entity_id
                                    ,p_event_id                => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.event_id
                                    ,p_ledger_id               => XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id
                                    ,p_ae_header_id            =>  NULL
                                       );

        IF (C_LEVEL_ERROR>= g_log_level) THEN
                 trace
                      (p_msg      => 'ERROR: XLA_UPG_OVERRIDE_ADR_UNDEFINED'
                      ,p_level    => C_LEVEL_ERROR
                      ,p_module   => l_log_module);
        END IF;
      END IF;
   END IF;
   --
   --
   ------------------------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- NOTE: XLA_AE_LINES_PKG.ValidateCurrentLine should NOT be generated if business flow method is
   -- Prior Entry.  Currently, the following code is always generated.
   ------------------------------------------------------------------------------------------------
   -- No ValidateCurrentLine for business flow method of Prior Entry

   ------------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- Populated credit and debit amounts -- Need to generate this within IF <condition>
   ------------------------------------------------------------------------------------
   XLA_AE_LINES_PKG.SetDebitCreditAmounts;

   ----------------------------------------------------------------------------------
   -- 4219869 Business Flow
   -- Update journal entry status -- Need to generate this within IF <condition>
   ----------------------------------------------------------------------------------
   XLA_AE_JOURNAL_ENTRY_PKG.UpdateJournalEntryStatus
         (p_hdr_idx => g_array_event(p_event_id).array_value_num('header_index')
         ,p_balance_type_code => l_balance_type_code
         );

   -------------------------------------------------------------------------------------------
   -- 4262811 - Generate the Accrual Reversal lines
   -------------------------------------------------------------------------------------------
   BEGIN
      l_acc_rev_flag := XLA_AE_HEADER_PKG.g_rec_header_new.array_accrual_reversal_flag
                              (g_array_event(p_event_id).array_value_num('header_index'));
      IF l_acc_rev_flag IS NULL THEN
         l_acc_rev_flag := 'N';
      END IF;
   EXCEPTION
      WHEN OTHERS THEN
         l_acc_rev_flag := 'N';
   END;
   --
   IF (l_acc_rev_flag = 'Y') THEN

       -- 4645092  ------------------------------------------------------------------------------
       -- To allow MPA report to determine if it should generate report process
       XLA_ACCOUNTING_PKG.g_mpa_accrual_exists := 'Y';
       ------------------------------------------------------------------------------------------

       l_accrual_line_num := XLA_AE_LINES_PKG.g_LineNumber;
       XLA_AE_LINES_PKG.CopyLineInfo(l_accrual_line_num);
   -- added call to set_ccid to execute mapping  for secondary accrual reversal entries bug 7444204
   -- call ADRs
   -- Bug 4922099
   --
   IF ( (l_bflow_method_code <> 'PRIOR_ENTRY') OR
        (NVL(l_actual_upg_option, 'N') = 'O') OR
        (NVL(l_enc_upg_option, 'N') = 'O')
      )
   THEN
   NULL;
   --
   --
   
   --
   --
   END IF;

       --
       -- Update the line information that should be overwritten
       --
       XLA_AE_LINES_PKG.set_ae_header_id(p_ae_header_id => p_event_id ,
                                         p_header_num   => 1);
       XLA_AE_LINES_PKG.g_rec_lines.array_header_num(XLA_AE_LINES_PKG.g_LineNumber)  :=1;

       XLA_AE_LINES_PKG.g_rec_lines.array_business_class_code(XLA_AE_LINES_PKG.g_LineNumber) := NULL; -- 4669271

       IF l_bflow_method_code <> 'NONE' THEN  -- 4655713b
          XLA_AE_LINES_PKG.g_rec_lines.array_reversal_code(XLA_AE_LINES_PKG.g_LineNumber) := CONCAT('MPA_',l_bflow_method_code);
       END IF;

      --
      -- Depending on the Reversal Method setup, do a switch side or changes sign for the amounts
      --
      IF (XLA_AE_JOURNAL_ENTRY_PKG.g_cache_ledgers_info.ledger_reversal_option = 'SIDE') THEN
          XLA_AE_LINES_PKG.g_rec_lines.array_natural_side_code(XLA_AE_LINES_PKG.g_LineNumber) :=  l_acc_rev_natural_side_code;
      ELSE
          ---------------------------------------------------------------------------------------------------
          -- 4262811a Switch Sign
          ---------------------------------------------------------------------------------------------------
          XLA_AE_LINES_PKG.g_rec_lines.array_switch_side_flag(XLA_AE_LINES_PKG.g_LineNumber) := 'N';  -- 5052518
          XLA_AE_LINES_PKG.g_rec_lines.array_ledger_amount(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_ledger_amount(XLA_AE_LINES_PKG.g_LineNumber) * -1;
          XLA_AE_LINES_PKG.g_rec_lines.array_entered_amount(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_entered_amount(XLA_AE_LINES_PKG.g_LineNumber) * -1;
          -- 5132302
          XLA_AE_LINES_PKG.g_rec_lines.array_bflow_applied_to_amt(XLA_AE_LINES_PKG.g_LineNumber) :=
                      XLA_AE_LINES_PKG.g_rec_lines.array_bflow_applied_to_amt(XLA_AE_LINES_PKG.g_LineNumber) * -1;

      END IF;

      -- 4955764
      XLA_AE_LINES_PKG.g_rec_lines.array_gl_date(XLA_AE_LINES_PKG.g_LineNumber) :=
      XLA_AE_HEADER_PKG.g_rec_header_new.array_gl_date(g_array_event(p_event_id).array_value_num('acc_rev_header_index'));


      XLA_AE_LINES_PKG.ValidateCurrentLine;
      XLA_AE_LINES_PKG.SetDebitCreditAmounts;

      XLA_AE_JOURNAL_ENTRY_PKG.UpdateJournalEntryStatus
               (p_hdr_idx           => g_array_event(p_event_id).array_value_num('acc_rev_header_index')
               ,p_balance_type_code => l_balance_type_code);

   END IF;

   -----------------------------------------------------------------------------------------
   -- 4262811 Multiperiod Accounting
   -----------------------------------------------------------------------------------------
     -- No MPA option is assigned.


END IF;
END IF;
--

--
IF (C_LEVEL_PROCEDURE >= g_log_level) THEN
   trace
      (p_msg      => 'END of AcctLineType_102'
      ,p_level    => C_LEVEL_PROCEDURE
      ,p_module   => l_log_module);
END IF;
--
EXCEPTION
  WHEN xla_exceptions_pkg.application_exception THEN
      RAISE;
  WHEN OTHERS THEN
       xla_exceptions_pkg.raise_message
           (p_location => 'XLA_00200_AAD_S_000010_BC_PKG.AcctLineType_102');
END AcctLineType_102;
--

---------------------------------------
--
-- PRIVATE PROCEDURE
--         insert_sources_103
--
----------------------------------------
--
PROCEDURE insert_sources_103(
                                p_target_ledger_id       IN NUMBER
                              , p_language               IN VARCHAR2
                              , p_sla_ledger_id          IN NUMBER
                              , p_pad_start_date         IN DATE
                              , p_pad_end_date           IN DATE
                         )
IS

C_EVENT_TYPE_CODE    CONSTANT  VARCHAR2(30)  := 'CREDIT MEMOS_ALL';
C_EVENT_CLASS_CODE   CONSTANT  VARCHAR2(30) := 'CREDIT MEMOS';
p_apps_owner                   VARCHAR2(30);
l_log_module                   VARCHAR2(240);
BEGIN
IF g_log_enabled THEN
      l_log_module := C_DEFAULT_MODULE||'.insert_sources_103';
END IF;
IF (C_LEVEL_PROCEDURE >= g_log_level) THEN

      trace
         (p_msg      => 'BEGIN of insert_sources_103'
         ,p_level    => C_LEVEL_PROCEDURE
         ,p_module   => l_log_module);

END IF;

-- select APPS owner
SELECT oracle_username
  INTO p_apps_owner
  FROM fnd_oracle_userid
 WHERE read_only_flag = 'U'
;

IF (C_LEVEL_STATEMENT >= g_log_level) THEN
      trace
         (p_msg      => 'p_target_ledger_id = '||p_target_ledger_id||
                        ' - p_language = '||p_language||
                        ' - p_sla_ledger_id  = '||p_sla_ledger_id ||
                        ' - p_pad_start_date = '||TO_CHAR(p_pad_start_date)||
                        ' - p_pad_end_date = '||TO_CHAR(p_pad_end_date)||
                        ' - p_apps_owner = '||TO_CHAR(p_apps_owner)
         ,p_level    => C_LEVEL_STATEMENT
         ,p_module   => l_log_module);
END IF;


--
INSERT INTO xla_diag_sources --hdr2
(
        event_id
      , ledger_id
      , sla_ledger_id
      , description_language
      , object_name
      , object_type_code
      , line_number
      , source_application_id
      , source_type_code
      , source_code
      , source_value
      , source_meaning
      , created_by
      , creation_date
      , last_update_date
      , last_updated_by
      , last_update_login
      , program_update_date
      , program_application_id
      , program_id
      , request_id
)
SELECT
        event_id
      , p_target_ledger_id
      , p_sla_ledger_id
      , p_language
      , object_name
      , object_type_code
      , line_number
      , source_application_id
      , source_type_code
      , source_code
      , SUBSTR(source_value ,1,1996)
      , SUBSTR(source_meaning ,1,200)
      , xla_environment_pkg.g_Usr_Id
      , TRUNC(SYSDATE)
      , TRUNC(SYSDATE)
      , xla_environment_pkg.g_Usr_Id
      , xla_environment_pkg.g_Login_Id
      , TRUNC(SYSDATE)
      , xla_environment_pkg.g_Prog_Appl_Id
      , xla_environment_pkg.g_Prog_Id
      , xla_environment_pkg.g_Req_Id
  FROM (
       SELECT xet.event_id                  event_id
            , 0                          line_number
            , CASE r
               WHEN 1 THEN 'AP_SYSTEM_PARAMETERS_EXTRACT_V' 
                WHEN 2 THEN 'AP_SYSTEM_PARAMETERS_EXTRACT_V' 
                WHEN 3 THEN 'AP_SYSTEM_PARAMETERS_EXTRACT_V' 
                WHEN 4 THEN 'AP_SYSTEM_PARAMETERS_EXTRACT_V' 
                WHEN 5 THEN 'AP_SYSTEM_PARAMETERS_EXTRACT_V' 
                WHEN 6 THEN 'AP_INVOICE_EXTRACT_HEADER_V' 
                WHEN 7 THEN 'AP_INVOICE_EXTRACT_HEADER_V' 
                WHEN 8 THEN 'AP_INVOICE_EXTRACT_HEADER_V' 
                WHEN 9 THEN 'AP_INVOICE_EXTRACT_HEADER_V' 
                WHEN 10 THEN 'AP_INVOICE_EXTRACT_HEADER_V' 
                WHEN 11 THEN 'AP_INVOICE_EXTRACT_HEADER_V' 
                WHEN 12 THEN 'AP_INVOICE_EXTRACT_HEADER_V' 
                WHEN 13 THEN 'AP_INVOICE_EXTRACT_HEADER_V' 
                WHEN 14 THEN 'AP_INVOICE_EXTRACT_HEADER_V' 
                WHEN 15 THEN 'AP_INVOICE_EXTRACT_HEADER_V' 
                WHEN 16 THEN 'AP_INVOICE_EXTRACT_HEADER_V' 
                
               ELSE null
              END                           object_name
            , CASE r
                WHEN 1 THEN 'HEADER' 
                WHEN 2 THEN 'HEADER' 
                WHEN 3 THEN 'HEADER' 
                WHEN 4 THEN 'HEADER' 
                WHEN 5 THEN 'HEADER' 
                WHEN 6 THEN 'HEADER' 
                WHEN 7 THEN 'HEADER' 
                WHEN 8 THEN 'HEADER' 
                WHEN 9 THEN 'HEADER' 
                WHEN 10 THEN 'HEADER' 
                WHEN 11 THEN 'HEADER' 
                WHEN 12 THEN 'HEADER' 
                WHEN 13 THEN 'HEADER' 
                WHEN 14 THEN 'HEADER' 
                WHEN 15 THEN 'HEADER' 
                WHEN 16 THEN 'HEADER' 
                
                ELSE null
              END                           object_type_code
            , CASE r
                WHEN 1 THEN '200' 
                WHEN 2 THEN '200' 
                WHEN 3 THEN '200' 
                WHEN 4 THEN '200' 
                WHEN 5 THEN '200' 
                WHEN 6 THEN '200' 
                WHEN 7 THEN '200' 
                WHEN 8 THEN '200' 
                WHEN 9 THEN '200' 
                WHEN 10 THEN '200' 
                WHEN 11 THEN '200' 
                WHEN 12 THEN '200' 
                WHEN 13 THEN '200' 
                WHEN 14 THEN '200' 
                WHEN 15 THEN '200' 
                WHEN 16 THEN '200' 
                
                ELSE null
              END                           source_application_id
            , 'S'             source_type_code
            , CASE r
                WHEN 1 THEN 'ASP_RATE_VAR_GAIN_CCID' 
                WHEN 2 THEN 'ASP_AUTOMATIC_OFFSETS_VALUE' 
                WHEN 3 THEN 'ASP_RATE_VAR_LOSS_CCID' 
                WHEN 4 THEN 'ASP_AUTO_OFFSET_FLAG' 
                WHEN 5 THEN 'FSP_PURCH_ENCUMBRANCE_FLAG' 
                WHEN 6 THEN 'AI_INVOICE_ID' 
                WHEN 7 THEN 'AI_INVOICE_CURRENCY_CODE' 
                WHEN 8 THEN 'INV_EXCHANGE_DATE' 
                WHEN 9 THEN 'INV_EXCHANGE_RATE' 
                WHEN 10 THEN 'INV_EXCHANGE_RATE_TYPE' 
                WHEN 11 THEN 'AI_VENDOR_ID' 
                WHEN 12 THEN 'AI_VENDOR_SITE_ID' 
                WHEN 13 THEN 'THIRD_PARTY_TYPE' 
                WHEN 14 THEN 'INV_DOC_SEQUENCE_CATEGORY' 
                WHEN 15 THEN 'INV_DOC_SEQUENCE_IDENTIFIER' 
                WHEN 16 THEN 'INV_DOC_SEQUENCE_VALUE' 
                
                ELSE null
              END                           source_code
            , CASE r
                WHEN 1 THEN TO_CHAR(h3.ASP_RATE_VAR_GAIN_CCID)
                WHEN 2 THEN TO_CHAR(h3.ASP_AUTOMATIC_OFFSETS_VALUE)
                WHEN 3 THEN TO_CHAR(h3.ASP_RATE_VAR_LOSS_CCID)
                WHEN 4 THEN TO_CHAR(h3.ASP_AUTO_OFFSET_FLAG)
                WHEN 5 THEN TO_CHAR(h3.FSP_PURCH_ENCUMBRANCE_FLAG)
                WHEN 6 THEN TO_CHAR(h2.AI_INVOICE_ID)
                WHEN 7 THEN TO_CHAR(h2.AI_INVOICE_CURRENCY_CODE)
                WHEN 8 THEN TO_CHAR(h2.INV_EXCHANGE_DATE)
                WHEN 9 THEN TO_CHAR(h2.INV_EXCHANGE_RATE)
                WHEN 10 THEN TO_CHAR(h2.INV_EXCHANGE_RATE_TYPE)
                WHEN 11 THEN TO_CHAR(h2.AI_VENDOR_ID)
                WHEN 12 THEN TO_CHAR(h2.AI_VENDOR_SITE_ID)
                WHEN 13 THEN TO_CHAR(h2.THIRD_PARTY_TYPE)
                WHEN 14 THEN TO_CHAR(h2.INV_DOC_SEQUENCE_CATEGORY)
                WHEN 15 THEN TO_CHAR(h2.INV_DOC_SEQUENCE_IDENTIFIER)
                WHEN 16 THEN TO_CHAR(h2.INV_DOC_SEQUENCE_VALUE)
                
                ELSE null
              END                           source_value
            , CASE r
                WHEN 2 THEN fvl7.meaning
                WHEN 4 THEN fvl12.meaning
                WHEN 5 THEN fvl17.meaning
                
                ELSE null
              END               source_meaning
         FROM xla_events_gt     xet  
      , AP_INVOICE_EXTRACT_HEADER_V  h2
      , AP_SYSTEM_PARAMETERS_EXTRACT_V  h3
  , fnd_lookup_values    fvl7
  , fnd_lookup_values    fvl12
  , fnd_lookup_values    fvl17
             ,(select rownum r from all_objects where rownum <= 16 and owner = p_apps_owner)
         WHERE xet.event_date between p_pad_start_date AND p_pad_end_date
           AND xet.event_class_code = C_EVENT_CLASS_CODE
              AND h2.event_id = xet.event_id
 AND h3.asp_org_id = h2.ai_org_id   AND fvl7.lookup_type(+)         = 'LIABILITY FLEXBUILD METHOD'
  AND fvl7.lookup_code(+)         = h3.ASP_AUTOMATIC_OFFSETS_VALUE
  AND fvl7.view_application_id(+) = 200
  AND fvl7.language(+)            = USERENV('LANG')
     AND fvl12.lookup_type(+)         = 'YES_NO'
  AND fvl12.lookup_code(+)         = h3.ASP_AUTO_OFFSET_FLAG
  AND fvl12.view_application_id(+) = 0
  AND fvl12.language(+)            = USERENV('LANG')
     AND fvl17.lookup_type(+)         = 'YES_NO'
  AND fvl17.lookup_code(+)         = h3.FSP_PURCH_ENCUMBRANCE_FLAG
  AND fvl17.view_application_id(+) = 0
  AND fvl17.language(+)            = USERENV('LANG')
  
)
;
--
IF (C_LEVEL_STATEMENT >= g_log_level) THEN

      trace
         (p_msg      => 'number of header sources inserted = '||SQL%ROWCOUNT
         ,p_level    => C_LEVEL_STATEMENT
         ,p_module   => l_log_module);

END IF;
--



--
INSERT INTO xla_diag_sources  --line2
(
        event_id
      , ledger_id
      , sla_ledger_id
      , description_language
      , object_name
      , object_type_code
      , line_number
      , source_application_id
      , source_type_code
      , source_code
      , source_value
      , source_meaning
      , created_by
      , creation_date
      , last_update_date
      , last_updated_by
      , last_update_login
      , program_update_date
      , program_application_id
      , program_id
      , request_id
)
SELECT  event_id
      , p_target_ledger_id
      , p_sla_ledger_id
      , p_language
      , object_name
      , object_type_code
      , line_number
      , source_application_id
      , source_type_code
      , source_code
      , SUBSTR(source_value,1,1996)
      , SUBSTR(source_meaning ,1,200)
      , xla_environment_pkg.g_Usr_Id
      , TRUNC(SYSDATE)
      , TRUNC(SYSDATE)
      , xla_environment_pkg.g_Usr_Id
      , xla_environment_pkg.g_Login_Id
      , TRUNC(SYSDATE)
      , xla_environment_pkg.g_Prog_Appl_Id
      , xla_environment_pkg.g_Prog_Id
      , xla_environment_pkg.g_Req_Id
  FROM (
       SELECT xet.event_id                  event_id
            , l1.line_number                 line_number
            , CASE r
               WHEN 1 THEN 'AP_EXTRACT_INVOICE_DTLS_BC_V' 
                WHEN 2 THEN 'AP_EXTRACT_INVOICE_DTLS_BC_V' 
                WHEN 3 THEN 'AP_EXTRACT_INVOICE_DTLS_BC_V' 
                WHEN 4 THEN 'AP_EXTRACT_INVOICE_DTLS_BC_V' 
                WHEN 5 THEN 'AP_EXTRACT_INVOICE_DTLS_BC_V' 
                WHEN 6 THEN 'AP_EXTRACT_INVOICE_DTLS_BC_V' 
                WHEN 7 THEN 'AP_EXTRACT_INVOICE_DTLS_BC_V' 
                WHEN 8 THEN 'AP_EXTRACT_INVOICE_DTLS_BC_V' 
                WHEN 9 THEN 'AP_EXTRACT_INVOICE_DTLS_BC_V' 
                WHEN 10 THEN 'AP_EXTRACT_INVOICE_DTLS_BC_V' 
                WHEN 11 THEN 'AP_EXTRACT_INVOICE_DTLS_BC_V' 
                WHEN 12 THEN 'AP_EXTRACT_INVOICE_DTLS_BC_V' 
                WHEN 13 THEN 'AP_EXTRACT_INVOICE_DTLS_BC_V' 
                WHEN 14 THEN 'AP_EXTRACT_INVOICE_DTLS_BC_V' 
                WHEN 15 THEN 'AP_EXTRACT_INVOICE_DTLS_BC_V' 
                WHEN 16 THEN 'AP_EXTRACT_INVOICE_DTLS_BC_V' 
                WHEN 17 THEN 'AP_EXTRACT_INVOICE_DTLS_BC_V' 
                WHEN 18 THEN 'AP_EXTRACT_INVOICE_DTLS_BC_V' 
                WHEN 19 THEN 'AP_EXTRACT_INVOICE_DTLS_BC_V' 
                WHEN 20 THEN 'AP_EXTRACT_INVOICE_DTLS_BC_V' 
                WHEN 21 THEN 'AP_EXTRACT_INVOICE_DTLS_BC_V' 
                WHEN 22 THEN 'AP_EXTRACT_INVOICE_DTLS_BC_V' 
                WHEN 23 THEN 'AP_EXTRACT_INVOICE_DTLS_BC_V' 
                WHEN 24 THEN 'AP_EXTRACT_INVOICE_DTLS_BC_V' 
                WHEN 25 THEN 'AP_EXTRACT_INVOICE_DTLS_BC_V' 
                WHEN 26 THEN 'AP_EXTRACT_INVOICE_DTLS_BC_V' 
                WHEN 27 THEN 'AP_EXTRACT_INVOICE_DTLS_BC_V' 
                WHEN 28 THEN 'AP_EXTRACT_INVOICE_DTLS_BC_V' 
                WHEN 29 THEN 'AP_EXTRACT_INVOICE_DTLS_BC_V' 
                WHEN 30 THEN 'AP_EXTRACT_INVOICE_DTLS_BC_V' 
                WHEN 31 THEN 'AP_EXTRACT_INVOICE_DTLS_BC_V' 
                WHEN 32 THEN 'ZX_AP_DEF_TAX_EXTRACT_V' 
                WHEN 33 THEN 'ZX_AP_TAX_JRNL_LINE_DESC_V' 
                WHEN 34 THEN 'AP_EXTRACT_INVOICE_DTLS_BC_V' 
                WHEN 35 THEN 'AP_EXTRACT_INVOICE_DTLS_BC_V' 
                WHEN 36 THEN 'AP_EXTRACT_INVOICE_DTLS_BC_V' 
                WHEN 37 THEN 'AP_EXTRACT_INVOICE_DTLS_BC_V' 
                WHEN 38 THEN 'AP_EXTRACT_INVOICE_DTLS_BC_V' 
                WHEN 39 THEN 'AP_EXTRACT_INVOICE_DTLS_BC_V' 
                WHEN 40 THEN 'AP_EXTRACT_INVOICE_DTLS_BC_V' 
                WHEN 41 THEN 'AP_EXTRACT_INVOICE_DTLS_BC_V' 
                WHEN 42 THEN 'AP_EXTRACT_INVOICE_DTLS_BC_V' 
                WHEN 43 THEN 'AP_EXTRACT_INVOICE_DTLS_BC_V' 
                WHEN 44 THEN 'AP_EXTRACT_INVOICE_DTLS_BC_V' 
                WHEN 45 THEN 'AP_EXTRACT_INVOICE_DTLS_BC_V' 
                WHEN 46 THEN 'AP_EXTRACT_INVOICE_DTLS_BC_V' 
                WHEN 47 THEN 'AP_EXTRACT_INVOICE_DTLS_BC_V' 
                
               ELSE null
              END                           object_name
            , CASE r
                WHEN 1 THEN 'LINE' 
                WHEN 2 THEN 'LINE' 
                WHEN 3 THEN 'LINE' 
                WHEN 4 THEN 'LINE' 
                WHEN 5 THEN 'LINE' 
                WHEN 6 THEN 'LINE' 
                WHEN 7 THEN 'LINE' 
                WHEN 8 THEN 'LINE' 
                WHEN 9 THEN 'LINE' 
                WHEN 10 THEN 'LINE' 
                WHEN 11 THEN 'LINE' 
                WHEN 12 THEN 'LINE' 
                WHEN 13 THEN 'LINE' 
                WHEN 14 THEN 'LINE' 
                WHEN 15 THEN 'LINE' 
                WHEN 16 THEN 'LINE' 
                WHEN 17 THEN 'LINE' 
                WHEN 18 THEN 'LINE' 
                WHEN 19 THEN 'LINE' 
                WHEN 20 THEN 'LINE' 
                WHEN 21 THEN 'LINE' 
                WHEN 22 THEN 'LINE' 
                WHEN 23 THEN 'LINE' 
                WHEN 24 THEN 'LINE' 
                WHEN 25 THEN 'LINE' 
                WHEN 26 THEN 'LINE' 
                WHEN 27 THEN 'LINE' 
                WHEN 28 THEN 'LINE' 
                WHEN 29 THEN 'LINE' 
                WHEN 30 THEN 'LINE' 
                WHEN 31 THEN 'LINE' 
                WHEN 32 THEN 'LINE' 
                WHEN 33 THEN 'LINE' 
                WHEN 34 THEN 'LINE' 
                WHEN 35 THEN 'LINE' 
                WHEN 36 THEN 'LINE' 
                WHEN 37 THEN 'LINE' 
                WHEN 38 THEN 'LINE' 
                WHEN 39 THEN 'LINE' 
                WHEN 40 THEN 'LINE' 
                WHEN 41 THEN 'LINE' 
                WHEN 42 THEN 'LINE' 
                WHEN 43 THEN 'LINE' 
                WHEN 44 THEN 'LINE' 
                WHEN 45 THEN 'LINE' 
                WHEN 46 THEN 'LINE' 
                WHEN 47 THEN 'LINE' 
                
                ELSE null
              END                           object_type_code
            , CASE r
                WHEN 1 THEN '200' 
                WHEN 2 THEN '200' 
                WHEN 3 THEN '200' 
                WHEN 4 THEN '200' 
                WHEN 5 THEN '200' 
                WHEN 6 THEN '200' 
                WHEN 7 THEN '200' 
                WHEN 8 THEN '200' 
                WHEN 9 THEN '200' 
                WHEN 10 THEN '200' 
                WHEN 11 THEN '200' 
                WHEN 12 THEN '200' 
                WHEN 13 THEN '200' 
                WHEN 14 THEN '200' 
                WHEN 15 THEN '200' 
                WHEN 16 THEN '200' 
                WHEN 17 THEN '200' 
                WHEN 18 THEN '200' 
                WHEN 19 THEN '200' 
                WHEN 20 THEN '200' 
                WHEN 21 THEN '200' 
                WHEN 22 THEN '200' 
                WHEN 23 THEN '200' 
                WHEN 24 THEN '200' 
                WHEN 25 THEN '200' 
                WHEN 26 THEN '200' 
                WHEN 27 THEN '200' 
                WHEN 28 THEN '200' 
                WHEN 29 THEN '200' 
                WHEN 30 THEN '200' 
                WHEN 31 THEN '200' 
                WHEN 32 THEN '200' 
                WHEN 33 THEN '200' 
                WHEN 34 THEN '200' 
                WHEN 35 THEN '200' 
                WHEN 36 THEN '200' 
                WHEN 37 THEN '200' 
                WHEN 38 THEN '200' 
                WHEN 39 THEN '200' 
                WHEN 40 THEN '200' 
                WHEN 41 THEN '200' 
                WHEN 42 THEN '200' 
                WHEN 43 THEN '200' 
                WHEN 44 THEN '200' 
                WHEN 45 THEN '200' 
                WHEN 46 THEN '200' 
                WHEN 47 THEN '200' 
                
                ELSE null
              END                           source_application_id
            , 'S'             source_type_code
            , CASE r
                WHEN 1 THEN 'AID_DESCRIPTION' 
                WHEN 2 THEN 'INV_DIST_BASE_AMOUNT' 
                WHEN 3 THEN 'RELATED_INV_DIST_DEST_TYPE' 
                WHEN 4 THEN 'AID_DIST_CCID' 
                WHEN 5 THEN 'SELF_ASSESSED_TAX_ACCOUNT' 
                WHEN 6 THEN 'AID_LINE_TYPE_LOOKUP_CODE' 
                WHEN 7 THEN 'AID_AMOUNT_VARIANCE' 
                WHEN 8 THEN 'POD_ACCRUE_ON_RECEIPT_FLAG' 
                WHEN 9 THEN 'DIST_ACCOUNT_REVERSAL_OPTION' 
                WHEN 10 THEN 'DISTRIBUTION_LINK_TYPE' 
                WHEN 11 THEN 'ALLOC_TO_MAIN_DIST_ID' 
                WHEN 12 THEN 'BUS_FLOW_AP_APP_ID' 
                WHEN 13 THEN 'BUS_FLOW_INV_DIST_TYPE' 
                WHEN 14 THEN 'BUS_FLOW_INV_ENTITY_CODE' 
                WHEN 15 THEN 'BUS_FLOW_INV_DIST_ID' 
                WHEN 16 THEN 'BUS_FLOW_INV_ID' 
                WHEN 17 THEN 'AID_INVOICE_DIST_ID' 
                WHEN 18 THEN 'UPG_ENC_CR_CCID' 
                WHEN 19 THEN 'UPG_ENC_CR_AMT' 
                WHEN 20 THEN 'UPG_ENC_CR_BASE_AMT' 
                WHEN 21 THEN 'UPG_ENC_DR_CCID' 
                WHEN 22 THEN 'UPG_ENC_DR_AMT' 
                WHEN 23 THEN 'UPG_ENC_DR_BASE_AMT' 
                WHEN 24 THEN 'UPG_AP_ENCUM_OPTION' 
                WHEN 25 THEN 'AID_BASE_AMOUNT_VARIANCE' 
                WHEN 26 THEN 'DEFERRED_END_DATE' 
                WHEN 27 THEN 'DEFERRED_OPTION' 
                WHEN 28 THEN 'DEFERRED_START_DATE' 
                WHEN 29 THEN 'OVERRIDE_ACCTD_AMT_FLAG' 
                WHEN 30 THEN 'AID_PARENT_REVERSAL_ID' 
                WHEN 31 THEN 'AID_STAT_AMOUNT' 
                WHEN 32 THEN 'TAX_LINE_ID' 
                WHEN 33 THEN 'REC_NREC_TAX_DIST_ID' 
                WHEN 34 THEN 'SUMMARY_TAX_LINE_ID' 
                WHEN 35 THEN 'UPG_CR_ENC_TYPE_ID' 
                WHEN 36 THEN 'UPG_DR_ENC_TYPE_ID' 
                WHEN 37 THEN 'PO_DISTRIBUTION_ID' 
                WHEN 38 THEN 'SELF_ASSESSED_TAX_FLAG' 
                WHEN 39 THEN 'BUS_FLOW_PO_APP_ID' 
                WHEN 40 THEN 'BUS_FLOW_PO_DIST_TYPE' 
                WHEN 41 THEN 'BUS_FLOW_PO_ENTITY_CODE' 
                WHEN 42 THEN 'BUS_FLOW_PO_DIST_ID' 
                WHEN 43 THEN 'BUS_FLOW_PO_DOC_ID' 
                WHEN 44 THEN 'ENCUMBRANCE_AMOUNT' 
                WHEN 45 THEN 'ENCUMBRANCE_BASE_AMOUNT' 
                WHEN 46 THEN 'AID_QUANTITY_VARIANCE' 
                WHEN 47 THEN 'AID_BASE_QUANTITY_VARIANCE' 
                
                ELSE null
              END                           source_code
            , CASE r
                WHEN 1 THEN TO_CHAR(l1.AID_DESCRIPTION)
                WHEN 2 THEN TO_CHAR(l1.INV_DIST_BASE_AMOUNT)
                WHEN 3 THEN TO_CHAR(l1.RELATED_INV_DIST_DEST_TYPE)
                WHEN 4 THEN TO_CHAR(l1.AID_DIST_CCID)
                WHEN 5 THEN TO_CHAR(l1.SELF_ASSESSED_TAX_ACCOUNT)
                WHEN 6 THEN TO_CHAR(l1.AID_LINE_TYPE_LOOKUP_CODE)
                WHEN 7 THEN TO_CHAR(l1.AID_AMOUNT_VARIANCE)
                WHEN 8 THEN TO_CHAR(l1.POD_ACCRUE_ON_RECEIPT_FLAG)
                WHEN 9 THEN TO_CHAR(l1.DIST_ACCOUNT_REVERSAL_OPTION)
                WHEN 10 THEN TO_CHAR(l1.DISTRIBUTION_LINK_TYPE)
                WHEN 11 THEN TO_CHAR(l1.ALLOC_TO_MAIN_DIST_ID)
                WHEN 12 THEN TO_CHAR(l1.BUS_FLOW_AP_APP_ID)
                WHEN 13 THEN TO_CHAR(l1.BUS_FLOW_INV_DIST_TYPE)
                WHEN 14 THEN TO_CHAR(l1.BUS_FLOW_INV_ENTITY_CODE)
                WHEN 15 THEN TO_CHAR(l1.BUS_FLOW_INV_DIST_ID)
                WHEN 16 THEN TO_CHAR(l1.BUS_FLOW_INV_ID)
                WHEN 17 THEN TO_CHAR(l1.AID_INVOICE_DIST_ID)
                WHEN 18 THEN TO_CHAR(l1.UPG_ENC_CR_CCID)
                WHEN 19 THEN TO_CHAR(l1.UPG_ENC_CR_AMT)
                WHEN 20 THEN TO_CHAR(l1.UPG_ENC_CR_BASE_AMT)
                WHEN 21 THEN TO_CHAR(l1.UPG_ENC_DR_CCID)
                WHEN 22 THEN TO_CHAR(l1.UPG_ENC_DR_AMT)
                WHEN 23 THEN TO_CHAR(l1.UPG_ENC_DR_BASE_AMT)
                WHEN 24 THEN TO_CHAR(l1.UPG_AP_ENCUM_OPTION)
                WHEN 25 THEN TO_CHAR(l1.AID_BASE_AMOUNT_VARIANCE)
                WHEN 26 THEN TO_CHAR(l1.DEFERRED_END_DATE)
                WHEN 27 THEN TO_CHAR(l1.DEFERRED_OPTION)
                WHEN 28 THEN TO_CHAR(l1.DEFERRED_START_DATE)
                WHEN 29 THEN TO_CHAR(l1.OVERRIDE_ACCTD_AMT_FLAG)
                WHEN 30 THEN TO_CHAR(l1.AID_PARENT_REVERSAL_ID)
                WHEN 31 THEN TO_CHAR(l1.AID_STAT_AMOUNT)
                WHEN 32 THEN TO_CHAR(l4.TAX_LINE_ID)
                WHEN 33 THEN TO_CHAR(l5.REC_NREC_TAX_DIST_ID)
                WHEN 34 THEN TO_CHAR(l1.SUMMARY_TAX_LINE_ID)
                WHEN 35 THEN TO_CHAR(l1.UPG_CR_ENC_TYPE_ID)
                WHEN 36 THEN TO_CHAR(l1.UPG_DR_ENC_TYPE_ID)
                WHEN 37 THEN TO_CHAR(l1.PO_DISTRIBUTION_ID)
                WHEN 38 THEN TO_CHAR(l1.SELF_ASSESSED_TAX_FLAG)
                WHEN 39 THEN TO_CHAR(l1.BUS_FLOW_PO_APP_ID)
                WHEN 40 THEN TO_CHAR(l1.BUS_FLOW_PO_DIST_TYPE)
                WHEN 41 THEN TO_CHAR(l1.BUS_FLOW_PO_ENTITY_CODE)
                WHEN 42 THEN TO_CHAR(l1.BUS_FLOW_PO_DIST_ID)
                WHEN 43 THEN TO_CHAR(l1.BUS_FLOW_PO_DOC_ID)
                WHEN 44 THEN TO_CHAR(l1.ENCUMBRANCE_AMOUNT)
                WHEN 45 THEN TO_CHAR(l1.ENCUMBRANCE_BASE_AMOUNT)
                WHEN 46 THEN TO_CHAR(l1.AID_QUANTITY_VARIANCE)
                WHEN 47 THEN TO_CHAR(l1.AID_BASE_QUANTITY_VARIANCE)
                
                ELSE null
              END                           source_value
            , CASE r
                WHEN 3 THEN fvl9.meaning
                WHEN 6 THEN fvl15.meaning
                WHEN 8 THEN fvl18.meaning
                WHEN 29 THEN fvl46.meaning
                WHEN 38 THEN fvl59.meaning
                
                ELSE null
              END               source_meaning
         FROM  xla_events_gt     xet  
        , AP_EXTRACT_INVOICE_DTLS_BC_V  l1
        , ZX_AP_DEF_TAX_EXTRACT_V  l4
        , ZX_AP_TAX_JRNL_LINE_DESC_V  l5
  , fnd_lookup_values    fvl9
  , fnd_lookup_values    fvl15
  , fnd_lookup_values    fvl18
  , fnd_lookup_values    fvl46
  , fnd_lookup_values    fvl59
            , (select rownum r from all_objects where rownum <= 47 and owner = p_apps_owner)
        WHERE xet.event_date between p_pad_start_date AND p_pad_end_date
          AND xet.event_class_code = C_EVENT_CLASS_CODE
            AND l1.event_id          = xet.event_id
 AND l1.zrnd_tax_dist_id = l4.rec_nrec_tax_dist_id (+)  AND l1.zrnd_tax_dist_id = l5.rec_nrec_tax_dist_id (+)    AND fvl9.lookup_type(+)         = 'DESTINATION TYPE'
  AND fvl9.lookup_code(+)         = l1.RELATED_INV_DIST_DEST_TYPE
  AND fvl9.view_application_id(+) = 201
  AND fvl9.language(+)            = USERENV('LANG')
     AND fvl15.lookup_type(+)         = 'INVOICE DISTRIBUTION TYPE'
  AND fvl15.lookup_code(+)         = l1.AID_LINE_TYPE_LOOKUP_CODE
  AND fvl15.view_application_id(+) = 200
  AND fvl15.language(+)            = USERENV('LANG')
     AND fvl18.lookup_type(+)         = 'YES_NO'
  AND fvl18.lookup_code(+)         = l1.POD_ACCRUE_ON_RECEIPT_FLAG
  AND fvl18.view_application_id(+) = 0
  AND fvl18.language(+)            = USERENV('LANG')
     AND fvl46.lookup_type(+)         = 'YES_NO'
  AND fvl46.lookup_code(+)         = l1.OVERRIDE_ACCTD_AMT_FLAG
  AND fvl46.view_application_id(+) = 0
  AND fvl46.language(+)            = USERENV('LANG')
     AND fvl59.lookup_type(+)         = 'YES_NO'
  AND fvl59.lookup_code(+)         = l1.SELF_ASSESSED_TAX_FLAG
  AND fvl59.view_application_id(+) = 0
  AND fvl59.language(+)            = USERENV('LANG')
  
)
;
--
IF (C_LEVEL_STATEMENT >= g_log_level) THEN

      trace
         (p_msg      => 'number of line sources inserted = '||SQL%ROWCOUNT
         ,p_level    => C_LEVEL_STATEMENT
         ,p_module   => l_log_module);

END IF;


IF (C_LEVEL_PROCEDURE >= g_log_level) THEN
      trace
         (p_msg      => 'END of insert_sources_103'
         ,p_level    => C_LEVEL_PROCEDURE
         ,p_module   => l_log_module);
END IF;
EXCEPTION
  WHEN xla_exceptions_pkg.application_exception THEN
      IF (C_LEVEL_EXCEPTION >= g_log_level) THEN
            trace
               (p_msg      => 'ERROR: XLA_CMP_COMPILER_ERROR = '||sqlerrm
               ,p_level    => C_LEVEL_EXCEPTION
               ,p_module   => l_log_module);
      END IF;
      RAISE;
  WHEN OTHERS THEN
      IF (C_LEVEL_EXCEPTION >= g_log_level) THEN
            trace
               (p_msg      => 'ERROR: XLA_CMP_COMPILER_ERROR = '||sqlerrm
               ,p_level    => C_LEVEL_EXCEPTION
               ,p_module   => l_log_module);
       END IF;
       xla_exceptions_pkg.raise_message
           (p_location => 'XLA_00200_AAD_S_000010_BC_PKG.insert_sources_103');
END insert_sources_103;
--

---------------------------------------
--
-- PRIVATE FUNCTION
--         EventClass_103
--
----------------------------------------
--
FUNCTION EventClass_103
       (p_application_id         IN NUMBER
       ,p_base_ledger_id         IN NUMBER
       ,p_target_ledger_id       IN NUMBER
       ,p_language               IN VARCHAR2
       ,p_currency_code          IN VARCHAR2
       ,p_sla_ledger_id          IN NUMBER
       ,p_pad_start_date         IN DATE
       ,p_pad_end_date           IN DATE
       ,p_primary_ledger_id      IN NUMBER)
RETURN BOOLEAN IS
--
C_EVENT_TYPE_CODE    CONSTANT  VARCHAR2(30)  := 'CREDIT MEMOS_ALL';
C_EVENT_CLASS_CODE    CONSTANT  VARCHAR2(30) := 'CREDIT MEMOS';

l_calculate_acctd_flag   VARCHAR2(1) :='N';
l_calculate_g_l_flag     VARCHAR2(1) :='N';
--
l_array_legal_entity_id                XLA_AE_JOURNAL_ENTRY_PKG.t_array_Num;
l_array_entity_id                      XLA_AE_JOURNAL_ENTRY_PKG.t_array_Num;
l_array_entity_code                    XLA_AE_JOURNAL_ENTRY_PKG.t_array_V30L;
l_array_transaction_num                XLA_AE_JOURNAL_ENTRY_PKG.t_array_V240L;
l_array_event_id                       XLA_AE_JOURNAL_ENTRY_PKG.t_array_Num;
l_array_class_code                     XLA_AE_JOURNAL_ENTRY_PKG.t_array_V30L;
l_array_event_type                     XLA_AE_JOURNAL_ENTRY_PKG.t_array_V30L;
l_array_event_number                   XLA_AE_JOURNAL_ENTRY_PKG.t_array_Num;
l_array_event_date                     XLA_AE_JOURNAL_ENTRY_PKG.t_array_Date;
l_array_transaction_date               XLA_AE_JOURNAL_ENTRY_PKG.t_array_Date;
l_array_reference_num_1                XLA_AE_JOURNAL_ENTRY_PKG.t_array_Num;
l_array_reference_num_2                XLA_AE_JOURNAL_ENTRY_PKG.t_array_Num;
l_array_reference_num_3                XLA_AE_JOURNAL_ENTRY_PKG.t_array_Num;
l_array_reference_num_4                XLA_AE_JOURNAL_ENTRY_PKG.t_array_Num;
l_array_reference_char_1               XLA_AE_JOURNAL_ENTRY_PKG.t_array_V240L;
l_array_reference_char_2               XLA_AE_JOURNAL_ENTRY_PKG.t_array_V240L;
l_array_reference_char_3               XLA_AE_JOURNAL_ENTRY_PKG.t_array_V240L;
l_array_reference_char_4               XLA_AE_JOURNAL_ENTRY_PKG.t_array_V240L;
l_array_reference_date_1               XLA_AE_JOURNAL_ENTRY_PKG.t_array_Date;
l_array_reference_date_2               XLA_AE_JOURNAL_ENTRY_PKG.t_array_Date;
l_array_reference_date_3               XLA_AE_JOURNAL_ENTRY_PKG.t_array_Date;
l_array_reference_date_4               XLA_AE_JOURNAL_ENTRY_PKG.t_array_Date;
l_array_event_created_by               XLA_AE_JOURNAL_ENTRY_PKG.t_array_V100L;
l_array_budgetary_control_flag         XLA_AE_JOURNAL_ENTRY_PKG.t_array_V30L;
l_array_header_events                  XLA_AE_JOURNAL_ENTRY_PKG.t_array_Num;  --added
l_array_duplicate_checker              XLA_AE_JOURNAL_ENTRY_PKG.t_array_Num;  --added

l_event_id                             NUMBER;
l_previous_event_id                    NUMBER;
l_first_event_id                       NUMBER;
l_last_event_id                        NUMBER;

l_rec_acct_attrs                       XLA_AE_HEADER_PKG.t_rec_acct_attrs;
l_rec_rev_acct_attrs                   XLA_AE_LINES_PKG.t_rec_acct_attrs;
--
--
l_result                    BOOLEAN := TRUE;
l_rows                      NUMBER  := 1000;
l_event_type_name           VARCHAR2(80) := 'All';
l_event_class_name          VARCHAR2(80) := 'Credit Memos';
l_description               VARCHAR2(4000);
l_transaction_reversal      NUMBER;
l_ae_header_id              NUMBER;
l_array_extract_line_num    xla_ae_journal_entry_pkg.t_array_Num;
l_log_module                VARCHAR2(240);
--
l_acct_reversal_source      VARCHAR2(30);
l_trx_reversal_source       VARCHAR2(30);

l_continue_with_lines       BOOLEAN := TRUE;
--
l_acc_rev_gl_date_source    DATE;                      -- 4262811
--
type t_array_event_id is table of number index by binary_integer;

l_rec_array_event                    t_rec_array_event;
l_null_rec_array_event               t_rec_array_event;
l_array_ae_header_id                 xla_number_array_type;
l_actual_flag                        VARCHAR2(1) := NULL;
l_actual_gain_loss_ref               VARCHAR2(30) := '#####';
l_balance_type_code                  VARCHAR2(1) :=NULL;
l_gain_or_loss_ref                   VARCHAR2(30) :=NULL;

--
TYPE t_array_lookup_meaning IS TABLE OF fnd_lookup_values.meaning%TYPE INDEX BY BINARY_INTEGER;
--

TYPE t_array_source_6 IS TABLE OF AP_SYSTEM_PARAMETERS_EXTRACT_V.ASP_RATE_VAR_GAIN_CCID%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_7 IS TABLE OF AP_SYSTEM_PARAMETERS_EXTRACT_V.ASP_AUTOMATIC_OFFSETS_VALUE%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_10 IS TABLE OF AP_SYSTEM_PARAMETERS_EXTRACT_V.ASP_RATE_VAR_LOSS_CCID%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_12 IS TABLE OF AP_SYSTEM_PARAMETERS_EXTRACT_V.ASP_AUTO_OFFSET_FLAG%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_17 IS TABLE OF AP_SYSTEM_PARAMETERS_EXTRACT_V.FSP_PURCH_ENCUMBRANCE_FLAG%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_24 IS TABLE OF AP_INVOICE_EXTRACT_HEADER_V.AI_INVOICE_ID%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_33 IS TABLE OF AP_INVOICE_EXTRACT_HEADER_V.AI_INVOICE_CURRENCY_CODE%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_39 IS TABLE OF AP_INVOICE_EXTRACT_HEADER_V.INV_EXCHANGE_DATE%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_40 IS TABLE OF AP_INVOICE_EXTRACT_HEADER_V.INV_EXCHANGE_RATE%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_41 IS TABLE OF AP_INVOICE_EXTRACT_HEADER_V.INV_EXCHANGE_RATE_TYPE%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_47 IS TABLE OF AP_INVOICE_EXTRACT_HEADER_V.AI_VENDOR_ID%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_48 IS TABLE OF AP_INVOICE_EXTRACT_HEADER_V.AI_VENDOR_SITE_ID%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_49 IS TABLE OF AP_INVOICE_EXTRACT_HEADER_V.THIRD_PARTY_TYPE%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_122 IS TABLE OF AP_INVOICE_EXTRACT_HEADER_V.INV_DOC_SEQUENCE_CATEGORY%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_123 IS TABLE OF AP_INVOICE_EXTRACT_HEADER_V.INV_DOC_SEQUENCE_IDENTIFIER%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_124 IS TABLE OF AP_INVOICE_EXTRACT_HEADER_V.INV_DOC_SEQUENCE_VALUE%TYPE INDEX BY BINARY_INTEGER;

TYPE t_array_source_1 IS TABLE OF AP_EXTRACT_INVOICE_DTLS_BC_V.AID_DESCRIPTION%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_8 IS TABLE OF AP_EXTRACT_INVOICE_DTLS_BC_V.INV_DIST_BASE_AMOUNT%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_9 IS TABLE OF AP_EXTRACT_INVOICE_DTLS_BC_V.RELATED_INV_DIST_DEST_TYPE%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_11 IS TABLE OF AP_EXTRACT_INVOICE_DTLS_BC_V.AID_DIST_CCID%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_13 IS TABLE OF AP_EXTRACT_INVOICE_DTLS_BC_V.SELF_ASSESSED_TAX_ACCOUNT%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_15 IS TABLE OF AP_EXTRACT_INVOICE_DTLS_BC_V.AID_LINE_TYPE_LOOKUP_CODE%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_16 IS TABLE OF AP_EXTRACT_INVOICE_DTLS_BC_V.AID_AMOUNT_VARIANCE%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_18 IS TABLE OF AP_EXTRACT_INVOICE_DTLS_BC_V.POD_ACCRUE_ON_RECEIPT_FLAG%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_19 IS TABLE OF AP_EXTRACT_INVOICE_DTLS_BC_V.DIST_ACCOUNT_REVERSAL_OPTION%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_21 IS TABLE OF AP_EXTRACT_INVOICE_DTLS_BC_V.DISTRIBUTION_LINK_TYPE%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_23 IS TABLE OF AP_EXTRACT_INVOICE_DTLS_BC_V.ALLOC_TO_MAIN_DIST_ID%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_25 IS TABLE OF AP_EXTRACT_INVOICE_DTLS_BC_V.BUS_FLOW_AP_APP_ID%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_26 IS TABLE OF AP_EXTRACT_INVOICE_DTLS_BC_V.BUS_FLOW_INV_DIST_TYPE%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_27 IS TABLE OF AP_EXTRACT_INVOICE_DTLS_BC_V.BUS_FLOW_INV_ENTITY_CODE%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_28 IS TABLE OF AP_EXTRACT_INVOICE_DTLS_BC_V.BUS_FLOW_INV_DIST_ID%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_29 IS TABLE OF AP_EXTRACT_INVOICE_DTLS_BC_V.BUS_FLOW_INV_ID%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_30 IS TABLE OF AP_EXTRACT_INVOICE_DTLS_BC_V.AID_INVOICE_DIST_ID%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_31 IS TABLE OF AP_EXTRACT_INVOICE_DTLS_BC_V.UPG_ENC_CR_CCID%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_32 IS TABLE OF AP_EXTRACT_INVOICE_DTLS_BC_V.UPG_ENC_CR_AMT%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_34 IS TABLE OF AP_EXTRACT_INVOICE_DTLS_BC_V.UPG_ENC_CR_BASE_AMT%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_35 IS TABLE OF AP_EXTRACT_INVOICE_DTLS_BC_V.UPG_ENC_DR_CCID%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_36 IS TABLE OF AP_EXTRACT_INVOICE_DTLS_BC_V.UPG_ENC_DR_AMT%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_37 IS TABLE OF AP_EXTRACT_INVOICE_DTLS_BC_V.UPG_ENC_DR_BASE_AMT%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_38 IS TABLE OF AP_EXTRACT_INVOICE_DTLS_BC_V.UPG_AP_ENCUM_OPTION%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_42 IS TABLE OF AP_EXTRACT_INVOICE_DTLS_BC_V.AID_BASE_AMOUNT_VARIANCE%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_43 IS TABLE OF AP_EXTRACT_INVOICE_DTLS_BC_V.DEFERRED_END_DATE%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_44 IS TABLE OF AP_EXTRACT_INVOICE_DTLS_BC_V.DEFERRED_OPTION%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_45 IS TABLE OF AP_EXTRACT_INVOICE_DTLS_BC_V.DEFERRED_START_DATE%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_46 IS TABLE OF AP_EXTRACT_INVOICE_DTLS_BC_V.OVERRIDE_ACCTD_AMT_FLAG%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_50 IS TABLE OF AP_EXTRACT_INVOICE_DTLS_BC_V.AID_PARENT_REVERSAL_ID%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_51 IS TABLE OF AP_EXTRACT_INVOICE_DTLS_BC_V.AID_STAT_AMOUNT%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_52 IS TABLE OF ZX_AP_DEF_TAX_EXTRACT_V.TAX_LINE_ID%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_53 IS TABLE OF ZX_AP_TAX_JRNL_LINE_DESC_V.REC_NREC_TAX_DIST_ID%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_54 IS TABLE OF AP_EXTRACT_INVOICE_DTLS_BC_V.SUMMARY_TAX_LINE_ID%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_55 IS TABLE OF AP_EXTRACT_INVOICE_DTLS_BC_V.UPG_CR_ENC_TYPE_ID%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_56 IS TABLE OF AP_EXTRACT_INVOICE_DTLS_BC_V.UPG_DR_ENC_TYPE_ID%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_58 IS TABLE OF AP_EXTRACT_INVOICE_DTLS_BC_V.PO_DISTRIBUTION_ID%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_59 IS TABLE OF AP_EXTRACT_INVOICE_DTLS_BC_V.SELF_ASSESSED_TAX_FLAG%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_60 IS TABLE OF AP_EXTRACT_INVOICE_DTLS_BC_V.BUS_FLOW_PO_APP_ID%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_61 IS TABLE OF AP_EXTRACT_INVOICE_DTLS_BC_V.BUS_FLOW_PO_DIST_TYPE%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_62 IS TABLE OF AP_EXTRACT_INVOICE_DTLS_BC_V.BUS_FLOW_PO_ENTITY_CODE%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_63 IS TABLE OF AP_EXTRACT_INVOICE_DTLS_BC_V.BUS_FLOW_PO_DIST_ID%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_64 IS TABLE OF AP_EXTRACT_INVOICE_DTLS_BC_V.BUS_FLOW_PO_DOC_ID%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_65 IS TABLE OF AP_EXTRACT_INVOICE_DTLS_BC_V.ENCUMBRANCE_AMOUNT%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_66 IS TABLE OF AP_EXTRACT_INVOICE_DTLS_BC_V.ENCUMBRANCE_BASE_AMOUNT%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_81 IS TABLE OF AP_EXTRACT_INVOICE_DTLS_BC_V.AID_QUANTITY_VARIANCE%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_82 IS TABLE OF AP_EXTRACT_INVOICE_DTLS_BC_V.AID_BASE_QUANTITY_VARIANCE%TYPE INDEX BY BINARY_INTEGER;

l_array_source_6              t_array_source_6;
l_array_source_7              t_array_source_7;
l_array_source_7_meaning      t_array_lookup_meaning;
l_array_source_10              t_array_source_10;
l_array_source_12              t_array_source_12;
l_array_source_12_meaning      t_array_lookup_meaning;
l_array_source_17              t_array_source_17;
l_array_source_17_meaning      t_array_lookup_meaning;
l_array_source_24              t_array_source_24;
l_array_source_33              t_array_source_33;
l_array_source_39              t_array_source_39;
l_array_source_40              t_array_source_40;
l_array_source_41              t_array_source_41;
l_array_source_47              t_array_source_47;
l_array_source_48              t_array_source_48;
l_array_source_49              t_array_source_49;
l_array_source_122              t_array_source_122;
l_array_source_123              t_array_source_123;
l_array_source_124              t_array_source_124;

l_array_source_1      t_array_source_1;
l_array_source_8      t_array_source_8;
l_array_source_9      t_array_source_9;
l_array_source_9_meaning      t_array_lookup_meaning;
l_array_source_11      t_array_source_11;
l_array_source_13      t_array_source_13;
l_array_source_15      t_array_source_15;
l_array_source_15_meaning      t_array_lookup_meaning;
l_array_source_16      t_array_source_16;
l_array_source_18      t_array_source_18;
l_array_source_18_meaning      t_array_lookup_meaning;
l_array_source_19      t_array_source_19;
l_array_source_21      t_array_source_21;
l_array_source_23      t_array_source_23;
l_array_source_25      t_array_source_25;
l_array_source_26      t_array_source_26;
l_array_source_27      t_array_source_27;
l_array_source_28      t_array_source_28;
l_array_source_29      t_array_source_29;
l_array_source_30      t_array_source_30;
l_array_source_31      t_array_source_31;
l_array_source_32      t_array_source_32;
l_array_source_34      t_array_source_34;
l_array_source_35      t_array_source_35;
l_array_source_36      t_array_source_36;
l_array_source_37      t_array_source_37;
l_array_source_38      t_array_source_38;
l_array_source_42      t_array_source_42;
l_array_source_43      t_array_source_43;
l_array_source_44      t_array_source_44;
l_array_source_45      t_array_source_45;
l_array_source_46      t_array_source_46;
l_array_source_46_meaning      t_array_lookup_meaning;
l_array_source_50      t_array_source_50;
l_array_source_51      t_array_source_51;
l_array_source_52      t_array_source_52;
l_array_source_53      t_array_source_53;
l_array_source_54      t_array_source_54;
l_array_source_55      t_array_source_55;
l_array_source_56      t_array_source_56;
l_array_source_58      t_array_source_58;
l_array_source_59      t_array_source_59;
l_array_source_59_meaning      t_array_lookup_meaning;
l_array_source_60      t_array_source_60;
l_array_source_61      t_array_source_61;
l_array_source_62      t_array_source_62;
l_array_source_63      t_array_source_63;
l_array_source_64      t_array_source_64;
l_array_source_65      t_array_source_65;
l_array_source_66      t_array_source_66;
l_array_source_81      t_array_source_81;
l_array_source_82      t_array_source_82;

--
CURSOR header_cur
IS
SELECT /*+ leading(xet) cardinality(xet,1) */
-- Event Class Code: CREDIT MEMOS
    xet.entity_id
   ,xet.legal_entity_id
   ,xet.entity_code
   ,xet.transaction_number
   ,xet.event_id
   ,xet.event_class_code
   ,xet.event_type_code
   ,xet.event_number
   ,xet.event_date
   ,xet.transaction_date
   ,xet.reference_num_1
   ,xet.reference_num_2
   ,xet.reference_num_3
   ,xet.reference_num_4
   ,xet.reference_char_1
   ,xet.reference_char_2
   ,xet.reference_char_3
   ,xet.reference_char_4
   ,xet.reference_date_1
   ,xet.reference_date_2
   ,xet.reference_date_3
   ,xet.reference_date_4
   ,xet.event_created_by
   ,xet.budgetary_control_flag 
  , h3.ASP_RATE_VAR_GAIN_CCID    source_6
  , h3.ASP_AUTOMATIC_OFFSETS_VALUE    source_7
  , fvl7.meaning   source_7_meaning
  , h3.ASP_RATE_VAR_LOSS_CCID    source_10
  , h3.ASP_AUTO_OFFSET_FLAG    source_12
  , fvl12.meaning   source_12_meaning
  , h3.FSP_PURCH_ENCUMBRANCE_FLAG    source_17
  , fvl17.meaning   source_17_meaning
  , h2.AI_INVOICE_ID    source_24
  , h2.AI_INVOICE_CURRENCY_CODE    source_33
  , h2.INV_EXCHANGE_DATE    source_39
  , h2.INV_EXCHANGE_RATE    source_40
  , h2.INV_EXCHANGE_RATE_TYPE    source_41
  , h2.AI_VENDOR_ID    source_47
  , h2.AI_VENDOR_SITE_ID    source_48
  , h2.THIRD_PARTY_TYPE    source_49
  , h2.INV_DOC_SEQUENCE_CATEGORY    source_122
  , h2.INV_DOC_SEQUENCE_IDENTIFIER    source_123
  , h2.INV_DOC_SEQUENCE_VALUE    source_124
  FROM xla_events_gt     xet 
  , AP_INVOICE_EXTRACT_HEADER_V  h2
  , AP_SYSTEM_PARAMETERS_EXTRACT_V  h3
  , fnd_lookup_values    fvl7
  , fnd_lookup_values    fvl12
  , fnd_lookup_values    fvl17
 WHERE xet.event_date between p_pad_start_date and p_pad_end_date
   and xet.event_class_code = C_EVENT_CLASS_CODE
   and xet.event_status_code <> 'N'  AND h2.event_id = xet.event_id
 AND h3.asp_org_id = h2.ai_org_id   AND fvl7.lookup_type(+)         = 'LIABILITY FLEXBUILD METHOD'
  AND fvl7.lookup_code(+)         = h3.ASP_AUTOMATIC_OFFSETS_VALUE
  AND fvl7.view_application_id(+) = 200
  AND fvl7.language(+)            = USERENV('LANG')
     AND fvl12.lookup_type(+)         = 'YES_NO'
  AND fvl12.lookup_code(+)         = h3.ASP_AUTO_OFFSET_FLAG
  AND fvl12.view_application_id(+) = 0
  AND fvl12.language(+)            = USERENV('LANG')
     AND fvl17.lookup_type(+)         = 'YES_NO'
  AND fvl17.lookup_code(+)         = h3.FSP_PURCH_ENCUMBRANCE_FLAG
  AND fvl17.view_application_id(+) = 0
  AND fvl17.language(+)            = USERENV('LANG')
  
 ORDER BY event_id
;


--
CURSOR line_cur (x_first_event_id    in number, x_last_event_id    in number)
IS
SELECT  /*+ leading(xet) cardinality(xet,1) */
-- Event Class Code: CREDIT MEMOS
    xet.entity_id
   ,xet.legal_entity_id
   ,xet.entity_code
   ,xet.transaction_number
   ,xet.event_id
   ,xet.event_class_code
   ,xet.event_type_code
   ,xet.event_number
   ,xet.event_date
   ,xet.transaction_date
   ,xet.reference_num_1
   ,xet.reference_num_2
   ,xet.reference_num_3
   ,xet.reference_num_4
   ,xet.reference_char_1
   ,xet.reference_char_2
   ,xet.reference_char_3
   ,xet.reference_char_4
   ,xet.reference_date_1
   ,xet.reference_date_2
   ,xet.reference_date_3
   ,xet.reference_date_4
   ,xet.event_created_by
   ,xet.budgetary_control_flag
 , l1.LINE_NUMBER  
  , l1.AID_DESCRIPTION    source_1
  , l1.INV_DIST_BASE_AMOUNT    source_8
  , l1.RELATED_INV_DIST_DEST_TYPE    source_9
  , fvl9.meaning   source_9_meaning
  , l1.AID_DIST_CCID    source_11
  , l1.SELF_ASSESSED_TAX_ACCOUNT    source_13
  , l1.AID_LINE_TYPE_LOOKUP_CODE    source_15
  , fvl15.meaning   source_15_meaning
  , l1.AID_AMOUNT_VARIANCE    source_16
  , l1.POD_ACCRUE_ON_RECEIPT_FLAG    source_18
  , fvl18.meaning   source_18_meaning
  , l1.DIST_ACCOUNT_REVERSAL_OPTION    source_19
  , l1.DISTRIBUTION_LINK_TYPE    source_21
  , l1.ALLOC_TO_MAIN_DIST_ID    source_23
  , l1.BUS_FLOW_AP_APP_ID    source_25
  , l1.BUS_FLOW_INV_DIST_TYPE    source_26
  , l1.BUS_FLOW_INV_ENTITY_CODE    source_27
  , l1.BUS_FLOW_INV_DIST_ID    source_28
  , l1.BUS_FLOW_INV_ID    source_29
  , l1.AID_INVOICE_DIST_ID    source_30
  , l1.UPG_ENC_CR_CCID    source_31
  , l1.UPG_ENC_CR_AMT    source_32
  , l1.UPG_ENC_CR_BASE_AMT    source_34
  , l1.UPG_ENC_DR_CCID    source_35
  , l1.UPG_ENC_DR_AMT    source_36
  , l1.UPG_ENC_DR_BASE_AMT    source_37
  , l1.UPG_AP_ENCUM_OPTION    source_38
  , l1.AID_BASE_AMOUNT_VARIANCE    source_42
  , l1.DEFERRED_END_DATE    source_43
  , l1.DEFERRED_OPTION    source_44
  , l1.DEFERRED_START_DATE    source_45
  , l1.OVERRIDE_ACCTD_AMT_FLAG    source_46
  , fvl46.meaning   source_46_meaning
  , l1.AID_PARENT_REVERSAL_ID    source_50
  , l1.AID_STAT_AMOUNT    source_51
  , l4.TAX_LINE_ID    source_52
  , l5.REC_NREC_TAX_DIST_ID    source_53
  , l1.SUMMARY_TAX_LINE_ID    source_54
  , l1.UPG_CR_ENC_TYPE_ID    source_55
  , l1.UPG_DR_ENC_TYPE_ID    source_56
  , l1.PO_DISTRIBUTION_ID    source_58
  , l1.SELF_ASSESSED_TAX_FLAG    source_59
  , fvl59.meaning   source_59_meaning
  , l1.BUS_FLOW_PO_APP_ID    source_60
  , l1.BUS_FLOW_PO_DIST_TYPE    source_61
  , l1.BUS_FLOW_PO_ENTITY_CODE    source_62
  , l1.BUS_FLOW_PO_DIST_ID    source_63
  , l1.BUS_FLOW_PO_DOC_ID    source_64
  , l1.ENCUMBRANCE_AMOUNT    source_65
  , l1.ENCUMBRANCE_BASE_AMOUNT    source_66
  , l1.AID_QUANTITY_VARIANCE    source_81
  , l1.AID_BASE_QUANTITY_VARIANCE    source_82
  FROM xla_events_gt     xet 
  , AP_EXTRACT_INVOICE_DTLS_BC_V  l1
  , ZX_AP_DEF_TAX_EXTRACT_V  l4
  , ZX_AP_TAX_JRNL_LINE_DESC_V  l5
  , fnd_lookup_values    fvl9
  , fnd_lookup_values    fvl15
  , fnd_lookup_values    fvl18
  , fnd_lookup_values    fvl46
  , fnd_lookup_values    fvl59
 WHERE xet.event_id between x_first_event_id and x_last_event_id
   and xet.event_date between p_pad_start_date and p_pad_end_date
   and xet.event_class_code = C_EVENT_CLASS_CODE
   and xet.event_status_code <> 'N'   AND l1.event_id      = xet.event_id
 AND l1.ZRND_tax_dist_id = l4.REC_NREC_TAX_DIST_ID (+)  AND l1.ZRND_tax_dist_id = l5.REC_NREC_TAX_DIST_ID (+)    AND fvl9.lookup_type(+)         = 'DESTINATION TYPE'
  AND fvl9.lookup_code(+)         = l1.RELATED_INV_DIST_DEST_TYPE
  AND fvl9.view_application_id(+) = 201
  AND fvl9.language(+)            = USERENV('LANG')
     AND fvl15.lookup_type(+)         = 'INVOICE DISTRIBUTION TYPE'
  AND fvl15.lookup_code(+)         = l1.AID_LINE_TYPE_LOOKUP_CODE
  AND fvl15.view_application_id(+) = 200
  AND fvl15.language(+)            = USERENV('LANG')
     AND fvl18.lookup_type(+)         = 'YES_NO'
  AND fvl18.lookup_code(+)         = l1.POD_ACCRUE_ON_RECEIPT_FLAG
  AND fvl18.view_application_id(+) = 0
  AND fvl18.language(+)            = USERENV('LANG')
     AND fvl46.lookup_type(+)         = 'YES_NO'
  AND fvl46.lookup_code(+)         = l1.OVERRIDE_ACCTD_AMT_FLAG
  AND fvl46.view_application_id(+) = 0
  AND fvl46.language(+)            = USERENV('LANG')
     AND fvl59.lookup_type(+)         = 'YES_NO'
  AND fvl59.lookup_code(+)         = l1.SELF_ASSESSED_TAX_FLAG
  AND fvl59.view_application_id(+) = 0
  AND fvl59.language(+)            = USERENV('LANG')
  ;

--
BEGIN
IF g_log_enabled THEN
   l_log_module := C_DEFAULT_MODULE||'.EventClass_103';
END IF;
IF (C_LEVEL_PROCEDURE >= g_log_level) THEN
   trace
      (p_msg      => 'BEGIN of EventClass_103'
      ,p_level    => C_LEVEL_PROCEDURE
      ,p_module   => l_log_module);
END IF;

IF (C_LEVEL_STATEMENT >= g_log_level) THEN
   trace
      (p_msg      => 'p_application_id = '||p_application_id||
                     ' - p_base_ledger_id = '||p_base_ledger_id||
                     ' - p_target_ledger_id  = '||p_target_ledger_id||
                     ' - p_language = '||p_language||
                     ' - p_currency_code = '||p_currency_code||
                     ' - p_sla_ledger_id = '||p_sla_ledger_id
      ,p_level    => C_LEVEL_STATEMENT
      ,p_module   => l_log_module);
END IF;
--
-- initialze arrays
--
g_array_event.DELETE;
l_rec_array_event := l_null_rec_array_event;
--
--------------------------------------
-- 4262811 Initialze MPA Line Number
--------------------------------------
XLA_AE_HEADER_PKG.g_mpa_line_num := 0;

--

--
OPEN header_cur;
--
IF (C_LEVEL_STATEMENT >= g_log_level) THEN
   trace
   (p_msg      => 'SQL - FETCH header_cur'
   ,p_level    => C_LEVEL_STATEMENT
   ,p_module   => l_log_module);
END IF;
--
LOOP
FETCH header_cur BULK COLLECT INTO
        l_array_entity_id
      , l_array_legal_entity_id
      , l_array_entity_code
      , l_array_transaction_num
      , l_array_event_id
      , l_array_class_code
      , l_array_event_type
      , l_array_event_number
      , l_array_event_date
      , l_array_transaction_date
      , l_array_reference_num_1
      , l_array_reference_num_2
      , l_array_reference_num_3
      , l_array_reference_num_4
      , l_array_reference_char_1
      , l_array_reference_char_2
      , l_array_reference_char_3
      , l_array_reference_char_4
      , l_array_reference_date_1
      , l_array_reference_date_2
      , l_array_reference_date_3
      , l_array_reference_date_4
      , l_array_event_created_by
      , l_array_budgetary_control_flag 
      , l_array_source_6
      , l_array_source_7
      , l_array_source_7_meaning
      , l_array_source_10
      , l_array_source_12
      , l_array_source_12_meaning
      , l_array_source_17
      , l_array_source_17_meaning
      , l_array_source_24
      , l_array_source_33
      , l_array_source_39
      , l_array_source_40
      , l_array_source_41
      , l_array_source_47
      , l_array_source_48
      , l_array_source_49
      , l_array_source_122
      , l_array_source_123
      , l_array_source_124
      LIMIT l_rows;
--
IF (C_LEVEL_EVENT >= g_log_level) THEN
   trace
   (p_msg      => '# rows extracted from header extract objects = '||TO_CHAR(header_cur%ROWCOUNT)
   ,p_level    => C_LEVEL_EVENT
   ,p_module   => l_log_module);
END IF;
--
EXIT WHEN l_array_entity_id.COUNT = 0;

-- initialize arrays
XLA_AE_HEADER_PKG.g_rec_header_new        := NULL;
XLA_AE_LINES_PKG.g_rec_lines              := NULL;

--
-- Bug 4458708
--
XLA_AE_LINES_PKG.g_LineNumber := 0;


-- 4262811 - when creating Accrual Reversal or MPA, use g_last_hdr_idx to increment for next header id
g_last_hdr_idx := l_array_event_id.LAST;
--
-- loop for the headers. Each iteration is for each header extract row
-- fetched in header cursor
--
FOR hdr_idx IN l_array_event_id.FIRST .. l_array_event_id.LAST LOOP

--
-- set event info as cache for other routines to refer event attributes
--
XLA_AE_JOURNAL_ENTRY_PKG.set_event_info
   (p_application_id           => p_application_id
   ,p_primary_ledger_id        => p_primary_ledger_id
   ,p_base_ledger_id           => p_base_ledger_id
   ,p_target_ledger_id         => p_target_ledger_id
   ,p_entity_id                => l_array_entity_id(hdr_idx)
   ,p_legal_entity_id          => l_array_legal_entity_id(hdr_idx)
   ,p_entity_code              => l_array_entity_code(hdr_idx)
   ,p_transaction_num          => l_array_transaction_num(hdr_idx)
   ,p_event_id                 => l_array_event_id(hdr_idx)
   ,p_event_class_code         => l_array_class_code(hdr_idx)
   ,p_event_type_code          => l_array_event_type(hdr_idx)
   ,p_event_number             => l_array_event_number(hdr_idx)
   ,p_event_date               => l_array_event_date(hdr_idx)
   ,p_transaction_date         => l_array_transaction_date(hdr_idx)
   ,p_reference_num_1          => l_array_reference_num_1(hdr_idx)
   ,p_reference_num_2          => l_array_reference_num_2(hdr_idx)
   ,p_reference_num_3          => l_array_reference_num_3(hdr_idx)
   ,p_reference_num_4          => l_array_reference_num_4(hdr_idx)
   ,p_reference_char_1         => l_array_reference_char_1(hdr_idx)
   ,p_reference_char_2         => l_array_reference_char_2(hdr_idx)
   ,p_reference_char_3         => l_array_reference_char_3(hdr_idx)
   ,p_reference_char_4         => l_array_reference_char_4(hdr_idx)
   ,p_reference_date_1         => l_array_reference_date_1(hdr_idx)
   ,p_reference_date_2         => l_array_reference_date_2(hdr_idx)
   ,p_reference_date_3         => l_array_reference_date_3(hdr_idx)
   ,p_reference_date_4         => l_array_reference_date_4(hdr_idx)
   ,p_event_created_by         => l_array_event_created_by(hdr_idx)
   ,p_budgetary_control_flag   => l_array_budgetary_control_flag(hdr_idx));

--
-- set the status of entry to C_VALID (0)
--
XLA_AE_JOURNAL_ENTRY_PKG.g_global_status    := XLA_AE_JOURNAL_ENTRY_PKG.C_VALID;

--
-- initialize a row for ae header
--
XLA_AE_HEADER_PKG.InitHeader(hdr_idx);

l_event_id := l_array_event_id(hdr_idx);

--
-- storing the hdr_idx for event. May be used by line cursor.
--
g_array_event(l_event_id).array_value_num('header_index') := hdr_idx;

--
-- store sources from header extract. This can be improved to
-- store only those sources from header extract that may be used in lines
--

g_array_event(l_event_id).array_value_num('source_6') := l_array_source_6(hdr_idx);
g_array_event(l_event_id).array_value_char('source_7') := l_array_source_7(hdr_idx);
g_array_event(l_event_id).array_value_char('source_7_meaning') := l_array_source_7_meaning(hdr_idx);
g_array_event(l_event_id).array_value_num('source_10') := l_array_source_10(hdr_idx);
g_array_event(l_event_id).array_value_char('source_12') := l_array_source_12(hdr_idx);
g_array_event(l_event_id).array_value_char('source_12_meaning') := l_array_source_12_meaning(hdr_idx);
g_array_event(l_event_id).array_value_char('source_17') := l_array_source_17(hdr_idx);
g_array_event(l_event_id).array_value_char('source_17_meaning') := l_array_source_17_meaning(hdr_idx);
g_array_event(l_event_id).array_value_num('source_24') := l_array_source_24(hdr_idx);
g_array_event(l_event_id).array_value_char('source_33') := l_array_source_33(hdr_idx);
g_array_event(l_event_id).array_value_date('source_39') := l_array_source_39(hdr_idx);
g_array_event(l_event_id).array_value_num('source_40') := l_array_source_40(hdr_idx);
g_array_event(l_event_id).array_value_char('source_41') := l_array_source_41(hdr_idx);
g_array_event(l_event_id).array_value_num('source_47') := l_array_source_47(hdr_idx);
g_array_event(l_event_id).array_value_num('source_48') := l_array_source_48(hdr_idx);
g_array_event(l_event_id).array_value_char('source_49') := l_array_source_49(hdr_idx);
g_array_event(l_event_id).array_value_char('source_122') := l_array_source_122(hdr_idx);
g_array_event(l_event_id).array_value_num('source_123') := l_array_source_123(hdr_idx);
g_array_event(l_event_id).array_value_num('source_124') := l_array_source_124(hdr_idx);

--
-- initilaize the status of ae headers for diffrent balance types
-- the status is initialised to C_NOT_CREATED (2)
--
--g_array_event(l_event_id).array_value_num('actual_je_status') := XLA_AE_JOURNAL_ENTRY_PKG.C_NOT_CREATED;
--g_array_event(l_event_id).array_value_num('budget_je_status') := XLA_AE_JOURNAL_ENTRY_PKG.C_NOT_CREATED;
--g_array_event(l_event_id).array_value_num('encumbrance_je_status') := XLA_AE_JOURNAL_ENTRY_PKG.C_NOT_CREATED;

--
-- call api to validate and store accounting attributes for header
--

------------------------------------------------------------
-- Accrual Reversal : to get date for Standard Source (NONE)
------------------------------------------------------------
l_acc_rev_gl_date_source := NULL;

     l_rec_acct_attrs.array_acct_attr_code(1)   := 'DOC_CATEGORY_CODE';
      l_rec_acct_attrs.array_char_value(1) := g_array_event(l_event_id).array_value_char('source_122');
     l_rec_acct_attrs.array_acct_attr_code(2)   := 'DOC_SEQUENCE_ID';
      l_rec_acct_attrs.array_num_value(2) := g_array_event(l_event_id).array_value_num('source_123');
     l_rec_acct_attrs.array_acct_attr_code(3)   := 'DOC_SEQUENCE_VALUE';
      l_rec_acct_attrs.array_num_value(3) := g_array_event(l_event_id).array_value_num('source_124');
     l_rec_acct_attrs.array_acct_attr_code(4)   := 'GL_DATE';
      l_rec_acct_attrs.array_date_value(4) := 
xla_ae_sources_pkg.GetSystemSourceDate(
   p_source_code           => 'XLA_EVENT_DATE'
 , p_source_type_code      => 'Y'
 , p_source_application_id =>  602
);


XLA_AE_HEADER_PKG.SetHdrAcctAttrs(l_rec_acct_attrs);

XLA_AE_HEADER_PKG.SetJeCategoryName;

XLA_AE_HEADER_PKG.g_rec_header_new.array_event_type_code(hdr_idx)  := l_array_event_type(hdr_idx);
XLA_AE_HEADER_PKG.g_rec_header_new.array_event_id(hdr_idx)         := l_array_event_id(hdr_idx);
XLA_AE_HEADER_PKG.g_rec_header_new.array_entity_id(hdr_idx)        := l_array_entity_id(hdr_idx);
XLA_AE_HEADER_PKG.g_rec_header_new.array_event_number(hdr_idx)     := l_array_event_number(hdr_idx);
XLA_AE_HEADER_PKG.g_rec_header_new.array_target_ledger_id(hdr_idx) := p_target_ledger_id;


--
xla_ae_header_pkg.SetHdrDescription(
   p_description => Description_1 (
   p_application_id => p_application_id 
   )
);
--

-- No header level analytical criteria

--
--accounting attribute enhancement, bug 3612931
--
l_trx_reversal_source := SUBSTR(NULL, 1,30);

IF NVL(l_trx_reversal_source, 'N') NOT IN ('N','Y') THEN
   xla_ae_journal_entry_pkg.g_global_status      :=  xla_ae_journal_entry_pkg.C_INVALID;

   xla_accounting_err_pkg.build_message
      (p_appli_s_name            => 'XLA'
      ,p_msg_name                => 'XLA_AP_INVALID_HDR_ATTR'
      ,p_token_1                 => 'ACCT_ATTR_NAME'
      ,p_value_1                 => xla_ae_sources_pkg.GetAccountingSourceName('TRX_ACCT_REVERSAL_OPTION')
      ,p_token_2                 => 'PRODUCT_NAME'
      ,p_value_2                 => xla_ae_journal_entry_pkg.g_cache_event.application_name
      ,p_entity_id               => xla_ae_journal_entry_pkg.g_cache_event.entity_id
      ,p_event_id                => xla_ae_journal_entry_pkg.g_cache_event.event_id
      ,p_ledger_id               => xla_ae_journal_entry_pkg.g_cache_event.target_ledger_id);

ELSIF NVL(l_trx_reversal_source, 'N') = 'Y' THEN
   --
   -- following sets the accounting attributes needed to reverse
   -- accounting for a distributeion
   --
   xla_ae_lines_pkg.SetTrxReversalAttrs
      (p_event_id              => l_event_id
      ,p_gl_date               => XLA_AE_HEADER_PKG.g_rec_header_new.array_gl_date(hdr_idx)
      ,p_trx_reversal_source   => l_trx_reversal_source);

END IF;


----------------------------------------------------------------
-- 4262811 -  update the header statuses to invalid in need be
----------------------------------------------------------------
--
XLA_AE_JOURNAL_ENTRY_PKG.UpdateJournalEntryStatus (p_hdr_idx => hdr_idx);


  -----------------------------------------------
  -- No accrual reversal for the event class/type
  -----------------------------------------------
----------------------------------------------------------------

--
-- this ends the header loop iteration for one bulk fetch
--
END LOOP;

l_first_event_id   := l_array_event_id(l_array_event_id.FIRST);
l_last_event_id    := l_array_event_id(l_array_event_id.LAST);

--
-- insert dummy rows into lines gt table that were created due to
-- transaction reversals
--
IF XLA_AE_LINES_PKG.g_rec_lines.array_ae_header_id.COUNT > 0 THEN
   l_result := XLA_AE_LINES_PKG.InsertLines;
END IF;

--
-- reset the temp_line_num for each set of events fetched from header
-- cursor rather than doing it for each new event in line cursor
-- Bug 3939231
--
xla_ae_lines_pkg.g_temp_line_num := 0;



--
OPEN line_cur(x_first_event_id  => l_first_event_id, x_last_event_id  => l_last_event_id);
--
--
IF (C_LEVEL_STATEMENT >= g_log_level) THEN

      trace
         (p_msg      => 'SQL - FETCH line_cur'
         ,p_level    => C_LEVEL_STATEMENT
         ,p_module   => l_log_module);

END IF;
--
--
LOOP
  --
  FETCH line_cur BULK COLLECT INTO
        l_array_entity_id
      , l_array_legal_entity_id
      , l_array_entity_code
      , l_array_transaction_num
      , l_array_event_id
      , l_array_class_code
      , l_array_event_type
      , l_array_event_number
      , l_array_event_date
      , l_array_transaction_date
      , l_array_reference_num_1
      , l_array_reference_num_2
      , l_array_reference_num_3
      , l_array_reference_num_4
      , l_array_reference_char_1
      , l_array_reference_char_2
      , l_array_reference_char_3
      , l_array_reference_char_4
      , l_array_reference_date_1
      , l_array_reference_date_2
      , l_array_reference_date_3
      , l_array_reference_date_4
      , l_array_event_created_by
      , l_array_budgetary_control_flag
      , l_array_extract_line_num 
      , l_array_source_1
      , l_array_source_8
      , l_array_source_9
      , l_array_source_9_meaning
      , l_array_source_11
      , l_array_source_13
      , l_array_source_15
      , l_array_source_15_meaning
      , l_array_source_16
      , l_array_source_18
      , l_array_source_18_meaning
      , l_array_source_19
      , l_array_source_21
      , l_array_source_23
      , l_array_source_25
      , l_array_source_26
      , l_array_source_27
      , l_array_source_28
      , l_array_source_29
      , l_array_source_30
      , l_array_source_31
      , l_array_source_32
      , l_array_source_34
      , l_array_source_35
      , l_array_source_36
      , l_array_source_37
      , l_array_source_38
      , l_array_source_42
      , l_array_source_43
      , l_array_source_44
      , l_array_source_45
      , l_array_source_46
      , l_array_source_46_meaning
      , l_array_source_50
      , l_array_source_51
      , l_array_source_52
      , l_array_source_53
      , l_array_source_54
      , l_array_source_55
      , l_array_source_56
      , l_array_source_58
      , l_array_source_59
      , l_array_source_59_meaning
      , l_array_source_60
      , l_array_source_61
      , l_array_source_62
      , l_array_source_63
      , l_array_source_64
      , l_array_source_65
      , l_array_source_66
      , l_array_source_81
      , l_array_source_82
      LIMIT l_rows;

  --
  IF (C_LEVEL_EVENT >= g_log_level) THEN
            trace
               (p_msg      => '# rows extracted from line extract objects = '||TO_CHAR(line_cur%ROWCOUNT)
               ,p_level    => C_LEVEL_EVENT
               ,p_module   => l_log_module);
  END IF;
  --
  EXIT WHEN l_array_entity_id.count = 0;

  XLA_AE_LINES_PKG.g_rec_lines := null;

--
-- Bug 4458708
--
XLA_AE_LINES_PKG.g_LineNumber := 0;
--
--

FOR Idx IN 1..l_array_event_id.count LOOP
   --
   -- 5648433 (move l_event_id out of IF statement)  set l_event_id to be used inside IF condition
   --
   l_event_id := l_array_event_id(idx);  -- 5648433

   --
   -- Bug 4872078 - Do nothing if the event is meant for transaction reversal
   --

   IF NVL(xla_ae_header_pkg.g_rec_header_new.array_trx_acct_reversal_option
             (g_array_event(l_event_id).array_value_num('header_index'))
         ,'N'
         ) <> 'Y'
   THEN
      IF (C_LEVEL_STATEMENT >= g_log_level) THEN
         trace
            (p_msg      => 'Trancaction revesal option is not Y '
            ,p_level    => C_LEVEL_STATEMENT
            ,p_module   => l_log_module);
      END IF;

--
-- set the XLA_AE_JOURNAL_ENTRY_PKG.g_global_status to C_VALID (0)
--
XLA_AE_JOURNAL_ENTRY_PKG.g_global_status := XLA_AE_JOURNAL_ENTRY_PKG.C_VALID;
--
-- set event info as cache for other routines to refer event attributes
--

IF l_event_id <> NVL(l_previous_event_id, -1) THEN
   l_previous_event_id := l_event_id;

   XLA_AE_JOURNAL_ENTRY_PKG.set_event_info
      (p_application_id           => p_application_id
      ,p_primary_ledger_id        => p_primary_ledger_id
      ,p_base_ledger_id           => p_base_ledger_id
      ,p_target_ledger_id         => p_target_ledger_id
      ,p_entity_id                => l_array_entity_id(Idx)
      ,p_legal_entity_id          => l_array_legal_entity_id(Idx)
      ,p_entity_code              => l_array_entity_code(Idx)
      ,p_transaction_num          => l_array_transaction_num(Idx)
      ,p_event_id                 => l_array_event_id(Idx)
      ,p_event_class_code         => l_array_class_code(Idx)
      ,p_event_type_code          => l_array_event_type(Idx)
      ,p_event_number             => l_array_event_number(Idx)
      ,p_event_date               => l_array_event_date(Idx)
      ,p_transaction_date         => l_array_transaction_date(Idx)
      ,p_reference_num_1          => l_array_reference_num_1(Idx)
      ,p_reference_num_2          => l_array_reference_num_2(Idx)
      ,p_reference_num_3          => l_array_reference_num_3(Idx)
      ,p_reference_num_4          => l_array_reference_num_4(Idx)
      ,p_reference_char_1         => l_array_reference_char_1(Idx)
      ,p_reference_char_2         => l_array_reference_char_2(Idx)
      ,p_reference_char_3         => l_array_reference_char_3(Idx)
      ,p_reference_char_4         => l_array_reference_char_4(Idx)
      ,p_reference_date_1         => l_array_reference_date_1(Idx)
      ,p_reference_date_2         => l_array_reference_date_2(Idx)
      ,p_reference_date_3         => l_array_reference_date_3(Idx)
      ,p_reference_date_4         => l_array_reference_date_4(Idx)
      ,p_event_created_by         => l_array_event_created_by(Idx)
      ,p_budgetary_control_flag   => l_array_budgetary_control_flag(Idx));
       --
END IF;



--
xla_ae_lines_pkg.SetExtractLine(p_extract_line => l_array_extract_line_num(Idx));

l_acct_reversal_source := SUBSTR(l_array_source_19(Idx), 1,30);

IF l_continue_with_lines THEN
   IF NVL(l_acct_reversal_source, 'N') NOT IN ('N','Y','B') THEN
      xla_ae_journal_entry_pkg.g_global_status      :=  xla_ae_journal_entry_pkg.C_INVALID;

      xla_accounting_err_pkg.build_message
         (p_appli_s_name            => 'XLA'
         ,p_msg_name                => 'XLA_AP_INVALID_REVERSAL_OPTION'
         ,p_token_1                 => 'LINE_NUMBER'
         ,p_value_1                 => l_array_extract_line_num(Idx)
         ,p_token_2                 => 'PRODUCT_NAME'
         ,p_value_2                 => xla_ae_journal_entry_pkg.g_cache_event.application_name
         ,p_entity_id               => xla_ae_journal_entry_pkg.g_cache_event.entity_id
         ,p_event_id                => xla_ae_journal_entry_pkg.g_cache_event.event_id
         ,p_ledger_id               => xla_ae_journal_entry_pkg.g_cache_event.target_ledger_id);

   ELSIF NVL(l_acct_reversal_source, 'N') IN ('Y','B') THEN
      --
      -- following sets the accounting attributes needed to reverse
      -- accounting for a distributeion
      --

      --
      -- 5217187
      --
      l_rec_rev_acct_attrs.array_acct_attr_code(1):= 'GL_DATE';
      l_rec_rev_acct_attrs.array_date_value(1) := XLA_AE_HEADER_PKG.g_rec_header_new.array_gl_date(
                                       g_array_event(l_event_id).array_value_num('header_index'));
      --
      --

      l_rec_rev_acct_attrs.array_acct_attr_code(2) := 'ACCOUNTING_REVERSAL_OPTION';
      l_rec_rev_acct_attrs.array_char_value(2)  := l_array_source_19(Idx);
      l_rec_rev_acct_attrs.array_acct_attr_code(3) := 'DISTRIBUTION_IDENTIFIER_1';
      l_rec_rev_acct_attrs.array_num_value(3)  := l_array_source_30(Idx);
      l_rec_rev_acct_attrs.array_acct_attr_code(4) := 'DISTRIBUTION_TYPE';
      l_rec_rev_acct_attrs.array_char_value(4)  := l_array_source_21(Idx);
      l_rec_rev_acct_attrs.array_acct_attr_code(5) := 'ENC_UPG_CR_CCID';
      l_rec_rev_acct_attrs.array_num_value(5)  := l_array_source_31(Idx);
      l_rec_rev_acct_attrs.array_acct_attr_code(6) := 'ENC_UPG_CR_ENTERED_AMT';
      l_rec_rev_acct_attrs.array_num_value(6)  := l_array_source_32(Idx);
      l_rec_rev_acct_attrs.array_acct_attr_code(7) := 'ENC_UPG_CR_ENTERED_CURR';
      l_rec_rev_acct_attrs.array_char_value(7)  := g_array_event(l_event_id).array_value_char('source_33');
      l_rec_rev_acct_attrs.array_acct_attr_code(8) := 'ENC_UPG_CR_LEDGER_AMT';
      l_rec_rev_acct_attrs.array_num_value(8)  := l_array_source_34(Idx);
      l_rec_rev_acct_attrs.array_acct_attr_code(9) := 'ENC_UPG_DR_CCID';
      l_rec_rev_acct_attrs.array_num_value(9)  := l_array_source_35(Idx);
      l_rec_rev_acct_attrs.array_acct_attr_code(10) := 'ENC_UPG_DR_ENTERED_AMT';
      l_rec_rev_acct_attrs.array_num_value(10)  := l_array_source_36(Idx);
      l_rec_rev_acct_attrs.array_acct_attr_code(11) := 'ENC_UPG_DR_ENTERED_CURR';
      l_rec_rev_acct_attrs.array_char_value(11)  := g_array_event(l_event_id).array_value_char('source_33');
      l_rec_rev_acct_attrs.array_acct_attr_code(12) := 'ENC_UPG_DR_LEDGER_AMT';
      l_rec_rev_acct_attrs.array_num_value(12)  := l_array_source_37(Idx);
      l_rec_rev_acct_attrs.array_acct_attr_code(13) := 'ENC_UPG_OPTION';
      l_rec_rev_acct_attrs.array_char_value(13)  := l_array_source_38(Idx);
      l_rec_rev_acct_attrs.array_acct_attr_code(14) := 'PARTY_TYPE';
      l_rec_rev_acct_attrs.array_char_value(14)  := g_array_event(l_event_id).array_value_char('source_49');
      l_rec_rev_acct_attrs.array_acct_attr_code(15) := 'REVERSED_DISTRIBUTION_ID1';
      l_rec_rev_acct_attrs.array_num_value(15)  := l_array_source_50(Idx);
      l_rec_rev_acct_attrs.array_acct_attr_code(16) := 'REVERSED_DISTRIBUTION_TYPE';
      l_rec_rev_acct_attrs.array_char_value(16)  := l_array_source_21(Idx);
      l_rec_rev_acct_attrs.array_acct_attr_code(17) := 'TAX_LINE_REF_ID';
      l_rec_rev_acct_attrs.array_num_value(17)  := l_array_source_52(Idx);
      l_rec_rev_acct_attrs.array_acct_attr_code(18) := 'TAX_REC_NREC_DIST_REF_ID';
      l_rec_rev_acct_attrs.array_num_value(18)  := l_array_source_53(Idx);
      l_rec_rev_acct_attrs.array_acct_attr_code(19) := 'TAX_SUMMARY_LINE_REF_ID';
      l_rec_rev_acct_attrs.array_num_value(19)  := l_array_source_54(Idx);
      l_rec_rev_acct_attrs.array_acct_attr_code(20) := 'UPG_CR_ENC_TYPE_ID';
      l_rec_rev_acct_attrs.array_num_value(20)  := l_array_source_55(Idx);
      l_rec_rev_acct_attrs.array_acct_attr_code(21) := 'UPG_DR_ENC_TYPE_ID';
      l_rec_rev_acct_attrs.array_num_value(21)  := l_array_source_56(Idx);


      xla_ae_lines_pkg.SetAcctReversalAttrs
         (p_event_id             => l_event_id
         ,p_rec_acct_attrs       => l_rec_rev_acct_attrs
         ,p_calculate_acctd_flag => l_calculate_acctd_flag
         ,p_calculate_g_l_flag   => l_calculate_g_l_flag);
   END IF;

   IF NVL(l_acct_reversal_source, 'N') IN ('N','B') THEN
       l_actual_flag := NULL;  l_actual_gain_loss_ref := '#####';

--
AcctLineType_14 (
 p_application_id  => p_application_id
 ,p_event_id     => l_event_id
 ,p_calculate_acctd_flag => l_calculate_acctd_flag
 ,p_calculate_g_l_flag => l_calculate_g_l_flag
 ,p_actual_flag => l_actual_flag
 ,p_balance_type_code => l_balance_type_code
 ,p_gain_or_loss_ref=> l_gain_or_loss_ref
 
 , p_source_1 => l_array_source_1(Idx)
 , p_source_11 => l_array_source_11(Idx)
 , p_source_15 => l_array_source_15(Idx)
 , p_source_15_meaning => l_array_source_15_meaning(Idx)
 , p_source_16 => l_array_source_16(Idx)
 , p_source_17 => g_array_event(l_event_id).array_value_char('source_17')
 , p_source_17_meaning => g_array_event(l_event_id).array_value_char('source_17_meaning')
 , p_source_18 => l_array_source_18(Idx)
 , p_source_18_meaning => l_array_source_18_meaning(Idx)
 , p_source_19 => l_array_source_19(Idx)
 , p_source_21 => l_array_source_21(Idx)
 , p_source_23 => l_array_source_23(Idx)
 , p_source_24 => g_array_event(l_event_id).array_value_num('source_24')
 , p_source_25 => l_array_source_25(Idx)
 , p_source_26 => l_array_source_26(Idx)
 , p_source_27 => l_array_source_27(Idx)
 , p_source_28 => l_array_source_28(Idx)
 , p_source_29 => l_array_source_29(Idx)
 , p_source_30 => l_array_source_30(Idx)
 , p_source_31 => l_array_source_31(Idx)
 , p_source_32 => l_array_source_32(Idx)
 , p_source_33 => g_array_event(l_event_id).array_value_char('source_33')
 , p_source_34 => l_array_source_34(Idx)
 , p_source_35 => l_array_source_35(Idx)
 , p_source_36 => l_array_source_36(Idx)
 , p_source_37 => l_array_source_37(Idx)
 , p_source_38 => l_array_source_38(Idx)
 , p_source_39 => g_array_event(l_event_id).array_value_date('source_39')
 , p_source_40 => g_array_event(l_event_id).array_value_num('source_40')
 , p_source_41 => g_array_event(l_event_id).array_value_char('source_41')
 , p_source_42 => l_array_source_42(Idx)
 , p_source_43 => l_array_source_43(Idx)
 , p_source_44 => l_array_source_44(Idx)
 , p_source_45 => l_array_source_45(Idx)
 , p_source_46 => l_array_source_46(Idx)
 , p_source_46_meaning => l_array_source_46_meaning(Idx)
 , p_source_47 => g_array_event(l_event_id).array_value_num('source_47')
 , p_source_48 => g_array_event(l_event_id).array_value_num('source_48')
 , p_source_49 => g_array_event(l_event_id).array_value_char('source_49')
 , p_source_50 => l_array_source_50(Idx)
 , p_source_51 => l_array_source_51(Idx)
 , p_source_52 => l_array_source_52(Idx)
 , p_source_53 => l_array_source_53(Idx)
 , p_source_54 => l_array_source_54(Idx)
 , p_source_55 => l_array_source_55(Idx)
 , p_source_56 => l_array_source_56(Idx)
 );
If(l_balance_type_code = 'A') THEN
  l_actual_gain_loss_ref := l_gain_or_loss_ref;
END IF;

--


--
AcctLineType_18 (
 p_application_id  => p_application_id
 ,p_event_id     => l_event_id
 ,p_calculate_acctd_flag => l_calculate_acctd_flag
 ,p_calculate_g_l_flag => l_calculate_g_l_flag
 ,p_actual_flag => l_actual_flag
 ,p_balance_type_code => l_balance_type_code
 ,p_gain_or_loss_ref=> l_gain_or_loss_ref
 
 , p_source_15 => l_array_source_15(Idx)
 , p_source_15_meaning => l_array_source_15_meaning(Idx)
 , p_source_18 => l_array_source_18(Idx)
 , p_source_18_meaning => l_array_source_18_meaning(Idx)
 , p_source_19 => l_array_source_19(Idx)
 , p_source_21 => l_array_source_21(Idx)
 , p_source_23 => l_array_source_23(Idx)
 , p_source_24 => g_array_event(l_event_id).array_value_num('source_24')
 , p_source_30 => l_array_source_30(Idx)
 , p_source_31 => l_array_source_31(Idx)
 , p_source_32 => l_array_source_32(Idx)
 , p_source_33 => g_array_event(l_event_id).array_value_char('source_33')
 , p_source_34 => l_array_source_34(Idx)
 , p_source_35 => l_array_source_35(Idx)
 , p_source_36 => l_array_source_36(Idx)
 , p_source_37 => l_array_source_37(Idx)
 , p_source_38 => l_array_source_38(Idx)
 , p_source_43 => l_array_source_43(Idx)
 , p_source_44 => l_array_source_44(Idx)
 , p_source_45 => l_array_source_45(Idx)
 , p_source_46 => l_array_source_46(Idx)
 , p_source_46_meaning => l_array_source_46_meaning(Idx)
 , p_source_49 => g_array_event(l_event_id).array_value_char('source_49')
 , p_source_50 => l_array_source_50(Idx)
 , p_source_51 => l_array_source_51(Idx)
 , p_source_52 => l_array_source_52(Idx)
 , p_source_53 => l_array_source_53(Idx)
 , p_source_54 => l_array_source_54(Idx)
 , p_source_55 => l_array_source_55(Idx)
 , p_source_56 => l_array_source_56(Idx)
 , p_source_58 => l_array_source_58(Idx)
 , p_source_59 => l_array_source_59(Idx)
 , p_source_59_meaning => l_array_source_59_meaning(Idx)
 , p_source_60 => l_array_source_60(Idx)
 , p_source_61 => l_array_source_61(Idx)
 , p_source_62 => l_array_source_62(Idx)
 , p_source_63 => l_array_source_63(Idx)
 , p_source_64 => l_array_source_64(Idx)
 , p_source_65 => l_array_source_65(Idx)
 , p_source_66 => l_array_source_66(Idx)
 );
If(l_balance_type_code = 'A') THEN
  l_actual_gain_loss_ref := l_gain_or_loss_ref;
END IF;

--


--
AcctLineType_19 (
 p_application_id  => p_application_id
 ,p_event_id     => l_event_id
 ,p_calculate_acctd_flag => l_calculate_acctd_flag
 ,p_calculate_g_l_flag => l_calculate_g_l_flag
 ,p_actual_flag => l_actual_flag
 ,p_balance_type_code => l_balance_type_code
 ,p_gain_or_loss_ref=> l_gain_or_loss_ref
 
 , p_source_15 => l_array_source_15(Idx)
 , p_source_15_meaning => l_array_source_15_meaning(Idx)
 , p_source_18 => l_array_source_18(Idx)
 , p_source_18_meaning => l_array_source_18_meaning(Idx)
 , p_source_19 => l_array_source_19(Idx)
 , p_source_21 => l_array_source_21(Idx)
 , p_source_23 => l_array_source_23(Idx)
 , p_source_24 => g_array_event(l_event_id).array_value_num('source_24')
 , p_source_30 => l_array_source_30(Idx)
 , p_source_31 => l_array_source_31(Idx)
 , p_source_32 => l_array_source_32(Idx)
 , p_source_33 => g_array_event(l_event_id).array_value_char('source_33')
 , p_source_34 => l_array_source_34(Idx)
 , p_source_35 => l_array_source_35(Idx)
 , p_source_36 => l_array_source_36(Idx)
 , p_source_37 => l_array_source_37(Idx)
 , p_source_38 => l_array_source_38(Idx)
 , p_source_43 => l_array_source_43(Idx)
 , p_source_44 => l_array_source_44(Idx)
 , p_source_45 => l_array_source_45(Idx)
 , p_source_46 => l_array_source_46(Idx)
 , p_source_46_meaning => l_array_source_46_meaning(Idx)
 , p_source_49 => g_array_event(l_event_id).array_value_char('source_49')
 , p_source_50 => l_array_source_50(Idx)
 , p_source_51 => l_array_source_51(Idx)
 , p_source_52 => l_array_source_52(Idx)
 , p_source_53 => l_array_source_53(Idx)
 , p_source_54 => l_array_source_54(Idx)
 , p_source_55 => l_array_source_55(Idx)
 , p_source_56 => l_array_source_56(Idx)
 , p_source_58 => l_array_source_58(Idx)
 , p_source_60 => l_array_source_60(Idx)
 , p_source_61 => l_array_source_61(Idx)
 , p_source_62 => l_array_source_62(Idx)
 , p_source_63 => l_array_source_63(Idx)
 , p_source_64 => l_array_source_64(Idx)
 , p_source_65 => l_array_source_65(Idx)
 , p_source_66 => l_array_source_66(Idx)
 );
If(l_balance_type_code = 'A') THEN
  l_actual_gain_loss_ref := l_gain_or_loss_ref;
END IF;

--


--
AcctLineType_22 (
 p_application_id  => p_application_id
 ,p_event_id     => l_event_id
 ,p_calculate_acctd_flag => l_calculate_acctd_flag
 ,p_calculate_g_l_flag => l_calculate_g_l_flag
 ,p_actual_flag => l_actual_flag
 ,p_balance_type_code => l_balance_type_code
 ,p_gain_or_loss_ref=> l_gain_or_loss_ref
 
 , p_source_1 => l_array_source_1(Idx)
 , p_source_6 => g_array_event(l_event_id).array_value_num('source_6')
 , p_source_7 => g_array_event(l_event_id).array_value_char('source_7')
 , p_source_7_meaning => g_array_event(l_event_id).array_value_char('source_7_meaning')
 , p_source_8 => l_array_source_8(Idx)
 , p_source_9 => l_array_source_9(Idx)
 , p_source_9_meaning => l_array_source_9_meaning(Idx)
 , p_source_10 => g_array_event(l_event_id).array_value_num('source_10')
 , p_source_11 => l_array_source_11(Idx)
 , p_source_12 => g_array_event(l_event_id).array_value_char('source_12')
 , p_source_12_meaning => g_array_event(l_event_id).array_value_char('source_12_meaning')
 , p_source_15 => l_array_source_15(Idx)
 , p_source_15_meaning => l_array_source_15_meaning(Idx)
 , p_source_17 => g_array_event(l_event_id).array_value_char('source_17')
 , p_source_17_meaning => g_array_event(l_event_id).array_value_char('source_17_meaning')
 , p_source_19 => l_array_source_19(Idx)
 , p_source_21 => l_array_source_21(Idx)
 , p_source_23 => l_array_source_23(Idx)
 , p_source_24 => g_array_event(l_event_id).array_value_num('source_24')
 , p_source_25 => l_array_source_25(Idx)
 , p_source_26 => l_array_source_26(Idx)
 , p_source_27 => l_array_source_27(Idx)
 , p_source_28 => l_array_source_28(Idx)
 , p_source_29 => l_array_source_29(Idx)
 , p_source_30 => l_array_source_30(Idx)
 , p_source_31 => l_array_source_31(Idx)
 , p_source_32 => l_array_source_32(Idx)
 , p_source_33 => g_array_event(l_event_id).array_value_char('source_33')
 , p_source_34 => l_array_source_34(Idx)
 , p_source_35 => l_array_source_35(Idx)
 , p_source_36 => l_array_source_36(Idx)
 , p_source_37 => l_array_source_37(Idx)
 , p_source_38 => l_array_source_38(Idx)
 , p_source_39 => g_array_event(l_event_id).array_value_date('source_39')
 , p_source_40 => g_array_event(l_event_id).array_value_num('source_40')
 , p_source_41 => g_array_event(l_event_id).array_value_char('source_41')
 , p_source_43 => l_array_source_43(Idx)
 , p_source_44 => l_array_source_44(Idx)
 , p_source_45 => l_array_source_45(Idx)
 , p_source_46 => l_array_source_46(Idx)
 , p_source_46_meaning => l_array_source_46_meaning(Idx)
 , p_source_47 => g_array_event(l_event_id).array_value_num('source_47')
 , p_source_48 => g_array_event(l_event_id).array_value_num('source_48')
 , p_source_49 => g_array_event(l_event_id).array_value_char('source_49')
 , p_source_50 => l_array_source_50(Idx)
 , p_source_51 => l_array_source_51(Idx)
 , p_source_52 => l_array_source_52(Idx)
 , p_source_53 => l_array_source_53(Idx)
 , p_source_54 => l_array_source_54(Idx)
 , p_source_55 => l_array_source_55(Idx)
 , p_source_56 => l_array_source_56(Idx)
 , p_source_65 => l_array_source_65(Idx)
 , p_source_66 => l_array_source_66(Idx)
 );
If(l_balance_type_code = 'A') THEN
  l_actual_gain_loss_ref := l_gain_or_loss_ref;
END IF;

--


--
AcctLineType_26 (
 p_application_id  => p_application_id
 ,p_event_id     => l_event_id
 ,p_calculate_acctd_flag => l_calculate_acctd_flag
 ,p_calculate_g_l_flag => l_calculate_g_l_flag
 ,p_actual_flag => l_actual_flag
 ,p_balance_type_code => l_balance_type_code
 ,p_gain_or_loss_ref=> l_gain_or_loss_ref
 
 , p_source_1 => l_array_source_1(Idx)
 , p_source_11 => l_array_source_11(Idx)
 , p_source_15 => l_array_source_15(Idx)
 , p_source_15_meaning => l_array_source_15_meaning(Idx)
 , p_source_17 => g_array_event(l_event_id).array_value_char('source_17')
 , p_source_17_meaning => g_array_event(l_event_id).array_value_char('source_17_meaning')
 , p_source_19 => l_array_source_19(Idx)
 , p_source_21 => l_array_source_21(Idx)
 , p_source_23 => l_array_source_23(Idx)
 , p_source_24 => g_array_event(l_event_id).array_value_num('source_24')
 , p_source_25 => l_array_source_25(Idx)
 , p_source_26 => l_array_source_26(Idx)
 , p_source_27 => l_array_source_27(Idx)
 , p_source_28 => l_array_source_28(Idx)
 , p_source_29 => l_array_source_29(Idx)
 , p_source_30 => l_array_source_30(Idx)
 , p_source_31 => l_array_source_31(Idx)
 , p_source_32 => l_array_source_32(Idx)
 , p_source_33 => g_array_event(l_event_id).array_value_char('source_33')
 , p_source_34 => l_array_source_34(Idx)
 , p_source_35 => l_array_source_35(Idx)
 , p_source_36 => l_array_source_36(Idx)
 , p_source_37 => l_array_source_37(Idx)
 , p_source_38 => l_array_source_38(Idx)
 , p_source_39 => g_array_event(l_event_id).array_value_date('source_39')
 , p_source_40 => g_array_event(l_event_id).array_value_num('source_40')
 , p_source_41 => g_array_event(l_event_id).array_value_char('source_41')
 , p_source_43 => l_array_source_43(Idx)
 , p_source_44 => l_array_source_44(Idx)
 , p_source_45 => l_array_source_45(Idx)
 , p_source_46 => l_array_source_46(Idx)
 , p_source_46_meaning => l_array_source_46_meaning(Idx)
 , p_source_47 => g_array_event(l_event_id).array_value_num('source_47')
 , p_source_48 => g_array_event(l_event_id).array_value_num('source_48')
 , p_source_49 => g_array_event(l_event_id).array_value_char('source_49')
 , p_source_50 => l_array_source_50(Idx)
 , p_source_51 => l_array_source_51(Idx)
 , p_source_52 => l_array_source_52(Idx)
 , p_source_53 => l_array_source_53(Idx)
 , p_source_54 => l_array_source_54(Idx)
 , p_source_55 => l_array_source_55(Idx)
 , p_source_56 => l_array_source_56(Idx)
 , p_source_65 => l_array_source_65(Idx)
 , p_source_66 => l_array_source_66(Idx)
 );
If(l_balance_type_code = 'A') THEN
  l_actual_gain_loss_ref := l_gain_or_loss_ref;
END IF;

--


--
AcctLineType_33 (
 p_application_id  => p_application_id
 ,p_event_id     => l_event_id
 ,p_calculate_acctd_flag => l_calculate_acctd_flag
 ,p_calculate_g_l_flag => l_calculate_g_l_flag
 ,p_actual_flag => l_actual_flag
 ,p_balance_type_code => l_balance_type_code
 ,p_gain_or_loss_ref=> l_gain_or_loss_ref
 
 , p_source_1 => l_array_source_1(Idx)
 , p_source_11 => l_array_source_11(Idx)
 , p_source_15 => l_array_source_15(Idx)
 , p_source_15_meaning => l_array_source_15_meaning(Idx)
 , p_source_17 => g_array_event(l_event_id).array_value_char('source_17')
 , p_source_17_meaning => g_array_event(l_event_id).array_value_char('source_17_meaning')
 , p_source_19 => l_array_source_19(Idx)
 , p_source_21 => l_array_source_21(Idx)
 , p_source_23 => l_array_source_23(Idx)
 , p_source_24 => g_array_event(l_event_id).array_value_num('source_24')
 , p_source_25 => l_array_source_25(Idx)
 , p_source_26 => l_array_source_26(Idx)
 , p_source_27 => l_array_source_27(Idx)
 , p_source_28 => l_array_source_28(Idx)
 , p_source_29 => l_array_source_29(Idx)
 , p_source_30 => l_array_source_30(Idx)
 , p_source_31 => l_array_source_31(Idx)
 , p_source_32 => l_array_source_32(Idx)
 , p_source_33 => g_array_event(l_event_id).array_value_char('source_33')
 , p_source_34 => l_array_source_34(Idx)
 , p_source_35 => l_array_source_35(Idx)
 , p_source_36 => l_array_source_36(Idx)
 , p_source_37 => l_array_source_37(Idx)
 , p_source_38 => l_array_source_38(Idx)
 , p_source_39 => g_array_event(l_event_id).array_value_date('source_39')
 , p_source_40 => g_array_event(l_event_id).array_value_num('source_40')
 , p_source_41 => g_array_event(l_event_id).array_value_char('source_41')
 , p_source_43 => l_array_source_43(Idx)
 , p_source_44 => l_array_source_44(Idx)
 , p_source_45 => l_array_source_45(Idx)
 , p_source_46 => l_array_source_46(Idx)
 , p_source_46_meaning => l_array_source_46_meaning(Idx)
 , p_source_47 => g_array_event(l_event_id).array_value_num('source_47')
 , p_source_48 => g_array_event(l_event_id).array_value_num('source_48')
 , p_source_49 => g_array_event(l_event_id).array_value_char('source_49')
 , p_source_50 => l_array_source_50(Idx)
 , p_source_51 => l_array_source_51(Idx)
 , p_source_52 => l_array_source_52(Idx)
 , p_source_53 => l_array_source_53(Idx)
 , p_source_54 => l_array_source_54(Idx)
 , p_source_55 => l_array_source_55(Idx)
 , p_source_56 => l_array_source_56(Idx)
 , p_source_65 => l_array_source_65(Idx)
 , p_source_66 => l_array_source_66(Idx)
 );
If(l_balance_type_code = 'A') THEN
  l_actual_gain_loss_ref := l_gain_or_loss_ref;
END IF;

--


--
AcctLineType_37 (
 p_application_id  => p_application_id
 ,p_event_id     => l_event_id
 ,p_calculate_acctd_flag => l_calculate_acctd_flag
 ,p_calculate_g_l_flag => l_calculate_g_l_flag
 ,p_actual_flag => l_actual_flag
 ,p_balance_type_code => l_balance_type_code
 ,p_gain_or_loss_ref=> l_gain_or_loss_ref
 
 , p_source_1 => l_array_source_1(Idx)
 , p_source_11 => l_array_source_11(Idx)
 , p_source_15 => l_array_source_15(Idx)
 , p_source_15_meaning => l_array_source_15_meaning(Idx)
 , p_source_17 => g_array_event(l_event_id).array_value_char('source_17')
 , p_source_17_meaning => g_array_event(l_event_id).array_value_char('source_17_meaning')
 , p_source_18 => l_array_source_18(Idx)
 , p_source_18_meaning => l_array_source_18_meaning(Idx)
 , p_source_19 => l_array_source_19(Idx)
 , p_source_21 => l_array_source_21(Idx)
 , p_source_23 => l_array_source_23(Idx)
 , p_source_24 => g_array_event(l_event_id).array_value_num('source_24')
 , p_source_25 => l_array_source_25(Idx)
 , p_source_26 => l_array_source_26(Idx)
 , p_source_27 => l_array_source_27(Idx)
 , p_source_28 => l_array_source_28(Idx)
 , p_source_29 => l_array_source_29(Idx)
 , p_source_30 => l_array_source_30(Idx)
 , p_source_31 => l_array_source_31(Idx)
 , p_source_32 => l_array_source_32(Idx)
 , p_source_33 => g_array_event(l_event_id).array_value_char('source_33')
 , p_source_34 => l_array_source_34(Idx)
 , p_source_35 => l_array_source_35(Idx)
 , p_source_36 => l_array_source_36(Idx)
 , p_source_37 => l_array_source_37(Idx)
 , p_source_38 => l_array_source_38(Idx)
 , p_source_39 => g_array_event(l_event_id).array_value_date('source_39')
 , p_source_40 => g_array_event(l_event_id).array_value_num('source_40')
 , p_source_41 => g_array_event(l_event_id).array_value_char('source_41')
 , p_source_43 => l_array_source_43(Idx)
 , p_source_44 => l_array_source_44(Idx)
 , p_source_45 => l_array_source_45(Idx)
 , p_source_46 => l_array_source_46(Idx)
 , p_source_46_meaning => l_array_source_46_meaning(Idx)
 , p_source_47 => g_array_event(l_event_id).array_value_num('source_47')
 , p_source_48 => g_array_event(l_event_id).array_value_num('source_48')
 , p_source_49 => g_array_event(l_event_id).array_value_char('source_49')
 , p_source_50 => l_array_source_50(Idx)
 , p_source_51 => l_array_source_51(Idx)
 , p_source_52 => l_array_source_52(Idx)
 , p_source_53 => l_array_source_53(Idx)
 , p_source_54 => l_array_source_54(Idx)
 , p_source_55 => l_array_source_55(Idx)
 , p_source_56 => l_array_source_56(Idx)
 , p_source_65 => l_array_source_65(Idx)
 , p_source_66 => l_array_source_66(Idx)
 );
If(l_balance_type_code = 'A') THEN
  l_actual_gain_loss_ref := l_gain_or_loss_ref;
END IF;

--


--
AcctLineType_41 (
 p_application_id  => p_application_id
 ,p_event_id     => l_event_id
 ,p_calculate_acctd_flag => l_calculate_acctd_flag
 ,p_calculate_g_l_flag => l_calculate_g_l_flag
 ,p_actual_flag => l_actual_flag
 ,p_balance_type_code => l_balance_type_code
 ,p_gain_or_loss_ref=> l_gain_or_loss_ref
 
 , p_source_1 => l_array_source_1(Idx)
 , p_source_11 => l_array_source_11(Idx)
 , p_source_15 => l_array_source_15(Idx)
 , p_source_15_meaning => l_array_source_15_meaning(Idx)
 , p_source_17 => g_array_event(l_event_id).array_value_char('source_17')
 , p_source_17_meaning => g_array_event(l_event_id).array_value_char('source_17_meaning')
 , p_source_19 => l_array_source_19(Idx)
 , p_source_21 => l_array_source_21(Idx)
 , p_source_23 => l_array_source_23(Idx)
 , p_source_24 => g_array_event(l_event_id).array_value_num('source_24')
 , p_source_25 => l_array_source_25(Idx)
 , p_source_26 => l_array_source_26(Idx)
 , p_source_27 => l_array_source_27(Idx)
 , p_source_28 => l_array_source_28(Idx)
 , p_source_29 => l_array_source_29(Idx)
 , p_source_30 => l_array_source_30(Idx)
 , p_source_31 => l_array_source_31(Idx)
 , p_source_32 => l_array_source_32(Idx)
 , p_source_33 => g_array_event(l_event_id).array_value_char('source_33')
 , p_source_34 => l_array_source_34(Idx)
 , p_source_35 => l_array_source_35(Idx)
 , p_source_36 => l_array_source_36(Idx)
 , p_source_37 => l_array_source_37(Idx)
 , p_source_38 => l_array_source_38(Idx)
 , p_source_39 => g_array_event(l_event_id).array_value_date('source_39')
 , p_source_40 => g_array_event(l_event_id).array_value_num('source_40')
 , p_source_41 => g_array_event(l_event_id).array_value_char('source_41')
 , p_source_43 => l_array_source_43(Idx)
 , p_source_44 => l_array_source_44(Idx)
 , p_source_45 => l_array_source_45(Idx)
 , p_source_46 => l_array_source_46(Idx)
 , p_source_46_meaning => l_array_source_46_meaning(Idx)
 , p_source_47 => g_array_event(l_event_id).array_value_num('source_47')
 , p_source_48 => g_array_event(l_event_id).array_value_num('source_48')
 , p_source_49 => g_array_event(l_event_id).array_value_char('source_49')
 , p_source_50 => l_array_source_50(Idx)
 , p_source_51 => l_array_source_51(Idx)
 , p_source_52 => l_array_source_52(Idx)
 , p_source_53 => l_array_source_53(Idx)
 , p_source_54 => l_array_source_54(Idx)
 , p_source_55 => l_array_source_55(Idx)
 , p_source_56 => l_array_source_56(Idx)
 , p_source_65 => l_array_source_65(Idx)
 , p_source_66 => l_array_source_66(Idx)
 );
If(l_balance_type_code = 'A') THEN
  l_actual_gain_loss_ref := l_gain_or_loss_ref;
END IF;

--


--
AcctLineType_45 (
 p_application_id  => p_application_id
 ,p_event_id     => l_event_id
 ,p_calculate_acctd_flag => l_calculate_acctd_flag
 ,p_calculate_g_l_flag => l_calculate_g_l_flag
 ,p_actual_flag => l_actual_flag
 ,p_balance_type_code => l_balance_type_code
 ,p_gain_or_loss_ref=> l_gain_or_loss_ref
 
 , p_source_1 => l_array_source_1(Idx)
 , p_source_11 => l_array_source_11(Idx)
 , p_source_15 => l_array_source_15(Idx)
 , p_source_15_meaning => l_array_source_15_meaning(Idx)
 , p_source_17 => g_array_event(l_event_id).array_value_char('source_17')
 , p_source_17_meaning => g_array_event(l_event_id).array_value_char('source_17_meaning')
 , p_source_18 => l_array_source_18(Idx)
 , p_source_18_meaning => l_array_source_18_meaning(Idx)
 , p_source_19 => l_array_source_19(Idx)
 , p_source_21 => l_array_source_21(Idx)
 , p_source_23 => l_array_source_23(Idx)
 , p_source_24 => g_array_event(l_event_id).array_value_num('source_24')
 , p_source_25 => l_array_source_25(Idx)
 , p_source_26 => l_array_source_26(Idx)
 , p_source_27 => l_array_source_27(Idx)
 , p_source_28 => l_array_source_28(Idx)
 , p_source_29 => l_array_source_29(Idx)
 , p_source_30 => l_array_source_30(Idx)
 , p_source_31 => l_array_source_31(Idx)
 , p_source_32 => l_array_source_32(Idx)
 , p_source_33 => g_array_event(l_event_id).array_value_char('source_33')
 , p_source_34 => l_array_source_34(Idx)
 , p_source_35 => l_array_source_35(Idx)
 , p_source_36 => l_array_source_36(Idx)
 , p_source_37 => l_array_source_37(Idx)
 , p_source_38 => l_array_source_38(Idx)
 , p_source_39 => g_array_event(l_event_id).array_value_date('source_39')
 , p_source_40 => g_array_event(l_event_id).array_value_num('source_40')
 , p_source_41 => g_array_event(l_event_id).array_value_char('source_41')
 , p_source_43 => l_array_source_43(Idx)
 , p_source_44 => l_array_source_44(Idx)
 , p_source_45 => l_array_source_45(Idx)
 , p_source_46 => l_array_source_46(Idx)
 , p_source_46_meaning => l_array_source_46_meaning(Idx)
 , p_source_47 => g_array_event(l_event_id).array_value_num('source_47')
 , p_source_48 => g_array_event(l_event_id).array_value_num('source_48')
 , p_source_49 => g_array_event(l_event_id).array_value_char('source_49')
 , p_source_50 => l_array_source_50(Idx)
 , p_source_51 => l_array_source_51(Idx)
 , p_source_52 => l_array_source_52(Idx)
 , p_source_53 => l_array_source_53(Idx)
 , p_source_54 => l_array_source_54(Idx)
 , p_source_55 => l_array_source_55(Idx)
 , p_source_56 => l_array_source_56(Idx)
 , p_source_59 => l_array_source_59(Idx)
 , p_source_59_meaning => l_array_source_59_meaning(Idx)
 , p_source_65 => l_array_source_65(Idx)
 , p_source_66 => l_array_source_66(Idx)
 );
If(l_balance_type_code = 'A') THEN
  l_actual_gain_loss_ref := l_gain_or_loss_ref;
END IF;

--


--
AcctLineType_54 (
 p_application_id  => p_application_id
 ,p_event_id     => l_event_id
 ,p_calculate_acctd_flag => l_calculate_acctd_flag
 ,p_calculate_g_l_flag => l_calculate_g_l_flag
 ,p_actual_flag => l_actual_flag
 ,p_balance_type_code => l_balance_type_code
 ,p_gain_or_loss_ref=> l_gain_or_loss_ref
 
 , p_source_1 => l_array_source_1(Idx)
 , p_source_11 => l_array_source_11(Idx)
 , p_source_15 => l_array_source_15(Idx)
 , p_source_15_meaning => l_array_source_15_meaning(Idx)
 , p_source_17 => g_array_event(l_event_id).array_value_char('source_17')
 , p_source_17_meaning => g_array_event(l_event_id).array_value_char('source_17_meaning')
 , p_source_18 => l_array_source_18(Idx)
 , p_source_18_meaning => l_array_source_18_meaning(Idx)
 , p_source_19 => l_array_source_19(Idx)
 , p_source_21 => l_array_source_21(Idx)
 , p_source_23 => l_array_source_23(Idx)
 , p_source_24 => g_array_event(l_event_id).array_value_num('source_24')
 , p_source_25 => l_array_source_25(Idx)
 , p_source_26 => l_array_source_26(Idx)
 , p_source_27 => l_array_source_27(Idx)
 , p_source_28 => l_array_source_28(Idx)
 , p_source_29 => l_array_source_29(Idx)
 , p_source_30 => l_array_source_30(Idx)
 , p_source_31 => l_array_source_31(Idx)
 , p_source_32 => l_array_source_32(Idx)
 , p_source_33 => g_array_event(l_event_id).array_value_char('source_33')
 , p_source_34 => l_array_source_34(Idx)
 , p_source_35 => l_array_source_35(Idx)
 , p_source_36 => l_array_source_36(Idx)
 , p_source_37 => l_array_source_37(Idx)
 , p_source_38 => l_array_source_38(Idx)
 , p_source_39 => g_array_event(l_event_id).array_value_date('source_39')
 , p_source_40 => g_array_event(l_event_id).array_value_num('source_40')
 , p_source_41 => g_array_event(l_event_id).array_value_char('source_41')
 , p_source_43 => l_array_source_43(Idx)
 , p_source_44 => l_array_source_44(Idx)
 , p_source_45 => l_array_source_45(Idx)
 , p_source_46 => l_array_source_46(Idx)
 , p_source_46_meaning => l_array_source_46_meaning(Idx)
 , p_source_47 => g_array_event(l_event_id).array_value_num('source_47')
 , p_source_48 => g_array_event(l_event_id).array_value_num('source_48')
 , p_source_49 => g_array_event(l_event_id).array_value_char('source_49')
 , p_source_50 => l_array_source_50(Idx)
 , p_source_51 => l_array_source_51(Idx)
 , p_source_52 => l_array_source_52(Idx)
 , p_source_53 => l_array_source_53(Idx)
 , p_source_54 => l_array_source_54(Idx)
 , p_source_55 => l_array_source_55(Idx)
 , p_source_56 => l_array_source_56(Idx)
 , p_source_81 => l_array_source_81(Idx)
 , p_source_82 => l_array_source_82(Idx)
 );
If(l_balance_type_code = 'A') THEN
  l_actual_gain_loss_ref := l_gain_or_loss_ref;
END IF;

--


--
AcctLineType_57 (
 p_application_id  => p_application_id
 ,p_event_id     => l_event_id
 ,p_calculate_acctd_flag => l_calculate_acctd_flag
 ,p_calculate_g_l_flag => l_calculate_g_l_flag
 ,p_actual_flag => l_actual_flag
 ,p_balance_type_code => l_balance_type_code
 ,p_gain_or_loss_ref=> l_gain_or_loss_ref
 
 , p_source_1 => l_array_source_1(Idx)
 , p_source_11 => l_array_source_11(Idx)
 , p_source_15 => l_array_source_15(Idx)
 , p_source_15_meaning => l_array_source_15_meaning(Idx)
 , p_source_17 => g_array_event(l_event_id).array_value_char('source_17')
 , p_source_17_meaning => g_array_event(l_event_id).array_value_char('source_17_meaning')
 , p_source_19 => l_array_source_19(Idx)
 , p_source_21 => l_array_source_21(Idx)
 , p_source_23 => l_array_source_23(Idx)
 , p_source_24 => g_array_event(l_event_id).array_value_num('source_24')
 , p_source_25 => l_array_source_25(Idx)
 , p_source_26 => l_array_source_26(Idx)
 , p_source_27 => l_array_source_27(Idx)
 , p_source_28 => l_array_source_28(Idx)
 , p_source_29 => l_array_source_29(Idx)
 , p_source_30 => l_array_source_30(Idx)
 , p_source_31 => l_array_source_31(Idx)
 , p_source_32 => l_array_source_32(Idx)
 , p_source_33 => g_array_event(l_event_id).array_value_char('source_33')
 , p_source_34 => l_array_source_34(Idx)
 , p_source_35 => l_array_source_35(Idx)
 , p_source_36 => l_array_source_36(Idx)
 , p_source_37 => l_array_source_37(Idx)
 , p_source_38 => l_array_source_38(Idx)
 , p_source_39 => g_array_event(l_event_id).array_value_date('source_39')
 , p_source_40 => g_array_event(l_event_id).array_value_num('source_40')
 , p_source_41 => g_array_event(l_event_id).array_value_char('source_41')
 , p_source_43 => l_array_source_43(Idx)
 , p_source_44 => l_array_source_44(Idx)
 , p_source_45 => l_array_source_45(Idx)
 , p_source_46 => l_array_source_46(Idx)
 , p_source_46_meaning => l_array_source_46_meaning(Idx)
 , p_source_47 => g_array_event(l_event_id).array_value_num('source_47')
 , p_source_48 => g_array_event(l_event_id).array_value_num('source_48')
 , p_source_49 => g_array_event(l_event_id).array_value_char('source_49')
 , p_source_50 => l_array_source_50(Idx)
 , p_source_51 => l_array_source_51(Idx)
 , p_source_52 => l_array_source_52(Idx)
 , p_source_53 => l_array_source_53(Idx)
 , p_source_54 => l_array_source_54(Idx)
 , p_source_55 => l_array_source_55(Idx)
 , p_source_56 => l_array_source_56(Idx)
 , p_source_59 => l_array_source_59(Idx)
 , p_source_59_meaning => l_array_source_59_meaning(Idx)
 , p_source_65 => l_array_source_65(Idx)
 , p_source_66 => l_array_source_66(Idx)
 );
If(l_balance_type_code = 'A') THEN
  l_actual_gain_loss_ref := l_gain_or_loss_ref;
END IF;

--


--
AcctLineType_61 (
 p_application_id  => p_application_id
 ,p_event_id     => l_event_id
 ,p_calculate_acctd_flag => l_calculate_acctd_flag
 ,p_calculate_g_l_flag => l_calculate_g_l_flag
 ,p_actual_flag => l_actual_flag
 ,p_balance_type_code => l_balance_type_code
 ,p_gain_or_loss_ref=> l_gain_or_loss_ref
 
 , p_source_1 => l_array_source_1(Idx)
 , p_source_13 => l_array_source_13(Idx)
 , p_source_15 => l_array_source_15(Idx)
 , p_source_15_meaning => l_array_source_15_meaning(Idx)
 , p_source_17 => g_array_event(l_event_id).array_value_char('source_17')
 , p_source_17_meaning => g_array_event(l_event_id).array_value_char('source_17_meaning')
 , p_source_19 => l_array_source_19(Idx)
 , p_source_21 => l_array_source_21(Idx)
 , p_source_23 => l_array_source_23(Idx)
 , p_source_24 => g_array_event(l_event_id).array_value_num('source_24')
 , p_source_25 => l_array_source_25(Idx)
 , p_source_26 => l_array_source_26(Idx)
 , p_source_27 => l_array_source_27(Idx)
 , p_source_28 => l_array_source_28(Idx)
 , p_source_29 => l_array_source_29(Idx)
 , p_source_30 => l_array_source_30(Idx)
 , p_source_31 => l_array_source_31(Idx)
 , p_source_32 => l_array_source_32(Idx)
 , p_source_33 => g_array_event(l_event_id).array_value_char('source_33')
 , p_source_34 => l_array_source_34(Idx)
 , p_source_35 => l_array_source_35(Idx)
 , p_source_36 => l_array_source_36(Idx)
 , p_source_37 => l_array_source_37(Idx)
 , p_source_38 => l_array_source_38(Idx)
 , p_source_39 => g_array_event(l_event_id).array_value_date('source_39')
 , p_source_40 => g_array_event(l_event_id).array_value_num('source_40')
 , p_source_41 => g_array_event(l_event_id).array_value_char('source_41')
 , p_source_43 => l_array_source_43(Idx)
 , p_source_44 => l_array_source_44(Idx)
 , p_source_45 => l_array_source_45(Idx)
 , p_source_46 => l_array_source_46(Idx)
 , p_source_46_meaning => l_array_source_46_meaning(Idx)
 , p_source_47 => g_array_event(l_event_id).array_value_num('source_47')
 , p_source_48 => g_array_event(l_event_id).array_value_num('source_48')
 , p_source_49 => g_array_event(l_event_id).array_value_char('source_49')
 , p_source_50 => l_array_source_50(Idx)
 , p_source_51 => l_array_source_51(Idx)
 , p_source_52 => l_array_source_52(Idx)
 , p_source_53 => l_array_source_53(Idx)
 , p_source_54 => l_array_source_54(Idx)
 , p_source_55 => l_array_source_55(Idx)
 , p_source_56 => l_array_source_56(Idx)
 , p_source_59 => l_array_source_59(Idx)
 , p_source_59_meaning => l_array_source_59_meaning(Idx)
 , p_source_65 => l_array_source_65(Idx)
 , p_source_66 => l_array_source_66(Idx)
 );
If(l_balance_type_code = 'A') THEN
  l_actual_gain_loss_ref := l_gain_or_loss_ref;
END IF;

--


--
AcctLineType_66 (
 p_application_id  => p_application_id
 ,p_event_id     => l_event_id
 ,p_calculate_acctd_flag => l_calculate_acctd_flag
 ,p_calculate_g_l_flag => l_calculate_g_l_flag
 ,p_actual_flag => l_actual_flag
 ,p_balance_type_code => l_balance_type_code
 ,p_gain_or_loss_ref=> l_gain_or_loss_ref
 
 , p_source_1 => l_array_source_1(Idx)
 , p_source_11 => l_array_source_11(Idx)
 , p_source_15 => l_array_source_15(Idx)
 , p_source_15_meaning => l_array_source_15_meaning(Idx)
 , p_source_16 => l_array_source_16(Idx)
 , p_source_17 => g_array_event(l_event_id).array_value_char('source_17')
 , p_source_17_meaning => g_array_event(l_event_id).array_value_char('source_17_meaning')
 , p_source_18 => l_array_source_18(Idx)
 , p_source_18_meaning => l_array_source_18_meaning(Idx)
 , p_source_19 => l_array_source_19(Idx)
 , p_source_21 => l_array_source_21(Idx)
 , p_source_23 => l_array_source_23(Idx)
 , p_source_24 => g_array_event(l_event_id).array_value_num('source_24')
 , p_source_25 => l_array_source_25(Idx)
 , p_source_26 => l_array_source_26(Idx)
 , p_source_27 => l_array_source_27(Idx)
 , p_source_28 => l_array_source_28(Idx)
 , p_source_29 => l_array_source_29(Idx)
 , p_source_30 => l_array_source_30(Idx)
 , p_source_31 => l_array_source_31(Idx)
 , p_source_32 => l_array_source_32(Idx)
 , p_source_33 => g_array_event(l_event_id).array_value_char('source_33')
 , p_source_34 => l_array_source_34(Idx)
 , p_source_35 => l_array_source_35(Idx)
 , p_source_36 => l_array_source_36(Idx)
 , p_source_37 => l_array_source_37(Idx)
 , p_source_38 => l_array_source_38(Idx)
 , p_source_39 => g_array_event(l_event_id).array_value_date('source_39')
 , p_source_40 => g_array_event(l_event_id).array_value_num('source_40')
 , p_source_41 => g_array_event(l_event_id).array_value_char('source_41')
 , p_source_42 => l_array_source_42(Idx)
 , p_source_43 => l_array_source_43(Idx)
 , p_source_44 => l_array_source_44(Idx)
 , p_source_45 => l_array_source_45(Idx)
 , p_source_46 => l_array_source_46(Idx)
 , p_source_46_meaning => l_array_source_46_meaning(Idx)
 , p_source_47 => g_array_event(l_event_id).array_value_num('source_47')
 , p_source_48 => g_array_event(l_event_id).array_value_num('source_48')
 , p_source_49 => g_array_event(l_event_id).array_value_char('source_49')
 , p_source_50 => l_array_source_50(Idx)
 , p_source_51 => l_array_source_51(Idx)
 , p_source_52 => l_array_source_52(Idx)
 , p_source_53 => l_array_source_53(Idx)
 , p_source_54 => l_array_source_54(Idx)
 , p_source_55 => l_array_source_55(Idx)
 , p_source_56 => l_array_source_56(Idx)
 );
If(l_balance_type_code = 'A') THEN
  l_actual_gain_loss_ref := l_gain_or_loss_ref;
END IF;

--


--
AcctLineType_70 (
 p_application_id  => p_application_id
 ,p_event_id     => l_event_id
 ,p_calculate_acctd_flag => l_calculate_acctd_flag
 ,p_calculate_g_l_flag => l_calculate_g_l_flag
 ,p_actual_flag => l_actual_flag
 ,p_balance_type_code => l_balance_type_code
 ,p_gain_or_loss_ref=> l_gain_or_loss_ref
 
 , p_source_1 => l_array_source_1(Idx)
 , p_source_6 => g_array_event(l_event_id).array_value_num('source_6')
 , p_source_7 => g_array_event(l_event_id).array_value_char('source_7')
 , p_source_7_meaning => g_array_event(l_event_id).array_value_char('source_7_meaning')
 , p_source_8 => l_array_source_8(Idx)
 , p_source_9 => l_array_source_9(Idx)
 , p_source_9_meaning => l_array_source_9_meaning(Idx)
 , p_source_10 => g_array_event(l_event_id).array_value_num('source_10')
 , p_source_11 => l_array_source_11(Idx)
 , p_source_12 => g_array_event(l_event_id).array_value_char('source_12')
 , p_source_12_meaning => g_array_event(l_event_id).array_value_char('source_12_meaning')
 , p_source_15 => l_array_source_15(Idx)
 , p_source_15_meaning => l_array_source_15_meaning(Idx)
 , p_source_17 => g_array_event(l_event_id).array_value_char('source_17')
 , p_source_17_meaning => g_array_event(l_event_id).array_value_char('source_17_meaning')
 , p_source_19 => l_array_source_19(Idx)
 , p_source_21 => l_array_source_21(Idx)
 , p_source_23 => l_array_source_23(Idx)
 , p_source_24 => g_array_event(l_event_id).array_value_num('source_24')
 , p_source_25 => l_array_source_25(Idx)
 , p_source_26 => l_array_source_26(Idx)
 , p_source_27 => l_array_source_27(Idx)
 , p_source_28 => l_array_source_28(Idx)
 , p_source_29 => l_array_source_29(Idx)
 , p_source_30 => l_array_source_30(Idx)
 , p_source_31 => l_array_source_31(Idx)
 , p_source_32 => l_array_source_32(Idx)
 , p_source_33 => g_array_event(l_event_id).array_value_char('source_33')
 , p_source_34 => l_array_source_34(Idx)
 , p_source_35 => l_array_source_35(Idx)
 , p_source_36 => l_array_source_36(Idx)
 , p_source_37 => l_array_source_37(Idx)
 , p_source_38 => l_array_source_38(Idx)
 , p_source_39 => g_array_event(l_event_id).array_value_date('source_39')
 , p_source_40 => g_array_event(l_event_id).array_value_num('source_40')
 , p_source_41 => g_array_event(l_event_id).array_value_char('source_41')
 , p_source_43 => l_array_source_43(Idx)
 , p_source_44 => l_array_source_44(Idx)
 , p_source_45 => l_array_source_45(Idx)
 , p_source_46 => l_array_source_46(Idx)
 , p_source_46_meaning => l_array_source_46_meaning(Idx)
 , p_source_47 => g_array_event(l_event_id).array_value_num('source_47')
 , p_source_48 => g_array_event(l_event_id).array_value_num('source_48')
 , p_source_49 => g_array_event(l_event_id).array_value_char('source_49')
 , p_source_50 => l_array_source_50(Idx)
 , p_source_51 => l_array_source_51(Idx)
 , p_source_52 => l_array_source_52(Idx)
 , p_source_53 => l_array_source_53(Idx)
 , p_source_54 => l_array_source_54(Idx)
 , p_source_55 => l_array_source_55(Idx)
 , p_source_56 => l_array_source_56(Idx)
 , p_source_65 => l_array_source_65(Idx)
 , p_source_66 => l_array_source_66(Idx)
 );
If(l_balance_type_code = 'A') THEN
  l_actual_gain_loss_ref := l_gain_or_loss_ref;
END IF;

--


--
AcctLineType_73 (
 p_application_id  => p_application_id
 ,p_event_id     => l_event_id
 ,p_calculate_acctd_flag => l_calculate_acctd_flag
 ,p_calculate_g_l_flag => l_calculate_g_l_flag
 ,p_actual_flag => l_actual_flag
 ,p_balance_type_code => l_balance_type_code
 ,p_gain_or_loss_ref=> l_gain_or_loss_ref
 
 , p_source_1 => l_array_source_1(Idx)
 , p_source_11 => l_array_source_11(Idx)
 , p_source_15 => l_array_source_15(Idx)
 , p_source_15_meaning => l_array_source_15_meaning(Idx)
 , p_source_17 => g_array_event(l_event_id).array_value_char('source_17')
 , p_source_17_meaning => g_array_event(l_event_id).array_value_char('source_17_meaning')
 , p_source_19 => l_array_source_19(Idx)
 , p_source_21 => l_array_source_21(Idx)
 , p_source_23 => l_array_source_23(Idx)
 , p_source_24 => g_array_event(l_event_id).array_value_num('source_24')
 , p_source_25 => l_array_source_25(Idx)
 , p_source_26 => l_array_source_26(Idx)
 , p_source_27 => l_array_source_27(Idx)
 , p_source_28 => l_array_source_28(Idx)
 , p_source_29 => l_array_source_29(Idx)
 , p_source_30 => l_array_source_30(Idx)
 , p_source_31 => l_array_source_31(Idx)
 , p_source_32 => l_array_source_32(Idx)
 , p_source_33 => g_array_event(l_event_id).array_value_char('source_33')
 , p_source_34 => l_array_source_34(Idx)
 , p_source_35 => l_array_source_35(Idx)
 , p_source_36 => l_array_source_36(Idx)
 , p_source_37 => l_array_source_37(Idx)
 , p_source_38 => l_array_source_38(Idx)
 , p_source_39 => g_array_event(l_event_id).array_value_date('source_39')
 , p_source_40 => g_array_event(l_event_id).array_value_num('source_40')
 , p_source_41 => g_array_event(l_event_id).array_value_char('source_41')
 , p_source_43 => l_array_source_43(Idx)
 , p_source_44 => l_array_source_44(Idx)
 , p_source_45 => l_array_source_45(Idx)
 , p_source_46 => l_array_source_46(Idx)
 , p_source_46_meaning => l_array_source_46_meaning(Idx)
 , p_source_47 => g_array_event(l_event_id).array_value_num('source_47')
 , p_source_48 => g_array_event(l_event_id).array_value_num('source_48')
 , p_source_49 => g_array_event(l_event_id).array_value_char('source_49')
 , p_source_50 => l_array_source_50(Idx)
 , p_source_51 => l_array_source_51(Idx)
 , p_source_52 => l_array_source_52(Idx)
 , p_source_53 => l_array_source_53(Idx)
 , p_source_54 => l_array_source_54(Idx)
 , p_source_55 => l_array_source_55(Idx)
 , p_source_56 => l_array_source_56(Idx)
 , p_source_65 => l_array_source_65(Idx)
 , p_source_66 => l_array_source_66(Idx)
 );
If(l_balance_type_code = 'A') THEN
  l_actual_gain_loss_ref := l_gain_or_loss_ref;
END IF;

--


--
AcctLineType_77 (
 p_application_id  => p_application_id
 ,p_event_id     => l_event_id
 ,p_calculate_acctd_flag => l_calculate_acctd_flag
 ,p_calculate_g_l_flag => l_calculate_g_l_flag
 ,p_actual_flag => l_actual_flag
 ,p_balance_type_code => l_balance_type_code
 ,p_gain_or_loss_ref=> l_gain_or_loss_ref
 
 , p_source_1 => l_array_source_1(Idx)
 , p_source_11 => l_array_source_11(Idx)
 , p_source_15 => l_array_source_15(Idx)
 , p_source_15_meaning => l_array_source_15_meaning(Idx)
 , p_source_16 => l_array_source_16(Idx)
 , p_source_17 => g_array_event(l_event_id).array_value_char('source_17')
 , p_source_17_meaning => g_array_event(l_event_id).array_value_char('source_17_meaning')
 , p_source_18 => l_array_source_18(Idx)
 , p_source_18_meaning => l_array_source_18_meaning(Idx)
 , p_source_19 => l_array_source_19(Idx)
 , p_source_21 => l_array_source_21(Idx)
 , p_source_23 => l_array_source_23(Idx)
 , p_source_24 => g_array_event(l_event_id).array_value_num('source_24')
 , p_source_25 => l_array_source_25(Idx)
 , p_source_26 => l_array_source_26(Idx)
 , p_source_27 => l_array_source_27(Idx)
 , p_source_28 => l_array_source_28(Idx)
 , p_source_29 => l_array_source_29(Idx)
 , p_source_30 => l_array_source_30(Idx)
 , p_source_31 => l_array_source_31(Idx)
 , p_source_32 => l_array_source_32(Idx)
 , p_source_33 => g_array_event(l_event_id).array_value_char('source_33')
 , p_source_34 => l_array_source_34(Idx)
 , p_source_35 => l_array_source_35(Idx)
 , p_source_36 => l_array_source_36(Idx)
 , p_source_37 => l_array_source_37(Idx)
 , p_source_38 => l_array_source_38(Idx)
 , p_source_39 => g_array_event(l_event_id).array_value_date('source_39')
 , p_source_40 => g_array_event(l_event_id).array_value_num('source_40')
 , p_source_41 => g_array_event(l_event_id).array_value_char('source_41')
 , p_source_43 => l_array_source_43(Idx)
 , p_source_44 => l_array_source_44(Idx)
 , p_source_45 => l_array_source_45(Idx)
 , p_source_46 => l_array_source_46(Idx)
 , p_source_46_meaning => l_array_source_46_meaning(Idx)
 , p_source_47 => g_array_event(l_event_id).array_value_num('source_47')
 , p_source_48 => g_array_event(l_event_id).array_value_num('source_48')
 , p_source_49 => g_array_event(l_event_id).array_value_char('source_49')
 , p_source_50 => l_array_source_50(Idx)
 , p_source_51 => l_array_source_51(Idx)
 , p_source_52 => l_array_source_52(Idx)
 , p_source_53 => l_array_source_53(Idx)
 , p_source_54 => l_array_source_54(Idx)
 , p_source_55 => l_array_source_55(Idx)
 , p_source_56 => l_array_source_56(Idx)
 , p_source_81 => l_array_source_81(Idx)
 , p_source_82 => l_array_source_82(Idx)
 );
If(l_balance_type_code = 'A') THEN
  l_actual_gain_loss_ref := l_gain_or_loss_ref;
END IF;

--


--
AcctLineType_81 (
 p_application_id  => p_application_id
 ,p_event_id     => l_event_id
 ,p_calculate_acctd_flag => l_calculate_acctd_flag
 ,p_calculate_g_l_flag => l_calculate_g_l_flag
 ,p_actual_flag => l_actual_flag
 ,p_balance_type_code => l_balance_type_code
 ,p_gain_or_loss_ref=> l_gain_or_loss_ref
 
 , p_source_1 => l_array_source_1(Idx)
 , p_source_11 => l_array_source_11(Idx)
 , p_source_15 => l_array_source_15(Idx)
 , p_source_15_meaning => l_array_source_15_meaning(Idx)
 , p_source_17 => g_array_event(l_event_id).array_value_char('source_17')
 , p_source_17_meaning => g_array_event(l_event_id).array_value_char('source_17_meaning')
 , p_source_19 => l_array_source_19(Idx)
 , p_source_21 => l_array_source_21(Idx)
 , p_source_23 => l_array_source_23(Idx)
 , p_source_24 => g_array_event(l_event_id).array_value_num('source_24')
 , p_source_25 => l_array_source_25(Idx)
 , p_source_26 => l_array_source_26(Idx)
 , p_source_27 => l_array_source_27(Idx)
 , p_source_28 => l_array_source_28(Idx)
 , p_source_29 => l_array_source_29(Idx)
 , p_source_30 => l_array_source_30(Idx)
 , p_source_31 => l_array_source_31(Idx)
 , p_source_32 => l_array_source_32(Idx)
 , p_source_33 => g_array_event(l_event_id).array_value_char('source_33')
 , p_source_34 => l_array_source_34(Idx)
 , p_source_35 => l_array_source_35(Idx)
 , p_source_36 => l_array_source_36(Idx)
 , p_source_37 => l_array_source_37(Idx)
 , p_source_38 => l_array_source_38(Idx)
 , p_source_39 => g_array_event(l_event_id).array_value_date('source_39')
 , p_source_40 => g_array_event(l_event_id).array_value_num('source_40')
 , p_source_41 => g_array_event(l_event_id).array_value_char('source_41')
 , p_source_43 => l_array_source_43(Idx)
 , p_source_44 => l_array_source_44(Idx)
 , p_source_45 => l_array_source_45(Idx)
 , p_source_46 => l_array_source_46(Idx)
 , p_source_46_meaning => l_array_source_46_meaning(Idx)
 , p_source_47 => g_array_event(l_event_id).array_value_num('source_47')
 , p_source_48 => g_array_event(l_event_id).array_value_num('source_48')
 , p_source_49 => g_array_event(l_event_id).array_value_char('source_49')
 , p_source_50 => l_array_source_50(Idx)
 , p_source_51 => l_array_source_51(Idx)
 , p_source_52 => l_array_source_52(Idx)
 , p_source_53 => l_array_source_53(Idx)
 , p_source_54 => l_array_source_54(Idx)
 , p_source_55 => l_array_source_55(Idx)
 , p_source_56 => l_array_source_56(Idx)
 , p_source_65 => l_array_source_65(Idx)
 , p_source_66 => l_array_source_66(Idx)
 );
If(l_balance_type_code = 'A') THEN
  l_actual_gain_loss_ref := l_gain_or_loss_ref;
END IF;

--

      -- only execute it if calculate g/l flag is yes, and primary or secondary ledger
      -- or secondary ledger that has different currency with primary
      -- or alc that is calculated by sla
      IF (((l_calculate_g_l_flag = 'Y' AND XLA_AE_JOURNAL_ENTRY_PKG.g_cache_ledgers_info.ledger_category_code <> 'ALC') or
            (XLA_AE_JOURNAL_ENTRY_PKG.g_cache_ledgers_info.ledger_category_code in ('ALC', 'SECONDARY') AND XLA_AE_JOURNAL_ENTRY_PKG.g_cache_ledgers_info.calculate_amts_flag='Y'))

--      IF((l_calculate_g_l_flag='Y' or XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id <>
--                    XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.ledger_id)
          AND (l_actual_flag = 'A')) THEN
        XLA_AE_LINES_PKG.CreateGainOrLossLines(
          p_event_id         => xla_ae_journal_entry_pkg.g_cache_event.event_id
         ,p_application_id   => p_application_id
         ,p_amb_context_code => 'DEFAULT'
         ,p_entity_code      => xla_ae_journal_entry_pkg.g_cache_event.entity_code
         ,p_event_class_code => C_EVENT_CLASS_CODE
         ,p_event_type_code  => C_EVENT_TYPE_CODE
         
         ,p_gain_ccid        => -1
         ,p_loss_ccid        => -1

         ,p_actual_flag      => l_actual_flag
         ,p_enc_flag         => null
         ,p_actual_g_l_ref   => l_actual_gain_loss_ref
         ,p_enc_g_l_ref      => null
         );
      END IF;
   END IF;
END IF;

   ELSE
      --
      -- Bug 4872078 - Do nothing if the event is meant for transaction reversal
      --
      IF (C_LEVEL_STATEMENT >= g_log_level) THEN
         trace
            (p_msg      => 'Trancaction revesal option is Y'
            ,p_level    => C_LEVEL_STATEMENT
            ,p_module   => l_log_module);
      END IF;
   END IF;

END LOOP;
l_result := XLA_AE_LINES_PKG.InsertLines ;
end loop;
close line_cur;


--
-- insert headers into xla_ae_headers_gt table
--
l_result := XLA_AE_HEADER_PKG.InsertHeaders ;

-- insert into errors table here.

END LOOP;

--
-- 4865292
--
-- Compare g_hdr_extract_count with event count in
-- CreateHeadersAndLines.
--
g_hdr_extract_count := g_hdr_extract_count + header_cur%ROWCOUNT;

IF (C_LEVEL_STATEMENT >= g_log_level) THEN
   trace (p_msg     => '# rows extracted from header extract objects '
                    || ' (running total): '
                    || g_hdr_extract_count
         ,p_level   => C_LEVEL_STATEMENT
         ,p_module  => l_log_module);
END IF;

CLOSE header_cur;
--

--
IF (C_LEVEL_PROCEDURE >= g_log_level) THEN
   trace
      (p_msg      => 'END of EventClass_103'
      ,p_level    => C_LEVEL_PROCEDURE
      ,p_module   => l_log_module);
END IF;
--
RETURN l_result;
EXCEPTION
WHEN xla_exceptions_pkg.application_exception THEN
   
IF header_cur%ISOPEN THEN CLOSE header_cur; END IF;

   
IF line_cur%ISOPEN   THEN CLOSE line_cur;   END IF;

   RAISE;

WHEN NO_DATA_FOUND THEN

IF header_cur%ISOPEN THEN CLOSE header_cur; END IF;
IF line_cur%ISOPEN   THEN CLOSE line_cur;   END IF;

FOR header_record IN header_cur
LOOP
    l_array_header_events(header_record.event_id) := header_record.event_id;
END LOOP;

l_first_event_id := l_array_header_events(l_array_header_events.FIRST);
l_last_event_id := l_array_header_events(l_array_header_events.LAST);

fnd_file.put_line(fnd_file.LOG, '                    ');
fnd_file.put_line(fnd_file.LOG, '***************************************************************************');
fnd_file.put_line(fnd_file.LOG, 'EVENT CLASS CODE = ' || C_EVENT_CLASS_CODE );
fnd_file.put_line(fnd_file.LOG, 'The following events are present in the line extract but MISSING in the header extract: ');

FOR line_record IN line_cur(l_first_event_id, l_last_event_id)
LOOP
	IF (NOT l_array_header_events.EXISTS(line_record.event_id))  AND (NOT l_array_duplicate_checker.EXISTS(line_record.event_id)) THEN
	fnd_file.put_line(fnd_file.log, 'Event_id = ' || line_record.event_id);
        l_array_duplicate_checker(line_record.event_id) := line_record.event_id;
	END IF;
END LOOP;

fnd_file.put_line(fnd_file.LOG, '***************************************************************************');
fnd_file.put_line(fnd_file.LOG, '                    ');


xla_exceptions_pkg.raise_message
      (p_location => 'XLA_00200_AAD_S_000010_BC_PKG.EventClass_103');


WHEN OTHERS THEN
   xla_exceptions_pkg.raise_message
      (p_location => 'XLA_00200_AAD_S_000010_BC_PKG.EventClass_103');
END EventClass_103;
--

---------------------------------------
--
-- PRIVATE PROCEDURE
--         insert_sources_104
--
----------------------------------------
--
PROCEDURE insert_sources_104(
                                p_target_ledger_id       IN NUMBER
                              , p_language               IN VARCHAR2
                              , p_sla_ledger_id          IN NUMBER
                              , p_pad_start_date         IN DATE
                              , p_pad_end_date           IN DATE
                         )
IS

C_EVENT_TYPE_CODE    CONSTANT  VARCHAR2(30)  := 'DEBIT MEMOS_ALL';
C_EVENT_CLASS_CODE   CONSTANT  VARCHAR2(30) := 'DEBIT MEMOS';
p_apps_owner                   VARCHAR2(30);
l_log_module                   VARCHAR2(240);
BEGIN
IF g_log_enabled THEN
      l_log_module := C_DEFAULT_MODULE||'.insert_sources_104';
END IF;
IF (C_LEVEL_PROCEDURE >= g_log_level) THEN

      trace
         (p_msg      => 'BEGIN of insert_sources_104'
         ,p_level    => C_LEVEL_PROCEDURE
         ,p_module   => l_log_module);

END IF;

-- select APPS owner
SELECT oracle_username
  INTO p_apps_owner
  FROM fnd_oracle_userid
 WHERE read_only_flag = 'U'
;

IF (C_LEVEL_STATEMENT >= g_log_level) THEN
      trace
         (p_msg      => 'p_target_ledger_id = '||p_target_ledger_id||
                        ' - p_language = '||p_language||
                        ' - p_sla_ledger_id  = '||p_sla_ledger_id ||
                        ' - p_pad_start_date = '||TO_CHAR(p_pad_start_date)||
                        ' - p_pad_end_date = '||TO_CHAR(p_pad_end_date)||
                        ' - p_apps_owner = '||TO_CHAR(p_apps_owner)
         ,p_level    => C_LEVEL_STATEMENT
         ,p_module   => l_log_module);
END IF;


--
INSERT INTO xla_diag_sources --hdr2
(
        event_id
      , ledger_id
      , sla_ledger_id
      , description_language
      , object_name
      , object_type_code
      , line_number
      , source_application_id
      , source_type_code
      , source_code
      , source_value
      , source_meaning
      , created_by
      , creation_date
      , last_update_date
      , last_updated_by
      , last_update_login
      , program_update_date
      , program_application_id
      , program_id
      , request_id
)
SELECT
        event_id
      , p_target_ledger_id
      , p_sla_ledger_id
      , p_language
      , object_name
      , object_type_code
      , line_number
      , source_application_id
      , source_type_code
      , source_code
      , SUBSTR(source_value ,1,1996)
      , SUBSTR(source_meaning ,1,200)
      , xla_environment_pkg.g_Usr_Id
      , TRUNC(SYSDATE)
      , TRUNC(SYSDATE)
      , xla_environment_pkg.g_Usr_Id
      , xla_environment_pkg.g_Login_Id
      , TRUNC(SYSDATE)
      , xla_environment_pkg.g_Prog_Appl_Id
      , xla_environment_pkg.g_Prog_Id
      , xla_environment_pkg.g_Req_Id
  FROM (
       SELECT xet.event_id                  event_id
            , 0                          line_number
            , CASE r
               WHEN 1 THEN 'AP_SYSTEM_PARAMETERS_EXTRACT_V' 
                WHEN 2 THEN 'AP_SYSTEM_PARAMETERS_EXTRACT_V' 
                WHEN 3 THEN 'AP_SYSTEM_PARAMETERS_EXTRACT_V' 
                WHEN 4 THEN 'AP_SYSTEM_PARAMETERS_EXTRACT_V' 
                WHEN 5 THEN 'AP_SYSTEM_PARAMETERS_EXTRACT_V' 
                WHEN 6 THEN 'AP_INVOICE_EXTRACT_HEADER_V' 
                WHEN 7 THEN 'AP_INVOICE_EXTRACT_HEADER_V' 
                WHEN 8 THEN 'AP_INVOICE_EXTRACT_HEADER_V' 
                WHEN 9 THEN 'AP_INVOICE_EXTRACT_HEADER_V' 
                WHEN 10 THEN 'AP_INVOICE_EXTRACT_HEADER_V' 
                WHEN 11 THEN 'AP_INVOICE_EXTRACT_HEADER_V' 
                WHEN 12 THEN 'AP_INVOICE_EXTRACT_HEADER_V' 
                WHEN 13 THEN 'AP_INVOICE_EXTRACT_HEADER_V' 
                WHEN 14 THEN 'AP_INVOICE_EXTRACT_HEADER_V' 
                WHEN 15 THEN 'AP_INVOICE_EXTRACT_HEADER_V' 
                WHEN 16 THEN 'AP_INVOICE_EXTRACT_HEADER_V' 
                
               ELSE null
              END                           object_name
            , CASE r
                WHEN 1 THEN 'HEADER' 
                WHEN 2 THEN 'HEADER' 
                WHEN 3 THEN 'HEADER' 
                WHEN 4 THEN 'HEADER' 
                WHEN 5 THEN 'HEADER' 
                WHEN 6 THEN 'HEADER' 
                WHEN 7 THEN 'HEADER' 
                WHEN 8 THEN 'HEADER' 
                WHEN 9 THEN 'HEADER' 
                WHEN 10 THEN 'HEADER' 
                WHEN 11 THEN 'HEADER' 
                WHEN 12 THEN 'HEADER' 
                WHEN 13 THEN 'HEADER' 
                WHEN 14 THEN 'HEADER' 
                WHEN 15 THEN 'HEADER' 
                WHEN 16 THEN 'HEADER' 
                
                ELSE null
              END                           object_type_code
            , CASE r
                WHEN 1 THEN '200' 
                WHEN 2 THEN '200' 
                WHEN 3 THEN '200' 
                WHEN 4 THEN '200' 
                WHEN 5 THEN '200' 
                WHEN 6 THEN '200' 
                WHEN 7 THEN '200' 
                WHEN 8 THEN '200' 
                WHEN 9 THEN '200' 
                WHEN 10 THEN '200' 
                WHEN 11 THEN '200' 
                WHEN 12 THEN '200' 
                WHEN 13 THEN '200' 
                WHEN 14 THEN '200' 
                WHEN 15 THEN '200' 
                WHEN 16 THEN '200' 
                
                ELSE null
              END                           source_application_id
            , 'S'             source_type_code
            , CASE r
                WHEN 1 THEN 'ASP_RATE_VAR_GAIN_CCID' 
                WHEN 2 THEN 'ASP_AUTOMATIC_OFFSETS_VALUE' 
                WHEN 3 THEN 'ASP_RATE_VAR_LOSS_CCID' 
                WHEN 4 THEN 'ASP_AUTO_OFFSET_FLAG' 
                WHEN 5 THEN 'FSP_PURCH_ENCUMBRANCE_FLAG' 
                WHEN 6 THEN 'AI_INVOICE_ID' 
                WHEN 7 THEN 'AI_INVOICE_CURRENCY_CODE' 
                WHEN 8 THEN 'INV_EXCHANGE_DATE' 
                WHEN 9 THEN 'INV_EXCHANGE_RATE' 
                WHEN 10 THEN 'INV_EXCHANGE_RATE_TYPE' 
                WHEN 11 THEN 'AI_VENDOR_ID' 
                WHEN 12 THEN 'AI_VENDOR_SITE_ID' 
                WHEN 13 THEN 'THIRD_PARTY_TYPE' 
                WHEN 14 THEN 'INV_DOC_SEQUENCE_CATEGORY' 
                WHEN 15 THEN 'INV_DOC_SEQUENCE_IDENTIFIER' 
                WHEN 16 THEN 'INV_DOC_SEQUENCE_VALUE' 
                
                ELSE null
              END                           source_code
            , CASE r
                WHEN 1 THEN TO_CHAR(h3.ASP_RATE_VAR_GAIN_CCID)
                WHEN 2 THEN TO_CHAR(h3.ASP_AUTOMATIC_OFFSETS_VALUE)
                WHEN 3 THEN TO_CHAR(h3.ASP_RATE_VAR_LOSS_CCID)
                WHEN 4 THEN TO_CHAR(h3.ASP_AUTO_OFFSET_FLAG)
                WHEN 5 THEN TO_CHAR(h3.FSP_PURCH_ENCUMBRANCE_FLAG)
                WHEN 6 THEN TO_CHAR(h2.AI_INVOICE_ID)
                WHEN 7 THEN TO_CHAR(h2.AI_INVOICE_CURRENCY_CODE)
                WHEN 8 THEN TO_CHAR(h2.INV_EXCHANGE_DATE)
                WHEN 9 THEN TO_CHAR(h2.INV_EXCHANGE_RATE)
                WHEN 10 THEN TO_CHAR(h2.INV_EXCHANGE_RATE_TYPE)
                WHEN 11 THEN TO_CHAR(h2.AI_VENDOR_ID)
                WHEN 12 THEN TO_CHAR(h2.AI_VENDOR_SITE_ID)
                WHEN 13 THEN TO_CHAR(h2.THIRD_PARTY_TYPE)
                WHEN 14 THEN TO_CHAR(h2.INV_DOC_SEQUENCE_CATEGORY)
                WHEN 15 THEN TO_CHAR(h2.INV_DOC_SEQUENCE_IDENTIFIER)
                WHEN 16 THEN TO_CHAR(h2.INV_DOC_SEQUENCE_VALUE)
                
                ELSE null
              END                           source_value
            , CASE r
                WHEN 2 THEN fvl7.meaning
                WHEN 4 THEN fvl12.meaning
                WHEN 5 THEN fvl17.meaning
                
                ELSE null
              END               source_meaning
         FROM xla_events_gt     xet  
      , AP_INVOICE_EXTRACT_HEADER_V  h2
      , AP_SYSTEM_PARAMETERS_EXTRACT_V  h3
  , fnd_lookup_values    fvl7
  , fnd_lookup_values    fvl12
  , fnd_lookup_values    fvl17
             ,(select rownum r from all_objects where rownum <= 16 and owner = p_apps_owner)
         WHERE xet.event_date between p_pad_start_date AND p_pad_end_date
           AND xet.event_class_code = C_EVENT_CLASS_CODE
              AND h2.event_id = xet.event_id
 AND h3.asp_org_id= h2.ai_org_id   AND fvl7.lookup_type(+)         = 'LIABILITY FLEXBUILD METHOD'
  AND fvl7.lookup_code(+)         = h3.ASP_AUTOMATIC_OFFSETS_VALUE
  AND fvl7.view_application_id(+) = 200
  AND fvl7.language(+)            = USERENV('LANG')
     AND fvl12.lookup_type(+)         = 'YES_NO'
  AND fvl12.lookup_code(+)         = h3.ASP_AUTO_OFFSET_FLAG
  AND fvl12.view_application_id(+) = 0
  AND fvl12.language(+)            = USERENV('LANG')
     AND fvl17.lookup_type(+)         = 'YES_NO'
  AND fvl17.lookup_code(+)         = h3.FSP_PURCH_ENCUMBRANCE_FLAG
  AND fvl17.view_application_id(+) = 0
  AND fvl17.language(+)            = USERENV('LANG')
  
)
;
--
IF (C_LEVEL_STATEMENT >= g_log_level) THEN

      trace
         (p_msg      => 'number of header sources inserted = '||SQL%ROWCOUNT
         ,p_level    => C_LEVEL_STATEMENT
         ,p_module   => l_log_module);

END IF;
--



--
INSERT INTO xla_diag_sources  --line2
(
        event_id
      , ledger_id
      , sla_ledger_id
      , description_language
      , object_name
      , object_type_code
      , line_number
      , source_application_id
      , source_type_code
      , source_code
      , source_value
      , source_meaning
      , created_by
      , creation_date
      , last_update_date
      , last_updated_by
      , last_update_login
      , program_update_date
      , program_application_id
      , program_id
      , request_id
)
SELECT  event_id
      , p_target_ledger_id
      , p_sla_ledger_id
      , p_language
      , object_name
      , object_type_code
      , line_number
      , source_application_id
      , source_type_code
      , source_code
      , SUBSTR(source_value,1,1996)
      , SUBSTR(source_meaning ,1,200)
      , xla_environment_pkg.g_Usr_Id
      , TRUNC(SYSDATE)
      , TRUNC(SYSDATE)
      , xla_environment_pkg.g_Usr_Id
      , xla_environment_pkg.g_Login_Id
      , TRUNC(SYSDATE)
      , xla_environment_pkg.g_Prog_Appl_Id
      , xla_environment_pkg.g_Prog_Id
      , xla_environment_pkg.g_Req_Id
  FROM (
       SELECT xet.event_id                  event_id
            , l1.line_number                 line_number
            , CASE r
               WHEN 1 THEN 'AP_EXTRACT_INVOICE_DTLS_BC_V' 
                WHEN 2 THEN 'AP_EXTRACT_INVOICE_DTLS_BC_V' 
                WHEN 3 THEN 'AP_EXTRACT_INVOICE_DTLS_BC_V' 
                WHEN 4 THEN 'AP_EXTRACT_INVOICE_DTLS_BC_V' 
                WHEN 5 THEN 'AP_EXTRACT_INVOICE_DTLS_BC_V' 
                WHEN 6 THEN 'AP_EXTRACT_INVOICE_DTLS_BC_V' 
                WHEN 7 THEN 'AP_EXTRACT_INVOICE_DTLS_BC_V' 
                WHEN 8 THEN 'AP_EXTRACT_INVOICE_DTLS_BC_V' 
                WHEN 9 THEN 'AP_EXTRACT_INVOICE_DTLS_BC_V' 
                WHEN 10 THEN 'AP_EXTRACT_INVOICE_DTLS_BC_V' 
                WHEN 11 THEN 'AP_EXTRACT_INVOICE_DTLS_BC_V' 
                WHEN 12 THEN 'AP_EXTRACT_INVOICE_DTLS_BC_V' 
                WHEN 13 THEN 'AP_EXTRACT_INVOICE_DTLS_BC_V' 
                WHEN 14 THEN 'AP_EXTRACT_INVOICE_DTLS_BC_V' 
                WHEN 15 THEN 'AP_EXTRACT_INVOICE_DTLS_BC_V' 
                WHEN 16 THEN 'AP_EXTRACT_INVOICE_DTLS_BC_V' 
                WHEN 17 THEN 'AP_EXTRACT_INVOICE_DTLS_BC_V' 
                WHEN 18 THEN 'AP_EXTRACT_INVOICE_DTLS_BC_V' 
                WHEN 19 THEN 'AP_EXTRACT_INVOICE_DTLS_BC_V' 
                WHEN 20 THEN 'AP_EXTRACT_INVOICE_DTLS_BC_V' 
                WHEN 21 THEN 'AP_EXTRACT_INVOICE_DTLS_BC_V' 
                WHEN 22 THEN 'AP_EXTRACT_INVOICE_DTLS_BC_V' 
                WHEN 23 THEN 'AP_EXTRACT_INVOICE_DTLS_BC_V' 
                WHEN 24 THEN 'AP_EXTRACT_INVOICE_DTLS_BC_V' 
                WHEN 25 THEN 'AP_EXTRACT_INVOICE_DTLS_BC_V' 
                WHEN 26 THEN 'AP_EXTRACT_INVOICE_DTLS_BC_V' 
                WHEN 27 THEN 'AP_EXTRACT_INVOICE_DTLS_BC_V' 
                WHEN 28 THEN 'AP_EXTRACT_INVOICE_DTLS_BC_V' 
                WHEN 29 THEN 'AP_EXTRACT_INVOICE_DTLS_BC_V' 
                WHEN 30 THEN 'AP_EXTRACT_INVOICE_DTLS_BC_V' 
                WHEN 31 THEN 'ZX_AP_DEF_TAX_EXTRACT_V' 
                WHEN 32 THEN 'ZX_AP_TAX_JRNL_LINE_DESC_V' 
                WHEN 33 THEN 'AP_EXTRACT_INVOICE_DTLS_BC_V' 
                WHEN 34 THEN 'AP_EXTRACT_INVOICE_DTLS_BC_V' 
                WHEN 35 THEN 'AP_EXTRACT_INVOICE_DTLS_BC_V' 
                WHEN 36 THEN 'AP_EXTRACT_INVOICE_DTLS_BC_V' 
                WHEN 37 THEN 'AP_EXTRACT_INVOICE_DTLS_BC_V' 
                WHEN 38 THEN 'AP_EXTRACT_INVOICE_DTLS_BC_V' 
                WHEN 39 THEN 'AP_EXTRACT_INVOICE_DTLS_BC_V' 
                WHEN 40 THEN 'AP_EXTRACT_INVOICE_DTLS_BC_V' 
                WHEN 41 THEN 'AP_EXTRACT_INVOICE_DTLS_BC_V' 
                WHEN 42 THEN 'AP_EXTRACT_INVOICE_DTLS_BC_V' 
                WHEN 43 THEN 'AP_EXTRACT_INVOICE_DTLS_BC_V' 
                WHEN 44 THEN 'AP_EXTRACT_INVOICE_DTLS_BC_V' 
                WHEN 45 THEN 'AP_EXTRACT_INVOICE_DTLS_BC_V' 
                WHEN 46 THEN 'AP_EXTRACT_INVOICE_DTLS_BC_V' 
                
               ELSE null
              END                           object_name
            , CASE r
                WHEN 1 THEN 'LINE' 
                WHEN 2 THEN 'LINE' 
                WHEN 3 THEN 'LINE' 
                WHEN 4 THEN 'LINE' 
                WHEN 5 THEN 'LINE' 
                WHEN 6 THEN 'LINE' 
                WHEN 7 THEN 'LINE' 
                WHEN 8 THEN 'LINE' 
                WHEN 9 THEN 'LINE' 
                WHEN 10 THEN 'LINE' 
                WHEN 11 THEN 'LINE' 
                WHEN 12 THEN 'LINE' 
                WHEN 13 THEN 'LINE' 
                WHEN 14 THEN 'LINE' 
                WHEN 15 THEN 'LINE' 
                WHEN 16 THEN 'LINE' 
                WHEN 17 THEN 'LINE' 
                WHEN 18 THEN 'LINE' 
                WHEN 19 THEN 'LINE' 
                WHEN 20 THEN 'LINE' 
                WHEN 21 THEN 'LINE' 
                WHEN 22 THEN 'LINE' 
                WHEN 23 THEN 'LINE' 
                WHEN 24 THEN 'LINE' 
                WHEN 25 THEN 'LINE' 
                WHEN 26 THEN 'LINE' 
                WHEN 27 THEN 'LINE' 
                WHEN 28 THEN 'LINE' 
                WHEN 29 THEN 'LINE' 
                WHEN 30 THEN 'LINE' 
                WHEN 31 THEN 'LINE' 
                WHEN 32 THEN 'LINE' 
                WHEN 33 THEN 'LINE' 
                WHEN 34 THEN 'LINE' 
                WHEN 35 THEN 'LINE' 
                WHEN 36 THEN 'LINE' 
                WHEN 37 THEN 'LINE' 
                WHEN 38 THEN 'LINE' 
                WHEN 39 THEN 'LINE' 
                WHEN 40 THEN 'LINE' 
                WHEN 41 THEN 'LINE' 
                WHEN 42 THEN 'LINE' 
                WHEN 43 THEN 'LINE' 
                WHEN 44 THEN 'LINE' 
                WHEN 45 THEN 'LINE' 
                WHEN 46 THEN 'LINE' 
                
                ELSE null
              END                           object_type_code
            , CASE r
                WHEN 1 THEN '200' 
                WHEN 2 THEN '200' 
                WHEN 3 THEN '200' 
                WHEN 4 THEN '200' 
                WHEN 5 THEN '200' 
                WHEN 6 THEN '200' 
                WHEN 7 THEN '200' 
                WHEN 8 THEN '200' 
                WHEN 9 THEN '200' 
                WHEN 10 THEN '200' 
                WHEN 11 THEN '200' 
                WHEN 12 THEN '200' 
                WHEN 13 THEN '200' 
                WHEN 14 THEN '200' 
                WHEN 15 THEN '200' 
                WHEN 16 THEN '200' 
                WHEN 17 THEN '200' 
                WHEN 18 THEN '200' 
                WHEN 19 THEN '200' 
                WHEN 20 THEN '200' 
                WHEN 21 THEN '200' 
                WHEN 22 THEN '200' 
                WHEN 23 THEN '200' 
                WHEN 24 THEN '200' 
                WHEN 25 THEN '200' 
                WHEN 26 THEN '200' 
                WHEN 27 THEN '200' 
                WHEN 28 THEN '200' 
                WHEN 29 THEN '200' 
                WHEN 30 THEN '200' 
                WHEN 31 THEN '200' 
                WHEN 32 THEN '200' 
                WHEN 33 THEN '200' 
                WHEN 34 THEN '200' 
                WHEN 35 THEN '200' 
                WHEN 36 THEN '200' 
                WHEN 37 THEN '200' 
                WHEN 38 THEN '200' 
                WHEN 39 THEN '200' 
                WHEN 40 THEN '200' 
                WHEN 41 THEN '200' 
                WHEN 42 THEN '200' 
                WHEN 43 THEN '200' 
                WHEN 44 THEN '200' 
                WHEN 45 THEN '200' 
                WHEN 46 THEN '200' 
                
                ELSE null
              END                           source_application_id
            , 'S'             source_type_code
            , CASE r
                WHEN 1 THEN 'AID_DESCRIPTION' 
                WHEN 2 THEN 'INV_DIST_BASE_AMOUNT' 
                WHEN 3 THEN 'RELATED_INV_DIST_DEST_TYPE' 
                WHEN 4 THEN 'AID_DIST_CCID' 
                WHEN 5 THEN 'SELF_ASSESSED_TAX_ACCOUNT' 
                WHEN 6 THEN 'AID_LINE_TYPE_LOOKUP_CODE' 
                WHEN 7 THEN 'AID_AMOUNT_VARIANCE' 
                WHEN 8 THEN 'POD_ACCRUE_ON_RECEIPT_FLAG' 
                WHEN 9 THEN 'DIST_ACCOUNT_REVERSAL_OPTION' 
                WHEN 10 THEN 'DISTRIBUTION_LINK_TYPE' 
                WHEN 11 THEN 'ALLOC_TO_MAIN_DIST_ID' 
                WHEN 12 THEN 'BUS_FLOW_AP_APP_ID' 
                WHEN 13 THEN 'BUS_FLOW_INV_DIST_TYPE' 
                WHEN 14 THEN 'BUS_FLOW_INV_ENTITY_CODE' 
                WHEN 15 THEN 'BUS_FLOW_INV_DIST_ID' 
                WHEN 16 THEN 'BUS_FLOW_INV_ID' 
                WHEN 17 THEN 'AID_INVOICE_DIST_ID' 
                WHEN 18 THEN 'UPG_ENC_CR_CCID' 
                WHEN 19 THEN 'UPG_ENC_CR_AMT' 
                WHEN 20 THEN 'UPG_ENC_CR_BASE_AMT' 
                WHEN 21 THEN 'UPG_ENC_DR_CCID' 
                WHEN 22 THEN 'UPG_ENC_DR_AMT' 
                WHEN 23 THEN 'UPG_ENC_DR_BASE_AMT' 
                WHEN 24 THEN 'UPG_AP_ENCUM_OPTION' 
                WHEN 25 THEN 'AID_BASE_AMOUNT_VARIANCE' 
                WHEN 26 THEN 'DEFERRED_END_DATE' 
                WHEN 27 THEN 'DEFERRED_OPTION' 
                WHEN 28 THEN 'DEFERRED_START_DATE' 
                WHEN 29 THEN 'OVERRIDE_ACCTD_AMT_FLAG' 
                WHEN 30 THEN 'AID_PARENT_REVERSAL_ID' 
                WHEN 31 THEN 'TAX_LINE_ID' 
                WHEN 32 THEN 'REC_NREC_TAX_DIST_ID' 
                WHEN 33 THEN 'SUMMARY_TAX_LINE_ID' 
                WHEN 34 THEN 'UPG_CR_ENC_TYPE_ID' 
                WHEN 35 THEN 'UPG_DR_ENC_TYPE_ID' 
                WHEN 36 THEN 'PO_DISTRIBUTION_ID' 
                WHEN 37 THEN 'SELF_ASSESSED_TAX_FLAG' 
                WHEN 38 THEN 'BUS_FLOW_PO_APP_ID' 
                WHEN 39 THEN 'BUS_FLOW_PO_DIST_TYPE' 
                WHEN 40 THEN 'BUS_FLOW_PO_ENTITY_CODE' 
                WHEN 41 THEN 'BUS_FLOW_PO_DIST_ID' 
                WHEN 42 THEN 'BUS_FLOW_PO_DOC_ID' 
                WHEN 43 THEN 'ENCUMBRANCE_AMOUNT' 
                WHEN 44 THEN 'ENCUMBRANCE_BASE_AMOUNT' 
                WHEN 45 THEN 'AID_QUANTITY_VARIANCE' 
                WHEN 46 THEN 'AID_BASE_QUANTITY_VARIANCE' 
                
                ELSE null
              END                           source_code
            , CASE r
                WHEN 1 THEN TO_CHAR(l1.AID_DESCRIPTION)
                WHEN 2 THEN TO_CHAR(l1.INV_DIST_BASE_AMOUNT)
                WHEN 3 THEN TO_CHAR(l1.RELATED_INV_DIST_DEST_TYPE)
                WHEN 4 THEN TO_CHAR(l1.AID_DIST_CCID)
                WHEN 5 THEN TO_CHAR(l1.SELF_ASSESSED_TAX_ACCOUNT)
                WHEN 6 THEN TO_CHAR(l1.AID_LINE_TYPE_LOOKUP_CODE)
                WHEN 7 THEN TO_CHAR(l1.AID_AMOUNT_VARIANCE)
                WHEN 8 THEN TO_CHAR(l1.POD_ACCRUE_ON_RECEIPT_FLAG)
                WHEN 9 THEN TO_CHAR(l1.DIST_ACCOUNT_REVERSAL_OPTION)
                WHEN 10 THEN TO_CHAR(l1.DISTRIBUTION_LINK_TYPE)
                WHEN 11 THEN TO_CHAR(l1.ALLOC_TO_MAIN_DIST_ID)
                WHEN 12 THEN TO_CHAR(l1.BUS_FLOW_AP_APP_ID)
                WHEN 13 THEN TO_CHAR(l1.BUS_FLOW_INV_DIST_TYPE)
                WHEN 14 THEN TO_CHAR(l1.BUS_FLOW_INV_ENTITY_CODE)
                WHEN 15 THEN TO_CHAR(l1.BUS_FLOW_INV_DIST_ID)
                WHEN 16 THEN TO_CHAR(l1.BUS_FLOW_INV_ID)
                WHEN 17 THEN TO_CHAR(l1.AID_INVOICE_DIST_ID)
                WHEN 18 THEN TO_CHAR(l1.UPG_ENC_CR_CCID)
                WHEN 19 THEN TO_CHAR(l1.UPG_ENC_CR_AMT)
                WHEN 20 THEN TO_CHAR(l1.UPG_ENC_CR_BASE_AMT)
                WHEN 21 THEN TO_CHAR(l1.UPG_ENC_DR_CCID)
                WHEN 22 THEN TO_CHAR(l1.UPG_ENC_DR_AMT)
                WHEN 23 THEN TO_CHAR(l1.UPG_ENC_DR_BASE_AMT)
                WHEN 24 THEN TO_CHAR(l1.UPG_AP_ENCUM_OPTION)
                WHEN 25 THEN TO_CHAR(l1.AID_BASE_AMOUNT_VARIANCE)
                WHEN 26 THEN TO_CHAR(l1.DEFERRED_END_DATE)
                WHEN 27 THEN TO_CHAR(l1.DEFERRED_OPTION)
                WHEN 28 THEN TO_CHAR(l1.DEFERRED_START_DATE)
                WHEN 29 THEN TO_CHAR(l1.OVERRIDE_ACCTD_AMT_FLAG)
                WHEN 30 THEN TO_CHAR(l1.AID_PARENT_REVERSAL_ID)
                WHEN 31 THEN TO_CHAR(l4.TAX_LINE_ID)
                WHEN 32 THEN TO_CHAR(l5.REC_NREC_TAX_DIST_ID)
                WHEN 33 THEN TO_CHAR(l1.SUMMARY_TAX_LINE_ID)
                WHEN 34 THEN TO_CHAR(l1.UPG_CR_ENC_TYPE_ID)
                WHEN 35 THEN TO_CHAR(l1.UPG_DR_ENC_TYPE_ID)
                WHEN 36 THEN TO_CHAR(l1.PO_DISTRIBUTION_ID)
                WHEN 37 THEN TO_CHAR(l1.SELF_ASSESSED_TAX_FLAG)
                WHEN 38 THEN TO_CHAR(l1.BUS_FLOW_PO_APP_ID)
                WHEN 39 THEN TO_CHAR(l1.BUS_FLOW_PO_DIST_TYPE)
                WHEN 40 THEN TO_CHAR(l1.BUS_FLOW_PO_ENTITY_CODE)
                WHEN 41 THEN TO_CHAR(l1.BUS_FLOW_PO_DIST_ID)
                WHEN 42 THEN TO_CHAR(l1.BUS_FLOW_PO_DOC_ID)
                WHEN 43 THEN TO_CHAR(l1.ENCUMBRANCE_AMOUNT)
                WHEN 44 THEN TO_CHAR(l1.ENCUMBRANCE_BASE_AMOUNT)
                WHEN 45 THEN TO_CHAR(l1.AID_QUANTITY_VARIANCE)
                WHEN 46 THEN TO_CHAR(l1.AID_BASE_QUANTITY_VARIANCE)
                
                ELSE null
              END                           source_value
            , CASE r
                WHEN 3 THEN fvl9.meaning
                WHEN 6 THEN fvl15.meaning
                WHEN 8 THEN fvl18.meaning
                WHEN 29 THEN fvl46.meaning
                WHEN 37 THEN fvl59.meaning
                
                ELSE null
              END               source_meaning
         FROM  xla_events_gt     xet  
        , AP_EXTRACT_INVOICE_DTLS_BC_V  l1
        , ZX_AP_DEF_TAX_EXTRACT_V  l4
        , ZX_AP_TAX_JRNL_LINE_DESC_V  l5
  , fnd_lookup_values    fvl9
  , fnd_lookup_values    fvl15
  , fnd_lookup_values    fvl18
  , fnd_lookup_values    fvl46
  , fnd_lookup_values    fvl59
            , (select rownum r from all_objects where rownum <= 46 and owner = p_apps_owner)
        WHERE xet.event_date between p_pad_start_date AND p_pad_end_date
          AND xet.event_class_code = C_EVENT_CLASS_CODE
            AND l1.event_id          = xet.event_id
 AND l1.zrnd_tax_dist_id = l4.rec_nrec_tax_dist_id (+)  AND l1.zrnd_tax_dist_id = l5.rec_nrec_tax_dist_id (+)    AND fvl9.lookup_type(+)         = 'DESTINATION TYPE'
  AND fvl9.lookup_code(+)         = l1.RELATED_INV_DIST_DEST_TYPE
  AND fvl9.view_application_id(+) = 201
  AND fvl9.language(+)            = USERENV('LANG')
     AND fvl15.lookup_type(+)         = 'INVOICE DISTRIBUTION TYPE'
  AND fvl15.lookup_code(+)         = l1.AID_LINE_TYPE_LOOKUP_CODE
  AND fvl15.view_application_id(+) = 200
  AND fvl15.language(+)            = USERENV('LANG')
     AND fvl18.lookup_type(+)         = 'YES_NO'
  AND fvl18.lookup_code(+)         = l1.POD_ACCRUE_ON_RECEIPT_FLAG
  AND fvl18.view_application_id(+) = 0
  AND fvl18.language(+)            = USERENV('LANG')
     AND fvl46.lookup_type(+)         = 'YES_NO'
  AND fvl46.lookup_code(+)         = l1.OVERRIDE_ACCTD_AMT_FLAG
  AND fvl46.view_application_id(+) = 0
  AND fvl46.language(+)            = USERENV('LANG')
     AND fvl59.lookup_type(+)         = 'YES_NO'
  AND fvl59.lookup_code(+)         = l1.SELF_ASSESSED_TAX_FLAG
  AND fvl59.view_application_id(+) = 0
  AND fvl59.language(+)            = USERENV('LANG')
  
)
;
--
IF (C_LEVEL_STATEMENT >= g_log_level) THEN

      trace
         (p_msg      => 'number of line sources inserted = '||SQL%ROWCOUNT
         ,p_level    => C_LEVEL_STATEMENT
         ,p_module   => l_log_module);

END IF;


IF (C_LEVEL_PROCEDURE >= g_log_level) THEN
      trace
         (p_msg      => 'END of insert_sources_104'
         ,p_level    => C_LEVEL_PROCEDURE
         ,p_module   => l_log_module);
END IF;
EXCEPTION
  WHEN xla_exceptions_pkg.application_exception THEN
      IF (C_LEVEL_EXCEPTION >= g_log_level) THEN
            trace
               (p_msg      => 'ERROR: XLA_CMP_COMPILER_ERROR = '||sqlerrm
               ,p_level    => C_LEVEL_EXCEPTION
               ,p_module   => l_log_module);
      END IF;
      RAISE;
  WHEN OTHERS THEN
      IF (C_LEVEL_EXCEPTION >= g_log_level) THEN
            trace
               (p_msg      => 'ERROR: XLA_CMP_COMPILER_ERROR = '||sqlerrm
               ,p_level    => C_LEVEL_EXCEPTION
               ,p_module   => l_log_module);
       END IF;
       xla_exceptions_pkg.raise_message
           (p_location => 'XLA_00200_AAD_S_000010_BC_PKG.insert_sources_104');
END insert_sources_104;
--

---------------------------------------
--
-- PRIVATE FUNCTION
--         EventClass_104
--
----------------------------------------
--
FUNCTION EventClass_104
       (p_application_id         IN NUMBER
       ,p_base_ledger_id         IN NUMBER
       ,p_target_ledger_id       IN NUMBER
       ,p_language               IN VARCHAR2
       ,p_currency_code          IN VARCHAR2
       ,p_sla_ledger_id          IN NUMBER
       ,p_pad_start_date         IN DATE
       ,p_pad_end_date           IN DATE
       ,p_primary_ledger_id      IN NUMBER)
RETURN BOOLEAN IS
--
C_EVENT_TYPE_CODE    CONSTANT  VARCHAR2(30)  := 'DEBIT MEMOS_ALL';
C_EVENT_CLASS_CODE    CONSTANT  VARCHAR2(30) := 'DEBIT MEMOS';

l_calculate_acctd_flag   VARCHAR2(1) :='N';
l_calculate_g_l_flag     VARCHAR2(1) :='N';
--
l_array_legal_entity_id                XLA_AE_JOURNAL_ENTRY_PKG.t_array_Num;
l_array_entity_id                      XLA_AE_JOURNAL_ENTRY_PKG.t_array_Num;
l_array_entity_code                    XLA_AE_JOURNAL_ENTRY_PKG.t_array_V30L;
l_array_transaction_num                XLA_AE_JOURNAL_ENTRY_PKG.t_array_V240L;
l_array_event_id                       XLA_AE_JOURNAL_ENTRY_PKG.t_array_Num;
l_array_class_code                     XLA_AE_JOURNAL_ENTRY_PKG.t_array_V30L;
l_array_event_type                     XLA_AE_JOURNAL_ENTRY_PKG.t_array_V30L;
l_array_event_number                   XLA_AE_JOURNAL_ENTRY_PKG.t_array_Num;
l_array_event_date                     XLA_AE_JOURNAL_ENTRY_PKG.t_array_Date;
l_array_transaction_date               XLA_AE_JOURNAL_ENTRY_PKG.t_array_Date;
l_array_reference_num_1                XLA_AE_JOURNAL_ENTRY_PKG.t_array_Num;
l_array_reference_num_2                XLA_AE_JOURNAL_ENTRY_PKG.t_array_Num;
l_array_reference_num_3                XLA_AE_JOURNAL_ENTRY_PKG.t_array_Num;
l_array_reference_num_4                XLA_AE_JOURNAL_ENTRY_PKG.t_array_Num;
l_array_reference_char_1               XLA_AE_JOURNAL_ENTRY_PKG.t_array_V240L;
l_array_reference_char_2               XLA_AE_JOURNAL_ENTRY_PKG.t_array_V240L;
l_array_reference_char_3               XLA_AE_JOURNAL_ENTRY_PKG.t_array_V240L;
l_array_reference_char_4               XLA_AE_JOURNAL_ENTRY_PKG.t_array_V240L;
l_array_reference_date_1               XLA_AE_JOURNAL_ENTRY_PKG.t_array_Date;
l_array_reference_date_2               XLA_AE_JOURNAL_ENTRY_PKG.t_array_Date;
l_array_reference_date_3               XLA_AE_JOURNAL_ENTRY_PKG.t_array_Date;
l_array_reference_date_4               XLA_AE_JOURNAL_ENTRY_PKG.t_array_Date;
l_array_event_created_by               XLA_AE_JOURNAL_ENTRY_PKG.t_array_V100L;
l_array_budgetary_control_flag         XLA_AE_JOURNAL_ENTRY_PKG.t_array_V30L;
l_array_header_events                  XLA_AE_JOURNAL_ENTRY_PKG.t_array_Num;  --added
l_array_duplicate_checker              XLA_AE_JOURNAL_ENTRY_PKG.t_array_Num;  --added

l_event_id                             NUMBER;
l_previous_event_id                    NUMBER;
l_first_event_id                       NUMBER;
l_last_event_id                        NUMBER;

l_rec_acct_attrs                       XLA_AE_HEADER_PKG.t_rec_acct_attrs;
l_rec_rev_acct_attrs                   XLA_AE_LINES_PKG.t_rec_acct_attrs;
--
--
l_result                    BOOLEAN := TRUE;
l_rows                      NUMBER  := 1000;
l_event_type_name           VARCHAR2(80) := 'All';
l_event_class_name          VARCHAR2(80) := 'Debit Memos';
l_description               VARCHAR2(4000);
l_transaction_reversal      NUMBER;
l_ae_header_id              NUMBER;
l_array_extract_line_num    xla_ae_journal_entry_pkg.t_array_Num;
l_log_module                VARCHAR2(240);
--
l_acct_reversal_source      VARCHAR2(30);
l_trx_reversal_source       VARCHAR2(30);

l_continue_with_lines       BOOLEAN := TRUE;
--
l_acc_rev_gl_date_source    DATE;                      -- 4262811
--
type t_array_event_id is table of number index by binary_integer;

l_rec_array_event                    t_rec_array_event;
l_null_rec_array_event               t_rec_array_event;
l_array_ae_header_id                 xla_number_array_type;
l_actual_flag                        VARCHAR2(1) := NULL;
l_actual_gain_loss_ref               VARCHAR2(30) := '#####';
l_balance_type_code                  VARCHAR2(1) :=NULL;
l_gain_or_loss_ref                   VARCHAR2(30) :=NULL;

--
TYPE t_array_lookup_meaning IS TABLE OF fnd_lookup_values.meaning%TYPE INDEX BY BINARY_INTEGER;
--

TYPE t_array_source_6 IS TABLE OF AP_SYSTEM_PARAMETERS_EXTRACT_V.ASP_RATE_VAR_GAIN_CCID%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_7 IS TABLE OF AP_SYSTEM_PARAMETERS_EXTRACT_V.ASP_AUTOMATIC_OFFSETS_VALUE%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_10 IS TABLE OF AP_SYSTEM_PARAMETERS_EXTRACT_V.ASP_RATE_VAR_LOSS_CCID%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_12 IS TABLE OF AP_SYSTEM_PARAMETERS_EXTRACT_V.ASP_AUTO_OFFSET_FLAG%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_17 IS TABLE OF AP_SYSTEM_PARAMETERS_EXTRACT_V.FSP_PURCH_ENCUMBRANCE_FLAG%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_24 IS TABLE OF AP_INVOICE_EXTRACT_HEADER_V.AI_INVOICE_ID%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_33 IS TABLE OF AP_INVOICE_EXTRACT_HEADER_V.AI_INVOICE_CURRENCY_CODE%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_39 IS TABLE OF AP_INVOICE_EXTRACT_HEADER_V.INV_EXCHANGE_DATE%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_40 IS TABLE OF AP_INVOICE_EXTRACT_HEADER_V.INV_EXCHANGE_RATE%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_41 IS TABLE OF AP_INVOICE_EXTRACT_HEADER_V.INV_EXCHANGE_RATE_TYPE%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_47 IS TABLE OF AP_INVOICE_EXTRACT_HEADER_V.AI_VENDOR_ID%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_48 IS TABLE OF AP_INVOICE_EXTRACT_HEADER_V.AI_VENDOR_SITE_ID%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_49 IS TABLE OF AP_INVOICE_EXTRACT_HEADER_V.THIRD_PARTY_TYPE%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_122 IS TABLE OF AP_INVOICE_EXTRACT_HEADER_V.INV_DOC_SEQUENCE_CATEGORY%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_123 IS TABLE OF AP_INVOICE_EXTRACT_HEADER_V.INV_DOC_SEQUENCE_IDENTIFIER%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_124 IS TABLE OF AP_INVOICE_EXTRACT_HEADER_V.INV_DOC_SEQUENCE_VALUE%TYPE INDEX BY BINARY_INTEGER;

TYPE t_array_source_1 IS TABLE OF AP_EXTRACT_INVOICE_DTLS_BC_V.AID_DESCRIPTION%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_8 IS TABLE OF AP_EXTRACT_INVOICE_DTLS_BC_V.INV_DIST_BASE_AMOUNT%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_9 IS TABLE OF AP_EXTRACT_INVOICE_DTLS_BC_V.RELATED_INV_DIST_DEST_TYPE%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_11 IS TABLE OF AP_EXTRACT_INVOICE_DTLS_BC_V.AID_DIST_CCID%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_13 IS TABLE OF AP_EXTRACT_INVOICE_DTLS_BC_V.SELF_ASSESSED_TAX_ACCOUNT%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_15 IS TABLE OF AP_EXTRACT_INVOICE_DTLS_BC_V.AID_LINE_TYPE_LOOKUP_CODE%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_16 IS TABLE OF AP_EXTRACT_INVOICE_DTLS_BC_V.AID_AMOUNT_VARIANCE%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_18 IS TABLE OF AP_EXTRACT_INVOICE_DTLS_BC_V.POD_ACCRUE_ON_RECEIPT_FLAG%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_19 IS TABLE OF AP_EXTRACT_INVOICE_DTLS_BC_V.DIST_ACCOUNT_REVERSAL_OPTION%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_21 IS TABLE OF AP_EXTRACT_INVOICE_DTLS_BC_V.DISTRIBUTION_LINK_TYPE%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_23 IS TABLE OF AP_EXTRACT_INVOICE_DTLS_BC_V.ALLOC_TO_MAIN_DIST_ID%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_25 IS TABLE OF AP_EXTRACT_INVOICE_DTLS_BC_V.BUS_FLOW_AP_APP_ID%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_26 IS TABLE OF AP_EXTRACT_INVOICE_DTLS_BC_V.BUS_FLOW_INV_DIST_TYPE%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_27 IS TABLE OF AP_EXTRACT_INVOICE_DTLS_BC_V.BUS_FLOW_INV_ENTITY_CODE%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_28 IS TABLE OF AP_EXTRACT_INVOICE_DTLS_BC_V.BUS_FLOW_INV_DIST_ID%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_29 IS TABLE OF AP_EXTRACT_INVOICE_DTLS_BC_V.BUS_FLOW_INV_ID%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_30 IS TABLE OF AP_EXTRACT_INVOICE_DTLS_BC_V.AID_INVOICE_DIST_ID%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_31 IS TABLE OF AP_EXTRACT_INVOICE_DTLS_BC_V.UPG_ENC_CR_CCID%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_32 IS TABLE OF AP_EXTRACT_INVOICE_DTLS_BC_V.UPG_ENC_CR_AMT%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_34 IS TABLE OF AP_EXTRACT_INVOICE_DTLS_BC_V.UPG_ENC_CR_BASE_AMT%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_35 IS TABLE OF AP_EXTRACT_INVOICE_DTLS_BC_V.UPG_ENC_DR_CCID%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_36 IS TABLE OF AP_EXTRACT_INVOICE_DTLS_BC_V.UPG_ENC_DR_AMT%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_37 IS TABLE OF AP_EXTRACT_INVOICE_DTLS_BC_V.UPG_ENC_DR_BASE_AMT%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_38 IS TABLE OF AP_EXTRACT_INVOICE_DTLS_BC_V.UPG_AP_ENCUM_OPTION%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_42 IS TABLE OF AP_EXTRACT_INVOICE_DTLS_BC_V.AID_BASE_AMOUNT_VARIANCE%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_43 IS TABLE OF AP_EXTRACT_INVOICE_DTLS_BC_V.DEFERRED_END_DATE%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_44 IS TABLE OF AP_EXTRACT_INVOICE_DTLS_BC_V.DEFERRED_OPTION%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_45 IS TABLE OF AP_EXTRACT_INVOICE_DTLS_BC_V.DEFERRED_START_DATE%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_46 IS TABLE OF AP_EXTRACT_INVOICE_DTLS_BC_V.OVERRIDE_ACCTD_AMT_FLAG%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_50 IS TABLE OF AP_EXTRACT_INVOICE_DTLS_BC_V.AID_PARENT_REVERSAL_ID%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_52 IS TABLE OF ZX_AP_DEF_TAX_EXTRACT_V.TAX_LINE_ID%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_53 IS TABLE OF ZX_AP_TAX_JRNL_LINE_DESC_V.REC_NREC_TAX_DIST_ID%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_54 IS TABLE OF AP_EXTRACT_INVOICE_DTLS_BC_V.SUMMARY_TAX_LINE_ID%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_55 IS TABLE OF AP_EXTRACT_INVOICE_DTLS_BC_V.UPG_CR_ENC_TYPE_ID%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_56 IS TABLE OF AP_EXTRACT_INVOICE_DTLS_BC_V.UPG_DR_ENC_TYPE_ID%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_58 IS TABLE OF AP_EXTRACT_INVOICE_DTLS_BC_V.PO_DISTRIBUTION_ID%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_59 IS TABLE OF AP_EXTRACT_INVOICE_DTLS_BC_V.SELF_ASSESSED_TAX_FLAG%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_60 IS TABLE OF AP_EXTRACT_INVOICE_DTLS_BC_V.BUS_FLOW_PO_APP_ID%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_61 IS TABLE OF AP_EXTRACT_INVOICE_DTLS_BC_V.BUS_FLOW_PO_DIST_TYPE%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_62 IS TABLE OF AP_EXTRACT_INVOICE_DTLS_BC_V.BUS_FLOW_PO_ENTITY_CODE%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_63 IS TABLE OF AP_EXTRACT_INVOICE_DTLS_BC_V.BUS_FLOW_PO_DIST_ID%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_64 IS TABLE OF AP_EXTRACT_INVOICE_DTLS_BC_V.BUS_FLOW_PO_DOC_ID%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_65 IS TABLE OF AP_EXTRACT_INVOICE_DTLS_BC_V.ENCUMBRANCE_AMOUNT%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_66 IS TABLE OF AP_EXTRACT_INVOICE_DTLS_BC_V.ENCUMBRANCE_BASE_AMOUNT%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_81 IS TABLE OF AP_EXTRACT_INVOICE_DTLS_BC_V.AID_QUANTITY_VARIANCE%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_82 IS TABLE OF AP_EXTRACT_INVOICE_DTLS_BC_V.AID_BASE_QUANTITY_VARIANCE%TYPE INDEX BY BINARY_INTEGER;

l_array_source_6              t_array_source_6;
l_array_source_7              t_array_source_7;
l_array_source_7_meaning      t_array_lookup_meaning;
l_array_source_10              t_array_source_10;
l_array_source_12              t_array_source_12;
l_array_source_12_meaning      t_array_lookup_meaning;
l_array_source_17              t_array_source_17;
l_array_source_17_meaning      t_array_lookup_meaning;
l_array_source_24              t_array_source_24;
l_array_source_33              t_array_source_33;
l_array_source_39              t_array_source_39;
l_array_source_40              t_array_source_40;
l_array_source_41              t_array_source_41;
l_array_source_47              t_array_source_47;
l_array_source_48              t_array_source_48;
l_array_source_49              t_array_source_49;
l_array_source_122              t_array_source_122;
l_array_source_123              t_array_source_123;
l_array_source_124              t_array_source_124;

l_array_source_1      t_array_source_1;
l_array_source_8      t_array_source_8;
l_array_source_9      t_array_source_9;
l_array_source_9_meaning      t_array_lookup_meaning;
l_array_source_11      t_array_source_11;
l_array_source_13      t_array_source_13;
l_array_source_15      t_array_source_15;
l_array_source_15_meaning      t_array_lookup_meaning;
l_array_source_16      t_array_source_16;
l_array_source_18      t_array_source_18;
l_array_source_18_meaning      t_array_lookup_meaning;
l_array_source_19      t_array_source_19;
l_array_source_21      t_array_source_21;
l_array_source_23      t_array_source_23;
l_array_source_25      t_array_source_25;
l_array_source_26      t_array_source_26;
l_array_source_27      t_array_source_27;
l_array_source_28      t_array_source_28;
l_array_source_29      t_array_source_29;
l_array_source_30      t_array_source_30;
l_array_source_31      t_array_source_31;
l_array_source_32      t_array_source_32;
l_array_source_34      t_array_source_34;
l_array_source_35      t_array_source_35;
l_array_source_36      t_array_source_36;
l_array_source_37      t_array_source_37;
l_array_source_38      t_array_source_38;
l_array_source_42      t_array_source_42;
l_array_source_43      t_array_source_43;
l_array_source_44      t_array_source_44;
l_array_source_45      t_array_source_45;
l_array_source_46      t_array_source_46;
l_array_source_46_meaning      t_array_lookup_meaning;
l_array_source_50      t_array_source_50;
l_array_source_52      t_array_source_52;
l_array_source_53      t_array_source_53;
l_array_source_54      t_array_source_54;
l_array_source_55      t_array_source_55;
l_array_source_56      t_array_source_56;
l_array_source_58      t_array_source_58;
l_array_source_59      t_array_source_59;
l_array_source_59_meaning      t_array_lookup_meaning;
l_array_source_60      t_array_source_60;
l_array_source_61      t_array_source_61;
l_array_source_62      t_array_source_62;
l_array_source_63      t_array_source_63;
l_array_source_64      t_array_source_64;
l_array_source_65      t_array_source_65;
l_array_source_66      t_array_source_66;
l_array_source_81      t_array_source_81;
l_array_source_82      t_array_source_82;

--
CURSOR header_cur
IS
SELECT /*+ leading(xet) cardinality(xet,1) */
-- Event Class Code: DEBIT MEMOS
    xet.entity_id
   ,xet.legal_entity_id
   ,xet.entity_code
   ,xet.transaction_number
   ,xet.event_id
   ,xet.event_class_code
   ,xet.event_type_code
   ,xet.event_number
   ,xet.event_date
   ,xet.transaction_date
   ,xet.reference_num_1
   ,xet.reference_num_2
   ,xet.reference_num_3
   ,xet.reference_num_4
   ,xet.reference_char_1
   ,xet.reference_char_2
   ,xet.reference_char_3
   ,xet.reference_char_4
   ,xet.reference_date_1
   ,xet.reference_date_2
   ,xet.reference_date_3
   ,xet.reference_date_4
   ,xet.event_created_by
   ,xet.budgetary_control_flag 
  , h3.ASP_RATE_VAR_GAIN_CCID    source_6
  , h3.ASP_AUTOMATIC_OFFSETS_VALUE    source_7
  , fvl7.meaning   source_7_meaning
  , h3.ASP_RATE_VAR_LOSS_CCID    source_10
  , h3.ASP_AUTO_OFFSET_FLAG    source_12
  , fvl12.meaning   source_12_meaning
  , h3.FSP_PURCH_ENCUMBRANCE_FLAG    source_17
  , fvl17.meaning   source_17_meaning
  , h2.AI_INVOICE_ID    source_24
  , h2.AI_INVOICE_CURRENCY_CODE    source_33
  , h2.INV_EXCHANGE_DATE    source_39
  , h2.INV_EXCHANGE_RATE    source_40
  , h2.INV_EXCHANGE_RATE_TYPE    source_41
  , h2.AI_VENDOR_ID    source_47
  , h2.AI_VENDOR_SITE_ID    source_48
  , h2.THIRD_PARTY_TYPE    source_49
  , h2.INV_DOC_SEQUENCE_CATEGORY    source_122
  , h2.INV_DOC_SEQUENCE_IDENTIFIER    source_123
  , h2.INV_DOC_SEQUENCE_VALUE    source_124
  FROM xla_events_gt     xet 
  , AP_INVOICE_EXTRACT_HEADER_V  h2
  , AP_SYSTEM_PARAMETERS_EXTRACT_V  h3
  , fnd_lookup_values    fvl7
  , fnd_lookup_values    fvl12
  , fnd_lookup_values    fvl17
 WHERE xet.event_date between p_pad_start_date and p_pad_end_date
   and xet.event_class_code = C_EVENT_CLASS_CODE
   and xet.event_status_code <> 'N'  AND h2.event_id = xet.event_id
 AND h3.asp_org_id= h2.ai_org_id   AND fvl7.lookup_type(+)         = 'LIABILITY FLEXBUILD METHOD'
  AND fvl7.lookup_code(+)         = h3.ASP_AUTOMATIC_OFFSETS_VALUE
  AND fvl7.view_application_id(+) = 200
  AND fvl7.language(+)            = USERENV('LANG')
     AND fvl12.lookup_type(+)         = 'YES_NO'
  AND fvl12.lookup_code(+)         = h3.ASP_AUTO_OFFSET_FLAG
  AND fvl12.view_application_id(+) = 0
  AND fvl12.language(+)            = USERENV('LANG')
     AND fvl17.lookup_type(+)         = 'YES_NO'
  AND fvl17.lookup_code(+)         = h3.FSP_PURCH_ENCUMBRANCE_FLAG
  AND fvl17.view_application_id(+) = 0
  AND fvl17.language(+)            = USERENV('LANG')
  
 ORDER BY event_id
;


--
CURSOR line_cur (x_first_event_id    in number, x_last_event_id    in number)
IS
SELECT  /*+ leading(xet) cardinality(xet,1) */
-- Event Class Code: DEBIT MEMOS
    xet.entity_id
   ,xet.legal_entity_id
   ,xet.entity_code
   ,xet.transaction_number
   ,xet.event_id
   ,xet.event_class_code
   ,xet.event_type_code
   ,xet.event_number
   ,xet.event_date
   ,xet.transaction_date
   ,xet.reference_num_1
   ,xet.reference_num_2
   ,xet.reference_num_3
   ,xet.reference_num_4
   ,xet.reference_char_1
   ,xet.reference_char_2
   ,xet.reference_char_3
   ,xet.reference_char_4
   ,xet.reference_date_1
   ,xet.reference_date_2
   ,xet.reference_date_3
   ,xet.reference_date_4
   ,xet.event_created_by
   ,xet.budgetary_control_flag
 , l1.LINE_NUMBER  
  , l1.AID_DESCRIPTION    source_1
  , l1.INV_DIST_BASE_AMOUNT    source_8
  , l1.RELATED_INV_DIST_DEST_TYPE    source_9
  , fvl9.meaning   source_9_meaning
  , l1.AID_DIST_CCID    source_11
  , l1.SELF_ASSESSED_TAX_ACCOUNT    source_13
  , l1.AID_LINE_TYPE_LOOKUP_CODE    source_15
  , fvl15.meaning   source_15_meaning
  , l1.AID_AMOUNT_VARIANCE    source_16
  , l1.POD_ACCRUE_ON_RECEIPT_FLAG    source_18
  , fvl18.meaning   source_18_meaning
  , l1.DIST_ACCOUNT_REVERSAL_OPTION    source_19
  , l1.DISTRIBUTION_LINK_TYPE    source_21
  , l1.ALLOC_TO_MAIN_DIST_ID    source_23
  , l1.BUS_FLOW_AP_APP_ID    source_25
  , l1.BUS_FLOW_INV_DIST_TYPE    source_26
  , l1.BUS_FLOW_INV_ENTITY_CODE    source_27
  , l1.BUS_FLOW_INV_DIST_ID    source_28
  , l1.BUS_FLOW_INV_ID    source_29
  , l1.AID_INVOICE_DIST_ID    source_30
  , l1.UPG_ENC_CR_CCID    source_31
  , l1.UPG_ENC_CR_AMT    source_32
  , l1.UPG_ENC_CR_BASE_AMT    source_34
  , l1.UPG_ENC_DR_CCID    source_35
  , l1.UPG_ENC_DR_AMT    source_36
  , l1.UPG_ENC_DR_BASE_AMT    source_37
  , l1.UPG_AP_ENCUM_OPTION    source_38
  , l1.AID_BASE_AMOUNT_VARIANCE    source_42
  , l1.DEFERRED_END_DATE    source_43
  , l1.DEFERRED_OPTION    source_44
  , l1.DEFERRED_START_DATE    source_45
  , l1.OVERRIDE_ACCTD_AMT_FLAG    source_46
  , fvl46.meaning   source_46_meaning
  , l1.AID_PARENT_REVERSAL_ID    source_50
  , l4.TAX_LINE_ID    source_52
  , l5.REC_NREC_TAX_DIST_ID    source_53
  , l1.SUMMARY_TAX_LINE_ID    source_54
  , l1.UPG_CR_ENC_TYPE_ID    source_55
  , l1.UPG_DR_ENC_TYPE_ID    source_56
  , l1.PO_DISTRIBUTION_ID    source_58
  , l1.SELF_ASSESSED_TAX_FLAG    source_59
  , fvl59.meaning   source_59_meaning
  , l1.BUS_FLOW_PO_APP_ID    source_60
  , l1.BUS_FLOW_PO_DIST_TYPE    source_61
  , l1.BUS_FLOW_PO_ENTITY_CODE    source_62
  , l1.BUS_FLOW_PO_DIST_ID    source_63
  , l1.BUS_FLOW_PO_DOC_ID    source_64
  , l1.ENCUMBRANCE_AMOUNT    source_65
  , l1.ENCUMBRANCE_BASE_AMOUNT    source_66
  , l1.AID_QUANTITY_VARIANCE    source_81
  , l1.AID_BASE_QUANTITY_VARIANCE    source_82
  FROM xla_events_gt     xet 
  , AP_EXTRACT_INVOICE_DTLS_BC_V  l1
  , ZX_AP_DEF_TAX_EXTRACT_V  l4
  , ZX_AP_TAX_JRNL_LINE_DESC_V  l5
  , fnd_lookup_values    fvl9
  , fnd_lookup_values    fvl15
  , fnd_lookup_values    fvl18
  , fnd_lookup_values    fvl46
  , fnd_lookup_values    fvl59
 WHERE xet.event_id between x_first_event_id and x_last_event_id
   and xet.event_date between p_pad_start_date and p_pad_end_date
   and xet.event_class_code = C_EVENT_CLASS_CODE
   and xet.event_status_code <> 'N'   AND l1.event_id      = xet.event_id
 AND l1.ZRND_tax_dist_id = l4.REC_NREC_TAX_DIST_ID (+)  AND l1.ZRND_tax_dist_id = l5.REC_NREC_TAX_DIST_ID (+)    AND fvl9.lookup_type(+)         = 'DESTINATION TYPE'
  AND fvl9.lookup_code(+)         = l1.RELATED_INV_DIST_DEST_TYPE
  AND fvl9.view_application_id(+) = 201
  AND fvl9.language(+)            = USERENV('LANG')
     AND fvl15.lookup_type(+)         = 'INVOICE DISTRIBUTION TYPE'
  AND fvl15.lookup_code(+)         = l1.AID_LINE_TYPE_LOOKUP_CODE
  AND fvl15.view_application_id(+) = 200
  AND fvl15.language(+)            = USERENV('LANG')
     AND fvl18.lookup_type(+)         = 'YES_NO'
  AND fvl18.lookup_code(+)         = l1.POD_ACCRUE_ON_RECEIPT_FLAG
  AND fvl18.view_application_id(+) = 0
  AND fvl18.language(+)            = USERENV('LANG')
     AND fvl46.lookup_type(+)         = 'YES_NO'
  AND fvl46.lookup_code(+)         = l1.OVERRIDE_ACCTD_AMT_FLAG
  AND fvl46.view_application_id(+) = 0
  AND fvl46.language(+)            = USERENV('LANG')
     AND fvl59.lookup_type(+)         = 'YES_NO'
  AND fvl59.lookup_code(+)         = l1.SELF_ASSESSED_TAX_FLAG
  AND fvl59.view_application_id(+) = 0
  AND fvl59.language(+)            = USERENV('LANG')
  ;

--
BEGIN
IF g_log_enabled THEN
   l_log_module := C_DEFAULT_MODULE||'.EventClass_104';
END IF;
IF (C_LEVEL_PROCEDURE >= g_log_level) THEN
   trace
      (p_msg      => 'BEGIN of EventClass_104'
      ,p_level    => C_LEVEL_PROCEDURE
      ,p_module   => l_log_module);
END IF;

IF (C_LEVEL_STATEMENT >= g_log_level) THEN
   trace
      (p_msg      => 'p_application_id = '||p_application_id||
                     ' - p_base_ledger_id = '||p_base_ledger_id||
                     ' - p_target_ledger_id  = '||p_target_ledger_id||
                     ' - p_language = '||p_language||
                     ' - p_currency_code = '||p_currency_code||
                     ' - p_sla_ledger_id = '||p_sla_ledger_id
      ,p_level    => C_LEVEL_STATEMENT
      ,p_module   => l_log_module);
END IF;
--
-- initialze arrays
--
g_array_event.DELETE;
l_rec_array_event := l_null_rec_array_event;
--
--------------------------------------
-- 4262811 Initialze MPA Line Number
--------------------------------------
XLA_AE_HEADER_PKG.g_mpa_line_num := 0;

--

--
OPEN header_cur;
--
IF (C_LEVEL_STATEMENT >= g_log_level) THEN
   trace
   (p_msg      => 'SQL - FETCH header_cur'
   ,p_level    => C_LEVEL_STATEMENT
   ,p_module   => l_log_module);
END IF;
--
LOOP
FETCH header_cur BULK COLLECT INTO
        l_array_entity_id
      , l_array_legal_entity_id
      , l_array_entity_code
      , l_array_transaction_num
      , l_array_event_id
      , l_array_class_code
      , l_array_event_type
      , l_array_event_number
      , l_array_event_date
      , l_array_transaction_date
      , l_array_reference_num_1
      , l_array_reference_num_2
      , l_array_reference_num_3
      , l_array_reference_num_4
      , l_array_reference_char_1
      , l_array_reference_char_2
      , l_array_reference_char_3
      , l_array_reference_char_4
      , l_array_reference_date_1
      , l_array_reference_date_2
      , l_array_reference_date_3
      , l_array_reference_date_4
      , l_array_event_created_by
      , l_array_budgetary_control_flag 
      , l_array_source_6
      , l_array_source_7
      , l_array_source_7_meaning
      , l_array_source_10
      , l_array_source_12
      , l_array_source_12_meaning
      , l_array_source_17
      , l_array_source_17_meaning
      , l_array_source_24
      , l_array_source_33
      , l_array_source_39
      , l_array_source_40
      , l_array_source_41
      , l_array_source_47
      , l_array_source_48
      , l_array_source_49
      , l_array_source_122
      , l_array_source_123
      , l_array_source_124
      LIMIT l_rows;
--
IF (C_LEVEL_EVENT >= g_log_level) THEN
   trace
   (p_msg      => '# rows extracted from header extract objects = '||TO_CHAR(header_cur%ROWCOUNT)
   ,p_level    => C_LEVEL_EVENT
   ,p_module   => l_log_module);
END IF;
--
EXIT WHEN l_array_entity_id.COUNT = 0;

-- initialize arrays
XLA_AE_HEADER_PKG.g_rec_header_new        := NULL;
XLA_AE_LINES_PKG.g_rec_lines              := NULL;

--
-- Bug 4458708
--
XLA_AE_LINES_PKG.g_LineNumber := 0;


-- 4262811 - when creating Accrual Reversal or MPA, use g_last_hdr_idx to increment for next header id
g_last_hdr_idx := l_array_event_id.LAST;
--
-- loop for the headers. Each iteration is for each header extract row
-- fetched in header cursor
--
FOR hdr_idx IN l_array_event_id.FIRST .. l_array_event_id.LAST LOOP

--
-- set event info as cache for other routines to refer event attributes
--
XLA_AE_JOURNAL_ENTRY_PKG.set_event_info
   (p_application_id           => p_application_id
   ,p_primary_ledger_id        => p_primary_ledger_id
   ,p_base_ledger_id           => p_base_ledger_id
   ,p_target_ledger_id         => p_target_ledger_id
   ,p_entity_id                => l_array_entity_id(hdr_idx)
   ,p_legal_entity_id          => l_array_legal_entity_id(hdr_idx)
   ,p_entity_code              => l_array_entity_code(hdr_idx)
   ,p_transaction_num          => l_array_transaction_num(hdr_idx)
   ,p_event_id                 => l_array_event_id(hdr_idx)
   ,p_event_class_code         => l_array_class_code(hdr_idx)
   ,p_event_type_code          => l_array_event_type(hdr_idx)
   ,p_event_number             => l_array_event_number(hdr_idx)
   ,p_event_date               => l_array_event_date(hdr_idx)
   ,p_transaction_date         => l_array_transaction_date(hdr_idx)
   ,p_reference_num_1          => l_array_reference_num_1(hdr_idx)
   ,p_reference_num_2          => l_array_reference_num_2(hdr_idx)
   ,p_reference_num_3          => l_array_reference_num_3(hdr_idx)
   ,p_reference_num_4          => l_array_reference_num_4(hdr_idx)
   ,p_reference_char_1         => l_array_reference_char_1(hdr_idx)
   ,p_reference_char_2         => l_array_reference_char_2(hdr_idx)
   ,p_reference_char_3         => l_array_reference_char_3(hdr_idx)
   ,p_reference_char_4         => l_array_reference_char_4(hdr_idx)
   ,p_reference_date_1         => l_array_reference_date_1(hdr_idx)
   ,p_reference_date_2         => l_array_reference_date_2(hdr_idx)
   ,p_reference_date_3         => l_array_reference_date_3(hdr_idx)
   ,p_reference_date_4         => l_array_reference_date_4(hdr_idx)
   ,p_event_created_by         => l_array_event_created_by(hdr_idx)
   ,p_budgetary_control_flag   => l_array_budgetary_control_flag(hdr_idx));

--
-- set the status of entry to C_VALID (0)
--
XLA_AE_JOURNAL_ENTRY_PKG.g_global_status    := XLA_AE_JOURNAL_ENTRY_PKG.C_VALID;

--
-- initialize a row for ae header
--
XLA_AE_HEADER_PKG.InitHeader(hdr_idx);

l_event_id := l_array_event_id(hdr_idx);

--
-- storing the hdr_idx for event. May be used by line cursor.
--
g_array_event(l_event_id).array_value_num('header_index') := hdr_idx;

--
-- store sources from header extract. This can be improved to
-- store only those sources from header extract that may be used in lines
--

g_array_event(l_event_id).array_value_num('source_6') := l_array_source_6(hdr_idx);
g_array_event(l_event_id).array_value_char('source_7') := l_array_source_7(hdr_idx);
g_array_event(l_event_id).array_value_char('source_7_meaning') := l_array_source_7_meaning(hdr_idx);
g_array_event(l_event_id).array_value_num('source_10') := l_array_source_10(hdr_idx);
g_array_event(l_event_id).array_value_char('source_12') := l_array_source_12(hdr_idx);
g_array_event(l_event_id).array_value_char('source_12_meaning') := l_array_source_12_meaning(hdr_idx);
g_array_event(l_event_id).array_value_char('source_17') := l_array_source_17(hdr_idx);
g_array_event(l_event_id).array_value_char('source_17_meaning') := l_array_source_17_meaning(hdr_idx);
g_array_event(l_event_id).array_value_num('source_24') := l_array_source_24(hdr_idx);
g_array_event(l_event_id).array_value_char('source_33') := l_array_source_33(hdr_idx);
g_array_event(l_event_id).array_value_date('source_39') := l_array_source_39(hdr_idx);
g_array_event(l_event_id).array_value_num('source_40') := l_array_source_40(hdr_idx);
g_array_event(l_event_id).array_value_char('source_41') := l_array_source_41(hdr_idx);
g_array_event(l_event_id).array_value_num('source_47') := l_array_source_47(hdr_idx);
g_array_event(l_event_id).array_value_num('source_48') := l_array_source_48(hdr_idx);
g_array_event(l_event_id).array_value_char('source_49') := l_array_source_49(hdr_idx);
g_array_event(l_event_id).array_value_char('source_122') := l_array_source_122(hdr_idx);
g_array_event(l_event_id).array_value_num('source_123') := l_array_source_123(hdr_idx);
g_array_event(l_event_id).array_value_num('source_124') := l_array_source_124(hdr_idx);

--
-- initilaize the status of ae headers for diffrent balance types
-- the status is initialised to C_NOT_CREATED (2)
--
--g_array_event(l_event_id).array_value_num('actual_je_status') := XLA_AE_JOURNAL_ENTRY_PKG.C_NOT_CREATED;
--g_array_event(l_event_id).array_value_num('budget_je_status') := XLA_AE_JOURNAL_ENTRY_PKG.C_NOT_CREATED;
--g_array_event(l_event_id).array_value_num('encumbrance_je_status') := XLA_AE_JOURNAL_ENTRY_PKG.C_NOT_CREATED;

--
-- call api to validate and store accounting attributes for header
--

------------------------------------------------------------
-- Accrual Reversal : to get date for Standard Source (NONE)
------------------------------------------------------------
l_acc_rev_gl_date_source := NULL;

     l_rec_acct_attrs.array_acct_attr_code(1)   := 'DOC_CATEGORY_CODE';
      l_rec_acct_attrs.array_char_value(1) := g_array_event(l_event_id).array_value_char('source_122');
     l_rec_acct_attrs.array_acct_attr_code(2)   := 'DOC_SEQUENCE_ID';
      l_rec_acct_attrs.array_num_value(2) := g_array_event(l_event_id).array_value_num('source_123');
     l_rec_acct_attrs.array_acct_attr_code(3)   := 'DOC_SEQUENCE_VALUE';
      l_rec_acct_attrs.array_num_value(3) := g_array_event(l_event_id).array_value_num('source_124');
     l_rec_acct_attrs.array_acct_attr_code(4)   := 'GL_DATE';
      l_rec_acct_attrs.array_date_value(4) := 
xla_ae_sources_pkg.GetSystemSourceDate(
   p_source_code           => 'XLA_EVENT_DATE'
 , p_source_type_code      => 'Y'
 , p_source_application_id =>  602
);


XLA_AE_HEADER_PKG.SetHdrAcctAttrs(l_rec_acct_attrs);

XLA_AE_HEADER_PKG.SetJeCategoryName;

XLA_AE_HEADER_PKG.g_rec_header_new.array_event_type_code(hdr_idx)  := l_array_event_type(hdr_idx);
XLA_AE_HEADER_PKG.g_rec_header_new.array_event_id(hdr_idx)         := l_array_event_id(hdr_idx);
XLA_AE_HEADER_PKG.g_rec_header_new.array_entity_id(hdr_idx)        := l_array_entity_id(hdr_idx);
XLA_AE_HEADER_PKG.g_rec_header_new.array_event_number(hdr_idx)     := l_array_event_number(hdr_idx);
XLA_AE_HEADER_PKG.g_rec_header_new.array_target_ledger_id(hdr_idx) := p_target_ledger_id;


--
xla_ae_header_pkg.SetHdrDescription(
   p_description => Description_1 (
   p_application_id => p_application_id 
   )
);
--

-- No header level analytical criteria

--
--accounting attribute enhancement, bug 3612931
--
l_trx_reversal_source := SUBSTR(NULL, 1,30);

IF NVL(l_trx_reversal_source, 'N') NOT IN ('N','Y') THEN
   xla_ae_journal_entry_pkg.g_global_status      :=  xla_ae_journal_entry_pkg.C_INVALID;

   xla_accounting_err_pkg.build_message
      (p_appli_s_name            => 'XLA'
      ,p_msg_name                => 'XLA_AP_INVALID_HDR_ATTR'
      ,p_token_1                 => 'ACCT_ATTR_NAME'
      ,p_value_1                 => xla_ae_sources_pkg.GetAccountingSourceName('TRX_ACCT_REVERSAL_OPTION')
      ,p_token_2                 => 'PRODUCT_NAME'
      ,p_value_2                 => xla_ae_journal_entry_pkg.g_cache_event.application_name
      ,p_entity_id               => xla_ae_journal_entry_pkg.g_cache_event.entity_id
      ,p_event_id                => xla_ae_journal_entry_pkg.g_cache_event.event_id
      ,p_ledger_id               => xla_ae_journal_entry_pkg.g_cache_event.target_ledger_id);

ELSIF NVL(l_trx_reversal_source, 'N') = 'Y' THEN
   --
   -- following sets the accounting attributes needed to reverse
   -- accounting for a distributeion
   --
   xla_ae_lines_pkg.SetTrxReversalAttrs
      (p_event_id              => l_event_id
      ,p_gl_date               => XLA_AE_HEADER_PKG.g_rec_header_new.array_gl_date(hdr_idx)
      ,p_trx_reversal_source   => l_trx_reversal_source);

END IF;


----------------------------------------------------------------
-- 4262811 -  update the header statuses to invalid in need be
----------------------------------------------------------------
--
XLA_AE_JOURNAL_ENTRY_PKG.UpdateJournalEntryStatus (p_hdr_idx => hdr_idx);


  -----------------------------------------------
  -- No accrual reversal for the event class/type
  -----------------------------------------------
----------------------------------------------------------------

--
-- this ends the header loop iteration for one bulk fetch
--
END LOOP;

l_first_event_id   := l_array_event_id(l_array_event_id.FIRST);
l_last_event_id    := l_array_event_id(l_array_event_id.LAST);

--
-- insert dummy rows into lines gt table that were created due to
-- transaction reversals
--
IF XLA_AE_LINES_PKG.g_rec_lines.array_ae_header_id.COUNT > 0 THEN
   l_result := XLA_AE_LINES_PKG.InsertLines;
END IF;

--
-- reset the temp_line_num for each set of events fetched from header
-- cursor rather than doing it for each new event in line cursor
-- Bug 3939231
--
xla_ae_lines_pkg.g_temp_line_num := 0;



--
OPEN line_cur(x_first_event_id  => l_first_event_id, x_last_event_id  => l_last_event_id);
--
--
IF (C_LEVEL_STATEMENT >= g_log_level) THEN

      trace
         (p_msg      => 'SQL - FETCH line_cur'
         ,p_level    => C_LEVEL_STATEMENT
         ,p_module   => l_log_module);

END IF;
--
--
LOOP
  --
  FETCH line_cur BULK COLLECT INTO
        l_array_entity_id
      , l_array_legal_entity_id
      , l_array_entity_code
      , l_array_transaction_num
      , l_array_event_id
      , l_array_class_code
      , l_array_event_type
      , l_array_event_number
      , l_array_event_date
      , l_array_transaction_date
      , l_array_reference_num_1
      , l_array_reference_num_2
      , l_array_reference_num_3
      , l_array_reference_num_4
      , l_array_reference_char_1
      , l_array_reference_char_2
      , l_array_reference_char_3
      , l_array_reference_char_4
      , l_array_reference_date_1
      , l_array_reference_date_2
      , l_array_reference_date_3
      , l_array_reference_date_4
      , l_array_event_created_by
      , l_array_budgetary_control_flag
      , l_array_extract_line_num 
      , l_array_source_1
      , l_array_source_8
      , l_array_source_9
      , l_array_source_9_meaning
      , l_array_source_11
      , l_array_source_13
      , l_array_source_15
      , l_array_source_15_meaning
      , l_array_source_16
      , l_array_source_18
      , l_array_source_18_meaning
      , l_array_source_19
      , l_array_source_21
      , l_array_source_23
      , l_array_source_25
      , l_array_source_26
      , l_array_source_27
      , l_array_source_28
      , l_array_source_29
      , l_array_source_30
      , l_array_source_31
      , l_array_source_32
      , l_array_source_34
      , l_array_source_35
      , l_array_source_36
      , l_array_source_37
      , l_array_source_38
      , l_array_source_42
      , l_array_source_43
      , l_array_source_44
      , l_array_source_45
      , l_array_source_46
      , l_array_source_46_meaning
      , l_array_source_50
      , l_array_source_52
      , l_array_source_53
      , l_array_source_54
      , l_array_source_55
      , l_array_source_56
      , l_array_source_58
      , l_array_source_59
      , l_array_source_59_meaning
      , l_array_source_60
      , l_array_source_61
      , l_array_source_62
      , l_array_source_63
      , l_array_source_64
      , l_array_source_65
      , l_array_source_66
      , l_array_source_81
      , l_array_source_82
      LIMIT l_rows;

  --
  IF (C_LEVEL_EVENT >= g_log_level) THEN
            trace
               (p_msg      => '# rows extracted from line extract objects = '||TO_CHAR(line_cur%ROWCOUNT)
               ,p_level    => C_LEVEL_EVENT
               ,p_module   => l_log_module);
  END IF;
  --
  EXIT WHEN l_array_entity_id.count = 0;

  XLA_AE_LINES_PKG.g_rec_lines := null;

--
-- Bug 4458708
--
XLA_AE_LINES_PKG.g_LineNumber := 0;
--
--

FOR Idx IN 1..l_array_event_id.count LOOP
   --
   -- 5648433 (move l_event_id out of IF statement)  set l_event_id to be used inside IF condition
   --
   l_event_id := l_array_event_id(idx);  -- 5648433

   --
   -- Bug 4872078 - Do nothing if the event is meant for transaction reversal
   --

   IF NVL(xla_ae_header_pkg.g_rec_header_new.array_trx_acct_reversal_option
             (g_array_event(l_event_id).array_value_num('header_index'))
         ,'N'
         ) <> 'Y'
   THEN
      IF (C_LEVEL_STATEMENT >= g_log_level) THEN
         trace
            (p_msg      => 'Trancaction revesal option is not Y '
            ,p_level    => C_LEVEL_STATEMENT
            ,p_module   => l_log_module);
      END IF;

--
-- set the XLA_AE_JOURNAL_ENTRY_PKG.g_global_status to C_VALID (0)
--
XLA_AE_JOURNAL_ENTRY_PKG.g_global_status := XLA_AE_JOURNAL_ENTRY_PKG.C_VALID;
--
-- set event info as cache for other routines to refer event attributes
--

IF l_event_id <> NVL(l_previous_event_id, -1) THEN
   l_previous_event_id := l_event_id;

   XLA_AE_JOURNAL_ENTRY_PKG.set_event_info
      (p_application_id           => p_application_id
      ,p_primary_ledger_id        => p_primary_ledger_id
      ,p_base_ledger_id           => p_base_ledger_id
      ,p_target_ledger_id         => p_target_ledger_id
      ,p_entity_id                => l_array_entity_id(Idx)
      ,p_legal_entity_id          => l_array_legal_entity_id(Idx)
      ,p_entity_code              => l_array_entity_code(Idx)
      ,p_transaction_num          => l_array_transaction_num(Idx)
      ,p_event_id                 => l_array_event_id(Idx)
      ,p_event_class_code         => l_array_class_code(Idx)
      ,p_event_type_code          => l_array_event_type(Idx)
      ,p_event_number             => l_array_event_number(Idx)
      ,p_event_date               => l_array_event_date(Idx)
      ,p_transaction_date         => l_array_transaction_date(Idx)
      ,p_reference_num_1          => l_array_reference_num_1(Idx)
      ,p_reference_num_2          => l_array_reference_num_2(Idx)
      ,p_reference_num_3          => l_array_reference_num_3(Idx)
      ,p_reference_num_4          => l_array_reference_num_4(Idx)
      ,p_reference_char_1         => l_array_reference_char_1(Idx)
      ,p_reference_char_2         => l_array_reference_char_2(Idx)
      ,p_reference_char_3         => l_array_reference_char_3(Idx)
      ,p_reference_char_4         => l_array_reference_char_4(Idx)
      ,p_reference_date_1         => l_array_reference_date_1(Idx)
      ,p_reference_date_2         => l_array_reference_date_2(Idx)
      ,p_reference_date_3         => l_array_reference_date_3(Idx)
      ,p_reference_date_4         => l_array_reference_date_4(Idx)
      ,p_event_created_by         => l_array_event_created_by(Idx)
      ,p_budgetary_control_flag   => l_array_budgetary_control_flag(Idx));
       --
END IF;



--
xla_ae_lines_pkg.SetExtractLine(p_extract_line => l_array_extract_line_num(Idx));

l_acct_reversal_source := SUBSTR(l_array_source_19(Idx), 1,30);

IF l_continue_with_lines THEN
   IF NVL(l_acct_reversal_source, 'N') NOT IN ('N','Y','B') THEN
      xla_ae_journal_entry_pkg.g_global_status      :=  xla_ae_journal_entry_pkg.C_INVALID;

      xla_accounting_err_pkg.build_message
         (p_appli_s_name            => 'XLA'
         ,p_msg_name                => 'XLA_AP_INVALID_REVERSAL_OPTION'
         ,p_token_1                 => 'LINE_NUMBER'
         ,p_value_1                 => l_array_extract_line_num(Idx)
         ,p_token_2                 => 'PRODUCT_NAME'
         ,p_value_2                 => xla_ae_journal_entry_pkg.g_cache_event.application_name
         ,p_entity_id               => xla_ae_journal_entry_pkg.g_cache_event.entity_id
         ,p_event_id                => xla_ae_journal_entry_pkg.g_cache_event.event_id
         ,p_ledger_id               => xla_ae_journal_entry_pkg.g_cache_event.target_ledger_id);

   ELSIF NVL(l_acct_reversal_source, 'N') IN ('Y','B') THEN
      --
      -- following sets the accounting attributes needed to reverse
      -- accounting for a distributeion
      --

      --
      -- 5217187
      --
      l_rec_rev_acct_attrs.array_acct_attr_code(1):= 'GL_DATE';
      l_rec_rev_acct_attrs.array_date_value(1) := XLA_AE_HEADER_PKG.g_rec_header_new.array_gl_date(
                                       g_array_event(l_event_id).array_value_num('header_index'));
      --
      --

      l_rec_rev_acct_attrs.array_acct_attr_code(2) := 'ACCOUNTING_REVERSAL_OPTION';
      l_rec_rev_acct_attrs.array_char_value(2)  := l_array_source_19(Idx);
      l_rec_rev_acct_attrs.array_acct_attr_code(3) := 'DISTRIBUTION_IDENTIFIER_1';
      l_rec_rev_acct_attrs.array_num_value(3)  := l_array_source_30(Idx);
      l_rec_rev_acct_attrs.array_acct_attr_code(4) := 'DISTRIBUTION_TYPE';
      l_rec_rev_acct_attrs.array_char_value(4)  := l_array_source_21(Idx);
      l_rec_rev_acct_attrs.array_acct_attr_code(5) := 'ENC_UPG_CR_CCID';
      l_rec_rev_acct_attrs.array_num_value(5)  := l_array_source_31(Idx);
      l_rec_rev_acct_attrs.array_acct_attr_code(6) := 'ENC_UPG_CR_ENTERED_AMT';
      l_rec_rev_acct_attrs.array_num_value(6)  := l_array_source_32(Idx);
      l_rec_rev_acct_attrs.array_acct_attr_code(7) := 'ENC_UPG_CR_ENTERED_CURR';
      l_rec_rev_acct_attrs.array_char_value(7)  := g_array_event(l_event_id).array_value_char('source_33');
      l_rec_rev_acct_attrs.array_acct_attr_code(8) := 'ENC_UPG_CR_LEDGER_AMT';
      l_rec_rev_acct_attrs.array_num_value(8)  := l_array_source_34(Idx);
      l_rec_rev_acct_attrs.array_acct_attr_code(9) := 'ENC_UPG_DR_CCID';
      l_rec_rev_acct_attrs.array_num_value(9)  := l_array_source_35(Idx);
      l_rec_rev_acct_attrs.array_acct_attr_code(10) := 'ENC_UPG_DR_ENTERED_AMT';
      l_rec_rev_acct_attrs.array_num_value(10)  := l_array_source_36(Idx);
      l_rec_rev_acct_attrs.array_acct_attr_code(11) := 'ENC_UPG_DR_ENTERED_CURR';
      l_rec_rev_acct_attrs.array_char_value(11)  := g_array_event(l_event_id).array_value_char('source_33');
      l_rec_rev_acct_attrs.array_acct_attr_code(12) := 'ENC_UPG_DR_LEDGER_AMT';
      l_rec_rev_acct_attrs.array_num_value(12)  := l_array_source_37(Idx);
      l_rec_rev_acct_attrs.array_acct_attr_code(13) := 'ENC_UPG_OPTION';
      l_rec_rev_acct_attrs.array_char_value(13)  := l_array_source_38(Idx);
      l_rec_rev_acct_attrs.array_acct_attr_code(14) := 'PARTY_TYPE';
      l_rec_rev_acct_attrs.array_char_value(14)  := g_array_event(l_event_id).array_value_char('source_49');
      l_rec_rev_acct_attrs.array_acct_attr_code(15) := 'REVERSED_DISTRIBUTION_ID1';
      l_rec_rev_acct_attrs.array_num_value(15)  := l_array_source_50(Idx);
      l_rec_rev_acct_attrs.array_acct_attr_code(16) := 'REVERSED_DISTRIBUTION_TYPE';
      l_rec_rev_acct_attrs.array_char_value(16)  := l_array_source_21(Idx);
      l_rec_rev_acct_attrs.array_acct_attr_code(17) := 'TAX_LINE_REF_ID';
      l_rec_rev_acct_attrs.array_num_value(17)  := l_array_source_52(Idx);
      l_rec_rev_acct_attrs.array_acct_attr_code(18) := 'TAX_REC_NREC_DIST_REF_ID';
      l_rec_rev_acct_attrs.array_num_value(18)  := l_array_source_53(Idx);
      l_rec_rev_acct_attrs.array_acct_attr_code(19) := 'TAX_SUMMARY_LINE_REF_ID';
      l_rec_rev_acct_attrs.array_num_value(19)  := l_array_source_54(Idx);
      l_rec_rev_acct_attrs.array_acct_attr_code(20) := 'UPG_CR_ENC_TYPE_ID';
      l_rec_rev_acct_attrs.array_num_value(20)  := l_array_source_55(Idx);
      l_rec_rev_acct_attrs.array_acct_attr_code(21) := 'UPG_DR_ENC_TYPE_ID';
      l_rec_rev_acct_attrs.array_num_value(21)  := l_array_source_56(Idx);


      xla_ae_lines_pkg.SetAcctReversalAttrs
         (p_event_id             => l_event_id
         ,p_rec_acct_attrs       => l_rec_rev_acct_attrs
         ,p_calculate_acctd_flag => l_calculate_acctd_flag
         ,p_calculate_g_l_flag   => l_calculate_g_l_flag);
   END IF;

   IF NVL(l_acct_reversal_source, 'N') IN ('N','B') THEN
       l_actual_flag := NULL;  l_actual_gain_loss_ref := '#####';

--
AcctLineType_15 (
 p_application_id  => p_application_id
 ,p_event_id     => l_event_id
 ,p_calculate_acctd_flag => l_calculate_acctd_flag
 ,p_calculate_g_l_flag => l_calculate_g_l_flag
 ,p_actual_flag => l_actual_flag
 ,p_balance_type_code => l_balance_type_code
 ,p_gain_or_loss_ref=> l_gain_or_loss_ref
 
 , p_source_1 => l_array_source_1(Idx)
 , p_source_11 => l_array_source_11(Idx)
 , p_source_15 => l_array_source_15(Idx)
 , p_source_15_meaning => l_array_source_15_meaning(Idx)
 , p_source_16 => l_array_source_16(Idx)
 , p_source_17 => g_array_event(l_event_id).array_value_char('source_17')
 , p_source_17_meaning => g_array_event(l_event_id).array_value_char('source_17_meaning')
 , p_source_18 => l_array_source_18(Idx)
 , p_source_18_meaning => l_array_source_18_meaning(Idx)
 , p_source_19 => l_array_source_19(Idx)
 , p_source_21 => l_array_source_21(Idx)
 , p_source_23 => l_array_source_23(Idx)
 , p_source_24 => g_array_event(l_event_id).array_value_num('source_24')
 , p_source_25 => l_array_source_25(Idx)
 , p_source_26 => l_array_source_26(Idx)
 , p_source_27 => l_array_source_27(Idx)
 , p_source_28 => l_array_source_28(Idx)
 , p_source_29 => l_array_source_29(Idx)
 , p_source_30 => l_array_source_30(Idx)
 , p_source_31 => l_array_source_31(Idx)
 , p_source_32 => l_array_source_32(Idx)
 , p_source_33 => g_array_event(l_event_id).array_value_char('source_33')
 , p_source_34 => l_array_source_34(Idx)
 , p_source_35 => l_array_source_35(Idx)
 , p_source_36 => l_array_source_36(Idx)
 , p_source_37 => l_array_source_37(Idx)
 , p_source_38 => l_array_source_38(Idx)
 , p_source_39 => g_array_event(l_event_id).array_value_date('source_39')
 , p_source_40 => g_array_event(l_event_id).array_value_num('source_40')
 , p_source_41 => g_array_event(l_event_id).array_value_char('source_41')
 , p_source_42 => l_array_source_42(Idx)
 , p_source_43 => l_array_source_43(Idx)
 , p_source_44 => l_array_source_44(Idx)
 , p_source_45 => l_array_source_45(Idx)
 , p_source_46 => l_array_source_46(Idx)
 , p_source_46_meaning => l_array_source_46_meaning(Idx)
 , p_source_47 => g_array_event(l_event_id).array_value_num('source_47')
 , p_source_48 => g_array_event(l_event_id).array_value_num('source_48')
 , p_source_49 => g_array_event(l_event_id).array_value_char('source_49')
 , p_source_50 => l_array_source_50(Idx)
 , p_source_52 => l_array_source_52(Idx)
 , p_source_53 => l_array_source_53(Idx)
 , p_source_54 => l_array_source_54(Idx)
 , p_source_55 => l_array_source_55(Idx)
 , p_source_56 => l_array_source_56(Idx)
 );
If(l_balance_type_code = 'A') THEN
  l_actual_gain_loss_ref := l_gain_or_loss_ref;
END IF;

--


--
AcctLineType_20 (
 p_application_id  => p_application_id
 ,p_event_id     => l_event_id
 ,p_calculate_acctd_flag => l_calculate_acctd_flag
 ,p_calculate_g_l_flag => l_calculate_g_l_flag
 ,p_actual_flag => l_actual_flag
 ,p_balance_type_code => l_balance_type_code
 ,p_gain_or_loss_ref=> l_gain_or_loss_ref
 
 , p_source_15 => l_array_source_15(Idx)
 , p_source_15_meaning => l_array_source_15_meaning(Idx)
 , p_source_18 => l_array_source_18(Idx)
 , p_source_18_meaning => l_array_source_18_meaning(Idx)
 , p_source_19 => l_array_source_19(Idx)
 , p_source_21 => l_array_source_21(Idx)
 , p_source_23 => l_array_source_23(Idx)
 , p_source_24 => g_array_event(l_event_id).array_value_num('source_24')
 , p_source_30 => l_array_source_30(Idx)
 , p_source_31 => l_array_source_31(Idx)
 , p_source_32 => l_array_source_32(Idx)
 , p_source_33 => g_array_event(l_event_id).array_value_char('source_33')
 , p_source_34 => l_array_source_34(Idx)
 , p_source_35 => l_array_source_35(Idx)
 , p_source_36 => l_array_source_36(Idx)
 , p_source_37 => l_array_source_37(Idx)
 , p_source_38 => l_array_source_38(Idx)
 , p_source_43 => l_array_source_43(Idx)
 , p_source_44 => l_array_source_44(Idx)
 , p_source_45 => l_array_source_45(Idx)
 , p_source_46 => l_array_source_46(Idx)
 , p_source_46_meaning => l_array_source_46_meaning(Idx)
 , p_source_49 => g_array_event(l_event_id).array_value_char('source_49')
 , p_source_50 => l_array_source_50(Idx)
 , p_source_52 => l_array_source_52(Idx)
 , p_source_53 => l_array_source_53(Idx)
 , p_source_54 => l_array_source_54(Idx)
 , p_source_55 => l_array_source_55(Idx)
 , p_source_56 => l_array_source_56(Idx)
 , p_source_58 => l_array_source_58(Idx)
 , p_source_59 => l_array_source_59(Idx)
 , p_source_59_meaning => l_array_source_59_meaning(Idx)
 , p_source_60 => l_array_source_60(Idx)
 , p_source_61 => l_array_source_61(Idx)
 , p_source_62 => l_array_source_62(Idx)
 , p_source_63 => l_array_source_63(Idx)
 , p_source_64 => l_array_source_64(Idx)
 , p_source_65 => l_array_source_65(Idx)
 , p_source_66 => l_array_source_66(Idx)
 );
If(l_balance_type_code = 'A') THEN
  l_actual_gain_loss_ref := l_gain_or_loss_ref;
END IF;

--


--
AcctLineType_21 (
 p_application_id  => p_application_id
 ,p_event_id     => l_event_id
 ,p_calculate_acctd_flag => l_calculate_acctd_flag
 ,p_calculate_g_l_flag => l_calculate_g_l_flag
 ,p_actual_flag => l_actual_flag
 ,p_balance_type_code => l_balance_type_code
 ,p_gain_or_loss_ref=> l_gain_or_loss_ref
 
 , p_source_15 => l_array_source_15(Idx)
 , p_source_15_meaning => l_array_source_15_meaning(Idx)
 , p_source_18 => l_array_source_18(Idx)
 , p_source_18_meaning => l_array_source_18_meaning(Idx)
 , p_source_19 => l_array_source_19(Idx)
 , p_source_21 => l_array_source_21(Idx)
 , p_source_23 => l_array_source_23(Idx)
 , p_source_24 => g_array_event(l_event_id).array_value_num('source_24')
 , p_source_30 => l_array_source_30(Idx)
 , p_source_31 => l_array_source_31(Idx)
 , p_source_32 => l_array_source_32(Idx)
 , p_source_33 => g_array_event(l_event_id).array_value_char('source_33')
 , p_source_34 => l_array_source_34(Idx)
 , p_source_35 => l_array_source_35(Idx)
 , p_source_36 => l_array_source_36(Idx)
 , p_source_37 => l_array_source_37(Idx)
 , p_source_38 => l_array_source_38(Idx)
 , p_source_43 => l_array_source_43(Idx)
 , p_source_44 => l_array_source_44(Idx)
 , p_source_45 => l_array_source_45(Idx)
 , p_source_46 => l_array_source_46(Idx)
 , p_source_46_meaning => l_array_source_46_meaning(Idx)
 , p_source_49 => g_array_event(l_event_id).array_value_char('source_49')
 , p_source_50 => l_array_source_50(Idx)
 , p_source_52 => l_array_source_52(Idx)
 , p_source_53 => l_array_source_53(Idx)
 , p_source_54 => l_array_source_54(Idx)
 , p_source_55 => l_array_source_55(Idx)
 , p_source_56 => l_array_source_56(Idx)
 , p_source_58 => l_array_source_58(Idx)
 , p_source_60 => l_array_source_60(Idx)
 , p_source_61 => l_array_source_61(Idx)
 , p_source_62 => l_array_source_62(Idx)
 , p_source_63 => l_array_source_63(Idx)
 , p_source_64 => l_array_source_64(Idx)
 , p_source_65 => l_array_source_65(Idx)
 , p_source_66 => l_array_source_66(Idx)
 );
If(l_balance_type_code = 'A') THEN
  l_actual_gain_loss_ref := l_gain_or_loss_ref;
END IF;

--


--
AcctLineType_23 (
 p_application_id  => p_application_id
 ,p_event_id     => l_event_id
 ,p_calculate_acctd_flag => l_calculate_acctd_flag
 ,p_calculate_g_l_flag => l_calculate_g_l_flag
 ,p_actual_flag => l_actual_flag
 ,p_balance_type_code => l_balance_type_code
 ,p_gain_or_loss_ref=> l_gain_or_loss_ref
 
 , p_source_1 => l_array_source_1(Idx)
 , p_source_6 => g_array_event(l_event_id).array_value_num('source_6')
 , p_source_7 => g_array_event(l_event_id).array_value_char('source_7')
 , p_source_7_meaning => g_array_event(l_event_id).array_value_char('source_7_meaning')
 , p_source_8 => l_array_source_8(Idx)
 , p_source_9 => l_array_source_9(Idx)
 , p_source_9_meaning => l_array_source_9_meaning(Idx)
 , p_source_10 => g_array_event(l_event_id).array_value_num('source_10')
 , p_source_11 => l_array_source_11(Idx)
 , p_source_12 => g_array_event(l_event_id).array_value_char('source_12')
 , p_source_12_meaning => g_array_event(l_event_id).array_value_char('source_12_meaning')
 , p_source_15 => l_array_source_15(Idx)
 , p_source_15_meaning => l_array_source_15_meaning(Idx)
 , p_source_17 => g_array_event(l_event_id).array_value_char('source_17')
 , p_source_17_meaning => g_array_event(l_event_id).array_value_char('source_17_meaning')
 , p_source_19 => l_array_source_19(Idx)
 , p_source_21 => l_array_source_21(Idx)
 , p_source_23 => l_array_source_23(Idx)
 , p_source_24 => g_array_event(l_event_id).array_value_num('source_24')
 , p_source_25 => l_array_source_25(Idx)
 , p_source_26 => l_array_source_26(Idx)
 , p_source_27 => l_array_source_27(Idx)
 , p_source_28 => l_array_source_28(Idx)
 , p_source_29 => l_array_source_29(Idx)
 , p_source_30 => l_array_source_30(Idx)
 , p_source_31 => l_array_source_31(Idx)
 , p_source_32 => l_array_source_32(Idx)
 , p_source_33 => g_array_event(l_event_id).array_value_char('source_33')
 , p_source_34 => l_array_source_34(Idx)
 , p_source_35 => l_array_source_35(Idx)
 , p_source_36 => l_array_source_36(Idx)
 , p_source_37 => l_array_source_37(Idx)
 , p_source_38 => l_array_source_38(Idx)
 , p_source_39 => g_array_event(l_event_id).array_value_date('source_39')
 , p_source_40 => g_array_event(l_event_id).array_value_num('source_40')
 , p_source_41 => g_array_event(l_event_id).array_value_char('source_41')
 , p_source_43 => l_array_source_43(Idx)
 , p_source_44 => l_array_source_44(Idx)
 , p_source_45 => l_array_source_45(Idx)
 , p_source_46 => l_array_source_46(Idx)
 , p_source_46_meaning => l_array_source_46_meaning(Idx)
 , p_source_47 => g_array_event(l_event_id).array_value_num('source_47')
 , p_source_48 => g_array_event(l_event_id).array_value_num('source_48')
 , p_source_49 => g_array_event(l_event_id).array_value_char('source_49')
 , p_source_50 => l_array_source_50(Idx)
 , p_source_52 => l_array_source_52(Idx)
 , p_source_53 => l_array_source_53(Idx)
 , p_source_54 => l_array_source_54(Idx)
 , p_source_55 => l_array_source_55(Idx)
 , p_source_56 => l_array_source_56(Idx)
 , p_source_65 => l_array_source_65(Idx)
 , p_source_66 => l_array_source_66(Idx)
 );
If(l_balance_type_code = 'A') THEN
  l_actual_gain_loss_ref := l_gain_or_loss_ref;
END IF;

--


--
AcctLineType_27 (
 p_application_id  => p_application_id
 ,p_event_id     => l_event_id
 ,p_calculate_acctd_flag => l_calculate_acctd_flag
 ,p_calculate_g_l_flag => l_calculate_g_l_flag
 ,p_actual_flag => l_actual_flag
 ,p_balance_type_code => l_balance_type_code
 ,p_gain_or_loss_ref=> l_gain_or_loss_ref
 
 , p_source_1 => l_array_source_1(Idx)
 , p_source_11 => l_array_source_11(Idx)
 , p_source_15 => l_array_source_15(Idx)
 , p_source_15_meaning => l_array_source_15_meaning(Idx)
 , p_source_17 => g_array_event(l_event_id).array_value_char('source_17')
 , p_source_17_meaning => g_array_event(l_event_id).array_value_char('source_17_meaning')
 , p_source_19 => l_array_source_19(Idx)
 , p_source_21 => l_array_source_21(Idx)
 , p_source_23 => l_array_source_23(Idx)
 , p_source_24 => g_array_event(l_event_id).array_value_num('source_24')
 , p_source_25 => l_array_source_25(Idx)
 , p_source_26 => l_array_source_26(Idx)
 , p_source_27 => l_array_source_27(Idx)
 , p_source_28 => l_array_source_28(Idx)
 , p_source_29 => l_array_source_29(Idx)
 , p_source_30 => l_array_source_30(Idx)
 , p_source_31 => l_array_source_31(Idx)
 , p_source_32 => l_array_source_32(Idx)
 , p_source_33 => g_array_event(l_event_id).array_value_char('source_33')
 , p_source_34 => l_array_source_34(Idx)
 , p_source_35 => l_array_source_35(Idx)
 , p_source_36 => l_array_source_36(Idx)
 , p_source_37 => l_array_source_37(Idx)
 , p_source_38 => l_array_source_38(Idx)
 , p_source_39 => g_array_event(l_event_id).array_value_date('source_39')
 , p_source_40 => g_array_event(l_event_id).array_value_num('source_40')
 , p_source_41 => g_array_event(l_event_id).array_value_char('source_41')
 , p_source_43 => l_array_source_43(Idx)
 , p_source_44 => l_array_source_44(Idx)
 , p_source_45 => l_array_source_45(Idx)
 , p_source_46 => l_array_source_46(Idx)
 , p_source_46_meaning => l_array_source_46_meaning(Idx)
 , p_source_47 => g_array_event(l_event_id).array_value_num('source_47')
 , p_source_48 => g_array_event(l_event_id).array_value_num('source_48')
 , p_source_49 => g_array_event(l_event_id).array_value_char('source_49')
 , p_source_50 => l_array_source_50(Idx)
 , p_source_52 => l_array_source_52(Idx)
 , p_source_53 => l_array_source_53(Idx)
 , p_source_54 => l_array_source_54(Idx)
 , p_source_55 => l_array_source_55(Idx)
 , p_source_56 => l_array_source_56(Idx)
 , p_source_65 => l_array_source_65(Idx)
 , p_source_66 => l_array_source_66(Idx)
 );
If(l_balance_type_code = 'A') THEN
  l_actual_gain_loss_ref := l_gain_or_loss_ref;
END IF;

--


--
AcctLineType_34 (
 p_application_id  => p_application_id
 ,p_event_id     => l_event_id
 ,p_calculate_acctd_flag => l_calculate_acctd_flag
 ,p_calculate_g_l_flag => l_calculate_g_l_flag
 ,p_actual_flag => l_actual_flag
 ,p_balance_type_code => l_balance_type_code
 ,p_gain_or_loss_ref=> l_gain_or_loss_ref
 
 , p_source_1 => l_array_source_1(Idx)
 , p_source_11 => l_array_source_11(Idx)
 , p_source_15 => l_array_source_15(Idx)
 , p_source_15_meaning => l_array_source_15_meaning(Idx)
 , p_source_17 => g_array_event(l_event_id).array_value_char('source_17')
 , p_source_17_meaning => g_array_event(l_event_id).array_value_char('source_17_meaning')
 , p_source_19 => l_array_source_19(Idx)
 , p_source_21 => l_array_source_21(Idx)
 , p_source_23 => l_array_source_23(Idx)
 , p_source_24 => g_array_event(l_event_id).array_value_num('source_24')
 , p_source_25 => l_array_source_25(Idx)
 , p_source_26 => l_array_source_26(Idx)
 , p_source_27 => l_array_source_27(Idx)
 , p_source_28 => l_array_source_28(Idx)
 , p_source_29 => l_array_source_29(Idx)
 , p_source_30 => l_array_source_30(Idx)
 , p_source_31 => l_array_source_31(Idx)
 , p_source_32 => l_array_source_32(Idx)
 , p_source_33 => g_array_event(l_event_id).array_value_char('source_33')
 , p_source_34 => l_array_source_34(Idx)
 , p_source_35 => l_array_source_35(Idx)
 , p_source_36 => l_array_source_36(Idx)
 , p_source_37 => l_array_source_37(Idx)
 , p_source_38 => l_array_source_38(Idx)
 , p_source_39 => g_array_event(l_event_id).array_value_date('source_39')
 , p_source_40 => g_array_event(l_event_id).array_value_num('source_40')
 , p_source_41 => g_array_event(l_event_id).array_value_char('source_41')
 , p_source_43 => l_array_source_43(Idx)
 , p_source_44 => l_array_source_44(Idx)
 , p_source_45 => l_array_source_45(Idx)
 , p_source_46 => l_array_source_46(Idx)
 , p_source_46_meaning => l_array_source_46_meaning(Idx)
 , p_source_47 => g_array_event(l_event_id).array_value_num('source_47')
 , p_source_48 => g_array_event(l_event_id).array_value_num('source_48')
 , p_source_49 => g_array_event(l_event_id).array_value_char('source_49')
 , p_source_50 => l_array_source_50(Idx)
 , p_source_52 => l_array_source_52(Idx)
 , p_source_53 => l_array_source_53(Idx)
 , p_source_54 => l_array_source_54(Idx)
 , p_source_55 => l_array_source_55(Idx)
 , p_source_56 => l_array_source_56(Idx)
 , p_source_65 => l_array_source_65(Idx)
 , p_source_66 => l_array_source_66(Idx)
 );
If(l_balance_type_code = 'A') THEN
  l_actual_gain_loss_ref := l_gain_or_loss_ref;
END IF;

--


--
AcctLineType_38 (
 p_application_id  => p_application_id
 ,p_event_id     => l_event_id
 ,p_calculate_acctd_flag => l_calculate_acctd_flag
 ,p_calculate_g_l_flag => l_calculate_g_l_flag
 ,p_actual_flag => l_actual_flag
 ,p_balance_type_code => l_balance_type_code
 ,p_gain_or_loss_ref=> l_gain_or_loss_ref
 
 , p_source_1 => l_array_source_1(Idx)
 , p_source_11 => l_array_source_11(Idx)
 , p_source_15 => l_array_source_15(Idx)
 , p_source_15_meaning => l_array_source_15_meaning(Idx)
 , p_source_17 => g_array_event(l_event_id).array_value_char('source_17')
 , p_source_17_meaning => g_array_event(l_event_id).array_value_char('source_17_meaning')
 , p_source_18 => l_array_source_18(Idx)
 , p_source_18_meaning => l_array_source_18_meaning(Idx)
 , p_source_19 => l_array_source_19(Idx)
 , p_source_21 => l_array_source_21(Idx)
 , p_source_23 => l_array_source_23(Idx)
 , p_source_24 => g_array_event(l_event_id).array_value_num('source_24')
 , p_source_25 => l_array_source_25(Idx)
 , p_source_26 => l_array_source_26(Idx)
 , p_source_27 => l_array_source_27(Idx)
 , p_source_28 => l_array_source_28(Idx)
 , p_source_29 => l_array_source_29(Idx)
 , p_source_30 => l_array_source_30(Idx)
 , p_source_31 => l_array_source_31(Idx)
 , p_source_32 => l_array_source_32(Idx)
 , p_source_33 => g_array_event(l_event_id).array_value_char('source_33')
 , p_source_34 => l_array_source_34(Idx)
 , p_source_35 => l_array_source_35(Idx)
 , p_source_36 => l_array_source_36(Idx)
 , p_source_37 => l_array_source_37(Idx)
 , p_source_38 => l_array_source_38(Idx)
 , p_source_39 => g_array_event(l_event_id).array_value_date('source_39')
 , p_source_40 => g_array_event(l_event_id).array_value_num('source_40')
 , p_source_41 => g_array_event(l_event_id).array_value_char('source_41')
 , p_source_43 => l_array_source_43(Idx)
 , p_source_44 => l_array_source_44(Idx)
 , p_source_45 => l_array_source_45(Idx)
 , p_source_46 => l_array_source_46(Idx)
 , p_source_46_meaning => l_array_source_46_meaning(Idx)
 , p_source_47 => g_array_event(l_event_id).array_value_num('source_47')
 , p_source_48 => g_array_event(l_event_id).array_value_num('source_48')
 , p_source_49 => g_array_event(l_event_id).array_value_char('source_49')
 , p_source_50 => l_array_source_50(Idx)
 , p_source_52 => l_array_source_52(Idx)
 , p_source_53 => l_array_source_53(Idx)
 , p_source_54 => l_array_source_54(Idx)
 , p_source_55 => l_array_source_55(Idx)
 , p_source_56 => l_array_source_56(Idx)
 , p_source_65 => l_array_source_65(Idx)
 , p_source_66 => l_array_source_66(Idx)
 );
If(l_balance_type_code = 'A') THEN
  l_actual_gain_loss_ref := l_gain_or_loss_ref;
END IF;

--


--
AcctLineType_42 (
 p_application_id  => p_application_id
 ,p_event_id     => l_event_id
 ,p_calculate_acctd_flag => l_calculate_acctd_flag
 ,p_calculate_g_l_flag => l_calculate_g_l_flag
 ,p_actual_flag => l_actual_flag
 ,p_balance_type_code => l_balance_type_code
 ,p_gain_or_loss_ref=> l_gain_or_loss_ref
 
 , p_source_1 => l_array_source_1(Idx)
 , p_source_11 => l_array_source_11(Idx)
 , p_source_15 => l_array_source_15(Idx)
 , p_source_15_meaning => l_array_source_15_meaning(Idx)
 , p_source_17 => g_array_event(l_event_id).array_value_char('source_17')
 , p_source_17_meaning => g_array_event(l_event_id).array_value_char('source_17_meaning')
 , p_source_19 => l_array_source_19(Idx)
 , p_source_21 => l_array_source_21(Idx)
 , p_source_23 => l_array_source_23(Idx)
 , p_source_24 => g_array_event(l_event_id).array_value_num('source_24')
 , p_source_25 => l_array_source_25(Idx)
 , p_source_26 => l_array_source_26(Idx)
 , p_source_27 => l_array_source_27(Idx)
 , p_source_28 => l_array_source_28(Idx)
 , p_source_29 => l_array_source_29(Idx)
 , p_source_30 => l_array_source_30(Idx)
 , p_source_31 => l_array_source_31(Idx)
 , p_source_32 => l_array_source_32(Idx)
 , p_source_33 => g_array_event(l_event_id).array_value_char('source_33')
 , p_source_34 => l_array_source_34(Idx)
 , p_source_35 => l_array_source_35(Idx)
 , p_source_36 => l_array_source_36(Idx)
 , p_source_37 => l_array_source_37(Idx)
 , p_source_38 => l_array_source_38(Idx)
 , p_source_39 => g_array_event(l_event_id).array_value_date('source_39')
 , p_source_40 => g_array_event(l_event_id).array_value_num('source_40')
 , p_source_41 => g_array_event(l_event_id).array_value_char('source_41')
 , p_source_43 => l_array_source_43(Idx)
 , p_source_44 => l_array_source_44(Idx)
 , p_source_45 => l_array_source_45(Idx)
 , p_source_46 => l_array_source_46(Idx)
 , p_source_46_meaning => l_array_source_46_meaning(Idx)
 , p_source_47 => g_array_event(l_event_id).array_value_num('source_47')
 , p_source_48 => g_array_event(l_event_id).array_value_num('source_48')
 , p_source_49 => g_array_event(l_event_id).array_value_char('source_49')
 , p_source_50 => l_array_source_50(Idx)
 , p_source_52 => l_array_source_52(Idx)
 , p_source_53 => l_array_source_53(Idx)
 , p_source_54 => l_array_source_54(Idx)
 , p_source_55 => l_array_source_55(Idx)
 , p_source_56 => l_array_source_56(Idx)
 , p_source_65 => l_array_source_65(Idx)
 , p_source_66 => l_array_source_66(Idx)
 );
If(l_balance_type_code = 'A') THEN
  l_actual_gain_loss_ref := l_gain_or_loss_ref;
END IF;

--


--
AcctLineType_46 (
 p_application_id  => p_application_id
 ,p_event_id     => l_event_id
 ,p_calculate_acctd_flag => l_calculate_acctd_flag
 ,p_calculate_g_l_flag => l_calculate_g_l_flag
 ,p_actual_flag => l_actual_flag
 ,p_balance_type_code => l_balance_type_code
 ,p_gain_or_loss_ref=> l_gain_or_loss_ref
 
 , p_source_1 => l_array_source_1(Idx)
 , p_source_11 => l_array_source_11(Idx)
 , p_source_15 => l_array_source_15(Idx)
 , p_source_15_meaning => l_array_source_15_meaning(Idx)
 , p_source_17 => g_array_event(l_event_id).array_value_char('source_17')
 , p_source_17_meaning => g_array_event(l_event_id).array_value_char('source_17_meaning')
 , p_source_18 => l_array_source_18(Idx)
 , p_source_18_meaning => l_array_source_18_meaning(Idx)
 , p_source_19 => l_array_source_19(Idx)
 , p_source_21 => l_array_source_21(Idx)
 , p_source_23 => l_array_source_23(Idx)
 , p_source_24 => g_array_event(l_event_id).array_value_num('source_24')
 , p_source_25 => l_array_source_25(Idx)
 , p_source_26 => l_array_source_26(Idx)
 , p_source_27 => l_array_source_27(Idx)
 , p_source_28 => l_array_source_28(Idx)
 , p_source_29 => l_array_source_29(Idx)
 , p_source_30 => l_array_source_30(Idx)
 , p_source_31 => l_array_source_31(Idx)
 , p_source_32 => l_array_source_32(Idx)
 , p_source_33 => g_array_event(l_event_id).array_value_char('source_33')
 , p_source_34 => l_array_source_34(Idx)
 , p_source_35 => l_array_source_35(Idx)
 , p_source_36 => l_array_source_36(Idx)
 , p_source_37 => l_array_source_37(Idx)
 , p_source_38 => l_array_source_38(Idx)
 , p_source_39 => g_array_event(l_event_id).array_value_date('source_39')
 , p_source_40 => g_array_event(l_event_id).array_value_num('source_40')
 , p_source_41 => g_array_event(l_event_id).array_value_char('source_41')
 , p_source_43 => l_array_source_43(Idx)
 , p_source_44 => l_array_source_44(Idx)
 , p_source_45 => l_array_source_45(Idx)
 , p_source_46 => l_array_source_46(Idx)
 , p_source_46_meaning => l_array_source_46_meaning(Idx)
 , p_source_47 => g_array_event(l_event_id).array_value_num('source_47')
 , p_source_48 => g_array_event(l_event_id).array_value_num('source_48')
 , p_source_49 => g_array_event(l_event_id).array_value_char('source_49')
 , p_source_50 => l_array_source_50(Idx)
 , p_source_52 => l_array_source_52(Idx)
 , p_source_53 => l_array_source_53(Idx)
 , p_source_54 => l_array_source_54(Idx)
 , p_source_55 => l_array_source_55(Idx)
 , p_source_56 => l_array_source_56(Idx)
 , p_source_59 => l_array_source_59(Idx)
 , p_source_59_meaning => l_array_source_59_meaning(Idx)
 , p_source_65 => l_array_source_65(Idx)
 , p_source_66 => l_array_source_66(Idx)
 );
If(l_balance_type_code = 'A') THEN
  l_actual_gain_loss_ref := l_gain_or_loss_ref;
END IF;

--


--
AcctLineType_55 (
 p_application_id  => p_application_id
 ,p_event_id     => l_event_id
 ,p_calculate_acctd_flag => l_calculate_acctd_flag
 ,p_calculate_g_l_flag => l_calculate_g_l_flag
 ,p_actual_flag => l_actual_flag
 ,p_balance_type_code => l_balance_type_code
 ,p_gain_or_loss_ref=> l_gain_or_loss_ref
 
 , p_source_1 => l_array_source_1(Idx)
 , p_source_11 => l_array_source_11(Idx)
 , p_source_15 => l_array_source_15(Idx)
 , p_source_15_meaning => l_array_source_15_meaning(Idx)
 , p_source_16 => l_array_source_16(Idx)
 , p_source_17 => g_array_event(l_event_id).array_value_char('source_17')
 , p_source_17_meaning => g_array_event(l_event_id).array_value_char('source_17_meaning')
 , p_source_18 => l_array_source_18(Idx)
 , p_source_18_meaning => l_array_source_18_meaning(Idx)
 , p_source_19 => l_array_source_19(Idx)
 , p_source_21 => l_array_source_21(Idx)
 , p_source_23 => l_array_source_23(Idx)
 , p_source_24 => g_array_event(l_event_id).array_value_num('source_24')
 , p_source_25 => l_array_source_25(Idx)
 , p_source_26 => l_array_source_26(Idx)
 , p_source_27 => l_array_source_27(Idx)
 , p_source_28 => l_array_source_28(Idx)
 , p_source_29 => l_array_source_29(Idx)
 , p_source_30 => l_array_source_30(Idx)
 , p_source_31 => l_array_source_31(Idx)
 , p_source_32 => l_array_source_32(Idx)
 , p_source_33 => g_array_event(l_event_id).array_value_char('source_33')
 , p_source_34 => l_array_source_34(Idx)
 , p_source_35 => l_array_source_35(Idx)
 , p_source_36 => l_array_source_36(Idx)
 , p_source_37 => l_array_source_37(Idx)
 , p_source_38 => l_array_source_38(Idx)
 , p_source_39 => g_array_event(l_event_id).array_value_date('source_39')
 , p_source_40 => g_array_event(l_event_id).array_value_num('source_40')
 , p_source_41 => g_array_event(l_event_id).array_value_char('source_41')
 , p_source_43 => l_array_source_43(Idx)
 , p_source_44 => l_array_source_44(Idx)
 , p_source_45 => l_array_source_45(Idx)
 , p_source_46 => l_array_source_46(Idx)
 , p_source_46_meaning => l_array_source_46_meaning(Idx)
 , p_source_47 => g_array_event(l_event_id).array_value_num('source_47')
 , p_source_48 => g_array_event(l_event_id).array_value_num('source_48')
 , p_source_49 => g_array_event(l_event_id).array_value_char('source_49')
 , p_source_50 => l_array_source_50(Idx)
 , p_source_52 => l_array_source_52(Idx)
 , p_source_53 => l_array_source_53(Idx)
 , p_source_54 => l_array_source_54(Idx)
 , p_source_55 => l_array_source_55(Idx)
 , p_source_56 => l_array_source_56(Idx)
 , p_source_81 => l_array_source_81(Idx)
 , p_source_82 => l_array_source_82(Idx)
 );
If(l_balance_type_code = 'A') THEN
  l_actual_gain_loss_ref := l_gain_or_loss_ref;
END IF;

--


--
AcctLineType_58 (
 p_application_id  => p_application_id
 ,p_event_id     => l_event_id
 ,p_calculate_acctd_flag => l_calculate_acctd_flag
 ,p_calculate_g_l_flag => l_calculate_g_l_flag
 ,p_actual_flag => l_actual_flag
 ,p_balance_type_code => l_balance_type_code
 ,p_gain_or_loss_ref=> l_gain_or_loss_ref
 
 , p_source_1 => l_array_source_1(Idx)
 , p_source_11 => l_array_source_11(Idx)
 , p_source_15 => l_array_source_15(Idx)
 , p_source_15_meaning => l_array_source_15_meaning(Idx)
 , p_source_17 => g_array_event(l_event_id).array_value_char('source_17')
 , p_source_17_meaning => g_array_event(l_event_id).array_value_char('source_17_meaning')
 , p_source_19 => l_array_source_19(Idx)
 , p_source_21 => l_array_source_21(Idx)
 , p_source_23 => l_array_source_23(Idx)
 , p_source_24 => g_array_event(l_event_id).array_value_num('source_24')
 , p_source_25 => l_array_source_25(Idx)
 , p_source_26 => l_array_source_26(Idx)
 , p_source_27 => l_array_source_27(Idx)
 , p_source_28 => l_array_source_28(Idx)
 , p_source_29 => l_array_source_29(Idx)
 , p_source_30 => l_array_source_30(Idx)
 , p_source_31 => l_array_source_31(Idx)
 , p_source_32 => l_array_source_32(Idx)
 , p_source_33 => g_array_event(l_event_id).array_value_char('source_33')
 , p_source_34 => l_array_source_34(Idx)
 , p_source_35 => l_array_source_35(Idx)
 , p_source_36 => l_array_source_36(Idx)
 , p_source_37 => l_array_source_37(Idx)
 , p_source_38 => l_array_source_38(Idx)
 , p_source_39 => g_array_event(l_event_id).array_value_date('source_39')
 , p_source_40 => g_array_event(l_event_id).array_value_num('source_40')
 , p_source_41 => g_array_event(l_event_id).array_value_char('source_41')
 , p_source_43 => l_array_source_43(Idx)
 , p_source_44 => l_array_source_44(Idx)
 , p_source_45 => l_array_source_45(Idx)
 , p_source_46 => l_array_source_46(Idx)
 , p_source_46_meaning => l_array_source_46_meaning(Idx)
 , p_source_47 => g_array_event(l_event_id).array_value_num('source_47')
 , p_source_48 => g_array_event(l_event_id).array_value_num('source_48')
 , p_source_49 => g_array_event(l_event_id).array_value_char('source_49')
 , p_source_50 => l_array_source_50(Idx)
 , p_source_52 => l_array_source_52(Idx)
 , p_source_53 => l_array_source_53(Idx)
 , p_source_54 => l_array_source_54(Idx)
 , p_source_55 => l_array_source_55(Idx)
 , p_source_56 => l_array_source_56(Idx)
 , p_source_59 => l_array_source_59(Idx)
 , p_source_59_meaning => l_array_source_59_meaning(Idx)
 , p_source_65 => l_array_source_65(Idx)
 , p_source_66 => l_array_source_66(Idx)
 );
If(l_balance_type_code = 'A') THEN
  l_actual_gain_loss_ref := l_gain_or_loss_ref;
END IF;

--


--
AcctLineType_63 (
 p_application_id  => p_application_id
 ,p_event_id     => l_event_id
 ,p_calculate_acctd_flag => l_calculate_acctd_flag
 ,p_calculate_g_l_flag => l_calculate_g_l_flag
 ,p_actual_flag => l_actual_flag
 ,p_balance_type_code => l_balance_type_code
 ,p_gain_or_loss_ref=> l_gain_or_loss_ref
 
 , p_source_1 => l_array_source_1(Idx)
 , p_source_13 => l_array_source_13(Idx)
 , p_source_15 => l_array_source_15(Idx)
 , p_source_15_meaning => l_array_source_15_meaning(Idx)
 , p_source_17 => g_array_event(l_event_id).array_value_char('source_17')
 , p_source_17_meaning => g_array_event(l_event_id).array_value_char('source_17_meaning')
 , p_source_19 => l_array_source_19(Idx)
 , p_source_21 => l_array_source_21(Idx)
 , p_source_23 => l_array_source_23(Idx)
 , p_source_24 => g_array_event(l_event_id).array_value_num('source_24')
 , p_source_25 => l_array_source_25(Idx)
 , p_source_26 => l_array_source_26(Idx)
 , p_source_27 => l_array_source_27(Idx)
 , p_source_28 => l_array_source_28(Idx)
 , p_source_29 => l_array_source_29(Idx)
 , p_source_30 => l_array_source_30(Idx)
 , p_source_31 => l_array_source_31(Idx)
 , p_source_32 => l_array_source_32(Idx)
 , p_source_33 => g_array_event(l_event_id).array_value_char('source_33')
 , p_source_34 => l_array_source_34(Idx)
 , p_source_35 => l_array_source_35(Idx)
 , p_source_36 => l_array_source_36(Idx)
 , p_source_37 => l_array_source_37(Idx)
 , p_source_38 => l_array_source_38(Idx)
 , p_source_39 => g_array_event(l_event_id).array_value_date('source_39')
 , p_source_40 => g_array_event(l_event_id).array_value_num('source_40')
 , p_source_41 => g_array_event(l_event_id).array_value_char('source_41')
 , p_source_43 => l_array_source_43(Idx)
 , p_source_44 => l_array_source_44(Idx)
 , p_source_45 => l_array_source_45(Idx)
 , p_source_46 => l_array_source_46(Idx)
 , p_source_46_meaning => l_array_source_46_meaning(Idx)
 , p_source_47 => g_array_event(l_event_id).array_value_num('source_47')
 , p_source_48 => g_array_event(l_event_id).array_value_num('source_48')
 , p_source_49 => g_array_event(l_event_id).array_value_char('source_49')
 , p_source_50 => l_array_source_50(Idx)
 , p_source_52 => l_array_source_52(Idx)
 , p_source_53 => l_array_source_53(Idx)
 , p_source_54 => l_array_source_54(Idx)
 , p_source_55 => l_array_source_55(Idx)
 , p_source_56 => l_array_source_56(Idx)
 , p_source_59 => l_array_source_59(Idx)
 , p_source_59_meaning => l_array_source_59_meaning(Idx)
 , p_source_65 => l_array_source_65(Idx)
 , p_source_66 => l_array_source_66(Idx)
 );
If(l_balance_type_code = 'A') THEN
  l_actual_gain_loss_ref := l_gain_or_loss_ref;
END IF;

--


--
AcctLineType_67 (
 p_application_id  => p_application_id
 ,p_event_id     => l_event_id
 ,p_calculate_acctd_flag => l_calculate_acctd_flag
 ,p_calculate_g_l_flag => l_calculate_g_l_flag
 ,p_actual_flag => l_actual_flag
 ,p_balance_type_code => l_balance_type_code
 ,p_gain_or_loss_ref=> l_gain_or_loss_ref
 
 , p_source_1 => l_array_source_1(Idx)
 , p_source_11 => l_array_source_11(Idx)
 , p_source_15 => l_array_source_15(Idx)
 , p_source_15_meaning => l_array_source_15_meaning(Idx)
 , p_source_16 => l_array_source_16(Idx)
 , p_source_17 => g_array_event(l_event_id).array_value_char('source_17')
 , p_source_17_meaning => g_array_event(l_event_id).array_value_char('source_17_meaning')
 , p_source_18 => l_array_source_18(Idx)
 , p_source_18_meaning => l_array_source_18_meaning(Idx)
 , p_source_19 => l_array_source_19(Idx)
 , p_source_21 => l_array_source_21(Idx)
 , p_source_23 => l_array_source_23(Idx)
 , p_source_24 => g_array_event(l_event_id).array_value_num('source_24')
 , p_source_25 => l_array_source_25(Idx)
 , p_source_26 => l_array_source_26(Idx)
 , p_source_27 => l_array_source_27(Idx)
 , p_source_28 => l_array_source_28(Idx)
 , p_source_29 => l_array_source_29(Idx)
 , p_source_30 => l_array_source_30(Idx)
 , p_source_31 => l_array_source_31(Idx)
 , p_source_32 => l_array_source_32(Idx)
 , p_source_33 => g_array_event(l_event_id).array_value_char('source_33')
 , p_source_34 => l_array_source_34(Idx)
 , p_source_35 => l_array_source_35(Idx)
 , p_source_36 => l_array_source_36(Idx)
 , p_source_37 => l_array_source_37(Idx)
 , p_source_38 => l_array_source_38(Idx)
 , p_source_39 => g_array_event(l_event_id).array_value_date('source_39')
 , p_source_40 => g_array_event(l_event_id).array_value_num('source_40')
 , p_source_41 => g_array_event(l_event_id).array_value_char('source_41')
 , p_source_42 => l_array_source_42(Idx)
 , p_source_43 => l_array_source_43(Idx)
 , p_source_44 => l_array_source_44(Idx)
 , p_source_45 => l_array_source_45(Idx)
 , p_source_46 => l_array_source_46(Idx)
 , p_source_46_meaning => l_array_source_46_meaning(Idx)
 , p_source_47 => g_array_event(l_event_id).array_value_num('source_47')
 , p_source_48 => g_array_event(l_event_id).array_value_num('source_48')
 , p_source_49 => g_array_event(l_event_id).array_value_char('source_49')
 , p_source_50 => l_array_source_50(Idx)
 , p_source_52 => l_array_source_52(Idx)
 , p_source_53 => l_array_source_53(Idx)
 , p_source_54 => l_array_source_54(Idx)
 , p_source_55 => l_array_source_55(Idx)
 , p_source_56 => l_array_source_56(Idx)
 );
If(l_balance_type_code = 'A') THEN
  l_actual_gain_loss_ref := l_gain_or_loss_ref;
END IF;

--


--
AcctLineType_71 (
 p_application_id  => p_application_id
 ,p_event_id     => l_event_id
 ,p_calculate_acctd_flag => l_calculate_acctd_flag
 ,p_calculate_g_l_flag => l_calculate_g_l_flag
 ,p_actual_flag => l_actual_flag
 ,p_balance_type_code => l_balance_type_code
 ,p_gain_or_loss_ref=> l_gain_or_loss_ref
 
 , p_source_1 => l_array_source_1(Idx)
 , p_source_6 => g_array_event(l_event_id).array_value_num('source_6')
 , p_source_7 => g_array_event(l_event_id).array_value_char('source_7')
 , p_source_7_meaning => g_array_event(l_event_id).array_value_char('source_7_meaning')
 , p_source_8 => l_array_source_8(Idx)
 , p_source_9 => l_array_source_9(Idx)
 , p_source_9_meaning => l_array_source_9_meaning(Idx)
 , p_source_10 => g_array_event(l_event_id).array_value_num('source_10')
 , p_source_11 => l_array_source_11(Idx)
 , p_source_12 => g_array_event(l_event_id).array_value_char('source_12')
 , p_source_12_meaning => g_array_event(l_event_id).array_value_char('source_12_meaning')
 , p_source_15 => l_array_source_15(Idx)
 , p_source_15_meaning => l_array_source_15_meaning(Idx)
 , p_source_17 => g_array_event(l_event_id).array_value_char('source_17')
 , p_source_17_meaning => g_array_event(l_event_id).array_value_char('source_17_meaning')
 , p_source_19 => l_array_source_19(Idx)
 , p_source_21 => l_array_source_21(Idx)
 , p_source_23 => l_array_source_23(Idx)
 , p_source_24 => g_array_event(l_event_id).array_value_num('source_24')
 , p_source_25 => l_array_source_25(Idx)
 , p_source_26 => l_array_source_26(Idx)
 , p_source_27 => l_array_source_27(Idx)
 , p_source_28 => l_array_source_28(Idx)
 , p_source_29 => l_array_source_29(Idx)
 , p_source_30 => l_array_source_30(Idx)
 , p_source_31 => l_array_source_31(Idx)
 , p_source_32 => l_array_source_32(Idx)
 , p_source_33 => g_array_event(l_event_id).array_value_char('source_33')
 , p_source_34 => l_array_source_34(Idx)
 , p_source_35 => l_array_source_35(Idx)
 , p_source_36 => l_array_source_36(Idx)
 , p_source_37 => l_array_source_37(Idx)
 , p_source_38 => l_array_source_38(Idx)
 , p_source_39 => g_array_event(l_event_id).array_value_date('source_39')
 , p_source_40 => g_array_event(l_event_id).array_value_num('source_40')
 , p_source_41 => g_array_event(l_event_id).array_value_char('source_41')
 , p_source_43 => l_array_source_43(Idx)
 , p_source_44 => l_array_source_44(Idx)
 , p_source_45 => l_array_source_45(Idx)
 , p_source_46 => l_array_source_46(Idx)
 , p_source_46_meaning => l_array_source_46_meaning(Idx)
 , p_source_47 => g_array_event(l_event_id).array_value_num('source_47')
 , p_source_48 => g_array_event(l_event_id).array_value_num('source_48')
 , p_source_49 => g_array_event(l_event_id).array_value_char('source_49')
 , p_source_50 => l_array_source_50(Idx)
 , p_source_52 => l_array_source_52(Idx)
 , p_source_53 => l_array_source_53(Idx)
 , p_source_54 => l_array_source_54(Idx)
 , p_source_55 => l_array_source_55(Idx)
 , p_source_56 => l_array_source_56(Idx)
 , p_source_65 => l_array_source_65(Idx)
 , p_source_66 => l_array_source_66(Idx)
 );
If(l_balance_type_code = 'A') THEN
  l_actual_gain_loss_ref := l_gain_or_loss_ref;
END IF;

--


--
AcctLineType_74 (
 p_application_id  => p_application_id
 ,p_event_id     => l_event_id
 ,p_calculate_acctd_flag => l_calculate_acctd_flag
 ,p_calculate_g_l_flag => l_calculate_g_l_flag
 ,p_actual_flag => l_actual_flag
 ,p_balance_type_code => l_balance_type_code
 ,p_gain_or_loss_ref=> l_gain_or_loss_ref
 
 , p_source_1 => l_array_source_1(Idx)
 , p_source_11 => l_array_source_11(Idx)
 , p_source_15 => l_array_source_15(Idx)
 , p_source_15_meaning => l_array_source_15_meaning(Idx)
 , p_source_17 => g_array_event(l_event_id).array_value_char('source_17')
 , p_source_17_meaning => g_array_event(l_event_id).array_value_char('source_17_meaning')
 , p_source_19 => l_array_source_19(Idx)
 , p_source_21 => l_array_source_21(Idx)
 , p_source_23 => l_array_source_23(Idx)
 , p_source_24 => g_array_event(l_event_id).array_value_num('source_24')
 , p_source_25 => l_array_source_25(Idx)
 , p_source_26 => l_array_source_26(Idx)
 , p_source_27 => l_array_source_27(Idx)
 , p_source_28 => l_array_source_28(Idx)
 , p_source_29 => l_array_source_29(Idx)
 , p_source_30 => l_array_source_30(Idx)
 , p_source_31 => l_array_source_31(Idx)
 , p_source_32 => l_array_source_32(Idx)
 , p_source_33 => g_array_event(l_event_id).array_value_char('source_33')
 , p_source_34 => l_array_source_34(Idx)
 , p_source_35 => l_array_source_35(Idx)
 , p_source_36 => l_array_source_36(Idx)
 , p_source_37 => l_array_source_37(Idx)
 , p_source_38 => l_array_source_38(Idx)
 , p_source_39 => g_array_event(l_event_id).array_value_date('source_39')
 , p_source_40 => g_array_event(l_event_id).array_value_num('source_40')
 , p_source_41 => g_array_event(l_event_id).array_value_char('source_41')
 , p_source_43 => l_array_source_43(Idx)
 , p_source_44 => l_array_source_44(Idx)
 , p_source_45 => l_array_source_45(Idx)
 , p_source_46 => l_array_source_46(Idx)
 , p_source_46_meaning => l_array_source_46_meaning(Idx)
 , p_source_47 => g_array_event(l_event_id).array_value_num('source_47')
 , p_source_48 => g_array_event(l_event_id).array_value_num('source_48')
 , p_source_49 => g_array_event(l_event_id).array_value_char('source_49')
 , p_source_50 => l_array_source_50(Idx)
 , p_source_52 => l_array_source_52(Idx)
 , p_source_53 => l_array_source_53(Idx)
 , p_source_54 => l_array_source_54(Idx)
 , p_source_55 => l_array_source_55(Idx)
 , p_source_56 => l_array_source_56(Idx)
 , p_source_65 => l_array_source_65(Idx)
 , p_source_66 => l_array_source_66(Idx)
 );
If(l_balance_type_code = 'A') THEN
  l_actual_gain_loss_ref := l_gain_or_loss_ref;
END IF;

--


--
AcctLineType_78 (
 p_application_id  => p_application_id
 ,p_event_id     => l_event_id
 ,p_calculate_acctd_flag => l_calculate_acctd_flag
 ,p_calculate_g_l_flag => l_calculate_g_l_flag
 ,p_actual_flag => l_actual_flag
 ,p_balance_type_code => l_balance_type_code
 ,p_gain_or_loss_ref=> l_gain_or_loss_ref
 
 , p_source_1 => l_array_source_1(Idx)
 , p_source_11 => l_array_source_11(Idx)
 , p_source_15 => l_array_source_15(Idx)
 , p_source_15_meaning => l_array_source_15_meaning(Idx)
 , p_source_17 => g_array_event(l_event_id).array_value_char('source_17')
 , p_source_17_meaning => g_array_event(l_event_id).array_value_char('source_17_meaning')
 , p_source_18 => l_array_source_18(Idx)
 , p_source_18_meaning => l_array_source_18_meaning(Idx)
 , p_source_19 => l_array_source_19(Idx)
 , p_source_21 => l_array_source_21(Idx)
 , p_source_23 => l_array_source_23(Idx)
 , p_source_24 => g_array_event(l_event_id).array_value_num('source_24')
 , p_source_25 => l_array_source_25(Idx)
 , p_source_26 => l_array_source_26(Idx)
 , p_source_27 => l_array_source_27(Idx)
 , p_source_28 => l_array_source_28(Idx)
 , p_source_29 => l_array_source_29(Idx)
 , p_source_30 => l_array_source_30(Idx)
 , p_source_31 => l_array_source_31(Idx)
 , p_source_32 => l_array_source_32(Idx)
 , p_source_33 => g_array_event(l_event_id).array_value_char('source_33')
 , p_source_34 => l_array_source_34(Idx)
 , p_source_35 => l_array_source_35(Idx)
 , p_source_36 => l_array_source_36(Idx)
 , p_source_37 => l_array_source_37(Idx)
 , p_source_38 => l_array_source_38(Idx)
 , p_source_39 => g_array_event(l_event_id).array_value_date('source_39')
 , p_source_40 => g_array_event(l_event_id).array_value_num('source_40')
 , p_source_41 => g_array_event(l_event_id).array_value_char('source_41')
 , p_source_43 => l_array_source_43(Idx)
 , p_source_44 => l_array_source_44(Idx)
 , p_source_45 => l_array_source_45(Idx)
 , p_source_46 => l_array_source_46(Idx)
 , p_source_46_meaning => l_array_source_46_meaning(Idx)
 , p_source_47 => g_array_event(l_event_id).array_value_num('source_47')
 , p_source_48 => g_array_event(l_event_id).array_value_num('source_48')
 , p_source_49 => g_array_event(l_event_id).array_value_char('source_49')
 , p_source_50 => l_array_source_50(Idx)
 , p_source_52 => l_array_source_52(Idx)
 , p_source_53 => l_array_source_53(Idx)
 , p_source_54 => l_array_source_54(Idx)
 , p_source_55 => l_array_source_55(Idx)
 , p_source_56 => l_array_source_56(Idx)
 , p_source_81 => l_array_source_81(Idx)
 , p_source_82 => l_array_source_82(Idx)
 );
If(l_balance_type_code = 'A') THEN
  l_actual_gain_loss_ref := l_gain_or_loss_ref;
END IF;

--


--
AcctLineType_82 (
 p_application_id  => p_application_id
 ,p_event_id     => l_event_id
 ,p_calculate_acctd_flag => l_calculate_acctd_flag
 ,p_calculate_g_l_flag => l_calculate_g_l_flag
 ,p_actual_flag => l_actual_flag
 ,p_balance_type_code => l_balance_type_code
 ,p_gain_or_loss_ref=> l_gain_or_loss_ref
 
 , p_source_1 => l_array_source_1(Idx)
 , p_source_11 => l_array_source_11(Idx)
 , p_source_15 => l_array_source_15(Idx)
 , p_source_15_meaning => l_array_source_15_meaning(Idx)
 , p_source_17 => g_array_event(l_event_id).array_value_char('source_17')
 , p_source_17_meaning => g_array_event(l_event_id).array_value_char('source_17_meaning')
 , p_source_19 => l_array_source_19(Idx)
 , p_source_21 => l_array_source_21(Idx)
 , p_source_23 => l_array_source_23(Idx)
 , p_source_24 => g_array_event(l_event_id).array_value_num('source_24')
 , p_source_25 => l_array_source_25(Idx)
 , p_source_26 => l_array_source_26(Idx)
 , p_source_27 => l_array_source_27(Idx)
 , p_source_28 => l_array_source_28(Idx)
 , p_source_29 => l_array_source_29(Idx)
 , p_source_30 => l_array_source_30(Idx)
 , p_source_31 => l_array_source_31(Idx)
 , p_source_32 => l_array_source_32(Idx)
 , p_source_33 => g_array_event(l_event_id).array_value_char('source_33')
 , p_source_34 => l_array_source_34(Idx)
 , p_source_35 => l_array_source_35(Idx)
 , p_source_36 => l_array_source_36(Idx)
 , p_source_37 => l_array_source_37(Idx)
 , p_source_38 => l_array_source_38(Idx)
 , p_source_39 => g_array_event(l_event_id).array_value_date('source_39')
 , p_source_40 => g_array_event(l_event_id).array_value_num('source_40')
 , p_source_41 => g_array_event(l_event_id).array_value_char('source_41')
 , p_source_43 => l_array_source_43(Idx)
 , p_source_44 => l_array_source_44(Idx)
 , p_source_45 => l_array_source_45(Idx)
 , p_source_46 => l_array_source_46(Idx)
 , p_source_46_meaning => l_array_source_46_meaning(Idx)
 , p_source_47 => g_array_event(l_event_id).array_value_num('source_47')
 , p_source_48 => g_array_event(l_event_id).array_value_num('source_48')
 , p_source_49 => g_array_event(l_event_id).array_value_char('source_49')
 , p_source_50 => l_array_source_50(Idx)
 , p_source_52 => l_array_source_52(Idx)
 , p_source_53 => l_array_source_53(Idx)
 , p_source_54 => l_array_source_54(Idx)
 , p_source_55 => l_array_source_55(Idx)
 , p_source_56 => l_array_source_56(Idx)
 , p_source_65 => l_array_source_65(Idx)
 , p_source_66 => l_array_source_66(Idx)
 );
If(l_balance_type_code = 'A') THEN
  l_actual_gain_loss_ref := l_gain_or_loss_ref;
END IF;

--

      -- only execute it if calculate g/l flag is yes, and primary or secondary ledger
      -- or secondary ledger that has different currency with primary
      -- or alc that is calculated by sla
      IF (((l_calculate_g_l_flag = 'Y' AND XLA_AE_JOURNAL_ENTRY_PKG.g_cache_ledgers_info.ledger_category_code <> 'ALC') or
            (XLA_AE_JOURNAL_ENTRY_PKG.g_cache_ledgers_info.ledger_category_code in ('ALC', 'SECONDARY') AND XLA_AE_JOURNAL_ENTRY_PKG.g_cache_ledgers_info.calculate_amts_flag='Y'))

--      IF((l_calculate_g_l_flag='Y' or XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id <>
--                    XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.ledger_id)
          AND (l_actual_flag = 'A')) THEN
        XLA_AE_LINES_PKG.CreateGainOrLossLines(
          p_event_id         => xla_ae_journal_entry_pkg.g_cache_event.event_id
         ,p_application_id   => p_application_id
         ,p_amb_context_code => 'DEFAULT'
         ,p_entity_code      => xla_ae_journal_entry_pkg.g_cache_event.entity_code
         ,p_event_class_code => C_EVENT_CLASS_CODE
         ,p_event_type_code  => C_EVENT_TYPE_CODE
         
         ,p_gain_ccid        => -1
         ,p_loss_ccid        => -1

         ,p_actual_flag      => l_actual_flag
         ,p_enc_flag         => null
         ,p_actual_g_l_ref   => l_actual_gain_loss_ref
         ,p_enc_g_l_ref      => null
         );
      END IF;
   END IF;
END IF;

   ELSE
      --
      -- Bug 4872078 - Do nothing if the event is meant for transaction reversal
      --
      IF (C_LEVEL_STATEMENT >= g_log_level) THEN
         trace
            (p_msg      => 'Trancaction revesal option is Y'
            ,p_level    => C_LEVEL_STATEMENT
            ,p_module   => l_log_module);
      END IF;
   END IF;

END LOOP;
l_result := XLA_AE_LINES_PKG.InsertLines ;
end loop;
close line_cur;


--
-- insert headers into xla_ae_headers_gt table
--
l_result := XLA_AE_HEADER_PKG.InsertHeaders ;

-- insert into errors table here.

END LOOP;

--
-- 4865292
--
-- Compare g_hdr_extract_count with event count in
-- CreateHeadersAndLines.
--
g_hdr_extract_count := g_hdr_extract_count + header_cur%ROWCOUNT;

IF (C_LEVEL_STATEMENT >= g_log_level) THEN
   trace (p_msg     => '# rows extracted from header extract objects '
                    || ' (running total): '
                    || g_hdr_extract_count
         ,p_level   => C_LEVEL_STATEMENT
         ,p_module  => l_log_module);
END IF;

CLOSE header_cur;
--

--
IF (C_LEVEL_PROCEDURE >= g_log_level) THEN
   trace
      (p_msg      => 'END of EventClass_104'
      ,p_level    => C_LEVEL_PROCEDURE
      ,p_module   => l_log_module);
END IF;
--
RETURN l_result;
EXCEPTION
WHEN xla_exceptions_pkg.application_exception THEN
   
IF header_cur%ISOPEN THEN CLOSE header_cur; END IF;

   
IF line_cur%ISOPEN   THEN CLOSE line_cur;   END IF;

   RAISE;

WHEN NO_DATA_FOUND THEN

IF header_cur%ISOPEN THEN CLOSE header_cur; END IF;
IF line_cur%ISOPEN   THEN CLOSE line_cur;   END IF;

FOR header_record IN header_cur
LOOP
    l_array_header_events(header_record.event_id) := header_record.event_id;
END LOOP;

l_first_event_id := l_array_header_events(l_array_header_events.FIRST);
l_last_event_id := l_array_header_events(l_array_header_events.LAST);

fnd_file.put_line(fnd_file.LOG, '                    ');
fnd_file.put_line(fnd_file.LOG, '***************************************************************************');
fnd_file.put_line(fnd_file.LOG, 'EVENT CLASS CODE = ' || C_EVENT_CLASS_CODE );
fnd_file.put_line(fnd_file.LOG, 'The following events are present in the line extract but MISSING in the header extract: ');

FOR line_record IN line_cur(l_first_event_id, l_last_event_id)
LOOP
	IF (NOT l_array_header_events.EXISTS(line_record.event_id))  AND (NOT l_array_duplicate_checker.EXISTS(line_record.event_id)) THEN
	fnd_file.put_line(fnd_file.log, 'Event_id = ' || line_record.event_id);
        l_array_duplicate_checker(line_record.event_id) := line_record.event_id;
	END IF;
END LOOP;

fnd_file.put_line(fnd_file.LOG, '***************************************************************************');
fnd_file.put_line(fnd_file.LOG, '                    ');


xla_exceptions_pkg.raise_message
      (p_location => 'XLA_00200_AAD_S_000010_BC_PKG.EventClass_104');


WHEN OTHERS THEN
   xla_exceptions_pkg.raise_message
      (p_location => 'XLA_00200_AAD_S_000010_BC_PKG.EventClass_104');
END EventClass_104;
--

---------------------------------------
--
-- PRIVATE PROCEDURE
--         insert_sources_105
--
----------------------------------------
--
PROCEDURE insert_sources_105(
                                p_target_ledger_id       IN NUMBER
                              , p_language               IN VARCHAR2
                              , p_sla_ledger_id          IN NUMBER
                              , p_pad_start_date         IN DATE
                              , p_pad_end_date           IN DATE
                         )
IS

C_EVENT_TYPE_CODE    CONSTANT  VARCHAR2(30)  := 'INVOICES_ALL';
C_EVENT_CLASS_CODE   CONSTANT  VARCHAR2(30) := 'INVOICES';
p_apps_owner                   VARCHAR2(30);
l_log_module                   VARCHAR2(240);
BEGIN
IF g_log_enabled THEN
      l_log_module := C_DEFAULT_MODULE||'.insert_sources_105';
END IF;
IF (C_LEVEL_PROCEDURE >= g_log_level) THEN

      trace
         (p_msg      => 'BEGIN of insert_sources_105'
         ,p_level    => C_LEVEL_PROCEDURE
         ,p_module   => l_log_module);

END IF;

-- select APPS owner
SELECT oracle_username
  INTO p_apps_owner
  FROM fnd_oracle_userid
 WHERE read_only_flag = 'U'
;

IF (C_LEVEL_STATEMENT >= g_log_level) THEN
      trace
         (p_msg      => 'p_target_ledger_id = '||p_target_ledger_id||
                        ' - p_language = '||p_language||
                        ' - p_sla_ledger_id  = '||p_sla_ledger_id ||
                        ' - p_pad_start_date = '||TO_CHAR(p_pad_start_date)||
                        ' - p_pad_end_date = '||TO_CHAR(p_pad_end_date)||
                        ' - p_apps_owner = '||TO_CHAR(p_apps_owner)
         ,p_level    => C_LEVEL_STATEMENT
         ,p_module   => l_log_module);
END IF;


--
INSERT INTO xla_diag_sources --hdr2
(
        event_id
      , ledger_id
      , sla_ledger_id
      , description_language
      , object_name
      , object_type_code
      , line_number
      , source_application_id
      , source_type_code
      , source_code
      , source_value
      , source_meaning
      , created_by
      , creation_date
      , last_update_date
      , last_updated_by
      , last_update_login
      , program_update_date
      , program_application_id
      , program_id
      , request_id
)
SELECT
        event_id
      , p_target_ledger_id
      , p_sla_ledger_id
      , p_language
      , object_name
      , object_type_code
      , line_number
      , source_application_id
      , source_type_code
      , source_code
      , SUBSTR(source_value ,1,1996)
      , SUBSTR(source_meaning ,1,200)
      , xla_environment_pkg.g_Usr_Id
      , TRUNC(SYSDATE)
      , TRUNC(SYSDATE)
      , xla_environment_pkg.g_Usr_Id
      , xla_environment_pkg.g_Login_Id
      , TRUNC(SYSDATE)
      , xla_environment_pkg.g_Prog_Appl_Id
      , xla_environment_pkg.g_Prog_Id
      , xla_environment_pkg.g_Req_Id
  FROM (
       SELECT xet.event_id                  event_id
            , 0                          line_number
            , CASE r
               WHEN 1 THEN 'AP_SYSTEM_PARAMETERS_EXTRACT_V' 
                WHEN 2 THEN 'AP_SYSTEM_PARAMETERS_EXTRACT_V' 
                WHEN 3 THEN 'AP_SYSTEM_PARAMETERS_EXTRACT_V' 
                WHEN 4 THEN 'AP_SYSTEM_PARAMETERS_EXTRACT_V' 
                WHEN 5 THEN 'AP_SYSTEM_PARAMETERS_EXTRACT_V' 
                WHEN 6 THEN 'AP_INVOICE_EXTRACT_HEADER_V' 
                WHEN 7 THEN 'AP_INVOICE_EXTRACT_HEADER_V' 
                WHEN 8 THEN 'AP_INVOICE_EXTRACT_HEADER_V' 
                WHEN 9 THEN 'AP_INVOICE_EXTRACT_HEADER_V' 
                WHEN 10 THEN 'AP_INVOICE_EXTRACT_HEADER_V' 
                WHEN 11 THEN 'AP_INVOICE_EXTRACT_HEADER_V' 
                WHEN 12 THEN 'AP_INVOICE_EXTRACT_HEADER_V' 
                WHEN 13 THEN 'AP_INVOICE_EXTRACT_HEADER_V' 
                WHEN 14 THEN 'AP_INVOICE_EXTRACT_HEADER_V' 
                WHEN 15 THEN 'AP_INVOICE_EXTRACT_HEADER_V' 
                WHEN 16 THEN 'AP_INVOICE_EXTRACT_HEADER_V' 
                WHEN 17 THEN 'AP_INVOICE_EXTRACT_HEADER_V' 
                
               ELSE null
              END                           object_name
            , CASE r
                WHEN 1 THEN 'HEADER' 
                WHEN 2 THEN 'HEADER' 
                WHEN 3 THEN 'HEADER' 
                WHEN 4 THEN 'HEADER' 
                WHEN 5 THEN 'HEADER' 
                WHEN 6 THEN 'HEADER' 
                WHEN 7 THEN 'HEADER' 
                WHEN 8 THEN 'HEADER' 
                WHEN 9 THEN 'HEADER' 
                WHEN 10 THEN 'HEADER' 
                WHEN 11 THEN 'HEADER' 
                WHEN 12 THEN 'HEADER' 
                WHEN 13 THEN 'HEADER' 
                WHEN 14 THEN 'HEADER' 
                WHEN 15 THEN 'HEADER' 
                WHEN 16 THEN 'HEADER' 
                WHEN 17 THEN 'HEADER' 
                
                ELSE null
              END                           object_type_code
            , CASE r
                WHEN 1 THEN '200' 
                WHEN 2 THEN '200' 
                WHEN 3 THEN '200' 
                WHEN 4 THEN '200' 
                WHEN 5 THEN '200' 
                WHEN 6 THEN '200' 
                WHEN 7 THEN '200' 
                WHEN 8 THEN '200' 
                WHEN 9 THEN '200' 
                WHEN 10 THEN '200' 
                WHEN 11 THEN '200' 
                WHEN 12 THEN '200' 
                WHEN 13 THEN '200' 
                WHEN 14 THEN '200' 
                WHEN 15 THEN '200' 
                WHEN 16 THEN '200' 
                WHEN 17 THEN '200' 
                
                ELSE null
              END                           source_application_id
            , 'S'             source_type_code
            , CASE r
                WHEN 1 THEN 'ASP_RATE_VAR_GAIN_CCID' 
                WHEN 2 THEN 'ASP_AUTOMATIC_OFFSETS_VALUE' 
                WHEN 3 THEN 'ASP_RATE_VAR_LOSS_CCID' 
                WHEN 4 THEN 'ASP_AUTO_OFFSET_FLAG' 
                WHEN 5 THEN 'FSP_PURCH_ENCUMBRANCE_FLAG' 
                WHEN 6 THEN 'AI_INVOICE_ID' 
                WHEN 7 THEN 'AI_INVOICE_CURRENCY_CODE' 
                WHEN 8 THEN 'INV_EXCHANGE_DATE' 
                WHEN 9 THEN 'INV_EXCHANGE_RATE' 
                WHEN 10 THEN 'INV_EXCHANGE_RATE_TYPE' 
                WHEN 11 THEN 'AI_VENDOR_ID' 
                WHEN 12 THEN 'AI_VENDOR_SITE_ID' 
                WHEN 13 THEN 'THIRD_PARTY_TYPE' 
                WHEN 14 THEN 'AI_INVOICE_TYPE_LOOKUP_CODE' 
                WHEN 15 THEN 'INV_DOC_SEQUENCE_CATEGORY' 
                WHEN 16 THEN 'INV_DOC_SEQUENCE_IDENTIFIER' 
                WHEN 17 THEN 'INV_DOC_SEQUENCE_VALUE' 
                
                ELSE null
              END                           source_code
            , CASE r
                WHEN 1 THEN TO_CHAR(h3.ASP_RATE_VAR_GAIN_CCID)
                WHEN 2 THEN TO_CHAR(h3.ASP_AUTOMATIC_OFFSETS_VALUE)
                WHEN 3 THEN TO_CHAR(h3.ASP_RATE_VAR_LOSS_CCID)
                WHEN 4 THEN TO_CHAR(h3.ASP_AUTO_OFFSET_FLAG)
                WHEN 5 THEN TO_CHAR(h3.FSP_PURCH_ENCUMBRANCE_FLAG)
                WHEN 6 THEN TO_CHAR(h2.AI_INVOICE_ID)
                WHEN 7 THEN TO_CHAR(h2.AI_INVOICE_CURRENCY_CODE)
                WHEN 8 THEN TO_CHAR(h2.INV_EXCHANGE_DATE)
                WHEN 9 THEN TO_CHAR(h2.INV_EXCHANGE_RATE)
                WHEN 10 THEN TO_CHAR(h2.INV_EXCHANGE_RATE_TYPE)
                WHEN 11 THEN TO_CHAR(h2.AI_VENDOR_ID)
                WHEN 12 THEN TO_CHAR(h2.AI_VENDOR_SITE_ID)
                WHEN 13 THEN TO_CHAR(h2.THIRD_PARTY_TYPE)
                WHEN 14 THEN TO_CHAR(h2.AI_INVOICE_TYPE_LOOKUP_CODE)
                WHEN 15 THEN TO_CHAR(h2.INV_DOC_SEQUENCE_CATEGORY)
                WHEN 16 THEN TO_CHAR(h2.INV_DOC_SEQUENCE_IDENTIFIER)
                WHEN 17 THEN TO_CHAR(h2.INV_DOC_SEQUENCE_VALUE)
                
                ELSE null
              END                           source_value
            , CASE r
                WHEN 2 THEN fvl7.meaning
                WHEN 4 THEN fvl12.meaning
                WHEN 5 THEN fvl17.meaning
                WHEN 14 THEN fvl68.meaning
                
                ELSE null
              END               source_meaning
         FROM xla_events_gt     xet  
      , AP_INVOICE_EXTRACT_HEADER_V  h2
      , AP_SYSTEM_PARAMETERS_EXTRACT_V  h3
  , fnd_lookup_values    fvl7
  , fnd_lookup_values    fvl12
  , fnd_lookup_values    fvl17
  , fnd_lookup_values    fvl68
             ,(select rownum r from all_objects where rownum <= 17 and owner = p_apps_owner)
         WHERE xet.event_date between p_pad_start_date AND p_pad_end_date
           AND xet.event_class_code = C_EVENT_CLASS_CODE
              AND h2.event_id = xet.event_id
 AND h3.asp_org_id = h2.ai_org_id   AND fvl7.lookup_type(+)         = 'LIABILITY FLEXBUILD METHOD'
  AND fvl7.lookup_code(+)         = h3.ASP_AUTOMATIC_OFFSETS_VALUE
  AND fvl7.view_application_id(+) = 200
  AND fvl7.language(+)            = USERENV('LANG')
     AND fvl12.lookup_type(+)         = 'YES_NO'
  AND fvl12.lookup_code(+)         = h3.ASP_AUTO_OFFSET_FLAG
  AND fvl12.view_application_id(+) = 0
  AND fvl12.language(+)            = USERENV('LANG')
     AND fvl17.lookup_type(+)         = 'YES_NO'
  AND fvl17.lookup_code(+)         = h3.FSP_PURCH_ENCUMBRANCE_FLAG
  AND fvl17.view_application_id(+) = 0
  AND fvl17.language(+)            = USERENV('LANG')
     AND fvl68.lookup_type(+)         = 'INVOICE TYPE'
  AND fvl68.lookup_code(+)         = h2.AI_INVOICE_TYPE_LOOKUP_CODE
  AND fvl68.view_application_id(+) = 200
  AND fvl68.language(+)            = USERENV('LANG')
  
)
;
--
IF (C_LEVEL_STATEMENT >= g_log_level) THEN

      trace
         (p_msg      => 'number of header sources inserted = '||SQL%ROWCOUNT
         ,p_level    => C_LEVEL_STATEMENT
         ,p_module   => l_log_module);

END IF;
--



--
INSERT INTO xla_diag_sources  --line2
(
        event_id
      , ledger_id
      , sla_ledger_id
      , description_language
      , object_name
      , object_type_code
      , line_number
      , source_application_id
      , source_type_code
      , source_code
      , source_value
      , source_meaning
      , created_by
      , creation_date
      , last_update_date
      , last_updated_by
      , last_update_login
      , program_update_date
      , program_application_id
      , program_id
      , request_id
)
SELECT  event_id
      , p_target_ledger_id
      , p_sla_ledger_id
      , p_language
      , object_name
      , object_type_code
      , line_number
      , source_application_id
      , source_type_code
      , source_code
      , SUBSTR(source_value,1,1996)
      , SUBSTR(source_meaning ,1,200)
      , xla_environment_pkg.g_Usr_Id
      , TRUNC(SYSDATE)
      , TRUNC(SYSDATE)
      , xla_environment_pkg.g_Usr_Id
      , xla_environment_pkg.g_Login_Id
      , TRUNC(SYSDATE)
      , xla_environment_pkg.g_Prog_Appl_Id
      , xla_environment_pkg.g_Prog_Id
      , xla_environment_pkg.g_Req_Id
  FROM (
       SELECT xet.event_id                  event_id
            , l1.line_number                 line_number
            , CASE r
               WHEN 1 THEN 'AP_EXTRACT_INVOICE_DTLS_BC_V' 
                WHEN 2 THEN 'AP_EXTRACT_INVOICE_DTLS_BC_V' 
                WHEN 3 THEN 'AP_EXTRACT_INVOICE_DTLS_BC_V' 
                WHEN 4 THEN 'AP_EXTRACT_INVOICE_DTLS_BC_V' 
                WHEN 5 THEN 'AP_EXTRACT_INVOICE_DTLS_BC_V' 
                WHEN 6 THEN 'AP_EXTRACT_INVOICE_DTLS_BC_V' 
                WHEN 7 THEN 'AP_EXTRACT_INVOICE_DTLS_BC_V' 
                WHEN 8 THEN 'AP_EXTRACT_INVOICE_DTLS_BC_V' 
                WHEN 9 THEN 'AP_EXTRACT_INVOICE_DTLS_BC_V' 
                WHEN 10 THEN 'AP_EXTRACT_INVOICE_DTLS_BC_V' 
                WHEN 11 THEN 'AP_EXTRACT_INVOICE_DTLS_BC_V' 
                WHEN 12 THEN 'AP_EXTRACT_INVOICE_DTLS_BC_V' 
                WHEN 13 THEN 'AP_EXTRACT_INVOICE_DTLS_BC_V' 
                WHEN 14 THEN 'AP_EXTRACT_INVOICE_DTLS_BC_V' 
                WHEN 15 THEN 'AP_EXTRACT_INVOICE_DTLS_BC_V' 
                WHEN 16 THEN 'AP_EXTRACT_INVOICE_DTLS_BC_V' 
                WHEN 17 THEN 'AP_EXTRACT_INVOICE_DTLS_BC_V' 
                WHEN 18 THEN 'AP_EXTRACT_INVOICE_DTLS_BC_V' 
                WHEN 19 THEN 'AP_EXTRACT_INVOICE_DTLS_BC_V' 
                WHEN 20 THEN 'AP_EXTRACT_INVOICE_DTLS_BC_V' 
                WHEN 21 THEN 'AP_EXTRACT_INVOICE_DTLS_BC_V' 
                WHEN 22 THEN 'AP_EXTRACT_INVOICE_DTLS_BC_V' 
                WHEN 23 THEN 'AP_EXTRACT_INVOICE_DTLS_BC_V' 
                WHEN 24 THEN 'AP_EXTRACT_INVOICE_DTLS_BC_V' 
                WHEN 25 THEN 'AP_EXTRACT_INVOICE_DTLS_BC_V' 
                WHEN 26 THEN 'AP_EXTRACT_INVOICE_DTLS_BC_V' 
                WHEN 27 THEN 'AP_EXTRACT_INVOICE_DTLS_BC_V' 
                WHEN 28 THEN 'AP_EXTRACT_INVOICE_DTLS_BC_V' 
                WHEN 29 THEN 'AP_EXTRACT_INVOICE_DTLS_BC_V' 
                WHEN 30 THEN 'AP_EXTRACT_INVOICE_DTLS_BC_V' 
                WHEN 31 THEN 'AP_EXTRACT_INVOICE_DTLS_BC_V' 
                WHEN 32 THEN 'ZX_AP_DEF_TAX_EXTRACT_V' 
                WHEN 33 THEN 'ZX_AP_TAX_JRNL_LINE_DESC_V' 
                WHEN 34 THEN 'AP_EXTRACT_INVOICE_DTLS_BC_V' 
                WHEN 35 THEN 'AP_EXTRACT_INVOICE_DTLS_BC_V' 
                WHEN 36 THEN 'AP_EXTRACT_INVOICE_DTLS_BC_V' 
                WHEN 37 THEN 'AP_EXTRACT_INVOICE_DTLS_BC_V' 
                WHEN 38 THEN 'AP_EXTRACT_INVOICE_DTLS_BC_V' 
                WHEN 39 THEN 'AP_EXTRACT_INVOICE_DTLS_BC_V' 
                WHEN 40 THEN 'AP_EXTRACT_INVOICE_DTLS_BC_V' 
                WHEN 41 THEN 'AP_EXTRACT_INVOICE_DTLS_BC_V' 
                WHEN 42 THEN 'AP_EXTRACT_INVOICE_DTLS_BC_V' 
                WHEN 43 THEN 'AP_EXTRACT_INVOICE_DTLS_BC_V' 
                WHEN 44 THEN 'AP_EXTRACT_INVOICE_DTLS_BC_V' 
                WHEN 45 THEN 'AP_EXTRACT_INVOICE_DTLS_BC_V' 
                WHEN 46 THEN 'AP_EXTRACT_INVOICE_DTLS_BC_V' 
                WHEN 47 THEN 'AP_EXTRACT_INVOICE_DTLS_BC_V' 
                WHEN 48 THEN 'AP_EXTRACT_INVOICE_DTLS_BC_V' 
                
               ELSE null
              END                           object_name
            , CASE r
                WHEN 1 THEN 'LINE' 
                WHEN 2 THEN 'LINE' 
                WHEN 3 THEN 'LINE' 
                WHEN 4 THEN 'LINE' 
                WHEN 5 THEN 'LINE' 
                WHEN 6 THEN 'LINE' 
                WHEN 7 THEN 'LINE' 
                WHEN 8 THEN 'LINE' 
                WHEN 9 THEN 'LINE' 
                WHEN 10 THEN 'LINE' 
                WHEN 11 THEN 'LINE' 
                WHEN 12 THEN 'LINE' 
                WHEN 13 THEN 'LINE' 
                WHEN 14 THEN 'LINE' 
                WHEN 15 THEN 'LINE' 
                WHEN 16 THEN 'LINE' 
                WHEN 17 THEN 'LINE' 
                WHEN 18 THEN 'LINE' 
                WHEN 19 THEN 'LINE' 
                WHEN 20 THEN 'LINE' 
                WHEN 21 THEN 'LINE' 
                WHEN 22 THEN 'LINE' 
                WHEN 23 THEN 'LINE' 
                WHEN 24 THEN 'LINE' 
                WHEN 25 THEN 'LINE' 
                WHEN 26 THEN 'LINE' 
                WHEN 27 THEN 'LINE' 
                WHEN 28 THEN 'LINE' 
                WHEN 29 THEN 'LINE' 
                WHEN 30 THEN 'LINE' 
                WHEN 31 THEN 'LINE' 
                WHEN 32 THEN 'LINE' 
                WHEN 33 THEN 'LINE' 
                WHEN 34 THEN 'LINE' 
                WHEN 35 THEN 'LINE' 
                WHEN 36 THEN 'LINE' 
                WHEN 37 THEN 'LINE' 
                WHEN 38 THEN 'LINE' 
                WHEN 39 THEN 'LINE' 
                WHEN 40 THEN 'LINE' 
                WHEN 41 THEN 'LINE' 
                WHEN 42 THEN 'LINE' 
                WHEN 43 THEN 'LINE' 
                WHEN 44 THEN 'LINE' 
                WHEN 45 THEN 'LINE' 
                WHEN 46 THEN 'LINE' 
                WHEN 47 THEN 'LINE' 
                WHEN 48 THEN 'LINE' 
                
                ELSE null
              END                           object_type_code
            , CASE r
                WHEN 1 THEN '200' 
                WHEN 2 THEN '200' 
                WHEN 3 THEN '200' 
                WHEN 4 THEN '200' 
                WHEN 5 THEN '200' 
                WHEN 6 THEN '200' 
                WHEN 7 THEN '200' 
                WHEN 8 THEN '200' 
                WHEN 9 THEN '200' 
                WHEN 10 THEN '200' 
                WHEN 11 THEN '200' 
                WHEN 12 THEN '200' 
                WHEN 13 THEN '200' 
                WHEN 14 THEN '200' 
                WHEN 15 THEN '200' 
                WHEN 16 THEN '200' 
                WHEN 17 THEN '200' 
                WHEN 18 THEN '200' 
                WHEN 19 THEN '200' 
                WHEN 20 THEN '200' 
                WHEN 21 THEN '200' 
                WHEN 22 THEN '200' 
                WHEN 23 THEN '200' 
                WHEN 24 THEN '200' 
                WHEN 25 THEN '200' 
                WHEN 26 THEN '200' 
                WHEN 27 THEN '200' 
                WHEN 28 THEN '200' 
                WHEN 29 THEN '200' 
                WHEN 30 THEN '200' 
                WHEN 31 THEN '200' 
                WHEN 32 THEN '200' 
                WHEN 33 THEN '200' 
                WHEN 34 THEN '200' 
                WHEN 35 THEN '200' 
                WHEN 36 THEN '200' 
                WHEN 37 THEN '200' 
                WHEN 38 THEN '200' 
                WHEN 39 THEN '200' 
                WHEN 40 THEN '200' 
                WHEN 41 THEN '200' 
                WHEN 42 THEN '200' 
                WHEN 43 THEN '200' 
                WHEN 44 THEN '200' 
                WHEN 45 THEN '200' 
                WHEN 46 THEN '200' 
                WHEN 47 THEN '200' 
                WHEN 48 THEN '200' 
                
                ELSE null
              END                           source_application_id
            , 'S'             source_type_code
            , CASE r
                WHEN 1 THEN 'AID_DESCRIPTION' 
                WHEN 2 THEN 'INV_DIST_BASE_AMOUNT' 
                WHEN 3 THEN 'RELATED_INV_DIST_DEST_TYPE' 
                WHEN 4 THEN 'AID_DIST_CCID' 
                WHEN 5 THEN 'SELF_ASSESSED_TAX_ACCOUNT' 
                WHEN 6 THEN 'AID_LINE_TYPE_LOOKUP_CODE' 
                WHEN 7 THEN 'AID_AMOUNT_VARIANCE' 
                WHEN 8 THEN 'POD_ACCRUE_ON_RECEIPT_FLAG' 
                WHEN 9 THEN 'DIST_ACCOUNT_REVERSAL_OPTION' 
                WHEN 10 THEN 'DISTRIBUTION_LINK_TYPE' 
                WHEN 11 THEN 'ALLOC_TO_MAIN_DIST_ID' 
                WHEN 12 THEN 'BUS_FLOW_AP_APP_ID' 
                WHEN 13 THEN 'BUS_FLOW_INV_DIST_TYPE' 
                WHEN 14 THEN 'BUS_FLOW_INV_ENTITY_CODE' 
                WHEN 15 THEN 'BUS_FLOW_INV_DIST_ID' 
                WHEN 16 THEN 'BUS_FLOW_INV_ID' 
                WHEN 17 THEN 'AID_INVOICE_DIST_ID' 
                WHEN 18 THEN 'UPG_ENC_CR_CCID' 
                WHEN 19 THEN 'UPG_ENC_CR_AMT' 
                WHEN 20 THEN 'UPG_ENC_CR_BASE_AMT' 
                WHEN 21 THEN 'UPG_ENC_DR_CCID' 
                WHEN 22 THEN 'UPG_ENC_DR_AMT' 
                WHEN 23 THEN 'UPG_ENC_DR_BASE_AMT' 
                WHEN 24 THEN 'UPG_AP_ENCUM_OPTION' 
                WHEN 25 THEN 'AID_BASE_AMOUNT_VARIANCE' 
                WHEN 26 THEN 'DEFERRED_END_DATE' 
                WHEN 27 THEN 'DEFERRED_OPTION' 
                WHEN 28 THEN 'DEFERRED_START_DATE' 
                WHEN 29 THEN 'OVERRIDE_ACCTD_AMT_FLAG' 
                WHEN 30 THEN 'AID_PARENT_REVERSAL_ID' 
                WHEN 31 THEN 'AID_STAT_AMOUNT' 
                WHEN 32 THEN 'TAX_LINE_ID' 
                WHEN 33 THEN 'REC_NREC_TAX_DIST_ID' 
                WHEN 34 THEN 'SUMMARY_TAX_LINE_ID' 
                WHEN 35 THEN 'UPG_CR_ENC_TYPE_ID' 
                WHEN 36 THEN 'UPG_DR_ENC_TYPE_ID' 
                WHEN 37 THEN 'AID_AMOUNT' 
                WHEN 38 THEN 'PO_DISTRIBUTION_ID' 
                WHEN 39 THEN 'SELF_ASSESSED_TAX_FLAG' 
                WHEN 40 THEN 'BUS_FLOW_PO_APP_ID' 
                WHEN 41 THEN 'BUS_FLOW_PO_DIST_TYPE' 
                WHEN 42 THEN 'BUS_FLOW_PO_ENTITY_CODE' 
                WHEN 43 THEN 'BUS_FLOW_PO_DIST_ID' 
                WHEN 44 THEN 'BUS_FLOW_PO_DOC_ID' 
                WHEN 45 THEN 'ENCUMBRANCE_AMOUNT' 
                WHEN 46 THEN 'ENCUMBRANCE_BASE_AMOUNT' 
                WHEN 47 THEN 'AID_QUANTITY_VARIANCE' 
                WHEN 48 THEN 'AID_BASE_QUANTITY_VARIANCE' 
                
                ELSE null
              END                           source_code
            , CASE r
                WHEN 1 THEN TO_CHAR(l1.AID_DESCRIPTION)
                WHEN 2 THEN TO_CHAR(l1.INV_DIST_BASE_AMOUNT)
                WHEN 3 THEN TO_CHAR(l1.RELATED_INV_DIST_DEST_TYPE)
                WHEN 4 THEN TO_CHAR(l1.AID_DIST_CCID)
                WHEN 5 THEN TO_CHAR(l1.SELF_ASSESSED_TAX_ACCOUNT)
                WHEN 6 THEN TO_CHAR(l1.AID_LINE_TYPE_LOOKUP_CODE)
                WHEN 7 THEN TO_CHAR(l1.AID_AMOUNT_VARIANCE)
                WHEN 8 THEN TO_CHAR(l1.POD_ACCRUE_ON_RECEIPT_FLAG)
                WHEN 9 THEN TO_CHAR(l1.DIST_ACCOUNT_REVERSAL_OPTION)
                WHEN 10 THEN TO_CHAR(l1.DISTRIBUTION_LINK_TYPE)
                WHEN 11 THEN TO_CHAR(l1.ALLOC_TO_MAIN_DIST_ID)
                WHEN 12 THEN TO_CHAR(l1.BUS_FLOW_AP_APP_ID)
                WHEN 13 THEN TO_CHAR(l1.BUS_FLOW_INV_DIST_TYPE)
                WHEN 14 THEN TO_CHAR(l1.BUS_FLOW_INV_ENTITY_CODE)
                WHEN 15 THEN TO_CHAR(l1.BUS_FLOW_INV_DIST_ID)
                WHEN 16 THEN TO_CHAR(l1.BUS_FLOW_INV_ID)
                WHEN 17 THEN TO_CHAR(l1.AID_INVOICE_DIST_ID)
                WHEN 18 THEN TO_CHAR(l1.UPG_ENC_CR_CCID)
                WHEN 19 THEN TO_CHAR(l1.UPG_ENC_CR_AMT)
                WHEN 20 THEN TO_CHAR(l1.UPG_ENC_CR_BASE_AMT)
                WHEN 21 THEN TO_CHAR(l1.UPG_ENC_DR_CCID)
                WHEN 22 THEN TO_CHAR(l1.UPG_ENC_DR_AMT)
                WHEN 23 THEN TO_CHAR(l1.UPG_ENC_DR_BASE_AMT)
                WHEN 24 THEN TO_CHAR(l1.UPG_AP_ENCUM_OPTION)
                WHEN 25 THEN TO_CHAR(l1.AID_BASE_AMOUNT_VARIANCE)
                WHEN 26 THEN TO_CHAR(l1.DEFERRED_END_DATE)
                WHEN 27 THEN TO_CHAR(l1.DEFERRED_OPTION)
                WHEN 28 THEN TO_CHAR(l1.DEFERRED_START_DATE)
                WHEN 29 THEN TO_CHAR(l1.OVERRIDE_ACCTD_AMT_FLAG)
                WHEN 30 THEN TO_CHAR(l1.AID_PARENT_REVERSAL_ID)
                WHEN 31 THEN TO_CHAR(l1.AID_STAT_AMOUNT)
                WHEN 32 THEN TO_CHAR(l4.TAX_LINE_ID)
                WHEN 33 THEN TO_CHAR(l5.REC_NREC_TAX_DIST_ID)
                WHEN 34 THEN TO_CHAR(l1.SUMMARY_TAX_LINE_ID)
                WHEN 35 THEN TO_CHAR(l1.UPG_CR_ENC_TYPE_ID)
                WHEN 36 THEN TO_CHAR(l1.UPG_DR_ENC_TYPE_ID)
                WHEN 37 THEN TO_CHAR(l1.AID_AMOUNT)
                WHEN 38 THEN TO_CHAR(l1.PO_DISTRIBUTION_ID)
                WHEN 39 THEN TO_CHAR(l1.SELF_ASSESSED_TAX_FLAG)
                WHEN 40 THEN TO_CHAR(l1.BUS_FLOW_PO_APP_ID)
                WHEN 41 THEN TO_CHAR(l1.BUS_FLOW_PO_DIST_TYPE)
                WHEN 42 THEN TO_CHAR(l1.BUS_FLOW_PO_ENTITY_CODE)
                WHEN 43 THEN TO_CHAR(l1.BUS_FLOW_PO_DIST_ID)
                WHEN 44 THEN TO_CHAR(l1.BUS_FLOW_PO_DOC_ID)
                WHEN 45 THEN TO_CHAR(l1.ENCUMBRANCE_AMOUNT)
                WHEN 46 THEN TO_CHAR(l1.ENCUMBRANCE_BASE_AMOUNT)
                WHEN 47 THEN TO_CHAR(l1.AID_QUANTITY_VARIANCE)
                WHEN 48 THEN TO_CHAR(l1.AID_BASE_QUANTITY_VARIANCE)
                
                ELSE null
              END                           source_value
            , CASE r
                WHEN 3 THEN fvl9.meaning
                WHEN 6 THEN fvl15.meaning
                WHEN 8 THEN fvl18.meaning
                WHEN 29 THEN fvl46.meaning
                WHEN 39 THEN fvl59.meaning
                
                ELSE null
              END               source_meaning
         FROM  xla_events_gt     xet  
        , AP_EXTRACT_INVOICE_DTLS_BC_V  l1
        , ZX_AP_DEF_TAX_EXTRACT_V  l4
        , ZX_AP_TAX_JRNL_LINE_DESC_V  l5
  , fnd_lookup_values    fvl9
  , fnd_lookup_values    fvl15
  , fnd_lookup_values    fvl18
  , fnd_lookup_values    fvl46
  , fnd_lookup_values    fvl59
            , (select rownum r from all_objects where rownum <= 48 and owner = p_apps_owner)
        WHERE xet.event_date between p_pad_start_date AND p_pad_end_date
          AND xet.event_class_code = C_EVENT_CLASS_CODE
            AND l1.event_id          = xet.event_id
 AND l1.zrnd_tax_dist_id = l4.rec_nrec_tax_dist_id (+)  AND l1.zrnd_tax_dist_id = l5.rec_nrec_tax_dist_id (+)    AND fvl9.lookup_type(+)         = 'DESTINATION TYPE'
  AND fvl9.lookup_code(+)         = l1.RELATED_INV_DIST_DEST_TYPE
  AND fvl9.view_application_id(+) = 201
  AND fvl9.language(+)            = USERENV('LANG')
     AND fvl15.lookup_type(+)         = 'INVOICE DISTRIBUTION TYPE'
  AND fvl15.lookup_code(+)         = l1.AID_LINE_TYPE_LOOKUP_CODE
  AND fvl15.view_application_id(+) = 200
  AND fvl15.language(+)            = USERENV('LANG')
     AND fvl18.lookup_type(+)         = 'YES_NO'
  AND fvl18.lookup_code(+)         = l1.POD_ACCRUE_ON_RECEIPT_FLAG
  AND fvl18.view_application_id(+) = 0
  AND fvl18.language(+)            = USERENV('LANG')
     AND fvl46.lookup_type(+)         = 'YES_NO'
  AND fvl46.lookup_code(+)         = l1.OVERRIDE_ACCTD_AMT_FLAG
  AND fvl46.view_application_id(+) = 0
  AND fvl46.language(+)            = USERENV('LANG')
     AND fvl59.lookup_type(+)         = 'YES_NO'
  AND fvl59.lookup_code(+)         = l1.SELF_ASSESSED_TAX_FLAG
  AND fvl59.view_application_id(+) = 0
  AND fvl59.language(+)            = USERENV('LANG')
  
)
;
--
IF (C_LEVEL_STATEMENT >= g_log_level) THEN

      trace
         (p_msg      => 'number of line sources inserted = '||SQL%ROWCOUNT
         ,p_level    => C_LEVEL_STATEMENT
         ,p_module   => l_log_module);

END IF;


IF (C_LEVEL_PROCEDURE >= g_log_level) THEN
      trace
         (p_msg      => 'END of insert_sources_105'
         ,p_level    => C_LEVEL_PROCEDURE
         ,p_module   => l_log_module);
END IF;
EXCEPTION
  WHEN xla_exceptions_pkg.application_exception THEN
      IF (C_LEVEL_EXCEPTION >= g_log_level) THEN
            trace
               (p_msg      => 'ERROR: XLA_CMP_COMPILER_ERROR = '||sqlerrm
               ,p_level    => C_LEVEL_EXCEPTION
               ,p_module   => l_log_module);
      END IF;
      RAISE;
  WHEN OTHERS THEN
      IF (C_LEVEL_EXCEPTION >= g_log_level) THEN
            trace
               (p_msg      => 'ERROR: XLA_CMP_COMPILER_ERROR = '||sqlerrm
               ,p_level    => C_LEVEL_EXCEPTION
               ,p_module   => l_log_module);
       END IF;
       xla_exceptions_pkg.raise_message
           (p_location => 'XLA_00200_AAD_S_000010_BC_PKG.insert_sources_105');
END insert_sources_105;
--

---------------------------------------
--
-- PRIVATE FUNCTION
--         EventClass_105
--
----------------------------------------
--
FUNCTION EventClass_105
       (p_application_id         IN NUMBER
       ,p_base_ledger_id         IN NUMBER
       ,p_target_ledger_id       IN NUMBER
       ,p_language               IN VARCHAR2
       ,p_currency_code          IN VARCHAR2
       ,p_sla_ledger_id          IN NUMBER
       ,p_pad_start_date         IN DATE
       ,p_pad_end_date           IN DATE
       ,p_primary_ledger_id      IN NUMBER)
RETURN BOOLEAN IS
--
C_EVENT_TYPE_CODE    CONSTANT  VARCHAR2(30)  := 'INVOICES_ALL';
C_EVENT_CLASS_CODE    CONSTANT  VARCHAR2(30) := 'INVOICES';

l_calculate_acctd_flag   VARCHAR2(1) :='N';
l_calculate_g_l_flag     VARCHAR2(1) :='N';
--
l_array_legal_entity_id                XLA_AE_JOURNAL_ENTRY_PKG.t_array_Num;
l_array_entity_id                      XLA_AE_JOURNAL_ENTRY_PKG.t_array_Num;
l_array_entity_code                    XLA_AE_JOURNAL_ENTRY_PKG.t_array_V30L;
l_array_transaction_num                XLA_AE_JOURNAL_ENTRY_PKG.t_array_V240L;
l_array_event_id                       XLA_AE_JOURNAL_ENTRY_PKG.t_array_Num;
l_array_class_code                     XLA_AE_JOURNAL_ENTRY_PKG.t_array_V30L;
l_array_event_type                     XLA_AE_JOURNAL_ENTRY_PKG.t_array_V30L;
l_array_event_number                   XLA_AE_JOURNAL_ENTRY_PKG.t_array_Num;
l_array_event_date                     XLA_AE_JOURNAL_ENTRY_PKG.t_array_Date;
l_array_transaction_date               XLA_AE_JOURNAL_ENTRY_PKG.t_array_Date;
l_array_reference_num_1                XLA_AE_JOURNAL_ENTRY_PKG.t_array_Num;
l_array_reference_num_2                XLA_AE_JOURNAL_ENTRY_PKG.t_array_Num;
l_array_reference_num_3                XLA_AE_JOURNAL_ENTRY_PKG.t_array_Num;
l_array_reference_num_4                XLA_AE_JOURNAL_ENTRY_PKG.t_array_Num;
l_array_reference_char_1               XLA_AE_JOURNAL_ENTRY_PKG.t_array_V240L;
l_array_reference_char_2               XLA_AE_JOURNAL_ENTRY_PKG.t_array_V240L;
l_array_reference_char_3               XLA_AE_JOURNAL_ENTRY_PKG.t_array_V240L;
l_array_reference_char_4               XLA_AE_JOURNAL_ENTRY_PKG.t_array_V240L;
l_array_reference_date_1               XLA_AE_JOURNAL_ENTRY_PKG.t_array_Date;
l_array_reference_date_2               XLA_AE_JOURNAL_ENTRY_PKG.t_array_Date;
l_array_reference_date_3               XLA_AE_JOURNAL_ENTRY_PKG.t_array_Date;
l_array_reference_date_4               XLA_AE_JOURNAL_ENTRY_PKG.t_array_Date;
l_array_event_created_by               XLA_AE_JOURNAL_ENTRY_PKG.t_array_V100L;
l_array_budgetary_control_flag         XLA_AE_JOURNAL_ENTRY_PKG.t_array_V30L;
l_array_header_events                  XLA_AE_JOURNAL_ENTRY_PKG.t_array_Num;  --added
l_array_duplicate_checker              XLA_AE_JOURNAL_ENTRY_PKG.t_array_Num;  --added

l_event_id                             NUMBER;
l_previous_event_id                    NUMBER;
l_first_event_id                       NUMBER;
l_last_event_id                        NUMBER;

l_rec_acct_attrs                       XLA_AE_HEADER_PKG.t_rec_acct_attrs;
l_rec_rev_acct_attrs                   XLA_AE_LINES_PKG.t_rec_acct_attrs;
--
--
l_result                    BOOLEAN := TRUE;
l_rows                      NUMBER  := 1000;
l_event_type_name           VARCHAR2(80) := 'All';
l_event_class_name          VARCHAR2(80) := 'Invoices';
l_description               VARCHAR2(4000);
l_transaction_reversal      NUMBER;
l_ae_header_id              NUMBER;
l_array_extract_line_num    xla_ae_journal_entry_pkg.t_array_Num;
l_log_module                VARCHAR2(240);
--
l_acct_reversal_source      VARCHAR2(30);
l_trx_reversal_source       VARCHAR2(30);

l_continue_with_lines       BOOLEAN := TRUE;
--
l_acc_rev_gl_date_source    DATE;                      -- 4262811
--
type t_array_event_id is table of number index by binary_integer;

l_rec_array_event                    t_rec_array_event;
l_null_rec_array_event               t_rec_array_event;
l_array_ae_header_id                 xla_number_array_type;
l_actual_flag                        VARCHAR2(1) := NULL;
l_actual_gain_loss_ref               VARCHAR2(30) := '#####';
l_balance_type_code                  VARCHAR2(1) :=NULL;
l_gain_or_loss_ref                   VARCHAR2(30) :=NULL;

--
TYPE t_array_lookup_meaning IS TABLE OF fnd_lookup_values.meaning%TYPE INDEX BY BINARY_INTEGER;
--

TYPE t_array_source_6 IS TABLE OF AP_SYSTEM_PARAMETERS_EXTRACT_V.ASP_RATE_VAR_GAIN_CCID%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_7 IS TABLE OF AP_SYSTEM_PARAMETERS_EXTRACT_V.ASP_AUTOMATIC_OFFSETS_VALUE%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_10 IS TABLE OF AP_SYSTEM_PARAMETERS_EXTRACT_V.ASP_RATE_VAR_LOSS_CCID%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_12 IS TABLE OF AP_SYSTEM_PARAMETERS_EXTRACT_V.ASP_AUTO_OFFSET_FLAG%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_17 IS TABLE OF AP_SYSTEM_PARAMETERS_EXTRACT_V.FSP_PURCH_ENCUMBRANCE_FLAG%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_24 IS TABLE OF AP_INVOICE_EXTRACT_HEADER_V.AI_INVOICE_ID%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_33 IS TABLE OF AP_INVOICE_EXTRACT_HEADER_V.AI_INVOICE_CURRENCY_CODE%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_39 IS TABLE OF AP_INVOICE_EXTRACT_HEADER_V.INV_EXCHANGE_DATE%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_40 IS TABLE OF AP_INVOICE_EXTRACT_HEADER_V.INV_EXCHANGE_RATE%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_41 IS TABLE OF AP_INVOICE_EXTRACT_HEADER_V.INV_EXCHANGE_RATE_TYPE%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_47 IS TABLE OF AP_INVOICE_EXTRACT_HEADER_V.AI_VENDOR_ID%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_48 IS TABLE OF AP_INVOICE_EXTRACT_HEADER_V.AI_VENDOR_SITE_ID%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_49 IS TABLE OF AP_INVOICE_EXTRACT_HEADER_V.THIRD_PARTY_TYPE%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_68 IS TABLE OF AP_INVOICE_EXTRACT_HEADER_V.AI_INVOICE_TYPE_LOOKUP_CODE%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_122 IS TABLE OF AP_INVOICE_EXTRACT_HEADER_V.INV_DOC_SEQUENCE_CATEGORY%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_123 IS TABLE OF AP_INVOICE_EXTRACT_HEADER_V.INV_DOC_SEQUENCE_IDENTIFIER%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_124 IS TABLE OF AP_INVOICE_EXTRACT_HEADER_V.INV_DOC_SEQUENCE_VALUE%TYPE INDEX BY BINARY_INTEGER;

TYPE t_array_source_1 IS TABLE OF AP_EXTRACT_INVOICE_DTLS_BC_V.AID_DESCRIPTION%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_8 IS TABLE OF AP_EXTRACT_INVOICE_DTLS_BC_V.INV_DIST_BASE_AMOUNT%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_9 IS TABLE OF AP_EXTRACT_INVOICE_DTLS_BC_V.RELATED_INV_DIST_DEST_TYPE%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_11 IS TABLE OF AP_EXTRACT_INVOICE_DTLS_BC_V.AID_DIST_CCID%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_13 IS TABLE OF AP_EXTRACT_INVOICE_DTLS_BC_V.SELF_ASSESSED_TAX_ACCOUNT%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_15 IS TABLE OF AP_EXTRACT_INVOICE_DTLS_BC_V.AID_LINE_TYPE_LOOKUP_CODE%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_16 IS TABLE OF AP_EXTRACT_INVOICE_DTLS_BC_V.AID_AMOUNT_VARIANCE%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_18 IS TABLE OF AP_EXTRACT_INVOICE_DTLS_BC_V.POD_ACCRUE_ON_RECEIPT_FLAG%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_19 IS TABLE OF AP_EXTRACT_INVOICE_DTLS_BC_V.DIST_ACCOUNT_REVERSAL_OPTION%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_21 IS TABLE OF AP_EXTRACT_INVOICE_DTLS_BC_V.DISTRIBUTION_LINK_TYPE%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_23 IS TABLE OF AP_EXTRACT_INVOICE_DTLS_BC_V.ALLOC_TO_MAIN_DIST_ID%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_25 IS TABLE OF AP_EXTRACT_INVOICE_DTLS_BC_V.BUS_FLOW_AP_APP_ID%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_26 IS TABLE OF AP_EXTRACT_INVOICE_DTLS_BC_V.BUS_FLOW_INV_DIST_TYPE%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_27 IS TABLE OF AP_EXTRACT_INVOICE_DTLS_BC_V.BUS_FLOW_INV_ENTITY_CODE%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_28 IS TABLE OF AP_EXTRACT_INVOICE_DTLS_BC_V.BUS_FLOW_INV_DIST_ID%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_29 IS TABLE OF AP_EXTRACT_INVOICE_DTLS_BC_V.BUS_FLOW_INV_ID%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_30 IS TABLE OF AP_EXTRACT_INVOICE_DTLS_BC_V.AID_INVOICE_DIST_ID%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_31 IS TABLE OF AP_EXTRACT_INVOICE_DTLS_BC_V.UPG_ENC_CR_CCID%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_32 IS TABLE OF AP_EXTRACT_INVOICE_DTLS_BC_V.UPG_ENC_CR_AMT%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_34 IS TABLE OF AP_EXTRACT_INVOICE_DTLS_BC_V.UPG_ENC_CR_BASE_AMT%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_35 IS TABLE OF AP_EXTRACT_INVOICE_DTLS_BC_V.UPG_ENC_DR_CCID%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_36 IS TABLE OF AP_EXTRACT_INVOICE_DTLS_BC_V.UPG_ENC_DR_AMT%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_37 IS TABLE OF AP_EXTRACT_INVOICE_DTLS_BC_V.UPG_ENC_DR_BASE_AMT%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_38 IS TABLE OF AP_EXTRACT_INVOICE_DTLS_BC_V.UPG_AP_ENCUM_OPTION%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_42 IS TABLE OF AP_EXTRACT_INVOICE_DTLS_BC_V.AID_BASE_AMOUNT_VARIANCE%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_43 IS TABLE OF AP_EXTRACT_INVOICE_DTLS_BC_V.DEFERRED_END_DATE%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_44 IS TABLE OF AP_EXTRACT_INVOICE_DTLS_BC_V.DEFERRED_OPTION%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_45 IS TABLE OF AP_EXTRACT_INVOICE_DTLS_BC_V.DEFERRED_START_DATE%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_46 IS TABLE OF AP_EXTRACT_INVOICE_DTLS_BC_V.OVERRIDE_ACCTD_AMT_FLAG%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_50 IS TABLE OF AP_EXTRACT_INVOICE_DTLS_BC_V.AID_PARENT_REVERSAL_ID%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_51 IS TABLE OF AP_EXTRACT_INVOICE_DTLS_BC_V.AID_STAT_AMOUNT%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_52 IS TABLE OF ZX_AP_DEF_TAX_EXTRACT_V.TAX_LINE_ID%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_53 IS TABLE OF ZX_AP_TAX_JRNL_LINE_DESC_V.REC_NREC_TAX_DIST_ID%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_54 IS TABLE OF AP_EXTRACT_INVOICE_DTLS_BC_V.SUMMARY_TAX_LINE_ID%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_55 IS TABLE OF AP_EXTRACT_INVOICE_DTLS_BC_V.UPG_CR_ENC_TYPE_ID%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_56 IS TABLE OF AP_EXTRACT_INVOICE_DTLS_BC_V.UPG_DR_ENC_TYPE_ID%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_57 IS TABLE OF AP_EXTRACT_INVOICE_DTLS_BC_V.AID_AMOUNT%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_58 IS TABLE OF AP_EXTRACT_INVOICE_DTLS_BC_V.PO_DISTRIBUTION_ID%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_59 IS TABLE OF AP_EXTRACT_INVOICE_DTLS_BC_V.SELF_ASSESSED_TAX_FLAG%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_60 IS TABLE OF AP_EXTRACT_INVOICE_DTLS_BC_V.BUS_FLOW_PO_APP_ID%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_61 IS TABLE OF AP_EXTRACT_INVOICE_DTLS_BC_V.BUS_FLOW_PO_DIST_TYPE%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_62 IS TABLE OF AP_EXTRACT_INVOICE_DTLS_BC_V.BUS_FLOW_PO_ENTITY_CODE%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_63 IS TABLE OF AP_EXTRACT_INVOICE_DTLS_BC_V.BUS_FLOW_PO_DIST_ID%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_64 IS TABLE OF AP_EXTRACT_INVOICE_DTLS_BC_V.BUS_FLOW_PO_DOC_ID%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_65 IS TABLE OF AP_EXTRACT_INVOICE_DTLS_BC_V.ENCUMBRANCE_AMOUNT%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_66 IS TABLE OF AP_EXTRACT_INVOICE_DTLS_BC_V.ENCUMBRANCE_BASE_AMOUNT%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_81 IS TABLE OF AP_EXTRACT_INVOICE_DTLS_BC_V.AID_QUANTITY_VARIANCE%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_82 IS TABLE OF AP_EXTRACT_INVOICE_DTLS_BC_V.AID_BASE_QUANTITY_VARIANCE%TYPE INDEX BY BINARY_INTEGER;

l_array_source_6              t_array_source_6;
l_array_source_7              t_array_source_7;
l_array_source_7_meaning      t_array_lookup_meaning;
l_array_source_10              t_array_source_10;
l_array_source_12              t_array_source_12;
l_array_source_12_meaning      t_array_lookup_meaning;
l_array_source_17              t_array_source_17;
l_array_source_17_meaning      t_array_lookup_meaning;
l_array_source_24              t_array_source_24;
l_array_source_33              t_array_source_33;
l_array_source_39              t_array_source_39;
l_array_source_40              t_array_source_40;
l_array_source_41              t_array_source_41;
l_array_source_47              t_array_source_47;
l_array_source_48              t_array_source_48;
l_array_source_49              t_array_source_49;
l_array_source_68              t_array_source_68;
l_array_source_68_meaning      t_array_lookup_meaning;
l_array_source_122              t_array_source_122;
l_array_source_123              t_array_source_123;
l_array_source_124              t_array_source_124;

l_array_source_1      t_array_source_1;
l_array_source_8      t_array_source_8;
l_array_source_9      t_array_source_9;
l_array_source_9_meaning      t_array_lookup_meaning;
l_array_source_11      t_array_source_11;
l_array_source_13      t_array_source_13;
l_array_source_15      t_array_source_15;
l_array_source_15_meaning      t_array_lookup_meaning;
l_array_source_16      t_array_source_16;
l_array_source_18      t_array_source_18;
l_array_source_18_meaning      t_array_lookup_meaning;
l_array_source_19      t_array_source_19;
l_array_source_21      t_array_source_21;
l_array_source_23      t_array_source_23;
l_array_source_25      t_array_source_25;
l_array_source_26      t_array_source_26;
l_array_source_27      t_array_source_27;
l_array_source_28      t_array_source_28;
l_array_source_29      t_array_source_29;
l_array_source_30      t_array_source_30;
l_array_source_31      t_array_source_31;
l_array_source_32      t_array_source_32;
l_array_source_34      t_array_source_34;
l_array_source_35      t_array_source_35;
l_array_source_36      t_array_source_36;
l_array_source_37      t_array_source_37;
l_array_source_38      t_array_source_38;
l_array_source_42      t_array_source_42;
l_array_source_43      t_array_source_43;
l_array_source_44      t_array_source_44;
l_array_source_45      t_array_source_45;
l_array_source_46      t_array_source_46;
l_array_source_46_meaning      t_array_lookup_meaning;
l_array_source_50      t_array_source_50;
l_array_source_51      t_array_source_51;
l_array_source_52      t_array_source_52;
l_array_source_53      t_array_source_53;
l_array_source_54      t_array_source_54;
l_array_source_55      t_array_source_55;
l_array_source_56      t_array_source_56;
l_array_source_57      t_array_source_57;
l_array_source_58      t_array_source_58;
l_array_source_59      t_array_source_59;
l_array_source_59_meaning      t_array_lookup_meaning;
l_array_source_60      t_array_source_60;
l_array_source_61      t_array_source_61;
l_array_source_62      t_array_source_62;
l_array_source_63      t_array_source_63;
l_array_source_64      t_array_source_64;
l_array_source_65      t_array_source_65;
l_array_source_66      t_array_source_66;
l_array_source_81      t_array_source_81;
l_array_source_82      t_array_source_82;

--
CURSOR header_cur
IS
SELECT /*+ leading(xet) cardinality(xet,1) */
-- Event Class Code: INVOICES
    xet.entity_id
   ,xet.legal_entity_id
   ,xet.entity_code
   ,xet.transaction_number
   ,xet.event_id
   ,xet.event_class_code
   ,xet.event_type_code
   ,xet.event_number
   ,xet.event_date
   ,xet.transaction_date
   ,xet.reference_num_1
   ,xet.reference_num_2
   ,xet.reference_num_3
   ,xet.reference_num_4
   ,xet.reference_char_1
   ,xet.reference_char_2
   ,xet.reference_char_3
   ,xet.reference_char_4
   ,xet.reference_date_1
   ,xet.reference_date_2
   ,xet.reference_date_3
   ,xet.reference_date_4
   ,xet.event_created_by
   ,xet.budgetary_control_flag 
  , h3.ASP_RATE_VAR_GAIN_CCID    source_6
  , h3.ASP_AUTOMATIC_OFFSETS_VALUE    source_7
  , fvl7.meaning   source_7_meaning
  , h3.ASP_RATE_VAR_LOSS_CCID    source_10
  , h3.ASP_AUTO_OFFSET_FLAG    source_12
  , fvl12.meaning   source_12_meaning
  , h3.FSP_PURCH_ENCUMBRANCE_FLAG    source_17
  , fvl17.meaning   source_17_meaning
  , h2.AI_INVOICE_ID    source_24
  , h2.AI_INVOICE_CURRENCY_CODE    source_33
  , h2.INV_EXCHANGE_DATE    source_39
  , h2.INV_EXCHANGE_RATE    source_40
  , h2.INV_EXCHANGE_RATE_TYPE    source_41
  , h2.AI_VENDOR_ID    source_47
  , h2.AI_VENDOR_SITE_ID    source_48
  , h2.THIRD_PARTY_TYPE    source_49
  , h2.AI_INVOICE_TYPE_LOOKUP_CODE    source_68
  , fvl68.meaning   source_68_meaning
  , h2.INV_DOC_SEQUENCE_CATEGORY    source_122
  , h2.INV_DOC_SEQUENCE_IDENTIFIER    source_123
  , h2.INV_DOC_SEQUENCE_VALUE    source_124
  FROM xla_events_gt     xet 
  , AP_INVOICE_EXTRACT_HEADER_V  h2
  , AP_SYSTEM_PARAMETERS_EXTRACT_V  h3
  , fnd_lookup_values    fvl7
  , fnd_lookup_values    fvl12
  , fnd_lookup_values    fvl17
  , fnd_lookup_values    fvl68
 WHERE xet.event_date between p_pad_start_date and p_pad_end_date
   and xet.event_class_code = C_EVENT_CLASS_CODE
   and xet.event_status_code <> 'N'  AND h2.event_id = xet.event_id
 AND h3.asp_org_id = h2.ai_org_id   AND fvl7.lookup_type(+)         = 'LIABILITY FLEXBUILD METHOD'
  AND fvl7.lookup_code(+)         = h3.ASP_AUTOMATIC_OFFSETS_VALUE
  AND fvl7.view_application_id(+) = 200
  AND fvl7.language(+)            = USERENV('LANG')
     AND fvl12.lookup_type(+)         = 'YES_NO'
  AND fvl12.lookup_code(+)         = h3.ASP_AUTO_OFFSET_FLAG
  AND fvl12.view_application_id(+) = 0
  AND fvl12.language(+)            = USERENV('LANG')
     AND fvl17.lookup_type(+)         = 'YES_NO'
  AND fvl17.lookup_code(+)         = h3.FSP_PURCH_ENCUMBRANCE_FLAG
  AND fvl17.view_application_id(+) = 0
  AND fvl17.language(+)            = USERENV('LANG')
     AND fvl68.lookup_type(+)         = 'INVOICE TYPE'
  AND fvl68.lookup_code(+)         = h2.AI_INVOICE_TYPE_LOOKUP_CODE
  AND fvl68.view_application_id(+) = 200
  AND fvl68.language(+)            = USERENV('LANG')
  
 ORDER BY event_id
;


--
CURSOR line_cur (x_first_event_id    in number, x_last_event_id    in number)
IS
SELECT  /*+ leading(xet) cardinality(xet,1) */
-- Event Class Code: INVOICES
    xet.entity_id
   ,xet.legal_entity_id
   ,xet.entity_code
   ,xet.transaction_number
   ,xet.event_id
   ,xet.event_class_code
   ,xet.event_type_code
   ,xet.event_number
   ,xet.event_date
   ,xet.transaction_date
   ,xet.reference_num_1
   ,xet.reference_num_2
   ,xet.reference_num_3
   ,xet.reference_num_4
   ,xet.reference_char_1
   ,xet.reference_char_2
   ,xet.reference_char_3
   ,xet.reference_char_4
   ,xet.reference_date_1
   ,xet.reference_date_2
   ,xet.reference_date_3
   ,xet.reference_date_4
   ,xet.event_created_by
   ,xet.budgetary_control_flag
 , l1.LINE_NUMBER  
  , l1.AID_DESCRIPTION    source_1
  , l1.INV_DIST_BASE_AMOUNT    source_8
  , l1.RELATED_INV_DIST_DEST_TYPE    source_9
  , fvl9.meaning   source_9_meaning
  , l1.AID_DIST_CCID    source_11
  , l1.SELF_ASSESSED_TAX_ACCOUNT    source_13
  , l1.AID_LINE_TYPE_LOOKUP_CODE    source_15
  , fvl15.meaning   source_15_meaning
  , l1.AID_AMOUNT_VARIANCE    source_16
  , l1.POD_ACCRUE_ON_RECEIPT_FLAG    source_18
  , fvl18.meaning   source_18_meaning
  , l1.DIST_ACCOUNT_REVERSAL_OPTION    source_19
  , l1.DISTRIBUTION_LINK_TYPE    source_21
  , l1.ALLOC_TO_MAIN_DIST_ID    source_23
  , l1.BUS_FLOW_AP_APP_ID    source_25
  , l1.BUS_FLOW_INV_DIST_TYPE    source_26
  , l1.BUS_FLOW_INV_ENTITY_CODE    source_27
  , l1.BUS_FLOW_INV_DIST_ID    source_28
  , l1.BUS_FLOW_INV_ID    source_29
  , l1.AID_INVOICE_DIST_ID    source_30
  , l1.UPG_ENC_CR_CCID    source_31
  , l1.UPG_ENC_CR_AMT    source_32
  , l1.UPG_ENC_CR_BASE_AMT    source_34
  , l1.UPG_ENC_DR_CCID    source_35
  , l1.UPG_ENC_DR_AMT    source_36
  , l1.UPG_ENC_DR_BASE_AMT    source_37
  , l1.UPG_AP_ENCUM_OPTION    source_38
  , l1.AID_BASE_AMOUNT_VARIANCE    source_42
  , l1.DEFERRED_END_DATE    source_43
  , l1.DEFERRED_OPTION    source_44
  , l1.DEFERRED_START_DATE    source_45
  , l1.OVERRIDE_ACCTD_AMT_FLAG    source_46
  , fvl46.meaning   source_46_meaning
  , l1.AID_PARENT_REVERSAL_ID    source_50
  , l1.AID_STAT_AMOUNT    source_51
  , l4.TAX_LINE_ID    source_52
  , l5.REC_NREC_TAX_DIST_ID    source_53
  , l1.SUMMARY_TAX_LINE_ID    source_54
  , l1.UPG_CR_ENC_TYPE_ID    source_55
  , l1.UPG_DR_ENC_TYPE_ID    source_56
  , l1.AID_AMOUNT    source_57
  , l1.PO_DISTRIBUTION_ID    source_58
  , l1.SELF_ASSESSED_TAX_FLAG    source_59
  , fvl59.meaning   source_59_meaning
  , l1.BUS_FLOW_PO_APP_ID    source_60
  , l1.BUS_FLOW_PO_DIST_TYPE    source_61
  , l1.BUS_FLOW_PO_ENTITY_CODE    source_62
  , l1.BUS_FLOW_PO_DIST_ID    source_63
  , l1.BUS_FLOW_PO_DOC_ID    source_64
  , l1.ENCUMBRANCE_AMOUNT    source_65
  , l1.ENCUMBRANCE_BASE_AMOUNT    source_66
  , l1.AID_QUANTITY_VARIANCE    source_81
  , l1.AID_BASE_QUANTITY_VARIANCE    source_82
  FROM xla_events_gt     xet 
  , AP_EXTRACT_INVOICE_DTLS_BC_V  l1
  , ZX_AP_DEF_TAX_EXTRACT_V  l4
  , ZX_AP_TAX_JRNL_LINE_DESC_V  l5
  , fnd_lookup_values    fvl9
  , fnd_lookup_values    fvl15
  , fnd_lookup_values    fvl18
  , fnd_lookup_values    fvl46
  , fnd_lookup_values    fvl59
 WHERE xet.event_id between x_first_event_id and x_last_event_id
   and xet.event_date between p_pad_start_date and p_pad_end_date
   and xet.event_class_code = C_EVENT_CLASS_CODE
   and xet.event_status_code <> 'N'   AND l1.event_id      = xet.event_id
 AND l1.ZRND_tax_dist_id = l4.REC_NREC_TAX_DIST_ID (+)  AND l1.ZRND_tax_dist_id = l5.REC_NREC_TAX_DIST_ID (+)    AND fvl9.lookup_type(+)         = 'DESTINATION TYPE'
  AND fvl9.lookup_code(+)         = l1.RELATED_INV_DIST_DEST_TYPE
  AND fvl9.view_application_id(+) = 201
  AND fvl9.language(+)            = USERENV('LANG')
     AND fvl15.lookup_type(+)         = 'INVOICE DISTRIBUTION TYPE'
  AND fvl15.lookup_code(+)         = l1.AID_LINE_TYPE_LOOKUP_CODE
  AND fvl15.view_application_id(+) = 200
  AND fvl15.language(+)            = USERENV('LANG')
     AND fvl18.lookup_type(+)         = 'YES_NO'
  AND fvl18.lookup_code(+)         = l1.POD_ACCRUE_ON_RECEIPT_FLAG
  AND fvl18.view_application_id(+) = 0
  AND fvl18.language(+)            = USERENV('LANG')
     AND fvl46.lookup_type(+)         = 'YES_NO'
  AND fvl46.lookup_code(+)         = l1.OVERRIDE_ACCTD_AMT_FLAG
  AND fvl46.view_application_id(+) = 0
  AND fvl46.language(+)            = USERENV('LANG')
     AND fvl59.lookup_type(+)         = 'YES_NO'
  AND fvl59.lookup_code(+)         = l1.SELF_ASSESSED_TAX_FLAG
  AND fvl59.view_application_id(+) = 0
  AND fvl59.language(+)            = USERENV('LANG')
  ;

--
BEGIN
IF g_log_enabled THEN
   l_log_module := C_DEFAULT_MODULE||'.EventClass_105';
END IF;
IF (C_LEVEL_PROCEDURE >= g_log_level) THEN
   trace
      (p_msg      => 'BEGIN of EventClass_105'
      ,p_level    => C_LEVEL_PROCEDURE
      ,p_module   => l_log_module);
END IF;

IF (C_LEVEL_STATEMENT >= g_log_level) THEN
   trace
      (p_msg      => 'p_application_id = '||p_application_id||
                     ' - p_base_ledger_id = '||p_base_ledger_id||
                     ' - p_target_ledger_id  = '||p_target_ledger_id||
                     ' - p_language = '||p_language||
                     ' - p_currency_code = '||p_currency_code||
                     ' - p_sla_ledger_id = '||p_sla_ledger_id
      ,p_level    => C_LEVEL_STATEMENT
      ,p_module   => l_log_module);
END IF;
--
-- initialze arrays
--
g_array_event.DELETE;
l_rec_array_event := l_null_rec_array_event;
--
--------------------------------------
-- 4262811 Initialze MPA Line Number
--------------------------------------
XLA_AE_HEADER_PKG.g_mpa_line_num := 0;

--

--
OPEN header_cur;
--
IF (C_LEVEL_STATEMENT >= g_log_level) THEN
   trace
   (p_msg      => 'SQL - FETCH header_cur'
   ,p_level    => C_LEVEL_STATEMENT
   ,p_module   => l_log_module);
END IF;
--
LOOP
FETCH header_cur BULK COLLECT INTO
        l_array_entity_id
      , l_array_legal_entity_id
      , l_array_entity_code
      , l_array_transaction_num
      , l_array_event_id
      , l_array_class_code
      , l_array_event_type
      , l_array_event_number
      , l_array_event_date
      , l_array_transaction_date
      , l_array_reference_num_1
      , l_array_reference_num_2
      , l_array_reference_num_3
      , l_array_reference_num_4
      , l_array_reference_char_1
      , l_array_reference_char_2
      , l_array_reference_char_3
      , l_array_reference_char_4
      , l_array_reference_date_1
      , l_array_reference_date_2
      , l_array_reference_date_3
      , l_array_reference_date_4
      , l_array_event_created_by
      , l_array_budgetary_control_flag 
      , l_array_source_6
      , l_array_source_7
      , l_array_source_7_meaning
      , l_array_source_10
      , l_array_source_12
      , l_array_source_12_meaning
      , l_array_source_17
      , l_array_source_17_meaning
      , l_array_source_24
      , l_array_source_33
      , l_array_source_39
      , l_array_source_40
      , l_array_source_41
      , l_array_source_47
      , l_array_source_48
      , l_array_source_49
      , l_array_source_68
      , l_array_source_68_meaning
      , l_array_source_122
      , l_array_source_123
      , l_array_source_124
      LIMIT l_rows;
--
IF (C_LEVEL_EVENT >= g_log_level) THEN
   trace
   (p_msg      => '# rows extracted from header extract objects = '||TO_CHAR(header_cur%ROWCOUNT)
   ,p_level    => C_LEVEL_EVENT
   ,p_module   => l_log_module);
END IF;
--
EXIT WHEN l_array_entity_id.COUNT = 0;

-- initialize arrays
XLA_AE_HEADER_PKG.g_rec_header_new        := NULL;
XLA_AE_LINES_PKG.g_rec_lines              := NULL;

--
-- Bug 4458708
--
XLA_AE_LINES_PKG.g_LineNumber := 0;


-- 4262811 - when creating Accrual Reversal or MPA, use g_last_hdr_idx to increment for next header id
g_last_hdr_idx := l_array_event_id.LAST;
--
-- loop for the headers. Each iteration is for each header extract row
-- fetched in header cursor
--
FOR hdr_idx IN l_array_event_id.FIRST .. l_array_event_id.LAST LOOP

--
-- set event info as cache for other routines to refer event attributes
--
XLA_AE_JOURNAL_ENTRY_PKG.set_event_info
   (p_application_id           => p_application_id
   ,p_primary_ledger_id        => p_primary_ledger_id
   ,p_base_ledger_id           => p_base_ledger_id
   ,p_target_ledger_id         => p_target_ledger_id
   ,p_entity_id                => l_array_entity_id(hdr_idx)
   ,p_legal_entity_id          => l_array_legal_entity_id(hdr_idx)
   ,p_entity_code              => l_array_entity_code(hdr_idx)
   ,p_transaction_num          => l_array_transaction_num(hdr_idx)
   ,p_event_id                 => l_array_event_id(hdr_idx)
   ,p_event_class_code         => l_array_class_code(hdr_idx)
   ,p_event_type_code          => l_array_event_type(hdr_idx)
   ,p_event_number             => l_array_event_number(hdr_idx)
   ,p_event_date               => l_array_event_date(hdr_idx)
   ,p_transaction_date         => l_array_transaction_date(hdr_idx)
   ,p_reference_num_1          => l_array_reference_num_1(hdr_idx)
   ,p_reference_num_2          => l_array_reference_num_2(hdr_idx)
   ,p_reference_num_3          => l_array_reference_num_3(hdr_idx)
   ,p_reference_num_4          => l_array_reference_num_4(hdr_idx)
   ,p_reference_char_1         => l_array_reference_char_1(hdr_idx)
   ,p_reference_char_2         => l_array_reference_char_2(hdr_idx)
   ,p_reference_char_3         => l_array_reference_char_3(hdr_idx)
   ,p_reference_char_4         => l_array_reference_char_4(hdr_idx)
   ,p_reference_date_1         => l_array_reference_date_1(hdr_idx)
   ,p_reference_date_2         => l_array_reference_date_2(hdr_idx)
   ,p_reference_date_3         => l_array_reference_date_3(hdr_idx)
   ,p_reference_date_4         => l_array_reference_date_4(hdr_idx)
   ,p_event_created_by         => l_array_event_created_by(hdr_idx)
   ,p_budgetary_control_flag   => l_array_budgetary_control_flag(hdr_idx));

--
-- set the status of entry to C_VALID (0)
--
XLA_AE_JOURNAL_ENTRY_PKG.g_global_status    := XLA_AE_JOURNAL_ENTRY_PKG.C_VALID;

--
-- initialize a row for ae header
--
XLA_AE_HEADER_PKG.InitHeader(hdr_idx);

l_event_id := l_array_event_id(hdr_idx);

--
-- storing the hdr_idx for event. May be used by line cursor.
--
g_array_event(l_event_id).array_value_num('header_index') := hdr_idx;

--
-- store sources from header extract. This can be improved to
-- store only those sources from header extract that may be used in lines
--

g_array_event(l_event_id).array_value_num('source_6') := l_array_source_6(hdr_idx);
g_array_event(l_event_id).array_value_char('source_7') := l_array_source_7(hdr_idx);
g_array_event(l_event_id).array_value_char('source_7_meaning') := l_array_source_7_meaning(hdr_idx);
g_array_event(l_event_id).array_value_num('source_10') := l_array_source_10(hdr_idx);
g_array_event(l_event_id).array_value_char('source_12') := l_array_source_12(hdr_idx);
g_array_event(l_event_id).array_value_char('source_12_meaning') := l_array_source_12_meaning(hdr_idx);
g_array_event(l_event_id).array_value_char('source_17') := l_array_source_17(hdr_idx);
g_array_event(l_event_id).array_value_char('source_17_meaning') := l_array_source_17_meaning(hdr_idx);
g_array_event(l_event_id).array_value_num('source_24') := l_array_source_24(hdr_idx);
g_array_event(l_event_id).array_value_char('source_33') := l_array_source_33(hdr_idx);
g_array_event(l_event_id).array_value_date('source_39') := l_array_source_39(hdr_idx);
g_array_event(l_event_id).array_value_num('source_40') := l_array_source_40(hdr_idx);
g_array_event(l_event_id).array_value_char('source_41') := l_array_source_41(hdr_idx);
g_array_event(l_event_id).array_value_num('source_47') := l_array_source_47(hdr_idx);
g_array_event(l_event_id).array_value_num('source_48') := l_array_source_48(hdr_idx);
g_array_event(l_event_id).array_value_char('source_49') := l_array_source_49(hdr_idx);
g_array_event(l_event_id).array_value_char('source_68') := l_array_source_68(hdr_idx);
g_array_event(l_event_id).array_value_char('source_68_meaning') := l_array_source_68_meaning(hdr_idx);
g_array_event(l_event_id).array_value_char('source_122') := l_array_source_122(hdr_idx);
g_array_event(l_event_id).array_value_num('source_123') := l_array_source_123(hdr_idx);
g_array_event(l_event_id).array_value_num('source_124') := l_array_source_124(hdr_idx);

--
-- initilaize the status of ae headers for diffrent balance types
-- the status is initialised to C_NOT_CREATED (2)
--
--g_array_event(l_event_id).array_value_num('actual_je_status') := XLA_AE_JOURNAL_ENTRY_PKG.C_NOT_CREATED;
--g_array_event(l_event_id).array_value_num('budget_je_status') := XLA_AE_JOURNAL_ENTRY_PKG.C_NOT_CREATED;
--g_array_event(l_event_id).array_value_num('encumbrance_je_status') := XLA_AE_JOURNAL_ENTRY_PKG.C_NOT_CREATED;

--
-- call api to validate and store accounting attributes for header
--

------------------------------------------------------------
-- Accrual Reversal : to get date for Standard Source (NONE)
------------------------------------------------------------
l_acc_rev_gl_date_source := NULL;

     l_rec_acct_attrs.array_acct_attr_code(1)   := 'DOC_CATEGORY_CODE';
      l_rec_acct_attrs.array_char_value(1) := g_array_event(l_event_id).array_value_char('source_122');
     l_rec_acct_attrs.array_acct_attr_code(2)   := 'DOC_SEQUENCE_ID';
      l_rec_acct_attrs.array_num_value(2) := g_array_event(l_event_id).array_value_num('source_123');
     l_rec_acct_attrs.array_acct_attr_code(3)   := 'DOC_SEQUENCE_VALUE';
      l_rec_acct_attrs.array_num_value(3) := g_array_event(l_event_id).array_value_num('source_124');
     l_rec_acct_attrs.array_acct_attr_code(4)   := 'GL_DATE';
      l_rec_acct_attrs.array_date_value(4) := 
xla_ae_sources_pkg.GetSystemSourceDate(
   p_source_code           => 'XLA_EVENT_DATE'
 , p_source_type_code      => 'Y'
 , p_source_application_id =>  602
);


XLA_AE_HEADER_PKG.SetHdrAcctAttrs(l_rec_acct_attrs);

XLA_AE_HEADER_PKG.SetJeCategoryName;

XLA_AE_HEADER_PKG.g_rec_header_new.array_event_type_code(hdr_idx)  := l_array_event_type(hdr_idx);
XLA_AE_HEADER_PKG.g_rec_header_new.array_event_id(hdr_idx)         := l_array_event_id(hdr_idx);
XLA_AE_HEADER_PKG.g_rec_header_new.array_entity_id(hdr_idx)        := l_array_entity_id(hdr_idx);
XLA_AE_HEADER_PKG.g_rec_header_new.array_event_number(hdr_idx)     := l_array_event_number(hdr_idx);
XLA_AE_HEADER_PKG.g_rec_header_new.array_target_ledger_id(hdr_idx) := p_target_ledger_id;


--
xla_ae_header_pkg.SetHdrDescription(
   p_description => Description_1 (
   p_application_id => p_application_id 
   )
);
--

-- No header level analytical criteria

--
--accounting attribute enhancement, bug 3612931
--
l_trx_reversal_source := SUBSTR(NULL, 1,30);

IF NVL(l_trx_reversal_source, 'N') NOT IN ('N','Y') THEN
   xla_ae_journal_entry_pkg.g_global_status      :=  xla_ae_journal_entry_pkg.C_INVALID;

   xla_accounting_err_pkg.build_message
      (p_appli_s_name            => 'XLA'
      ,p_msg_name                => 'XLA_AP_INVALID_HDR_ATTR'
      ,p_token_1                 => 'ACCT_ATTR_NAME'
      ,p_value_1                 => xla_ae_sources_pkg.GetAccountingSourceName('TRX_ACCT_REVERSAL_OPTION')
      ,p_token_2                 => 'PRODUCT_NAME'
      ,p_value_2                 => xla_ae_journal_entry_pkg.g_cache_event.application_name
      ,p_entity_id               => xla_ae_journal_entry_pkg.g_cache_event.entity_id
      ,p_event_id                => xla_ae_journal_entry_pkg.g_cache_event.event_id
      ,p_ledger_id               => xla_ae_journal_entry_pkg.g_cache_event.target_ledger_id);

ELSIF NVL(l_trx_reversal_source, 'N') = 'Y' THEN
   --
   -- following sets the accounting attributes needed to reverse
   -- accounting for a distributeion
   --
   xla_ae_lines_pkg.SetTrxReversalAttrs
      (p_event_id              => l_event_id
      ,p_gl_date               => XLA_AE_HEADER_PKG.g_rec_header_new.array_gl_date(hdr_idx)
      ,p_trx_reversal_source   => l_trx_reversal_source);

END IF;


----------------------------------------------------------------
-- 4262811 -  update the header statuses to invalid in need be
----------------------------------------------------------------
--
XLA_AE_JOURNAL_ENTRY_PKG.UpdateJournalEntryStatus (p_hdr_idx => hdr_idx);


  -----------------------------------------------
  -- No accrual reversal for the event class/type
  -----------------------------------------------
----------------------------------------------------------------

--
-- this ends the header loop iteration for one bulk fetch
--
END LOOP;

l_first_event_id   := l_array_event_id(l_array_event_id.FIRST);
l_last_event_id    := l_array_event_id(l_array_event_id.LAST);

--
-- insert dummy rows into lines gt table that were created due to
-- transaction reversals
--
IF XLA_AE_LINES_PKG.g_rec_lines.array_ae_header_id.COUNT > 0 THEN
   l_result := XLA_AE_LINES_PKG.InsertLines;
END IF;

--
-- reset the temp_line_num for each set of events fetched from header
-- cursor rather than doing it for each new event in line cursor
-- Bug 3939231
--
xla_ae_lines_pkg.g_temp_line_num := 0;



--
OPEN line_cur(x_first_event_id  => l_first_event_id, x_last_event_id  => l_last_event_id);
--
--
IF (C_LEVEL_STATEMENT >= g_log_level) THEN

      trace
         (p_msg      => 'SQL - FETCH line_cur'
         ,p_level    => C_LEVEL_STATEMENT
         ,p_module   => l_log_module);

END IF;
--
--
LOOP
  --
  FETCH line_cur BULK COLLECT INTO
        l_array_entity_id
      , l_array_legal_entity_id
      , l_array_entity_code
      , l_array_transaction_num
      , l_array_event_id
      , l_array_class_code
      , l_array_event_type
      , l_array_event_number
      , l_array_event_date
      , l_array_transaction_date
      , l_array_reference_num_1
      , l_array_reference_num_2
      , l_array_reference_num_3
      , l_array_reference_num_4
      , l_array_reference_char_1
      , l_array_reference_char_2
      , l_array_reference_char_3
      , l_array_reference_char_4
      , l_array_reference_date_1
      , l_array_reference_date_2
      , l_array_reference_date_3
      , l_array_reference_date_4
      , l_array_event_created_by
      , l_array_budgetary_control_flag
      , l_array_extract_line_num 
      , l_array_source_1
      , l_array_source_8
      , l_array_source_9
      , l_array_source_9_meaning
      , l_array_source_11
      , l_array_source_13
      , l_array_source_15
      , l_array_source_15_meaning
      , l_array_source_16
      , l_array_source_18
      , l_array_source_18_meaning
      , l_array_source_19
      , l_array_source_21
      , l_array_source_23
      , l_array_source_25
      , l_array_source_26
      , l_array_source_27
      , l_array_source_28
      , l_array_source_29
      , l_array_source_30
      , l_array_source_31
      , l_array_source_32
      , l_array_source_34
      , l_array_source_35
      , l_array_source_36
      , l_array_source_37
      , l_array_source_38
      , l_array_source_42
      , l_array_source_43
      , l_array_source_44
      , l_array_source_45
      , l_array_source_46
      , l_array_source_46_meaning
      , l_array_source_50
      , l_array_source_51
      , l_array_source_52
      , l_array_source_53
      , l_array_source_54
      , l_array_source_55
      , l_array_source_56
      , l_array_source_57
      , l_array_source_58
      , l_array_source_59
      , l_array_source_59_meaning
      , l_array_source_60
      , l_array_source_61
      , l_array_source_62
      , l_array_source_63
      , l_array_source_64
      , l_array_source_65
      , l_array_source_66
      , l_array_source_81
      , l_array_source_82
      LIMIT l_rows;

  --
  IF (C_LEVEL_EVENT >= g_log_level) THEN
            trace
               (p_msg      => '# rows extracted from line extract objects = '||TO_CHAR(line_cur%ROWCOUNT)
               ,p_level    => C_LEVEL_EVENT
               ,p_module   => l_log_module);
  END IF;
  --
  EXIT WHEN l_array_entity_id.count = 0;

  XLA_AE_LINES_PKG.g_rec_lines := null;

--
-- Bug 4458708
--
XLA_AE_LINES_PKG.g_LineNumber := 0;
--
--

FOR Idx IN 1..l_array_event_id.count LOOP
   --
   -- 5648433 (move l_event_id out of IF statement)  set l_event_id to be used inside IF condition
   --
   l_event_id := l_array_event_id(idx);  -- 5648433

   --
   -- Bug 4872078 - Do nothing if the event is meant for transaction reversal
   --

   IF NVL(xla_ae_header_pkg.g_rec_header_new.array_trx_acct_reversal_option
             (g_array_event(l_event_id).array_value_num('header_index'))
         ,'N'
         ) <> 'Y'
   THEN
      IF (C_LEVEL_STATEMENT >= g_log_level) THEN
         trace
            (p_msg      => 'Trancaction revesal option is not Y '
            ,p_level    => C_LEVEL_STATEMENT
            ,p_module   => l_log_module);
      END IF;

--
-- set the XLA_AE_JOURNAL_ENTRY_PKG.g_global_status to C_VALID (0)
--
XLA_AE_JOURNAL_ENTRY_PKG.g_global_status := XLA_AE_JOURNAL_ENTRY_PKG.C_VALID;
--
-- set event info as cache for other routines to refer event attributes
--

IF l_event_id <> NVL(l_previous_event_id, -1) THEN
   l_previous_event_id := l_event_id;

   XLA_AE_JOURNAL_ENTRY_PKG.set_event_info
      (p_application_id           => p_application_id
      ,p_primary_ledger_id        => p_primary_ledger_id
      ,p_base_ledger_id           => p_base_ledger_id
      ,p_target_ledger_id         => p_target_ledger_id
      ,p_entity_id                => l_array_entity_id(Idx)
      ,p_legal_entity_id          => l_array_legal_entity_id(Idx)
      ,p_entity_code              => l_array_entity_code(Idx)
      ,p_transaction_num          => l_array_transaction_num(Idx)
      ,p_event_id                 => l_array_event_id(Idx)
      ,p_event_class_code         => l_array_class_code(Idx)
      ,p_event_type_code          => l_array_event_type(Idx)
      ,p_event_number             => l_array_event_number(Idx)
      ,p_event_date               => l_array_event_date(Idx)
      ,p_transaction_date         => l_array_transaction_date(Idx)
      ,p_reference_num_1          => l_array_reference_num_1(Idx)
      ,p_reference_num_2          => l_array_reference_num_2(Idx)
      ,p_reference_num_3          => l_array_reference_num_3(Idx)
      ,p_reference_num_4          => l_array_reference_num_4(Idx)
      ,p_reference_char_1         => l_array_reference_char_1(Idx)
      ,p_reference_char_2         => l_array_reference_char_2(Idx)
      ,p_reference_char_3         => l_array_reference_char_3(Idx)
      ,p_reference_char_4         => l_array_reference_char_4(Idx)
      ,p_reference_date_1         => l_array_reference_date_1(Idx)
      ,p_reference_date_2         => l_array_reference_date_2(Idx)
      ,p_reference_date_3         => l_array_reference_date_3(Idx)
      ,p_reference_date_4         => l_array_reference_date_4(Idx)
      ,p_event_created_by         => l_array_event_created_by(Idx)
      ,p_budgetary_control_flag   => l_array_budgetary_control_flag(Idx));
       --
END IF;



--
xla_ae_lines_pkg.SetExtractLine(p_extract_line => l_array_extract_line_num(Idx));

l_acct_reversal_source := SUBSTR(l_array_source_19(Idx), 1,30);

IF l_continue_with_lines THEN
   IF NVL(l_acct_reversal_source, 'N') NOT IN ('N','Y','B') THEN
      xla_ae_journal_entry_pkg.g_global_status      :=  xla_ae_journal_entry_pkg.C_INVALID;

      xla_accounting_err_pkg.build_message
         (p_appli_s_name            => 'XLA'
         ,p_msg_name                => 'XLA_AP_INVALID_REVERSAL_OPTION'
         ,p_token_1                 => 'LINE_NUMBER'
         ,p_value_1                 => l_array_extract_line_num(Idx)
         ,p_token_2                 => 'PRODUCT_NAME'
         ,p_value_2                 => xla_ae_journal_entry_pkg.g_cache_event.application_name
         ,p_entity_id               => xla_ae_journal_entry_pkg.g_cache_event.entity_id
         ,p_event_id                => xla_ae_journal_entry_pkg.g_cache_event.event_id
         ,p_ledger_id               => xla_ae_journal_entry_pkg.g_cache_event.target_ledger_id);

   ELSIF NVL(l_acct_reversal_source, 'N') IN ('Y','B') THEN
      --
      -- following sets the accounting attributes needed to reverse
      -- accounting for a distributeion
      --

      --
      -- 5217187
      --
      l_rec_rev_acct_attrs.array_acct_attr_code(1):= 'GL_DATE';
      l_rec_rev_acct_attrs.array_date_value(1) := XLA_AE_HEADER_PKG.g_rec_header_new.array_gl_date(
                                       g_array_event(l_event_id).array_value_num('header_index'));
      --
      --

      l_rec_rev_acct_attrs.array_acct_attr_code(2) := 'ACCOUNTING_REVERSAL_OPTION';
      l_rec_rev_acct_attrs.array_char_value(2)  := l_array_source_19(Idx);
      l_rec_rev_acct_attrs.array_acct_attr_code(3) := 'DISTRIBUTION_IDENTIFIER_1';
      l_rec_rev_acct_attrs.array_num_value(3)  := l_array_source_30(Idx);
      l_rec_rev_acct_attrs.array_acct_attr_code(4) := 'DISTRIBUTION_TYPE';
      l_rec_rev_acct_attrs.array_char_value(4)  := l_array_source_21(Idx);
      l_rec_rev_acct_attrs.array_acct_attr_code(5) := 'ENC_UPG_CR_CCID';
      l_rec_rev_acct_attrs.array_num_value(5)  := l_array_source_31(Idx);
      l_rec_rev_acct_attrs.array_acct_attr_code(6) := 'ENC_UPG_CR_ENTERED_AMT';
      l_rec_rev_acct_attrs.array_num_value(6)  := l_array_source_32(Idx);
      l_rec_rev_acct_attrs.array_acct_attr_code(7) := 'ENC_UPG_CR_ENTERED_CURR';
      l_rec_rev_acct_attrs.array_char_value(7)  := g_array_event(l_event_id).array_value_char('source_33');
      l_rec_rev_acct_attrs.array_acct_attr_code(8) := 'ENC_UPG_CR_LEDGER_AMT';
      l_rec_rev_acct_attrs.array_num_value(8)  := l_array_source_34(Idx);
      l_rec_rev_acct_attrs.array_acct_attr_code(9) := 'ENC_UPG_DR_CCID';
      l_rec_rev_acct_attrs.array_num_value(9)  := l_array_source_35(Idx);
      l_rec_rev_acct_attrs.array_acct_attr_code(10) := 'ENC_UPG_DR_ENTERED_AMT';
      l_rec_rev_acct_attrs.array_num_value(10)  := l_array_source_36(Idx);
      l_rec_rev_acct_attrs.array_acct_attr_code(11) := 'ENC_UPG_DR_ENTERED_CURR';
      l_rec_rev_acct_attrs.array_char_value(11)  := g_array_event(l_event_id).array_value_char('source_33');
      l_rec_rev_acct_attrs.array_acct_attr_code(12) := 'ENC_UPG_DR_LEDGER_AMT';
      l_rec_rev_acct_attrs.array_num_value(12)  := l_array_source_37(Idx);
      l_rec_rev_acct_attrs.array_acct_attr_code(13) := 'ENC_UPG_OPTION';
      l_rec_rev_acct_attrs.array_char_value(13)  := l_array_source_38(Idx);
      l_rec_rev_acct_attrs.array_acct_attr_code(14) := 'PARTY_TYPE';
      l_rec_rev_acct_attrs.array_char_value(14)  := g_array_event(l_event_id).array_value_char('source_49');
      l_rec_rev_acct_attrs.array_acct_attr_code(15) := 'REVERSED_DISTRIBUTION_ID1';
      l_rec_rev_acct_attrs.array_num_value(15)  := l_array_source_50(Idx);
      l_rec_rev_acct_attrs.array_acct_attr_code(16) := 'REVERSED_DISTRIBUTION_TYPE';
      l_rec_rev_acct_attrs.array_char_value(16)  := l_array_source_21(Idx);
      l_rec_rev_acct_attrs.array_acct_attr_code(17) := 'TAX_LINE_REF_ID';
      l_rec_rev_acct_attrs.array_num_value(17)  := l_array_source_52(Idx);
      l_rec_rev_acct_attrs.array_acct_attr_code(18) := 'TAX_REC_NREC_DIST_REF_ID';
      l_rec_rev_acct_attrs.array_num_value(18)  := l_array_source_53(Idx);
      l_rec_rev_acct_attrs.array_acct_attr_code(19) := 'TAX_SUMMARY_LINE_REF_ID';
      l_rec_rev_acct_attrs.array_num_value(19)  := l_array_source_54(Idx);
      l_rec_rev_acct_attrs.array_acct_attr_code(20) := 'UPG_CR_ENC_TYPE_ID';
      l_rec_rev_acct_attrs.array_num_value(20)  := l_array_source_55(Idx);
      l_rec_rev_acct_attrs.array_acct_attr_code(21) := 'UPG_DR_ENC_TYPE_ID';
      l_rec_rev_acct_attrs.array_num_value(21)  := l_array_source_56(Idx);


      xla_ae_lines_pkg.SetAcctReversalAttrs
         (p_event_id             => l_event_id
         ,p_rec_acct_attrs       => l_rec_rev_acct_attrs
         ,p_calculate_acctd_flag => l_calculate_acctd_flag
         ,p_calculate_g_l_flag   => l_calculate_g_l_flag);
   END IF;

   IF NVL(l_acct_reversal_source, 'N') IN ('N','B') THEN
       l_actual_flag := NULL;  l_actual_gain_loss_ref := '#####';

--
AcctLineType_16 (
 p_application_id  => p_application_id
 ,p_event_id     => l_event_id
 ,p_calculate_acctd_flag => l_calculate_acctd_flag
 ,p_calculate_g_l_flag => l_calculate_g_l_flag
 ,p_actual_flag => l_actual_flag
 ,p_balance_type_code => l_balance_type_code
 ,p_gain_or_loss_ref=> l_gain_or_loss_ref
 
 , p_source_1 => l_array_source_1(Idx)
 , p_source_11 => l_array_source_11(Idx)
 , p_source_15 => l_array_source_15(Idx)
 , p_source_15_meaning => l_array_source_15_meaning(Idx)
 , p_source_16 => l_array_source_16(Idx)
 , p_source_17 => g_array_event(l_event_id).array_value_char('source_17')
 , p_source_17_meaning => g_array_event(l_event_id).array_value_char('source_17_meaning')
 , p_source_18 => l_array_source_18(Idx)
 , p_source_18_meaning => l_array_source_18_meaning(Idx)
 , p_source_19 => l_array_source_19(Idx)
 , p_source_21 => l_array_source_21(Idx)
 , p_source_23 => l_array_source_23(Idx)
 , p_source_24 => g_array_event(l_event_id).array_value_num('source_24')
 , p_source_25 => l_array_source_25(Idx)
 , p_source_26 => l_array_source_26(Idx)
 , p_source_27 => l_array_source_27(Idx)
 , p_source_28 => l_array_source_28(Idx)
 , p_source_29 => l_array_source_29(Idx)
 , p_source_30 => l_array_source_30(Idx)
 , p_source_31 => l_array_source_31(Idx)
 , p_source_32 => l_array_source_32(Idx)
 , p_source_33 => g_array_event(l_event_id).array_value_char('source_33')
 , p_source_34 => l_array_source_34(Idx)
 , p_source_35 => l_array_source_35(Idx)
 , p_source_36 => l_array_source_36(Idx)
 , p_source_37 => l_array_source_37(Idx)
 , p_source_38 => l_array_source_38(Idx)
 , p_source_39 => g_array_event(l_event_id).array_value_date('source_39')
 , p_source_40 => g_array_event(l_event_id).array_value_num('source_40')
 , p_source_41 => g_array_event(l_event_id).array_value_char('source_41')
 , p_source_42 => l_array_source_42(Idx)
 , p_source_43 => l_array_source_43(Idx)
 , p_source_44 => l_array_source_44(Idx)
 , p_source_45 => l_array_source_45(Idx)
 , p_source_46 => l_array_source_46(Idx)
 , p_source_46_meaning => l_array_source_46_meaning(Idx)
 , p_source_47 => g_array_event(l_event_id).array_value_num('source_47')
 , p_source_48 => g_array_event(l_event_id).array_value_num('source_48')
 , p_source_49 => g_array_event(l_event_id).array_value_char('source_49')
 , p_source_50 => l_array_source_50(Idx)
 , p_source_51 => l_array_source_51(Idx)
 , p_source_52 => l_array_source_52(Idx)
 , p_source_53 => l_array_source_53(Idx)
 , p_source_54 => l_array_source_54(Idx)
 , p_source_55 => l_array_source_55(Idx)
 , p_source_56 => l_array_source_56(Idx)
 , p_source_57 => l_array_source_57(Idx)
 );
If(l_balance_type_code = 'A') THEN
  l_actual_gain_loss_ref := l_gain_or_loss_ref;
END IF;

--


--
AcctLineType_24 (
 p_application_id  => p_application_id
 ,p_event_id     => l_event_id
 ,p_calculate_acctd_flag => l_calculate_acctd_flag
 ,p_calculate_g_l_flag => l_calculate_g_l_flag
 ,p_actual_flag => l_actual_flag
 ,p_balance_type_code => l_balance_type_code
 ,p_gain_or_loss_ref=> l_gain_or_loss_ref
 
 , p_source_1 => l_array_source_1(Idx)
 , p_source_6 => g_array_event(l_event_id).array_value_num('source_6')
 , p_source_7 => g_array_event(l_event_id).array_value_char('source_7')
 , p_source_7_meaning => g_array_event(l_event_id).array_value_char('source_7_meaning')
 , p_source_8 => l_array_source_8(Idx)
 , p_source_9 => l_array_source_9(Idx)
 , p_source_9_meaning => l_array_source_9_meaning(Idx)
 , p_source_10 => g_array_event(l_event_id).array_value_num('source_10')
 , p_source_11 => l_array_source_11(Idx)
 , p_source_12 => g_array_event(l_event_id).array_value_char('source_12')
 , p_source_12_meaning => g_array_event(l_event_id).array_value_char('source_12_meaning')
 , p_source_15 => l_array_source_15(Idx)
 , p_source_15_meaning => l_array_source_15_meaning(Idx)
 , p_source_17 => g_array_event(l_event_id).array_value_char('source_17')
 , p_source_17_meaning => g_array_event(l_event_id).array_value_char('source_17_meaning')
 , p_source_19 => l_array_source_19(Idx)
 , p_source_21 => l_array_source_21(Idx)
 , p_source_23 => l_array_source_23(Idx)
 , p_source_24 => g_array_event(l_event_id).array_value_num('source_24')
 , p_source_25 => l_array_source_25(Idx)
 , p_source_26 => l_array_source_26(Idx)
 , p_source_27 => l_array_source_27(Idx)
 , p_source_28 => l_array_source_28(Idx)
 , p_source_29 => l_array_source_29(Idx)
 , p_source_30 => l_array_source_30(Idx)
 , p_source_31 => l_array_source_31(Idx)
 , p_source_32 => l_array_source_32(Idx)
 , p_source_33 => g_array_event(l_event_id).array_value_char('source_33')
 , p_source_34 => l_array_source_34(Idx)
 , p_source_35 => l_array_source_35(Idx)
 , p_source_36 => l_array_source_36(Idx)
 , p_source_37 => l_array_source_37(Idx)
 , p_source_38 => l_array_source_38(Idx)
 , p_source_39 => g_array_event(l_event_id).array_value_date('source_39')
 , p_source_40 => g_array_event(l_event_id).array_value_num('source_40')
 , p_source_41 => g_array_event(l_event_id).array_value_char('source_41')
 , p_source_43 => l_array_source_43(Idx)
 , p_source_44 => l_array_source_44(Idx)
 , p_source_45 => l_array_source_45(Idx)
 , p_source_46 => l_array_source_46(Idx)
 , p_source_46_meaning => l_array_source_46_meaning(Idx)
 , p_source_47 => g_array_event(l_event_id).array_value_num('source_47')
 , p_source_48 => g_array_event(l_event_id).array_value_num('source_48')
 , p_source_49 => g_array_event(l_event_id).array_value_char('source_49')
 , p_source_50 => l_array_source_50(Idx)
 , p_source_51 => l_array_source_51(Idx)
 , p_source_52 => l_array_source_52(Idx)
 , p_source_53 => l_array_source_53(Idx)
 , p_source_54 => l_array_source_54(Idx)
 , p_source_55 => l_array_source_55(Idx)
 , p_source_56 => l_array_source_56(Idx)
 , p_source_57 => l_array_source_57(Idx)
 , p_source_65 => l_array_source_65(Idx)
 , p_source_66 => l_array_source_66(Idx)
 );
If(l_balance_type_code = 'A') THEN
  l_actual_gain_loss_ref := l_gain_or_loss_ref;
END IF;

--


--
AcctLineType_28 (
 p_application_id  => p_application_id
 ,p_event_id     => l_event_id
 ,p_calculate_acctd_flag => l_calculate_acctd_flag
 ,p_calculate_g_l_flag => l_calculate_g_l_flag
 ,p_actual_flag => l_actual_flag
 ,p_balance_type_code => l_balance_type_code
 ,p_gain_or_loss_ref=> l_gain_or_loss_ref
 
 , p_source_1 => l_array_source_1(Idx)
 , p_source_11 => l_array_source_11(Idx)
 , p_source_15 => l_array_source_15(Idx)
 , p_source_15_meaning => l_array_source_15_meaning(Idx)
 , p_source_17 => g_array_event(l_event_id).array_value_char('source_17')
 , p_source_17_meaning => g_array_event(l_event_id).array_value_char('source_17_meaning')
 , p_source_19 => l_array_source_19(Idx)
 , p_source_21 => l_array_source_21(Idx)
 , p_source_23 => l_array_source_23(Idx)
 , p_source_24 => g_array_event(l_event_id).array_value_num('source_24')
 , p_source_25 => l_array_source_25(Idx)
 , p_source_26 => l_array_source_26(Idx)
 , p_source_27 => l_array_source_27(Idx)
 , p_source_28 => l_array_source_28(Idx)
 , p_source_29 => l_array_source_29(Idx)
 , p_source_30 => l_array_source_30(Idx)
 , p_source_31 => l_array_source_31(Idx)
 , p_source_32 => l_array_source_32(Idx)
 , p_source_33 => g_array_event(l_event_id).array_value_char('source_33')
 , p_source_34 => l_array_source_34(Idx)
 , p_source_35 => l_array_source_35(Idx)
 , p_source_36 => l_array_source_36(Idx)
 , p_source_37 => l_array_source_37(Idx)
 , p_source_38 => l_array_source_38(Idx)
 , p_source_39 => g_array_event(l_event_id).array_value_date('source_39')
 , p_source_40 => g_array_event(l_event_id).array_value_num('source_40')
 , p_source_41 => g_array_event(l_event_id).array_value_char('source_41')
 , p_source_43 => l_array_source_43(Idx)
 , p_source_44 => l_array_source_44(Idx)
 , p_source_45 => l_array_source_45(Idx)
 , p_source_46 => l_array_source_46(Idx)
 , p_source_46_meaning => l_array_source_46_meaning(Idx)
 , p_source_47 => g_array_event(l_event_id).array_value_num('source_47')
 , p_source_48 => g_array_event(l_event_id).array_value_num('source_48')
 , p_source_49 => g_array_event(l_event_id).array_value_char('source_49')
 , p_source_50 => l_array_source_50(Idx)
 , p_source_51 => l_array_source_51(Idx)
 , p_source_52 => l_array_source_52(Idx)
 , p_source_53 => l_array_source_53(Idx)
 , p_source_54 => l_array_source_54(Idx)
 , p_source_55 => l_array_source_55(Idx)
 , p_source_56 => l_array_source_56(Idx)
 , p_source_57 => l_array_source_57(Idx)
 , p_source_65 => l_array_source_65(Idx)
 , p_source_66 => l_array_source_66(Idx)
 );
If(l_balance_type_code = 'A') THEN
  l_actual_gain_loss_ref := l_gain_or_loss_ref;
END IF;

--


--
AcctLineType_30 (
 p_application_id  => p_application_id
 ,p_event_id     => l_event_id
 ,p_calculate_acctd_flag => l_calculate_acctd_flag
 ,p_calculate_g_l_flag => l_calculate_g_l_flag
 ,p_actual_flag => l_actual_flag
 ,p_balance_type_code => l_balance_type_code
 ,p_gain_or_loss_ref=> l_gain_or_loss_ref
 
 , p_source_1 => l_array_source_1(Idx)
 , p_source_8 => l_array_source_8(Idx)
 , p_source_11 => l_array_source_11(Idx)
 , p_source_15 => l_array_source_15(Idx)
 , p_source_15_meaning => l_array_source_15_meaning(Idx)
 , p_source_19 => l_array_source_19(Idx)
 , p_source_21 => l_array_source_21(Idx)
 , p_source_23 => l_array_source_23(Idx)
 , p_source_24 => g_array_event(l_event_id).array_value_num('source_24')
 , p_source_25 => l_array_source_25(Idx)
 , p_source_26 => l_array_source_26(Idx)
 , p_source_27 => l_array_source_27(Idx)
 , p_source_28 => l_array_source_28(Idx)
 , p_source_29 => l_array_source_29(Idx)
 , p_source_30 => l_array_source_30(Idx)
 , p_source_31 => l_array_source_31(Idx)
 , p_source_32 => l_array_source_32(Idx)
 , p_source_33 => g_array_event(l_event_id).array_value_char('source_33')
 , p_source_34 => l_array_source_34(Idx)
 , p_source_35 => l_array_source_35(Idx)
 , p_source_36 => l_array_source_36(Idx)
 , p_source_37 => l_array_source_37(Idx)
 , p_source_38 => l_array_source_38(Idx)
 , p_source_39 => g_array_event(l_event_id).array_value_date('source_39')
 , p_source_40 => g_array_event(l_event_id).array_value_num('source_40')
 , p_source_41 => g_array_event(l_event_id).array_value_char('source_41')
 , p_source_43 => l_array_source_43(Idx)
 , p_source_44 => l_array_source_44(Idx)
 , p_source_45 => l_array_source_45(Idx)
 , p_source_46 => l_array_source_46(Idx)
 , p_source_46_meaning => l_array_source_46_meaning(Idx)
 , p_source_47 => g_array_event(l_event_id).array_value_num('source_47')
 , p_source_48 => g_array_event(l_event_id).array_value_num('source_48')
 , p_source_49 => g_array_event(l_event_id).array_value_char('source_49')
 , p_source_50 => l_array_source_50(Idx)
 , p_source_51 => l_array_source_51(Idx)
 , p_source_52 => l_array_source_52(Idx)
 , p_source_53 => l_array_source_53(Idx)
 , p_source_54 => l_array_source_54(Idx)
 , p_source_55 => l_array_source_55(Idx)
 , p_source_56 => l_array_source_56(Idx)
 , p_source_57 => l_array_source_57(Idx)
 );
If(l_balance_type_code = 'A') THEN
  l_actual_gain_loss_ref := l_gain_or_loss_ref;
END IF;

--


--
AcctLineType_31 (
 p_application_id  => p_application_id
 ,p_event_id     => l_event_id
 ,p_calculate_acctd_flag => l_calculate_acctd_flag
 ,p_calculate_g_l_flag => l_calculate_g_l_flag
 ,p_actual_flag => l_actual_flag
 ,p_balance_type_code => l_balance_type_code
 ,p_gain_or_loss_ref=> l_gain_or_loss_ref
 
 , p_source_15 => l_array_source_15(Idx)
 , p_source_15_meaning => l_array_source_15_meaning(Idx)
 , p_source_18 => l_array_source_18(Idx)
 , p_source_18_meaning => l_array_source_18_meaning(Idx)
 , p_source_19 => l_array_source_19(Idx)
 , p_source_21 => l_array_source_21(Idx)
 , p_source_23 => l_array_source_23(Idx)
 , p_source_24 => g_array_event(l_event_id).array_value_num('source_24')
 , p_source_30 => l_array_source_30(Idx)
 , p_source_31 => l_array_source_31(Idx)
 , p_source_32 => l_array_source_32(Idx)
 , p_source_33 => g_array_event(l_event_id).array_value_char('source_33')
 , p_source_34 => l_array_source_34(Idx)
 , p_source_35 => l_array_source_35(Idx)
 , p_source_36 => l_array_source_36(Idx)
 , p_source_37 => l_array_source_37(Idx)
 , p_source_38 => l_array_source_38(Idx)
 , p_source_43 => l_array_source_43(Idx)
 , p_source_44 => l_array_source_44(Idx)
 , p_source_45 => l_array_source_45(Idx)
 , p_source_46 => l_array_source_46(Idx)
 , p_source_46_meaning => l_array_source_46_meaning(Idx)
 , p_source_49 => g_array_event(l_event_id).array_value_char('source_49')
 , p_source_50 => l_array_source_50(Idx)
 , p_source_51 => l_array_source_51(Idx)
 , p_source_52 => l_array_source_52(Idx)
 , p_source_53 => l_array_source_53(Idx)
 , p_source_54 => l_array_source_54(Idx)
 , p_source_55 => l_array_source_55(Idx)
 , p_source_56 => l_array_source_56(Idx)
 , p_source_57 => l_array_source_57(Idx)
 , p_source_58 => l_array_source_58(Idx)
 , p_source_59 => l_array_source_59(Idx)
 , p_source_59_meaning => l_array_source_59_meaning(Idx)
 , p_source_60 => l_array_source_60(Idx)
 , p_source_61 => l_array_source_61(Idx)
 , p_source_62 => l_array_source_62(Idx)
 , p_source_63 => l_array_source_63(Idx)
 , p_source_64 => l_array_source_64(Idx)
 , p_source_65 => l_array_source_65(Idx)
 , p_source_66 => l_array_source_66(Idx)
 );
If(l_balance_type_code = 'A') THEN
  l_actual_gain_loss_ref := l_gain_or_loss_ref;
END IF;

--


--
AcctLineType_32 (
 p_application_id  => p_application_id
 ,p_event_id     => l_event_id
 ,p_calculate_acctd_flag => l_calculate_acctd_flag
 ,p_calculate_g_l_flag => l_calculate_g_l_flag
 ,p_actual_flag => l_actual_flag
 ,p_balance_type_code => l_balance_type_code
 ,p_gain_or_loss_ref=> l_gain_or_loss_ref
 
 , p_source_15 => l_array_source_15(Idx)
 , p_source_15_meaning => l_array_source_15_meaning(Idx)
 , p_source_18 => l_array_source_18(Idx)
 , p_source_18_meaning => l_array_source_18_meaning(Idx)
 , p_source_19 => l_array_source_19(Idx)
 , p_source_21 => l_array_source_21(Idx)
 , p_source_23 => l_array_source_23(Idx)
 , p_source_24 => g_array_event(l_event_id).array_value_num('source_24')
 , p_source_30 => l_array_source_30(Idx)
 , p_source_31 => l_array_source_31(Idx)
 , p_source_32 => l_array_source_32(Idx)
 , p_source_33 => g_array_event(l_event_id).array_value_char('source_33')
 , p_source_34 => l_array_source_34(Idx)
 , p_source_35 => l_array_source_35(Idx)
 , p_source_36 => l_array_source_36(Idx)
 , p_source_37 => l_array_source_37(Idx)
 , p_source_38 => l_array_source_38(Idx)
 , p_source_43 => l_array_source_43(Idx)
 , p_source_44 => l_array_source_44(Idx)
 , p_source_45 => l_array_source_45(Idx)
 , p_source_46 => l_array_source_46(Idx)
 , p_source_46_meaning => l_array_source_46_meaning(Idx)
 , p_source_49 => g_array_event(l_event_id).array_value_char('source_49')
 , p_source_50 => l_array_source_50(Idx)
 , p_source_51 => l_array_source_51(Idx)
 , p_source_52 => l_array_source_52(Idx)
 , p_source_53 => l_array_source_53(Idx)
 , p_source_54 => l_array_source_54(Idx)
 , p_source_55 => l_array_source_55(Idx)
 , p_source_56 => l_array_source_56(Idx)
 , p_source_57 => l_array_source_57(Idx)
 , p_source_58 => l_array_source_58(Idx)
 , p_source_60 => l_array_source_60(Idx)
 , p_source_61 => l_array_source_61(Idx)
 , p_source_62 => l_array_source_62(Idx)
 , p_source_63 => l_array_source_63(Idx)
 , p_source_64 => l_array_source_64(Idx)
 , p_source_65 => l_array_source_65(Idx)
 , p_source_66 => l_array_source_66(Idx)
 );
If(l_balance_type_code = 'A') THEN
  l_actual_gain_loss_ref := l_gain_or_loss_ref;
END IF;

--


--
AcctLineType_35 (
 p_application_id  => p_application_id
 ,p_event_id     => l_event_id
 ,p_calculate_acctd_flag => l_calculate_acctd_flag
 ,p_calculate_g_l_flag => l_calculate_g_l_flag
 ,p_actual_flag => l_actual_flag
 ,p_balance_type_code => l_balance_type_code
 ,p_gain_or_loss_ref=> l_gain_or_loss_ref
 
 , p_source_1 => l_array_source_1(Idx)
 , p_source_11 => l_array_source_11(Idx)
 , p_source_15 => l_array_source_15(Idx)
 , p_source_15_meaning => l_array_source_15_meaning(Idx)
 , p_source_17 => g_array_event(l_event_id).array_value_char('source_17')
 , p_source_17_meaning => g_array_event(l_event_id).array_value_char('source_17_meaning')
 , p_source_19 => l_array_source_19(Idx)
 , p_source_21 => l_array_source_21(Idx)
 , p_source_23 => l_array_source_23(Idx)
 , p_source_24 => g_array_event(l_event_id).array_value_num('source_24')
 , p_source_25 => l_array_source_25(Idx)
 , p_source_26 => l_array_source_26(Idx)
 , p_source_27 => l_array_source_27(Idx)
 , p_source_28 => l_array_source_28(Idx)
 , p_source_29 => l_array_source_29(Idx)
 , p_source_30 => l_array_source_30(Idx)
 , p_source_31 => l_array_source_31(Idx)
 , p_source_32 => l_array_source_32(Idx)
 , p_source_33 => g_array_event(l_event_id).array_value_char('source_33')
 , p_source_34 => l_array_source_34(Idx)
 , p_source_35 => l_array_source_35(Idx)
 , p_source_36 => l_array_source_36(Idx)
 , p_source_37 => l_array_source_37(Idx)
 , p_source_38 => l_array_source_38(Idx)
 , p_source_39 => g_array_event(l_event_id).array_value_date('source_39')
 , p_source_40 => g_array_event(l_event_id).array_value_num('source_40')
 , p_source_41 => g_array_event(l_event_id).array_value_char('source_41')
 , p_source_43 => l_array_source_43(Idx)
 , p_source_44 => l_array_source_44(Idx)
 , p_source_45 => l_array_source_45(Idx)
 , p_source_46 => l_array_source_46(Idx)
 , p_source_46_meaning => l_array_source_46_meaning(Idx)
 , p_source_47 => g_array_event(l_event_id).array_value_num('source_47')
 , p_source_48 => g_array_event(l_event_id).array_value_num('source_48')
 , p_source_49 => g_array_event(l_event_id).array_value_char('source_49')
 , p_source_50 => l_array_source_50(Idx)
 , p_source_51 => l_array_source_51(Idx)
 , p_source_52 => l_array_source_52(Idx)
 , p_source_53 => l_array_source_53(Idx)
 , p_source_54 => l_array_source_54(Idx)
 , p_source_55 => l_array_source_55(Idx)
 , p_source_56 => l_array_source_56(Idx)
 , p_source_57 => l_array_source_57(Idx)
 , p_source_65 => l_array_source_65(Idx)
 , p_source_66 => l_array_source_66(Idx)
 );
If(l_balance_type_code = 'A') THEN
  l_actual_gain_loss_ref := l_gain_or_loss_ref;
END IF;

--


--
AcctLineType_39 (
 p_application_id  => p_application_id
 ,p_event_id     => l_event_id
 ,p_calculate_acctd_flag => l_calculate_acctd_flag
 ,p_calculate_g_l_flag => l_calculate_g_l_flag
 ,p_actual_flag => l_actual_flag
 ,p_balance_type_code => l_balance_type_code
 ,p_gain_or_loss_ref=> l_gain_or_loss_ref
 
 , p_source_1 => l_array_source_1(Idx)
 , p_source_11 => l_array_source_11(Idx)
 , p_source_15 => l_array_source_15(Idx)
 , p_source_15_meaning => l_array_source_15_meaning(Idx)
 , p_source_17 => g_array_event(l_event_id).array_value_char('source_17')
 , p_source_17_meaning => g_array_event(l_event_id).array_value_char('source_17_meaning')
 , p_source_18 => l_array_source_18(Idx)
 , p_source_18_meaning => l_array_source_18_meaning(Idx)
 , p_source_19 => l_array_source_19(Idx)
 , p_source_21 => l_array_source_21(Idx)
 , p_source_23 => l_array_source_23(Idx)
 , p_source_24 => g_array_event(l_event_id).array_value_num('source_24')
 , p_source_25 => l_array_source_25(Idx)
 , p_source_26 => l_array_source_26(Idx)
 , p_source_27 => l_array_source_27(Idx)
 , p_source_28 => l_array_source_28(Idx)
 , p_source_29 => l_array_source_29(Idx)
 , p_source_30 => l_array_source_30(Idx)
 , p_source_31 => l_array_source_31(Idx)
 , p_source_32 => l_array_source_32(Idx)
 , p_source_33 => g_array_event(l_event_id).array_value_char('source_33')
 , p_source_34 => l_array_source_34(Idx)
 , p_source_35 => l_array_source_35(Idx)
 , p_source_36 => l_array_source_36(Idx)
 , p_source_37 => l_array_source_37(Idx)
 , p_source_38 => l_array_source_38(Idx)
 , p_source_39 => g_array_event(l_event_id).array_value_date('source_39')
 , p_source_40 => g_array_event(l_event_id).array_value_num('source_40')
 , p_source_41 => g_array_event(l_event_id).array_value_char('source_41')
 , p_source_43 => l_array_source_43(Idx)
 , p_source_44 => l_array_source_44(Idx)
 , p_source_45 => l_array_source_45(Idx)
 , p_source_46 => l_array_source_46(Idx)
 , p_source_46_meaning => l_array_source_46_meaning(Idx)
 , p_source_47 => g_array_event(l_event_id).array_value_num('source_47')
 , p_source_48 => g_array_event(l_event_id).array_value_num('source_48')
 , p_source_49 => g_array_event(l_event_id).array_value_char('source_49')
 , p_source_50 => l_array_source_50(Idx)
 , p_source_51 => l_array_source_51(Idx)
 , p_source_52 => l_array_source_52(Idx)
 , p_source_53 => l_array_source_53(Idx)
 , p_source_54 => l_array_source_54(Idx)
 , p_source_55 => l_array_source_55(Idx)
 , p_source_56 => l_array_source_56(Idx)
 , p_source_57 => l_array_source_57(Idx)
 , p_source_65 => l_array_source_65(Idx)
 , p_source_66 => l_array_source_66(Idx)
 , p_source_68 => g_array_event(l_event_id).array_value_char('source_68')
 , p_source_68_meaning => g_array_event(l_event_id).array_value_char('source_68_meaning')
 );
If(l_balance_type_code = 'A') THEN
  l_actual_gain_loss_ref := l_gain_or_loss_ref;
END IF;

--


--
AcctLineType_43 (
 p_application_id  => p_application_id
 ,p_event_id     => l_event_id
 ,p_calculate_acctd_flag => l_calculate_acctd_flag
 ,p_calculate_g_l_flag => l_calculate_g_l_flag
 ,p_actual_flag => l_actual_flag
 ,p_balance_type_code => l_balance_type_code
 ,p_gain_or_loss_ref=> l_gain_or_loss_ref
 
 , p_source_1 => l_array_source_1(Idx)
 , p_source_11 => l_array_source_11(Idx)
 , p_source_15 => l_array_source_15(Idx)
 , p_source_15_meaning => l_array_source_15_meaning(Idx)
 , p_source_17 => g_array_event(l_event_id).array_value_char('source_17')
 , p_source_17_meaning => g_array_event(l_event_id).array_value_char('source_17_meaning')
 , p_source_19 => l_array_source_19(Idx)
 , p_source_21 => l_array_source_21(Idx)
 , p_source_23 => l_array_source_23(Idx)
 , p_source_24 => g_array_event(l_event_id).array_value_num('source_24')
 , p_source_25 => l_array_source_25(Idx)
 , p_source_26 => l_array_source_26(Idx)
 , p_source_27 => l_array_source_27(Idx)
 , p_source_28 => l_array_source_28(Idx)
 , p_source_29 => l_array_source_29(Idx)
 , p_source_30 => l_array_source_30(Idx)
 , p_source_31 => l_array_source_31(Idx)
 , p_source_32 => l_array_source_32(Idx)
 , p_source_33 => g_array_event(l_event_id).array_value_char('source_33')
 , p_source_34 => l_array_source_34(Idx)
 , p_source_35 => l_array_source_35(Idx)
 , p_source_36 => l_array_source_36(Idx)
 , p_source_37 => l_array_source_37(Idx)
 , p_source_38 => l_array_source_38(Idx)
 , p_source_39 => g_array_event(l_event_id).array_value_date('source_39')
 , p_source_40 => g_array_event(l_event_id).array_value_num('source_40')
 , p_source_41 => g_array_event(l_event_id).array_value_char('source_41')
 , p_source_43 => l_array_source_43(Idx)
 , p_source_44 => l_array_source_44(Idx)
 , p_source_45 => l_array_source_45(Idx)
 , p_source_46 => l_array_source_46(Idx)
 , p_source_46_meaning => l_array_source_46_meaning(Idx)
 , p_source_47 => g_array_event(l_event_id).array_value_num('source_47')
 , p_source_48 => g_array_event(l_event_id).array_value_num('source_48')
 , p_source_49 => g_array_event(l_event_id).array_value_char('source_49')
 , p_source_50 => l_array_source_50(Idx)
 , p_source_51 => l_array_source_51(Idx)
 , p_source_52 => l_array_source_52(Idx)
 , p_source_53 => l_array_source_53(Idx)
 , p_source_54 => l_array_source_54(Idx)
 , p_source_55 => l_array_source_55(Idx)
 , p_source_56 => l_array_source_56(Idx)
 , p_source_57 => l_array_source_57(Idx)
 , p_source_65 => l_array_source_65(Idx)
 , p_source_66 => l_array_source_66(Idx)
 );
If(l_balance_type_code = 'A') THEN
  l_actual_gain_loss_ref := l_gain_or_loss_ref;
END IF;

--


--
AcctLineType_47 (
 p_application_id  => p_application_id
 ,p_event_id     => l_event_id
 ,p_calculate_acctd_flag => l_calculate_acctd_flag
 ,p_calculate_g_l_flag => l_calculate_g_l_flag
 ,p_actual_flag => l_actual_flag
 ,p_balance_type_code => l_balance_type_code
 ,p_gain_or_loss_ref=> l_gain_or_loss_ref
 
 , p_source_1 => l_array_source_1(Idx)
 , p_source_11 => l_array_source_11(Idx)
 , p_source_15 => l_array_source_15(Idx)
 , p_source_15_meaning => l_array_source_15_meaning(Idx)
 , p_source_17 => g_array_event(l_event_id).array_value_char('source_17')
 , p_source_17_meaning => g_array_event(l_event_id).array_value_char('source_17_meaning')
 , p_source_18 => l_array_source_18(Idx)
 , p_source_18_meaning => l_array_source_18_meaning(Idx)
 , p_source_19 => l_array_source_19(Idx)
 , p_source_21 => l_array_source_21(Idx)
 , p_source_23 => l_array_source_23(Idx)
 , p_source_24 => g_array_event(l_event_id).array_value_num('source_24')
 , p_source_25 => l_array_source_25(Idx)
 , p_source_26 => l_array_source_26(Idx)
 , p_source_27 => l_array_source_27(Idx)
 , p_source_28 => l_array_source_28(Idx)
 , p_source_29 => l_array_source_29(Idx)
 , p_source_30 => l_array_source_30(Idx)
 , p_source_31 => l_array_source_31(Idx)
 , p_source_32 => l_array_source_32(Idx)
 , p_source_33 => g_array_event(l_event_id).array_value_char('source_33')
 , p_source_34 => l_array_source_34(Idx)
 , p_source_35 => l_array_source_35(Idx)
 , p_source_36 => l_array_source_36(Idx)
 , p_source_37 => l_array_source_37(Idx)
 , p_source_38 => l_array_source_38(Idx)
 , p_source_39 => g_array_event(l_event_id).array_value_date('source_39')
 , p_source_40 => g_array_event(l_event_id).array_value_num('source_40')
 , p_source_41 => g_array_event(l_event_id).array_value_char('source_41')
 , p_source_43 => l_array_source_43(Idx)
 , p_source_44 => l_array_source_44(Idx)
 , p_source_45 => l_array_source_45(Idx)
 , p_source_46 => l_array_source_46(Idx)
 , p_source_46_meaning => l_array_source_46_meaning(Idx)
 , p_source_47 => g_array_event(l_event_id).array_value_num('source_47')
 , p_source_48 => g_array_event(l_event_id).array_value_num('source_48')
 , p_source_49 => g_array_event(l_event_id).array_value_char('source_49')
 , p_source_50 => l_array_source_50(Idx)
 , p_source_51 => l_array_source_51(Idx)
 , p_source_52 => l_array_source_52(Idx)
 , p_source_53 => l_array_source_53(Idx)
 , p_source_54 => l_array_source_54(Idx)
 , p_source_55 => l_array_source_55(Idx)
 , p_source_56 => l_array_source_56(Idx)
 , p_source_57 => l_array_source_57(Idx)
 , p_source_59 => l_array_source_59(Idx)
 , p_source_59_meaning => l_array_source_59_meaning(Idx)
 , p_source_65 => l_array_source_65(Idx)
 , p_source_66 => l_array_source_66(Idx)
 );
If(l_balance_type_code = 'A') THEN
  l_actual_gain_loss_ref := l_gain_or_loss_ref;
END IF;

--


--
AcctLineType_53 (
 p_application_id  => p_application_id
 ,p_event_id     => l_event_id
 ,p_calculate_acctd_flag => l_calculate_acctd_flag
 ,p_calculate_g_l_flag => l_calculate_g_l_flag
 ,p_actual_flag => l_actual_flag
 ,p_balance_type_code => l_balance_type_code
 ,p_gain_or_loss_ref=> l_gain_or_loss_ref
 
 , p_source_1 => l_array_source_1(Idx)
 , p_source_11 => l_array_source_11(Idx)
 , p_source_15 => l_array_source_15(Idx)
 , p_source_15_meaning => l_array_source_15_meaning(Idx)
 , p_source_17 => g_array_event(l_event_id).array_value_char('source_17')
 , p_source_17_meaning => g_array_event(l_event_id).array_value_char('source_17_meaning')
 , p_source_18 => l_array_source_18(Idx)
 , p_source_18_meaning => l_array_source_18_meaning(Idx)
 , p_source_19 => l_array_source_19(Idx)
 , p_source_21 => l_array_source_21(Idx)
 , p_source_23 => l_array_source_23(Idx)
 , p_source_24 => g_array_event(l_event_id).array_value_num('source_24')
 , p_source_25 => l_array_source_25(Idx)
 , p_source_26 => l_array_source_26(Idx)
 , p_source_27 => l_array_source_27(Idx)
 , p_source_28 => l_array_source_28(Idx)
 , p_source_29 => l_array_source_29(Idx)
 , p_source_30 => l_array_source_30(Idx)
 , p_source_31 => l_array_source_31(Idx)
 , p_source_32 => l_array_source_32(Idx)
 , p_source_33 => g_array_event(l_event_id).array_value_char('source_33')
 , p_source_34 => l_array_source_34(Idx)
 , p_source_35 => l_array_source_35(Idx)
 , p_source_36 => l_array_source_36(Idx)
 , p_source_37 => l_array_source_37(Idx)
 , p_source_38 => l_array_source_38(Idx)
 , p_source_39 => g_array_event(l_event_id).array_value_date('source_39')
 , p_source_40 => g_array_event(l_event_id).array_value_num('source_40')
 , p_source_41 => g_array_event(l_event_id).array_value_char('source_41')
 , p_source_43 => l_array_source_43(Idx)
 , p_source_44 => l_array_source_44(Idx)
 , p_source_45 => l_array_source_45(Idx)
 , p_source_46 => l_array_source_46(Idx)
 , p_source_46_meaning => l_array_source_46_meaning(Idx)
 , p_source_47 => g_array_event(l_event_id).array_value_num('source_47')
 , p_source_48 => g_array_event(l_event_id).array_value_num('source_48')
 , p_source_49 => g_array_event(l_event_id).array_value_char('source_49')
 , p_source_50 => l_array_source_50(Idx)
 , p_source_51 => l_array_source_51(Idx)
 , p_source_52 => l_array_source_52(Idx)
 , p_source_53 => l_array_source_53(Idx)
 , p_source_54 => l_array_source_54(Idx)
 , p_source_55 => l_array_source_55(Idx)
 , p_source_56 => l_array_source_56(Idx)
 , p_source_57 => l_array_source_57(Idx)
 , p_source_81 => l_array_source_81(Idx)
 , p_source_82 => l_array_source_82(Idx)
 );
If(l_balance_type_code = 'A') THEN
  l_actual_gain_loss_ref := l_gain_or_loss_ref;
END IF;

--


--
AcctLineType_59 (
 p_application_id  => p_application_id
 ,p_event_id     => l_event_id
 ,p_calculate_acctd_flag => l_calculate_acctd_flag
 ,p_calculate_g_l_flag => l_calculate_g_l_flag
 ,p_actual_flag => l_actual_flag
 ,p_balance_type_code => l_balance_type_code
 ,p_gain_or_loss_ref=> l_gain_or_loss_ref
 
 , p_source_1 => l_array_source_1(Idx)
 , p_source_11 => l_array_source_11(Idx)
 , p_source_15 => l_array_source_15(Idx)
 , p_source_15_meaning => l_array_source_15_meaning(Idx)
 , p_source_17 => g_array_event(l_event_id).array_value_char('source_17')
 , p_source_17_meaning => g_array_event(l_event_id).array_value_char('source_17_meaning')
 , p_source_19 => l_array_source_19(Idx)
 , p_source_21 => l_array_source_21(Idx)
 , p_source_23 => l_array_source_23(Idx)
 , p_source_24 => g_array_event(l_event_id).array_value_num('source_24')
 , p_source_25 => l_array_source_25(Idx)
 , p_source_26 => l_array_source_26(Idx)
 , p_source_27 => l_array_source_27(Idx)
 , p_source_28 => l_array_source_28(Idx)
 , p_source_29 => l_array_source_29(Idx)
 , p_source_30 => l_array_source_30(Idx)
 , p_source_31 => l_array_source_31(Idx)
 , p_source_32 => l_array_source_32(Idx)
 , p_source_33 => g_array_event(l_event_id).array_value_char('source_33')
 , p_source_34 => l_array_source_34(Idx)
 , p_source_35 => l_array_source_35(Idx)
 , p_source_36 => l_array_source_36(Idx)
 , p_source_37 => l_array_source_37(Idx)
 , p_source_38 => l_array_source_38(Idx)
 , p_source_39 => g_array_event(l_event_id).array_value_date('source_39')
 , p_source_40 => g_array_event(l_event_id).array_value_num('source_40')
 , p_source_41 => g_array_event(l_event_id).array_value_char('source_41')
 , p_source_43 => l_array_source_43(Idx)
 , p_source_44 => l_array_source_44(Idx)
 , p_source_45 => l_array_source_45(Idx)
 , p_source_46 => l_array_source_46(Idx)
 , p_source_46_meaning => l_array_source_46_meaning(Idx)
 , p_source_47 => g_array_event(l_event_id).array_value_num('source_47')
 , p_source_48 => g_array_event(l_event_id).array_value_num('source_48')
 , p_source_49 => g_array_event(l_event_id).array_value_char('source_49')
 , p_source_50 => l_array_source_50(Idx)
 , p_source_51 => l_array_source_51(Idx)
 , p_source_52 => l_array_source_52(Idx)
 , p_source_53 => l_array_source_53(Idx)
 , p_source_54 => l_array_source_54(Idx)
 , p_source_55 => l_array_source_55(Idx)
 , p_source_56 => l_array_source_56(Idx)
 , p_source_57 => l_array_source_57(Idx)
 , p_source_59 => l_array_source_59(Idx)
 , p_source_59_meaning => l_array_source_59_meaning(Idx)
 , p_source_65 => l_array_source_65(Idx)
 , p_source_66 => l_array_source_66(Idx)
 );
If(l_balance_type_code = 'A') THEN
  l_actual_gain_loss_ref := l_gain_or_loss_ref;
END IF;

--


--
AcctLineType_62 (
 p_application_id  => p_application_id
 ,p_event_id     => l_event_id
 ,p_calculate_acctd_flag => l_calculate_acctd_flag
 ,p_calculate_g_l_flag => l_calculate_g_l_flag
 ,p_actual_flag => l_actual_flag
 ,p_balance_type_code => l_balance_type_code
 ,p_gain_or_loss_ref=> l_gain_or_loss_ref
 
 , p_source_1 => l_array_source_1(Idx)
 , p_source_13 => l_array_source_13(Idx)
 , p_source_15 => l_array_source_15(Idx)
 , p_source_15_meaning => l_array_source_15_meaning(Idx)
 , p_source_17 => g_array_event(l_event_id).array_value_char('source_17')
 , p_source_17_meaning => g_array_event(l_event_id).array_value_char('source_17_meaning')
 , p_source_19 => l_array_source_19(Idx)
 , p_source_21 => l_array_source_21(Idx)
 , p_source_23 => l_array_source_23(Idx)
 , p_source_24 => g_array_event(l_event_id).array_value_num('source_24')
 , p_source_25 => l_array_source_25(Idx)
 , p_source_26 => l_array_source_26(Idx)
 , p_source_27 => l_array_source_27(Idx)
 , p_source_28 => l_array_source_28(Idx)
 , p_source_29 => l_array_source_29(Idx)
 , p_source_30 => l_array_source_30(Idx)
 , p_source_31 => l_array_source_31(Idx)
 , p_source_32 => l_array_source_32(Idx)
 , p_source_33 => g_array_event(l_event_id).array_value_char('source_33')
 , p_source_34 => l_array_source_34(Idx)
 , p_source_35 => l_array_source_35(Idx)
 , p_source_36 => l_array_source_36(Idx)
 , p_source_37 => l_array_source_37(Idx)
 , p_source_38 => l_array_source_38(Idx)
 , p_source_39 => g_array_event(l_event_id).array_value_date('source_39')
 , p_source_40 => g_array_event(l_event_id).array_value_num('source_40')
 , p_source_41 => g_array_event(l_event_id).array_value_char('source_41')
 , p_source_43 => l_array_source_43(Idx)
 , p_source_44 => l_array_source_44(Idx)
 , p_source_45 => l_array_source_45(Idx)
 , p_source_46 => l_array_source_46(Idx)
 , p_source_46_meaning => l_array_source_46_meaning(Idx)
 , p_source_47 => g_array_event(l_event_id).array_value_num('source_47')
 , p_source_48 => g_array_event(l_event_id).array_value_num('source_48')
 , p_source_49 => g_array_event(l_event_id).array_value_char('source_49')
 , p_source_50 => l_array_source_50(Idx)
 , p_source_51 => l_array_source_51(Idx)
 , p_source_52 => l_array_source_52(Idx)
 , p_source_53 => l_array_source_53(Idx)
 , p_source_54 => l_array_source_54(Idx)
 , p_source_55 => l_array_source_55(Idx)
 , p_source_56 => l_array_source_56(Idx)
 , p_source_57 => l_array_source_57(Idx)
 , p_source_59 => l_array_source_59(Idx)
 , p_source_59_meaning => l_array_source_59_meaning(Idx)
 , p_source_65 => l_array_source_65(Idx)
 , p_source_66 => l_array_source_66(Idx)
 );
If(l_balance_type_code = 'A') THEN
  l_actual_gain_loss_ref := l_gain_or_loss_ref;
END IF;

--


--
AcctLineType_65 (
 p_application_id  => p_application_id
 ,p_event_id     => l_event_id
 ,p_calculate_acctd_flag => l_calculate_acctd_flag
 ,p_calculate_g_l_flag => l_calculate_g_l_flag
 ,p_actual_flag => l_actual_flag
 ,p_balance_type_code => l_balance_type_code
 ,p_gain_or_loss_ref=> l_gain_or_loss_ref
 
 , p_source_1 => l_array_source_1(Idx)
 , p_source_6 => g_array_event(l_event_id).array_value_num('source_6')
 , p_source_7 => g_array_event(l_event_id).array_value_char('source_7')
 , p_source_7_meaning => g_array_event(l_event_id).array_value_char('source_7_meaning')
 , p_source_8 => l_array_source_8(Idx)
 , p_source_9 => l_array_source_9(Idx)
 , p_source_9_meaning => l_array_source_9_meaning(Idx)
 , p_source_10 => g_array_event(l_event_id).array_value_num('source_10')
 , p_source_11 => l_array_source_11(Idx)
 , p_source_12 => g_array_event(l_event_id).array_value_char('source_12')
 , p_source_12_meaning => g_array_event(l_event_id).array_value_char('source_12_meaning')
 , p_source_15 => l_array_source_15(Idx)
 , p_source_15_meaning => l_array_source_15_meaning(Idx)
 , p_source_17 => g_array_event(l_event_id).array_value_char('source_17')
 , p_source_17_meaning => g_array_event(l_event_id).array_value_char('source_17_meaning')
 , p_source_19 => l_array_source_19(Idx)
 , p_source_21 => l_array_source_21(Idx)
 , p_source_23 => l_array_source_23(Idx)
 , p_source_24 => g_array_event(l_event_id).array_value_num('source_24')
 , p_source_25 => l_array_source_25(Idx)
 , p_source_26 => l_array_source_26(Idx)
 , p_source_27 => l_array_source_27(Idx)
 , p_source_28 => l_array_source_28(Idx)
 , p_source_29 => l_array_source_29(Idx)
 , p_source_30 => l_array_source_30(Idx)
 , p_source_31 => l_array_source_31(Idx)
 , p_source_32 => l_array_source_32(Idx)
 , p_source_33 => g_array_event(l_event_id).array_value_char('source_33')
 , p_source_34 => l_array_source_34(Idx)
 , p_source_35 => l_array_source_35(Idx)
 , p_source_36 => l_array_source_36(Idx)
 , p_source_37 => l_array_source_37(Idx)
 , p_source_38 => l_array_source_38(Idx)
 , p_source_39 => g_array_event(l_event_id).array_value_date('source_39')
 , p_source_40 => g_array_event(l_event_id).array_value_num('source_40')
 , p_source_41 => g_array_event(l_event_id).array_value_char('source_41')
 , p_source_43 => l_array_source_43(Idx)
 , p_source_44 => l_array_source_44(Idx)
 , p_source_45 => l_array_source_45(Idx)
 , p_source_46 => l_array_source_46(Idx)
 , p_source_46_meaning => l_array_source_46_meaning(Idx)
 , p_source_47 => g_array_event(l_event_id).array_value_num('source_47')
 , p_source_48 => g_array_event(l_event_id).array_value_num('source_48')
 , p_source_49 => g_array_event(l_event_id).array_value_char('source_49')
 , p_source_50 => l_array_source_50(Idx)
 , p_source_51 => l_array_source_51(Idx)
 , p_source_52 => l_array_source_52(Idx)
 , p_source_53 => l_array_source_53(Idx)
 , p_source_54 => l_array_source_54(Idx)
 , p_source_55 => l_array_source_55(Idx)
 , p_source_56 => l_array_source_56(Idx)
 , p_source_57 => l_array_source_57(Idx)
 , p_source_66 => l_array_source_66(Idx)
 );
If(l_balance_type_code = 'A') THEN
  l_actual_gain_loss_ref := l_gain_or_loss_ref;
END IF;

--


--
AcctLineType_68 (
 p_application_id  => p_application_id
 ,p_event_id     => l_event_id
 ,p_calculate_acctd_flag => l_calculate_acctd_flag
 ,p_calculate_g_l_flag => l_calculate_g_l_flag
 ,p_actual_flag => l_actual_flag
 ,p_balance_type_code => l_balance_type_code
 ,p_gain_or_loss_ref=> l_gain_or_loss_ref
 
 , p_source_1 => l_array_source_1(Idx)
 , p_source_11 => l_array_source_11(Idx)
 , p_source_15 => l_array_source_15(Idx)
 , p_source_15_meaning => l_array_source_15_meaning(Idx)
 , p_source_16 => l_array_source_16(Idx)
 , p_source_17 => g_array_event(l_event_id).array_value_char('source_17')
 , p_source_17_meaning => g_array_event(l_event_id).array_value_char('source_17_meaning')
 , p_source_18 => l_array_source_18(Idx)
 , p_source_18_meaning => l_array_source_18_meaning(Idx)
 , p_source_19 => l_array_source_19(Idx)
 , p_source_21 => l_array_source_21(Idx)
 , p_source_23 => l_array_source_23(Idx)
 , p_source_24 => g_array_event(l_event_id).array_value_num('source_24')
 , p_source_25 => l_array_source_25(Idx)
 , p_source_26 => l_array_source_26(Idx)
 , p_source_27 => l_array_source_27(Idx)
 , p_source_28 => l_array_source_28(Idx)
 , p_source_29 => l_array_source_29(Idx)
 , p_source_30 => l_array_source_30(Idx)
 , p_source_31 => l_array_source_31(Idx)
 , p_source_32 => l_array_source_32(Idx)
 , p_source_33 => g_array_event(l_event_id).array_value_char('source_33')
 , p_source_34 => l_array_source_34(Idx)
 , p_source_35 => l_array_source_35(Idx)
 , p_source_36 => l_array_source_36(Idx)
 , p_source_37 => l_array_source_37(Idx)
 , p_source_38 => l_array_source_38(Idx)
 , p_source_39 => g_array_event(l_event_id).array_value_date('source_39')
 , p_source_40 => g_array_event(l_event_id).array_value_num('source_40')
 , p_source_41 => g_array_event(l_event_id).array_value_char('source_41')
 , p_source_42 => l_array_source_42(Idx)
 , p_source_43 => l_array_source_43(Idx)
 , p_source_44 => l_array_source_44(Idx)
 , p_source_45 => l_array_source_45(Idx)
 , p_source_46 => l_array_source_46(Idx)
 , p_source_46_meaning => l_array_source_46_meaning(Idx)
 , p_source_47 => g_array_event(l_event_id).array_value_num('source_47')
 , p_source_48 => g_array_event(l_event_id).array_value_num('source_48')
 , p_source_49 => g_array_event(l_event_id).array_value_char('source_49')
 , p_source_50 => l_array_source_50(Idx)
 , p_source_51 => l_array_source_51(Idx)
 , p_source_52 => l_array_source_52(Idx)
 , p_source_53 => l_array_source_53(Idx)
 , p_source_54 => l_array_source_54(Idx)
 , p_source_55 => l_array_source_55(Idx)
 , p_source_56 => l_array_source_56(Idx)
 , p_source_57 => l_array_source_57(Idx)
 );
If(l_balance_type_code = 'A') THEN
  l_actual_gain_loss_ref := l_gain_or_loss_ref;
END IF;

--


--
AcctLineType_76 (
 p_application_id  => p_application_id
 ,p_event_id     => l_event_id
 ,p_calculate_acctd_flag => l_calculate_acctd_flag
 ,p_calculate_g_l_flag => l_calculate_g_l_flag
 ,p_actual_flag => l_actual_flag
 ,p_balance_type_code => l_balance_type_code
 ,p_gain_or_loss_ref=> l_gain_or_loss_ref
 
 , p_source_1 => l_array_source_1(Idx)
 , p_source_11 => l_array_source_11(Idx)
 , p_source_15 => l_array_source_15(Idx)
 , p_source_15_meaning => l_array_source_15_meaning(Idx)
 , p_source_17 => g_array_event(l_event_id).array_value_char('source_17')
 , p_source_17_meaning => g_array_event(l_event_id).array_value_char('source_17_meaning')
 , p_source_19 => l_array_source_19(Idx)
 , p_source_21 => l_array_source_21(Idx)
 , p_source_23 => l_array_source_23(Idx)
 , p_source_24 => g_array_event(l_event_id).array_value_num('source_24')
 , p_source_25 => l_array_source_25(Idx)
 , p_source_26 => l_array_source_26(Idx)
 , p_source_27 => l_array_source_27(Idx)
 , p_source_28 => l_array_source_28(Idx)
 , p_source_29 => l_array_source_29(Idx)
 , p_source_30 => l_array_source_30(Idx)
 , p_source_31 => l_array_source_31(Idx)
 , p_source_32 => l_array_source_32(Idx)
 , p_source_33 => g_array_event(l_event_id).array_value_char('source_33')
 , p_source_34 => l_array_source_34(Idx)
 , p_source_35 => l_array_source_35(Idx)
 , p_source_36 => l_array_source_36(Idx)
 , p_source_37 => l_array_source_37(Idx)
 , p_source_38 => l_array_source_38(Idx)
 , p_source_39 => g_array_event(l_event_id).array_value_date('source_39')
 , p_source_40 => g_array_event(l_event_id).array_value_num('source_40')
 , p_source_41 => g_array_event(l_event_id).array_value_char('source_41')
 , p_source_43 => l_array_source_43(Idx)
 , p_source_44 => l_array_source_44(Idx)
 , p_source_45 => l_array_source_45(Idx)
 , p_source_46 => l_array_source_46(Idx)
 , p_source_46_meaning => l_array_source_46_meaning(Idx)
 , p_source_47 => g_array_event(l_event_id).array_value_num('source_47')
 , p_source_48 => g_array_event(l_event_id).array_value_num('source_48')
 , p_source_49 => g_array_event(l_event_id).array_value_char('source_49')
 , p_source_50 => l_array_source_50(Idx)
 , p_source_51 => l_array_source_51(Idx)
 , p_source_52 => l_array_source_52(Idx)
 , p_source_53 => l_array_source_53(Idx)
 , p_source_54 => l_array_source_54(Idx)
 , p_source_55 => l_array_source_55(Idx)
 , p_source_56 => l_array_source_56(Idx)
 , p_source_57 => l_array_source_57(Idx)
 , p_source_65 => l_array_source_65(Idx)
 , p_source_66 => l_array_source_66(Idx)
 );
If(l_balance_type_code = 'A') THEN
  l_actual_gain_loss_ref := l_gain_or_loss_ref;
END IF;

--


--
AcctLineType_79 (
 p_application_id  => p_application_id
 ,p_event_id     => l_event_id
 ,p_calculate_acctd_flag => l_calculate_acctd_flag
 ,p_calculate_g_l_flag => l_calculate_g_l_flag
 ,p_actual_flag => l_actual_flag
 ,p_balance_type_code => l_balance_type_code
 ,p_gain_or_loss_ref=> l_gain_or_loss_ref
 
 , p_source_1 => l_array_source_1(Idx)
 , p_source_11 => l_array_source_11(Idx)
 , p_source_15 => l_array_source_15(Idx)
 , p_source_15_meaning => l_array_source_15_meaning(Idx)
 , p_source_17 => g_array_event(l_event_id).array_value_char('source_17')
 , p_source_17_meaning => g_array_event(l_event_id).array_value_char('source_17_meaning')
 , p_source_18 => l_array_source_18(Idx)
 , p_source_18_meaning => l_array_source_18_meaning(Idx)
 , p_source_19 => l_array_source_19(Idx)
 , p_source_21 => l_array_source_21(Idx)
 , p_source_23 => l_array_source_23(Idx)
 , p_source_24 => g_array_event(l_event_id).array_value_num('source_24')
 , p_source_25 => l_array_source_25(Idx)
 , p_source_26 => l_array_source_26(Idx)
 , p_source_27 => l_array_source_27(Idx)
 , p_source_28 => l_array_source_28(Idx)
 , p_source_29 => l_array_source_29(Idx)
 , p_source_30 => l_array_source_30(Idx)
 , p_source_31 => l_array_source_31(Idx)
 , p_source_32 => l_array_source_32(Idx)
 , p_source_33 => g_array_event(l_event_id).array_value_char('source_33')
 , p_source_34 => l_array_source_34(Idx)
 , p_source_35 => l_array_source_35(Idx)
 , p_source_36 => l_array_source_36(Idx)
 , p_source_37 => l_array_source_37(Idx)
 , p_source_38 => l_array_source_38(Idx)
 , p_source_39 => g_array_event(l_event_id).array_value_date('source_39')
 , p_source_40 => g_array_event(l_event_id).array_value_num('source_40')
 , p_source_41 => g_array_event(l_event_id).array_value_char('source_41')
 , p_source_43 => l_array_source_43(Idx)
 , p_source_44 => l_array_source_44(Idx)
 , p_source_45 => l_array_source_45(Idx)
 , p_source_46 => l_array_source_46(Idx)
 , p_source_46_meaning => l_array_source_46_meaning(Idx)
 , p_source_47 => g_array_event(l_event_id).array_value_num('source_47')
 , p_source_48 => g_array_event(l_event_id).array_value_num('source_48')
 , p_source_49 => g_array_event(l_event_id).array_value_char('source_49')
 , p_source_50 => l_array_source_50(Idx)
 , p_source_51 => l_array_source_51(Idx)
 , p_source_52 => l_array_source_52(Idx)
 , p_source_53 => l_array_source_53(Idx)
 , p_source_54 => l_array_source_54(Idx)
 , p_source_55 => l_array_source_55(Idx)
 , p_source_56 => l_array_source_56(Idx)
 , p_source_57 => l_array_source_57(Idx)
 , p_source_81 => l_array_source_81(Idx)
 , p_source_82 => l_array_source_82(Idx)
 );
If(l_balance_type_code = 'A') THEN
  l_actual_gain_loss_ref := l_gain_or_loss_ref;
END IF;

--


--
AcctLineType_83 (
 p_application_id  => p_application_id
 ,p_event_id     => l_event_id
 ,p_calculate_acctd_flag => l_calculate_acctd_flag
 ,p_calculate_g_l_flag => l_calculate_g_l_flag
 ,p_actual_flag => l_actual_flag
 ,p_balance_type_code => l_balance_type_code
 ,p_gain_or_loss_ref=> l_gain_or_loss_ref
 
 , p_source_1 => l_array_source_1(Idx)
 , p_source_11 => l_array_source_11(Idx)
 , p_source_15 => l_array_source_15(Idx)
 , p_source_15_meaning => l_array_source_15_meaning(Idx)
 , p_source_17 => g_array_event(l_event_id).array_value_char('source_17')
 , p_source_17_meaning => g_array_event(l_event_id).array_value_char('source_17_meaning')
 , p_source_19 => l_array_source_19(Idx)
 , p_source_21 => l_array_source_21(Idx)
 , p_source_23 => l_array_source_23(Idx)
 , p_source_24 => g_array_event(l_event_id).array_value_num('source_24')
 , p_source_25 => l_array_source_25(Idx)
 , p_source_26 => l_array_source_26(Idx)
 , p_source_27 => l_array_source_27(Idx)
 , p_source_28 => l_array_source_28(Idx)
 , p_source_29 => l_array_source_29(Idx)
 , p_source_30 => l_array_source_30(Idx)
 , p_source_31 => l_array_source_31(Idx)
 , p_source_32 => l_array_source_32(Idx)
 , p_source_33 => g_array_event(l_event_id).array_value_char('source_33')
 , p_source_34 => l_array_source_34(Idx)
 , p_source_35 => l_array_source_35(Idx)
 , p_source_36 => l_array_source_36(Idx)
 , p_source_37 => l_array_source_37(Idx)
 , p_source_38 => l_array_source_38(Idx)
 , p_source_39 => g_array_event(l_event_id).array_value_date('source_39')
 , p_source_40 => g_array_event(l_event_id).array_value_num('source_40')
 , p_source_41 => g_array_event(l_event_id).array_value_char('source_41')
 , p_source_43 => l_array_source_43(Idx)
 , p_source_44 => l_array_source_44(Idx)
 , p_source_45 => l_array_source_45(Idx)
 , p_source_46 => l_array_source_46(Idx)
 , p_source_46_meaning => l_array_source_46_meaning(Idx)
 , p_source_47 => g_array_event(l_event_id).array_value_num('source_47')
 , p_source_48 => g_array_event(l_event_id).array_value_num('source_48')
 , p_source_49 => g_array_event(l_event_id).array_value_char('source_49')
 , p_source_50 => l_array_source_50(Idx)
 , p_source_51 => l_array_source_51(Idx)
 , p_source_52 => l_array_source_52(Idx)
 , p_source_53 => l_array_source_53(Idx)
 , p_source_54 => l_array_source_54(Idx)
 , p_source_55 => l_array_source_55(Idx)
 , p_source_56 => l_array_source_56(Idx)
 , p_source_57 => l_array_source_57(Idx)
 , p_source_66 => l_array_source_66(Idx)
 );
If(l_balance_type_code = 'A') THEN
  l_actual_gain_loss_ref := l_gain_or_loss_ref;
END IF;

--

      -- only execute it if calculate g/l flag is yes, and primary or secondary ledger
      -- or secondary ledger that has different currency with primary
      -- or alc that is calculated by sla
      IF (((l_calculate_g_l_flag = 'Y' AND XLA_AE_JOURNAL_ENTRY_PKG.g_cache_ledgers_info.ledger_category_code <> 'ALC') or
            (XLA_AE_JOURNAL_ENTRY_PKG.g_cache_ledgers_info.ledger_category_code in ('ALC', 'SECONDARY') AND XLA_AE_JOURNAL_ENTRY_PKG.g_cache_ledgers_info.calculate_amts_flag='Y'))

--      IF((l_calculate_g_l_flag='Y' or XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id <>
--                    XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.ledger_id)
          AND (l_actual_flag = 'A')) THEN
        XLA_AE_LINES_PKG.CreateGainOrLossLines(
          p_event_id         => xla_ae_journal_entry_pkg.g_cache_event.event_id
         ,p_application_id   => p_application_id
         ,p_amb_context_code => 'DEFAULT'
         ,p_entity_code      => xla_ae_journal_entry_pkg.g_cache_event.entity_code
         ,p_event_class_code => C_EVENT_CLASS_CODE
         ,p_event_type_code  => C_EVENT_TYPE_CODE
         
         ,p_gain_ccid        => -1
         ,p_loss_ccid        => -1

         ,p_actual_flag      => l_actual_flag
         ,p_enc_flag         => null
         ,p_actual_g_l_ref   => l_actual_gain_loss_ref
         ,p_enc_g_l_ref      => null
         );
      END IF;
   END IF;
END IF;

   ELSE
      --
      -- Bug 4872078 - Do nothing if the event is meant for transaction reversal
      --
      IF (C_LEVEL_STATEMENT >= g_log_level) THEN
         trace
            (p_msg      => 'Trancaction revesal option is Y'
            ,p_level    => C_LEVEL_STATEMENT
            ,p_module   => l_log_module);
      END IF;
   END IF;

END LOOP;
l_result := XLA_AE_LINES_PKG.InsertLines ;
end loop;
close line_cur;


--
-- insert headers into xla_ae_headers_gt table
--
l_result := XLA_AE_HEADER_PKG.InsertHeaders ;

-- insert into errors table here.

END LOOP;

--
-- 4865292
--
-- Compare g_hdr_extract_count with event count in
-- CreateHeadersAndLines.
--
g_hdr_extract_count := g_hdr_extract_count + header_cur%ROWCOUNT;

IF (C_LEVEL_STATEMENT >= g_log_level) THEN
   trace (p_msg     => '# rows extracted from header extract objects '
                    || ' (running total): '
                    || g_hdr_extract_count
         ,p_level   => C_LEVEL_STATEMENT
         ,p_module  => l_log_module);
END IF;

CLOSE header_cur;
--

--
IF (C_LEVEL_PROCEDURE >= g_log_level) THEN
   trace
      (p_msg      => 'END of EventClass_105'
      ,p_level    => C_LEVEL_PROCEDURE
      ,p_module   => l_log_module);
END IF;
--
RETURN l_result;
EXCEPTION
WHEN xla_exceptions_pkg.application_exception THEN
   
IF header_cur%ISOPEN THEN CLOSE header_cur; END IF;

   
IF line_cur%ISOPEN   THEN CLOSE line_cur;   END IF;

   RAISE;

WHEN NO_DATA_FOUND THEN

IF header_cur%ISOPEN THEN CLOSE header_cur; END IF;
IF line_cur%ISOPEN   THEN CLOSE line_cur;   END IF;

FOR header_record IN header_cur
LOOP
    l_array_header_events(header_record.event_id) := header_record.event_id;
END LOOP;

l_first_event_id := l_array_header_events(l_array_header_events.FIRST);
l_last_event_id := l_array_header_events(l_array_header_events.LAST);

fnd_file.put_line(fnd_file.LOG, '                    ');
fnd_file.put_line(fnd_file.LOG, '***************************************************************************');
fnd_file.put_line(fnd_file.LOG, 'EVENT CLASS CODE = ' || C_EVENT_CLASS_CODE );
fnd_file.put_line(fnd_file.LOG, 'The following events are present in the line extract but MISSING in the header extract: ');

FOR line_record IN line_cur(l_first_event_id, l_last_event_id)
LOOP
	IF (NOT l_array_header_events.EXISTS(line_record.event_id))  AND (NOT l_array_duplicate_checker.EXISTS(line_record.event_id)) THEN
	fnd_file.put_line(fnd_file.log, 'Event_id = ' || line_record.event_id);
        l_array_duplicate_checker(line_record.event_id) := line_record.event_id;
	END IF;
END LOOP;

fnd_file.put_line(fnd_file.LOG, '***************************************************************************');
fnd_file.put_line(fnd_file.LOG, '                    ');


xla_exceptions_pkg.raise_message
      (p_location => 'XLA_00200_AAD_S_000010_BC_PKG.EventClass_105');


WHEN OTHERS THEN
   xla_exceptions_pkg.raise_message
      (p_location => 'XLA_00200_AAD_S_000010_BC_PKG.EventClass_105');
END EventClass_105;
--

---------------------------------------
--
-- PRIVATE PROCEDURE
--         insert_sources_106
--
----------------------------------------
--
PROCEDURE insert_sources_106(
                                p_target_ledger_id       IN NUMBER
                              , p_language               IN VARCHAR2
                              , p_sla_ledger_id          IN NUMBER
                              , p_pad_start_date         IN DATE
                              , p_pad_end_date           IN DATE
                         )
IS

C_EVENT_TYPE_CODE    CONSTANT  VARCHAR2(30)  := 'INVOICE_BURDEN_ALL';
C_EVENT_CLASS_CODE   CONSTANT  VARCHAR2(30) := 'INVOICE_BURDEN';
p_apps_owner                   VARCHAR2(30);
l_log_module                   VARCHAR2(240);
BEGIN
IF g_log_enabled THEN
      l_log_module := C_DEFAULT_MODULE||'.insert_sources_106';
END IF;
IF (C_LEVEL_PROCEDURE >= g_log_level) THEN

      trace
         (p_msg      => 'BEGIN of insert_sources_106'
         ,p_level    => C_LEVEL_PROCEDURE
         ,p_module   => l_log_module);

END IF;

-- select APPS owner
SELECT oracle_username
  INTO p_apps_owner
  FROM fnd_oracle_userid
 WHERE read_only_flag = 'U'
;

IF (C_LEVEL_STATEMENT >= g_log_level) THEN
      trace
         (p_msg      => 'p_target_ledger_id = '||p_target_ledger_id||
                        ' - p_language = '||p_language||
                        ' - p_sla_ledger_id  = '||p_sla_ledger_id ||
                        ' - p_pad_start_date = '||TO_CHAR(p_pad_start_date)||
                        ' - p_pad_end_date = '||TO_CHAR(p_pad_end_date)||
                        ' - p_apps_owner = '||TO_CHAR(p_apps_owner)
         ,p_level    => C_LEVEL_STATEMENT
         ,p_module   => l_log_module);
END IF;

 


--
INSERT INTO xla_diag_sources  --line2
(
        event_id
      , ledger_id
      , sla_ledger_id
      , description_language
      , object_name
      , object_type_code
      , line_number
      , source_application_id
      , source_type_code
      , source_code
      , source_value
      , source_meaning
      , created_by
      , creation_date
      , last_update_date
      , last_updated_by
      , last_update_login
      , program_update_date
      , program_application_id
      , program_id
      , request_id
)
SELECT  event_id
      , p_target_ledger_id
      , p_sla_ledger_id
      , p_language
      , object_name
      , object_type_code
      , line_number
      , source_application_id
      , source_type_code
      , source_code
      , SUBSTR(source_value,1,1996)
      , SUBSTR(source_meaning ,1,200)
      , xla_environment_pkg.g_Usr_Id
      , TRUNC(SYSDATE)
      , TRUNC(SYSDATE)
      , xla_environment_pkg.g_Usr_Id
      , xla_environment_pkg.g_Login_Id
      , TRUNC(SYSDATE)
      , xla_environment_pkg.g_Prog_Appl_Id
      , xla_environment_pkg.g_Prog_Id
      , xla_environment_pkg.g_Req_Id
  FROM (
       SELECT xet.event_id                  event_id
            , l1.line_number                 line_number
            , CASE r
               WHEN 1 THEN 'PA_XLA_BC_PKT_AP_DETAIL_V' 
                WHEN 2 THEN 'PA_XLA_PROJECT_REF_V' 
                WHEN 3 THEN 'PA_XLA_TASK_REF_V' 
                WHEN 4 THEN 'PA_XLA_EXP_ORG_REF_V' 
                WHEN 5 THEN 'PA_XLA_BC_PKT_AP_DETAIL_V' 
                WHEN 6 THEN 'PA_XLA_BC_PKT_AP_DETAIL_V' 
                WHEN 7 THEN 'PA_XLA_BC_PKT_AP_DETAIL_V' 
                WHEN 8 THEN 'PA_XLA_BC_PKT_AP_DETAIL_V' 
                WHEN 9 THEN 'PA_XLA_BC_PKT_AP_DETAIL_V' 
                WHEN 10 THEN 'PA_XLA_BC_PKT_AP_DETAIL_V' 
                WHEN 11 THEN 'PA_XLA_BC_PKT_AP_DETAIL_V' 
                WHEN 12 THEN 'PA_XLA_BC_PKT_AP_DETAIL_V' 
                WHEN 13 THEN 'PA_XLA_BC_PKT_AP_DETAIL_V' 
                WHEN 14 THEN 'PA_XLA_PROJECT_REF_V' 
                WHEN 15 THEN 'PA_XLA_BC_PKT_AP_DETAIL_V' 
                WHEN 16 THEN 'PA_XLA_BC_PKT_AP_DETAIL_V' 
                WHEN 17 THEN 'PA_XLA_BC_PKT_AP_DETAIL_V' 
                WHEN 18 THEN 'PA_XLA_BC_PKT_AP_DETAIL_V' 
                WHEN 19 THEN 'PA_XLA_BC_PKT_AP_DETAIL_V' 
                WHEN 20 THEN 'PA_XLA_BC_PKT_AP_DETAIL_V' 
                WHEN 21 THEN 'PA_XLA_BC_PKT_AP_DETAIL_V' 
                WHEN 22 THEN 'PA_XLA_BC_PKT_AP_DETAIL_V' 
                WHEN 23 THEN 'PA_XLA_BC_PKT_AP_DETAIL_V' 
                WHEN 24 THEN 'PA_XLA_BC_PKT_AP_DETAIL_V' 
                WHEN 25 THEN 'PA_XLA_BC_PKT_AP_DETAIL_V' 
                WHEN 26 THEN 'PA_XLA_BC_PKT_AP_DETAIL_V' 
                WHEN 27 THEN 'PA_XLA_BC_PKT_AP_DETAIL_V' 
                WHEN 28 THEN 'PA_XLA_BC_PKT_AP_DETAIL_V' 
                WHEN 29 THEN 'PA_XLA_BC_PKT_AP_DETAIL_V' 
                WHEN 30 THEN 'PA_XLA_BC_PKT_AP_DETAIL_V' 
                WHEN 31 THEN 'PA_XLA_BC_PKT_AP_DETAIL_V' 
                WHEN 32 THEN 'PA_XLA_BC_PKT_AP_DETAIL_V' 
                WHEN 33 THEN 'PA_XLA_BC_PKT_AP_DETAIL_V' 
                WHEN 34 THEN 'PA_XLA_BC_PKT_AP_DETAIL_V' 
                WHEN 35 THEN 'PA_XLA_BC_PKT_AP_DETAIL_V' 
                WHEN 36 THEN 'PA_XLA_BC_PKT_AP_DETAIL_V' 
                WHEN 37 THEN 'PA_XLA_BC_PKT_AP_DETAIL_V' 
                WHEN 38 THEN 'PA_XLA_BC_PKT_AP_DETAIL_V' 
                WHEN 39 THEN 'PA_XLA_BC_PKT_AP_DETAIL_V' 
                WHEN 40 THEN 'PA_XLA_BC_PKT_AP_DETAIL_V' 
                WHEN 41 THEN 'PA_XLA_BC_PKT_AP_DETAIL_V' 
                WHEN 42 THEN 'PA_XLA_BC_PKT_AP_DETAIL_V' 
                WHEN 43 THEN 'PA_XLA_BC_PKT_AP_DETAIL_V' 
                WHEN 44 THEN 'PA_XLA_BC_PKT_AP_DETAIL_V' 
                WHEN 45 THEN 'PA_XLA_BC_PKT_AP_DETAIL_V' 
                WHEN 46 THEN 'PA_XLA_BC_PKT_AP_DETAIL_V' 
                WHEN 47 THEN 'PA_XLA_BC_PKT_AP_DETAIL_V' 
                WHEN 48 THEN 'PA_XLA_BC_PKT_AP_DETAIL_V' 
                WHEN 49 THEN 'PA_XLA_BC_PKT_AP_DETAIL_V' 
                WHEN 50 THEN 'PA_XLA_BC_PKT_AP_DETAIL_V' 
                WHEN 51 THEN 'PA_XLA_BC_PKT_AP_DETAIL_V' 
                
               ELSE null
              END                           object_name
            , CASE r
                WHEN 1 THEN 'LINE' 
                WHEN 2 THEN 'LINE' 
                WHEN 3 THEN 'LINE' 
                WHEN 4 THEN 'LINE' 
                WHEN 5 THEN 'LINE' 
                WHEN 6 THEN 'LINE' 
                WHEN 7 THEN 'LINE' 
                WHEN 8 THEN 'LINE' 
                WHEN 9 THEN 'LINE' 
                WHEN 10 THEN 'LINE' 
                WHEN 11 THEN 'LINE' 
                WHEN 12 THEN 'LINE' 
                WHEN 13 THEN 'LINE' 
                WHEN 14 THEN 'LINE' 
                WHEN 15 THEN 'LINE' 
                WHEN 16 THEN 'LINE' 
                WHEN 17 THEN 'LINE' 
                WHEN 18 THEN 'LINE' 
                WHEN 19 THEN 'LINE' 
                WHEN 20 THEN 'LINE' 
                WHEN 21 THEN 'LINE' 
                WHEN 22 THEN 'LINE' 
                WHEN 23 THEN 'LINE' 
                WHEN 24 THEN 'LINE' 
                WHEN 25 THEN 'LINE' 
                WHEN 26 THEN 'LINE' 
                WHEN 27 THEN 'LINE' 
                WHEN 28 THEN 'LINE' 
                WHEN 29 THEN 'LINE' 
                WHEN 30 THEN 'LINE' 
                WHEN 31 THEN 'LINE' 
                WHEN 32 THEN 'LINE' 
                WHEN 33 THEN 'LINE' 
                WHEN 34 THEN 'LINE' 
                WHEN 35 THEN 'LINE' 
                WHEN 36 THEN 'LINE' 
                WHEN 37 THEN 'LINE' 
                WHEN 38 THEN 'LINE' 
                WHEN 39 THEN 'LINE' 
                WHEN 40 THEN 'LINE' 
                WHEN 41 THEN 'LINE' 
                WHEN 42 THEN 'LINE' 
                WHEN 43 THEN 'LINE' 
                WHEN 44 THEN 'LINE' 
                WHEN 45 THEN 'LINE' 
                WHEN 46 THEN 'LINE' 
                WHEN 47 THEN 'LINE' 
                WHEN 48 THEN 'LINE' 
                WHEN 49 THEN 'LINE' 
                WHEN 50 THEN 'LINE' 
                WHEN 51 THEN 'LINE' 
                
                ELSE null
              END                           object_type_code
            , CASE r
                WHEN 1 THEN '200' 
                WHEN 2 THEN '275' 
                WHEN 3 THEN '275' 
                WHEN 4 THEN '275' 
                WHEN 5 THEN '200' 
                WHEN 6 THEN '200' 
                WHEN 7 THEN '200' 
                WHEN 8 THEN '200' 
                WHEN 9 THEN '200' 
                WHEN 10 THEN '200' 
                WHEN 11 THEN '200' 
                WHEN 12 THEN '200' 
                WHEN 13 THEN '200' 
                WHEN 14 THEN '275' 
                WHEN 15 THEN '200' 
                WHEN 16 THEN '200' 
                WHEN 17 THEN '200' 
                WHEN 18 THEN '200' 
                WHEN 19 THEN '200' 
                WHEN 20 THEN '200' 
                WHEN 21 THEN '200' 
                WHEN 22 THEN '200' 
                WHEN 23 THEN '200' 
                WHEN 24 THEN '200' 
                WHEN 25 THEN '200' 
                WHEN 26 THEN '200' 
                WHEN 27 THEN '200' 
                WHEN 28 THEN '200' 
                WHEN 29 THEN '200' 
                WHEN 30 THEN '200' 
                WHEN 31 THEN '200' 
                WHEN 32 THEN '200' 
                WHEN 33 THEN '200' 
                WHEN 34 THEN '200' 
                WHEN 35 THEN '200' 
                WHEN 36 THEN '200' 
                WHEN 37 THEN '200' 
                WHEN 38 THEN '200' 
                WHEN 39 THEN '200' 
                WHEN 40 THEN '200' 
                WHEN 41 THEN '200' 
                WHEN 42 THEN '200' 
                WHEN 43 THEN '200' 
                WHEN 44 THEN '200' 
                WHEN 45 THEN '200' 
                WHEN 46 THEN '200' 
                WHEN 47 THEN '200' 
                WHEN 48 THEN '200' 
                WHEN 49 THEN '200' 
                WHEN 50 THEN '200' 
                WHEN 51 THEN '200' 
                
                ELSE null
              END                           source_application_id
            , 'S'             source_type_code
            , CASE r
                WHEN 1 THEN 'DOCUMENT_DISTRIBUTION_TYPE' 
                WHEN 2 THEN 'PROJECT_NAME' 
                WHEN 3 THEN 'TASK_NUMBER' 
                WHEN 4 THEN 'EXPENDITURE_ORGANIZATION_ID' 
                WHEN 5 THEN 'BUDGET_CCID' 
                WHEN 6 THEN 'DISTRIBUTION_LINK_TYPE' 
                WHEN 7 THEN 'AID_INVOICE_DIST_ID' 
                WHEN 8 THEN 'AI_INVOICE_CURRENCY_CODE' 
                WHEN 9 THEN 'INV_EXCHANGE_DATE' 
                WHEN 10 THEN 'INV_EXCHANGE_RATE' 
                WHEN 11 THEN 'INV_EXCHANGE_RATE_TYPE' 
                WHEN 12 THEN 'AID_AMOUNT' 
                WHEN 13 THEN 'DOCUMENT_TYPE' 
                WHEN 14 THEN 'PROJ_BURDEN_DISPLAY_METHOD' 
                WHEN 15 THEN 'ACCT_REVERSAL_INDICATOR' 
                WHEN 16 THEN 'ALLOC_TO_APPLN_ID' 
                WHEN 17 THEN 'ALLOC_TO_DIST_TYPE' 
                WHEN 18 THEN 'ALLOC_TO_ENTITY_CODE' 
                WHEN 19 THEN 'ALLOC_TO_FIRST_DIST_ID' 
                WHEN 20 THEN 'ALLOC_TO_FIRST_SYS_TRANS_ID' 
                WHEN 21 THEN 'AP_APPLICATION_ID' 
                WHEN 22 THEN 'AP_DISTRIBUTION_TYPE' 
                WHEN 23 THEN 'AP_ENTITY_CODE' 
                WHEN 24 THEN 'AP_FIRST_DIST_ID' 
                WHEN 25 THEN 'AP_FIRST_SYS_TRANS_ID' 
                WHEN 26 THEN 'AID_EXPENDITURE_TYPE' 
                WHEN 27 THEN 'ENC_UPG_CR_ACCT_CLASS' 
                WHEN 28 THEN 'ENC_UPG_CR_ACCOUNT' 
                WHEN 29 THEN 'AID_BASE_AMT_NO_ROUND' 
                WHEN 30 THEN 'ENC_UPG_DR_ACCT_CLASS' 
                WHEN 31 THEN 'ENC_UPG_DR_ACCOUNT' 
                WHEN 32 THEN 'USE_ENC_UPG_ATTRIB_FLAG' 
                WHEN 33 THEN 'ACCT_REVERSAL_FIRST_DIST_ID' 
                WHEN 34 THEN 'AP_SECOND_DIST_ID' 
                WHEN 35 THEN 'ACCT_REV_DISTRIBUTION_TYPE' 
                WHEN 36 THEN 'ENC_UPG_CR_ENC_TYPE_ID' 
                WHEN 37 THEN 'ENC_UPG_DR_ENC_TYPE_ID' 
                WHEN 38 THEN 'BURDEN_COST_FLAG' 
                WHEN 39 THEN 'PA_APPLICATION_ID' 
                WHEN 40 THEN 'PA_DISTRIBUTION_TYPE' 
                WHEN 41 THEN 'PA_ENTITY_CODE' 
                WHEN 42 THEN 'PA_FIRST_DIST_ID' 
                WHEN 43 THEN 'PA_FIRST_SYS_TRANS_ID' 
                WHEN 44 THEN 'PA_SECOND_DIST_ID' 
                WHEN 45 THEN 'PO_RELEASE_ID' 
                WHEN 46 THEN 'PO_APPLICATION_ID' 
                WHEN 47 THEN 'PO_DISTRIBUTION_TYPE' 
                WHEN 48 THEN 'PO_ENTITY_CODE' 
                WHEN 49 THEN 'PO_FIRST_DIST_ID' 
                WHEN 50 THEN 'PO_FIRST_SYS_TRANS_ID' 
                WHEN 51 THEN 'PO_SECOND_DIST_ID' 
                
                ELSE null
              END                           source_code
            , CASE r
                WHEN 1 THEN TO_CHAR(l1.DOCUMENT_DISTRIBUTION_TYPE)
                WHEN 2 THEN TO_CHAR(l3.PROJECT_NAME)
                WHEN 3 THEN TO_CHAR(l4.TASK_NUMBER)
                WHEN 4 THEN TO_CHAR(l2.EXPENDITURE_ORGANIZATION_ID)
                WHEN 5 THEN TO_CHAR(l1.BUDGET_CCID)
                WHEN 6 THEN TO_CHAR(l1.DISTRIBUTION_LINK_TYPE)
                WHEN 7 THEN TO_CHAR(l1.AID_INVOICE_DIST_ID)
                WHEN 8 THEN TO_CHAR(l1.AI_INVOICE_CURRENCY_CODE)
                WHEN 9 THEN TO_CHAR(l1.INV_EXCHANGE_DATE)
                WHEN 10 THEN TO_CHAR(l1.INV_EXCHANGE_RATE)
                WHEN 11 THEN TO_CHAR(l1.INV_EXCHANGE_RATE_TYPE)
                WHEN 12 THEN TO_CHAR(l1.AID_AMOUNT)
                WHEN 13 THEN TO_CHAR(l1.DOCUMENT_TYPE)
                WHEN 14 THEN TO_CHAR(l3.PROJ_BURDEN_DISPLAY_METHOD)
                WHEN 15 THEN TO_CHAR(l1.ACCT_REVERSAL_INDICATOR)
                WHEN 16 THEN TO_CHAR(l1.ALLOC_TO_APPLN_ID)
                WHEN 17 THEN TO_CHAR(l1.ALLOC_TO_DIST_TYPE)
                WHEN 18 THEN TO_CHAR(l1.ALLOC_TO_ENTITY_CODE)
                WHEN 19 THEN TO_CHAR(l1.ALLOC_TO_FIRST_DIST_ID)
                WHEN 20 THEN TO_CHAR(l1.ALLOC_TO_FIRST_SYS_TRANS_ID)
                WHEN 21 THEN TO_CHAR(l1.AP_APPLICATION_ID)
                WHEN 22 THEN TO_CHAR(l1.AP_DISTRIBUTION_TYPE)
                WHEN 23 THEN TO_CHAR(l1.AP_ENTITY_CODE)
                WHEN 24 THEN TO_CHAR(l1.AP_FIRST_DIST_ID)
                WHEN 25 THEN TO_CHAR(l1.AP_FIRST_SYS_TRANS_ID)
                WHEN 26 THEN TO_CHAR(l1.AID_EXPENDITURE_TYPE)
                WHEN 27 THEN TO_CHAR(l1.ENC_UPG_CR_ACCT_CLASS)
                WHEN 28 THEN TO_CHAR(l1.ENC_UPG_CR_ACCOUNT)
                WHEN 29 THEN TO_CHAR(l1.AID_BASE_AMT_NO_ROUND)
                WHEN 30 THEN TO_CHAR(l1.ENC_UPG_DR_ACCT_CLASS)
                WHEN 31 THEN TO_CHAR(l1.ENC_UPG_DR_ACCOUNT)
                WHEN 32 THEN TO_CHAR(l1.USE_ENC_UPG_ATTRIB_FLAG)
                WHEN 33 THEN TO_CHAR(l1.ACCT_REVERSAL_FIRST_DIST_ID)
                WHEN 34 THEN TO_CHAR(l1.AP_SECOND_DIST_ID)
                WHEN 35 THEN TO_CHAR(l1.ACCT_REV_DISTRIBUTION_TYPE)
                WHEN 36 THEN TO_CHAR(l1.ENC_UPG_CR_ENC_TYPE_ID)
                WHEN 37 THEN TO_CHAR(l1.ENC_UPG_DR_ENC_TYPE_ID)
                WHEN 38 THEN TO_CHAR(l1.BURDEN_COST_FLAG)
                WHEN 39 THEN TO_CHAR(l1.PA_APPLICATION_ID)
                WHEN 40 THEN TO_CHAR(l1.PA_DISTRIBUTION_TYPE)
                WHEN 41 THEN TO_CHAR(l1.PA_ENTITY_CODE)
                WHEN 42 THEN TO_CHAR(l1.PA_FIRST_DIST_ID)
                WHEN 43 THEN TO_CHAR(l1.PA_FIRST_SYS_TRANS_ID)
                WHEN 44 THEN TO_CHAR(l1.PA_SECOND_DIST_ID)
                WHEN 45 THEN TO_CHAR(l1.PO_RELEASE_ID)
                WHEN 46 THEN TO_CHAR(l1.PO_APPLICATION_ID)
                WHEN 47 THEN TO_CHAR(l1.PO_DISTRIBUTION_TYPE)
                WHEN 48 THEN TO_CHAR(l1.PO_ENTITY_CODE)
                WHEN 49 THEN TO_CHAR(l1.PO_FIRST_DIST_ID)
                WHEN 50 THEN TO_CHAR(l1.PO_FIRST_SYS_TRANS_ID)
                WHEN 51 THEN TO_CHAR(l1.PO_SECOND_DIST_ID)
                
                ELSE null
              END                           source_value
            , CASE r
                WHEN 4 THEN XLA_00200_AAD_S_000010_BC_PKG.GetMeaning(
                          1011384
                         ,TO_CHAR(l2.EXPENDITURE_ORGANIZATION_ID)
                         ,'EXPENDITURE_ORGANIZATION_ID'
                         ,'S'
                         ,275)
                WHEN 38 THEN fvl108.meaning
                
                ELSE null
              END               source_meaning
         FROM  xla_events_gt     xet  
        , PA_XLA_BC_PKT_AP_DETAIL_V  l1
        , PA_XLA_EXP_ORG_REF_V  l2
        , PA_XLA_PROJECT_REF_V  l3
        , PA_XLA_TASK_REF_V  l4
  , fnd_lookup_values    fvl108
            , (select rownum r from all_objects where rownum <= 51 and owner = p_apps_owner)
        WHERE xet.event_date between p_pad_start_date AND p_pad_end_date
          AND xet.event_class_code = C_EVENT_CLASS_CODE
            AND l1.event_id          = xet.event_id
 AND l2.expenditure_organization_id=l1.aid_expenditure_org_id AND l3.project_id=l1.aid_project_id AND l4.task_id=l1.aid_task_id   AND fvl108.lookup_type(+)         = 'BC_PKT_BURDEN_COST_FLAG'
  AND fvl108.lookup_code(+)         = l1.BURDEN_COST_FLAG
  AND fvl108.view_application_id(+) = 275
  AND fvl108.language(+)            = USERENV('LANG')
  
)
;
--
IF (C_LEVEL_STATEMENT >= g_log_level) THEN

      trace
         (p_msg      => 'number of line sources inserted = '||SQL%ROWCOUNT
         ,p_level    => C_LEVEL_STATEMENT
         ,p_module   => l_log_module);

END IF;


IF (C_LEVEL_PROCEDURE >= g_log_level) THEN
      trace
         (p_msg      => 'END of insert_sources_106'
         ,p_level    => C_LEVEL_PROCEDURE
         ,p_module   => l_log_module);
END IF;
EXCEPTION
  WHEN xla_exceptions_pkg.application_exception THEN
      IF (C_LEVEL_EXCEPTION >= g_log_level) THEN
            trace
               (p_msg      => 'ERROR: XLA_CMP_COMPILER_ERROR = '||sqlerrm
               ,p_level    => C_LEVEL_EXCEPTION
               ,p_module   => l_log_module);
      END IF;
      RAISE;
  WHEN OTHERS THEN
      IF (C_LEVEL_EXCEPTION >= g_log_level) THEN
            trace
               (p_msg      => 'ERROR: XLA_CMP_COMPILER_ERROR = '||sqlerrm
               ,p_level    => C_LEVEL_EXCEPTION
               ,p_module   => l_log_module);
       END IF;
       xla_exceptions_pkg.raise_message
           (p_location => 'XLA_00200_AAD_S_000010_BC_PKG.insert_sources_106');
END insert_sources_106;
--

---------------------------------------
--
-- PRIVATE FUNCTION
--         EventClass_106
--
----------------------------------------
--
FUNCTION EventClass_106
       (p_application_id         IN NUMBER
       ,p_base_ledger_id         IN NUMBER
       ,p_target_ledger_id       IN NUMBER
       ,p_language               IN VARCHAR2
       ,p_currency_code          IN VARCHAR2
       ,p_sla_ledger_id          IN NUMBER
       ,p_pad_start_date         IN DATE
       ,p_pad_end_date           IN DATE
       ,p_primary_ledger_id      IN NUMBER)
RETURN BOOLEAN IS
--
C_EVENT_TYPE_CODE    CONSTANT  VARCHAR2(30)  := 'INVOICE_BURDEN_ALL';
C_EVENT_CLASS_CODE    CONSTANT  VARCHAR2(30) := 'INVOICE_BURDEN';

l_calculate_acctd_flag   VARCHAR2(1) :='N';
l_calculate_g_l_flag     VARCHAR2(1) :='N';
--
l_array_legal_entity_id                XLA_AE_JOURNAL_ENTRY_PKG.t_array_Num;
l_array_entity_id                      XLA_AE_JOURNAL_ENTRY_PKG.t_array_Num;
l_array_entity_code                    XLA_AE_JOURNAL_ENTRY_PKG.t_array_V30L;
l_array_transaction_num                XLA_AE_JOURNAL_ENTRY_PKG.t_array_V240L;
l_array_event_id                       XLA_AE_JOURNAL_ENTRY_PKG.t_array_Num;
l_array_class_code                     XLA_AE_JOURNAL_ENTRY_PKG.t_array_V30L;
l_array_event_type                     XLA_AE_JOURNAL_ENTRY_PKG.t_array_V30L;
l_array_event_number                   XLA_AE_JOURNAL_ENTRY_PKG.t_array_Num;
l_array_event_date                     XLA_AE_JOURNAL_ENTRY_PKG.t_array_Date;
l_array_transaction_date               XLA_AE_JOURNAL_ENTRY_PKG.t_array_Date;
l_array_reference_num_1                XLA_AE_JOURNAL_ENTRY_PKG.t_array_Num;
l_array_reference_num_2                XLA_AE_JOURNAL_ENTRY_PKG.t_array_Num;
l_array_reference_num_3                XLA_AE_JOURNAL_ENTRY_PKG.t_array_Num;
l_array_reference_num_4                XLA_AE_JOURNAL_ENTRY_PKG.t_array_Num;
l_array_reference_char_1               XLA_AE_JOURNAL_ENTRY_PKG.t_array_V240L;
l_array_reference_char_2               XLA_AE_JOURNAL_ENTRY_PKG.t_array_V240L;
l_array_reference_char_3               XLA_AE_JOURNAL_ENTRY_PKG.t_array_V240L;
l_array_reference_char_4               XLA_AE_JOURNAL_ENTRY_PKG.t_array_V240L;
l_array_reference_date_1               XLA_AE_JOURNAL_ENTRY_PKG.t_array_Date;
l_array_reference_date_2               XLA_AE_JOURNAL_ENTRY_PKG.t_array_Date;
l_array_reference_date_3               XLA_AE_JOURNAL_ENTRY_PKG.t_array_Date;
l_array_reference_date_4               XLA_AE_JOURNAL_ENTRY_PKG.t_array_Date;
l_array_event_created_by               XLA_AE_JOURNAL_ENTRY_PKG.t_array_V100L;
l_array_budgetary_control_flag         XLA_AE_JOURNAL_ENTRY_PKG.t_array_V30L;
l_array_header_events                  XLA_AE_JOURNAL_ENTRY_PKG.t_array_Num;  --added
l_array_duplicate_checker              XLA_AE_JOURNAL_ENTRY_PKG.t_array_Num;  --added

l_event_id                             NUMBER;
l_previous_event_id                    NUMBER;
l_first_event_id                       NUMBER;
l_last_event_id                        NUMBER;

l_rec_acct_attrs                       XLA_AE_HEADER_PKG.t_rec_acct_attrs;
l_rec_rev_acct_attrs                   XLA_AE_LINES_PKG.t_rec_acct_attrs;
--
--
l_result                    BOOLEAN := TRUE;
l_rows                      NUMBER  := 1000;
l_event_type_name           VARCHAR2(80) := 'All';
l_event_class_name          VARCHAR2(80) := 'Burden for Invoices';
l_description               VARCHAR2(4000);
l_transaction_reversal      NUMBER;
l_ae_header_id              NUMBER;
l_array_extract_line_num    xla_ae_journal_entry_pkg.t_array_Num;
l_log_module                VARCHAR2(240);
--
l_acct_reversal_source      VARCHAR2(30);
l_trx_reversal_source       VARCHAR2(30);

l_continue_with_lines       BOOLEAN := TRUE;
--
l_acc_rev_gl_date_source    DATE;                      -- 4262811
--
type t_array_event_id is table of number index by binary_integer;

l_rec_array_event                    t_rec_array_event;
l_null_rec_array_event               t_rec_array_event;
l_array_ae_header_id                 xla_number_array_type;
l_actual_flag                        VARCHAR2(1) := NULL;
l_actual_gain_loss_ref               VARCHAR2(30) := '#####';
l_balance_type_code                  VARCHAR2(1) :=NULL;
l_gain_or_loss_ref                   VARCHAR2(30) :=NULL;

--
TYPE t_array_lookup_meaning IS TABLE OF fnd_lookup_values.meaning%TYPE INDEX BY BINARY_INTEGER;
--


TYPE t_array_source_2 IS TABLE OF PA_XLA_BC_PKT_AP_DETAIL_V.DOCUMENT_DISTRIBUTION_TYPE%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_3 IS TABLE OF PA_XLA_PROJECT_REF_V.PROJECT_NAME%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_4 IS TABLE OF PA_XLA_TASK_REF_V.TASK_NUMBER%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_5 IS TABLE OF PA_XLA_EXP_ORG_REF_V.EXPENDITURE_ORGANIZATION_ID%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_14 IS TABLE OF PA_XLA_BC_PKT_AP_DETAIL_V.BUDGET_CCID%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_21 IS TABLE OF PA_XLA_BC_PKT_AP_DETAIL_V.DISTRIBUTION_LINK_TYPE%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_30 IS TABLE OF PA_XLA_BC_PKT_AP_DETAIL_V.AID_INVOICE_DIST_ID%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_33 IS TABLE OF PA_XLA_BC_PKT_AP_DETAIL_V.AI_INVOICE_CURRENCY_CODE%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_39 IS TABLE OF PA_XLA_BC_PKT_AP_DETAIL_V.INV_EXCHANGE_DATE%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_40 IS TABLE OF PA_XLA_BC_PKT_AP_DETAIL_V.INV_EXCHANGE_RATE%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_41 IS TABLE OF PA_XLA_BC_PKT_AP_DETAIL_V.INV_EXCHANGE_RATE_TYPE%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_57 IS TABLE OF PA_XLA_BC_PKT_AP_DETAIL_V.AID_AMOUNT%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_83 IS TABLE OF PA_XLA_BC_PKT_AP_DETAIL_V.DOCUMENT_TYPE%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_84 IS TABLE OF PA_XLA_PROJECT_REF_V.PROJ_BURDEN_DISPLAY_METHOD%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_85 IS TABLE OF PA_XLA_BC_PKT_AP_DETAIL_V.ACCT_REVERSAL_INDICATOR%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_86 IS TABLE OF PA_XLA_BC_PKT_AP_DETAIL_V.ALLOC_TO_APPLN_ID%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_87 IS TABLE OF PA_XLA_BC_PKT_AP_DETAIL_V.ALLOC_TO_DIST_TYPE%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_88 IS TABLE OF PA_XLA_BC_PKT_AP_DETAIL_V.ALLOC_TO_ENTITY_CODE%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_89 IS TABLE OF PA_XLA_BC_PKT_AP_DETAIL_V.ALLOC_TO_FIRST_DIST_ID%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_90 IS TABLE OF PA_XLA_BC_PKT_AP_DETAIL_V.ALLOC_TO_FIRST_SYS_TRANS_ID%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_91 IS TABLE OF PA_XLA_BC_PKT_AP_DETAIL_V.AP_APPLICATION_ID%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_92 IS TABLE OF PA_XLA_BC_PKT_AP_DETAIL_V.AP_DISTRIBUTION_TYPE%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_93 IS TABLE OF PA_XLA_BC_PKT_AP_DETAIL_V.AP_ENTITY_CODE%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_94 IS TABLE OF PA_XLA_BC_PKT_AP_DETAIL_V.AP_FIRST_DIST_ID%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_95 IS TABLE OF PA_XLA_BC_PKT_AP_DETAIL_V.AP_FIRST_SYS_TRANS_ID%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_96 IS TABLE OF PA_XLA_BC_PKT_AP_DETAIL_V.AID_EXPENDITURE_TYPE%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_97 IS TABLE OF PA_XLA_BC_PKT_AP_DETAIL_V.ENC_UPG_CR_ACCT_CLASS%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_98 IS TABLE OF PA_XLA_BC_PKT_AP_DETAIL_V.ENC_UPG_CR_ACCOUNT%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_99 IS TABLE OF PA_XLA_BC_PKT_AP_DETAIL_V.AID_BASE_AMT_NO_ROUND%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_100 IS TABLE OF PA_XLA_BC_PKT_AP_DETAIL_V.ENC_UPG_DR_ACCT_CLASS%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_101 IS TABLE OF PA_XLA_BC_PKT_AP_DETAIL_V.ENC_UPG_DR_ACCOUNT%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_102 IS TABLE OF PA_XLA_BC_PKT_AP_DETAIL_V.USE_ENC_UPG_ATTRIB_FLAG%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_103 IS TABLE OF PA_XLA_BC_PKT_AP_DETAIL_V.ACCT_REVERSAL_FIRST_DIST_ID%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_104 IS TABLE OF PA_XLA_BC_PKT_AP_DETAIL_V.AP_SECOND_DIST_ID%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_105 IS TABLE OF PA_XLA_BC_PKT_AP_DETAIL_V.ACCT_REV_DISTRIBUTION_TYPE%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_106 IS TABLE OF PA_XLA_BC_PKT_AP_DETAIL_V.ENC_UPG_CR_ENC_TYPE_ID%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_107 IS TABLE OF PA_XLA_BC_PKT_AP_DETAIL_V.ENC_UPG_DR_ENC_TYPE_ID%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_108 IS TABLE OF PA_XLA_BC_PKT_AP_DETAIL_V.BURDEN_COST_FLAG%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_109 IS TABLE OF PA_XLA_BC_PKT_AP_DETAIL_V.PA_APPLICATION_ID%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_110 IS TABLE OF PA_XLA_BC_PKT_AP_DETAIL_V.PA_DISTRIBUTION_TYPE%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_111 IS TABLE OF PA_XLA_BC_PKT_AP_DETAIL_V.PA_ENTITY_CODE%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_112 IS TABLE OF PA_XLA_BC_PKT_AP_DETAIL_V.PA_FIRST_DIST_ID%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_113 IS TABLE OF PA_XLA_BC_PKT_AP_DETAIL_V.PA_FIRST_SYS_TRANS_ID%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_114 IS TABLE OF PA_XLA_BC_PKT_AP_DETAIL_V.PA_SECOND_DIST_ID%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_115 IS TABLE OF PA_XLA_BC_PKT_AP_DETAIL_V.PO_RELEASE_ID%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_116 IS TABLE OF PA_XLA_BC_PKT_AP_DETAIL_V.PO_APPLICATION_ID%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_117 IS TABLE OF PA_XLA_BC_PKT_AP_DETAIL_V.PO_DISTRIBUTION_TYPE%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_118 IS TABLE OF PA_XLA_BC_PKT_AP_DETAIL_V.PO_ENTITY_CODE%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_119 IS TABLE OF PA_XLA_BC_PKT_AP_DETAIL_V.PO_FIRST_DIST_ID%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_120 IS TABLE OF PA_XLA_BC_PKT_AP_DETAIL_V.PO_FIRST_SYS_TRANS_ID%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_121 IS TABLE OF PA_XLA_BC_PKT_AP_DETAIL_V.PO_SECOND_DIST_ID%TYPE INDEX BY BINARY_INTEGER;


l_array_source_2      t_array_source_2;
l_array_source_3      t_array_source_3;
l_array_source_4      t_array_source_4;
l_array_source_5      t_array_source_5;
l_array_source_14      t_array_source_14;
l_array_source_21      t_array_source_21;
l_array_source_30      t_array_source_30;
l_array_source_33      t_array_source_33;
l_array_source_39      t_array_source_39;
l_array_source_40      t_array_source_40;
l_array_source_41      t_array_source_41;
l_array_source_57      t_array_source_57;
l_array_source_83      t_array_source_83;
l_array_source_84      t_array_source_84;
l_array_source_85      t_array_source_85;
l_array_source_86      t_array_source_86;
l_array_source_87      t_array_source_87;
l_array_source_88      t_array_source_88;
l_array_source_89      t_array_source_89;
l_array_source_90      t_array_source_90;
l_array_source_91      t_array_source_91;
l_array_source_92      t_array_source_92;
l_array_source_93      t_array_source_93;
l_array_source_94      t_array_source_94;
l_array_source_95      t_array_source_95;
l_array_source_96      t_array_source_96;
l_array_source_97      t_array_source_97;
l_array_source_98      t_array_source_98;
l_array_source_99      t_array_source_99;
l_array_source_100      t_array_source_100;
l_array_source_101      t_array_source_101;
l_array_source_102      t_array_source_102;
l_array_source_103      t_array_source_103;
l_array_source_104      t_array_source_104;
l_array_source_105      t_array_source_105;
l_array_source_106      t_array_source_106;
l_array_source_107      t_array_source_107;
l_array_source_108      t_array_source_108;
l_array_source_108_meaning      t_array_lookup_meaning;
l_array_source_109      t_array_source_109;
l_array_source_110      t_array_source_110;
l_array_source_111      t_array_source_111;
l_array_source_112      t_array_source_112;
l_array_source_113      t_array_source_113;
l_array_source_114      t_array_source_114;
l_array_source_115      t_array_source_115;
l_array_source_116      t_array_source_116;
l_array_source_117      t_array_source_117;
l_array_source_118      t_array_source_118;
l_array_source_119      t_array_source_119;
l_array_source_120      t_array_source_120;
l_array_source_121      t_array_source_121;

--
CURSOR header_cur
IS
SELECT /*+ leading(xet) cardinality(xet,1) */
-- Event Class Code: INVOICE_BURDEN
    xet.entity_id
   ,xet.legal_entity_id
   ,xet.entity_code
   ,xet.transaction_number
   ,xet.event_id
   ,xet.event_class_code
   ,xet.event_type_code
   ,xet.event_number
   ,xet.event_date
   ,xet.transaction_date
   ,xet.reference_num_1
   ,xet.reference_num_2
   ,xet.reference_num_3
   ,xet.reference_num_4
   ,xet.reference_char_1
   ,xet.reference_char_2
   ,xet.reference_char_3
   ,xet.reference_char_4
   ,xet.reference_date_1
   ,xet.reference_date_2
   ,xet.reference_date_3
   ,xet.reference_date_4
   ,xet.event_created_by
   ,xet.budgetary_control_flag  
  FROM xla_events_gt     xet  
 WHERE xet.event_date between p_pad_start_date and p_pad_end_date
   and xet.event_class_code = C_EVENT_CLASS_CODE
   and xet.event_status_code <> 'N'  
 ORDER BY event_id
;


--
CURSOR line_cur (x_first_event_id    in number, x_last_event_id    in number)
IS
SELECT  /*+ leading(xet) cardinality(xet,1) */
-- Event Class Code: INVOICE_BURDEN
    xet.entity_id
   ,xet.legal_entity_id
   ,xet.entity_code
   ,xet.transaction_number
   ,xet.event_id
   ,xet.event_class_code
   ,xet.event_type_code
   ,xet.event_number
   ,xet.event_date
   ,xet.transaction_date
   ,xet.reference_num_1
   ,xet.reference_num_2
   ,xet.reference_num_3
   ,xet.reference_num_4
   ,xet.reference_char_1
   ,xet.reference_char_2
   ,xet.reference_char_3
   ,xet.reference_char_4
   ,xet.reference_date_1
   ,xet.reference_date_2
   ,xet.reference_date_3
   ,xet.reference_date_4
   ,xet.event_created_by
   ,xet.budgetary_control_flag
 , l1.LINE_NUMBER  
  , l1.DOCUMENT_DISTRIBUTION_TYPE    source_2
  , l3.PROJECT_NAME    source_3
  , l4.TASK_NUMBER    source_4
  , l2.EXPENDITURE_ORGANIZATION_ID    source_5
  , l1.BUDGET_CCID    source_14
  , l1.DISTRIBUTION_LINK_TYPE    source_21
  , l1.AID_INVOICE_DIST_ID    source_30
  , l1.AI_INVOICE_CURRENCY_CODE    source_33
  , l1.INV_EXCHANGE_DATE    source_39
  , l1.INV_EXCHANGE_RATE    source_40
  , l1.INV_EXCHANGE_RATE_TYPE    source_41
  , l1.AID_AMOUNT    source_57
  , l1.DOCUMENT_TYPE    source_83
  , l3.PROJ_BURDEN_DISPLAY_METHOD    source_84
  , l1.ACCT_REVERSAL_INDICATOR    source_85
  , l1.ALLOC_TO_APPLN_ID    source_86
  , l1.ALLOC_TO_DIST_TYPE    source_87
  , l1.ALLOC_TO_ENTITY_CODE    source_88
  , l1.ALLOC_TO_FIRST_DIST_ID    source_89
  , l1.ALLOC_TO_FIRST_SYS_TRANS_ID    source_90
  , l1.AP_APPLICATION_ID    source_91
  , l1.AP_DISTRIBUTION_TYPE    source_92
  , l1.AP_ENTITY_CODE    source_93
  , l1.AP_FIRST_DIST_ID    source_94
  , l1.AP_FIRST_SYS_TRANS_ID    source_95
  , l1.AID_EXPENDITURE_TYPE    source_96
  , l1.ENC_UPG_CR_ACCT_CLASS    source_97
  , l1.ENC_UPG_CR_ACCOUNT    source_98
  , l1.AID_BASE_AMT_NO_ROUND    source_99
  , l1.ENC_UPG_DR_ACCT_CLASS    source_100
  , l1.ENC_UPG_DR_ACCOUNT    source_101
  , l1.USE_ENC_UPG_ATTRIB_FLAG    source_102
  , l1.ACCT_REVERSAL_FIRST_DIST_ID    source_103
  , l1.AP_SECOND_DIST_ID    source_104
  , l1.ACCT_REV_DISTRIBUTION_TYPE    source_105
  , l1.ENC_UPG_CR_ENC_TYPE_ID    source_106
  , l1.ENC_UPG_DR_ENC_TYPE_ID    source_107
  , l1.BURDEN_COST_FLAG    source_108
  , fvl108.meaning   source_108_meaning
  , l1.PA_APPLICATION_ID    source_109
  , l1.PA_DISTRIBUTION_TYPE    source_110
  , l1.PA_ENTITY_CODE    source_111
  , l1.PA_FIRST_DIST_ID    source_112
  , l1.PA_FIRST_SYS_TRANS_ID    source_113
  , l1.PA_SECOND_DIST_ID    source_114
  , l1.PO_RELEASE_ID    source_115
  , l1.PO_APPLICATION_ID    source_116
  , l1.PO_DISTRIBUTION_TYPE    source_117
  , l1.PO_ENTITY_CODE    source_118
  , l1.PO_FIRST_DIST_ID    source_119
  , l1.PO_FIRST_SYS_TRANS_ID    source_120
  , l1.PO_SECOND_DIST_ID    source_121
  FROM xla_events_gt     xet 
  , PA_XLA_BC_PKT_AP_DETAIL_V  l1
  , PA_XLA_EXP_ORG_REF_V  l2
  , PA_XLA_PROJECT_REF_V  l3
  , PA_XLA_TASK_REF_V  l4
  , fnd_lookup_values    fvl108
 WHERE xet.event_id between x_first_event_id and x_last_event_id
   and xet.event_date between p_pad_start_date and p_pad_end_date
   and xet.event_class_code = C_EVENT_CLASS_CODE
   and xet.event_status_code <> 'N'   AND l1.event_id      = xet.event_id
 AND l2.expenditure_organization_id=l1.aid_expenditure_org_id AND l3.project_id=l1.aid_project_id AND l4.task_id=l1.aid_task_id   AND fvl108.lookup_type(+)         = 'BC_PKT_BURDEN_COST_FLAG'
  AND fvl108.lookup_code(+)         = l1.BURDEN_COST_FLAG
  AND fvl108.view_application_id(+) = 275
  AND fvl108.language(+)            = USERENV('LANG')
  ;

--
BEGIN
IF g_log_enabled THEN
   l_log_module := C_DEFAULT_MODULE||'.EventClass_106';
END IF;
IF (C_LEVEL_PROCEDURE >= g_log_level) THEN
   trace
      (p_msg      => 'BEGIN of EventClass_106'
      ,p_level    => C_LEVEL_PROCEDURE
      ,p_module   => l_log_module);
END IF;

IF (C_LEVEL_STATEMENT >= g_log_level) THEN
   trace
      (p_msg      => 'p_application_id = '||p_application_id||
                     ' - p_base_ledger_id = '||p_base_ledger_id||
                     ' - p_target_ledger_id  = '||p_target_ledger_id||
                     ' - p_language = '||p_language||
                     ' - p_currency_code = '||p_currency_code||
                     ' - p_sla_ledger_id = '||p_sla_ledger_id
      ,p_level    => C_LEVEL_STATEMENT
      ,p_module   => l_log_module);
END IF;
--
-- initialze arrays
--
g_array_event.DELETE;
l_rec_array_event := l_null_rec_array_event;
--
--------------------------------------
-- 4262811 Initialze MPA Line Number
--------------------------------------
XLA_AE_HEADER_PKG.g_mpa_line_num := 0;

--

--
OPEN header_cur;
--
IF (C_LEVEL_STATEMENT >= g_log_level) THEN
   trace
   (p_msg      => 'SQL - FETCH header_cur'
   ,p_level    => C_LEVEL_STATEMENT
   ,p_module   => l_log_module);
END IF;
--
LOOP
FETCH header_cur BULK COLLECT INTO
        l_array_entity_id
      , l_array_legal_entity_id
      , l_array_entity_code
      , l_array_transaction_num
      , l_array_event_id
      , l_array_class_code
      , l_array_event_type
      , l_array_event_number
      , l_array_event_date
      , l_array_transaction_date
      , l_array_reference_num_1
      , l_array_reference_num_2
      , l_array_reference_num_3
      , l_array_reference_num_4
      , l_array_reference_char_1
      , l_array_reference_char_2
      , l_array_reference_char_3
      , l_array_reference_char_4
      , l_array_reference_date_1
      , l_array_reference_date_2
      , l_array_reference_date_3
      , l_array_reference_date_4
      , l_array_event_created_by
      , l_array_budgetary_control_flag 
      LIMIT l_rows;
--
IF (C_LEVEL_EVENT >= g_log_level) THEN
   trace
   (p_msg      => '# rows extracted from header extract objects = '||TO_CHAR(header_cur%ROWCOUNT)
   ,p_level    => C_LEVEL_EVENT
   ,p_module   => l_log_module);
END IF;
--
EXIT WHEN l_array_entity_id.COUNT = 0;

-- initialize arrays
XLA_AE_HEADER_PKG.g_rec_header_new        := NULL;
XLA_AE_LINES_PKG.g_rec_lines              := NULL;

--
-- Bug 4458708
--
XLA_AE_LINES_PKG.g_LineNumber := 0;


-- 4262811 - when creating Accrual Reversal or MPA, use g_last_hdr_idx to increment for next header id
g_last_hdr_idx := l_array_event_id.LAST;
--
-- loop for the headers. Each iteration is for each header extract row
-- fetched in header cursor
--
FOR hdr_idx IN l_array_event_id.FIRST .. l_array_event_id.LAST LOOP

--
-- set event info as cache for other routines to refer event attributes
--
XLA_AE_JOURNAL_ENTRY_PKG.set_event_info
   (p_application_id           => p_application_id
   ,p_primary_ledger_id        => p_primary_ledger_id
   ,p_base_ledger_id           => p_base_ledger_id
   ,p_target_ledger_id         => p_target_ledger_id
   ,p_entity_id                => l_array_entity_id(hdr_idx)
   ,p_legal_entity_id          => l_array_legal_entity_id(hdr_idx)
   ,p_entity_code              => l_array_entity_code(hdr_idx)
   ,p_transaction_num          => l_array_transaction_num(hdr_idx)
   ,p_event_id                 => l_array_event_id(hdr_idx)
   ,p_event_class_code         => l_array_class_code(hdr_idx)
   ,p_event_type_code          => l_array_event_type(hdr_idx)
   ,p_event_number             => l_array_event_number(hdr_idx)
   ,p_event_date               => l_array_event_date(hdr_idx)
   ,p_transaction_date         => l_array_transaction_date(hdr_idx)
   ,p_reference_num_1          => l_array_reference_num_1(hdr_idx)
   ,p_reference_num_2          => l_array_reference_num_2(hdr_idx)
   ,p_reference_num_3          => l_array_reference_num_3(hdr_idx)
   ,p_reference_num_4          => l_array_reference_num_4(hdr_idx)
   ,p_reference_char_1         => l_array_reference_char_1(hdr_idx)
   ,p_reference_char_2         => l_array_reference_char_2(hdr_idx)
   ,p_reference_char_3         => l_array_reference_char_3(hdr_idx)
   ,p_reference_char_4         => l_array_reference_char_4(hdr_idx)
   ,p_reference_date_1         => l_array_reference_date_1(hdr_idx)
   ,p_reference_date_2         => l_array_reference_date_2(hdr_idx)
   ,p_reference_date_3         => l_array_reference_date_3(hdr_idx)
   ,p_reference_date_4         => l_array_reference_date_4(hdr_idx)
   ,p_event_created_by         => l_array_event_created_by(hdr_idx)
   ,p_budgetary_control_flag   => l_array_budgetary_control_flag(hdr_idx));

--
-- set the status of entry to C_VALID (0)
--
XLA_AE_JOURNAL_ENTRY_PKG.g_global_status    := XLA_AE_JOURNAL_ENTRY_PKG.C_VALID;

--
-- initialize a row for ae header
--
XLA_AE_HEADER_PKG.InitHeader(hdr_idx);

l_event_id := l_array_event_id(hdr_idx);

--
-- storing the hdr_idx for event. May be used by line cursor.
--
g_array_event(l_event_id).array_value_num('header_index') := hdr_idx;

--
-- store sources from header extract. This can be improved to
-- store only those sources from header extract that may be used in lines
--


--
-- initilaize the status of ae headers for diffrent balance types
-- the status is initialised to C_NOT_CREATED (2)
--
--g_array_event(l_event_id).array_value_num('actual_je_status') := XLA_AE_JOURNAL_ENTRY_PKG.C_NOT_CREATED;
--g_array_event(l_event_id).array_value_num('budget_je_status') := XLA_AE_JOURNAL_ENTRY_PKG.C_NOT_CREATED;
--g_array_event(l_event_id).array_value_num('encumbrance_je_status') := XLA_AE_JOURNAL_ENTRY_PKG.C_NOT_CREATED;

--
-- call api to validate and store accounting attributes for header
--

------------------------------------------------------------
-- Accrual Reversal : to get date for Standard Source (NONE)
------------------------------------------------------------
l_acc_rev_gl_date_source := NULL;

     l_rec_acct_attrs.array_acct_attr_code(1)   := 'GL_DATE';
      l_rec_acct_attrs.array_date_value(1) := 
xla_ae_sources_pkg.GetSystemSourceDate(
   p_source_code           => 'XLA_EVENT_DATE'
 , p_source_type_code      => 'Y'
 , p_source_application_id =>  602
);


XLA_AE_HEADER_PKG.SetHdrAcctAttrs(l_rec_acct_attrs);

XLA_AE_HEADER_PKG.SetJeCategoryName;

XLA_AE_HEADER_PKG.g_rec_header_new.array_event_type_code(hdr_idx)  := l_array_event_type(hdr_idx);
XLA_AE_HEADER_PKG.g_rec_header_new.array_event_id(hdr_idx)         := l_array_event_id(hdr_idx);
XLA_AE_HEADER_PKG.g_rec_header_new.array_entity_id(hdr_idx)        := l_array_entity_id(hdr_idx);
XLA_AE_HEADER_PKG.g_rec_header_new.array_event_number(hdr_idx)     := l_array_event_number(hdr_idx);
XLA_AE_HEADER_PKG.g_rec_header_new.array_target_ledger_id(hdr_idx) := p_target_ledger_id;


-- No header level analytical criteria

--
--accounting attribute enhancement, bug 3612931
--
l_trx_reversal_source := SUBSTR(NULL, 1,30);

IF NVL(l_trx_reversal_source, 'N') NOT IN ('N','Y') THEN
   xla_ae_journal_entry_pkg.g_global_status      :=  xla_ae_journal_entry_pkg.C_INVALID;

   xla_accounting_err_pkg.build_message
      (p_appli_s_name            => 'XLA'
      ,p_msg_name                => 'XLA_AP_INVALID_HDR_ATTR'
      ,p_token_1                 => 'ACCT_ATTR_NAME'
      ,p_value_1                 => xla_ae_sources_pkg.GetAccountingSourceName('TRX_ACCT_REVERSAL_OPTION')
      ,p_token_2                 => 'PRODUCT_NAME'
      ,p_value_2                 => xla_ae_journal_entry_pkg.g_cache_event.application_name
      ,p_entity_id               => xla_ae_journal_entry_pkg.g_cache_event.entity_id
      ,p_event_id                => xla_ae_journal_entry_pkg.g_cache_event.event_id
      ,p_ledger_id               => xla_ae_journal_entry_pkg.g_cache_event.target_ledger_id);

ELSIF NVL(l_trx_reversal_source, 'N') = 'Y' THEN
   --
   -- following sets the accounting attributes needed to reverse
   -- accounting for a distributeion
   --
   xla_ae_lines_pkg.SetTrxReversalAttrs
      (p_event_id              => l_event_id
      ,p_gl_date               => XLA_AE_HEADER_PKG.g_rec_header_new.array_gl_date(hdr_idx)
      ,p_trx_reversal_source   => l_trx_reversal_source);

END IF;


----------------------------------------------------------------
-- 4262811 -  update the header statuses to invalid in need be
----------------------------------------------------------------
--
XLA_AE_JOURNAL_ENTRY_PKG.UpdateJournalEntryStatus (p_hdr_idx => hdr_idx);


  -----------------------------------------------
  -- No accrual reversal for the event class/type
  -----------------------------------------------
----------------------------------------------------------------

--
-- this ends the header loop iteration for one bulk fetch
--
END LOOP;

l_first_event_id   := l_array_event_id(l_array_event_id.FIRST);
l_last_event_id    := l_array_event_id(l_array_event_id.LAST);

--
-- insert dummy rows into lines gt table that were created due to
-- transaction reversals
--
IF XLA_AE_LINES_PKG.g_rec_lines.array_ae_header_id.COUNT > 0 THEN
   l_result := XLA_AE_LINES_PKG.InsertLines;
END IF;

--
-- reset the temp_line_num for each set of events fetched from header
-- cursor rather than doing it for each new event in line cursor
-- Bug 3939231
--
xla_ae_lines_pkg.g_temp_line_num := 0;



--
OPEN line_cur(x_first_event_id  => l_first_event_id, x_last_event_id  => l_last_event_id);
--
--
IF (C_LEVEL_STATEMENT >= g_log_level) THEN

      trace
         (p_msg      => 'SQL - FETCH line_cur'
         ,p_level    => C_LEVEL_STATEMENT
         ,p_module   => l_log_module);

END IF;
--
--
LOOP
  --
  FETCH line_cur BULK COLLECT INTO
        l_array_entity_id
      , l_array_legal_entity_id
      , l_array_entity_code
      , l_array_transaction_num
      , l_array_event_id
      , l_array_class_code
      , l_array_event_type
      , l_array_event_number
      , l_array_event_date
      , l_array_transaction_date
      , l_array_reference_num_1
      , l_array_reference_num_2
      , l_array_reference_num_3
      , l_array_reference_num_4
      , l_array_reference_char_1
      , l_array_reference_char_2
      , l_array_reference_char_3
      , l_array_reference_char_4
      , l_array_reference_date_1
      , l_array_reference_date_2
      , l_array_reference_date_3
      , l_array_reference_date_4
      , l_array_event_created_by
      , l_array_budgetary_control_flag
      , l_array_extract_line_num 
      , l_array_source_2
      , l_array_source_3
      , l_array_source_4
      , l_array_source_5
      , l_array_source_14
      , l_array_source_21
      , l_array_source_30
      , l_array_source_33
      , l_array_source_39
      , l_array_source_40
      , l_array_source_41
      , l_array_source_57
      , l_array_source_83
      , l_array_source_84
      , l_array_source_85
      , l_array_source_86
      , l_array_source_87
      , l_array_source_88
      , l_array_source_89
      , l_array_source_90
      , l_array_source_91
      , l_array_source_92
      , l_array_source_93
      , l_array_source_94
      , l_array_source_95
      , l_array_source_96
      , l_array_source_97
      , l_array_source_98
      , l_array_source_99
      , l_array_source_100
      , l_array_source_101
      , l_array_source_102
      , l_array_source_103
      , l_array_source_104
      , l_array_source_105
      , l_array_source_106
      , l_array_source_107
      , l_array_source_108
      , l_array_source_108_meaning
      , l_array_source_109
      , l_array_source_110
      , l_array_source_111
      , l_array_source_112
      , l_array_source_113
      , l_array_source_114
      , l_array_source_115
      , l_array_source_116
      , l_array_source_117
      , l_array_source_118
      , l_array_source_119
      , l_array_source_120
      , l_array_source_121
      LIMIT l_rows;

  --
  IF (C_LEVEL_EVENT >= g_log_level) THEN
            trace
               (p_msg      => '# rows extracted from line extract objects = '||TO_CHAR(line_cur%ROWCOUNT)
               ,p_level    => C_LEVEL_EVENT
               ,p_module   => l_log_module);
  END IF;
  --
  EXIT WHEN l_array_entity_id.count = 0;

  XLA_AE_LINES_PKG.g_rec_lines := null;

--
-- Bug 4458708
--
XLA_AE_LINES_PKG.g_LineNumber := 0;
--
--

FOR Idx IN 1..l_array_event_id.count LOOP
   --
   -- 5648433 (move l_event_id out of IF statement)  set l_event_id to be used inside IF condition
   --
   l_event_id := l_array_event_id(idx);  -- 5648433

   --
   -- Bug 4872078 - Do nothing if the event is meant for transaction reversal
   --

   IF NVL(xla_ae_header_pkg.g_rec_header_new.array_trx_acct_reversal_option
             (g_array_event(l_event_id).array_value_num('header_index'))
         ,'N'
         ) <> 'Y'
   THEN
      IF (C_LEVEL_STATEMENT >= g_log_level) THEN
         trace
            (p_msg      => 'Trancaction revesal option is not Y '
            ,p_level    => C_LEVEL_STATEMENT
            ,p_module   => l_log_module);
      END IF;

--
-- set the XLA_AE_JOURNAL_ENTRY_PKG.g_global_status to C_VALID (0)
--
XLA_AE_JOURNAL_ENTRY_PKG.g_global_status := XLA_AE_JOURNAL_ENTRY_PKG.C_VALID;
--
-- set event info as cache for other routines to refer event attributes
--

IF l_event_id <> NVL(l_previous_event_id, -1) THEN
   l_previous_event_id := l_event_id;

   XLA_AE_JOURNAL_ENTRY_PKG.set_event_info
      (p_application_id           => p_application_id
      ,p_primary_ledger_id        => p_primary_ledger_id
      ,p_base_ledger_id           => p_base_ledger_id
      ,p_target_ledger_id         => p_target_ledger_id
      ,p_entity_id                => l_array_entity_id(Idx)
      ,p_legal_entity_id          => l_array_legal_entity_id(Idx)
      ,p_entity_code              => l_array_entity_code(Idx)
      ,p_transaction_num          => l_array_transaction_num(Idx)
      ,p_event_id                 => l_array_event_id(Idx)
      ,p_event_class_code         => l_array_class_code(Idx)
      ,p_event_type_code          => l_array_event_type(Idx)
      ,p_event_number             => l_array_event_number(Idx)
      ,p_event_date               => l_array_event_date(Idx)
      ,p_transaction_date         => l_array_transaction_date(Idx)
      ,p_reference_num_1          => l_array_reference_num_1(Idx)
      ,p_reference_num_2          => l_array_reference_num_2(Idx)
      ,p_reference_num_3          => l_array_reference_num_3(Idx)
      ,p_reference_num_4          => l_array_reference_num_4(Idx)
      ,p_reference_char_1         => l_array_reference_char_1(Idx)
      ,p_reference_char_2         => l_array_reference_char_2(Idx)
      ,p_reference_char_3         => l_array_reference_char_3(Idx)
      ,p_reference_char_4         => l_array_reference_char_4(Idx)
      ,p_reference_date_1         => l_array_reference_date_1(Idx)
      ,p_reference_date_2         => l_array_reference_date_2(Idx)
      ,p_reference_date_3         => l_array_reference_date_3(Idx)
      ,p_reference_date_4         => l_array_reference_date_4(Idx)
      ,p_event_created_by         => l_array_event_created_by(Idx)
      ,p_budgetary_control_flag   => l_array_budgetary_control_flag(Idx));
       --
END IF;



--
xla_ae_lines_pkg.SetExtractLine(p_extract_line => l_array_extract_line_num(Idx));

l_acct_reversal_source := SUBSTR(l_array_source_85(Idx), 1,30);

IF l_continue_with_lines THEN
   IF NVL(l_acct_reversal_source, 'N') NOT IN ('N','Y','B') THEN
      xla_ae_journal_entry_pkg.g_global_status      :=  xla_ae_journal_entry_pkg.C_INVALID;

      xla_accounting_err_pkg.build_message
         (p_appli_s_name            => 'XLA'
         ,p_msg_name                => 'XLA_AP_INVALID_REVERSAL_OPTION'
         ,p_token_1                 => 'LINE_NUMBER'
         ,p_value_1                 => l_array_extract_line_num(Idx)
         ,p_token_2                 => 'PRODUCT_NAME'
         ,p_value_2                 => xla_ae_journal_entry_pkg.g_cache_event.application_name
         ,p_entity_id               => xla_ae_journal_entry_pkg.g_cache_event.entity_id
         ,p_event_id                => xla_ae_journal_entry_pkg.g_cache_event.event_id
         ,p_ledger_id               => xla_ae_journal_entry_pkg.g_cache_event.target_ledger_id);

   ELSIF NVL(l_acct_reversal_source, 'N') IN ('Y','B') THEN
      --
      -- following sets the accounting attributes needed to reverse
      -- accounting for a distributeion
      --

      --
      -- 5217187
      --
      l_rec_rev_acct_attrs.array_acct_attr_code(1):= 'GL_DATE';
      l_rec_rev_acct_attrs.array_date_value(1) := XLA_AE_HEADER_PKG.g_rec_header_new.array_gl_date(
                                       g_array_event(l_event_id).array_value_num('header_index'));
      --
      --

      l_rec_rev_acct_attrs.array_acct_attr_code(2) := 'ACCOUNTING_REVERSAL_OPTION';
      l_rec_rev_acct_attrs.array_char_value(2)  := l_array_source_85(Idx);
      l_rec_rev_acct_attrs.array_acct_attr_code(3) := 'DISTRIBUTION_IDENTIFIER_1';
      l_rec_rev_acct_attrs.array_num_value(3)  := l_array_source_30(Idx);
      l_rec_rev_acct_attrs.array_acct_attr_code(4) := 'DISTRIBUTION_IDENTIFIER_2';
      l_rec_rev_acct_attrs.array_char_value(4)  := l_array_source_96(Idx);
      l_rec_rev_acct_attrs.array_acct_attr_code(5) := 'DISTRIBUTION_TYPE';
      l_rec_rev_acct_attrs.array_char_value(5)  := l_array_source_21(Idx);
      l_rec_rev_acct_attrs.array_acct_attr_code(6) := 'ENC_UPG_CR_ACCT_CLASS';
      l_rec_rev_acct_attrs.array_char_value(6)  := l_array_source_97(Idx);
      l_rec_rev_acct_attrs.array_acct_attr_code(7) := 'ENC_UPG_CR_CCID';
      l_rec_rev_acct_attrs.array_num_value(7)  := l_array_source_98(Idx);
      l_rec_rev_acct_attrs.array_acct_attr_code(8) := 'ENC_UPG_CR_ENTERED_AMT';
      l_rec_rev_acct_attrs.array_num_value(8)  := l_array_source_57(Idx);
      l_rec_rev_acct_attrs.array_acct_attr_code(9) := 'ENC_UPG_CR_ENTERED_CURR';
      l_rec_rev_acct_attrs.array_char_value(9)  := l_array_source_33(Idx);
      l_rec_rev_acct_attrs.array_acct_attr_code(10) := 'ENC_UPG_CR_LEDGER_AMT';
      l_rec_rev_acct_attrs.array_num_value(10)  := l_array_source_99(Idx);
      l_rec_rev_acct_attrs.array_acct_attr_code(11) := 'ENC_UPG_DR_ACCT_CLASS';
      l_rec_rev_acct_attrs.array_char_value(11)  := l_array_source_100(Idx);
      l_rec_rev_acct_attrs.array_acct_attr_code(12) := 'ENC_UPG_DR_CCID';
      l_rec_rev_acct_attrs.array_num_value(12)  := l_array_source_101(Idx);
      l_rec_rev_acct_attrs.array_acct_attr_code(13) := 'ENC_UPG_DR_ENTERED_AMT';
      l_rec_rev_acct_attrs.array_num_value(13)  := l_array_source_57(Idx);
      l_rec_rev_acct_attrs.array_acct_attr_code(14) := 'ENC_UPG_DR_ENTERED_CURR';
      l_rec_rev_acct_attrs.array_char_value(14)  := l_array_source_33(Idx);
      l_rec_rev_acct_attrs.array_acct_attr_code(15) := 'ENC_UPG_DR_LEDGER_AMT';
      l_rec_rev_acct_attrs.array_num_value(15)  := l_array_source_99(Idx);
      l_rec_rev_acct_attrs.array_acct_attr_code(16) := 'ENC_UPG_OPTION';
      l_rec_rev_acct_attrs.array_char_value(16)  := l_array_source_102(Idx);
      l_rec_rev_acct_attrs.array_acct_attr_code(17) := 'REVERSED_DISTRIBUTION_ID1';
      l_rec_rev_acct_attrs.array_num_value(17)  := l_array_source_103(Idx);
      l_rec_rev_acct_attrs.array_acct_attr_code(18) := 'REVERSED_DISTRIBUTION_ID2';
      l_rec_rev_acct_attrs.array_char_value(18)  := l_array_source_104(Idx);
      l_rec_rev_acct_attrs.array_acct_attr_code(19) := 'REVERSED_DISTRIBUTION_TYPE';
      l_rec_rev_acct_attrs.array_char_value(19)  := l_array_source_105(Idx);
      l_rec_rev_acct_attrs.array_acct_attr_code(20) := 'UPG_CR_ENC_TYPE_ID';
      l_rec_rev_acct_attrs.array_num_value(20)  := l_array_source_106(Idx);
      l_rec_rev_acct_attrs.array_acct_attr_code(21) := 'UPG_DR_ENC_TYPE_ID';
      l_rec_rev_acct_attrs.array_num_value(21)  := l_array_source_107(Idx);


      xla_ae_lines_pkg.SetAcctReversalAttrs
         (p_event_id             => l_event_id
         ,p_rec_acct_attrs       => l_rec_rev_acct_attrs
         ,p_calculate_acctd_flag => l_calculate_acctd_flag
         ,p_calculate_g_l_flag   => l_calculate_g_l_flag);
   END IF;

   IF NVL(l_acct_reversal_source, 'N') IN ('N','B') THEN
       l_actual_flag := NULL;  l_actual_gain_loss_ref := '#####';

--
AcctLineType_85 (
 p_application_id  => p_application_id
 ,p_event_id     => l_event_id
 ,p_calculate_acctd_flag => l_calculate_acctd_flag
 ,p_calculate_g_l_flag => l_calculate_g_l_flag
 ,p_actual_flag => l_actual_flag
 ,p_balance_type_code => l_balance_type_code
 ,p_gain_or_loss_ref=> l_gain_or_loss_ref
 
 , p_source_2 => l_array_source_2(Idx)
 , p_source_3 => l_array_source_3(Idx)
 , p_source_4 => l_array_source_4(Idx)
 , p_source_5 => l_array_source_5(Idx)
 , p_source_14 => l_array_source_14(Idx)
 , p_source_21 => l_array_source_21(Idx)
 , p_source_30 => l_array_source_30(Idx)
 , p_source_33 => l_array_source_33(Idx)
 , p_source_39 => l_array_source_39(Idx)
 , p_source_40 => l_array_source_40(Idx)
 , p_source_41 => l_array_source_41(Idx)
 , p_source_57 => l_array_source_57(Idx)
 , p_source_83 => l_array_source_83(Idx)
 , p_source_84 => l_array_source_84(Idx)
 , p_source_85 => l_array_source_85(Idx)
 , p_source_86 => l_array_source_86(Idx)
 , p_source_87 => l_array_source_87(Idx)
 , p_source_88 => l_array_source_88(Idx)
 , p_source_89 => l_array_source_89(Idx)
 , p_source_90 => l_array_source_90(Idx)
 , p_source_91 => l_array_source_91(Idx)
 , p_source_92 => l_array_source_92(Idx)
 , p_source_93 => l_array_source_93(Idx)
 , p_source_94 => l_array_source_94(Idx)
 , p_source_95 => l_array_source_95(Idx)
 , p_source_96 => l_array_source_96(Idx)
 , p_source_97 => l_array_source_97(Idx)
 , p_source_98 => l_array_source_98(Idx)
 , p_source_99 => l_array_source_99(Idx)
 , p_source_100 => l_array_source_100(Idx)
 , p_source_101 => l_array_source_101(Idx)
 , p_source_102 => l_array_source_102(Idx)
 , p_source_103 => l_array_source_103(Idx)
 , p_source_104 => l_array_source_104(Idx)
 , p_source_105 => l_array_source_105(Idx)
 , p_source_106 => l_array_source_106(Idx)
 , p_source_107 => l_array_source_107(Idx)
 );
If(l_balance_type_code = 'A') THEN
  l_actual_gain_loss_ref := l_gain_or_loss_ref;
END IF;

--


--
AcctLineType_86 (
 p_application_id  => p_application_id
 ,p_event_id     => l_event_id
 ,p_calculate_acctd_flag => l_calculate_acctd_flag
 ,p_calculate_g_l_flag => l_calculate_g_l_flag
 ,p_actual_flag => l_actual_flag
 ,p_balance_type_code => l_balance_type_code
 ,p_gain_or_loss_ref=> l_gain_or_loss_ref
 
 , p_source_2 => l_array_source_2(Idx)
 , p_source_3 => l_array_source_3(Idx)
 , p_source_4 => l_array_source_4(Idx)
 , p_source_5 => l_array_source_5(Idx)
 , p_source_14 => l_array_source_14(Idx)
 , p_source_21 => l_array_source_21(Idx)
 , p_source_30 => l_array_source_30(Idx)
 , p_source_33 => l_array_source_33(Idx)
 , p_source_39 => l_array_source_39(Idx)
 , p_source_40 => l_array_source_40(Idx)
 , p_source_41 => l_array_source_41(Idx)
 , p_source_57 => l_array_source_57(Idx)
 , p_source_83 => l_array_source_83(Idx)
 , p_source_84 => l_array_source_84(Idx)
 , p_source_85 => l_array_source_85(Idx)
 , p_source_86 => l_array_source_86(Idx)
 , p_source_87 => l_array_source_87(Idx)
 , p_source_88 => l_array_source_88(Idx)
 , p_source_89 => l_array_source_89(Idx)
 , p_source_90 => l_array_source_90(Idx)
 , p_source_91 => l_array_source_91(Idx)
 , p_source_92 => l_array_source_92(Idx)
 , p_source_93 => l_array_source_93(Idx)
 , p_source_94 => l_array_source_94(Idx)
 , p_source_95 => l_array_source_95(Idx)
 , p_source_96 => l_array_source_96(Idx)
 , p_source_97 => l_array_source_97(Idx)
 , p_source_98 => l_array_source_98(Idx)
 , p_source_99 => l_array_source_99(Idx)
 , p_source_100 => l_array_source_100(Idx)
 , p_source_101 => l_array_source_101(Idx)
 , p_source_102 => l_array_source_102(Idx)
 , p_source_103 => l_array_source_103(Idx)
 , p_source_104 => l_array_source_104(Idx)
 , p_source_105 => l_array_source_105(Idx)
 , p_source_106 => l_array_source_106(Idx)
 , p_source_107 => l_array_source_107(Idx)
 , p_source_108 => l_array_source_108(Idx)
 , p_source_108_meaning => l_array_source_108_meaning(Idx)
 );
If(l_balance_type_code = 'A') THEN
  l_actual_gain_loss_ref := l_gain_or_loss_ref;
END IF;

--


--
AcctLineType_93 (
 p_application_id  => p_application_id
 ,p_event_id     => l_event_id
 ,p_calculate_acctd_flag => l_calculate_acctd_flag
 ,p_calculate_g_l_flag => l_calculate_g_l_flag
 ,p_actual_flag => l_actual_flag
 ,p_balance_type_code => l_balance_type_code
 ,p_gain_or_loss_ref=> l_gain_or_loss_ref
 
 , p_source_2 => l_array_source_2(Idx)
 , p_source_3 => l_array_source_3(Idx)
 , p_source_4 => l_array_source_4(Idx)
 , p_source_5 => l_array_source_5(Idx)
 , p_source_21 => l_array_source_21(Idx)
 , p_source_30 => l_array_source_30(Idx)
 , p_source_33 => l_array_source_33(Idx)
 , p_source_57 => l_array_source_57(Idx)
 , p_source_83 => l_array_source_83(Idx)
 , p_source_85 => l_array_source_85(Idx)
 , p_source_86 => l_array_source_86(Idx)
 , p_source_87 => l_array_source_87(Idx)
 , p_source_88 => l_array_source_88(Idx)
 , p_source_89 => l_array_source_89(Idx)
 , p_source_90 => l_array_source_90(Idx)
 , p_source_96 => l_array_source_96(Idx)
 , p_source_97 => l_array_source_97(Idx)
 , p_source_98 => l_array_source_98(Idx)
 , p_source_99 => l_array_source_99(Idx)
 , p_source_100 => l_array_source_100(Idx)
 , p_source_101 => l_array_source_101(Idx)
 , p_source_102 => l_array_source_102(Idx)
 , p_source_103 => l_array_source_103(Idx)
 , p_source_104 => l_array_source_104(Idx)
 , p_source_105 => l_array_source_105(Idx)
 , p_source_106 => l_array_source_106(Idx)
 , p_source_107 => l_array_source_107(Idx)
 , p_source_109 => l_array_source_109(Idx)
 , p_source_110 => l_array_source_110(Idx)
 , p_source_111 => l_array_source_111(Idx)
 , p_source_112 => l_array_source_112(Idx)
 , p_source_113 => l_array_source_113(Idx)
 , p_source_114 => l_array_source_114(Idx)
 );
If(l_balance_type_code = 'A') THEN
  l_actual_gain_loss_ref := l_gain_or_loss_ref;
END IF;

--


--
AcctLineType_96 (
 p_application_id  => p_application_id
 ,p_event_id     => l_event_id
 ,p_calculate_acctd_flag => l_calculate_acctd_flag
 ,p_calculate_g_l_flag => l_calculate_g_l_flag
 ,p_actual_flag => l_actual_flag
 ,p_balance_type_code => l_balance_type_code
 ,p_gain_or_loss_ref=> l_gain_or_loss_ref
 
 , p_source_2 => l_array_source_2(Idx)
 , p_source_3 => l_array_source_3(Idx)
 , p_source_4 => l_array_source_4(Idx)
 , p_source_5 => l_array_source_5(Idx)
 , p_source_21 => l_array_source_21(Idx)
 , p_source_30 => l_array_source_30(Idx)
 , p_source_33 => l_array_source_33(Idx)
 , p_source_57 => l_array_source_57(Idx)
 , p_source_83 => l_array_source_83(Idx)
 , p_source_85 => l_array_source_85(Idx)
 , p_source_86 => l_array_source_86(Idx)
 , p_source_87 => l_array_source_87(Idx)
 , p_source_88 => l_array_source_88(Idx)
 , p_source_89 => l_array_source_89(Idx)
 , p_source_90 => l_array_source_90(Idx)
 , p_source_96 => l_array_source_96(Idx)
 , p_source_97 => l_array_source_97(Idx)
 , p_source_98 => l_array_source_98(Idx)
 , p_source_99 => l_array_source_99(Idx)
 , p_source_100 => l_array_source_100(Idx)
 , p_source_101 => l_array_source_101(Idx)
 , p_source_102 => l_array_source_102(Idx)
 , p_source_103 => l_array_source_103(Idx)
 , p_source_104 => l_array_source_104(Idx)
 , p_source_105 => l_array_source_105(Idx)
 , p_source_106 => l_array_source_106(Idx)
 , p_source_107 => l_array_source_107(Idx)
 , p_source_109 => l_array_source_109(Idx)
 , p_source_110 => l_array_source_110(Idx)
 , p_source_111 => l_array_source_111(Idx)
 , p_source_112 => l_array_source_112(Idx)
 , p_source_113 => l_array_source_113(Idx)
 , p_source_114 => l_array_source_114(Idx)
 );
If(l_balance_type_code = 'A') THEN
  l_actual_gain_loss_ref := l_gain_or_loss_ref;
END IF;

--


--
AcctLineType_99 (
 p_application_id  => p_application_id
 ,p_event_id     => l_event_id
 ,p_calculate_acctd_flag => l_calculate_acctd_flag
 ,p_calculate_g_l_flag => l_calculate_g_l_flag
 ,p_actual_flag => l_actual_flag
 ,p_balance_type_code => l_balance_type_code
 ,p_gain_or_loss_ref=> l_gain_or_loss_ref
 
 , p_source_2 => l_array_source_2(Idx)
 , p_source_3 => l_array_source_3(Idx)
 , p_source_4 => l_array_source_4(Idx)
 , p_source_5 => l_array_source_5(Idx)
 , p_source_21 => l_array_source_21(Idx)
 , p_source_30 => l_array_source_30(Idx)
 , p_source_33 => l_array_source_33(Idx)
 , p_source_57 => l_array_source_57(Idx)
 , p_source_83 => l_array_source_83(Idx)
 , p_source_84 => l_array_source_84(Idx)
 , p_source_85 => l_array_source_85(Idx)
 , p_source_86 => l_array_source_86(Idx)
 , p_source_87 => l_array_source_87(Idx)
 , p_source_88 => l_array_source_88(Idx)
 , p_source_89 => l_array_source_89(Idx)
 , p_source_90 => l_array_source_90(Idx)
 , p_source_96 => l_array_source_96(Idx)
 , p_source_97 => l_array_source_97(Idx)
 , p_source_98 => l_array_source_98(Idx)
 , p_source_99 => l_array_source_99(Idx)
 , p_source_100 => l_array_source_100(Idx)
 , p_source_101 => l_array_source_101(Idx)
 , p_source_102 => l_array_source_102(Idx)
 , p_source_103 => l_array_source_103(Idx)
 , p_source_104 => l_array_source_104(Idx)
 , p_source_105 => l_array_source_105(Idx)
 , p_source_106 => l_array_source_106(Idx)
 , p_source_107 => l_array_source_107(Idx)
 , p_source_115 => l_array_source_115(Idx)
 , p_source_116 => l_array_source_116(Idx)
 , p_source_117 => l_array_source_117(Idx)
 , p_source_118 => l_array_source_118(Idx)
 , p_source_119 => l_array_source_119(Idx)
 , p_source_120 => l_array_source_120(Idx)
 , p_source_121 => l_array_source_121(Idx)
 );
If(l_balance_type_code = 'A') THEN
  l_actual_gain_loss_ref := l_gain_or_loss_ref;
END IF;

--


--
AcctLineType_100 (
 p_application_id  => p_application_id
 ,p_event_id     => l_event_id
 ,p_calculate_acctd_flag => l_calculate_acctd_flag
 ,p_calculate_g_l_flag => l_calculate_g_l_flag
 ,p_actual_flag => l_actual_flag
 ,p_balance_type_code => l_balance_type_code
 ,p_gain_or_loss_ref=> l_gain_or_loss_ref
 
 , p_source_2 => l_array_source_2(Idx)
 , p_source_3 => l_array_source_3(Idx)
 , p_source_4 => l_array_source_4(Idx)
 , p_source_5 => l_array_source_5(Idx)
 , p_source_21 => l_array_source_21(Idx)
 , p_source_30 => l_array_source_30(Idx)
 , p_source_33 => l_array_source_33(Idx)
 , p_source_57 => l_array_source_57(Idx)
 , p_source_83 => l_array_source_83(Idx)
 , p_source_84 => l_array_source_84(Idx)
 , p_source_85 => l_array_source_85(Idx)
 , p_source_86 => l_array_source_86(Idx)
 , p_source_87 => l_array_source_87(Idx)
 , p_source_88 => l_array_source_88(Idx)
 , p_source_89 => l_array_source_89(Idx)
 , p_source_90 => l_array_source_90(Idx)
 , p_source_96 => l_array_source_96(Idx)
 , p_source_97 => l_array_source_97(Idx)
 , p_source_98 => l_array_source_98(Idx)
 , p_source_99 => l_array_source_99(Idx)
 , p_source_100 => l_array_source_100(Idx)
 , p_source_101 => l_array_source_101(Idx)
 , p_source_102 => l_array_source_102(Idx)
 , p_source_103 => l_array_source_103(Idx)
 , p_source_104 => l_array_source_104(Idx)
 , p_source_105 => l_array_source_105(Idx)
 , p_source_106 => l_array_source_106(Idx)
 , p_source_107 => l_array_source_107(Idx)
 , p_source_108 => l_array_source_108(Idx)
 , p_source_108_meaning => l_array_source_108_meaning(Idx)
 , p_source_115 => l_array_source_115(Idx)
 , p_source_116 => l_array_source_116(Idx)
 , p_source_117 => l_array_source_117(Idx)
 , p_source_118 => l_array_source_118(Idx)
 , p_source_119 => l_array_source_119(Idx)
 , p_source_120 => l_array_source_120(Idx)
 , p_source_121 => l_array_source_121(Idx)
 );
If(l_balance_type_code = 'A') THEN
  l_actual_gain_loss_ref := l_gain_or_loss_ref;
END IF;

--


--
AcctLineType_101 (
 p_application_id  => p_application_id
 ,p_event_id     => l_event_id
 ,p_calculate_acctd_flag => l_calculate_acctd_flag
 ,p_calculate_g_l_flag => l_calculate_g_l_flag
 ,p_actual_flag => l_actual_flag
 ,p_balance_type_code => l_balance_type_code
 ,p_gain_or_loss_ref=> l_gain_or_loss_ref
 
 , p_source_2 => l_array_source_2(Idx)
 , p_source_3 => l_array_source_3(Idx)
 , p_source_4 => l_array_source_4(Idx)
 , p_source_5 => l_array_source_5(Idx)
 , p_source_21 => l_array_source_21(Idx)
 , p_source_30 => l_array_source_30(Idx)
 , p_source_33 => l_array_source_33(Idx)
 , p_source_57 => l_array_source_57(Idx)
 , p_source_83 => l_array_source_83(Idx)
 , p_source_84 => l_array_source_84(Idx)
 , p_source_85 => l_array_source_85(Idx)
 , p_source_86 => l_array_source_86(Idx)
 , p_source_87 => l_array_source_87(Idx)
 , p_source_88 => l_array_source_88(Idx)
 , p_source_89 => l_array_source_89(Idx)
 , p_source_90 => l_array_source_90(Idx)
 , p_source_96 => l_array_source_96(Idx)
 , p_source_97 => l_array_source_97(Idx)
 , p_source_98 => l_array_source_98(Idx)
 , p_source_99 => l_array_source_99(Idx)
 , p_source_100 => l_array_source_100(Idx)
 , p_source_101 => l_array_source_101(Idx)
 , p_source_102 => l_array_source_102(Idx)
 , p_source_103 => l_array_source_103(Idx)
 , p_source_104 => l_array_source_104(Idx)
 , p_source_105 => l_array_source_105(Idx)
 , p_source_106 => l_array_source_106(Idx)
 , p_source_107 => l_array_source_107(Idx)
 , p_source_115 => l_array_source_115(Idx)
 , p_source_116 => l_array_source_116(Idx)
 , p_source_117 => l_array_source_117(Idx)
 , p_source_118 => l_array_source_118(Idx)
 , p_source_119 => l_array_source_119(Idx)
 , p_source_120 => l_array_source_120(Idx)
 , p_source_121 => l_array_source_121(Idx)
 );
If(l_balance_type_code = 'A') THEN
  l_actual_gain_loss_ref := l_gain_or_loss_ref;
END IF;

--


--
AcctLineType_102 (
 p_application_id  => p_application_id
 ,p_event_id     => l_event_id
 ,p_calculate_acctd_flag => l_calculate_acctd_flag
 ,p_calculate_g_l_flag => l_calculate_g_l_flag
 ,p_actual_flag => l_actual_flag
 ,p_balance_type_code => l_balance_type_code
 ,p_gain_or_loss_ref=> l_gain_or_loss_ref
 
 , p_source_2 => l_array_source_2(Idx)
 , p_source_3 => l_array_source_3(Idx)
 , p_source_4 => l_array_source_4(Idx)
 , p_source_5 => l_array_source_5(Idx)
 , p_source_21 => l_array_source_21(Idx)
 , p_source_30 => l_array_source_30(Idx)
 , p_source_33 => l_array_source_33(Idx)
 , p_source_57 => l_array_source_57(Idx)
 , p_source_83 => l_array_source_83(Idx)
 , p_source_84 => l_array_source_84(Idx)
 , p_source_85 => l_array_source_85(Idx)
 , p_source_86 => l_array_source_86(Idx)
 , p_source_87 => l_array_source_87(Idx)
 , p_source_88 => l_array_source_88(Idx)
 , p_source_89 => l_array_source_89(Idx)
 , p_source_90 => l_array_source_90(Idx)
 , p_source_96 => l_array_source_96(Idx)
 , p_source_97 => l_array_source_97(Idx)
 , p_source_98 => l_array_source_98(Idx)
 , p_source_99 => l_array_source_99(Idx)
 , p_source_100 => l_array_source_100(Idx)
 , p_source_101 => l_array_source_101(Idx)
 , p_source_102 => l_array_source_102(Idx)
 , p_source_103 => l_array_source_103(Idx)
 , p_source_104 => l_array_source_104(Idx)
 , p_source_105 => l_array_source_105(Idx)
 , p_source_106 => l_array_source_106(Idx)
 , p_source_107 => l_array_source_107(Idx)
 , p_source_108 => l_array_source_108(Idx)
 , p_source_108_meaning => l_array_source_108_meaning(Idx)
 , p_source_115 => l_array_source_115(Idx)
 , p_source_116 => l_array_source_116(Idx)
 , p_source_117 => l_array_source_117(Idx)
 , p_source_118 => l_array_source_118(Idx)
 , p_source_119 => l_array_source_119(Idx)
 , p_source_120 => l_array_source_120(Idx)
 , p_source_121 => l_array_source_121(Idx)
 );
If(l_balance_type_code = 'A') THEN
  l_actual_gain_loss_ref := l_gain_or_loss_ref;
END IF;

--

      -- only execute it if calculate g/l flag is yes, and primary or secondary ledger
      -- or secondary ledger that has different currency with primary
      -- or alc that is calculated by sla
      IF (((l_calculate_g_l_flag = 'Y' AND XLA_AE_JOURNAL_ENTRY_PKG.g_cache_ledgers_info.ledger_category_code <> 'ALC') or
            (XLA_AE_JOURNAL_ENTRY_PKG.g_cache_ledgers_info.ledger_category_code in ('ALC', 'SECONDARY') AND XLA_AE_JOURNAL_ENTRY_PKG.g_cache_ledgers_info.calculate_amts_flag='Y'))

--      IF((l_calculate_g_l_flag='Y' or XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id <>
--                    XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.ledger_id)
          AND (l_actual_flag = 'A')) THEN
        XLA_AE_LINES_PKG.CreateGainOrLossLines(
          p_event_id         => xla_ae_journal_entry_pkg.g_cache_event.event_id
         ,p_application_id   => p_application_id
         ,p_amb_context_code => 'DEFAULT'
         ,p_entity_code      => xla_ae_journal_entry_pkg.g_cache_event.entity_code
         ,p_event_class_code => C_EVENT_CLASS_CODE
         ,p_event_type_code  => C_EVENT_TYPE_CODE
         
         ,p_gain_ccid        => -1
         ,p_loss_ccid        => -1

         ,p_actual_flag      => l_actual_flag
         ,p_enc_flag         => null
         ,p_actual_g_l_ref   => l_actual_gain_loss_ref
         ,p_enc_g_l_ref      => null
         );
      END IF;
   END IF;
END IF;

   ELSE
      --
      -- Bug 4872078 - Do nothing if the event is meant for transaction reversal
      --
      IF (C_LEVEL_STATEMENT >= g_log_level) THEN
         trace
            (p_msg      => 'Trancaction revesal option is Y'
            ,p_level    => C_LEVEL_STATEMENT
            ,p_module   => l_log_module);
      END IF;
   END IF;

END LOOP;
l_result := XLA_AE_LINES_PKG.InsertLines ;
end loop;
close line_cur;


--
-- insert headers into xla_ae_headers_gt table
--
l_result := XLA_AE_HEADER_PKG.InsertHeaders ;

-- insert into errors table here.

END LOOP;

--
-- 4865292
--
-- Compare g_hdr_extract_count with event count in
-- CreateHeadersAndLines.
--
g_hdr_extract_count := g_hdr_extract_count + header_cur%ROWCOUNT;

IF (C_LEVEL_STATEMENT >= g_log_level) THEN
   trace (p_msg     => '# rows extracted from header extract objects '
                    || ' (running total): '
                    || g_hdr_extract_count
         ,p_level   => C_LEVEL_STATEMENT
         ,p_module  => l_log_module);
END IF;

CLOSE header_cur;
--

--
IF (C_LEVEL_PROCEDURE >= g_log_level) THEN
   trace
      (p_msg      => 'END of EventClass_106'
      ,p_level    => C_LEVEL_PROCEDURE
      ,p_module   => l_log_module);
END IF;
--
RETURN l_result;
EXCEPTION
WHEN xla_exceptions_pkg.application_exception THEN
   
IF header_cur%ISOPEN THEN CLOSE header_cur; END IF;

   
IF line_cur%ISOPEN   THEN CLOSE line_cur;   END IF;

   RAISE;

WHEN NO_DATA_FOUND THEN

IF header_cur%ISOPEN THEN CLOSE header_cur; END IF;
IF line_cur%ISOPEN   THEN CLOSE line_cur;   END IF;

FOR header_record IN header_cur
LOOP
    l_array_header_events(header_record.event_id) := header_record.event_id;
END LOOP;

l_first_event_id := l_array_header_events(l_array_header_events.FIRST);
l_last_event_id := l_array_header_events(l_array_header_events.LAST);

fnd_file.put_line(fnd_file.LOG, '                    ');
fnd_file.put_line(fnd_file.LOG, '***************************************************************************');
fnd_file.put_line(fnd_file.LOG, 'EVENT CLASS CODE = ' || C_EVENT_CLASS_CODE );
fnd_file.put_line(fnd_file.LOG, 'The following events are present in the line extract but MISSING in the header extract: ');

FOR line_record IN line_cur(l_first_event_id, l_last_event_id)
LOOP
	IF (NOT l_array_header_events.EXISTS(line_record.event_id))  AND (NOT l_array_duplicate_checker.EXISTS(line_record.event_id)) THEN
	fnd_file.put_line(fnd_file.log, 'Event_id = ' || line_record.event_id);
        l_array_duplicate_checker(line_record.event_id) := line_record.event_id;
	END IF;
END LOOP;

fnd_file.put_line(fnd_file.LOG, '***************************************************************************');
fnd_file.put_line(fnd_file.LOG, '                    ');


xla_exceptions_pkg.raise_message
      (p_location => 'XLA_00200_AAD_S_000010_BC_PKG.EventClass_106');


WHEN OTHERS THEN
   xla_exceptions_pkg.raise_message
      (p_location => 'XLA_00200_AAD_S_000010_BC_PKG.EventClass_106');
END EventClass_106;
--

---------------------------------------
--
-- PRIVATE PROCEDURE
--         insert_sources_107
--
----------------------------------------
--
PROCEDURE insert_sources_107(
                                p_target_ledger_id       IN NUMBER
                              , p_language               IN VARCHAR2
                              , p_sla_ledger_id          IN NUMBER
                              , p_pad_start_date         IN DATE
                              , p_pad_end_date           IN DATE
                         )
IS

C_EVENT_TYPE_CODE    CONSTANT  VARCHAR2(30)  := 'PREPAYMENT APPLICATIONS_ALL';
C_EVENT_CLASS_CODE   CONSTANT  VARCHAR2(30) := 'PREPAYMENT APPLICATIONS';
p_apps_owner                   VARCHAR2(30);
l_log_module                   VARCHAR2(240);
BEGIN
IF g_log_enabled THEN
      l_log_module := C_DEFAULT_MODULE||'.insert_sources_107';
END IF;
IF (C_LEVEL_PROCEDURE >= g_log_level) THEN

      trace
         (p_msg      => 'BEGIN of insert_sources_107'
         ,p_level    => C_LEVEL_PROCEDURE
         ,p_module   => l_log_module);

END IF;

-- select APPS owner
SELECT oracle_username
  INTO p_apps_owner
  FROM fnd_oracle_userid
 WHERE read_only_flag = 'U'
;

IF (C_LEVEL_STATEMENT >= g_log_level) THEN
      trace
         (p_msg      => 'p_target_ledger_id = '||p_target_ledger_id||
                        ' - p_language = '||p_language||
                        ' - p_sla_ledger_id  = '||p_sla_ledger_id ||
                        ' - p_pad_start_date = '||TO_CHAR(p_pad_start_date)||
                        ' - p_pad_end_date = '||TO_CHAR(p_pad_end_date)||
                        ' - p_apps_owner = '||TO_CHAR(p_apps_owner)
         ,p_level    => C_LEVEL_STATEMENT
         ,p_module   => l_log_module);
END IF;


--
INSERT INTO xla_diag_sources --hdr2
(
        event_id
      , ledger_id
      , sla_ledger_id
      , description_language
      , object_name
      , object_type_code
      , line_number
      , source_application_id
      , source_type_code
      , source_code
      , source_value
      , source_meaning
      , created_by
      , creation_date
      , last_update_date
      , last_updated_by
      , last_update_login
      , program_update_date
      , program_application_id
      , program_id
      , request_id
)
SELECT
        event_id
      , p_target_ledger_id
      , p_sla_ledger_id
      , p_language
      , object_name
      , object_type_code
      , line_number
      , source_application_id
      , source_type_code
      , source_code
      , SUBSTR(source_value ,1,1996)
      , SUBSTR(source_meaning ,1,200)
      , xla_environment_pkg.g_Usr_Id
      , TRUNC(SYSDATE)
      , TRUNC(SYSDATE)
      , xla_environment_pkg.g_Usr_Id
      , xla_environment_pkg.g_Login_Id
      , TRUNC(SYSDATE)
      , xla_environment_pkg.g_Prog_Appl_Id
      , xla_environment_pkg.g_Prog_Id
      , xla_environment_pkg.g_Req_Id
  FROM (
       SELECT xet.event_id                  event_id
            , 0                          line_number
            , CASE r
               WHEN 1 THEN 'AP_SYSTEM_PARAMETERS_EXTRACT_V' 
                WHEN 2 THEN 'AP_INVOICE_EXTRACT_HEADER_V' 
                WHEN 3 THEN 'AP_INVOICE_EXTRACT_HEADER_V' 
                WHEN 4 THEN 'AP_INVOICE_EXTRACT_HEADER_V' 
                WHEN 5 THEN 'AP_INVOICE_EXTRACT_HEADER_V' 
                WHEN 6 THEN 'AP_INVOICE_EXTRACT_HEADER_V' 
                WHEN 7 THEN 'AP_INVOICE_EXTRACT_HEADER_V' 
                
               ELSE null
              END                           object_name
            , CASE r
                WHEN 1 THEN 'HEADER' 
                WHEN 2 THEN 'HEADER' 
                WHEN 3 THEN 'HEADER' 
                WHEN 4 THEN 'HEADER' 
                WHEN 5 THEN 'HEADER' 
                WHEN 6 THEN 'HEADER' 
                WHEN 7 THEN 'HEADER' 
                
                ELSE null
              END                           object_type_code
            , CASE r
                WHEN 1 THEN '200' 
                WHEN 2 THEN '200' 
                WHEN 3 THEN '200' 
                WHEN 4 THEN '200' 
                WHEN 5 THEN '200' 
                WHEN 6 THEN '200' 
                WHEN 7 THEN '200' 
                
                ELSE null
              END                           source_application_id
            , 'S'             source_type_code
            , CASE r
                WHEN 1 THEN 'FSP_PURCH_ENCUMBRANCE_FLAG' 
                WHEN 2 THEN 'AI_INVOICE_ID' 
                WHEN 3 THEN 'AI_INVOICE_CURRENCY_CODE' 
                WHEN 4 THEN 'THIRD_PARTY_TYPE' 
                WHEN 5 THEN 'INV_DOC_SEQUENCE_CATEGORY' 
                WHEN 6 THEN 'INV_DOC_SEQUENCE_IDENTIFIER' 
                WHEN 7 THEN 'INV_DOC_SEQUENCE_VALUE' 
                
                ELSE null
              END                           source_code
            , CASE r
                WHEN 1 THEN TO_CHAR(h3.FSP_PURCH_ENCUMBRANCE_FLAG)
                WHEN 2 THEN TO_CHAR(h1.AI_INVOICE_ID)
                WHEN 3 THEN TO_CHAR(h1.AI_INVOICE_CURRENCY_CODE)
                WHEN 4 THEN TO_CHAR(h1.THIRD_PARTY_TYPE)
                WHEN 5 THEN TO_CHAR(h1.INV_DOC_SEQUENCE_CATEGORY)
                WHEN 6 THEN TO_CHAR(h1.INV_DOC_SEQUENCE_IDENTIFIER)
                WHEN 7 THEN TO_CHAR(h1.INV_DOC_SEQUENCE_VALUE)
                
                ELSE null
              END                           source_value
            , CASE r
                WHEN 1 THEN fvl17.meaning
                
                ELSE null
              END               source_meaning
         FROM xla_events_gt     xet  
      , AP_INVOICE_EXTRACT_HEADER_V  h1
      , AP_SYSTEM_PARAMETERS_EXTRACT_V  h3
  , fnd_lookup_values    fvl17
             ,(select rownum r from all_objects where rownum <= 7 and owner = p_apps_owner)
         WHERE xet.event_date between p_pad_start_date AND p_pad_end_date
           AND xet.event_class_code = C_EVENT_CLASS_CODE
              AND h1.event_id = xet.event_id
 AND h3.asp_org_id = h1.ai_org_id   AND fvl17.lookup_type(+)         = 'YES_NO'
  AND fvl17.lookup_code(+)         = h3.FSP_PURCH_ENCUMBRANCE_FLAG
  AND fvl17.view_application_id(+) = 0
  AND fvl17.language(+)            = USERENV('LANG')
  
)
;
--
IF (C_LEVEL_STATEMENT >= g_log_level) THEN

      trace
         (p_msg      => 'number of header sources inserted = '||SQL%ROWCOUNT
         ,p_level    => C_LEVEL_STATEMENT
         ,p_module   => l_log_module);

END IF;
--



--
INSERT INTO xla_diag_sources  --line2
(
        event_id
      , ledger_id
      , sla_ledger_id
      , description_language
      , object_name
      , object_type_code
      , line_number
      , source_application_id
      , source_type_code
      , source_code
      , source_value
      , source_meaning
      , created_by
      , creation_date
      , last_update_date
      , last_updated_by
      , last_update_login
      , program_update_date
      , program_application_id
      , program_id
      , request_id
)
SELECT  event_id
      , p_target_ledger_id
      , p_sla_ledger_id
      , p_language
      , object_name
      , object_type_code
      , line_number
      , source_application_id
      , source_type_code
      , source_code
      , SUBSTR(source_value,1,1996)
      , SUBSTR(source_meaning ,1,200)
      , xla_environment_pkg.g_Usr_Id
      , TRUNC(SYSDATE)
      , TRUNC(SYSDATE)
      , xla_environment_pkg.g_Usr_Id
      , xla_environment_pkg.g_Login_Id
      , TRUNC(SYSDATE)
      , xla_environment_pkg.g_Prog_Appl_Id
      , xla_environment_pkg.g_Prog_Id
      , xla_environment_pkg.g_Req_Id
  FROM (
       SELECT xet.event_id                  event_id
            , l2.line_number                 line_number
            , CASE r
               WHEN 1 THEN 'AP_PREPAYAPP_EXTRACT_DTLS_BC_V' 
                WHEN 2 THEN 'AP_PREPAYAPP_EXTRACT_DTLS_BC_V' 
                WHEN 3 THEN 'AP_PREPAYAPP_EXTRACT_DTLS_BC_V' 
                WHEN 4 THEN 'AP_PREPAYAPP_EXTRACT_DTLS_BC_V' 
                WHEN 5 THEN 'AP_PREPAYAPP_EXTRACT_DTLS_BC_V' 
                WHEN 6 THEN 'AP_PREPAYAPP_EXTRACT_DTLS_BC_V' 
                WHEN 7 THEN 'AP_PREPAYAPP_EXTRACT_DTLS_BC_V' 
                WHEN 8 THEN 'AP_PREPAYAPP_EXTRACT_DTLS_BC_V' 
                WHEN 9 THEN 'AP_PREPAYAPP_EXTRACT_DTLS_BC_V' 
                WHEN 10 THEN 'AP_PREPAYAPP_EXTRACT_DTLS_BC_V' 
                WHEN 11 THEN 'AP_PREPAYAPP_EXTRACT_DTLS_BC_V' 
                WHEN 12 THEN 'AP_PREPAYAPP_EXTRACT_DTLS_BC_V' 
                WHEN 13 THEN 'AP_PREPAYAPP_EXTRACT_DTLS_BC_V' 
                WHEN 14 THEN 'AP_PREPAYAPP_EXTRACT_DTLS_BC_V' 
                WHEN 15 THEN 'ZX_AP_DEF_TAX_EXTRACT_V' 
                WHEN 16 THEN 'ZX_AP_TAX_JRNL_LINE_DESC_V' 
                WHEN 17 THEN 'AP_PREPAYAPP_EXTRACT_DTLS_BC_V' 
                WHEN 18 THEN 'AP_PREPAYAPP_EXTRACT_DTLS_BC_V' 
                WHEN 19 THEN 'AP_PREPAYAPP_EXTRACT_DTLS_BC_V' 
                WHEN 20 THEN 'AP_PREPAYAPP_EXTRACT_DTLS_BC_V' 
                WHEN 21 THEN 'AP_PREPAYAPP_EXTRACT_DTLS_BC_V' 
                WHEN 22 THEN 'AP_PREPAYAPP_EXTRACT_DTLS_BC_V' 
                WHEN 23 THEN 'AP_PREPAYAPP_EXTRACT_DTLS_BC_V' 
                WHEN 24 THEN 'AP_PREPAYAPP_EXTRACT_DTLS_BC_V' 
                WHEN 25 THEN 'AP_PREPAYAPP_EXTRACT_DTLS_BC_V' 
                WHEN 26 THEN 'AP_PREPAYAPP_EXTRACT_DTLS_BC_V' 
                WHEN 27 THEN 'AP_PREPAYAPP_EXTRACT_DTLS_BC_V' 
                WHEN 28 THEN 'AP_PREPAYAPP_EXTRACT_DTLS_BC_V' 
                WHEN 29 THEN 'AP_PREPAYAPP_EXTRACT_DTLS_BC_V' 
                WHEN 30 THEN 'AP_PREPAYAPP_EXTRACT_DTLS_BC_V' 
                WHEN 31 THEN 'AP_PREPAYAPP_EXTRACT_DTLS_BC_V' 
                WHEN 32 THEN 'AP_PREPAYAPP_EXTRACT_DTLS_BC_V' 
                WHEN 33 THEN 'AP_PREPAYAPP_EXTRACT_DTLS_BC_V' 
                WHEN 34 THEN 'AP_PREPAYAPP_EXTRACT_DTLS_BC_V' 
                WHEN 35 THEN 'AP_PREPAYAPP_EXTRACT_DTLS_BC_V' 
                
               ELSE null
              END                           object_name
            , CASE r
                WHEN 1 THEN 'LINE' 
                WHEN 2 THEN 'LINE' 
                WHEN 3 THEN 'LINE' 
                WHEN 4 THEN 'LINE' 
                WHEN 5 THEN 'LINE' 
                WHEN 6 THEN 'LINE' 
                WHEN 7 THEN 'LINE' 
                WHEN 8 THEN 'LINE' 
                WHEN 9 THEN 'LINE' 
                WHEN 10 THEN 'LINE' 
                WHEN 11 THEN 'LINE' 
                WHEN 12 THEN 'LINE' 
                WHEN 13 THEN 'LINE' 
                WHEN 14 THEN 'LINE' 
                WHEN 15 THEN 'LINE' 
                WHEN 16 THEN 'LINE' 
                WHEN 17 THEN 'LINE' 
                WHEN 18 THEN 'LINE' 
                WHEN 19 THEN 'LINE' 
                WHEN 20 THEN 'LINE' 
                WHEN 21 THEN 'LINE' 
                WHEN 22 THEN 'LINE' 
                WHEN 23 THEN 'LINE' 
                WHEN 24 THEN 'LINE' 
                WHEN 25 THEN 'LINE' 
                WHEN 26 THEN 'LINE' 
                WHEN 27 THEN 'LINE' 
                WHEN 28 THEN 'LINE' 
                WHEN 29 THEN 'LINE' 
                WHEN 30 THEN 'LINE' 
                WHEN 31 THEN 'LINE' 
                WHEN 32 THEN 'LINE' 
                WHEN 33 THEN 'LINE' 
                WHEN 34 THEN 'LINE' 
                WHEN 35 THEN 'LINE' 
                
                ELSE null
              END                           object_type_code
            , CASE r
                WHEN 1 THEN '200' 
                WHEN 2 THEN '200' 
                WHEN 3 THEN '200' 
                WHEN 4 THEN '200' 
                WHEN 5 THEN '200' 
                WHEN 6 THEN '200' 
                WHEN 7 THEN '200' 
                WHEN 8 THEN '200' 
                WHEN 9 THEN '200' 
                WHEN 10 THEN '200' 
                WHEN 11 THEN '200' 
                WHEN 12 THEN '200' 
                WHEN 13 THEN '200' 
                WHEN 14 THEN '200' 
                WHEN 15 THEN '200' 
                WHEN 16 THEN '200' 
                WHEN 17 THEN '200' 
                WHEN 18 THEN '200' 
                WHEN 19 THEN '200' 
                WHEN 20 THEN '200' 
                WHEN 21 THEN '200' 
                WHEN 22 THEN '200' 
                WHEN 23 THEN '200' 
                WHEN 24 THEN '200' 
                WHEN 25 THEN '200' 
                WHEN 26 THEN '200' 
                WHEN 27 THEN '200' 
                WHEN 28 THEN '200' 
                WHEN 29 THEN '200' 
                WHEN 30 THEN '200' 
                WHEN 31 THEN '200' 
                WHEN 32 THEN '200' 
                WHEN 33 THEN '200' 
                WHEN 34 THEN '200' 
                WHEN 35 THEN '200' 
                
                ELSE null
              END                           source_application_id
            , 'S'             source_type_code
            , CASE r
                WHEN 1 THEN 'DIST_ACCOUNT_REVERSAL_OPTION' 
                WHEN 2 THEN 'DISTRIBUTION_LINK_TYPE' 
                WHEN 3 THEN 'BUS_FLOW_AP_APP_ID' 
                WHEN 4 THEN 'UPG_ENC_CR_CCID' 
                WHEN 5 THEN 'UPG_ENC_CR_AMT' 
                WHEN 6 THEN 'UPG_ENC_CR_BASE_AMT' 
                WHEN 7 THEN 'UPG_ENC_DR_CCID' 
                WHEN 8 THEN 'UPG_ENC_DR_AMT' 
                WHEN 9 THEN 'UPG_ENC_DR_BASE_AMT' 
                WHEN 10 THEN 'UPG_AP_ENCUM_OPTION' 
                WHEN 11 THEN 'DEFERRED_END_DATE' 
                WHEN 12 THEN 'DEFERRED_OPTION' 
                WHEN 13 THEN 'DEFERRED_START_DATE' 
                WHEN 14 THEN 'OVERRIDE_ACCTD_AMT_FLAG' 
                WHEN 15 THEN 'TAX_LINE_ID' 
                WHEN 16 THEN 'REC_NREC_TAX_DIST_ID' 
                WHEN 17 THEN 'SUMMARY_TAX_LINE_ID' 
                WHEN 18 THEN 'UPG_CR_ENC_TYPE_ID' 
                WHEN 19 THEN 'UPG_DR_ENC_TYPE_ID' 
                WHEN 20 THEN 'PO_DISTRIBUTION_ID' 
                WHEN 21 THEN 'BUS_FLOW_PO_APP_ID' 
                WHEN 22 THEN 'BUS_FLOW_PO_DIST_TYPE' 
                WHEN 23 THEN 'BUS_FLOW_PO_ENTITY_CODE' 
                WHEN 24 THEN 'BUS_FLOW_PO_DOC_ID' 
                WHEN 25 THEN 'APAD_DIST_LOOKUP_CODE' 
                WHEN 26 THEN 'APAD_DISTRIBUTION_IDENTIFIER' 
                WHEN 27 THEN 'BF_ACCRUAL_PREPAY_DIST_TYPE' 
                WHEN 28 THEN 'BF_ACCRUAL_PREPAY_ENTITY_CODE' 
                WHEN 29 THEN 'BF_ACCRUAL_PP_DIST_ID' 
                WHEN 30 THEN 'BF_ACCRUAL_PP_INV' 
                WHEN 31 THEN 'UPG_ENC_CR_ACCT_CLASS' 
                WHEN 32 THEN 'UPG_ENC_DR_ACCT_CLASS' 
                WHEN 33 THEN 'APAD_AMOUNT' 
                WHEN 34 THEN 'APAD_BASE_AMOUNT' 
                WHEN 35 THEN 'REVERSED_PREPAY_APP_DIST_ID' 
                
                ELSE null
              END                           source_code
            , CASE r
                WHEN 1 THEN TO_CHAR(l2.DIST_ACCOUNT_REVERSAL_OPTION)
                WHEN 2 THEN TO_CHAR(l2.DISTRIBUTION_LINK_TYPE)
                WHEN 3 THEN TO_CHAR(l2.BUS_FLOW_AP_APP_ID)
                WHEN 4 THEN TO_CHAR(l2.UPG_ENC_CR_CCID)
                WHEN 5 THEN TO_CHAR(l2.UPG_ENC_CR_AMT)
                WHEN 6 THEN TO_CHAR(l2.UPG_ENC_CR_BASE_AMT)
                WHEN 7 THEN TO_CHAR(l2.UPG_ENC_DR_CCID)
                WHEN 8 THEN TO_CHAR(l2.UPG_ENC_DR_AMT)
                WHEN 9 THEN TO_CHAR(l2.UPG_ENC_DR_BASE_AMT)
                WHEN 10 THEN TO_CHAR(l2.UPG_AP_ENCUM_OPTION)
                WHEN 11 THEN TO_CHAR(l2.DEFERRED_END_DATE)
                WHEN 12 THEN TO_CHAR(l2.DEFERRED_OPTION)
                WHEN 13 THEN TO_CHAR(l2.DEFERRED_START_DATE)
                WHEN 14 THEN TO_CHAR(l2.OVERRIDE_ACCTD_AMT_FLAG)
                WHEN 15 THEN TO_CHAR(l4.TAX_LINE_ID)
                WHEN 16 THEN TO_CHAR(l5.REC_NREC_TAX_DIST_ID)
                WHEN 17 THEN TO_CHAR(l2.SUMMARY_TAX_LINE_ID)
                WHEN 18 THEN TO_CHAR(l2.UPG_CR_ENC_TYPE_ID)
                WHEN 19 THEN TO_CHAR(l2.UPG_DR_ENC_TYPE_ID)
                WHEN 20 THEN TO_CHAR(l2.PO_DISTRIBUTION_ID)
                WHEN 21 THEN TO_CHAR(l2.BUS_FLOW_PO_APP_ID)
                WHEN 22 THEN TO_CHAR(l2.BUS_FLOW_PO_DIST_TYPE)
                WHEN 23 THEN TO_CHAR(l2.BUS_FLOW_PO_ENTITY_CODE)
                WHEN 24 THEN TO_CHAR(l2.BUS_FLOW_PO_DOC_ID)
                WHEN 25 THEN TO_CHAR(l2.APAD_DIST_LOOKUP_CODE)
                WHEN 26 THEN TO_CHAR(l2.APAD_DISTRIBUTION_IDENTIFIER)
                WHEN 27 THEN TO_CHAR(l2.BF_ACCRUAL_PREPAY_DIST_TYPE)
                WHEN 28 THEN TO_CHAR(l2.BF_ACCRUAL_PREPAY_ENTITY_CODE)
                WHEN 29 THEN TO_CHAR(l2.BF_ACCRUAL_PP_DIST_ID)
                WHEN 30 THEN TO_CHAR(l2.BF_ACCRUAL_PP_INV)
                WHEN 31 THEN TO_CHAR(l2.UPG_ENC_CR_ACCT_CLASS)
                WHEN 32 THEN TO_CHAR(l2.UPG_ENC_DR_ACCT_CLASS)
                WHEN 33 THEN TO_CHAR(l2.APAD_AMOUNT)
                WHEN 34 THEN TO_CHAR(l2.APAD_BASE_AMOUNT)
                WHEN 35 THEN TO_CHAR(l2.REVERSED_PREPAY_APP_DIST_ID)
                
                ELSE null
              END                           source_value
            , CASE r
                WHEN 14 THEN fvl46.meaning
                
                ELSE null
              END               source_meaning
         FROM  xla_events_gt     xet  
        , AP_PREPAYAPP_EXTRACT_DTLS_BC_V  l2
        , ZX_AP_DEF_TAX_EXTRACT_V  l4
        , ZX_AP_TAX_JRNL_LINE_DESC_V  l5
  , fnd_lookup_values    fvl46
            , (select rownum r from all_objects where rownum <= 35 and owner = p_apps_owner)
        WHERE xet.event_date between p_pad_start_date AND p_pad_end_date
          AND xet.event_class_code = C_EVENT_CLASS_CODE
            AND l2.event_id          = xet.event_id
 AND l2.recp_detail_tax_dist_id = l4.rec_nrec_tax_dist_id (+)  AND l2.recp_detail_tax_dist_id = l5.rec_nrec_tax_dist_id (+)    AND fvl46.lookup_type(+)         = 'YES_NO'
  AND fvl46.lookup_code(+)         = l2.OVERRIDE_ACCTD_AMT_FLAG
  AND fvl46.view_application_id(+) = 0
  AND fvl46.language(+)            = USERENV('LANG')
  
)
;
--
IF (C_LEVEL_STATEMENT >= g_log_level) THEN

      trace
         (p_msg      => 'number of line sources inserted = '||SQL%ROWCOUNT
         ,p_level    => C_LEVEL_STATEMENT
         ,p_module   => l_log_module);

END IF;


IF (C_LEVEL_PROCEDURE >= g_log_level) THEN
      trace
         (p_msg      => 'END of insert_sources_107'
         ,p_level    => C_LEVEL_PROCEDURE
         ,p_module   => l_log_module);
END IF;
EXCEPTION
  WHEN xla_exceptions_pkg.application_exception THEN
      IF (C_LEVEL_EXCEPTION >= g_log_level) THEN
            trace
               (p_msg      => 'ERROR: XLA_CMP_COMPILER_ERROR = '||sqlerrm
               ,p_level    => C_LEVEL_EXCEPTION
               ,p_module   => l_log_module);
      END IF;
      RAISE;
  WHEN OTHERS THEN
      IF (C_LEVEL_EXCEPTION >= g_log_level) THEN
            trace
               (p_msg      => 'ERROR: XLA_CMP_COMPILER_ERROR = '||sqlerrm
               ,p_level    => C_LEVEL_EXCEPTION
               ,p_module   => l_log_module);
       END IF;
       xla_exceptions_pkg.raise_message
           (p_location => 'XLA_00200_AAD_S_000010_BC_PKG.insert_sources_107');
END insert_sources_107;
--

---------------------------------------
--
-- PRIVATE FUNCTION
--         EventClass_107
--
----------------------------------------
--
FUNCTION EventClass_107
       (p_application_id         IN NUMBER
       ,p_base_ledger_id         IN NUMBER
       ,p_target_ledger_id       IN NUMBER
       ,p_language               IN VARCHAR2
       ,p_currency_code          IN VARCHAR2
       ,p_sla_ledger_id          IN NUMBER
       ,p_pad_start_date         IN DATE
       ,p_pad_end_date           IN DATE
       ,p_primary_ledger_id      IN NUMBER)
RETURN BOOLEAN IS
--
C_EVENT_TYPE_CODE    CONSTANT  VARCHAR2(30)  := 'PREPAYMENT APPLICATIONS_ALL';
C_EVENT_CLASS_CODE    CONSTANT  VARCHAR2(30) := 'PREPAYMENT APPLICATIONS';

l_calculate_acctd_flag   VARCHAR2(1) :='N';
l_calculate_g_l_flag     VARCHAR2(1) :='N';
--
l_array_legal_entity_id                XLA_AE_JOURNAL_ENTRY_PKG.t_array_Num;
l_array_entity_id                      XLA_AE_JOURNAL_ENTRY_PKG.t_array_Num;
l_array_entity_code                    XLA_AE_JOURNAL_ENTRY_PKG.t_array_V30L;
l_array_transaction_num                XLA_AE_JOURNAL_ENTRY_PKG.t_array_V240L;
l_array_event_id                       XLA_AE_JOURNAL_ENTRY_PKG.t_array_Num;
l_array_class_code                     XLA_AE_JOURNAL_ENTRY_PKG.t_array_V30L;
l_array_event_type                     XLA_AE_JOURNAL_ENTRY_PKG.t_array_V30L;
l_array_event_number                   XLA_AE_JOURNAL_ENTRY_PKG.t_array_Num;
l_array_event_date                     XLA_AE_JOURNAL_ENTRY_PKG.t_array_Date;
l_array_transaction_date               XLA_AE_JOURNAL_ENTRY_PKG.t_array_Date;
l_array_reference_num_1                XLA_AE_JOURNAL_ENTRY_PKG.t_array_Num;
l_array_reference_num_2                XLA_AE_JOURNAL_ENTRY_PKG.t_array_Num;
l_array_reference_num_3                XLA_AE_JOURNAL_ENTRY_PKG.t_array_Num;
l_array_reference_num_4                XLA_AE_JOURNAL_ENTRY_PKG.t_array_Num;
l_array_reference_char_1               XLA_AE_JOURNAL_ENTRY_PKG.t_array_V240L;
l_array_reference_char_2               XLA_AE_JOURNAL_ENTRY_PKG.t_array_V240L;
l_array_reference_char_3               XLA_AE_JOURNAL_ENTRY_PKG.t_array_V240L;
l_array_reference_char_4               XLA_AE_JOURNAL_ENTRY_PKG.t_array_V240L;
l_array_reference_date_1               XLA_AE_JOURNAL_ENTRY_PKG.t_array_Date;
l_array_reference_date_2               XLA_AE_JOURNAL_ENTRY_PKG.t_array_Date;
l_array_reference_date_3               XLA_AE_JOURNAL_ENTRY_PKG.t_array_Date;
l_array_reference_date_4               XLA_AE_JOURNAL_ENTRY_PKG.t_array_Date;
l_array_event_created_by               XLA_AE_JOURNAL_ENTRY_PKG.t_array_V100L;
l_array_budgetary_control_flag         XLA_AE_JOURNAL_ENTRY_PKG.t_array_V30L;
l_array_header_events                  XLA_AE_JOURNAL_ENTRY_PKG.t_array_Num;  --added
l_array_duplicate_checker              XLA_AE_JOURNAL_ENTRY_PKG.t_array_Num;  --added

l_event_id                             NUMBER;
l_previous_event_id                    NUMBER;
l_first_event_id                       NUMBER;
l_last_event_id                        NUMBER;

l_rec_acct_attrs                       XLA_AE_HEADER_PKG.t_rec_acct_attrs;
l_rec_rev_acct_attrs                   XLA_AE_LINES_PKG.t_rec_acct_attrs;
--
--
l_result                    BOOLEAN := TRUE;
l_rows                      NUMBER  := 1000;
l_event_type_name           VARCHAR2(80) := 'All';
l_event_class_name          VARCHAR2(80) := 'Prepayment Applications';
l_description               VARCHAR2(4000);
l_transaction_reversal      NUMBER;
l_ae_header_id              NUMBER;
l_array_extract_line_num    xla_ae_journal_entry_pkg.t_array_Num;
l_log_module                VARCHAR2(240);
--
l_acct_reversal_source      VARCHAR2(30);
l_trx_reversal_source       VARCHAR2(30);

l_continue_with_lines       BOOLEAN := TRUE;
--
l_acc_rev_gl_date_source    DATE;                      -- 4262811
--
type t_array_event_id is table of number index by binary_integer;

l_rec_array_event                    t_rec_array_event;
l_null_rec_array_event               t_rec_array_event;
l_array_ae_header_id                 xla_number_array_type;
l_actual_flag                        VARCHAR2(1) := NULL;
l_actual_gain_loss_ref               VARCHAR2(30) := '#####';
l_balance_type_code                  VARCHAR2(1) :=NULL;
l_gain_or_loss_ref                   VARCHAR2(30) :=NULL;

--
TYPE t_array_lookup_meaning IS TABLE OF fnd_lookup_values.meaning%TYPE INDEX BY BINARY_INTEGER;
--

TYPE t_array_source_17 IS TABLE OF AP_SYSTEM_PARAMETERS_EXTRACT_V.FSP_PURCH_ENCUMBRANCE_FLAG%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_24 IS TABLE OF AP_INVOICE_EXTRACT_HEADER_V.AI_INVOICE_ID%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_33 IS TABLE OF AP_INVOICE_EXTRACT_HEADER_V.AI_INVOICE_CURRENCY_CODE%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_49 IS TABLE OF AP_INVOICE_EXTRACT_HEADER_V.THIRD_PARTY_TYPE%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_122 IS TABLE OF AP_INVOICE_EXTRACT_HEADER_V.INV_DOC_SEQUENCE_CATEGORY%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_123 IS TABLE OF AP_INVOICE_EXTRACT_HEADER_V.INV_DOC_SEQUENCE_IDENTIFIER%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_124 IS TABLE OF AP_INVOICE_EXTRACT_HEADER_V.INV_DOC_SEQUENCE_VALUE%TYPE INDEX BY BINARY_INTEGER;

TYPE t_array_source_19 IS TABLE OF AP_PREPAYAPP_EXTRACT_DTLS_BC_V.DIST_ACCOUNT_REVERSAL_OPTION%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_21 IS TABLE OF AP_PREPAYAPP_EXTRACT_DTLS_BC_V.DISTRIBUTION_LINK_TYPE%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_25 IS TABLE OF AP_PREPAYAPP_EXTRACT_DTLS_BC_V.BUS_FLOW_AP_APP_ID%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_31 IS TABLE OF AP_PREPAYAPP_EXTRACT_DTLS_BC_V.UPG_ENC_CR_CCID%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_32 IS TABLE OF AP_PREPAYAPP_EXTRACT_DTLS_BC_V.UPG_ENC_CR_AMT%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_34 IS TABLE OF AP_PREPAYAPP_EXTRACT_DTLS_BC_V.UPG_ENC_CR_BASE_AMT%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_35 IS TABLE OF AP_PREPAYAPP_EXTRACT_DTLS_BC_V.UPG_ENC_DR_CCID%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_36 IS TABLE OF AP_PREPAYAPP_EXTRACT_DTLS_BC_V.UPG_ENC_DR_AMT%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_37 IS TABLE OF AP_PREPAYAPP_EXTRACT_DTLS_BC_V.UPG_ENC_DR_BASE_AMT%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_38 IS TABLE OF AP_PREPAYAPP_EXTRACT_DTLS_BC_V.UPG_AP_ENCUM_OPTION%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_43 IS TABLE OF AP_PREPAYAPP_EXTRACT_DTLS_BC_V.DEFERRED_END_DATE%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_44 IS TABLE OF AP_PREPAYAPP_EXTRACT_DTLS_BC_V.DEFERRED_OPTION%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_45 IS TABLE OF AP_PREPAYAPP_EXTRACT_DTLS_BC_V.DEFERRED_START_DATE%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_46 IS TABLE OF AP_PREPAYAPP_EXTRACT_DTLS_BC_V.OVERRIDE_ACCTD_AMT_FLAG%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_52 IS TABLE OF ZX_AP_DEF_TAX_EXTRACT_V.TAX_LINE_ID%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_53 IS TABLE OF ZX_AP_TAX_JRNL_LINE_DESC_V.REC_NREC_TAX_DIST_ID%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_54 IS TABLE OF AP_PREPAYAPP_EXTRACT_DTLS_BC_V.SUMMARY_TAX_LINE_ID%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_55 IS TABLE OF AP_PREPAYAPP_EXTRACT_DTLS_BC_V.UPG_CR_ENC_TYPE_ID%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_56 IS TABLE OF AP_PREPAYAPP_EXTRACT_DTLS_BC_V.UPG_DR_ENC_TYPE_ID%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_58 IS TABLE OF AP_PREPAYAPP_EXTRACT_DTLS_BC_V.PO_DISTRIBUTION_ID%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_60 IS TABLE OF AP_PREPAYAPP_EXTRACT_DTLS_BC_V.BUS_FLOW_PO_APP_ID%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_61 IS TABLE OF AP_PREPAYAPP_EXTRACT_DTLS_BC_V.BUS_FLOW_PO_DIST_TYPE%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_62 IS TABLE OF AP_PREPAYAPP_EXTRACT_DTLS_BC_V.BUS_FLOW_PO_ENTITY_CODE%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_64 IS TABLE OF AP_PREPAYAPP_EXTRACT_DTLS_BC_V.BUS_FLOW_PO_DOC_ID%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_69 IS TABLE OF AP_PREPAYAPP_EXTRACT_DTLS_BC_V.APAD_DIST_LOOKUP_CODE%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_71 IS TABLE OF AP_PREPAYAPP_EXTRACT_DTLS_BC_V.APAD_DISTRIBUTION_IDENTIFIER%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_72 IS TABLE OF AP_PREPAYAPP_EXTRACT_DTLS_BC_V.BF_ACCRUAL_PREPAY_DIST_TYPE%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_73 IS TABLE OF AP_PREPAYAPP_EXTRACT_DTLS_BC_V.BF_ACCRUAL_PREPAY_ENTITY_CODE%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_74 IS TABLE OF AP_PREPAYAPP_EXTRACT_DTLS_BC_V.BF_ACCRUAL_PP_DIST_ID%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_75 IS TABLE OF AP_PREPAYAPP_EXTRACT_DTLS_BC_V.BF_ACCRUAL_PP_INV%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_76 IS TABLE OF AP_PREPAYAPP_EXTRACT_DTLS_BC_V.UPG_ENC_CR_ACCT_CLASS%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_77 IS TABLE OF AP_PREPAYAPP_EXTRACT_DTLS_BC_V.UPG_ENC_DR_ACCT_CLASS%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_78 IS TABLE OF AP_PREPAYAPP_EXTRACT_DTLS_BC_V.APAD_AMOUNT%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_79 IS TABLE OF AP_PREPAYAPP_EXTRACT_DTLS_BC_V.APAD_BASE_AMOUNT%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_80 IS TABLE OF AP_PREPAYAPP_EXTRACT_DTLS_BC_V.REVERSED_PREPAY_APP_DIST_ID%TYPE INDEX BY BINARY_INTEGER;

l_array_source_17              t_array_source_17;
l_array_source_17_meaning      t_array_lookup_meaning;
l_array_source_24              t_array_source_24;
l_array_source_33              t_array_source_33;
l_array_source_49              t_array_source_49;
l_array_source_122              t_array_source_122;
l_array_source_123              t_array_source_123;
l_array_source_124              t_array_source_124;

l_array_source_19      t_array_source_19;
l_array_source_21      t_array_source_21;
l_array_source_25      t_array_source_25;
l_array_source_31      t_array_source_31;
l_array_source_32      t_array_source_32;
l_array_source_34      t_array_source_34;
l_array_source_35      t_array_source_35;
l_array_source_36      t_array_source_36;
l_array_source_37      t_array_source_37;
l_array_source_38      t_array_source_38;
l_array_source_43      t_array_source_43;
l_array_source_44      t_array_source_44;
l_array_source_45      t_array_source_45;
l_array_source_46      t_array_source_46;
l_array_source_46_meaning      t_array_lookup_meaning;
l_array_source_52      t_array_source_52;
l_array_source_53      t_array_source_53;
l_array_source_54      t_array_source_54;
l_array_source_55      t_array_source_55;
l_array_source_56      t_array_source_56;
l_array_source_58      t_array_source_58;
l_array_source_60      t_array_source_60;
l_array_source_61      t_array_source_61;
l_array_source_62      t_array_source_62;
l_array_source_64      t_array_source_64;
l_array_source_69      t_array_source_69;
l_array_source_71      t_array_source_71;
l_array_source_72      t_array_source_72;
l_array_source_73      t_array_source_73;
l_array_source_74      t_array_source_74;
l_array_source_75      t_array_source_75;
l_array_source_76      t_array_source_76;
l_array_source_77      t_array_source_77;
l_array_source_78      t_array_source_78;
l_array_source_79      t_array_source_79;
l_array_source_80      t_array_source_80;

--
CURSOR header_cur
IS
SELECT /*+ leading(xet) cardinality(xet,1) */
-- Event Class Code: PREPAYMENT APPLICATIONS
    xet.entity_id
   ,xet.legal_entity_id
   ,xet.entity_code
   ,xet.transaction_number
   ,xet.event_id
   ,xet.event_class_code
   ,xet.event_type_code
   ,xet.event_number
   ,xet.event_date
   ,xet.transaction_date
   ,xet.reference_num_1
   ,xet.reference_num_2
   ,xet.reference_num_3
   ,xet.reference_num_4
   ,xet.reference_char_1
   ,xet.reference_char_2
   ,xet.reference_char_3
   ,xet.reference_char_4
   ,xet.reference_date_1
   ,xet.reference_date_2
   ,xet.reference_date_3
   ,xet.reference_date_4
   ,xet.event_created_by
   ,xet.budgetary_control_flag 
  , h3.FSP_PURCH_ENCUMBRANCE_FLAG    source_17
  , fvl17.meaning   source_17_meaning
  , h1.AI_INVOICE_ID    source_24
  , h1.AI_INVOICE_CURRENCY_CODE    source_33
  , h1.THIRD_PARTY_TYPE    source_49
  , h1.INV_DOC_SEQUENCE_CATEGORY    source_122
  , h1.INV_DOC_SEQUENCE_IDENTIFIER    source_123
  , h1.INV_DOC_SEQUENCE_VALUE    source_124
  FROM xla_events_gt     xet 
  , AP_INVOICE_EXTRACT_HEADER_V  h1
  , AP_SYSTEM_PARAMETERS_EXTRACT_V  h3
  , fnd_lookup_values    fvl17
 WHERE xet.event_date between p_pad_start_date and p_pad_end_date
   and xet.event_class_code = C_EVENT_CLASS_CODE
   and xet.event_status_code <> 'N'  AND h1.event_id = xet.event_id
 AND h3.asp_org_id = h1.ai_org_id   AND fvl17.lookup_type(+)         = 'YES_NO'
  AND fvl17.lookup_code(+)         = h3.FSP_PURCH_ENCUMBRANCE_FLAG
  AND fvl17.view_application_id(+) = 0
  AND fvl17.language(+)            = USERENV('LANG')
  
 ORDER BY event_id
;


--
CURSOR line_cur (x_first_event_id    in number, x_last_event_id    in number)
IS
SELECT  /*+ leading(xet) cardinality(xet,1) */
-- Event Class Code: PREPAYMENT APPLICATIONS
    xet.entity_id
   ,xet.legal_entity_id
   ,xet.entity_code
   ,xet.transaction_number
   ,xet.event_id
   ,xet.event_class_code
   ,xet.event_type_code
   ,xet.event_number
   ,xet.event_date
   ,xet.transaction_date
   ,xet.reference_num_1
   ,xet.reference_num_2
   ,xet.reference_num_3
   ,xet.reference_num_4
   ,xet.reference_char_1
   ,xet.reference_char_2
   ,xet.reference_char_3
   ,xet.reference_char_4
   ,xet.reference_date_1
   ,xet.reference_date_2
   ,xet.reference_date_3
   ,xet.reference_date_4
   ,xet.event_created_by
   ,xet.budgetary_control_flag
 , l2.LINE_NUMBER  
  , l2.DIST_ACCOUNT_REVERSAL_OPTION    source_19
  , l2.DISTRIBUTION_LINK_TYPE    source_21
  , l2.BUS_FLOW_AP_APP_ID    source_25
  , l2.UPG_ENC_CR_CCID    source_31
  , l2.UPG_ENC_CR_AMT    source_32
  , l2.UPG_ENC_CR_BASE_AMT    source_34
  , l2.UPG_ENC_DR_CCID    source_35
  , l2.UPG_ENC_DR_AMT    source_36
  , l2.UPG_ENC_DR_BASE_AMT    source_37
  , l2.UPG_AP_ENCUM_OPTION    source_38
  , l2.DEFERRED_END_DATE    source_43
  , l2.DEFERRED_OPTION    source_44
  , l2.DEFERRED_START_DATE    source_45
  , l2.OVERRIDE_ACCTD_AMT_FLAG    source_46
  , fvl46.meaning   source_46_meaning
  , l4.TAX_LINE_ID    source_52
  , l5.REC_NREC_TAX_DIST_ID    source_53
  , l2.SUMMARY_TAX_LINE_ID    source_54
  , l2.UPG_CR_ENC_TYPE_ID    source_55
  , l2.UPG_DR_ENC_TYPE_ID    source_56
  , l2.PO_DISTRIBUTION_ID    source_58
  , l2.BUS_FLOW_PO_APP_ID    source_60
  , l2.BUS_FLOW_PO_DIST_TYPE    source_61
  , l2.BUS_FLOW_PO_ENTITY_CODE    source_62
  , l2.BUS_FLOW_PO_DOC_ID    source_64
  , l2.APAD_DIST_LOOKUP_CODE    source_69
  , l2.APAD_DISTRIBUTION_IDENTIFIER    source_71
  , l2.BF_ACCRUAL_PREPAY_DIST_TYPE    source_72
  , l2.BF_ACCRUAL_PREPAY_ENTITY_CODE    source_73
  , l2.BF_ACCRUAL_PP_DIST_ID    source_74
  , l2.BF_ACCRUAL_PP_INV    source_75
  , l2.UPG_ENC_CR_ACCT_CLASS    source_76
  , l2.UPG_ENC_DR_ACCT_CLASS    source_77
  , l2.APAD_AMOUNT    source_78
  , l2.APAD_BASE_AMOUNT    source_79
  , l2.REVERSED_PREPAY_APP_DIST_ID    source_80
  FROM xla_events_gt     xet 
  , AP_PREPAYAPP_EXTRACT_DTLS_BC_V  l2
  , ZX_AP_DEF_TAX_EXTRACT_V  l4
  , ZX_AP_TAX_JRNL_LINE_DESC_V  l5
  , fnd_lookup_values    fvl46
 WHERE xet.event_id between x_first_event_id and x_last_event_id
   and xet.event_date between p_pad_start_date and p_pad_end_date
   and xet.event_class_code = C_EVENT_CLASS_CODE
   and xet.event_status_code <> 'N'   AND l2.event_id      = xet.event_id
 AND l2.RECP_DETAIL_TAX_DIST_ID = l4.REC_NREC_TAX_DIST_ID (+)  AND l2.RECP_DETAIL_TAX_DIST_ID = l5.REC_NREC_TAX_DIST_ID (+)    AND fvl46.lookup_type(+)         = 'YES_NO'
  AND fvl46.lookup_code(+)         = l2.OVERRIDE_ACCTD_AMT_FLAG
  AND fvl46.view_application_id(+) = 0
  AND fvl46.language(+)            = USERENV('LANG')
  ;

--
BEGIN
IF g_log_enabled THEN
   l_log_module := C_DEFAULT_MODULE||'.EventClass_107';
END IF;
IF (C_LEVEL_PROCEDURE >= g_log_level) THEN
   trace
      (p_msg      => 'BEGIN of EventClass_107'
      ,p_level    => C_LEVEL_PROCEDURE
      ,p_module   => l_log_module);
END IF;

IF (C_LEVEL_STATEMENT >= g_log_level) THEN
   trace
      (p_msg      => 'p_application_id = '||p_application_id||
                     ' - p_base_ledger_id = '||p_base_ledger_id||
                     ' - p_target_ledger_id  = '||p_target_ledger_id||
                     ' - p_language = '||p_language||
                     ' - p_currency_code = '||p_currency_code||
                     ' - p_sla_ledger_id = '||p_sla_ledger_id
      ,p_level    => C_LEVEL_STATEMENT
      ,p_module   => l_log_module);
END IF;
--
-- initialze arrays
--
g_array_event.DELETE;
l_rec_array_event := l_null_rec_array_event;
--
--------------------------------------
-- 4262811 Initialze MPA Line Number
--------------------------------------
XLA_AE_HEADER_PKG.g_mpa_line_num := 0;

--

--
OPEN header_cur;
--
IF (C_LEVEL_STATEMENT >= g_log_level) THEN
   trace
   (p_msg      => 'SQL - FETCH header_cur'
   ,p_level    => C_LEVEL_STATEMENT
   ,p_module   => l_log_module);
END IF;
--
LOOP
FETCH header_cur BULK COLLECT INTO
        l_array_entity_id
      , l_array_legal_entity_id
      , l_array_entity_code
      , l_array_transaction_num
      , l_array_event_id
      , l_array_class_code
      , l_array_event_type
      , l_array_event_number
      , l_array_event_date
      , l_array_transaction_date
      , l_array_reference_num_1
      , l_array_reference_num_2
      , l_array_reference_num_3
      , l_array_reference_num_4
      , l_array_reference_char_1
      , l_array_reference_char_2
      , l_array_reference_char_3
      , l_array_reference_char_4
      , l_array_reference_date_1
      , l_array_reference_date_2
      , l_array_reference_date_3
      , l_array_reference_date_4
      , l_array_event_created_by
      , l_array_budgetary_control_flag 
      , l_array_source_17
      , l_array_source_17_meaning
      , l_array_source_24
      , l_array_source_33
      , l_array_source_49
      , l_array_source_122
      , l_array_source_123
      , l_array_source_124
      LIMIT l_rows;
--
IF (C_LEVEL_EVENT >= g_log_level) THEN
   trace
   (p_msg      => '# rows extracted from header extract objects = '||TO_CHAR(header_cur%ROWCOUNT)
   ,p_level    => C_LEVEL_EVENT
   ,p_module   => l_log_module);
END IF;
--
EXIT WHEN l_array_entity_id.COUNT = 0;

-- initialize arrays
XLA_AE_HEADER_PKG.g_rec_header_new        := NULL;
XLA_AE_LINES_PKG.g_rec_lines              := NULL;

--
-- Bug 4458708
--
XLA_AE_LINES_PKG.g_LineNumber := 0;


-- 4262811 - when creating Accrual Reversal or MPA, use g_last_hdr_idx to increment for next header id
g_last_hdr_idx := l_array_event_id.LAST;
--
-- loop for the headers. Each iteration is for each header extract row
-- fetched in header cursor
--
FOR hdr_idx IN l_array_event_id.FIRST .. l_array_event_id.LAST LOOP

--
-- set event info as cache for other routines to refer event attributes
--
XLA_AE_JOURNAL_ENTRY_PKG.set_event_info
   (p_application_id           => p_application_id
   ,p_primary_ledger_id        => p_primary_ledger_id
   ,p_base_ledger_id           => p_base_ledger_id
   ,p_target_ledger_id         => p_target_ledger_id
   ,p_entity_id                => l_array_entity_id(hdr_idx)
   ,p_legal_entity_id          => l_array_legal_entity_id(hdr_idx)
   ,p_entity_code              => l_array_entity_code(hdr_idx)
   ,p_transaction_num          => l_array_transaction_num(hdr_idx)
   ,p_event_id                 => l_array_event_id(hdr_idx)
   ,p_event_class_code         => l_array_class_code(hdr_idx)
   ,p_event_type_code          => l_array_event_type(hdr_idx)
   ,p_event_number             => l_array_event_number(hdr_idx)
   ,p_event_date               => l_array_event_date(hdr_idx)
   ,p_transaction_date         => l_array_transaction_date(hdr_idx)
   ,p_reference_num_1          => l_array_reference_num_1(hdr_idx)
   ,p_reference_num_2          => l_array_reference_num_2(hdr_idx)
   ,p_reference_num_3          => l_array_reference_num_3(hdr_idx)
   ,p_reference_num_4          => l_array_reference_num_4(hdr_idx)
   ,p_reference_char_1         => l_array_reference_char_1(hdr_idx)
   ,p_reference_char_2         => l_array_reference_char_2(hdr_idx)
   ,p_reference_char_3         => l_array_reference_char_3(hdr_idx)
   ,p_reference_char_4         => l_array_reference_char_4(hdr_idx)
   ,p_reference_date_1         => l_array_reference_date_1(hdr_idx)
   ,p_reference_date_2         => l_array_reference_date_2(hdr_idx)
   ,p_reference_date_3         => l_array_reference_date_3(hdr_idx)
   ,p_reference_date_4         => l_array_reference_date_4(hdr_idx)
   ,p_event_created_by         => l_array_event_created_by(hdr_idx)
   ,p_budgetary_control_flag   => l_array_budgetary_control_flag(hdr_idx));

--
-- set the status of entry to C_VALID (0)
--
XLA_AE_JOURNAL_ENTRY_PKG.g_global_status    := XLA_AE_JOURNAL_ENTRY_PKG.C_VALID;

--
-- initialize a row for ae header
--
XLA_AE_HEADER_PKG.InitHeader(hdr_idx);

l_event_id := l_array_event_id(hdr_idx);

--
-- storing the hdr_idx for event. May be used by line cursor.
--
g_array_event(l_event_id).array_value_num('header_index') := hdr_idx;

--
-- store sources from header extract. This can be improved to
-- store only those sources from header extract that may be used in lines
--

g_array_event(l_event_id).array_value_char('source_17') := l_array_source_17(hdr_idx);
g_array_event(l_event_id).array_value_char('source_17_meaning') := l_array_source_17_meaning(hdr_idx);
g_array_event(l_event_id).array_value_num('source_24') := l_array_source_24(hdr_idx);
g_array_event(l_event_id).array_value_char('source_33') := l_array_source_33(hdr_idx);
g_array_event(l_event_id).array_value_char('source_49') := l_array_source_49(hdr_idx);
g_array_event(l_event_id).array_value_char('source_122') := l_array_source_122(hdr_idx);
g_array_event(l_event_id).array_value_num('source_123') := l_array_source_123(hdr_idx);
g_array_event(l_event_id).array_value_num('source_124') := l_array_source_124(hdr_idx);

--
-- initilaize the status of ae headers for diffrent balance types
-- the status is initialised to C_NOT_CREATED (2)
--
--g_array_event(l_event_id).array_value_num('actual_je_status') := XLA_AE_JOURNAL_ENTRY_PKG.C_NOT_CREATED;
--g_array_event(l_event_id).array_value_num('budget_je_status') := XLA_AE_JOURNAL_ENTRY_PKG.C_NOT_CREATED;
--g_array_event(l_event_id).array_value_num('encumbrance_je_status') := XLA_AE_JOURNAL_ENTRY_PKG.C_NOT_CREATED;

--
-- call api to validate and store accounting attributes for header
--

------------------------------------------------------------
-- Accrual Reversal : to get date for Standard Source (NONE)
------------------------------------------------------------
l_acc_rev_gl_date_source := NULL;

     l_rec_acct_attrs.array_acct_attr_code(1)   := 'DOC_CATEGORY_CODE';
      l_rec_acct_attrs.array_char_value(1) := g_array_event(l_event_id).array_value_char('source_122');
     l_rec_acct_attrs.array_acct_attr_code(2)   := 'DOC_SEQUENCE_ID';
      l_rec_acct_attrs.array_num_value(2) := g_array_event(l_event_id).array_value_num('source_123');
     l_rec_acct_attrs.array_acct_attr_code(3)   := 'DOC_SEQUENCE_VALUE';
      l_rec_acct_attrs.array_num_value(3) := g_array_event(l_event_id).array_value_num('source_124');
     l_rec_acct_attrs.array_acct_attr_code(4)   := 'GL_DATE';
      l_rec_acct_attrs.array_date_value(4) := 
xla_ae_sources_pkg.GetSystemSourceDate(
   p_source_code           => 'XLA_EVENT_DATE'
 , p_source_type_code      => 'Y'
 , p_source_application_id =>  602
);


XLA_AE_HEADER_PKG.SetHdrAcctAttrs(l_rec_acct_attrs);

XLA_AE_HEADER_PKG.SetJeCategoryName;

XLA_AE_HEADER_PKG.g_rec_header_new.array_event_type_code(hdr_idx)  := l_array_event_type(hdr_idx);
XLA_AE_HEADER_PKG.g_rec_header_new.array_event_id(hdr_idx)         := l_array_event_id(hdr_idx);
XLA_AE_HEADER_PKG.g_rec_header_new.array_entity_id(hdr_idx)        := l_array_entity_id(hdr_idx);
XLA_AE_HEADER_PKG.g_rec_header_new.array_event_number(hdr_idx)     := l_array_event_number(hdr_idx);
XLA_AE_HEADER_PKG.g_rec_header_new.array_target_ledger_id(hdr_idx) := p_target_ledger_id;


-- No header level analytical criteria

--
--accounting attribute enhancement, bug 3612931
--
l_trx_reversal_source := SUBSTR(NULL, 1,30);

IF NVL(l_trx_reversal_source, 'N') NOT IN ('N','Y') THEN
   xla_ae_journal_entry_pkg.g_global_status      :=  xla_ae_journal_entry_pkg.C_INVALID;

   xla_accounting_err_pkg.build_message
      (p_appli_s_name            => 'XLA'
      ,p_msg_name                => 'XLA_AP_INVALID_HDR_ATTR'
      ,p_token_1                 => 'ACCT_ATTR_NAME'
      ,p_value_1                 => xla_ae_sources_pkg.GetAccountingSourceName('TRX_ACCT_REVERSAL_OPTION')
      ,p_token_2                 => 'PRODUCT_NAME'
      ,p_value_2                 => xla_ae_journal_entry_pkg.g_cache_event.application_name
      ,p_entity_id               => xla_ae_journal_entry_pkg.g_cache_event.entity_id
      ,p_event_id                => xla_ae_journal_entry_pkg.g_cache_event.event_id
      ,p_ledger_id               => xla_ae_journal_entry_pkg.g_cache_event.target_ledger_id);

ELSIF NVL(l_trx_reversal_source, 'N') = 'Y' THEN
   --
   -- following sets the accounting attributes needed to reverse
   -- accounting for a distributeion
   --
   xla_ae_lines_pkg.SetTrxReversalAttrs
      (p_event_id              => l_event_id
      ,p_gl_date               => XLA_AE_HEADER_PKG.g_rec_header_new.array_gl_date(hdr_idx)
      ,p_trx_reversal_source   => l_trx_reversal_source);

END IF;


----------------------------------------------------------------
-- 4262811 -  update the header statuses to invalid in need be
----------------------------------------------------------------
--
XLA_AE_JOURNAL_ENTRY_PKG.UpdateJournalEntryStatus (p_hdr_idx => hdr_idx);


  -----------------------------------------------
  -- No accrual reversal for the event class/type
  -----------------------------------------------
----------------------------------------------------------------

--
-- this ends the header loop iteration for one bulk fetch
--
END LOOP;

l_first_event_id   := l_array_event_id(l_array_event_id.FIRST);
l_last_event_id    := l_array_event_id(l_array_event_id.LAST);

--
-- insert dummy rows into lines gt table that were created due to
-- transaction reversals
--
IF XLA_AE_LINES_PKG.g_rec_lines.array_ae_header_id.COUNT > 0 THEN
   l_result := XLA_AE_LINES_PKG.InsertLines;
END IF;

--
-- reset the temp_line_num for each set of events fetched from header
-- cursor rather than doing it for each new event in line cursor
-- Bug 3939231
--
xla_ae_lines_pkg.g_temp_line_num := 0;



--
OPEN line_cur(x_first_event_id  => l_first_event_id, x_last_event_id  => l_last_event_id);
--
--
IF (C_LEVEL_STATEMENT >= g_log_level) THEN

      trace
         (p_msg      => 'SQL - FETCH line_cur'
         ,p_level    => C_LEVEL_STATEMENT
         ,p_module   => l_log_module);

END IF;
--
--
LOOP
  --
  FETCH line_cur BULK COLLECT INTO
        l_array_entity_id
      , l_array_legal_entity_id
      , l_array_entity_code
      , l_array_transaction_num
      , l_array_event_id
      , l_array_class_code
      , l_array_event_type
      , l_array_event_number
      , l_array_event_date
      , l_array_transaction_date
      , l_array_reference_num_1
      , l_array_reference_num_2
      , l_array_reference_num_3
      , l_array_reference_num_4
      , l_array_reference_char_1
      , l_array_reference_char_2
      , l_array_reference_char_3
      , l_array_reference_char_4
      , l_array_reference_date_1
      , l_array_reference_date_2
      , l_array_reference_date_3
      , l_array_reference_date_4
      , l_array_event_created_by
      , l_array_budgetary_control_flag
      , l_array_extract_line_num 
      , l_array_source_19
      , l_array_source_21
      , l_array_source_25
      , l_array_source_31
      , l_array_source_32
      , l_array_source_34
      , l_array_source_35
      , l_array_source_36
      , l_array_source_37
      , l_array_source_38
      , l_array_source_43
      , l_array_source_44
      , l_array_source_45
      , l_array_source_46
      , l_array_source_46_meaning
      , l_array_source_52
      , l_array_source_53
      , l_array_source_54
      , l_array_source_55
      , l_array_source_56
      , l_array_source_58
      , l_array_source_60
      , l_array_source_61
      , l_array_source_62
      , l_array_source_64
      , l_array_source_69
      , l_array_source_71
      , l_array_source_72
      , l_array_source_73
      , l_array_source_74
      , l_array_source_75
      , l_array_source_76
      , l_array_source_77
      , l_array_source_78
      , l_array_source_79
      , l_array_source_80
      LIMIT l_rows;

  --
  IF (C_LEVEL_EVENT >= g_log_level) THEN
            trace
               (p_msg      => '# rows extracted from line extract objects = '||TO_CHAR(line_cur%ROWCOUNT)
               ,p_level    => C_LEVEL_EVENT
               ,p_module   => l_log_module);
  END IF;
  --
  EXIT WHEN l_array_entity_id.count = 0;

  XLA_AE_LINES_PKG.g_rec_lines := null;

--
-- Bug 4458708
--
XLA_AE_LINES_PKG.g_LineNumber := 0;
--
--

FOR Idx IN 1..l_array_event_id.count LOOP
   --
   -- 5648433 (move l_event_id out of IF statement)  set l_event_id to be used inside IF condition
   --
   l_event_id := l_array_event_id(idx);  -- 5648433

   --
   -- Bug 4872078 - Do nothing if the event is meant for transaction reversal
   --

   IF NVL(xla_ae_header_pkg.g_rec_header_new.array_trx_acct_reversal_option
             (g_array_event(l_event_id).array_value_num('header_index'))
         ,'N'
         ) <> 'Y'
   THEN
      IF (C_LEVEL_STATEMENT >= g_log_level) THEN
         trace
            (p_msg      => 'Trancaction revesal option is not Y '
            ,p_level    => C_LEVEL_STATEMENT
            ,p_module   => l_log_module);
      END IF;

--
-- set the XLA_AE_JOURNAL_ENTRY_PKG.g_global_status to C_VALID (0)
--
XLA_AE_JOURNAL_ENTRY_PKG.g_global_status := XLA_AE_JOURNAL_ENTRY_PKG.C_VALID;
--
-- set event info as cache for other routines to refer event attributes
--

IF l_event_id <> NVL(l_previous_event_id, -1) THEN
   l_previous_event_id := l_event_id;

   XLA_AE_JOURNAL_ENTRY_PKG.set_event_info
      (p_application_id           => p_application_id
      ,p_primary_ledger_id        => p_primary_ledger_id
      ,p_base_ledger_id           => p_base_ledger_id
      ,p_target_ledger_id         => p_target_ledger_id
      ,p_entity_id                => l_array_entity_id(Idx)
      ,p_legal_entity_id          => l_array_legal_entity_id(Idx)
      ,p_entity_code              => l_array_entity_code(Idx)
      ,p_transaction_num          => l_array_transaction_num(Idx)
      ,p_event_id                 => l_array_event_id(Idx)
      ,p_event_class_code         => l_array_class_code(Idx)
      ,p_event_type_code          => l_array_event_type(Idx)
      ,p_event_number             => l_array_event_number(Idx)
      ,p_event_date               => l_array_event_date(Idx)
      ,p_transaction_date         => l_array_transaction_date(Idx)
      ,p_reference_num_1          => l_array_reference_num_1(Idx)
      ,p_reference_num_2          => l_array_reference_num_2(Idx)
      ,p_reference_num_3          => l_array_reference_num_3(Idx)
      ,p_reference_num_4          => l_array_reference_num_4(Idx)
      ,p_reference_char_1         => l_array_reference_char_1(Idx)
      ,p_reference_char_2         => l_array_reference_char_2(Idx)
      ,p_reference_char_3         => l_array_reference_char_3(Idx)
      ,p_reference_char_4         => l_array_reference_char_4(Idx)
      ,p_reference_date_1         => l_array_reference_date_1(Idx)
      ,p_reference_date_2         => l_array_reference_date_2(Idx)
      ,p_reference_date_3         => l_array_reference_date_3(Idx)
      ,p_reference_date_4         => l_array_reference_date_4(Idx)
      ,p_event_created_by         => l_array_event_created_by(Idx)
      ,p_budgetary_control_flag   => l_array_budgetary_control_flag(Idx));
       --
END IF;



--
xla_ae_lines_pkg.SetExtractLine(p_extract_line => l_array_extract_line_num(Idx));

l_acct_reversal_source := SUBSTR(l_array_source_19(Idx), 1,30);

IF l_continue_with_lines THEN
   IF NVL(l_acct_reversal_source, 'N') NOT IN ('N','Y','B') THEN
      xla_ae_journal_entry_pkg.g_global_status      :=  xla_ae_journal_entry_pkg.C_INVALID;

      xla_accounting_err_pkg.build_message
         (p_appli_s_name            => 'XLA'
         ,p_msg_name                => 'XLA_AP_INVALID_REVERSAL_OPTION'
         ,p_token_1                 => 'LINE_NUMBER'
         ,p_value_1                 => l_array_extract_line_num(Idx)
         ,p_token_2                 => 'PRODUCT_NAME'
         ,p_value_2                 => xla_ae_journal_entry_pkg.g_cache_event.application_name
         ,p_entity_id               => xla_ae_journal_entry_pkg.g_cache_event.entity_id
         ,p_event_id                => xla_ae_journal_entry_pkg.g_cache_event.event_id
         ,p_ledger_id               => xla_ae_journal_entry_pkg.g_cache_event.target_ledger_id);

   ELSIF NVL(l_acct_reversal_source, 'N') IN ('Y','B') THEN
      --
      -- following sets the accounting attributes needed to reverse
      -- accounting for a distributeion
      --

      --
      -- 5217187
      --
      l_rec_rev_acct_attrs.array_acct_attr_code(1):= 'GL_DATE';
      l_rec_rev_acct_attrs.array_date_value(1) := XLA_AE_HEADER_PKG.g_rec_header_new.array_gl_date(
                                       g_array_event(l_event_id).array_value_num('header_index'));
      --
      --

      l_rec_rev_acct_attrs.array_acct_attr_code(2) := 'ACCOUNTING_REVERSAL_OPTION';
      l_rec_rev_acct_attrs.array_char_value(2)  := l_array_source_19(Idx);
      l_rec_rev_acct_attrs.array_acct_attr_code(3) := 'DISTRIBUTION_IDENTIFIER_1';
      l_rec_rev_acct_attrs.array_num_value(3)  := l_array_source_71(Idx);
      l_rec_rev_acct_attrs.array_acct_attr_code(4) := 'DISTRIBUTION_TYPE';
      l_rec_rev_acct_attrs.array_char_value(4)  := l_array_source_21(Idx);
      l_rec_rev_acct_attrs.array_acct_attr_code(5) := 'ENC_UPG_CR_ACCT_CLASS';
      l_rec_rev_acct_attrs.array_char_value(5)  := l_array_source_76(Idx);
      l_rec_rev_acct_attrs.array_acct_attr_code(6) := 'ENC_UPG_CR_CCID';
      l_rec_rev_acct_attrs.array_num_value(6)  := l_array_source_31(Idx);
      l_rec_rev_acct_attrs.array_acct_attr_code(7) := 'ENC_UPG_CR_ENTERED_AMT';
      l_rec_rev_acct_attrs.array_num_value(7)  := l_array_source_32(Idx);
      l_rec_rev_acct_attrs.array_acct_attr_code(8) := 'ENC_UPG_CR_ENTERED_CURR';
      l_rec_rev_acct_attrs.array_char_value(8)  := g_array_event(l_event_id).array_value_char('source_33');
      l_rec_rev_acct_attrs.array_acct_attr_code(9) := 'ENC_UPG_CR_LEDGER_AMT';
      l_rec_rev_acct_attrs.array_num_value(9)  := l_array_source_34(Idx);
      l_rec_rev_acct_attrs.array_acct_attr_code(10) := 'ENC_UPG_DR_ACCT_CLASS';
      l_rec_rev_acct_attrs.array_char_value(10)  := l_array_source_77(Idx);
      l_rec_rev_acct_attrs.array_acct_attr_code(11) := 'ENC_UPG_DR_CCID';
      l_rec_rev_acct_attrs.array_num_value(11)  := l_array_source_35(Idx);
      l_rec_rev_acct_attrs.array_acct_attr_code(12) := 'ENC_UPG_DR_ENTERED_AMT';
      l_rec_rev_acct_attrs.array_num_value(12)  := l_array_source_36(Idx);
      l_rec_rev_acct_attrs.array_acct_attr_code(13) := 'ENC_UPG_DR_ENTERED_CURR';
      l_rec_rev_acct_attrs.array_char_value(13)  := g_array_event(l_event_id).array_value_char('source_33');
      l_rec_rev_acct_attrs.array_acct_attr_code(14) := 'ENC_UPG_DR_LEDGER_AMT';
      l_rec_rev_acct_attrs.array_num_value(14)  := l_array_source_37(Idx);
      l_rec_rev_acct_attrs.array_acct_attr_code(15) := 'ENC_UPG_OPTION';
      l_rec_rev_acct_attrs.array_char_value(15)  := l_array_source_38(Idx);
      l_rec_rev_acct_attrs.array_acct_attr_code(16) := 'PARTY_TYPE';
      l_rec_rev_acct_attrs.array_char_value(16)  := g_array_event(l_event_id).array_value_char('source_49');
      l_rec_rev_acct_attrs.array_acct_attr_code(17) := 'REVERSED_DISTRIBUTION_ID1';
      l_rec_rev_acct_attrs.array_num_value(17)  := l_array_source_80(Idx);
      l_rec_rev_acct_attrs.array_acct_attr_code(18) := 'REVERSED_DISTRIBUTION_TYPE';
      l_rec_rev_acct_attrs.array_char_value(18)  := l_array_source_21(Idx);
      l_rec_rev_acct_attrs.array_acct_attr_code(19) := 'TAX_LINE_REF_ID';
      l_rec_rev_acct_attrs.array_num_value(19)  := l_array_source_52(Idx);
      l_rec_rev_acct_attrs.array_acct_attr_code(20) := 'TAX_REC_NREC_DIST_REF_ID';
      l_rec_rev_acct_attrs.array_num_value(20)  := l_array_source_53(Idx);
      l_rec_rev_acct_attrs.array_acct_attr_code(21) := 'TAX_SUMMARY_LINE_REF_ID';
      l_rec_rev_acct_attrs.array_num_value(21)  := l_array_source_54(Idx);
      l_rec_rev_acct_attrs.array_acct_attr_code(22) := 'UPG_CR_ENC_TYPE_ID';
      l_rec_rev_acct_attrs.array_num_value(22)  := l_array_source_55(Idx);
      l_rec_rev_acct_attrs.array_acct_attr_code(23) := 'UPG_DR_ENC_TYPE_ID';
      l_rec_rev_acct_attrs.array_num_value(23)  := l_array_source_56(Idx);


      xla_ae_lines_pkg.SetAcctReversalAttrs
         (p_event_id             => l_event_id
         ,p_rec_acct_attrs       => l_rec_rev_acct_attrs
         ,p_calculate_acctd_flag => l_calculate_acctd_flag
         ,p_calculate_g_l_flag   => l_calculate_g_l_flag);
   END IF;

   IF NVL(l_acct_reversal_source, 'N') IN ('N','B') THEN
       l_actual_flag := NULL;  l_actual_gain_loss_ref := '#####';

--
AcctLineType_50 (
 p_application_id  => p_application_id
 ,p_event_id     => l_event_id
 ,p_calculate_acctd_flag => l_calculate_acctd_flag
 ,p_calculate_g_l_flag => l_calculate_g_l_flag
 ,p_actual_flag => l_actual_flag
 ,p_balance_type_code => l_balance_type_code
 ,p_gain_or_loss_ref=> l_gain_or_loss_ref
 
 , p_source_17 => g_array_event(l_event_id).array_value_char('source_17')
 , p_source_17_meaning => g_array_event(l_event_id).array_value_char('source_17_meaning')
 , p_source_19 => l_array_source_19(Idx)
 , p_source_21 => l_array_source_21(Idx)
 , p_source_24 => g_array_event(l_event_id).array_value_num('source_24')
 , p_source_25 => l_array_source_25(Idx)
 , p_source_31 => l_array_source_31(Idx)
 , p_source_32 => l_array_source_32(Idx)
 , p_source_33 => g_array_event(l_event_id).array_value_char('source_33')
 , p_source_34 => l_array_source_34(Idx)
 , p_source_35 => l_array_source_35(Idx)
 , p_source_36 => l_array_source_36(Idx)
 , p_source_37 => l_array_source_37(Idx)
 , p_source_38 => l_array_source_38(Idx)
 , p_source_43 => l_array_source_43(Idx)
 , p_source_44 => l_array_source_44(Idx)
 , p_source_45 => l_array_source_45(Idx)
 , p_source_46 => l_array_source_46(Idx)
 , p_source_46_meaning => l_array_source_46_meaning(Idx)
 , p_source_49 => g_array_event(l_event_id).array_value_char('source_49')
 , p_source_52 => l_array_source_52(Idx)
 , p_source_53 => l_array_source_53(Idx)
 , p_source_54 => l_array_source_54(Idx)
 , p_source_55 => l_array_source_55(Idx)
 , p_source_56 => l_array_source_56(Idx)
 , p_source_69 => l_array_source_69(Idx)
 , p_source_71 => l_array_source_71(Idx)
 , p_source_72 => l_array_source_72(Idx)
 , p_source_73 => l_array_source_73(Idx)
 , p_source_74 => l_array_source_74(Idx)
 , p_source_75 => l_array_source_75(Idx)
 , p_source_76 => l_array_source_76(Idx)
 , p_source_77 => l_array_source_77(Idx)
 , p_source_78 => l_array_source_78(Idx)
 , p_source_79 => l_array_source_79(Idx)
 , p_source_80 => l_array_source_80(Idx)
 );
If(l_balance_type_code = 'A') THEN
  l_actual_gain_loss_ref := l_gain_or_loss_ref;
END IF;

--


--
AcctLineType_51 (
 p_application_id  => p_application_id
 ,p_event_id     => l_event_id
 ,p_calculate_acctd_flag => l_calculate_acctd_flag
 ,p_calculate_g_l_flag => l_calculate_g_l_flag
 ,p_actual_flag => l_actual_flag
 ,p_balance_type_code => l_balance_type_code
 ,p_gain_or_loss_ref=> l_gain_or_loss_ref
 
 , p_source_19 => l_array_source_19(Idx)
 , p_source_21 => l_array_source_21(Idx)
 , p_source_24 => g_array_event(l_event_id).array_value_num('source_24')
 , p_source_31 => l_array_source_31(Idx)
 , p_source_32 => l_array_source_32(Idx)
 , p_source_33 => g_array_event(l_event_id).array_value_char('source_33')
 , p_source_34 => l_array_source_34(Idx)
 , p_source_35 => l_array_source_35(Idx)
 , p_source_36 => l_array_source_36(Idx)
 , p_source_37 => l_array_source_37(Idx)
 , p_source_38 => l_array_source_38(Idx)
 , p_source_43 => l_array_source_43(Idx)
 , p_source_44 => l_array_source_44(Idx)
 , p_source_45 => l_array_source_45(Idx)
 , p_source_46 => l_array_source_46(Idx)
 , p_source_46_meaning => l_array_source_46_meaning(Idx)
 , p_source_49 => g_array_event(l_event_id).array_value_char('source_49')
 , p_source_52 => l_array_source_52(Idx)
 , p_source_53 => l_array_source_53(Idx)
 , p_source_54 => l_array_source_54(Idx)
 , p_source_55 => l_array_source_55(Idx)
 , p_source_56 => l_array_source_56(Idx)
 , p_source_58 => l_array_source_58(Idx)
 , p_source_60 => l_array_source_60(Idx)
 , p_source_61 => l_array_source_61(Idx)
 , p_source_62 => l_array_source_62(Idx)
 , p_source_64 => l_array_source_64(Idx)
 , p_source_69 => l_array_source_69(Idx)
 , p_source_71 => l_array_source_71(Idx)
 , p_source_76 => l_array_source_76(Idx)
 , p_source_77 => l_array_source_77(Idx)
 , p_source_78 => l_array_source_78(Idx)
 , p_source_79 => l_array_source_79(Idx)
 , p_source_80 => l_array_source_80(Idx)
 );
If(l_balance_type_code = 'A') THEN
  l_actual_gain_loss_ref := l_gain_or_loss_ref;
END IF;

--

      -- only execute it if calculate g/l flag is yes, and primary or secondary ledger
      -- or secondary ledger that has different currency with primary
      -- or alc that is calculated by sla
      IF (((l_calculate_g_l_flag = 'Y' AND XLA_AE_JOURNAL_ENTRY_PKG.g_cache_ledgers_info.ledger_category_code <> 'ALC') or
            (XLA_AE_JOURNAL_ENTRY_PKG.g_cache_ledgers_info.ledger_category_code in ('ALC', 'SECONDARY') AND XLA_AE_JOURNAL_ENTRY_PKG.g_cache_ledgers_info.calculate_amts_flag='Y'))

--      IF((l_calculate_g_l_flag='Y' or XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id <>
--                    XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.ledger_id)
          AND (l_actual_flag = 'A')) THEN
        XLA_AE_LINES_PKG.CreateGainOrLossLines(
          p_event_id         => xla_ae_journal_entry_pkg.g_cache_event.event_id
         ,p_application_id   => p_application_id
         ,p_amb_context_code => 'DEFAULT'
         ,p_entity_code      => xla_ae_journal_entry_pkg.g_cache_event.entity_code
         ,p_event_class_code => C_EVENT_CLASS_CODE
         ,p_event_type_code  => C_EVENT_TYPE_CODE
         
         ,p_gain_ccid        => -1
         ,p_loss_ccid        => -1

         ,p_actual_flag      => l_actual_flag
         ,p_enc_flag         => null
         ,p_actual_g_l_ref   => l_actual_gain_loss_ref
         ,p_enc_g_l_ref      => null
         );
      END IF;
   END IF;
END IF;

   ELSE
      --
      -- Bug 4872078 - Do nothing if the event is meant for transaction reversal
      --
      IF (C_LEVEL_STATEMENT >= g_log_level) THEN
         trace
            (p_msg      => 'Trancaction revesal option is Y'
            ,p_level    => C_LEVEL_STATEMENT
            ,p_module   => l_log_module);
      END IF;
   END IF;

END LOOP;
l_result := XLA_AE_LINES_PKG.InsertLines ;
end loop;
close line_cur;


--
-- insert headers into xla_ae_headers_gt table
--
l_result := XLA_AE_HEADER_PKG.InsertHeaders ;

-- insert into errors table here.

END LOOP;

--
-- 4865292
--
-- Compare g_hdr_extract_count with event count in
-- CreateHeadersAndLines.
--
g_hdr_extract_count := g_hdr_extract_count + header_cur%ROWCOUNT;

IF (C_LEVEL_STATEMENT >= g_log_level) THEN
   trace (p_msg     => '# rows extracted from header extract objects '
                    || ' (running total): '
                    || g_hdr_extract_count
         ,p_level   => C_LEVEL_STATEMENT
         ,p_module  => l_log_module);
END IF;

CLOSE header_cur;
--

--
IF (C_LEVEL_PROCEDURE >= g_log_level) THEN
   trace
      (p_msg      => 'END of EventClass_107'
      ,p_level    => C_LEVEL_PROCEDURE
      ,p_module   => l_log_module);
END IF;
--
RETURN l_result;
EXCEPTION
WHEN xla_exceptions_pkg.application_exception THEN
   
IF header_cur%ISOPEN THEN CLOSE header_cur; END IF;

   
IF line_cur%ISOPEN   THEN CLOSE line_cur;   END IF;

   RAISE;

WHEN NO_DATA_FOUND THEN

IF header_cur%ISOPEN THEN CLOSE header_cur; END IF;
IF line_cur%ISOPEN   THEN CLOSE line_cur;   END IF;

FOR header_record IN header_cur
LOOP
    l_array_header_events(header_record.event_id) := header_record.event_id;
END LOOP;

l_first_event_id := l_array_header_events(l_array_header_events.FIRST);
l_last_event_id := l_array_header_events(l_array_header_events.LAST);

fnd_file.put_line(fnd_file.LOG, '                    ');
fnd_file.put_line(fnd_file.LOG, '***************************************************************************');
fnd_file.put_line(fnd_file.LOG, 'EVENT CLASS CODE = ' || C_EVENT_CLASS_CODE );
fnd_file.put_line(fnd_file.LOG, 'The following events are present in the line extract but MISSING in the header extract: ');

FOR line_record IN line_cur(l_first_event_id, l_last_event_id)
LOOP
	IF (NOT l_array_header_events.EXISTS(line_record.event_id))  AND (NOT l_array_duplicate_checker.EXISTS(line_record.event_id)) THEN
	fnd_file.put_line(fnd_file.log, 'Event_id = ' || line_record.event_id);
        l_array_duplicate_checker(line_record.event_id) := line_record.event_id;
	END IF;
END LOOP;

fnd_file.put_line(fnd_file.LOG, '***************************************************************************');
fnd_file.put_line(fnd_file.LOG, '                    ');


xla_exceptions_pkg.raise_message
      (p_location => 'XLA_00200_AAD_S_000010_BC_PKG.EventClass_107');


WHEN OTHERS THEN
   xla_exceptions_pkg.raise_message
      (p_location => 'XLA_00200_AAD_S_000010_BC_PKG.EventClass_107');
END EventClass_107;
--

---------------------------------------
--
-- PRIVATE PROCEDURE
--         insert_sources_108
--
----------------------------------------
--
PROCEDURE insert_sources_108(
                                p_target_ledger_id       IN NUMBER
                              , p_language               IN VARCHAR2
                              , p_sla_ledger_id          IN NUMBER
                              , p_pad_start_date         IN DATE
                              , p_pad_end_date           IN DATE
                         )
IS

C_EVENT_TYPE_CODE    CONSTANT  VARCHAR2(30)  := 'PREPAYMENTS_ALL';
C_EVENT_CLASS_CODE   CONSTANT  VARCHAR2(30) := 'PREPAYMENTS';
p_apps_owner                   VARCHAR2(30);
l_log_module                   VARCHAR2(240);
BEGIN
IF g_log_enabled THEN
      l_log_module := C_DEFAULT_MODULE||'.insert_sources_108';
END IF;
IF (C_LEVEL_PROCEDURE >= g_log_level) THEN

      trace
         (p_msg      => 'BEGIN of insert_sources_108'
         ,p_level    => C_LEVEL_PROCEDURE
         ,p_module   => l_log_module);

END IF;

-- select APPS owner
SELECT oracle_username
  INTO p_apps_owner
  FROM fnd_oracle_userid
 WHERE read_only_flag = 'U'
;

IF (C_LEVEL_STATEMENT >= g_log_level) THEN
      trace
         (p_msg      => 'p_target_ledger_id = '||p_target_ledger_id||
                        ' - p_language = '||p_language||
                        ' - p_sla_ledger_id  = '||p_sla_ledger_id ||
                        ' - p_pad_start_date = '||TO_CHAR(p_pad_start_date)||
                        ' - p_pad_end_date = '||TO_CHAR(p_pad_end_date)||
                        ' - p_apps_owner = '||TO_CHAR(p_apps_owner)
         ,p_level    => C_LEVEL_STATEMENT
         ,p_module   => l_log_module);
END IF;


--
INSERT INTO xla_diag_sources --hdr2
(
        event_id
      , ledger_id
      , sla_ledger_id
      , description_language
      , object_name
      , object_type_code
      , line_number
      , source_application_id
      , source_type_code
      , source_code
      , source_value
      , source_meaning
      , created_by
      , creation_date
      , last_update_date
      , last_updated_by
      , last_update_login
      , program_update_date
      , program_application_id
      , program_id
      , request_id
)
SELECT
        event_id
      , p_target_ledger_id
      , p_sla_ledger_id
      , p_language
      , object_name
      , object_type_code
      , line_number
      , source_application_id
      , source_type_code
      , source_code
      , SUBSTR(source_value ,1,1996)
      , SUBSTR(source_meaning ,1,200)
      , xla_environment_pkg.g_Usr_Id
      , TRUNC(SYSDATE)
      , TRUNC(SYSDATE)
      , xla_environment_pkg.g_Usr_Id
      , xla_environment_pkg.g_Login_Id
      , TRUNC(SYSDATE)
      , xla_environment_pkg.g_Prog_Appl_Id
      , xla_environment_pkg.g_Prog_Id
      , xla_environment_pkg.g_Req_Id
  FROM (
       SELECT xet.event_id                  event_id
            , 0                          line_number
            , CASE r
               WHEN 1 THEN 'AP_SYSTEM_PARAMETERS_EXTRACT_V' 
                WHEN 2 THEN 'AP_SYSTEM_PARAMETERS_EXTRACT_V' 
                WHEN 3 THEN 'AP_SYSTEM_PARAMETERS_EXTRACT_V' 
                WHEN 4 THEN 'AP_SYSTEM_PARAMETERS_EXTRACT_V' 
                WHEN 5 THEN 'AP_SYSTEM_PARAMETERS_EXTRACT_V' 
                WHEN 6 THEN 'AP_INVOICE_EXTRACT_HEADER_V' 
                WHEN 7 THEN 'AP_INVOICE_EXTRACT_HEADER_V' 
                WHEN 8 THEN 'AP_INVOICE_EXTRACT_HEADER_V' 
                WHEN 9 THEN 'AP_INVOICE_EXTRACT_HEADER_V' 
                WHEN 10 THEN 'AP_INVOICE_EXTRACT_HEADER_V' 
                WHEN 11 THEN 'AP_INVOICE_EXTRACT_HEADER_V' 
                WHEN 12 THEN 'AP_INVOICE_EXTRACT_HEADER_V' 
                WHEN 13 THEN 'AP_INVOICE_EXTRACT_HEADER_V' 
                WHEN 14 THEN 'AP_INVOICE_EXTRACT_HEADER_V' 
                WHEN 15 THEN 'AP_INVOICE_EXTRACT_HEADER_V' 
                WHEN 16 THEN 'AP_INVOICE_EXTRACT_HEADER_V' 
                
               ELSE null
              END                           object_name
            , CASE r
                WHEN 1 THEN 'HEADER' 
                WHEN 2 THEN 'HEADER' 
                WHEN 3 THEN 'HEADER' 
                WHEN 4 THEN 'HEADER' 
                WHEN 5 THEN 'HEADER' 
                WHEN 6 THEN 'HEADER' 
                WHEN 7 THEN 'HEADER' 
                WHEN 8 THEN 'HEADER' 
                WHEN 9 THEN 'HEADER' 
                WHEN 10 THEN 'HEADER' 
                WHEN 11 THEN 'HEADER' 
                WHEN 12 THEN 'HEADER' 
                WHEN 13 THEN 'HEADER' 
                WHEN 14 THEN 'HEADER' 
                WHEN 15 THEN 'HEADER' 
                WHEN 16 THEN 'HEADER' 
                
                ELSE null
              END                           object_type_code
            , CASE r
                WHEN 1 THEN '200' 
                WHEN 2 THEN '200' 
                WHEN 3 THEN '200' 
                WHEN 4 THEN '200' 
                WHEN 5 THEN '200' 
                WHEN 6 THEN '200' 
                WHEN 7 THEN '200' 
                WHEN 8 THEN '200' 
                WHEN 9 THEN '200' 
                WHEN 10 THEN '200' 
                WHEN 11 THEN '200' 
                WHEN 12 THEN '200' 
                WHEN 13 THEN '200' 
                WHEN 14 THEN '200' 
                WHEN 15 THEN '200' 
                WHEN 16 THEN '200' 
                
                ELSE null
              END                           source_application_id
            , 'S'             source_type_code
            , CASE r
                WHEN 1 THEN 'ASP_RATE_VAR_GAIN_CCID' 
                WHEN 2 THEN 'ASP_AUTOMATIC_OFFSETS_VALUE' 
                WHEN 3 THEN 'ASP_RATE_VAR_LOSS_CCID' 
                WHEN 4 THEN 'ASP_AUTO_OFFSET_FLAG' 
                WHEN 5 THEN 'FSP_PURCH_ENCUMBRANCE_FLAG' 
                WHEN 6 THEN 'AI_INVOICE_ID' 
                WHEN 7 THEN 'AI_INVOICE_CURRENCY_CODE' 
                WHEN 8 THEN 'INV_EXCHANGE_DATE' 
                WHEN 9 THEN 'INV_EXCHANGE_RATE' 
                WHEN 10 THEN 'INV_EXCHANGE_RATE_TYPE' 
                WHEN 11 THEN 'AI_VENDOR_ID' 
                WHEN 12 THEN 'AI_VENDOR_SITE_ID' 
                WHEN 13 THEN 'THIRD_PARTY_TYPE' 
                WHEN 14 THEN 'INV_DOC_SEQUENCE_CATEGORY' 
                WHEN 15 THEN 'INV_DOC_SEQUENCE_IDENTIFIER' 
                WHEN 16 THEN 'INV_DOC_SEQUENCE_VALUE' 
                
                ELSE null
              END                           source_code
            , CASE r
                WHEN 1 THEN TO_CHAR(h3.ASP_RATE_VAR_GAIN_CCID)
                WHEN 2 THEN TO_CHAR(h3.ASP_AUTOMATIC_OFFSETS_VALUE)
                WHEN 3 THEN TO_CHAR(h3.ASP_RATE_VAR_LOSS_CCID)
                WHEN 4 THEN TO_CHAR(h3.ASP_AUTO_OFFSET_FLAG)
                WHEN 5 THEN TO_CHAR(h3.FSP_PURCH_ENCUMBRANCE_FLAG)
                WHEN 6 THEN TO_CHAR(h2.AI_INVOICE_ID)
                WHEN 7 THEN TO_CHAR(h2.AI_INVOICE_CURRENCY_CODE)
                WHEN 8 THEN TO_CHAR(h2.INV_EXCHANGE_DATE)
                WHEN 9 THEN TO_CHAR(h2.INV_EXCHANGE_RATE)
                WHEN 10 THEN TO_CHAR(h2.INV_EXCHANGE_RATE_TYPE)
                WHEN 11 THEN TO_CHAR(h2.AI_VENDOR_ID)
                WHEN 12 THEN TO_CHAR(h2.AI_VENDOR_SITE_ID)
                WHEN 13 THEN TO_CHAR(h2.THIRD_PARTY_TYPE)
                WHEN 14 THEN TO_CHAR(h2.INV_DOC_SEQUENCE_CATEGORY)
                WHEN 15 THEN TO_CHAR(h2.INV_DOC_SEQUENCE_IDENTIFIER)
                WHEN 16 THEN TO_CHAR(h2.INV_DOC_SEQUENCE_VALUE)
                
                ELSE null
              END                           source_value
            , CASE r
                WHEN 2 THEN fvl7.meaning
                WHEN 4 THEN fvl12.meaning
                WHEN 5 THEN fvl17.meaning
                
                ELSE null
              END               source_meaning
         FROM xla_events_gt     xet  
      , AP_INVOICE_EXTRACT_HEADER_V  h2
      , AP_SYSTEM_PARAMETERS_EXTRACT_V  h3
  , fnd_lookup_values    fvl7
  , fnd_lookup_values    fvl12
  , fnd_lookup_values    fvl17
             ,(select rownum r from all_objects where rownum <= 16 and owner = p_apps_owner)
         WHERE xet.event_date between p_pad_start_date AND p_pad_end_date
           AND xet.event_class_code = C_EVENT_CLASS_CODE
              AND h2.event_id = xet.event_id
 AND h3.asp_org_id = h2.ai_org_id   AND fvl7.lookup_type(+)         = 'LIABILITY FLEXBUILD METHOD'
  AND fvl7.lookup_code(+)         = h3.ASP_AUTOMATIC_OFFSETS_VALUE
  AND fvl7.view_application_id(+) = 200
  AND fvl7.language(+)            = USERENV('LANG')
     AND fvl12.lookup_type(+)         = 'YES_NO'
  AND fvl12.lookup_code(+)         = h3.ASP_AUTO_OFFSET_FLAG
  AND fvl12.view_application_id(+) = 0
  AND fvl12.language(+)            = USERENV('LANG')
     AND fvl17.lookup_type(+)         = 'YES_NO'
  AND fvl17.lookup_code(+)         = h3.FSP_PURCH_ENCUMBRANCE_FLAG
  AND fvl17.view_application_id(+) = 0
  AND fvl17.language(+)            = USERENV('LANG')
  
)
;
--
IF (C_LEVEL_STATEMENT >= g_log_level) THEN

      trace
         (p_msg      => 'number of header sources inserted = '||SQL%ROWCOUNT
         ,p_level    => C_LEVEL_STATEMENT
         ,p_module   => l_log_module);

END IF;
--



--
INSERT INTO xla_diag_sources  --line2
(
        event_id
      , ledger_id
      , sla_ledger_id
      , description_language
      , object_name
      , object_type_code
      , line_number
      , source_application_id
      , source_type_code
      , source_code
      , source_value
      , source_meaning
      , created_by
      , creation_date
      , last_update_date
      , last_updated_by
      , last_update_login
      , program_update_date
      , program_application_id
      , program_id
      , request_id
)
SELECT  event_id
      , p_target_ledger_id
      , p_sla_ledger_id
      , p_language
      , object_name
      , object_type_code
      , line_number
      , source_application_id
      , source_type_code
      , source_code
      , SUBSTR(source_value,1,1996)
      , SUBSTR(source_meaning ,1,200)
      , xla_environment_pkg.g_Usr_Id
      , TRUNC(SYSDATE)
      , TRUNC(SYSDATE)
      , xla_environment_pkg.g_Usr_Id
      , xla_environment_pkg.g_Login_Id
      , TRUNC(SYSDATE)
      , xla_environment_pkg.g_Prog_Appl_Id
      , xla_environment_pkg.g_Prog_Id
      , xla_environment_pkg.g_Req_Id
  FROM (
       SELECT xet.event_id                  event_id
            , l1.line_number                 line_number
            , CASE r
               WHEN 1 THEN 'AP_EXTRACT_INVOICE_DTLS_BC_V' 
                WHEN 2 THEN 'AP_EXTRACT_INVOICE_DTLS_BC_V' 
                WHEN 3 THEN 'AP_EXTRACT_INVOICE_DTLS_BC_V' 
                WHEN 4 THEN 'AP_EXTRACT_INVOICE_DTLS_BC_V' 
                WHEN 5 THEN 'AP_EXTRACT_INVOICE_DTLS_BC_V' 
                WHEN 6 THEN 'AP_EXTRACT_INVOICE_DTLS_BC_V' 
                WHEN 7 THEN 'AP_EXTRACT_INVOICE_DTLS_BC_V' 
                WHEN 8 THEN 'AP_EXTRACT_INVOICE_DTLS_BC_V' 
                WHEN 9 THEN 'AP_EXTRACT_INVOICE_DTLS_BC_V' 
                WHEN 10 THEN 'AP_EXTRACT_INVOICE_DTLS_BC_V' 
                WHEN 11 THEN 'AP_EXTRACT_INVOICE_DTLS_BC_V' 
                WHEN 12 THEN 'AP_EXTRACT_INVOICE_DTLS_BC_V' 
                WHEN 13 THEN 'AP_EXTRACT_INVOICE_DTLS_BC_V' 
                WHEN 14 THEN 'AP_EXTRACT_INVOICE_DTLS_BC_V' 
                WHEN 15 THEN 'AP_EXTRACT_INVOICE_DTLS_BC_V' 
                WHEN 16 THEN 'AP_EXTRACT_INVOICE_DTLS_BC_V' 
                WHEN 17 THEN 'AP_EXTRACT_INVOICE_DTLS_BC_V' 
                WHEN 18 THEN 'AP_EXTRACT_INVOICE_DTLS_BC_V' 
                WHEN 19 THEN 'AP_EXTRACT_INVOICE_DTLS_BC_V' 
                WHEN 20 THEN 'AP_EXTRACT_INVOICE_DTLS_BC_V' 
                WHEN 21 THEN 'AP_EXTRACT_INVOICE_DTLS_BC_V' 
                WHEN 22 THEN 'AP_EXTRACT_INVOICE_DTLS_BC_V' 
                WHEN 23 THEN 'AP_EXTRACT_INVOICE_DTLS_BC_V' 
                WHEN 24 THEN 'AP_EXTRACT_INVOICE_DTLS_BC_V' 
                WHEN 25 THEN 'AP_EXTRACT_INVOICE_DTLS_BC_V' 
                WHEN 26 THEN 'AP_EXTRACT_INVOICE_DTLS_BC_V' 
                WHEN 27 THEN 'AP_EXTRACT_INVOICE_DTLS_BC_V' 
                WHEN 28 THEN 'AP_EXTRACT_INVOICE_DTLS_BC_V' 
                WHEN 29 THEN 'AP_EXTRACT_INVOICE_DTLS_BC_V' 
                WHEN 30 THEN 'AP_EXTRACT_INVOICE_DTLS_BC_V' 
                WHEN 31 THEN 'AP_EXTRACT_INVOICE_DTLS_BC_V' 
                WHEN 32 THEN 'ZX_AP_DEF_TAX_EXTRACT_V' 
                WHEN 33 THEN 'ZX_AP_TAX_JRNL_LINE_DESC_V' 
                WHEN 34 THEN 'AP_EXTRACT_INVOICE_DTLS_BC_V' 
                WHEN 35 THEN 'AP_EXTRACT_INVOICE_DTLS_BC_V' 
                WHEN 36 THEN 'AP_EXTRACT_INVOICE_DTLS_BC_V' 
                WHEN 37 THEN 'AP_EXTRACT_INVOICE_DTLS_BC_V' 
                WHEN 38 THEN 'AP_EXTRACT_INVOICE_DTLS_BC_V' 
                WHEN 39 THEN 'AP_EXTRACT_INVOICE_DTLS_BC_V' 
                WHEN 40 THEN 'AP_EXTRACT_INVOICE_DTLS_BC_V' 
                WHEN 41 THEN 'AP_EXTRACT_INVOICE_DTLS_BC_V' 
                WHEN 42 THEN 'AP_EXTRACT_INVOICE_DTLS_BC_V' 
                WHEN 43 THEN 'AP_EXTRACT_INVOICE_DTLS_BC_V' 
                WHEN 44 THEN 'AP_EXTRACT_INVOICE_DTLS_BC_V' 
                WHEN 45 THEN 'AP_EXTRACT_INVOICE_DTLS_BC_V' 
                WHEN 46 THEN 'AP_EXTRACT_INVOICE_DTLS_BC_V' 
                WHEN 47 THEN 'AP_EXTRACT_INVOICE_DTLS_BC_V' 
                
               ELSE null
              END                           object_name
            , CASE r
                WHEN 1 THEN 'LINE' 
                WHEN 2 THEN 'LINE' 
                WHEN 3 THEN 'LINE' 
                WHEN 4 THEN 'LINE' 
                WHEN 5 THEN 'LINE' 
                WHEN 6 THEN 'LINE' 
                WHEN 7 THEN 'LINE' 
                WHEN 8 THEN 'LINE' 
                WHEN 9 THEN 'LINE' 
                WHEN 10 THEN 'LINE' 
                WHEN 11 THEN 'LINE' 
                WHEN 12 THEN 'LINE' 
                WHEN 13 THEN 'LINE' 
                WHEN 14 THEN 'LINE' 
                WHEN 15 THEN 'LINE' 
                WHEN 16 THEN 'LINE' 
                WHEN 17 THEN 'LINE' 
                WHEN 18 THEN 'LINE' 
                WHEN 19 THEN 'LINE' 
                WHEN 20 THEN 'LINE' 
                WHEN 21 THEN 'LINE' 
                WHEN 22 THEN 'LINE' 
                WHEN 23 THEN 'LINE' 
                WHEN 24 THEN 'LINE' 
                WHEN 25 THEN 'LINE' 
                WHEN 26 THEN 'LINE' 
                WHEN 27 THEN 'LINE' 
                WHEN 28 THEN 'LINE' 
                WHEN 29 THEN 'LINE' 
                WHEN 30 THEN 'LINE' 
                WHEN 31 THEN 'LINE' 
                WHEN 32 THEN 'LINE' 
                WHEN 33 THEN 'LINE' 
                WHEN 34 THEN 'LINE' 
                WHEN 35 THEN 'LINE' 
                WHEN 36 THEN 'LINE' 
                WHEN 37 THEN 'LINE' 
                WHEN 38 THEN 'LINE' 
                WHEN 39 THEN 'LINE' 
                WHEN 40 THEN 'LINE' 
                WHEN 41 THEN 'LINE' 
                WHEN 42 THEN 'LINE' 
                WHEN 43 THEN 'LINE' 
                WHEN 44 THEN 'LINE' 
                WHEN 45 THEN 'LINE' 
                WHEN 46 THEN 'LINE' 
                WHEN 47 THEN 'LINE' 
                
                ELSE null
              END                           object_type_code
            , CASE r
                WHEN 1 THEN '200' 
                WHEN 2 THEN '200' 
                WHEN 3 THEN '200' 
                WHEN 4 THEN '200' 
                WHEN 5 THEN '200' 
                WHEN 6 THEN '200' 
                WHEN 7 THEN '200' 
                WHEN 8 THEN '200' 
                WHEN 9 THEN '200' 
                WHEN 10 THEN '200' 
                WHEN 11 THEN '200' 
                WHEN 12 THEN '200' 
                WHEN 13 THEN '200' 
                WHEN 14 THEN '200' 
                WHEN 15 THEN '200' 
                WHEN 16 THEN '200' 
                WHEN 17 THEN '200' 
                WHEN 18 THEN '200' 
                WHEN 19 THEN '200' 
                WHEN 20 THEN '200' 
                WHEN 21 THEN '200' 
                WHEN 22 THEN '200' 
                WHEN 23 THEN '200' 
                WHEN 24 THEN '200' 
                WHEN 25 THEN '200' 
                WHEN 26 THEN '200' 
                WHEN 27 THEN '200' 
                WHEN 28 THEN '200' 
                WHEN 29 THEN '200' 
                WHEN 30 THEN '200' 
                WHEN 31 THEN '200' 
                WHEN 32 THEN '200' 
                WHEN 33 THEN '200' 
                WHEN 34 THEN '200' 
                WHEN 35 THEN '200' 
                WHEN 36 THEN '200' 
                WHEN 37 THEN '200' 
                WHEN 38 THEN '200' 
                WHEN 39 THEN '200' 
                WHEN 40 THEN '200' 
                WHEN 41 THEN '200' 
                WHEN 42 THEN '200' 
                WHEN 43 THEN '200' 
                WHEN 44 THEN '200' 
                WHEN 45 THEN '200' 
                WHEN 46 THEN '200' 
                WHEN 47 THEN '200' 
                
                ELSE null
              END                           source_application_id
            , 'S'             source_type_code
            , CASE r
                WHEN 1 THEN 'AID_DESCRIPTION' 
                WHEN 2 THEN 'INV_DIST_BASE_AMOUNT' 
                WHEN 3 THEN 'RELATED_INV_DIST_DEST_TYPE' 
                WHEN 4 THEN 'AID_DIST_CCID' 
                WHEN 5 THEN 'SELF_ASSESSED_TAX_ACCOUNT' 
                WHEN 6 THEN 'AID_LINE_TYPE_LOOKUP_CODE' 
                WHEN 7 THEN 'AID_AMOUNT_VARIANCE' 
                WHEN 8 THEN 'POD_ACCRUE_ON_RECEIPT_FLAG' 
                WHEN 9 THEN 'DIST_ACCOUNT_REVERSAL_OPTION' 
                WHEN 10 THEN 'DISTRIBUTION_LINK_TYPE' 
                WHEN 11 THEN 'ALLOC_TO_MAIN_DIST_ID' 
                WHEN 12 THEN 'BUS_FLOW_AP_APP_ID' 
                WHEN 13 THEN 'BUS_FLOW_INV_DIST_TYPE' 
                WHEN 14 THEN 'BUS_FLOW_INV_ENTITY_CODE' 
                WHEN 15 THEN 'BUS_FLOW_INV_DIST_ID' 
                WHEN 16 THEN 'BUS_FLOW_INV_ID' 
                WHEN 17 THEN 'AID_INVOICE_DIST_ID' 
                WHEN 18 THEN 'UPG_ENC_CR_CCID' 
                WHEN 19 THEN 'UPG_ENC_CR_AMT' 
                WHEN 20 THEN 'UPG_ENC_CR_BASE_AMT' 
                WHEN 21 THEN 'UPG_ENC_DR_CCID' 
                WHEN 22 THEN 'UPG_ENC_DR_AMT' 
                WHEN 23 THEN 'UPG_ENC_DR_BASE_AMT' 
                WHEN 24 THEN 'UPG_AP_ENCUM_OPTION' 
                WHEN 25 THEN 'AID_BASE_AMOUNT_VARIANCE' 
                WHEN 26 THEN 'DEFERRED_END_DATE' 
                WHEN 27 THEN 'DEFERRED_OPTION' 
                WHEN 28 THEN 'DEFERRED_START_DATE' 
                WHEN 29 THEN 'OVERRIDE_ACCTD_AMT_FLAG' 
                WHEN 30 THEN 'AID_PARENT_REVERSAL_ID' 
                WHEN 31 THEN 'AID_STAT_AMOUNT' 
                WHEN 32 THEN 'TAX_LINE_ID' 
                WHEN 33 THEN 'REC_NREC_TAX_DIST_ID' 
                WHEN 34 THEN 'SUMMARY_TAX_LINE_ID' 
                WHEN 35 THEN 'UPG_CR_ENC_TYPE_ID' 
                WHEN 36 THEN 'UPG_DR_ENC_TYPE_ID' 
                WHEN 37 THEN 'PO_DISTRIBUTION_ID' 
                WHEN 38 THEN 'SELF_ASSESSED_TAX_FLAG' 
                WHEN 39 THEN 'BUS_FLOW_PO_APP_ID' 
                WHEN 40 THEN 'BUS_FLOW_PO_DIST_TYPE' 
                WHEN 41 THEN 'BUS_FLOW_PO_ENTITY_CODE' 
                WHEN 42 THEN 'BUS_FLOW_PO_DIST_ID' 
                WHEN 43 THEN 'BUS_FLOW_PO_DOC_ID' 
                WHEN 44 THEN 'ENCUMBRANCE_AMOUNT' 
                WHEN 45 THEN 'ENCUMBRANCE_BASE_AMOUNT' 
                WHEN 46 THEN 'AID_QUANTITY_VARIANCE' 
                WHEN 47 THEN 'AID_BASE_QUANTITY_VARIANCE' 
                
                ELSE null
              END                           source_code
            , CASE r
                WHEN 1 THEN TO_CHAR(l1.AID_DESCRIPTION)
                WHEN 2 THEN TO_CHAR(l1.INV_DIST_BASE_AMOUNT)
                WHEN 3 THEN TO_CHAR(l1.RELATED_INV_DIST_DEST_TYPE)
                WHEN 4 THEN TO_CHAR(l1.AID_DIST_CCID)
                WHEN 5 THEN TO_CHAR(l1.SELF_ASSESSED_TAX_ACCOUNT)
                WHEN 6 THEN TO_CHAR(l1.AID_LINE_TYPE_LOOKUP_CODE)
                WHEN 7 THEN TO_CHAR(l1.AID_AMOUNT_VARIANCE)
                WHEN 8 THEN TO_CHAR(l1.POD_ACCRUE_ON_RECEIPT_FLAG)
                WHEN 9 THEN TO_CHAR(l1.DIST_ACCOUNT_REVERSAL_OPTION)
                WHEN 10 THEN TO_CHAR(l1.DISTRIBUTION_LINK_TYPE)
                WHEN 11 THEN TO_CHAR(l1.ALLOC_TO_MAIN_DIST_ID)
                WHEN 12 THEN TO_CHAR(l1.BUS_FLOW_AP_APP_ID)
                WHEN 13 THEN TO_CHAR(l1.BUS_FLOW_INV_DIST_TYPE)
                WHEN 14 THEN TO_CHAR(l1.BUS_FLOW_INV_ENTITY_CODE)
                WHEN 15 THEN TO_CHAR(l1.BUS_FLOW_INV_DIST_ID)
                WHEN 16 THEN TO_CHAR(l1.BUS_FLOW_INV_ID)
                WHEN 17 THEN TO_CHAR(l1.AID_INVOICE_DIST_ID)
                WHEN 18 THEN TO_CHAR(l1.UPG_ENC_CR_CCID)
                WHEN 19 THEN TO_CHAR(l1.UPG_ENC_CR_AMT)
                WHEN 20 THEN TO_CHAR(l1.UPG_ENC_CR_BASE_AMT)
                WHEN 21 THEN TO_CHAR(l1.UPG_ENC_DR_CCID)
                WHEN 22 THEN TO_CHAR(l1.UPG_ENC_DR_AMT)
                WHEN 23 THEN TO_CHAR(l1.UPG_ENC_DR_BASE_AMT)
                WHEN 24 THEN TO_CHAR(l1.UPG_AP_ENCUM_OPTION)
                WHEN 25 THEN TO_CHAR(l1.AID_BASE_AMOUNT_VARIANCE)
                WHEN 26 THEN TO_CHAR(l1.DEFERRED_END_DATE)
                WHEN 27 THEN TO_CHAR(l1.DEFERRED_OPTION)
                WHEN 28 THEN TO_CHAR(l1.DEFERRED_START_DATE)
                WHEN 29 THEN TO_CHAR(l1.OVERRIDE_ACCTD_AMT_FLAG)
                WHEN 30 THEN TO_CHAR(l1.AID_PARENT_REVERSAL_ID)
                WHEN 31 THEN TO_CHAR(l1.AID_STAT_AMOUNT)
                WHEN 32 THEN TO_CHAR(l4.TAX_LINE_ID)
                WHEN 33 THEN TO_CHAR(l5.REC_NREC_TAX_DIST_ID)
                WHEN 34 THEN TO_CHAR(l1.SUMMARY_TAX_LINE_ID)
                WHEN 35 THEN TO_CHAR(l1.UPG_CR_ENC_TYPE_ID)
                WHEN 36 THEN TO_CHAR(l1.UPG_DR_ENC_TYPE_ID)
                WHEN 37 THEN TO_CHAR(l1.PO_DISTRIBUTION_ID)
                WHEN 38 THEN TO_CHAR(l1.SELF_ASSESSED_TAX_FLAG)
                WHEN 39 THEN TO_CHAR(l1.BUS_FLOW_PO_APP_ID)
                WHEN 40 THEN TO_CHAR(l1.BUS_FLOW_PO_DIST_TYPE)
                WHEN 41 THEN TO_CHAR(l1.BUS_FLOW_PO_ENTITY_CODE)
                WHEN 42 THEN TO_CHAR(l1.BUS_FLOW_PO_DIST_ID)
                WHEN 43 THEN TO_CHAR(l1.BUS_FLOW_PO_DOC_ID)
                WHEN 44 THEN TO_CHAR(l1.ENCUMBRANCE_AMOUNT)
                WHEN 45 THEN TO_CHAR(l1.ENCUMBRANCE_BASE_AMOUNT)
                WHEN 46 THEN TO_CHAR(l1.AID_QUANTITY_VARIANCE)
                WHEN 47 THEN TO_CHAR(l1.AID_BASE_QUANTITY_VARIANCE)
                
                ELSE null
              END                           source_value
            , CASE r
                WHEN 3 THEN fvl9.meaning
                WHEN 6 THEN fvl15.meaning
                WHEN 8 THEN fvl18.meaning
                WHEN 29 THEN fvl46.meaning
                WHEN 38 THEN fvl59.meaning
                
                ELSE null
              END               source_meaning
         FROM  xla_events_gt     xet  
        , AP_EXTRACT_INVOICE_DTLS_BC_V  l1
        , ZX_AP_DEF_TAX_EXTRACT_V  l4
        , ZX_AP_TAX_JRNL_LINE_DESC_V  l5
  , fnd_lookup_values    fvl9
  , fnd_lookup_values    fvl15
  , fnd_lookup_values    fvl18
  , fnd_lookup_values    fvl46
  , fnd_lookup_values    fvl59
            , (select rownum r from all_objects where rownum <= 47 and owner = p_apps_owner)
        WHERE xet.event_date between p_pad_start_date AND p_pad_end_date
          AND xet.event_class_code = C_EVENT_CLASS_CODE
            AND l1.event_id          = xet.event_id
 AND l1.zrnd_tax_dist_id = l4.rec_nrec_tax_dist_id (+)  AND l1.zrnd_tax_dist_id = l5.rec_nrec_tax_dist_id (+)    AND fvl9.lookup_type(+)         = 'DESTINATION TYPE'
  AND fvl9.lookup_code(+)         = l1.RELATED_INV_DIST_DEST_TYPE
  AND fvl9.view_application_id(+) = 201
  AND fvl9.language(+)            = USERENV('LANG')
     AND fvl15.lookup_type(+)         = 'INVOICE DISTRIBUTION TYPE'
  AND fvl15.lookup_code(+)         = l1.AID_LINE_TYPE_LOOKUP_CODE
  AND fvl15.view_application_id(+) = 200
  AND fvl15.language(+)            = USERENV('LANG')
     AND fvl18.lookup_type(+)         = 'YES_NO'
  AND fvl18.lookup_code(+)         = l1.POD_ACCRUE_ON_RECEIPT_FLAG
  AND fvl18.view_application_id(+) = 0
  AND fvl18.language(+)            = USERENV('LANG')
     AND fvl46.lookup_type(+)         = 'YES_NO'
  AND fvl46.lookup_code(+)         = l1.OVERRIDE_ACCTD_AMT_FLAG
  AND fvl46.view_application_id(+) = 0
  AND fvl46.language(+)            = USERENV('LANG')
     AND fvl59.lookup_type(+)         = 'YES_NO'
  AND fvl59.lookup_code(+)         = l1.SELF_ASSESSED_TAX_FLAG
  AND fvl59.view_application_id(+) = 0
  AND fvl59.language(+)            = USERENV('LANG')
  
)
;
--
IF (C_LEVEL_STATEMENT >= g_log_level) THEN

      trace
         (p_msg      => 'number of line sources inserted = '||SQL%ROWCOUNT
         ,p_level    => C_LEVEL_STATEMENT
         ,p_module   => l_log_module);

END IF;


IF (C_LEVEL_PROCEDURE >= g_log_level) THEN
      trace
         (p_msg      => 'END of insert_sources_108'
         ,p_level    => C_LEVEL_PROCEDURE
         ,p_module   => l_log_module);
END IF;
EXCEPTION
  WHEN xla_exceptions_pkg.application_exception THEN
      IF (C_LEVEL_EXCEPTION >= g_log_level) THEN
            trace
               (p_msg      => 'ERROR: XLA_CMP_COMPILER_ERROR = '||sqlerrm
               ,p_level    => C_LEVEL_EXCEPTION
               ,p_module   => l_log_module);
      END IF;
      RAISE;
  WHEN OTHERS THEN
      IF (C_LEVEL_EXCEPTION >= g_log_level) THEN
            trace
               (p_msg      => 'ERROR: XLA_CMP_COMPILER_ERROR = '||sqlerrm
               ,p_level    => C_LEVEL_EXCEPTION
               ,p_module   => l_log_module);
       END IF;
       xla_exceptions_pkg.raise_message
           (p_location => 'XLA_00200_AAD_S_000010_BC_PKG.insert_sources_108');
END insert_sources_108;
--

---------------------------------------
--
-- PRIVATE FUNCTION
--         EventClass_108
--
----------------------------------------
--
FUNCTION EventClass_108
       (p_application_id         IN NUMBER
       ,p_base_ledger_id         IN NUMBER
       ,p_target_ledger_id       IN NUMBER
       ,p_language               IN VARCHAR2
       ,p_currency_code          IN VARCHAR2
       ,p_sla_ledger_id          IN NUMBER
       ,p_pad_start_date         IN DATE
       ,p_pad_end_date           IN DATE
       ,p_primary_ledger_id      IN NUMBER)
RETURN BOOLEAN IS
--
C_EVENT_TYPE_CODE    CONSTANT  VARCHAR2(30)  := 'PREPAYMENTS_ALL';
C_EVENT_CLASS_CODE    CONSTANT  VARCHAR2(30) := 'PREPAYMENTS';

l_calculate_acctd_flag   VARCHAR2(1) :='N';
l_calculate_g_l_flag     VARCHAR2(1) :='N';
--
l_array_legal_entity_id                XLA_AE_JOURNAL_ENTRY_PKG.t_array_Num;
l_array_entity_id                      XLA_AE_JOURNAL_ENTRY_PKG.t_array_Num;
l_array_entity_code                    XLA_AE_JOURNAL_ENTRY_PKG.t_array_V30L;
l_array_transaction_num                XLA_AE_JOURNAL_ENTRY_PKG.t_array_V240L;
l_array_event_id                       XLA_AE_JOURNAL_ENTRY_PKG.t_array_Num;
l_array_class_code                     XLA_AE_JOURNAL_ENTRY_PKG.t_array_V30L;
l_array_event_type                     XLA_AE_JOURNAL_ENTRY_PKG.t_array_V30L;
l_array_event_number                   XLA_AE_JOURNAL_ENTRY_PKG.t_array_Num;
l_array_event_date                     XLA_AE_JOURNAL_ENTRY_PKG.t_array_Date;
l_array_transaction_date               XLA_AE_JOURNAL_ENTRY_PKG.t_array_Date;
l_array_reference_num_1                XLA_AE_JOURNAL_ENTRY_PKG.t_array_Num;
l_array_reference_num_2                XLA_AE_JOURNAL_ENTRY_PKG.t_array_Num;
l_array_reference_num_3                XLA_AE_JOURNAL_ENTRY_PKG.t_array_Num;
l_array_reference_num_4                XLA_AE_JOURNAL_ENTRY_PKG.t_array_Num;
l_array_reference_char_1               XLA_AE_JOURNAL_ENTRY_PKG.t_array_V240L;
l_array_reference_char_2               XLA_AE_JOURNAL_ENTRY_PKG.t_array_V240L;
l_array_reference_char_3               XLA_AE_JOURNAL_ENTRY_PKG.t_array_V240L;
l_array_reference_char_4               XLA_AE_JOURNAL_ENTRY_PKG.t_array_V240L;
l_array_reference_date_1               XLA_AE_JOURNAL_ENTRY_PKG.t_array_Date;
l_array_reference_date_2               XLA_AE_JOURNAL_ENTRY_PKG.t_array_Date;
l_array_reference_date_3               XLA_AE_JOURNAL_ENTRY_PKG.t_array_Date;
l_array_reference_date_4               XLA_AE_JOURNAL_ENTRY_PKG.t_array_Date;
l_array_event_created_by               XLA_AE_JOURNAL_ENTRY_PKG.t_array_V100L;
l_array_budgetary_control_flag         XLA_AE_JOURNAL_ENTRY_PKG.t_array_V30L;
l_array_header_events                  XLA_AE_JOURNAL_ENTRY_PKG.t_array_Num;  --added
l_array_duplicate_checker              XLA_AE_JOURNAL_ENTRY_PKG.t_array_Num;  --added

l_event_id                             NUMBER;
l_previous_event_id                    NUMBER;
l_first_event_id                       NUMBER;
l_last_event_id                        NUMBER;

l_rec_acct_attrs                       XLA_AE_HEADER_PKG.t_rec_acct_attrs;
l_rec_rev_acct_attrs                   XLA_AE_LINES_PKG.t_rec_acct_attrs;
--
--
l_result                    BOOLEAN := TRUE;
l_rows                      NUMBER  := 1000;
l_event_type_name           VARCHAR2(80) := 'All';
l_event_class_name          VARCHAR2(80) := 'Prepayments';
l_description               VARCHAR2(4000);
l_transaction_reversal      NUMBER;
l_ae_header_id              NUMBER;
l_array_extract_line_num    xla_ae_journal_entry_pkg.t_array_Num;
l_log_module                VARCHAR2(240);
--
l_acct_reversal_source      VARCHAR2(30);
l_trx_reversal_source       VARCHAR2(30);

l_continue_with_lines       BOOLEAN := TRUE;
--
l_acc_rev_gl_date_source    DATE;                      -- 4262811
--
type t_array_event_id is table of number index by binary_integer;

l_rec_array_event                    t_rec_array_event;
l_null_rec_array_event               t_rec_array_event;
l_array_ae_header_id                 xla_number_array_type;
l_actual_flag                        VARCHAR2(1) := NULL;
l_actual_gain_loss_ref               VARCHAR2(30) := '#####';
l_balance_type_code                  VARCHAR2(1) :=NULL;
l_gain_or_loss_ref                   VARCHAR2(30) :=NULL;

--
TYPE t_array_lookup_meaning IS TABLE OF fnd_lookup_values.meaning%TYPE INDEX BY BINARY_INTEGER;
--

TYPE t_array_source_6 IS TABLE OF AP_SYSTEM_PARAMETERS_EXTRACT_V.ASP_RATE_VAR_GAIN_CCID%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_7 IS TABLE OF AP_SYSTEM_PARAMETERS_EXTRACT_V.ASP_AUTOMATIC_OFFSETS_VALUE%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_10 IS TABLE OF AP_SYSTEM_PARAMETERS_EXTRACT_V.ASP_RATE_VAR_LOSS_CCID%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_12 IS TABLE OF AP_SYSTEM_PARAMETERS_EXTRACT_V.ASP_AUTO_OFFSET_FLAG%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_17 IS TABLE OF AP_SYSTEM_PARAMETERS_EXTRACT_V.FSP_PURCH_ENCUMBRANCE_FLAG%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_24 IS TABLE OF AP_INVOICE_EXTRACT_HEADER_V.AI_INVOICE_ID%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_33 IS TABLE OF AP_INVOICE_EXTRACT_HEADER_V.AI_INVOICE_CURRENCY_CODE%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_39 IS TABLE OF AP_INVOICE_EXTRACT_HEADER_V.INV_EXCHANGE_DATE%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_40 IS TABLE OF AP_INVOICE_EXTRACT_HEADER_V.INV_EXCHANGE_RATE%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_41 IS TABLE OF AP_INVOICE_EXTRACT_HEADER_V.INV_EXCHANGE_RATE_TYPE%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_47 IS TABLE OF AP_INVOICE_EXTRACT_HEADER_V.AI_VENDOR_ID%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_48 IS TABLE OF AP_INVOICE_EXTRACT_HEADER_V.AI_VENDOR_SITE_ID%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_49 IS TABLE OF AP_INVOICE_EXTRACT_HEADER_V.THIRD_PARTY_TYPE%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_122 IS TABLE OF AP_INVOICE_EXTRACT_HEADER_V.INV_DOC_SEQUENCE_CATEGORY%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_123 IS TABLE OF AP_INVOICE_EXTRACT_HEADER_V.INV_DOC_SEQUENCE_IDENTIFIER%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_124 IS TABLE OF AP_INVOICE_EXTRACT_HEADER_V.INV_DOC_SEQUENCE_VALUE%TYPE INDEX BY BINARY_INTEGER;

TYPE t_array_source_1 IS TABLE OF AP_EXTRACT_INVOICE_DTLS_BC_V.AID_DESCRIPTION%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_8 IS TABLE OF AP_EXTRACT_INVOICE_DTLS_BC_V.INV_DIST_BASE_AMOUNT%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_9 IS TABLE OF AP_EXTRACT_INVOICE_DTLS_BC_V.RELATED_INV_DIST_DEST_TYPE%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_11 IS TABLE OF AP_EXTRACT_INVOICE_DTLS_BC_V.AID_DIST_CCID%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_13 IS TABLE OF AP_EXTRACT_INVOICE_DTLS_BC_V.SELF_ASSESSED_TAX_ACCOUNT%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_15 IS TABLE OF AP_EXTRACT_INVOICE_DTLS_BC_V.AID_LINE_TYPE_LOOKUP_CODE%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_16 IS TABLE OF AP_EXTRACT_INVOICE_DTLS_BC_V.AID_AMOUNT_VARIANCE%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_18 IS TABLE OF AP_EXTRACT_INVOICE_DTLS_BC_V.POD_ACCRUE_ON_RECEIPT_FLAG%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_19 IS TABLE OF AP_EXTRACT_INVOICE_DTLS_BC_V.DIST_ACCOUNT_REVERSAL_OPTION%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_21 IS TABLE OF AP_EXTRACT_INVOICE_DTLS_BC_V.DISTRIBUTION_LINK_TYPE%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_23 IS TABLE OF AP_EXTRACT_INVOICE_DTLS_BC_V.ALLOC_TO_MAIN_DIST_ID%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_25 IS TABLE OF AP_EXTRACT_INVOICE_DTLS_BC_V.BUS_FLOW_AP_APP_ID%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_26 IS TABLE OF AP_EXTRACT_INVOICE_DTLS_BC_V.BUS_FLOW_INV_DIST_TYPE%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_27 IS TABLE OF AP_EXTRACT_INVOICE_DTLS_BC_V.BUS_FLOW_INV_ENTITY_CODE%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_28 IS TABLE OF AP_EXTRACT_INVOICE_DTLS_BC_V.BUS_FLOW_INV_DIST_ID%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_29 IS TABLE OF AP_EXTRACT_INVOICE_DTLS_BC_V.BUS_FLOW_INV_ID%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_30 IS TABLE OF AP_EXTRACT_INVOICE_DTLS_BC_V.AID_INVOICE_DIST_ID%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_31 IS TABLE OF AP_EXTRACT_INVOICE_DTLS_BC_V.UPG_ENC_CR_CCID%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_32 IS TABLE OF AP_EXTRACT_INVOICE_DTLS_BC_V.UPG_ENC_CR_AMT%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_34 IS TABLE OF AP_EXTRACT_INVOICE_DTLS_BC_V.UPG_ENC_CR_BASE_AMT%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_35 IS TABLE OF AP_EXTRACT_INVOICE_DTLS_BC_V.UPG_ENC_DR_CCID%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_36 IS TABLE OF AP_EXTRACT_INVOICE_DTLS_BC_V.UPG_ENC_DR_AMT%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_37 IS TABLE OF AP_EXTRACT_INVOICE_DTLS_BC_V.UPG_ENC_DR_BASE_AMT%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_38 IS TABLE OF AP_EXTRACT_INVOICE_DTLS_BC_V.UPG_AP_ENCUM_OPTION%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_42 IS TABLE OF AP_EXTRACT_INVOICE_DTLS_BC_V.AID_BASE_AMOUNT_VARIANCE%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_43 IS TABLE OF AP_EXTRACT_INVOICE_DTLS_BC_V.DEFERRED_END_DATE%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_44 IS TABLE OF AP_EXTRACT_INVOICE_DTLS_BC_V.DEFERRED_OPTION%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_45 IS TABLE OF AP_EXTRACT_INVOICE_DTLS_BC_V.DEFERRED_START_DATE%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_46 IS TABLE OF AP_EXTRACT_INVOICE_DTLS_BC_V.OVERRIDE_ACCTD_AMT_FLAG%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_50 IS TABLE OF AP_EXTRACT_INVOICE_DTLS_BC_V.AID_PARENT_REVERSAL_ID%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_51 IS TABLE OF AP_EXTRACT_INVOICE_DTLS_BC_V.AID_STAT_AMOUNT%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_52 IS TABLE OF ZX_AP_DEF_TAX_EXTRACT_V.TAX_LINE_ID%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_53 IS TABLE OF ZX_AP_TAX_JRNL_LINE_DESC_V.REC_NREC_TAX_DIST_ID%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_54 IS TABLE OF AP_EXTRACT_INVOICE_DTLS_BC_V.SUMMARY_TAX_LINE_ID%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_55 IS TABLE OF AP_EXTRACT_INVOICE_DTLS_BC_V.UPG_CR_ENC_TYPE_ID%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_56 IS TABLE OF AP_EXTRACT_INVOICE_DTLS_BC_V.UPG_DR_ENC_TYPE_ID%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_58 IS TABLE OF AP_EXTRACT_INVOICE_DTLS_BC_V.PO_DISTRIBUTION_ID%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_59 IS TABLE OF AP_EXTRACT_INVOICE_DTLS_BC_V.SELF_ASSESSED_TAX_FLAG%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_60 IS TABLE OF AP_EXTRACT_INVOICE_DTLS_BC_V.BUS_FLOW_PO_APP_ID%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_61 IS TABLE OF AP_EXTRACT_INVOICE_DTLS_BC_V.BUS_FLOW_PO_DIST_TYPE%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_62 IS TABLE OF AP_EXTRACT_INVOICE_DTLS_BC_V.BUS_FLOW_PO_ENTITY_CODE%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_63 IS TABLE OF AP_EXTRACT_INVOICE_DTLS_BC_V.BUS_FLOW_PO_DIST_ID%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_64 IS TABLE OF AP_EXTRACT_INVOICE_DTLS_BC_V.BUS_FLOW_PO_DOC_ID%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_65 IS TABLE OF AP_EXTRACT_INVOICE_DTLS_BC_V.ENCUMBRANCE_AMOUNT%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_66 IS TABLE OF AP_EXTRACT_INVOICE_DTLS_BC_V.ENCUMBRANCE_BASE_AMOUNT%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_81 IS TABLE OF AP_EXTRACT_INVOICE_DTLS_BC_V.AID_QUANTITY_VARIANCE%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_82 IS TABLE OF AP_EXTRACT_INVOICE_DTLS_BC_V.AID_BASE_QUANTITY_VARIANCE%TYPE INDEX BY BINARY_INTEGER;

l_array_source_6              t_array_source_6;
l_array_source_7              t_array_source_7;
l_array_source_7_meaning      t_array_lookup_meaning;
l_array_source_10              t_array_source_10;
l_array_source_12              t_array_source_12;
l_array_source_12_meaning      t_array_lookup_meaning;
l_array_source_17              t_array_source_17;
l_array_source_17_meaning      t_array_lookup_meaning;
l_array_source_24              t_array_source_24;
l_array_source_33              t_array_source_33;
l_array_source_39              t_array_source_39;
l_array_source_40              t_array_source_40;
l_array_source_41              t_array_source_41;
l_array_source_47              t_array_source_47;
l_array_source_48              t_array_source_48;
l_array_source_49              t_array_source_49;
l_array_source_122              t_array_source_122;
l_array_source_123              t_array_source_123;
l_array_source_124              t_array_source_124;

l_array_source_1      t_array_source_1;
l_array_source_8      t_array_source_8;
l_array_source_9      t_array_source_9;
l_array_source_9_meaning      t_array_lookup_meaning;
l_array_source_11      t_array_source_11;
l_array_source_13      t_array_source_13;
l_array_source_15      t_array_source_15;
l_array_source_15_meaning      t_array_lookup_meaning;
l_array_source_16      t_array_source_16;
l_array_source_18      t_array_source_18;
l_array_source_18_meaning      t_array_lookup_meaning;
l_array_source_19      t_array_source_19;
l_array_source_21      t_array_source_21;
l_array_source_23      t_array_source_23;
l_array_source_25      t_array_source_25;
l_array_source_26      t_array_source_26;
l_array_source_27      t_array_source_27;
l_array_source_28      t_array_source_28;
l_array_source_29      t_array_source_29;
l_array_source_30      t_array_source_30;
l_array_source_31      t_array_source_31;
l_array_source_32      t_array_source_32;
l_array_source_34      t_array_source_34;
l_array_source_35      t_array_source_35;
l_array_source_36      t_array_source_36;
l_array_source_37      t_array_source_37;
l_array_source_38      t_array_source_38;
l_array_source_42      t_array_source_42;
l_array_source_43      t_array_source_43;
l_array_source_44      t_array_source_44;
l_array_source_45      t_array_source_45;
l_array_source_46      t_array_source_46;
l_array_source_46_meaning      t_array_lookup_meaning;
l_array_source_50      t_array_source_50;
l_array_source_51      t_array_source_51;
l_array_source_52      t_array_source_52;
l_array_source_53      t_array_source_53;
l_array_source_54      t_array_source_54;
l_array_source_55      t_array_source_55;
l_array_source_56      t_array_source_56;
l_array_source_58      t_array_source_58;
l_array_source_59      t_array_source_59;
l_array_source_59_meaning      t_array_lookup_meaning;
l_array_source_60      t_array_source_60;
l_array_source_61      t_array_source_61;
l_array_source_62      t_array_source_62;
l_array_source_63      t_array_source_63;
l_array_source_64      t_array_source_64;
l_array_source_65      t_array_source_65;
l_array_source_66      t_array_source_66;
l_array_source_81      t_array_source_81;
l_array_source_82      t_array_source_82;

--
CURSOR header_cur
IS
SELECT /*+ leading(xet) cardinality(xet,1) */
-- Event Class Code: PREPAYMENTS
    xet.entity_id
   ,xet.legal_entity_id
   ,xet.entity_code
   ,xet.transaction_number
   ,xet.event_id
   ,xet.event_class_code
   ,xet.event_type_code
   ,xet.event_number
   ,xet.event_date
   ,xet.transaction_date
   ,xet.reference_num_1
   ,xet.reference_num_2
   ,xet.reference_num_3
   ,xet.reference_num_4
   ,xet.reference_char_1
   ,xet.reference_char_2
   ,xet.reference_char_3
   ,xet.reference_char_4
   ,xet.reference_date_1
   ,xet.reference_date_2
   ,xet.reference_date_3
   ,xet.reference_date_4
   ,xet.event_created_by
   ,xet.budgetary_control_flag 
  , h3.ASP_RATE_VAR_GAIN_CCID    source_6
  , h3.ASP_AUTOMATIC_OFFSETS_VALUE    source_7
  , fvl7.meaning   source_7_meaning
  , h3.ASP_RATE_VAR_LOSS_CCID    source_10
  , h3.ASP_AUTO_OFFSET_FLAG    source_12
  , fvl12.meaning   source_12_meaning
  , h3.FSP_PURCH_ENCUMBRANCE_FLAG    source_17
  , fvl17.meaning   source_17_meaning
  , h2.AI_INVOICE_ID    source_24
  , h2.AI_INVOICE_CURRENCY_CODE    source_33
  , h2.INV_EXCHANGE_DATE    source_39
  , h2.INV_EXCHANGE_RATE    source_40
  , h2.INV_EXCHANGE_RATE_TYPE    source_41
  , h2.AI_VENDOR_ID    source_47
  , h2.AI_VENDOR_SITE_ID    source_48
  , h2.THIRD_PARTY_TYPE    source_49
  , h2.INV_DOC_SEQUENCE_CATEGORY    source_122
  , h2.INV_DOC_SEQUENCE_IDENTIFIER    source_123
  , h2.INV_DOC_SEQUENCE_VALUE    source_124
  FROM xla_events_gt     xet 
  , AP_INVOICE_EXTRACT_HEADER_V  h2
  , AP_SYSTEM_PARAMETERS_EXTRACT_V  h3
  , fnd_lookup_values    fvl7
  , fnd_lookup_values    fvl12
  , fnd_lookup_values    fvl17
 WHERE xet.event_date between p_pad_start_date and p_pad_end_date
   and xet.event_class_code = C_EVENT_CLASS_CODE
   and xet.event_status_code <> 'N'  AND h2.event_id = xet.event_id
 AND h3.asp_org_id = h2.ai_org_id   AND fvl7.lookup_type(+)         = 'LIABILITY FLEXBUILD METHOD'
  AND fvl7.lookup_code(+)         = h3.ASP_AUTOMATIC_OFFSETS_VALUE
  AND fvl7.view_application_id(+) = 200
  AND fvl7.language(+)            = USERENV('LANG')
     AND fvl12.lookup_type(+)         = 'YES_NO'
  AND fvl12.lookup_code(+)         = h3.ASP_AUTO_OFFSET_FLAG
  AND fvl12.view_application_id(+) = 0
  AND fvl12.language(+)            = USERENV('LANG')
     AND fvl17.lookup_type(+)         = 'YES_NO'
  AND fvl17.lookup_code(+)         = h3.FSP_PURCH_ENCUMBRANCE_FLAG
  AND fvl17.view_application_id(+) = 0
  AND fvl17.language(+)            = USERENV('LANG')
  
 ORDER BY event_id
;


--
CURSOR line_cur (x_first_event_id    in number, x_last_event_id    in number)
IS
SELECT  /*+ leading(xet) cardinality(xet,1) */
-- Event Class Code: PREPAYMENTS
    xet.entity_id
   ,xet.legal_entity_id
   ,xet.entity_code
   ,xet.transaction_number
   ,xet.event_id
   ,xet.event_class_code
   ,xet.event_type_code
   ,xet.event_number
   ,xet.event_date
   ,xet.transaction_date
   ,xet.reference_num_1
   ,xet.reference_num_2
   ,xet.reference_num_3
   ,xet.reference_num_4
   ,xet.reference_char_1
   ,xet.reference_char_2
   ,xet.reference_char_3
   ,xet.reference_char_4
   ,xet.reference_date_1
   ,xet.reference_date_2
   ,xet.reference_date_3
   ,xet.reference_date_4
   ,xet.event_created_by
   ,xet.budgetary_control_flag
 , l1.LINE_NUMBER  
  , l1.AID_DESCRIPTION    source_1
  , l1.INV_DIST_BASE_AMOUNT    source_8
  , l1.RELATED_INV_DIST_DEST_TYPE    source_9
  , fvl9.meaning   source_9_meaning
  , l1.AID_DIST_CCID    source_11
  , l1.SELF_ASSESSED_TAX_ACCOUNT    source_13
  , l1.AID_LINE_TYPE_LOOKUP_CODE    source_15
  , fvl15.meaning   source_15_meaning
  , l1.AID_AMOUNT_VARIANCE    source_16
  , l1.POD_ACCRUE_ON_RECEIPT_FLAG    source_18
  , fvl18.meaning   source_18_meaning
  , l1.DIST_ACCOUNT_REVERSAL_OPTION    source_19
  , l1.DISTRIBUTION_LINK_TYPE    source_21
  , l1.ALLOC_TO_MAIN_DIST_ID    source_23
  , l1.BUS_FLOW_AP_APP_ID    source_25
  , l1.BUS_FLOW_INV_DIST_TYPE    source_26
  , l1.BUS_FLOW_INV_ENTITY_CODE    source_27
  , l1.BUS_FLOW_INV_DIST_ID    source_28
  , l1.BUS_FLOW_INV_ID    source_29
  , l1.AID_INVOICE_DIST_ID    source_30
  , l1.UPG_ENC_CR_CCID    source_31
  , l1.UPG_ENC_CR_AMT    source_32
  , l1.UPG_ENC_CR_BASE_AMT    source_34
  , l1.UPG_ENC_DR_CCID    source_35
  , l1.UPG_ENC_DR_AMT    source_36
  , l1.UPG_ENC_DR_BASE_AMT    source_37
  , l1.UPG_AP_ENCUM_OPTION    source_38
  , l1.AID_BASE_AMOUNT_VARIANCE    source_42
  , l1.DEFERRED_END_DATE    source_43
  , l1.DEFERRED_OPTION    source_44
  , l1.DEFERRED_START_DATE    source_45
  , l1.OVERRIDE_ACCTD_AMT_FLAG    source_46
  , fvl46.meaning   source_46_meaning
  , l1.AID_PARENT_REVERSAL_ID    source_50
  , l1.AID_STAT_AMOUNT    source_51
  , l4.TAX_LINE_ID    source_52
  , l5.REC_NREC_TAX_DIST_ID    source_53
  , l1.SUMMARY_TAX_LINE_ID    source_54
  , l1.UPG_CR_ENC_TYPE_ID    source_55
  , l1.UPG_DR_ENC_TYPE_ID    source_56
  , l1.PO_DISTRIBUTION_ID    source_58
  , l1.SELF_ASSESSED_TAX_FLAG    source_59
  , fvl59.meaning   source_59_meaning
  , l1.BUS_FLOW_PO_APP_ID    source_60
  , l1.BUS_FLOW_PO_DIST_TYPE    source_61
  , l1.BUS_FLOW_PO_ENTITY_CODE    source_62
  , l1.BUS_FLOW_PO_DIST_ID    source_63
  , l1.BUS_FLOW_PO_DOC_ID    source_64
  , l1.ENCUMBRANCE_AMOUNT    source_65
  , l1.ENCUMBRANCE_BASE_AMOUNT    source_66
  , l1.AID_QUANTITY_VARIANCE    source_81
  , l1.AID_BASE_QUANTITY_VARIANCE    source_82
  FROM xla_events_gt     xet 
  , AP_EXTRACT_INVOICE_DTLS_BC_V  l1
  , ZX_AP_DEF_TAX_EXTRACT_V  l4
  , ZX_AP_TAX_JRNL_LINE_DESC_V  l5
  , fnd_lookup_values    fvl9
  , fnd_lookup_values    fvl15
  , fnd_lookup_values    fvl18
  , fnd_lookup_values    fvl46
  , fnd_lookup_values    fvl59
 WHERE xet.event_id between x_first_event_id and x_last_event_id
   and xet.event_date between p_pad_start_date and p_pad_end_date
   and xet.event_class_code = C_EVENT_CLASS_CODE
   and xet.event_status_code <> 'N'   AND l1.event_id      = xet.event_id
 AND l1.ZRND_tax_dist_id = l4.REC_NREC_TAX_DIST_ID (+)  AND l1.ZRND_tax_dist_id = l5.REC_NREC_TAX_DIST_ID (+)    AND fvl9.lookup_type(+)         = 'DESTINATION TYPE'
  AND fvl9.lookup_code(+)         = l1.RELATED_INV_DIST_DEST_TYPE
  AND fvl9.view_application_id(+) = 201
  AND fvl9.language(+)            = USERENV('LANG')
     AND fvl15.lookup_type(+)         = 'INVOICE DISTRIBUTION TYPE'
  AND fvl15.lookup_code(+)         = l1.AID_LINE_TYPE_LOOKUP_CODE
  AND fvl15.view_application_id(+) = 200
  AND fvl15.language(+)            = USERENV('LANG')
     AND fvl18.lookup_type(+)         = 'YES_NO'
  AND fvl18.lookup_code(+)         = l1.POD_ACCRUE_ON_RECEIPT_FLAG
  AND fvl18.view_application_id(+) = 0
  AND fvl18.language(+)            = USERENV('LANG')
     AND fvl46.lookup_type(+)         = 'YES_NO'
  AND fvl46.lookup_code(+)         = l1.OVERRIDE_ACCTD_AMT_FLAG
  AND fvl46.view_application_id(+) = 0
  AND fvl46.language(+)            = USERENV('LANG')
     AND fvl59.lookup_type(+)         = 'YES_NO'
  AND fvl59.lookup_code(+)         = l1.SELF_ASSESSED_TAX_FLAG
  AND fvl59.view_application_id(+) = 0
  AND fvl59.language(+)            = USERENV('LANG')
  ;

--
BEGIN
IF g_log_enabled THEN
   l_log_module := C_DEFAULT_MODULE||'.EventClass_108';
END IF;
IF (C_LEVEL_PROCEDURE >= g_log_level) THEN
   trace
      (p_msg      => 'BEGIN of EventClass_108'
      ,p_level    => C_LEVEL_PROCEDURE
      ,p_module   => l_log_module);
END IF;

IF (C_LEVEL_STATEMENT >= g_log_level) THEN
   trace
      (p_msg      => 'p_application_id = '||p_application_id||
                     ' - p_base_ledger_id = '||p_base_ledger_id||
                     ' - p_target_ledger_id  = '||p_target_ledger_id||
                     ' - p_language = '||p_language||
                     ' - p_currency_code = '||p_currency_code||
                     ' - p_sla_ledger_id = '||p_sla_ledger_id
      ,p_level    => C_LEVEL_STATEMENT
      ,p_module   => l_log_module);
END IF;
--
-- initialze arrays
--
g_array_event.DELETE;
l_rec_array_event := l_null_rec_array_event;
--
--------------------------------------
-- 4262811 Initialze MPA Line Number
--------------------------------------
XLA_AE_HEADER_PKG.g_mpa_line_num := 0;

--

--
OPEN header_cur;
--
IF (C_LEVEL_STATEMENT >= g_log_level) THEN
   trace
   (p_msg      => 'SQL - FETCH header_cur'
   ,p_level    => C_LEVEL_STATEMENT
   ,p_module   => l_log_module);
END IF;
--
LOOP
FETCH header_cur BULK COLLECT INTO
        l_array_entity_id
      , l_array_legal_entity_id
      , l_array_entity_code
      , l_array_transaction_num
      , l_array_event_id
      , l_array_class_code
      , l_array_event_type
      , l_array_event_number
      , l_array_event_date
      , l_array_transaction_date
      , l_array_reference_num_1
      , l_array_reference_num_2
      , l_array_reference_num_3
      , l_array_reference_num_4
      , l_array_reference_char_1
      , l_array_reference_char_2
      , l_array_reference_char_3
      , l_array_reference_char_4
      , l_array_reference_date_1
      , l_array_reference_date_2
      , l_array_reference_date_3
      , l_array_reference_date_4
      , l_array_event_created_by
      , l_array_budgetary_control_flag 
      , l_array_source_6
      , l_array_source_7
      , l_array_source_7_meaning
      , l_array_source_10
      , l_array_source_12
      , l_array_source_12_meaning
      , l_array_source_17
      , l_array_source_17_meaning
      , l_array_source_24
      , l_array_source_33
      , l_array_source_39
      , l_array_source_40
      , l_array_source_41
      , l_array_source_47
      , l_array_source_48
      , l_array_source_49
      , l_array_source_122
      , l_array_source_123
      , l_array_source_124
      LIMIT l_rows;
--
IF (C_LEVEL_EVENT >= g_log_level) THEN
   trace
   (p_msg      => '# rows extracted from header extract objects = '||TO_CHAR(header_cur%ROWCOUNT)
   ,p_level    => C_LEVEL_EVENT
   ,p_module   => l_log_module);
END IF;
--
EXIT WHEN l_array_entity_id.COUNT = 0;

-- initialize arrays
XLA_AE_HEADER_PKG.g_rec_header_new        := NULL;
XLA_AE_LINES_PKG.g_rec_lines              := NULL;

--
-- Bug 4458708
--
XLA_AE_LINES_PKG.g_LineNumber := 0;


-- 4262811 - when creating Accrual Reversal or MPA, use g_last_hdr_idx to increment for next header id
g_last_hdr_idx := l_array_event_id.LAST;
--
-- loop for the headers. Each iteration is for each header extract row
-- fetched in header cursor
--
FOR hdr_idx IN l_array_event_id.FIRST .. l_array_event_id.LAST LOOP

--
-- set event info as cache for other routines to refer event attributes
--
XLA_AE_JOURNAL_ENTRY_PKG.set_event_info
   (p_application_id           => p_application_id
   ,p_primary_ledger_id        => p_primary_ledger_id
   ,p_base_ledger_id           => p_base_ledger_id
   ,p_target_ledger_id         => p_target_ledger_id
   ,p_entity_id                => l_array_entity_id(hdr_idx)
   ,p_legal_entity_id          => l_array_legal_entity_id(hdr_idx)
   ,p_entity_code              => l_array_entity_code(hdr_idx)
   ,p_transaction_num          => l_array_transaction_num(hdr_idx)
   ,p_event_id                 => l_array_event_id(hdr_idx)
   ,p_event_class_code         => l_array_class_code(hdr_idx)
   ,p_event_type_code          => l_array_event_type(hdr_idx)
   ,p_event_number             => l_array_event_number(hdr_idx)
   ,p_event_date               => l_array_event_date(hdr_idx)
   ,p_transaction_date         => l_array_transaction_date(hdr_idx)
   ,p_reference_num_1          => l_array_reference_num_1(hdr_idx)
   ,p_reference_num_2          => l_array_reference_num_2(hdr_idx)
   ,p_reference_num_3          => l_array_reference_num_3(hdr_idx)
   ,p_reference_num_4          => l_array_reference_num_4(hdr_idx)
   ,p_reference_char_1         => l_array_reference_char_1(hdr_idx)
   ,p_reference_char_2         => l_array_reference_char_2(hdr_idx)
   ,p_reference_char_3         => l_array_reference_char_3(hdr_idx)
   ,p_reference_char_4         => l_array_reference_char_4(hdr_idx)
   ,p_reference_date_1         => l_array_reference_date_1(hdr_idx)
   ,p_reference_date_2         => l_array_reference_date_2(hdr_idx)
   ,p_reference_date_3         => l_array_reference_date_3(hdr_idx)
   ,p_reference_date_4         => l_array_reference_date_4(hdr_idx)
   ,p_event_created_by         => l_array_event_created_by(hdr_idx)
   ,p_budgetary_control_flag   => l_array_budgetary_control_flag(hdr_idx));

--
-- set the status of entry to C_VALID (0)
--
XLA_AE_JOURNAL_ENTRY_PKG.g_global_status    := XLA_AE_JOURNAL_ENTRY_PKG.C_VALID;

--
-- initialize a row for ae header
--
XLA_AE_HEADER_PKG.InitHeader(hdr_idx);

l_event_id := l_array_event_id(hdr_idx);

--
-- storing the hdr_idx for event. May be used by line cursor.
--
g_array_event(l_event_id).array_value_num('header_index') := hdr_idx;

--
-- store sources from header extract. This can be improved to
-- store only those sources from header extract that may be used in lines
--

g_array_event(l_event_id).array_value_num('source_6') := l_array_source_6(hdr_idx);
g_array_event(l_event_id).array_value_char('source_7') := l_array_source_7(hdr_idx);
g_array_event(l_event_id).array_value_char('source_7_meaning') := l_array_source_7_meaning(hdr_idx);
g_array_event(l_event_id).array_value_num('source_10') := l_array_source_10(hdr_idx);
g_array_event(l_event_id).array_value_char('source_12') := l_array_source_12(hdr_idx);
g_array_event(l_event_id).array_value_char('source_12_meaning') := l_array_source_12_meaning(hdr_idx);
g_array_event(l_event_id).array_value_char('source_17') := l_array_source_17(hdr_idx);
g_array_event(l_event_id).array_value_char('source_17_meaning') := l_array_source_17_meaning(hdr_idx);
g_array_event(l_event_id).array_value_num('source_24') := l_array_source_24(hdr_idx);
g_array_event(l_event_id).array_value_char('source_33') := l_array_source_33(hdr_idx);
g_array_event(l_event_id).array_value_date('source_39') := l_array_source_39(hdr_idx);
g_array_event(l_event_id).array_value_num('source_40') := l_array_source_40(hdr_idx);
g_array_event(l_event_id).array_value_char('source_41') := l_array_source_41(hdr_idx);
g_array_event(l_event_id).array_value_num('source_47') := l_array_source_47(hdr_idx);
g_array_event(l_event_id).array_value_num('source_48') := l_array_source_48(hdr_idx);
g_array_event(l_event_id).array_value_char('source_49') := l_array_source_49(hdr_idx);
g_array_event(l_event_id).array_value_char('source_122') := l_array_source_122(hdr_idx);
g_array_event(l_event_id).array_value_num('source_123') := l_array_source_123(hdr_idx);
g_array_event(l_event_id).array_value_num('source_124') := l_array_source_124(hdr_idx);

--
-- initilaize the status of ae headers for diffrent balance types
-- the status is initialised to C_NOT_CREATED (2)
--
--g_array_event(l_event_id).array_value_num('actual_je_status') := XLA_AE_JOURNAL_ENTRY_PKG.C_NOT_CREATED;
--g_array_event(l_event_id).array_value_num('budget_je_status') := XLA_AE_JOURNAL_ENTRY_PKG.C_NOT_CREATED;
--g_array_event(l_event_id).array_value_num('encumbrance_je_status') := XLA_AE_JOURNAL_ENTRY_PKG.C_NOT_CREATED;

--
-- call api to validate and store accounting attributes for header
--

------------------------------------------------------------
-- Accrual Reversal : to get date for Standard Source (NONE)
------------------------------------------------------------
l_acc_rev_gl_date_source := NULL;

     l_rec_acct_attrs.array_acct_attr_code(1)   := 'DOC_CATEGORY_CODE';
      l_rec_acct_attrs.array_char_value(1) := g_array_event(l_event_id).array_value_char('source_122');
     l_rec_acct_attrs.array_acct_attr_code(2)   := 'DOC_SEQUENCE_ID';
      l_rec_acct_attrs.array_num_value(2) := g_array_event(l_event_id).array_value_num('source_123');
     l_rec_acct_attrs.array_acct_attr_code(3)   := 'DOC_SEQUENCE_VALUE';
      l_rec_acct_attrs.array_num_value(3) := g_array_event(l_event_id).array_value_num('source_124');
     l_rec_acct_attrs.array_acct_attr_code(4)   := 'GL_DATE';
      l_rec_acct_attrs.array_date_value(4) := 
xla_ae_sources_pkg.GetSystemSourceDate(
   p_source_code           => 'XLA_EVENT_DATE'
 , p_source_type_code      => 'Y'
 , p_source_application_id =>  602
);


XLA_AE_HEADER_PKG.SetHdrAcctAttrs(l_rec_acct_attrs);

XLA_AE_HEADER_PKG.SetJeCategoryName;

XLA_AE_HEADER_PKG.g_rec_header_new.array_event_type_code(hdr_idx)  := l_array_event_type(hdr_idx);
XLA_AE_HEADER_PKG.g_rec_header_new.array_event_id(hdr_idx)         := l_array_event_id(hdr_idx);
XLA_AE_HEADER_PKG.g_rec_header_new.array_entity_id(hdr_idx)        := l_array_entity_id(hdr_idx);
XLA_AE_HEADER_PKG.g_rec_header_new.array_event_number(hdr_idx)     := l_array_event_number(hdr_idx);
XLA_AE_HEADER_PKG.g_rec_header_new.array_target_ledger_id(hdr_idx) := p_target_ledger_id;


--
xla_ae_header_pkg.SetHdrDescription(
   p_description => Description_1 (
   p_application_id => p_application_id 
   )
);
--

-- No header level analytical criteria

--
--accounting attribute enhancement, bug 3612931
--
l_trx_reversal_source := SUBSTR(NULL, 1,30);

IF NVL(l_trx_reversal_source, 'N') NOT IN ('N','Y') THEN
   xla_ae_journal_entry_pkg.g_global_status      :=  xla_ae_journal_entry_pkg.C_INVALID;

   xla_accounting_err_pkg.build_message
      (p_appli_s_name            => 'XLA'
      ,p_msg_name                => 'XLA_AP_INVALID_HDR_ATTR'
      ,p_token_1                 => 'ACCT_ATTR_NAME'
      ,p_value_1                 => xla_ae_sources_pkg.GetAccountingSourceName('TRX_ACCT_REVERSAL_OPTION')
      ,p_token_2                 => 'PRODUCT_NAME'
      ,p_value_2                 => xla_ae_journal_entry_pkg.g_cache_event.application_name
      ,p_entity_id               => xla_ae_journal_entry_pkg.g_cache_event.entity_id
      ,p_event_id                => xla_ae_journal_entry_pkg.g_cache_event.event_id
      ,p_ledger_id               => xla_ae_journal_entry_pkg.g_cache_event.target_ledger_id);

ELSIF NVL(l_trx_reversal_source, 'N') = 'Y' THEN
   --
   -- following sets the accounting attributes needed to reverse
   -- accounting for a distributeion
   --
   xla_ae_lines_pkg.SetTrxReversalAttrs
      (p_event_id              => l_event_id
      ,p_gl_date               => XLA_AE_HEADER_PKG.g_rec_header_new.array_gl_date(hdr_idx)
      ,p_trx_reversal_source   => l_trx_reversal_source);

END IF;


----------------------------------------------------------------
-- 4262811 -  update the header statuses to invalid in need be
----------------------------------------------------------------
--
XLA_AE_JOURNAL_ENTRY_PKG.UpdateJournalEntryStatus (p_hdr_idx => hdr_idx);


  -----------------------------------------------
  -- No accrual reversal for the event class/type
  -----------------------------------------------
----------------------------------------------------------------

--
-- this ends the header loop iteration for one bulk fetch
--
END LOOP;

l_first_event_id   := l_array_event_id(l_array_event_id.FIRST);
l_last_event_id    := l_array_event_id(l_array_event_id.LAST);

--
-- insert dummy rows into lines gt table that were created due to
-- transaction reversals
--
IF XLA_AE_LINES_PKG.g_rec_lines.array_ae_header_id.COUNT > 0 THEN
   l_result := XLA_AE_LINES_PKG.InsertLines;
END IF;

--
-- reset the temp_line_num for each set of events fetched from header
-- cursor rather than doing it for each new event in line cursor
-- Bug 3939231
--
xla_ae_lines_pkg.g_temp_line_num := 0;



--
OPEN line_cur(x_first_event_id  => l_first_event_id, x_last_event_id  => l_last_event_id);
--
--
IF (C_LEVEL_STATEMENT >= g_log_level) THEN

      trace
         (p_msg      => 'SQL - FETCH line_cur'
         ,p_level    => C_LEVEL_STATEMENT
         ,p_module   => l_log_module);

END IF;
--
--
LOOP
  --
  FETCH line_cur BULK COLLECT INTO
        l_array_entity_id
      , l_array_legal_entity_id
      , l_array_entity_code
      , l_array_transaction_num
      , l_array_event_id
      , l_array_class_code
      , l_array_event_type
      , l_array_event_number
      , l_array_event_date
      , l_array_transaction_date
      , l_array_reference_num_1
      , l_array_reference_num_2
      , l_array_reference_num_3
      , l_array_reference_num_4
      , l_array_reference_char_1
      , l_array_reference_char_2
      , l_array_reference_char_3
      , l_array_reference_char_4
      , l_array_reference_date_1
      , l_array_reference_date_2
      , l_array_reference_date_3
      , l_array_reference_date_4
      , l_array_event_created_by
      , l_array_budgetary_control_flag
      , l_array_extract_line_num 
      , l_array_source_1
      , l_array_source_8
      , l_array_source_9
      , l_array_source_9_meaning
      , l_array_source_11
      , l_array_source_13
      , l_array_source_15
      , l_array_source_15_meaning
      , l_array_source_16
      , l_array_source_18
      , l_array_source_18_meaning
      , l_array_source_19
      , l_array_source_21
      , l_array_source_23
      , l_array_source_25
      , l_array_source_26
      , l_array_source_27
      , l_array_source_28
      , l_array_source_29
      , l_array_source_30
      , l_array_source_31
      , l_array_source_32
      , l_array_source_34
      , l_array_source_35
      , l_array_source_36
      , l_array_source_37
      , l_array_source_38
      , l_array_source_42
      , l_array_source_43
      , l_array_source_44
      , l_array_source_45
      , l_array_source_46
      , l_array_source_46_meaning
      , l_array_source_50
      , l_array_source_51
      , l_array_source_52
      , l_array_source_53
      , l_array_source_54
      , l_array_source_55
      , l_array_source_56
      , l_array_source_58
      , l_array_source_59
      , l_array_source_59_meaning
      , l_array_source_60
      , l_array_source_61
      , l_array_source_62
      , l_array_source_63
      , l_array_source_64
      , l_array_source_65
      , l_array_source_66
      , l_array_source_81
      , l_array_source_82
      LIMIT l_rows;

  --
  IF (C_LEVEL_EVENT >= g_log_level) THEN
            trace
               (p_msg      => '# rows extracted from line extract objects = '||TO_CHAR(line_cur%ROWCOUNT)
               ,p_level    => C_LEVEL_EVENT
               ,p_module   => l_log_module);
  END IF;
  --
  EXIT WHEN l_array_entity_id.count = 0;

  XLA_AE_LINES_PKG.g_rec_lines := null;

--
-- Bug 4458708
--
XLA_AE_LINES_PKG.g_LineNumber := 0;
--
--

FOR Idx IN 1..l_array_event_id.count LOOP
   --
   -- 5648433 (move l_event_id out of IF statement)  set l_event_id to be used inside IF condition
   --
   l_event_id := l_array_event_id(idx);  -- 5648433

   --
   -- Bug 4872078 - Do nothing if the event is meant for transaction reversal
   --

   IF NVL(xla_ae_header_pkg.g_rec_header_new.array_trx_acct_reversal_option
             (g_array_event(l_event_id).array_value_num('header_index'))
         ,'N'
         ) <> 'Y'
   THEN
      IF (C_LEVEL_STATEMENT >= g_log_level) THEN
         trace
            (p_msg      => 'Trancaction revesal option is not Y '
            ,p_level    => C_LEVEL_STATEMENT
            ,p_module   => l_log_module);
      END IF;

--
-- set the XLA_AE_JOURNAL_ENTRY_PKG.g_global_status to C_VALID (0)
--
XLA_AE_JOURNAL_ENTRY_PKG.g_global_status := XLA_AE_JOURNAL_ENTRY_PKG.C_VALID;
--
-- set event info as cache for other routines to refer event attributes
--

IF l_event_id <> NVL(l_previous_event_id, -1) THEN
   l_previous_event_id := l_event_id;

   XLA_AE_JOURNAL_ENTRY_PKG.set_event_info
      (p_application_id           => p_application_id
      ,p_primary_ledger_id        => p_primary_ledger_id
      ,p_base_ledger_id           => p_base_ledger_id
      ,p_target_ledger_id         => p_target_ledger_id
      ,p_entity_id                => l_array_entity_id(Idx)
      ,p_legal_entity_id          => l_array_legal_entity_id(Idx)
      ,p_entity_code              => l_array_entity_code(Idx)
      ,p_transaction_num          => l_array_transaction_num(Idx)
      ,p_event_id                 => l_array_event_id(Idx)
      ,p_event_class_code         => l_array_class_code(Idx)
      ,p_event_type_code          => l_array_event_type(Idx)
      ,p_event_number             => l_array_event_number(Idx)
      ,p_event_date               => l_array_event_date(Idx)
      ,p_transaction_date         => l_array_transaction_date(Idx)
      ,p_reference_num_1          => l_array_reference_num_1(Idx)
      ,p_reference_num_2          => l_array_reference_num_2(Idx)
      ,p_reference_num_3          => l_array_reference_num_3(Idx)
      ,p_reference_num_4          => l_array_reference_num_4(Idx)
      ,p_reference_char_1         => l_array_reference_char_1(Idx)
      ,p_reference_char_2         => l_array_reference_char_2(Idx)
      ,p_reference_char_3         => l_array_reference_char_3(Idx)
      ,p_reference_char_4         => l_array_reference_char_4(Idx)
      ,p_reference_date_1         => l_array_reference_date_1(Idx)
      ,p_reference_date_2         => l_array_reference_date_2(Idx)
      ,p_reference_date_3         => l_array_reference_date_3(Idx)
      ,p_reference_date_4         => l_array_reference_date_4(Idx)
      ,p_event_created_by         => l_array_event_created_by(Idx)
      ,p_budgetary_control_flag   => l_array_budgetary_control_flag(Idx));
       --
END IF;



--
xla_ae_lines_pkg.SetExtractLine(p_extract_line => l_array_extract_line_num(Idx));

l_acct_reversal_source := SUBSTR(l_array_source_19(Idx), 1,30);

IF l_continue_with_lines THEN
   IF NVL(l_acct_reversal_source, 'N') NOT IN ('N','Y','B') THEN
      xla_ae_journal_entry_pkg.g_global_status      :=  xla_ae_journal_entry_pkg.C_INVALID;

      xla_accounting_err_pkg.build_message
         (p_appli_s_name            => 'XLA'
         ,p_msg_name                => 'XLA_AP_INVALID_REVERSAL_OPTION'
         ,p_token_1                 => 'LINE_NUMBER'
         ,p_value_1                 => l_array_extract_line_num(Idx)
         ,p_token_2                 => 'PRODUCT_NAME'
         ,p_value_2                 => xla_ae_journal_entry_pkg.g_cache_event.application_name
         ,p_entity_id               => xla_ae_journal_entry_pkg.g_cache_event.entity_id
         ,p_event_id                => xla_ae_journal_entry_pkg.g_cache_event.event_id
         ,p_ledger_id               => xla_ae_journal_entry_pkg.g_cache_event.target_ledger_id);

   ELSIF NVL(l_acct_reversal_source, 'N') IN ('Y','B') THEN
      --
      -- following sets the accounting attributes needed to reverse
      -- accounting for a distributeion
      --

      --
      -- 5217187
      --
      l_rec_rev_acct_attrs.array_acct_attr_code(1):= 'GL_DATE';
      l_rec_rev_acct_attrs.array_date_value(1) := XLA_AE_HEADER_PKG.g_rec_header_new.array_gl_date(
                                       g_array_event(l_event_id).array_value_num('header_index'));
      --
      --

      l_rec_rev_acct_attrs.array_acct_attr_code(2) := 'ACCOUNTING_REVERSAL_OPTION';
      l_rec_rev_acct_attrs.array_char_value(2)  := l_array_source_19(Idx);
      l_rec_rev_acct_attrs.array_acct_attr_code(3) := 'DISTRIBUTION_IDENTIFIER_1';
      l_rec_rev_acct_attrs.array_num_value(3)  := l_array_source_30(Idx);
      l_rec_rev_acct_attrs.array_acct_attr_code(4) := 'DISTRIBUTION_TYPE';
      l_rec_rev_acct_attrs.array_char_value(4)  := l_array_source_21(Idx);
      l_rec_rev_acct_attrs.array_acct_attr_code(5) := 'ENC_UPG_CR_CCID';
      l_rec_rev_acct_attrs.array_num_value(5)  := l_array_source_31(Idx);
      l_rec_rev_acct_attrs.array_acct_attr_code(6) := 'ENC_UPG_CR_ENTERED_AMT';
      l_rec_rev_acct_attrs.array_num_value(6)  := l_array_source_32(Idx);
      l_rec_rev_acct_attrs.array_acct_attr_code(7) := 'ENC_UPG_CR_ENTERED_CURR';
      l_rec_rev_acct_attrs.array_char_value(7)  := g_array_event(l_event_id).array_value_char('source_33');
      l_rec_rev_acct_attrs.array_acct_attr_code(8) := 'ENC_UPG_CR_LEDGER_AMT';
      l_rec_rev_acct_attrs.array_num_value(8)  := l_array_source_34(Idx);
      l_rec_rev_acct_attrs.array_acct_attr_code(9) := 'ENC_UPG_DR_CCID';
      l_rec_rev_acct_attrs.array_num_value(9)  := l_array_source_35(Idx);
      l_rec_rev_acct_attrs.array_acct_attr_code(10) := 'ENC_UPG_DR_ENTERED_AMT';
      l_rec_rev_acct_attrs.array_num_value(10)  := l_array_source_36(Idx);
      l_rec_rev_acct_attrs.array_acct_attr_code(11) := 'ENC_UPG_DR_ENTERED_CURR';
      l_rec_rev_acct_attrs.array_char_value(11)  := g_array_event(l_event_id).array_value_char('source_33');
      l_rec_rev_acct_attrs.array_acct_attr_code(12) := 'ENC_UPG_DR_LEDGER_AMT';
      l_rec_rev_acct_attrs.array_num_value(12)  := l_array_source_37(Idx);
      l_rec_rev_acct_attrs.array_acct_attr_code(13) := 'ENC_UPG_OPTION';
      l_rec_rev_acct_attrs.array_char_value(13)  := l_array_source_38(Idx);
      l_rec_rev_acct_attrs.array_acct_attr_code(14) := 'PARTY_TYPE';
      l_rec_rev_acct_attrs.array_char_value(14)  := g_array_event(l_event_id).array_value_char('source_49');
      l_rec_rev_acct_attrs.array_acct_attr_code(15) := 'REVERSED_DISTRIBUTION_ID1';
      l_rec_rev_acct_attrs.array_num_value(15)  := l_array_source_50(Idx);
      l_rec_rev_acct_attrs.array_acct_attr_code(16) := 'REVERSED_DISTRIBUTION_TYPE';
      l_rec_rev_acct_attrs.array_char_value(16)  := l_array_source_21(Idx);
      l_rec_rev_acct_attrs.array_acct_attr_code(17) := 'TAX_LINE_REF_ID';
      l_rec_rev_acct_attrs.array_num_value(17)  := l_array_source_52(Idx);
      l_rec_rev_acct_attrs.array_acct_attr_code(18) := 'TAX_REC_NREC_DIST_REF_ID';
      l_rec_rev_acct_attrs.array_num_value(18)  := l_array_source_53(Idx);
      l_rec_rev_acct_attrs.array_acct_attr_code(19) := 'TAX_SUMMARY_LINE_REF_ID';
      l_rec_rev_acct_attrs.array_num_value(19)  := l_array_source_54(Idx);
      l_rec_rev_acct_attrs.array_acct_attr_code(20) := 'UPG_CR_ENC_TYPE_ID';
      l_rec_rev_acct_attrs.array_num_value(20)  := l_array_source_55(Idx);
      l_rec_rev_acct_attrs.array_acct_attr_code(21) := 'UPG_DR_ENC_TYPE_ID';
      l_rec_rev_acct_attrs.array_num_value(21)  := l_array_source_56(Idx);


      xla_ae_lines_pkg.SetAcctReversalAttrs
         (p_event_id             => l_event_id
         ,p_rec_acct_attrs       => l_rec_rev_acct_attrs
         ,p_calculate_acctd_flag => l_calculate_acctd_flag
         ,p_calculate_g_l_flag   => l_calculate_g_l_flag);
   END IF;

   IF NVL(l_acct_reversal_source, 'N') IN ('N','B') THEN
       l_actual_flag := NULL;  l_actual_gain_loss_ref := '#####';

--
AcctLineType_17 (
 p_application_id  => p_application_id
 ,p_event_id     => l_event_id
 ,p_calculate_acctd_flag => l_calculate_acctd_flag
 ,p_calculate_g_l_flag => l_calculate_g_l_flag
 ,p_actual_flag => l_actual_flag
 ,p_balance_type_code => l_balance_type_code
 ,p_gain_or_loss_ref=> l_gain_or_loss_ref
 
 , p_source_1 => l_array_source_1(Idx)
 , p_source_11 => l_array_source_11(Idx)
 , p_source_15 => l_array_source_15(Idx)
 , p_source_15_meaning => l_array_source_15_meaning(Idx)
 , p_source_16 => l_array_source_16(Idx)
 , p_source_17 => g_array_event(l_event_id).array_value_char('source_17')
 , p_source_17_meaning => g_array_event(l_event_id).array_value_char('source_17_meaning')
 , p_source_18 => l_array_source_18(Idx)
 , p_source_18_meaning => l_array_source_18_meaning(Idx)
 , p_source_19 => l_array_source_19(Idx)
 , p_source_21 => l_array_source_21(Idx)
 , p_source_23 => l_array_source_23(Idx)
 , p_source_24 => g_array_event(l_event_id).array_value_num('source_24')
 , p_source_25 => l_array_source_25(Idx)
 , p_source_26 => l_array_source_26(Idx)
 , p_source_27 => l_array_source_27(Idx)
 , p_source_28 => l_array_source_28(Idx)
 , p_source_29 => l_array_source_29(Idx)
 , p_source_30 => l_array_source_30(Idx)
 , p_source_31 => l_array_source_31(Idx)
 , p_source_32 => l_array_source_32(Idx)
 , p_source_33 => g_array_event(l_event_id).array_value_char('source_33')
 , p_source_34 => l_array_source_34(Idx)
 , p_source_35 => l_array_source_35(Idx)
 , p_source_36 => l_array_source_36(Idx)
 , p_source_37 => l_array_source_37(Idx)
 , p_source_38 => l_array_source_38(Idx)
 , p_source_39 => g_array_event(l_event_id).array_value_date('source_39')
 , p_source_40 => g_array_event(l_event_id).array_value_num('source_40')
 , p_source_41 => g_array_event(l_event_id).array_value_char('source_41')
 , p_source_42 => l_array_source_42(Idx)
 , p_source_43 => l_array_source_43(Idx)
 , p_source_44 => l_array_source_44(Idx)
 , p_source_45 => l_array_source_45(Idx)
 , p_source_46 => l_array_source_46(Idx)
 , p_source_46_meaning => l_array_source_46_meaning(Idx)
 , p_source_47 => g_array_event(l_event_id).array_value_num('source_47')
 , p_source_48 => g_array_event(l_event_id).array_value_num('source_48')
 , p_source_49 => g_array_event(l_event_id).array_value_char('source_49')
 , p_source_50 => l_array_source_50(Idx)
 , p_source_51 => l_array_source_51(Idx)
 , p_source_52 => l_array_source_52(Idx)
 , p_source_53 => l_array_source_53(Idx)
 , p_source_54 => l_array_source_54(Idx)
 , p_source_55 => l_array_source_55(Idx)
 , p_source_56 => l_array_source_56(Idx)
 );
If(l_balance_type_code = 'A') THEN
  l_actual_gain_loss_ref := l_gain_or_loss_ref;
END IF;

--


--
AcctLineType_25 (
 p_application_id  => p_application_id
 ,p_event_id     => l_event_id
 ,p_calculate_acctd_flag => l_calculate_acctd_flag
 ,p_calculate_g_l_flag => l_calculate_g_l_flag
 ,p_actual_flag => l_actual_flag
 ,p_balance_type_code => l_balance_type_code
 ,p_gain_or_loss_ref=> l_gain_or_loss_ref
 
 , p_source_1 => l_array_source_1(Idx)
 , p_source_6 => g_array_event(l_event_id).array_value_num('source_6')
 , p_source_7 => g_array_event(l_event_id).array_value_char('source_7')
 , p_source_7_meaning => g_array_event(l_event_id).array_value_char('source_7_meaning')
 , p_source_8 => l_array_source_8(Idx)
 , p_source_9 => l_array_source_9(Idx)
 , p_source_9_meaning => l_array_source_9_meaning(Idx)
 , p_source_10 => g_array_event(l_event_id).array_value_num('source_10')
 , p_source_11 => l_array_source_11(Idx)
 , p_source_12 => g_array_event(l_event_id).array_value_char('source_12')
 , p_source_12_meaning => g_array_event(l_event_id).array_value_char('source_12_meaning')
 , p_source_15 => l_array_source_15(Idx)
 , p_source_15_meaning => l_array_source_15_meaning(Idx)
 , p_source_17 => g_array_event(l_event_id).array_value_char('source_17')
 , p_source_17_meaning => g_array_event(l_event_id).array_value_char('source_17_meaning')
 , p_source_19 => l_array_source_19(Idx)
 , p_source_21 => l_array_source_21(Idx)
 , p_source_23 => l_array_source_23(Idx)
 , p_source_24 => g_array_event(l_event_id).array_value_num('source_24')
 , p_source_25 => l_array_source_25(Idx)
 , p_source_26 => l_array_source_26(Idx)
 , p_source_27 => l_array_source_27(Idx)
 , p_source_28 => l_array_source_28(Idx)
 , p_source_29 => l_array_source_29(Idx)
 , p_source_30 => l_array_source_30(Idx)
 , p_source_31 => l_array_source_31(Idx)
 , p_source_32 => l_array_source_32(Idx)
 , p_source_33 => g_array_event(l_event_id).array_value_char('source_33')
 , p_source_34 => l_array_source_34(Idx)
 , p_source_35 => l_array_source_35(Idx)
 , p_source_36 => l_array_source_36(Idx)
 , p_source_37 => l_array_source_37(Idx)
 , p_source_38 => l_array_source_38(Idx)
 , p_source_39 => g_array_event(l_event_id).array_value_date('source_39')
 , p_source_40 => g_array_event(l_event_id).array_value_num('source_40')
 , p_source_41 => g_array_event(l_event_id).array_value_char('source_41')
 , p_source_43 => l_array_source_43(Idx)
 , p_source_44 => l_array_source_44(Idx)
 , p_source_45 => l_array_source_45(Idx)
 , p_source_46 => l_array_source_46(Idx)
 , p_source_46_meaning => l_array_source_46_meaning(Idx)
 , p_source_47 => g_array_event(l_event_id).array_value_num('source_47')
 , p_source_48 => g_array_event(l_event_id).array_value_num('source_48')
 , p_source_49 => g_array_event(l_event_id).array_value_char('source_49')
 , p_source_50 => l_array_source_50(Idx)
 , p_source_51 => l_array_source_51(Idx)
 , p_source_52 => l_array_source_52(Idx)
 , p_source_53 => l_array_source_53(Idx)
 , p_source_54 => l_array_source_54(Idx)
 , p_source_55 => l_array_source_55(Idx)
 , p_source_56 => l_array_source_56(Idx)
 , p_source_65 => l_array_source_65(Idx)
 , p_source_66 => l_array_source_66(Idx)
 );
If(l_balance_type_code = 'A') THEN
  l_actual_gain_loss_ref := l_gain_or_loss_ref;
END IF;

--


--
AcctLineType_29 (
 p_application_id  => p_application_id
 ,p_event_id     => l_event_id
 ,p_calculate_acctd_flag => l_calculate_acctd_flag
 ,p_calculate_g_l_flag => l_calculate_g_l_flag
 ,p_actual_flag => l_actual_flag
 ,p_balance_type_code => l_balance_type_code
 ,p_gain_or_loss_ref=> l_gain_or_loss_ref
 
 , p_source_1 => l_array_source_1(Idx)
 , p_source_11 => l_array_source_11(Idx)
 , p_source_15 => l_array_source_15(Idx)
 , p_source_15_meaning => l_array_source_15_meaning(Idx)
 , p_source_17 => g_array_event(l_event_id).array_value_char('source_17')
 , p_source_17_meaning => g_array_event(l_event_id).array_value_char('source_17_meaning')
 , p_source_19 => l_array_source_19(Idx)
 , p_source_21 => l_array_source_21(Idx)
 , p_source_23 => l_array_source_23(Idx)
 , p_source_24 => g_array_event(l_event_id).array_value_num('source_24')
 , p_source_25 => l_array_source_25(Idx)
 , p_source_26 => l_array_source_26(Idx)
 , p_source_27 => l_array_source_27(Idx)
 , p_source_28 => l_array_source_28(Idx)
 , p_source_29 => l_array_source_29(Idx)
 , p_source_30 => l_array_source_30(Idx)
 , p_source_31 => l_array_source_31(Idx)
 , p_source_32 => l_array_source_32(Idx)
 , p_source_33 => g_array_event(l_event_id).array_value_char('source_33')
 , p_source_34 => l_array_source_34(Idx)
 , p_source_35 => l_array_source_35(Idx)
 , p_source_36 => l_array_source_36(Idx)
 , p_source_37 => l_array_source_37(Idx)
 , p_source_38 => l_array_source_38(Idx)
 , p_source_39 => g_array_event(l_event_id).array_value_date('source_39')
 , p_source_40 => g_array_event(l_event_id).array_value_num('source_40')
 , p_source_41 => g_array_event(l_event_id).array_value_char('source_41')
 , p_source_43 => l_array_source_43(Idx)
 , p_source_44 => l_array_source_44(Idx)
 , p_source_45 => l_array_source_45(Idx)
 , p_source_46 => l_array_source_46(Idx)
 , p_source_46_meaning => l_array_source_46_meaning(Idx)
 , p_source_47 => g_array_event(l_event_id).array_value_num('source_47')
 , p_source_48 => g_array_event(l_event_id).array_value_num('source_48')
 , p_source_49 => g_array_event(l_event_id).array_value_char('source_49')
 , p_source_50 => l_array_source_50(Idx)
 , p_source_51 => l_array_source_51(Idx)
 , p_source_52 => l_array_source_52(Idx)
 , p_source_53 => l_array_source_53(Idx)
 , p_source_54 => l_array_source_54(Idx)
 , p_source_55 => l_array_source_55(Idx)
 , p_source_56 => l_array_source_56(Idx)
 , p_source_65 => l_array_source_65(Idx)
 , p_source_66 => l_array_source_66(Idx)
 );
If(l_balance_type_code = 'A') THEN
  l_actual_gain_loss_ref := l_gain_or_loss_ref;
END IF;

--


--
AcctLineType_36 (
 p_application_id  => p_application_id
 ,p_event_id     => l_event_id
 ,p_calculate_acctd_flag => l_calculate_acctd_flag
 ,p_calculate_g_l_flag => l_calculate_g_l_flag
 ,p_actual_flag => l_actual_flag
 ,p_balance_type_code => l_balance_type_code
 ,p_gain_or_loss_ref=> l_gain_or_loss_ref
 
 , p_source_1 => l_array_source_1(Idx)
 , p_source_11 => l_array_source_11(Idx)
 , p_source_15 => l_array_source_15(Idx)
 , p_source_15_meaning => l_array_source_15_meaning(Idx)
 , p_source_17 => g_array_event(l_event_id).array_value_char('source_17')
 , p_source_17_meaning => g_array_event(l_event_id).array_value_char('source_17_meaning')
 , p_source_19 => l_array_source_19(Idx)
 , p_source_21 => l_array_source_21(Idx)
 , p_source_23 => l_array_source_23(Idx)
 , p_source_24 => g_array_event(l_event_id).array_value_num('source_24')
 , p_source_25 => l_array_source_25(Idx)
 , p_source_26 => l_array_source_26(Idx)
 , p_source_27 => l_array_source_27(Idx)
 , p_source_28 => l_array_source_28(Idx)
 , p_source_29 => l_array_source_29(Idx)
 , p_source_30 => l_array_source_30(Idx)
 , p_source_31 => l_array_source_31(Idx)
 , p_source_32 => l_array_source_32(Idx)
 , p_source_33 => g_array_event(l_event_id).array_value_char('source_33')
 , p_source_34 => l_array_source_34(Idx)
 , p_source_35 => l_array_source_35(Idx)
 , p_source_36 => l_array_source_36(Idx)
 , p_source_37 => l_array_source_37(Idx)
 , p_source_38 => l_array_source_38(Idx)
 , p_source_39 => g_array_event(l_event_id).array_value_date('source_39')
 , p_source_40 => g_array_event(l_event_id).array_value_num('source_40')
 , p_source_41 => g_array_event(l_event_id).array_value_char('source_41')
 , p_source_43 => l_array_source_43(Idx)
 , p_source_44 => l_array_source_44(Idx)
 , p_source_45 => l_array_source_45(Idx)
 , p_source_46 => l_array_source_46(Idx)
 , p_source_46_meaning => l_array_source_46_meaning(Idx)
 , p_source_47 => g_array_event(l_event_id).array_value_num('source_47')
 , p_source_48 => g_array_event(l_event_id).array_value_num('source_48')
 , p_source_49 => g_array_event(l_event_id).array_value_char('source_49')
 , p_source_50 => l_array_source_50(Idx)
 , p_source_51 => l_array_source_51(Idx)
 , p_source_52 => l_array_source_52(Idx)
 , p_source_53 => l_array_source_53(Idx)
 , p_source_54 => l_array_source_54(Idx)
 , p_source_55 => l_array_source_55(Idx)
 , p_source_56 => l_array_source_56(Idx)
 , p_source_65 => l_array_source_65(Idx)
 , p_source_66 => l_array_source_66(Idx)
 );
If(l_balance_type_code = 'A') THEN
  l_actual_gain_loss_ref := l_gain_or_loss_ref;
END IF;

--


--
AcctLineType_40 (
 p_application_id  => p_application_id
 ,p_event_id     => l_event_id
 ,p_calculate_acctd_flag => l_calculate_acctd_flag
 ,p_calculate_g_l_flag => l_calculate_g_l_flag
 ,p_actual_flag => l_actual_flag
 ,p_balance_type_code => l_balance_type_code
 ,p_gain_or_loss_ref=> l_gain_or_loss_ref
 
 , p_source_1 => l_array_source_1(Idx)
 , p_source_11 => l_array_source_11(Idx)
 , p_source_15 => l_array_source_15(Idx)
 , p_source_15_meaning => l_array_source_15_meaning(Idx)
 , p_source_17 => g_array_event(l_event_id).array_value_char('source_17')
 , p_source_17_meaning => g_array_event(l_event_id).array_value_char('source_17_meaning')
 , p_source_18 => l_array_source_18(Idx)
 , p_source_18_meaning => l_array_source_18_meaning(Idx)
 , p_source_19 => l_array_source_19(Idx)
 , p_source_21 => l_array_source_21(Idx)
 , p_source_23 => l_array_source_23(Idx)
 , p_source_24 => g_array_event(l_event_id).array_value_num('source_24')
 , p_source_25 => l_array_source_25(Idx)
 , p_source_26 => l_array_source_26(Idx)
 , p_source_27 => l_array_source_27(Idx)
 , p_source_28 => l_array_source_28(Idx)
 , p_source_29 => l_array_source_29(Idx)
 , p_source_30 => l_array_source_30(Idx)
 , p_source_31 => l_array_source_31(Idx)
 , p_source_32 => l_array_source_32(Idx)
 , p_source_33 => g_array_event(l_event_id).array_value_char('source_33')
 , p_source_34 => l_array_source_34(Idx)
 , p_source_35 => l_array_source_35(Idx)
 , p_source_36 => l_array_source_36(Idx)
 , p_source_37 => l_array_source_37(Idx)
 , p_source_38 => l_array_source_38(Idx)
 , p_source_39 => g_array_event(l_event_id).array_value_date('source_39')
 , p_source_40 => g_array_event(l_event_id).array_value_num('source_40')
 , p_source_41 => g_array_event(l_event_id).array_value_char('source_41')
 , p_source_43 => l_array_source_43(Idx)
 , p_source_44 => l_array_source_44(Idx)
 , p_source_45 => l_array_source_45(Idx)
 , p_source_46 => l_array_source_46(Idx)
 , p_source_46_meaning => l_array_source_46_meaning(Idx)
 , p_source_47 => g_array_event(l_event_id).array_value_num('source_47')
 , p_source_48 => g_array_event(l_event_id).array_value_num('source_48')
 , p_source_49 => g_array_event(l_event_id).array_value_char('source_49')
 , p_source_50 => l_array_source_50(Idx)
 , p_source_51 => l_array_source_51(Idx)
 , p_source_52 => l_array_source_52(Idx)
 , p_source_53 => l_array_source_53(Idx)
 , p_source_54 => l_array_source_54(Idx)
 , p_source_55 => l_array_source_55(Idx)
 , p_source_56 => l_array_source_56(Idx)
 , p_source_65 => l_array_source_65(Idx)
 , p_source_66 => l_array_source_66(Idx)
 );
If(l_balance_type_code = 'A') THEN
  l_actual_gain_loss_ref := l_gain_or_loss_ref;
END IF;

--


--
AcctLineType_44 (
 p_application_id  => p_application_id
 ,p_event_id     => l_event_id
 ,p_calculate_acctd_flag => l_calculate_acctd_flag
 ,p_calculate_g_l_flag => l_calculate_g_l_flag
 ,p_actual_flag => l_actual_flag
 ,p_balance_type_code => l_balance_type_code
 ,p_gain_or_loss_ref=> l_gain_or_loss_ref
 
 , p_source_1 => l_array_source_1(Idx)
 , p_source_11 => l_array_source_11(Idx)
 , p_source_15 => l_array_source_15(Idx)
 , p_source_15_meaning => l_array_source_15_meaning(Idx)
 , p_source_17 => g_array_event(l_event_id).array_value_char('source_17')
 , p_source_17_meaning => g_array_event(l_event_id).array_value_char('source_17_meaning')
 , p_source_19 => l_array_source_19(Idx)
 , p_source_21 => l_array_source_21(Idx)
 , p_source_23 => l_array_source_23(Idx)
 , p_source_24 => g_array_event(l_event_id).array_value_num('source_24')
 , p_source_25 => l_array_source_25(Idx)
 , p_source_26 => l_array_source_26(Idx)
 , p_source_27 => l_array_source_27(Idx)
 , p_source_28 => l_array_source_28(Idx)
 , p_source_29 => l_array_source_29(Idx)
 , p_source_30 => l_array_source_30(Idx)
 , p_source_31 => l_array_source_31(Idx)
 , p_source_32 => l_array_source_32(Idx)
 , p_source_33 => g_array_event(l_event_id).array_value_char('source_33')
 , p_source_34 => l_array_source_34(Idx)
 , p_source_35 => l_array_source_35(Idx)
 , p_source_36 => l_array_source_36(Idx)
 , p_source_37 => l_array_source_37(Idx)
 , p_source_38 => l_array_source_38(Idx)
 , p_source_39 => g_array_event(l_event_id).array_value_date('source_39')
 , p_source_40 => g_array_event(l_event_id).array_value_num('source_40')
 , p_source_41 => g_array_event(l_event_id).array_value_char('source_41')
 , p_source_43 => l_array_source_43(Idx)
 , p_source_44 => l_array_source_44(Idx)
 , p_source_45 => l_array_source_45(Idx)
 , p_source_46 => l_array_source_46(Idx)
 , p_source_46_meaning => l_array_source_46_meaning(Idx)
 , p_source_47 => g_array_event(l_event_id).array_value_num('source_47')
 , p_source_48 => g_array_event(l_event_id).array_value_num('source_48')
 , p_source_49 => g_array_event(l_event_id).array_value_char('source_49')
 , p_source_50 => l_array_source_50(Idx)
 , p_source_51 => l_array_source_51(Idx)
 , p_source_52 => l_array_source_52(Idx)
 , p_source_53 => l_array_source_53(Idx)
 , p_source_54 => l_array_source_54(Idx)
 , p_source_55 => l_array_source_55(Idx)
 , p_source_56 => l_array_source_56(Idx)
 , p_source_65 => l_array_source_65(Idx)
 , p_source_66 => l_array_source_66(Idx)
 );
If(l_balance_type_code = 'A') THEN
  l_actual_gain_loss_ref := l_gain_or_loss_ref;
END IF;

--


--
AcctLineType_48 (
 p_application_id  => p_application_id
 ,p_event_id     => l_event_id
 ,p_calculate_acctd_flag => l_calculate_acctd_flag
 ,p_calculate_g_l_flag => l_calculate_g_l_flag
 ,p_actual_flag => l_actual_flag
 ,p_balance_type_code => l_balance_type_code
 ,p_gain_or_loss_ref=> l_gain_or_loss_ref
 
 , p_source_1 => l_array_source_1(Idx)
 , p_source_11 => l_array_source_11(Idx)
 , p_source_15 => l_array_source_15(Idx)
 , p_source_15_meaning => l_array_source_15_meaning(Idx)
 , p_source_17 => g_array_event(l_event_id).array_value_char('source_17')
 , p_source_17_meaning => g_array_event(l_event_id).array_value_char('source_17_meaning')
 , p_source_18 => l_array_source_18(Idx)
 , p_source_18_meaning => l_array_source_18_meaning(Idx)
 , p_source_19 => l_array_source_19(Idx)
 , p_source_21 => l_array_source_21(Idx)
 , p_source_23 => l_array_source_23(Idx)
 , p_source_24 => g_array_event(l_event_id).array_value_num('source_24')
 , p_source_25 => l_array_source_25(Idx)
 , p_source_26 => l_array_source_26(Idx)
 , p_source_27 => l_array_source_27(Idx)
 , p_source_28 => l_array_source_28(Idx)
 , p_source_29 => l_array_source_29(Idx)
 , p_source_30 => l_array_source_30(Idx)
 , p_source_31 => l_array_source_31(Idx)
 , p_source_32 => l_array_source_32(Idx)
 , p_source_33 => g_array_event(l_event_id).array_value_char('source_33')
 , p_source_34 => l_array_source_34(Idx)
 , p_source_35 => l_array_source_35(Idx)
 , p_source_36 => l_array_source_36(Idx)
 , p_source_37 => l_array_source_37(Idx)
 , p_source_38 => l_array_source_38(Idx)
 , p_source_39 => g_array_event(l_event_id).array_value_date('source_39')
 , p_source_40 => g_array_event(l_event_id).array_value_num('source_40')
 , p_source_41 => g_array_event(l_event_id).array_value_char('source_41')
 , p_source_43 => l_array_source_43(Idx)
 , p_source_44 => l_array_source_44(Idx)
 , p_source_45 => l_array_source_45(Idx)
 , p_source_46 => l_array_source_46(Idx)
 , p_source_46_meaning => l_array_source_46_meaning(Idx)
 , p_source_47 => g_array_event(l_event_id).array_value_num('source_47')
 , p_source_48 => g_array_event(l_event_id).array_value_num('source_48')
 , p_source_49 => g_array_event(l_event_id).array_value_char('source_49')
 , p_source_50 => l_array_source_50(Idx)
 , p_source_51 => l_array_source_51(Idx)
 , p_source_52 => l_array_source_52(Idx)
 , p_source_53 => l_array_source_53(Idx)
 , p_source_54 => l_array_source_54(Idx)
 , p_source_55 => l_array_source_55(Idx)
 , p_source_56 => l_array_source_56(Idx)
 , p_source_59 => l_array_source_59(Idx)
 , p_source_59_meaning => l_array_source_59_meaning(Idx)
 , p_source_65 => l_array_source_65(Idx)
 , p_source_66 => l_array_source_66(Idx)
 );
If(l_balance_type_code = 'A') THEN
  l_actual_gain_loss_ref := l_gain_or_loss_ref;
END IF;

--


--
AcctLineType_49 (
 p_application_id  => p_application_id
 ,p_event_id     => l_event_id
 ,p_calculate_acctd_flag => l_calculate_acctd_flag
 ,p_calculate_g_l_flag => l_calculate_g_l_flag
 ,p_actual_flag => l_actual_flag
 ,p_balance_type_code => l_balance_type_code
 ,p_gain_or_loss_ref=> l_gain_or_loss_ref
 
 , p_source_15 => l_array_source_15(Idx)
 , p_source_15_meaning => l_array_source_15_meaning(Idx)
 , p_source_18 => l_array_source_18(Idx)
 , p_source_18_meaning => l_array_source_18_meaning(Idx)
 , p_source_19 => l_array_source_19(Idx)
 , p_source_21 => l_array_source_21(Idx)
 , p_source_23 => l_array_source_23(Idx)
 , p_source_24 => g_array_event(l_event_id).array_value_num('source_24')
 , p_source_30 => l_array_source_30(Idx)
 , p_source_31 => l_array_source_31(Idx)
 , p_source_32 => l_array_source_32(Idx)
 , p_source_33 => g_array_event(l_event_id).array_value_char('source_33')
 , p_source_34 => l_array_source_34(Idx)
 , p_source_35 => l_array_source_35(Idx)
 , p_source_36 => l_array_source_36(Idx)
 , p_source_37 => l_array_source_37(Idx)
 , p_source_38 => l_array_source_38(Idx)
 , p_source_43 => l_array_source_43(Idx)
 , p_source_44 => l_array_source_44(Idx)
 , p_source_45 => l_array_source_45(Idx)
 , p_source_46 => l_array_source_46(Idx)
 , p_source_46_meaning => l_array_source_46_meaning(Idx)
 , p_source_49 => g_array_event(l_event_id).array_value_char('source_49')
 , p_source_50 => l_array_source_50(Idx)
 , p_source_51 => l_array_source_51(Idx)
 , p_source_52 => l_array_source_52(Idx)
 , p_source_53 => l_array_source_53(Idx)
 , p_source_54 => l_array_source_54(Idx)
 , p_source_55 => l_array_source_55(Idx)
 , p_source_56 => l_array_source_56(Idx)
 , p_source_58 => l_array_source_58(Idx)
 , p_source_59 => l_array_source_59(Idx)
 , p_source_59_meaning => l_array_source_59_meaning(Idx)
 , p_source_60 => l_array_source_60(Idx)
 , p_source_61 => l_array_source_61(Idx)
 , p_source_62 => l_array_source_62(Idx)
 , p_source_63 => l_array_source_63(Idx)
 , p_source_64 => l_array_source_64(Idx)
 , p_source_65 => l_array_source_65(Idx)
 , p_source_66 => l_array_source_66(Idx)
 );
If(l_balance_type_code = 'A') THEN
  l_actual_gain_loss_ref := l_gain_or_loss_ref;
END IF;

--


--
AcctLineType_52 (
 p_application_id  => p_application_id
 ,p_event_id     => l_event_id
 ,p_calculate_acctd_flag => l_calculate_acctd_flag
 ,p_calculate_g_l_flag => l_calculate_g_l_flag
 ,p_actual_flag => l_actual_flag
 ,p_balance_type_code => l_balance_type_code
 ,p_gain_or_loss_ref=> l_gain_or_loss_ref
 
 , p_source_15 => l_array_source_15(Idx)
 , p_source_15_meaning => l_array_source_15_meaning(Idx)
 , p_source_18 => l_array_source_18(Idx)
 , p_source_18_meaning => l_array_source_18_meaning(Idx)
 , p_source_19 => l_array_source_19(Idx)
 , p_source_21 => l_array_source_21(Idx)
 , p_source_23 => l_array_source_23(Idx)
 , p_source_24 => g_array_event(l_event_id).array_value_num('source_24')
 , p_source_30 => l_array_source_30(Idx)
 , p_source_31 => l_array_source_31(Idx)
 , p_source_32 => l_array_source_32(Idx)
 , p_source_33 => g_array_event(l_event_id).array_value_char('source_33')
 , p_source_34 => l_array_source_34(Idx)
 , p_source_35 => l_array_source_35(Idx)
 , p_source_36 => l_array_source_36(Idx)
 , p_source_37 => l_array_source_37(Idx)
 , p_source_38 => l_array_source_38(Idx)
 , p_source_43 => l_array_source_43(Idx)
 , p_source_44 => l_array_source_44(Idx)
 , p_source_45 => l_array_source_45(Idx)
 , p_source_46 => l_array_source_46(Idx)
 , p_source_46_meaning => l_array_source_46_meaning(Idx)
 , p_source_49 => g_array_event(l_event_id).array_value_char('source_49')
 , p_source_50 => l_array_source_50(Idx)
 , p_source_51 => l_array_source_51(Idx)
 , p_source_52 => l_array_source_52(Idx)
 , p_source_53 => l_array_source_53(Idx)
 , p_source_54 => l_array_source_54(Idx)
 , p_source_55 => l_array_source_55(Idx)
 , p_source_56 => l_array_source_56(Idx)
 , p_source_58 => l_array_source_58(Idx)
 , p_source_60 => l_array_source_60(Idx)
 , p_source_61 => l_array_source_61(Idx)
 , p_source_62 => l_array_source_62(Idx)
 , p_source_63 => l_array_source_63(Idx)
 , p_source_64 => l_array_source_64(Idx)
 , p_source_65 => l_array_source_65(Idx)
 , p_source_66 => l_array_source_66(Idx)
 );
If(l_balance_type_code = 'A') THEN
  l_actual_gain_loss_ref := l_gain_or_loss_ref;
END IF;

--


--
AcctLineType_56 (
 p_application_id  => p_application_id
 ,p_event_id     => l_event_id
 ,p_calculate_acctd_flag => l_calculate_acctd_flag
 ,p_calculate_g_l_flag => l_calculate_g_l_flag
 ,p_actual_flag => l_actual_flag
 ,p_balance_type_code => l_balance_type_code
 ,p_gain_or_loss_ref=> l_gain_or_loss_ref
 
 , p_source_1 => l_array_source_1(Idx)
 , p_source_11 => l_array_source_11(Idx)
 , p_source_15 => l_array_source_15(Idx)
 , p_source_15_meaning => l_array_source_15_meaning(Idx)
 , p_source_16 => l_array_source_16(Idx)
 , p_source_17 => g_array_event(l_event_id).array_value_char('source_17')
 , p_source_17_meaning => g_array_event(l_event_id).array_value_char('source_17_meaning')
 , p_source_18 => l_array_source_18(Idx)
 , p_source_18_meaning => l_array_source_18_meaning(Idx)
 , p_source_19 => l_array_source_19(Idx)
 , p_source_21 => l_array_source_21(Idx)
 , p_source_23 => l_array_source_23(Idx)
 , p_source_24 => g_array_event(l_event_id).array_value_num('source_24')
 , p_source_25 => l_array_source_25(Idx)
 , p_source_26 => l_array_source_26(Idx)
 , p_source_27 => l_array_source_27(Idx)
 , p_source_28 => l_array_source_28(Idx)
 , p_source_29 => l_array_source_29(Idx)
 , p_source_30 => l_array_source_30(Idx)
 , p_source_31 => l_array_source_31(Idx)
 , p_source_32 => l_array_source_32(Idx)
 , p_source_33 => g_array_event(l_event_id).array_value_char('source_33')
 , p_source_34 => l_array_source_34(Idx)
 , p_source_35 => l_array_source_35(Idx)
 , p_source_36 => l_array_source_36(Idx)
 , p_source_37 => l_array_source_37(Idx)
 , p_source_38 => l_array_source_38(Idx)
 , p_source_39 => g_array_event(l_event_id).array_value_date('source_39')
 , p_source_40 => g_array_event(l_event_id).array_value_num('source_40')
 , p_source_41 => g_array_event(l_event_id).array_value_char('source_41')
 , p_source_43 => l_array_source_43(Idx)
 , p_source_44 => l_array_source_44(Idx)
 , p_source_45 => l_array_source_45(Idx)
 , p_source_46 => l_array_source_46(Idx)
 , p_source_46_meaning => l_array_source_46_meaning(Idx)
 , p_source_47 => g_array_event(l_event_id).array_value_num('source_47')
 , p_source_48 => g_array_event(l_event_id).array_value_num('source_48')
 , p_source_49 => g_array_event(l_event_id).array_value_char('source_49')
 , p_source_50 => l_array_source_50(Idx)
 , p_source_51 => l_array_source_51(Idx)
 , p_source_52 => l_array_source_52(Idx)
 , p_source_53 => l_array_source_53(Idx)
 , p_source_54 => l_array_source_54(Idx)
 , p_source_55 => l_array_source_55(Idx)
 , p_source_56 => l_array_source_56(Idx)
 , p_source_81 => l_array_source_81(Idx)
 , p_source_82 => l_array_source_82(Idx)
 );
If(l_balance_type_code = 'A') THEN
  l_actual_gain_loss_ref := l_gain_or_loss_ref;
END IF;

--


--
AcctLineType_60 (
 p_application_id  => p_application_id
 ,p_event_id     => l_event_id
 ,p_calculate_acctd_flag => l_calculate_acctd_flag
 ,p_calculate_g_l_flag => l_calculate_g_l_flag
 ,p_actual_flag => l_actual_flag
 ,p_balance_type_code => l_balance_type_code
 ,p_gain_or_loss_ref=> l_gain_or_loss_ref
 
 , p_source_1 => l_array_source_1(Idx)
 , p_source_11 => l_array_source_11(Idx)
 , p_source_15 => l_array_source_15(Idx)
 , p_source_15_meaning => l_array_source_15_meaning(Idx)
 , p_source_17 => g_array_event(l_event_id).array_value_char('source_17')
 , p_source_17_meaning => g_array_event(l_event_id).array_value_char('source_17_meaning')
 , p_source_19 => l_array_source_19(Idx)
 , p_source_21 => l_array_source_21(Idx)
 , p_source_23 => l_array_source_23(Idx)
 , p_source_24 => g_array_event(l_event_id).array_value_num('source_24')
 , p_source_25 => l_array_source_25(Idx)
 , p_source_26 => l_array_source_26(Idx)
 , p_source_27 => l_array_source_27(Idx)
 , p_source_28 => l_array_source_28(Idx)
 , p_source_29 => l_array_source_29(Idx)
 , p_source_30 => l_array_source_30(Idx)
 , p_source_31 => l_array_source_31(Idx)
 , p_source_32 => l_array_source_32(Idx)
 , p_source_33 => g_array_event(l_event_id).array_value_char('source_33')
 , p_source_34 => l_array_source_34(Idx)
 , p_source_35 => l_array_source_35(Idx)
 , p_source_36 => l_array_source_36(Idx)
 , p_source_37 => l_array_source_37(Idx)
 , p_source_38 => l_array_source_38(Idx)
 , p_source_39 => g_array_event(l_event_id).array_value_date('source_39')
 , p_source_40 => g_array_event(l_event_id).array_value_num('source_40')
 , p_source_41 => g_array_event(l_event_id).array_value_char('source_41')
 , p_source_43 => l_array_source_43(Idx)
 , p_source_44 => l_array_source_44(Idx)
 , p_source_45 => l_array_source_45(Idx)
 , p_source_46 => l_array_source_46(Idx)
 , p_source_46_meaning => l_array_source_46_meaning(Idx)
 , p_source_47 => g_array_event(l_event_id).array_value_num('source_47')
 , p_source_48 => g_array_event(l_event_id).array_value_num('source_48')
 , p_source_49 => g_array_event(l_event_id).array_value_char('source_49')
 , p_source_50 => l_array_source_50(Idx)
 , p_source_51 => l_array_source_51(Idx)
 , p_source_52 => l_array_source_52(Idx)
 , p_source_53 => l_array_source_53(Idx)
 , p_source_54 => l_array_source_54(Idx)
 , p_source_55 => l_array_source_55(Idx)
 , p_source_56 => l_array_source_56(Idx)
 , p_source_59 => l_array_source_59(Idx)
 , p_source_59_meaning => l_array_source_59_meaning(Idx)
 , p_source_65 => l_array_source_65(Idx)
 , p_source_66 => l_array_source_66(Idx)
 );
If(l_balance_type_code = 'A') THEN
  l_actual_gain_loss_ref := l_gain_or_loss_ref;
END IF;

--


--
AcctLineType_64 (
 p_application_id  => p_application_id
 ,p_event_id     => l_event_id
 ,p_calculate_acctd_flag => l_calculate_acctd_flag
 ,p_calculate_g_l_flag => l_calculate_g_l_flag
 ,p_actual_flag => l_actual_flag
 ,p_balance_type_code => l_balance_type_code
 ,p_gain_or_loss_ref=> l_gain_or_loss_ref
 
 , p_source_1 => l_array_source_1(Idx)
 , p_source_13 => l_array_source_13(Idx)
 , p_source_15 => l_array_source_15(Idx)
 , p_source_15_meaning => l_array_source_15_meaning(Idx)
 , p_source_17 => g_array_event(l_event_id).array_value_char('source_17')
 , p_source_17_meaning => g_array_event(l_event_id).array_value_char('source_17_meaning')
 , p_source_19 => l_array_source_19(Idx)
 , p_source_21 => l_array_source_21(Idx)
 , p_source_23 => l_array_source_23(Idx)
 , p_source_24 => g_array_event(l_event_id).array_value_num('source_24')
 , p_source_25 => l_array_source_25(Idx)
 , p_source_26 => l_array_source_26(Idx)
 , p_source_27 => l_array_source_27(Idx)
 , p_source_28 => l_array_source_28(Idx)
 , p_source_29 => l_array_source_29(Idx)
 , p_source_30 => l_array_source_30(Idx)
 , p_source_31 => l_array_source_31(Idx)
 , p_source_32 => l_array_source_32(Idx)
 , p_source_33 => g_array_event(l_event_id).array_value_char('source_33')
 , p_source_34 => l_array_source_34(Idx)
 , p_source_35 => l_array_source_35(Idx)
 , p_source_36 => l_array_source_36(Idx)
 , p_source_37 => l_array_source_37(Idx)
 , p_source_38 => l_array_source_38(Idx)
 , p_source_39 => g_array_event(l_event_id).array_value_date('source_39')
 , p_source_40 => g_array_event(l_event_id).array_value_num('source_40')
 , p_source_41 => g_array_event(l_event_id).array_value_char('source_41')
 , p_source_43 => l_array_source_43(Idx)
 , p_source_44 => l_array_source_44(Idx)
 , p_source_45 => l_array_source_45(Idx)
 , p_source_46 => l_array_source_46(Idx)
 , p_source_46_meaning => l_array_source_46_meaning(Idx)
 , p_source_47 => g_array_event(l_event_id).array_value_num('source_47')
 , p_source_48 => g_array_event(l_event_id).array_value_num('source_48')
 , p_source_49 => g_array_event(l_event_id).array_value_char('source_49')
 , p_source_50 => l_array_source_50(Idx)
 , p_source_51 => l_array_source_51(Idx)
 , p_source_52 => l_array_source_52(Idx)
 , p_source_53 => l_array_source_53(Idx)
 , p_source_54 => l_array_source_54(Idx)
 , p_source_55 => l_array_source_55(Idx)
 , p_source_56 => l_array_source_56(Idx)
 , p_source_59 => l_array_source_59(Idx)
 , p_source_59_meaning => l_array_source_59_meaning(Idx)
 , p_source_65 => l_array_source_65(Idx)
 , p_source_66 => l_array_source_66(Idx)
 );
If(l_balance_type_code = 'A') THEN
  l_actual_gain_loss_ref := l_gain_or_loss_ref;
END IF;

--


--
AcctLineType_69 (
 p_application_id  => p_application_id
 ,p_event_id     => l_event_id
 ,p_calculate_acctd_flag => l_calculate_acctd_flag
 ,p_calculate_g_l_flag => l_calculate_g_l_flag
 ,p_actual_flag => l_actual_flag
 ,p_balance_type_code => l_balance_type_code
 ,p_gain_or_loss_ref=> l_gain_or_loss_ref
 
 , p_source_1 => l_array_source_1(Idx)
 , p_source_11 => l_array_source_11(Idx)
 , p_source_15 => l_array_source_15(Idx)
 , p_source_15_meaning => l_array_source_15_meaning(Idx)
 , p_source_16 => l_array_source_16(Idx)
 , p_source_17 => g_array_event(l_event_id).array_value_char('source_17')
 , p_source_17_meaning => g_array_event(l_event_id).array_value_char('source_17_meaning')
 , p_source_18 => l_array_source_18(Idx)
 , p_source_18_meaning => l_array_source_18_meaning(Idx)
 , p_source_19 => l_array_source_19(Idx)
 , p_source_21 => l_array_source_21(Idx)
 , p_source_23 => l_array_source_23(Idx)
 , p_source_24 => g_array_event(l_event_id).array_value_num('source_24')
 , p_source_25 => l_array_source_25(Idx)
 , p_source_26 => l_array_source_26(Idx)
 , p_source_27 => l_array_source_27(Idx)
 , p_source_28 => l_array_source_28(Idx)
 , p_source_29 => l_array_source_29(Idx)
 , p_source_30 => l_array_source_30(Idx)
 , p_source_31 => l_array_source_31(Idx)
 , p_source_32 => l_array_source_32(Idx)
 , p_source_33 => g_array_event(l_event_id).array_value_char('source_33')
 , p_source_34 => l_array_source_34(Idx)
 , p_source_35 => l_array_source_35(Idx)
 , p_source_36 => l_array_source_36(Idx)
 , p_source_37 => l_array_source_37(Idx)
 , p_source_38 => l_array_source_38(Idx)
 , p_source_39 => g_array_event(l_event_id).array_value_date('source_39')
 , p_source_40 => g_array_event(l_event_id).array_value_num('source_40')
 , p_source_41 => g_array_event(l_event_id).array_value_char('source_41')
 , p_source_42 => l_array_source_42(Idx)
 , p_source_43 => l_array_source_43(Idx)
 , p_source_44 => l_array_source_44(Idx)
 , p_source_45 => l_array_source_45(Idx)
 , p_source_46 => l_array_source_46(Idx)
 , p_source_46_meaning => l_array_source_46_meaning(Idx)
 , p_source_47 => g_array_event(l_event_id).array_value_num('source_47')
 , p_source_48 => g_array_event(l_event_id).array_value_num('source_48')
 , p_source_49 => g_array_event(l_event_id).array_value_char('source_49')
 , p_source_50 => l_array_source_50(Idx)
 , p_source_51 => l_array_source_51(Idx)
 , p_source_52 => l_array_source_52(Idx)
 , p_source_53 => l_array_source_53(Idx)
 , p_source_54 => l_array_source_54(Idx)
 , p_source_55 => l_array_source_55(Idx)
 , p_source_56 => l_array_source_56(Idx)
 );
If(l_balance_type_code = 'A') THEN
  l_actual_gain_loss_ref := l_gain_or_loss_ref;
END IF;

--


--
AcctLineType_72 (
 p_application_id  => p_application_id
 ,p_event_id     => l_event_id
 ,p_calculate_acctd_flag => l_calculate_acctd_flag
 ,p_calculate_g_l_flag => l_calculate_g_l_flag
 ,p_actual_flag => l_actual_flag
 ,p_balance_type_code => l_balance_type_code
 ,p_gain_or_loss_ref=> l_gain_or_loss_ref
 
 , p_source_1 => l_array_source_1(Idx)
 , p_source_6 => g_array_event(l_event_id).array_value_num('source_6')
 , p_source_7 => g_array_event(l_event_id).array_value_char('source_7')
 , p_source_7_meaning => g_array_event(l_event_id).array_value_char('source_7_meaning')
 , p_source_8 => l_array_source_8(Idx)
 , p_source_9 => l_array_source_9(Idx)
 , p_source_9_meaning => l_array_source_9_meaning(Idx)
 , p_source_10 => g_array_event(l_event_id).array_value_num('source_10')
 , p_source_11 => l_array_source_11(Idx)
 , p_source_12 => g_array_event(l_event_id).array_value_char('source_12')
 , p_source_12_meaning => g_array_event(l_event_id).array_value_char('source_12_meaning')
 , p_source_15 => l_array_source_15(Idx)
 , p_source_15_meaning => l_array_source_15_meaning(Idx)
 , p_source_17 => g_array_event(l_event_id).array_value_char('source_17')
 , p_source_17_meaning => g_array_event(l_event_id).array_value_char('source_17_meaning')
 , p_source_19 => l_array_source_19(Idx)
 , p_source_21 => l_array_source_21(Idx)
 , p_source_23 => l_array_source_23(Idx)
 , p_source_24 => g_array_event(l_event_id).array_value_num('source_24')
 , p_source_25 => l_array_source_25(Idx)
 , p_source_26 => l_array_source_26(Idx)
 , p_source_27 => l_array_source_27(Idx)
 , p_source_28 => l_array_source_28(Idx)
 , p_source_29 => l_array_source_29(Idx)
 , p_source_30 => l_array_source_30(Idx)
 , p_source_31 => l_array_source_31(Idx)
 , p_source_32 => l_array_source_32(Idx)
 , p_source_33 => g_array_event(l_event_id).array_value_char('source_33')
 , p_source_34 => l_array_source_34(Idx)
 , p_source_35 => l_array_source_35(Idx)
 , p_source_36 => l_array_source_36(Idx)
 , p_source_37 => l_array_source_37(Idx)
 , p_source_38 => l_array_source_38(Idx)
 , p_source_39 => g_array_event(l_event_id).array_value_date('source_39')
 , p_source_40 => g_array_event(l_event_id).array_value_num('source_40')
 , p_source_41 => g_array_event(l_event_id).array_value_char('source_41')
 , p_source_43 => l_array_source_43(Idx)
 , p_source_44 => l_array_source_44(Idx)
 , p_source_45 => l_array_source_45(Idx)
 , p_source_46 => l_array_source_46(Idx)
 , p_source_46_meaning => l_array_source_46_meaning(Idx)
 , p_source_47 => g_array_event(l_event_id).array_value_num('source_47')
 , p_source_48 => g_array_event(l_event_id).array_value_num('source_48')
 , p_source_49 => g_array_event(l_event_id).array_value_char('source_49')
 , p_source_50 => l_array_source_50(Idx)
 , p_source_51 => l_array_source_51(Idx)
 , p_source_52 => l_array_source_52(Idx)
 , p_source_53 => l_array_source_53(Idx)
 , p_source_54 => l_array_source_54(Idx)
 , p_source_55 => l_array_source_55(Idx)
 , p_source_56 => l_array_source_56(Idx)
 , p_source_65 => l_array_source_65(Idx)
 , p_source_66 => l_array_source_66(Idx)
 );
If(l_balance_type_code = 'A') THEN
  l_actual_gain_loss_ref := l_gain_or_loss_ref;
END IF;

--


--
AcctLineType_75 (
 p_application_id  => p_application_id
 ,p_event_id     => l_event_id
 ,p_calculate_acctd_flag => l_calculate_acctd_flag
 ,p_calculate_g_l_flag => l_calculate_g_l_flag
 ,p_actual_flag => l_actual_flag
 ,p_balance_type_code => l_balance_type_code
 ,p_gain_or_loss_ref=> l_gain_or_loss_ref
 
 , p_source_1 => l_array_source_1(Idx)
 , p_source_11 => l_array_source_11(Idx)
 , p_source_15 => l_array_source_15(Idx)
 , p_source_15_meaning => l_array_source_15_meaning(Idx)
 , p_source_17 => g_array_event(l_event_id).array_value_char('source_17')
 , p_source_17_meaning => g_array_event(l_event_id).array_value_char('source_17_meaning')
 , p_source_19 => l_array_source_19(Idx)
 , p_source_21 => l_array_source_21(Idx)
 , p_source_23 => l_array_source_23(Idx)
 , p_source_24 => g_array_event(l_event_id).array_value_num('source_24')
 , p_source_25 => l_array_source_25(Idx)
 , p_source_26 => l_array_source_26(Idx)
 , p_source_27 => l_array_source_27(Idx)
 , p_source_28 => l_array_source_28(Idx)
 , p_source_29 => l_array_source_29(Idx)
 , p_source_30 => l_array_source_30(Idx)
 , p_source_31 => l_array_source_31(Idx)
 , p_source_32 => l_array_source_32(Idx)
 , p_source_33 => g_array_event(l_event_id).array_value_char('source_33')
 , p_source_34 => l_array_source_34(Idx)
 , p_source_35 => l_array_source_35(Idx)
 , p_source_36 => l_array_source_36(Idx)
 , p_source_37 => l_array_source_37(Idx)
 , p_source_38 => l_array_source_38(Idx)
 , p_source_39 => g_array_event(l_event_id).array_value_date('source_39')
 , p_source_40 => g_array_event(l_event_id).array_value_num('source_40')
 , p_source_41 => g_array_event(l_event_id).array_value_char('source_41')
 , p_source_43 => l_array_source_43(Idx)
 , p_source_44 => l_array_source_44(Idx)
 , p_source_45 => l_array_source_45(Idx)
 , p_source_46 => l_array_source_46(Idx)
 , p_source_46_meaning => l_array_source_46_meaning(Idx)
 , p_source_47 => g_array_event(l_event_id).array_value_num('source_47')
 , p_source_48 => g_array_event(l_event_id).array_value_num('source_48')
 , p_source_49 => g_array_event(l_event_id).array_value_char('source_49')
 , p_source_50 => l_array_source_50(Idx)
 , p_source_51 => l_array_source_51(Idx)
 , p_source_52 => l_array_source_52(Idx)
 , p_source_53 => l_array_source_53(Idx)
 , p_source_54 => l_array_source_54(Idx)
 , p_source_55 => l_array_source_55(Idx)
 , p_source_56 => l_array_source_56(Idx)
 , p_source_65 => l_array_source_65(Idx)
 , p_source_66 => l_array_source_66(Idx)
 );
If(l_balance_type_code = 'A') THEN
  l_actual_gain_loss_ref := l_gain_or_loss_ref;
END IF;

--


--
AcctLineType_80 (
 p_application_id  => p_application_id
 ,p_event_id     => l_event_id
 ,p_calculate_acctd_flag => l_calculate_acctd_flag
 ,p_calculate_g_l_flag => l_calculate_g_l_flag
 ,p_actual_flag => l_actual_flag
 ,p_balance_type_code => l_balance_type_code
 ,p_gain_or_loss_ref=> l_gain_or_loss_ref
 
 , p_source_1 => l_array_source_1(Idx)
 , p_source_11 => l_array_source_11(Idx)
 , p_source_15 => l_array_source_15(Idx)
 , p_source_15_meaning => l_array_source_15_meaning(Idx)
 , p_source_17 => g_array_event(l_event_id).array_value_char('source_17')
 , p_source_17_meaning => g_array_event(l_event_id).array_value_char('source_17_meaning')
 , p_source_18 => l_array_source_18(Idx)
 , p_source_18_meaning => l_array_source_18_meaning(Idx)
 , p_source_19 => l_array_source_19(Idx)
 , p_source_21 => l_array_source_21(Idx)
 , p_source_23 => l_array_source_23(Idx)
 , p_source_24 => g_array_event(l_event_id).array_value_num('source_24')
 , p_source_25 => l_array_source_25(Idx)
 , p_source_26 => l_array_source_26(Idx)
 , p_source_27 => l_array_source_27(Idx)
 , p_source_28 => l_array_source_28(Idx)
 , p_source_29 => l_array_source_29(Idx)
 , p_source_30 => l_array_source_30(Idx)
 , p_source_31 => l_array_source_31(Idx)
 , p_source_32 => l_array_source_32(Idx)
 , p_source_33 => g_array_event(l_event_id).array_value_char('source_33')
 , p_source_34 => l_array_source_34(Idx)
 , p_source_35 => l_array_source_35(Idx)
 , p_source_36 => l_array_source_36(Idx)
 , p_source_37 => l_array_source_37(Idx)
 , p_source_38 => l_array_source_38(Idx)
 , p_source_39 => g_array_event(l_event_id).array_value_date('source_39')
 , p_source_40 => g_array_event(l_event_id).array_value_num('source_40')
 , p_source_41 => g_array_event(l_event_id).array_value_char('source_41')
 , p_source_43 => l_array_source_43(Idx)
 , p_source_44 => l_array_source_44(Idx)
 , p_source_45 => l_array_source_45(Idx)
 , p_source_46 => l_array_source_46(Idx)
 , p_source_46_meaning => l_array_source_46_meaning(Idx)
 , p_source_47 => g_array_event(l_event_id).array_value_num('source_47')
 , p_source_48 => g_array_event(l_event_id).array_value_num('source_48')
 , p_source_49 => g_array_event(l_event_id).array_value_char('source_49')
 , p_source_50 => l_array_source_50(Idx)
 , p_source_51 => l_array_source_51(Idx)
 , p_source_52 => l_array_source_52(Idx)
 , p_source_53 => l_array_source_53(Idx)
 , p_source_54 => l_array_source_54(Idx)
 , p_source_55 => l_array_source_55(Idx)
 , p_source_56 => l_array_source_56(Idx)
 , p_source_81 => l_array_source_81(Idx)
 , p_source_82 => l_array_source_82(Idx)
 );
If(l_balance_type_code = 'A') THEN
  l_actual_gain_loss_ref := l_gain_or_loss_ref;
END IF;

--


--
AcctLineType_84 (
 p_application_id  => p_application_id
 ,p_event_id     => l_event_id
 ,p_calculate_acctd_flag => l_calculate_acctd_flag
 ,p_calculate_g_l_flag => l_calculate_g_l_flag
 ,p_actual_flag => l_actual_flag
 ,p_balance_type_code => l_balance_type_code
 ,p_gain_or_loss_ref=> l_gain_or_loss_ref
 
 , p_source_1 => l_array_source_1(Idx)
 , p_source_11 => l_array_source_11(Idx)
 , p_source_15 => l_array_source_15(Idx)
 , p_source_15_meaning => l_array_source_15_meaning(Idx)
 , p_source_17 => g_array_event(l_event_id).array_value_char('source_17')
 , p_source_17_meaning => g_array_event(l_event_id).array_value_char('source_17_meaning')
 , p_source_19 => l_array_source_19(Idx)
 , p_source_21 => l_array_source_21(Idx)
 , p_source_23 => l_array_source_23(Idx)
 , p_source_24 => g_array_event(l_event_id).array_value_num('source_24')
 , p_source_25 => l_array_source_25(Idx)
 , p_source_26 => l_array_source_26(Idx)
 , p_source_27 => l_array_source_27(Idx)
 , p_source_28 => l_array_source_28(Idx)
 , p_source_29 => l_array_source_29(Idx)
 , p_source_30 => l_array_source_30(Idx)
 , p_source_31 => l_array_source_31(Idx)
 , p_source_32 => l_array_source_32(Idx)
 , p_source_33 => g_array_event(l_event_id).array_value_char('source_33')
 , p_source_34 => l_array_source_34(Idx)
 , p_source_35 => l_array_source_35(Idx)
 , p_source_36 => l_array_source_36(Idx)
 , p_source_37 => l_array_source_37(Idx)
 , p_source_38 => l_array_source_38(Idx)
 , p_source_39 => g_array_event(l_event_id).array_value_date('source_39')
 , p_source_40 => g_array_event(l_event_id).array_value_num('source_40')
 , p_source_41 => g_array_event(l_event_id).array_value_char('source_41')
 , p_source_43 => l_array_source_43(Idx)
 , p_source_44 => l_array_source_44(Idx)
 , p_source_45 => l_array_source_45(Idx)
 , p_source_46 => l_array_source_46(Idx)
 , p_source_46_meaning => l_array_source_46_meaning(Idx)
 , p_source_47 => g_array_event(l_event_id).array_value_num('source_47')
 , p_source_48 => g_array_event(l_event_id).array_value_num('source_48')
 , p_source_49 => g_array_event(l_event_id).array_value_char('source_49')
 , p_source_50 => l_array_source_50(Idx)
 , p_source_51 => l_array_source_51(Idx)
 , p_source_52 => l_array_source_52(Idx)
 , p_source_53 => l_array_source_53(Idx)
 , p_source_54 => l_array_source_54(Idx)
 , p_source_55 => l_array_source_55(Idx)
 , p_source_56 => l_array_source_56(Idx)
 , p_source_65 => l_array_source_65(Idx)
 , p_source_66 => l_array_source_66(Idx)
 );
If(l_balance_type_code = 'A') THEN
  l_actual_gain_loss_ref := l_gain_or_loss_ref;
END IF;

--

      -- only execute it if calculate g/l flag is yes, and primary or secondary ledger
      -- or secondary ledger that has different currency with primary
      -- or alc that is calculated by sla
      IF (((l_calculate_g_l_flag = 'Y' AND XLA_AE_JOURNAL_ENTRY_PKG.g_cache_ledgers_info.ledger_category_code <> 'ALC') or
            (XLA_AE_JOURNAL_ENTRY_PKG.g_cache_ledgers_info.ledger_category_code in ('ALC', 'SECONDARY') AND XLA_AE_JOURNAL_ENTRY_PKG.g_cache_ledgers_info.calculate_amts_flag='Y'))

--      IF((l_calculate_g_l_flag='Y' or XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id <>
--                    XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.ledger_id)
          AND (l_actual_flag = 'A')) THEN
        XLA_AE_LINES_PKG.CreateGainOrLossLines(
          p_event_id         => xla_ae_journal_entry_pkg.g_cache_event.event_id
         ,p_application_id   => p_application_id
         ,p_amb_context_code => 'DEFAULT'
         ,p_entity_code      => xla_ae_journal_entry_pkg.g_cache_event.entity_code
         ,p_event_class_code => C_EVENT_CLASS_CODE
         ,p_event_type_code  => C_EVENT_TYPE_CODE
         
         ,p_gain_ccid        => -1
         ,p_loss_ccid        => -1

         ,p_actual_flag      => l_actual_flag
         ,p_enc_flag         => null
         ,p_actual_g_l_ref   => l_actual_gain_loss_ref
         ,p_enc_g_l_ref      => null
         );
      END IF;
   END IF;
END IF;

   ELSE
      --
      -- Bug 4872078 - Do nothing if the event is meant for transaction reversal
      --
      IF (C_LEVEL_STATEMENT >= g_log_level) THEN
         trace
            (p_msg      => 'Trancaction revesal option is Y'
            ,p_level    => C_LEVEL_STATEMENT
            ,p_module   => l_log_module);
      END IF;
   END IF;

END LOOP;
l_result := XLA_AE_LINES_PKG.InsertLines ;
end loop;
close line_cur;


--
-- insert headers into xla_ae_headers_gt table
--
l_result := XLA_AE_HEADER_PKG.InsertHeaders ;

-- insert into errors table here.

END LOOP;

--
-- 4865292
--
-- Compare g_hdr_extract_count with event count in
-- CreateHeadersAndLines.
--
g_hdr_extract_count := g_hdr_extract_count + header_cur%ROWCOUNT;

IF (C_LEVEL_STATEMENT >= g_log_level) THEN
   trace (p_msg     => '# rows extracted from header extract objects '
                    || ' (running total): '
                    || g_hdr_extract_count
         ,p_level   => C_LEVEL_STATEMENT
         ,p_module  => l_log_module);
END IF;

CLOSE header_cur;
--

--
IF (C_LEVEL_PROCEDURE >= g_log_level) THEN
   trace
      (p_msg      => 'END of EventClass_108'
      ,p_level    => C_LEVEL_PROCEDURE
      ,p_module   => l_log_module);
END IF;
--
RETURN l_result;
EXCEPTION
WHEN xla_exceptions_pkg.application_exception THEN
   
IF header_cur%ISOPEN THEN CLOSE header_cur; END IF;

   
IF line_cur%ISOPEN   THEN CLOSE line_cur;   END IF;

   RAISE;

WHEN NO_DATA_FOUND THEN

IF header_cur%ISOPEN THEN CLOSE header_cur; END IF;
IF line_cur%ISOPEN   THEN CLOSE line_cur;   END IF;

FOR header_record IN header_cur
LOOP
    l_array_header_events(header_record.event_id) := header_record.event_id;
END LOOP;

l_first_event_id := l_array_header_events(l_array_header_events.FIRST);
l_last_event_id := l_array_header_events(l_array_header_events.LAST);

fnd_file.put_line(fnd_file.LOG, '                    ');
fnd_file.put_line(fnd_file.LOG, '***************************************************************************');
fnd_file.put_line(fnd_file.LOG, 'EVENT CLASS CODE = ' || C_EVENT_CLASS_CODE );
fnd_file.put_line(fnd_file.LOG, 'The following events are present in the line extract but MISSING in the header extract: ');

FOR line_record IN line_cur(l_first_event_id, l_last_event_id)
LOOP
	IF (NOT l_array_header_events.EXISTS(line_record.event_id))  AND (NOT l_array_duplicate_checker.EXISTS(line_record.event_id)) THEN
	fnd_file.put_line(fnd_file.log, 'Event_id = ' || line_record.event_id);
        l_array_duplicate_checker(line_record.event_id) := line_record.event_id;
	END IF;
END LOOP;

fnd_file.put_line(fnd_file.LOG, '***************************************************************************');
fnd_file.put_line(fnd_file.LOG, '                    ');


xla_exceptions_pkg.raise_message
      (p_location => 'XLA_00200_AAD_S_000010_BC_PKG.EventClass_108');


WHEN OTHERS THEN
   xla_exceptions_pkg.raise_message
      (p_location => 'XLA_00200_AAD_S_000010_BC_PKG.EventClass_108');
END EventClass_108;
--

---------------------------------------
--
-- PRIVATE PROCEDURE
--         insert_sources_109
--
----------------------------------------
--
PROCEDURE insert_sources_109(
                                p_target_ledger_id       IN NUMBER
                              , p_language               IN VARCHAR2
                              , p_sla_ledger_id          IN NUMBER
                              , p_pad_start_date         IN DATE
                              , p_pad_end_date           IN DATE
                         )
IS

C_EVENT_TYPE_CODE    CONSTANT  VARCHAR2(30)  := 'PREPAYMENT_BURDEN_ALL';
C_EVENT_CLASS_CODE   CONSTANT  VARCHAR2(30) := 'PREPAYMENT_BURDEN';
p_apps_owner                   VARCHAR2(30);
l_log_module                   VARCHAR2(240);
BEGIN
IF g_log_enabled THEN
      l_log_module := C_DEFAULT_MODULE||'.insert_sources_109';
END IF;
IF (C_LEVEL_PROCEDURE >= g_log_level) THEN

      trace
         (p_msg      => 'BEGIN of insert_sources_109'
         ,p_level    => C_LEVEL_PROCEDURE
         ,p_module   => l_log_module);

END IF;

-- select APPS owner
SELECT oracle_username
  INTO p_apps_owner
  FROM fnd_oracle_userid
 WHERE read_only_flag = 'U'
;

IF (C_LEVEL_STATEMENT >= g_log_level) THEN
      trace
         (p_msg      => 'p_target_ledger_id = '||p_target_ledger_id||
                        ' - p_language = '||p_language||
                        ' - p_sla_ledger_id  = '||p_sla_ledger_id ||
                        ' - p_pad_start_date = '||TO_CHAR(p_pad_start_date)||
                        ' - p_pad_end_date = '||TO_CHAR(p_pad_end_date)||
                        ' - p_apps_owner = '||TO_CHAR(p_apps_owner)
         ,p_level    => C_LEVEL_STATEMENT
         ,p_module   => l_log_module);
END IF;

 


--
INSERT INTO xla_diag_sources  --line2
(
        event_id
      , ledger_id
      , sla_ledger_id
      , description_language
      , object_name
      , object_type_code
      , line_number
      , source_application_id
      , source_type_code
      , source_code
      , source_value
      , source_meaning
      , created_by
      , creation_date
      , last_update_date
      , last_updated_by
      , last_update_login
      , program_update_date
      , program_application_id
      , program_id
      , request_id
)
SELECT  event_id
      , p_target_ledger_id
      , p_sla_ledger_id
      , p_language
      , object_name
      , object_type_code
      , line_number
      , source_application_id
      , source_type_code
      , source_code
      , SUBSTR(source_value,1,1996)
      , SUBSTR(source_meaning ,1,200)
      , xla_environment_pkg.g_Usr_Id
      , TRUNC(SYSDATE)
      , TRUNC(SYSDATE)
      , xla_environment_pkg.g_Usr_Id
      , xla_environment_pkg.g_Login_Id
      , TRUNC(SYSDATE)
      , xla_environment_pkg.g_Prog_Appl_Id
      , xla_environment_pkg.g_Prog_Id
      , xla_environment_pkg.g_Req_Id
  FROM (
       SELECT xet.event_id                  event_id
            , l1.line_number                 line_number
            , CASE r
               WHEN 1 THEN 'PA_XLA_BC_PKT_AP_DETAIL_V' 
                WHEN 2 THEN 'PA_XLA_PROJECT_REF_V' 
                WHEN 3 THEN 'PA_XLA_TASK_REF_V' 
                WHEN 4 THEN 'PA_XLA_EXP_ORG_REF_V' 
                WHEN 5 THEN 'PA_XLA_BC_PKT_AP_DETAIL_V' 
                WHEN 6 THEN 'PA_XLA_BC_PKT_AP_DETAIL_V' 
                WHEN 7 THEN 'PA_XLA_BC_PKT_AP_DETAIL_V' 
                WHEN 8 THEN 'PA_XLA_BC_PKT_AP_DETAIL_V' 
                WHEN 9 THEN 'PA_XLA_BC_PKT_AP_DETAIL_V' 
                WHEN 10 THEN 'PA_XLA_BC_PKT_AP_DETAIL_V' 
                WHEN 11 THEN 'PA_XLA_BC_PKT_AP_DETAIL_V' 
                WHEN 12 THEN 'PA_XLA_BC_PKT_AP_DETAIL_V' 
                WHEN 13 THEN 'PA_XLA_BC_PKT_AP_DETAIL_V' 
                WHEN 14 THEN 'PA_XLA_BC_PKT_AP_DETAIL_V' 
                WHEN 15 THEN 'PA_XLA_PROJECT_REF_V' 
                WHEN 16 THEN 'PA_XLA_BC_PKT_AP_DETAIL_V' 
                WHEN 17 THEN 'PA_XLA_BC_PKT_AP_DETAIL_V' 
                WHEN 18 THEN 'PA_XLA_BC_PKT_AP_DETAIL_V' 
                WHEN 19 THEN 'PA_XLA_BC_PKT_AP_DETAIL_V' 
                WHEN 20 THEN 'PA_XLA_BC_PKT_AP_DETAIL_V' 
                WHEN 21 THEN 'PA_XLA_BC_PKT_AP_DETAIL_V' 
                WHEN 22 THEN 'PA_XLA_BC_PKT_AP_DETAIL_V' 
                WHEN 23 THEN 'PA_XLA_BC_PKT_AP_DETAIL_V' 
                WHEN 24 THEN 'PA_XLA_BC_PKT_AP_DETAIL_V' 
                WHEN 25 THEN 'PA_XLA_BC_PKT_AP_DETAIL_V' 
                WHEN 26 THEN 'PA_XLA_BC_PKT_AP_DETAIL_V' 
                WHEN 27 THEN 'PA_XLA_BC_PKT_AP_DETAIL_V' 
                WHEN 28 THEN 'PA_XLA_BC_PKT_AP_DETAIL_V' 
                WHEN 29 THEN 'PA_XLA_BC_PKT_AP_DETAIL_V' 
                WHEN 30 THEN 'PA_XLA_BC_PKT_AP_DETAIL_V' 
                WHEN 31 THEN 'PA_XLA_BC_PKT_AP_DETAIL_V' 
                WHEN 32 THEN 'PA_XLA_BC_PKT_AP_DETAIL_V' 
                WHEN 33 THEN 'PA_XLA_BC_PKT_AP_DETAIL_V' 
                WHEN 34 THEN 'PA_XLA_BC_PKT_AP_DETAIL_V' 
                WHEN 35 THEN 'PA_XLA_BC_PKT_AP_DETAIL_V' 
                WHEN 36 THEN 'PA_XLA_BC_PKT_AP_DETAIL_V' 
                WHEN 37 THEN 'PA_XLA_BC_PKT_AP_DETAIL_V' 
                WHEN 38 THEN 'PA_XLA_BC_PKT_AP_DETAIL_V' 
                WHEN 39 THEN 'PA_XLA_BC_PKT_AP_DETAIL_V' 
                WHEN 40 THEN 'PA_XLA_BC_PKT_AP_DETAIL_V' 
                WHEN 41 THEN 'PA_XLA_BC_PKT_AP_DETAIL_V' 
                WHEN 42 THEN 'PA_XLA_BC_PKT_AP_DETAIL_V' 
                WHEN 43 THEN 'PA_XLA_BC_PKT_AP_DETAIL_V' 
                WHEN 44 THEN 'PA_XLA_BC_PKT_AP_DETAIL_V' 
                WHEN 45 THEN 'PA_XLA_BC_PKT_AP_DETAIL_V' 
                
               ELSE null
              END                           object_name
            , CASE r
                WHEN 1 THEN 'LINE' 
                WHEN 2 THEN 'LINE' 
                WHEN 3 THEN 'LINE' 
                WHEN 4 THEN 'LINE' 
                WHEN 5 THEN 'LINE' 
                WHEN 6 THEN 'LINE' 
                WHEN 7 THEN 'LINE' 
                WHEN 8 THEN 'LINE' 
                WHEN 9 THEN 'LINE' 
                WHEN 10 THEN 'LINE' 
                WHEN 11 THEN 'LINE' 
                WHEN 12 THEN 'LINE' 
                WHEN 13 THEN 'LINE' 
                WHEN 14 THEN 'LINE' 
                WHEN 15 THEN 'LINE' 
                WHEN 16 THEN 'LINE' 
                WHEN 17 THEN 'LINE' 
                WHEN 18 THEN 'LINE' 
                WHEN 19 THEN 'LINE' 
                WHEN 20 THEN 'LINE' 
                WHEN 21 THEN 'LINE' 
                WHEN 22 THEN 'LINE' 
                WHEN 23 THEN 'LINE' 
                WHEN 24 THEN 'LINE' 
                WHEN 25 THEN 'LINE' 
                WHEN 26 THEN 'LINE' 
                WHEN 27 THEN 'LINE' 
                WHEN 28 THEN 'LINE' 
                WHEN 29 THEN 'LINE' 
                WHEN 30 THEN 'LINE' 
                WHEN 31 THEN 'LINE' 
                WHEN 32 THEN 'LINE' 
                WHEN 33 THEN 'LINE' 
                WHEN 34 THEN 'LINE' 
                WHEN 35 THEN 'LINE' 
                WHEN 36 THEN 'LINE' 
                WHEN 37 THEN 'LINE' 
                WHEN 38 THEN 'LINE' 
                WHEN 39 THEN 'LINE' 
                WHEN 40 THEN 'LINE' 
                WHEN 41 THEN 'LINE' 
                WHEN 42 THEN 'LINE' 
                WHEN 43 THEN 'LINE' 
                WHEN 44 THEN 'LINE' 
                WHEN 45 THEN 'LINE' 
                
                ELSE null
              END                           object_type_code
            , CASE r
                WHEN 1 THEN '200' 
                WHEN 2 THEN '275' 
                WHEN 3 THEN '275' 
                WHEN 4 THEN '275' 
                WHEN 5 THEN '200' 
                WHEN 6 THEN '200' 
                WHEN 7 THEN '200' 
                WHEN 8 THEN '200' 
                WHEN 9 THEN '200' 
                WHEN 10 THEN '200' 
                WHEN 11 THEN '200' 
                WHEN 12 THEN '200' 
                WHEN 13 THEN '200' 
                WHEN 14 THEN '200' 
                WHEN 15 THEN '275' 
                WHEN 16 THEN '200' 
                WHEN 17 THEN '200' 
                WHEN 18 THEN '200' 
                WHEN 19 THEN '200' 
                WHEN 20 THEN '200' 
                WHEN 21 THEN '200' 
                WHEN 22 THEN '200' 
                WHEN 23 THEN '200' 
                WHEN 24 THEN '200' 
                WHEN 25 THEN '200' 
                WHEN 26 THEN '200' 
                WHEN 27 THEN '200' 
                WHEN 28 THEN '200' 
                WHEN 29 THEN '200' 
                WHEN 30 THEN '200' 
                WHEN 31 THEN '200' 
                WHEN 32 THEN '200' 
                WHEN 33 THEN '200' 
                WHEN 34 THEN '200' 
                WHEN 35 THEN '200' 
                WHEN 36 THEN '200' 
                WHEN 37 THEN '200' 
                WHEN 38 THEN '200' 
                WHEN 39 THEN '200' 
                WHEN 40 THEN '200' 
                WHEN 41 THEN '200' 
                WHEN 42 THEN '200' 
                WHEN 43 THEN '200' 
                WHEN 44 THEN '200' 
                WHEN 45 THEN '200' 
                
                ELSE null
              END                           source_application_id
            , 'S'             source_type_code
            , CASE r
                WHEN 1 THEN 'DOCUMENT_DISTRIBUTION_TYPE' 
                WHEN 2 THEN 'PROJECT_NAME' 
                WHEN 3 THEN 'TASK_NUMBER' 
                WHEN 4 THEN 'EXPENDITURE_ORGANIZATION_ID' 
                WHEN 5 THEN 'AID_DIST_CCID' 
                WHEN 6 THEN 'BUDGET_CCID' 
                WHEN 7 THEN 'DISTRIBUTION_LINK_TYPE' 
                WHEN 8 THEN 'AID_INVOICE_DIST_ID' 
                WHEN 9 THEN 'AI_INVOICE_CURRENCY_CODE' 
                WHEN 10 THEN 'INV_EXCHANGE_DATE' 
                WHEN 11 THEN 'INV_EXCHANGE_RATE' 
                WHEN 12 THEN 'INV_EXCHANGE_RATE_TYPE' 
                WHEN 13 THEN 'AID_AMOUNT' 
                WHEN 14 THEN 'DOCUMENT_TYPE' 
                WHEN 15 THEN 'PROJ_BURDEN_DISPLAY_METHOD' 
                WHEN 16 THEN 'ACCT_REVERSAL_INDICATOR' 
                WHEN 17 THEN 'ALLOC_TO_APPLN_ID' 
                WHEN 18 THEN 'ALLOC_TO_DIST_TYPE' 
                WHEN 19 THEN 'ALLOC_TO_ENTITY_CODE' 
                WHEN 20 THEN 'ALLOC_TO_FIRST_DIST_ID' 
                WHEN 21 THEN 'ALLOC_TO_FIRST_SYS_TRANS_ID' 
                WHEN 22 THEN 'AP_APPLICATION_ID' 
                WHEN 23 THEN 'AP_DISTRIBUTION_TYPE' 
                WHEN 24 THEN 'AP_ENTITY_CODE' 
                WHEN 25 THEN 'AP_FIRST_DIST_ID' 
                WHEN 26 THEN 'AP_FIRST_SYS_TRANS_ID' 
                WHEN 27 THEN 'AID_EXPENDITURE_TYPE' 
                WHEN 28 THEN 'ENC_UPG_CR_ACCT_CLASS' 
                WHEN 29 THEN 'ENC_UPG_CR_ACCOUNT' 
                WHEN 30 THEN 'AID_BASE_AMT_NO_ROUND' 
                WHEN 31 THEN 'ENC_UPG_DR_ACCT_CLASS' 
                WHEN 32 THEN 'ENC_UPG_DR_ACCOUNT' 
                WHEN 33 THEN 'USE_ENC_UPG_ATTRIB_FLAG' 
                WHEN 34 THEN 'ACCT_REVERSAL_FIRST_DIST_ID' 
                WHEN 35 THEN 'AP_SECOND_DIST_ID' 
                WHEN 36 THEN 'ACCT_REV_DISTRIBUTION_TYPE' 
                WHEN 37 THEN 'ENC_UPG_CR_ENC_TYPE_ID' 
                WHEN 38 THEN 'ENC_UPG_DR_ENC_TYPE_ID' 
                WHEN 39 THEN 'BURDEN_COST_FLAG' 
                WHEN 40 THEN 'PA_APPLICATION_ID' 
                WHEN 41 THEN 'PA_DISTRIBUTION_TYPE' 
                WHEN 42 THEN 'PA_ENTITY_CODE' 
                WHEN 43 THEN 'PA_FIRST_DIST_ID' 
                WHEN 44 THEN 'PA_FIRST_SYS_TRANS_ID' 
                WHEN 45 THEN 'PA_SECOND_DIST_ID' 
                
                ELSE null
              END                           source_code
            , CASE r
                WHEN 1 THEN TO_CHAR(l1.DOCUMENT_DISTRIBUTION_TYPE)
                WHEN 2 THEN TO_CHAR(l3.PROJECT_NAME)
                WHEN 3 THEN TO_CHAR(l4.TASK_NUMBER)
                WHEN 4 THEN TO_CHAR(l2.EXPENDITURE_ORGANIZATION_ID)
                WHEN 5 THEN TO_CHAR(l1.AID_DIST_CCID)
                WHEN 6 THEN TO_CHAR(l1.BUDGET_CCID)
                WHEN 7 THEN TO_CHAR(l1.DISTRIBUTION_LINK_TYPE)
                WHEN 8 THEN TO_CHAR(l1.AID_INVOICE_DIST_ID)
                WHEN 9 THEN TO_CHAR(l1.AI_INVOICE_CURRENCY_CODE)
                WHEN 10 THEN TO_CHAR(l1.INV_EXCHANGE_DATE)
                WHEN 11 THEN TO_CHAR(l1.INV_EXCHANGE_RATE)
                WHEN 12 THEN TO_CHAR(l1.INV_EXCHANGE_RATE_TYPE)
                WHEN 13 THEN TO_CHAR(l1.AID_AMOUNT)
                WHEN 14 THEN TO_CHAR(l1.DOCUMENT_TYPE)
                WHEN 15 THEN TO_CHAR(l3.PROJ_BURDEN_DISPLAY_METHOD)
                WHEN 16 THEN TO_CHAR(l1.ACCT_REVERSAL_INDICATOR)
                WHEN 17 THEN TO_CHAR(l1.ALLOC_TO_APPLN_ID)
                WHEN 18 THEN TO_CHAR(l1.ALLOC_TO_DIST_TYPE)
                WHEN 19 THEN TO_CHAR(l1.ALLOC_TO_ENTITY_CODE)
                WHEN 20 THEN TO_CHAR(l1.ALLOC_TO_FIRST_DIST_ID)
                WHEN 21 THEN TO_CHAR(l1.ALLOC_TO_FIRST_SYS_TRANS_ID)
                WHEN 22 THEN TO_CHAR(l1.AP_APPLICATION_ID)
                WHEN 23 THEN TO_CHAR(l1.AP_DISTRIBUTION_TYPE)
                WHEN 24 THEN TO_CHAR(l1.AP_ENTITY_CODE)
                WHEN 25 THEN TO_CHAR(l1.AP_FIRST_DIST_ID)
                WHEN 26 THEN TO_CHAR(l1.AP_FIRST_SYS_TRANS_ID)
                WHEN 27 THEN TO_CHAR(l1.AID_EXPENDITURE_TYPE)
                WHEN 28 THEN TO_CHAR(l1.ENC_UPG_CR_ACCT_CLASS)
                WHEN 29 THEN TO_CHAR(l1.ENC_UPG_CR_ACCOUNT)
                WHEN 30 THEN TO_CHAR(l1.AID_BASE_AMT_NO_ROUND)
                WHEN 31 THEN TO_CHAR(l1.ENC_UPG_DR_ACCT_CLASS)
                WHEN 32 THEN TO_CHAR(l1.ENC_UPG_DR_ACCOUNT)
                WHEN 33 THEN TO_CHAR(l1.USE_ENC_UPG_ATTRIB_FLAG)
                WHEN 34 THEN TO_CHAR(l1.ACCT_REVERSAL_FIRST_DIST_ID)
                WHEN 35 THEN TO_CHAR(l1.AP_SECOND_DIST_ID)
                WHEN 36 THEN TO_CHAR(l1.ACCT_REV_DISTRIBUTION_TYPE)
                WHEN 37 THEN TO_CHAR(l1.ENC_UPG_CR_ENC_TYPE_ID)
                WHEN 38 THEN TO_CHAR(l1.ENC_UPG_DR_ENC_TYPE_ID)
                WHEN 39 THEN TO_CHAR(l1.BURDEN_COST_FLAG)
                WHEN 40 THEN TO_CHAR(l1.PA_APPLICATION_ID)
                WHEN 41 THEN TO_CHAR(l1.PA_DISTRIBUTION_TYPE)
                WHEN 42 THEN TO_CHAR(l1.PA_ENTITY_CODE)
                WHEN 43 THEN TO_CHAR(l1.PA_FIRST_DIST_ID)
                WHEN 44 THEN TO_CHAR(l1.PA_FIRST_SYS_TRANS_ID)
                WHEN 45 THEN TO_CHAR(l1.PA_SECOND_DIST_ID)
                
                ELSE null
              END                           source_value
            , CASE r
                WHEN 4 THEN XLA_00200_AAD_S_000010_BC_PKG.GetMeaning(
                          1011384
                         ,TO_CHAR(l2.EXPENDITURE_ORGANIZATION_ID)
                         ,'EXPENDITURE_ORGANIZATION_ID'
                         ,'S'
                         ,275)
                WHEN 39 THEN fvl108.meaning
                
                ELSE null
              END               source_meaning
         FROM  xla_events_gt     xet  
        , PA_XLA_BC_PKT_AP_DETAIL_V  l1
        , PA_XLA_EXP_ORG_REF_V  l2
        , PA_XLA_PROJECT_REF_V  l3
        , PA_XLA_TASK_REF_V  l4
  , fnd_lookup_values    fvl108
            , (select rownum r from all_objects where rownum <= 45 and owner = p_apps_owner)
        WHERE xet.event_date between p_pad_start_date AND p_pad_end_date
          AND xet.event_class_code = C_EVENT_CLASS_CODE
            AND l1.event_id          = xet.event_id
 AND l2.expenditure_organization_id=l1.aid_expenditure_org_id AND l3.project_id=l1.aid_project_id AND l4.task_id=l1.aid_task_id   AND fvl108.lookup_type(+)         = 'BC_PKT_BURDEN_COST_FLAG'
  AND fvl108.lookup_code(+)         = l1.BURDEN_COST_FLAG
  AND fvl108.view_application_id(+) = 275
  AND fvl108.language(+)            = USERENV('LANG')
  
)
;
--
IF (C_LEVEL_STATEMENT >= g_log_level) THEN

      trace
         (p_msg      => 'number of line sources inserted = '||SQL%ROWCOUNT
         ,p_level    => C_LEVEL_STATEMENT
         ,p_module   => l_log_module);

END IF;


IF (C_LEVEL_PROCEDURE >= g_log_level) THEN
      trace
         (p_msg      => 'END of insert_sources_109'
         ,p_level    => C_LEVEL_PROCEDURE
         ,p_module   => l_log_module);
END IF;
EXCEPTION
  WHEN xla_exceptions_pkg.application_exception THEN
      IF (C_LEVEL_EXCEPTION >= g_log_level) THEN
            trace
               (p_msg      => 'ERROR: XLA_CMP_COMPILER_ERROR = '||sqlerrm
               ,p_level    => C_LEVEL_EXCEPTION
               ,p_module   => l_log_module);
      END IF;
      RAISE;
  WHEN OTHERS THEN
      IF (C_LEVEL_EXCEPTION >= g_log_level) THEN
            trace
               (p_msg      => 'ERROR: XLA_CMP_COMPILER_ERROR = '||sqlerrm
               ,p_level    => C_LEVEL_EXCEPTION
               ,p_module   => l_log_module);
       END IF;
       xla_exceptions_pkg.raise_message
           (p_location => 'XLA_00200_AAD_S_000010_BC_PKG.insert_sources_109');
END insert_sources_109;
--

---------------------------------------
--
-- PRIVATE FUNCTION
--         EventClass_109
--
----------------------------------------
--
FUNCTION EventClass_109
       (p_application_id         IN NUMBER
       ,p_base_ledger_id         IN NUMBER
       ,p_target_ledger_id       IN NUMBER
       ,p_language               IN VARCHAR2
       ,p_currency_code          IN VARCHAR2
       ,p_sla_ledger_id          IN NUMBER
       ,p_pad_start_date         IN DATE
       ,p_pad_end_date           IN DATE
       ,p_primary_ledger_id      IN NUMBER)
RETURN BOOLEAN IS
--
C_EVENT_TYPE_CODE    CONSTANT  VARCHAR2(30)  := 'PREPAYMENT_BURDEN_ALL';
C_EVENT_CLASS_CODE    CONSTANT  VARCHAR2(30) := 'PREPAYMENT_BURDEN';

l_calculate_acctd_flag   VARCHAR2(1) :='N';
l_calculate_g_l_flag     VARCHAR2(1) :='N';
--
l_array_legal_entity_id                XLA_AE_JOURNAL_ENTRY_PKG.t_array_Num;
l_array_entity_id                      XLA_AE_JOURNAL_ENTRY_PKG.t_array_Num;
l_array_entity_code                    XLA_AE_JOURNAL_ENTRY_PKG.t_array_V30L;
l_array_transaction_num                XLA_AE_JOURNAL_ENTRY_PKG.t_array_V240L;
l_array_event_id                       XLA_AE_JOURNAL_ENTRY_PKG.t_array_Num;
l_array_class_code                     XLA_AE_JOURNAL_ENTRY_PKG.t_array_V30L;
l_array_event_type                     XLA_AE_JOURNAL_ENTRY_PKG.t_array_V30L;
l_array_event_number                   XLA_AE_JOURNAL_ENTRY_PKG.t_array_Num;
l_array_event_date                     XLA_AE_JOURNAL_ENTRY_PKG.t_array_Date;
l_array_transaction_date               XLA_AE_JOURNAL_ENTRY_PKG.t_array_Date;
l_array_reference_num_1                XLA_AE_JOURNAL_ENTRY_PKG.t_array_Num;
l_array_reference_num_2                XLA_AE_JOURNAL_ENTRY_PKG.t_array_Num;
l_array_reference_num_3                XLA_AE_JOURNAL_ENTRY_PKG.t_array_Num;
l_array_reference_num_4                XLA_AE_JOURNAL_ENTRY_PKG.t_array_Num;
l_array_reference_char_1               XLA_AE_JOURNAL_ENTRY_PKG.t_array_V240L;
l_array_reference_char_2               XLA_AE_JOURNAL_ENTRY_PKG.t_array_V240L;
l_array_reference_char_3               XLA_AE_JOURNAL_ENTRY_PKG.t_array_V240L;
l_array_reference_char_4               XLA_AE_JOURNAL_ENTRY_PKG.t_array_V240L;
l_array_reference_date_1               XLA_AE_JOURNAL_ENTRY_PKG.t_array_Date;
l_array_reference_date_2               XLA_AE_JOURNAL_ENTRY_PKG.t_array_Date;
l_array_reference_date_3               XLA_AE_JOURNAL_ENTRY_PKG.t_array_Date;
l_array_reference_date_4               XLA_AE_JOURNAL_ENTRY_PKG.t_array_Date;
l_array_event_created_by               XLA_AE_JOURNAL_ENTRY_PKG.t_array_V100L;
l_array_budgetary_control_flag         XLA_AE_JOURNAL_ENTRY_PKG.t_array_V30L;
l_array_header_events                  XLA_AE_JOURNAL_ENTRY_PKG.t_array_Num;  --added
l_array_duplicate_checker              XLA_AE_JOURNAL_ENTRY_PKG.t_array_Num;  --added

l_event_id                             NUMBER;
l_previous_event_id                    NUMBER;
l_first_event_id                       NUMBER;
l_last_event_id                        NUMBER;

l_rec_acct_attrs                       XLA_AE_HEADER_PKG.t_rec_acct_attrs;
l_rec_rev_acct_attrs                   XLA_AE_LINES_PKG.t_rec_acct_attrs;
--
--
l_result                    BOOLEAN := TRUE;
l_rows                      NUMBER  := 1000;
l_event_type_name           VARCHAR2(80) := 'All';
l_event_class_name          VARCHAR2(80) := 'Burden for Prepayments';
l_description               VARCHAR2(4000);
l_transaction_reversal      NUMBER;
l_ae_header_id              NUMBER;
l_array_extract_line_num    xla_ae_journal_entry_pkg.t_array_Num;
l_log_module                VARCHAR2(240);
--
l_acct_reversal_source      VARCHAR2(30);
l_trx_reversal_source       VARCHAR2(30);

l_continue_with_lines       BOOLEAN := TRUE;
--
l_acc_rev_gl_date_source    DATE;                      -- 4262811
--
type t_array_event_id is table of number index by binary_integer;

l_rec_array_event                    t_rec_array_event;
l_null_rec_array_event               t_rec_array_event;
l_array_ae_header_id                 xla_number_array_type;
l_actual_flag                        VARCHAR2(1) := NULL;
l_actual_gain_loss_ref               VARCHAR2(30) := '#####';
l_balance_type_code                  VARCHAR2(1) :=NULL;
l_gain_or_loss_ref                   VARCHAR2(30) :=NULL;

--
TYPE t_array_lookup_meaning IS TABLE OF fnd_lookup_values.meaning%TYPE INDEX BY BINARY_INTEGER;
--


TYPE t_array_source_2 IS TABLE OF PA_XLA_BC_PKT_AP_DETAIL_V.DOCUMENT_DISTRIBUTION_TYPE%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_3 IS TABLE OF PA_XLA_PROJECT_REF_V.PROJECT_NAME%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_4 IS TABLE OF PA_XLA_TASK_REF_V.TASK_NUMBER%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_5 IS TABLE OF PA_XLA_EXP_ORG_REF_V.EXPENDITURE_ORGANIZATION_ID%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_11 IS TABLE OF PA_XLA_BC_PKT_AP_DETAIL_V.AID_DIST_CCID%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_14 IS TABLE OF PA_XLA_BC_PKT_AP_DETAIL_V.BUDGET_CCID%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_21 IS TABLE OF PA_XLA_BC_PKT_AP_DETAIL_V.DISTRIBUTION_LINK_TYPE%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_30 IS TABLE OF PA_XLA_BC_PKT_AP_DETAIL_V.AID_INVOICE_DIST_ID%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_33 IS TABLE OF PA_XLA_BC_PKT_AP_DETAIL_V.AI_INVOICE_CURRENCY_CODE%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_39 IS TABLE OF PA_XLA_BC_PKT_AP_DETAIL_V.INV_EXCHANGE_DATE%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_40 IS TABLE OF PA_XLA_BC_PKT_AP_DETAIL_V.INV_EXCHANGE_RATE%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_41 IS TABLE OF PA_XLA_BC_PKT_AP_DETAIL_V.INV_EXCHANGE_RATE_TYPE%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_57 IS TABLE OF PA_XLA_BC_PKT_AP_DETAIL_V.AID_AMOUNT%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_83 IS TABLE OF PA_XLA_BC_PKT_AP_DETAIL_V.DOCUMENT_TYPE%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_84 IS TABLE OF PA_XLA_PROJECT_REF_V.PROJ_BURDEN_DISPLAY_METHOD%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_85 IS TABLE OF PA_XLA_BC_PKT_AP_DETAIL_V.ACCT_REVERSAL_INDICATOR%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_86 IS TABLE OF PA_XLA_BC_PKT_AP_DETAIL_V.ALLOC_TO_APPLN_ID%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_87 IS TABLE OF PA_XLA_BC_PKT_AP_DETAIL_V.ALLOC_TO_DIST_TYPE%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_88 IS TABLE OF PA_XLA_BC_PKT_AP_DETAIL_V.ALLOC_TO_ENTITY_CODE%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_89 IS TABLE OF PA_XLA_BC_PKT_AP_DETAIL_V.ALLOC_TO_FIRST_DIST_ID%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_90 IS TABLE OF PA_XLA_BC_PKT_AP_DETAIL_V.ALLOC_TO_FIRST_SYS_TRANS_ID%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_91 IS TABLE OF PA_XLA_BC_PKT_AP_DETAIL_V.AP_APPLICATION_ID%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_92 IS TABLE OF PA_XLA_BC_PKT_AP_DETAIL_V.AP_DISTRIBUTION_TYPE%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_93 IS TABLE OF PA_XLA_BC_PKT_AP_DETAIL_V.AP_ENTITY_CODE%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_94 IS TABLE OF PA_XLA_BC_PKT_AP_DETAIL_V.AP_FIRST_DIST_ID%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_95 IS TABLE OF PA_XLA_BC_PKT_AP_DETAIL_V.AP_FIRST_SYS_TRANS_ID%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_96 IS TABLE OF PA_XLA_BC_PKT_AP_DETAIL_V.AID_EXPENDITURE_TYPE%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_97 IS TABLE OF PA_XLA_BC_PKT_AP_DETAIL_V.ENC_UPG_CR_ACCT_CLASS%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_98 IS TABLE OF PA_XLA_BC_PKT_AP_DETAIL_V.ENC_UPG_CR_ACCOUNT%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_99 IS TABLE OF PA_XLA_BC_PKT_AP_DETAIL_V.AID_BASE_AMT_NO_ROUND%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_100 IS TABLE OF PA_XLA_BC_PKT_AP_DETAIL_V.ENC_UPG_DR_ACCT_CLASS%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_101 IS TABLE OF PA_XLA_BC_PKT_AP_DETAIL_V.ENC_UPG_DR_ACCOUNT%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_102 IS TABLE OF PA_XLA_BC_PKT_AP_DETAIL_V.USE_ENC_UPG_ATTRIB_FLAG%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_103 IS TABLE OF PA_XLA_BC_PKT_AP_DETAIL_V.ACCT_REVERSAL_FIRST_DIST_ID%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_104 IS TABLE OF PA_XLA_BC_PKT_AP_DETAIL_V.AP_SECOND_DIST_ID%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_105 IS TABLE OF PA_XLA_BC_PKT_AP_DETAIL_V.ACCT_REV_DISTRIBUTION_TYPE%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_106 IS TABLE OF PA_XLA_BC_PKT_AP_DETAIL_V.ENC_UPG_CR_ENC_TYPE_ID%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_107 IS TABLE OF PA_XLA_BC_PKT_AP_DETAIL_V.ENC_UPG_DR_ENC_TYPE_ID%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_108 IS TABLE OF PA_XLA_BC_PKT_AP_DETAIL_V.BURDEN_COST_FLAG%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_109 IS TABLE OF PA_XLA_BC_PKT_AP_DETAIL_V.PA_APPLICATION_ID%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_110 IS TABLE OF PA_XLA_BC_PKT_AP_DETAIL_V.PA_DISTRIBUTION_TYPE%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_111 IS TABLE OF PA_XLA_BC_PKT_AP_DETAIL_V.PA_ENTITY_CODE%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_112 IS TABLE OF PA_XLA_BC_PKT_AP_DETAIL_V.PA_FIRST_DIST_ID%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_113 IS TABLE OF PA_XLA_BC_PKT_AP_DETAIL_V.PA_FIRST_SYS_TRANS_ID%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_114 IS TABLE OF PA_XLA_BC_PKT_AP_DETAIL_V.PA_SECOND_DIST_ID%TYPE INDEX BY BINARY_INTEGER;


l_array_source_2      t_array_source_2;
l_array_source_3      t_array_source_3;
l_array_source_4      t_array_source_4;
l_array_source_5      t_array_source_5;
l_array_source_11      t_array_source_11;
l_array_source_14      t_array_source_14;
l_array_source_21      t_array_source_21;
l_array_source_30      t_array_source_30;
l_array_source_33      t_array_source_33;
l_array_source_39      t_array_source_39;
l_array_source_40      t_array_source_40;
l_array_source_41      t_array_source_41;
l_array_source_57      t_array_source_57;
l_array_source_83      t_array_source_83;
l_array_source_84      t_array_source_84;
l_array_source_85      t_array_source_85;
l_array_source_86      t_array_source_86;
l_array_source_87      t_array_source_87;
l_array_source_88      t_array_source_88;
l_array_source_89      t_array_source_89;
l_array_source_90      t_array_source_90;
l_array_source_91      t_array_source_91;
l_array_source_92      t_array_source_92;
l_array_source_93      t_array_source_93;
l_array_source_94      t_array_source_94;
l_array_source_95      t_array_source_95;
l_array_source_96      t_array_source_96;
l_array_source_97      t_array_source_97;
l_array_source_98      t_array_source_98;
l_array_source_99      t_array_source_99;
l_array_source_100      t_array_source_100;
l_array_source_101      t_array_source_101;
l_array_source_102      t_array_source_102;
l_array_source_103      t_array_source_103;
l_array_source_104      t_array_source_104;
l_array_source_105      t_array_source_105;
l_array_source_106      t_array_source_106;
l_array_source_107      t_array_source_107;
l_array_source_108      t_array_source_108;
l_array_source_108_meaning      t_array_lookup_meaning;
l_array_source_109      t_array_source_109;
l_array_source_110      t_array_source_110;
l_array_source_111      t_array_source_111;
l_array_source_112      t_array_source_112;
l_array_source_113      t_array_source_113;
l_array_source_114      t_array_source_114;

--
CURSOR header_cur
IS
SELECT /*+ leading(xet) cardinality(xet,1) */
-- Event Class Code: PREPAYMENT_BURDEN
    xet.entity_id
   ,xet.legal_entity_id
   ,xet.entity_code
   ,xet.transaction_number
   ,xet.event_id
   ,xet.event_class_code
   ,xet.event_type_code
   ,xet.event_number
   ,xet.event_date
   ,xet.transaction_date
   ,xet.reference_num_1
   ,xet.reference_num_2
   ,xet.reference_num_3
   ,xet.reference_num_4
   ,xet.reference_char_1
   ,xet.reference_char_2
   ,xet.reference_char_3
   ,xet.reference_char_4
   ,xet.reference_date_1
   ,xet.reference_date_2
   ,xet.reference_date_3
   ,xet.reference_date_4
   ,xet.event_created_by
   ,xet.budgetary_control_flag  
  FROM xla_events_gt     xet  
 WHERE xet.event_date between p_pad_start_date and p_pad_end_date
   and xet.event_class_code = C_EVENT_CLASS_CODE
   and xet.event_status_code <> 'N'  
 ORDER BY event_id
;


--
CURSOR line_cur (x_first_event_id    in number, x_last_event_id    in number)
IS
SELECT  /*+ leading(xet) cardinality(xet,1) */
-- Event Class Code: PREPAYMENT_BURDEN
    xet.entity_id
   ,xet.legal_entity_id
   ,xet.entity_code
   ,xet.transaction_number
   ,xet.event_id
   ,xet.event_class_code
   ,xet.event_type_code
   ,xet.event_number
   ,xet.event_date
   ,xet.transaction_date
   ,xet.reference_num_1
   ,xet.reference_num_2
   ,xet.reference_num_3
   ,xet.reference_num_4
   ,xet.reference_char_1
   ,xet.reference_char_2
   ,xet.reference_char_3
   ,xet.reference_char_4
   ,xet.reference_date_1
   ,xet.reference_date_2
   ,xet.reference_date_3
   ,xet.reference_date_4
   ,xet.event_created_by
   ,xet.budgetary_control_flag
 , l1.LINE_NUMBER  
  , l1.DOCUMENT_DISTRIBUTION_TYPE    source_2
  , l3.PROJECT_NAME    source_3
  , l4.TASK_NUMBER    source_4
  , l2.EXPENDITURE_ORGANIZATION_ID    source_5
  , l1.AID_DIST_CCID    source_11
  , l1.BUDGET_CCID    source_14
  , l1.DISTRIBUTION_LINK_TYPE    source_21
  , l1.AID_INVOICE_DIST_ID    source_30
  , l1.AI_INVOICE_CURRENCY_CODE    source_33
  , l1.INV_EXCHANGE_DATE    source_39
  , l1.INV_EXCHANGE_RATE    source_40
  , l1.INV_EXCHANGE_RATE_TYPE    source_41
  , l1.AID_AMOUNT    source_57
  , l1.DOCUMENT_TYPE    source_83
  , l3.PROJ_BURDEN_DISPLAY_METHOD    source_84
  , l1.ACCT_REVERSAL_INDICATOR    source_85
  , l1.ALLOC_TO_APPLN_ID    source_86
  , l1.ALLOC_TO_DIST_TYPE    source_87
  , l1.ALLOC_TO_ENTITY_CODE    source_88
  , l1.ALLOC_TO_FIRST_DIST_ID    source_89
  , l1.ALLOC_TO_FIRST_SYS_TRANS_ID    source_90
  , l1.AP_APPLICATION_ID    source_91
  , l1.AP_DISTRIBUTION_TYPE    source_92
  , l1.AP_ENTITY_CODE    source_93
  , l1.AP_FIRST_DIST_ID    source_94
  , l1.AP_FIRST_SYS_TRANS_ID    source_95
  , l1.AID_EXPENDITURE_TYPE    source_96
  , l1.ENC_UPG_CR_ACCT_CLASS    source_97
  , l1.ENC_UPG_CR_ACCOUNT    source_98
  , l1.AID_BASE_AMT_NO_ROUND    source_99
  , l1.ENC_UPG_DR_ACCT_CLASS    source_100
  , l1.ENC_UPG_DR_ACCOUNT    source_101
  , l1.USE_ENC_UPG_ATTRIB_FLAG    source_102
  , l1.ACCT_REVERSAL_FIRST_DIST_ID    source_103
  , l1.AP_SECOND_DIST_ID    source_104
  , l1.ACCT_REV_DISTRIBUTION_TYPE    source_105
  , l1.ENC_UPG_CR_ENC_TYPE_ID    source_106
  , l1.ENC_UPG_DR_ENC_TYPE_ID    source_107
  , l1.BURDEN_COST_FLAG    source_108
  , fvl108.meaning   source_108_meaning
  , l1.PA_APPLICATION_ID    source_109
  , l1.PA_DISTRIBUTION_TYPE    source_110
  , l1.PA_ENTITY_CODE    source_111
  , l1.PA_FIRST_DIST_ID    source_112
  , l1.PA_FIRST_SYS_TRANS_ID    source_113
  , l1.PA_SECOND_DIST_ID    source_114
  FROM xla_events_gt     xet 
  , PA_XLA_BC_PKT_AP_DETAIL_V  l1
  , PA_XLA_EXP_ORG_REF_V  l2
  , PA_XLA_PROJECT_REF_V  l3
  , PA_XLA_TASK_REF_V  l4
  , fnd_lookup_values    fvl108
 WHERE xet.event_id between x_first_event_id and x_last_event_id
   and xet.event_date between p_pad_start_date and p_pad_end_date
   and xet.event_class_code = C_EVENT_CLASS_CODE
   and xet.event_status_code <> 'N'   AND l1.event_id      = xet.event_id
 AND l2.EXPENDITURE_ORGANIZATION_ID=l1.AID_EXPENDITURE_ORG_ID AND l3.PROJECT_ID=l1.AID_PROJECT_ID AND l4.TASK_ID=l1.AID_TASK_ID   AND fvl108.lookup_type(+)         = 'BC_PKT_BURDEN_COST_FLAG'
  AND fvl108.lookup_code(+)         = l1.BURDEN_COST_FLAG
  AND fvl108.view_application_id(+) = 275
  AND fvl108.language(+)            = USERENV('LANG')
  ;

--
BEGIN
IF g_log_enabled THEN
   l_log_module := C_DEFAULT_MODULE||'.EventClass_109';
END IF;
IF (C_LEVEL_PROCEDURE >= g_log_level) THEN
   trace
      (p_msg      => 'BEGIN of EventClass_109'
      ,p_level    => C_LEVEL_PROCEDURE
      ,p_module   => l_log_module);
END IF;

IF (C_LEVEL_STATEMENT >= g_log_level) THEN
   trace
      (p_msg      => 'p_application_id = '||p_application_id||
                     ' - p_base_ledger_id = '||p_base_ledger_id||
                     ' - p_target_ledger_id  = '||p_target_ledger_id||
                     ' - p_language = '||p_language||
                     ' - p_currency_code = '||p_currency_code||
                     ' - p_sla_ledger_id = '||p_sla_ledger_id
      ,p_level    => C_LEVEL_STATEMENT
      ,p_module   => l_log_module);
END IF;
--
-- initialze arrays
--
g_array_event.DELETE;
l_rec_array_event := l_null_rec_array_event;
--
--------------------------------------
-- 4262811 Initialze MPA Line Number
--------------------------------------
XLA_AE_HEADER_PKG.g_mpa_line_num := 0;

--

--
OPEN header_cur;
--
IF (C_LEVEL_STATEMENT >= g_log_level) THEN
   trace
   (p_msg      => 'SQL - FETCH header_cur'
   ,p_level    => C_LEVEL_STATEMENT
   ,p_module   => l_log_module);
END IF;
--
LOOP
FETCH header_cur BULK COLLECT INTO
        l_array_entity_id
      , l_array_legal_entity_id
      , l_array_entity_code
      , l_array_transaction_num
      , l_array_event_id
      , l_array_class_code
      , l_array_event_type
      , l_array_event_number
      , l_array_event_date
      , l_array_transaction_date
      , l_array_reference_num_1
      , l_array_reference_num_2
      , l_array_reference_num_3
      , l_array_reference_num_4
      , l_array_reference_char_1
      , l_array_reference_char_2
      , l_array_reference_char_3
      , l_array_reference_char_4
      , l_array_reference_date_1
      , l_array_reference_date_2
      , l_array_reference_date_3
      , l_array_reference_date_4
      , l_array_event_created_by
      , l_array_budgetary_control_flag 
      LIMIT l_rows;
--
IF (C_LEVEL_EVENT >= g_log_level) THEN
   trace
   (p_msg      => '# rows extracted from header extract objects = '||TO_CHAR(header_cur%ROWCOUNT)
   ,p_level    => C_LEVEL_EVENT
   ,p_module   => l_log_module);
END IF;
--
EXIT WHEN l_array_entity_id.COUNT = 0;

-- initialize arrays
XLA_AE_HEADER_PKG.g_rec_header_new        := NULL;
XLA_AE_LINES_PKG.g_rec_lines              := NULL;

--
-- Bug 4458708
--
XLA_AE_LINES_PKG.g_LineNumber := 0;


-- 4262811 - when creating Accrual Reversal or MPA, use g_last_hdr_idx to increment for next header id
g_last_hdr_idx := l_array_event_id.LAST;
--
-- loop for the headers. Each iteration is for each header extract row
-- fetched in header cursor
--
FOR hdr_idx IN l_array_event_id.FIRST .. l_array_event_id.LAST LOOP

--
-- set event info as cache for other routines to refer event attributes
--
XLA_AE_JOURNAL_ENTRY_PKG.set_event_info
   (p_application_id           => p_application_id
   ,p_primary_ledger_id        => p_primary_ledger_id
   ,p_base_ledger_id           => p_base_ledger_id
   ,p_target_ledger_id         => p_target_ledger_id
   ,p_entity_id                => l_array_entity_id(hdr_idx)
   ,p_legal_entity_id          => l_array_legal_entity_id(hdr_idx)
   ,p_entity_code              => l_array_entity_code(hdr_idx)
   ,p_transaction_num          => l_array_transaction_num(hdr_idx)
   ,p_event_id                 => l_array_event_id(hdr_idx)
   ,p_event_class_code         => l_array_class_code(hdr_idx)
   ,p_event_type_code          => l_array_event_type(hdr_idx)
   ,p_event_number             => l_array_event_number(hdr_idx)
   ,p_event_date               => l_array_event_date(hdr_idx)
   ,p_transaction_date         => l_array_transaction_date(hdr_idx)
   ,p_reference_num_1          => l_array_reference_num_1(hdr_idx)
   ,p_reference_num_2          => l_array_reference_num_2(hdr_idx)
   ,p_reference_num_3          => l_array_reference_num_3(hdr_idx)
   ,p_reference_num_4          => l_array_reference_num_4(hdr_idx)
   ,p_reference_char_1         => l_array_reference_char_1(hdr_idx)
   ,p_reference_char_2         => l_array_reference_char_2(hdr_idx)
   ,p_reference_char_3         => l_array_reference_char_3(hdr_idx)
   ,p_reference_char_4         => l_array_reference_char_4(hdr_idx)
   ,p_reference_date_1         => l_array_reference_date_1(hdr_idx)
   ,p_reference_date_2         => l_array_reference_date_2(hdr_idx)
   ,p_reference_date_3         => l_array_reference_date_3(hdr_idx)
   ,p_reference_date_4         => l_array_reference_date_4(hdr_idx)
   ,p_event_created_by         => l_array_event_created_by(hdr_idx)
   ,p_budgetary_control_flag   => l_array_budgetary_control_flag(hdr_idx));

--
-- set the status of entry to C_VALID (0)
--
XLA_AE_JOURNAL_ENTRY_PKG.g_global_status    := XLA_AE_JOURNAL_ENTRY_PKG.C_VALID;

--
-- initialize a row for ae header
--
XLA_AE_HEADER_PKG.InitHeader(hdr_idx);

l_event_id := l_array_event_id(hdr_idx);

--
-- storing the hdr_idx for event. May be used by line cursor.
--
g_array_event(l_event_id).array_value_num('header_index') := hdr_idx;

--
-- store sources from header extract. This can be improved to
-- store only those sources from header extract that may be used in lines
--


--
-- initilaize the status of ae headers for diffrent balance types
-- the status is initialised to C_NOT_CREATED (2)
--
--g_array_event(l_event_id).array_value_num('actual_je_status') := XLA_AE_JOURNAL_ENTRY_PKG.C_NOT_CREATED;
--g_array_event(l_event_id).array_value_num('budget_je_status') := XLA_AE_JOURNAL_ENTRY_PKG.C_NOT_CREATED;
--g_array_event(l_event_id).array_value_num('encumbrance_je_status') := XLA_AE_JOURNAL_ENTRY_PKG.C_NOT_CREATED;

--
-- call api to validate and store accounting attributes for header
--

------------------------------------------------------------
-- Accrual Reversal : to get date for Standard Source (NONE)
------------------------------------------------------------
l_acc_rev_gl_date_source := NULL;

     l_rec_acct_attrs.array_acct_attr_code(1)   := 'GL_DATE';
      l_rec_acct_attrs.array_date_value(1) := 
xla_ae_sources_pkg.GetSystemSourceDate(
   p_source_code           => 'XLA_EVENT_DATE'
 , p_source_type_code      => 'Y'
 , p_source_application_id =>  602
);


XLA_AE_HEADER_PKG.SetHdrAcctAttrs(l_rec_acct_attrs);

XLA_AE_HEADER_PKG.SetJeCategoryName;

XLA_AE_HEADER_PKG.g_rec_header_new.array_event_type_code(hdr_idx)  := l_array_event_type(hdr_idx);
XLA_AE_HEADER_PKG.g_rec_header_new.array_event_id(hdr_idx)         := l_array_event_id(hdr_idx);
XLA_AE_HEADER_PKG.g_rec_header_new.array_entity_id(hdr_idx)        := l_array_entity_id(hdr_idx);
XLA_AE_HEADER_PKG.g_rec_header_new.array_event_number(hdr_idx)     := l_array_event_number(hdr_idx);
XLA_AE_HEADER_PKG.g_rec_header_new.array_target_ledger_id(hdr_idx) := p_target_ledger_id;


-- No header level analytical criteria

--
--accounting attribute enhancement, bug 3612931
--
l_trx_reversal_source := SUBSTR(NULL, 1,30);

IF NVL(l_trx_reversal_source, 'N') NOT IN ('N','Y') THEN
   xla_ae_journal_entry_pkg.g_global_status      :=  xla_ae_journal_entry_pkg.C_INVALID;

   xla_accounting_err_pkg.build_message
      (p_appli_s_name            => 'XLA'
      ,p_msg_name                => 'XLA_AP_INVALID_HDR_ATTR'
      ,p_token_1                 => 'ACCT_ATTR_NAME'
      ,p_value_1                 => xla_ae_sources_pkg.GetAccountingSourceName('TRX_ACCT_REVERSAL_OPTION')
      ,p_token_2                 => 'PRODUCT_NAME'
      ,p_value_2                 => xla_ae_journal_entry_pkg.g_cache_event.application_name
      ,p_entity_id               => xla_ae_journal_entry_pkg.g_cache_event.entity_id
      ,p_event_id                => xla_ae_journal_entry_pkg.g_cache_event.event_id
      ,p_ledger_id               => xla_ae_journal_entry_pkg.g_cache_event.target_ledger_id);

ELSIF NVL(l_trx_reversal_source, 'N') = 'Y' THEN
   --
   -- following sets the accounting attributes needed to reverse
   -- accounting for a distributeion
   --
   xla_ae_lines_pkg.SetTrxReversalAttrs
      (p_event_id              => l_event_id
      ,p_gl_date               => XLA_AE_HEADER_PKG.g_rec_header_new.array_gl_date(hdr_idx)
      ,p_trx_reversal_source   => l_trx_reversal_source);

END IF;


----------------------------------------------------------------
-- 4262811 -  update the header statuses to invalid in need be
----------------------------------------------------------------
--
XLA_AE_JOURNAL_ENTRY_PKG.UpdateJournalEntryStatus (p_hdr_idx => hdr_idx);


  -----------------------------------------------
  -- No accrual reversal for the event class/type
  -----------------------------------------------
----------------------------------------------------------------

--
-- this ends the header loop iteration for one bulk fetch
--
END LOOP;

l_first_event_id   := l_array_event_id(l_array_event_id.FIRST);
l_last_event_id    := l_array_event_id(l_array_event_id.LAST);

--
-- insert dummy rows into lines gt table that were created due to
-- transaction reversals
--
IF XLA_AE_LINES_PKG.g_rec_lines.array_ae_header_id.COUNT > 0 THEN
   l_result := XLA_AE_LINES_PKG.InsertLines;
END IF;

--
-- reset the temp_line_num for each set of events fetched from header
-- cursor rather than doing it for each new event in line cursor
-- Bug 3939231
--
xla_ae_lines_pkg.g_temp_line_num := 0;



--
OPEN line_cur(x_first_event_id  => l_first_event_id, x_last_event_id  => l_last_event_id);
--
--
IF (C_LEVEL_STATEMENT >= g_log_level) THEN

      trace
         (p_msg      => 'SQL - FETCH line_cur'
         ,p_level    => C_LEVEL_STATEMENT
         ,p_module   => l_log_module);

END IF;
--
--
LOOP
  --
  FETCH line_cur BULK COLLECT INTO
        l_array_entity_id
      , l_array_legal_entity_id
      , l_array_entity_code
      , l_array_transaction_num
      , l_array_event_id
      , l_array_class_code
      , l_array_event_type
      , l_array_event_number
      , l_array_event_date
      , l_array_transaction_date
      , l_array_reference_num_1
      , l_array_reference_num_2
      , l_array_reference_num_3
      , l_array_reference_num_4
      , l_array_reference_char_1
      , l_array_reference_char_2
      , l_array_reference_char_3
      , l_array_reference_char_4
      , l_array_reference_date_1
      , l_array_reference_date_2
      , l_array_reference_date_3
      , l_array_reference_date_4
      , l_array_event_created_by
      , l_array_budgetary_control_flag
      , l_array_extract_line_num 
      , l_array_source_2
      , l_array_source_3
      , l_array_source_4
      , l_array_source_5
      , l_array_source_11
      , l_array_source_14
      , l_array_source_21
      , l_array_source_30
      , l_array_source_33
      , l_array_source_39
      , l_array_source_40
      , l_array_source_41
      , l_array_source_57
      , l_array_source_83
      , l_array_source_84
      , l_array_source_85
      , l_array_source_86
      , l_array_source_87
      , l_array_source_88
      , l_array_source_89
      , l_array_source_90
      , l_array_source_91
      , l_array_source_92
      , l_array_source_93
      , l_array_source_94
      , l_array_source_95
      , l_array_source_96
      , l_array_source_97
      , l_array_source_98
      , l_array_source_99
      , l_array_source_100
      , l_array_source_101
      , l_array_source_102
      , l_array_source_103
      , l_array_source_104
      , l_array_source_105
      , l_array_source_106
      , l_array_source_107
      , l_array_source_108
      , l_array_source_108_meaning
      , l_array_source_109
      , l_array_source_110
      , l_array_source_111
      , l_array_source_112
      , l_array_source_113
      , l_array_source_114
      LIMIT l_rows;

  --
  IF (C_LEVEL_EVENT >= g_log_level) THEN
            trace
               (p_msg      => '# rows extracted from line extract objects = '||TO_CHAR(line_cur%ROWCOUNT)
               ,p_level    => C_LEVEL_EVENT
               ,p_module   => l_log_module);
  END IF;
  --
  EXIT WHEN l_array_entity_id.count = 0;

  XLA_AE_LINES_PKG.g_rec_lines := null;

--
-- Bug 4458708
--
XLA_AE_LINES_PKG.g_LineNumber := 0;
--
--

FOR Idx IN 1..l_array_event_id.count LOOP
   --
   -- 5648433 (move l_event_id out of IF statement)  set l_event_id to be used inside IF condition
   --
   l_event_id := l_array_event_id(idx);  -- 5648433

   --
   -- Bug 4872078 - Do nothing if the event is meant for transaction reversal
   --

   IF NVL(xla_ae_header_pkg.g_rec_header_new.array_trx_acct_reversal_option
             (g_array_event(l_event_id).array_value_num('header_index'))
         ,'N'
         ) <> 'Y'
   THEN
      IF (C_LEVEL_STATEMENT >= g_log_level) THEN
         trace
            (p_msg      => 'Trancaction revesal option is not Y '
            ,p_level    => C_LEVEL_STATEMENT
            ,p_module   => l_log_module);
      END IF;

--
-- set the XLA_AE_JOURNAL_ENTRY_PKG.g_global_status to C_VALID (0)
--
XLA_AE_JOURNAL_ENTRY_PKG.g_global_status := XLA_AE_JOURNAL_ENTRY_PKG.C_VALID;
--
-- set event info as cache for other routines to refer event attributes
--

IF l_event_id <> NVL(l_previous_event_id, -1) THEN
   l_previous_event_id := l_event_id;

   XLA_AE_JOURNAL_ENTRY_PKG.set_event_info
      (p_application_id           => p_application_id
      ,p_primary_ledger_id        => p_primary_ledger_id
      ,p_base_ledger_id           => p_base_ledger_id
      ,p_target_ledger_id         => p_target_ledger_id
      ,p_entity_id                => l_array_entity_id(Idx)
      ,p_legal_entity_id          => l_array_legal_entity_id(Idx)
      ,p_entity_code              => l_array_entity_code(Idx)
      ,p_transaction_num          => l_array_transaction_num(Idx)
      ,p_event_id                 => l_array_event_id(Idx)
      ,p_event_class_code         => l_array_class_code(Idx)
      ,p_event_type_code          => l_array_event_type(Idx)
      ,p_event_number             => l_array_event_number(Idx)
      ,p_event_date               => l_array_event_date(Idx)
      ,p_transaction_date         => l_array_transaction_date(Idx)
      ,p_reference_num_1          => l_array_reference_num_1(Idx)
      ,p_reference_num_2          => l_array_reference_num_2(Idx)
      ,p_reference_num_3          => l_array_reference_num_3(Idx)
      ,p_reference_num_4          => l_array_reference_num_4(Idx)
      ,p_reference_char_1         => l_array_reference_char_1(Idx)
      ,p_reference_char_2         => l_array_reference_char_2(Idx)
      ,p_reference_char_3         => l_array_reference_char_3(Idx)
      ,p_reference_char_4         => l_array_reference_char_4(Idx)
      ,p_reference_date_1         => l_array_reference_date_1(Idx)
      ,p_reference_date_2         => l_array_reference_date_2(Idx)
      ,p_reference_date_3         => l_array_reference_date_3(Idx)
      ,p_reference_date_4         => l_array_reference_date_4(Idx)
      ,p_event_created_by         => l_array_event_created_by(Idx)
      ,p_budgetary_control_flag   => l_array_budgetary_control_flag(Idx));
       --
END IF;



--
xla_ae_lines_pkg.SetExtractLine(p_extract_line => l_array_extract_line_num(Idx));

l_acct_reversal_source := SUBSTR(l_array_source_85(Idx), 1,30);

IF l_continue_with_lines THEN
   IF NVL(l_acct_reversal_source, 'N') NOT IN ('N','Y','B') THEN
      xla_ae_journal_entry_pkg.g_global_status      :=  xla_ae_journal_entry_pkg.C_INVALID;

      xla_accounting_err_pkg.build_message
         (p_appli_s_name            => 'XLA'
         ,p_msg_name                => 'XLA_AP_INVALID_REVERSAL_OPTION'
         ,p_token_1                 => 'LINE_NUMBER'
         ,p_value_1                 => l_array_extract_line_num(Idx)
         ,p_token_2                 => 'PRODUCT_NAME'
         ,p_value_2                 => xla_ae_journal_entry_pkg.g_cache_event.application_name
         ,p_entity_id               => xla_ae_journal_entry_pkg.g_cache_event.entity_id
         ,p_event_id                => xla_ae_journal_entry_pkg.g_cache_event.event_id
         ,p_ledger_id               => xla_ae_journal_entry_pkg.g_cache_event.target_ledger_id);

   ELSIF NVL(l_acct_reversal_source, 'N') IN ('Y','B') THEN
      --
      -- following sets the accounting attributes needed to reverse
      -- accounting for a distributeion
      --

      --
      -- 5217187
      --
      l_rec_rev_acct_attrs.array_acct_attr_code(1):= 'GL_DATE';
      l_rec_rev_acct_attrs.array_date_value(1) := XLA_AE_HEADER_PKG.g_rec_header_new.array_gl_date(
                                       g_array_event(l_event_id).array_value_num('header_index'));
      --
      --

      l_rec_rev_acct_attrs.array_acct_attr_code(2) := 'ACCOUNTING_REVERSAL_OPTION';
      l_rec_rev_acct_attrs.array_char_value(2)  := l_array_source_85(Idx);
      l_rec_rev_acct_attrs.array_acct_attr_code(3) := 'DISTRIBUTION_IDENTIFIER_1';
      l_rec_rev_acct_attrs.array_num_value(3)  := l_array_source_30(Idx);
      l_rec_rev_acct_attrs.array_acct_attr_code(4) := 'DISTRIBUTION_IDENTIFIER_2';
      l_rec_rev_acct_attrs.array_char_value(4)  := l_array_source_96(Idx);
      l_rec_rev_acct_attrs.array_acct_attr_code(5) := 'DISTRIBUTION_TYPE';
      l_rec_rev_acct_attrs.array_char_value(5)  := l_array_source_21(Idx);
      l_rec_rev_acct_attrs.array_acct_attr_code(6) := 'ENC_UPG_CR_ACCT_CLASS';
      l_rec_rev_acct_attrs.array_char_value(6)  := l_array_source_97(Idx);
      l_rec_rev_acct_attrs.array_acct_attr_code(7) := 'ENC_UPG_CR_CCID';
      l_rec_rev_acct_attrs.array_num_value(7)  := l_array_source_98(Idx);
      l_rec_rev_acct_attrs.array_acct_attr_code(8) := 'ENC_UPG_CR_ENTERED_AMT';
      l_rec_rev_acct_attrs.array_num_value(8)  := l_array_source_57(Idx);
      l_rec_rev_acct_attrs.array_acct_attr_code(9) := 'ENC_UPG_CR_ENTERED_CURR';
      l_rec_rev_acct_attrs.array_char_value(9)  := l_array_source_33(Idx);
      l_rec_rev_acct_attrs.array_acct_attr_code(10) := 'ENC_UPG_CR_LEDGER_AMT';
      l_rec_rev_acct_attrs.array_num_value(10)  := l_array_source_99(Idx);
      l_rec_rev_acct_attrs.array_acct_attr_code(11) := 'ENC_UPG_DR_ACCT_CLASS';
      l_rec_rev_acct_attrs.array_char_value(11)  := l_array_source_100(Idx);
      l_rec_rev_acct_attrs.array_acct_attr_code(12) := 'ENC_UPG_DR_CCID';
      l_rec_rev_acct_attrs.array_num_value(12)  := l_array_source_101(Idx);
      l_rec_rev_acct_attrs.array_acct_attr_code(13) := 'ENC_UPG_DR_ENTERED_AMT';
      l_rec_rev_acct_attrs.array_num_value(13)  := l_array_source_57(Idx);
      l_rec_rev_acct_attrs.array_acct_attr_code(14) := 'ENC_UPG_DR_ENTERED_CURR';
      l_rec_rev_acct_attrs.array_char_value(14)  := l_array_source_33(Idx);
      l_rec_rev_acct_attrs.array_acct_attr_code(15) := 'ENC_UPG_DR_LEDGER_AMT';
      l_rec_rev_acct_attrs.array_num_value(15)  := l_array_source_99(Idx);
      l_rec_rev_acct_attrs.array_acct_attr_code(16) := 'ENC_UPG_OPTION';
      l_rec_rev_acct_attrs.array_char_value(16)  := l_array_source_102(Idx);
      l_rec_rev_acct_attrs.array_acct_attr_code(17) := 'REVERSED_DISTRIBUTION_ID1';
      l_rec_rev_acct_attrs.array_num_value(17)  := l_array_source_103(Idx);
      l_rec_rev_acct_attrs.array_acct_attr_code(18) := 'REVERSED_DISTRIBUTION_ID2';
      l_rec_rev_acct_attrs.array_char_value(18)  := l_array_source_104(Idx);
      l_rec_rev_acct_attrs.array_acct_attr_code(19) := 'REVERSED_DISTRIBUTION_TYPE';
      l_rec_rev_acct_attrs.array_char_value(19)  := l_array_source_105(Idx);
      l_rec_rev_acct_attrs.array_acct_attr_code(20) := 'UPG_CR_ENC_TYPE_ID';
      l_rec_rev_acct_attrs.array_num_value(20)  := l_array_source_106(Idx);
      l_rec_rev_acct_attrs.array_acct_attr_code(21) := 'UPG_DR_ENC_TYPE_ID';
      l_rec_rev_acct_attrs.array_num_value(21)  := l_array_source_107(Idx);


      xla_ae_lines_pkg.SetAcctReversalAttrs
         (p_event_id             => l_event_id
         ,p_rec_acct_attrs       => l_rec_rev_acct_attrs
         ,p_calculate_acctd_flag => l_calculate_acctd_flag
         ,p_calculate_g_l_flag   => l_calculate_g_l_flag);
   END IF;

   IF NVL(l_acct_reversal_source, 'N') IN ('N','B') THEN
       l_actual_flag := NULL;  l_actual_gain_loss_ref := '#####';

--
AcctLineType_90 (
 p_application_id  => p_application_id
 ,p_event_id     => l_event_id
 ,p_calculate_acctd_flag => l_calculate_acctd_flag
 ,p_calculate_g_l_flag => l_calculate_g_l_flag
 ,p_actual_flag => l_actual_flag
 ,p_balance_type_code => l_balance_type_code
 ,p_gain_or_loss_ref=> l_gain_or_loss_ref
 
 , p_source_2 => l_array_source_2(Idx)
 , p_source_3 => l_array_source_3(Idx)
 , p_source_4 => l_array_source_4(Idx)
 , p_source_5 => l_array_source_5(Idx)
 , p_source_14 => l_array_source_14(Idx)
 , p_source_21 => l_array_source_21(Idx)
 , p_source_30 => l_array_source_30(Idx)
 , p_source_33 => l_array_source_33(Idx)
 , p_source_39 => l_array_source_39(Idx)
 , p_source_40 => l_array_source_40(Idx)
 , p_source_41 => l_array_source_41(Idx)
 , p_source_57 => l_array_source_57(Idx)
 , p_source_83 => l_array_source_83(Idx)
 , p_source_84 => l_array_source_84(Idx)
 , p_source_85 => l_array_source_85(Idx)
 , p_source_86 => l_array_source_86(Idx)
 , p_source_87 => l_array_source_87(Idx)
 , p_source_88 => l_array_source_88(Idx)
 , p_source_89 => l_array_source_89(Idx)
 , p_source_90 => l_array_source_90(Idx)
 , p_source_91 => l_array_source_91(Idx)
 , p_source_92 => l_array_source_92(Idx)
 , p_source_93 => l_array_source_93(Idx)
 , p_source_94 => l_array_source_94(Idx)
 , p_source_95 => l_array_source_95(Idx)
 , p_source_96 => l_array_source_96(Idx)
 , p_source_97 => l_array_source_97(Idx)
 , p_source_98 => l_array_source_98(Idx)
 , p_source_99 => l_array_source_99(Idx)
 , p_source_100 => l_array_source_100(Idx)
 , p_source_101 => l_array_source_101(Idx)
 , p_source_102 => l_array_source_102(Idx)
 , p_source_103 => l_array_source_103(Idx)
 , p_source_104 => l_array_source_104(Idx)
 , p_source_105 => l_array_source_105(Idx)
 , p_source_106 => l_array_source_106(Idx)
 , p_source_107 => l_array_source_107(Idx)
 );
If(l_balance_type_code = 'A') THEN
  l_actual_gain_loss_ref := l_gain_or_loss_ref;
END IF;

--


--
AcctLineType_91 (
 p_application_id  => p_application_id
 ,p_event_id     => l_event_id
 ,p_calculate_acctd_flag => l_calculate_acctd_flag
 ,p_calculate_g_l_flag => l_calculate_g_l_flag
 ,p_actual_flag => l_actual_flag
 ,p_balance_type_code => l_balance_type_code
 ,p_gain_or_loss_ref=> l_gain_or_loss_ref
 
 , p_source_2 => l_array_source_2(Idx)
 , p_source_3 => l_array_source_3(Idx)
 , p_source_4 => l_array_source_4(Idx)
 , p_source_5 => l_array_source_5(Idx)
 , p_source_11 => l_array_source_11(Idx)
 , p_source_14 => l_array_source_14(Idx)
 , p_source_21 => l_array_source_21(Idx)
 , p_source_30 => l_array_source_30(Idx)
 , p_source_33 => l_array_source_33(Idx)
 , p_source_39 => l_array_source_39(Idx)
 , p_source_40 => l_array_source_40(Idx)
 , p_source_41 => l_array_source_41(Idx)
 , p_source_57 => l_array_source_57(Idx)
 , p_source_83 => l_array_source_83(Idx)
 , p_source_84 => l_array_source_84(Idx)
 , p_source_85 => l_array_source_85(Idx)
 , p_source_86 => l_array_source_86(Idx)
 , p_source_87 => l_array_source_87(Idx)
 , p_source_88 => l_array_source_88(Idx)
 , p_source_89 => l_array_source_89(Idx)
 , p_source_90 => l_array_source_90(Idx)
 , p_source_91 => l_array_source_91(Idx)
 , p_source_92 => l_array_source_92(Idx)
 , p_source_93 => l_array_source_93(Idx)
 , p_source_94 => l_array_source_94(Idx)
 , p_source_95 => l_array_source_95(Idx)
 , p_source_96 => l_array_source_96(Idx)
 , p_source_97 => l_array_source_97(Idx)
 , p_source_98 => l_array_source_98(Idx)
 , p_source_99 => l_array_source_99(Idx)
 , p_source_100 => l_array_source_100(Idx)
 , p_source_101 => l_array_source_101(Idx)
 , p_source_102 => l_array_source_102(Idx)
 , p_source_103 => l_array_source_103(Idx)
 , p_source_104 => l_array_source_104(Idx)
 , p_source_105 => l_array_source_105(Idx)
 , p_source_106 => l_array_source_106(Idx)
 , p_source_107 => l_array_source_107(Idx)
 , p_source_108 => l_array_source_108(Idx)
 , p_source_108_meaning => l_array_source_108_meaning(Idx)
 );
If(l_balance_type_code = 'A') THEN
  l_actual_gain_loss_ref := l_gain_or_loss_ref;
END IF;

--


--
AcctLineType_92 (
 p_application_id  => p_application_id
 ,p_event_id     => l_event_id
 ,p_calculate_acctd_flag => l_calculate_acctd_flag
 ,p_calculate_g_l_flag => l_calculate_g_l_flag
 ,p_actual_flag => l_actual_flag
 ,p_balance_type_code => l_balance_type_code
 ,p_gain_or_loss_ref=> l_gain_or_loss_ref
 
 , p_source_2 => l_array_source_2(Idx)
 , p_source_3 => l_array_source_3(Idx)
 , p_source_4 => l_array_source_4(Idx)
 , p_source_5 => l_array_source_5(Idx)
 , p_source_14 => l_array_source_14(Idx)
 , p_source_21 => l_array_source_21(Idx)
 , p_source_30 => l_array_source_30(Idx)
 , p_source_33 => l_array_source_33(Idx)
 , p_source_39 => l_array_source_39(Idx)
 , p_source_40 => l_array_source_40(Idx)
 , p_source_41 => l_array_source_41(Idx)
 , p_source_57 => l_array_source_57(Idx)
 , p_source_83 => l_array_source_83(Idx)
 , p_source_84 => l_array_source_84(Idx)
 , p_source_85 => l_array_source_85(Idx)
 , p_source_86 => l_array_source_86(Idx)
 , p_source_87 => l_array_source_87(Idx)
 , p_source_88 => l_array_source_88(Idx)
 , p_source_89 => l_array_source_89(Idx)
 , p_source_90 => l_array_source_90(Idx)
 , p_source_91 => l_array_source_91(Idx)
 , p_source_92 => l_array_source_92(Idx)
 , p_source_93 => l_array_source_93(Idx)
 , p_source_94 => l_array_source_94(Idx)
 , p_source_95 => l_array_source_95(Idx)
 , p_source_96 => l_array_source_96(Idx)
 , p_source_97 => l_array_source_97(Idx)
 , p_source_98 => l_array_source_98(Idx)
 , p_source_99 => l_array_source_99(Idx)
 , p_source_100 => l_array_source_100(Idx)
 , p_source_101 => l_array_source_101(Idx)
 , p_source_102 => l_array_source_102(Idx)
 , p_source_103 => l_array_source_103(Idx)
 , p_source_104 => l_array_source_104(Idx)
 , p_source_105 => l_array_source_105(Idx)
 , p_source_106 => l_array_source_106(Idx)
 , p_source_107 => l_array_source_107(Idx)
 , p_source_108 => l_array_source_108(Idx)
 , p_source_108_meaning => l_array_source_108_meaning(Idx)
 );
If(l_balance_type_code = 'A') THEN
  l_actual_gain_loss_ref := l_gain_or_loss_ref;
END IF;

--


--
AcctLineType_94 (
 p_application_id  => p_application_id
 ,p_event_id     => l_event_id
 ,p_calculate_acctd_flag => l_calculate_acctd_flag
 ,p_calculate_g_l_flag => l_calculate_g_l_flag
 ,p_actual_flag => l_actual_flag
 ,p_balance_type_code => l_balance_type_code
 ,p_gain_or_loss_ref=> l_gain_or_loss_ref
 
 , p_source_2 => l_array_source_2(Idx)
 , p_source_3 => l_array_source_3(Idx)
 , p_source_4 => l_array_source_4(Idx)
 , p_source_5 => l_array_source_5(Idx)
 , p_source_21 => l_array_source_21(Idx)
 , p_source_30 => l_array_source_30(Idx)
 , p_source_33 => l_array_source_33(Idx)
 , p_source_57 => l_array_source_57(Idx)
 , p_source_83 => l_array_source_83(Idx)
 , p_source_85 => l_array_source_85(Idx)
 , p_source_86 => l_array_source_86(Idx)
 , p_source_87 => l_array_source_87(Idx)
 , p_source_88 => l_array_source_88(Idx)
 , p_source_89 => l_array_source_89(Idx)
 , p_source_90 => l_array_source_90(Idx)
 , p_source_96 => l_array_source_96(Idx)
 , p_source_97 => l_array_source_97(Idx)
 , p_source_98 => l_array_source_98(Idx)
 , p_source_99 => l_array_source_99(Idx)
 , p_source_100 => l_array_source_100(Idx)
 , p_source_101 => l_array_source_101(Idx)
 , p_source_102 => l_array_source_102(Idx)
 , p_source_103 => l_array_source_103(Idx)
 , p_source_104 => l_array_source_104(Idx)
 , p_source_105 => l_array_source_105(Idx)
 , p_source_106 => l_array_source_106(Idx)
 , p_source_107 => l_array_source_107(Idx)
 , p_source_109 => l_array_source_109(Idx)
 , p_source_110 => l_array_source_110(Idx)
 , p_source_111 => l_array_source_111(Idx)
 , p_source_112 => l_array_source_112(Idx)
 , p_source_113 => l_array_source_113(Idx)
 , p_source_114 => l_array_source_114(Idx)
 );
If(l_balance_type_code = 'A') THEN
  l_actual_gain_loss_ref := l_gain_or_loss_ref;
END IF;

--


--
AcctLineType_97 (
 p_application_id  => p_application_id
 ,p_event_id     => l_event_id
 ,p_calculate_acctd_flag => l_calculate_acctd_flag
 ,p_calculate_g_l_flag => l_calculate_g_l_flag
 ,p_actual_flag => l_actual_flag
 ,p_balance_type_code => l_balance_type_code
 ,p_gain_or_loss_ref=> l_gain_or_loss_ref
 
 , p_source_2 => l_array_source_2(Idx)
 , p_source_3 => l_array_source_3(Idx)
 , p_source_4 => l_array_source_4(Idx)
 , p_source_5 => l_array_source_5(Idx)
 , p_source_21 => l_array_source_21(Idx)
 , p_source_30 => l_array_source_30(Idx)
 , p_source_33 => l_array_source_33(Idx)
 , p_source_57 => l_array_source_57(Idx)
 , p_source_83 => l_array_source_83(Idx)
 , p_source_85 => l_array_source_85(Idx)
 , p_source_86 => l_array_source_86(Idx)
 , p_source_87 => l_array_source_87(Idx)
 , p_source_88 => l_array_source_88(Idx)
 , p_source_89 => l_array_source_89(Idx)
 , p_source_90 => l_array_source_90(Idx)
 , p_source_96 => l_array_source_96(Idx)
 , p_source_97 => l_array_source_97(Idx)
 , p_source_98 => l_array_source_98(Idx)
 , p_source_99 => l_array_source_99(Idx)
 , p_source_100 => l_array_source_100(Idx)
 , p_source_101 => l_array_source_101(Idx)
 , p_source_102 => l_array_source_102(Idx)
 , p_source_103 => l_array_source_103(Idx)
 , p_source_104 => l_array_source_104(Idx)
 , p_source_105 => l_array_source_105(Idx)
 , p_source_106 => l_array_source_106(Idx)
 , p_source_107 => l_array_source_107(Idx)
 , p_source_109 => l_array_source_109(Idx)
 , p_source_110 => l_array_source_110(Idx)
 , p_source_111 => l_array_source_111(Idx)
 , p_source_112 => l_array_source_112(Idx)
 , p_source_113 => l_array_source_113(Idx)
 , p_source_114 => l_array_source_114(Idx)
 );
If(l_balance_type_code = 'A') THEN
  l_actual_gain_loss_ref := l_gain_or_loss_ref;
END IF;

--

      -- only execute it if calculate g/l flag is yes, and primary or secondary ledger
      -- or secondary ledger that has different currency with primary
      -- or alc that is calculated by sla
      IF (((l_calculate_g_l_flag = 'Y' AND XLA_AE_JOURNAL_ENTRY_PKG.g_cache_ledgers_info.ledger_category_code <> 'ALC') or
            (XLA_AE_JOURNAL_ENTRY_PKG.g_cache_ledgers_info.ledger_category_code in ('ALC', 'SECONDARY') AND XLA_AE_JOURNAL_ENTRY_PKG.g_cache_ledgers_info.calculate_amts_flag='Y'))

--      IF((l_calculate_g_l_flag='Y' or XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id <>
--                    XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.ledger_id)
          AND (l_actual_flag = 'A')) THEN
        XLA_AE_LINES_PKG.CreateGainOrLossLines(
          p_event_id         => xla_ae_journal_entry_pkg.g_cache_event.event_id
         ,p_application_id   => p_application_id
         ,p_amb_context_code => 'DEFAULT'
         ,p_entity_code      => xla_ae_journal_entry_pkg.g_cache_event.entity_code
         ,p_event_class_code => C_EVENT_CLASS_CODE
         ,p_event_type_code  => C_EVENT_TYPE_CODE
         
         ,p_gain_ccid        => -1
         ,p_loss_ccid        => -1

         ,p_actual_flag      => l_actual_flag
         ,p_enc_flag         => null
         ,p_actual_g_l_ref   => l_actual_gain_loss_ref
         ,p_enc_g_l_ref      => null
         );
      END IF;
   END IF;
END IF;

   ELSE
      --
      -- Bug 4872078 - Do nothing if the event is meant for transaction reversal
      --
      IF (C_LEVEL_STATEMENT >= g_log_level) THEN
         trace
            (p_msg      => 'Trancaction revesal option is Y'
            ,p_level    => C_LEVEL_STATEMENT
            ,p_module   => l_log_module);
      END IF;
   END IF;

END LOOP;
l_result := XLA_AE_LINES_PKG.InsertLines ;
end loop;
close line_cur;


--
-- insert headers into xla_ae_headers_gt table
--
l_result := XLA_AE_HEADER_PKG.InsertHeaders ;

-- insert into errors table here.

END LOOP;

--
-- 4865292
--
-- Compare g_hdr_extract_count with event count in
-- CreateHeadersAndLines.
--
g_hdr_extract_count := g_hdr_extract_count + header_cur%ROWCOUNT;

IF (C_LEVEL_STATEMENT >= g_log_level) THEN
   trace (p_msg     => '# rows extracted from header extract objects '
                    || ' (running total): '
                    || g_hdr_extract_count
         ,p_level   => C_LEVEL_STATEMENT
         ,p_module  => l_log_module);
END IF;

CLOSE header_cur;
--

--
IF (C_LEVEL_PROCEDURE >= g_log_level) THEN
   trace
      (p_msg      => 'END of EventClass_109'
      ,p_level    => C_LEVEL_PROCEDURE
      ,p_module   => l_log_module);
END IF;
--
RETURN l_result;
EXCEPTION
WHEN xla_exceptions_pkg.application_exception THEN
   
IF header_cur%ISOPEN THEN CLOSE header_cur; END IF;

   
IF line_cur%ISOPEN   THEN CLOSE line_cur;   END IF;

   RAISE;

WHEN NO_DATA_FOUND THEN

IF header_cur%ISOPEN THEN CLOSE header_cur; END IF;
IF line_cur%ISOPEN   THEN CLOSE line_cur;   END IF;

FOR header_record IN header_cur
LOOP
    l_array_header_events(header_record.event_id) := header_record.event_id;
END LOOP;

l_first_event_id := l_array_header_events(l_array_header_events.FIRST);
l_last_event_id := l_array_header_events(l_array_header_events.LAST);

fnd_file.put_line(fnd_file.LOG, '                    ');
fnd_file.put_line(fnd_file.LOG, '***************************************************************************');
fnd_file.put_line(fnd_file.LOG, 'EVENT CLASS CODE = ' || C_EVENT_CLASS_CODE );
fnd_file.put_line(fnd_file.LOG, 'The following events are present in the line extract but MISSING in the header extract: ');

FOR line_record IN line_cur(l_first_event_id, l_last_event_id)
LOOP
	IF (NOT l_array_header_events.EXISTS(line_record.event_id))  AND (NOT l_array_duplicate_checker.EXISTS(line_record.event_id)) THEN
	fnd_file.put_line(fnd_file.log, 'Event_id = ' || line_record.event_id);
        l_array_duplicate_checker(line_record.event_id) := line_record.event_id;
	END IF;
END LOOP;

fnd_file.put_line(fnd_file.LOG, '***************************************************************************');
fnd_file.put_line(fnd_file.LOG, '                    ');


xla_exceptions_pkg.raise_message
      (p_location => 'XLA_00200_AAD_S_000010_BC_PKG.EventClass_109');


WHEN OTHERS THEN
   xla_exceptions_pkg.raise_message
      (p_location => 'XLA_00200_AAD_S_000010_BC_PKG.EventClass_109');
END EventClass_109;
--

---------------------------------------
--
-- PRIVATE PROCEDURE
--         insert_sources_110
--
----------------------------------------
--
PROCEDURE insert_sources_110(
                                p_target_ledger_id       IN NUMBER
                              , p_language               IN VARCHAR2
                              , p_sla_ledger_id          IN NUMBER
                              , p_pad_start_date         IN DATE
                              , p_pad_end_date           IN DATE
                         )
IS

C_EVENT_TYPE_CODE    CONSTANT  VARCHAR2(30)  := 'PREPAY_APPLICATION_BURDEN_ALL';
C_EVENT_CLASS_CODE   CONSTANT  VARCHAR2(30) := 'PREPAY_APPLICATION_BURDEN';
p_apps_owner                   VARCHAR2(30);
l_log_module                   VARCHAR2(240);
BEGIN
IF g_log_enabled THEN
      l_log_module := C_DEFAULT_MODULE||'.insert_sources_110';
END IF;
IF (C_LEVEL_PROCEDURE >= g_log_level) THEN

      trace
         (p_msg      => 'BEGIN of insert_sources_110'
         ,p_level    => C_LEVEL_PROCEDURE
         ,p_module   => l_log_module);

END IF;

-- select APPS owner
SELECT oracle_username
  INTO p_apps_owner
  FROM fnd_oracle_userid
 WHERE read_only_flag = 'U'
;

IF (C_LEVEL_STATEMENT >= g_log_level) THEN
      trace
         (p_msg      => 'p_target_ledger_id = '||p_target_ledger_id||
                        ' - p_language = '||p_language||
                        ' - p_sla_ledger_id  = '||p_sla_ledger_id ||
                        ' - p_pad_start_date = '||TO_CHAR(p_pad_start_date)||
                        ' - p_pad_end_date = '||TO_CHAR(p_pad_end_date)||
                        ' - p_apps_owner = '||TO_CHAR(p_apps_owner)
         ,p_level    => C_LEVEL_STATEMENT
         ,p_module   => l_log_module);
END IF;

 


--
INSERT INTO xla_diag_sources  --line2
(
        event_id
      , ledger_id
      , sla_ledger_id
      , description_language
      , object_name
      , object_type_code
      , line_number
      , source_application_id
      , source_type_code
      , source_code
      , source_value
      , source_meaning
      , created_by
      , creation_date
      , last_update_date
      , last_updated_by
      , last_update_login
      , program_update_date
      , program_application_id
      , program_id
      , request_id
)
SELECT  event_id
      , p_target_ledger_id
      , p_sla_ledger_id
      , p_language
      , object_name
      , object_type_code
      , line_number
      , source_application_id
      , source_type_code
      , source_code
      , SUBSTR(source_value,1,1996)
      , SUBSTR(source_meaning ,1,200)
      , xla_environment_pkg.g_Usr_Id
      , TRUNC(SYSDATE)
      , TRUNC(SYSDATE)
      , xla_environment_pkg.g_Usr_Id
      , xla_environment_pkg.g_Login_Id
      , TRUNC(SYSDATE)
      , xla_environment_pkg.g_Prog_Appl_Id
      , xla_environment_pkg.g_Prog_Id
      , xla_environment_pkg.g_Req_Id
  FROM (
       SELECT xet.event_id                  event_id
            , l1.line_number                 line_number
            , CASE r
               WHEN 1 THEN 'PA_XLA_BC_PKT_AP_DETAIL_V' 
                WHEN 2 THEN 'PA_XLA_PROJECT_REF_V' 
                WHEN 3 THEN 'PA_XLA_TASK_REF_V' 
                WHEN 4 THEN 'PA_XLA_EXP_ORG_REF_V' 
                WHEN 5 THEN 'PA_XLA_BC_PKT_AP_DETAIL_V' 
                WHEN 6 THEN 'PA_XLA_BC_PKT_AP_DETAIL_V' 
                WHEN 7 THEN 'PA_XLA_BC_PKT_AP_DETAIL_V' 
                WHEN 8 THEN 'PA_XLA_BC_PKT_AP_DETAIL_V' 
                WHEN 9 THEN 'PA_XLA_BC_PKT_AP_DETAIL_V' 
                WHEN 10 THEN 'PA_XLA_BC_PKT_AP_DETAIL_V' 
                WHEN 11 THEN 'PA_XLA_BC_PKT_AP_DETAIL_V' 
                WHEN 12 THEN 'PA_XLA_PROJECT_REF_V' 
                WHEN 13 THEN 'PA_XLA_BC_PKT_AP_DETAIL_V' 
                WHEN 14 THEN 'PA_XLA_BC_PKT_AP_DETAIL_V' 
                WHEN 15 THEN 'PA_XLA_BC_PKT_AP_DETAIL_V' 
                WHEN 16 THEN 'PA_XLA_BC_PKT_AP_DETAIL_V' 
                WHEN 17 THEN 'PA_XLA_BC_PKT_AP_DETAIL_V' 
                WHEN 18 THEN 'PA_XLA_BC_PKT_AP_DETAIL_V' 
                WHEN 19 THEN 'PA_XLA_BC_PKT_AP_DETAIL_V' 
                WHEN 20 THEN 'PA_XLA_BC_PKT_AP_DETAIL_V' 
                WHEN 21 THEN 'PA_XLA_BC_PKT_AP_DETAIL_V' 
                WHEN 22 THEN 'PA_XLA_BC_PKT_AP_DETAIL_V' 
                WHEN 23 THEN 'PA_XLA_BC_PKT_AP_DETAIL_V' 
                WHEN 24 THEN 'PA_XLA_BC_PKT_AP_DETAIL_V' 
                WHEN 25 THEN 'PA_XLA_BC_PKT_AP_DETAIL_V' 
                WHEN 26 THEN 'PA_XLA_BC_PKT_AP_DETAIL_V' 
                WHEN 27 THEN 'PA_XLA_BC_PKT_AP_DETAIL_V' 
                WHEN 28 THEN 'PA_XLA_BC_PKT_AP_DETAIL_V' 
                WHEN 29 THEN 'PA_XLA_BC_PKT_AP_DETAIL_V' 
                WHEN 30 THEN 'PA_XLA_BC_PKT_AP_DETAIL_V' 
                WHEN 31 THEN 'PA_XLA_BC_PKT_AP_DETAIL_V' 
                WHEN 32 THEN 'PA_XLA_BC_PKT_AP_DETAIL_V' 
                WHEN 33 THEN 'PA_XLA_BC_PKT_AP_DETAIL_V' 
                WHEN 34 THEN 'PA_XLA_BC_PKT_AP_DETAIL_V' 
                WHEN 35 THEN 'PA_XLA_BC_PKT_AP_DETAIL_V' 
                WHEN 36 THEN 'PA_XLA_BC_PKT_AP_DETAIL_V' 
                WHEN 37 THEN 'PA_XLA_BC_PKT_AP_DETAIL_V' 
                WHEN 38 THEN 'PA_XLA_BC_PKT_AP_DETAIL_V' 
                WHEN 39 THEN 'PA_XLA_BC_PKT_AP_DETAIL_V' 
                WHEN 40 THEN 'PA_XLA_BC_PKT_AP_DETAIL_V' 
                WHEN 41 THEN 'PA_XLA_BC_PKT_AP_DETAIL_V' 
                WHEN 42 THEN 'PA_XLA_BC_PKT_AP_DETAIL_V' 
                
               ELSE null
              END                           object_name
            , CASE r
                WHEN 1 THEN 'LINE' 
                WHEN 2 THEN 'LINE' 
                WHEN 3 THEN 'LINE' 
                WHEN 4 THEN 'LINE' 
                WHEN 5 THEN 'LINE' 
                WHEN 6 THEN 'LINE' 
                WHEN 7 THEN 'LINE' 
                WHEN 8 THEN 'LINE' 
                WHEN 9 THEN 'LINE' 
                WHEN 10 THEN 'LINE' 
                WHEN 11 THEN 'LINE' 
                WHEN 12 THEN 'LINE' 
                WHEN 13 THEN 'LINE' 
                WHEN 14 THEN 'LINE' 
                WHEN 15 THEN 'LINE' 
                WHEN 16 THEN 'LINE' 
                WHEN 17 THEN 'LINE' 
                WHEN 18 THEN 'LINE' 
                WHEN 19 THEN 'LINE' 
                WHEN 20 THEN 'LINE' 
                WHEN 21 THEN 'LINE' 
                WHEN 22 THEN 'LINE' 
                WHEN 23 THEN 'LINE' 
                WHEN 24 THEN 'LINE' 
                WHEN 25 THEN 'LINE' 
                WHEN 26 THEN 'LINE' 
                WHEN 27 THEN 'LINE' 
                WHEN 28 THEN 'LINE' 
                WHEN 29 THEN 'LINE' 
                WHEN 30 THEN 'LINE' 
                WHEN 31 THEN 'LINE' 
                WHEN 32 THEN 'LINE' 
                WHEN 33 THEN 'LINE' 
                WHEN 34 THEN 'LINE' 
                WHEN 35 THEN 'LINE' 
                WHEN 36 THEN 'LINE' 
                WHEN 37 THEN 'LINE' 
                WHEN 38 THEN 'LINE' 
                WHEN 39 THEN 'LINE' 
                WHEN 40 THEN 'LINE' 
                WHEN 41 THEN 'LINE' 
                WHEN 42 THEN 'LINE' 
                
                ELSE null
              END                           object_type_code
            , CASE r
                WHEN 1 THEN '200' 
                WHEN 2 THEN '275' 
                WHEN 3 THEN '275' 
                WHEN 4 THEN '275' 
                WHEN 5 THEN '200' 
                WHEN 6 THEN '200' 
                WHEN 7 THEN '200' 
                WHEN 8 THEN '200' 
                WHEN 9 THEN '200' 
                WHEN 10 THEN '200' 
                WHEN 11 THEN '200' 
                WHEN 12 THEN '275' 
                WHEN 13 THEN '200' 
                WHEN 14 THEN '200' 
                WHEN 15 THEN '200' 
                WHEN 16 THEN '200' 
                WHEN 17 THEN '200' 
                WHEN 18 THEN '200' 
                WHEN 19 THEN '200' 
                WHEN 20 THEN '200' 
                WHEN 21 THEN '200' 
                WHEN 22 THEN '200' 
                WHEN 23 THEN '200' 
                WHEN 24 THEN '200' 
                WHEN 25 THEN '200' 
                WHEN 26 THEN '200' 
                WHEN 27 THEN '200' 
                WHEN 28 THEN '200' 
                WHEN 29 THEN '200' 
                WHEN 30 THEN '200' 
                WHEN 31 THEN '200' 
                WHEN 32 THEN '200' 
                WHEN 33 THEN '200' 
                WHEN 34 THEN '200' 
                WHEN 35 THEN '200' 
                WHEN 36 THEN '200' 
                WHEN 37 THEN '200' 
                WHEN 38 THEN '200' 
                WHEN 39 THEN '200' 
                WHEN 40 THEN '200' 
                WHEN 41 THEN '200' 
                WHEN 42 THEN '200' 
                
                ELSE null
              END                           source_application_id
            , 'S'             source_type_code
            , CASE r
                WHEN 1 THEN 'DOCUMENT_DISTRIBUTION_TYPE' 
                WHEN 2 THEN 'PROJECT_NAME' 
                WHEN 3 THEN 'TASK_NUMBER' 
                WHEN 4 THEN 'EXPENDITURE_ORGANIZATION_ID' 
                WHEN 5 THEN 'AID_DIST_CCID' 
                WHEN 6 THEN 'BUDGET_CCID' 
                WHEN 7 THEN 'DISTRIBUTION_LINK_TYPE' 
                WHEN 8 THEN 'AID_INVOICE_DIST_ID' 
                WHEN 9 THEN 'AI_INVOICE_CURRENCY_CODE' 
                WHEN 10 THEN 'AID_AMOUNT' 
                WHEN 11 THEN 'DOCUMENT_TYPE' 
                WHEN 12 THEN 'PROJ_BURDEN_DISPLAY_METHOD' 
                WHEN 13 THEN 'ACCT_REVERSAL_INDICATOR' 
                WHEN 14 THEN 'ALLOC_TO_APPLN_ID' 
                WHEN 15 THEN 'ALLOC_TO_DIST_TYPE' 
                WHEN 16 THEN 'ALLOC_TO_ENTITY_CODE' 
                WHEN 17 THEN 'ALLOC_TO_FIRST_DIST_ID' 
                WHEN 18 THEN 'ALLOC_TO_FIRST_SYS_TRANS_ID' 
                WHEN 19 THEN 'AP_APPLICATION_ID' 
                WHEN 20 THEN 'AP_DISTRIBUTION_TYPE' 
                WHEN 21 THEN 'AP_ENTITY_CODE' 
                WHEN 22 THEN 'AP_FIRST_DIST_ID' 
                WHEN 23 THEN 'AP_FIRST_SYS_TRANS_ID' 
                WHEN 24 THEN 'AID_EXPENDITURE_TYPE' 
                WHEN 25 THEN 'ENC_UPG_CR_ACCT_CLASS' 
                WHEN 26 THEN 'ENC_UPG_CR_ACCOUNT' 
                WHEN 27 THEN 'AID_BASE_AMT_NO_ROUND' 
                WHEN 28 THEN 'ENC_UPG_DR_ACCT_CLASS' 
                WHEN 29 THEN 'ENC_UPG_DR_ACCOUNT' 
                WHEN 30 THEN 'USE_ENC_UPG_ATTRIB_FLAG' 
                WHEN 31 THEN 'ACCT_REVERSAL_FIRST_DIST_ID' 
                WHEN 32 THEN 'AP_SECOND_DIST_ID' 
                WHEN 33 THEN 'ACCT_REV_DISTRIBUTION_TYPE' 
                WHEN 34 THEN 'ENC_UPG_CR_ENC_TYPE_ID' 
                WHEN 35 THEN 'ENC_UPG_DR_ENC_TYPE_ID' 
                WHEN 36 THEN 'BURDEN_COST_FLAG' 
                WHEN 37 THEN 'PA_APPLICATION_ID' 
                WHEN 38 THEN 'PA_DISTRIBUTION_TYPE' 
                WHEN 39 THEN 'PA_ENTITY_CODE' 
                WHEN 40 THEN 'PA_FIRST_DIST_ID' 
                WHEN 41 THEN 'PA_FIRST_SYS_TRANS_ID' 
                WHEN 42 THEN 'PA_SECOND_DIST_ID' 
                
                ELSE null
              END                           source_code
            , CASE r
                WHEN 1 THEN TO_CHAR(l1.DOCUMENT_DISTRIBUTION_TYPE)
                WHEN 2 THEN TO_CHAR(l3.PROJECT_NAME)
                WHEN 3 THEN TO_CHAR(l4.TASK_NUMBER)
                WHEN 4 THEN TO_CHAR(l2.EXPENDITURE_ORGANIZATION_ID)
                WHEN 5 THEN TO_CHAR(l1.AID_DIST_CCID)
                WHEN 6 THEN TO_CHAR(l1.BUDGET_CCID)
                WHEN 7 THEN TO_CHAR(l1.DISTRIBUTION_LINK_TYPE)
                WHEN 8 THEN TO_CHAR(l1.AID_INVOICE_DIST_ID)
                WHEN 9 THEN TO_CHAR(l1.AI_INVOICE_CURRENCY_CODE)
                WHEN 10 THEN TO_CHAR(l1.AID_AMOUNT)
                WHEN 11 THEN TO_CHAR(l1.DOCUMENT_TYPE)
                WHEN 12 THEN TO_CHAR(l3.PROJ_BURDEN_DISPLAY_METHOD)
                WHEN 13 THEN TO_CHAR(l1.ACCT_REVERSAL_INDICATOR)
                WHEN 14 THEN TO_CHAR(l1.ALLOC_TO_APPLN_ID)
                WHEN 15 THEN TO_CHAR(l1.ALLOC_TO_DIST_TYPE)
                WHEN 16 THEN TO_CHAR(l1.ALLOC_TO_ENTITY_CODE)
                WHEN 17 THEN TO_CHAR(l1.ALLOC_TO_FIRST_DIST_ID)
                WHEN 18 THEN TO_CHAR(l1.ALLOC_TO_FIRST_SYS_TRANS_ID)
                WHEN 19 THEN TO_CHAR(l1.AP_APPLICATION_ID)
                WHEN 20 THEN TO_CHAR(l1.AP_DISTRIBUTION_TYPE)
                WHEN 21 THEN TO_CHAR(l1.AP_ENTITY_CODE)
                WHEN 22 THEN TO_CHAR(l1.AP_FIRST_DIST_ID)
                WHEN 23 THEN TO_CHAR(l1.AP_FIRST_SYS_TRANS_ID)
                WHEN 24 THEN TO_CHAR(l1.AID_EXPENDITURE_TYPE)
                WHEN 25 THEN TO_CHAR(l1.ENC_UPG_CR_ACCT_CLASS)
                WHEN 26 THEN TO_CHAR(l1.ENC_UPG_CR_ACCOUNT)
                WHEN 27 THEN TO_CHAR(l1.AID_BASE_AMT_NO_ROUND)
                WHEN 28 THEN TO_CHAR(l1.ENC_UPG_DR_ACCT_CLASS)
                WHEN 29 THEN TO_CHAR(l1.ENC_UPG_DR_ACCOUNT)
                WHEN 30 THEN TO_CHAR(l1.USE_ENC_UPG_ATTRIB_FLAG)
                WHEN 31 THEN TO_CHAR(l1.ACCT_REVERSAL_FIRST_DIST_ID)
                WHEN 32 THEN TO_CHAR(l1.AP_SECOND_DIST_ID)
                WHEN 33 THEN TO_CHAR(l1.ACCT_REV_DISTRIBUTION_TYPE)
                WHEN 34 THEN TO_CHAR(l1.ENC_UPG_CR_ENC_TYPE_ID)
                WHEN 35 THEN TO_CHAR(l1.ENC_UPG_DR_ENC_TYPE_ID)
                WHEN 36 THEN TO_CHAR(l1.BURDEN_COST_FLAG)
                WHEN 37 THEN TO_CHAR(l1.PA_APPLICATION_ID)
                WHEN 38 THEN TO_CHAR(l1.PA_DISTRIBUTION_TYPE)
                WHEN 39 THEN TO_CHAR(l1.PA_ENTITY_CODE)
                WHEN 40 THEN TO_CHAR(l1.PA_FIRST_DIST_ID)
                WHEN 41 THEN TO_CHAR(l1.PA_FIRST_SYS_TRANS_ID)
                WHEN 42 THEN TO_CHAR(l1.PA_SECOND_DIST_ID)
                
                ELSE null
              END                           source_value
            , CASE r
                WHEN 4 THEN XLA_00200_AAD_S_000010_BC_PKG.GetMeaning(
                          1011384
                         ,TO_CHAR(l2.EXPENDITURE_ORGANIZATION_ID)
                         ,'EXPENDITURE_ORGANIZATION_ID'
                         ,'S'
                         ,275)
                WHEN 36 THEN fvl108.meaning
                
                ELSE null
              END               source_meaning
         FROM  xla_events_gt     xet  
        , PA_XLA_BC_PKT_AP_DETAIL_V  l1
        , PA_XLA_EXP_ORG_REF_V  l2
        , PA_XLA_PROJECT_REF_V  l3
        , PA_XLA_TASK_REF_V  l4
  , fnd_lookup_values    fvl108
            , (select rownum r from all_objects where rownum <= 42 and owner = p_apps_owner)
        WHERE xet.event_date between p_pad_start_date AND p_pad_end_date
          AND xet.event_class_code = C_EVENT_CLASS_CODE
            AND l1.event_id          = xet.event_id
 AND l2.expenditure_organization_id=l1.aid_expenditure_org_id AND l3.project_id=l1.aid_project_id AND l4.task_id=l1.aid_task_id   AND fvl108.lookup_type(+)         = 'BC_PKT_BURDEN_COST_FLAG'
  AND fvl108.lookup_code(+)         = l1.BURDEN_COST_FLAG
  AND fvl108.view_application_id(+) = 275
  AND fvl108.language(+)            = USERENV('LANG')
  
)
;
--
IF (C_LEVEL_STATEMENT >= g_log_level) THEN

      trace
         (p_msg      => 'number of line sources inserted = '||SQL%ROWCOUNT
         ,p_level    => C_LEVEL_STATEMENT
         ,p_module   => l_log_module);

END IF;


IF (C_LEVEL_PROCEDURE >= g_log_level) THEN
      trace
         (p_msg      => 'END of insert_sources_110'
         ,p_level    => C_LEVEL_PROCEDURE
         ,p_module   => l_log_module);
END IF;
EXCEPTION
  WHEN xla_exceptions_pkg.application_exception THEN
      IF (C_LEVEL_EXCEPTION >= g_log_level) THEN
            trace
               (p_msg      => 'ERROR: XLA_CMP_COMPILER_ERROR = '||sqlerrm
               ,p_level    => C_LEVEL_EXCEPTION
               ,p_module   => l_log_module);
      END IF;
      RAISE;
  WHEN OTHERS THEN
      IF (C_LEVEL_EXCEPTION >= g_log_level) THEN
            trace
               (p_msg      => 'ERROR: XLA_CMP_COMPILER_ERROR = '||sqlerrm
               ,p_level    => C_LEVEL_EXCEPTION
               ,p_module   => l_log_module);
       END IF;
       xla_exceptions_pkg.raise_message
           (p_location => 'XLA_00200_AAD_S_000010_BC_PKG.insert_sources_110');
END insert_sources_110;
--

---------------------------------------
--
-- PRIVATE FUNCTION
--         EventClass_110
--
----------------------------------------
--
FUNCTION EventClass_110
       (p_application_id         IN NUMBER
       ,p_base_ledger_id         IN NUMBER
       ,p_target_ledger_id       IN NUMBER
       ,p_language               IN VARCHAR2
       ,p_currency_code          IN VARCHAR2
       ,p_sla_ledger_id          IN NUMBER
       ,p_pad_start_date         IN DATE
       ,p_pad_end_date           IN DATE
       ,p_primary_ledger_id      IN NUMBER)
RETURN BOOLEAN IS
--
C_EVENT_TYPE_CODE    CONSTANT  VARCHAR2(30)  := 'PREPAY_APPLICATION_BURDEN_ALL';
C_EVENT_CLASS_CODE    CONSTANT  VARCHAR2(30) := 'PREPAY_APPLICATION_BURDEN';

l_calculate_acctd_flag   VARCHAR2(1) :='N';
l_calculate_g_l_flag     VARCHAR2(1) :='N';
--
l_array_legal_entity_id                XLA_AE_JOURNAL_ENTRY_PKG.t_array_Num;
l_array_entity_id                      XLA_AE_JOURNAL_ENTRY_PKG.t_array_Num;
l_array_entity_code                    XLA_AE_JOURNAL_ENTRY_PKG.t_array_V30L;
l_array_transaction_num                XLA_AE_JOURNAL_ENTRY_PKG.t_array_V240L;
l_array_event_id                       XLA_AE_JOURNAL_ENTRY_PKG.t_array_Num;
l_array_class_code                     XLA_AE_JOURNAL_ENTRY_PKG.t_array_V30L;
l_array_event_type                     XLA_AE_JOURNAL_ENTRY_PKG.t_array_V30L;
l_array_event_number                   XLA_AE_JOURNAL_ENTRY_PKG.t_array_Num;
l_array_event_date                     XLA_AE_JOURNAL_ENTRY_PKG.t_array_Date;
l_array_transaction_date               XLA_AE_JOURNAL_ENTRY_PKG.t_array_Date;
l_array_reference_num_1                XLA_AE_JOURNAL_ENTRY_PKG.t_array_Num;
l_array_reference_num_2                XLA_AE_JOURNAL_ENTRY_PKG.t_array_Num;
l_array_reference_num_3                XLA_AE_JOURNAL_ENTRY_PKG.t_array_Num;
l_array_reference_num_4                XLA_AE_JOURNAL_ENTRY_PKG.t_array_Num;
l_array_reference_char_1               XLA_AE_JOURNAL_ENTRY_PKG.t_array_V240L;
l_array_reference_char_2               XLA_AE_JOURNAL_ENTRY_PKG.t_array_V240L;
l_array_reference_char_3               XLA_AE_JOURNAL_ENTRY_PKG.t_array_V240L;
l_array_reference_char_4               XLA_AE_JOURNAL_ENTRY_PKG.t_array_V240L;
l_array_reference_date_1               XLA_AE_JOURNAL_ENTRY_PKG.t_array_Date;
l_array_reference_date_2               XLA_AE_JOURNAL_ENTRY_PKG.t_array_Date;
l_array_reference_date_3               XLA_AE_JOURNAL_ENTRY_PKG.t_array_Date;
l_array_reference_date_4               XLA_AE_JOURNAL_ENTRY_PKG.t_array_Date;
l_array_event_created_by               XLA_AE_JOURNAL_ENTRY_PKG.t_array_V100L;
l_array_budgetary_control_flag         XLA_AE_JOURNAL_ENTRY_PKG.t_array_V30L;
l_array_header_events                  XLA_AE_JOURNAL_ENTRY_PKG.t_array_Num;  --added
l_array_duplicate_checker              XLA_AE_JOURNAL_ENTRY_PKG.t_array_Num;  --added

l_event_id                             NUMBER;
l_previous_event_id                    NUMBER;
l_first_event_id                       NUMBER;
l_last_event_id                        NUMBER;

l_rec_acct_attrs                       XLA_AE_HEADER_PKG.t_rec_acct_attrs;
l_rec_rev_acct_attrs                   XLA_AE_LINES_PKG.t_rec_acct_attrs;
--
--
l_result                    BOOLEAN := TRUE;
l_rows                      NUMBER  := 1000;
l_event_type_name           VARCHAR2(80) := 'All';
l_event_class_name          VARCHAR2(80) := 'Burden for Prepayment Applications';
l_description               VARCHAR2(4000);
l_transaction_reversal      NUMBER;
l_ae_header_id              NUMBER;
l_array_extract_line_num    xla_ae_journal_entry_pkg.t_array_Num;
l_log_module                VARCHAR2(240);
--
l_acct_reversal_source      VARCHAR2(30);
l_trx_reversal_source       VARCHAR2(30);

l_continue_with_lines       BOOLEAN := TRUE;
--
l_acc_rev_gl_date_source    DATE;                      -- 4262811
--
type t_array_event_id is table of number index by binary_integer;

l_rec_array_event                    t_rec_array_event;
l_null_rec_array_event               t_rec_array_event;
l_array_ae_header_id                 xla_number_array_type;
l_actual_flag                        VARCHAR2(1) := NULL;
l_actual_gain_loss_ref               VARCHAR2(30) := '#####';
l_balance_type_code                  VARCHAR2(1) :=NULL;
l_gain_or_loss_ref                   VARCHAR2(30) :=NULL;

--
TYPE t_array_lookup_meaning IS TABLE OF fnd_lookup_values.meaning%TYPE INDEX BY BINARY_INTEGER;
--


TYPE t_array_source_2 IS TABLE OF PA_XLA_BC_PKT_AP_DETAIL_V.DOCUMENT_DISTRIBUTION_TYPE%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_3 IS TABLE OF PA_XLA_PROJECT_REF_V.PROJECT_NAME%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_4 IS TABLE OF PA_XLA_TASK_REF_V.TASK_NUMBER%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_5 IS TABLE OF PA_XLA_EXP_ORG_REF_V.EXPENDITURE_ORGANIZATION_ID%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_11 IS TABLE OF PA_XLA_BC_PKT_AP_DETAIL_V.AID_DIST_CCID%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_14 IS TABLE OF PA_XLA_BC_PKT_AP_DETAIL_V.BUDGET_CCID%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_21 IS TABLE OF PA_XLA_BC_PKT_AP_DETAIL_V.DISTRIBUTION_LINK_TYPE%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_30 IS TABLE OF PA_XLA_BC_PKT_AP_DETAIL_V.AID_INVOICE_DIST_ID%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_33 IS TABLE OF PA_XLA_BC_PKT_AP_DETAIL_V.AI_INVOICE_CURRENCY_CODE%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_57 IS TABLE OF PA_XLA_BC_PKT_AP_DETAIL_V.AID_AMOUNT%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_83 IS TABLE OF PA_XLA_BC_PKT_AP_DETAIL_V.DOCUMENT_TYPE%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_84 IS TABLE OF PA_XLA_PROJECT_REF_V.PROJ_BURDEN_DISPLAY_METHOD%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_85 IS TABLE OF PA_XLA_BC_PKT_AP_DETAIL_V.ACCT_REVERSAL_INDICATOR%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_86 IS TABLE OF PA_XLA_BC_PKT_AP_DETAIL_V.ALLOC_TO_APPLN_ID%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_87 IS TABLE OF PA_XLA_BC_PKT_AP_DETAIL_V.ALLOC_TO_DIST_TYPE%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_88 IS TABLE OF PA_XLA_BC_PKT_AP_DETAIL_V.ALLOC_TO_ENTITY_CODE%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_89 IS TABLE OF PA_XLA_BC_PKT_AP_DETAIL_V.ALLOC_TO_FIRST_DIST_ID%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_90 IS TABLE OF PA_XLA_BC_PKT_AP_DETAIL_V.ALLOC_TO_FIRST_SYS_TRANS_ID%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_91 IS TABLE OF PA_XLA_BC_PKT_AP_DETAIL_V.AP_APPLICATION_ID%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_92 IS TABLE OF PA_XLA_BC_PKT_AP_DETAIL_V.AP_DISTRIBUTION_TYPE%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_93 IS TABLE OF PA_XLA_BC_PKT_AP_DETAIL_V.AP_ENTITY_CODE%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_94 IS TABLE OF PA_XLA_BC_PKT_AP_DETAIL_V.AP_FIRST_DIST_ID%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_95 IS TABLE OF PA_XLA_BC_PKT_AP_DETAIL_V.AP_FIRST_SYS_TRANS_ID%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_96 IS TABLE OF PA_XLA_BC_PKT_AP_DETAIL_V.AID_EXPENDITURE_TYPE%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_97 IS TABLE OF PA_XLA_BC_PKT_AP_DETAIL_V.ENC_UPG_CR_ACCT_CLASS%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_98 IS TABLE OF PA_XLA_BC_PKT_AP_DETAIL_V.ENC_UPG_CR_ACCOUNT%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_99 IS TABLE OF PA_XLA_BC_PKT_AP_DETAIL_V.AID_BASE_AMT_NO_ROUND%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_100 IS TABLE OF PA_XLA_BC_PKT_AP_DETAIL_V.ENC_UPG_DR_ACCT_CLASS%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_101 IS TABLE OF PA_XLA_BC_PKT_AP_DETAIL_V.ENC_UPG_DR_ACCOUNT%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_102 IS TABLE OF PA_XLA_BC_PKT_AP_DETAIL_V.USE_ENC_UPG_ATTRIB_FLAG%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_103 IS TABLE OF PA_XLA_BC_PKT_AP_DETAIL_V.ACCT_REVERSAL_FIRST_DIST_ID%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_104 IS TABLE OF PA_XLA_BC_PKT_AP_DETAIL_V.AP_SECOND_DIST_ID%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_105 IS TABLE OF PA_XLA_BC_PKT_AP_DETAIL_V.ACCT_REV_DISTRIBUTION_TYPE%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_106 IS TABLE OF PA_XLA_BC_PKT_AP_DETAIL_V.ENC_UPG_CR_ENC_TYPE_ID%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_107 IS TABLE OF PA_XLA_BC_PKT_AP_DETAIL_V.ENC_UPG_DR_ENC_TYPE_ID%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_108 IS TABLE OF PA_XLA_BC_PKT_AP_DETAIL_V.BURDEN_COST_FLAG%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_109 IS TABLE OF PA_XLA_BC_PKT_AP_DETAIL_V.PA_APPLICATION_ID%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_110 IS TABLE OF PA_XLA_BC_PKT_AP_DETAIL_V.PA_DISTRIBUTION_TYPE%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_111 IS TABLE OF PA_XLA_BC_PKT_AP_DETAIL_V.PA_ENTITY_CODE%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_112 IS TABLE OF PA_XLA_BC_PKT_AP_DETAIL_V.PA_FIRST_DIST_ID%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_113 IS TABLE OF PA_XLA_BC_PKT_AP_DETAIL_V.PA_FIRST_SYS_TRANS_ID%TYPE INDEX BY BINARY_INTEGER;
TYPE t_array_source_114 IS TABLE OF PA_XLA_BC_PKT_AP_DETAIL_V.PA_SECOND_DIST_ID%TYPE INDEX BY BINARY_INTEGER;


l_array_source_2      t_array_source_2;
l_array_source_3      t_array_source_3;
l_array_source_4      t_array_source_4;
l_array_source_5      t_array_source_5;
l_array_source_11      t_array_source_11;
l_array_source_14      t_array_source_14;
l_array_source_21      t_array_source_21;
l_array_source_30      t_array_source_30;
l_array_source_33      t_array_source_33;
l_array_source_57      t_array_source_57;
l_array_source_83      t_array_source_83;
l_array_source_84      t_array_source_84;
l_array_source_85      t_array_source_85;
l_array_source_86      t_array_source_86;
l_array_source_87      t_array_source_87;
l_array_source_88      t_array_source_88;
l_array_source_89      t_array_source_89;
l_array_source_90      t_array_source_90;
l_array_source_91      t_array_source_91;
l_array_source_92      t_array_source_92;
l_array_source_93      t_array_source_93;
l_array_source_94      t_array_source_94;
l_array_source_95      t_array_source_95;
l_array_source_96      t_array_source_96;
l_array_source_97      t_array_source_97;
l_array_source_98      t_array_source_98;
l_array_source_99      t_array_source_99;
l_array_source_100      t_array_source_100;
l_array_source_101      t_array_source_101;
l_array_source_102      t_array_source_102;
l_array_source_103      t_array_source_103;
l_array_source_104      t_array_source_104;
l_array_source_105      t_array_source_105;
l_array_source_106      t_array_source_106;
l_array_source_107      t_array_source_107;
l_array_source_108      t_array_source_108;
l_array_source_108_meaning      t_array_lookup_meaning;
l_array_source_109      t_array_source_109;
l_array_source_110      t_array_source_110;
l_array_source_111      t_array_source_111;
l_array_source_112      t_array_source_112;
l_array_source_113      t_array_source_113;
l_array_source_114      t_array_source_114;

--
CURSOR header_cur
IS
SELECT /*+ leading(xet) cardinality(xet,1) */
-- Event Class Code: PREPAY_APPLICATION_BURDEN
    xet.entity_id
   ,xet.legal_entity_id
   ,xet.entity_code
   ,xet.transaction_number
   ,xet.event_id
   ,xet.event_class_code
   ,xet.event_type_code
   ,xet.event_number
   ,xet.event_date
   ,xet.transaction_date
   ,xet.reference_num_1
   ,xet.reference_num_2
   ,xet.reference_num_3
   ,xet.reference_num_4
   ,xet.reference_char_1
   ,xet.reference_char_2
   ,xet.reference_char_3
   ,xet.reference_char_4
   ,xet.reference_date_1
   ,xet.reference_date_2
   ,xet.reference_date_3
   ,xet.reference_date_4
   ,xet.event_created_by
   ,xet.budgetary_control_flag  
  FROM xla_events_gt     xet  
 WHERE xet.event_date between p_pad_start_date and p_pad_end_date
   and xet.event_class_code = C_EVENT_CLASS_CODE
   and xet.event_status_code <> 'N'  
 ORDER BY event_id
;


--
CURSOR line_cur (x_first_event_id    in number, x_last_event_id    in number)
IS
SELECT  /*+ leading(xet) cardinality(xet,1) */
-- Event Class Code: PREPAY_APPLICATION_BURDEN
    xet.entity_id
   ,xet.legal_entity_id
   ,xet.entity_code
   ,xet.transaction_number
   ,xet.event_id
   ,xet.event_class_code
   ,xet.event_type_code
   ,xet.event_number
   ,xet.event_date
   ,xet.transaction_date
   ,xet.reference_num_1
   ,xet.reference_num_2
   ,xet.reference_num_3
   ,xet.reference_num_4
   ,xet.reference_char_1
   ,xet.reference_char_2
   ,xet.reference_char_3
   ,xet.reference_char_4
   ,xet.reference_date_1
   ,xet.reference_date_2
   ,xet.reference_date_3
   ,xet.reference_date_4
   ,xet.event_created_by
   ,xet.budgetary_control_flag
 , l1.LINE_NUMBER  
  , l1.DOCUMENT_DISTRIBUTION_TYPE    source_2
  , l3.PROJECT_NAME    source_3
  , l4.TASK_NUMBER    source_4
  , l2.EXPENDITURE_ORGANIZATION_ID    source_5
  , l1.AID_DIST_CCID    source_11
  , l1.BUDGET_CCID    source_14
  , l1.DISTRIBUTION_LINK_TYPE    source_21
  , l1.AID_INVOICE_DIST_ID    source_30
  , l1.AI_INVOICE_CURRENCY_CODE    source_33
  , l1.AID_AMOUNT    source_57
  , l1.DOCUMENT_TYPE    source_83
  , l3.PROJ_BURDEN_DISPLAY_METHOD    source_84
  , l1.ACCT_REVERSAL_INDICATOR    source_85
  , l1.ALLOC_TO_APPLN_ID    source_86
  , l1.ALLOC_TO_DIST_TYPE    source_87
  , l1.ALLOC_TO_ENTITY_CODE    source_88
  , l1.ALLOC_TO_FIRST_DIST_ID    source_89
  , l1.ALLOC_TO_FIRST_SYS_TRANS_ID    source_90
  , l1.AP_APPLICATION_ID    source_91
  , l1.AP_DISTRIBUTION_TYPE    source_92
  , l1.AP_ENTITY_CODE    source_93
  , l1.AP_FIRST_DIST_ID    source_94
  , l1.AP_FIRST_SYS_TRANS_ID    source_95
  , l1.AID_EXPENDITURE_TYPE    source_96
  , l1.ENC_UPG_CR_ACCT_CLASS    source_97
  , l1.ENC_UPG_CR_ACCOUNT    source_98
  , l1.AID_BASE_AMT_NO_ROUND    source_99
  , l1.ENC_UPG_DR_ACCT_CLASS    source_100
  , l1.ENC_UPG_DR_ACCOUNT    source_101
  , l1.USE_ENC_UPG_ATTRIB_FLAG    source_102
  , l1.ACCT_REVERSAL_FIRST_DIST_ID    source_103
  , l1.AP_SECOND_DIST_ID    source_104
  , l1.ACCT_REV_DISTRIBUTION_TYPE    source_105
  , l1.ENC_UPG_CR_ENC_TYPE_ID    source_106
  , l1.ENC_UPG_DR_ENC_TYPE_ID    source_107
  , l1.BURDEN_COST_FLAG    source_108
  , fvl108.meaning   source_108_meaning
  , l1.PA_APPLICATION_ID    source_109
  , l1.PA_DISTRIBUTION_TYPE    source_110
  , l1.PA_ENTITY_CODE    source_111
  , l1.PA_FIRST_DIST_ID    source_112
  , l1.PA_FIRST_SYS_TRANS_ID    source_113
  , l1.PA_SECOND_DIST_ID    source_114
  FROM xla_events_gt     xet 
  , PA_XLA_BC_PKT_AP_DETAIL_V  l1
  , PA_XLA_EXP_ORG_REF_V  l2
  , PA_XLA_PROJECT_REF_V  l3
  , PA_XLA_TASK_REF_V  l4
  , fnd_lookup_values    fvl108
 WHERE xet.event_id between x_first_event_id and x_last_event_id
   and xet.event_date between p_pad_start_date and p_pad_end_date
   and xet.event_class_code = C_EVENT_CLASS_CODE
   and xet.event_status_code <> 'N'   AND l1.event_id      = xet.event_id
 AND l2.EXPENDITURE_ORGANIZATION_ID=l1.AID_EXPENDITURE_ORG_ID AND l3.PROJECT_ID=l1.AID_PROJECT_ID AND l4.TASK_ID=l1.AID_TASK_ID   AND fvl108.lookup_type(+)         = 'BC_PKT_BURDEN_COST_FLAG'
  AND fvl108.lookup_code(+)         = l1.BURDEN_COST_FLAG
  AND fvl108.view_application_id(+) = 275
  AND fvl108.language(+)            = USERENV('LANG')
  ;

--
BEGIN
IF g_log_enabled THEN
   l_log_module := C_DEFAULT_MODULE||'.EventClass_110';
END IF;
IF (C_LEVEL_PROCEDURE >= g_log_level) THEN
   trace
      (p_msg      => 'BEGIN of EventClass_110'
      ,p_level    => C_LEVEL_PROCEDURE
      ,p_module   => l_log_module);
END IF;

IF (C_LEVEL_STATEMENT >= g_log_level) THEN
   trace
      (p_msg      => 'p_application_id = '||p_application_id||
                     ' - p_base_ledger_id = '||p_base_ledger_id||
                     ' - p_target_ledger_id  = '||p_target_ledger_id||
                     ' - p_language = '||p_language||
                     ' - p_currency_code = '||p_currency_code||
                     ' - p_sla_ledger_id = '||p_sla_ledger_id
      ,p_level    => C_LEVEL_STATEMENT
      ,p_module   => l_log_module);
END IF;
--
-- initialze arrays
--
g_array_event.DELETE;
l_rec_array_event := l_null_rec_array_event;
--
--------------------------------------
-- 4262811 Initialze MPA Line Number
--------------------------------------
XLA_AE_HEADER_PKG.g_mpa_line_num := 0;

--

--
OPEN header_cur;
--
IF (C_LEVEL_STATEMENT >= g_log_level) THEN
   trace
   (p_msg      => 'SQL - FETCH header_cur'
   ,p_level    => C_LEVEL_STATEMENT
   ,p_module   => l_log_module);
END IF;
--
LOOP
FETCH header_cur BULK COLLECT INTO
        l_array_entity_id
      , l_array_legal_entity_id
      , l_array_entity_code
      , l_array_transaction_num
      , l_array_event_id
      , l_array_class_code
      , l_array_event_type
      , l_array_event_number
      , l_array_event_date
      , l_array_transaction_date
      , l_array_reference_num_1
      , l_array_reference_num_2
      , l_array_reference_num_3
      , l_array_reference_num_4
      , l_array_reference_char_1
      , l_array_reference_char_2
      , l_array_reference_char_3
      , l_array_reference_char_4
      , l_array_reference_date_1
      , l_array_reference_date_2
      , l_array_reference_date_3
      , l_array_reference_date_4
      , l_array_event_created_by
      , l_array_budgetary_control_flag 
      LIMIT l_rows;
--
IF (C_LEVEL_EVENT >= g_log_level) THEN
   trace
   (p_msg      => '# rows extracted from header extract objects = '||TO_CHAR(header_cur%ROWCOUNT)
   ,p_level    => C_LEVEL_EVENT
   ,p_module   => l_log_module);
END IF;
--
EXIT WHEN l_array_entity_id.COUNT = 0;

-- initialize arrays
XLA_AE_HEADER_PKG.g_rec_header_new        := NULL;
XLA_AE_LINES_PKG.g_rec_lines              := NULL;

--
-- Bug 4458708
--
XLA_AE_LINES_PKG.g_LineNumber := 0;


-- 4262811 - when creating Accrual Reversal or MPA, use g_last_hdr_idx to increment for next header id
g_last_hdr_idx := l_array_event_id.LAST;
--
-- loop for the headers. Each iteration is for each header extract row
-- fetched in header cursor
--
FOR hdr_idx IN l_array_event_id.FIRST .. l_array_event_id.LAST LOOP

--
-- set event info as cache for other routines to refer event attributes
--
XLA_AE_JOURNAL_ENTRY_PKG.set_event_info
   (p_application_id           => p_application_id
   ,p_primary_ledger_id        => p_primary_ledger_id
   ,p_base_ledger_id           => p_base_ledger_id
   ,p_target_ledger_id         => p_target_ledger_id
   ,p_entity_id                => l_array_entity_id(hdr_idx)
   ,p_legal_entity_id          => l_array_legal_entity_id(hdr_idx)
   ,p_entity_code              => l_array_entity_code(hdr_idx)
   ,p_transaction_num          => l_array_transaction_num(hdr_idx)
   ,p_event_id                 => l_array_event_id(hdr_idx)
   ,p_event_class_code         => l_array_class_code(hdr_idx)
   ,p_event_type_code          => l_array_event_type(hdr_idx)
   ,p_event_number             => l_array_event_number(hdr_idx)
   ,p_event_date               => l_array_event_date(hdr_idx)
   ,p_transaction_date         => l_array_transaction_date(hdr_idx)
   ,p_reference_num_1          => l_array_reference_num_1(hdr_idx)
   ,p_reference_num_2          => l_array_reference_num_2(hdr_idx)
   ,p_reference_num_3          => l_array_reference_num_3(hdr_idx)
   ,p_reference_num_4          => l_array_reference_num_4(hdr_idx)
   ,p_reference_char_1         => l_array_reference_char_1(hdr_idx)
   ,p_reference_char_2         => l_array_reference_char_2(hdr_idx)
   ,p_reference_char_3         => l_array_reference_char_3(hdr_idx)
   ,p_reference_char_4         => l_array_reference_char_4(hdr_idx)
   ,p_reference_date_1         => l_array_reference_date_1(hdr_idx)
   ,p_reference_date_2         => l_array_reference_date_2(hdr_idx)
   ,p_reference_date_3         => l_array_reference_date_3(hdr_idx)
   ,p_reference_date_4         => l_array_reference_date_4(hdr_idx)
   ,p_event_created_by         => l_array_event_created_by(hdr_idx)
   ,p_budgetary_control_flag   => l_array_budgetary_control_flag(hdr_idx));

--
-- set the status of entry to C_VALID (0)
--
XLA_AE_JOURNAL_ENTRY_PKG.g_global_status    := XLA_AE_JOURNAL_ENTRY_PKG.C_VALID;

--
-- initialize a row for ae header
--
XLA_AE_HEADER_PKG.InitHeader(hdr_idx);

l_event_id := l_array_event_id(hdr_idx);

--
-- storing the hdr_idx for event. May be used by line cursor.
--
g_array_event(l_event_id).array_value_num('header_index') := hdr_idx;

--
-- store sources from header extract. This can be improved to
-- store only those sources from header extract that may be used in lines
--


--
-- initilaize the status of ae headers for diffrent balance types
-- the status is initialised to C_NOT_CREATED (2)
--
--g_array_event(l_event_id).array_value_num('actual_je_status') := XLA_AE_JOURNAL_ENTRY_PKG.C_NOT_CREATED;
--g_array_event(l_event_id).array_value_num('budget_je_status') := XLA_AE_JOURNAL_ENTRY_PKG.C_NOT_CREATED;
--g_array_event(l_event_id).array_value_num('encumbrance_je_status') := XLA_AE_JOURNAL_ENTRY_PKG.C_NOT_CREATED;

--
-- call api to validate and store accounting attributes for header
--

------------------------------------------------------------
-- Accrual Reversal : to get date for Standard Source (NONE)
------------------------------------------------------------
l_acc_rev_gl_date_source := NULL;

     l_rec_acct_attrs.array_acct_attr_code(1)   := 'GL_DATE';
      l_rec_acct_attrs.array_date_value(1) := 
xla_ae_sources_pkg.GetSystemSourceDate(
   p_source_code           => 'XLA_EVENT_DATE'
 , p_source_type_code      => 'Y'
 , p_source_application_id =>  602
);


XLA_AE_HEADER_PKG.SetHdrAcctAttrs(l_rec_acct_attrs);

XLA_AE_HEADER_PKG.SetJeCategoryName;

XLA_AE_HEADER_PKG.g_rec_header_new.array_event_type_code(hdr_idx)  := l_array_event_type(hdr_idx);
XLA_AE_HEADER_PKG.g_rec_header_new.array_event_id(hdr_idx)         := l_array_event_id(hdr_idx);
XLA_AE_HEADER_PKG.g_rec_header_new.array_entity_id(hdr_idx)        := l_array_entity_id(hdr_idx);
XLA_AE_HEADER_PKG.g_rec_header_new.array_event_number(hdr_idx)     := l_array_event_number(hdr_idx);
XLA_AE_HEADER_PKG.g_rec_header_new.array_target_ledger_id(hdr_idx) := p_target_ledger_id;


-- No header level analytical criteria

--
--accounting attribute enhancement, bug 3612931
--
l_trx_reversal_source := SUBSTR(NULL, 1,30);

IF NVL(l_trx_reversal_source, 'N') NOT IN ('N','Y') THEN
   xla_ae_journal_entry_pkg.g_global_status      :=  xla_ae_journal_entry_pkg.C_INVALID;

   xla_accounting_err_pkg.build_message
      (p_appli_s_name            => 'XLA'
      ,p_msg_name                => 'XLA_AP_INVALID_HDR_ATTR'
      ,p_token_1                 => 'ACCT_ATTR_NAME'
      ,p_value_1                 => xla_ae_sources_pkg.GetAccountingSourceName('TRX_ACCT_REVERSAL_OPTION')
      ,p_token_2                 => 'PRODUCT_NAME'
      ,p_value_2                 => xla_ae_journal_entry_pkg.g_cache_event.application_name
      ,p_entity_id               => xla_ae_journal_entry_pkg.g_cache_event.entity_id
      ,p_event_id                => xla_ae_journal_entry_pkg.g_cache_event.event_id
      ,p_ledger_id               => xla_ae_journal_entry_pkg.g_cache_event.target_ledger_id);

ELSIF NVL(l_trx_reversal_source, 'N') = 'Y' THEN
   --
   -- following sets the accounting attributes needed to reverse
   -- accounting for a distributeion
   --
   xla_ae_lines_pkg.SetTrxReversalAttrs
      (p_event_id              => l_event_id
      ,p_gl_date               => XLA_AE_HEADER_PKG.g_rec_header_new.array_gl_date(hdr_idx)
      ,p_trx_reversal_source   => l_trx_reversal_source);

END IF;


----------------------------------------------------------------
-- 4262811 -  update the header statuses to invalid in need be
----------------------------------------------------------------
--
XLA_AE_JOURNAL_ENTRY_PKG.UpdateJournalEntryStatus (p_hdr_idx => hdr_idx);


  -----------------------------------------------
  -- No accrual reversal for the event class/type
  -----------------------------------------------
----------------------------------------------------------------

--
-- this ends the header loop iteration for one bulk fetch
--
END LOOP;

l_first_event_id   := l_array_event_id(l_array_event_id.FIRST);
l_last_event_id    := l_array_event_id(l_array_event_id.LAST);

--
-- insert dummy rows into lines gt table that were created due to
-- transaction reversals
--
IF XLA_AE_LINES_PKG.g_rec_lines.array_ae_header_id.COUNT > 0 THEN
   l_result := XLA_AE_LINES_PKG.InsertLines;
END IF;

--
-- reset the temp_line_num for each set of events fetched from header
-- cursor rather than doing it for each new event in line cursor
-- Bug 3939231
--
xla_ae_lines_pkg.g_temp_line_num := 0;



--
OPEN line_cur(x_first_event_id  => l_first_event_id, x_last_event_id  => l_last_event_id);
--
--
IF (C_LEVEL_STATEMENT >= g_log_level) THEN

      trace
         (p_msg      => 'SQL - FETCH line_cur'
         ,p_level    => C_LEVEL_STATEMENT
         ,p_module   => l_log_module);

END IF;
--
--
LOOP
  --
  FETCH line_cur BULK COLLECT INTO
        l_array_entity_id
      , l_array_legal_entity_id
      , l_array_entity_code
      , l_array_transaction_num
      , l_array_event_id
      , l_array_class_code
      , l_array_event_type
      , l_array_event_number
      , l_array_event_date
      , l_array_transaction_date
      , l_array_reference_num_1
      , l_array_reference_num_2
      , l_array_reference_num_3
      , l_array_reference_num_4
      , l_array_reference_char_1
      , l_array_reference_char_2
      , l_array_reference_char_3
      , l_array_reference_char_4
      , l_array_reference_date_1
      , l_array_reference_date_2
      , l_array_reference_date_3
      , l_array_reference_date_4
      , l_array_event_created_by
      , l_array_budgetary_control_flag
      , l_array_extract_line_num 
      , l_array_source_2
      , l_array_source_3
      , l_array_source_4
      , l_array_source_5
      , l_array_source_11
      , l_array_source_14
      , l_array_source_21
      , l_array_source_30
      , l_array_source_33
      , l_array_source_57
      , l_array_source_83
      , l_array_source_84
      , l_array_source_85
      , l_array_source_86
      , l_array_source_87
      , l_array_source_88
      , l_array_source_89
      , l_array_source_90
      , l_array_source_91
      , l_array_source_92
      , l_array_source_93
      , l_array_source_94
      , l_array_source_95
      , l_array_source_96
      , l_array_source_97
      , l_array_source_98
      , l_array_source_99
      , l_array_source_100
      , l_array_source_101
      , l_array_source_102
      , l_array_source_103
      , l_array_source_104
      , l_array_source_105
      , l_array_source_106
      , l_array_source_107
      , l_array_source_108
      , l_array_source_108_meaning
      , l_array_source_109
      , l_array_source_110
      , l_array_source_111
      , l_array_source_112
      , l_array_source_113
      , l_array_source_114
      LIMIT l_rows;

  --
  IF (C_LEVEL_EVENT >= g_log_level) THEN
            trace
               (p_msg      => '# rows extracted from line extract objects = '||TO_CHAR(line_cur%ROWCOUNT)
               ,p_level    => C_LEVEL_EVENT
               ,p_module   => l_log_module);
  END IF;
  --
  EXIT WHEN l_array_entity_id.count = 0;

  XLA_AE_LINES_PKG.g_rec_lines := null;

--
-- Bug 4458708
--
XLA_AE_LINES_PKG.g_LineNumber := 0;
--
--

FOR Idx IN 1..l_array_event_id.count LOOP
   --
   -- 5648433 (move l_event_id out of IF statement)  set l_event_id to be used inside IF condition
   --
   l_event_id := l_array_event_id(idx);  -- 5648433

   --
   -- Bug 4872078 - Do nothing if the event is meant for transaction reversal
   --

   IF NVL(xla_ae_header_pkg.g_rec_header_new.array_trx_acct_reversal_option
             (g_array_event(l_event_id).array_value_num('header_index'))
         ,'N'
         ) <> 'Y'
   THEN
      IF (C_LEVEL_STATEMENT >= g_log_level) THEN
         trace
            (p_msg      => 'Trancaction revesal option is not Y '
            ,p_level    => C_LEVEL_STATEMENT
            ,p_module   => l_log_module);
      END IF;

--
-- set the XLA_AE_JOURNAL_ENTRY_PKG.g_global_status to C_VALID (0)
--
XLA_AE_JOURNAL_ENTRY_PKG.g_global_status := XLA_AE_JOURNAL_ENTRY_PKG.C_VALID;
--
-- set event info as cache for other routines to refer event attributes
--

IF l_event_id <> NVL(l_previous_event_id, -1) THEN
   l_previous_event_id := l_event_id;

   XLA_AE_JOURNAL_ENTRY_PKG.set_event_info
      (p_application_id           => p_application_id
      ,p_primary_ledger_id        => p_primary_ledger_id
      ,p_base_ledger_id           => p_base_ledger_id
      ,p_target_ledger_id         => p_target_ledger_id
      ,p_entity_id                => l_array_entity_id(Idx)
      ,p_legal_entity_id          => l_array_legal_entity_id(Idx)
      ,p_entity_code              => l_array_entity_code(Idx)
      ,p_transaction_num          => l_array_transaction_num(Idx)
      ,p_event_id                 => l_array_event_id(Idx)
      ,p_event_class_code         => l_array_class_code(Idx)
      ,p_event_type_code          => l_array_event_type(Idx)
      ,p_event_number             => l_array_event_number(Idx)
      ,p_event_date               => l_array_event_date(Idx)
      ,p_transaction_date         => l_array_transaction_date(Idx)
      ,p_reference_num_1          => l_array_reference_num_1(Idx)
      ,p_reference_num_2          => l_array_reference_num_2(Idx)
      ,p_reference_num_3          => l_array_reference_num_3(Idx)
      ,p_reference_num_4          => l_array_reference_num_4(Idx)
      ,p_reference_char_1         => l_array_reference_char_1(Idx)
      ,p_reference_char_2         => l_array_reference_char_2(Idx)
      ,p_reference_char_3         => l_array_reference_char_3(Idx)
      ,p_reference_char_4         => l_array_reference_char_4(Idx)
      ,p_reference_date_1         => l_array_reference_date_1(Idx)
      ,p_reference_date_2         => l_array_reference_date_2(Idx)
      ,p_reference_date_3         => l_array_reference_date_3(Idx)
      ,p_reference_date_4         => l_array_reference_date_4(Idx)
      ,p_event_created_by         => l_array_event_created_by(Idx)
      ,p_budgetary_control_flag   => l_array_budgetary_control_flag(Idx));
       --
END IF;



--
xla_ae_lines_pkg.SetExtractLine(p_extract_line => l_array_extract_line_num(Idx));

l_acct_reversal_source := SUBSTR(l_array_source_85(Idx), 1,30);

IF l_continue_with_lines THEN
   IF NVL(l_acct_reversal_source, 'N') NOT IN ('N','Y','B') THEN
      xla_ae_journal_entry_pkg.g_global_status      :=  xla_ae_journal_entry_pkg.C_INVALID;

      xla_accounting_err_pkg.build_message
         (p_appli_s_name            => 'XLA'
         ,p_msg_name                => 'XLA_AP_INVALID_REVERSAL_OPTION'
         ,p_token_1                 => 'LINE_NUMBER'
         ,p_value_1                 => l_array_extract_line_num(Idx)
         ,p_token_2                 => 'PRODUCT_NAME'
         ,p_value_2                 => xla_ae_journal_entry_pkg.g_cache_event.application_name
         ,p_entity_id               => xla_ae_journal_entry_pkg.g_cache_event.entity_id
         ,p_event_id                => xla_ae_journal_entry_pkg.g_cache_event.event_id
         ,p_ledger_id               => xla_ae_journal_entry_pkg.g_cache_event.target_ledger_id);

   ELSIF NVL(l_acct_reversal_source, 'N') IN ('Y','B') THEN
      --
      -- following sets the accounting attributes needed to reverse
      -- accounting for a distributeion
      --

      --
      -- 5217187
      --
      l_rec_rev_acct_attrs.array_acct_attr_code(1):= 'GL_DATE';
      l_rec_rev_acct_attrs.array_date_value(1) := XLA_AE_HEADER_PKG.g_rec_header_new.array_gl_date(
                                       g_array_event(l_event_id).array_value_num('header_index'));
      --
      --

      l_rec_rev_acct_attrs.array_acct_attr_code(2) := 'ACCOUNTING_REVERSAL_OPTION';
      l_rec_rev_acct_attrs.array_char_value(2)  := l_array_source_85(Idx);
      l_rec_rev_acct_attrs.array_acct_attr_code(3) := 'DISTRIBUTION_IDENTIFIER_1';
      l_rec_rev_acct_attrs.array_num_value(3)  := l_array_source_30(Idx);
      l_rec_rev_acct_attrs.array_acct_attr_code(4) := 'DISTRIBUTION_IDENTIFIER_2';
      l_rec_rev_acct_attrs.array_char_value(4)  := l_array_source_96(Idx);
      l_rec_rev_acct_attrs.array_acct_attr_code(5) := 'DISTRIBUTION_TYPE';
      l_rec_rev_acct_attrs.array_char_value(5)  := l_array_source_21(Idx);
      l_rec_rev_acct_attrs.array_acct_attr_code(6) := 'ENC_UPG_CR_ACCT_CLASS';
      l_rec_rev_acct_attrs.array_char_value(6)  := l_array_source_97(Idx);
      l_rec_rev_acct_attrs.array_acct_attr_code(7) := 'ENC_UPG_CR_CCID';
      l_rec_rev_acct_attrs.array_num_value(7)  := l_array_source_98(Idx);
      l_rec_rev_acct_attrs.array_acct_attr_code(8) := 'ENC_UPG_CR_ENTERED_AMT';
      l_rec_rev_acct_attrs.array_num_value(8)  := l_array_source_57(Idx);
      l_rec_rev_acct_attrs.array_acct_attr_code(9) := 'ENC_UPG_CR_ENTERED_CURR';
      l_rec_rev_acct_attrs.array_char_value(9)  := l_array_source_33(Idx);
      l_rec_rev_acct_attrs.array_acct_attr_code(10) := 'ENC_UPG_CR_LEDGER_AMT';
      l_rec_rev_acct_attrs.array_num_value(10)  := l_array_source_99(Idx);
      l_rec_rev_acct_attrs.array_acct_attr_code(11) := 'ENC_UPG_DR_ACCT_CLASS';
      l_rec_rev_acct_attrs.array_char_value(11)  := l_array_source_100(Idx);
      l_rec_rev_acct_attrs.array_acct_attr_code(12) := 'ENC_UPG_DR_CCID';
      l_rec_rev_acct_attrs.array_num_value(12)  := l_array_source_101(Idx);
      l_rec_rev_acct_attrs.array_acct_attr_code(13) := 'ENC_UPG_DR_ENTERED_AMT';
      l_rec_rev_acct_attrs.array_num_value(13)  := l_array_source_57(Idx);
      l_rec_rev_acct_attrs.array_acct_attr_code(14) := 'ENC_UPG_DR_ENTERED_CURR';
      l_rec_rev_acct_attrs.array_char_value(14)  := l_array_source_33(Idx);
      l_rec_rev_acct_attrs.array_acct_attr_code(15) := 'ENC_UPG_DR_LEDGER_AMT';
      l_rec_rev_acct_attrs.array_num_value(15)  := l_array_source_99(Idx);
      l_rec_rev_acct_attrs.array_acct_attr_code(16) := 'ENC_UPG_OPTION';
      l_rec_rev_acct_attrs.array_char_value(16)  := l_array_source_102(Idx);
      l_rec_rev_acct_attrs.array_acct_attr_code(17) := 'REVERSED_DISTRIBUTION_ID1';
      l_rec_rev_acct_attrs.array_num_value(17)  := l_array_source_103(Idx);
      l_rec_rev_acct_attrs.array_acct_attr_code(18) := 'REVERSED_DISTRIBUTION_ID2';
      l_rec_rev_acct_attrs.array_char_value(18)  := l_array_source_104(Idx);
      l_rec_rev_acct_attrs.array_acct_attr_code(19) := 'REVERSED_DISTRIBUTION_TYPE';
      l_rec_rev_acct_attrs.array_char_value(19)  := l_array_source_105(Idx);
      l_rec_rev_acct_attrs.array_acct_attr_code(20) := 'UPG_CR_ENC_TYPE_ID';
      l_rec_rev_acct_attrs.array_num_value(20)  := l_array_source_106(Idx);
      l_rec_rev_acct_attrs.array_acct_attr_code(21) := 'UPG_DR_ENC_TYPE_ID';
      l_rec_rev_acct_attrs.array_num_value(21)  := l_array_source_107(Idx);


      xla_ae_lines_pkg.SetAcctReversalAttrs
         (p_event_id             => l_event_id
         ,p_rec_acct_attrs       => l_rec_rev_acct_attrs
         ,p_calculate_acctd_flag => l_calculate_acctd_flag
         ,p_calculate_g_l_flag   => l_calculate_g_l_flag);
   END IF;

   IF NVL(l_acct_reversal_source, 'N') IN ('N','B') THEN
       l_actual_flag := NULL;  l_actual_gain_loss_ref := '#####';

--
AcctLineType_87 (
 p_application_id  => p_application_id
 ,p_event_id     => l_event_id
 ,p_calculate_acctd_flag => l_calculate_acctd_flag
 ,p_calculate_g_l_flag => l_calculate_g_l_flag
 ,p_actual_flag => l_actual_flag
 ,p_balance_type_code => l_balance_type_code
 ,p_gain_or_loss_ref=> l_gain_or_loss_ref
 
 , p_source_2 => l_array_source_2(Idx)
 , p_source_3 => l_array_source_3(Idx)
 , p_source_4 => l_array_source_4(Idx)
 , p_source_5 => l_array_source_5(Idx)
 , p_source_21 => l_array_source_21(Idx)
 , p_source_30 => l_array_source_30(Idx)
 , p_source_33 => l_array_source_33(Idx)
 , p_source_57 => l_array_source_57(Idx)
 , p_source_83 => l_array_source_83(Idx)
 , p_source_84 => l_array_source_84(Idx)
 , p_source_85 => l_array_source_85(Idx)
 , p_source_86 => l_array_source_86(Idx)
 , p_source_87 => l_array_source_87(Idx)
 , p_source_88 => l_array_source_88(Idx)
 , p_source_89 => l_array_source_89(Idx)
 , p_source_90 => l_array_source_90(Idx)
 , p_source_91 => l_array_source_91(Idx)
 , p_source_92 => l_array_source_92(Idx)
 , p_source_93 => l_array_source_93(Idx)
 , p_source_94 => l_array_source_94(Idx)
 , p_source_95 => l_array_source_95(Idx)
 , p_source_96 => l_array_source_96(Idx)
 , p_source_97 => l_array_source_97(Idx)
 , p_source_98 => l_array_source_98(Idx)
 , p_source_99 => l_array_source_99(Idx)
 , p_source_100 => l_array_source_100(Idx)
 , p_source_101 => l_array_source_101(Idx)
 , p_source_102 => l_array_source_102(Idx)
 , p_source_103 => l_array_source_103(Idx)
 , p_source_104 => l_array_source_104(Idx)
 , p_source_105 => l_array_source_105(Idx)
 , p_source_106 => l_array_source_106(Idx)
 , p_source_107 => l_array_source_107(Idx)
 );
If(l_balance_type_code = 'A') THEN
  l_actual_gain_loss_ref := l_gain_or_loss_ref;
END IF;

--


--
AcctLineType_88 (
 p_application_id  => p_application_id
 ,p_event_id     => l_event_id
 ,p_calculate_acctd_flag => l_calculate_acctd_flag
 ,p_calculate_g_l_flag => l_calculate_g_l_flag
 ,p_actual_flag => l_actual_flag
 ,p_balance_type_code => l_balance_type_code
 ,p_gain_or_loss_ref=> l_gain_or_loss_ref
 
 , p_source_2 => l_array_source_2(Idx)
 , p_source_3 => l_array_source_3(Idx)
 , p_source_4 => l_array_source_4(Idx)
 , p_source_5 => l_array_source_5(Idx)
 , p_source_21 => l_array_source_21(Idx)
 , p_source_30 => l_array_source_30(Idx)
 , p_source_33 => l_array_source_33(Idx)
 , p_source_57 => l_array_source_57(Idx)
 , p_source_83 => l_array_source_83(Idx)
 , p_source_84 => l_array_source_84(Idx)
 , p_source_85 => l_array_source_85(Idx)
 , p_source_86 => l_array_source_86(Idx)
 , p_source_87 => l_array_source_87(Idx)
 , p_source_88 => l_array_source_88(Idx)
 , p_source_89 => l_array_source_89(Idx)
 , p_source_90 => l_array_source_90(Idx)
 , p_source_91 => l_array_source_91(Idx)
 , p_source_92 => l_array_source_92(Idx)
 , p_source_93 => l_array_source_93(Idx)
 , p_source_94 => l_array_source_94(Idx)
 , p_source_95 => l_array_source_95(Idx)
 , p_source_96 => l_array_source_96(Idx)
 , p_source_97 => l_array_source_97(Idx)
 , p_source_98 => l_array_source_98(Idx)
 , p_source_99 => l_array_source_99(Idx)
 , p_source_100 => l_array_source_100(Idx)
 , p_source_101 => l_array_source_101(Idx)
 , p_source_102 => l_array_source_102(Idx)
 , p_source_103 => l_array_source_103(Idx)
 , p_source_104 => l_array_source_104(Idx)
 , p_source_105 => l_array_source_105(Idx)
 , p_source_106 => l_array_source_106(Idx)
 , p_source_107 => l_array_source_107(Idx)
 , p_source_108 => l_array_source_108(Idx)
 , p_source_108_meaning => l_array_source_108_meaning(Idx)
 );
If(l_balance_type_code = 'A') THEN
  l_actual_gain_loss_ref := l_gain_or_loss_ref;
END IF;

--


--
AcctLineType_89 (
 p_application_id  => p_application_id
 ,p_event_id     => l_event_id
 ,p_calculate_acctd_flag => l_calculate_acctd_flag
 ,p_calculate_g_l_flag => l_calculate_g_l_flag
 ,p_actual_flag => l_actual_flag
 ,p_balance_type_code => l_balance_type_code
 ,p_gain_or_loss_ref=> l_gain_or_loss_ref
 
 , p_source_2 => l_array_source_2(Idx)
 , p_source_3 => l_array_source_3(Idx)
 , p_source_4 => l_array_source_4(Idx)
 , p_source_5 => l_array_source_5(Idx)
 , p_source_11 => l_array_source_11(Idx)
 , p_source_14 => l_array_source_14(Idx)
 , p_source_21 => l_array_source_21(Idx)
 , p_source_30 => l_array_source_30(Idx)
 , p_source_33 => l_array_source_33(Idx)
 , p_source_57 => l_array_source_57(Idx)
 , p_source_83 => l_array_source_83(Idx)
 , p_source_84 => l_array_source_84(Idx)
 , p_source_85 => l_array_source_85(Idx)
 , p_source_86 => l_array_source_86(Idx)
 , p_source_87 => l_array_source_87(Idx)
 , p_source_88 => l_array_source_88(Idx)
 , p_source_89 => l_array_source_89(Idx)
 , p_source_90 => l_array_source_90(Idx)
 , p_source_91 => l_array_source_91(Idx)
 , p_source_92 => l_array_source_92(Idx)
 , p_source_93 => l_array_source_93(Idx)
 , p_source_94 => l_array_source_94(Idx)
 , p_source_95 => l_array_source_95(Idx)
 , p_source_96 => l_array_source_96(Idx)
 , p_source_97 => l_array_source_97(Idx)
 , p_source_98 => l_array_source_98(Idx)
 , p_source_99 => l_array_source_99(Idx)
 , p_source_100 => l_array_source_100(Idx)
 , p_source_101 => l_array_source_101(Idx)
 , p_source_102 => l_array_source_102(Idx)
 , p_source_103 => l_array_source_103(Idx)
 , p_source_104 => l_array_source_104(Idx)
 , p_source_105 => l_array_source_105(Idx)
 , p_source_106 => l_array_source_106(Idx)
 , p_source_107 => l_array_source_107(Idx)
 , p_source_108 => l_array_source_108(Idx)
 , p_source_108_meaning => l_array_source_108_meaning(Idx)
 );
If(l_balance_type_code = 'A') THEN
  l_actual_gain_loss_ref := l_gain_or_loss_ref;
END IF;

--


--
AcctLineType_95 (
 p_application_id  => p_application_id
 ,p_event_id     => l_event_id
 ,p_calculate_acctd_flag => l_calculate_acctd_flag
 ,p_calculate_g_l_flag => l_calculate_g_l_flag
 ,p_actual_flag => l_actual_flag
 ,p_balance_type_code => l_balance_type_code
 ,p_gain_or_loss_ref=> l_gain_or_loss_ref
 
 , p_source_2 => l_array_source_2(Idx)
 , p_source_3 => l_array_source_3(Idx)
 , p_source_4 => l_array_source_4(Idx)
 , p_source_5 => l_array_source_5(Idx)
 , p_source_21 => l_array_source_21(Idx)
 , p_source_30 => l_array_source_30(Idx)
 , p_source_33 => l_array_source_33(Idx)
 , p_source_57 => l_array_source_57(Idx)
 , p_source_83 => l_array_source_83(Idx)
 , p_source_85 => l_array_source_85(Idx)
 , p_source_86 => l_array_source_86(Idx)
 , p_source_87 => l_array_source_87(Idx)
 , p_source_88 => l_array_source_88(Idx)
 , p_source_89 => l_array_source_89(Idx)
 , p_source_90 => l_array_source_90(Idx)
 , p_source_96 => l_array_source_96(Idx)
 , p_source_97 => l_array_source_97(Idx)
 , p_source_98 => l_array_source_98(Idx)
 , p_source_99 => l_array_source_99(Idx)
 , p_source_100 => l_array_source_100(Idx)
 , p_source_101 => l_array_source_101(Idx)
 , p_source_102 => l_array_source_102(Idx)
 , p_source_103 => l_array_source_103(Idx)
 , p_source_104 => l_array_source_104(Idx)
 , p_source_105 => l_array_source_105(Idx)
 , p_source_106 => l_array_source_106(Idx)
 , p_source_107 => l_array_source_107(Idx)
 , p_source_109 => l_array_source_109(Idx)
 , p_source_110 => l_array_source_110(Idx)
 , p_source_111 => l_array_source_111(Idx)
 , p_source_112 => l_array_source_112(Idx)
 , p_source_113 => l_array_source_113(Idx)
 , p_source_114 => l_array_source_114(Idx)
 );
If(l_balance_type_code = 'A') THEN
  l_actual_gain_loss_ref := l_gain_or_loss_ref;
END IF;

--


--
AcctLineType_98 (
 p_application_id  => p_application_id
 ,p_event_id     => l_event_id
 ,p_calculate_acctd_flag => l_calculate_acctd_flag
 ,p_calculate_g_l_flag => l_calculate_g_l_flag
 ,p_actual_flag => l_actual_flag
 ,p_balance_type_code => l_balance_type_code
 ,p_gain_or_loss_ref=> l_gain_or_loss_ref
 
 , p_source_2 => l_array_source_2(Idx)
 , p_source_3 => l_array_source_3(Idx)
 , p_source_4 => l_array_source_4(Idx)
 , p_source_5 => l_array_source_5(Idx)
 , p_source_21 => l_array_source_21(Idx)
 , p_source_30 => l_array_source_30(Idx)
 , p_source_33 => l_array_source_33(Idx)
 , p_source_57 => l_array_source_57(Idx)
 , p_source_83 => l_array_source_83(Idx)
 , p_source_85 => l_array_source_85(Idx)
 , p_source_86 => l_array_source_86(Idx)
 , p_source_87 => l_array_source_87(Idx)
 , p_source_88 => l_array_source_88(Idx)
 , p_source_89 => l_array_source_89(Idx)
 , p_source_90 => l_array_source_90(Idx)
 , p_source_96 => l_array_source_96(Idx)
 , p_source_97 => l_array_source_97(Idx)
 , p_source_98 => l_array_source_98(Idx)
 , p_source_99 => l_array_source_99(Idx)
 , p_source_100 => l_array_source_100(Idx)
 , p_source_101 => l_array_source_101(Idx)
 , p_source_102 => l_array_source_102(Idx)
 , p_source_103 => l_array_source_103(Idx)
 , p_source_104 => l_array_source_104(Idx)
 , p_source_105 => l_array_source_105(Idx)
 , p_source_106 => l_array_source_106(Idx)
 , p_source_107 => l_array_source_107(Idx)
 , p_source_109 => l_array_source_109(Idx)
 , p_source_110 => l_array_source_110(Idx)
 , p_source_111 => l_array_source_111(Idx)
 , p_source_112 => l_array_source_112(Idx)
 , p_source_113 => l_array_source_113(Idx)
 , p_source_114 => l_array_source_114(Idx)
 );
If(l_balance_type_code = 'A') THEN
  l_actual_gain_loss_ref := l_gain_or_loss_ref;
END IF;

--

      -- only execute it if calculate g/l flag is yes, and primary or secondary ledger
      -- or secondary ledger that has different currency with primary
      -- or alc that is calculated by sla
      IF (((l_calculate_g_l_flag = 'Y' AND XLA_AE_JOURNAL_ENTRY_PKG.g_cache_ledgers_info.ledger_category_code <> 'ALC') or
            (XLA_AE_JOURNAL_ENTRY_PKG.g_cache_ledgers_info.ledger_category_code in ('ALC', 'SECONDARY') AND XLA_AE_JOURNAL_ENTRY_PKG.g_cache_ledgers_info.calculate_amts_flag='Y'))

--      IF((l_calculate_g_l_flag='Y' or XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.target_ledger_id <>
--                    XLA_AE_JOURNAL_ENTRY_PKG.g_cache_event.ledger_id)
          AND (l_actual_flag = 'A')) THEN
        XLA_AE_LINES_PKG.CreateGainOrLossLines(
          p_event_id         => xla_ae_journal_entry_pkg.g_cache_event.event_id
         ,p_application_id   => p_application_id
         ,p_amb_context_code => 'DEFAULT'
         ,p_entity_code      => xla_ae_journal_entry_pkg.g_cache_event.entity_code
         ,p_event_class_code => C_EVENT_CLASS_CODE
         ,p_event_type_code  => C_EVENT_TYPE_CODE
         
         ,p_gain_ccid        => -1
         ,p_loss_ccid        => -1

         ,p_actual_flag      => l_actual_flag
         ,p_enc_flag         => null
         ,p_actual_g_l_ref   => l_actual_gain_loss_ref
         ,p_enc_g_l_ref      => null
         );
      END IF;
   END IF;
END IF;

   ELSE
      --
      -- Bug 4872078 - Do nothing if the event is meant for transaction reversal
      --
      IF (C_LEVEL_STATEMENT >= g_log_level) THEN
         trace
            (p_msg      => 'Trancaction revesal option is Y'
            ,p_level    => C_LEVEL_STATEMENT
            ,p_module   => l_log_module);
      END IF;
   END IF;

END LOOP;
l_result := XLA_AE_LINES_PKG.InsertLines ;
end loop;
close line_cur;


--
-- insert headers into xla_ae_headers_gt table
--
l_result := XLA_AE_HEADER_PKG.InsertHeaders ;

-- insert into errors table here.

END LOOP;

--
-- 4865292
--
-- Compare g_hdr_extract_count with event count in
-- CreateHeadersAndLines.
--
g_hdr_extract_count := g_hdr_extract_count + header_cur%ROWCOUNT;

IF (C_LEVEL_STATEMENT >= g_log_level) THEN
   trace (p_msg     => '# rows extracted from header extract objects '
                    || ' (running total): '
                    || g_hdr_extract_count
         ,p_level   => C_LEVEL_STATEMENT
         ,p_module  => l_log_module);
END IF;

CLOSE header_cur;
--

--
IF (C_LEVEL_PROCEDURE >= g_log_level) THEN
   trace
      (p_msg      => 'END of EventClass_110'
      ,p_level    => C_LEVEL_PROCEDURE
      ,p_module   => l_log_module);
END IF;
--
RETURN l_result;
EXCEPTION
WHEN xla_exceptions_pkg.application_exception THEN
   
IF header_cur%ISOPEN THEN CLOSE header_cur; END IF;

   
IF line_cur%ISOPEN   THEN CLOSE line_cur;   END IF;

   RAISE;

WHEN NO_DATA_FOUND THEN

IF header_cur%ISOPEN THEN CLOSE header_cur; END IF;
IF line_cur%ISOPEN   THEN CLOSE line_cur;   END IF;

FOR header_record IN header_cur
LOOP
    l_array_header_events(header_record.event_id) := header_record.event_id;
END LOOP;

l_first_event_id := l_array_header_events(l_array_header_events.FIRST);
l_last_event_id := l_array_header_events(l_array_header_events.LAST);

fnd_file.put_line(fnd_file.LOG, '                    ');
fnd_file.put_line(fnd_file.LOG, '***************************************************************************');
fnd_file.put_line(fnd_file.LOG, 'EVENT CLASS CODE = ' || C_EVENT_CLASS_CODE );
fnd_file.put_line(fnd_file.LOG, 'The following events are present in the line extract but MISSING in the header extract: ');

FOR line_record IN line_cur(l_first_event_id, l_last_event_id)
LOOP
	IF (NOT l_array_header_events.EXISTS(line_record.event_id))  AND (NOT l_array_duplicate_checker.EXISTS(line_record.event_id)) THEN
	fnd_file.put_line(fnd_file.log, 'Event_id = ' || line_record.event_id);
        l_array_duplicate_checker(line_record.event_id) := line_record.event_id;
	END IF;
END LOOP;

fnd_file.put_line(fnd_file.LOG, '***************************************************************************');
fnd_file.put_line(fnd_file.LOG, '                    ');


xla_exceptions_pkg.raise_message
      (p_location => 'XLA_00200_AAD_S_000010_BC_PKG.EventClass_110');


WHEN OTHERS THEN
   xla_exceptions_pkg.raise_message
      (p_location => 'XLA_00200_AAD_S_000010_BC_PKG.EventClass_110');
END EventClass_110;
--

--
--+============================================+
--|                                            |
--|  PRIVATE FUNCTION                          |
--|                                            |
--+============================================+
--
FUNCTION CreateHeadersAndLines
       (p_application_id         IN NUMBER
       ,p_base_ledger_id         IN NUMBER
       ,p_target_ledger_id       IN NUMBER
       ,p_pad_start_date         IN DATE
       ,p_pad_end_date           IN DATE
       ,p_primary_ledger_id      IN NUMBER)
RETURN BOOLEAN IS
l_created                   BOOLEAN:=FALSE;
l_event_id                  NUMBER;
l_event_date                DATE;
l_language                  VARCHAR2(30);
l_currency_code             VARCHAR2(30);
l_sla_ledger_id             NUMBER;
l_log_module                VARCHAR2(240);

BEGIN
--
IF g_log_enabled THEN
   l_log_module := C_DEFAULT_MODULE||'.CreateHeadersAndLines';
END IF;
--
IF (C_LEVEL_PROCEDURE >= g_log_level) THEN
   trace
      (p_msg      => 'BEGIN of CreateHeadersAndLines'
      ,p_level    => C_LEVEL_PROCEDURE
      ,p_module   => l_log_module);
END IF;

l_language         := xla_ae_journal_entry_pkg.g_cache_ledgers_info.description_language;
l_currency_code    := xla_ae_journal_entry_pkg.g_cache_ledgers_info.currency_code;
l_sla_ledger_id    := xla_ae_journal_entry_pkg.g_cache_ledgers_info.sla_ledger_id;

--
-- initialize array of lines with NULL
--
xla_ae_lines_pkg.SetNullLine;

--
-- initialize header extract count -- Bug 4865292
--
g_hdr_extract_count:= 0;


l_created := EventClass_103(
   p_application_id         => p_application_id
 , p_base_ledger_id         => p_base_ledger_id
 , p_target_ledger_id       => p_target_ledger_id
 , p_language               => l_language
 , p_currency_code          => l_currency_code
 , p_sla_ledger_id          => l_sla_ledger_id
 , p_pad_start_date         => p_pad_start_date
 , p_pad_end_date           => p_pad_end_date
 , p_primary_ledger_id      => p_primary_ledger_id
);



     IF ( g_diagnostics_mode ='Y' ) THEN

         IF (C_LEVEL_STATEMENT >= g_log_level) THEN
          trace
              (p_msg      => 'CALL Transaction Objects Diagnostics'
              ,p_level    => C_LEVEL_STATEMENT
              ,p_module   => l_log_module);

         END IF;

         insert_sources_103(
                          p_target_ledger_id => p_target_ledger_id
                        , p_language         => l_language
                        , p_sla_ledger_id    => l_sla_ledger_id
                        , p_pad_start_date   => p_pad_start_date
                        , p_pad_end_date     => p_pad_end_date
                          );

     END IF;

l_created := EventClass_104(
   p_application_id         => p_application_id
 , p_base_ledger_id         => p_base_ledger_id
 , p_target_ledger_id       => p_target_ledger_id
 , p_language               => l_language
 , p_currency_code          => l_currency_code
 , p_sla_ledger_id          => l_sla_ledger_id
 , p_pad_start_date         => p_pad_start_date
 , p_pad_end_date           => p_pad_end_date
 , p_primary_ledger_id      => p_primary_ledger_id
);



     IF ( g_diagnostics_mode ='Y' ) THEN

         IF (C_LEVEL_STATEMENT >= g_log_level) THEN
          trace
              (p_msg      => 'CALL Transaction Objects Diagnostics'
              ,p_level    => C_LEVEL_STATEMENT
              ,p_module   => l_log_module);

         END IF;

         insert_sources_104(
                          p_target_ledger_id => p_target_ledger_id
                        , p_language         => l_language
                        , p_sla_ledger_id    => l_sla_ledger_id
                        , p_pad_start_date   => p_pad_start_date
                        , p_pad_end_date     => p_pad_end_date
                          );

     END IF;

l_created := EventClass_105(
   p_application_id         => p_application_id
 , p_base_ledger_id         => p_base_ledger_id
 , p_target_ledger_id       => p_target_ledger_id
 , p_language               => l_language
 , p_currency_code          => l_currency_code
 , p_sla_ledger_id          => l_sla_ledger_id
 , p_pad_start_date         => p_pad_start_date
 , p_pad_end_date           => p_pad_end_date
 , p_primary_ledger_id      => p_primary_ledger_id
);



     IF ( g_diagnostics_mode ='Y' ) THEN

         IF (C_LEVEL_STATEMENT >= g_log_level) THEN
          trace
              (p_msg      => 'CALL Transaction Objects Diagnostics'
              ,p_level    => C_LEVEL_STATEMENT
              ,p_module   => l_log_module);

         END IF;

         insert_sources_105(
                          p_target_ledger_id => p_target_ledger_id
                        , p_language         => l_language
                        , p_sla_ledger_id    => l_sla_ledger_id
                        , p_pad_start_date   => p_pad_start_date
                        , p_pad_end_date     => p_pad_end_date
                          );

     END IF;

l_created := EventClass_106(
   p_application_id         => p_application_id
 , p_base_ledger_id         => p_base_ledger_id
 , p_target_ledger_id       => p_target_ledger_id
 , p_language               => l_language
 , p_currency_code          => l_currency_code
 , p_sla_ledger_id          => l_sla_ledger_id
 , p_pad_start_date         => p_pad_start_date
 , p_pad_end_date           => p_pad_end_date
 , p_primary_ledger_id      => p_primary_ledger_id
);



     IF ( g_diagnostics_mode ='Y' ) THEN

         IF (C_LEVEL_STATEMENT >= g_log_level) THEN
          trace
              (p_msg      => 'CALL Transaction Objects Diagnostics'
              ,p_level    => C_LEVEL_STATEMENT
              ,p_module   => l_log_module);

         END IF;

         insert_sources_106(
                          p_target_ledger_id => p_target_ledger_id
                        , p_language         => l_language
                        , p_sla_ledger_id    => l_sla_ledger_id
                        , p_pad_start_date   => p_pad_start_date
                        , p_pad_end_date     => p_pad_end_date
                          );

     END IF;

l_created := EventClass_107(
   p_application_id         => p_application_id
 , p_base_ledger_id         => p_base_ledger_id
 , p_target_ledger_id       => p_target_ledger_id
 , p_language               => l_language
 , p_currency_code          => l_currency_code
 , p_sla_ledger_id          => l_sla_ledger_id
 , p_pad_start_date         => p_pad_start_date
 , p_pad_end_date           => p_pad_end_date
 , p_primary_ledger_id      => p_primary_ledger_id
);



     IF ( g_diagnostics_mode ='Y' ) THEN

         IF (C_LEVEL_STATEMENT >= g_log_level) THEN
          trace
              (p_msg      => 'CALL Transaction Objects Diagnostics'
              ,p_level    => C_LEVEL_STATEMENT
              ,p_module   => l_log_module);

         END IF;

         insert_sources_107(
                          p_target_ledger_id => p_target_ledger_id
                        , p_language         => l_language
                        , p_sla_ledger_id    => l_sla_ledger_id
                        , p_pad_start_date   => p_pad_start_date
                        , p_pad_end_date     => p_pad_end_date
                          );

     END IF;

l_created := EventClass_108(
   p_application_id         => p_application_id
 , p_base_ledger_id         => p_base_ledger_id
 , p_target_ledger_id       => p_target_ledger_id
 , p_language               => l_language
 , p_currency_code          => l_currency_code
 , p_sla_ledger_id          => l_sla_ledger_id
 , p_pad_start_date         => p_pad_start_date
 , p_pad_end_date           => p_pad_end_date
 , p_primary_ledger_id      => p_primary_ledger_id
);



     IF ( g_diagnostics_mode ='Y' ) THEN

         IF (C_LEVEL_STATEMENT >= g_log_level) THEN
          trace
              (p_msg      => 'CALL Transaction Objects Diagnostics'
              ,p_level    => C_LEVEL_STATEMENT
              ,p_module   => l_log_module);

         END IF;

         insert_sources_108(
                          p_target_ledger_id => p_target_ledger_id
                        , p_language         => l_language
                        , p_sla_ledger_id    => l_sla_ledger_id
                        , p_pad_start_date   => p_pad_start_date
                        , p_pad_end_date     => p_pad_end_date
                          );

     END IF;

l_created := EventClass_109(
   p_application_id         => p_application_id
 , p_base_ledger_id         => p_base_ledger_id
 , p_target_ledger_id       => p_target_ledger_id
 , p_language               => l_language
 , p_currency_code          => l_currency_code
 , p_sla_ledger_id          => l_sla_ledger_id
 , p_pad_start_date         => p_pad_start_date
 , p_pad_end_date           => p_pad_end_date
 , p_primary_ledger_id      => p_primary_ledger_id
);



     IF ( g_diagnostics_mode ='Y' ) THEN

         IF (C_LEVEL_STATEMENT >= g_log_level) THEN
          trace
              (p_msg      => 'CALL Transaction Objects Diagnostics'
              ,p_level    => C_LEVEL_STATEMENT
              ,p_module   => l_log_module);

         END IF;

         insert_sources_109(
                          p_target_ledger_id => p_target_ledger_id
                        , p_language         => l_language
                        , p_sla_ledger_id    => l_sla_ledger_id
                        , p_pad_start_date   => p_pad_start_date
                        , p_pad_end_date     => p_pad_end_date
                          );

     END IF;

l_created := EventClass_110(
   p_application_id         => p_application_id
 , p_base_ledger_id         => p_base_ledger_id
 , p_target_ledger_id       => p_target_ledger_id
 , p_language               => l_language
 , p_currency_code          => l_currency_code
 , p_sla_ledger_id          => l_sla_ledger_id
 , p_pad_start_date         => p_pad_start_date
 , p_pad_end_date           => p_pad_end_date
 , p_primary_ledger_id      => p_primary_ledger_id
);



     IF ( g_diagnostics_mode ='Y' ) THEN

         IF (C_LEVEL_STATEMENT >= g_log_level) THEN
          trace
              (p_msg      => 'CALL Transaction Objects Diagnostics'
              ,p_level    => C_LEVEL_STATEMENT
              ,p_module   => l_log_module);

         END IF;

         insert_sources_110(
                          p_target_ledger_id => p_target_ledger_id
                        , p_language         => l_language
                        , p_sla_ledger_id    => l_sla_ledger_id
                        , p_pad_start_date   => p_pad_start_date
                        , p_pad_end_date     => p_pad_end_date
                          );

     END IF;


 --
 -- Bug 4865292
 -- When the number of events and that of header extract do not match,
 -- set the no header extract flag to indicate there are some issues
 -- in header extract.
 --
 -- Event count context is set in xla_accounting_pkg.unit_processor.
 -- Build_Message for this error is called in xla_accounting_pkg.post_accounting
 -- to report it as a general error.
 --
 IF  xla_context_pkg.get_event_count_context <> g_hdr_extract_count
 AND xla_context_pkg.get_event_nohdr_context <> 'Y' THEN

     IF (C_LEVEL_STATEMENT >= g_log_level) THEN
        trace
          (p_msg      => '# of extracted headers and events does not match'
          ,p_level    => C_LEVEL_STATEMENT
          ,p_module   => l_log_module);

        trace
          (p_msg      => '# of extracted headers: '
                         ||g_hdr_extract_count
          ,p_level    => C_LEVEL_STATEMENT
          ,p_module   => l_log_module);

        trace
          (p_msg      => '# of events in xla_events_gt: '
                         ||xla_context_pkg.get_event_count_context
          ,p_level    => C_LEVEL_STATEMENT
          ,p_module   => l_log_module);

        trace
          (p_msg      => 'Event No Header Extract Context: '
                         ||xla_context_pkg.get_event_nohdr_context
          ,p_level    => C_LEVEL_STATEMENT
          ,p_module   => l_log_module);

     END IF;


     xla_context_pkg.set_event_nohdr_context
       (p_nohdr_extract_flag => 'Y'
       ,p_client_id => sys_context('USERENV','CLIENT_IDENTIFIER'));

     IF (C_LEVEL_STATEMENT >= g_log_level) THEN
        trace
          (p_msg      => 'No Header Extract Flag is set to Y'
          ,p_level    => C_LEVEL_STATEMENT
          ,p_module   => l_log_module);
     END IF;

 END IF;

IF (C_LEVEL_PROCEDURE >= g_log_level) THEN
   trace
      (p_msg      => 'END of CreateHeadersAndLines'
      ,p_level    => C_LEVEL_PROCEDURE
      ,p_module   => l_log_module);
END IF;

RETURN l_created;
EXCEPTION
WHEN xla_exceptions_pkg.application_exception THEN
   RAISE;
WHEN OTHERS THEN
   xla_exceptions_pkg.raise_message
      (p_location => 'XLA_00200_AAD_S_000010_BC_PKG.CreateHeadersAndLines');
END CreateHeadersAndLines;
--
--

--
--+============================================+
--|                                            |
--|  PUBLIC FUNCTION                           |
--|                                            |
--+============================================+
--
FUNCTION CreateJournalEntries
       (p_application_id         IN NUMBER
       ,p_base_ledger_id         IN NUMBER
       ,p_pad_start_date         IN DATE
       ,p_pad_end_date           IN DATE
       ,p_primary_ledger_id      IN NUMBER)
RETURN NUMBER IS
l_log_module                   VARCHAR2(240);
l_array_ledgers                xla_accounting_cache_pkg.t_array_ledger_id;
l_temp_result                  BOOLEAN;
l_result                       NUMBER;
BEGIN
--
IF g_log_enabled THEN
   l_log_module := C_DEFAULT_MODULE||'.CreateJournalEntries';
END IF;
--
IF (C_LEVEL_PROCEDURE >= g_log_level) THEN
   trace
      (p_msg      => 'BEGIN of CreateJournalEntries'||
                     ' - p_base_ledger_id = '||TO_CHAR(p_base_ledger_id)
      ,p_level    => C_LEVEL_PROCEDURE
      ,p_module   => l_log_module);

END IF;

--
g_diagnostics_mode:= xla_accounting_engine_pkg.g_diagnostics_mode;

IF (C_LEVEL_STATEMENT >= g_log_level) THEN
   trace
      (p_msg      => 'g_diagnostics_mode = '||g_diagnostics_mode
      ,p_level    => C_LEVEL_STATEMENT
      ,p_module   => l_log_module);
END IF;
--
xla_ae_journal_entry_pkg.SetProductAcctDefinition
   (p_product_rule_code      => 'AP_ENC_CASH'
   ,p_product_rule_type_code => 'S'
   ,p_product_rule_version   => ''
   ,p_product_rule_name      => 'Encumbrance Cash'
   ,p_amb_context_code       => 'DEFAULT'
   );

l_array_ledgers :=
   xla_ae_journal_entry_pkg.GetAlternateCurrencyLedger
      (p_base_ledger_id  => p_base_ledger_id);

FOR Idx IN 1 .. l_array_ledgers.COUNT LOOP
   l_temp_result :=
      XLA_AE_JOURNAL_ENTRY_PKG.GetLedgersInfo
         (p_application_id           => p_application_id
         ,p_base_ledger_id           => p_base_ledger_id
         ,p_target_ledger_id         => l_array_ledgers(Idx)
         ,p_primary_ledger_id        => p_primary_ledger_id
         ,p_pad_start_date           => p_pad_start_date
         ,p_pad_end_date             => p_pad_end_date);

   l_temp_result :=
      l_temp_result AND
      CreateHeadersAndLines
         (p_application_id             => p_application_id
         ,p_base_ledger_id             => p_base_ledger_id
         ,p_target_ledger_id           => l_array_ledgers(Idx)
         ,p_pad_start_date             => p_pad_start_date
         ,p_pad_end_date               => p_pad_end_date
         ,p_primary_ledger_id          => p_primary_ledger_id
         );
END LOOP;


IF (g_diagnostics_mode = 'Y' AND
    C_LEVEL_UNEXPECTED >= g_log_level AND
    xla_environment_pkg.g_Req_Id IS NOT NULL ) THEN

   xla_accounting_dump_pkg.acctg_event_extract_log(
    p_application_id  => p_application_id
    ,p_request_id     => xla_environment_pkg.g_Req_Id
   );

END IF;

CASE l_temp_result
  WHEN TRUE THEN l_result := 0;
  ELSE l_result := 2;
END CASE;

IF (C_LEVEL_PROCEDURE >= g_log_level) THEN
   trace
      (p_msg      => 'return value. = '||TO_CHAR(l_result)
      ,p_level    => C_LEVEL_PROCEDURE
      ,p_module   => l_log_module);
   trace
      (p_msg      => 'END of CreateJournalEntries '
      ,p_level    => C_LEVEL_PROCEDURE
      ,p_module   => l_log_module);
END IF;

RETURN l_result;
EXCEPTION
WHEN xla_exceptions_pkg.application_exception THEN
   IF (C_LEVEL_PROCEDURE >= g_log_level) THEN
   trace
      (p_msg      => 'ERROR. = '||sqlerrm
      ,p_level    => C_LEVEL_PROCEDURE
      ,p_module   => l_log_module);
   END IF;
   RAISE;
WHEN OTHERS THEN
   IF (C_LEVEL_PROCEDURE >= g_log_level) THEN
   trace
      (p_msg      => 'ERROR. = '||sqlerrm
      ,p_level    => C_LEVEL_PROCEDURE
      ,p_module   => l_log_module);
   END IF;
   xla_exceptions_pkg.raise_message
      (p_location => 'XLA_00200_AAD_S_000010_BC_PKG.CreateJournalEntries');
END CreateJournalEntries;
--
--=============================================================================
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--=============================================================================
--=============================================================================
--          *********** Initialization routine **********
--=============================================================================

BEGIN
   g_log_level      := FND_LOG.G_CURRENT_RUNTIME_LEVEL;
   g_log_enabled    := fnd_log.test
                          (log_level  => g_log_level
                          ,module     => C_DEFAULT_MODULE);

   IF NOT g_log_enabled  THEN
      g_log_level := C_LEVEL_LOG_DISABLED;
   END IF;
--
END XLA_00200_AAD_S_000010_BC_PKG;
--

/
