--------------------------------------------------------
--  DDL for Package Body XTR_XTRSESTA_XMLP_PKG
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE PACKAGE BODY "APPS"."XTR_XTRSESTA_XMLP_PKG" AS
/* $Header: XTRSESTAB.pls 120.1 2007/12/28 12:59:19 npannamp noship $ */
  FUNCTION CF_SET_PARAFORMULA RETURN VARCHAR2 IS
  BEGIN
    SELECT
      SUBSTR(USER
            ,1
            ,10)
    INTO
      CP_PARA
    FROM
      DUAL;
    RETURN (CP_PARA);
  END CF_SET_PARAFORMULA;

  FUNCTION BEFOREREPORT RETURN BOOLEAN IS
    L_DMMY_NUM NUMBER;
    L_MESSAGE FND_NEW_MESSAGES.MESSAGE_TEXT%TYPE;
    CURSOR GET_LANGUAGE_DESC IS
      SELECT
        ITEM_NAME,
        SUBSTR(TEXT
              ,1
              ,100) LANG_NAME
      FROM
        XTR_SYS_LANGUAGES_VL
      WHERE MODULE_NAME = 'XTRSESTA';
  BEGIN

    BEGIN
      COMPANY_NAME_HEADER := CEP_STANDARD.GET_WINDOW_SESSION_TITLE;
    EXCEPTION
      WHEN OTHERS THEN
        FND_MESSAGE.SET_NAME('XTR'
                            ,'XTR_LOOKUP_ERR');
        L_MESSAGE := FND_MESSAGE.GET;
        RAISE_APPLICATION_ERROR(-20101
                               ,NULL);
    END;
    IF (P_DISPLAY_DEBUG = 'Y') THEN
      NULL;
    END IF;
    FOR c IN GET_LANGUAGE_DESC LOOP
      IF C.ITEM_NAME = 'Z1ACCOUNT_NOS' THEN
        Z1ACCOUNT_NOS := C.LANG_NAME;
      ELSIF C.ITEM_NAME = 'Z1AUTHORISED_UNAUTHORISED_BOTH' THEN
        Z1AUTHORISED_UNAUTHORISED_BOTH := C.LANG_NAME;
      ELSIF C.ITEM_NAME = 'Z1BENEFICIARY' THEN
        Z1BENEFICIARY := C.LANG_NAME;
      ELSIF C.ITEM_NAME = 'Z1COMPANY_CODE' THEN
        Z1COMPANY_CODE := C.LANG_NAME;
      ELSIF C.ITEM_NAME = 'Z1CURRENCY' THEN
        Z1CURRENCY := C.LANG_NAME;
      ELSIF C.ITEM_NAME = 'Z1PARAMETERS' THEN
        Z1PARAMETERS := C.LANG_NAME;
      ELSIF C.ITEM_NAME = 'Z1SETTLEMENTS_FROM' THEN
        Z1SETTLEMENTS_FROM := C.LANG_NAME;
      ELSIF C.ITEM_NAME = 'Z1TO' THEN
        Z1TO := C.LANG_NAME;
      ELSIF C.ITEM_NAME = 'Z2ACCOUNT_NUMBER' THEN
        Z2ACCOUNT_NUMBER := C.LANG_NAME;
      ELSIF C.ITEM_NAME = 'Z2AMOUNT' THEN
        Z2AMOUNT := C.LANG_NAME;
      ELSIF C.ITEM_NAME = 'Z2AUTHORISED' THEN
        Z2AUTHORISED := C.LANG_NAME;
      ELSIF C.ITEM_NAME = 'Z2BY' THEN
        Z2BY := C.LANG_NAME;
      ELSIF C.ITEM_NAME = 'Z2BY_USER' THEN
        Z2BY_USER := C.LANG_NAME;
      ELSIF C.ITEM_NAME = 'Z2CCY' THEN
        Z2CCY := C.LANG_NAME;
      ELSIF C.ITEM_NAME = 'Z2CODE' THEN
        Z2CODE := C.LANG_NAME;
      ELSIF C.ITEM_NAME = 'Z2COMPANY' THEN
        Z2COMPANY := C.LANG_NAME;
      ELSIF C.ITEM_NAME = 'Z2CPARTY' THEN
        Z2CPARTY := C.LANG_NAME;
      ELSIF C.ITEM_NAME = 'Z2DEAL' THEN
        Z2DEAL := C.LANG_NAME;
      ELSIF C.ITEM_NAME = 'Z2END_OF_REPORT' THEN
        Z2END_OF_REPORT := C.LANG_NAME;
      ELSIF C.ITEM_NAME = 'Z2NUMBER' THEN
        Z2NUMBER := C.LANG_NAME;
      ELSIF C.ITEM_NAME = 'Z2PRODUCT' THEN
        Z2PRODUCT := C.LANG_NAME;
      ELSIF C.ITEM_NAME = 'Z2SET' THEN
        Z2SET := C.LANG_NAME;
      ELSIF C.ITEM_NAME = 'Z2SETTLEMNET' THEN
        Z2SETTLEMENT := C.LANG_NAME;
      ELSIF C.ITEM_NAME = 'Z2SUBTYPE' THEN
        Z2SUBTYPE := C.LANG_NAME;
      ELSIF C.ITEM_NAME = 'Z2TRANS' THEN
        Z2TRANS := C.LANG_NAME;
      ELSIF C.ITEM_NAME = 'Z2TYPE' THEN
        Z2TYPE := C.LANG_NAME;
      ELSIF C.ITEM_NAME = 'Z2USER' THEN
        Z2USER := C.LANG_NAME;
      ELSIF C.ITEM_NAME = 'Z2PAGE' THEN
        Z2PAGE := C.LANG_NAME;
      ELSIF C.ITEM_NAME = 'REPORT_DATE' THEN
        REPORT_DATE := C.LANG_NAME;
      ELSIF C.ITEM_NAME = 'Z2AMOUNT_DATE' THEN
        Z2AMOUNT_DATE := C.LANG_NAME;
      END IF;
    END LOOP;
    RETURN (TRUE);
  END BEFOREREPORT;

  FUNCTION AFTERREPORT RETURN BOOLEAN IS
  BEGIN
    RETURN (TRUE);
  END AFTERREPORT;

  FUNCTION AFTERPFORM RETURN BOOLEAN IS
  BEGIN
  P_CONC_REQUEST_ID := FND_GLOBAL.CONC_REQUEST_ID;
    COMPANY_CODE2 := P_COMPANY;
    CURRENCY_CODE2 := P_CURRENCY;
    ACCOUNT_NO2 := P_BANK_ACCOUNT_NUMBER;
    FROM_DATE2 := TO_DATE(P_SETTLEMENT_DATE_FROM
                         ,'YYYY/MM/DD HH24:MI:SS');
    TO_DATE2 := TO_DATE(P_SETTLEMENT_DATE_TO
                       ,'YYYY/MM/DD HH24:MI:SS');
    BEGIN
      SELECT
        CP.USER_CONCURRENT_PROGRAM_NAME
      INTO
        REPORT_SHORT_NAME2
      FROM
        FND_CONCURRENT_PROGRAMS_VL CP,
        FND_CONCURRENT_REQUESTS CR
      WHERE CR.REQUEST_ID = P_CONC_REQUEST_ID
        AND CP.APPLICATION_ID = CR.PROGRAM_APPLICATION_ID
        AND CP.CONCURRENT_PROGRAM_ID = CR.CONCURRENT_PROGRAM_ID;
	REPORT_SHORT_NAME2 := substr(REPORT_SHORT_NAME2,1,instr(REPORT_SHORT_NAME2,' (XML)'));
    EXCEPTION
      WHEN OTHERS THEN
        NULL;
    END;
    RETURN (TRUE);
  END AFTERPFORM;

  FUNCTION BEFOREPFORM RETURN BOOLEAN IS
  BEGIN
    RETURN (TRUE);
  END BEFOREPFORM;

  FUNCTION BETWEENPAGE RETURN BOOLEAN IS
  BEGIN
    RETURN (TRUE);
  END BETWEENPAGE;

  FUNCTION CFLOW1FORMULA(CFLOW IN NUMBER
                        ,CCY IN VARCHAR2) RETURN NUMBER IS
    L_ROUND NUMBER;
  BEGIN
    IF LENGTH(CFLOW) > 38 THEN
      SELECT
        ROUNDING_FACTOR
      INTO
        L_ROUND
      FROM
        XTR_MASTER_CURRENCIES
      WHERE CURRENCY = CCY;
      RETURN (ROUND(CFLOW
                  ,L_ROUND));
    ELSE
      RETURN (CFLOW);
    END IF;
  END CFLOW1FORMULA;

  FUNCTION CP_PARA_P RETURN VARCHAR2 IS
  BEGIN
    RETURN CP_PARA;
  END CP_PARA_P;

END XTR_XTRSESTA_XMLP_PKG;


/
