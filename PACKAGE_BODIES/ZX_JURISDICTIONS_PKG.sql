--------------------------------------------------------
--  DDL for Package Body ZX_JURISDICTIONS_PKG
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE PACKAGE BODY "APPS"."ZX_JURISDICTIONS_PKG" as
/* $Header: zxcjurisdictionb.pls 120.7 2005/06/24 12:33:33 shmangal ship $ */

procedure INSERT_ROW (
  X_ROWID in out nocopy VARCHAR2,
  X_TAX_JURISDICTION_ID in NUMBER,
  X_TAX_JURISDICTION_CODE in VARCHAR2,
  X_EFFECTIVE_FROM in DATE,
  X_EFFECTIVE_TO in DATE,
  X_TAX_REGIME_CODE in VARCHAR2,
  X_REP_TAX_AUTHORITY_ID in NUMBER,
  X_COLL_TAX_AUTHORITY_ID in NUMBER,
  X_ZONE_GEOGRAPHY_ID in NUMBER,
  X_TAX in VARCHAR2,
  X_Default_Jurisdiction_Flag in VARCHAR2,
  X_DEFAULT_FLG_EFFECTIVE_FROM in DATE,
  X_DEFAULT_FLG_EFFECTIVE_TO in DATE,
  X_REQUEST_ID in NUMBER,
  X_PROGRAM_APPLICATION_ID in NUMBER,
  X_PROGRAM_ID      in NUMBER,
  X_Program_Login_Id in NUMBER,
  X_ATTRIBUTE1 in VARCHAR2,
  X_ATTRIBUTE2 in VARCHAR2,
  X_ATTRIBUTE3 in VARCHAR2,
  X_ATTRIBUTE4 in VARCHAR2,
  X_ATTRIBUTE5 in VARCHAR2,
  X_ATTRIBUTE6 in VARCHAR2,
  X_ATTRIBUTE7 in VARCHAR2,
  X_ATTRIBUTE8 in VARCHAR2,
  X_ATTRIBUTE9 in VARCHAR2,
  X_ATTRIBUTE10 in VARCHAR2,
  X_ATTRIBUTE11 in VARCHAR2,
  X_ATTRIBUTE12 in VARCHAR2,
  X_ATTRIBUTE13 in VARCHAR2,
  X_ATTRIBUTE14 in VARCHAR2,
  X_ATTRIBUTE15 in VARCHAR2,
  X_ATTRIBUTE_CATEGORY in VARCHAR2,
  X_TAX_JURISDICTION_NAME in VARCHAR2,
  X_CREATION_DATE in DATE,
  X_CREATED_BY in NUMBER,
  X_LAST_UPDATE_DATE in DATE,
  X_LAST_UPDATED_BY in NUMBER,
  X_LAST_UPDATE_LOGIN in NUMBER,
  X_Record_Type_Code in VARCHAR2,
  X_INNER_CITY_JURISDICTION_FLAG in VARCHAR2,
  X_PRECEDENCE_LEVEL in NUMBER,
  X_ALLOW_TAX_REGISTRATIONS_FLAG in VARCHAR2,
  X_OBJECT_VERSION_NUMBER in NUMBER,
  X_TAX_ACCT_SRC_JURISDICT_ID in NUMBER,
  X_TAX_EXMPT_SRC_JURISDICT_ID in NUMBER
) is
  cursor C is select ROWID from ZX_JURISDICTIONS_B
    where TAX_JURISDICTION_ID = X_TAX_JURISDICTION_ID
    ;
begin
  insert into ZX_JURISDICTIONS_B (
    TAX_JURISDICTION_ID,
    TAX_JURISDICTION_CODE,
    EFFECTIVE_FROM,
    EFFECTIVE_TO,
    TAX_REGIME_CODE,
    REP_TAX_AUTHORITY_ID,
    COLL_TAX_AUTHORITY_ID,
    ZONE_GEOGRAPHY_ID,
    TAX,
    Default_Jurisdiction_Flag,
    DEFAULT_FLG_EFFECTIVE_FROM,
    DEFAULT_FLG_EFFECTIVE_TO,
    REQUEST_ID,
    PROGRAM_APPLICATION_ID,
    PROGRAM_ID,
    Program_Login_Id,
    ATTRIBUTE1,
    ATTRIBUTE2,
    ATTRIBUTE3,
    ATTRIBUTE4,
    ATTRIBUTE5,
    ATTRIBUTE6,
    ATTRIBUTE7,
    ATTRIBUTE8,
    ATTRIBUTE9,
    ATTRIBUTE10,
    ATTRIBUTE11,
    ATTRIBUTE12,
    ATTRIBUTE13,
    ATTRIBUTE14,
    ATTRIBUTE15,
    ATTRIBUTE_CATEGORY,
    CREATION_DATE,
    CREATED_BY,
    LAST_UPDATE_DATE,
    LAST_UPDATED_BY,
    LAST_UPDATE_LOGIN,
    Record_Type_Code,
    INNER_CITY_JURISDICTION_FLAG,
    PRECEDENCE_LEVEL  ,
    ALLOW_TAX_REGISTRATIONS_FLAG,
    OBJECT_VERSION_NUMBER,
    TAX_ACCT_SRC_JURISDICT_ID,
    TAX_EXMPT_SRC_JURISDICT_ID
  ) values (
    X_TAX_JURISDICTION_ID,
    X_TAX_JURISDICTION_CODE,
    X_EFFECTIVE_FROM,
    X_EFFECTIVE_TO,
    X_TAX_REGIME_CODE,
    X_REP_TAX_AUTHORITY_ID,
    X_COLL_TAX_AUTHORITY_ID,
    X_ZONE_GEOGRAPHY_ID,
    X_TAX,
    X_Default_Jurisdiction_Flag,
    X_DEFAULT_FLG_EFFECTIVE_FROM,
    X_DEFAULT_FLG_EFFECTIVE_TO,
    X_REQUEST_ID,
    X_PROGRAM_APPLICATION_ID,
    X_PROGRAM_ID,
    X_Program_Login_Id,
    X_ATTRIBUTE1,
    X_ATTRIBUTE2,
    X_ATTRIBUTE3,
    X_ATTRIBUTE4,
    X_ATTRIBUTE5,
    X_ATTRIBUTE6,
    X_ATTRIBUTE7,
    X_ATTRIBUTE8,
    X_ATTRIBUTE9,
    X_ATTRIBUTE10,
    X_ATTRIBUTE11,
    X_ATTRIBUTE12,
    X_ATTRIBUTE13,
    X_ATTRIBUTE14,
    X_ATTRIBUTE15,
    X_ATTRIBUTE_CATEGORY,
    X_CREATION_DATE,
    X_CREATED_BY,
    X_LAST_UPDATE_DATE,
    X_LAST_UPDATED_BY,
    X_LAST_UPDATE_LOGIN,
    X_Record_Type_Code,
    X_INNER_CITY_JURISDICTION_FLAG,
    X_PRECEDENCE_LEVEL,
    X_ALLOW_TAX_REGISTRATIONS_FLAG,
    X_OBJECT_VERSION_NUMBER,
    X_TAX_ACCT_SRC_JURISDICT_ID,
    X_TAX_EXMPT_SRC_JURISDICT_ID
  );
  insert into ZX_JURISDICTIONS_TL (
    TAX_JURISDICTION_ID,
    TAX_JURISDICTION_NAME,
    CREATED_BY,
    CREATION_DATE,
    LAST_UPDATED_BY,
    LAST_UPDATE_DATE,
    LAST_UPDATE_LOGIN,
    LANGUAGE,
    SOURCE_LANG
  ) select
    X_TAX_JURISDICTION_ID,
    X_TAX_JURISDICTION_NAME,
    X_CREATED_BY,
    X_CREATION_DATE,
    X_LAST_UPDATED_BY,
    X_LAST_UPDATE_DATE,
    X_LAST_UPDATE_LOGIN,
    L.LANGUAGE_CODE,
    userenv('LANG')
  from FND_LANGUAGES L
  where L.INSTALLED_FLAG in ('I', 'B')
  and not exists
    (select NULL
    from ZX_JURISDICTIONS_TL T
    where T.TAX_JURISDICTION_ID = X_TAX_JURISDICTION_ID
    and T.LANGUAGE = L.LANGUAGE_CODE);
  open c;
  fetch c into X_ROWID;
  if (c%notfound) then
    close c;
    raise no_data_found;
  end if;
  close c;
end INSERT_ROW;

procedure LOCK_ROW (
  X_TAX_JURISDICTION_ID in NUMBER,
  X_TAX_JURISDICTION_CODE in VARCHAR2,
  X_EFFECTIVE_FROM in DATE,
  X_EFFECTIVE_TO in DATE,
  X_TAX_REGIME_CODE in VARCHAR2,
  X_REP_TAX_AUTHORITY_ID in NUMBER,
  X_COLL_TAX_AUTHORITY_ID in NUMBER,
  X_ZONE_GEOGRAPHY_ID in NUMBER,
  X_TAX in VARCHAR2,
  X_Default_Jurisdiction_Flag in VARCHAR2,
  X_DEFAULT_FLG_EFFECTIVE_FROM in DATE,
  X_DEFAULT_FLG_EFFECTIVE_TO in DATE,
  X_REQUEST_ID in NUMBER,
  X_PROGRAM_APPLICATION_ID in NUMBER,
  X_PROGRAM_ID      in NUMBER,
  X_Program_Login_Id in NUMBER,
  X_ATTRIBUTE1 in VARCHAR2,
  X_ATTRIBUTE2 in VARCHAR2,
  X_ATTRIBUTE3 in VARCHAR2,
  X_ATTRIBUTE4 in VARCHAR2,
  X_ATTRIBUTE5 in VARCHAR2,
  X_ATTRIBUTE6 in VARCHAR2,
  X_ATTRIBUTE7 in VARCHAR2,
  X_ATTRIBUTE8 in VARCHAR2,
  X_ATTRIBUTE9 in VARCHAR2,
  X_ATTRIBUTE10 in VARCHAR2,
  X_ATTRIBUTE11 in VARCHAR2,
  X_ATTRIBUTE12 in VARCHAR2,
  X_ATTRIBUTE13 in VARCHAR2,
  X_ATTRIBUTE14 in VARCHAR2,
  X_ATTRIBUTE15 in VARCHAR2,
  X_ATTRIBUTE_CATEGORY in VARCHAR2,
  X_TAX_JURISDICTION_NAME in VARCHAR2,
  X_Record_Type_Code in VARCHAR2,
  X_INNER_CITY_JURISDICTION_FLAG in VARCHAR2,
  X_PRECEDENCE_LEVEL in NUMBER,
  X_ALLOW_TAX_REGISTRATIONS_FLAG in VARCHAR2,
  X_OBJECT_VERSION_NUMBER in NUMBER,
  X_TAX_ACCT_SRC_JURISDICT_ID in NUMBER,
  X_TAX_EXMPT_SRC_JURISDICT_ID in NUMBER
) is
  cursor c is select
      TAX_JURISDICTION_CODE,
      EFFECTIVE_FROM,
      EFFECTIVE_TO,
      TAX_REGIME_CODE,
      REP_TAX_AUTHORITY_ID,
      COLL_TAX_AUTHORITY_ID,
      ZONE_GEOGRAPHY_ID,
      TAX,
      Default_Jurisdiction_Flag,
      DEFAULT_FLG_EFFECTIVE_FROM,
      DEFAULT_FLG_EFFECTIVE_TO,
      REQUEST_ID,
      PROGRAM_APPLICATION_ID,
      PROGRAM_ID,
      Program_Login_Id,
      ATTRIBUTE1,
      ATTRIBUTE2,
      ATTRIBUTE3,
      ATTRIBUTE4,
      ATTRIBUTE5,
      ATTRIBUTE6,
      ATTRIBUTE7,
      ATTRIBUTE8,
      ATTRIBUTE9,
      ATTRIBUTE10,
      ATTRIBUTE11,
      ATTRIBUTE12,
      ATTRIBUTE13,
      ATTRIBUTE14,
      ATTRIBUTE15,
      ATTRIBUTE_CATEGORY,
      Record_Type_Code,
      INNER_CITY_JURISDICTION_FLAG,
      PRECEDENCE_LEVEL,
      ALLOW_TAX_REGISTRATIONS_FLAG,
      OBJECT_VERSION_NUMBER,
      TAX_ACCT_SRC_JURISDICT_ID,
      TAX_EXMPT_SRC_JURISDICT_ID
    from ZX_JURISDICTIONS_B
    where TAX_JURISDICTION_ID = X_TAX_JURISDICTION_ID
    for update of TAX_JURISDICTION_ID nowait;
  recinfo c%rowtype;
  cursor c1 is select
      TAX_JURISDICTION_NAME,
      decode(LANGUAGE, userenv('LANG'), 'Y', 'N') BASELANG
    from ZX_JURISDICTIONS_TL
    where TAX_JURISDICTION_ID = X_TAX_JURISDICTION_ID
    and userenv('LANG') in (LANGUAGE, SOURCE_LANG)
    for update of TAX_JURISDICTION_ID nowait;
begin
  open c;
  fetch c into recinfo;
  if (c%notfound) then
    close c;
    fnd_message.set_name('FND', 'FORM_RECORD_DELETED');
    app_exception.raise_exception;
  end if;
  close c;
  if (    (recinfo.TAX_JURISDICTION_CODE = X_TAX_JURISDICTION_CODE)
      AND ((recinfo.EFFECTIVE_FROM = X_EFFECTIVE_FROM)
           OR ((recinfo.EFFECTIVE_FROM is null) AND (X_EFFECTIVE_FROM is null)))
      AND ((recinfo.EFFECTIVE_TO = X_EFFECTIVE_TO)
           OR ((recinfo.EFFECTIVE_TO is null) AND (X_EFFECTIVE_TO is null)))
      AND (recinfo.TAX_REGIME_CODE = X_TAX_REGIME_CODE)
      AND ((recinfo.REP_TAX_AUTHORITY_ID = X_REP_TAX_AUTHORITY_ID)
           OR ((recinfo.REP_TAX_AUTHORITY_ID is null) AND (X_REP_TAX_AUTHORITY_ID is null)))
      AND ((recinfo.COLL_TAX_AUTHORITY_ID = X_COLL_TAX_AUTHORITY_ID)
           OR ((recinfo.COLL_TAX_AUTHORITY_ID is null) AND (X_COLL_TAX_AUTHORITY_ID is null)))
      AND (recinfo.ZONE_GEOGRAPHY_ID = X_ZONE_GEOGRAPHY_ID)
      AND (recinfo.TAX = X_TAX)
      AND ((recinfo.Default_Jurisdiction_Flag = X_Default_Jurisdiction_Flag)
           OR ((recinfo.Default_Jurisdiction_Flag is null) AND (X_Default_Jurisdiction_Flag is null)))
      AND ((recinfo.DEFAULT_FLG_EFFECTIVE_FROM = X_DEFAULT_FLG_EFFECTIVE_FROM)
           OR ((recinfo.DEFAULT_FLG_EFFECTIVE_FROM is null) AND (X_DEFAULT_FLG_EFFECTIVE_FROM is null)))
      AND ((recinfo.DEFAULT_FLG_EFFECTIVE_TO = X_DEFAULT_FLG_EFFECTIVE_TO)
           OR ((recinfo.DEFAULT_FLG_EFFECTIVE_TO is null) AND (X_DEFAULT_FLG_EFFECTIVE_TO is null)))
      AND ((recinfo.REQUEST_ID = X_REQUEST_ID)
           OR ((recinfo.REQUEST_ID is null) AND (X_REQUEST_ID is null)))
      AND ((recinfo.PROGRAM_APPLICATION_ID = X_PROGRAM_APPLICATION_ID)
           OR ((recinfo.PROGRAM_APPLICATION_ID is null) AND (X_PROGRAM_APPLICATION_ID is null)))
      AND ((recinfo.PROGRAM_ID = X_PROGRAM_ID )
           OR ((recinfo.PROGRAM_ID is null) AND (X_PROGRAM_ID is null)))
      AND ((recinfo.Program_Login_Id = X_Program_Login_Id )
           OR ((recinfo.Program_Login_Id is null) AND (X_Program_Login_Id is null)))
      AND ((recinfo.ATTRIBUTE1 = X_ATTRIBUTE1)
           OR ((recinfo.ATTRIBUTE1 is null) AND (X_ATTRIBUTE1 is null)))
      AND ((recinfo.ATTRIBUTE2 = X_ATTRIBUTE2)
           OR ((recinfo.ATTRIBUTE2 is null) AND (X_ATTRIBUTE2 is null)))
      AND ((recinfo.ATTRIBUTE3 = X_ATTRIBUTE3)
           OR ((recinfo.ATTRIBUTE3 is null) AND (X_ATTRIBUTE3 is null)))
      AND ((recinfo.ATTRIBUTE4 = X_ATTRIBUTE4)
           OR ((recinfo.ATTRIBUTE4 is null) AND (X_ATTRIBUTE4 is null)))
      AND ((recinfo.ATTRIBUTE5 = X_ATTRIBUTE5)
           OR ((recinfo.ATTRIBUTE5 is null) AND (X_ATTRIBUTE5 is null)))
      AND ((recinfo.ATTRIBUTE6 = X_ATTRIBUTE6)
           OR ((recinfo.ATTRIBUTE6 is null) AND (X_ATTRIBUTE6 is null)))
      AND ((recinfo.ATTRIBUTE7 = X_ATTRIBUTE7)
           OR ((recinfo.ATTRIBUTE7 is null) AND (X_ATTRIBUTE7 is null)))
      AND ((recinfo.ATTRIBUTE8 = X_ATTRIBUTE8)
           OR ((recinfo.ATTRIBUTE8 is null) AND (X_ATTRIBUTE8 is null)))
      AND ((recinfo.ATTRIBUTE9 = X_ATTRIBUTE9)
           OR ((recinfo.ATTRIBUTE9 is null) AND (X_ATTRIBUTE9 is null)))
      AND ((recinfo.ATTRIBUTE10 = X_ATTRIBUTE10)
           OR ((recinfo.ATTRIBUTE10 is null) AND (X_ATTRIBUTE10 is null)))
      AND ((recinfo.ATTRIBUTE11 = X_ATTRIBUTE11)
           OR ((recinfo.ATTRIBUTE11 is null) AND (X_ATTRIBUTE11 is null)))
      AND ((recinfo.ATTRIBUTE12 = X_ATTRIBUTE12)
           OR ((recinfo.ATTRIBUTE12 is null) AND (X_ATTRIBUTE12 is null)))
      AND ((recinfo.ATTRIBUTE13 = X_ATTRIBUTE13)
           OR ((recinfo.ATTRIBUTE13 is null) AND (X_ATTRIBUTE13 is null)))
      AND ((recinfo.ATTRIBUTE14 = X_ATTRIBUTE14)
           OR ((recinfo.ATTRIBUTE14 is null) AND (X_ATTRIBUTE14 is null)))
      AND ((recinfo.ATTRIBUTE15 = X_ATTRIBUTE15)
           OR ((recinfo.ATTRIBUTE15 is null) AND (X_ATTRIBUTE15 is null)))
      AND ((recinfo.ATTRIBUTE_CATEGORY = X_ATTRIBUTE_CATEGORY)
           OR ((recinfo.ATTRIBUTE_CATEGORY is null) AND (X_ATTRIBUTE_CATEGORY is null)))
      AND ((recinfo.Record_Type_Code = X_Record_Type_Code)
           OR ((recinfo.Record_Type_Code is null) AND (X_Record_Type_Code is null)))
      AND ((recinfo.INNER_CITY_JURISDICTION_FLAG = X_INNER_CITY_JURISDICTION_FLAG)
           OR ((recinfo.INNER_CITY_JURISDICTION_FLAG is null) AND (X_INNER_CITY_JURISDICTION_FLAG is null)))
      AND ((recinfo.PRECEDENCE_LEVEL = X_PRECEDENCE_LEVEL)
           OR ((recinfo.PRECEDENCE_LEVEL is null) AND (X_PRECEDENCE_LEVEL is null)))
      AND ((recinfo.ALLOW_TAX_REGISTRATIONS_FLAG = X_ALLOW_TAX_REGISTRATIONS_FLAG)
           OR ((recinfo.ALLOW_TAX_REGISTRATIONS_FLAG is null) AND (X_ALLOW_TAX_REGISTRATIONS_FLAG is null)))
      AND (recinfo.OBJECT_VERSION_NUMBER = X_OBJECT_VERSION_NUMBER)
      AND ((recinfo.TAX_ACCT_SRC_JURISDICT_ID = X_TAX_ACCT_SRC_JURISDICT_ID)
           OR ((recinfo.TAX_ACCT_SRC_JURISDICT_ID is null) AND (X_TAX_ACCT_SRC_JURISDICT_ID is null)))
      AND ((recinfo.TAX_EXMPT_SRC_JURISDICT_ID = X_TAX_EXMPT_SRC_JURISDICT_ID)
           OR ((recinfo.TAX_EXMPT_SRC_JURISDICT_ID is null) AND (X_TAX_EXMPT_SRC_JURISDICT_ID is null)))
  ) then
    null;
  else
    fnd_message.set_name('FND', 'FORM_RECORD_CHANGED');
    app_exception.raise_exception;
  end if;
  for tlinfo in c1 loop
    if (tlinfo.BASELANG = 'Y') then
      if (    ((tlinfo.TAX_JURISDICTION_NAME = X_TAX_JURISDICTION_NAME)
               OR ((tlinfo.TAX_JURISDICTION_NAME is null) AND (X_TAX_JURISDICTION_NAME is null)))
      ) then
        null;
      else
        fnd_message.set_name('FND', 'FORM_RECORD_CHANGED');
        app_exception.raise_exception;
      end if;
    end if;
  end loop;
  return;
end LOCK_ROW;

procedure UPDATE_ROW (
  X_TAX_JURISDICTION_ID in NUMBER,
  X_TAX_JURISDICTION_CODE in VARCHAR2,
  X_EFFECTIVE_FROM in DATE,
  X_EFFECTIVE_TO in DATE,
  X_TAX_REGIME_CODE in VARCHAR2,
  X_REP_TAX_AUTHORITY_ID in NUMBER,
  X_COLL_TAX_AUTHORITY_ID in NUMBER,
  X_ZONE_GEOGRAPHY_ID in NUMBER,
  X_TAX in VARCHAR2,
  X_Default_Jurisdiction_Flag in VARCHAR2,
  X_DEFAULT_FLG_EFFECTIVE_FROM in DATE,
  X_DEFAULT_FLG_EFFECTIVE_TO in DATE,
  X_REQUEST_ID in NUMBER,
  X_PROGRAM_APPLICATION_ID in NUMBER,
  X_PROGRAM_ID      in NUMBER,
  X_Program_Login_Id in NUMBER,
  X_ATTRIBUTE1 in VARCHAR2,
  X_ATTRIBUTE2 in VARCHAR2,
  X_ATTRIBUTE3 in VARCHAR2,
  X_ATTRIBUTE4 in VARCHAR2,
  X_ATTRIBUTE5 in VARCHAR2,
  X_ATTRIBUTE6 in VARCHAR2,
  X_ATTRIBUTE7 in VARCHAR2,
  X_ATTRIBUTE8 in VARCHAR2,
  X_ATTRIBUTE9 in VARCHAR2,
  X_ATTRIBUTE10 in VARCHAR2,
  X_ATTRIBUTE11 in VARCHAR2,
  X_ATTRIBUTE12 in VARCHAR2,
  X_ATTRIBUTE13 in VARCHAR2,
  X_ATTRIBUTE14 in VARCHAR2,
  X_ATTRIBUTE15 in VARCHAR2,
  X_ATTRIBUTE_CATEGORY in VARCHAR2,
  X_TAX_JURISDICTION_NAME in VARCHAR2,
  X_LAST_UPDATE_DATE in DATE,
  X_LAST_UPDATED_BY in NUMBER,
  X_LAST_UPDATE_LOGIN in NUMBER,
  X_Record_Type_Code in VARCHAR2,
  X_INNER_CITY_JURISDICTION_FLAG in VARCHAR2,
  X_PRECEDENCE_LEVEL in NUMBER,
  X_ALLOW_TAX_REGISTRATIONS_FLAG in VARCHAR2,
  X_OBJECT_VERSION_NUMBER in NUMBER,
  X_TAX_ACCT_SRC_JURISDICT_ID in NUMBER,
  X_TAX_EXMPT_SRC_JURISDICT_ID in NUMBER
) is
begin
  update ZX_JURISDICTIONS_B set
    TAX_JURISDICTION_CODE = X_TAX_JURISDICTION_CODE,
    EFFECTIVE_FROM = X_EFFECTIVE_FROM,
    EFFECTIVE_TO = X_EFFECTIVE_TO,
    TAX_REGIME_CODE = X_TAX_REGIME_CODE,
    REP_TAX_AUTHORITY_ID = X_REP_TAX_AUTHORITY_ID,
    COLL_TAX_AUTHORITY_ID = X_COLL_TAX_AUTHORITY_ID,
    ZONE_GEOGRAPHY_ID = X_ZONE_GEOGRAPHY_ID,
    TAX = X_TAX,
    Default_Jurisdiction_Flag = X_Default_Jurisdiction_Flag,
    DEFAULT_FLG_EFFECTIVE_FROM = X_DEFAULT_FLG_EFFECTIVE_FROM,
    DEFAULT_FLG_EFFECTIVE_TO = X_DEFAULT_FLG_EFFECTIVE_TO,
    REQUEST_ID = X_REQUEST_ID,
    PROGRAM_APPLICATION_ID  = PROGRAM_APPLICATION_ID,
    PROGRAM_ID = X_PROGRAM_ID,
    Program_Login_Id = X_Program_Login_Id,
    ATTRIBUTE1 = X_ATTRIBUTE1,
    ATTRIBUTE2 = X_ATTRIBUTE2,
    ATTRIBUTE3 = X_ATTRIBUTE3,
    ATTRIBUTE4 = X_ATTRIBUTE4,
    ATTRIBUTE5 = X_ATTRIBUTE5,
    ATTRIBUTE6 = X_ATTRIBUTE6,
    ATTRIBUTE7 = X_ATTRIBUTE7,
    ATTRIBUTE8 = X_ATTRIBUTE8,
    ATTRIBUTE9 = X_ATTRIBUTE9,
    ATTRIBUTE10 = X_ATTRIBUTE10,
    ATTRIBUTE11 = X_ATTRIBUTE11,
    ATTRIBUTE12 = X_ATTRIBUTE12,
    ATTRIBUTE13 = X_ATTRIBUTE13,
    ATTRIBUTE14 = X_ATTRIBUTE14,
    ATTRIBUTE15 = X_ATTRIBUTE15,
    ATTRIBUTE_CATEGORY = X_ATTRIBUTE_CATEGORY,
    LAST_UPDATE_DATE = X_LAST_UPDATE_DATE,
    LAST_UPDATED_BY = X_LAST_UPDATED_BY,
    LAST_UPDATE_LOGIN = X_LAST_UPDATE_LOGIN,
    Record_Type_Code = X_Record_Type_Code,
    INNER_CITY_JURISDICTION_FLAG = X_INNER_CITY_JURISDICTION_FLAG,
    PRECEDENCE_LEVEL = X_PRECEDENCE_LEVEL,
    ALLOW_TAX_REGISTRATIONS_FLAG = X_ALLOW_TAX_REGISTRATIONS_FLAG,
    OBJECT_VERSION_NUMBER = X_OBJECT_VERSION_NUMBER,
    TAX_ACCT_SRC_JURISDICT_ID = X_TAX_ACCT_SRC_JURISDICT_ID,
    TAX_EXMPT_SRC_JURISDICT_ID = X_TAX_EXMPT_SRC_JURISDICT_ID
  where TAX_JURISDICTION_ID = X_TAX_JURISDICTION_ID;
  if (sql%notfound) then
    raise no_data_found;
  end if;
  update ZX_JURISDICTIONS_TL set
    TAX_JURISDICTION_NAME = X_TAX_JURISDICTION_NAME,
    LAST_UPDATE_DATE = X_LAST_UPDATE_DATE,
    LAST_UPDATED_BY = X_LAST_UPDATED_BY,
    LAST_UPDATE_LOGIN = X_LAST_UPDATE_LOGIN,
    SOURCE_LANG = userenv('LANG')
  where TAX_JURISDICTION_ID = X_TAX_JURISDICTION_ID
  and userenv('LANG') in (LANGUAGE, SOURCE_LANG);
  if (sql%notfound) then
    raise no_data_found;
  end if;
end UPDATE_ROW;

procedure DELETE_ROW (
  X_TAX_JURISDICTION_ID in NUMBER
) is
begin
  delete from ZX_JURISDICTIONS_TL
  where TAX_JURISDICTION_ID = X_TAX_JURISDICTION_ID;
  if (sql%notfound) then
    raise no_data_found;
  end if;
  delete from ZX_JURISDICTIONS_B
  where TAX_JURISDICTION_ID = X_TAX_JURISDICTION_ID;
  if (sql%notfound) then
    raise no_data_found;
  end if;
end DELETE_ROW;

procedure ADD_LANGUAGE
is
begin
  delete from ZX_JURISDICTIONS_TL T
  where not exists
    (select NULL
    from ZX_JURISDICTIONS_B B
    where B.TAX_JURISDICTION_ID = T.TAX_JURISDICTION_ID
    );
  update ZX_JURISDICTIONS_TL T set (
      TAX_JURISDICTION_NAME
    ) = (select
      B.TAX_JURISDICTION_NAME
    from ZX_JURISDICTIONS_TL B
    where B.TAX_JURISDICTION_ID = T.TAX_JURISDICTION_ID
    and B.LANGUAGE = T.SOURCE_LANG)
  where (
      T.TAX_JURISDICTION_ID,
      T.LANGUAGE
  ) in (select
      SUBT.TAX_JURISDICTION_ID,
      SUBT.LANGUAGE
    from ZX_JURISDICTIONS_TL SUBB, ZX_JURISDICTIONS_TL SUBT
    where SUBB.TAX_JURISDICTION_ID = SUBT.TAX_JURISDICTION_ID
    and SUBB.LANGUAGE = SUBT.SOURCE_LANG
    and (SUBB.TAX_JURISDICTION_NAME <> SUBT.TAX_JURISDICTION_NAME
      or (SUBB.TAX_JURISDICTION_NAME is null and SUBT.TAX_JURISDICTION_NAME is not null)
      or (SUBB.TAX_JURISDICTION_NAME is not null and SUBT.TAX_JURISDICTION_NAME is null)
  ));
  insert into ZX_JURISDICTIONS_TL (
    TAX_JURISDICTION_ID,
    TAX_JURISDICTION_NAME,
    CREATED_BY,
    CREATION_DATE,
    LAST_UPDATED_BY,
    LAST_UPDATE_DATE,
    LAST_UPDATE_LOGIN,
    LANGUAGE,
    SOURCE_LANG
  ) select
    B.TAX_JURISDICTION_ID,
    B.TAX_JURISDICTION_NAME,
    B.CREATED_BY,
    B.CREATION_DATE,
    B.LAST_UPDATED_BY,
    B.LAST_UPDATE_DATE,
    B.LAST_UPDATE_LOGIN,
    L.LANGUAGE_CODE,
    B.SOURCE_LANG
  from ZX_JURISDICTIONS_TL B, FND_LANGUAGES L
  where L.INSTALLED_FLAG in ('I', 'B')
  and B.LANGUAGE = userenv('LANG')
  and not exists
    (select NULL
    from ZX_JURISDICTIONS_TL T
    where T.TAX_JURISDICTION_ID = B.TAX_JURISDICTION_ID
    and T.LANGUAGE = L.LANGUAGE_CODE);
end ADD_LANGUAGE;

end ZX_JURISDICTIONS_PKG;

/
