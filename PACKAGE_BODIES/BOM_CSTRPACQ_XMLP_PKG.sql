--------------------------------------------------------
--  DDL for Package Body BOM_CSTRPACQ_XMLP_PKG
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE PACKAGE BODY "APPS"."BOM_CSTRPACQ_XMLP_PKG" AS
/* $Header: CSTRPACQB.pls 120.1 2008/01/07 05:32:00 nchinnam noship $ */
  FUNCTION BEFOREREPORT RETURN BOOLEAN IS
  BEGIN
    P_CONC_REQUEST_ID := FND_GLOBAL.CONC_REQUEST_ID;
    /*SRW.USER_EXIT('FND SRWINIT')*/NULL;

SELECT fifst.id_flex_num

into p_item_flex_num

FROM fnd_id_flex_structures fifst

WHERE fifst.application_id = 401

AND fifst.id_flex_code = 'MSTK'

AND fifst.enabled_flag = 'Y'

AND fifst.freeze_flex_definition_flag = 'Y'

and rownum<2;

QTY_PRECISION:= bom_common_xmlp_pkg.get_precision(p_quantity_precision);
    SELECT
      XFI.NAME,
      GLL.CURRENCY_CODE
    INTO H_LEGAL_ENTITY,H_CURRENCY
    FROM
      XLE_FIRSTPARTY_INFORMATION_V XFI,
      GL_LEDGER_LE_V GLL
    WHERE XFI.LEGAL_ENTITY_ID = P_LEGAL_ENTITY_ID
      AND GLL.LEGAL_ENTITY_ID = XFI.LEGAL_ENTITY_ID
      AND GLL.LEDGER_CATEGORY_CODE = 'PRIMARY'
      AND GLL.RELATIONSHIP_ENABLED_FLAG = 'Y';
    SELECT
      COST_GROUP
    INTO H_COST_GROUP
    FROM
      CST_COST_GROUPS
    WHERE COST_GROUP_ID = P_COST_GROUP_ID;
    SELECT
      COST_TYPE
    INTO H_COST_TYPE
    FROM
      CST_COST_TYPES
    WHERE COST_TYPE_ID = P_COST_TYPE_ID;
    SELECT
      PERIOD_NAME
    INTO H_PERIOD
    FROM
      CST_PAC_PERIODS
    WHERE PAC_PERIOD_ID = P_PERIOD_ID;
    IF (P_ITEM_CODE_FROM IS NOT NULL OR P_ITEM_CODE_TO IS NOT NULL) THEN
      H_REPORT_SUBTITLE := PTXT_ITEM_PROMPT || ' ' || P_ITEM_CODE_FROM || ' / ' || P_ITEM_CODE_TO || ' ' || '(' || H_CURRENCY || ')';
    ELSE
      H_REPORT_SUBTITLE := '(' || H_CURRENCY || ')';
    END IF;
    P_ALL_RECEIPTS:=nvl(P_ALL_RECEIPTS,1);
    SELECT
      MEANING
    INTO H_OPTION_FIELD
    FROM
      MFG_LOOKUPS
    WHERE LOOKUP_TYPE = 'CST_ACQ_REPORT_OPTION'
      AND LOOKUP_CODE = P_ALL_RECEIPTS;
    IF (P_ALL_RECEIPTS = 1) THEN
      PLEX_OPTION_WHERE := '1 = 1';
    ELSE
      PLEX_OPTION_WHERE := 'crac.quantity_at_po_price <> 0';
    END IF;
    SELECT
      EXTENDED_PRECISION,
      NVL(MINIMUM_ACCOUNTABLE_UNIT
         ,POWER(10
              ,NVL(-PRECISION
                 ,0)))
    INTO P_EXT_PRECISION,P_PRECISION
    FROM
      FND_CURRENCIES
    WHERE CURRENCY_CODE = H_CURRENCY;
    RETURN TRUE;
  END BEFOREREPORT;

  FUNCTION AFTERREPORT RETURN BOOLEAN IS
  BEGIN
    /*SRW.USER_EXIT('FND SRWEXIT')*/NULL;
    RETURN (TRUE);
  END AFTERREPORT;

  PROCEDURE FORMAT_QUANTITY(P_PRECISION IN NUMBER) IS
  BEGIN
    /*SRW.ATTR.MASK := SRW.FORMATMASK_ATTR;
    IF P_PRECISION = 0 THEN
      SRW.ATTR.FORMATMASK := '-NNN,NNN,NNN,NN0';
    ELSIF P_PRECISION = 1 THEN
      SRW.ATTR.FORMATMASK := '-NNN,NNN,NNN,NN0.0';
    ELSIF P_PRECISION = 3 THEN
      SRW.ATTR.FORMATMASK := '-NN,NNN,NNN,NN0.000';
    ELSIF P_PRECISION = 4 THEN
      SRW.ATTR.FORMATMASK := '-N,NNN,NNN,NN0.0000';
    ELSIF P_PRECISION = 5 THEN
      SRW.ATTR.FORMATMASK := '-NNN,NNN,NN0.00000';
    ELSIF P_PRECISION = 6 THEN
      SRW.ATTR.FORMATMASK := '-NN,NNN,NN0.000000';
    ELSIF P_PRECISION = 7 THEN
      SRW.ATTR.FORMATMASK := '-NNNNNNNNNNN0';
    ELSIF P_PRECISION = 8 THEN
      SRW.ATTR.FORMATMASK := '-NNNNNNNNNNN0.0';
    ELSIF P_PRECISION = 9 THEN
      SRW.ATTR.FORMATMASK := '-NNNNNNNNNN0.00';
    ELSIF P_PRECISION = 10 THEN
      SRW.ATTR.FORMATMASK := '-NNNNNNNNNN0.000';
    ELSIF P_PRECISION = 11 THEN
      SRW.ATTR.FORMATMASK := '-NNNNNNNNN0.0000';
    ELSIF P_PRECISION = 12 THEN
      SRW.ATTR.FORMATMASK := '-NNNNNNNN0.00000';
    ELSIF P_PRECISION = 13 THEN
      SRW.ATTR.FORMATMASK := '-NNNNNNN0.000000';
    ELSE
      SRW.ATTR.FORMATMASK := '-NNN,NNN,NNN,NN0.00';
    END IF;*/
    /*SRW.SET_ATTR(0
                ,SRW.ATTR)*/NULL;
  END FORMAT_QUANTITY;

  FUNCTION H_LEGAL_ENTITY_P RETURN VARCHAR2 IS
  BEGIN
    RETURN H_LEGAL_ENTITY;
  END H_LEGAL_ENTITY_P;

  FUNCTION H_COST_GROUP_P RETURN VARCHAR2 IS
  BEGIN
    RETURN H_COST_GROUP;
  END H_COST_GROUP_P;

  FUNCTION H_COST_TYPE_P RETURN VARCHAR2 IS
  BEGIN
    RETURN H_COST_TYPE;
  END H_COST_TYPE_P;

  FUNCTION H_PERIOD_P RETURN VARCHAR2 IS
  BEGIN
    RETURN H_PERIOD;
  END H_PERIOD_P;

  FUNCTION H_CURRENCY_P RETURN VARCHAR2 IS
  BEGIN
    RETURN H_CURRENCY;
  END H_CURRENCY_P;

  FUNCTION H_REPORT_SUBTITLE_P RETURN VARCHAR2 IS
  BEGIN
    RETURN H_REPORT_SUBTITLE;
  END H_REPORT_SUBTITLE_P;

  FUNCTION H_OPTION_FIELD_P RETURN VARCHAR2 IS
  BEGIN
    RETURN H_OPTION_FIELD;
  END H_OPTION_FIELD_P;

END BOM_CSTRPACQ_XMLP_PKG;




/
