--------------------------------------------------------
--  DDL for Package Body XDP_WI_PARAMETERS_PKG
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE PACKAGE BODY "APPS"."XDP_WI_PARAMETERS_PKG" as
/* $Header: XDPWIPAB.pls 120.1 2005/06/16 02:47:20 appldev  $ */
procedure INSERT_ROW (
  X_ROWID in OUT NOCOPY VARCHAR2,
-- skilaru 7/17/01 WI_PARAMETER_ID column dropped
--  X_WI_PARAMETER_ID is dropped in 11.5.6
--  X_WI_PARAMETER_ID in NUMBER,
  X_PARAMETER_NAME in VARCHAR2,
  X_WORKITEM_ID in NUMBER,
  X_REQUIRED_FLAG in VARCHAR2,
  X_LOG_IN_AUDIT_TRAIL_FLAG in VARCHAR2,
  X_VALUE_LOOKUP_SQL in VARCHAR2,
  X_VALIDATION_PROCEDURE in VARCHAR2,
  X_EVALUATION_MODE in VARCHAR2,
  X_EVALUATION_SEQ in NUMBER,
  X_EVALUATION_PROCEDURE in VARCHAR2,
  X_DISPLAY_SEQ in NUMBER,
  X_DEFAULT_VALUE in VARCHAR2,
  X_CREATION_DATE in DATE,
  X_CREATED_BY in NUMBER,
  X_LAST_UPDATE_DATE in DATE,
  X_LAST_UPDATED_BY in NUMBER,
  X_LAST_UPDATE_LOGIN in NUMBER
) is
  cursor C is
    select ROWID
    from   XDP_WI_PARAMETERS
    -- skilaru 7/17/01 WI_PARAMETER_ID column dropped
    --  where  WI_PARAMETER_ID = X_WI_PARAMETER_ID
    where  PARAMETER_NAME = X_PARAMETER_NAME
    and    WORKITEM_ID     = X_WORKITEM_ID;

begin
  insert into XDP_WI_PARAMETERS (
    WORKITEM_ID,
    -- skilaru 7/17/01 WI_PARAMETER_ID column dropped
    -- WI_PARAMETER_ID,
    PARAMETER_NAME,
    REQUIRED_FLAG,
    LOG_IN_AUDIT_TRAIL_FLAG,
    VALUE_LOOKUP_SQL,
    VALIDATION_PROCEDURE,
    EVALUATION_MODE,
    EVALUATION_SEQ,
    EVALUATION_PROCEDURE,
    DISPLAY_SEQ,
    DEFAULT_VALUE,
    CREATED_BY,
    CREATION_DATE,
    LAST_UPDATE_DATE,
    LAST_UPDATED_BY,
    LAST_UPDATE_LOGIN
  ) values (
    X_WORKITEM_ID,
    -- skilaru 7/17/01 WI_PARAMETER_ID column dropped
    -- X_WI_PARAMETER_ID,
    X_PARAMETER_NAME,
    X_REQUIRED_FLAG,
    X_LOG_IN_AUDIT_TRAIL_FLAG,
    X_VALUE_LOOKUP_SQL,
    X_VALIDATION_PROCEDURE,
    X_EVALUATION_MODE,
    X_EVALUATION_SEQ,
    X_EVALUATION_PROCEDURE,
    X_DISPLAY_SEQ,
    X_DEFAULT_VALUE,
    X_CREATED_BY,
    X_CREATION_DATE,
    X_LAST_UPDATE_DATE,
    X_LAST_UPDATED_BY,
    X_LAST_UPDATE_LOGIN
  );

  open c;
  fetch c into X_ROWID;
  if (c%notfound) then
    close c;
    raise no_data_found;
  end if;
  close c;

end INSERT_ROW;

procedure LOCK_ROW (
  -- skilaru 7/17/01 WI_PARAMETER_ID column dropped
  -- X_WI_PARAMETER_ID in NUMBER,
  X_PARAMETER_NAME in VARCHAR2,
  X_WORKITEM_ID in NUMBER,
  X_REQUIRED_FLAG in VARCHAR2,
  X_LOG_IN_AUDIT_TRAIL_FLAG in VARCHAR2,
  X_VALUE_LOOKUP_SQL in VARCHAR2,
  X_VALIDATION_PROCEDURE in VARCHAR2,
  X_EVALUATION_MODE in VARCHAR2,
  X_EVALUATION_SEQ in NUMBER,
  X_EVALUATION_PROCEDURE in VARCHAR2,
  X_DISPLAY_SEQ in NUMBER,
  X_DEFAULT_VALUE in VARCHAR2
) is
  cursor c1 is select
      REQUIRED_FLAG,
      LOG_IN_AUDIT_TRAIL_FLAG,
      VALUE_LOOKUP_SQL,
      VALIDATION_PROCEDURE,
      EVALUATION_MODE,
      EVALUATION_SEQ,
      EVALUATION_PROCEDURE,
      DISPLAY_SEQ,
      DEFAULT_VALUE
    from XDP_WI_PARAMETERS
    -- skilaru 7/17/01 WI_PARAMETER_ID column dropped
    -- where WI_PARAMETER_ID = X_WI_PARAMETER_ID
    where PARAMETER_NAME = X_PARAMETER_NAME
    and WORKITEM_ID       = X_WORKITEM_ID
    -- skilaru 7/17/01 WI_PARAMETER_ID column dropped
    -- for update of WI_PARAMETER_ID nowait;
    for update of PARAMETER_NAME nowait;

begin
  for tlinfo in c1 loop
    if (    ((tlinfo.DEFAULT_VALUE = X_DEFAULT_VALUE)
         OR ((tlinfo.DEFAULT_VALUE is null) AND (X_DEFAULT_VALUE is null)))
         AND (tlinfo.REQUIRED_FLAG = X_REQUIRED_FLAG)
         AND ((tlinfo.LOG_IN_AUDIT_TRAIL_FLAG = X_LOG_IN_AUDIT_TRAIL_FLAG)
               OR ((tlinfo.LOG_IN_AUDIT_TRAIL_FLAG is null) AND (X_LOG_IN_AUDIT_TRAIL_FLAG is null)))
         AND ((tlinfo.VALUE_LOOKUP_SQL = X_VALUE_LOOKUP_SQL)
               OR ((tlinfo.VALUE_LOOKUP_SQL is null) AND (X_VALUE_LOOKUP_SQL is null)))
         AND ((tlinfo.VALIDATION_PROCEDURE = X_VALIDATION_PROCEDURE)
               OR ((tlinfo.VALIDATION_PROCEDURE is null) AND (X_VALIDATION_PROCEDURE is null)))
         AND ((tlinfo.EVALUATION_MODE = X_EVALUATION_MODE)
               OR ((tlinfo.EVALUATION_MODE is null) AND (X_EVALUATION_MODE is null)))
         AND ((tlinfo.EVALUATION_SEQ = X_EVALUATION_SEQ)
               OR ((tlinfo.EVALUATION_SEQ is null) AND (X_EVALUATION_SEQ is null)))
         AND ((tlinfo.EVALUATION_PROCEDURE = X_EVALUATION_PROCEDURE)
               OR ((tlinfo.EVALUATION_PROCEDURE is null) AND (X_EVALUATION_PROCEDURE is null)))
         AND ((tlinfo.DISPLAY_SEQ = X_DISPLAY_SEQ)
               OR ((tlinfo.DISPLAY_SEQ is null) AND (X_DISPLAY_SEQ is null)))
    ) then
      null;
    else
      fnd_message.set_name('FND', 'FORM_RECORD_CHANGED');
      app_exception.raise_exception;
    end if;
  end loop;
  return;
end LOCK_ROW;

procedure UPDATE_ROW (
  -- skilaru 7/17/01 WI_PARAMETER_ID dropped
  -- X_WI_PARAMETER_ID in NUMBER,
  X_PARAMETER_NAME in VARCHAR2,
  X_WORKITEM_ID in NUMBER,
  X_REQUIRED_FLAG in VARCHAR2,
  X_LOG_IN_AUDIT_TRAIL_FLAG in VARCHAR2,
  X_VALUE_LOOKUP_SQL in VARCHAR2,
  X_VALIDATION_PROCEDURE in VARCHAR2,
  X_EVALUATION_MODE in VARCHAR2,
  X_EVALUATION_SEQ in NUMBER,
  X_EVALUATION_PROCEDURE in VARCHAR2,
  X_DISPLAY_SEQ in NUMBER,
  X_DEFAULT_VALUE in VARCHAR2,
  X_LAST_UPDATE_DATE in DATE,
  X_LAST_UPDATED_BY in NUMBER,
  X_LAST_UPDATE_LOGIN in NUMBER
) is
begin
  update XDP_WI_PARAMETERS set
    REQUIRED_FLAG = X_REQUIRED_FLAG,
    LOG_IN_AUDIT_TRAIL_FLAG = X_LOG_IN_AUDIT_TRAIL_FLAG,
    VALUE_LOOKUP_SQL = X_VALUE_LOOKUP_SQL,
    VALIDATION_PROCEDURE = X_VALIDATION_PROCEDURE,
    EVALUATION_MODE = X_EVALUATION_MODE,
    EVALUATION_SEQ = X_EVALUATION_SEQ,
    EVALUATION_PROCEDURE = X_EVALUATION_PROCEDURE,
    DISPLAY_SEQ = X_DISPLAY_SEQ,
    DEFAULT_VALUE = X_DEFAULT_VALUE,
    LAST_UPDATE_DATE = X_LAST_UPDATE_DATE,
    LAST_UPDATED_BY = X_LAST_UPDATED_BY,
    LAST_UPDATE_LOGIN = X_LAST_UPDATE_LOGIN
  -- skilaru 7/17/01 WI_PARAMETER_ID is dropped
  -- where WI_PARAMETER_ID = X_WI_PARAMETER_ID
  where PARAMETER_NAME = X_PARAMETER_NAME
  and   WORKITEM_ID     = X_WORKITEM_ID;

  if (sql%notfound) then
    raise no_data_found;
  end if;
end UPDATE_ROW;

procedure DELETE_ROW (
  -- skilaru 7/17/01 WI_PARAMETER_ID dropped
  -- X_WI_PARAMETER_ID in NUMBER,
  X_PARAMETER_NAME in VARCHAR2,
  X_WORKITEM_ID in NUMBER
) is
begin
  delete from XDP_WI_PARAMETERS
  -- skilaru 7/17/01 WI_PARAMETER_ID dropped
  -- where WI_PARAMETER_ID = X_WI_PARAMETER_ID
  where PARAMETER_NAME = X_PARAMETER_NAME
  and   WORKITEM_ID     = X_WORKITEM_ID;

  if (sql%notfound) then
    raise no_data_found;
  end if;

end DELETE_ROW;

end XDP_WI_PARAMETERS_PKG;

/
