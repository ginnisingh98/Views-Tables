--------------------------------------------------------
--  DDL for Package Body PER_PERDETBU_XMLP_PKG
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE PACKAGE BODY "APPS"."PER_PERDETBU_XMLP_PKG" AS
/* $Header: PERDETBUB.pls 120.0 2008/01/07 14:52:04 srikrish noship $ */
  FUNCTION BEFOREREPORT RETURN BOOLEAN IS
    L_TOP_ORG_ID NUMBER(10);
  BEGIN
    P_CONC_REQUEST_ID := FND_GLOBAL.CONC_REQUEST_ID;
    P_DATE_FROM_T := TO_CHAR(P_DATE_FROM,'DD-MON-YYYY');
    P_SESSION_DATE_T := TO_CHAR(P_SESSION_DATE,'DD-MON-YYYY');

    INSERT INTO FND_SESSIONS
      (SESSION_ID
      ,EFFECTIVE_DATE)
    VALUES   (USERENV('SESSIONID')
      ,P_DATE_FROM);
    IF (P_TOP_ORG IS NULL AND P_ORG_HIERARCHY IS NOT NULL) THEN
      BEGIN
        SELECT
          DISTINCT
          POSE.ORGANIZATION_ID_PARENT
        INTO L_TOP_ORG_ID
        FROM
          PER_ORG_STRUCTURE_ELEMENTS POSE,
          PER_ORG_STRUCTURE_VERSIONS POSV
        WHERE POSE.ORG_STRUCTURE_VERSION_ID = POSV.ORG_STRUCTURE_VERSION_ID
          AND POSV.ORGANIZATION_STRUCTURE_ID = P_ORG_HIERARCHY
          AND POSV.VERSION_NUMBER = (
          SELECT
            MAX(VERSION_NUMBER)
          FROM
            PER_ORG_STRUCTURE_VERSIONS POSV
          WHERE POSV.BUSINESS_GROUP_ID = P_BUSINESS_GROUP_ID
            AND POSV.ORGANIZATION_STRUCTURE_ID = P_ORG_HIERARCHY )
          AND POSE.ORGANIZATION_ID_PARENT not in (
          SELECT
            POSE.ORGANIZATION_ID_CHILD
          FROM
            PER_ORG_STRUCTURE_ELEMENTS POSE,
            PER_ORG_STRUCTURE_VERSIONS POSV
          WHERE POSE.ORG_STRUCTURE_VERSION_ID = POSV.ORG_STRUCTURE_VERSION_ID
            AND POSV.ORGANIZATION_STRUCTURE_ID = P_ORG_HIERARCHY
            AND POSV.VERSION_NUMBER = (
            SELECT
              MAX(VERSION_NUMBER)
            FROM
              PER_ORG_STRUCTURE_VERSIONS POSV
            WHERE POSV.BUSINESS_GROUP_ID = P_BUSINESS_GROUP_ID
              AND POSV.ORGANIZATION_STRUCTURE_ID = P_ORG_HIERARCHY ) );
        P_TOP_ORG := L_TOP_ORG_ID;
      EXCEPTION
        WHEN OTHERS THEN
          NULL;
      END;
    END IF;
    CP_TOP_ORG_NAME := HR_REPORTS.GET_BUSINESS_GROUP(P_BUSINESS_GROUP_ID);
    HR_DE_TAX_SUPPORT.BATCH_UPDATE(P_BUSINESS_GROUP_ID
                                  ,P_DATE_FROM
                                  ,P_ORG_HIERARCHY
                                  ,P_TOP_ORG
                                  ,P_ASSIGNMENT_SET
                                  ,P_ACTION
                                  ,P_CONC_REQUEST_ID
                                  ,P_TAX_CLASS
                                  ,P_NU_CHILDREN
                                  ,P_TAXFREE_INCOME
                                  ,P_ADD_TAX_INCOME);
    IF (P_ACTION = 'UR') THEN
      INSERT INTO FND_SESSIONS
        (SESSION_ID
        ,EFFECTIVE_DATE)
      VALUES   (USERENV('SESSIONID')
        ,P_DATE_FROM - 1);
    END IF;
    RETURN (TRUE);
  END BEFOREREPORT;

  FUNCTION AFTERREPORT RETURN BOOLEAN IS
  BEGIN
    IF P_ACTION = 'R' THEN
      HR_DE_TAX_SUPPORT.DELETE_ASSIGNMENT(P_CONC_REQUEST_ID);
    END IF;
    /*SRW.USER_EXIT('FND SRWEXIT')*/NULL;
    RETURN (TRUE);
  END AFTERREPORT;

  FUNCTION CF_OLD_TAX_CLASSFORMULA(ASSIGNMENT_ID1 IN NUMBER
                                  ,ELEMENT_ENTRY_ID IN NUMBER) RETURN VARCHAR2 IS
    L_TAX_CLASS VARCHAR2(30);
  BEGIN
    IF (P_ACTION = 'UR') THEN
      SELECT
        DISTINCT
        TAX_CLASS
      INTO L_TAX_CLASS
      FROM
        HR_DE_TAX_INFORMATION_V HDTV
      WHERE HDTV.ASSIGNMENT_ID = ASSIGNMENT_ID1
        AND HDTV.ELEMENT_ENTRY_ID = CF_OLD_TAX_CLASSFORMULA.ELEMENT_ENTRY_ID
        AND HDTV.PROCESS_ID <> TO_CHAR(P_CONC_REQUEST_ID);
    ELSE
      SELECT
        DISTINCT
        TAX_CLASS
      INTO L_TAX_CLASS
      FROM
        HR_DE_TAX_INFORMATION_V HDTV
      WHERE HDTV.ASSIGNMENT_ID = ASSIGNMENT_ID1
        AND P_DATE_FROM BETWEEN HDTV.EFFECTIVE_START_DATE
        AND NVL(HDTV.EFFECTIVE_END_DATE
         ,P_DATE_FROM);
    END IF;
    RETURN L_TAX_CLASS;
  EXCEPTION
    WHEN OTHERS THEN
      RETURN NULL;
  END CF_OLD_TAX_CLASSFORMULA;

  FUNCTION CF_OLD_NOCFORMULA(ASSIGNMENT_ID1 IN NUMBER
                            ,ELEMENT_ENTRY_ID IN NUMBER) RETURN VARCHAR2 IS
    L_OLD_NOC VARCHAR2(30);
  BEGIN
    IF (P_ACTION = 'UR') THEN
      SELECT
        DISTINCT
        NO_OF_CHILDREN
      INTO L_OLD_NOC
      FROM
        HR_DE_TAX_INFORMATION_V HDTV
      WHERE HDTV.ASSIGNMENT_ID = ASSIGNMENT_ID1
        AND HDTV.ELEMENT_ENTRY_ID = CF_OLD_NOCFORMULA.ELEMENT_ENTRY_ID
        AND HDTV.PROCESS_ID <> TO_CHAR(P_CONC_REQUEST_ID);
    ELSE
      SELECT
        DISTINCT
        NO_OF_CHILDREN
      INTO L_OLD_NOC
      FROM
        HR_DE_TAX_INFORMATION_V HDTV
      WHERE HDTV.ASSIGNMENT_ID = ASSIGNMENT_ID1
        AND P_DATE_FROM BETWEEN HDTV.EFFECTIVE_START_DATE
        AND NVL(HDTV.EFFECTIVE_END_DATE
         ,P_DATE_FROM);
    END IF;
    RETURN L_OLD_NOC;
  EXCEPTION
    WHEN OTHERS THEN
      RETURN 0;
  END CF_OLD_NOCFORMULA;

  FUNCTION CF_OLD_MTFIFORMULA(ASSIGNMENT_ID1 IN NUMBER
                             ,ELEMENT_ENTRY_ID IN NUMBER) RETURN NUMBER IS
    L_OLD_MTFI NUMBER(10);
  BEGIN
    IF (P_ACTION = 'UR') THEN
      SELECT
        DISTINCT
        MONTHLY_TAX_FREE_INCOME
      INTO L_OLD_MTFI
      FROM
        HR_DE_TAX_INFORMATION_V HDTV
      WHERE HDTV.ASSIGNMENT_ID = ASSIGNMENT_ID1
        AND HDTV.ELEMENT_ENTRY_ID = CF_OLD_MTFIFORMULA.ELEMENT_ENTRY_ID
        AND HDTV.PROCESS_ID <> TO_CHAR(P_CONC_REQUEST_ID);
    ELSE
      SELECT
        DISTINCT
        MONTHLY_TAX_FREE_INCOME
      INTO L_OLD_MTFI
      FROM
        HR_DE_TAX_INFORMATION_V HDTV
      WHERE HDTV.ASSIGNMENT_ID = ASSIGNMENT_ID1
        AND P_DATE_FROM BETWEEN HDTV.EFFECTIVE_START_DATE
        AND NVL(HDTV.EFFECTIVE_END_DATE
         ,P_DATE_FROM);
    END IF;
    RETURN L_OLD_MTFI;
  EXCEPTION
    WHEN OTHERS THEN
      RETURN '0';
  END CF_OLD_MTFIFORMULA;

  FUNCTION CF_OLD_YTFIFORMULA(ASSIGNMENT_ID1 IN NUMBER
                             ,ELEMENT_ENTRY_ID IN NUMBER) RETURN NUMBER IS
    L_OLD_YTFI NUMBER(10);
  BEGIN
    IF (P_ACTION = 'UR') THEN
      SELECT
        DISTINCT
        YEARLY_TAX_FREE_INCOME
      INTO L_OLD_YTFI
      FROM
        HR_DE_TAX_INFORMATION_V HDTV
      WHERE HDTV.ASSIGNMENT_ID = ASSIGNMENT_ID1
        AND HDTV.ELEMENT_ENTRY_ID = CF_OLD_YTFIFORMULA.ELEMENT_ENTRY_ID
        AND HDTV.PROCESS_ID <> TO_CHAR(P_CONC_REQUEST_ID);
    ELSE
      SELECT
        DISTINCT
        YEARLY_TAX_FREE_INCOME
      INTO L_OLD_YTFI
      FROM
        HR_DE_TAX_INFORMATION_V HDTV
      WHERE HDTV.ASSIGNMENT_ID = ASSIGNMENT_ID1
        AND P_DATE_FROM BETWEEN HDTV.EFFECTIVE_START_DATE
        AND NVL(HDTV.EFFECTIVE_END_DATE
         ,P_DATE_FROM);
    END IF;
    RETURN L_OLD_YTFI;
  EXCEPTION
    WHEN OTHERS THEN
      RETURN '0';
  END CF_OLD_YTFIFORMULA;

  FUNCTION CF_OLD_AMTIFORMULA(ASSIGNMENT_ID1 IN NUMBER
                             ,ELEMENT_ENTRY_ID IN NUMBER) RETURN NUMBER IS
    L_OLD_AMTI NUMBER(10);
  BEGIN
    IF (P_ACTION = 'UR') THEN
      SELECT
        DISTINCT
        ADDITIONAL_MTH_TAXABLE_INCOME
      INTO L_OLD_AMTI
      FROM
        HR_DE_TAX_INFORMATION_V HDTV
      WHERE HDTV.ASSIGNMENT_ID = ASSIGNMENT_ID1
        AND HDTV.ELEMENT_ENTRY_ID = CF_OLD_AMTIFORMULA.ELEMENT_ENTRY_ID
        AND HDTV.PROCESS_ID <> TO_CHAR(P_CONC_REQUEST_ID);
    ELSE
      SELECT
        DISTINCT
        ADDITIONAL_MTH_TAXABLE_INCOME
      INTO L_OLD_AMTI
      FROM
        HR_DE_TAX_INFORMATION_V HDTV
      WHERE HDTV.ASSIGNMENT_ID = ASSIGNMENT_ID1
        AND P_DATE_FROM BETWEEN HDTV.EFFECTIVE_START_DATE
        AND NVL(HDTV.EFFECTIVE_END_DATE
         ,P_DATE_FROM);
    END IF;
    RETURN L_OLD_AMTI;
  EXCEPTION
    WHEN OTHERS THEN
      RETURN '0';
  END CF_OLD_AMTIFORMULA;

  FUNCTION CF_OLD_AYTIFORMULA(ASSIGNMENT_ID1 IN NUMBER
                             ,ELEMENT_ENTRY_ID IN NUMBER) RETURN NUMBER IS
    L_OLD_AYTI NUMBER(10);
  BEGIN
    IF (P_ACTION = 'UR') THEN
      SELECT
        DISTINCT
        ADDITIONAL_YEAR_TAXABLE_INCOME
      INTO L_OLD_AYTI
      FROM
        HR_DE_TAX_INFORMATION_V HDTV
      WHERE HDTV.ASSIGNMENT_ID = ASSIGNMENT_ID1
        AND HDTV.ELEMENT_ENTRY_ID = CF_OLD_AYTIFORMULA.ELEMENT_ENTRY_ID
        AND HDTV.PROCESS_ID <> TO_CHAR(P_CONC_REQUEST_ID);
    ELSE
      SELECT
        DISTINCT
        ADDITIONAL_YEAR_TAXABLE_INCOME
      INTO L_OLD_AYTI
      FROM
        HR_DE_TAX_INFORMATION_V HDTV
      WHERE HDTV.ASSIGNMENT_ID = ASSIGNMENT_ID1
        AND P_DATE_FROM BETWEEN HDTV.EFFECTIVE_START_DATE
        AND NVL(HDTV.EFFECTIVE_END_DATE
         ,P_DATE_FROM);
    END IF;
    RETURN L_OLD_AYTI;
  EXCEPTION
    WHEN OTHERS THEN
      RETURN '0';
  END CF_OLD_AYTIFORMULA;

  FUNCTION CF_NEW_TAX_CLASSFORMULA(ASSIGNMENT_ID1 IN NUMBER
                                  ,ELEMENT_ENTRY_ID IN NUMBER) RETURN CHAR IS
    L_TAX_CLASS VARCHAR2(30);
  BEGIN
    IF (P_ACTION = 'UR') THEN
      SELECT
        DISTINCT
        TAX_CLASS
      INTO L_TAX_CLASS
      FROM
        HR_DE_TAX_INFORMATION_V HDTV
      WHERE HDTV.ASSIGNMENT_ID = ASSIGNMENT_ID1
        AND HDTV.ELEMENT_ENTRY_ID = CF_NEW_TAX_CLASSFORMULA.ELEMENT_ENTRY_ID
        AND HDTV.PROCESS_ID = TO_CHAR(P_CONC_REQUEST_ID);
    ELSE
      IF (P_TAX_CLASS = 'NC') THEN
        SELECT
          DISTINCT
          TAX_CLASS
        INTO L_TAX_CLASS
        FROM
          HR_DE_TAX_INFORMATION_V HDTV
        WHERE HDTV.ASSIGNMENT_ID = ASSIGNMENT_ID1
          AND P_DATE_FROM BETWEEN HDTV.EFFECTIVE_START_DATE
          AND NVL(HDTV.EFFECTIVE_END_DATE
           ,P_DATE_FROM);
      ELSE
        L_TAX_CLASS := P_TAX_CLASS_MEANING;
      END IF;
    END IF;
    RETURN L_TAX_CLASS;
  EXCEPTION
    WHEN OTHERS THEN
      RETURN NULL;
  END CF_NEW_TAX_CLASSFORMULA;

  FUNCTION CF_NEW_NOCFORMULA(ASSIGNMENT_ID1 IN NUMBER
                            ,ELEMENT_ENTRY_ID IN NUMBER) RETURN CHAR IS
    L_NEW_NOC VARCHAR2(30);
  BEGIN
    IF (P_ACTION = 'UR') THEN
      SELECT
        DISTINCT
        NO_OF_CHILDREN
      INTO L_NEW_NOC
      FROM
        HR_DE_TAX_INFORMATION_V HDTV
      WHERE HDTV.ASSIGNMENT_ID = ASSIGNMENT_ID1
        AND HDTV.ELEMENT_ENTRY_ID = CF_NEW_NOCFORMULA.ELEMENT_ENTRY_ID
        AND HDTV.PROCESS_ID = TO_CHAR(P_CONC_REQUEST_ID);
    ELSE
      IF (P_NU_CHILDREN = 'NC') THEN
        SELECT
          DISTINCT
          NO_OF_CHILDREN
        INTO L_NEW_NOC
        FROM
          HR_DE_TAX_INFORMATION_V HDTV
        WHERE HDTV.ASSIGNMENT_ID = ASSIGNMENT_ID1
          AND P_DATE_FROM BETWEEN HDTV.EFFECTIVE_START_DATE
          AND NVL(HDTV.EFFECTIVE_END_DATE
           ,P_DATE_FROM);
      ELSE
        L_NEW_NOC := '0';
      END IF;
    END IF;
    RETURN L_NEW_NOC;
  EXCEPTION
    WHEN OTHERS THEN
      RETURN 0;
  END CF_NEW_NOCFORMULA;

  FUNCTION CF_NEW_YTFIFORMULA(ASSIGNMENT_ID1 IN NUMBER
                             ,ELEMENT_ENTRY_ID IN NUMBER) RETURN NUMBER IS
    L_NEW_YTFI NUMBER(10);
  BEGIN
    IF (P_ACTION = 'UR') THEN
      SELECT
        DISTINCT
        YEARLY_TAX_FREE_INCOME
      INTO L_NEW_YTFI
      FROM
        HR_DE_TAX_INFORMATION_V HDTV
      WHERE HDTV.ASSIGNMENT_ID = ASSIGNMENT_ID1
        AND HDTV.ELEMENT_ENTRY_ID = CF_NEW_YTFIFORMULA.ELEMENT_ENTRY_ID
        AND HDTV.PROCESS_ID = TO_CHAR(P_CONC_REQUEST_ID);
    ELSE
      IF (P_TAXFREE_INCOME = 'NC') THEN
        SELECT
          DISTINCT
          YEARLY_TAX_FREE_INCOME
        INTO L_NEW_YTFI
        FROM
          HR_DE_TAX_INFORMATION_V HDTV
        WHERE HDTV.ASSIGNMENT_ID = ASSIGNMENT_ID1
          AND P_DATE_FROM BETWEEN HDTV.EFFECTIVE_START_DATE
          AND NVL(HDTV.EFFECTIVE_END_DATE
           ,P_DATE_FROM);
      ELSE
        L_NEW_YTFI := TO_NUMBER(P_TAX_FREE_INC_MEANING);
      END IF;
    END IF;
    RETURN L_NEW_YTFI;
  EXCEPTION
    WHEN OTHERS THEN
      RETURN '0';
  END CF_NEW_YTFIFORMULA;

  FUNCTION CF_NEW_AYTIFORMULA(ASSIGNMENT_ID1 IN NUMBER
                             ,ELEMENT_ENTRY_ID IN NUMBER) RETURN NUMBER IS
    L_NEW_AYTI NUMBER(10);
  BEGIN
    IF (P_ACTION = 'UR') THEN
      SELECT
        DISTINCT
        ADDITIONAL_YEAR_TAXABLE_INCOME
      INTO L_NEW_AYTI
      FROM
        HR_DE_TAX_INFORMATION_V HDTV
      WHERE HDTV.ASSIGNMENT_ID = ASSIGNMENT_ID1
        AND HDTV.ELEMENT_ENTRY_ID = CF_NEW_AYTIFORMULA.ELEMENT_ENTRY_ID
        AND HDTV.PROCESS_ID = TO_CHAR(P_CONC_REQUEST_ID);
    ELSE
      IF (P_ADD_TAX_INCOME = 'NC') THEN
        SELECT
          DISTINCT
          ADDITIONAL_YEAR_TAXABLE_INCOME
        INTO L_NEW_AYTI
        FROM
          HR_DE_TAX_INFORMATION_V HDTV
        WHERE HDTV.ASSIGNMENT_ID = ASSIGNMENT_ID1
          AND P_DATE_FROM BETWEEN HDTV.EFFECTIVE_START_DATE
          AND NVL(HDTV.EFFECTIVE_END_DATE
           ,P_DATE_FROM);
      ELSE
        L_NEW_AYTI := TO_NUMBER(P_ADD_TAX_INC_MEANING);
      END IF;
    END IF;
    RETURN L_NEW_AYTI;
  EXCEPTION
    WHEN OTHERS THEN
      RETURN '0';
  END CF_NEW_AYTIFORMULA;

  FUNCTION CF_NEW_AMTIFORMULA(ASSIGNMENT_ID1 IN NUMBER
                             ,ELEMENT_ENTRY_ID IN NUMBER) RETURN NUMBER IS
    L_NEW_AMTI NUMBER(10);
  BEGIN
    IF (P_ACTION = 'UR') THEN
      SELECT
        DISTINCT
        ADDITIONAL_MTH_TAXABLE_INCOME
      INTO L_NEW_AMTI
      FROM
        HR_DE_TAX_INFORMATION_V HDTV
      WHERE HDTV.ASSIGNMENT_ID = ASSIGNMENT_ID1
        AND HDTV.ELEMENT_ENTRY_ID = CF_NEW_AMTIFORMULA.ELEMENT_ENTRY_ID
        AND HDTV.PROCESS_ID = TO_CHAR(P_CONC_REQUEST_ID);
    ELSE
      IF (P_ADD_TAX_INCOME = 'NC') THEN
        SELECT
          DISTINCT
          ADDITIONAL_MTH_TAXABLE_INCOME
        INTO L_NEW_AMTI
        FROM
          HR_DE_TAX_INFORMATION_V HDTV
        WHERE HDTV.ASSIGNMENT_ID = ASSIGNMENT_ID1
          AND P_DATE_FROM BETWEEN HDTV.EFFECTIVE_START_DATE
          AND NVL(HDTV.EFFECTIVE_END_DATE
           ,P_DATE_FROM);
      ELSE
        L_NEW_AMTI := TO_NUMBER(P_ADD_TAX_INC_MEANING);
      END IF;
    END IF;
    RETURN L_NEW_AMTI;
  EXCEPTION
    WHEN OTHERS THEN
      RETURN '0';
  END CF_NEW_AMTIFORMULA;

  FUNCTION CF_NEW_MTFIFORMULA(ASSIGNMENT_ID1 IN NUMBER
                             ,ELEMENT_ENTRY_ID IN NUMBER) RETURN NUMBER IS
    L_NEW_MTFI NUMBER(10);
  BEGIN
    IF (P_ACTION = 'UR') THEN
      SELECT
        DISTINCT
        MONTHLY_TAX_FREE_INCOME
      INTO L_NEW_MTFI
      FROM
        HR_DE_TAX_INFORMATION_V HDTV
      WHERE HDTV.ASSIGNMENT_ID = ASSIGNMENT_ID1
        AND HDTV.ELEMENT_ENTRY_ID = CF_NEW_MTFIFORMULA.ELEMENT_ENTRY_ID
        AND HDTV.PROCESS_ID = TO_CHAR(P_CONC_REQUEST_ID);
    ELSE
      IF (P_TAXFREE_INCOME = 'NC') THEN
        SELECT
          DISTINCT
          MONTHLY_TAX_FREE_INCOME
        INTO L_NEW_MTFI
        FROM
          HR_DE_TAX_INFORMATION_V HDTV
        WHERE HDTV.ASSIGNMENT_ID = ASSIGNMENT_ID1
          AND P_DATE_FROM BETWEEN HDTV.EFFECTIVE_START_DATE
          AND NVL(HDTV.EFFECTIVE_END_DATE
           ,P_DATE_FROM);
      ELSE
        L_NEW_MTFI := P_TAX_FREE_INC_MEANING;
      END IF;
    END IF;
    RETURN L_NEW_MTFI;
  EXCEPTION
    WHEN OTHERS THEN
      RETURN '0';
  END CF_NEW_MTFIFORMULA;

  FUNCTION CP_TOP_ORG_NAME_P RETURN VARCHAR2 IS
  BEGIN
    RETURN CP_TOP_ORG_NAME;
  END CP_TOP_ORG_NAME_P;

END PER_PERDETBU_XMLP_PKG;

/
