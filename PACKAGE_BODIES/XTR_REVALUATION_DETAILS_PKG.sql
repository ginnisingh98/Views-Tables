--------------------------------------------------------
--  DDL for Package Body XTR_REVALUATION_DETAILS_PKG
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE PACKAGE BODY "APPS"."XTR_REVALUATION_DETAILS_PKG" as
/* $Header: xtrrdetb.pls 120.2 2005/06/29 10:29:31 rjose noship $ */
procedure INSERT_ROW (
  X_ROWID in out NOCOPY VARCHAR2,
  X_REVALUATION_DETAILS_ID in NUMBER,
  X_ACCOUNT_NO in VARCHAR2,
  X_REVAL_CURR_FV_AMOUNT in NUMBER,
  X_COMPLETE_FLAG in VARCHAR2,
  X_FAIR_VALUE in NUMBER,
  X_SWAP_REF in VARCHAR2,
  X_CUMM_GAIN_LOSS_AMOUNT in NUMBER,
  X_CURR_GAIN_LOSS_AMOUNT in NUMBER,
  X_SOB_FV_GAIN_LOSS_AMOUNT in NUMBER,
  X_SOB_FAIR_VALUE_AMOUNT in NUMBER,
  X_CTR_CURR_SOB_CURR_FWD_RATE in NUMBER,
  X_EXCHANGE_RATE_TWO in NUMBER,
  X_ACTION_CODE in VARCHAR2,
  X_COMPANY_CODE in VARCHAR2,
  X_CONTRACT_CODE in VARCHAR2,
  X_CURRENCYA in VARCHAR2,
  X_CURRENCYB in VARCHAR2,
  X_DEAL_NO in NUMBER,
  X_DEAL_SUBTYPE in VARCHAR2,
  X_DEAL_TYPE in VARCHAR2,
  X_EFFECTIVE_DATE in DATE,
  X_EFFECTIVE_DAYS in NUMBER,
  X_ENTERED_BY in VARCHAR2,
  X_ENTERED_ON in DATE,
  X_FACE_VALUE in NUMBER,
  X_FXO_SELL_REF_AMOUNT in NUMBER,
  X_PERIOD_FROM in DATE,
  X_PERIOD_TO in DATE,
  X_PORTFOLIO_CODE in VARCHAR2,
  X_PRODUCT_TYPE in VARCHAR2,
  X_REALISED_PL in NUMBER,
  X_REVAL_CCY in VARCHAR2,
  X_REVAL_RATE in NUMBER,
  X_TRANSACTION_NO in NUMBER,
  X_TRANSACTION_PERIOD in NUMBER,
  X_TRANSACTION_RATE in NUMBER,
  X_UNREALISED_PL in NUMBER,
  X_UPDATED_BY in VARCHAR2,
  X_UPDATED_ON in DATE,
  X_YEAR_BASIS in NUMBER,
  X_CREATED_ON in DATE,
  X_EXCHANGE_RATE_ONE in NUMBER,
  X_REALIZED_FLAG in VARCHAR2,
  X_OVERWRITE_TYPE in VARCHAR2,
  X_OVERWRITE_VALUE in NUMBER,
  X_OVERWRITE_REASON in VARCHAR2,
  X_BATCH_ID in NUMBER,
  X_CREATED_BY in NUMBER,
  X_NI_DISC_AMOUNT in NUMBER,
  X_AMOUNT_TYPE in VARCHAR2,
  X_QUANTITY in NUMBER
) is
  cursor C is select ROWID from XTR_REVALUATION_DETAILS
    where REVALUATION_DETAILS_ID = X_REVALUATION_DETAILS_ID
    ;
begin
  insert into XTR_REVALUATION_DETAILS (
    ACCOUNT_NO,
    BATCH_ID,
    REVALUATION_DETAILS_ID,
    REVAL_CURR_FV_AMOUNT,
    COMPLETE_FLAG,
    FAIR_VALUE,
    SWAP_REF,
    CUMM_GAIN_LOSS_AMOUNT,
    CURR_GAIN_LOSS_AMOUNT,
    SOB_FV_GAIN_LOSS_AMOUNT,
    SOB_FAIR_VALUE_AMOUNT,
    CTR_CURR_SOB_CURR_FWD_RATE,
    EXCHANGE_RATE_TWO,
    ACTION_CODE,
    COMPANY_CODE,
    CONTRACT_CODE,
    CURRENCYA,
    CURRENCYB,
    DEAL_NO,
    DEAL_SUBTYPE,
    DEAL_TYPE,
    EFFECTIVE_DATE,
    EFFECTIVE_DAYS,
    ENTERED_BY,
    ENTERED_ON,
    FACE_VALUE,
    FXO_SELL_REF_AMOUNT,
    PERIOD_FROM,
    PERIOD_TO,
    PORTFOLIO_CODE,
    PRODUCT_TYPE,
    REALISED_PL,
    REVAL_CCY,
    REVAL_RATE,
    TRANSACTION_NO,
    TRANSACTION_PERIOD,
    TRANSACTION_RATE,
    UNREALISED_PL,
    UPDATED_BY,
    UPDATED_ON,
    YEAR_BASIS,
    CREATED_BY,
    CREATED_ON,
    EXCHANGE_RATE_ONE,
    REALIZED_FLAG,
    OVERWRITE_TYPE,
    OVERWRITE_VALUE,
    OVERWRITE_REASON,
    NI_DISC_AMOUNT,
    AMOUNT_TYPE,
    QUANTITY
  ) values
(
    X_ACCOUNT_NO,
    X_BATCH_ID,
    X_REVALUATION_DETAILS_ID,
    X_REVAL_CURR_FV_AMOUNT,
    X_COMPLETE_FLAG,
    X_FAIR_VALUE,
    X_SWAP_REF,
    X_CUMM_GAIN_LOSS_AMOUNT,
    X_CURR_GAIN_LOSS_AMOUNT,
    X_SOB_FV_GAIN_LOSS_AMOUNT,
    X_SOB_FAIR_VALUE_AMOUNT,
    X_CTR_CURR_SOB_CURR_FWD_RATE,
    X_EXCHANGE_RATE_TWO,
    X_ACTION_CODE,
    X_COMPANY_CODE,
    X_CONTRACT_CODE,
    X_CURRENCYA,
    X_CURRENCYB,
    X_DEAL_NO,
    X_DEAL_SUBTYPE,
    X_DEAL_TYPE,
    X_EFFECTIVE_DATE,
    X_EFFECTIVE_DAYS,
    X_ENTERED_BY,
    X_ENTERED_ON,
    X_FACE_VALUE,
    X_FXO_SELL_REF_AMOUNT,
    X_PERIOD_FROM,
    X_PERIOD_TO,
    X_PORTFOLIO_CODE,
    X_PRODUCT_TYPE,
    X_REALISED_PL,
    X_REVAL_CCY,
    X_REVAL_RATE,
    X_TRANSACTION_NO,
    X_TRANSACTION_PERIOD,
    X_TRANSACTION_RATE,
    X_UNREALISED_PL,
    X_UPDATED_BY,
    X_UPDATED_ON,
    X_YEAR_BASIS,
    X_CREATED_BY,
    X_CREATED_ON,
    X_EXCHANGE_RATE_ONE,
    X_REALIZED_FLAG,
    X_OVERWRITE_TYPE,
    X_OVERWRITE_VALUE,
    X_OVERWRITE_REASON,
    X_NI_DISC_AMOUNT,
    X_AMOUNT_TYPE,
    X_QUANTITY
);

  open c;
  fetch c into X_ROWID;
  if (c%notfound) then
    close c;
    raise no_data_found;
  end if;
  close c;

end INSERT_ROW;

procedure LOCK_ROW (
  X_REVALUATION_DETAILS_ID in NUMBER,
  X_ACCOUNT_NO in VARCHAR2,
  X_REVAL_CURR_FV_AMOUNT in NUMBER,
  X_COMPLETE_FLAG in VARCHAR2,
  X_FAIR_VALUE in NUMBER,
  X_SWAP_REF in VARCHAR2,
  X_CUMM_GAIN_LOSS_AMOUNT in NUMBER,
  X_CURR_GAIN_LOSS_AMOUNT in NUMBER,
  X_SOB_FV_GAIN_LOSS_AMOUNT in NUMBER,
  X_SOB_FAIR_VALUE_AMOUNT in NUMBER,
  X_CTR_CURR_SOB_CURR_FWD_RATE in NUMBER,
  X_EXCHANGE_RATE_TWO in NUMBER,
  X_ACTION_CODE in VARCHAR2,
  X_COMPANY_CODE in VARCHAR2,
  X_CONTRACT_CODE in VARCHAR2,
  X_CURRENCYA in VARCHAR2,
  X_CURRENCYB in VARCHAR2,
  X_DEAL_NO in NUMBER,
  X_DEAL_SUBTYPE in VARCHAR2,
  X_DEAL_TYPE in VARCHAR2,
  X_EFFECTIVE_DATE in DATE,
  X_EFFECTIVE_DAYS in NUMBER,
  X_ENTERED_BY in VARCHAR2,
  X_ENTERED_ON in DATE,
  X_FACE_VALUE in NUMBER,
  X_FXO_SELL_REF_AMOUNT in NUMBER,
  X_PERIOD_FROM in DATE,
  X_PERIOD_TO in DATE,
  X_PORTFOLIO_CODE in VARCHAR2,
  X_PRODUCT_TYPE in VARCHAR2,
  X_REALISED_PL in NUMBER,
  X_REVAL_CCY in VARCHAR2,
  X_REVAL_RATE in NUMBER,
  X_TRANSACTION_NO in NUMBER,
  X_TRANSACTION_PERIOD in NUMBER,
  X_TRANSACTION_RATE in NUMBER,
  X_UNREALISED_PL in NUMBER,
  X_UPDATED_BY in VARCHAR2,
  X_UPDATED_ON in DATE,
  X_YEAR_BASIS in NUMBER,
  X_CREATED_ON in DATE,
  X_EXCHANGE_RATE_ONE in NUMBER,
  X_REALIZED_FLAG in VARCHAR2,
  X_OVERWRITE_TYPE in VARCHAR2,
  X_OVERWRITE_VALUE in NUMBER,
  X_OVERWRITE_REASON in VARCHAR2,
  X_BATCH_ID in NUMBER,
  X_NI_DISC_AMOUNT in NUMBER,
  X_AMOUNT_TYPE in VARCHAR2,
  X_QUANTITY in NUMBER
) is
  cursor c1 is select
      ACCOUNT_NO,
      REVAL_CURR_FV_AMOUNT,
      COMPLETE_FLAG,
      FAIR_VALUE,
      SWAP_REF,
      CUMM_GAIN_LOSS_AMOUNT,
      CURR_GAIN_LOSS_AMOUNT,
      SOB_FV_GAIN_LOSS_AMOUNT,
      SOB_FAIR_VALUE_AMOUNT,
      CTR_CURR_SOB_CURR_FWD_RATE,
      EXCHANGE_RATE_TWO,
      ACTION_CODE,
      COMPANY_CODE,
      CONTRACT_CODE,
      CURRENCYA,
      CURRENCYB,
      DEAL_NO,
      DEAL_SUBTYPE,
      DEAL_TYPE,
      EFFECTIVE_DATE,
      EFFECTIVE_DAYS,
      ENTERED_BY,
      ENTERED_ON,
      FACE_VALUE,
      FXO_SELL_REF_AMOUNT,
      PERIOD_FROM,
      PERIOD_TO,
      PORTFOLIO_CODE,
      PRODUCT_TYPE,
      REALISED_PL,
      REVAL_CCY,
      REVAL_RATE,
      TRANSACTION_NO,
      TRANSACTION_PERIOD,
      TRANSACTION_RATE,
      UNREALISED_PL,
      UPDATED_BY,
      UPDATED_ON,
      YEAR_BASIS,
      CREATED_ON,
      EXCHANGE_RATE_ONE,
      REALIZED_FLAG,
      OVERWRITE_TYPE,
      OVERWRITE_VALUE,
      OVERWRITE_REASON,
      BATCH_ID,
      NI_DISC_AMOUNT,
      AMOUNT_TYPE,
      QUANTITY
    from XTR_REVALUATION_DETAILS
    where REVALUATION_DETAILS_ID = X_REVALUATION_DETAILS_ID
    for update of REVALUATION_DETAILS_ID nowait;
begin
  for tlinfo in c1 loop
      if (    ((tlinfo.BATCH_ID = X_BATCH_ID)
               OR ((tlinfo.BATCH_ID is null) AND (X_BATCH_ID is null)))
          AND ((tlinfo.ACCOUNT_NO = X_ACCOUNT_NO)
               OR ((tlinfo.ACCOUNT_NO is null) AND (X_ACCOUNT_NO is null)))
          AND ((tlinfo.REVAL_CURR_FV_AMOUNT = X_REVAL_CURR_FV_AMOUNT)
               OR ((tlinfo.REVAL_CURR_FV_AMOUNT is null) AND (X_REVAL_CURR_FV_AMOUNT is null)))
          AND ((tlinfo.COMPLETE_FLAG = X_COMPLETE_FLAG)
               OR ((tlinfo.COMPLETE_FLAG is null) AND (X_COMPLETE_FLAG is null)))
          AND ((tlinfo.FAIR_VALUE = X_FAIR_VALUE)
               OR ((tlinfo.FAIR_VALUE is null) AND (X_FAIR_VALUE is null)))
          AND ((tlinfo.SWAP_REF = X_SWAP_REF)
               OR ((tlinfo.SWAP_REF is null) AND (X_SWAP_REF is null)))
          AND ((tlinfo.CUMM_GAIN_LOSS_AMOUNT = X_CUMM_GAIN_LOSS_AMOUNT)
               OR ((tlinfo.CUMM_GAIN_LOSS_AMOUNT is null) AND (X_CUMM_GAIN_LOSS_AMOUNT is null)))
          AND ((tlinfo.CURR_GAIN_LOSS_AMOUNT = X_CURR_GAIN_LOSS_AMOUNT)
               OR ((tlinfo.CURR_GAIN_LOSS_AMOUNT is null) AND (X_CURR_GAIN_LOSS_AMOUNT is null)))
          AND ((tlinfo.SOB_FV_GAIN_LOSS_AMOUNT = X_SOB_FV_GAIN_LOSS_AMOUNT)
               OR ((tlinfo.SOB_FV_GAIN_LOSS_AMOUNT is null) AND (X_SOB_FV_GAIN_LOSS_AMOUNT is null)))
          AND ((tlinfo.SOB_FAIR_VALUE_AMOUNT = X_SOB_FAIR_VALUE_AMOUNT)
               OR ((tlinfo.SOB_FAIR_VALUE_AMOUNT is null) AND (X_SOB_FAIR_VALUE_AMOUNT is null)))
          AND ((tlinfo.CTR_CURR_SOB_CURR_FWD_RATE = X_CTR_CURR_SOB_CURR_FWD_RATE)
               OR ((tlinfo.CTR_CURR_SOB_CURR_FWD_RATE is null) AND (X_CTR_CURR_SOB_CURR_FWD_RATE is null)))
          AND ((tlinfo.EXCHANGE_RATE_TWO = X_EXCHANGE_RATE_TWO)
               OR ((tlinfo.EXCHANGE_RATE_TWO is null) AND (X_EXCHANGE_RATE_TWO is null)))
          AND ((tlinfo.ACTION_CODE = X_ACTION_CODE)
               OR ((tlinfo.ACTION_CODE is null) AND (X_ACTION_CODE is null)))
          AND (tlinfo.COMPANY_CODE = X_COMPANY_CODE)
          AND ((tlinfo.CONTRACT_CODE = X_CONTRACT_CODE)
               OR ((tlinfo.CONTRACT_CODE is null) AND (X_CONTRACT_CODE is null)))
          AND (tlinfo.CURRENCYA = X_CURRENCYA)
          AND ((tlinfo.CURRENCYB = X_CURRENCYB)
               OR ((tlinfo.CURRENCYB is null) AND (X_CURRENCYB is null)))
          AND (tlinfo.DEAL_NO = X_DEAL_NO)
          AND (tlinfo.DEAL_SUBTYPE = X_DEAL_SUBTYPE)
          AND (tlinfo.DEAL_TYPE = X_DEAL_TYPE)
          AND (tlinfo.EFFECTIVE_DATE = X_EFFECTIVE_DATE)
          AND ((tlinfo.EFFECTIVE_DAYS = X_EFFECTIVE_DAYS)
               OR ((tlinfo.EFFECTIVE_DAYS is null) AND (X_EFFECTIVE_DAYS is null)))
          AND (tlinfo.ENTERED_BY = X_ENTERED_BY)
          AND (tlinfo.ENTERED_ON = X_ENTERED_ON)
          AND (tlinfo.FACE_VALUE = X_FACE_VALUE)
          AND ((tlinfo.FXO_SELL_REF_AMOUNT = X_FXO_SELL_REF_AMOUNT)
               OR ((tlinfo.FXO_SELL_REF_AMOUNT is null) AND (X_FXO_SELL_REF_AMOUNT is null)))
          AND (tlinfo.PERIOD_FROM = X_PERIOD_FROM)
          AND (tlinfo.PERIOD_TO = X_PERIOD_TO)
          AND ((tlinfo.PORTFOLIO_CODE = X_PORTFOLIO_CODE)
               OR ((tlinfo.PORTFOLIO_CODE is null) AND (X_PORTFOLIO_CODE is null)))
          AND (tlinfo.PRODUCT_TYPE = X_PRODUCT_TYPE)
          AND ((tlinfo.REALISED_PL = X_REALISED_PL)
               OR ((tlinfo.REALISED_PL is null) AND (X_REALISED_PL is null)))
          AND ((tlinfo.REVAL_CCY = X_REVAL_CCY)
               OR ((tlinfo.REVAL_CCY is null) AND (X_REVAL_CCY is null)))
          AND ((tlinfo.REVAL_RATE = X_REVAL_RATE)
               OR ((tlinfo.REVAL_RATE is null) AND (X_REVAL_RATE is null)))
          AND ((tlinfo.TRANSACTION_NO = X_TRANSACTION_NO)
               OR ((tlinfo.TRANSACTION_NO is null) AND (X_TRANSACTION_NO is null)))
          AND (tlinfo.TRANSACTION_PERIOD = X_TRANSACTION_PERIOD)
          AND (tlinfo.TRANSACTION_RATE = X_TRANSACTION_RATE)
          AND ((tlinfo.UNREALISED_PL = X_UNREALISED_PL)
               OR ((tlinfo.UNREALISED_PL is null) AND (X_UNREALISED_PL is null)))
          AND ((tlinfo.UPDATED_BY = X_UPDATED_BY)
               OR ((tlinfo.UPDATED_BY is null) AND (X_UPDATED_BY is null)))
          AND ((tlinfo.UPDATED_ON = X_UPDATED_ON)
               OR ((tlinfo.UPDATED_ON is null) AND (X_UPDATED_ON is null)))
          AND ((tlinfo.YEAR_BASIS = X_YEAR_BASIS)
               OR ((tlinfo.YEAR_BASIS is null) AND (X_YEAR_BASIS is null)))
          AND (tlinfo.CREATED_ON = X_CREATED_ON)
          AND ((tlinfo.EXCHANGE_RATE_ONE = X_EXCHANGE_RATE_ONE)
               OR ((tlinfo.EXCHANGE_RATE_ONE is null) AND (X_EXCHANGE_RATE_ONE is null)))
          AND ((tlinfo.REALIZED_FLAG = X_REALIZED_FLAG)
               OR ((tlinfo.REALIZED_FLAG is null) AND (X_REALIZED_FLAG is null)))
          AND ((tlinfo.OVERWRITE_TYPE = X_OVERWRITE_TYPE)
               OR ((tlinfo.OVERWRITE_TYPE is null) AND (X_OVERWRITE_TYPE is null)))
          AND ((tlinfo.OVERWRITE_VALUE = X_OVERWRITE_VALUE)
               OR ((tlinfo.OVERWRITE_VALUE is null) AND (X_OVERWRITE_VALUE is null)))
          AND ((tlinfo.OVERWRITE_REASON = X_OVERWRITE_REASON)
               OR ((tlinfo.OVERWRITE_REASON is null) AND (X_OVERWRITE_REASON is null)))
      ) then
        null;
      else
        fnd_message.set_name('FND', 'FORM_RECORD_CHANGED');
        app_exception.raise_exception;
      end if;
  end loop;
  return;
end LOCK_ROW;

procedure UPDATE_ROW (
  X_REVALUATION_DETAILS_ID in NUMBER,
  X_ACCOUNT_NO in VARCHAR2,
  X_REVAL_CURR_FV_AMOUNT in NUMBER,
  X_COMPLETE_FLAG in VARCHAR2,
  X_FAIR_VALUE in NUMBER,
  X_SWAP_REF in VARCHAR2,
  X_CUMM_GAIN_LOSS_AMOUNT in NUMBER,
  X_CURR_GAIN_LOSS_AMOUNT in NUMBER,
  X_SOB_FV_GAIN_LOSS_AMOUNT in NUMBER,
  X_SOB_FAIR_VALUE_AMOUNT in NUMBER,
  X_CTR_CURR_SOB_CURR_FWD_RATE in NUMBER,
  X_EXCHANGE_RATE_TWO in NUMBER,
  X_ACTION_CODE in VARCHAR2,
  X_COMPANY_CODE in VARCHAR2,
  X_CONTRACT_CODE in VARCHAR2,
  X_CURRENCYA in VARCHAR2,
  X_CURRENCYB in VARCHAR2,
  X_DEAL_NO in NUMBER,
  X_DEAL_SUBTYPE in VARCHAR2,
  X_DEAL_TYPE in VARCHAR2,
  X_EFFECTIVE_DATE in DATE,
  X_EFFECTIVE_DAYS in NUMBER,
  X_ENTERED_BY in VARCHAR2,
  X_ENTERED_ON in DATE,
  X_FACE_VALUE in NUMBER,
  X_FXO_SELL_REF_AMOUNT in NUMBER,
  X_PERIOD_FROM in DATE,
  X_PERIOD_TO in DATE,
  X_PORTFOLIO_CODE in VARCHAR2,
  X_PRODUCT_TYPE in VARCHAR2,
  X_REALISED_PL in NUMBER,
  X_REVAL_CCY in VARCHAR2,
  X_REVAL_RATE in NUMBER,
  X_TRANSACTION_NO in NUMBER,
  X_TRANSACTION_PERIOD in NUMBER,
  X_TRANSACTION_RATE in NUMBER,
  X_UNREALISED_PL in NUMBER,
  X_UPDATED_BY in VARCHAR2,
  X_UPDATED_ON in DATE,
  X_YEAR_BASIS in NUMBER,
  X_CREATED_ON in DATE,
  X_EXCHANGE_RATE_ONE in NUMBER,
  X_REALIZED_FLAG in VARCHAR2,
  X_OVERWRITE_TYPE in VARCHAR2,
  X_OVERWRITE_VALUE in NUMBER,
  X_OVERWRITE_REASON in VARCHAR2,
  X_BATCH_ID in NUMBER,
  X_NI_DISC_AMOUNT in NUMBER,
  X_AMOUNT_TYPE in VARCHAR2,
  X_QUANTITY in NUMBER
) is
begin
  update XTR_REVALUATION_DETAILS set
    ACCOUNT_NO = X_ACCOUNT_NO,
    REVAL_CURR_FV_AMOUNT = X_REVAL_CURR_FV_AMOUNT,
    COMPLETE_FLAG = X_COMPLETE_FLAG,
    FAIR_VALUE = X_FAIR_VALUE,
    SWAP_REF = X_SWAP_REF,
    CUMM_GAIN_LOSS_AMOUNT = X_CUMM_GAIN_LOSS_AMOUNT,
    CURR_GAIN_LOSS_AMOUNT = X_CURR_GAIN_LOSS_AMOUNT,
    SOB_FV_GAIN_LOSS_AMOUNT = X_SOB_FV_GAIN_LOSS_AMOUNT,
    SOB_FAIR_VALUE_AMOUNT = X_SOB_FAIR_VALUE_AMOUNT,
    CTR_CURR_SOB_CURR_FWD_RATE = X_CTR_CURR_SOB_CURR_FWD_RATE,
    EXCHANGE_RATE_TWO = X_EXCHANGE_RATE_TWO,
    ACTION_CODE = X_ACTION_CODE,
    COMPANY_CODE = X_COMPANY_CODE,
    CONTRACT_CODE = X_CONTRACT_CODE,
    CURRENCYA = X_CURRENCYA,
    CURRENCYB = X_CURRENCYB,
    DEAL_NO = X_DEAL_NO,
    DEAL_SUBTYPE = X_DEAL_SUBTYPE,
    DEAL_TYPE = X_DEAL_TYPE,
    EFFECTIVE_DATE = X_EFFECTIVE_DATE,
    EFFECTIVE_DAYS = X_EFFECTIVE_DAYS,
    ENTERED_BY = X_ENTERED_BY,
    ENTERED_ON = X_ENTERED_ON,
    FACE_VALUE = X_FACE_VALUE,
    FXO_SELL_REF_AMOUNT = X_FXO_SELL_REF_AMOUNT,
    PERIOD_FROM = X_PERIOD_FROM,
    PERIOD_TO = X_PERIOD_TO,
    PORTFOLIO_CODE = X_PORTFOLIO_CODE,
    PRODUCT_TYPE = X_PRODUCT_TYPE,
    REALISED_PL = X_REALISED_PL,
    REVAL_CCY = X_REVAL_CCY,
    REVAL_RATE = X_REVAL_RATE,
    TRANSACTION_NO = X_TRANSACTION_NO,
    TRANSACTION_PERIOD = X_TRANSACTION_PERIOD,
    TRANSACTION_RATE = X_TRANSACTION_RATE,
    UNREALISED_PL = X_UNREALISED_PL,
    UPDATED_BY = X_UPDATED_BY,
    UPDATED_ON = X_UPDATED_ON,
    YEAR_BASIS = X_YEAR_BASIS,
    CREATED_ON = X_CREATED_ON,
    EXCHANGE_RATE_ONE = X_EXCHANGE_RATE_ONE,
    REALIZED_FLAG = X_REALIZED_FLAG,
    OVERWRITE_TYPE = X_OVERWRITE_TYPE,
    OVERWRITE_VALUE = X_OVERWRITE_VALUE,
    OVERWRITE_REASON = X_OVERWRITE_REASON,
    BATCH_ID = X_BATCH_ID,
    NI_DISC_AMOUNT = X_NI_DISC_AMOUNT,
    AMOUNT_TYPE = X_AMOUNT_TYPE,
    QUANTITY = X_QUANTITY
  where REVALUATION_DETAILS_ID = X_REVALUATION_DETAILS_ID;

  if (sql%notfound) then
    raise no_data_found;
  end if;
end UPDATE_ROW;

procedure DELETE_ROW (
  X_REVALUATION_DETAILS_ID in NUMBER
) is
begin
  delete from XTR_REVALUATION_DETAILS
  where REVALUATION_DETAILS_ID = X_REVALUATION_DETAILS_ID;

  if (sql%notfound) then
    raise no_data_found;
  end if;

end DELETE_ROW;

end XTR_REVALUATION_DETAILS_PKG;

/
