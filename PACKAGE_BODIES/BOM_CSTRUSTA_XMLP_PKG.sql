--------------------------------------------------------
--  DDL for Package Body BOM_CSTRUSTA_XMLP_PKG
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE PACKAGE BODY "APPS"."BOM_CSTRUSTA_XMLP_PKG" AS
/* $Header: CSTRUSTAB.pls 120.0 2007/12/24 10:23:04 dwkrishn noship $ */
  FUNCTION ACC_ADJUSTMENTFORMULA(ACCOUNT_TOTAL IN NUMBER) RETURN NUMBER IS
  BEGIN
    RETURN (-(ACCOUNT_TOTAL));
  END ACC_ADJUSTMENTFORMULA;

  FUNCTION AFTERREPORT RETURN BOOLEAN IS
  BEGIN
    BEGIN
      IF P_DEL_SNAPSHOT = 1 THEN
        ROLLBACK;
        DELETE FROM CST_STD_COST_ADJ_VALUES
         WHERE COST_UPDATE_ID = P_UPDATE_ID
           AND TRANSACTION_TYPE = 2;
        COMMIT;
      END IF;
      /*SRW.USER_EXIT('FND SRWEXIT')*/NULL;
      /*SRW.MESSAGE(0
                 ,'BOM_CSTRUSTA_XMLP_PKG >>     ' || TO_CHAR(SYSDATE
                        ,'Dy Mon FmDD HH24:MI:SS YYYY'))*/NULL;
    EXCEPTION
      WHEN OTHERS THEN
        /*SRW.MESSAGE(999
                   ,SQLERRM)*/NULL;
    END;
    RETURN (TRUE);
  END AFTERREPORT;

  FUNCTION INTRANSIT_ACCT_DESCFORMULA(INTRANSIT_ACCT IN VARCHAR2
                                     ,INTRANSIT_ACCT_SEG IN VARCHAR2
                                     ,INTRANSIT_ACCT_DESC IN VARCHAR2) RETURN VARCHAR2 IS
  BEGIN
    /*SRW.REFERENCE(INTRANSIT_ACCT)*/NULL;
    /*SRW.REFERENCE(INTRANSIT_ACCT_SEG)*/NULL;
    RETURN (INTRANSIT_ACCT_DESC);
  END INTRANSIT_ACCT_DESCFORMULA;

  FUNCTION REP_ADJUSTMENTFORMULA(REP_INTRANSIT IN NUMBER) RETURN NUMBER IS
  BEGIN
    RETURN (-(REP_INTRANSIT));
  END REP_ADJUSTMENTFORMULA;

  FUNCTION ORG_ADJUSTMENTFORMULA(ORG_INTRANSIT IN NUMBER) RETURN NUMBER IS
  BEGIN
    RETURN (-ORG_INTRANSIT);
  END ORG_ADJUSTMENTFORMULA;

  FUNCTION BEFOREREPORT RETURN BOOLEAN IS
  BEGIN
    BEGIN
      IF P_RPT_ONLY = 1 THEN
        SELECT
          FC.CURRENCY_CODE,
          NVL(FC.EXTENDED_PRECISION
             ,FC.PRECISION),
          NVL(FC.MINIMUM_ACCOUNTABLE_UNIT
             ,POWER(10
                  ,NVL(-PRECISION
                     ,0))),
          SOB.CHART_OF_ACCOUNTS_ID,
          CAT.CATEGORY_SET_NAME,
          CAT.CATEGORY_SET_ID,
          CAT.STRUCTURE_ID,
          O.ORGANIZATION_NAME ORGANIZATION,
          CCT.COST_TYPE,
          LU.MEANING
        INTO P_CURRENCY_CODE,P_EXT_PREC,ROUND_UNIT,P_GL_NUM,P_CAT_SET_NAME,P_CATEGORY_SET,P_CAT_NUM,P_ORGANIZATION,P_COST_TYPE,P_ITEM_RANGE
        FROM
          FND_CURRENCIES FC,
          GL_SETS_OF_BOOKS SOB,
          ORG_ORGANIZATION_DEFINITIONS O,
          MTL_CATEGORY_SETS CAT,
          MTL_DEFAULT_CATEGORY_SETS DCAT,
          CST_COST_TYPES CCT,
          MFG_LOOKUPS LU
        WHERE O.ORGANIZATION_ID = P_ORG_ID
          AND O.SET_OF_BOOKS_ID = SOB.SET_OF_BOOKS_ID
          AND SOB.CURRENCY_CODE = FC.CURRENCY_CODE
          AND FC.ENABLED_FLAG = 'Y'
          AND DCAT.FUNCTIONAL_AREA_ID = 5
          AND CAT.CATEGORY_SET_ID = DECODE(P_RANGE_OPTION
              ,5
              ,P_CATEGORY_SET
              ,DCAT.CATEGORY_SET_ID)
          AND CCT.COST_TYPE_ID = P_COST_TYPE_ID
          AND LU.LOOKUP_TYPE = 'CST_ITEM_RANGE'
          AND LU.LOOKUP_CODE = P_RANGE_OPTION;
      ELSE
        SELECT
          FC.CURRENCY_CODE,
          NVL(FC.EXTENDED_PRECISION
             ,FC.PRECISION),
          NVL(FC.MINIMUM_ACCOUNTABLE_UNIT
             ,POWER(10
                  ,NVL(-PRECISION
                     ,0))),
          SOB.CHART_OF_ACCOUNTS_ID,
          CAT.CATEGORY_SET_NAME,
          CAT.CATEGORY_SET_ID,
          CAT.STRUCTURE_ID,
          O.ORGANIZATION_NAME,
          C.RANGE_OPTION,
          LU.MEANING,
          C.ITEM_RANGE_LOW,
          C.ITEM_RANGE_HIGH,
          C.SINGLE_ITEM,
          C.CATEGORY_ID,
          C.INV_ADJUSTMENT_ACCOUNT,
          C.UPDATE_DATE,
          C.DESCRIPTION,
          CCT.COST_TYPE
        INTO P_CURRENCY_CODE,P_EXT_PREC,ROUND_UNIT,P_GL_NUM,P_CAT_SET_NAME,P_CATEGORY_SET,P_CAT_NUM,P_ORGANIZATION,P_RANGE_OPTION,P_ITEM_RANGE,P_ITEM_FROM,P_ITEM_TO,P_ITEM,P_CAT,P_ADJ_ACCOUNT,P_UPDATE_DATE,P_UPDATE_DESC,P_COST_TYPE
        FROM
          FND_CURRENCIES FC,
          GL_SETS_OF_BOOKS SOB,
          ORG_ORGANIZATION_DEFINITIONS O,
          MTL_CATEGORY_SETS CAT,
          MTL_DEFAULT_CATEGORY_SETS DCAT,
          MFG_LOOKUPS LU,
          CST_COST_TYPES CCT,
          CST_COST_UPDATES C
        WHERE C.COST_UPDATE_ID = P_UPDATE_ID
          AND O.ORGANIZATION_ID = C.ORGANIZATION_ID
          AND O.SET_OF_BOOKS_ID = SOB.SET_OF_BOOKS_ID
          AND SOB.CURRENCY_CODE = FC.CURRENCY_CODE
          AND FC.ENABLED_FLAG = 'Y'
          AND DCAT.FUNCTIONAL_AREA_ID = 5
          AND CAT.CATEGORY_SET_ID = NVL(C.CATEGORY_SET_ID
           ,DCAT.CATEGORY_SET_ID)
          AND CCT.COST_TYPE_ID = C.COST_TYPE_ID
          AND LU.LOOKUP_TYPE = 'CST_ITEM_RANGE'
          AND LU.LOOKUP_CODE = C.RANGE_OPTION;
      END IF;
      IF P_RANGE_OPTION <> 2 THEN
        /*SRW.SET_MAXROW('Q_ITEM'
                      ,0)*/NULL;
      END IF;
      IF P_RANGE_OPTION <> 5 THEN
        /*SRW.SET_MAXROW('Q_CAT'
                      ,0)*/NULL;
      END IF;
      BEGIN
        P_CONC_REQUEST_ID := FND_GLOBAL.CONC_REQUEST_ID;
        /*SRW.USER_EXIT('FND SRWINIT')*/NULL;
      EXCEPTION
        WHEN OTHERS THEN
          /*SRW.MESSAGE(999
                     ,'FND SRWINIT >X')*/NULL;
          RAISE;
      END;
      BEGIN
        NULL;
      EXCEPTION
        WHEN OTHERS THEN
          /*SRW.MESSAGE(999
                     ,'FND FLEXSQL(MCAT) >X')*/NULL;
          RAISE;
      END;
      BEGIN
        NULL;
      EXCEPTION
        WHEN OTHERS THEN
          /*SRW.MESSAGE(999
                     ,'FND FLEXSQL(MSTK) >X')*/NULL;
          RAISE;
      END;
      BEGIN
        NULL;
      EXCEPTION
        WHEN OTHERS THEN
          /*SRW.MESSAGE(999
                     ,'FND FLEXSQL(GL#) >X')*/NULL;
          RAISE;
      END;
      /*SRW.MESSAGE(0
                 ,'BOM_CSTRUSTA_XMLP_PKG <<     ' || TO_CHAR(SYSDATE
                        ,'Dy Mon FmDD HH24:MI:SS YYYY'))*/NULL;
    EXCEPTION
      WHEN OTHERS THEN
        /*SRW.MESSAGE(999
                   ,SQLERRM)*/NULL;
        /*SRW.MESSAGE(999
                   ,'BOM_CSTRUSTA_XMLP_PKG >X     ' || TO_CHAR(SYSDATE
                          ,'Dy Mon FmDD HH24:MI:SS YYYY'))*/NULL;
        /*RAISE SRW.PROGRAM_ABORT*/RAISE_APPLICATION_ERROR(-20101,null);
    END;
    RETURN (TRUE);
  END BEFOREREPORT;

  FUNCTION INTRANSIT_ACCT_PSEGFORMULA(INTRANSIT_ACCT IN VARCHAR2
                                     ,INTRANSIT_ACCT_SEG IN VARCHAR2
                                     ,INTRANSIT_ACCT_PSEG IN VARCHAR2) RETURN VARCHAR2 IS
  BEGIN
    /*SRW.REFERENCE(INTRANSIT_ACCT)*/NULL;
    /*SRW.REFERENCE(INTRANSIT_ACCT_SEG)*/NULL;
    RETURN (INTRANSIT_ACCT_PSEG);
  END INTRANSIT_ACCT_PSEGFORMULA;

  FUNCTION ITEM_PSEGFORMULA(ITEM_NUMBER IN VARCHAR2
                           ,ITEM_SEGMENT IN VARCHAR2
                           ,ITEM_PSEG IN VARCHAR2) RETURN VARCHAR2 IS
  BEGIN
    /*SRW.REFERENCE(ITEM_NUMBER)*/NULL;
    /*SRW.REFERENCE(ITEM_SEGMENT)*/NULL;
    RETURN (ITEM_PSEG);
  END ITEM_PSEGFORMULA;

END BOM_CSTRUSTA_XMLP_PKG;


/
