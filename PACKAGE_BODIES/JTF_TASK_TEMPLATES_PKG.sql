--------------------------------------------------------
--  DDL for Package Body JTF_TASK_TEMPLATES_PKG
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE PACKAGE BODY "APPS"."JTF_TASK_TEMPLATES_PKG" as
/* $Header: jtftkteb.pls 120.1 2005/07/02 01:28:17 appldev ship $ */
procedure INSERT_ROW (
  X_ROWID in out NOCOPY VARCHAR2,
  X_TASK_TEMPLATE_ID in NUMBER,
  X_ALARM_ON in VARCHAR2,
  X_ALARM_COUNT in NUMBER,
  X_ALARM_INTERVAL in NUMBER,
  X_ALARM_INTERVAL_UOM in VARCHAR2,
  X_DELETED_FLAG in VARCHAR2,
  X_ATTRIBUTE1 in VARCHAR2,
  X_ATTRIBUTE2 in VARCHAR2,
  X_ATTRIBUTE3 in VARCHAR2,
  X_ATTRIBUTE4 in VARCHAR2,
  X_ATTRIBUTE5 in VARCHAR2,
  X_ATTRIBUTE6 in VARCHAR2,
  X_ATTRIBUTE7 in VARCHAR2,
  X_ATTRIBUTE8 in VARCHAR2,
  X_ATTRIBUTE9 in VARCHAR2,
  X_ATTRIBUTE10 in VARCHAR2,
  X_ATTRIBUTE11 in VARCHAR2,
  X_ATTRIBUTE12 in VARCHAR2,
  X_ATTRIBUTE13 in VARCHAR2,
  X_ATTRIBUTE14 in VARCHAR2,
  X_ATTRIBUTE15 in VARCHAR2,
  X_ATTRIBUTE_CATEGORY in VARCHAR2,
  X_HOLIDAY_FLAG in VARCHAR2,
  X_BILLABLE_FLAG in VARCHAR2,
  X_RECURRENCE_RULE_ID in NUMBER,
  X_NOTIFICATION_FLAG in VARCHAR2,
  X_NOTIFICATION_PERIOD in NUMBER,
  X_NOTIFICATION_PERIOD_UOM in VARCHAR2,
  X_ALARM_START in NUMBER,
  X_ALARM_START_UOM in VARCHAR2,
  X_PRIVATE_FLAG in VARCHAR2,
  X_PUBLISH_FLAG in VARCHAR2,
  X_RESTRICT_CLOSURE_FLAG in VARCHAR2,
  X_MULTI_BOOKED_FLAG in VARCHAR2,
  X_MILESTONE_FLAG in VARCHAR2,
  X_TASK_GROUP_ID in NUMBER,
  X_TASK_NUMBER in VARCHAR2,
  X_TASK_TYPE_ID in NUMBER,
  X_TASK_STATUS_ID in NUMBER,
  X_TASK_PRIORITY_ID in NUMBER,
  X_DURATION in NUMBER,
  X_DURATION_UOM in VARCHAR2,
  X_PLANNED_EFFORT in NUMBER,
  X_PLANNED_EFFORT_UOM in VARCHAR2,
  X_TASK_NAME in VARCHAR2,
  X_DESCRIPTION in VARCHAR2,
  X_TASK_CONFIRMATION_STATUS in	 VARCHAR2,
  X_CREATION_DATE in DATE,
  X_CREATED_BY in NUMBER,
  X_LAST_UPDATE_DATE in DATE,
  X_LAST_UPDATED_BY in NUMBER,
  X_LAST_UPDATE_LOGIN in NUMBER
) is
  cursor C is select ROWID from JTF_TASK_TEMPLATES_B
    where TASK_TEMPLATE_ID = X_TASK_TEMPLATE_ID
    ;
begin
  insert into JTF_TASK_TEMPLATES_B (
    ALARM_ON,
    ALARM_COUNT,
    ALARM_INTERVAL,
    ALARM_INTERVAL_UOM,
    DELETED_FLAG,
    ATTRIBUTE1,
    ATTRIBUTE2,
    ATTRIBUTE3,
    ATTRIBUTE4,
    ATTRIBUTE5,
    ATTRIBUTE6,
    ATTRIBUTE7,
    ATTRIBUTE8,
    ATTRIBUTE9,
    ATTRIBUTE10,
    ATTRIBUTE11,
    ATTRIBUTE12,
    ATTRIBUTE13,
    ATTRIBUTE14,
    ATTRIBUTE15,
    ATTRIBUTE_CATEGORY,
    HOLIDAY_FLAG,
    BILLABLE_FLAG,
    RECURRENCE_RULE_ID,
    NOTIFICATION_FLAG,
    NOTIFICATION_PERIOD,
    NOTIFICATION_PERIOD_UOM,
    ALARM_START,
    ALARM_START_UOM,
    PRIVATE_FLAG,
    PUBLISH_FLAG,
    RESTRICT_CLOSURE_FLAG,
    MULTI_BOOKED_FLAG,
    MILESTONE_FLAG,
    TASK_GROUP_ID,
    TASK_NUMBER,
    TASK_TYPE_ID,
    TASK_STATUS_ID,
    TASK_PRIORITY_ID,
    DURATION,
    DURATION_UOM,
    PLANNED_EFFORT,
    PLANNED_EFFORT_UOM,
    TASK_TEMPLATE_ID,
    TASK_CONFIRMATION_STATUS,
    CREATION_DATE,
    CREATED_BY,
    LAST_UPDATE_DATE,
    LAST_UPDATED_BY,
    LAST_UPDATE_LOGIN,
    OBJECT_VERSION_NUMBER
  ) values (
    X_ALARM_ON,
    X_ALARM_COUNT,
    X_ALARM_INTERVAL,
    X_ALARM_INTERVAL_UOM,
    X_DELETED_FLAG,
    X_ATTRIBUTE1,
    X_ATTRIBUTE2,
    X_ATTRIBUTE3,
    X_ATTRIBUTE4,
    X_ATTRIBUTE5,
    X_ATTRIBUTE6,
    X_ATTRIBUTE7,
    X_ATTRIBUTE8,
    X_ATTRIBUTE9,
    X_ATTRIBUTE10,
    X_ATTRIBUTE11,
    X_ATTRIBUTE12,
    X_ATTRIBUTE13,
    X_ATTRIBUTE14,
    X_ATTRIBUTE15,
    X_ATTRIBUTE_CATEGORY,
    X_HOLIDAY_FLAG,
    X_BILLABLE_FLAG,
    X_RECURRENCE_RULE_ID,
    X_NOTIFICATION_FLAG,
    X_NOTIFICATION_PERIOD,
    X_NOTIFICATION_PERIOD_UOM,
    X_ALARM_START,
    X_ALARM_START_UOM,
    X_PRIVATE_FLAG,
    X_PUBLISH_FLAG,
    X_RESTRICT_CLOSURE_FLAG,
    X_MULTI_BOOKED_FLAG,
    X_MILESTONE_FLAG,
    X_TASK_GROUP_ID,
    X_TASK_NUMBER,
    X_TASK_TYPE_ID,
    X_TASK_STATUS_ID,
    X_TASK_PRIORITY_ID,
    X_DURATION,
    X_DURATION_UOM,
    X_PLANNED_EFFORT,
    X_PLANNED_EFFORT_UOM,
    X_TASK_TEMPLATE_ID,
    X_TASK_CONFIRMATION_STATUS,
    X_CREATION_DATE,
    X_CREATED_BY,
    X_LAST_UPDATE_DATE,
    X_LAST_UPDATED_BY,
    X_LAST_UPDATE_LOGIN,
    1
  );

  insert into JTF_TASK_TEMPLATES_TL (
    TASK_TEMPLATE_ID,
    TASK_NAME,
    DESCRIPTION,
    CREATED_BY,
    CREATION_DATE,
    LAST_UPDATED_BY,
    LAST_UPDATE_DATE,
    LAST_UPDATE_LOGIN,
    LANGUAGE,
    SOURCE_LANG
  ) select
    X_TASK_TEMPLATE_ID,
    X_TASK_NAME,
    X_DESCRIPTION,
    X_CREATED_BY,
    X_CREATION_DATE,
    X_LAST_UPDATED_BY,
    X_LAST_UPDATE_DATE,
    X_LAST_UPDATE_LOGIN,
    L.LANGUAGE_CODE,
    userenv('LANG')
  from FND_LANGUAGES L
  where L.INSTALLED_FLAG in ('I', 'B')
  and not exists
    (select NULL
    from JTF_TASK_TEMPLATES_TL T
    where T.TASK_TEMPLATE_ID = X_TASK_TEMPLATE_ID
    and T.LANGUAGE = L.LANGUAGE_CODE);

  open c;
  fetch c into X_ROWID;
  if (c%notfound) then
    close c;
    raise no_data_found;
  end if;
  close c;

end INSERT_ROW;

procedure LOCK_ROW (
  X_TASK_TEMPLATE_ID in NUMBER,
  X_OBJECT_VERSION_NUMBER in NUMBER
) is
  cursor c is select
      OBJECT_VERSION_NUMBER
    from JTF_TASK_TEMPLATES_VL
    where TASK_TEMPLATE_ID = X_TASK_TEMPLATE_ID
    and OBJECT_VERSION_NUMBER = X_OBJECT_VERSION_NUMBER
    for update of TASK_TEMPLATE_ID nowait;
  recinfo c%rowtype;

begin
  open c;
  fetch c into recinfo;
  if (c%notfound) then
    close c;
    fnd_message.set_name('FND', 'FORM_RECORD_DELETED');
    app_exception.raise_exception;
  end if;

  close c;

  if (recinfo.OBJECT_VERSION_NUMBER = X_OBJECT_VERSION_NUMBER)
  then
    null;
  else
    fnd_message.set_name('FND', 'FORM_RECORD_CHANGED');
    app_exception.raise_exception;
  end if;
end LOCK_ROW;

procedure UPDATE_ROW (
  X_TASK_TEMPLATE_ID in NUMBER,
  X_OBJECT_VERSION_NUMBER in NUMBER,
  X_ALARM_ON in VARCHAR2,
  X_ALARM_COUNT in NUMBER,
  X_ALARM_INTERVAL in NUMBER,
  X_ALARM_INTERVAL_UOM in VARCHAR2,
  X_DELETED_FLAG in VARCHAR2,
  X_ATTRIBUTE1 in VARCHAR2,
  X_ATTRIBUTE2 in VARCHAR2,
  X_ATTRIBUTE3 in VARCHAR2,
  X_ATTRIBUTE4 in VARCHAR2,
  X_ATTRIBUTE5 in VARCHAR2,
  X_ATTRIBUTE6 in VARCHAR2,
  X_ATTRIBUTE7 in VARCHAR2,
  X_ATTRIBUTE8 in VARCHAR2,
  X_ATTRIBUTE9 in VARCHAR2,
  X_ATTRIBUTE10 in VARCHAR2,
  X_ATTRIBUTE11 in VARCHAR2,
  X_ATTRIBUTE12 in VARCHAR2,
  X_ATTRIBUTE13 in VARCHAR2,
  X_ATTRIBUTE14 in VARCHAR2,
  X_ATTRIBUTE15 in VARCHAR2,
  X_ATTRIBUTE_CATEGORY in VARCHAR2,
  X_HOLIDAY_FLAG in VARCHAR2,
  X_BILLABLE_FLAG in VARCHAR2,
  X_RECURRENCE_RULE_ID in NUMBER,
  X_NOTIFICATION_FLAG in VARCHAR2,
  X_NOTIFICATION_PERIOD in NUMBER,
  X_NOTIFICATION_PERIOD_UOM in VARCHAR2,
  X_ALARM_START in NUMBER,
  X_ALARM_START_UOM in VARCHAR2,
  X_PRIVATE_FLAG in VARCHAR2,
  X_PUBLISH_FLAG in VARCHAR2,
  X_RESTRICT_CLOSURE_FLAG in VARCHAR2,
  X_MULTI_BOOKED_FLAG in VARCHAR2,
  X_MILESTONE_FLAG in VARCHAR2,
  X_TASK_GROUP_ID in NUMBER,
  X_TASK_NUMBER in VARCHAR2,
  X_TASK_TYPE_ID in NUMBER,
  X_TASK_STATUS_ID in NUMBER,
  X_TASK_PRIORITY_ID in NUMBER,
  X_DURATION in NUMBER,
  X_DURATION_UOM in VARCHAR2,
  X_PLANNED_EFFORT in NUMBER,
  X_PLANNED_EFFORT_UOM in VARCHAR2,
  X_TASK_NAME in VARCHAR2,
  X_DESCRIPTION in VARCHAR2,
  X_TASK_CONFIRMATION_STATUS in	 VARCHAR2,
  X_LAST_UPDATE_DATE in DATE,
  X_LAST_UPDATED_BY in NUMBER,
  X_LAST_UPDATE_LOGIN in NUMBER
) is
begin
  update JTF_TASK_TEMPLATES_B set
    ALARM_ON = X_ALARM_ON,
    OBJECT_VERSION_NUMBER = X_OBJECT_VERSION_NUMBER + 1,
    ALARM_COUNT = X_ALARM_COUNT,
    ALARM_INTERVAL = X_ALARM_INTERVAL,
    ALARM_INTERVAL_UOM = X_ALARM_INTERVAL_UOM,
    DELETED_FLAG = X_DELETED_FLAG,
    ATTRIBUTE1 = X_ATTRIBUTE1,
    ATTRIBUTE2 = X_ATTRIBUTE2,
    ATTRIBUTE3 = X_ATTRIBUTE3,
    ATTRIBUTE4 = X_ATTRIBUTE4,
    ATTRIBUTE5 = X_ATTRIBUTE5,
    ATTRIBUTE6 = X_ATTRIBUTE6,
    ATTRIBUTE7 = X_ATTRIBUTE7,
    ATTRIBUTE8 = X_ATTRIBUTE8,
    ATTRIBUTE9 = X_ATTRIBUTE9,
    ATTRIBUTE10 = X_ATTRIBUTE10,
    ATTRIBUTE11 = X_ATTRIBUTE11,
    ATTRIBUTE12 = X_ATTRIBUTE12,
    ATTRIBUTE13 = X_ATTRIBUTE13,
    ATTRIBUTE14 = X_ATTRIBUTE14,
    ATTRIBUTE15 = X_ATTRIBUTE15,
    ATTRIBUTE_CATEGORY = X_ATTRIBUTE_CATEGORY,
    HOLIDAY_FLAG = X_HOLIDAY_FLAG,
    BILLABLE_FLAG = X_BILLABLE_FLAG,
    RECURRENCE_RULE_ID = X_RECURRENCE_RULE_ID,
    NOTIFICATION_FLAG = X_NOTIFICATION_FLAG,
    NOTIFICATION_PERIOD = X_NOTIFICATION_PERIOD,
    NOTIFICATION_PERIOD_UOM = X_NOTIFICATION_PERIOD_UOM,
    ALARM_START = X_ALARM_START,
    ALARM_START_UOM = X_ALARM_START_UOM,
    PRIVATE_FLAG = X_PRIVATE_FLAG,
    PUBLISH_FLAG = X_PUBLISH_FLAG,
    RESTRICT_CLOSURE_FLAG = X_RESTRICT_CLOSURE_FLAG,
    MULTI_BOOKED_FLAG = X_MULTI_BOOKED_FLAG,
    MILESTONE_FLAG = X_MILESTONE_FLAG,
    TASK_GROUP_ID = X_TASK_GROUP_ID,
    TASK_NUMBER = X_TASK_NUMBER,
    TASK_TYPE_ID = X_TASK_TYPE_ID,
    TASK_STATUS_ID = X_TASK_STATUS_ID,
    TASK_PRIORITY_ID = X_TASK_PRIORITY_ID,
    DURATION = X_DURATION,
    DURATION_UOM = X_DURATION_UOM,
    PLANNED_EFFORT = X_PLANNED_EFFORT,
    PLANNED_EFFORT_UOM = X_PLANNED_EFFORT_UOM,
    TASK_CONFIRMATION_STATUS = X_TASK_CONFIRMATION_STATUS,
    LAST_UPDATE_DATE = X_LAST_UPDATE_DATE,
    LAST_UPDATED_BY = X_LAST_UPDATED_BY,
    LAST_UPDATE_LOGIN = X_LAST_UPDATE_LOGIN
  where TASK_TEMPLATE_ID = X_TASK_TEMPLATE_ID ;

  if (sql%notfound) then
    raise no_data_found;
  end if;

  update JTF_TASK_TEMPLATES_TL set
    TASK_NAME = X_TASK_NAME,
    DESCRIPTION = X_DESCRIPTION,
    LAST_UPDATE_DATE = X_LAST_UPDATE_DATE,
    LAST_UPDATED_BY = X_LAST_UPDATED_BY,
    LAST_UPDATE_LOGIN = X_LAST_UPDATE_LOGIN,
    SOURCE_LANG = userenv('LANG')
  where TASK_TEMPLATE_ID = X_TASK_TEMPLATE_ID
  and userenv('LANG') in (LANGUAGE, SOURCE_LANG);

  if (sql%notfound) then
    raise no_data_found;
  end if;
end UPDATE_ROW;

procedure DELETE_ROW (
  X_TASK_TEMPLATE_ID in NUMBER
) is
begin
  delete from JTF_TASK_TEMPLATES_TL
  where TASK_TEMPLATE_ID = X_TASK_TEMPLATE_ID;

  if (sql%notfound) then
    raise no_data_found;
  end if;

  delete from JTF_TASK_TEMPLATES_B
  where TASK_TEMPLATE_ID = X_TASK_TEMPLATE_ID ;

  if (sql%notfound) then
    raise no_data_found;
  end if;
end DELETE_ROW;

procedure ADD_LANGUAGE
is
begin

  /* Solving Perf. Bug 3723927*/
     /* The following delete and update statements are commented out */
     /* as a quick workaround to fix the time-consuming table handler issue */
     /*

  delete from JTF_TASK_TEMPLATES_TL T
  where not exists
    (select NULL
    from JTF_TASK_TEMPLATES_B B
    where B.TASK_TEMPLATE_ID = T.TASK_TEMPLATE_ID
    );

  update JTF_TASK_TEMPLATES_TL T set (
      TASK_NAME,
      DESCRIPTION
    ) = (select
      B.TASK_NAME,
      B.DESCRIPTION
    from JTF_TASK_TEMPLATES_TL B
    where B.TASK_TEMPLATE_ID = T.TASK_TEMPLATE_ID
    and B.LANGUAGE = T.SOURCE_LANG)
  where (
      T.TASK_TEMPLATE_ID,
      T.LANGUAGE
  ) in (select
      SUBT.TASK_TEMPLATE_ID,
      SUBT.LANGUAGE
    from JTF_TASK_TEMPLATES_TL SUBB, JTF_TASK_TEMPLATES_TL SUBT
    where SUBB.TASK_TEMPLATE_ID = SUBT.TASK_TEMPLATE_ID
    and SUBB.LANGUAGE = SUBT.SOURCE_LANG
    and (SUBB.TASK_NAME <> SUBT.TASK_NAME
      or SUBB.DESCRIPTION <> SUBT.DESCRIPTION
      or (SUBB.DESCRIPTION is null and SUBT.DESCRIPTION is not null)
      or (SUBB.DESCRIPTION is not null and SUBT.DESCRIPTION is null)
  )); */

  insert into JTF_TASK_TEMPLATES_TL (
    TASK_TEMPLATE_ID,
    TASK_NAME,
    DESCRIPTION,
    CREATED_BY,
    CREATION_DATE,
    LAST_UPDATED_BY,
    LAST_UPDATE_DATE,
    LAST_UPDATE_LOGIN,
    LANGUAGE,
    SOURCE_LANG
  ) select
    B.TASK_TEMPLATE_ID,
    B.TASK_NAME,
    B.DESCRIPTION,
    B.CREATED_BY,
    B.CREATION_DATE,
    B.LAST_UPDATED_BY,
    B.LAST_UPDATE_DATE,
    B.LAST_UPDATE_LOGIN,
    L.LANGUAGE_CODE,
    B.SOURCE_LANG
  from JTF_TASK_TEMPLATES_TL B, FND_LANGUAGES L
  where L.INSTALLED_FLAG in ('I', 'B')
  and B.LANGUAGE = userenv('LANG')
  and not exists
    (select NULL
    from JTF_TASK_TEMPLATES_TL T
    where T.TASK_TEMPLATE_ID = B.TASK_TEMPLATE_ID
    and T.LANGUAGE = L.LANGUAGE_CODE);
end ADD_LANGUAGE;

procedure TRANSLATE_ROW(
  X_task_Template_ID in number,
  X_task_NAME in varchar2,
  X_DESCRIPTION in varchar2,
  x_owner in varchar2) is
begin
  update jtf_task_templates_tl set
    task_NAME = nvl(X_task_NAME,task_name),
    DESCRIPTION = nvl(X_DESCRIPTION,description),
    LAST_UPDATE_DATE = sysdate,
    last_updated_by = decode(X_OWNER, 'SEED', 1, 0),
    LAST_UPDATE_LOGIN = 0,
    SOURCE_LANG = userenv('LANG')
  where task_Template_ID = X_task_Template_ID
  and userenv('LANG') in (LANGUAGE, SOURCE_LANG);

  if (sql%notfound) then
    raise no_data_found;
  end if;
end TRANSLATE_ROW;

end JTF_TASK_TEMPLATES_PKG;

/
