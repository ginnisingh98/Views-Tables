--------------------------------------------------------
--  DDL for Package Body AR_ARXAPRCF_XMLP_PKG
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE PACKAGE BODY "APPS"."AR_ARXAPRCF_XMLP_PKG" AS
/* $Header: ARXAPRCFB.pls 120.1 2008/01/07 14:51:34 abraghun noship $ */
  FUNCTION REPORT_NAMEFORMULA(COMPANY_NAME IN VARCHAR2) RETURN VARCHAR2 IS
  BEGIN
    DECLARE
      L_REPORT_NAME VARCHAR2(80);
    BEGIN
      RP_COMPANY_NAME := COMPANY_NAME;
      SELECT
        SUBSTR(CP.USER_CONCURRENT_PROGRAM_NAME
              ,1
              ,80)
      INTO L_REPORT_NAME
      FROM
        FND_CONCURRENT_PROGRAMS_VL CP,
        FND_CONCURRENT_REQUESTS CR
      WHERE CR.REQUEST_ID = P_CONC_REQUEST_ID
        AND CP.APPLICATION_ID = CR.PROGRAM_APPLICATION_ID
        AND CP.CONCURRENT_PROGRAM_ID = CR.CONCURRENT_PROGRAM_ID;
      RP_REPORT_NAME := SUBSTR(L_REPORT_NAME,1,INSTR(L_REPORT_NAME,' (XML)'));
      RETURN (L_REPORT_NAME);
    EXCEPTION
      WHEN NO_DATA_FOUND THEN
        RP_REPORT_NAME := 'Automatic Receipts Awaiting Confirmation';
        RETURN ('Automatic Receipts Awaiting Confirmation');
    END;
    RETURN NULL;
  END REPORT_NAMEFORMULA;

  FUNCTION BEFOREREPORT RETURN BOOLEAN IS
  BEGIN
    BEGIN
      P_CONC_REQUEST_ID := FND_GLOBAL.CONC_REQUEST_ID;
      CP_MATURITY_DATE_LOW := TO_CHAR(P_MATURITY_DATE_LOW,'DD-MON-YY');
      CP_MATURITY_DATE_HIGH := TO_CHAR(P_MATURITY_DATE_HIGH,'DD-MON-YY');
      /*SRW.USER_EXIT('FND SRWINIT')*/NULL;
      /*SRW.REFERENCE(SORT_BY_PHONETICS)*/NULL;
      SORT_BY_PHONETICS := FND_PROFILE.VALUE('RA_CUSTOMERS_SORT_BY_PHONETICS');
      IF SORT_BY_PHONETICS = 'Y' THEN
        P_SORT := 'PARTY.ORGANIZATION_NAME_PHONETIC';
      ELSE
        P_SORT := 'PARTY.PARTY_NAME';
      END IF;
    EXCEPTION
      WHEN OTHERS THEN
        P_SORT := 'PARTY.PARTY_NAME';
    END;
    RETURN (TRUE);
  END BEFOREREPORT;

  FUNCTION SUB_TITLEFORMULA RETURN VARCHAR2 IS
  BEGIN
    BEGIN
      RP_SUB_TITLE := ' ';
      RETURN (' ');
    END;
    RETURN NULL;
  END SUB_TITLEFORMULA;

  FUNCTION AFTERREPORT RETURN BOOLEAN IS
  BEGIN
    /*SRW.USER_EXIT('FND SRWEXIT')*/NULL;
    RETURN (TRUE);
  END AFTERREPORT;

  FUNCTION AFTERPFORM RETURN BOOLEAN IS
  BEGIN
    IF P_CUST_NAME_LOW IS NOT NULL THEN
      LP_CUST_NAME := ' and PARTY.PARTY_NAME >= :p_cust_name_low';
    END IF;
    IF P_CUST_NAME_HIGH IS NOT NULL THEN
      LP_CUST_NAME := LP_CUST_NAME || ' and PARTY.PARTY_NAME <= :p_cust_name_high';
    END IF;
    IF P_CUST_NUM_LOW IS NOT NULL THEN
      LP_CUST_NUM := ' and cust.ACCOUNT_NUMBER >= :p_cust_num_low';
    END IF;
    IF P_CUST_NUM_HIGH IS NOT NULL THEN
      LP_CUST_NUM := LP_CUST_NUM || ' and cust.ACCOUNT_NUMBER <= :p_cust_num_high';
    END IF;
    IF P_REMIT_ACCOUNT IS NOT NULL THEN
      LP_REMIT_ACCOUNT := ' and acct.bank_account_name = :p_remit_account';
    END IF;
    IF P_MATURITY_DATE_LOW IS NOT NULL THEN
      LP_MATURITY_DATE := ' and nvl(ps.due_date,to_date(''01/01/0001'',''MM/DD/YYYY'')) >= :p_maturity_date_low';
    END IF;
    IF P_MATURITY_DATE_HIGH IS NOT NULL THEN
      LP_MATURITY_DATE := LP_MATURITY_DATE || ' and nvl(ps.due_date,to_date(''01/01/0001'',''MM/DD/YYYY'')) <= :p_maturity_date_high ';
    END IF;
    IF P_CURRENCY IS NOT NULL THEN
      LP_CURRENCY := ' and cr.currency_code = :P_CURRENCY';
    END IF;
    RETURN (TRUE);
  END AFTERPFORM;

  FUNCTION RP_DISP_SORT_BYFORMULA RETURN VARCHAR2 IS
  BEGIN
    RETURN (ARPT_SQL_FUNC_UTIL.GET_LOOKUP_MEANING('SORT_BY_ARXAPRCF'
                                                ,P_SORT_BY));
  END RP_DISP_SORT_BYFORMULA;

  FUNCTION RP_COMPANY_NAME_P RETURN VARCHAR2 IS
  BEGIN
    RETURN RP_COMPANY_NAME;
  END RP_COMPANY_NAME_P;

  FUNCTION RP_REPORT_NAME_P RETURN VARCHAR2 IS
  BEGIN
    RETURN RP_REPORT_NAME;
  END RP_REPORT_NAME_P;

  FUNCTION RP_DATA_FOUND_P RETURN VARCHAR2 IS
  BEGIN
    RETURN RP_DATA_FOUND;
  END RP_DATA_FOUND_P;

  FUNCTION RP_SUB_TITLE_P RETURN VARCHAR2 IS
  BEGIN
    RETURN RP_SUB_TITLE;
  END RP_SUB_TITLE_P;

END AR_ARXAPRCF_XMLP_PKG;


/
