--------------------------------------------------------
--  DDL for Package Body WIP_WIPUTVAL_XMLP_PKG
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE PACKAGE BODY "APPS"."WIP_WIPUTVAL_XMLP_PKG" AS
/* $Header: WIPUTVALB.pls 120.2 2008/02/28 08:11:54 dwkrishn noship $ */
  FUNCTION BEFOREREPORT RETURN BOOLEAN IS
  cursor c1 is
  SELECT fifst.id_flex_num
  FROM fnd_id_flex_structures fifst
  WHERE fifst.application_id = 401
  AND fifst.id_flex_code = 'MSTK'
  AND fifst.enabled_flag = 'Y'
  AND fifst.freeze_flex_definition_flag = 'Y'
 ORDER BY fifst.id_flex_num;


  BEGIN
    P_EXCHANGE_RATE := FND_NUMBER.CANONICAL_TO_NUMBER(P_EXCHANGE_RATE_CHAR);
    P_CONC_REQUEST_ID := FND_GLOBAL.CONC_REQUEST_ID;
    /*SRW.USER_EXIT('FND SRWINIT')*/NULL;
    /*SRW.USER_EXIT('FND FLEXSQL CODE="MSTK"
                  APPL_SHORT_NAME="INV" OUTPUT=":P_ASSY_FLEX"
                  TABLEALIAS="MSI"
                  MODE="SELECT" DISPLAY="ALL"')*/NULL;
    IF (P_FROM_ASSEMBLY IS NOT NULL) THEN
      IF (P_TO_ASSEMBLY IS NOT NULL) THEN
        NULL;
      ELSE
        NULL;
      END IF;
    ELSE
      IF (P_TO_ASSEMBLY IS NOT NULL) THEN
        NULL;
      END IF;
      IF (P_PROJECT_ID IS NOT NULL) THEN
        P_PROJECT_WHERE := 'wdj.PROJECT_ID =' || P_PROJECT_ID;
      END IF;
    END IF;

    open c1;
    fetch c1 into lp_struct_num;
    close c1;
    RETURN (TRUE);
    RETURN (TRUE);
  END BEFOREREPORT;

  FUNCTION C_DJ_PERIOD_ACTIVITYFORMULA(C_DJ_CI_PTD IN NUMBER
                                      ,C_DJ_CR_PTD IN NUMBER
                                      ,C_DJ_VR_PTD IN NUMBER) RETURN NUMBER IS
  BEGIN
    RETURN (C_DJ_CI_PTD - C_DJ_CR_PTD - C_DJ_VR_PTD);
  END C_DJ_PERIOD_ACTIVITYFORMULA;

  FUNCTION C_DJ_ENDING_BALANCEFORMULA(C_DJ_CI_CUM IN NUMBER
                                     ,C_DJ_CR_CUM IN NUMBER
                                     ,C_DJ_VR_CUM IN NUMBER) RETURN NUMBER IS
  BEGIN
    RETURN (C_DJ_CI_CUM - C_DJ_CR_CUM - C_DJ_VR_CUM);
  END C_DJ_ENDING_BALANCEFORMULA;

  FUNCTION CLOSED_JOBS(C_PERIOD_START_DATE IN VARCHAR2
                      ,C_PERIOD_CLOSE_DATE IN VARCHAR2) RETURN CHARACTER IS
    TEMP VARCHAR2(350) := ' ';
  BEGIN
    IF (P_CLOSED_JOBS = 1) THEN
      TEMP := 'and nvl(trunc(wdj.date_closed),to_date(''' || TO_CHAR(
      to_date(substr(C_PERIOD_START_DATE,1,10), 'YYYY-MM-DD')
                     ,'YYYYMMDD') || ''',''YYYYMMDD'')) >= to_date(''' || TO_CHAR(
                     to_date(substr(C_PERIOD_START_DATE,1,10), 'YYYY-MM-DD')
                     ,'YYYYMMDD') || ''',''YYYYMMDD'')';
    ELSE
      TEMP := 'and nvl(trunc(wdj.date_closed),to_date(''' || TO_CHAR(
      to_date(substr(C_PERIOD_CLOSE_DATE,1,10), 'YYYY-MM-DD')
                     ,'YYYYMMDD') || ''',''YYYYMMDD'')+1) > to_date(''' || TO_CHAR(
                     to_date(substr(C_PERIOD_CLOSE_DATE,1,10), 'YYYY-MM-DD')
                     ,'YYYYMMDD') || ''',''YYYYMMDD'')';
    END IF;
    RETURN (TEMP);
  END CLOSED_JOBS;

  FUNCTION C_LIMIT_TYPESFORMULA RETURN VARCHAR2 IS
  BEGIN
    IF (P_CLASS_TYPE IS NULL) THEN
      RETURN (' ');
    ELSE
      RETURN ('and wpb.class_type = ' || TO_CHAR(P_CLASS_TYPE));
    END IF;
    RETURN ' ';
  END C_LIMIT_TYPESFORMULA;

  FUNCTION LIMIT_CLASSES RETURN CHARACTER IS
    LIMIT_CLASSES VARCHAR2(80);
  BEGIN
    IF (P_FROM_CLASS IS NOT NULL) THEN
      IF (P_TO_CLASS IS NOT NULL) THEN
        LIMIT_CLASSES := ' AND WDJ.CLASS_CODE BETWEEN ''' || P_FROM_CLASS || ''' AND ''' || P_TO_CLASS || '''';
      ELSE
        LIMIT_CLASSES := ' AND WDJ.CLASS_CODE  >= ''' || P_FROM_CLASS || '''';
      END IF;
    ELSE
      IF (P_TO_CLASS IS NOT NULL) THEN
        LIMIT_CLASSES := ' AND WDJ.CLASS_CODE <= ''' || P_TO_CLASS || '''';
      ELSE
        LIMIT_CLASSES := ' ';
      END IF;
    END IF;
    RETURN (LIMIT_CLASSES);
  END LIMIT_CLASSES;

  FUNCTION LIMIT_JOBS RETURN CHARACTER IS
    LIMIT_JOBS VARCHAR2(240);
  BEGIN
    IF (P_FROM_JOB IS NOT NULL) THEN
      IF (P_TO_JOB IS NOT NULL) THEN
        LIMIT_JOBS := ' AND WE.WIP_ENTITY_NAME BETWEEN ''' || P_FROM_JOB || ''' AND ''' || P_TO_JOB || '''';
      ELSE
        LIMIT_JOBS := ' AND WE.WIP_ENTITY_NAME  >= ''' || P_FROM_JOB || '''';
      END IF;
    ELSE
      IF (P_TO_JOB IS NOT NULL) THEN
        LIMIT_JOBS := ' AND WE.WIP_ENTITY_NAME <= ''' || P_TO_JOB || '''';
      ELSE
        LIMIT_JOBS := ' ';
      END IF;
    END IF;
    RETURN (LIMIT_JOBS);
  END LIMIT_JOBS;

  FUNCTION LIMIT_CLASSES_RS RETURN CHARACTER IS
    LIMIT_CLASSES VARCHAR2(80);
  BEGIN
    IF (P_FROM_CLASS IS NOT NULL) THEN
      IF (P_TO_CLASS IS NOT NULL) THEN
        LIMIT_CLASSES := ' AND WRI.CLASS_CODE BETWEEN ''' || P_FROM_CLASS || ''' AND ''' || P_TO_CLASS || '''';
      ELSE
        LIMIT_CLASSES := ' AND WRI.CLASS_CODE  >= ''' || P_FROM_CLASS || '''';
      END IF;
    ELSE
      IF (P_TO_CLASS IS NOT NULL) THEN
        LIMIT_CLASSES := ' AND WRI.CLASS_CODE <= ''' || P_TO_CLASS || '''';
      ELSE
        LIMIT_CLASSES := ' ';
      END IF;
    END IF;
    RETURN (LIMIT_CLASSES);
  END LIMIT_CLASSES_RS;

  FUNCTION C_ACCT_PERIOD_ACTFORMULA(P_PTD_OR_CUM IN VARCHAR2
                                   ,C_ACCT_CI_PTD IN NUMBER
                                   ,C_ACCT_CR_PTD IN NUMBER
                                   ,C_ACCT_EL_VAR_PTD IN NUMBER
                                   ,C_ACCT_CI_CUM IN NUMBER
                                   ,C_ACCT_CR_CUM IN NUMBER
                                   ,C_ACCT_EL_VAR_CUM IN NUMBER) RETURN NUMBER IS
  BEGIN
    IF (P_PTD_OR_CUM = 'PTD') THEN
      RETURN (C_ACCT_CI_PTD - C_ACCT_CR_PTD - C_ACCT_EL_VAR_PTD);
    ELSE
      RETURN (C_ACCT_CI_CUM - C_ACCT_CR_CUM - C_ACCT_EL_VAR_CUM);
    END IF;
    RETURN NULL;
  END C_ACCT_PERIOD_ACTFORMULA;

  FUNCTION C_SUBTITLEFORMULA(REP_TYPE IN VARCHAR2
                            ,ORG_CURRENCY IN VARCHAR2) RETURN VARCHAR2 IS
  BEGIN
    BEGIN
      /*SRW.REFERENCE(REP_TYPE)*/NULL;
      /*SRW.REFERENCE(ORG_CURRENCY)*/NULL;
      IF ((ORG_CURRENCY = P_CURRENCY_CODE) AND (P_EXCHANGE_RATE = 1)) THEN
        RETURN (REP_TYPE || ' (' || P_CURRENCY_CODE || ')');
      ELSE
        RETURN (REP_TYPE || ' (' || P_CURRENCY_CODE || ' @ ' || TO_CHAR(ROUND(P_EXCHANGE_RATE
                            ,6)) || ' ' || ORG_CURRENCY || ')');
      END IF;
    END;
    RETURN NULL;
  END C_SUBTITLEFORMULA;

  FUNCTION C_WIP_PERIOD_ACTFORMULA(P_PTD_OR_CUM IN VARCHAR2
                                  ,C_WIP_CI_PTD IN NUMBER
                                  ,C_WIP_CR_PTD IN NUMBER
                                  ,C_WIP_EL_VAR_PTD IN NUMBER
                                  ,C_WIP_CI_CUM IN NUMBER
                                  ,C_WIP_CR_CUM IN NUMBER
                                  ,C_WIP_EL_VAR_CUM IN NUMBER) RETURN NUMBER IS
  BEGIN
    IF (P_PTD_OR_CUM = 'PTD') THEN
      RETURN (C_WIP_CI_PTD - C_WIP_CR_PTD - C_WIP_EL_VAR_PTD);
    ELSE
      RETURN (C_WIP_CI_CUM - C_WIP_CR_CUM - C_WIP_EL_VAR_CUM);
    END IF;
    RETURN NULL;
  END C_WIP_PERIOD_ACTFORMULA;

  FUNCTION C_FLEXWHEREFORMULA RETURN VARCHAR2 IS
  BEGIN
    IF (P_FLEXWHERE IS NULL) THEN
      RETURN (' ');
    ELSE
      RETURN ('AND ' || P_FLEXWHERE);
    END IF;
    RETURN ' ';
  END C_FLEXWHEREFORMULA;

  FUNCTION C_DJ_CI_PTDFORMULA(C_DJ_LAST_DATE IN NUMBER
                             ,C_PERIOD_CLOSE_DATE IN VARCHAR2
                             ,C_DJ_CI_LAST IN NUMBER) RETURN NUMBER IS
  BEGIN
    IF (C_DJ_LAST_DATE = C_PERIOD_CLOSE_DATE) THEN
      RETURN (C_DJ_CI_LAST);
    ELSE
      RETURN (0);
    END IF;
    RETURN NULL;
  END C_DJ_CI_PTDFORMULA;

  FUNCTION C_DJ_CR_PTDFORMULA(C_DJ_LAST_DATE IN NUMBER
                             ,C_PERIOD_CLOSE_DATE IN VARCHAR2
                             ,C_DJ_CR_LAST IN NUMBER) RETURN NUMBER IS
  BEGIN
    IF (C_DJ_LAST_DATE = C_PERIOD_CLOSE_DATE) THEN
      RETURN (C_DJ_CR_LAST);
    ELSE
      RETURN (0);
    END IF;
    RETURN NULL;
  END C_DJ_CR_PTDFORMULA;

  FUNCTION C_DJ_VR_PTDFORMULA(C_DJ_LAST_DATE IN NUMBER
                             ,C_PERIOD_CLOSE_DATE IN VARCHAR2
                             ,C_DJ_VR_LAST IN NUMBER) RETURN NUMBER IS
  BEGIN
    IF (C_DJ_LAST_DATE = C_PERIOD_CLOSE_DATE) THEN
      RETURN (C_DJ_VR_LAST);
    ELSE
      RETURN (0);
    END IF;
    RETURN NULL;
  END C_DJ_VR_PTDFORMULA;

  FUNCTION C_ACCT_CI_PTDFORMULA(C_ACCT_LAST_DATE IN NUMBER
                               ,C_PERIOD_CLOSE_DATE IN VARCHAR2
                               ,C_ACCT_CI_LAST IN NUMBER) RETURN NUMBER IS
  BEGIN
    IF (C_ACCT_LAST_DATE = C_PERIOD_CLOSE_DATE) THEN
      RETURN (C_ACCT_CI_LAST);
    ELSE
      RETURN (0);
    END IF;
    RETURN NULL;
  END C_ACCT_CI_PTDFORMULA;

  FUNCTION C_ACCT_CR_PTDFORMULA(C_ACCT_LAST_DATE IN NUMBER
                               ,C_PERIOD_CLOSE_DATE IN VARCHAR2
                               ,C_ACCT_CR_LAST IN NUMBER) RETURN NUMBER IS
  BEGIN
    IF (C_ACCT_LAST_DATE = C_PERIOD_CLOSE_DATE) THEN
      RETURN (C_ACCT_CR_LAST);
    ELSE
      RETURN (0);
    END IF;
    RETURN NULL;
  END C_ACCT_CR_PTDFORMULA;

  FUNCTION C_ACCT_EL_VAR_PTDFORMULA(C_ACCT_LAST_DATE IN NUMBER
                                   ,C_PERIOD_CLOSE_DATE IN VARCHAR2
                                   ,C_ACCT_EL_VAR_LAST IN NUMBER) RETURN NUMBER IS
  BEGIN
    IF (C_ACCT_LAST_DATE = C_PERIOD_CLOSE_DATE) THEN
      RETURN (C_ACCT_EL_VAR_LAST);
    ELSE
      RETURN (0);
    END IF;
    RETURN NULL;
  END C_ACCT_EL_VAR_PTDFORMULA;

  FUNCTION C_ACCT_SING_VAR_PTDFORMULA(C_ACCT_LAST_DATE IN NUMBER
                                     ,C_PERIOD_CLOSE_DATE IN VARCHAR2
                                     ,C_ACCT_SING_LAST IN NUMBER) RETURN NUMBER IS
  BEGIN
    IF (C_ACCT_LAST_DATE = C_PERIOD_CLOSE_DATE) THEN
      RETURN (C_ACCT_SING_LAST);
    ELSE
      RETURN (0);
    END IF;
    RETURN NULL;
  END C_ACCT_SING_VAR_PTDFORMULA;

  FUNCTION C_WIP_CI_PTDFORMULA(C_WIP_LAST_DATE IN NUMBER
                              ,C_PERIOD_CLOSE_DATE IN VARCHAR2
                              ,C_WIP_CI_LAST IN NUMBER) RETURN NUMBER IS
  BEGIN
    IF (C_WIP_LAST_DATE = C_PERIOD_CLOSE_DATE) THEN
      RETURN (C_WIP_CI_LAST);
    ELSE
      RETURN (0);
    END IF;
    RETURN NULL;
  END C_WIP_CI_PTDFORMULA;

  FUNCTION C_WIP_CR_PTDFORMULA(C_WIP_LAST_DATE IN NUMBER
                              ,C_PERIOD_CLOSE_DATE IN VARCHAR2
                              ,C_WIP_CR_LAST IN NUMBER) RETURN NUMBER IS
  BEGIN
    IF (C_WIP_LAST_DATE = C_PERIOD_CLOSE_DATE) THEN
      RETURN (C_WIP_CR_LAST);
    ELSE
      RETURN (0);
    END IF;
    RETURN NULL;
  END C_WIP_CR_PTDFORMULA;

  FUNCTION C_WIP_EL_VAR_PTDFORMULA(C_WIP_LAST_DATE IN NUMBER
                                  ,C_PERIOD_CLOSE_DATE IN VARCHAR2
                                  ,C_WIP_EL_VAR_LAST IN NUMBER) RETURN NUMBER IS
  BEGIN
    IF (C_WIP_LAST_DATE = C_PERIOD_CLOSE_DATE) THEN
      RETURN (C_WIP_EL_VAR_LAST);
    ELSE
      RETURN (0);
    END IF;
    RETURN NULL;
  END C_WIP_EL_VAR_PTDFORMULA;

  FUNCTION C_WIP_SING_PTDFORMULA(C_WIP_LAST_DATE IN NUMBER
                                ,C_PERIOD_CLOSE_DATE IN VARCHAR2
                                ,C_WIP_SING_LAST IN NUMBER) RETURN NUMBER IS
  BEGIN
    IF (C_WIP_LAST_DATE = C_PERIOD_CLOSE_DATE) THEN
      RETURN (C_WIP_SING_LAST);
    ELSE
      RETURN (0);
    END IF;
    RETURN NULL;
  END C_WIP_SING_PTDFORMULA;

  FUNCTION C_DJ_CIFORMULA(P_PTD_OR_CUM IN VARCHAR2
                         ,C_DJ_CI_PTD IN NUMBER
                         ,C_DJ_CI_CUM IN NUMBER) RETURN NUMBER IS
  BEGIN
    IF (P_PTD_OR_CUM = 'PTD') THEN
      RETURN (C_DJ_CI_PTD);
    ELSE
      RETURN (C_DJ_CI_CUM);
    END IF;
    RETURN NULL;
  END C_DJ_CIFORMULA;

  FUNCTION C_DJ_CRFORMULA(P_PTD_OR_CUM IN VARCHAR2
                         ,C_DJ_CR_PTD IN NUMBER
                         ,C_DJ_CR_CUM IN NUMBER) RETURN NUMBER IS
  BEGIN
    IF (P_PTD_OR_CUM = 'PTD') THEN
      RETURN (C_DJ_CR_PTD);
    ELSE
      RETURN (C_DJ_CR_CUM);
    END IF;
    RETURN NULL;
  END C_DJ_CRFORMULA;

  FUNCTION C_DJ_VRFORMULA(P_PTD_OR_CUM IN VARCHAR2
                         ,C_DJ_VR_PTD IN NUMBER
                         ,C_DJ_VR_CUM IN NUMBER) RETURN NUMBER IS
  BEGIN
    IF (P_PTD_OR_CUM = 'PTD') THEN
      RETURN (C_DJ_VR_PTD);
    ELSE
      RETURN (C_DJ_VR_CUM);
    END IF;
    RETURN NULL;
  END C_DJ_VRFORMULA;

  FUNCTION C_ACCT_CIFORMULA(P_PTD_OR_CUM IN VARCHAR2
                           ,C_ACCT_CI_PTD IN NUMBER
                           ,C_ACCT_CI_CUM IN NUMBER) RETURN NUMBER IS
  BEGIN
    IF (P_PTD_OR_CUM = 'PTD') THEN
      RETURN (C_ACCT_CI_PTD);
    ELSE
      RETURN (C_ACCT_CI_CUM);
    END IF;
    RETURN NULL;
  END C_ACCT_CIFORMULA;

  FUNCTION C_ACCT_CRFORMULA(P_PTD_OR_CUM IN VARCHAR2
                           ,C_ACCT_CR_PTD IN NUMBER
                           ,C_ACCT_CR_CUM IN NUMBER) RETURN NUMBER IS
  BEGIN
    IF (P_PTD_OR_CUM = 'PTD') THEN
      RETURN (C_ACCT_CR_PTD);
    ELSE
      RETURN (C_ACCT_CR_CUM);
    END IF;
    RETURN NULL;
  END C_ACCT_CRFORMULA;

  FUNCTION C_ACCT_EL_VARFORMULA(P_PTD_OR_CUM IN VARCHAR2
                               ,C_ACCT_EL_VAR_PTD IN NUMBER
                               ,C_ACCT_EL_VAR_CUM IN NUMBER) RETURN NUMBER IS
  BEGIN
    IF (P_PTD_OR_CUM = 'PTD') THEN
      RETURN (C_ACCT_EL_VAR_PTD);
    ELSE
      RETURN (C_ACCT_EL_VAR_CUM);
    END IF;
    RETURN NULL;
  END C_ACCT_EL_VARFORMULA;

  FUNCTION C_ACCT_SINGFORMULA(P_PTD_OR_CUM IN VARCHAR2
                             ,C_ACCT_SING_VAR_PTD IN NUMBER
                             ,C_ACCT_SING_VAR_CUM IN NUMBER) RETURN NUMBER IS
  BEGIN
    IF (P_PTD_OR_CUM = 'PTD') THEN
      RETURN (C_ACCT_SING_VAR_PTD);
    ELSE
      RETURN (C_ACCT_SING_VAR_CUM);
    END IF;
    RETURN NULL;
  END C_ACCT_SINGFORMULA;

  FUNCTION C_WIP_CIFORMULA(P_PTD_OR_CUM IN VARCHAR2
                          ,C_WIP_CI_PTD IN NUMBER
                          ,C_WIP_CI_CUM IN NUMBER) RETURN NUMBER IS
  BEGIN
    IF (P_PTD_OR_CUM = 'PTD') THEN
      RETURN (C_WIP_CI_PTD);
    ELSE
      RETURN (C_WIP_CI_CUM);
    END IF;
    RETURN NULL;
  END C_WIP_CIFORMULA;

  FUNCTION C_WIP_CRFORMULA(P_PTD_OR_CUM IN VARCHAR2
                          ,C_WIP_CR_PTD IN NUMBER
                          ,C_WIP_CR_CUM IN NUMBER) RETURN NUMBER IS
  BEGIN
    IF (P_PTD_OR_CUM = 'PTD') THEN
      RETURN (C_WIP_CR_PTD);
    ELSE
      RETURN (C_WIP_CR_CUM);
    END IF;
    RETURN NULL;
  END C_WIP_CRFORMULA;

  FUNCTION C_WIP_EL_VARFORMULA(P_PTD_OR_CUM IN VARCHAR2
                              ,C_WIP_EL_VAR_PTD IN NUMBER
                              ,C_WIP_EL_VAR_CUM IN NUMBER) RETURN NUMBER IS
  BEGIN
    IF (P_PTD_OR_CUM = 'PTD') THEN
      RETURN (C_WIP_EL_VAR_PTD);
    ELSE
      RETURN (C_WIP_EL_VAR_CUM);
    END IF;
    RETURN NULL;
  END C_WIP_EL_VARFORMULA;

  FUNCTION C_WIP_SINGFORMULA(P_PTD_OR_CUM IN VARCHAR2
                            ,C_WIP_SING_PTD IN NUMBER
                            ,C_WIP_SING_CUM IN NUMBER) RETURN NUMBER IS
  BEGIN
    IF (P_PTD_OR_CUM = 'PTD') THEN
      RETURN (C_WIP_SING_PTD);
    ELSE
      RETURN (C_WIP_SING_CUM);
    END IF;
    RETURN NULL;
  END C_WIP_SINGFORMULA;

  FUNCTION P_PTD_OR_CUMFORMULA RETURN VARCHAR2 IS
  BEGIN
    IF (P_REPORT_TYPE = 1) THEN
      RETURN ('PTD');
    ELSE
      RETURN ('CUM');
    END IF;
    RETURN NULL;
  END P_PTD_OR_CUMFORMULA;

  FUNCTION AFTERREPORT RETURN BOOLEAN IS
  BEGIN
    /*SRW.USER_EXIT('FND SRWEXIT')*/NULL;
    RETURN (TRUE);
  END AFTERREPORT;

  FUNCTION C_ACCT_SORTFORMULA(C_ACCT_SORT IN VARCHAR2) RETURN VARCHAR2 IS
  BEGIN
    RETURN (C_ACCT_SORT);
  END C_ACCT_SORTFORMULA;

  FUNCTION C_WIP_ACCT_SORTFORMULA(C_WIP_ACCT_SORT IN VARCHAR2) RETURN VARCHAR2 IS
  BEGIN
    RETURN (C_WIP_ACCT_SORT);
  END C_WIP_ACCT_SORTFORMULA;

  FUNCTION AFTERPFORM RETURN BOOLEAN IS
  BEGIN
    RETURN (TRUE);
  END AFTERPFORM;

END WIP_WIPUTVAL_XMLP_PKG;


/
