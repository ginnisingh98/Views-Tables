--------------------------------------------------------
--  DDL for Package Body OE_TRANSACTION_TYPES_PKG
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE PACKAGE BODY "APPS"."OE_TRANSACTION_TYPES_PKG" as
/* $Header: OEXUTRNB.pls 120.4.12010000.2 2009/07/07 08:22:04 aambasth ship $ */
procedure INSERT_ROW (
  X_ROWID in out nocopy VARCHAR2,
  X_ORG_ID in number,
  X_TRANSACTION_TYPE_ID in NUMBER,
  X_TRANSACTION_TYPE_CODE in VARCHAR2,
  X_ORDER_CATEGORY_CODE in VARCHAR2,
  X_START_DATE_ACTIVE in DATE,
  X_END_DATE_ACTIVE in DATE,
  X_REQUEST_ID in NUMBER,
  X_CURRENCY_CODE in VARCHAR2,
  X_CONVERSION_TYPE_CODE in VARCHAR2,
  X_CUST_TRX_TYPE_ID in NUMBER,
  X_COST_OF_GOODS_SOLD_ACCOUNT in NUMBER,
  X_ENTRY_CREDIT_CHECK_RULE_ID in NUMBER,
  X_SHIPPING_CREDIT_CHECK_RULE_I in NUMBER,
  X_PICKING_CREDIT_CHECK_RULE_ID in NUMBER,
  X_PACKING_CREDIT_CHECK_RULE_ID in NUMBER,
  X_PRICE_LIST_ID in NUMBER,
  X_ENFORCE_LINE_PRICES_FLAG in VARCHAR2,
  X_WAREHOUSE_ID in NUMBER,
  X_DEMAND_CLASS_CODE in VARCHAR2,
  X_SHIPMENT_PRIORITY_CODE in VARCHAR2,
  X_SHIPPING_METHOD_CODE in VARCHAR2,
  X_FREIGHT_TERMS_CODE in VARCHAR2,
  X_FOB_POINT_CODE in VARCHAR2,
  X_SHIP_SOURCE_TYPE_CODE in VARCHAR2,
  X_AGREEMENT_TYPE_CODE in VARCHAR2,
  X_AGREEMENT_REQUIRED_FLAG in VARCHAR2,
  X_PO_REQUIRED_FLAG in VARCHAR2,
  X_INVOICING_RULE_ID in NUMBER,
  X_INVOICING_CREDIT_METHOD_CODE in VARCHAR2,
  X_ACCOUNTING_RULE_ID in NUMBER,
  X_ACCOUNTING_CREDIT_METHOD_COD in VARCHAR2,
  X_INVOICE_SOURCE_ID in VARCHAR2,
  X_NON_DELIVERY_INVOICE_SOURCE_ in VARCHAR2,
  X_DEFAULT_INBOUND_LINE_TYPE_ID in NUMBER,
  X_DEFAULT_OUTBOUND_LINE_TYPE_I in NUMBER,
  X_INSPECTION_REQUIRED_FLAG in VARCHAR2,
  X_DEPOT_REPAIR_CODE in VARCHAR2,
  X_AUTO_SCHEDULING_FLAG in VARCHAR2,
  X_SCHEDULING_LEVEL_CODE in VARCHAR2,
  X_CONTEXT in VARCHAR2,
  X_ATTRIBUTE1 in VARCHAR2,
  X_ATTRIBUTE2 in VARCHAR2,
  X_ATTRIBUTE3 in VARCHAR2,
  X_ATTRIBUTE4 in VARCHAR2,
  X_ATTRIBUTE5 in VARCHAR2,
  X_ATTRIBUTE6 in VARCHAR2,
  X_ATTRIBUTE7 in VARCHAR2,
  X_ATTRIBUTE8 in VARCHAR2,
  X_ATTRIBUTE9 in VARCHAR2,
  X_ATTRIBUTE10 in VARCHAR2,
  X_ATTRIBUTE11 in VARCHAR2,
  X_ATTRIBUTE12 in VARCHAR2,
  X_ATTRIBUTE13 in VARCHAR2,
  X_ATTRIBUTE14 in VARCHAR2,
  X_ATTRIBUTE15 in VARCHAR2,
  X_NAME in VARCHAR2,
  X_DESCRIPTION in VARCHAR2,
  X_LAYOUT_TEMPLATE_ID in number,
  X_CREATION_DATE in DATE,
  X_CREATED_BY in NUMBER,
  X_LAST_UPDATE_DATE in DATE,
  X_LAST_UPDATED_BY in NUMBER,
  X_LAST_UPDATE_LOGIN in NUMBER,
  X_SALES_DOCUMENT_TYPE_CODE in VARCHAR2,
  X_TAX_CALCULATION_EVENT IN VARCHAR2 := NULL,
  X_MIN_MARGIN_PERCENT IN NUMBER,
  X_DEFAULT_FULFILLMENT_SET  IN VARCHAR2 DEFAULT NULL,
  X_DEFAULT_LINE_SET_CODE    IN VARCHAR2 DEFAULT NULL,
  X_def_transaction_phase_code     in VARCHAR2 default null,
  X_quote_num_as_ord_num_flag  in VARCHAR2 default null,
  X_CONTRACT_TEMPLATE_ID in number

) is
  cursor C is select ROWID from OE_TRANSACTION_TYPES_ALL
    where TRANSACTION_TYPE_ID = X_TRANSACTION_TYPE_ID
    ;
begin
  insert into OE_TRANSACTION_TYPES_ALL (
    TRANSACTION_TYPE_ID,
    TRANSACTION_TYPE_CODE,
    ORG_ID,
    ORDER_CATEGORY_CODE,
    START_DATE_ACTIVE,
    END_DATE_ACTIVE,
    REQUEST_ID,
    CURRENCY_CODE,
    CONVERSION_TYPE_CODE,
    CUST_TRX_TYPE_ID,
    COST_OF_GOODS_SOLD_ACCOUNT,
    ENTRY_CREDIT_CHECK_RULE_ID,
    SHIPPING_CREDIT_CHECK_RULE_ID,
    PICKING_CREDIT_CHECK_RULE_ID,
    PACKING_CREDIT_CHECK_RULE_ID,
    PRICE_LIST_ID,
    ENFORCE_LINE_PRICES_FLAG,
    WAREHOUSE_ID,
    DEMAND_CLASS_CODE,
    SHIPMENT_PRIORITY_CODE,
    SHIPPING_METHOD_CODE,
    FREIGHT_TERMS_CODE,
    FOB_POINT_CODE,
    SHIP_SOURCE_TYPE_CODE,
    AGREEMENT_TYPE_CODE,
    AGREEMENT_REQUIRED_FLAG,
    PO_REQUIRED_FLAG,
    INVOICING_RULE_ID,
    INVOICING_CREDIT_METHOD_CODE,
    ACCOUNTING_RULE_ID,
    ACCOUNTING_CREDIT_METHOD_CODE,
    INVOICE_SOURCE_ID,
    NON_DELIVERY_INVOICE_SOURCE_ID,
    DEFAULT_INBOUND_LINE_TYPE_ID,
    DEFAULT_OUTBOUND_LINE_TYPE_ID,
    INSPECTION_REQUIRED_FLAG,
    DEPOT_REPAIR_CODE,
    AUTO_SCHEDULING_FLAG,
    SCHEDULING_LEVEL_CODE,
    CONTEXT,
    ATTRIBUTE1,
    ATTRIBUTE2,
    ATTRIBUTE3,
    ATTRIBUTE4,
    ATTRIBUTE5,
    ATTRIBUTE6,
    ATTRIBUTE7,
    ATTRIBUTE8,
    ATTRIBUTE9,
    ATTRIBUTE10,
    ATTRIBUTE11,
    ATTRIBUTE12,
    ATTRIBUTE13,
    ATTRIBUTE14,
    ATTRIBUTE15,
    LAYOUT_TEMPLATE_ID,
    CREATION_DATE,
    CREATED_BY,
    LAST_UPDATE_DATE,
    LAST_UPDATED_BY,
    LAST_UPDATE_LOGIN,
    SALES_DOCUMENT_TYPE_CODE,
    TAX_CALCULATION_EVENT_CODE,
    MIN_MARGIN_PERCENT,
    DEFAULT_FULFILLMENT_SET,
    DEFAULT_LINE_SET_CODE,
    def_transaction_phase_code,
    quote_num_as_ord_num_flag,
    contract_template_id

  ) values (
    X_TRANSACTION_TYPE_ID,
    X_TRANSACTION_TYPE_CODE,
    X_ORG_ID,
    X_ORDER_CATEGORY_CODE,
    X_START_DATE_ACTIVE,
    X_END_DATE_ACTIVE,
    X_REQUEST_ID,
    X_CURRENCY_CODE,
    X_CONVERSION_TYPE_CODE,
    X_CUST_TRX_TYPE_ID,
    X_COST_OF_GOODS_SOLD_ACCOUNT,
    X_ENTRY_CREDIT_CHECK_RULE_ID,
    X_SHIPPING_CREDIT_CHECK_RULE_I,
    X_PICKING_CREDIT_CHECK_RULE_ID,
    X_PACKING_CREDIT_CHECK_RULE_ID,
    X_PRICE_LIST_ID,
    Nvl(X_ENFORCE_LINE_PRICES_FLAG, 'N'),
    X_WAREHOUSE_ID,
    X_DEMAND_CLASS_CODE,
    X_SHIPMENT_PRIORITY_CODE,
    X_SHIPPING_METHOD_CODE,
    X_FREIGHT_TERMS_CODE,
    X_FOB_POINT_CODE,
    X_SHIP_SOURCE_TYPE_CODE,
    X_AGREEMENT_TYPE_CODE,
    X_AGREEMENT_REQUIRED_FLAG,
    X_PO_REQUIRED_FLAG,
    X_INVOICING_RULE_ID,
    X_INVOICING_CREDIT_METHOD_CODE,
    X_ACCOUNTING_RULE_ID,
    X_ACCOUNTING_CREDIT_METHOD_COD,
    X_INVOICE_SOURCE_ID,
    X_NON_DELIVERY_INVOICE_SOURCE_,
    X_DEFAULT_INBOUND_LINE_TYPE_ID,
    X_DEFAULT_OUTBOUND_LINE_TYPE_I,
    X_INSPECTION_REQUIRED_FLAG,
    X_DEPOT_REPAIR_CODE,
    X_AUTO_SCHEDULING_FLAG,
    X_SCHEDULING_LEVEL_CODE,
    X_CONTEXT,
    X_ATTRIBUTE1,
    X_ATTRIBUTE2,
    X_ATTRIBUTE3,
    X_ATTRIBUTE4,
    X_ATTRIBUTE5,
    X_ATTRIBUTE6,
    X_ATTRIBUTE7,
    X_ATTRIBUTE8,
    X_ATTRIBUTE9,
    X_ATTRIBUTE10,
    X_ATTRIBUTE11,
    X_ATTRIBUTE12,
    X_ATTRIBUTE13,
    X_ATTRIBUTE14,
    X_ATTRIBUTE15,
    X_LAYOUT_TEMPLATE_ID,
    X_CREATION_DATE,
    X_CREATED_BY,
    X_LAST_UPDATE_DATE,
    X_LAST_UPDATED_BY,
    X_LAST_UPDATE_LOGIN,
    nvl(X_SALES_DOCUMENT_TYPE_CODE,'O'),
    X_TAX_CALCULATION_EVENT,
    X_MIN_MARGIN_PERCENT,
    X_DEFAULT_FULFILLMENT_SET,
    X_DEFAULT_LINE_SET_CODE,
    X_def_transaction_phase_code,
    X_quote_num_as_ord_num_flag,
    X_CONTRACT_TEMPLATE_ID
  );

  insert into OE_TRANSACTION_TYPES_TL (
    TRANSACTION_TYPE_ID,
    NAME,
    DESCRIPTION,
    CREATION_DATE,
    CREATED_BY,
    LAST_UPDATE_DATE,
    LAST_UPDATED_BY,
    LAST_UPDATE_LOGIN,
    PROGRAM_APPLICATION_ID,
    PROGRAM_ID,
    REQUEST_ID,
    LANGUAGE,
    SOURCE_LANG
  ) select
    X_TRANSACTION_TYPE_ID,
    X_NAME,
    X_DESCRIPTION,
    X_CREATION_DATE,
    X_CREATED_BY,
    X_LAST_UPDATE_DATE,
    X_LAST_UPDATED_BY,
    X_LAST_UPDATE_LOGIN,
    NULL,
    NULL,
    NULL,
    L.LANGUAGE_CODE,
    userenv('LANG')
  from FND_LANGUAGES L
  where L.INSTALLED_FLAG in ('I', 'B')
  and not exists
    (select NULL
    from OE_TRANSACTION_TYPES_TL T
    where T.TRANSACTION_TYPE_ID = X_TRANSACTION_TYPE_ID
    and T.LANGUAGE = L.LANGUAGE_CODE);

  open c;
  fetch c into X_ROWID;
  if (c%notfound) then
    close c;
    raise no_data_found;
  end if;
  close c;

end INSERT_ROW;

procedure LOCK_ROW (
  X_TRANSACTION_TYPE_ID in NUMBER,
  X_TRANSACTION_TYPE_CODE in VARCHAR2,
  X_ORDER_CATEGORY_CODE in VARCHAR2,
  X_START_DATE_ACTIVE in DATE,
  X_END_DATE_ACTIVE in DATE,
  X_REQUEST_ID in NUMBER,
  X_CURRENCY_CODE in VARCHAR2,
  X_CONVERSION_TYPE_CODE in VARCHAR2,
  X_CUST_TRX_TYPE_ID in NUMBER,
  X_COST_OF_GOODS_SOLD_ACCOUNT in NUMBER,
  X_ENTRY_CREDIT_CHECK_RULE_ID in NUMBER,
  X_SHIPPING_CREDIT_CHECK_RULE_I in NUMBER,
  X_PICKING_CREDIT_CHECK_RULE_ID in NUMBER,
  X_PACKING_CREDIT_CHECK_RULE_ID in NUMBER,
  X_PRICE_LIST_ID in NUMBER,
  X_ENFORCE_LINE_PRICES_FLAG in VARCHAR2,
  X_WAREHOUSE_ID in NUMBER,
  X_DEMAND_CLASS_CODE in VARCHAR2,
  X_SHIPMENT_PRIORITY_CODE in VARCHAR2,
  X_SHIPPING_METHOD_CODE in VARCHAR2,
  X_FREIGHT_TERMS_CODE in VARCHAR2,
  X_FOB_POINT_CODE in VARCHAR2,
  X_SHIP_SOURCE_TYPE_CODE in VARCHAR2,
  X_AGREEMENT_TYPE_CODE in VARCHAR2,
  X_AGREEMENT_REQUIRED_FLAG in VARCHAR2,
  X_PO_REQUIRED_FLAG in VARCHAR2,
  X_INVOICING_RULE_ID in NUMBER,
  X_INVOICING_CREDIT_METHOD_CODE in VARCHAR2,
  X_ACCOUNTING_RULE_ID in NUMBER,
  X_ACCOUNTING_CREDIT_METHOD_COD in VARCHAR2,
  X_INVOICE_SOURCE_ID in VARCHAR2,
  X_NON_DELIVERY_INVOICE_SOURCE_ in VARCHAR2,
  X_DEFAULT_INBOUND_LINE_TYPE_ID in NUMBER,
  X_DEFAULT_OUTBOUND_LINE_TYPE_I in NUMBER,
  X_INSPECTION_REQUIRED_FLAG in VARCHAR2,
  X_DEPOT_REPAIR_CODE in VARCHAR2,
  X_AUTO_SCHEDULING_FLAG in VARCHAR2,
  X_SCHEDULING_LEVEL_CODE in VARCHAR2,
  X_CONTEXT in VARCHAR2,
  X_ATTRIBUTE1 in VARCHAR2,
  X_ATTRIBUTE2 in VARCHAR2,
  X_ATTRIBUTE3 in VARCHAR2,
  X_ATTRIBUTE4 in VARCHAR2,
  X_ATTRIBUTE5 in VARCHAR2,
  X_ATTRIBUTE6 in VARCHAR2,
  X_ATTRIBUTE7 in VARCHAR2,
  X_ATTRIBUTE8 in VARCHAR2,
  X_ATTRIBUTE9 in VARCHAR2,
  X_ATTRIBUTE10 in VARCHAR2,
  X_ATTRIBUTE11 in VARCHAR2,
  X_ATTRIBUTE12 in VARCHAR2,
  X_ATTRIBUTE13 in VARCHAR2,
  X_ATTRIBUTE14 in VARCHAR2,
  X_ATTRIBUTE15 in VARCHAR2,
  X_NAME in VARCHAR2,
  X_DESCRIPTION in VARCHAR2,
  X_LAYOUT_TEMPLATE_ID in number,
  X_TAX_CALCULATION_EVENT IN VARCHAR2 := NULL,
  X_MIN_MARGIN_PERCENT IN NUMBER,
  X_DEFAULT_FULFILLMENT_SET    in VARCHAR2 default null,
  X_DEFAULT_LINE_SET_CODE      in VARCHAR2 default null,
  X_def_transaction_phase_code     in VARCHAR2 default null,
  X_quote_num_as_ord_num_flag  in VARCHAR2 default null,
  X_CONTRACT_TEMPLATE_ID in number
) is
  cursor c is select
      TRANSACTION_TYPE_CODE,
      ORDER_CATEGORY_CODE,
      START_DATE_ACTIVE,
      END_DATE_ACTIVE,
      REQUEST_ID,
      CURRENCY_CODE,
      CONVERSION_TYPE_CODE,
      CUST_TRX_TYPE_ID,
      COST_OF_GOODS_SOLD_ACCOUNT,
      ENTRY_CREDIT_CHECK_RULE_ID,
      SHIPPING_CREDIT_CHECK_RULE_ID,
      PICKING_CREDIT_CHECK_RULE_ID,
      PACKING_CREDIT_CHECK_RULE_ID,
      PRICE_LIST_ID,
      ENFORCE_LINE_PRICES_FLAG,
      WAREHOUSE_ID,
      DEMAND_CLASS_CODE,
      SHIPMENT_PRIORITY_CODE,
      SHIPPING_METHOD_CODE,
      FREIGHT_TERMS_CODE,
      FOB_POINT_CODE,
      SHIP_SOURCE_TYPE_CODE,
      AGREEMENT_TYPE_CODE,
      AGREEMENT_REQUIRED_FLAG,
      PO_REQUIRED_FLAG,
      INVOICING_RULE_ID,
      INVOICING_CREDIT_METHOD_CODE,
      ACCOUNTING_RULE_ID,
      ACCOUNTING_CREDIT_METHOD_CODE,
      INVOICE_SOURCE_ID,
      NON_DELIVERY_INVOICE_SOURCE_ID,
      DEFAULT_INBOUND_LINE_TYPE_ID,
      DEFAULT_OUTBOUND_LINE_TYPE_ID,
      INSPECTION_REQUIRED_FLAG,
      DEPOT_REPAIR_CODE,
      AUTO_SCHEDULING_FLAG,
      SCHEDULING_LEVEL_CODE,
      CONTEXT,
      ATTRIBUTE1,
      ATTRIBUTE2,
      ATTRIBUTE3,
      ATTRIBUTE4,
      ATTRIBUTE5,
      ATTRIBUTE6,
      ATTRIBUTE7,
      ATTRIBUTE8,
      ATTRIBUTE9,
      ATTRIBUTE10,
      ATTRIBUTE11,
      ATTRIBUTE12,
      ATTRIBUTE13,
      ATTRIBUTE14,
      ATTRIBUTE15,
      LAYOUT_TEMPLATE_ID,
      TAX_CALCULATION_EVENT_CODE,
      MIN_MARGIN_PERCENT,
      DEFAULT_FULFILLMENT_SET,
      DEFAULT_LINE_SET_CODE,
      def_transaction_phase_code,
      quote_num_as_ord_num_flag,
      CONTRACT_TEMPLATE_ID
    from OE_TRANSACTION_TYPES_ALL
    where TRANSACTION_TYPE_ID = X_TRANSACTION_TYPE_ID
    for update of TRANSACTION_TYPE_ID nowait;
  recinfo c%rowtype;

  cursor c1 is select
      NAME,
      DESCRIPTION,
      decode(LANGUAGE, userenv('LANG'), 'Y', 'N') BASELANG
    from OE_TRANSACTION_TYPES_TL
    where TRANSACTION_TYPE_ID = X_TRANSACTION_TYPE_ID
    and userenv('LANG') in (LANGUAGE, SOURCE_LANG)
    for update of TRANSACTION_TYPE_ID nowait;
begin
  open c;
  fetch c into recinfo;
  if (c%notfound) then
    close c;
    fnd_message.set_name('FND', 'FORM_RECORD_DELETED');
    app_exception.raise_exception;
  end if;
  close c;
  if (    (recinfo.TRANSACTION_TYPE_CODE = X_TRANSACTION_TYPE_CODE)
      AND ((recinfo.ORDER_CATEGORY_CODE = X_ORDER_CATEGORY_CODE)
           OR ((recinfo.ORDER_CATEGORY_CODE is null) AND (X_ORDER_CATEGORY_CODE is null)))
      AND (recinfo.START_DATE_ACTIVE = X_START_DATE_ACTIVE)
      AND ((recinfo.END_DATE_ACTIVE = X_END_DATE_ACTIVE)
           OR ((recinfo.END_DATE_ACTIVE is null) AND (X_END_DATE_ACTIVE is null)))
      AND ((recinfo.REQUEST_ID = X_REQUEST_ID)
           OR ((recinfo.REQUEST_ID is null) AND (X_REQUEST_ID is null)))
      AND ((recinfo.CURRENCY_CODE = X_CURRENCY_CODE)
           OR ((recinfo.CURRENCY_CODE is null) AND (X_CURRENCY_CODE is null)))
      AND ((recinfo.CONVERSION_TYPE_CODE = X_CONVERSION_TYPE_CODE)
           OR ((recinfo.CONVERSION_TYPE_CODE is null) AND (X_CONVERSION_TYPE_CODE is null)))
      AND ((recinfo.CUST_TRX_TYPE_ID = X_CUST_TRX_TYPE_ID)
           OR ((recinfo.CUST_TRX_TYPE_ID is null) AND (X_CUST_TRX_TYPE_ID is null)))
      AND ((recinfo.COST_OF_GOODS_SOLD_ACCOUNT = X_COST_OF_GOODS_SOLD_ACCOUNT)
           OR ((recinfo.COST_OF_GOODS_SOLD_ACCOUNT is null) AND (X_COST_OF_GOODS_SOLD_ACCOUNT is null)))
      AND ((recinfo.ENTRY_CREDIT_CHECK_RULE_ID = X_ENTRY_CREDIT_CHECK_RULE_ID)
           OR ((recinfo.ENTRY_CREDIT_CHECK_RULE_ID is null) AND (X_ENTRY_CREDIT_CHECK_RULE_ID is null)))
      AND ((recinfo.SHIPPING_CREDIT_CHECK_RULE_ID = X_SHIPPING_CREDIT_CHECK_RULE_I)
           OR ((recinfo.SHIPPING_CREDIT_CHECK_RULE_ID is null) AND (X_SHIPPING_CREDIT_CHECK_RULE_I is null)))
      AND ((recinfo.PICKING_CREDIT_CHECK_RULE_ID = X_PICKING_CREDIT_CHECK_RULE_ID)
           OR ((recinfo.PICKING_CREDIT_CHECK_RULE_ID is null) AND (X_PICKING_CREDIT_CHECK_RULE_ID is null)))
      AND ((recinfo.PACKING_CREDIT_CHECK_RULE_ID = X_PACKING_CREDIT_CHECK_RULE_ID)
           OR ((recinfo.PACKING_CREDIT_CHECK_RULE_ID is null) AND (X_PACKING_CREDIT_CHECK_RULE_ID is null)))
      AND ((recinfo.PRICE_LIST_ID = X_PRICE_LIST_ID)
           OR ((recinfo.PRICE_LIST_ID is null) AND (X_PRICE_LIST_ID is null)))
      AND ((recinfo.ENFORCE_LINE_PRICES_FLAG = X_ENFORCE_LINE_PRICES_FLAG)
           OR ((recinfo.ENFORCE_LINE_PRICES_FLAG is null) AND (X_ENFORCE_LINE_PRICES_FLAG is null)))
      AND ((recinfo.WAREHOUSE_ID = X_WAREHOUSE_ID)
           OR ((recinfo.WAREHOUSE_ID is null) AND (X_WAREHOUSE_ID is null)))
      AND ((recinfo.DEMAND_CLASS_CODE = X_DEMAND_CLASS_CODE)
           OR ((recinfo.DEMAND_CLASS_CODE is null) AND (X_DEMAND_CLASS_CODE is null)))
      AND ((recinfo.SHIPMENT_PRIORITY_CODE = X_SHIPMENT_PRIORITY_CODE)
           OR ((recinfo.SHIPMENT_PRIORITY_CODE is null) AND (X_SHIPMENT_PRIORITY_CODE is null)))
      AND ((recinfo.SHIPPING_METHOD_CODE = X_SHIPPING_METHOD_CODE)
           OR ((recinfo.SHIPPING_METHOD_CODE is null) AND (X_SHIPPING_METHOD_CODE is null)))
      AND ((recinfo.FREIGHT_TERMS_CODE = X_FREIGHT_TERMS_CODE)
           OR ((recinfo.FREIGHT_TERMS_CODE is null) AND (X_FREIGHT_TERMS_CODE is null)))
      AND ((recinfo.FOB_POINT_CODE = X_FOB_POINT_CODE)
           OR ((recinfo.FOB_POINT_CODE is null) AND (X_FOB_POINT_CODE is null)))
      AND ((recinfo.SHIP_SOURCE_TYPE_CODE = X_SHIP_SOURCE_TYPE_CODE)
           OR ((recinfo.SHIP_SOURCE_TYPE_CODE is null) AND (X_SHIP_SOURCE_TYPE_CODE is null)))
      AND ((recinfo.AGREEMENT_TYPE_CODE = X_AGREEMENT_TYPE_CODE)
           OR ((recinfo.AGREEMENT_TYPE_CODE is null) AND (X_AGREEMENT_TYPE_CODE is null)))
      AND (recinfo.AGREEMENT_REQUIRED_FLAG = X_AGREEMENT_REQUIRED_FLAG)
      AND ((recinfo.PO_REQUIRED_FLAG = X_PO_REQUIRED_FLAG)
           OR ((recinfo.PO_REQUIRED_FLAG is null) AND (X_PO_REQUIRED_FLAG is null)))
      AND ((recinfo.INVOICING_RULE_ID = X_INVOICING_RULE_ID)
           OR ((recinfo.INVOICING_RULE_ID is null) AND (X_INVOICING_RULE_ID is null)))
      AND ((recinfo.INVOICING_CREDIT_METHOD_CODE = X_INVOICING_CREDIT_METHOD_CODE)
           OR ((recinfo.INVOICING_CREDIT_METHOD_CODE is null) AND (X_INVOICING_CREDIT_METHOD_CODE is null)))
      AND ((recinfo.ACCOUNTING_RULE_ID = X_ACCOUNTING_RULE_ID)
           OR ((recinfo.ACCOUNTING_RULE_ID is null) AND (X_ACCOUNTING_RULE_ID is null)))
      AND ((recinfo.ACCOUNTING_CREDIT_METHOD_CODE = X_ACCOUNTING_CREDIT_METHOD_COD)
           OR ((recinfo.ACCOUNTING_CREDIT_METHOD_CODE is null) AND (X_ACCOUNTING_CREDIT_METHOD_COD is null)))
      AND ((recinfo.INVOICE_SOURCE_ID = X_INVOICE_SOURCE_ID)
           OR ((recinfo.INVOICE_SOURCE_ID is null) AND (X_INVOICE_SOURCE_ID is null)))
      AND ((recinfo.NON_DELIVERY_INVOICE_SOURCE_ID = X_NON_DELIVERY_INVOICE_SOURCE_)
           OR ((recinfo.NON_DELIVERY_INVOICE_SOURCE_ID is null) AND (X_NON_DELIVERY_INVOICE_SOURCE_ is null)))
      AND ((recinfo.DEFAULT_INBOUND_LINE_TYPE_ID = X_DEFAULT_INBOUND_LINE_TYPE_ID)
           OR ((recinfo.DEFAULT_INBOUND_LINE_TYPE_ID is null) AND (X_DEFAULT_INBOUND_LINE_TYPE_ID is null)))
      AND ((recinfo.DEFAULT_OUTBOUND_LINE_TYPE_ID = X_DEFAULT_OUTBOUND_LINE_TYPE_I)
           OR ((recinfo.DEFAULT_OUTBOUND_LINE_TYPE_ID is null) AND (X_DEFAULT_OUTBOUND_LINE_TYPE_I is null)))
      AND ((recinfo.INSPECTION_REQUIRED_FLAG = X_INSPECTION_REQUIRED_FLAG)
           OR ((recinfo.INSPECTION_REQUIRED_FLAG is null) AND (X_INSPECTION_REQUIRED_FLAG is null)))
      AND ((recinfo.DEPOT_REPAIR_CODE = X_DEPOT_REPAIR_CODE)
           OR ((recinfo.DEPOT_REPAIR_CODE is null) AND (X_DEPOT_REPAIR_CODE is null)))
      AND ((recinfo.AUTO_SCHEDULING_FLAG = X_AUTO_SCHEDULING_FLAG)
           OR ((recinfo.AUTO_SCHEDULING_FLAG is null) AND (X_AUTO_SCHEDULING_FLAG is null)))
      AND ((recinfo.SCHEDULING_LEVEL_CODE = X_SCHEDULING_LEVEL_CODE)
           OR ((recinfo.SCHEDULING_LEVEL_CODE is null) AND (X_SCHEDULING_LEVEL_CODE is null)))
      AND ((recinfo.CONTEXT = X_CONTEXT)
           OR ((recinfo.CONTEXT is null) AND (X_CONTEXT is null)))
      AND ((recinfo.ATTRIBUTE1 = X_ATTRIBUTE1)
           OR ((recinfo.ATTRIBUTE1 is null) AND (X_ATTRIBUTE1 is null)))
      AND ((recinfo.ATTRIBUTE2 = X_ATTRIBUTE2)
           OR ((recinfo.ATTRIBUTE2 is null) AND (X_ATTRIBUTE2 is null)))
      AND ((recinfo.ATTRIBUTE3 = X_ATTRIBUTE3)
           OR ((recinfo.ATTRIBUTE3 is null) AND (X_ATTRIBUTE3 is null)))
      AND ((recinfo.ATTRIBUTE4 = X_ATTRIBUTE4)
           OR ((recinfo.ATTRIBUTE4 is null) AND (X_ATTRIBUTE4 is null)))
      AND ((recinfo.ATTRIBUTE5 = X_ATTRIBUTE5)
           OR ((recinfo.ATTRIBUTE5 is null) AND (X_ATTRIBUTE5 is null)))
      AND ((recinfo.ATTRIBUTE6 = X_ATTRIBUTE6)
           OR ((recinfo.ATTRIBUTE6 is null) AND (X_ATTRIBUTE6 is null)))
      AND ((recinfo.ATTRIBUTE7 = X_ATTRIBUTE7)
           OR ((recinfo.ATTRIBUTE7 is null) AND (X_ATTRIBUTE7 is null)))
      AND ((recinfo.ATTRIBUTE8 = X_ATTRIBUTE8)
           OR ((recinfo.ATTRIBUTE8 is null) AND (X_ATTRIBUTE8 is null)))
      AND ((recinfo.ATTRIBUTE9 = X_ATTRIBUTE9)
           OR ((recinfo.ATTRIBUTE9 is null) AND (X_ATTRIBUTE9 is null)))
      AND ((recinfo.ATTRIBUTE10 = X_ATTRIBUTE10)
           OR ((recinfo.ATTRIBUTE10 is null) AND (X_ATTRIBUTE10 is null)))
      AND ((recinfo.ATTRIBUTE11 = X_ATTRIBUTE11)
           OR ((recinfo.ATTRIBUTE11 is null) AND (X_ATTRIBUTE11 is null)))
      AND ((recinfo.ATTRIBUTE12 = X_ATTRIBUTE12)
           OR ((recinfo.ATTRIBUTE12 is null) AND (X_ATTRIBUTE12 is null)))
      AND ((recinfo.ATTRIBUTE13 = X_ATTRIBUTE13)
           OR ((recinfo.ATTRIBUTE13 is null) AND (X_ATTRIBUTE13 is null)))
      AND ((recinfo.ATTRIBUTE14 = X_ATTRIBUTE14)
           OR ((recinfo.ATTRIBUTE14 is null) AND (X_ATTRIBUTE14 is null)))
      AND ((recinfo.ATTRIBUTE15 = X_ATTRIBUTE15)
           OR ((recinfo.ATTRIBUTE15 is null) AND (X_ATTRIBUTE15 is null)))
      AND ((recinfo.LAYOUT_TEMPLATE_ID = X_LAYOUT_TEMPLATE_ID)
           OR ((recinfo.LAYOUT_TEMPLATE_ID is null) AND (X_LAYOUT_TEMPLATE_ID is null)))
      AND ((recinfo.TAX_CALCULATION_EVENT_CODE = X_TAX_CALCULATION_EVENT)
           OR ((recinfo.TAX_CALCULATION_EVENT_CODE is null) AND (X_TAX_CALCULATION_EVENT is null)))
      AND ((recinfo.MIN_MARGIN_PERCENT = X_MIN_MARGIN_PERCENT)
           OR ((recinfo.MIN_MARGIN_PERCENT is null) AND (X_MIN_MARGIN_PERCENT is null)))
      AND ((recinfo.DEFAULT_FULFILLMENT_SET = X_DEFAULT_FULFILLMENT_SET)
           OR ((recinfo.DEFAULT_FULFILLMENT_SET is null) AND (X_DEFAULT_FULFILLMENT_SET  is null)))
      AND ((recinfo.DEFAULT_LINE_SET_CODE = X_DEFAULT_LINE_SET_CODE)
           OR ((recinfo.DEFAULT_LINE_SET_CODE is null) AND (X_DEFAULT_LINE_SET_CODE  is null)))
      AND ((recinfo.DEF_transaction_phase_code = X_DEf_transaction_phase_code)
           OR ((recinfo.DEF_transaction_phase_code is null) AND (X_DEF_transaction_phase_code  is null)))
      AND ((recinfo.quote_num_as_ord_num_flag = X_quote_num_as_ord_num_flag)
           OR ((recinfo.quote_num_as_ord_num_flag is null) AND (X_quote_num_as_ord_num_flag  is null)))
      AND ((recinfo.CONTRACT_TEMPLATE_ID = X_CONTRACT_TEMPLATE_ID)
           OR ((recinfo.CONTRACT_TEMPLATE_ID is null) AND (X_CONTRACT_TEMPLATE_ID is null)))
  ) then
    null;
  else
    fnd_message.set_name('FND', 'FORM_RECORD_CHANGED');
    app_exception.raise_exception;
  end if;

  for tlinfo in c1 loop
    if (tlinfo.BASELANG = 'Y') then
      if (    (tlinfo.NAME = X_NAME)
          AND ((tlinfo.DESCRIPTION = X_DESCRIPTION)
               OR ((tlinfo.DESCRIPTION is null) AND (X_DESCRIPTION is null)))
      ) then
        null;
      else
        fnd_message.set_name('FND', 'FORM_RECORD_CHANGED');
        app_exception.raise_exception;
      end if;
    end if;
  end loop;
  return;
end LOCK_ROW;

procedure UPDATE_ROW (
  X_TRANSACTION_TYPE_ID in NUMBER,
  X_TRANSACTION_TYPE_CODE in VARCHAR2,
  X_ORDER_CATEGORY_CODE in VARCHAR2,
  X_START_DATE_ACTIVE in DATE,
  X_END_DATE_ACTIVE in DATE,
  X_REQUEST_ID in NUMBER,
  X_CURRENCY_CODE in VARCHAR2,
  X_CONVERSION_TYPE_CODE in VARCHAR2,
  X_CUST_TRX_TYPE_ID in NUMBER,
  X_COST_OF_GOODS_SOLD_ACCOUNT in NUMBER,
  X_ENTRY_CREDIT_CHECK_RULE_ID in NUMBER,
  X_SHIPPING_CREDIT_CHECK_RULE_I in NUMBER,
  X_PICKING_CREDIT_CHECK_RULE_ID in NUMBER,
  X_PACKING_CREDIT_CHECK_RULE_ID in NUMBER,
  X_PRICE_LIST_ID in NUMBER,
  X_ENFORCE_LINE_PRICES_FLAG in VARCHAR2,
  X_WAREHOUSE_ID in NUMBER,
  X_DEMAND_CLASS_CODE in VARCHAR2,
  X_SHIPMENT_PRIORITY_CODE in VARCHAR2,
  X_SHIPPING_METHOD_CODE in VARCHAR2,
  X_FREIGHT_TERMS_CODE in VARCHAR2,
  X_FOB_POINT_CODE in VARCHAR2,
  X_SHIP_SOURCE_TYPE_CODE in VARCHAR2,
  X_AGREEMENT_TYPE_CODE in VARCHAR2,
  X_AGREEMENT_REQUIRED_FLAG in VARCHAR2,
  X_PO_REQUIRED_FLAG in VARCHAR2,
  X_INVOICING_RULE_ID in NUMBER,
  X_INVOICING_CREDIT_METHOD_CODE in VARCHAR2,
  X_ACCOUNTING_RULE_ID in NUMBER,
  X_ACCOUNTING_CREDIT_METHOD_COD in VARCHAR2,
  X_INVOICE_SOURCE_ID in VARCHAR2,
  X_NON_DELIVERY_INVOICE_SOURCE_ in VARCHAR2,
  X_DEFAULT_INBOUND_LINE_TYPE_ID in NUMBER,
  X_DEFAULT_OUTBOUND_LINE_TYPE_I in NUMBER,
  X_INSPECTION_REQUIRED_FLAG in VARCHAR2,
  X_DEPOT_REPAIR_CODE in VARCHAR2,
  X_AUTO_SCHEDULING_FLAG in VARCHAR2,
  X_SCHEDULING_LEVEL_CODE in VARCHAR2,
  X_CONTEXT in VARCHAR2,
  X_ATTRIBUTE1 in VARCHAR2,
  X_ATTRIBUTE2 in VARCHAR2,
  X_ATTRIBUTE3 in VARCHAR2,
  X_ATTRIBUTE4 in VARCHAR2,
  X_ATTRIBUTE5 in VARCHAR2,
  X_ATTRIBUTE6 in VARCHAR2,
  X_ATTRIBUTE7 in VARCHAR2,
  X_ATTRIBUTE8 in VARCHAR2,
  X_ATTRIBUTE9 in VARCHAR2,
  X_ATTRIBUTE10 in VARCHAR2,
  X_ATTRIBUTE11 in VARCHAR2,
  X_ATTRIBUTE12 in VARCHAR2,
  X_ATTRIBUTE13 in VARCHAR2,
  X_ATTRIBUTE14 in VARCHAR2,
  X_ATTRIBUTE15 in VARCHAR2,
  X_NAME in VARCHAR2,
  X_DESCRIPTION in VARCHAR2,
  X_LAYOUT_TEMPLATE_ID in number,
  X_LAST_UPDATE_DATE in DATE,
  X_LAST_UPDATED_BY in NUMBER,
  X_LAST_UPDATE_LOGIN in NUMBER,
  X_TAX_CALCULATION_EVENT IN VARCHAR2 default null,
  X_MIN_MARGIN_PERCENT IN NUMBER,
  X_DEFAULT_FULFILLMENT_SET  in VARCHAR2 default null,
  X_DEFAULT_LINE_SET_CODE    in VARCHAR2 default null,
  X_def_transaction_phase_code     in VARCHAR2 default null,
  X_quote_num_as_ord_num_flag  in VARCHAR2 default null,
  X_CONTRACT_TEMPLATE_ID in number
) is
begin
  update OE_TRANSACTION_TYPES_ALL set
    TRANSACTION_TYPE_CODE = X_TRANSACTION_TYPE_CODE,
    ORDER_CATEGORY_CODE = X_ORDER_CATEGORY_CODE,
    START_DATE_ACTIVE = X_START_DATE_ACTIVE,
    END_DATE_ACTIVE = X_END_DATE_ACTIVE,
    REQUEST_ID = X_REQUEST_ID,
    CURRENCY_CODE = X_CURRENCY_CODE,
    CONVERSION_TYPE_CODE = X_CONVERSION_TYPE_CODE,
    CUST_TRX_TYPE_ID = X_CUST_TRX_TYPE_ID,
    COST_OF_GOODS_SOLD_ACCOUNT = X_COST_OF_GOODS_SOLD_ACCOUNT,
    ENTRY_CREDIT_CHECK_RULE_ID = X_ENTRY_CREDIT_CHECK_RULE_ID,
    SHIPPING_CREDIT_CHECK_RULE_ID = X_SHIPPING_CREDIT_CHECK_RULE_I,
    PICKING_CREDIT_CHECK_RULE_ID = X_PICKING_CREDIT_CHECK_RULE_ID,
    PACKING_CREDIT_CHECK_RULE_ID = X_PACKING_CREDIT_CHECK_RULE_ID,
    PRICE_LIST_ID = X_PRICE_LIST_ID,
    ENFORCE_LINE_PRICES_FLAG = Nvl(X_ENFORCE_LINE_PRICES_FLAG, 'N'),
    WAREHOUSE_ID = X_WAREHOUSE_ID,
    DEMAND_CLASS_CODE = X_DEMAND_CLASS_CODE,
    SHIPMENT_PRIORITY_CODE = X_SHIPMENT_PRIORITY_CODE,
    SHIPPING_METHOD_CODE = X_SHIPPING_METHOD_CODE,
    FREIGHT_TERMS_CODE = X_FREIGHT_TERMS_CODE,
    FOB_POINT_CODE = X_FOB_POINT_CODE,
    SHIP_SOURCE_TYPE_CODE = X_SHIP_SOURCE_TYPE_CODE,
    AGREEMENT_TYPE_CODE = X_AGREEMENT_TYPE_CODE,
    AGREEMENT_REQUIRED_FLAG = X_AGREEMENT_REQUIRED_FLAG,
    PO_REQUIRED_FLAG = X_PO_REQUIRED_FLAG,
    INVOICING_RULE_ID = X_INVOICING_RULE_ID,
    INVOICING_CREDIT_METHOD_CODE = X_INVOICING_CREDIT_METHOD_CODE,
    ACCOUNTING_RULE_ID = X_ACCOUNTING_RULE_ID,
    ACCOUNTING_CREDIT_METHOD_CODE = X_ACCOUNTING_CREDIT_METHOD_COD,
    INVOICE_SOURCE_ID = X_INVOICE_SOURCE_ID,
    NON_DELIVERY_INVOICE_SOURCE_ID = X_NON_DELIVERY_INVOICE_SOURCE_,
    DEFAULT_INBOUND_LINE_TYPE_ID = X_DEFAULT_INBOUND_LINE_TYPE_ID,
    DEFAULT_OUTBOUND_LINE_TYPE_ID = X_DEFAULT_OUTBOUND_LINE_TYPE_I,
    INSPECTION_REQUIRED_FLAG = X_INSPECTION_REQUIRED_FLAG,
    DEPOT_REPAIR_CODE = X_DEPOT_REPAIR_CODE,
    AUTO_SCHEDULING_FLAG = X_AUTO_SCHEDULING_FLAG,
    SCHEDULING_LEVEL_CODE = X_SCHEDULING_LEVEL_CODE,
    CONTEXT = X_CONTEXT,
    ATTRIBUTE1 = X_ATTRIBUTE1,
    ATTRIBUTE2 = X_ATTRIBUTE2,
    ATTRIBUTE3 = X_ATTRIBUTE3,
    ATTRIBUTE4 = X_ATTRIBUTE4,
    ATTRIBUTE5 = X_ATTRIBUTE5,
    ATTRIBUTE6 = X_ATTRIBUTE6,
    ATTRIBUTE7 = X_ATTRIBUTE7,
    ATTRIBUTE8 = X_ATTRIBUTE8,
    ATTRIBUTE9 = X_ATTRIBUTE9,
    ATTRIBUTE10 = X_ATTRIBUTE10,
    ATTRIBUTE11 = X_ATTRIBUTE11,
    ATTRIBUTE12 = X_ATTRIBUTE12,
    ATTRIBUTE13 = X_ATTRIBUTE13,
    ATTRIBUTE14 = X_ATTRIBUTE14,
    ATTRIBUTE15 = X_ATTRIBUTE15,
    LAYOUT_TEMPLATE_ID = X_LAYOUT_TEMPLATE_ID,
    LAST_UPDATE_DATE = X_LAST_UPDATE_DATE,
    LAST_UPDATED_BY = X_LAST_UPDATED_BY,
    LAST_UPDATE_LOGIN = X_LAST_UPDATE_LOGIN,
    TAX_CALCULATION_EVENT_CODE = X_TAX_CALCULATION_EVENT,
    MIN_MARGIN_PERCENT = X_MIN_MARGIN_PERCENT,
    DEFAULT_FULFILLMENT_SET =  X_DEFAULT_FULFILLMENT_SET,
    DEFAULT_LINE_SET_CODE   = X_DEFAULT_LINE_SET_CODE,
    def_transaction_phase_code = X_def_transaction_phase_code,
    quote_num_as_ord_num_flag = X_quote_num_as_ord_num_flag,
    CONTRACT_TEMPLATE_ID = X_CONTRACT_TEMPLATE_ID
  where TRANSACTION_TYPE_ID = X_TRANSACTION_TYPE_ID;

  if (sql%notfound) then
    raise no_data_found;
  end if;

  update OE_TRANSACTION_TYPES_TL set
    NAME = X_NAME,
    DESCRIPTION = X_DESCRIPTION,
    LAST_UPDATE_DATE = X_LAST_UPDATE_DATE,
    LAST_UPDATED_BY = X_LAST_UPDATED_BY,
    LAST_UPDATE_LOGIN = X_LAST_UPDATE_LOGIN,
    SOURCE_LANG = userenv('LANG')
  where TRANSACTION_TYPE_ID = X_TRANSACTION_TYPE_ID
  and userenv('LANG') in (LANGUAGE, SOURCE_LANG);

  if (sql%notfound) then
    raise no_data_found;
  end if;
end UPDATE_ROW;

procedure DELETE_ROW (
  X_TRANSACTION_TYPE_ID in NUMBER
) is
begin
  delete from OE_TRANSACTION_TYPES_TL
  where TRANSACTION_TYPE_ID = X_TRANSACTION_TYPE_ID;

  if (sql%notfound) then
    raise no_data_found;
  end if;

  delete from OE_TRANSACTION_TYPES_ALL
  where TRANSACTION_TYPE_ID = X_TRANSACTION_TYPE_ID;

  if (sql%notfound) then
    raise no_data_found;
  end if;
end DELETE_ROW;

procedure ADD_LANGUAGE
is
begin
  delete from OE_TRANSACTION_TYPES_TL T
  where not exists
    (select NULL
    from OE_TRANSACTION_TYPES_ALL B
    where B.TRANSACTION_TYPE_ID = T.TRANSACTION_TYPE_ID
    );

  update OE_TRANSACTION_TYPES_TL T set (
      NAME,
      DESCRIPTION
    ) = (select
      B.NAME,
      B.DESCRIPTION
    from OE_TRANSACTION_TYPES_TL B
    where B.TRANSACTION_TYPE_ID = T.TRANSACTION_TYPE_ID
    and B.LANGUAGE = T.SOURCE_LANG)
  where (
      T.TRANSACTION_TYPE_ID,
      T.LANGUAGE
  ) in (select
      SUBT.TRANSACTION_TYPE_ID,
      SUBT.LANGUAGE
    from OE_TRANSACTION_TYPES_TL SUBB, OE_TRANSACTION_TYPES_TL SUBT
    where SUBB.TRANSACTION_TYPE_ID = SUBT.TRANSACTION_TYPE_ID
    and SUBB.LANGUAGE = SUBT.SOURCE_LANG
    and (SUBB.NAME <> SUBT.NAME
      or SUBB.DESCRIPTION <> SUBT.DESCRIPTION
      or (SUBB.DESCRIPTION is null and SUBT.DESCRIPTION is not null)
      or (SUBB.DESCRIPTION is not null and SUBT.DESCRIPTION is null)
  ));

  insert into OE_TRANSACTION_TYPES_TL (
    TRANSACTION_TYPE_ID,
    NAME,
    DESCRIPTION,
    CREATION_DATE,
    CREATED_BY,
    LAST_UPDATE_DATE,
    LAST_UPDATED_BY,
    LAST_UPDATE_LOGIN,
    PROGRAM_APPLICATION_ID,
    PROGRAM_ID,
    REQUEST_ID,
    LANGUAGE,
    SOURCE_LANG
  ) select
    B.TRANSACTION_TYPE_ID,
    B.NAME,
    B.DESCRIPTION,
    B.CREATION_DATE,
    B.CREATED_BY,
    B.LAST_UPDATE_DATE,
    B.LAST_UPDATED_BY,
    B.LAST_UPDATE_LOGIN,
    B.PROGRAM_APPLICATION_ID,
    B.PROGRAM_ID,
    B.REQUEST_ID,
    L.LANGUAGE_CODE,
    B.SOURCE_LANG
  from OE_TRANSACTION_TYPES_TL B, FND_LANGUAGES L
  where L.INSTALLED_FLAG in ('I', 'B')
  and B.LANGUAGE = userenv('LANG')
  and not exists
    (select NULL
    from OE_TRANSACTION_TYPES_TL T
    where T.TRANSACTION_TYPE_ID = B.TRANSACTION_TYPE_ID
    and T.LANGUAGE = L.LANGUAGE_CODE);
end ADD_LANGUAGE;

procedure Load_Row (
  X_TRANSACTION_TYPE_ID in NUMBER,
  X_TRANSACTION_TYPE_CODE in VARCHAR2,
  X_ORDER_CATEGORY_CODE in VARCHAR2,
  X_START_DATE_ACTIVE in DATE,
  X_END_DATE_ACTIVE in DATE,
  X_REQUEST_ID in NUMBER,
  X_CURRENCY_CODE in VARCHAR2,
  X_CONVERSION_TYPE_CODE in VARCHAR2,
  X_CUST_TRX_TYPE_ID in NUMBER,
  X_COST_OF_GOODS_SOLD_ACCOUNT in NUMBER,
  X_ENTRY_CREDIT_CHECK_RULE_ID in NUMBER,
  X_SHIPPING_CREDIT_CHECK_RULE_I in NUMBER,
  X_PICKING_CREDIT_CHECK_RULE_ID in NUMBER,
  X_PACKING_CREDIT_CHECK_RULE_ID in NUMBER,
  X_PRICE_LIST_ID in NUMBER,
  X_ENFORCE_LINE_PRICES_FLAG in VARCHAR2,
  X_WAREHOUSE_ID in NUMBER,
  X_DEMAND_CLASS_CODE in VARCHAR2,
  X_SHIPMENT_PRIORITY_CODE in VARCHAR2,
  X_SHIPPING_METHOD_CODE in VARCHAR2,
  X_FREIGHT_TERMS_CODE in VARCHAR2,
  X_FOB_POINT_CODE in VARCHAR2,
  X_SHIP_SOURCE_TYPE_CODE in VARCHAR2,
  X_AGREEMENT_TYPE_CODE in VARCHAR2,
  X_AGREEMENT_REQUIRED_FLAG in VARCHAR2,
  X_PO_REQUIRED_FLAG in VARCHAR2,
  X_INVOICING_RULE_ID in NUMBER,
  X_INVOICING_CREDIT_METHOD_CODE in VARCHAR2,
  X_ACCOUNTING_RULE_ID in NUMBER,
  X_ACCOUNTING_CREDIT_METHOD_COD in VARCHAR2,
  X_INVOICE_SOURCE_ID in VARCHAR2,
  X_NON_DELIVERY_INVOICE_SOURCE_ in VARCHAR2,
  X_DEFAULT_INBOUND_LINE_TYPE_ID in NUMBER,
  X_DEFAULT_OUTBOUND_LINE_TYPE_I in NUMBER,
  X_INSPECTION_REQUIRED_FLAG in VARCHAR2,
  X_DEPOT_REPAIR_CODE in VARCHAR2,
  X_AUTO_SCHEDULING_FLAG in VARCHAR2,
  X_SCHEDULING_LEVEL_CODE in VARCHAR2,
  X_CONTEXT in VARCHAR2,
  X_ATTRIBUTE1 in VARCHAR2,
  X_ATTRIBUTE2 in VARCHAR2,
  X_ATTRIBUTE3 in VARCHAR2,
  X_ATTRIBUTE4 in VARCHAR2,
  X_ATTRIBUTE5 in VARCHAR2,
  X_ATTRIBUTE6 in VARCHAR2,
  X_ATTRIBUTE7 in VARCHAR2,
  X_ATTRIBUTE8 in VARCHAR2,
  X_ATTRIBUTE9 in VARCHAR2,
  X_ATTRIBUTE10 in VARCHAR2,
  X_ATTRIBUTE11 in VARCHAR2,
  X_ATTRIBUTE12 in VARCHAR2,
  X_ATTRIBUTE13 in VARCHAR2,
  X_ATTRIBUTE14 in VARCHAR2,
  X_ATTRIBUTE15 in VARCHAR2,
  X_NAME in VARCHAR2,
  X_DESCRIPTION in VARCHAR2,
  X_LAYOUT_TEMPLATE_ID in number,
  X_CREATION_DATE in DATE,
  X_CREATED_BY in NUMBER,
  X_LAST_UPDATE_DATE in DATE,
  X_LAST_UPDATED_BY in NUMBER,
  X_LAST_UPDATE_LOGIN in NUMBER,
  X_TAX_CALCULATION_EVENT IN VARCHAR2,
  X_DEFAULT_FULFILLMENT_SET     in VARCHAR2 default null,
  X_DEFAULT_LINE_SET_CODE       in VARCHAR2 default null,
  X_def_transaction_phase_code     in VARCHAR2 default null,
  X_quote_num_as_ord_num_flag  in VARCHAR2 default null,
  X_CONTRACT_TEMPLATE_ID in number

) is
BEGIN

NULL;
END Load_Row;


Procedure Translate_Row(Transaction_type_id NUMBER,
				    Name VARCHAR2,
				    Description VARCHAR2) IS
p_Transaction_type_id number := Transaction_type_id;
p_name varchar2(80) := Name;
p_desc varchar2(2000) := Description;

begin
update oe_transaction_types_tl
set name = nvl(p_name,name),
description = nvl(p_Desc,description),
source_lang = userenv('LANG')
where Transaction_type_id = p_Transaction_type_id and
userenv('LANG') IN (source_lang,language) ;
NULL;
exception
when others then
null;
END;

Procedure Is_Manual( p_application_id IN NUMBER,
                         p_entity_short_name in VARCHAR2,
                         p_validation_entity_short_name in VARCHAR2,
                         p_validation_tmplt_short_name in VARCHAR2,
                         p_record_set_tmplt_short_name in VARCHAR2,
                         p_scope in VARCHAR2,
                         p_result OUT NOCOPY /* file.sql.39 change */ NUMBER ) IS
lseqtype varchar2(1);
l_order_type_id number := oe_header_security.g_record.order_type_id;
BEGIN
lseqtype := oe_header_util.Get_ord_seq_type(l_order_type_id);

IF lseqtype = 'M' THEN
          p_result := 1 ;
ELSE
		p_result := 0;
END IF;



EXCEPTION
	when no_data_found then
			p_result := 0;

End Is_Manual;


Procedure Val_Ord_Change( p_application_id IN NUMBER,
                         p_entity_short_name in VARCHAR2,
                         p_validation_entity_short_name in VARCHAR2,
                         p_validation_tmplt_short_name in VARCHAR2,
                         p_record_set_tmplt_short_name in VARCHAR2,
                         p_scope in VARCHAR2,
                         p_result OUT NOCOPY /* file.sql.39 change */ NUMBER ) IS
lexists varchar2(30);
l_header_id number;
BEGIN

  -- { Start fix for the bug 2375056
  If p_validation_entity_short_name = 'LINE' Then
     l_header_id := oe_line_security.g_record.header_id;
     IF OE_GLOBALS.G_HEADER_CREATED THEN
        p_result := 0;
        RETURN;
     END IF;
  Else
     l_header_id := oe_header_security.g_record.header_id;
  End If;
  -- End fix for the bug 2375056}


  Select 'EXISTS' into
  lexists
  from oe_order_lines_all
  where header_id = l_header_id and
  rownum = 1;

  p_result := 1 ;


EXCEPTION

	when no_data_found then
			p_result := 0;

End Val_Ord_Change;


Procedure Validate_lang_tbl (p_transaction_id IN number,
                             p_language IN varchar2,
                             p_name     IN varchar2,
                             p_description IN varchar2
                             ) -- bug 6321217 new procedure added
IS
l_count number:=0;
l_name varchar2(30);
BEGIN
SELECT  name INTO l_name
 FROM oe_transaction_types_tl
WHERE LANGUAGE = p_language
AND  transaction_type_id =  p_transaction_id;

 IF l_name <> p_name THEN
  SELECT Count (oh.header_id) INTO l_count
  FROM oe_order_headers_all oh
  WHERE oh.order_type_id = p_transaction_id
  AND ROWNUM=1;

    IF l_count = 0 THEN
     SELECT Count (ob.header_id) INTO l_count
      FROM oe_blanket_headers_all ob
     WHERE ob.order_type_id = p_transaction_id
     AND ROWNUM=1;
    END IF;
   IF l_count > 0 THEN
    FND_MESSAGE.SET_NAME('ONT','OE_OE_TYPE_IN_USE');
    app_exception.raise_exception;
   ELSE
     select count(transaction_type_id) into l_count
     from oe_transaction_types_tl
     where UPPER(name) = UPPER(p_name)
     and LANGUAGE = p_language
     and transaction_type_id <> p_transaction_id;

    if l_count > 0 then
     FND_MESSAGE.SET_NAME('ONT','OE_OTHER_NAME_ALREADY_IN_USE');
      app_exception.raise_exception;
    end if;
   END IF;
 END IF;
Exception
 When no_data_found  then
  null;

END Validate_lang_tbl;

end OE_TRANSACTION_TYPES_PKG;

/
