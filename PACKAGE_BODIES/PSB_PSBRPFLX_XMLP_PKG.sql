--------------------------------------------------------
--  DDL for Package Body PSB_PSBRPFLX_XMLP_PKG
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE PACKAGE BODY "APPS"."PSB_PSBRPFLX_XMLP_PKG" AS
/* $Header: PSBRPFLXB.pls 120.0 2008/01/07 10:39:39 vijranga noship $ */
  FUNCTION BEFOREREPORT RETURN BOOLEAN IS
    L_NUM_PROPOSED_YEARS NUMBER := 0;
    L_PP_CAL_COUNT NUMBER := 0;
    L_COUNTER NUMBER := 0;
    CURSOR C_PP IS
      SELECT
        BUDGET_YEAR_TYPE_ID,
        SEQUENCE_NUMBER
      FROM
        PSB_BUDGET_YEAR_TYPES
      WHERE YEAR_CATEGORY_TYPE = 'PP'
      ORDER BY
        SEQUENCE_NUMBER ASC;
    CURSOR C_CY IS
      SELECT
        NAME,
        BUDGET_YEAR_TYPE_ID
      FROM
        PSB_BUDGET_YEAR_TYPES
      WHERE YEAR_CATEGORY_TYPE = 'CY';
  BEGIN
    P_CONC_REQUEST_ID := FND_GLOBAL.CONC_REQUEST_ID;
    /*SRW.USER_EXIT('FND SRWINIT')*/NULL;
    IF P_GLOBAL_WORKSHEET_ID IS NULL THEN
      FND_MESSAGE.SET_NAME('PSB'
                          ,'PSB_ALL');
      CP_PARAM_WS_NAME := FND_MESSAGE.GET;
    ELSE
      SELECT
        NAME,
        FLEX_MAPPING_SET_ID
      INTO CP_PARAM_WS_NAME,CP_FLEX_MAPPING_SET_ID
      FROM
        PSB_WORKSHEETS
      WHERE WORKSHEET_ID = P_GLOBAL_WORKSHEET_ID;
    END IF;
    FOR c_cy_rec IN C_CY LOOP
      CP_CY_NAME := C_CY_REC.NAME;
      CP_CY_YEAR_ID := C_CY_REC.BUDGET_YEAR_TYPE_ID;
    END LOOP;
    SELECT
      count(*)
    INTO L_PP_CAL_COUNT
    FROM
      PSB_BUDGET_PERIODS
    WHERE BUDGET_CALENDAR_ID = 1
      AND BUDGET_PERIOD_TYPE = 'Y';
    SELECT
      LEAST(L_PP_CAL_COUNT
           ,GREATEST(NVL(BG.NUM_PROPOSED_YEARS
                       ,0)
                   ,NVL(WS.NUM_PROPOSED_YEARS
                      ,0)))
    INTO L_NUM_PROPOSED_YEARS
    FROM
      PSB_BUDGET_GROUPS BG,
      PSB_WORKSHEETS WS
    WHERE BG.BUDGET_GROUP_ID = WS.BUDGET_GROUP_ID
      AND WORKSHEET_ID = P_GLOBAL_WORKSHEET_ID;
    CP_MAX_SEQ_NUM := 0;
    FOR c_pp_rec IN C_PP LOOP
      L_COUNTER := L_COUNTER + 1;
      IF L_COUNTER > L_NUM_PROPOSED_YEARS THEN
        EXIT;
      ELSE
        CP_MAX_SEQ_NUM := C_PP_REC.SEQUENCE_NUMBER;
      END IF;
    END LOOP;
    FND_MESSAGE.SET_NAME('PSB'
                        ,'PSB_NO_DATA_FOUND');
    CP_NO_DATA_FOUND := FND_MESSAGE.GET;
    FND_MESSAGE.SET_NAME('PSB'
                        ,'PSB_END_OF_REPORT');
    CP_END_OF_REPORT := FND_MESSAGE.GET;
    RETURN (TRUE);
  EXCEPTION
    WHEN NO_DATA_FOUND THEN
      RETURN (FALSE);
    WHEN OTHERS THEN
      RETURN NULL;
  END BEFOREREPORT;

  FUNCTION BEFOREPFORM RETURN BOOLEAN IS
  BEGIN
    RETURN (TRUE);
  END BEFOREPFORM;

  FUNCTION AFTERPFORM RETURN BOOLEAN IS
  BEGIN
    P_CONC_REQUEST_ID := FND_GLOBAL.CONC_REQUEST_ID;
    /*SRW.USER_EXIT('FND SRWINIT')*/NULL;
    RETURN (TRUE);
  END AFTERPFORM;

  FUNCTION AFTERREPORT RETURN BOOLEAN IS
  BEGIN
    P_CONC_REQUEST_ID := FND_GLOBAL.CONC_REQUEST_ID;
    /*SRW.USER_EXIT('FND SRWINIT')*/NULL;
    /*SRW.USER_EXIT('FND SRWEXIT')*/NULL;
    RETURN (TRUE);
  END AFTERREPORT;

  FUNCTION BETWEENPAGE RETURN BOOLEAN IS
  BEGIN
    RETURN (TRUE);
  END BETWEENPAGE;

  FUNCTION CF_ACCOUNTFORMULA(IN_CCID IN NUMBER) RETURN CHAR IS
    L_CCID NUMBER;
    L_ACCOUNT VARCHAR2(800);
  BEGIN
    L_CCID := IN_CCID;
    L_ACCOUNT := PSB_FLEX_MAPPING_PVT.GET_MAPPED_ACCOUNT(1.0
                                                        ,NULL
                                                        ,NULL
                                                        ,NULL
                                                        ,IN_CCID
                                                        ,CP_CY_YEAR_ID
                                                        ,CP_FLEX_MAPPING_SET_ID);
    RETURN (L_ACCOUNT);
  END CF_ACCOUNTFORMULA;

  FUNCTION CF_OTHER_ACCOUNTFORMULA(IN_CCID IN NUMBER
                                  ,BUDGET_YEAR_TYPE_ID IN NUMBER) RETURN CHAR IS
    L_CCID NUMBER;
    L_ACCOUNT VARCHAR2(800);
  BEGIN
    L_ACCOUNT := PSB_FLEX_MAPPING_PVT.GET_MAPPED_ACCOUNT(1.0
                                                        ,NULL
                                                        ,NULL
                                                        ,NULL
                                                        ,IN_CCID
                                                        ,BUDGET_YEAR_TYPE_ID
                                                        ,CP_FLEX_MAPPING_SET_ID);
    RETURN (L_ACCOUNT);
  END CF_OTHER_ACCOUNTFORMULA;

  FUNCTION CP_NO_DATA_FOUND_P RETURN VARCHAR2 IS
  BEGIN
    RETURN CP_NO_DATA_FOUND;
  END CP_NO_DATA_FOUND_P;

  FUNCTION CP_END_OF_REPORT_P RETURN VARCHAR2 IS
  BEGIN
    RETURN CP_END_OF_REPORT;
  END CP_END_OF_REPORT_P;

  FUNCTION CP_PARAM_WS_NAME_P RETURN VARCHAR2 IS
  BEGIN
    RETURN CP_PARAM_WS_NAME;
  END CP_PARAM_WS_NAME_P;

  FUNCTION CP_PARAM_FLEX_NAME_P RETURN VARCHAR2 IS
  BEGIN
    RETURN CP_PARAM_FLEX_NAME;
  END CP_PARAM_FLEX_NAME_P;

  FUNCTION CP_WHERE_P RETURN VARCHAR2 IS
  BEGIN
    RETURN CP_WHERE;
  END CP_WHERE_P;

  FUNCTION CP_MAX_SEQ_NUM_P RETURN NUMBER IS
  BEGIN
    RETURN CP_MAX_SEQ_NUM;
  END CP_MAX_SEQ_NUM_P;

  FUNCTION CP_CY_NAME_P RETURN VARCHAR2 IS
  BEGIN
    RETURN CP_CY_NAME;
  END CP_CY_NAME_P;

  FUNCTION CP_CY_YEAR_ID_P RETURN NUMBER IS
  BEGIN
    RETURN CP_CY_YEAR_ID;
  END CP_CY_YEAR_ID_P;

  FUNCTION CP_FLEX_MAPPING_SET_ID_P RETURN NUMBER IS
  BEGIN
    RETURN CP_FLEX_MAPPING_SET_ID;
  END CP_FLEX_MAPPING_SET_ID_P;

END PSB_PSBRPFLX_XMLP_PKG;






/
