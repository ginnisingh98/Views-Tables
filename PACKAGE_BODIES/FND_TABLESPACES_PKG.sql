--------------------------------------------------------
--  DDL for Package Body FND_TABLESPACES_PKG
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE PACKAGE BODY "APPS"."FND_TABLESPACES_PKG" as
/* $Header: fndttblb.pls 115.6 2004/04/22 22:13:45 sakhtar noship $ */

G_PKG_NAME CONSTANT VARCHAR2(30):= 'FND_TABLESPACES_PKG';
G_FILE_NAME CONSTANT VARCHAR2(12) := 'fndttblb.pls';

PROCEDURE INSERT_ROW (
  X_ROWID IN OUT  NOCOPY VARCHAR2,
  P_TABLESPACE_TYPE IN VARCHAR2,
  P_TABLESPACE IN VARCHAR2,
  P_CUSTOM_FLAG IN VARCHAR2 DEFAULT NULL,
  P_CREATION_DATE IN DATE DEFAULT NULL,
  P_CREATED_BY IN NUMBER DEFAULT NULL,
  P_LAST_UPDATE_DATE IN DATE DEFAULT NULL,
  P_LAST_UPDATED_BY IN NUMBER DEFAULT NULL,
  P_LAST_UPDATE_LOGIN IN NUMBER DEFAULT NULL)
IS
  cursor C is select ROWID from FND_TABLESPACES
  where TABLESPACE_TYPE = P_TABLESPACE_TYPE ;

BEGIN
   insert into FND_TABLESPACES (
     TABLESPACE_TYPE,
     TABLESPACE,
     CUSTOM_FLAG ,
     CREATION_DATE,
     CREATED_BY,
     LAST_UPDATE_DATE,
     LAST_UPDATED_BY,
     LAST_UPDATE_LOGIN
  ) values (
     P_TABLESPACE_TYPE,
     P_TABLESPACE,
     P_CUSTOM_FLAG ,
     P_CREATION_DATE,
     P_CREATED_BY,
     P_LAST_UPDATE_DATE,
     P_LAST_UPDATED_BY,
     P_LAST_UPDATE_LOGIN
  );

  open c;
  fetch c into X_ROWID;
  if (c%notfound) then
    close c;
    raise no_data_found;
  end if;
  close c;

END INSERT_ROW;

PROCEDURE UPDATE_ROW (
  P_TABLESPACE_TYPE in VARCHAR2,
  P_TABLESPACE in VARCHAR2,
  P_CUSTOM_FLAG in VARCHAR2 DEFAULT NULL,
  P_LAST_UPDATE_DATE in DATE DEFAULT NULL,
  P_LAST_UPDATED_BY in NUMBER DEFAULT NULL,
  P_LAST_UPDATE_LOGIN in NUMBER DEFAULT NULL
  )
IS
BEGIN
  update FND_TABLESPACES set
    TABLESPACE = decode(P_TABLESPACE, null, TABLESPACE, P_TABLESPACE),
    CUSTOM_FLAG =  decode(P_CUSTOM_FLAG, null, CUSTOM_FLAG, P_CUSTOM_FLAG),
    LAST_UPDATE_DATE = decode(P_LAST_UPDATE_DATE, null, sysdate, P_LAST_UPDATE_DATE),
    LAST_UPDATED_BY = decode(P_LAST_UPDATED_BY, null, -1, P_LAST_UPDATED_BY),
    LAST_UPDATE_LOGIN = decode(P_LAST_UPDATE_LOGIN, null, -1, P_LAST_UPDATE_LOGIN)
  where TABLESPACE_TYPE = P_TABLESPACE_TYPE;

 if (sql%notfound) then
   raise no_data_found;
 end if;

END UPDATE_ROW;

PROCEDURE DELETE_ROW (
  P_TABLESPACE_TYPE in VARCHAR2)
IS
BEGIN
  delete from FND_TABLESPACES
  where TABLESPACE_TYPE = P_TABLESPACE_TYPE ;
  if (sql%notfound) then
    raise no_data_found;
  end if;
END DELETE_ROW;

END FND_TABLESPACES_PKG;

/
