--------------------------------------------------------
--  DDL for Package Body OKE_TERMS_PKG
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE PACKAGE BODY "APPS"."OKE_TERMS_PKG" as
/* $Header: OKETERMB.pls 120.1 2005/06/02 12:00:18 appldev  $ */

PROCEDURE INSERT_ROW
( X_ROWID             IN OUT NOCOPY /* file.sql.39 change */ VARCHAR2
, X_TERM_CODE         IN     VARCHAR2
, X_TERM_TYPE_CODE    IN     VARCHAR2
, X_TERM_NAME         IN     VARCHAR2
, X_DESCRIPTION       IN     VARCHAR2
, X_USER_DEFINED_FLAG IN     VARCHAR2
, X_VIEW_APPL_ID      IN     NUMBER
, X_LOOKUP_TYPE       IN     VARCHAR2
, X_CREATION_DATE     IN     DATE
, X_CREATED_BY        IN     NUMBER
, X_LAST_UPDATE_DATE  IN     DATE
, X_LAST_UPDATED_BY   IN     NUMBER
, X_LAST_UPDATE_LOGIN IN     NUMBER
) IS

  cursor C is
    select ROWID from OKE_TERMS_B
    where TERM_CODE = X_TERM_CODE;

BEGIN

  INSERT INTO OKE_TERMS_B
  ( TERM_CODE
  , TERM_TYPE_CODE
  , CREATION_DATE
  , CREATED_BY
  , LAST_UPDATE_DATE
  , LAST_UPDATED_BY
  , LAST_UPDATE_LOGIN
  , USER_DEFINED_FLAG
  , VIEW_APPLICATION_ID
  , LOOKUP_TYPE
  ) VALUES
  ( X_TERM_CODE
  , X_TERM_TYPE_CODE
  , X_CREATION_DATE
  , X_CREATED_BY
  , X_LAST_UPDATE_DATE
  , X_LAST_UPDATED_BY
  , X_LAST_UPDATE_LOGIN
  , X_USER_DEFINED_FLAG
  , X_VIEW_APPL_ID
  , X_LOOKUP_TYPE
  );

  INSERT INTO OKE_TERMS_TL
  ( TERM_CODE
  , CREATION_DATE
  , CREATED_BY
  , LAST_UPDATE_DATE
  , LAST_UPDATED_BY
  , LAST_UPDATE_LOGIN
  , TERM_NAME
  , DESCRIPTION
  , LANGUAGE
  , SOURCE_LANG
  )
  SELECT
    X_TERM_CODE
  , X_CREATION_DATE
  , X_CREATED_BY
  , X_LAST_UPDATE_DATE
  , X_LAST_UPDATED_BY
  , X_LAST_UPDATE_LOGIN
  , X_TERM_NAME
  , X_DESCRIPTION
  , L.LANGUAGE_CODE
  , USERENV('LANG')
  FROM FND_LANGUAGES L
  WHERE L.INSTALLED_FLAG IN ('I', 'B')
  AND NOT EXISTS
    (SELECT NULL
     FROM OKE_TERMS_TL T
     WHERE T.TERM_CODE = X_TERM_CODE
     AND T.LANGUAGE = L.LANGUAGE_CODE
  );

  OPEN c;
  FETCH c INTO X_ROWID;
  IF (c%notfound) THEN
    CLOSE c;
    RAISE no_data_found;
  END IF;
  CLOSE c;

END INSERT_ROW;


PROCEDURE LOCK_ROW
( X_TERM_CODE      IN VARCHAR2
, X_TERM_TYPE_CODE IN VARCHAR2
, X_TERM_NAME      IN VARCHAR2
, X_DESCRIPTION    IN VARCHAR2
, X_USER_DEFINED_FLAG IN VARCHAR2
, X_VIEW_APPL_ID      IN NUMBER
, X_LOOKUP_TYPE       IN VARCHAR2
) IS

  CURSOR c IS
    SELECT TERM_TYPE_CODE
    ,      USER_DEFINED_FLAG
    ,      VIEW_APPLICATION_ID
    ,      LOOKUP_TYPE
    FROM   OKE_TERMS_B
    WHERE  TERM_CODE = X_TERM_CODE
    FOR UPDATE OF TERM_CODE NOWAIT;
  RecInfo c%rowtype;

  CURSOR c1 IS
    SELECT TERM_NAME
    ,      DESCRIPTION
    ,      DECODE(LANGUAGE, USERENV('LANG'), 'Y', 'N') BASELANG
    FROM   OKE_TERMS_TL
    WHERE  TERM_CODE = X_TERM_CODE
    AND USERENV('LANG') IN (LANGUAGE, SOURCE_LANG)
    FOR UPDATE OF TERM_CODE NOWAIT;

BEGIN

  OPEN c;
  FETCH c INTO RecInfo;
  IF (c%notfound) THEN
    CLOSE c;
    FND_MESSAGE.SET_NAME('FND', 'FORM_RECORD_DELETED');
    APP_EXCEPTION.RAISE_EXCEPTION;
  END IF;
  CLOSE c;

  IF (    ( ( recinfo.TERM_TYPE_CODE = X_TERM_TYPE_CODE )
           OR ( ( recinfo.TERM_TYPE_CODE is null )
               AND ( X_TERM_TYPE_CODE is null ) ) )
      AND ( ( recinfo.VIEW_APPLICATION_ID = X_VIEW_APPL_ID )
           OR ( ( recinfo.VIEW_APPLICATION_ID is null )
               AND ( X_VIEW_APPL_ID is null ) ) )
      AND ( ( recinfo.LOOKUP_TYPE = X_LOOKUP_TYPE )
           OR ( ( recinfo.LOOKUP_TYPE is null )
               AND ( X_LOOKUP_TYPE is null ) ) )
      AND ( ( recinfo.USER_DEFINED_FLAG = X_USER_DEFINED_FLAG )
           OR ( ( recinfo.USER_DEFINED_FLAG is null )
               AND ( X_USER_DEFINED_FLAG is null ) ) )
  )  THEN
    NULL;
  ELSE
    FND_MESSAGE.SET_NAME('FND', 'FORM_RECORD_CHANGED');
    APP_EXCEPTION.RAISE_EXCEPTION;
  END IF;

  FOR tlinfo IN c1 LOOP
    IF (tlinfo.BASELANG = 'Y') then
      IF (    (tlinfo.TERM_NAME = X_TERM_NAME)
          AND ((tlinfo.DESCRIPTION = X_DESCRIPTION)
               OR ((tlinfo.DESCRIPTION is null) AND (X_DESCRIPTION is null)))
      ) THEN
        NULL;
      ELSE
        FND_MESSAGE.SET_NAME('FND', 'FORM_RECORD_CHANGED');
        APP_EXCEPTION.RAISE_EXCEPTION;
      END IF;
    END IF;
  END LOOP;
  RETURN;

END LOCK_ROW;


PROCEDURE UPDATE_ROW
( X_TERM_CODE         IN VARCHAR2
, X_TERM_TYPE_CODE    IN VARCHAR2
, X_TERM_NAME         IN VARCHAR2
, X_DESCRIPTION       IN VARCHAR2
, X_USER_DEFINED_FLAG IN VARCHAR2
, X_VIEW_APPL_ID      IN NUMBER
, X_LOOKUP_TYPE       IN VARCHAR2
, X_LAST_UPDATE_DATE  IN DATE
, X_LAST_UPDATED_BY   IN NUMBER
, X_LAST_UPDATE_LOGIN IN NUMBER
) IS

BEGIN

  UPDATE OKE_TERMS_B
  SET TERM_TYPE_CODE    = X_TERM_TYPE_CODE
  ,   USER_DEFINED_FLAG = X_USER_DEFINED_FLAG
  ,   VIEW_APPLICATION_ID = X_VIEW_APPL_ID
  ,   LOOKUP_TYPE       = X_LOOKUP_TYPE
  ,   LAST_UPDATE_DATE  = X_LAST_UPDATE_DATE
  ,   LAST_UPDATED_BY   = X_LAST_UPDATED_BY
  ,   LAST_UPDATE_LOGIN = X_LAST_UPDATE_LOGIN
  WHERE TERM_CODE = X_TERM_CODE;

  IF (sql%notfound) THEN
    RAISE no_data_found;
  END IF;

  UPDATE OKE_TERMS_TL
  SET TERM_NAME         = X_TERM_NAME
  ,   DESCRIPTION       = X_DESCRIPTION
  ,   LAST_UPDATE_DATE  = X_LAST_UPDATE_DATE
  ,   LAST_UPDATED_BY   = X_LAST_UPDATED_BY
  ,   LAST_UPDATE_LOGIN = X_LAST_UPDATE_LOGIN
  ,   SOURCE_LANG       = userenv('LANG')
  WHERE TERM_CODE = X_TERM_CODE
  AND USERENV('LANG') IN (LANGUAGE, SOURCE_LANG);

  IF (sql%notfound) THEN
    RAISE no_data_found;
  END IF;

END UPDATE_ROW;


PROCEDURE DELETE_ROW
( X_TERM_CODE IN VARCHAR2
) IS

BEGIN
  DELETE FROM OKE_TERMS_TL
  WHERE TERM_CODE = X_TERM_CODE;

  IF (sql%notfound) THEN
    RAISE no_data_found;
  END IF;

  DELETE FROM OKE_TERMS_B
  WHERE TERM_CODE = X_TERM_CODE;

  IF (sql%notfound) THEN
    RAISE no_data_found;
  END IF;

END DELETE_ROW;


PROCEDURE ADD_LANGUAGE
IS
BEGIN

  DELETE FROM OKE_TERMS_TL T
  WHERE NOT EXISTS (
    SELECT NULL
    FROM OKE_TERMS_B B
    WHERE B.TERM_CODE = T.TERM_CODE
  );

  UPDATE OKE_TERMS_TL T
  SET ( TERM_NAME , DESCRIPTION ) = (
    SELECT B.TERM_NAME
    ,      B.DESCRIPTION
    FROM   OKE_TERMS_TL B
    WHERE  B.TERM_CODE = T.TERM_CODE
    AND    B.LANGUAGE = T.SOURCE_LANG)
  WHERE ( T.TERM_CODE , T.LANGUAGE ) IN (
    SELECT SUBT.TERM_CODE
    ,      SUBT.LANGUAGE
    FROM   OKE_TERMS_TL SUBB
    ,      OKE_TERMS_TL SUBT
    WHERE  SUBB.TERM_CODE = SUBT.TERM_CODE
    AND    SUBB.LANGUAGE = SUBT.SOURCE_LANG
    AND    (  SUBB.TERM_NAME <> SUBT.TERM_NAME
           OR SUBB.DESCRIPTION <> SUBT.DESCRIPTION
           OR (   SUBB.DESCRIPTION IS NULL
              AND SUBT.DESCRIPTION IS NOT NULL
              )
           OR (   SUBB.DESCRIPTION IS NOT NULL
              AND SUBT.DESCRIPTION IS NULL)
           )
    );

  INSERT INTO OKE_TERMS_TL
  ( TERM_CODE
  , CREATION_DATE
  , CREATED_BY
  , LAST_UPDATE_DATE
  , LAST_UPDATED_BY
  , LAST_UPDATE_LOGIN
  , TERM_NAME
  , DESCRIPTION
  , LANGUAGE
  , SOURCE_LANG
  )
  SELECT
    B.TERM_CODE
  , B.CREATION_DATE
  , B.CREATED_BY
  , B.LAST_UPDATE_DATE
  , B.LAST_UPDATED_BY
  , B.LAST_UPDATE_LOGIN
  , B.TERM_NAME
  , B.DESCRIPTION
  , L.LANGUAGE_CODE
  , B.SOURCE_LANG
  FROM OKE_TERMS_TL B
  ,    FND_LANGUAGES L
  WHERE L.INSTALLED_FLAG IN ('I', 'B')
  AND B.LANGUAGE = USERENV('LANG')
  AND NOT EXISTS (
    SELECT NULL
    FROM   OKE_TERMS_TL T
    WHERE  T.TERM_CODE = B.TERM_CODE
    AND    T.LANGUAGE = L.LANGUAGE_CODE
  );

END ADD_LANGUAGE;

PROCEDURE LOAD_ROW
( X_TERM_CODE         IN     VARCHAR2
, X_OWNER             IN     VARCHAR2
, X_LAST_UPDATE_DATE  IN     DATE
, X_CUSTOM_MODE       IN     VARCHAR2
, X_TERM_TYPE_CODE    IN     VARCHAR2
, X_TERM_NAME         IN     VARCHAR2
, X_DESCRIPTION       IN     VARCHAR2
, X_USER_DEFINED_FLAG IN     VARCHAR2
, X_VIEW_APPL_ID      IN     NUMBER
, X_LOOKUP_TYPE       IN     VARCHAR2
) IS

  Row_ID VARCHAR2(30);

  f_luby    NUMBER;  -- entity owner in file

BEGIN
  --
  -- Translate owner and last_update_date
  --
  f_luby := FND_LOAD_UTIL.Owner_ID(X_OWNER);

  --
  -- Load the record
  --
  UPDATE OKE_TERMS_B
  SET    TERM_TYPE_CODE      = NVL(X_TERM_TYPE_CODE , TERM_TYPE_CODE)
  ,      USER_DEFINED_FLAG   = X_USER_DEFINED_FLAG
  ,      VIEW_APPLICATION_ID = X_VIEW_APPL_ID
  ,      LOOKUP_TYPE         = X_LOOKUP_TYPE
  ,      LAST_UPDATE_DATE    = SYSDATE
  ,      LAST_UPDATED_BY     = f_luby
  WHERE  TERM_CODE = X_TERM_CODE;

  IF ( sql%notfound ) THEN

    INSERT_ROW
    ( Row_ID
    , X_TERM_CODE
    , X_TERM_TYPE_CODE
    , X_TERM_NAME
    , X_DESCRIPTION
    , X_USER_DEFINED_FLAG
    , X_VIEW_APPL_ID
    , X_LOOKUP_TYPE
    , X_LAST_UPDATE_DATE
    , f_luby
    , X_LAST_UPDATE_DATE
    , f_luby
    , 0
    );

  END IF;

  UPDATE OKE_TERMS_TL
  SET    TERM_NAME        = X_TERM_NAME
  ,      DESCRIPTION      = X_DESCRIPTION
  ,      LAST_UPDATE_DATE = X_LAST_UPDATE_DATE
  ,      LAST_UPDATED_BY  = f_luby
  ,      SOURCE_LANG      = USERENV('LANG')
  WHERE  TERM_CODE = X_TERM_CODE
  AND    USERENV('LANG') IN ( LANGUAGE , SOURCE_LANG );

  IF ( sql%notfound ) THEN

    INSERT INTO OKE_TERMS_TL
    ( TERM_CODE
    , CREATION_DATE
    , CREATED_BY
    , LAST_UPDATE_DATE
    , LAST_UPDATED_BY
    , LAST_UPDATE_LOGIN
    , TERM_NAME
    , DESCRIPTION
    , LANGUAGE
    , SOURCE_LANG
    )
    SELECT
      X_TERM_CODE
    , X_LAST_UPDATE_DATE
    , f_luby
    , X_LAST_UPDATE_DATE
    , f_luby
    , 0
    , X_TERM_NAME
    , X_DESCRIPTION
    , L.LANGUAGE_CODE
    , USERENV('LANG')
    FROM FND_LANGUAGES L
    WHERE L.INSTALLED_FLAG IN ('I', 'B')
    AND NOT EXISTS
      (SELECT NULL
       FROM OKE_TERMS_TL T
       WHERE T.TERM_CODE = X_TERM_CODE
       AND T.LANGUAGE = L.LANGUAGE_CODE
    );

  END IF;

END LOAD_ROW;


PROCEDURE TRANSLATE_ROW
( X_TERM_CODE         IN     VARCHAR2
, X_OWNER             IN     VARCHAR2
, X_LAST_UPDATE_DATE  IN     DATE
, X_TERM_NAME         IN     VARCHAR2
, X_DESCRIPTION       IN     VARCHAR2
) IS

  f_luby   NUMBER;

BEGIN
  --
  -- Translate owner and last_update_date
  --
  f_luby := FND_LOAD_UTIL.Owner_ID(X_OWNER);

  UPDATE OKE_TERMS_TL
  SET    TERM_NAME        = X_TERM_NAME
  ,      DESCRIPTION      = X_DESCRIPTION
  ,      LAST_UPDATE_DATE = X_LAST_UPDATE_DATE
  ,      LAST_UPDATED_BY  = f_luby
  ,      SOURCE_LANG      = USERENV('LANG')
  WHERE  TERM_CODE = X_TERM_CODE
  AND    USERENV('LANG') IN ( LANGUAGE , SOURCE_LANG );

END TRANSLATE_ROW;

END OKE_TERMS_PKG;

/
