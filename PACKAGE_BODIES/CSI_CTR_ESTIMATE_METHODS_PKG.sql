--------------------------------------------------------
--  DDL for Package Body CSI_CTR_ESTIMATE_METHODS_PKG
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE PACKAGE BODY "APPS"."CSI_CTR_ESTIMATE_METHODS_PKG" as
/* $Header: csitcemb.pls 120.2 2008/04/04 01:26:23 devijay ship $*/

G_PKG_NAME CONSTANT VARCHAR2(30)  := 'CSI_CTR_ESTIMATE_METHODS_PKG';
G_FILE_NAME CONSTANT VARCHAR2(12) := 'csitcemb.pls';

PROCEDURE Insert_Row(
	px_ESTIMATION_ID                   IN OUT NOCOPY NUMBER
 	,p_ESTIMATION_TYPE                 VARCHAR2
 	,p_FIXED_VALUE                     NUMBER
 	,p_USAGE_MARKUP                    NUMBER
 	,p_DEFAULT_VALUE                   NUMBER
 	,p_ESTIMATION_AVG_TYPE             VARCHAR2
 	,p_START_DATE_ACTIVE               DATE
 	,p_END_DATE_ACTIVE                 DATE
 	,p_LAST_UPDATE_DATE                DATE
 	,p_LAST_UPDATED_BY                 NUMBER
 	,p_CREATION_DATE                   DATE
 	,p_CREATED_BY                      NUMBER
 	,p_LAST_UPDATE_LOGIN               NUMBER
 	,p_ATTRIBUTE1                      VARCHAR2
 	,p_ATTRIBUTE2                      VARCHAR2
 	,p_ATTRIBUTE3                      VARCHAR2
 	,p_ATTRIBUTE4                      VARCHAR2
 	,p_ATTRIBUTE5                      VARCHAR2
 	,p_ATTRIBUTE6                      VARCHAR2
 	,p_ATTRIBUTE7                      VARCHAR2
 	,p_ATTRIBUTE8                      VARCHAR2
 	,p_ATTRIBUTE9                      VARCHAR2
 	,p_ATTRIBUTE10                     VARCHAR2
 	,p_ATTRIBUTE11                     VARCHAR2
 	,p_ATTRIBUTE12                     VARCHAR2
 	,p_ATTRIBUTE13                     VARCHAR2
 	,p_ATTRIBUTE14                     VARCHAR2
 	,p_ATTRIBUTE15                     VARCHAR2
 	,p_ATTRIBUTE_CATEGORY              VARCHAR2
 	,p_OBJECT_VERSION_NUMBER           NUMBER
 	,p_MIGRATED_FLAG                   VARCHAR2
        ,p_NAME	                        VARCHAR2
        ,p_DESCRIPTION                  VARCHAR2
        ) IS

	CURSOR C1 IS
	SELECT CSI_CTR_ESTIMATE_METHOD_B_S.nextval
	FROM dual;
BEGIN
	IF (px_ESTIMATION_ID IS NULL) OR (px_ESTIMATION_ID = FND_API.G_MISS_NUM) THEN
		OPEN C1;
		FETCH C1 INTO px_ESTIMATION_ID;
		CLOSE C1;
	END IF;

	INSERT INTO CSI_CTR_ESTIMATION_METHODS_B(
		ESTIMATION_ID
 		,ESTIMATION_TYPE
 		,FIXED_VALUE
 		,USAGE_MARKUP
 		,DEFAULT_VALUE
 		,ESTIMATION_AVG_TYPE
 		,START_DATE_ACTIVE
 		,END_DATE_ACTIVE
 		,LAST_UPDATE_DATE
 		,LAST_UPDATED_BY
 		,CREATION_DATE
 		,CREATED_BY
 		,LAST_UPDATE_LOGIN
 		,ATTRIBUTE1
 		,ATTRIBUTE2
 		,ATTRIBUTE3
 		,ATTRIBUTE4
 		,ATTRIBUTE5
 		,ATTRIBUTE6
 		,ATTRIBUTE7
 		,ATTRIBUTE8
 		,ATTRIBUTE9
 		,ATTRIBUTE10
 		,ATTRIBUTE11
 		,ATTRIBUTE12
 		,ATTRIBUTE13
 		,ATTRIBUTE14
 		,ATTRIBUTE15
 		,ATTRIBUTE_CATEGORY
 		,OBJECT_VERSION_NUMBER
 		,MIGRATED_FLAG
	)
	VALUES(
		px_ESTIMATION_ID
 		,decode(p_ESTIMATION_TYPE, FND_API.G_MISS_CHAR, NULL, p_ESTIMATION_TYPE)
 		,decode(p_FIXED_VALUE, FND_API.G_MISS_NUM, NULL, p_FIXED_VALUE)
 		,decode(p_USAGE_MARKUP, FND_API.G_MISS_NUM, NULL, p_USAGE_MARKUP)
 		,decode(p_DEFAULT_VALUE, FND_API.G_MISS_NUM, NULL, p_DEFAULT_VALUE)
 		,decode(p_ESTIMATION_AVG_TYPE, FND_API.G_MISS_CHAR, NULL, p_ESTIMATION_AVG_TYPE)
 		,decode(p_START_DATE_ACTIVE, FND_API.G_MISS_DATE, TO_DATE(NULL), p_START_DATE_ACTIVE)
 		,decode(p_END_DATE_ACTIVE, FND_API.G_MISS_DATE, TO_DATE(NULL), p_END_DATE_ACTIVE)
 		,decode(p_LAST_UPDATE_DATE, FND_API.G_MISS_DATE, TO_DATE(NULL), p_LAST_UPDATE_DATE)
 		,decode(p_LAST_UPDATED_BY, FND_API.G_MISS_NUM, NULL, p_LAST_UPDATED_BY)
 		,decode(p_CREATION_DATE, FND_API.G_MISS_DATE, TO_DATE(NULL), p_CREATION_DATE)
 		,decode(p_CREATED_BY, FND_API.G_MISS_NUM, NULL, p_CREATED_BY)
 		,decode(p_LAST_UPDATE_LOGIN, FND_API.G_MISS_NUM, NULL, p_LAST_UPDATE_LOGIN)
 		,decode(p_ATTRIBUTE1, FND_API.G_MISS_CHAR, NULL, p_ATTRIBUTE1)
 		,decode(p_ATTRIBUTE2, FND_API.G_MISS_CHAR, NULL, p_ATTRIBUTE2)
 		,decode(p_ATTRIBUTE3, FND_API.G_MISS_CHAR, NULL, p_ATTRIBUTE3)
 		,decode(p_ATTRIBUTE4, FND_API.G_MISS_CHAR, NULL, p_ATTRIBUTE4)
 		,decode(p_ATTRIBUTE5, FND_API.G_MISS_CHAR, NULL, p_ATTRIBUTE5)
 		,decode(p_ATTRIBUTE6, FND_API.G_MISS_CHAR, NULL, p_ATTRIBUTE6)
 		,decode(p_ATTRIBUTE7, FND_API.G_MISS_CHAR, NULL, p_ATTRIBUTE7)
 		,decode(p_ATTRIBUTE8, FND_API.G_MISS_CHAR, NULL, p_ATTRIBUTE8)
 		,decode(p_ATTRIBUTE9, FND_API.G_MISS_CHAR, NULL, p_ATTRIBUTE9)
 		,decode(p_ATTRIBUTE10, FND_API.G_MISS_CHAR, NULL, p_ATTRIBUTE10)
 		,decode(p_ATTRIBUTE11, FND_API.G_MISS_CHAR, NULL, p_ATTRIBUTE11)
 		,decode(p_ATTRIBUTE12, FND_API.G_MISS_CHAR, NULL, p_ATTRIBUTE12)
 		,decode(p_ATTRIBUTE13, FND_API.G_MISS_CHAR, NULL, p_ATTRIBUTE13)
 		,decode(p_ATTRIBUTE14, FND_API.G_MISS_CHAR, NULL, p_ATTRIBUTE14)
 		,decode(p_ATTRIBUTE15, FND_API.G_MISS_CHAR, NULL, p_ATTRIBUTE15)
 		,decode(p_ATTRIBUTE_CATEGORY, FND_API.G_MISS_CHAR, NULL, p_ATTRIBUTE_CATEGORY)
 		,decode(p_OBJECT_VERSION_NUMBER, FND_API.G_MISS_NUM, NULL, p_OBJECT_VERSION_NUMBER)
 		,decode(p_MIGRATED_FLAG, FND_API.G_MISS_CHAR, NULL, p_MIGRATED_FLAG)
	);

	INSERT INTO CSI_CTR_ESTIMATION_METHODS_TL(
		ESTIMATION_ID
		,NAME
		,DESCRIPTION
		,LANGUAGE
		,SOURCE_LANG
		,CREATED_BY
		,CREATION_DATE
		,LAST_UPDATED_BY
		,LAST_UPDATE_DATE
		,LAST_UPDATE_LOGIN
		,MIGRATED_FLAG
	)
		SELECT
		px_ESTIMATION_ID
		,decode(p_NAME, FND_API.G_MISS_CHAR, NULL, p_NAME)
		,decode(p_DESCRIPTION, FND_API.G_MISS_CHAR, NULL, p_DESCRIPTION)
        ,L.language_code
        ,userenv('LANG')
 		,decode(p_CREATED_BY, FND_API.G_MISS_NUM, NULL, p_CREATED_BY)
 		,decode(p_CREATION_DATE, FND_API.G_MISS_DATE, TO_DATE(NULL), p_CREATION_DATE)
 		,decode(p_LAST_UPDATED_BY, FND_API.G_MISS_NUM, NULL, p_LAST_UPDATED_BY)
 		,decode(p_LAST_UPDATE_DATE, FND_API.G_MISS_DATE, TO_DATE(NULL), p_LAST_UPDATE_DATE)
 		,decode(p_LAST_UPDATE_LOGIN, FND_API.G_MISS_NUM, NULL, p_LAST_UPDATE_LOGIN)
		,decode(p_MIGRATED_FLAG, FND_API.G_MISS_CHAR, NULL, p_MIGRATED_FLAG)
		FROM   fnd_languages L
		WHERE  L.installed_flag IN ('I','B')
		AND NOT EXISTS (SELECT 'x'
						FROM   CSI_CTR_ESTIMATION_METHODS_TL cct
						WHERE  cct.ESTIMATION_ID = px_ESTIMATION_ID
						AND    cct.LANGUAGE = L.LANGUAGE_CODE);
END	Insert_Row;

PROCEDURE Update_Row(
	p_ESTIMATION_ID                    NUMBER
 	,p_ESTIMATION_TYPE                 VARCHAR2
 	,p_FIXED_VALUE                     NUMBER
 	,p_USAGE_MARKUP                    NUMBER
 	,p_DEFAULT_VALUE                   NUMBER
 	,p_ESTIMATION_AVG_TYPE             VARCHAR2
 	,p_START_DATE_ACTIVE               DATE
 	,p_END_DATE_ACTIVE                 DATE
 	,p_LAST_UPDATE_DATE                DATE
 	,p_LAST_UPDATED_BY                 NUMBER
 	,p_CREATION_DATE                   DATE
 	,p_CREATED_BY                      NUMBER
 	,p_LAST_UPDATE_LOGIN               NUMBER
 	,p_ATTRIBUTE1                      VARCHAR2
 	,p_ATTRIBUTE2                      VARCHAR2
 	,p_ATTRIBUTE3                      VARCHAR2
 	,p_ATTRIBUTE4                      VARCHAR2
 	,p_ATTRIBUTE5                      VARCHAR2
 	,p_ATTRIBUTE6                      VARCHAR2
 	,p_ATTRIBUTE7                      VARCHAR2
 	,p_ATTRIBUTE8                      VARCHAR2
 	,p_ATTRIBUTE9                      VARCHAR2
 	,p_ATTRIBUTE10                     VARCHAR2
 	,p_ATTRIBUTE11                     VARCHAR2
 	,p_ATTRIBUTE12                     VARCHAR2
 	,p_ATTRIBUTE13                     VARCHAR2
 	,p_ATTRIBUTE14                     VARCHAR2
 	,p_ATTRIBUTE15                     VARCHAR2
 	,p_ATTRIBUTE_CATEGORY              VARCHAR2
 	,p_OBJECT_VERSION_NUMBER           NUMBER
 	,p_MIGRATED_FLAG                   VARCHAR2
        ,p_NAME	                        VARCHAR2
        ,p_DESCRIPTION                  VARCHAR2
        ) IS
BEGIN
	UPDATE CSI_CTR_ESTIMATION_METHODS_B
	SET
 		ESTIMATION_TYPE = decode(p_ESTIMATION_TYPE, NULL, ESTIMATION_TYPE, FND_API.G_MISS_CHAR, NULL, p_ESTIMATION_TYPE)
 		,FIXED_VALUE = decode(p_FIXED_VALUE, NULL, FIXED_VALUE, FND_API.G_MISS_NUM, NULL, p_FIXED_VALUE)
 		,USAGE_MARKUP = decode(p_USAGE_MARKUP, NULL, USAGE_MARKUP, FND_API.G_MISS_NUM, NULL, p_USAGE_MARKUP)
 		,DEFAULT_VALUE = decode(p_DEFAULT_VALUE, NULL, DEFAULT_VALUE, FND_API.G_MISS_NUM, NULL, p_DEFAULT_VALUE)
 		,ESTIMATION_AVG_TYPE = decode(p_ESTIMATION_AVG_TYPE, NULL, ESTIMATION_AVG_TYPE, FND_API.G_MISS_CHAR, NULL, p_ESTIMATION_AVG_TYPE)
 		,START_DATE_ACTIVE = decode(p_START_DATE_ACTIVE, NULL, START_DATE_ACTIVE, FND_API.G_MISS_DATE, NULL, p_START_DATE_ACTIVE)
 		,END_DATE_ACTIVE = decode(p_END_DATE_ACTIVE, NULL, END_DATE_ACTIVE, FND_API.G_MISS_DATE, NULL, p_END_DATE_ACTIVE)
 		,LAST_UPDATE_DATE = decode(p_LAST_UPDATE_DATE, NULL, LAST_UPDATE_DATE, FND_API.G_MISS_DATE, NULL, p_LAST_UPDATE_DATE)
 		,LAST_UPDATED_BY = decode(p_LAST_UPDATED_BY, NULL, LAST_UPDATED_BY, FND_API.G_MISS_NUM, NULL, p_LAST_UPDATED_BY)
 		,CREATION_DATE = decode(p_CREATION_DATE, NULL, CREATION_DATE, FND_API.G_MISS_DATE, CREATION_DATE, p_CREATION_DATE)
	    ,CREATED_BY = decode(p_CREATED_BY, NULL, CREATED_BY, FND_API.G_MISS_NUM, CREATED_BY, p_CREATED_BY)
 		,LAST_UPDATE_LOGIN = decode(p_LAST_UPDATE_LOGIN, NULL, LAST_UPDATE_LOGIN, FND_API.G_MISS_NUM, NULL, p_LAST_UPDATE_LOGIN)
 		,ATTRIBUTE1 = decode(p_ATTRIBUTE1, NULL, ATTRIBUTE1, FND_API.G_MISS_CHAR, NULL, p_ATTRIBUTE1)
 		,ATTRIBUTE2 = decode(p_ATTRIBUTE2, NULL, ATTRIBUTE2, FND_API.G_MISS_CHAR, NULL, p_ATTRIBUTE2)
 		,ATTRIBUTE3 = decode(p_ATTRIBUTE3, NULL, ATTRIBUTE3, FND_API.G_MISS_CHAR, NULL, p_ATTRIBUTE3)
 		,ATTRIBUTE4 = decode(p_ATTRIBUTE4, NULL, ATTRIBUTE4, FND_API.G_MISS_CHAR, NULL, p_ATTRIBUTE4)
 		,ATTRIBUTE5 = decode(p_ATTRIBUTE5, NULL, ATTRIBUTE5, FND_API.G_MISS_CHAR, NULL, p_ATTRIBUTE5)
 		,ATTRIBUTE6 = decode(p_ATTRIBUTE6, NULL, ATTRIBUTE6, FND_API.G_MISS_CHAR, NULL, p_ATTRIBUTE6)
 		,ATTRIBUTE7 = decode(p_ATTRIBUTE7, NULL, ATTRIBUTE7, FND_API.G_MISS_CHAR, NULL, p_ATTRIBUTE7)
 		,ATTRIBUTE8 = decode(p_ATTRIBUTE8, NULL, ATTRIBUTE8, FND_API.G_MISS_CHAR, NULL, p_ATTRIBUTE8)
 		,ATTRIBUTE9 = decode(p_ATTRIBUTE9, NULL, ATTRIBUTE9, FND_API.G_MISS_CHAR, NULL, p_ATTRIBUTE9)
 		,ATTRIBUTE10 = decode(p_ATTRIBUTE10, NULL, ATTRIBUTE10, FND_API.G_MISS_CHAR, NULL, p_ATTRIBUTE10)
 		,ATTRIBUTE11 = decode(p_ATTRIBUTE11, NULL, ATTRIBUTE11, FND_API.G_MISS_CHAR, NULL, p_ATTRIBUTE11)
 		,ATTRIBUTE12 = decode(p_ATTRIBUTE12, NULL, ATTRIBUTE12, FND_API.G_MISS_CHAR, NULL, p_ATTRIBUTE12)
 		,ATTRIBUTE13 = decode(p_ATTRIBUTE13, NULL, ATTRIBUTE13, FND_API.G_MISS_CHAR, NULL, p_ATTRIBUTE13)
 		,ATTRIBUTE14 = decode(p_ATTRIBUTE14, NULL, ATTRIBUTE14, FND_API.G_MISS_CHAR, NULL, p_ATTRIBUTE14)
 		,ATTRIBUTE15 = decode(p_ATTRIBUTE15, NULL, ATTRIBUTE15, FND_API.G_MISS_CHAR, NULL, p_ATTRIBUTE15)
 		,ATTRIBUTE_CATEGORY = decode(p_ATTRIBUTE_CATEGORY, NULL, ATTRIBUTE_CATEGORY, FND_API.G_MISS_CHAR, NULL, p_ATTRIBUTE_CATEGORY)
 		,OBJECT_VERSION_NUMBER = decode(p_OBJECT_VERSION_NUMBER, NULL, OBJECT_VERSION_NUMBER, FND_API.G_MISS_NUM, NULL, p_OBJECT_VERSION_NUMBER)
 		,MIGRATED_FLAG = decode(p_MIGRATED_FLAG, NULL, MIGRATED_FLAG, FND_API.G_MISS_CHAR, NULL, p_MIGRATED_FLAG)
	WHERE ESTIMATION_ID = p_ESTIMATION_ID;

	UPDATE CSI_CTR_ESTIMATION_METHODS_TL
	SET
		NAME               = decode (p_NAME, NULL, NAME, FND_API.G_MISS_CHAR, NULL, p_NAME)
		,DESCRIPTION       = decode (p_DESCRIPTION, NULL, DESCRIPTION, FND_API.G_MISS_CHAR, NULL, p_DESCRIPTION)
		,SOURCE_LANG	   = userenv('LANG')
		,CREATED_BY        = decode( p_created_by, NULL,created_by, fnd_api.g_miss_num,created_by, p_created_by)
		,CREATION_DATE     = decode( p_creation_date, NULL,creation_date, fnd_api.g_miss_date, creation_date, p_creation_date)
		,LAST_UPDATED_BY   = decode (p_LAST_UPDATED_BY, NULL, LAST_UPDATED_BY, FND_API.G_MISS_NUM, NULL, p_LAST_UPDATED_BY)
		,LAST_UPDATE_DATE  = decode (p_LAST_UPDATE_DATE, NULL, LAST_UPDATE_DATE, FND_API.G_MISS_DATE, NULL, p_LAST_UPDATE_DATE)
		,LAST_UPDATE_LOGIN = decode (p_LAST_UPDATE_LOGIN, NULL, LAST_UPDATE_LOGIN, FND_API.G_MISS_NUM, NULL, p_LAST_UPDATE_LOGIN)
		,MIGRATED_FLAG     = decode (p_MIGRATED_FLAG, NULL, MIGRATED_FLAG, FND_API.G_MISS_CHAR, NULL, p_MIGRATED_FLAG)
	WHERE ESTIMATION_ID = p_ESTIMATION_ID
	AND   userenv('LANG') IN (LANGUAGE,SOURCE_LANG);

    IF (SQL%NOTFOUND) THEN
        RAISE NO_DATA_FOUND;
    END IF;
END	Update_Row;

PROCEDURE Lock_Row(
	p_ESTIMATION_ID                    NUMBER
 	,p_ESTIMATION_TYPE                 VARCHAR2
 	,p_FIXED_VALUE                     NUMBER
 	,p_USAGE_MARKUP                    NUMBER
 	,p_DEFAULT_VALUE                   NUMBER
 	,p_ESTIMATION_AVG_TYPE             VARCHAR2
 	,p_START_DATE_ACTIVE               DATE
 	,p_END_DATE_ACTIVE                 DATE
 	,p_LAST_UPDATE_DATE                DATE
 	,p_LAST_UPDATED_BY                 NUMBER
 	,p_CREATION_DATE                   DATE
 	,p_CREATED_BY                      NUMBER
 	,p_LAST_UPDATE_LOGIN               NUMBER
 	,p_ATTRIBUTE1                      VARCHAR2
 	,p_ATTRIBUTE2                      VARCHAR2
 	,p_ATTRIBUTE3                      VARCHAR2
 	,p_ATTRIBUTE4                      VARCHAR2
 	,p_ATTRIBUTE5                      VARCHAR2
 	,p_ATTRIBUTE6                      VARCHAR2
 	,p_ATTRIBUTE7                      VARCHAR2
 	,p_ATTRIBUTE8                      VARCHAR2
 	,p_ATTRIBUTE9                      VARCHAR2
 	,p_ATTRIBUTE10                     VARCHAR2
 	,p_ATTRIBUTE11                     VARCHAR2
 	,p_ATTRIBUTE12                     VARCHAR2
 	,p_ATTRIBUTE13                     VARCHAR2
 	,p_ATTRIBUTE14                     VARCHAR2
 	,p_ATTRIBUTE15                     VARCHAR2
 	,p_ATTRIBUTE_CATEGORY              VARCHAR2
 	,p_OBJECT_VERSION_NUMBER           NUMBER
 	,p_MIGRATED_FLAG                   VARCHAR2
        ,p_NAME	                        VARCHAR2
        ,p_DESCRIPTION                  VARCHAR2
        ) IS

	CURSOR C1 IS
	SELECT *
	FROM CSI_CTR_ESTIMATION_METHODS_B
	WHERE ESTIMATION_ID = p_ESTIMATION_ID
	FOR UPDATE of ESTIMATION_ID NOWAIT;
	Recinfo C1%ROWTYPE;

	CURSOR C2 IS
	SELECT name,
		   description,
		   decode(language, userenv('LANG'), 'Y', 'N') baselang
	FROM   CSI_CTR_ESTIMATION_METHODS_TL
	WHERE  ESTIMATION_ID = p_ESTIMATION_ID
	AND    userenv('LANG') IN (LANGUAGE,SOURCE_LANG)
	FOR UPDATE of ESTIMATION_ID NOWAIT;
BEGIN
	OPEN C1;
	FETCH C1 INTO Recinfo;
	IF (C1%NOTFOUND) THEN
		CLOSE C1;
		FND_MESSAGE.SET_NAME('FND', 'FORM_RECORD_DELETED');
		APP_EXCEPTION.RAISE_EXCEPTION;
	END IF;
	CLOSE C1;

	IF (Recinfo.OBJECT_VERSION_NUMBER = p_OBJECT_VERSION_NUMBER) THEN
		return;
	ELSE
		FND_MESSAGE.SET_NAME('FND', 'FORM_RECORD_CHANGED');
		APP_EXCEPTION.RAISE_EXCEPTION;
	END IF;

	FOR tlinfo IN C2 LOOP
		IF (tlinfo.baselang = 'Y') THEN
			IF ((tlinfo.name = p_name)
			    AND ((tlinfo.description = p_description)
				     OR ((tlinfo.description IS NULL) AND (p_description IS NULL))))
			THEN
				null;
			ELSE
				FND_MESSAGE.SET_NAME('FND', 'FORM_RECORD_CHANGED');
				APP_EXCEPTION.RAISE_EXCEPTION;
			END IF;
		END IF;
	END LOOP;
	return;
END Lock_Row;

PROCEDURE Delete_Row(
	p_ESTIMATION_ID                    NUMBER
       ) IS
BEGIN
	DELETE FROM CSI_CTR_ESTIMATION_METHODS_B
	WHERE ESTIMATION_ID = p_ESTIMATION_ID;
	IF (SQL%NOTFOUND) then
		RAISE NO_DATA_FOUND;
	END IF;
END	Delete_Row;

PROCEDURE add_language IS
BEGIN
	DELETE FROM CSI_CTR_ESTIMATION_METHODS_TL t
	WHERE NOT EXISTS (SELECT NULL
					  FROM   CSI_CTR_ESTIMATION_METHODS_B b
					  WHERE  b.ESTIMATION_ID = t.ESTIMATION_ID);

	UPDATE CSI_CTR_ESTIMATION_METHODS_TL t
	SET (name, description) = (SELECT b.name,
									  b.description
							   FROM  CSI_CTR_ESTIMATION_METHODS_TL b
							   WHERE b.ESTIMATION_ID = t.ESTIMATION_ID
							   AND   b.language = t.source_lang)
	WHERE (t.ESTIMATION_ID, t.language)
	IN (SELECT subt.ESTIMATION_ID,
			   subt.LANGUAGE
		FROM CSI_CTR_ESTIMATION_METHODS_TL subb, CSI_CTR_ESTIMATION_METHODS_TL subt
		WHERE subb.ESTIMATION_ID = subt.ESTIMATION_ID
		AND   subb.language = subt.source_lang
		AND   (subb.name <> subt.name
			   OR subb.description <> subt.description
			   OR (subb.description IS NULL AND subt.description IS NOT NULL)
			   OR (subb.description IS NOT NULL AND subt.description IS NULL)
			   )
	);

	INSERT INTO CSI_CTR_ESTIMATION_METHODS_TL(
		ESTIMATION_ID
		,NAME
		,DESCRIPTION
		,LANGUAGE
		,SOURCE_LANG
		,CREATED_BY
		,CREATION_DATE
		,LAST_UPDATED_BY
		,LAST_UPDATE_DATE
		,LAST_UPDATE_LOGIN
	)
		SELECT b.ESTIMATION_ID,
		       b.NAME,
			   b.DESCRIPTION,
			   l.LANGUAGE_CODE,
			   b.SOURCE_LANG,
			   b.CREATED_BY,
			   b.CREATION_DATE,
			   b.LAST_UPDATED_BY,
			   b.LAST_UPDATE_DATE,
			   b.LAST_UPDATE_LOGIN
		FROM CSI_CTR_ESTIMATION_METHODS_TL b, FND_LANGUAGES l
		WHERE l.installed_flag IN ('I', 'B')
		AND   b.language = userenv('LANG')
		AND   NOT EXISTS (SELECT NULL
		                  FROM   CSI_CTR_ESTIMATION_METHODS_TL t
						  WHERE  t.ESTIMATION_ID = b.ESTIMATION_ID
						  AND    t.language = l.language_code);
END add_language;

PROCEDURE translate_row (
	p_ESTIMATION_ID                    NUMBER
          ,p_name              VARCHAR2
          ,p_description       VARCHAR2
          ,p_owner              VARCHAR2
			) IS
BEGIN
	UPDATE CSI_CTR_ESTIMATION_METHODS_TL
	SET	name              = p_name,
		description       = p_description,
		last_update_date  = sysdate,
		last_updated_by   = decode(p_owner, 'SEED', 1, 0),
		last_update_login = 0,
		source_lang       = userenv('LANG')
	WHERE ESTIMATION_ID = p_ESTIMATION_ID
	AND   userenv('LANG') IN (language, source_lang);
END	translate_row;

End CSI_CTR_ESTIMATE_METHODS_PKG;

/
