--------------------------------------------------------
--  DDL for Package Body PSB_PSBRPSPU_XMLP_PKG
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE PACKAGE BODY "APPS"."PSB_PSBRPSPU_XMLP_PKG" AS
/* $Header: PSBRPSPUB.pls 120.0 2008/01/07 10:48:38 vijranga noship $ */
  FUNCTION CF_SERVICE_PACKAGE_IDFORMULA(SP_SERVICE_PACKAGE_ID IN NUMBER) RETURN NUMBER IS
  BEGIN
    CP_SERVICE_PACKAGE_ID := SP_SERVICE_PACKAGE_ID;
    RETURN CP_SERVICE_PACKAGE_ID;
  END CF_SERVICE_PACKAGE_IDFORMULA;

  FUNCTION BEFOREREPORT RETURN BOOLEAN IS
  BEGIN
    P_CONC_REQUEST_ID := FND_GLOBAL.CONC_REQUEST_ID;
    /*SRW.USER_EXIT('FND SRWINIT')*/NULL;
    IF P_GLOBAL_WORKSHEET_ID IS NULL THEN
      FND_MESSAGE.SET_NAME('PSB'
                          ,'PSB_ALL');
      CP_PARAM_WS_NAME := FND_MESSAGE.GET;
    ELSE
      SELECT
        NAME
      INTO CP_PARAM_WS_NAME
      FROM
        PSB_WORKSHEETS
      WHERE WORKSHEET_ID = P_GLOBAL_WORKSHEET_ID;
    END IF;
    IF P_SERVICE_PACKAGE_ID IS NULL THEN
      FND_MESSAGE.SET_NAME('PSB'
                          ,'PSB_ALL');
      CP_PARAM_SP_NAME := FND_MESSAGE.GET;
    ELSE
      SELECT
        NAME
      INTO CP_PARAM_SP_NAME
      FROM
        PSB_SERVICE_PACKAGES
      WHERE SERVICE_PACKAGE_ID = P_SERVICE_PACKAGE_ID;
    END IF;
    SELECT
      MEANING
    INTO CP_PARAM_ORDER_BY
    FROM
      FND_LOOKUP_VALUES
    WHERE LOOKUP_TYPE = 'PSB_SORT_ORDER_SERVICE_PACKAGE'
      AND LOOKUP_CODE = P_ORDER_BY
      AND LANGUAGE = USERENV('LANG');
    CP_SORT := P_ORDER_BY;
    IF P_STAGE_ID IS NOT NULL THEN
      SELECT
        NAME,
        SEQUENCE_NUMBER
      INTO CP_PARAM_STAGE_NAME,CP_SEQUENCE_NUMBER
      FROM
        PSB_BUDGET_STAGES
      WHERE BUDGET_STAGE_ID = P_STAGE_ID;
    ELSE
      FND_MESSAGE.SET_NAME('PSB'
                          ,'PSB_CURRENT_BUDGET_STAGE');
      CP_PARAM_STAGE_NAME := FND_MESSAGE.GET;
    END IF;
    FND_MESSAGE.SET_NAME('PSB'
                        ,'PSB_NO_DATA_FOUND');
    CP_NO_DATA_FOUND := FND_MESSAGE.GET;
    FND_MESSAGE.SET_NAME('PSB'
                        ,'PSB_END_OF_REPORT');
    CP_END_OF_REPORT := FND_MESSAGE.GET;
    SELECT_AMT := 'A.EST_AMT';
    RETURN (TRUE);
  EXCEPTION
    WHEN NO_DATA_FOUND THEN
      RETURN (FALSE);
    WHEN OTHERS THEN
      RETURN NULL;
  END BEFOREREPORT;

  FUNCTION BEFOREPFORM RETURN BOOLEAN IS
  BEGIN
    RETURN (TRUE);
  END BEFOREPFORM;

  FUNCTION AFTERPFORM RETURN BOOLEAN IS
  BEGIN
    P_CONC_REQUEST_ID := FND_GLOBAL.CONC_REQUEST_ID;
    /*SRW.USER_EXIT('FND SRWINIT')*/NULL;
    RETURN (TRUE);
  END AFTERPFORM;

  FUNCTION AFTERREPORT RETURN BOOLEAN IS
  BEGIN
    P_CONC_REQUEST_ID := FND_GLOBAL.CONC_REQUEST_ID;
    /*SRW.USER_EXIT('FND SRWINIT')*/NULL;
    /*SRW.USER_EXIT('FND SRWEXIT')*/NULL;
    RETURN (TRUE);
  END AFTERREPORT;

  FUNCTION CF_STAGE_NAMEFORMULA(WS_CURRENT_STAGE_NAME IN VARCHAR2) RETURN VARCHAR2 IS
  BEGIN
    IF P_STAGE_ID IS NULL THEN
      CP_WS_STAGE_NAME := WS_CURRENT_STAGE_NAME;
    ELSE
      CP_WS_STAGE_NAME := CP_PARAM_STAGE_NAME;
    END IF;
    RETURN CP_WS_STAGE_NAME;
  END CF_STAGE_NAMEFORMULA;

  FUNCTION BETWEENPAGE RETURN BOOLEAN IS
  BEGIN
    RETURN (TRUE);
  END BETWEENPAGE;

  FUNCTION CF_CURRENCY_CODEFORMULA(TOP_CURRENCY_CODE IN VARCHAR2) RETURN VARCHAR2 IS
  BEGIN
    CP_CURRENCY_CODE := TOP_CURRENCY_CODE;
    RETURN (CP_CURRENCY_CODE);
  END CF_CURRENCY_CODEFORMULA;

  FUNCTION CP_CURRENCY_CODE_P RETURN VARCHAR2 IS
  BEGIN
    RETURN CP_CURRENCY_CODE;
  END CP_CURRENCY_CODE_P;

  FUNCTION CP_SERVICE_PACKAGE_ID_P RETURN NUMBER IS
  BEGIN
    RETURN CP_SERVICE_PACKAGE_ID;
  END CP_SERVICE_PACKAGE_ID_P;

  FUNCTION CP_NO_DATA_FOUND_P RETURN VARCHAR2 IS
  BEGIN
    RETURN CP_NO_DATA_FOUND;
  END CP_NO_DATA_FOUND_P;

  FUNCTION CP_END_OF_REPORT_P RETURN VARCHAR2 IS
  BEGIN
    RETURN CP_END_OF_REPORT;
  END CP_END_OF_REPORT_P;

  FUNCTION SELECT_AMT_P RETURN VARCHAR2 IS
  BEGIN
    RETURN SELECT_AMT;
  END SELECT_AMT_P;

  FUNCTION CP_PARAM_WS_NAME_P RETURN VARCHAR2 IS
  BEGIN
    RETURN CP_PARAM_WS_NAME;
  END CP_PARAM_WS_NAME_P;

  FUNCTION CP_PARAM_SP_NAME_P RETURN VARCHAR2 IS
  BEGIN
    RETURN CP_PARAM_SP_NAME;
  END CP_PARAM_SP_NAME_P;

  FUNCTION CP_PARAM_ORDER_BY_P RETURN VARCHAR2 IS
  BEGIN
    RETURN CP_PARAM_ORDER_BY;
  END CP_PARAM_ORDER_BY_P;

  FUNCTION CP_SORT_P RETURN VARCHAR2 IS
  BEGIN
    RETURN CP_SORT;
  END CP_SORT_P;

  FUNCTION CP_PARAM_STAGE_NAME_P RETURN VARCHAR2 IS
  BEGIN
    RETURN CP_PARAM_STAGE_NAME;
  END CP_PARAM_STAGE_NAME_P;

  FUNCTION CP_WS_STAGE_NAME_P RETURN VARCHAR2 IS
  BEGIN
    RETURN CP_WS_STAGE_NAME;
  END CP_WS_STAGE_NAME_P;

  FUNCTION CP_SEQUENCE_NUMBER_P RETURN NUMBER IS
  BEGIN
    RETURN CP_SEQUENCE_NUMBER;
  END CP_SEQUENCE_NUMBER_P;

  FUNCTION CP_REPORTING_SOB_ID_P RETURN NUMBER IS
  BEGIN
    RETURN CP_REPORTING_SOB_ID;
  END CP_REPORTING_SOB_ID_P;

END PSB_PSBRPSPU_XMLP_PKG;






/
