--------------------------------------------------------
--  DDL for Package Body WSH_WSHRDIST_XMLP_PKG
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE PACKAGE BODY "APPS"."WSH_WSHRDIST_XMLP_PKG" AS
/* $Header: WSHRDISTB.pls 120.2 2007/12/25 07:22:19 nchinnam noship $ */
  FUNCTION AFTERPFORM RETURN BOOLEAN IS
  BEGIN
    /*SRW.MESSAGE(99999
               ,'$Header: WSHRDISTB.pls 120.2 2007/12/25 07:22:19 nchinnam noship $')*/NULL;
    IF P_APPLICATION_ID IS NOT NULL THEN
      LP_APPLICATION_ID := 'and wrc.application_id = ' || P_APPLICATION_ID;
    ELSE
      LP_APPLICATION_ID := ' ';
    END IF;
    IF P_APPL_USER_ID IS NOT NULL THEN
      LP_APPL_USER_ID := 'and wrc.application_user_id = ' || P_APPL_USER_ID;
    ELSE
      LP_APPL_USER_ID := ' ';
    END IF;
    IF P_MASTER_ORG_ID IS NOT NULL THEN
      LP_MASTER_ORG_ID := 'and wrc.master_organization_id = ' || P_MASTER_ORG_ID;
    ELSE
      LP_MASTER_ORG_ID := ' ';
    END IF;
    IF P_ORGANIZATION_ID IS NOT NULL THEN
      LP_ORGANIZATION_ID := 'and wrc.organization_id = ' || P_ORGANIZATION_ID;
    ELSE
      LP_ORGANIZATION_ID := ' ';
    END IF;
    IF P_VENDOR_ID IS NOT NULL THEN
      LP_VENDOR_ID := 'and wiv.vendor_id = ' || P_VENDOR_ID;
    ELSE
      LP_VENDOR_ID := ' ';
    END IF;
    RETURN (TRUE);
  EXCEPTION
    WHEN OTHERS THEN
      RETURN (FALSE);
  END AFTERPFORM;

  FUNCTION BEFOREREPORT RETURN BOOLEAN IS
  BEGIN
    BEGIN
      P_CONC_REQUEST_ID := FND_GLOBAL.CONC_REQUEST_ID;
      /*SRW.USER_EXIT('FND SRWINIT')*/NULL;
    EXCEPTION
      WHEN /*SRW.USER_EXIT_FAILURE*/OTHERS THEN
        /*SRW.MESSAGE(1
                   ,'Failed FND SRWINIT.')*/NULL;
        /*RAISE SRW.PROGRAM_ABORT*/RAISE_APPLICATION_ERROR(-20101,null);
    END;
    RETURN (TRUE);
  END BEFOREREPORT;

  FUNCTION CF_APPLICATION_IDFORMULA RETURN CHAR IS
    APPL_NAME VARCHAR2(240);
  BEGIN
    IF P_APPLICATION_ID IS NOT NULL THEN
      SELECT
        APPLICATION_NAME
      INTO APPL_NAME
      FROM
        FND_APPLICATION_VL
      WHERE APPLICATION_ID = P_APPLICATION_ID;
    ELSE
      APPL_NAME := '   ';
    END IF;
    RETURN (APPL_NAME);
  EXCEPTION
    WHEN NO_DATA_FOUND THEN
      APPL_NAME := '   ';
      RETURN (APPL_NAME);
    WHEN OTHERS THEN
      RAISE;
  END CF_APPLICATION_IDFORMULA;

  FUNCTION CF_SERVICE_PROVIDERFORMULA RETURN CHAR IS
    SERVICE_PROVIDER VARCHAR2(100);
  BEGIN
    IF P_VENDOR_ID IS NOT NULL THEN
      SELECT
        SERVICE_PROVIDER
      INTO SERVICE_PROVIDER
      FROM
        WSH_ITM_VENDORS
      WHERE VENDOR_ID = P_VENDOR_ID;
    ELSE
      SERVICE_PROVIDER := '     ';
    END IF;
    RETURN (SERVICE_PROVIDER);
  EXCEPTION
    WHEN NO_DATA_FOUND THEN
      SERVICE_PROVIDER := '       ';
      RETURN (SERVICE_PROVIDER);
    WHEN OTHERS THEN
      RAISE;
  END CF_SERVICE_PROVIDERFORMULA;

  FUNCTION CF_MASTER_ORGFORMULA RETURN CHAR IS
    MASTER_ORG_NAME ORG_ORGANIZATION_DEFINITIONS2.ORGANIZATION_NAME%TYPE;
  BEGIN
    IF P_MASTER_ORG_ID IS NOT NULL THEN
      SELECT
        ORG.ORGANIZATION_NAME
      INTO MASTER_ORG_NAME
      FROM
        ORG_ORGANIZATION_DEFINITIONS2 ORG,
        MTL_PARAMETERS MTL,
        MFG_LOOKUPS A
      WHERE NVL(ORG.DISABLE_DATE
         ,SYSDATE + 1) > sysdate
        AND ( ( MTL.ORGANIZATION_ID = MTL.MASTER_ORGANIZATION_ID ) )
        AND mtl.organization_id (+) = ORG.ORGANIZATION_ID
        AND A.LOOKUP_CODE = NVL(MTL.PRIMARY_COST_METHOD
         ,1)
        AND A.LOOKUP_TYPE = 'MTL_PRIMARY_COST'
        AND ORG.ORGANIZATION_ID = P_MASTER_ORG_ID;
    ELSE
      MASTER_ORG_NAME := '  ';
    END IF;
    RETURN (MASTER_ORG_NAME);
  EXCEPTION
    WHEN NO_DATA_FOUND THEN
      MASTER_ORG_NAME := '          ';
      RETURN (MASTER_ORG_NAME);
    WHEN OTHERS THEN
      RAISE;
  END CF_MASTER_ORGFORMULA;

  FUNCTION CF_ORG_NAMEFORMULA RETURN CHAR IS
    ORG_NAME ORG_ORGANIZATION_DEFINITIONS.ORGANIZATION_NAME%TYPE;
  BEGIN
    IF P_ORGANIZATION_ID IS NOT NULL THEN
      SELECT
        ORGANIZATION_NAME
      INTO ORG_NAME
      FROM
        ORG_ORGANIZATION_DEFINITIONS
      WHERE ORGANIZATION_ID = P_ORGANIZATION_ID;
    ELSE
      ORG_NAME := '         ';
    END IF;
    RETURN (ORG_NAME);
  EXCEPTION
    WHEN NO_DATA_FOUND THEN
      ORG_NAME := '         ';
      RETURN (ORG_NAME);
    WHEN OTHERS THEN
      RAISE;
  END CF_ORG_NAMEFORMULA;

  FUNCTION CF_APPLICATION_USERFORMULA RETURN CHAR IS
    APPLICATION_USER VARCHAR2(100);
  BEGIN
    IF P_APPL_USER_ID IS NOT NULL THEN
      SELECT
        USER_NAME
      INTO APPLICATION_USER
      FROM
        FND_USER
      WHERE USER_ID = P_APPL_USER_ID;
    ELSE
      APPLICATION_USER := '       ';
    END IF;
    RETURN (APPLICATION_USER);
  EXCEPTION
    WHEN NO_DATA_FOUND THEN
      APPLICATION_USER := '      ';
      RETURN (APPLICATION_USER);
    WHEN OTHERS THEN
      RAISE;
  END CF_APPLICATION_USERFORMULA;

  FUNCTION AFTERREPORT RETURN BOOLEAN IS
  BEGIN
    BEGIN
      /*SRW.USER_EXIT('FND SRWEXIT')*/NULL;
    EXCEPTION
      WHEN /*SRW.USER_EXIT_FAILURE*/OTHERS THEN
        /*SRW.MESSAGE(1
                   ,'Failed in SRWEXIT')*/NULL;
        RAISE;
    END;
    RETURN (TRUE);
  END AFTERREPORT;

END WSH_WSHRDIST_XMLP_PKG;



/
