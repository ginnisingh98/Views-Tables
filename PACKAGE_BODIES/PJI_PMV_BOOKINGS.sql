--------------------------------------------------------
--  DDL for Package Body PJI_PMV_BOOKINGS
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE PACKAGE BODY "APPS"."PJI_PMV_BOOKINGS" AS
/* $Header: PJIRF01B.pls 120.5 2005/10/11 18:32:03 appldev noship $ */

/*
** ----------------------------------------------------------
** Function: Get_SQL_PJI_REP_PBO1
** This function returns sql statement generated by the base
** engine api for the report PJI_REP_PBO1.
** ----------------------------------------------------------
*/
PROCEDURE Get_SQL_PJI_REP_PBO1(p_page_parameter_tbl IN BIS_PMV_PAGE_PARAMETER_TBL
                    , x_PMV_Sql OUT NOCOPY  VARCHAR2
                    , x_PMV_Output OUT NOCOPY  BIS_QUERY_ATTRIBUTES_TBL)
IS
l_Err_Message	VARCHAR2(3200);
BEGIN
	PJI_PMV_ENGINE.Generate_SQL(P_PAGE_PARAMETER_TBL => p_page_parameter_tbl,
    P_SELECT_LIST =>        'FACT.ORIGINAL_FUNDINGS_COUNT   "PJI_REP_MSR_1",
                            FACT.ADDITIONAL_FUNDINGS_COUNT  "PJI_REP_MSR_2",
                            FACT.TOTAL_BOOKINGS_COUNT       "PJI_REP_MSR_7",
                            FACT.ORIGINAL_FUNDINGS_AMOUNT   "PJI_REP_MSR_3",
                            FACT.ADDITIONAL_FUNDINGS_AMOUNT "PJI_REP_MSR_4",
                            FACT.ADJUSTMENT_FUNDINGS_AMOUNT "PJI_REP_MSR_14",
                            FACT.CANCELLED_FUNDINGS_AMOUNT  "PJI_REP_MSR_15",
                            FACT.TOTAL_FUNDINGS_AMOUNT      "PJI_REP_MSR_8",
                            FACT.PRIOR_TOTAL_FUNDINGS_AMOUNT    "PJI_REP_MSR_9",
                            FACT.TOTAL_FUND_CHANGE_PERCENT      "PJI_REP_MSR_10",
                            FACT.PRIOR_ORIG_FUNDINGS_AMOUNT     "PJI_REP_MSR_5",
                            FACT.PRIOR_ADTL_FUNDINGS_AMOUNT     "PJI_REP_MSR_6",
                            FACT.ORIGINAL_FUNDINGS_AMOUNT       "PJI_REP_MSR_11",
                            FACT.ADDITIONAL_FUNDINGS_AMOUNT     "PJI_REP_MSR_12",
                            FACT.TOTAL_FUNDINGS_AMOUNT          "PJI_REP_MSR_13",
                            FACT.PJI_REP_TOTAL_1 "PJI_REP_TOTAL_1",
                            FACT.PJI_REP_TOTAL_2 "PJI_REP_TOTAL_2",
                            FACT.PJI_REP_TOTAL_3 "PJI_REP_TOTAL_3",
                            FACT.PJI_REP_TOTAL_4 "PJI_REP_TOTAL_4",
                            FACT.PJI_REP_TOTAL_5 "PJI_REP_TOTAL_5",
                            FACT.PJI_REP_TOTAL_6 "PJI_REP_TOTAL_6",
                            FACT.PJI_REP_TOTAL_7 "PJI_REP_TOTAL_7",
                            FACT.PJI_REP_TOTAL_8 "PJI_REP_TOTAL_8",
                            FACT.PJI_REP_TOTAL_9 "PJI_REP_TOTAL_9",
                            FACT.PJI_REP_TOTAL_10 "PJI_REP_TOTAL_10"'
			, P_SQL_STATEMENT => x_PMV_Sql
			, P_PMV_OUTPUT => x_PMV_Output
			, P_REGION_CODE => 'PJI_REP_PBO1'
			, P_PLSQL_DRIVER => 'PJI_PMV_BOOKINGS.PLSQLDriver_BOOKINGS'
			, P_PLSQL_DRIVER_PARAMS => '  <<ORGANIZATION+FII_OPERATING_UNITS>>'||
			  ', <<ORGANIZATION+PJI_ORGANIZATIONS>>'||
			  ', <<CURRENCY+FII_CURRENCIES>>'||
			  ', <<AS_OF_DATE>>'||
			  ', <<PERIOD_TYPE>>'||
			  ', <<VIEW_BY>>'||
			  ', <<PROJECT CLASSIFICATION+CLASS_CATEGORY>>'||
			  ', <<PROJECT CLASSIFICATION+CLASS_CODE>> ');
END Get_SQL_PJI_REP_PBO1;

/*
** ----------------------------------------------------------
** Procedure: Get_SQL_PJI_REP_PBO2
** This procedure returns sql statement generated by the base
** engine api and view by as a OUT NOCOPY  parameter for the report
** PJI_REP_PBO2.
** ----------------------------------------------------------
*/
PROCEDURE Get_SQL_PJI_REP_PBO2(p_page_parameter_tbl IN BIS_PMV_PAGE_PARAMETER_TBL
                    , x_PMV_Sql OUT NOCOPY  VARCHAR2
                    , x_PMV_Output OUT NOCOPY  BIS_QUERY_ATTRIBUTES_TBL)
IS
l_Err_Message	VARCHAR2(3200);
BEGIN
	PJI_PMV_ENGINE.Generate_SQL(P_PAGE_PARAMETER_TBL => p_page_parameter_tbl,
    P_SELECT_LIST =>'FACT.ORIGINAL_FUNDINGS_AMOUNT      "PJI_REP_MSR_1",
                    FACT.PRIOR_ORIG_FUNDINGS_AMOUNT     "PJI_REP_MSR_2",
                    FACT.ORIG_FUND_CHANGE_PERCENT       "PJI_REP_MSR_3",
                    FACT.TOTAL_FUNDINGS_AMOUNT          "PJI_REP_MSR_4",
                    FACT.PRIOR_TOTAL_FUNDINGS_AMOUNT    "PJI_REP_MSR_5",
                    FACT.TOTAL_FUND_CHANGE_PERCENT      "PJI_REP_MSR_6",
                    FACT.ORIGINAL_FUNDINGS_AMOUNT       "PJI_REP_MSR_7",
                    FACT.TOTAL_FUNDINGS_AMOUNT          "PJI_REP_MSR_8"'
			, P_SQL_STATEMENT => x_PMV_Sql
			, P_PMV_OUTPUT => x_PMV_Output
			, P_REGION_CODE => 'PJI_REP_PBO2'
			, P_PLSQL_DRIVER => 'PJI_PMV_BOOKINGS.PLSQLDriver_BOOKINGS'
			, P_PLSQL_DRIVER_PARAMS => '  <<ORGANIZATION+FII_OPERATING_UNITS>>'||
			  ', <<ORGANIZATION+PJI_ORGANIZATIONS>>'||
			  ', <<CURRENCY+FII_CURRENCIES>>'||
			  ', <<AS_OF_DATE>>'||
			  ', <<PERIOD_TYPE>>'||
			  ', <<VIEW_BY>>'||
			  ', <<PROJECT CLASSIFICATION+CLASS_CATEGORY>>'||
			  ', <<PROJECT CLASSIFICATION+CLASS_CODE>> ');
END Get_SQL_PJI_REP_PBO2;

/*
** ----------------------------------------------------------
** Procedure: Get_SQL_PJI_REP_PBO3
** This procedure returns sql statement generated by the base
** engine api and view by as a OUT NOCOPY  parameter for the report
** PJI_REP_PBO3.
** ----------------------------------------------------------
*/
PROCEDURE Get_SQL_PJI_REP_PBO3(p_page_parameter_tbl IN BIS_PMV_PAGE_PARAMETER_TBL
                    , x_PMV_Sql OUT NOCOPY  VARCHAR2
                    , x_PMV_Output OUT NOCOPY  BIS_QUERY_ATTRIBUTES_TBL)
IS
l_Err_Message	VARCHAR2(3200);
BEGIN
    PJI_PMV_ENGINE.Generate_SQL(P_PAGE_PARAMETER_TBL => p_page_parameter_tbl,
   P_SELECT_LIST => 'FACT.ORIGINAL_FUNDINGS_AMOUNT  "PJI_REP_MSR_1",
                    FACT.ORIGINAL_FUNDINGS_COUNT    "PJI_REP_MSR_2",
                    FACT.ORIGINAL_AVG_BOOKINGS      "PJI_REP_MSR_3",
                    FACT.ADDITIONAL_FUNDINGS_AMOUNT "PJI_REP_MSR_4",
                    FACT.ADDITIONAL_FUNDINGS_COUNT  "PJI_REP_MSR_5",
                    FACT.ADDITIONAL_AVG_BOOKINGS    "PJI_REP_MSR_6",
                    FACT.ORIGINAL_FUNDINGS_AMOUNT   "PJI_REP_MSR_7",
                    FACT.ADDITIONAL_FUNDINGS_AMOUNT "PJI_REP_MSR_8"'
            , P_SQL_STATEMENT => x_PMV_Sql
            , P_PMV_OUTPUT => x_PMV_Output
			, P_REGION_CODE => 'PJI_REP_PBO3'
			, P_PLSQL_DRIVER => 'PJI_PMV_BOOKINGS.PLSQLDriver_BOOKINGS'
			, P_PLSQL_DRIVER_PARAMS => '  <<ORGANIZATION+FII_OPERATING_UNITS>>'||
			  ', <<ORGANIZATION+PJI_ORGANIZATIONS>>'||
			  ', <<CURRENCY+FII_CURRENCIES>>'||
			  ', <<AS_OF_DATE>>'||
			  ', <<PERIOD_TYPE>>'||
			  ', <<VIEW_BY>>'||
			  ', <<PROJECT CLASSIFICATION+CLASS_CATEGORY>>'||
			  ', <<PROJECT CLASSIFICATION+CLASS_CODE>> ');
END Get_SQL_PJI_REP_PBO3;

/*
** ----------------------------------------------------------
** Function: PLSQLDriver_Bookings
** This table function is called from select statement
** generated by PJI engine. The function returns pl/sql table
** of records which have to be displayed in the pmv report.
** Following are the reports to which this function caters:
** 1. PJI_REP_PBO1 - Project Bookings Summary
** 2. PJI_REP_PBO2 - Project Bookings Trend
** 3. PJI_REP_PBO3 - Project Bookings Source Summary
** ----------------------------------------------------------
*/
FUNCTION PLSQLDriver_Bookings(
  p_Operating_Unit		IN VARCHAR2 DEFAULT NULL
, p_Organization		IN VARCHAR2
, p_Currency_Type		IN VARCHAR2
, p_As_Of_Date			IN NUMBER
, p_Period_Type 		IN VARCHAR2
, p_View_BY 			IN VARCHAR2
, p_Classifications		IN VARCHAR2 DEFAULT NULL
, p_Class_Codes			IN VARCHAR2 DEFAULT NULL
)RETURN PJI_AC_BOOKINGS_TBL
IS
PRAGMA AUTONOMOUS_TRANSACTION;
l_Total_AC_Bookings_Tab	PJI_AC_BOOKINGS_TBL:=PJI_AC_BOOKINGS_TBL();
l_Top_Organization_Name VARCHAR2(240);
l_Top_Org_Index         NUMBER:=0;

l_Orig_Fund_Count       NUMBER:=0;
l_Addi_Fund_Count       NUMBER:=0;
l_Orig_Fund_Amount      NUMBER:=0;
l_Addi_Fund_Amount      NUMBER:=0;
l_Adju_Fund_Amount      NUMBER:=0;
l_Canc_Fund_Amount      NUMBER:=0;
l_Total_Fund_Amount     NUMBER:=0;
l_Pr_Orig_Fund_Amount   NUMBER:=0;
l_Pr_Addi_Fund_Amount   NUMBER:=0;
l_Pr_Adju_Fund_Amount   NUMBER:=0;
l_Pr_Canc_Fund_Amount   NUMBER:=0;
l_Pr_Total_Fund_Amount  NUMBER:=0;

l_TO_Orig_Fund_Count       NUMBER:=0;
l_TO_Addi_Fund_Count       NUMBER:=0;
l_TO_Orig_Fund_Amount      NUMBER:=0;
l_TO_Addi_Fund_Amount      NUMBER:=0;
l_TO_Adju_Fund_Amount      NUMBER:=0;
l_TO_Canc_Fund_Amount      NUMBER:=0;
l_TO_Total_Fund_Amount     NUMBER:=0;
l_TO_Pr_Total_Fund_Amount  NUMBER:=0;
l_curr_record_type_id      NUMBER:= 1;

BEGIN

	/*
	** Place a call to all the parse API's which parse the
	** parameters passed by PMV and populate all the
	** temporary tables.
	*/
	PJI_PMV_ENGINE.Convert_Operating_Unit(p_Operating_Unit_IDS=>p_Operating_Unit, p_View_BY=>p_View_BY);
	PJI_PMV_ENGINE.Convert_Organization(p_Top_Organization_ID=>p_Organization,
							p_View_BY=>p_View_BY,
							p_Top_Organization_Name => l_Top_Organization_Name);
	PJI_PMV_ENGINE.Convert_Time(p_As_Of_Date=>p_As_Of_Date, p_Period_Type=>p_Period_Type, p_View_BY=>p_View_By, p_Parse_Prior=>'Y', p_Report_Type=>NULL, p_Comparator=>NULL, p_Parse_ITD=>NULL);

	l_curr_record_type_id:=PJI_PMV_ENGINE.Convert_Currency_Record_Type(p_Currency_Type);

	/*
	** Determine the fact tables you choose to run the database
	** query on ( this step is what we call manual query re-write).
	*/

	IF PJI_PMV_ENGINE.Convert_Classification(p_Classification_ID=>p_Classifications, p_Class_Code_IDS=>p_Class_Codes, p_View_BY=>p_View_BY) = 'N' THEN

		/*
		** Code the SQL statement for all of the following conditions
		** 1. Current Year
		** 2. Prior Year
		** 3. SQL to generate rows with zero's for the view by dimension
		** Bulk-Collect the output into a pl/sql table to be returned to
		** pmv.
		*/

		SELECT PJI_AC_BOOKINGS(
            ORG_ID
			, ORGANIZATION_ID
			, TIME_ID
			, TIME_KEY
			, PROJECT_CLASS_ID
			, SUM( ORIGINAL_FUNDINGS_COUNT )
			, SUM( ADDITIONAL_FUNDINGS_COUNT )
                       , SUM( TOTAL_FUNDING_COUNT )
			, SUM( ORIGINAL_FUNDINGS_AMOUNT )
			, SUM( ADDITIONAL_FUNDINGS_AMOUNT )
			, SUM( ADJUSTMENT_FUNDINGS_AMOUNT )
			, -SUM( CANCELLED_FUNDINGS_AMOUNT )
			, SUM( ORIGINAL_FUNDINGS_AMOUNT
				+ ADDITIONAL_FUNDINGS_AMOUNT
				+ ADJUSTMENT_FUNDINGS_AMOUNT
				+ CANCELLED_FUNDINGS_AMOUNT )
			, SUM( PRIOR_ORIG_FUNDINGS_AMOUNT )
			, SUM( PRIOR_ADTL_FUNDINGS_AMOUNT )
			, SUM( PRIOR_ADJ_FUNDINGS_AMOUNT )
			, -SUM( PRIOR_CAN_FUNDINGS_AMOUNT )
			, SUM( PRIOR_ORIG_FUNDINGS_AMOUNT
				+ PRIOR_ADTL_FUNDINGS_AMOUNT
				+ PRIOR_ADJ_FUNDINGS_AMOUNT
				+ PRIOR_CAN_FUNDINGS_AMOUNT )
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0 )
		BULK COLLECT INTO l_Total_AC_Bookings_Tab
		FROM
			( SELECT /*+ ORDERED */
				  HOU.NAME				ORG_ID
				, HORG.NAME				ORGANIZATION_ID
				, TIME.NAME				TIME_ID
				, DECODE(p_View_BY,'TM',TIME.ORDER_BY_ID,-1)	TIME_KEY
				, '-1'					PROJECT_CLASS_ID
				, INITIAL_FUNDING_COUNT 		ORIGINAL_FUNDINGS_COUNT
				, ADDITIONAL_FUNDING_COUNT 		ADDITIONAL_FUNDINGS_COUNT
				, INITIAL_FUNDING_COUNT
                    +ADDITIONAL_FUNDING_COUNT   TOTAL_FUNDING_COUNT
                , INITIAL_FUNDING_AMOUNT 		ORIGINAL_FUNDINGS_AMOUNT
				, ADDITIONAL_FUNDING_AMOUNT		ADDITIONAL_FUNDINGS_AMOUNT
				, FUNDING_ADJUSTMENT_AMOUNT		ADJUSTMENT_FUNDINGS_AMOUNT
				, CANCELLED_FUNDING_AMOUNT		CANCELLED_FUNDINGS_AMOUNT
				, 0						PRIOR_ORIG_FUNDINGS_AMOUNT
				, 0						PRIOR_ADTL_FUNDINGS_AMOUNT
				, 0						PRIOR_ADJ_FUNDINGS_AMOUNT
				, 0						PRIOR_CAN_FUNDINGS_AMOUNT
                , 0
                , 0
                , 0
                , 0
                , 0
                , 0
                , 0
                , 0
                , 0
                , 0
                , 0
                , 0
                , 0
                , 0
           FROM
				  PJI_PMV_TIME_DIM_TMP TIME
				, PJI_PMV_ORGZ_DIM_TMP HORG
				, PJI_AC_ORGO_F_MV FCT
				, PJI_PMV_ORG_DIM_TMP HOU
			WHERE
				FCT.ORG_ID = HOU.ID
				AND FCT.ORGANIZATION_ID = HORG.ID
				AND FCT.TIME_ID = TIME.ID
				AND TIME.ID IS NOT NULL
				AND FCT.PERIOD_TYPE_ID = TIME.PERIOD_TYPE
				AND FCT.CALENDAR_TYPE = TIME.CALENDAR_TYPE
				AND bitand(fct.curr_record_type_id, l_curr_record_type_id) = l_curr_record_type_id
			UNION ALL
			SELECT /*+ ORDERED */
				  HOU.NAME					ORG_ID
				, HORG.NAME					ORGANIZATION_ID
				, TIME.NAME					TIME_ID
				, DECODE(p_View_BY,'TM',TIME.ORDER_BY_ID,-1)	TIME_KEY
				, '-1'					PROJECT_CLASS_ID
				, 0						ORIGINAL_FUNDINGS_COUNT
				, 0						ADDITIONAL_FUNDINGS_COUNT
				, 0                     TOTAL_FUNDING_COUNT
                , 0						ORIGINAL_FUNDINGS_AMOUNT
				, 0						ADDITIONAL_FUNDINGS_AMOUNT
				, 0						ADJUSTMENT_FUNDINGS_AMOUNT
				, 0						CANCELLED_FUNDINGS_AMOUNT
				, INITIAL_FUNDING_AMOUNT		PRIOR_ORIG_FUNDINGS_AMOUNT
				, ADDITIONAL_FUNDING_AMOUNT		PRIOR_ADTL_FUNDINGS_AMOUNT
				, FUNDING_ADJUSTMENT_AMOUNT		PRIOR_ADJ_FUNDINGS_AMOUNT
				, CANCELLED_FUNDING_AMOUNT		PRIOR_CAN_FUNDINGS_AMOUNT
			    , 0
                , 0
                , 0
                , 0
                , 0
                , 0
                , 0
                , 0
                , 0
                , 0
                , 0
                , 0
                , 0
                , 0
            FROM
				  PJI_PMV_TIME_DIM_TMP TIME
				, PJI_PMV_ORGZ_DIM_TMP HORG
				, PJI_AC_ORGO_F_MV FCT
				, PJI_PMV_ORG_DIM_TMP HOU
			WHERE
				FCT.ORG_ID = HOU.ID
				AND FCT.ORGANIZATION_ID = HORG.ID
				AND FCT.TIME_ID = TIME.PRIOR_ID
				AND TIME.PRIOR_ID IS NOT NULL
				AND FCT.PERIOD_TYPE_ID = TIME.PERIOD_TYPE
				AND FCT.CALENDAR_TYPE = TIME.CALENDAR_TYPE
				AND bitand(fct.curr_record_type_id, l_curr_record_type_id) = l_curr_record_type_id
			UNION ALL
			SELECT NAME 	ORG_ID
				, '-1'	ORGANIZATION_ID
				, '-1'	TIME_ID
				, -1		TIME_KEY
				, '-1'	PROJECT_CLASS_ID
				, 0		ORIGINAL_FUNDINGS_COUNT
				, 0		ADDITIONAL_FUNDINGS_COUNT
				, 0     TOTAL_FUNDING_COUNT
                , 0		ORIGINAL_FUNDINGS_AMOUNT
				, 0		ADDITIONAL_FUNDINGS_AMOUNT
				, 0		ADJUSTMENT_FUNDINGS_AMOUNT
				, 0		CANCELLED_FUNDINGS_AMOUNT
				, 0		PRIOR_ORGI_FUNDINGS_AMOUNT
				, 0		PRIOR_ADTL_FUNDINGS_AMOUNT
				, 0		PRIOR_ADJ_FUNDINGS_AMOUNT
				, 0		PRIOR_CAN_FUNDINGS_AMOUNT
			    , 0
                , 0
                , 0
                , 0
                , 0
                , 0
                , 0
                , 0
                , 0
                , 0
                , 0
                , 0
                , 0
                , 0
            FROM PJI_PMV_ORG_DIM_TMP
			WHERE NAME <> '-1'
			UNION ALL
			SELECT  '-1' 	ORG_ID
				, NAME	ORGANIZATION_ID
				, '-1'	TIME_ID
				, -1		TIME_KEY
				, '-1'	PROJECT_CLASS_ID
				, 0		ORIGINAL_FUNDINGS_COUNT
				, 0		ADDITIONAL_FUNDINGS_COUNT
				, 0     TOTAL_FUNDING_COUNT
                , 0		ORIGINAL_FUNDINGS_AMOUNT
				, 0		ADDITIONAL_FUNDINGS_AMOUNT
				, 0		ADJUSTMENT_FUNDINGS_AMOUNT
				, 0		CANCELLED_FUNDINGS_AMOUNT
				, 0		PRIOR_ORGI_FUNDINGS_AMOUNT
				, 0		PRIOR_ADTL_FUNDINGS_AMOUNT
				, 0		PRIOR_ADJ_FUNDINGS_AMOUNT
				, 0		PRIOR_CAN_FUNDINGS_AMOUNT
	            , 0
                , 0
                , 0
                , 0
                , 0
                , 0
                , 0
                , 0
                , 0
                , 0
                , 0
                , 0
                , 0
                , 0
      FROM PJI_PMV_ORGZ_DIM_TMP
			WHERE NAME <> '-1'
			UNION ALL
			SELECT  '-1' 	ORG_ID
				, '-1'	ORGANIZATION_ID
				, NAME	TIME_ID
				, ORDER_BY_ID	TIME_KEY
				, '-1'	PROJECT_CLASS_ID
				, 0		ORIGINAL_FUNDINGS_COUNT
				, 0		ADDITIONAL_FUNDINGS_COUNT
				, 0     TOTAL_FUNDING_COUNT
                , 0		ORIGINAL_FUNDINGS_AMOUNT
				, 0		ADDITIONAL_FUNDINGS_AMOUNT
				, 0		ADJUSTMENT_FUNDINGS_AMOUNT
				, 0		CANCELLED_FUNDINGS_AMOUNT
				, 0		PRIOR_ORGI_FUNDINGS_AMOUNT
				, 0		PRIOR_ADTL_FUNDINGS_AMOUNT
				, 0		PRIOR_ADJ_FUNDINGS_AMOUNT
				, 0		PRIOR_CAN_FUNDINGS_AMOUNT
	            , 0
                , 0
                , 0
                , 0
                , 0
                , 0
                , 0
                , 0
                , 0
                , 0
                , 0
                , 0
                , 0
                , 0
        FROM PJI_PMV_TIME_DIM_TMP
			WHERE NAME <> '-1')
	GROUP BY
		ORG_ID
		, ORGANIZATION_ID
		, TIME_KEY
		, TIME_ID
		, PROJECT_CLASS_ID ORDER BY TIME_KEY ASC;
	ELSE
		/*
		** Code the SQL statement for all of the following conditions
		** 1. Current Year
		** 2. Prior Year
		** 3. SQL to generate rows with zero's for the view by dimension
		*/

		SELECT PJI_AC_BOOKINGS( ORG_ID
			, ORGANIZATION_ID
			, TIME_ID
			, TIME_KEY
			, PROJECT_CLASS_ID
			, SUM( ORIGINAL_FUNDINGS_COUNT )
			, SUM( ADDITIONAL_FUNDINGS_COUNT )
			, SUM( TOTAL_FUNDING_COUNT )
            , SUM( ORIGINAL_FUNDINGS_AMOUNT )
			, SUM( ADDITIONAL_FUNDINGS_AMOUNT )
			, SUM( ADJUSTMENT_FUNDINGS_AMOUNT )
			, -SUM( CANCELLED_FUNDINGS_AMOUNT )
			, SUM( ORIGINAL_FUNDINGS_AMOUNT
				+ ADDITIONAL_FUNDINGS_AMOUNT
				+ ADJUSTMENT_FUNDINGS_AMOUNT
				+ CANCELLED_FUNDINGS_AMOUNT )
			, SUM( PRIOR_ORIG_FUNDINGS_AMOUNT )
			, SUM( PRIOR_ADTL_FUNDINGS_AMOUNT )
			, SUM( PRIOR_ADJ_FUNDINGS_AMOUNT )
			,  -SUM( PRIOR_CAN_FUNDINGS_AMOUNT )
			, SUM( PRIOR_ORIG_FUNDINGS_AMOUNT
				+ PRIOR_ADTL_FUNDINGS_AMOUNT
				+ PRIOR_ADJ_FUNDINGS_AMOUNT
				+ PRIOR_CAN_FUNDINGS_AMOUNT )
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0
            , 0 )
		BULK COLLECT INTO l_Total_AC_Bookings_Tab
		FROM
			( SELECT /*+ ORDERED */
				  HOU.NAME				ORG_ID
				, HORG.NAME				ORGANIZATION_ID
				, TIME.NAME				TIME_ID
				, DECODE(p_View_BY,'TM',TIME.ORDER_BY_ID,-1)	TIME_KEY
				, CLS.NAME					PROJECT_CLASS_ID
				, INITIAL_FUNDING_COUNT 		ORIGINAL_FUNDINGS_COUNT
				, ADDITIONAL_FUNDING_COUNT 		ADDITIONAL_FUNDINGS_COUNT
				, INITIAL_FUNDING_COUNT
                    + ADDITIONAL_FUNDING_COUNT  TOTAL_FUNDING_COUNT
                , INITIAL_FUNDING_AMOUNT 		ORIGINAL_FUNDINGS_AMOUNT
				, ADDITIONAL_FUNDING_AMOUNT		ADDITIONAL_FUNDINGS_AMOUNT
				, FUNDING_ADJUSTMENT_AMOUNT		ADJUSTMENT_FUNDINGS_AMOUNT
				, CANCELLED_FUNDING_AMOUNT		CANCELLED_FUNDINGS_AMOUNT
				, 0						PRIOR_ORIG_FUNDINGS_AMOUNT
				, 0						PRIOR_ADTL_FUNDINGS_AMOUNT
				, 0						PRIOR_ADJ_FUNDINGS_AMOUNT
				, 0						PRIOR_CAN_FUNDINGS_AMOUNT
                , 0
                , 0
                , 0
                , 0
                , 0
                , 0
                , 0
                , 0
                , 0
                , 0
                , 0
                , 0
                , 0
                , 0
            FROM
				  PJI_PMV_TIME_DIM_TMP TIME
				, PJI_PMV_ORGZ_DIM_TMP HORG
				, PJI_PMV_CLS_DIM_TMP CLS
				, PJI_AC_CLSO_F_MV FCT
				, PJI_PMV_ORG_DIM_TMP HOU
			WHERE
				FCT.PROJECT_ORG_ID = HOU.ID
				AND FCT.PROJECT_ORGANIZATION_ID = HORG.ID
				AND FCT.TIME_ID = TIME.ID
				AND TIME.ID IS NOT NULL
				AND FCT.PERIOD_TYPE_ID = TIME.PERIOD_TYPE
				AND FCT.CALENDAR_TYPE = TIME.CALENDAR_TYPE
				AND FCT.PROJECT_CLASS_ID = CLS.ID
				AND bitand(fct.curr_record_type_id, l_curr_record_type_id) = l_curr_record_type_id
			UNION ALL
				SELECT /*+ ORDERED */
				  HOU.NAME					ORG_ID
				, HORG.NAME					ORGANIZATION_ID
				, TIME.NAME					TIME_ID
				, DECODE(p_View_BY,'TM',TIME.ORDER_BY_ID,-1)	TIME_KEY
				, CLS.NAME					PROJECT_CLASS_ID
				, 0						ORIGINAL_FUNDINGS_COUNT
				, 0						ADDITIONAL_FUNDINGS_COUNT
				, 0                     TOTAL_FUNDING_COUNT
                , 0						ORIGINAL_FUNDINGS_AMOUNT
				, 0						ADDITIONAL_FUNDINGS_AMOUNT
				, 0						ADJUSTMENT_FUNDINGS_AMOUNT
				, 0						CANCELLED_FUNDINGS_AMOUNT
				, INITIAL_FUNDING_AMOUNT		PRIOR_ORIG_FUNDINGS_AMOUNT
				, ADDITIONAL_FUNDING_AMOUNT		PRIOR_ADTL_FUNDINGS_AMOUNT
				, FUNDING_ADJUSTMENT_AMOUNT		PRIOR_ADJ_FUNDINGS_AMOUNT
				, CANCELLED_FUNDING_AMOUNT		PRIOR_CAN_FUNDINGS_AMOUNT
			    , 0
                , 0
                , 0
                , 0
                , 0
                , 0
                , 0
                , 0
                , 0
                , 0
                , 0
                , 0
                , 0
                , 0
            FROM
				  PJI_PMV_TIME_DIM_TMP TIME
				, PJI_PMV_ORGZ_DIM_TMP HORG
				, PJI_PMV_CLS_DIM_TMP CLS
				, PJI_AC_CLSO_F_MV FCT
				, PJI_PMV_ORG_DIM_TMP HOU
			WHERE
				FCT.PROJECT_ORG_ID = HOU.ID
				AND FCT.PROJECT_ORGANIZATION_ID = HORG.ID
				AND FCT.TIME_ID = TIME.PRIOR_ID
				AND TIME.PRIOR_ID IS NOT NULL
				AND FCT.PERIOD_TYPE_ID = TIME.PERIOD_TYPE
				AND FCT.CALENDAR_TYPE = TIME.CALENDAR_TYPE
				AND FCT.PROJECT_CLASS_ID = CLS.ID
				AND bitand(fct.curr_record_type_id, l_curr_record_type_id) = l_curr_record_type_id
			UNION ALL
			SELECT NAME 	ORG_ID
				, '-1'	ORGANIZATION_ID
				, '-1'	TIME_ID
				, -1		TIME_KEY
				, '-1'	PROJECT_CLASS_ID
				, 0		ORIGINAL_FUNDINGS_COUNT
				, 0		ADDITIONAL_FUNDINGS_COUNT
				, 0     TOTAL_FUNDING_COUNT
                , 0		ORIGINAL_FUNDINGS_AMOUNT
				, 0		ADDITIONAL_FUNDINGS_AMOUNT
				, 0		ADJUSTMENT_FUNDINGS_AMOUNT
				, 0		CANCELLED_FUNDINGS_AMOUNT
				, 0		PRIOR_ORGI_FUNDINGS_AMOUNT
				, 0		PRIOR_ADTL_FUNDINGS_AMOUNT
				, 0		PRIOR_ADJ_FUNDINGS_AMOUNT
				, 0		PRIOR_CAN_FUNDINGS_AMOUNT
		        , 0
                , 0
                , 0
                , 0
                , 0
                , 0
                , 0
                , 0
                , 0
                , 0
                , 0
                , 0
                , 0
                , 0
            FROM PJI_PMV_ORG_DIM_TMP
			WHERE NAME <> '-1'
			UNION ALL
			SELECT  '-1' 	ORG_ID
				, NAME	ORGANIZATION_ID
				, '-1'	TIME_ID
				, -1		TIME_KEY
				, '-1'	PROJECT_CLASS_ID
				, 0		ORIGINAL_FUNDINGS_COUNT
				, 0		ADDITIONAL_FUNDINGS_COUNT
				, 0     TOTAL_FUNDING_COUNT
                , 0		ORIGINAL_FUNDINGS_AMOUNT
				, 0		ADDITIONAL_FUNDINGS_AMOUNT
				, 0		ADJUSTMENT_FUNDINGS_AMOUNT
				, 0		CANCELLED_FUNDINGS_AMOUNT
				, 0		PRIOR_ORGI_FUNDINGS_AMOUNT
				, 0		PRIOR_ADTL_FUNDINGS_AMOUNT
				, 0		PRIOR_ADJ_FUNDINGS_AMOUNT
				, 0		PRIOR_CAN_FUNDINGS_AMOUNT
			    , 0
                , 0
                , 0
                , 0
                , 0
                , 0
                , 0
                , 0
                , 0
                , 0
                , 0
                , 0
                , 0
                , 0
            FROM PJI_PMV_ORGZ_DIM_TMP
			WHERE NAME <> '-1'
			UNION ALL
			SELECT  '-1' 	ORG_ID
				, '-1'	ORGANIZATION_ID
				, NAME	TIME_ID
				, ORDER_BY_ID	TIME_KEY
				, '-1'	PROJECT_CLASS_ID
				, 0		ORIGINAL_FUNDINGS_COUNT
				, 0		ADDITIONAL_FUNDINGS_COUNT
				, 0     TOTAL_FUNDING_COUNT
                , 0		ORIGINAL_FUNDINGS_AMOUNT
				, 0		ADDITIONAL_FUNDINGS_AMOUNT
				, 0		ADJUSTMENT_FUNDINGS_AMOUNT
				, 0		CANCELLED_FUNDINGS_AMOUNT
				, 0		PRIOR_ORGI_FUNDINGS_AMOUNT
				, 0		PRIOR_ADTL_FUNDINGS_AMOUNT
				, 0		PRIOR_ADJ_FUNDINGS_AMOUNT
				, 0		PRIOR_CAN_FUNDINGS_AMOUNT
                , 0
                , 0
                , 0
                , 0
                , 0
                , 0
                , 0
                , 0
                , 0
                , 0
                , 0
                , 0
                , 0
                , 0
      FROM PJI_PMV_TIME_DIM_TMP
			WHERE NAME <> '-1'
			UNION ALL
			SELECT  '-1' 	ORG_ID
				, '-1'	ORGANIZATION_ID
				, '-1'	TIME_ID
				, -1		TIME_KEY
				, NAME	PROJECT_CLASS_ID
				, 0		ORIGINAL_FUNDINGS_COUNT
				, 0		ADDITIONAL_FUNDINGS_COUNT
				, 0     TOTAL_FUNDING_COUNT
                , 0		ORIGINAL_FUNDINGS_AMOUNT
				, 0		ADDITIONAL_FUNDINGS_AMOUNT
				, 0		ADJUSTMENT_FUNDINGS_AMOUNT
				, 0		CANCELLED_FUNDINGS_AMOUNT
				, 0		PRIOR_ORGI_FUNDINGS_AMOUNT
				, 0		PRIOR_ADTL_FUNDINGS_AMOUNT
				, 0		PRIOR_ADJ_FUNDINGS_AMOUNT
				, 0		PRIOR_CAN_FUNDINGS_AMOUNT
                , 0
                , 0
                , 0
                , 0
                , 0
                , 0
                , 0
                , 0
                , 0
                , 0
                , 0
                , 0
                , 0
                , 0
     FROM PJI_PMV_CLS_DIM_TMP
			WHERE NAME <> '-1') FACT
		GROUP BY
			ORG_ID
			, ORGANIZATION_ID
			, TIME_KEY
			, TIME_ID
			, PROJECT_CLASS_ID ORDER BY TIME_KEY ASC;
	END IF;

FOR i in 1..l_Total_AC_Bookings_Tab.COUNT
  LOOP
    IF p_View_By = 'OG' THEN
		IF l_Total_AC_Bookings_Tab(i).ORGANIZATION_ID = l_Top_Organization_Name THEN
				l_Top_Org_Index:=i;

				l_TO_Orig_Fund_Count      := NVL(l_Total_AC_Bookings_Tab(i).ORIGINAL_FUNDINGS_COUNT,0);
				l_TO_Addi_Fund_Count      := NVL(l_Total_AC_Bookings_Tab(i).ADDITIONAL_FUNDINGS_COUNT,0);
				l_TO_Orig_Fund_Amount     := NVL(l_Total_AC_Bookings_Tab(i).ORIGINAL_FUNDINGS_AMOUNT,0);
				l_TO_Addi_Fund_Amount     := NVL(l_Total_AC_Bookings_Tab(i).ADDITIONAL_FUNDINGS_AMOUNT,0);
				l_TO_Adju_Fund_Amount     := NVL(l_Total_AC_Bookings_Tab(i).ADJUSTMENT_FUNDINGS_AMOUNT,0);
				l_TO_Canc_Fund_Amount     := NVL(l_Total_AC_Bookings_Tab(i).CANCELLED_FUNDINGS_AMOUNT,0);
				l_TO_Total_Fund_Amount    := NVL(l_Total_AC_Bookings_Tab(i).TOTAL_FUNDINGS_AMOUNT,0);
				l_TO_Pr_Total_Fund_Amount := NVL(l_Total_AC_Bookings_Tab(i).PRIOR_TOTAL_FUNDINGS_AMOUNT,0);

		ELSE
				l_Orig_Fund_Count    := l_Orig_Fund_Count
				          + NVL(l_Total_AC_Bookings_Tab(i).ORIGINAL_FUNDINGS_COUNT,0);
				l_Addi_Fund_Count    :=l_Addi_Fund_Count
				          + NVL(l_Total_AC_Bookings_Tab(i).ADDITIONAL_FUNDINGS_COUNT,0);
				l_Orig_Fund_Amount   :=l_Orig_Fund_Amount
				          + NVL(l_Total_AC_Bookings_Tab(i).ORIGINAL_FUNDINGS_AMOUNT,0);
				l_Addi_Fund_Amount   :=l_Addi_Fund_Amount
				          + NVL(l_Total_AC_Bookings_Tab(i).ADDITIONAL_FUNDINGS_AMOUNT,0);
				l_Adju_Fund_Amount   :=l_Adju_Fund_Amount
				          + NVL(l_Total_AC_Bookings_Tab(i).ADJUSTMENT_FUNDINGS_AMOUNT,0);
				l_Canc_Fund_Amount    :=l_Canc_Fund_Amount
				          + NVL(l_Total_AC_Bookings_Tab(i).CANCELLED_FUNDINGS_AMOUNT,0);
				l_Total_Fund_Amount   :=l_Total_Fund_Amount
				          + NVL(l_Total_AC_Bookings_Tab(i).TOTAL_FUNDINGS_AMOUNT,0);
				l_Pr_Orig_Fund_Amount :=l_Pr_Orig_Fund_Amount
				         + NVL(l_Total_AC_Bookings_Tab(i).PRIOR_ORIG_FUNDINGS_AMOUNT,0);
				l_Pr_Addi_Fund_Amount :=l_Pr_Addi_Fund_Amount
				         + NVL(l_Total_AC_Bookings_Tab(i).PRIOR_ADTL_FUNDINGS_AMOUNT,0);
				l_Pr_Adju_Fund_Amount :=l_Pr_Adju_Fund_Amount
				         + NVL(l_Total_AC_Bookings_Tab(i).PRIOR_ADJ_FUNDINGS_AMOUNT,0);
				l_Pr_Canc_Fund_Amount :=l_Pr_Canc_Fund_Amount
				         + NVL(l_Total_AC_Bookings_Tab(i).PRIOR_CAN_FUNDINGS_AMOUNT,0);
				l_Pr_Total_Fund_Amount:=l_Pr_Total_Fund_Amount
				         + NVL(l_Total_AC_Bookings_Tab(i).PRIOR_TOTAL_FUNDINGS_AMOUNT,0);
			END IF;
		ELSE

                l_Orig_Fund_Count    := l_Orig_Fund_Count
			          + NVL(l_Total_AC_Bookings_Tab(i).ORIGINAL_FUNDINGS_COUNT,0);
		l_Addi_Fund_Count    :=l_Addi_Fund_Count
			          + NVL(l_Total_AC_Bookings_Tab(i).ADDITIONAL_FUNDINGS_COUNT,0);
		l_Orig_Fund_Amount   :=l_Orig_Fund_Amount
			          + NVL(l_Total_AC_Bookings_Tab(i).ORIGINAL_FUNDINGS_AMOUNT,0);
		l_Addi_Fund_Amount   :=l_Addi_Fund_Amount
			          + NVL(l_Total_AC_Bookings_Tab(i).ADDITIONAL_FUNDINGS_AMOUNT,0);
		l_Adju_Fund_Amount   :=l_Adju_Fund_Amount
			          + NVL(l_Total_AC_Bookings_Tab(i).ADJUSTMENT_FUNDINGS_AMOUNT,0);
		l_Canc_Fund_Amount    :=l_Canc_Fund_Amount
			          + NVL(l_Total_AC_Bookings_Tab(i).CANCELLED_FUNDINGS_AMOUNT,0);
		l_Total_Fund_Amount   :=l_Total_Fund_Amount
			          + NVL(l_Total_AC_Bookings_Tab(i).TOTAL_FUNDINGS_AMOUNT,0);
		l_Pr_Orig_Fund_Amount :=l_Pr_Orig_Fund_Amount
			         + NVL(l_Total_AC_Bookings_Tab(i).PRIOR_ORIG_FUNDINGS_AMOUNT,0);
		l_Pr_Addi_Fund_Amount :=l_Pr_Addi_Fund_Amount
			         + NVL(l_Total_AC_Bookings_Tab(i).PRIOR_ADTL_FUNDINGS_AMOUNT,0);
		l_Pr_Adju_Fund_Amount :=l_Pr_Adju_Fund_Amount
			         + NVL(l_Total_AC_Bookings_Tab(i).PRIOR_ADJ_FUNDINGS_AMOUNT,0);
		l_Pr_Canc_Fund_Amount :=l_Pr_Canc_Fund_Amount
			         + NVL(l_Total_AC_Bookings_Tab(i).PRIOR_CAN_FUNDINGS_AMOUNT,0);
		l_Pr_Total_Fund_Amount:=l_Pr_Total_Fund_Amount
			         + NVL(l_Total_AC_Bookings_Tab(i).PRIOR_TOTAL_FUNDINGS_AMOUNT,0);
    END IF;

END LOOP;

IF p_View_By = 'OG' THEN

		l_Total_AC_Bookings_Tab(l_Top_Org_Index).ORIGINAL_FUNDINGS_COUNT
    		:= NVL(l_Total_AC_Bookings_Tab(l_Top_Org_Index).ORIGINAL_FUNDINGS_COUNT,0)
                    -l_Orig_Fund_Count;

		l_Total_AC_Bookings_Tab(l_Top_Org_Index).ADDITIONAL_FUNDINGS_COUNT
		:= NVL(l_Total_AC_Bookings_Tab(l_Top_Org_Index).ADDITIONAL_FUNDINGS_COUNT,0)
                    -l_Addi_Fund_Count;

		l_Total_AC_Bookings_Tab(l_Top_Org_Index).ORIGINAL_FUNDINGS_AMOUNT
		:= NVL(l_Total_AC_Bookings_Tab(l_Top_Org_Index).ORIGINAL_FUNDINGS_AMOUNT,0)
                    -l_Orig_Fund_Amount;

		l_Total_AC_Bookings_Tab(l_Top_Org_Index).ADDITIONAL_FUNDINGS_AMOUNT
		:= NVL(l_Total_AC_Bookings_Tab(l_Top_Org_Index).ADDITIONAL_FUNDINGS_AMOUNT,0)
                    -l_Addi_Fund_Amount;

		l_Total_AC_Bookings_Tab(l_Top_Org_Index).ADJUSTMENT_FUNDINGS_AMOUNT
		:= NVL(l_Total_AC_Bookings_Tab(l_Top_Org_Index).ADJUSTMENT_FUNDINGS_AMOUNT,0)
                    -l_Adju_Fund_Amount;

		l_Total_AC_Bookings_Tab(l_Top_Org_Index).CANCELLED_FUNDINGS_AMOUNT
		:= NVL(l_Total_AC_Bookings_Tab(l_Top_Org_Index).CANCELLED_FUNDINGS_AMOUNT,0)
                    -l_Canc_Fund_Amount;

		l_Total_AC_Bookings_Tab(l_Top_Org_Index).TOTAL_FUNDINGS_AMOUNT
		:= NVL(l_Total_AC_Bookings_Tab(l_Top_Org_Index).TOTAL_FUNDINGS_AMOUNT,0)
                    -l_Total_Fund_Amount;

		l_Total_AC_Bookings_Tab(l_Top_Org_Index).PRIOR_ORIG_FUNDINGS_AMOUNT
		:= NVL(l_Total_AC_Bookings_Tab(l_Top_Org_Index).PRIOR_ORIG_FUNDINGS_AMOUNT,0)
                    -l_Pr_Orig_Fund_Amount;

		l_Total_AC_Bookings_Tab(l_Top_Org_Index).PRIOR_ADTL_FUNDINGS_AMOUNT
		:= NVL(l_Total_AC_Bookings_Tab(l_Top_Org_Index).PRIOR_ADTL_FUNDINGS_AMOUNT,0)
                    -l_Pr_Addi_Fund_Amount;

		l_Total_AC_Bookings_Tab(l_Top_Org_Index).PRIOR_ADJ_FUNDINGS_AMOUNT
		:= NVL(l_Total_AC_Bookings_Tab(l_Top_Org_Index).PRIOR_ADJ_FUNDINGS_AMOUNT,0)
                    -l_Pr_Adju_Fund_Amount;

		l_Total_AC_Bookings_Tab(l_Top_Org_Index).PRIOR_CAN_FUNDINGS_AMOUNT
		:= NVL(l_Total_AC_Bookings_Tab(l_Top_Org_Index).PRIOR_CAN_FUNDINGS_AMOUNT,0)
                    -l_Pr_Canc_Fund_Amount;

		l_Total_AC_Bookings_Tab(l_Top_Org_Index).PRIOR_TOTAL_FUNDINGS_AMOUNT
		:= NVL(l_Total_AC_Bookings_Tab(l_Top_Org_Index).PRIOR_TOTAL_FUNDINGS_AMOUNT,0)
                    -l_Pr_Total_Fund_Amount;

   IF
        NVL(l_Total_AC_Bookings_Tab(l_Top_Org_Index).ORIGINAL_FUNDINGS_COUNT,    0) =0 AND
        NVL(l_Total_AC_Bookings_Tab(l_Top_Org_Index).ADDITIONAL_FUNDINGS_COUNT,  0) =0 AND
        NVL(l_Total_AC_Bookings_Tab(l_Top_Org_Index).ORIGINAL_FUNDINGS_AMOUNT,   0) =0 AND
        NVL(l_Total_AC_Bookings_Tab(l_Top_Org_Index).ADDITIONAL_FUNDINGS_AMOUNT, 0) =0 AND
        NVL(l_Total_AC_Bookings_Tab(l_Top_Org_Index).ADJUSTMENT_FUNDINGS_AMOUNT, 0) =0 AND
        NVL(l_Total_AC_Bookings_Tab(l_Top_Org_Index).CANCELLED_FUNDINGS_AMOUNT,  0) =0 AND
        NVL(l_Total_AC_Bookings_Tab(l_Top_Org_Index).TOTAL_FUNDINGS_AMOUNT,      0) =0 AND
        NVL(l_Total_AC_Bookings_Tab(l_Top_Org_Index).PRIOR_TOTAL_FUNDINGS_AMOUNT,0) =0 AND
        NVL(l_Total_AC_Bookings_Tab(l_Top_Org_Index).TOTAL_FUND_CHANGE_PERCENT,  0) =0
    THEN
        l_Total_AC_Bookings_Tab.DELETE(l_Top_Org_Index);
    END IF;

   l_Orig_Fund_Count      :=l_TO_Orig_Fund_Count;
   l_Addi_Fund_Count      :=l_TO_Addi_Fund_Count;
   l_Orig_Fund_Amount     :=l_TO_Orig_Fund_Amount;
   l_Addi_Fund_Amount     :=l_TO_Addi_Fund_Amount;
   l_Adju_Fund_Amount     :=l_TO_Adju_Fund_Amount;
   l_Canc_Fund_Amount     :=l_TO_Canc_Fund_Amount;
   l_Total_Fund_Amount    :=l_TO_Total_Fund_Amount;
   l_Pr_Total_Fund_Amount :=l_TO_Pr_Total_Fund_Amount;

END IF;

/*
** Calculations moved from AK to PLSQL code
*/

IF l_Total_AC_Bookings_Tab.COUNT > 0 THEN
FOR i in l_Total_AC_Bookings_Tab.FIRST..l_Total_AC_Bookings_Tab.LAST
    LOOP
/* PBO1*/
     IF l_Total_AC_Bookings_Tab.EXISTS(i) THEN
    	IF NVL(l_Total_AC_Bookings_Tab(i).PRIOR_TOTAL_FUNDINGS_AMOUNT, 0)=0 THEN
           l_Total_AC_Bookings_Tab(i).TOTAL_FUND_CHANGE_PERCENT:= NULL;
        ELSE
           l_Total_AC_Bookings_Tab(i).TOTAL_FUND_CHANGE_PERCENT:=
               (l_Total_AC_Bookings_Tab(i).TOTAL_FUNDINGS_AMOUNT
               -l_Total_AC_Bookings_Tab(i).PRIOR_TOTAL_FUNDINGS_AMOUNT)*100
                    /ABS(l_Total_AC_Bookings_Tab(i).PRIOR_TOTAL_FUNDINGS_AMOUNT);
        END IF;
/* PBO2*/
		IF NVL(l_Total_AC_Bookings_Tab(i).PRIOR_ORIG_FUNDINGS_AMOUNT, 0)=0 THEN
             l_Total_AC_Bookings_Tab(i).ORIG_FUND_CHANGE_PERCENT :=NULL;
        ELSE
                l_Total_AC_Bookings_Tab(i).ORIG_FUND_CHANGE_PERCENT:=
                     (l_Total_AC_Bookings_Tab(i).ORIGINAL_FUNDINGS_AMOUNT-
                     l_Total_AC_Bookings_Tab(i).PRIOR_ORIG_FUNDINGS_AMOUNT)*100
                        /ABS(l_Total_AC_Bookings_Tab(i).PRIOR_ORIG_FUNDINGS_AMOUNT);
        END IF;
/*PBO3*/
	    IF NVL(l_Total_AC_Bookings_Tab(i).ORIGINAL_FUNDINGS_COUNT, 0)=0 THEN
             l_Total_AC_Bookings_Tab(i).ORIGINAL_AVG_BOOKINGS :=NULL;
        ELSE l_Total_AC_Bookings_Tab(i).ORIGINAL_AVG_BOOKINGS:=
                l_Total_AC_Bookings_Tab(i).ORIGINAL_FUNDINGS_AMOUNT/
                    l_Total_AC_Bookings_Tab(i).ORIGINAL_FUNDINGS_COUNT;
        END IF;

        IF NVL(l_Total_AC_Bookings_Tab(i).ADDITIONAL_FUNDINGS_COUNT, 0)=0 THEN
             l_Total_AC_Bookings_Tab(i).ADDITIONAL_AVG_BOOKINGS :=NULL;
        ELSE l_Total_AC_Bookings_Tab(i).ADDITIONAL_AVG_BOOKINGS:=
                l_Total_AC_Bookings_Tab(i).ADDITIONAL_FUNDINGS_AMOUNT/
                    l_Total_AC_Bookings_Tab(i).ADDITIONAL_FUNDINGS_COUNT;
        END IF;
    END IF;
END LOOP;
END IF;

	/*
	** Totals
	*/

IF l_Total_AC_Bookings_Tab.COUNT > 0 THEN
FOR i in l_Total_AC_Bookings_Tab.FIRST..l_Total_AC_Bookings_Tab.LAST
  LOOP
    IF l_Total_AC_Bookings_Tab.EXISTS(i) THEN
			l_Total_AC_Bookings_Tab(i).PJI_REP_TOTAL_1 := l_Orig_Fund_Count;
			l_Total_AC_Bookings_Tab(i).PJI_REP_TOTAL_2 := l_Addi_Fund_Count;
			l_Total_AC_Bookings_Tab(i).PJI_REP_TOTAL_3 := l_Orig_Fund_Count
                                                                       + l_Addi_Fund_Count;
			l_Total_AC_Bookings_Tab(i).PJI_REP_TOTAL_4 := l_Orig_Fund_Amount;
			l_Total_AC_Bookings_Tab(i).PJI_REP_TOTAL_5 := l_Addi_Fund_Amount;
			l_Total_AC_Bookings_Tab(i).PJI_REP_TOTAL_6 := l_Adju_Fund_Amount;
			l_Total_AC_Bookings_Tab(i).PJI_REP_TOTAL_7 := l_Canc_Fund_Amount;
			l_Total_AC_Bookings_Tab(i).PJI_REP_TOTAL_8 := l_Total_Fund_Amount;
			l_Total_AC_Bookings_Tab(i).PJI_REP_TOTAL_9 := l_Pr_Total_Fund_Amount;

    	    IF NVL(l_Total_AC_Bookings_Tab(i).PJI_REP_TOTAL_9, 0)=0 THEN
                l_Total_AC_Bookings_Tab(i).PJI_REP_TOTAL_10:= NULL;
             ELSE
                l_Total_AC_Bookings_Tab(i).PJI_REP_TOTAL_10:=
               (l_Total_AC_Bookings_Tab(i).PJI_REP_TOTAL_8
               -l_Total_AC_Bookings_Tab(i).PJI_REP_TOTAL_9)*100
                    /ABS(l_Total_AC_Bookings_Tab(i).PJI_REP_TOTAL_9);
            END IF;
    END IF;
  END LOOP;
 END IF;

    /*
    ** Return the bulk collected table back to pmv.
    */

    COMMIT;
  RETURN l_Total_AC_Bookings_Tab;
END PLSQLDriver_BOOKINGS;
END PJI_PMV_BOOKINGS;


/
