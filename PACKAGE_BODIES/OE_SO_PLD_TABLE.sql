--------------------------------------------------------
--  DDL for Package Body OE_SO_PLD_TABLE
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE PACKAGE BODY "APPS"."OE_SO_PLD_TABLE" AS
/* $Header: oespdtbb.pls 115.1 99/07/16 08:28:26 porting shi $ */

PROCEDURE Insert_Row(X_Rowid IN OUT VARCHAR2,
    X_ATTRIBUTE1    VARCHAR2,
    X_ATTRIBUTE10    VARCHAR2,
    X_ATTRIBUTE11    VARCHAR2,
    X_ATTRIBUTE12    VARCHAR2,
    X_ATTRIBUTE13    VARCHAR2,
    X_ATTRIBUTE14    VARCHAR2,
    X_ATTRIBUTE15    VARCHAR2,
    X_ATTRIBUTE2    VARCHAR2,
    X_ATTRIBUTE3    VARCHAR2,
    X_ATTRIBUTE4    VARCHAR2,
    X_ATTRIBUTE5    VARCHAR2,
    X_ATTRIBUTE6    VARCHAR2,
    X_ATTRIBUTE7    VARCHAR2,
    X_ATTRIBUTE8    VARCHAR2,
    X_ATTRIBUTE9    VARCHAR2,
    X_AUTOSCHEDULED_FLAG    VARCHAR2,
    X_CONTEXT    VARCHAR2,
    X_CREATED_BY    NUMBER,
    X_CREATION_DATE    DATE,
    X_CUSTOMER_REQUESTED_LOT_FLAG    VARCHAR2,
    X_DELIVERY    NUMBER,
    X_DEMAND_CLASS_CODE    VARCHAR2,
    X_DEMAND_ID    NUMBER,
    X_DETAIL_TYPE_CODE    VARCHAR2,
    X_INVENTORY_LOCATION_ID    NUMBER,
    X_INVENTORY_LOCATION_SEGMENTS    VARCHAR2,
    X_LAST_UPDATED_BY    NUMBER,
    X_LAST_UPDATE_DATE    DATE,
    X_LAST_UPDATE_LOGIN    NUMBER,
    X_LATEST_ACCEPTABLE_DATE    DATE,
    X_LOT_NUMBER    VARCHAR2,
    X_PICKING_LINE_DETAIL_ID    NUMBER,
    X_PICKING_LINE_ID    NUMBER,
    X_PROGRAM_APPLICATION_ID    NUMBER,
    X_PROGRAM_ID    NUMBER,
    X_PROGRAM_UPDATE_DATE    DATE,
    X_RELEASED_FLAG    VARCHAR2,
    X_REQUESTED_QUANTITY    NUMBER,
    X_REQUEST_ID    NUMBER,
    X_RESERVABLE_FLAG    VARCHAR2,
    X_REVISION    VARCHAR2,
    X_SCHEDULE_DATE    DATE,
    X_SCHEDULE_LEVEL    NUMBER,
    X_SCHEDULE_STATUS_CODE    VARCHAR2,
    X_SEGMENT1    VARCHAR2,
    X_SEGMENT10    VARCHAR2,
    X_SEGMENT11    VARCHAR2,
    X_SEGMENT12    VARCHAR2,
    X_SEGMENT13    VARCHAR2,
    X_SEGMENT14    VARCHAR2,
    X_SEGMENT15    VARCHAR2,
    X_SEGMENT16    VARCHAR2,
    X_SEGMENT17    VARCHAR2,
    X_SEGMENT18    VARCHAR2,
    X_SEGMENT19    VARCHAR2,
    X_SEGMENT2    VARCHAR2,
    X_SEGMENT20    VARCHAR2,
    X_SEGMENT3    VARCHAR2,
    X_SEGMENT4    VARCHAR2,
    X_SEGMENT5    VARCHAR2,
    X_SEGMENT6    VARCHAR2,
    X_SEGMENT7    VARCHAR2,
    X_SEGMENT8    VARCHAR2,
    X_SEGMENT9    VARCHAR2,
    X_SERIAL_NUMBER    VARCHAR2,
    X_SHIPPED_QUANTITY    NUMBER,
    X_SUBINVENTORY    VARCHAR2,
    X_SUPPLY_SOURCE_HEADER_ID    NUMBER,
    X_SUPPLY_SOURCE_TYPE    NUMBER,
    X_TRANSACTABLE_FLAG    VARCHAR2,
    X_UPDATE_FLAG    VARCHAR2,
    X_WAREHOUSE_ID    NUMBER,
    X_WIP_COMPLETED_QUANTITY    NUMBER,
    X_WIP_RESERVED_QUANTITY    NUMBER
)IS

CURSOR C IS SELECT rowid FROM so_picking_line_details
WHERE PICKING_LINE_DETAIL_ID = X_PICKING_LINE_DETAIL_ID;

BEGIN
     INSERT INTO so_picking_line_details(
        ATTRIBUTE1,
        ATTRIBUTE10,
        ATTRIBUTE11,
        ATTRIBUTE12,
        ATTRIBUTE13,
        ATTRIBUTE14,
        ATTRIBUTE15,
        ATTRIBUTE2,
        ATTRIBUTE3,
        ATTRIBUTE4,
        ATTRIBUTE5,
        ATTRIBUTE6,
        ATTRIBUTE7,
        ATTRIBUTE8,
        ATTRIBUTE9,
        AUTOSCHEDULED_FLAG,
        CONTEXT,
        CREATED_BY,
        CREATION_DATE,
        CUSTOMER_REQUESTED_LOT_FLAG,
        DELIVERY,
        DEMAND_CLASS_CODE,
        DEMAND_ID,
        DETAIL_TYPE_CODE,
        INVENTORY_LOCATION_ID,
        INVENTORY_LOCATION_SEGMENTS,
        LAST_UPDATED_BY,
        LAST_UPDATE_DATE,
        LAST_UPDATE_LOGIN,
        LATEST_ACCEPTABLE_DATE,
        LOT_NUMBER,
        PICKING_LINE_DETAIL_ID,
        PICKING_LINE_ID,
        PROGRAM_APPLICATION_ID,
        PROGRAM_ID,
        PROGRAM_UPDATE_DATE,
        RELEASED_FLAG,
        REQUESTED_QUANTITY,
        REQUEST_ID,
        RESERVABLE_FLAG,
        REVISION,
        SCHEDULE_DATE,
        SCHEDULE_LEVEL,
        SCHEDULE_STATUS_CODE,
        SEGMENT1,
        SEGMENT10,
        SEGMENT11,
        SEGMENT12,
        SEGMENT13,
        SEGMENT14,
        SEGMENT15,
        SEGMENT16,
        SEGMENT17,
        SEGMENT18,
        SEGMENT19,
        SEGMENT2,
        SEGMENT20,
        SEGMENT3,
        SEGMENT4,
        SEGMENT5,
        SEGMENT6,
        SEGMENT7,
        SEGMENT8,
        SEGMENT9,
        SERIAL_NUMBER,
        SHIPPED_QUANTITY,
        SUBINVENTORY,
        SUPPLY_SOURCE_HEADER_ID,
        SUPPLY_SOURCE_TYPE,
        TRANSACTABLE_FLAG,
        UPDATE_FLAG,
        WAREHOUSE_ID,
        WIP_COMPLETED_QUANTITY,
        WIP_RESERVED_QUANTITY
        ) VALUES (
        X_ATTRIBUTE1,
        X_ATTRIBUTE10,
        X_ATTRIBUTE11,
        X_ATTRIBUTE12,
        X_ATTRIBUTE13,
        X_ATTRIBUTE14,
        X_ATTRIBUTE15,
        X_ATTRIBUTE2,
        X_ATTRIBUTE3,
        X_ATTRIBUTE4,
        X_ATTRIBUTE5,
        X_ATTRIBUTE6,
        X_ATTRIBUTE7,
        X_ATTRIBUTE8,
        X_ATTRIBUTE9,
        X_AUTOSCHEDULED_FLAG,
        X_CONTEXT,
        X_CREATED_BY,
        X_CREATION_DATE,
        X_CUSTOMER_REQUESTED_LOT_FLAG,
        X_DELIVERY,
        X_DEMAND_CLASS_CODE,
        X_DEMAND_ID,
        X_DETAIL_TYPE_CODE,
        X_INVENTORY_LOCATION_ID,
        X_INVENTORY_LOCATION_SEGMENTS,
        X_LAST_UPDATED_BY,
        X_LAST_UPDATE_DATE,
        X_LAST_UPDATE_LOGIN,
        X_LATEST_ACCEPTABLE_DATE,
        X_LOT_NUMBER,
        X_PICKING_LINE_DETAIL_ID,
        X_PICKING_LINE_ID,
        X_PROGRAM_APPLICATION_ID,
        X_PROGRAM_ID,
        X_PROGRAM_UPDATE_DATE,
        X_RELEASED_FLAG,
        X_REQUESTED_QUANTITY,
        X_REQUEST_ID,
        X_RESERVABLE_FLAG,
        X_REVISION,
        X_SCHEDULE_DATE,
        X_SCHEDULE_LEVEL,
        X_SCHEDULE_STATUS_CODE,
        X_SEGMENT1,
        X_SEGMENT10,
        X_SEGMENT11,
        X_SEGMENT12,
        X_SEGMENT13,
        X_SEGMENT14,
        X_SEGMENT15,
        X_SEGMENT16,
        X_SEGMENT17,
        X_SEGMENT18,
        X_SEGMENT19,
        X_SEGMENT2,
        X_SEGMENT20,
        X_SEGMENT3,
        X_SEGMENT4,
        X_SEGMENT5,
        X_SEGMENT6,
        X_SEGMENT7,
        X_SEGMENT8,
        X_SEGMENT9,
        X_SERIAL_NUMBER,
        X_SHIPPED_QUANTITY,
        X_SUBINVENTORY,
        X_SUPPLY_SOURCE_HEADER_ID,
        X_SUPPLY_SOURCE_TYPE,
        X_TRANSACTABLE_FLAG,
        X_UPDATE_FLAG,
        X_WAREHOUSE_ID,
        X_WIP_COMPLETED_QUANTITY,
        X_WIP_RESERVED_QUANTITY
    );

    OPEN C;
    FETCH C INTO X_Rowid;
    if (C%NOTFOUND) then
        CLOSE C;
        Raise NO_DATA_FOUND;
    end if;
    CLOSE C;
END Insert_Row;

PROCEDURE Lock_Row(X_Rowid VARCHAR2,
    X_ATTRIBUTE1    VARCHAR2,
    X_ATTRIBUTE10    VARCHAR2,
    X_ATTRIBUTE11    VARCHAR2,
    X_ATTRIBUTE12    VARCHAR2,
    X_ATTRIBUTE13    VARCHAR2,
    X_ATTRIBUTE14    VARCHAR2,
    X_ATTRIBUTE15    VARCHAR2,
    X_ATTRIBUTE2    VARCHAR2,
    X_ATTRIBUTE3    VARCHAR2,
    X_ATTRIBUTE4    VARCHAR2,
    X_ATTRIBUTE5    VARCHAR2,
    X_ATTRIBUTE6    VARCHAR2,
    X_ATTRIBUTE7    VARCHAR2,
    X_ATTRIBUTE8    VARCHAR2,
    X_ATTRIBUTE9    VARCHAR2,
    X_AUTOSCHEDULED_FLAG    VARCHAR2,
    X_CONTEXT    VARCHAR2,
    X_CREATED_BY    NUMBER,
    X_CREATION_DATE    DATE,
    X_CUSTOMER_REQUESTED_LOT_FLAG    VARCHAR2,
    X_DELIVERY    NUMBER,
    X_DEMAND_CLASS_CODE    VARCHAR2,
    X_DEMAND_ID    NUMBER,
    X_DETAIL_TYPE_CODE    VARCHAR2,
    X_INVENTORY_LOCATION_ID    NUMBER,
    X_INVENTORY_LOCATION_SEGMENTS    VARCHAR2,
    X_LAST_UPDATED_BY    NUMBER,
    X_LAST_UPDATE_DATE    DATE,
    X_LAST_UPDATE_LOGIN    NUMBER,
    X_LATEST_ACCEPTABLE_DATE    DATE,
    X_LOT_NUMBER    VARCHAR2,
    X_PICKING_LINE_DETAIL_ID    NUMBER,
    X_PICKING_LINE_ID    NUMBER,
    X_PROGRAM_APPLICATION_ID    NUMBER,
    X_PROGRAM_ID    NUMBER,
    X_PROGRAM_UPDATE_DATE    DATE,
    X_RELEASED_FLAG    VARCHAR2,
    X_REQUESTED_QUANTITY    NUMBER,
    X_REQUEST_ID    NUMBER,
    X_RESERVABLE_FLAG    VARCHAR2,
    X_REVISION    VARCHAR2,
    X_SCHEDULE_DATE    DATE,
    X_SCHEDULE_LEVEL    NUMBER,
    X_SCHEDULE_STATUS_CODE    VARCHAR2,
    X_SEGMENT1    VARCHAR2,
    X_SEGMENT10    VARCHAR2,
    X_SEGMENT11    VARCHAR2,
    X_SEGMENT12    VARCHAR2,
    X_SEGMENT13    VARCHAR2,
    X_SEGMENT14    VARCHAR2,
    X_SEGMENT15    VARCHAR2,
    X_SEGMENT16    VARCHAR2,
    X_SEGMENT17    VARCHAR2,
    X_SEGMENT18    VARCHAR2,
    X_SEGMENT19    VARCHAR2,
    X_SEGMENT2    VARCHAR2,
    X_SEGMENT20    VARCHAR2,
    X_SEGMENT3    VARCHAR2,
    X_SEGMENT4    VARCHAR2,
    X_SEGMENT5    VARCHAR2,
    X_SEGMENT6    VARCHAR2,
    X_SEGMENT7    VARCHAR2,
    X_SEGMENT8    VARCHAR2,
    X_SEGMENT9    VARCHAR2,
    X_SERIAL_NUMBER    VARCHAR2,
    X_SHIPPED_QUANTITY    NUMBER,
    X_SUBINVENTORY    VARCHAR2,
    X_SUPPLY_SOURCE_HEADER_ID    NUMBER,
    X_SUPPLY_SOURCE_TYPE    NUMBER,
    X_TRANSACTABLE_FLAG    VARCHAR2,
    X_UPDATE_FLAG    VARCHAR2,
    X_WAREHOUSE_ID    NUMBER,
    X_WIP_COMPLETED_QUANTITY    NUMBER,
    X_WIP_RESERVED_QUANTITY    NUMBER,
    Result OUT VARCHAR2)IS

CURSOR C IS SELECT * FROM so_picking_line_details
WHERE rowid = X_rowid
FOR UPDATE NOWAIT;

Recinfo C%ROWTYPE;
record_changed exception;
record_deleted exception;
resource_busy  exception;

PRAGMA EXCEPTION_INIT (resource_busy, -54);

BEGIN

    OPEN C;
    FETCH C INTO Recinfo;
    if (C%NOTFOUND) then
        CLOSE C;

	    raise record_deleted;
        -- APP_EXCEPTION.Raise_Exception;
    end if;
    CLOSE C;

    if (
        ((Recinfo.ATTRIBUTE1 <> X_ATTRIBUTE1)
          AND NOT (Recinfo.ATTRIBUTE1 is NULL AND X_ATTRIBUTE1 is NULL)) OR
        ((Recinfo.ATTRIBUTE10 <> X_ATTRIBUTE10)
          AND NOT (Recinfo.ATTRIBUTE10 is NULL AND X_ATTRIBUTE10 is NULL)) OR
        ((Recinfo.ATTRIBUTE11 <> X_ATTRIBUTE11)
          AND NOT (Recinfo.ATTRIBUTE11 is NULL AND X_ATTRIBUTE11 is NULL)) OR
        ((Recinfo.ATTRIBUTE12 <> X_ATTRIBUTE12)
          AND NOT (Recinfo.ATTRIBUTE12 is NULL AND X_ATTRIBUTE12 is NULL)) OR
        ((Recinfo.ATTRIBUTE13 <> X_ATTRIBUTE13)
          AND NOT (Recinfo.ATTRIBUTE13 is NULL AND X_ATTRIBUTE13 is NULL)) OR
        ((Recinfo.ATTRIBUTE14 <> X_ATTRIBUTE14)
          AND NOT (Recinfo.ATTRIBUTE14 is NULL AND X_ATTRIBUTE14 is NULL)) OR
        ((Recinfo.ATTRIBUTE15 <> X_ATTRIBUTE15)
          AND NOT (Recinfo.ATTRIBUTE15 is NULL AND X_ATTRIBUTE15 is NULL)) OR
        ((Recinfo.ATTRIBUTE2 <> X_ATTRIBUTE2)
          AND NOT (Recinfo.ATTRIBUTE2 is NULL AND X_ATTRIBUTE2 is NULL)) OR
        ((Recinfo.ATTRIBUTE3 <> X_ATTRIBUTE3)
          AND NOT (Recinfo.ATTRIBUTE3 is NULL AND X_ATTRIBUTE3 is NULL)) OR
        ((Recinfo.ATTRIBUTE4 <> X_ATTRIBUTE4)
          AND NOT (Recinfo.ATTRIBUTE4 is NULL AND X_ATTRIBUTE4 is NULL)) OR
        ((Recinfo.ATTRIBUTE5 <> X_ATTRIBUTE5)
          AND NOT (Recinfo.ATTRIBUTE5 is NULL AND X_ATTRIBUTE5 is NULL)) OR
        ((Recinfo.ATTRIBUTE6 <> X_ATTRIBUTE6)
          AND NOT (Recinfo.ATTRIBUTE6 is NULL AND X_ATTRIBUTE6 is NULL)) OR
        ((Recinfo.ATTRIBUTE7 <> X_ATTRIBUTE7)
          AND NOT (Recinfo.ATTRIBUTE7 is NULL AND X_ATTRIBUTE7 is NULL)) OR
        ((Recinfo.ATTRIBUTE8 <> X_ATTRIBUTE8)
          AND NOT (Recinfo.ATTRIBUTE8 is NULL AND X_ATTRIBUTE8 is NULL)) OR
        ((Recinfo.ATTRIBUTE9 <> X_ATTRIBUTE9)
          AND NOT (Recinfo.ATTRIBUTE9 is NULL AND X_ATTRIBUTE9 is NULL)) OR
        ((Recinfo.AUTOSCHEDULED_FLAG <> X_AUTOSCHEDULED_FLAG)
          AND NOT (Recinfo.AUTOSCHEDULED_FLAG is NULL AND X_AUTOSCHEDULED_FLAG is NULL)) OR
        ((Recinfo.CONTEXT <> X_CONTEXT)
          AND NOT (Recinfo.CONTEXT is NULL AND X_CONTEXT is NULL)) OR
        ((Recinfo.CREATED_BY <> X_CREATED_BY)
          AND NOT (Recinfo.CREATED_BY is NULL AND X_CREATED_BY is NULL)) OR
        ((Recinfo.CREATION_DATE <> X_CREATION_DATE)
          AND NOT (Recinfo.CREATION_DATE is NULL AND X_CREATION_DATE is NULL)) OR
        ((Recinfo.CUSTOMER_REQUESTED_LOT_FLAG <> X_CUSTOMER_REQUESTED_LOT_FLAG)
          AND NOT (Recinfo.CUSTOMER_REQUESTED_LOT_FLAG is NULL AND X_CUSTOMER_REQUESTED_LOT_FLAG is NULL))
    ) then
        raise record_changed;
    end if;

    if (
        ((Recinfo.DELIVERY <> X_DELIVERY)
          AND NOT (Recinfo.DELIVERY is NULL AND X_DELIVERY is NULL)) OR
        ((Recinfo.DEMAND_CLASS_CODE <> X_DEMAND_CLASS_CODE)
          AND NOT (Recinfo.DEMAND_CLASS_CODE is NULL AND X_DEMAND_CLASS_CODE is NULL)) OR
        ((Recinfo.DEMAND_ID <> X_DEMAND_ID)
          AND NOT (Recinfo.DEMAND_ID is NULL AND X_DEMAND_ID is NULL)) OR
        ((Recinfo.DETAIL_TYPE_CODE <> X_DETAIL_TYPE_CODE)
          AND NOT (Recinfo.DETAIL_TYPE_CODE is NULL AND X_DETAIL_TYPE_CODE is NULL)) OR
        ((Recinfo.INVENTORY_LOCATION_ID <> X_INVENTORY_LOCATION_ID)
          AND NOT (Recinfo.INVENTORY_LOCATION_ID is NULL AND X_INVENTORY_LOCATION_ID is NULL)) OR
        ((Recinfo.INVENTORY_LOCATION_SEGMENTS <> X_INVENTORY_LOCATION_SEGMENTS)
          AND NOT (Recinfo.INVENTORY_LOCATION_SEGMENTS is NULL AND X_INVENTORY_LOCATION_SEGMENTS is NULL)) OR
        ((Recinfo.LAST_UPDATED_BY <> X_LAST_UPDATED_BY)
          AND NOT (Recinfo.LAST_UPDATED_BY is NULL AND X_LAST_UPDATED_BY is NULL)) OR
        ((Recinfo.LAST_UPDATE_DATE <> X_LAST_UPDATE_DATE)
          AND NOT (Recinfo.LAST_UPDATE_DATE is NULL AND X_LAST_UPDATE_DATE is NULL)) OR
        ((Recinfo.LAST_UPDATE_LOGIN <> X_LAST_UPDATE_LOGIN)
          AND NOT (Recinfo.LAST_UPDATE_LOGIN is NULL AND X_LAST_UPDATE_LOGIN is NULL)) OR
        ((Recinfo.LATEST_ACCEPTABLE_DATE <> X_LATEST_ACCEPTABLE_DATE)
          AND NOT (Recinfo.LATEST_ACCEPTABLE_DATE is NULL AND X_LATEST_ACCEPTABLE_DATE is NULL)) OR
        ((Recinfo.LOT_NUMBER <> X_LOT_NUMBER)
          AND NOT (Recinfo.LOT_NUMBER is NULL AND X_LOT_NUMBER is NULL)) OR
        ((Recinfo.PICKING_LINE_DETAIL_ID <> X_PICKING_LINE_DETAIL_ID)
          AND NOT (Recinfo.PICKING_LINE_DETAIL_ID is NULL AND X_PICKING_LINE_DETAIL_ID is NULL)) OR
        ((Recinfo.PICKING_LINE_ID <> X_PICKING_LINE_ID)
          AND NOT (Recinfo.PICKING_LINE_ID is NULL AND X_PICKING_LINE_ID is NULL)) OR
        ((Recinfo.PROGRAM_APPLICATION_ID <> X_PROGRAM_APPLICATION_ID)
          AND NOT (Recinfo.PROGRAM_APPLICATION_ID is NULL AND X_PROGRAM_APPLICATION_ID is NULL)) OR
        ((Recinfo.PROGRAM_ID <> X_PROGRAM_ID)
          AND NOT (Recinfo.PROGRAM_ID is NULL AND X_PROGRAM_ID is NULL)) OR
        ((Recinfo.PROGRAM_UPDATE_DATE <> X_PROGRAM_UPDATE_DATE)
          AND NOT (Recinfo.PROGRAM_UPDATE_DATE is NULL AND X_PROGRAM_UPDATE_DATE is NULL)) OR
        ((Recinfo.RELEASED_FLAG <> X_RELEASED_FLAG)
          AND NOT (Recinfo.RELEASED_FLAG is NULL AND X_RELEASED_FLAG is NULL)) OR
        ((Recinfo.REQUESTED_QUANTITY <> X_REQUESTED_QUANTITY)
          AND NOT (Recinfo.REQUESTED_QUANTITY is NULL AND X_REQUESTED_QUANTITY is NULL)) OR
        ((Recinfo.REQUEST_ID <> X_REQUEST_ID)
          AND NOT (Recinfo.REQUEST_ID is NULL AND X_REQUEST_ID is NULL)) OR
        ((Recinfo.RESERVABLE_FLAG <> X_RESERVABLE_FLAG)
          AND NOT (Recinfo.RESERVABLE_FLAG is NULL AND X_RESERVABLE_FLAG is NULL))
    ) then
        raise record_changed;
    end if;

    if (
        ((Recinfo.REVISION <> X_REVISION)
          AND NOT (Recinfo.REVISION is NULL AND X_REVISION is NULL)) OR
        ((Recinfo.SCHEDULE_DATE <> X_SCHEDULE_DATE)
          AND NOT (Recinfo.SCHEDULE_DATE is NULL AND X_SCHEDULE_DATE is NULL)) OR
        ((Recinfo.SCHEDULE_LEVEL <> X_SCHEDULE_LEVEL)
          AND NOT (Recinfo.SCHEDULE_LEVEL is NULL AND X_SCHEDULE_LEVEL is NULL)) OR
        ((Recinfo.SCHEDULE_STATUS_CODE <> X_SCHEDULE_STATUS_CODE)
          AND NOT (Recinfo.SCHEDULE_STATUS_CODE is NULL AND X_SCHEDULE_STATUS_CODE is NULL)) OR
        ((Recinfo.SEGMENT1 <> X_SEGMENT1)
          AND NOT (Recinfo.SEGMENT1 is NULL AND X_SEGMENT1 is NULL)) OR
        ((Recinfo.SEGMENT10 <> X_SEGMENT10)
          AND NOT (Recinfo.SEGMENT10 is NULL AND X_SEGMENT10 is NULL)) OR
        ((Recinfo.SEGMENT11 <> X_SEGMENT11)
          AND NOT (Recinfo.SEGMENT11 is NULL AND X_SEGMENT11 is NULL)) OR
        ((Recinfo.SEGMENT12 <> X_SEGMENT12)
          AND NOT (Recinfo.SEGMENT12 is NULL AND X_SEGMENT12 is NULL)) OR
        ((Recinfo.SEGMENT13 <> X_SEGMENT13)
          AND NOT (Recinfo.SEGMENT13 is NULL AND X_SEGMENT13 is NULL)) OR
        ((Recinfo.SEGMENT14 <> X_SEGMENT14)
          AND NOT (Recinfo.SEGMENT14 is NULL AND X_SEGMENT14 is NULL)) OR
        ((Recinfo.SEGMENT15 <> X_SEGMENT15)
          AND NOT (Recinfo.SEGMENT15 is NULL AND X_SEGMENT15 is NULL)) OR
        ((Recinfo.SEGMENT16 <> X_SEGMENT16)
          AND NOT (Recinfo.SEGMENT16 is NULL AND X_SEGMENT16 is NULL)) OR
        ((Recinfo.SEGMENT17 <> X_SEGMENT17)
          AND NOT (Recinfo.SEGMENT17 is NULL AND X_SEGMENT17 is NULL)) OR
        ((Recinfo.SEGMENT18 <> X_SEGMENT18)
          AND NOT (Recinfo.SEGMENT18 is NULL AND X_SEGMENT18 is NULL)) OR
        ((Recinfo.SEGMENT19 <> X_SEGMENT19)
          AND NOT (Recinfo.SEGMENT19 is NULL AND X_SEGMENT19 is NULL)) OR
        ((Recinfo.SEGMENT2 <> X_SEGMENT2)
          AND NOT (Recinfo.SEGMENT2 is NULL AND X_SEGMENT2 is NULL)) OR
        ((Recinfo.SEGMENT20 <> X_SEGMENT20)
          AND NOT (Recinfo.SEGMENT20 is NULL AND X_SEGMENT20 is NULL)) OR
        ((Recinfo.SEGMENT3 <> X_SEGMENT3)
          AND NOT (Recinfo.SEGMENT3 is NULL AND X_SEGMENT3 is NULL)) OR
        ((Recinfo.SEGMENT4 <> X_SEGMENT4)
          AND NOT (Recinfo.SEGMENT4 is NULL AND X_SEGMENT4 is NULL)) OR
        ((Recinfo.SEGMENT5 <> X_SEGMENT5)
          AND NOT (Recinfo.SEGMENT5 is NULL AND X_SEGMENT5 is NULL))
    ) then
        raise record_changed;
    end if;

    if (
        ((Recinfo.SEGMENT6 <> X_SEGMENT6)
          AND NOT (Recinfo.SEGMENT6 is NULL AND X_SEGMENT6 is NULL)) OR
        ((Recinfo.SEGMENT7 <> X_SEGMENT7)
          AND NOT (Recinfo.SEGMENT7 is NULL AND X_SEGMENT7 is NULL)) OR
        ((Recinfo.SEGMENT8 <> X_SEGMENT8)
          AND NOT (Recinfo.SEGMENT8 is NULL AND X_SEGMENT8 is NULL)) OR
        ((Recinfo.SEGMENT9 <> X_SEGMENT9)
          AND NOT (Recinfo.SEGMENT9 is NULL AND X_SEGMENT9 is NULL)) OR
        ((Recinfo.SERIAL_NUMBER <> X_SERIAL_NUMBER)
          AND NOT (Recinfo.SERIAL_NUMBER is NULL AND X_SERIAL_NUMBER is NULL)) OR
        ((Recinfo.SHIPPED_QUANTITY <> X_SHIPPED_QUANTITY)
          AND NOT (Recinfo.SHIPPED_QUANTITY is NULL AND X_SHIPPED_QUANTITY is NULL)) OR
        ((Recinfo.SUBINVENTORY <> X_SUBINVENTORY)
          AND NOT (Recinfo.SUBINVENTORY is NULL AND X_SUBINVENTORY is NULL)) OR
        ((Recinfo.SUPPLY_SOURCE_HEADER_ID <> X_SUPPLY_SOURCE_HEADER_ID)
          AND NOT (Recinfo.SUPPLY_SOURCE_HEADER_ID is NULL AND X_SUPPLY_SOURCE_HEADER_ID is NULL)) OR
        ((Recinfo.SUPPLY_SOURCE_TYPE <> X_SUPPLY_SOURCE_TYPE)
          AND NOT (Recinfo.SUPPLY_SOURCE_TYPE is NULL AND X_SUPPLY_SOURCE_TYPE is NULL)) OR
        ((Recinfo.TRANSACTABLE_FLAG <> X_TRANSACTABLE_FLAG)
          AND NOT (Recinfo.TRANSACTABLE_FLAG is NULL AND X_TRANSACTABLE_FLAG is NULL)) OR
        ((Recinfo.UPDATE_FLAG <> X_UPDATE_FLAG)
          AND NOT (Recinfo.UPDATE_FLAG is NULL AND X_UPDATE_FLAG is NULL)) OR
        ((Recinfo.WAREHOUSE_ID <> X_WAREHOUSE_ID)
          AND NOT (Recinfo.WAREHOUSE_ID is NULL AND X_WAREHOUSE_ID is NULL)) OR
        ((Recinfo.WIP_COMPLETED_QUANTITY <> X_WIP_COMPLETED_QUANTITY)
          AND NOT (Recinfo.WIP_COMPLETED_QUANTITY is NULL AND X_WIP_COMPLETED_QUANTITY is NULL)) OR
        ((Recinfo.WIP_RESERVED_QUANTITY <> X_WIP_RESERVED_QUANTITY)
          AND NOT (Recinfo.WIP_RESERVED_QUANTITY is NULL AND X_WIP_RESERVED_QUANTITY is NULL))
    ) then
        raise record_changed;
    end if;

    Result := 'SUCCESS';
exception
    when record_changed then
        Result := 'RECORD_CHANGED';
    when record_deleted then
        Result := 'RECORD_DELETED';
	when resource_busy then
		Result := 'RESOURCE_BUSY';
END Lock_Row;

PROCEDURE Update_Row(X_Rowid VARCHAR2,
    X_ATTRIBUTE1    VARCHAR2,
    X_ATTRIBUTE10    VARCHAR2,
    X_ATTRIBUTE11    VARCHAR2,
    X_ATTRIBUTE12    VARCHAR2,
    X_ATTRIBUTE13    VARCHAR2,
    X_ATTRIBUTE14    VARCHAR2,
    X_ATTRIBUTE15    VARCHAR2,
    X_ATTRIBUTE2    VARCHAR2,
    X_ATTRIBUTE3    VARCHAR2,
    X_ATTRIBUTE4    VARCHAR2,
    X_ATTRIBUTE5    VARCHAR2,
    X_ATTRIBUTE6    VARCHAR2,
    X_ATTRIBUTE7    VARCHAR2,
    X_ATTRIBUTE8    VARCHAR2,
    X_ATTRIBUTE9    VARCHAR2,
    X_AUTOSCHEDULED_FLAG    VARCHAR2,
    X_CONTEXT    VARCHAR2,
    X_CREATED_BY    NUMBER,
    X_CREATION_DATE    DATE,
    X_CUSTOMER_REQUESTED_LOT_FLAG    VARCHAR2,
    X_DELIVERY    NUMBER,
    X_DEMAND_CLASS_CODE    VARCHAR2,
    X_DEMAND_ID    NUMBER,
    X_DETAIL_TYPE_CODE    VARCHAR2,
    X_INVENTORY_LOCATION_ID    NUMBER,
    X_INVENTORY_LOCATION_SEGMENTS    VARCHAR2,
    X_LAST_UPDATED_BY    NUMBER,
    X_LAST_UPDATE_DATE    DATE,
    X_LAST_UPDATE_LOGIN    NUMBER,
    X_LATEST_ACCEPTABLE_DATE    DATE,
    X_LOT_NUMBER    VARCHAR2,
    X_PICKING_LINE_DETAIL_ID    NUMBER,
    X_PICKING_LINE_ID    NUMBER,
    X_PROGRAM_APPLICATION_ID    NUMBER,
    X_PROGRAM_ID    NUMBER,
    X_PROGRAM_UPDATE_DATE    DATE,
    X_RELEASED_FLAG    VARCHAR2,
    X_REQUESTED_QUANTITY    NUMBER,
    X_REQUEST_ID    NUMBER,
    X_RESERVABLE_FLAG    VARCHAR2,
    X_REVISION    VARCHAR2,
    X_SCHEDULE_DATE    DATE,
    X_SCHEDULE_LEVEL    NUMBER,
    X_SCHEDULE_STATUS_CODE    VARCHAR2,
    X_SEGMENT1    VARCHAR2,
    X_SEGMENT10    VARCHAR2,
    X_SEGMENT11    VARCHAR2,
    X_SEGMENT12    VARCHAR2,
    X_SEGMENT13    VARCHAR2,
    X_SEGMENT14    VARCHAR2,
    X_SEGMENT15    VARCHAR2,
    X_SEGMENT16    VARCHAR2,
    X_SEGMENT17    VARCHAR2,
    X_SEGMENT18    VARCHAR2,
    X_SEGMENT19    VARCHAR2,
    X_SEGMENT2    VARCHAR2,
    X_SEGMENT20    VARCHAR2,
    X_SEGMENT3    VARCHAR2,
    X_SEGMENT4    VARCHAR2,
    X_SEGMENT5    VARCHAR2,
    X_SEGMENT6    VARCHAR2,
    X_SEGMENT7    VARCHAR2,
    X_SEGMENT8    VARCHAR2,
    X_SEGMENT9    VARCHAR2,
    X_SERIAL_NUMBER    VARCHAR2,
    X_SHIPPED_QUANTITY    NUMBER,
    X_SUBINVENTORY    VARCHAR2,
    X_SUPPLY_SOURCE_HEADER_ID    NUMBER,
    X_SUPPLY_SOURCE_TYPE    NUMBER,
    X_TRANSACTABLE_FLAG    VARCHAR2,
    X_UPDATE_FLAG    VARCHAR2,
    X_WAREHOUSE_ID    NUMBER,
    X_WIP_COMPLETED_QUANTITY    NUMBER,
    X_WIP_RESERVED_QUANTITY    NUMBER
)IS

BEGIN
    UPDATE so_picking_line_details
    SET
    ATTRIBUTE1 = X_ATTRIBUTE1,
    ATTRIBUTE10 = X_ATTRIBUTE10,
    ATTRIBUTE11 = X_ATTRIBUTE11,
    ATTRIBUTE12 = X_ATTRIBUTE12,
    ATTRIBUTE13 = X_ATTRIBUTE13,
    ATTRIBUTE14 = X_ATTRIBUTE14,
    ATTRIBUTE15 = X_ATTRIBUTE15,
    ATTRIBUTE2 = X_ATTRIBUTE2,
    ATTRIBUTE3 = X_ATTRIBUTE3,
    ATTRIBUTE4 = X_ATTRIBUTE4,
    ATTRIBUTE5 = X_ATTRIBUTE5,
    ATTRIBUTE6 = X_ATTRIBUTE6,
    ATTRIBUTE7 = X_ATTRIBUTE7,
    ATTRIBUTE8 = X_ATTRIBUTE8,
    ATTRIBUTE9 = X_ATTRIBUTE9,
    AUTOSCHEDULED_FLAG = X_AUTOSCHEDULED_FLAG,
    CONTEXT = X_CONTEXT,
    CREATED_BY = X_CREATED_BY,
    CREATION_DATE = X_CREATION_DATE,
    CUSTOMER_REQUESTED_LOT_FLAG = X_CUSTOMER_REQUESTED_LOT_FLAG,
    DELIVERY = X_DELIVERY,
    DEMAND_CLASS_CODE = X_DEMAND_CLASS_CODE,
    DEMAND_ID = X_DEMAND_ID,
    DETAIL_TYPE_CODE = X_DETAIL_TYPE_CODE,
    INVENTORY_LOCATION_ID = X_INVENTORY_LOCATION_ID,
    INVENTORY_LOCATION_SEGMENTS = X_INVENTORY_LOCATION_SEGMENTS,
    LAST_UPDATED_BY = X_LAST_UPDATED_BY,
    LAST_UPDATE_DATE = X_LAST_UPDATE_DATE,
    LAST_UPDATE_LOGIN = X_LAST_UPDATE_LOGIN,
    LATEST_ACCEPTABLE_DATE = X_LATEST_ACCEPTABLE_DATE,
    LOT_NUMBER = X_LOT_NUMBER,
    PICKING_LINE_DETAIL_ID = X_PICKING_LINE_DETAIL_ID,
    PICKING_LINE_ID = X_PICKING_LINE_ID,
    PROGRAM_APPLICATION_ID = X_PROGRAM_APPLICATION_ID,
    PROGRAM_ID = X_PROGRAM_ID,
    PROGRAM_UPDATE_DATE = X_PROGRAM_UPDATE_DATE,
    RELEASED_FLAG = X_RELEASED_FLAG,
    REQUESTED_QUANTITY = X_REQUESTED_QUANTITY,
    REQUEST_ID = X_REQUEST_ID,
    RESERVABLE_FLAG = X_RESERVABLE_FLAG,
    REVISION = X_REVISION,
    SCHEDULE_DATE = X_SCHEDULE_DATE,
    SCHEDULE_LEVEL = X_SCHEDULE_LEVEL,
    SCHEDULE_STATUS_CODE = X_SCHEDULE_STATUS_CODE,
    SEGMENT1 = X_SEGMENT1,
    SEGMENT10 = X_SEGMENT10,
    SEGMENT11 = X_SEGMENT11,
    SEGMENT12 = X_SEGMENT12,
    SEGMENT13 = X_SEGMENT13,
    SEGMENT14 = X_SEGMENT14,
    SEGMENT15 = X_SEGMENT15,
    SEGMENT16 = X_SEGMENT16,
    SEGMENT17 = X_SEGMENT17,
    SEGMENT18 = X_SEGMENT18,
    SEGMENT19 = X_SEGMENT19,
    SEGMENT2 = X_SEGMENT2,
    SEGMENT20 = X_SEGMENT20,
    SEGMENT3 = X_SEGMENT3,
    SEGMENT4 = X_SEGMENT4,
    SEGMENT5 = X_SEGMENT5,
    SEGMENT6 = X_SEGMENT6,
    SEGMENT7 = X_SEGMENT7,
    SEGMENT8 = X_SEGMENT8,
    SEGMENT9 = X_SEGMENT9,
    SERIAL_NUMBER = X_SERIAL_NUMBER,
    SHIPPED_QUANTITY = X_SHIPPED_QUANTITY,
    SUBINVENTORY = X_SUBINVENTORY,
    SUPPLY_SOURCE_HEADER_ID = X_SUPPLY_SOURCE_HEADER_ID,
    SUPPLY_SOURCE_TYPE = X_SUPPLY_SOURCE_TYPE,
    TRANSACTABLE_FLAG = X_TRANSACTABLE_FLAG,
    UPDATE_FLAG = X_UPDATE_FLAG,
    WAREHOUSE_ID = X_WAREHOUSE_ID,
    WIP_COMPLETED_QUANTITY = X_WIP_COMPLETED_QUANTITY,
    WIP_RESERVED_QUANTITY = X_WIP_RESERVED_QUANTITY
    WHERE ROWID = X_Rowid;

    IF (SQL%NOTFOUND) then
        Raise NO_DATA_FOUND;
    end if;
END Update_Row;

PROCEDURE Delete_Row(X_Rowid VARCHAR2)
    IS

BEGIN
    DELETE FROM so_picking_line_details
    WHERE ROWID = X_Rowid;

    IF (SQL%NOTFOUND) then
        Raise NO_DATA_FOUND;
    end if;
END Delete_Row;

END OE_SO_PLD_TABLE;

/
