--------------------------------------------------------
--  DDL for Package Body IEX_LITIGATIONS_PKG
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE PACKAGE BODY "APPS"."IEX_LITIGATIONS_PKG" as
/* $Header: iextltgb.pls 120.1 2007/12/20 09:57:11 gnramasa ship $ */
-- Start of Comments
-- Package name     : IEX_LITIGATIONS_PKG
-- Purpose          :
-- History          :
-- NOTE             :
-- End of Comments


G_PKG_NAME CONSTANT VARCHAR2(30):= 'IEX_LITIGATIONS_PKG';
G_FILE_NAME CONSTANT VARCHAR2(12) := 'iextltgb.pls';

PG_DEBUG NUMBER(2) := TO_NUMBER(NVL(FND_PROFILE.value('IEX_DEBUG_LEVEL'), '20'));

PROCEDURE Insert_Row(
          px_LITIGATION_ID   IN OUT NOCOPY NUMBER
         ,p_DELINQUENCY_ID    NUMBER
         ,p_PARTY_ID    NUMBER
         ,p_UNPAID_REASON_CODE    VARCHAR2
         ,p_JUDGEMENT_DATE    DATE
         ,p_DISPOSITION_CODE    VARCHAR2
         ,p_REQUEST_ID    NUMBER
         ,p_PROGRAM_APPLICATION_ID    NUMBER
         ,p_PROGRAM_ID    NUMBER
         ,p_PROGRAM_UPDATE_DATE    DATE
         ,p_ATTRIBUTE_CATEGORY    VARCHAR2
         ,p_ATTRIBUTE1    VARCHAR2
         ,p_ATTRIBUTE2    VARCHAR2
         ,p_ATTRIBUTE3    VARCHAR2
         ,p_ATTRIBUTE4    VARCHAR2
         ,p_ATTRIBUTE5    VARCHAR2
         ,p_ATTRIBUTE6    VARCHAR2
         ,p_ATTRIBUTE7    VARCHAR2
         ,p_ATTRIBUTE8    VARCHAR2
         ,p_ATTRIBUTE9    VARCHAR2
         ,p_ATTRIBUTE10    VARCHAR2
         ,p_ATTRIBUTE11    VARCHAR2
         ,p_ATTRIBUTE12    VARCHAR2
         ,p_ATTRIBUTE13    VARCHAR2
         ,p_ATTRIBUTE14    VARCHAR2
         ,p_ATTRIBUTE15    VARCHAR2
         ,p_CREATED_BY    NUMBER
         ,p_CREATION_DATE    DATE
         ,p_LAST_UPDATED_BY    NUMBER
         ,p_LAST_UPDATE_DATE    DATE
         ,p_LAST_UPDATE_LOGIN    NUMBER
         ,p_CREDIT_HOLD_REQUEST_FLAG    VARCHAR2
         ,p_CREDIT_HOLD_APPROVED_FLAG    VARCHAR2
         ,p_SERVICE_HOLD_REQUEST_FLAG    VARCHAR2
         ,p_SERVICE_HOLD_APPROVED_FLAG    VARCHAR2
         ,p_SUGGESTION_APPROVED_FLAG    VARCHAR2
	 ,p_CUST_ACCOUNT_ID         NUMBER
	 ,p_CUSTOMER_SITE_USE_ID    NUMBER
	 ,p_ORG_ID                  NUMBER
	 ,p_CONTRACT_ID             NUMBER
	 ,p_CONTRACT_NUMBER         VARCHAR2)

 IS
   CURSOR C2 IS SELECT IEX_LITIGATIONS_S.nextval FROM sys.dual;
BEGIN
   If (px_LITIGATION_ID IS NULL) OR (px_LITIGATION_ID = FND_API.G_MISS_NUM) then
       OPEN C2;
       FETCH C2 INTO px_LITIGATION_ID;
       CLOSE C2;
   End If;
   INSERT INTO IEX_LITIGATIONS(
           LITIGATION_ID
          ,DELINQUENCY_ID
          ,PARTY_ID
          ,UNPAID_REASON_CODE
          ,JUDGEMENT_DATE
          ,DISPOSITION_CODE
          ,REQUEST_ID
          ,PROGRAM_APPLICATION_ID
          ,PROGRAM_ID
          ,PROGRAM_UPDATE_DATE
          ,ATTRIBUTE_CATEGORY
          ,ATTRIBUTE1
          ,ATTRIBUTE2
          ,ATTRIBUTE3
          ,ATTRIBUTE4
          ,ATTRIBUTE5
          ,ATTRIBUTE6
          ,ATTRIBUTE7
          ,ATTRIBUTE8
          ,ATTRIBUTE9
          ,ATTRIBUTE10
          ,ATTRIBUTE11
          ,ATTRIBUTE12
          ,ATTRIBUTE13
          ,ATTRIBUTE14
          ,ATTRIBUTE15
          ,CREATED_BY
          ,CREATION_DATE
          ,LAST_UPDATED_BY
          ,LAST_UPDATE_DATE
          ,LAST_UPDATE_LOGIN
          ,CREDIT_HOLD_REQUEST_FLAG
          ,CREDIT_HOLD_APPROVED_FLAG
          ,SERVICE_HOLD_REQUEST_FLAG
          ,SERVICE_HOLD_APPROVED_FLAG
          ,SUGGESTION_APPROVED_FLAG
	  ,CUST_ACCOUNT_ID
	  ,CUSTOMER_SITE_USE_ID
	  ,ORG_ID
	  ,CONTRACT_ID
	  ,CONTRACT_NUMBER
          ) VALUES (
           px_LITIGATION_ID
          ,decode( p_DELINQUENCY_ID, FND_API.G_MISS_NUM, NULL, p_DELINQUENCY_ID)
          ,decode( p_PARTY_ID, FND_API.G_MISS_NUM, NULL, p_PARTY_ID)
          ,decode( p_UNPAID_REASON_CODE, FND_API.G_MISS_CHAR, NULL, p_UNPAID_REASON_CODE)
          ,decode( p_JUDGEMENT_DATE, FND_API.G_MISS_DATE, TO_DATE(NULL), p_JUDGEMENT_DATE)
          ,decode( p_DISPOSITION_CODE, FND_API.G_MISS_CHAR, NULL, p_DISPOSITION_CODE)
          ,decode( p_REQUEST_ID, FND_API.G_MISS_NUM, NULL, p_REQUEST_ID)
          ,decode( p_PROGRAM_APPLICATION_ID, FND_API.G_MISS_NUM, NULL, p_PROGRAM_APPLICATION_ID)
          ,decode( p_PROGRAM_ID, FND_API.G_MISS_NUM, NULL, p_PROGRAM_ID)
          ,decode( p_PROGRAM_UPDATE_DATE, FND_API.G_MISS_DATE, TO_DATE(NULL), p_PROGRAM_UPDATE_DATE)
          ,decode( p_ATTRIBUTE_CATEGORY, FND_API.G_MISS_CHAR, NULL, p_ATTRIBUTE_CATEGORY)
          ,decode( p_ATTRIBUTE1, FND_API.G_MISS_CHAR, NULL, p_ATTRIBUTE1)
          ,decode( p_ATTRIBUTE2, FND_API.G_MISS_CHAR, NULL, p_ATTRIBUTE2)
          ,decode( p_ATTRIBUTE3, FND_API.G_MISS_CHAR, NULL, p_ATTRIBUTE3)
          ,decode( p_ATTRIBUTE4, FND_API.G_MISS_CHAR, NULL, p_ATTRIBUTE4)
          ,decode( p_ATTRIBUTE5, FND_API.G_MISS_CHAR, NULL, p_ATTRIBUTE5)
          ,decode( p_ATTRIBUTE6, FND_API.G_MISS_CHAR, NULL, p_ATTRIBUTE6)
          ,decode( p_ATTRIBUTE7, FND_API.G_MISS_CHAR, NULL, p_ATTRIBUTE7)
          ,decode( p_ATTRIBUTE8, FND_API.G_MISS_CHAR, NULL, p_ATTRIBUTE8)
          ,decode( p_ATTRIBUTE9, FND_API.G_MISS_CHAR, NULL, p_ATTRIBUTE9)
          ,decode( p_ATTRIBUTE10, FND_API.G_MISS_CHAR, NULL, p_ATTRIBUTE10)
          ,decode( p_ATTRIBUTE11, FND_API.G_MISS_CHAR, NULL, p_ATTRIBUTE11)
          ,decode( p_ATTRIBUTE12, FND_API.G_MISS_CHAR, NULL, p_ATTRIBUTE12)
          ,decode( p_ATTRIBUTE13, FND_API.G_MISS_CHAR, NULL, p_ATTRIBUTE13)
          ,decode( p_ATTRIBUTE14, FND_API.G_MISS_CHAR, NULL, p_ATTRIBUTE14)
          ,decode( p_ATTRIBUTE15, FND_API.G_MISS_CHAR, NULL, p_ATTRIBUTE15)
          ,decode( p_CREATED_BY, FND_API.G_MISS_NUM, NULL, p_CREATED_BY)
          ,decode( p_CREATION_DATE, FND_API.G_MISS_DATE, TO_DATE(NULL), p_CREATION_DATE)
          ,decode( p_LAST_UPDATED_BY, FND_API.G_MISS_NUM, NULL, p_LAST_UPDATED_BY)
          ,decode( p_LAST_UPDATE_DATE, FND_API.G_MISS_DATE, TO_DATE(NULL), p_LAST_UPDATE_DATE)
          ,decode( p_LAST_UPDATE_LOGIN, FND_API.G_MISS_NUM, NULL, p_LAST_UPDATE_LOGIN)
          ,decode( p_CREDIT_HOLD_REQUEST_FLAG, FND_API.G_MISS_CHAR, NULL, p_CREDIT_HOLD_REQUEST_FLAG)
          ,decode( p_CREDIT_HOLD_APPROVED_FLAG, FND_API.G_MISS_CHAR, NULL, p_CREDIT_HOLD_APPROVED_FLAG)
          ,decode( p_SERVICE_HOLD_REQUEST_FLAG, FND_API.G_MISS_CHAR, NULL, p_SERVICE_HOLD_REQUEST_FLAG)
          ,decode( p_SERVICE_HOLD_APPROVED_FLAG, FND_API.G_MISS_CHAR, NULL, p_SERVICE_HOLD_APPROVED_FLAG)
          ,decode( p_SUGGESTION_APPROVED_FLAG, FND_API.G_MISS_CHAR, NULL, p_SUGGESTION_APPROVED_FLAG)
	  ,decode( p_CUST_ACCOUNT_ID, FND_API.G_MISS_NUM, NULL, p_CUST_ACCOUNT_ID)
	  ,decode( p_CUSTOMER_SITE_USE_ID, FND_API.G_MISS_NUM, NULL, p_CUSTOMER_SITE_USE_ID)
	  ,decode( p_ORG_ID, FND_API.G_MISS_NUM, NULL, p_ORG_ID)
	  ,decode( p_CONTRACT_ID , FND_API.G_MISS_NUM, NULL, p_CONTRACT_ID)
	  ,decode( p_CONTRACT_NUMBER, FND_API.G_MISS_CHAR, NULL, p_CONTRACT_NUMBER));
End Insert_Row;

PROCEDURE Update_Row(
          p_LITIGATION_ID    NUMBER
         ,p_DELINQUENCY_ID    NUMBER
         ,p_PARTY_ID    NUMBER
         ,p_UNPAID_REASON_CODE    VARCHAR2
         ,p_JUDGEMENT_DATE    DATE
         ,p_DISPOSITION_CODE    VARCHAR2
         ,p_REQUEST_ID    NUMBER
         ,p_PROGRAM_APPLICATION_ID    NUMBER
         ,p_PROGRAM_ID    NUMBER
         ,p_PROGRAM_UPDATE_DATE    DATE
         ,p_ATTRIBUTE_CATEGORY    VARCHAR2
         ,p_ATTRIBUTE1    VARCHAR2
         ,p_ATTRIBUTE2    VARCHAR2
         ,p_ATTRIBUTE3    VARCHAR2
         ,p_ATTRIBUTE4    VARCHAR2
         ,p_ATTRIBUTE5    VARCHAR2
         ,p_ATTRIBUTE6    VARCHAR2
         ,p_ATTRIBUTE7    VARCHAR2
         ,p_ATTRIBUTE8    VARCHAR2
         ,p_ATTRIBUTE9    VARCHAR2
         ,p_ATTRIBUTE10    VARCHAR2
         ,p_ATTRIBUTE11    VARCHAR2
         ,p_ATTRIBUTE12    VARCHAR2
         ,p_ATTRIBUTE13    VARCHAR2
         ,p_ATTRIBUTE14    VARCHAR2
         ,p_ATTRIBUTE15    VARCHAR2
         ,p_CREATED_BY    NUMBER
         ,p_CREATION_DATE    DATE
         ,p_LAST_UPDATED_BY    NUMBER
         ,p_LAST_UPDATE_DATE    DATE
         ,p_LAST_UPDATE_LOGIN    NUMBER
         ,p_CREDIT_HOLD_REQUEST_FLAG    VARCHAR2
         ,p_CREDIT_HOLD_APPROVED_FLAG    VARCHAR2
         ,p_SERVICE_HOLD_REQUEST_FLAG    VARCHAR2
         ,p_SERVICE_HOLD_APPROVED_FLAG    VARCHAR2
         ,p_SUGGESTION_APPROVED_FLAG    VARCHAR2
	 ,p_CUST_ACCOUNT_ID         NUMBER
	 ,p_CUSTOMER_SITE_USE_ID    NUMBER
	 ,p_ORG_ID                  NUMBER
	 ,p_CONTRACT_ID             NUMBER
	 ,p_CONTRACT_NUMBER         VARCHAR2)

IS
BEGIN
    Update IEX_LITIGATIONS
    SET
        DELINQUENCY_ID = decode( p_DELINQUENCY_ID, FND_API.G_MISS_NUM, DELINQUENCY_ID, p_DELINQUENCY_ID)
       ,PARTY_ID = decode( p_PARTY_ID, FND_API.G_MISS_NUM, PARTY_ID, p_PARTY_ID)
       ,UNPAID_REASON_CODE = decode( p_UNPAID_REASON_CODE, FND_API.G_MISS_CHAR, UNPAID_REASON_CODE, p_UNPAID_REASON_CODE)
       ,JUDGEMENT_DATE = decode( p_JUDGEMENT_DATE, FND_API.G_MISS_DATE, JUDGEMENT_DATE, p_JUDGEMENT_DATE)
       ,DISPOSITION_CODE = decode( p_DISPOSITION_CODE, FND_API.G_MISS_CHAR, DISPOSITION_CODE, p_DISPOSITION_CODE)
       ,REQUEST_ID = decode( p_REQUEST_ID, FND_API.G_MISS_NUM, REQUEST_ID, p_REQUEST_ID)
       ,PROGRAM_APPLICATION_ID = decode( p_PROGRAM_APPLICATION_ID, FND_API.G_MISS_NUM, PROGRAM_APPLICATION_ID, p_PROGRAM_APPLICATION_ID)
       ,PROGRAM_ID = decode( p_PROGRAM_ID, FND_API.G_MISS_NUM, PROGRAM_ID, p_PROGRAM_ID)
       ,PROGRAM_UPDATE_DATE = decode( p_PROGRAM_UPDATE_DATE, FND_API.G_MISS_DATE, PROGRAM_UPDATE_DATE, p_PROGRAM_UPDATE_DATE)
       ,ATTRIBUTE_CATEGORY = decode( p_ATTRIBUTE_CATEGORY, FND_API.G_MISS_CHAR, ATTRIBUTE_CATEGORY, p_ATTRIBUTE_CATEGORY)
       ,ATTRIBUTE1 = decode( p_ATTRIBUTE1, FND_API.G_MISS_CHAR, ATTRIBUTE1, p_ATTRIBUTE1)
       ,ATTRIBUTE2 = decode( p_ATTRIBUTE2, FND_API.G_MISS_CHAR, ATTRIBUTE2, p_ATTRIBUTE2)
       ,ATTRIBUTE3 = decode( p_ATTRIBUTE3, FND_API.G_MISS_CHAR, ATTRIBUTE3, p_ATTRIBUTE3)
       ,ATTRIBUTE4 = decode( p_ATTRIBUTE4, FND_API.G_MISS_CHAR, ATTRIBUTE4, p_ATTRIBUTE4)
       ,ATTRIBUTE5 = decode( p_ATTRIBUTE5, FND_API.G_MISS_CHAR, ATTRIBUTE5, p_ATTRIBUTE5)
       ,ATTRIBUTE6 = decode( p_ATTRIBUTE6, FND_API.G_MISS_CHAR, ATTRIBUTE6, p_ATTRIBUTE6)
       ,ATTRIBUTE7 = decode( p_ATTRIBUTE7, FND_API.G_MISS_CHAR, ATTRIBUTE7, p_ATTRIBUTE7)
       ,ATTRIBUTE8 = decode( p_ATTRIBUTE8, FND_API.G_MISS_CHAR, ATTRIBUTE8, p_ATTRIBUTE8)
       ,ATTRIBUTE9 = decode( p_ATTRIBUTE9, FND_API.G_MISS_CHAR, ATTRIBUTE9, p_ATTRIBUTE9)
       ,ATTRIBUTE10 = decode( p_ATTRIBUTE10, FND_API.G_MISS_CHAR, ATTRIBUTE10, p_ATTRIBUTE10)
       ,ATTRIBUTE11 = decode( p_ATTRIBUTE11, FND_API.G_MISS_CHAR, ATTRIBUTE11, p_ATTRIBUTE11)
       ,ATTRIBUTE12 = decode( p_ATTRIBUTE12, FND_API.G_MISS_CHAR, ATTRIBUTE12, p_ATTRIBUTE12)
       ,ATTRIBUTE13 = decode( p_ATTRIBUTE13, FND_API.G_MISS_CHAR, ATTRIBUTE13, p_ATTRIBUTE13)
       ,ATTRIBUTE14 = decode( p_ATTRIBUTE14, FND_API.G_MISS_CHAR, ATTRIBUTE14, p_ATTRIBUTE14)
       ,ATTRIBUTE15 = decode( p_ATTRIBUTE15, FND_API.G_MISS_CHAR, ATTRIBUTE15, p_ATTRIBUTE15)
       ,CREATED_BY = decode( p_CREATED_BY, FND_API.G_MISS_NUM, CREATED_BY, p_CREATED_BY)
       ,CREATION_DATE = decode( p_CREATION_DATE, FND_API.G_MISS_DATE, CREATION_DATE, p_CREATION_DATE)
       ,LAST_UPDATED_BY = decode( p_LAST_UPDATED_BY, FND_API.G_MISS_NUM, LAST_UPDATED_BY, p_LAST_UPDATED_BY)
       ,LAST_UPDATE_DATE = decode( p_LAST_UPDATE_DATE, FND_API.G_MISS_DATE, LAST_UPDATE_DATE, p_LAST_UPDATE_DATE)
       ,LAST_UPDATE_LOGIN = decode( p_LAST_UPDATE_LOGIN, FND_API.G_MISS_NUM, LAST_UPDATE_LOGIN, p_LAST_UPDATE_LOGIN)
       ,CREDIT_HOLD_REQUEST_FLAG = decode( p_CREDIT_HOLD_REQUEST_FLAG, FND_API.G_MISS_CHAR, CREDIT_HOLD_REQUEST_FLAG, p_CREDIT_HOLD_REQUEST_FLAG)
       ,CREDIT_HOLD_APPROVED_FLAG = decode( p_CREDIT_HOLD_APPROVED_FLAG, FND_API.G_MISS_CHAR, CREDIT_HOLD_APPROVED_FLAG, p_CREDIT_HOLD_APPROVED_FLAG)
       ,SERVICE_HOLD_REQUEST_FLAG = decode( p_SERVICE_HOLD_REQUEST_FLAG, FND_API.G_MISS_CHAR, SERVICE_HOLD_REQUEST_FLAG, p_SERVICE_HOLD_REQUEST_FLAG)
       ,SERVICE_HOLD_APPROVED_FLAG = decode( p_SERVICE_HOLD_APPROVED_FLAG, FND_API.G_MISS_CHAR, SERVICE_HOLD_APPROVED_FLAG, p_SERVICE_HOLD_APPROVED_FLAG)
       ,SUGGESTION_APPROVED_FLAG = decode( p_SUGGESTION_APPROVED_FLAG, FND_API.G_MISS_CHAR, SUGGESTION_APPROVED_FLAG, p_SUGGESTION_APPROVED_FLAG)
       ,CUST_ACCOUNT_ID = decode( p_CUST_ACCOUNT_ID, FND_API.G_MISS_NUM, CUST_ACCOUNT_ID, p_CUST_ACCOUNT_ID)
       ,CUSTOMER_SITE_USE_ID = decode( p_CUSTOMER_SITE_USE_ID, FND_API.G_MISS_NUM, CUSTOMER_SITE_USE_ID, p_CUSTOMER_SITE_USE_ID)
       ,ORG_ID = decode( p_ORG_ID, FND_API.G_MISS_NUM, ORG_ID, p_ORG_ID)
       ,CONTRACT_ID = decode( p_CONTRACT_ID , FND_API.G_MISS_NUM, CONTRACT_ID, p_CONTRACT_ID)
       ,CONTRACT_NUMBER = decode( p_CONTRACT_NUMBER, FND_API.G_MISS_CHAR, CONTRACT_NUMBER, p_CONTRACT_NUMBER)
    where LITIGATION_ID = p_LITIGATION_ID;

    If (SQL%NOTFOUND) then
        RAISE NO_DATA_FOUND;
    End If;
END Update_Row;

PROCEDURE Delete_Row(
    p_LITIGATION_ID  NUMBER)
IS
BEGIN
    DELETE FROM IEX_LITIGATIONS
    WHERE LITIGATION_ID = p_LITIGATION_ID;
    If (SQL%NOTFOUND) then
        RAISE NO_DATA_FOUND;
    End If;
END Delete_Row;

PROCEDURE Lock_Row(
          p_LITIGATION_ID    NUMBER
         ,p_DELINQUENCY_ID    NUMBER
         ,p_PARTY_ID    NUMBER
         ,p_UNPAID_REASON_CODE    VARCHAR2
         ,p_JUDGEMENT_DATE    DATE
         ,p_DISPOSITION_CODE    VARCHAR2
         ,p_REQUEST_ID    NUMBER
         ,p_PROGRAM_APPLICATION_ID    NUMBER
         ,p_PROGRAM_ID    NUMBER
         ,p_PROGRAM_UPDATE_DATE    DATE
         ,p_ATTRIBUTE_CATEGORY    VARCHAR2
         ,p_ATTRIBUTE1    VARCHAR2
         ,p_ATTRIBUTE2    VARCHAR2
         ,p_ATTRIBUTE3    VARCHAR2
         ,p_ATTRIBUTE4    VARCHAR2
         ,p_ATTRIBUTE5    VARCHAR2
         ,p_ATTRIBUTE6    VARCHAR2
         ,p_ATTRIBUTE7    VARCHAR2
         ,p_ATTRIBUTE8    VARCHAR2
         ,p_ATTRIBUTE9    VARCHAR2
         ,p_ATTRIBUTE10    VARCHAR2
         ,p_ATTRIBUTE11    VARCHAR2
         ,p_ATTRIBUTE12    VARCHAR2
         ,p_ATTRIBUTE13    VARCHAR2
         ,p_ATTRIBUTE14    VARCHAR2
         ,p_ATTRIBUTE15    VARCHAR2
         ,p_CREATED_BY    NUMBER
         ,p_CREATION_DATE    DATE
         ,p_LAST_UPDATED_BY    NUMBER
         ,p_LAST_UPDATE_DATE    DATE
         ,p_LAST_UPDATE_LOGIN    NUMBER
         ,p_CREDIT_HOLD_REQUEST_FLAG    VARCHAR2
         ,p_CREDIT_HOLD_APPROVED_FLAG    VARCHAR2
         ,p_SERVICE_HOLD_REQUEST_FLAG    VARCHAR2
         ,p_SERVICE_HOLD_APPROVED_FLAG    VARCHAR2
         ,p_SUGGESTION_APPROVED_FLAG    VARCHAR2)

 IS
   CURSOR C IS
       SELECT *
       FROM IEX_LITIGATIONS
       WHERE LITIGATION_ID =  p_LITIGATION_ID
       FOR UPDATE of LITIGATION_ID NOWAIT;
   Recinfo C%ROWTYPE;
BEGIN
    OPEN C;
    FETCH C INTO Recinfo;
    If (C%NOTFOUND) then
        CLOSE C;
        FND_MESSAGE.SET_NAME('FND', 'FORM_RECORD_DELETED');
        APP_EXCEPTION.RAISE_EXCEPTION;
    End If;
    CLOSE C;
    if (
           (      Recinfo.LITIGATION_ID = p_LITIGATION_ID)
       AND (    ( Recinfo.DELINQUENCY_ID = p_DELINQUENCY_ID)
            OR (    ( Recinfo.DELINQUENCY_ID IS NULL )
                AND (  p_DELINQUENCY_ID IS NULL )))
       AND (    ( Recinfo.PARTY_ID = p_PARTY_ID)
            OR (    ( Recinfo.PARTY_ID IS NULL )
                AND (  p_PARTY_ID IS NULL )))
       AND (    ( Recinfo.UNPAID_REASON_CODE = p_UNPAID_REASON_CODE)
            OR (    ( Recinfo.UNPAID_REASON_CODE IS NULL )
                AND (  p_UNPAID_REASON_CODE IS NULL )))
       AND (    ( Recinfo.JUDGEMENT_DATE = p_JUDGEMENT_DATE)
            OR (    ( Recinfo.JUDGEMENT_DATE IS NULL )
                AND (  p_JUDGEMENT_DATE IS NULL )))
       AND (    ( Recinfo.DISPOSITION_CODE = p_DISPOSITION_CODE)
            OR (    ( Recinfo.DISPOSITION_CODE IS NULL )
                AND (  p_DISPOSITION_CODE IS NULL )))
       AND (    ( Recinfo.REQUEST_ID = p_REQUEST_ID)
            OR (    ( Recinfo.REQUEST_ID IS NULL )
                AND (  p_REQUEST_ID IS NULL )))
       AND (    ( Recinfo.PROGRAM_APPLICATION_ID = p_PROGRAM_APPLICATION_ID)
            OR (    ( Recinfo.PROGRAM_APPLICATION_ID IS NULL )
                AND (  p_PROGRAM_APPLICATION_ID IS NULL )))
       AND (    ( Recinfo.PROGRAM_ID = p_PROGRAM_ID)
            OR (    ( Recinfo.PROGRAM_ID IS NULL )
                AND (  p_PROGRAM_ID IS NULL )))
       AND (    ( Recinfo.PROGRAM_UPDATE_DATE = p_PROGRAM_UPDATE_DATE)
            OR (    ( Recinfo.PROGRAM_UPDATE_DATE IS NULL )
                AND (  p_PROGRAM_UPDATE_DATE IS NULL )))
       AND (    ( Recinfo.ATTRIBUTE_CATEGORY = p_ATTRIBUTE_CATEGORY)
            OR (    ( Recinfo.ATTRIBUTE_CATEGORY IS NULL )
                AND (  p_ATTRIBUTE_CATEGORY IS NULL )))
       AND (    ( Recinfo.ATTRIBUTE1 = p_ATTRIBUTE1)
            OR (    ( Recinfo.ATTRIBUTE1 IS NULL )
                AND (  p_ATTRIBUTE1 IS NULL )))
       AND (    ( Recinfo.ATTRIBUTE2 = p_ATTRIBUTE2)
            OR (    ( Recinfo.ATTRIBUTE2 IS NULL )
                AND (  p_ATTRIBUTE2 IS NULL )))
       AND (    ( Recinfo.ATTRIBUTE3 = p_ATTRIBUTE3)
            OR (    ( Recinfo.ATTRIBUTE3 IS NULL )
                AND (  p_ATTRIBUTE3 IS NULL )))
       AND (    ( Recinfo.ATTRIBUTE4 = p_ATTRIBUTE4)
            OR (    ( Recinfo.ATTRIBUTE4 IS NULL )
                AND (  p_ATTRIBUTE4 IS NULL )))
       AND (    ( Recinfo.ATTRIBUTE5 = p_ATTRIBUTE5)
            OR (    ( Recinfo.ATTRIBUTE5 IS NULL )
                AND (  p_ATTRIBUTE5 IS NULL )))
       AND (    ( Recinfo.ATTRIBUTE6 = p_ATTRIBUTE6)
            OR (    ( Recinfo.ATTRIBUTE6 IS NULL )
                AND (  p_ATTRIBUTE6 IS NULL )))
       AND (    ( Recinfo.ATTRIBUTE7 = p_ATTRIBUTE7)
            OR (    ( Recinfo.ATTRIBUTE7 IS NULL )
                AND (  p_ATTRIBUTE7 IS NULL )))
       AND (    ( Recinfo.ATTRIBUTE8 = p_ATTRIBUTE8)
            OR (    ( Recinfo.ATTRIBUTE8 IS NULL )
                AND (  p_ATTRIBUTE8 IS NULL )))
       AND (    ( Recinfo.ATTRIBUTE9 = p_ATTRIBUTE9)
            OR (    ( Recinfo.ATTRIBUTE9 IS NULL )
                AND (  p_ATTRIBUTE9 IS NULL )))
       AND (    ( Recinfo.ATTRIBUTE10 = p_ATTRIBUTE10)
            OR (    ( Recinfo.ATTRIBUTE10 IS NULL )
                AND (  p_ATTRIBUTE10 IS NULL )))
       AND (    ( Recinfo.ATTRIBUTE11 = p_ATTRIBUTE11)
            OR (    ( Recinfo.ATTRIBUTE11 IS NULL )
                AND (  p_ATTRIBUTE11 IS NULL )))
       AND (    ( Recinfo.ATTRIBUTE12 = p_ATTRIBUTE12)
            OR (    ( Recinfo.ATTRIBUTE12 IS NULL )
                AND (  p_ATTRIBUTE12 IS NULL )))
       AND (    ( Recinfo.ATTRIBUTE13 = p_ATTRIBUTE13)
            OR (    ( Recinfo.ATTRIBUTE13 IS NULL )
                AND (  p_ATTRIBUTE13 IS NULL )))
       AND (    ( Recinfo.ATTRIBUTE14 = p_ATTRIBUTE14)
            OR (    ( Recinfo.ATTRIBUTE14 IS NULL )
                AND (  p_ATTRIBUTE14 IS NULL )))
       AND (    ( Recinfo.ATTRIBUTE15 = p_ATTRIBUTE15)
            OR (    ( Recinfo.ATTRIBUTE15 IS NULL )
                AND (  p_ATTRIBUTE15 IS NULL )))
       AND (    ( Recinfo.CREATED_BY = p_CREATED_BY)
            OR (    ( Recinfo.CREATED_BY IS NULL )
                AND (  p_CREATED_BY IS NULL )))
       AND (    ( Recinfo.CREATION_DATE = p_CREATION_DATE)
            OR (    ( Recinfo.CREATION_DATE IS NULL )
                AND (  p_CREATION_DATE IS NULL )))
       AND (    ( Recinfo.LAST_UPDATED_BY = p_LAST_UPDATED_BY)
            OR (    ( Recinfo.LAST_UPDATED_BY IS NULL )
                AND (  p_LAST_UPDATED_BY IS NULL )))
       AND (    ( Recinfo.LAST_UPDATE_DATE = p_LAST_UPDATE_DATE)
            OR (    ( Recinfo.LAST_UPDATE_DATE IS NULL )
                AND (  p_LAST_UPDATE_DATE IS NULL )))
       AND (    ( Recinfo.LAST_UPDATE_LOGIN = p_LAST_UPDATE_LOGIN)
            OR (    ( Recinfo.LAST_UPDATE_LOGIN IS NULL )
                AND (  p_LAST_UPDATE_LOGIN IS NULL )))
       AND (    ( Recinfo.CREDIT_HOLD_REQUEST_FLAG = p_CREDIT_HOLD_REQUEST_FLAG)
            OR (    ( Recinfo.CREDIT_HOLD_REQUEST_FLAG IS NULL )
                AND (  p_CREDIT_HOLD_REQUEST_FLAG IS NULL )))
       AND (    ( Recinfo.CREDIT_HOLD_APPROVED_FLAG = p_CREDIT_HOLD_APPROVED_FLAG)
            OR (    ( Recinfo.CREDIT_HOLD_APPROVED_FLAG IS NULL )
                AND (  p_CREDIT_HOLD_APPROVED_FLAG IS NULL )))
       AND (    ( Recinfo.SERVICE_HOLD_REQUEST_FLAG = p_SERVICE_HOLD_REQUEST_FLAG)
            OR (    ( Recinfo.SERVICE_HOLD_REQUEST_FLAG IS NULL )
                AND (  p_SERVICE_HOLD_REQUEST_FLAG IS NULL )))
       AND (    ( Recinfo.SERVICE_HOLD_APPROVED_FLAG = p_SERVICE_HOLD_APPROVED_FLAG)
            OR (    ( Recinfo.SERVICE_HOLD_APPROVED_FLAG IS NULL )
                AND (  p_SERVICE_HOLD_APPROVED_FLAG IS NULL )))
       AND (    ( Recinfo.SUGGESTION_APPROVED_FLAG = p_SUGGESTION_APPROVED_FLAG)
            OR (    ( Recinfo.SUGGESTION_APPROVED_FLAG IS NULL )
                AND (  p_SUGGESTION_APPROVED_FLAG IS NULL )))
        ) then
        return;
    else
        FND_MESSAGE.SET_NAME('FND', 'FORM_RECORD_CHANGED');
        APP_EXCEPTION.RAISE_EXCEPTION;
    End If;
END Lock_Row;

End IEX_LITIGATIONS_PKG;

/
