--------------------------------------------------------
--  DDL for Package Body GMF_CMRCWA_XMLP_PKG
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE PACKAGE BODY "APPS"."GMF_CMRCWA_XMLP_PKG" AS
/* $Header: CMRCWAB.pls 120.0 2007/12/24 13:27:03 nchinnam noship $ */
  FUNCTION G_COST_ORGANIZATIONGROUPFILTER RETURN BOOLEAN IS
  BEGIN
    IF SORT_BY = 'Cost Organization' THEN
      RETURN (TRUE);
    ELSE
      RETURN (FALSE);
    END IF;
    RETURN NULL;
  END G_COST_ORGANIZATIONGROUPFILTER;
  FUNCTION G_INV_ORGANIZATIONGROUPFILTER RETURN BOOLEAN IS
  BEGIN
    IF SORT_BY = 'Inventory Organization' THEN
      RETURN (TRUE);
    ELSE
      RETURN (FALSE);
    END IF;
    RETURN NULL;
  END G_INV_ORGANIZATIONGROUPFILTER;
  FUNCTION COST_ORGNCPFORMULA(COST_ORGNCF IN VARCHAR2) RETURN VARCHAR2 IS
  BEGIN
    /*SRW.REFERENCE(COST_ORGNCF)*/NULL;
    RETURN '';
  END COST_ORGNCPFORMULA;
  FUNCTION COST_ORGNCFFORMULA RETURN VARCHAR2 IS
  BEGIN
    /*SRW.REFERENCE(SORT_BY)*/NULL;
    IF SORT_BY = 'Cost Organization' THEN
      IF FROM_COST_ORGN IS NOT NULL AND TO_COST_ORGN IS NOT NULL THEN
        COST_ORGNCP := ' and cmp.organization_code >= ''' || FROM_COST_ORGN || ''' and cmp.organization_code <= ''' || TO_COST_ORGN || '''';
      ELSIF FROM_COST_ORGN IS NULL AND TO_COST_ORGN IS NULL THEN
        COST_ORGNCP := 'and 1=1';
        FROM_COST_ORGN := SY_ALL;
        TO_COST_ORGN := SY_ALL;
      ELSIF FROM_COST_ORGN IS NOT NULL AND TO_COST_ORGN IS NULL THEN
        COST_ORGNCP := ' and  cmp.organization_code >= ''' || FROM_COST_ORGN || '''';
        TO_COST_ORGN := SY_ALL;
      ELSIF FROM_COST_ORGN IS NULL AND TO_COST_ORGN IS NOT NULL THEN
        COST_ORGNCP := ' and  cmp.organization_code <= ''' || TO_COST_ORGN || '''';
        FROM_COST_ORGN := SY_ALL;
      END IF;
    END IF;
    RETURN COST_ORGNCP;
  END COST_ORGNCFFORMULA;
  FUNCTION INV_ORGNCPFORMULA(INV_ORGNCF IN VARCHAR2) RETURN VARCHAR2 IS
  BEGIN
    /*SRW.REFERENCE(INV_ORGNCF)*/NULL;
    RETURN '';
  END INV_ORGNCPFORMULA;
  FUNCTION INV_ORGNCFFORMULA RETURN VARCHAR2 IS
  BEGIN
    /*SRW.REFERENCE(SORT_BY)*/NULL;
    IF SORT_BY = 'Inventory Organization' THEN
      IF FROM_INV_ORGN IS NOT NULL AND TO_INV_ORGN IS NOT NULL THEN
        INV_ORGNCP := ' and imp.organization_code >= ''' || FROM_INV_ORGN || ''' and imp.organization_code <= ''' || TO_INV_ORGN || '''';
      ELSIF FROM_INV_ORGN IS NULL AND TO_INV_ORGN IS NULL THEN
        INV_ORGNCP := 'and 1=1';
        FROM_INV_ORGN := 'ALL';
        TO_INV_ORGN := 'ALL';
      ELSIF FROM_INV_ORGN IS NOT NULL AND TO_INV_ORGN IS NULL THEN
        INV_ORGNCP := ' and  imp.organization_code >= ''' || FROM_INV_ORGN || '''';
        TO_INV_ORGN := 'ALL';
      ELSIF FROM_INV_ORGN IS NULL AND TO_INV_ORGN IS NOT NULL THEN
        INV_ORGNCP := ' and  imp.organization_code <= ''' || TO_INV_ORGN || '''';
        FROM_INV_ORGN := 'ALL';
      END IF;
    END IF;
    RETURN INV_ORGNCP;
  END INV_ORGNCFFORMULA;
  FUNCTION AFTERPFORM RETURN BOOLEAN IS
  BEGIN
    FROM_COST_ORGN := GMF_UTILITIES_GRP.GET_ORGANIZATION_CODE(P_FROM_COST_ORGN_ID);
    TO_COST_ORGN := GMF_UTILITIES_GRP.GET_ORGANIZATION_CODE(P_TO_COST_ORGN_ID);
    FROM_INV_ORGN := GMF_UTILITIES_GRP.GET_ORGANIZATION_CODE(NVL(P_FROM_INV_ORGN_ID
                                                                ,0));
    TO_INV_ORGN := GMF_UTILITIES_GRP.GET_ORGANIZATION_CODE(NVL(P_TO_INV_ORGN_ID
                                                              ,0));
    IF FROM_COST_ORGN > TO_COST_ORGN THEN
      FND_MESSAGE.SET_NAME('GMF'
                          ,'CM_FRMCOSTWHSE_LTE_TOCOSTWHSE');
      /*SRW.MESSAGE(100
                 ,FND_MESSAGE.GET)*/NULL;
      /*RAISE SRW.PROGRAM_ABORT*/RAISE_APPLICATION_ERROR(-20101,null);
    END IF;
    IF FROM_INV_ORGN > TO_INV_ORGN THEN
      FND_MESSAGE.SET_NAME('GMF'
                          ,'CM_FRM_INVWHSE_LTE_TO_INVWHSE');
      /*SRW.MESSAGE(100
                 ,FND_MESSAGE.GET)*/NULL;
      /*RAISE SRW.PROGRAM_ABORT*/RAISE_APPLICATION_ERROR(-20101,null);
    END IF;
    RETURN (TRUE);
  END AFTERPFORM;
  PROCEDURE GMF_CMRCWA_XMLP_PKG_HEADER IS
  BEGIN
    NULL;
  END GMF_CMRCWA_XMLP_PKG_HEADER;
  FUNCTION BEFOREREPORT RETURN BOOLEAN IS
  BEGIN
    P_CONC_REQUEST_ID := FND_GLOBAL.CONC_REQUEST_ID;
    /*SRW.USER_EXIT('FND SRWINIT')*/NULL;
    RETURN (TRUE);
  END BEFOREREPORT;
  FUNCTION AFTERREPORT RETURN BOOLEAN IS
  BEGIN
    /*SRW.USER_EXIT('FND SRWEXIT')*/NULL;
    RETURN (TRUE);
  END AFTERREPORT;
  FUNCTION COST_ORGNCP_P RETURN VARCHAR2 IS
  BEGIN
    RETURN COST_ORGNCP;
  END COST_ORGNCP_P;
  FUNCTION INV_ORGNCP_P RETURN VARCHAR2 IS
  BEGIN
    RETURN INV_ORGNCP;
  END INV_ORGNCP_P;
END GMF_CMRCWA_XMLP_PKG;


/
