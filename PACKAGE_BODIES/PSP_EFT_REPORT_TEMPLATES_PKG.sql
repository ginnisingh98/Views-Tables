--------------------------------------------------------
--  DDL for Package Body PSP_EFT_REPORT_TEMPLATES_PKG
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE PACKAGE BODY "APPS"."PSP_EFT_REPORT_TEMPLATES_PKG" as
 /* $Header: PSPERTEB.pls 115.7 2002/11/18 09:17:09 lveerubh ship $ */
procedure INSERT_ROW (
  X_ROWID in out NOCOPY VARCHAR2,
  X_TEMPLATE_ID in NUMBER,
  X_TEMPLATE_NAME in VARCHAR2,
  X_EFFORT_REPORT_PERIOD_NAME in VARCHAR2,
  X_BEGIN_DATE in DATE,
  X_END_DATE in DATE,
  X_PEOPLE_GROUP_ID in NUMBER,
  X_PERSON_ID in NUMBER,
  X_EFFECTIVE_START_DATE in DATE,
  X_EFFECTIVE_END_DATE in DATE,
  X_SUPERVISOR_ID in NUMBER,
  X_GL_CODE_COMBINATION_ID in NUMBER,
  X_EXPENDITURE_TYPE in VARCHAR2,
  X_TASK_ID in NUMBER,
  X_PROJECT_TYPE_CLASS_CODE in VARCHAR2,
  X_PROJECT_TYPE in VARCHAR2,
  X_AWARD_TYPE in VARCHAR2,
  X_FUNDING_SOURCE_ID in NUMBER,
  X_ELEMENT_TYPE_ID in NUMBER,
  X_ENABLE_WORKFLOW_FLAG in VARCHAR2,
  X_USER_TEMPLATE_FLAG in VARCHAR2,
  X_REPORT_TYPE in VARCHAR2,
  X_REPORT_INITIATOR_ID in NUMBER,
  X_INITIATOR_APPS_NAME in VARCHAR2,
  X_ERROR_DATE_TIME in DATE,
  X_BUSINESS_GROUP_ID in VARCHAR2,
  X_SET_OF_BOOKS_ID in VARCHAR2,
  X_ATTRIBUTE_CATEGORY in VARCHAR2,
  X_ATTRIBUTE1 in VARCHAR2,
  X_ATTRIBUTE2 in VARCHAR2,
  X_ATTRIBUTE3 in VARCHAR2,
  X_ATTRIBUTE4 in VARCHAR2,
  X_ATTRIBUTE5 in VARCHAR2,
  X_ATTRIBUTE6 in VARCHAR2,
  X_ATTRIBUTE7 in VARCHAR2,
  X_ATTRIBUTE8 in VARCHAR2,
  X_ATTRIBUTE9 in VARCHAR2,
  X_ATTRIBUTE10 in VARCHAR2,
  X_ATTRIBUTE11 in VARCHAR2,
  X_ATTRIBUTE12 in VARCHAR2,
  X_ATTRIBUTE13 in VARCHAR2,
  X_ATTRIBUTE14 in VARCHAR2,
  X_ATTRIBUTE15 in VARCHAR2,
  X_MODE in VARCHAR2 default 'R'
  ) is
    cursor C is select ROWID from PSP_EFFORT_REPORT_TEMPLATES
      where TEMPLATE_ID = X_TEMPLATE_ID;
    X_LAST_UPDATE_DATE DATE;
    X_LAST_UPDATED_BY NUMBER;
    X_LAST_UPDATE_LOGIN NUMBER;
begin
  X_LAST_UPDATE_DATE := SYSDATE;
  if(X_MODE = 'I') then
    X_LAST_UPDATED_BY := 1;
    X_LAST_UPDATE_LOGIN := 0;
  elsif (X_MODE = 'R') then
    X_LAST_UPDATED_BY := FND_GLOBAL.USER_ID;
    if X_LAST_UPDATED_BY is NULL then
      X_LAST_UPDATED_BY := -1;
    end if;
    X_LAST_UPDATE_LOGIN :=FND_GLOBAL.LOGIN_ID;
    if X_LAST_UPDATE_LOGIN is NULL then
      X_LAST_UPDATE_LOGIN := -1;
    end if;
  else
    FND_MESSAGE.SET_NAME( 'FND', 'SYSTEM-INVALID ARGS');
    app_exception.raise_exception;
  end if;
  insert into PSP_EFFORT_REPORT_TEMPLATES (
    TEMPLATE_ID,
    TEMPLATE_NAME,
    EFFORT_REPORT_PERIOD_NAME,
    BEGIN_DATE,
    END_DATE,
    PEOPLE_GROUP_ID,
    PERSON_ID,
    EFFECTIVE_START_DATE,
    EFFECTIVE_END_DATE,
    SUPERVISOR_ID,
    GL_CODE_COMBINATION_ID,
    EXPENDITURE_TYPE,
    TASK_ID,
    PROJECT_TYPE_CLASS_CODE,
    PROJECT_TYPE,
    AWARD_TYPE,
    FUNDING_SOURCE_ID,
    ELEMENT_TYPE_ID,
    ENABLE_WORKFLOW_FLAG,
    USER_TEMPLATE_FLAG,
    REPORT_TYPE,
    REPORT_INITIATOR_ID ,
    INITIATOR_APPS_NAME ,
    ERROR_DATE_TIME,
    BUSINESS_GROUP_ID,
    SET_OF_BOOKS_ID,
    ATTRIBUTE_CATEGORY,
    ATTRIBUTE1,
    ATTRIBUTE2,
    ATTRIBUTE3,
    ATTRIBUTE4,
    ATTRIBUTE5,
    ATTRIBUTE6,
    ATTRIBUTE7,
    ATTRIBUTE8,
    ATTRIBUTE9,
    ATTRIBUTE10,
    ATTRIBUTE11,
    ATTRIBUTE12,
    ATTRIBUTE13,
    ATTRIBUTE14,
    ATTRIBUTE15,
    CREATION_DATE,
    CREATED_BY,
    LAST_UPDATE_DATE,
    LAST_UPDATED_BY,
    LAST_UPDATE_LOGIN
  ) values (
    X_TEMPLATE_ID,
    X_TEMPLATE_NAME,
    X_EFFORT_REPORT_PERIOD_NAME,
    X_BEGIN_DATE,
    X_END_DATE,
    X_PEOPLE_GROUP_ID,
    X_PERSON_ID,
    X_EFFECTIVE_START_DATE,
    X_EFFECTIVE_END_DATE,
    X_SUPERVISOR_ID,
    X_GL_CODE_COMBINATION_ID,
    X_EXPENDITURE_TYPE,
    X_TASK_ID,
    X_PROJECT_TYPE_CLASS_CODE,
    X_PROJECT_TYPE,
    X_AWARD_TYPE,
    X_FUNDING_SOURCE_ID,
    X_ELEMENT_TYPE_ID,
    X_ENABLE_WORKFLOW_FLAG,
    X_USER_TEMPLATE_FLAG,
    X_REPORT_TYPE,
    X_REPORT_INITIATOR_ID,
    X_INITIATOR_APPS_NAME,
    X_ERROR_DATE_TIME,
    X_BUSINESS_GROUP_ID,
    X_SET_OF_BOOKS_ID,
    X_ATTRIBUTE_CATEGORY,
    X_ATTRIBUTE1,
    X_ATTRIBUTE2,
    X_ATTRIBUTE3,
    X_ATTRIBUTE4,
    X_ATTRIBUTE5,
    X_ATTRIBUTE6,
    X_ATTRIBUTE7,
    X_ATTRIBUTE8,
    X_ATTRIBUTE9,
    X_ATTRIBUTE10,
    X_ATTRIBUTE11,
    X_ATTRIBUTE12,
    X_ATTRIBUTE13,
    X_ATTRIBUTE14,
    X_ATTRIBUTE15,
    X_LAST_UPDATE_DATE,
    X_LAST_UPDATED_BY,
    X_LAST_UPDATE_DATE,
    X_LAST_UPDATED_BY,
    X_LAST_UPDATE_LOGIN
  );

  open c;
  fetch c into X_ROWID;
  if (c%notfound) then
    close c;
    raise no_data_found;
  end if;
  close c;
  commit;

end INSERT_ROW;

procedure LOCK_ROW (
  X_TEMPLATE_ID in NUMBER,
  X_TEMPLATE_NAME in VARCHAR2,
  X_EFFORT_REPORT_PERIOD_NAME in VARCHAR2,
  X_BEGIN_DATE in DATE,
  X_END_DATE in DATE,
  X_PEOPLE_GROUP_ID in NUMBER,
  X_PERSON_ID in NUMBER,
  X_EFFECTIVE_START_DATE in DATE,
  X_EFFECTIVE_END_DATE in DATE,
  X_SUPERVISOR_ID in NUMBER,
  X_GL_CODE_COMBINATION_ID in NUMBER,
  X_EXPENDITURE_TYPE in VARCHAR2,
  X_TASK_ID in NUMBER,
  X_PROJECT_TYPE_CLASS_CODE in VARCHAR2,
  X_PROJECT_TYPE in VARCHAR2,
  X_AWARD_TYPE in VARCHAR2,
  X_FUNDING_SOURCE_ID in NUMBER,
  X_ELEMENT_TYPE_ID in NUMBER,
  X_ENABLE_WORKFLOW_FLAG in VARCHAR2,
  X_USER_TEMPLATE_FLAG in VARCHAR2,
  X_REPORT_TYPE in VARCHAR2,
  X_REPORT_INITIATOR_ID in NUMBER,
  X_INITIATOR_APPS_NAME in VARCHAR2,
  X_ERROR_DATE_TIME in DATE,
  X_BUSINESS_GROUP_ID in VARCHAR2,
  X_SET_OF_BOOKS_ID in VARCHAR2,
  X_ATTRIBUTE_CATEGORY in VARCHAR2,
  X_ATTRIBUTE1 in VARCHAR2,
  X_ATTRIBUTE2 in VARCHAR2,
  X_ATTRIBUTE3 in VARCHAR2,
  X_ATTRIBUTE4 in VARCHAR2,
  X_ATTRIBUTE5 in VARCHAR2,
  X_ATTRIBUTE6 in VARCHAR2,
  X_ATTRIBUTE7 in VARCHAR2,
  X_ATTRIBUTE8 in VARCHAR2,
  X_ATTRIBUTE9 in VARCHAR2,
  X_ATTRIBUTE10 in VARCHAR2,
  X_ATTRIBUTE11 in VARCHAR2,
  X_ATTRIBUTE12 in VARCHAR2,
  X_ATTRIBUTE13 in VARCHAR2,
  X_ATTRIBUTE14 in VARCHAR2,
  X_ATTRIBUTE15 in VARCHAR2
) is
  cursor c1 is select
      TEMPLATE_NAME,
      EFFORT_REPORT_PERIOD_NAME,
      BEGIN_DATE,
      END_DATE,
      PEOPLE_GROUP_ID,
      PERSON_ID,
      EFFECTIVE_START_DATE,
      EFFECTIVE_END_DATE,
      SUPERVISOR_ID,
      GL_CODE_COMBINATION_ID,
      EXPENDITURE_TYPE,
      TASK_ID,
      PROJECT_TYPE_CLASS_CODE,
      PROJECT_TYPE,
      AWARD_TYPE,
      FUNDING_SOURCE_ID,
      ELEMENT_TYPE_ID,
      ENABLE_WORKFLOW_FLAG,
      USER_TEMPLATE_FLAG,
      REPORT_TYPE,
      REPORT_INITIATOR_ID ,
      INITIATOR_APPS_NAME ,
      ERROR_DATE_TIME,
      BUSINESS_GROUP_ID,
      SET_OF_BOOKS_ID,
      ATTRIBUTE_CATEGORY,
      ATTRIBUTE1,
      ATTRIBUTE2,
      ATTRIBUTE3,
      ATTRIBUTE4,
      ATTRIBUTE5,
      ATTRIBUTE6,
      ATTRIBUTE7,
      ATTRIBUTE8,
      ATTRIBUTE9,
      ATTRIBUTE10,
      ATTRIBUTE11,
      ATTRIBUTE12,
      ATTRIBUTE13,
      ATTRIBUTE14,
      ATTRIBUTE15
    from PSP_EFFORT_REPORT_TEMPLATES
    where TEMPLATE_ID = X_TEMPLATE_ID
    for update of TEMPLATE_ID nowait;
  tlinfo c1%rowtype;

begin
  open c1;
  fetch c1 into tlinfo;
  if (c1%notfound) then
    fnd_message.set_name('FND', 'FORM_RECORD_CHANGED');
    app_exception.raise_exception;
    close c1;
    return;
  end if;
  close c1;

  if ( (tlinfo.TEMPLATE_NAME = X_TEMPLATE_NAME)
      AND ((tlinfo.EFFORT_REPORT_PERIOD_NAME = X_EFFORT_REPORT_PERIOD_NAME)
           OR ((tlinfo.EFFORT_REPORT_PERIOD_NAME is null)
               AND (X_EFFORT_REPORT_PERIOD_NAME is null)))
      AND ((tlinfo.BEGIN_DATE = X_BEGIN_DATE)
           OR ((tlinfo.BEGIN_DATE is null)
               AND (X_BEGIN_DATE is null)))
      AND ((tlinfo.END_DATE = X_END_DATE)
           OR ((tlinfo.END_DATE is null)
               AND (X_END_DATE is null)))
      AND ((tlinfo.PEOPLE_GROUP_ID = X_PEOPLE_GROUP_ID)
           OR ((tlinfo.PEOPLE_GROUP_ID is null)
               AND (X_PEOPLE_GROUP_ID is null)))
      AND ((tlinfo.PERSON_ID = X_PERSON_ID)
           OR ((tlinfo.PERSON_ID is null)
               AND (X_PERSON_ID is null)))
      AND ((tlinfo.EFFECTIVE_START_DATE = X_EFFECTIVE_START_DATE)
           OR ((tlinfo.EFFECTIVE_START_DATE is null)
               AND (X_EFFECTIVE_START_DATE is null)))
      AND ((tlinfo.EFFECTIVE_END_DATE = X_EFFECTIVE_END_DATE)
           OR ((tlinfo.EFFECTIVE_END_DATE is null)
               AND (X_EFFECTIVE_END_DATE is null)))
      AND ((tlinfo.SUPERVISOR_ID = X_SUPERVISOR_ID)
           OR ((tlinfo.SUPERVISOR_ID is null)
               AND (X_SUPERVISOR_ID is null)))
      AND ((tlinfo.GL_CODE_COMBINATION_ID = X_GL_CODE_COMBINATION_ID)
           OR ((tlinfo.GL_CODE_COMBINATION_ID is null)
               AND (X_GL_CODE_COMBINATION_ID is null)))
      AND ((tlinfo.EXPENDITURE_TYPE = X_EXPENDITURE_TYPE)
           OR ((tlinfo.EXPENDITURE_TYPE is null)
               AND (X_EXPENDITURE_TYPE is null)))
      AND ((tlinfo.TASK_ID = X_TASK_ID)
           OR ((tlinfo.TASK_ID is null)
               AND (X_TASK_ID is null)))
      AND ((tlinfo.PROJECT_TYPE_CLASS_CODE = X_PROJECT_TYPE_CLASS_CODE)
           OR ((tlinfo.PROJECT_TYPE_CLASS_CODE is null)
               AND (X_PROJECT_TYPE_CLASS_CODE is null)))
      AND ((tlinfo.PROJECT_TYPE = X_PROJECT_TYPE)
           OR ((tlinfo.PROJECT_TYPE is null)
               AND (X_PROJECT_TYPE is null)))
      AND ((tlinfo.AWARD_TYPE = X_AWARD_TYPE)
           OR ((tlinfo.AWARD_TYPE is null)
               AND (X_AWARD_TYPE is null)))
      AND ((tlinfo.FUNDING_SOURCE_ID = X_FUNDING_SOURCE_ID)
           OR ((tlinfo.FUNDING_SOURCE_ID is null)
               AND (X_FUNDING_SOURCE_ID is null)))
      AND ((tlinfo.ELEMENT_TYPE_ID = X_ELEMENT_TYPE_ID)
           OR ((tlinfo.ELEMENT_TYPE_ID is null)
               AND (X_ELEMENT_TYPE_ID is null)))
      AND ((tlinfo.ENABLE_WORKFLOW_FLAG = X_ENABLE_WORKFLOW_FLAG)
           OR ((tlinfo.ENABLE_WORKFLOW_FLAG is null)
               AND (X_ENABLE_WORKFLOW_FLAG is null)))
      AND ((tlinfo.USER_TEMPLATE_FLAG = X_USER_TEMPLATE_FLAG)
           OR ((tlinfo.USER_TEMPLATE_FLAG is null)
               AND (X_USER_TEMPLATE_FLAG is null)))
      AND ((tlinfo.REPORT_TYPE = X_REPORT_TYPE)
           OR ((tlinfo.REPORT_TYPE is null)
               AND (X_REPORT_TYPE is null)))
      AND ((tlinfo.REPORT_INITIATOR_ID = X_REPORT_INITIATOR_ID)
           OR ((tlinfo.REPORT_INITIATOR_ID is null)
               AND (X_REPORT_INITIATOR_ID is null)))
      AND ((tlinfo.INITIATOR_APPS_NAME = X_INITIATOR_APPS_NAME)
           OR ((tlinfo.INITIATOR_APPS_NAME is null)
               AND (X_INITIATOR_APPS_NAME is null)))
      AND ((tlinfo.ERROR_DATE_TIME = X_ERROR_DATE_TIME)
           OR ((tlinfo.ERROR_DATE_TIME is null)
               AND (X_ERROR_DATE_TIME is null)))
      AND ((tlinfo.ATTRIBUTE_CATEGORY = X_ATTRIBUTE_CATEGORY)
           OR ((tlinfo.ATTRIBUTE_CATEGORY is null)
               AND (X_ATTRIBUTE_CATEGORY is null)))
      AND ((tlinfo.ATTRIBUTE1 = X_ATTRIBUTE1)
           OR ((tlinfo.ATTRIBUTE1 is null)
               AND (X_ATTRIBUTE1 is null)))
      AND ((tlinfo.ATTRIBUTE2 = X_ATTRIBUTE2)
           OR ((tlinfo.ATTRIBUTE2 is null)
               AND (X_ATTRIBUTE2 is null)))
      AND ((tlinfo.ATTRIBUTE3 = X_ATTRIBUTE3)
           OR ((tlinfo.ATTRIBUTE3 is null)
               AND (X_ATTRIBUTE3 is null)))
      AND ((tlinfo.ATTRIBUTE4 = X_ATTRIBUTE4)
           OR ((tlinfo.ATTRIBUTE4 is null)
               AND (X_ATTRIBUTE4 is null)))
      AND ((tlinfo.ATTRIBUTE5 = X_ATTRIBUTE5)
           OR ((tlinfo.ATTRIBUTE5 is null)
               AND (X_ATTRIBUTE5 is null)))
      AND ((tlinfo.ATTRIBUTE6 = X_ATTRIBUTE6)
           OR ((tlinfo.ATTRIBUTE6 is null)
               AND (X_ATTRIBUTE6 is null)))
      AND ((tlinfo.ATTRIBUTE7 = X_ATTRIBUTE7)
           OR ((tlinfo.ATTRIBUTE7 is null)
               AND (X_ATTRIBUTE7 is null)))
      AND ((tlinfo.ATTRIBUTE8 = X_ATTRIBUTE8)
           OR ((tlinfo.ATTRIBUTE8 is null)
               AND (X_ATTRIBUTE8 is null)))
      AND ((tlinfo.ATTRIBUTE9 = X_ATTRIBUTE9)
           OR ((tlinfo.ATTRIBUTE9 is null)
               AND (X_ATTRIBUTE9 is null)))
      AND ((tlinfo.ATTRIBUTE10 = X_ATTRIBUTE10)
           OR ((tlinfo.ATTRIBUTE10 is null)
               AND (X_ATTRIBUTE10 is null)))
      AND ((tlinfo.ATTRIBUTE11 = X_ATTRIBUTE11)
           OR ((tlinfo.ATTRIBUTE11 is null)
               AND (X_ATTRIBUTE11 is null)))
      AND ((tlinfo.ATTRIBUTE12 = X_ATTRIBUTE12)
           OR ((tlinfo.ATTRIBUTE12 is null)
               AND (X_ATTRIBUTE12 is null)))
      AND ((tlinfo.ATTRIBUTE13 = X_ATTRIBUTE13)
           OR ((tlinfo.ATTRIBUTE13 is null)
               AND (X_ATTRIBUTE13 is null)))
      AND ((tlinfo.ATTRIBUTE14 = X_ATTRIBUTE14)
           OR ((tlinfo.ATTRIBUTE14 is null)
               AND (X_ATTRIBUTE14 is null)))
      AND ((tlinfo.ATTRIBUTE15 = X_ATTRIBUTE15)
           OR ((tlinfo.ATTRIBUTE15 is null)
               AND (X_ATTRIBUTE15 is null)))
  ) then
    null;
  else
    fnd_message.set_name('FND', 'FORM_RECORD_CHANGED');
    app_exception.raise_exception;
  end if;
  return;
end LOCK_ROW;

procedure UPDATE_ROW (
  X_TEMPLATE_ID in NUMBER,
  X_TEMPLATE_NAME in VARCHAR2,
  X_EFFORT_REPORT_PERIOD_NAME in VARCHAR2,
  X_BEGIN_DATE in DATE,
  X_END_DATE in DATE,
  X_PEOPLE_GROUP_ID in NUMBER,
  X_PERSON_ID in NUMBER,
  X_EFFECTIVE_START_DATE in DATE,
  X_EFFECTIVE_END_DATE in DATE,
  X_SUPERVISOR_ID in NUMBER,
  X_GL_CODE_COMBINATION_ID in NUMBER,
  X_EXPENDITURE_TYPE in VARCHAR2,
  X_TASK_ID in NUMBER,
  X_PROJECT_TYPE_CLASS_CODE in VARCHAR2,
  X_PROJECT_TYPE in VARCHAR2,
  X_AWARD_TYPE in VARCHAR2,
  X_FUNDING_SOURCE_ID in NUMBER,
  X_ELEMENT_TYPE_ID in NUMBER,
  X_ENABLE_WORKFLOW_FLAG in VARCHAR2,
  X_USER_TEMPLATE_FLAG in VARCHAR2,
  X_REPORT_TYPE in VARCHAR2,
  X_REPORT_INITIATOR_ID in NUMBER,
  X_INITIATOR_APPS_NAME in VARCHAR2,
  X_ERROR_DATE_TIME in DATE,
  X_BUSINESS_GROUP_ID in VARCHAR2,
  X_SET_OF_BOOKS_ID in VARCHAR2,
  X_ATTRIBUTE_CATEGORY in VARCHAR2,
  X_ATTRIBUTE1 in VARCHAR2,
  X_ATTRIBUTE2 in VARCHAR2,
  X_ATTRIBUTE3 in VARCHAR2,
  X_ATTRIBUTE4 in VARCHAR2,
  X_ATTRIBUTE5 in VARCHAR2,
  X_ATTRIBUTE6 in VARCHAR2,
  X_ATTRIBUTE7 in VARCHAR2,
  X_ATTRIBUTE8 in VARCHAR2,
  X_ATTRIBUTE9 in VARCHAR2,
  X_ATTRIBUTE10 in VARCHAR2,
  X_ATTRIBUTE11 in VARCHAR2,
  X_ATTRIBUTE12 in VARCHAR2,
  X_ATTRIBUTE13 in VARCHAR2,
  X_ATTRIBUTE14 in VARCHAR2,
  X_ATTRIBUTE15 in VARCHAR2,
  X_MODE in VARCHAR2 default 'R'
  ) is
    X_LAST_UPDATE_DATE DATE;
    X_LAST_UPDATED_BY NUMBER;
    X_LAST_UPDATE_LOGIN NUMBER;
begin
  X_LAST_UPDATE_DATE := SYSDATE;
  if(X_MODE = 'I') then
    X_LAST_UPDATED_BY := 1;
    X_LAST_UPDATE_LOGIN := 0;
  elsif (X_MODE = 'R') then
    X_LAST_UPDATED_BY := FND_GLOBAL.USER_ID;
    if X_LAST_UPDATED_BY is NULL then
      X_LAST_UPDATED_BY := -1;
    end if;
    X_LAST_UPDATE_LOGIN :=FND_GLOBAL.LOGIN_ID;
    if X_LAST_UPDATE_LOGIN is NULL then
      X_LAST_UPDATE_LOGIN := -1;
    end if;
  else
    FND_MESSAGE.SET_NAME('FND', 'SYSTEM-INVALID ARGS');
    app_exception.raise_exception;
  end if;
  update PSP_EFFORT_REPORT_TEMPLATES set
    TEMPLATE_NAME = X_TEMPLATE_NAME,
    EFFORT_REPORT_PERIOD_NAME = X_EFFORT_REPORT_PERIOD_NAME,
    BEGIN_DATE = X_BEGIN_DATE,
    END_DATE = X_END_DATE,
    PEOPLE_GROUP_ID = X_PEOPLE_GROUP_ID,
    PERSON_ID = X_PERSON_ID,
    EFFECTIVE_START_DATE = X_EFFECTIVE_START_DATE,
    EFFECTIVE_END_DATE = X_EFFECTIVE_END_DATE,
    SUPERVISOR_ID = X_SUPERVISOR_ID,
    GL_CODE_COMBINATION_ID = X_GL_CODE_COMBINATION_ID,
    EXPENDITURE_TYPE = X_EXPENDITURE_TYPE,
    TASK_ID = X_TASK_ID,
    PROJECT_TYPE_CLASS_CODE = X_PROJECT_TYPE_CLASS_CODE,
    PROJECT_TYPE = X_PROJECT_TYPE,
    AWARD_TYPE = X_AWARD_TYPE,
    FUNDING_SOURCE_ID = X_FUNDING_SOURCE_ID,
    ELEMENT_TYPE_ID = X_ELEMENT_TYPE_ID,
    ENABLE_WORKFLOW_FLAG = X_ENABLE_WORKFLOW_FLAG,
    USER_TEMPLATE_FLAG = X_USER_TEMPLATE_FLAG,
    REPORT_TYPE = X_REPORT_TYPE,
    REPORT_INITIATOR_ID = X_REPORT_INITIATOR_ID ,
    INITIATOR_APPS_NAME = X_INITIATOR_APPS_NAME,
    ERROR_DATE_TIME = X_ERROR_DATE_TIME,
    BUSINESS_GROUP_ID = X_BUSINESS_GROUP_ID,
    SET_OF_BOOKS_ID = X_SET_OF_BOOKS_ID,
    ATTRIBUTE_CATEGORY = X_ATTRIBUTE_CATEGORY,
    ATTRIBUTE1 = X_ATTRIBUTE1,
    ATTRIBUTE2 = X_ATTRIBUTE2,
    ATTRIBUTE3 = X_ATTRIBUTE3,
    ATTRIBUTE4 = X_ATTRIBUTE4,
    ATTRIBUTE5 = X_ATTRIBUTE5,
    ATTRIBUTE6 = X_ATTRIBUTE6,
    ATTRIBUTE7 = X_ATTRIBUTE7,
    ATTRIBUTE8 = X_ATTRIBUTE8,
    ATTRIBUTE9 = X_ATTRIBUTE9,
    ATTRIBUTE10 = X_ATTRIBUTE10,
    ATTRIBUTE11 = X_ATTRIBUTE11,
    ATTRIBUTE12 = X_ATTRIBUTE12,
    ATTRIBUTE13 = X_ATTRIBUTE13,
    ATTRIBUTE14 = X_ATTRIBUTE14,
    ATTRIBUTE15 = X_ATTRIBUTE15,
    LAST_UPDATE_DATE = X_LAST_UPDATE_DATE,
    LAST_UPDATED_BY = X_LAST_UPDATED_BY,
    LAST_UPDATE_LOGIN = X_LAST_UPDATE_LOGIN
  where TEMPLATE_ID = X_TEMPLATE_ID
  ;
  if (sql%notfound) then
    raise no_data_found;
  end if;
  commit;
end UPDATE_ROW;

procedure ADD_ROW (
  X_ROWID in out NOCOPY VARCHAR2,
  X_TEMPLATE_ID in NUMBER,
  X_TEMPLATE_NAME in VARCHAR2,
  X_EFFORT_REPORT_PERIOD_NAME in VARCHAR2,
  X_BEGIN_DATE in DATE,
  X_END_DATE in DATE,
  X_PEOPLE_GROUP_ID in NUMBER,
  X_PERSON_ID in NUMBER,
  X_EFFECTIVE_START_DATE in DATE,
  X_EFFECTIVE_END_DATE in DATE,
  X_SUPERVISOR_ID in NUMBER,
  X_GL_CODE_COMBINATION_ID in NUMBER,
  X_EXPENDITURE_TYPE in VARCHAR2,
  X_TASK_ID in NUMBER,
  X_PROJECT_TYPE_CLASS_CODE in VARCHAR2,
  X_PROJECT_TYPE in VARCHAR2,
  X_AWARD_TYPE in VARCHAR2,
  X_FUNDING_SOURCE_ID in NUMBER,
  X_ELEMENT_TYPE_ID in NUMBER,
  X_ENABLE_WORKFLOW_FLAG in VARCHAR2,
  X_USER_TEMPLATE_FLAG in VARCHAR2,
  X_REPORT_TYPE in VARCHAR2,
  X_REPORT_INITIATOR_ID in NUMBER,
  X_INITIATOR_APPS_NAME in VARCHAR2,
  X_ERROR_DATE_TIME in DATE,
  X_BUSINESS_GROUP_ID in VARCHAR2,
  X_SET_OF_BOOKS_ID in VARCHAR2,
  X_ATTRIBUTE_CATEGORY in VARCHAR2,
  X_ATTRIBUTE1 in VARCHAR2,
  X_ATTRIBUTE2 in VARCHAR2,
  X_ATTRIBUTE3 in VARCHAR2,
  X_ATTRIBUTE4 in VARCHAR2,
  X_ATTRIBUTE5 in VARCHAR2,
  X_ATTRIBUTE6 in VARCHAR2,
  X_ATTRIBUTE7 in VARCHAR2,
  X_ATTRIBUTE8 in VARCHAR2,
  X_ATTRIBUTE9 in VARCHAR2,
  X_ATTRIBUTE10 in VARCHAR2,
  X_ATTRIBUTE11 in VARCHAR2,
  X_ATTRIBUTE12 in VARCHAR2,
  X_ATTRIBUTE13 in VARCHAR2,
  X_ATTRIBUTE14 in VARCHAR2,
  X_ATTRIBUTE15 in VARCHAR2,
  X_MODE in VARCHAR2 default 'R'
  ) is
  cursor c1 is select rowid from PSP_EFFORT_REPORT_TEMPLATES
     where TEMPLATE_ID = X_TEMPLATE_ID
  ;
  dummy c1%rowtype;
begin
  open c1;
  fetch c1 into dummy;
  if (c1%notfound) then
    close c1;
    INSERT_ROW (
     X_ROWID,
     X_TEMPLATE_ID,
     X_TEMPLATE_NAME,
     X_EFFORT_REPORT_PERIOD_NAME,
     X_BEGIN_DATE,
     X_END_DATE,
     X_PEOPLE_GROUP_ID,
     X_PERSON_ID,
     X_EFFECTIVE_START_DATE,
     X_EFFECTIVE_END_DATE,
     X_SUPERVISOR_ID,
     X_GL_CODE_COMBINATION_ID,
     X_EXPENDITURE_TYPE,
     X_TASK_ID,
     X_PROJECT_TYPE_CLASS_CODE,
     X_PROJECT_TYPE,
     X_AWARD_TYPE,
     X_FUNDING_SOURCE_ID,
     X_ELEMENT_TYPE_ID,
     X_ENABLE_WORKFLOW_FLAG,
     X_USER_TEMPLATE_FLAG,
     X_REPORT_TYPE,
     X_REPORT_INITIATOR_ID ,
     X_INITIATOR_APPS_NAME ,
     X_ERROR_DATE_TIME,
     X_BUSINESS_GROUP_ID,
     X_SET_OF_BOOKS_ID,
     X_ATTRIBUTE_CATEGORY,
     X_ATTRIBUTE1,
     X_ATTRIBUTE2,
     X_ATTRIBUTE3,
     X_ATTRIBUTE4,
     X_ATTRIBUTE5,
     X_ATTRIBUTE6,
     X_ATTRIBUTE7,
     X_ATTRIBUTE8,
     X_ATTRIBUTE9,
     X_ATTRIBUTE10,
     X_ATTRIBUTE11,
     X_ATTRIBUTE12,
     X_ATTRIBUTE13,
     X_ATTRIBUTE14,
     X_ATTRIBUTE15,
     X_MODE);
    return;
  end if;
  close c1;
  UPDATE_ROW (
   X_TEMPLATE_ID,
   X_TEMPLATE_NAME,
   X_EFFORT_REPORT_PERIOD_NAME,
   X_BEGIN_DATE,
   X_END_DATE,
   X_PEOPLE_GROUP_ID,
   X_PERSON_ID,
   X_EFFECTIVE_START_DATE,
   X_EFFECTIVE_END_DATE,
   X_SUPERVISOR_ID,
   X_GL_CODE_COMBINATION_ID,
   X_EXPENDITURE_TYPE,
   X_TASK_ID,
   X_PROJECT_TYPE_CLASS_CODE,
   X_PROJECT_TYPE,
   X_AWARD_TYPE,
   X_FUNDING_SOURCE_ID,
   X_ELEMENT_TYPE_ID,
   X_ENABLE_WORKFLOW_FLAG,
   X_USER_TEMPLATE_FLAG,
   X_REPORT_TYPE,
   X_REPORT_INITIATOR_ID ,
   X_INITIATOR_APPS_NAME ,
   X_ERROR_DATE_TIME,
   X_BUSINESS_GROUP_ID,
   X_SET_OF_BOOKS_ID,
   X_ATTRIBUTE_CATEGORY,
   X_ATTRIBUTE1,
   X_ATTRIBUTE2,
   X_ATTRIBUTE3,
   X_ATTRIBUTE4,
   X_ATTRIBUTE5,
   X_ATTRIBUTE6,
   X_ATTRIBUTE7,
   X_ATTRIBUTE8,
   X_ATTRIBUTE9,
   X_ATTRIBUTE10,
   X_ATTRIBUTE11,
   X_ATTRIBUTE12,
   X_ATTRIBUTE13,
   X_ATTRIBUTE14,
   X_ATTRIBUTE15,
   X_MODE);
end ADD_ROW;

procedure DELETE_ROW (
  X_TEMPLATE_ID in NUMBER
) is
begin
  delete from PSP_EFFORT_REPORT_TEMPLATES
  where TEMPLATE_ID = X_TEMPLATE_ID;
  if (sql%notfound) then
    ---raise no_data_found;
    null;
  end if;
  commit;
end DELETE_ROW;

end PSP_EFT_REPORT_TEMPLATES_PKG;

/
