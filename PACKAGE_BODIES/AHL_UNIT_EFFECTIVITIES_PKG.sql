--------------------------------------------------------
--  DDL for Package Body AHL_UNIT_EFFECTIVITIES_PKG
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE PACKAGE BODY "APPS"."AHL_UNIT_EFFECTIVITIES_PKG" as
/* $Header: AHLLUEFB.pls 120.2 2006/06/06 11:39:43 tamdas noship $ */
procedure INSERT_ROW (
  X_ROWID in out nocopy VARCHAR2,
  X_UNIT_EFFECTIVITY_ID in out NOCOPY NUMBER,
  X_MANUALLY_PLANNED_FLAG in VARCHAR2,
  X_LOG_SERIES_CODE in VARCHAR2,
  X_LOG_SERIES_NUMBER in NUMBER,
  X_FLIGHT_NUMBER in VARCHAR2,
  X_MEL_CDL_TYPE_CODE in VARCHAR2,
  X_POSITION_PATH_ID in NUMBER,
  X_ATA_CODE in VARCHAR2,
  --X_CLEAR_STATION_ORG_ID in NUMBER,
  --X_CLEAR_STATION_DEPT_ID in NUMBER,
  X_UNIT_CONFIG_HEADER_ID in NUMBER,
  X_QA_COLLECTION_ID in NUMBER,
  X_CS_INCIDENT_ID in NUMBER,
  X_OBJECT_TYPE in VARCHAR2,
  X_APPLICATION_USG_CODE in VARCHAR2,
  X_COUNTER_ID in NUMBER,
  X_EARLIEST_DUE_DATE in DATE,
  X_LATEST_DUE_DATE in DATE,
  X_FORECAST_SEQUENCE in NUMBER,
  X_REPETITIVE_MR_FLAG in VARCHAR2,
  X_TOLERANCE_FLAG in VARCHAR2,
  X_MESSAGE_CODE in VARCHAR2,
  X_DATE_RUN in DATE,
  X_PRECEDING_UE_ID in NUMBER,
  X_SET_DUE_DATE in DATE,
  X_ACCOMPLISHED_DATE in DATE,
  X_SERVICE_LINE_ID in NUMBER,
  X_PROGRAM_MR_HEADER_ID in NUMBER,
  X_CANCEL_REASON_CODE in VARCHAR2,
  X_ATTRIBUTE_CATEGORY in VARCHAR2,
  X_ATTRIBUTE1 in VARCHAR2,
  X_ATTRIBUTE2 in VARCHAR2,
  X_ATTRIBUTE3 in VARCHAR2,
  X_ATTRIBUTE4 in VARCHAR2,
  X_ATTRIBUTE5 in VARCHAR2,
  X_ATTRIBUTE6 in VARCHAR2,
  X_ATTRIBUTE7 in VARCHAR2,
  X_ATTRIBUTE8 in VARCHAR2,
  X_ATTRIBUTE9 in VARCHAR2,
  X_ATTRIBUTE10 in VARCHAR2,
  X_ATTRIBUTE11 in VARCHAR2,
  X_ATTRIBUTE12 in VARCHAR2,
  X_ATTRIBUTE13 in VARCHAR2,
  X_ATTRIBUTE14 in VARCHAR2,
  X_ATTRIBUTE15 in VARCHAR2,
  X_OBJECT_VERSION_NUMBER in NUMBER,
  X_CSI_ITEM_INSTANCE_ID in NUMBER,
  X_MR_HEADER_ID in NUMBER,
  X_MR_EFFECTIVITY_ID in NUMBER,
  X_MR_INTERVAL_ID in NUMBER,
  X_STATUS_CODE in VARCHAR2,
  X_DUE_DATE in DATE,
  X_DUE_COUNTER_VALUE in NUMBER,
  X_DEFER_FROM_UE_ID in NUMBER,
  X_ORIG_DEFERRAL_UE_ID in NUMBER,
  X_REMARKS in VARCHAR2,
  X_CREATION_DATE in DATE,
  X_CREATED_BY in NUMBER,
  X_LAST_UPDATE_DATE in DATE,
  X_LAST_UPDATED_BY in NUMBER,
  X_LAST_UPDATE_LOGIN in NUMBER
) is
  cursor C is select ROWID from AHL_UNIT_EFFECTIVITIES_B
    where UNIT_EFFECTIVITY_ID = X_UNIT_EFFECTIVITY_ID
    ;
begin
  insert into AHL_UNIT_EFFECTIVITIES_B (
    MANUALLY_PLANNED_FLAG,
    LOG_SERIES_CODE,
    LOG_SERIES_NUMBER,
    FLIGHT_NUMBER,
    MEL_CDL_TYPE_CODE,
    POSITION_PATH_ID,
    ATA_CODE,
    --CLEAR_STATION_ORG_ID,
    --CLEAR_STATION_DEPT_ID,
    UNIT_CONFIG_HEADER_ID,
    QA_COLLECTION_ID,
    CS_INCIDENT_ID,
    OBJECT_TYPE,
    APPLICATION_USG_CODE,
    COUNTER_ID,
    EARLIEST_DUE_DATE,
    LATEST_DUE_DATE,
    FORECAST_SEQUENCE,
    REPETITIVE_MR_FLAG,
    TOLERANCE_FLAG,
    MESSAGE_CODE,
    DATE_RUN,
    PRECEDING_UE_ID,
    SET_DUE_DATE,
    ACCOMPLISHED_DATE,
    SERVICE_LINE_ID,
    PROGRAM_MR_HEADER_ID,
    CANCEL_REASON_CODE,
    ATTRIBUTE_CATEGORY,
    ATTRIBUTE1,
    ATTRIBUTE2,
    ATTRIBUTE3,
    ATTRIBUTE4,
    ATTRIBUTE5,
    ATTRIBUTE6,
    ATTRIBUTE7,
    ATTRIBUTE8,
    ATTRIBUTE9,
    ATTRIBUTE10,
    ATTRIBUTE11,
    ATTRIBUTE12,
    ATTRIBUTE13,
    ATTRIBUTE14,
    ATTRIBUTE15,
    UNIT_EFFECTIVITY_ID,
    OBJECT_VERSION_NUMBER,
    CSI_ITEM_INSTANCE_ID,
    MR_HEADER_ID,
    MR_EFFECTIVITY_ID,
    MR_INTERVAL_ID,
    STATUS_CODE,
    DUE_DATE,
    DUE_COUNTER_VALUE,
    DEFER_FROM_UE_ID,
    ORIG_DEFERRAL_UE_ID,
    CREATION_DATE,
    CREATED_BY,
    LAST_UPDATE_DATE,
    LAST_UPDATED_BY,
    LAST_UPDATE_LOGIN
  ) values (
    X_MANUALLY_PLANNED_FLAG,
    X_LOG_SERIES_CODE,
    X_LOG_SERIES_NUMBER,
    X_FLIGHT_NUMBER,
    X_MEL_CDL_TYPE_CODE,
    X_POSITION_PATH_ID,
    X_ATA_CODE,
    --X_CLEAR_STATION_ORG_ID,
    --X_CLEAR_STATION_DEPT_ID,
    X_UNIT_CONFIG_HEADER_ID,
    X_QA_COLLECTION_ID,
    X_CS_INCIDENT_ID,
    X_OBJECT_TYPE,
    X_APPLICATION_USG_CODE,
    X_COUNTER_ID,
    X_EARLIEST_DUE_DATE,
    X_LATEST_DUE_DATE,
    X_FORECAST_SEQUENCE,
    X_REPETITIVE_MR_FLAG,
    X_TOLERANCE_FLAG,
    X_MESSAGE_CODE,
    X_DATE_RUN,
    X_PRECEDING_UE_ID,
    X_SET_DUE_DATE,
    X_ACCOMPLISHED_DATE,
    X_SERVICE_LINE_ID,
    X_PROGRAM_MR_HEADER_ID,
    X_CANCEL_REASON_CODE,
    X_ATTRIBUTE_CATEGORY,
    X_ATTRIBUTE1,
    X_ATTRIBUTE2,
    X_ATTRIBUTE3,
    X_ATTRIBUTE4,
    X_ATTRIBUTE5,
    X_ATTRIBUTE6,
    X_ATTRIBUTE7,
    X_ATTRIBUTE8,
    X_ATTRIBUTE9,
    X_ATTRIBUTE10,
    X_ATTRIBUTE11,
    X_ATTRIBUTE12,
    X_ATTRIBUTE13,
    X_ATTRIBUTE14,
    X_ATTRIBUTE15,
    AHL_UNIT_EFFECTIVITIES_B_S.NEXTVAL,
    X_OBJECT_VERSION_NUMBER,
    X_CSI_ITEM_INSTANCE_ID,
    X_MR_HEADER_ID,
    X_MR_EFFECTIVITY_ID,
    X_MR_INTERVAL_ID,
    X_STATUS_CODE,
    X_DUE_DATE,
    X_DUE_COUNTER_VALUE,
    X_DEFER_FROM_UE_ID,
    X_ORIG_DEFERRAL_UE_ID,
    X_CREATION_DATE,
    X_CREATED_BY,
    X_LAST_UPDATE_DATE,
    X_LAST_UPDATED_BY,
    X_LAST_UPDATE_LOGIN
  ) RETURNING UNIT_EFFECTIVITY_ID INTO X_UNIT_EFFECTIVITY_ID;

  insert into AHL_UNIT_EFFECTIVITIES_TL (
    UNIT_EFFECTIVITY_ID,
    LAST_UPDATE_DATE,
    LAST_UPDATED_BY,
    CREATION_DATE,
    CREATED_BY,
    LAST_UPDATE_LOGIN,
    REMARKS,
    LANGUAGE,
    SOURCE_LANG
  ) select
    X_UNIT_EFFECTIVITY_ID,
    X_LAST_UPDATE_DATE,
    X_LAST_UPDATED_BY,
    X_CREATION_DATE,
    X_CREATED_BY,
    X_LAST_UPDATE_LOGIN,
    X_REMARKS,
    L.LANGUAGE_CODE,
    userenv('LANG')
  from FND_LANGUAGES L
  where L.INSTALLED_FLAG in ('I', 'B')
  and not exists
    (select NULL
    from AHL_UNIT_EFFECTIVITIES_TL T
    where T.UNIT_EFFECTIVITY_ID = X_UNIT_EFFECTIVITY_ID
    and T.LANGUAGE = L.LANGUAGE_CODE);

  open c;
  fetch c into X_ROWID;
  if (c%notfound) then
    close c;
    raise no_data_found;
  end if;
  close c;

end INSERT_ROW;

procedure LOCK_ROW (
  X_UNIT_EFFECTIVITY_ID in NUMBER,
  X_MANUALLY_PLANNED_FLAG in VARCHAR2,
  X_LOG_SERIES_CODE in VARCHAR2,
  X_LOG_SERIES_NUMBER in NUMBER,
  X_FLIGHT_NUMBER in VARCHAR2,
  X_MEL_CDL_TYPE_CODE in VARCHAR2,
  X_POSITION_PATH_ID in NUMBER,
  X_ATA_CODE in VARCHAR2,
  --X_CLEAR_STATION_ORG_ID in NUMBER,
  --X_CLEAR_STATION_DEPT_ID in NUMBER,
  X_UNIT_CONFIG_HEADER_ID in NUMBER,
  X_QA_COLLECTION_ID in NUMBER,
  X_CS_INCIDENT_ID in NUMBER,
  X_OBJECT_TYPE in VARCHAR2,
  X_APPLICATION_USG_CODE in VARCHAR2,
  X_COUNTER_ID in NUMBER,
  X_EARLIEST_DUE_DATE in DATE,
  X_LATEST_DUE_DATE in DATE,
  X_FORECAST_SEQUENCE in NUMBER,
  X_REPETITIVE_MR_FLAG in VARCHAR2,
  X_TOLERANCE_FLAG in VARCHAR2,
  X_MESSAGE_CODE in VARCHAR2,
  X_DATE_RUN in DATE,
  X_PRECEDING_UE_ID in NUMBER,
  X_SET_DUE_DATE in DATE,
  X_ACCOMPLISHED_DATE in DATE,
  X_SERVICE_LINE_ID in NUMBER,
  X_PROGRAM_MR_HEADER_ID in NUMBER,
  X_CANCEL_REASON_CODE in VARCHAR2,
  X_ATTRIBUTE_CATEGORY in VARCHAR2,
  X_ATTRIBUTE1 in VARCHAR2,
  X_ATTRIBUTE2 in VARCHAR2,
  X_ATTRIBUTE3 in VARCHAR2,
  X_ATTRIBUTE4 in VARCHAR2,
  X_ATTRIBUTE5 in VARCHAR2,
  X_ATTRIBUTE6 in VARCHAR2,
  X_ATTRIBUTE7 in VARCHAR2,
  X_ATTRIBUTE8 in VARCHAR2,
  X_ATTRIBUTE9 in VARCHAR2,
  X_ATTRIBUTE10 in VARCHAR2,
  X_ATTRIBUTE11 in VARCHAR2,
  X_ATTRIBUTE12 in VARCHAR2,
  X_ATTRIBUTE13 in VARCHAR2,
  X_ATTRIBUTE14 in VARCHAR2,
  X_ATTRIBUTE15 in VARCHAR2,
  X_OBJECT_VERSION_NUMBER in NUMBER,
  X_CSI_ITEM_INSTANCE_ID in NUMBER,
  X_MR_HEADER_ID in NUMBER,
  X_MR_EFFECTIVITY_ID in NUMBER,
  X_MR_INTERVAL_ID in NUMBER,
  X_STATUS_CODE in VARCHAR2,
  X_DUE_DATE in DATE,
  X_DUE_COUNTER_VALUE in NUMBER,
  X_DEFER_FROM_UE_ID in NUMBER,
  X_ORIG_DEFERRAL_UE_ID in NUMBER,
  X_REMARKS in VARCHAR2
) is
  cursor c is select
      MANUALLY_PLANNED_FLAG,
      LOG_SERIES_CODE,
      LOG_SERIES_NUMBER,
      FLIGHT_NUMBER,
      MEL_CDL_TYPE_CODE,
      POSITION_PATH_ID,
      ATA_CODE,
      --CLEAR_STATION_ORG_ID,
      --CLEAR_STATION_DEPT_ID,
      UNIT_CONFIG_HEADER_ID,
      QA_COLLECTION_ID,
      CS_INCIDENT_ID,
      OBJECT_TYPE,
      APPLICATION_USG_CODE,
      COUNTER_ID,
      EARLIEST_DUE_DATE,
      LATEST_DUE_DATE,
      FORECAST_SEQUENCE,
      REPETITIVE_MR_FLAG,
      TOLERANCE_FLAG,
      MESSAGE_CODE,
      DATE_RUN,
      PRECEDING_UE_ID,
      SET_DUE_DATE,
      ACCOMPLISHED_DATE,
      SERVICE_LINE_ID,
      PROGRAM_MR_HEADER_ID,
      CANCEL_REASON_CODE,
      ATTRIBUTE_CATEGORY,
      ATTRIBUTE1,
      ATTRIBUTE2,
      ATTRIBUTE3,
      ATTRIBUTE4,
      ATTRIBUTE5,
      ATTRIBUTE6,
      ATTRIBUTE7,
      ATTRIBUTE8,
      ATTRIBUTE9,
      ATTRIBUTE10,
      ATTRIBUTE11,
      ATTRIBUTE12,
      ATTRIBUTE13,
      ATTRIBUTE14,
      ATTRIBUTE15,
      OBJECT_VERSION_NUMBER,
      CSI_ITEM_INSTANCE_ID,
      MR_HEADER_ID,
      MR_EFFECTIVITY_ID,
      MR_INTERVAL_ID,
      STATUS_CODE,
      DUE_DATE,
      DUE_COUNTER_VALUE,
      DEFER_FROM_UE_ID,
      ORIG_DEFERRAL_UE_ID
    from AHL_UNIT_EFFECTIVITIES_B
    where UNIT_EFFECTIVITY_ID = X_UNIT_EFFECTIVITY_ID
    for update of UNIT_EFFECTIVITY_ID nowait;
  recinfo c%rowtype;

  cursor c1 is select
      REMARKS,
      decode(LANGUAGE, userenv('LANG'), 'Y', 'N') BASELANG
    from AHL_UNIT_EFFECTIVITIES_TL
    where UNIT_EFFECTIVITY_ID = X_UNIT_EFFECTIVITY_ID
    and userenv('LANG') in (LANGUAGE, SOURCE_LANG)
    for update of UNIT_EFFECTIVITY_ID nowait;
begin
  open c;
  fetch c into recinfo;
  if (c%notfound) then
    close c;
    fnd_message.set_name('FND', 'FORM_RECORD_DELETED');
    app_exception.raise_exception;
  end if;
  close c;
  if (    ((recinfo.MANUALLY_PLANNED_FLAG = X_MANUALLY_PLANNED_FLAG)
           OR ((recinfo.MANUALLY_PLANNED_FLAG is null) AND (X_MANUALLY_PLANNED_FLAG is null)))
      AND ((recinfo.LOG_SERIES_CODE = X_LOG_SERIES_CODE)
           OR ((recinfo.LOG_SERIES_CODE is null) AND (X_LOG_SERIES_CODE is null)))
      AND ((recinfo.LOG_SERIES_NUMBER = X_LOG_SERIES_NUMBER)
           OR ((recinfo.LOG_SERIES_NUMBER is null) AND (X_LOG_SERIES_NUMBER is null)))
      AND ((recinfo.FLIGHT_NUMBER = X_FLIGHT_NUMBER)
           OR ((recinfo.FLIGHT_NUMBER is null) AND (X_FLIGHT_NUMBER is null)))
      AND ((recinfo.MEL_CDL_TYPE_CODE = X_MEL_CDL_TYPE_CODE)
           OR ((recinfo.MEL_CDL_TYPE_CODE is null) AND (X_MEL_CDL_TYPE_CODE is null)))
      AND ((recinfo.POSITION_PATH_ID = X_POSITION_PATH_ID)
           OR ((recinfo.POSITION_PATH_ID is null) AND (X_POSITION_PATH_ID is null)))
      AND ((recinfo.ATA_CODE = X_ATA_CODE)
           OR ((recinfo.ATA_CODE is null) AND (X_ATA_CODE is null)))
      --AND ((recinfo.CLEAR_STATION_ORG_ID = X_CLEAR_STATION_ORG_ID)
      --     OR ((recinfo.CLEAR_STATION_ORG_ID is null) AND (X_CLEAR_STATION_ORG_ID is null)))
      --AND ((recinfo.CLEAR_STATION_DEPT_ID = X_CLEAR_STATION_DEPT_ID)
      --     OR ((recinfo.CLEAR_STATION_DEPT_ID is null) AND (X_CLEAR_STATION_DEPT_ID is null)))
      AND ((recinfo.UNIT_CONFIG_HEADER_ID = X_UNIT_CONFIG_HEADER_ID)
           OR ((recinfo.UNIT_CONFIG_HEADER_ID is null) AND (X_UNIT_CONFIG_HEADER_ID is null)))
      AND ((recinfo.QA_COLLECTION_ID = X_QA_COLLECTION_ID)
           OR ((recinfo.QA_COLLECTION_ID is null) AND (X_QA_COLLECTION_ID is null)))
      AND ((recinfo.CS_INCIDENT_ID = X_CS_INCIDENT_ID)
           OR ((recinfo.CS_INCIDENT_ID is null) AND (X_CS_INCIDENT_ID is null)))
      AND ((recinfo.OBJECT_TYPE = X_OBJECT_TYPE)
           OR ((recinfo.OBJECT_TYPE is null) AND (X_OBJECT_TYPE is null)))
      AND ((recinfo.APPLICATION_USG_CODE = X_APPLICATION_USG_CODE)
           OR ((recinfo.APPLICATION_USG_CODE is null) AND (X_APPLICATION_USG_CODE is null)))
      AND ((recinfo.COUNTER_ID = X_COUNTER_ID)
           OR ((recinfo.COUNTER_ID is null) AND (X_COUNTER_ID is null)))
      AND ((recinfo.EARLIEST_DUE_DATE = X_EARLIEST_DUE_DATE)
           OR ((recinfo.EARLIEST_DUE_DATE is null) AND (X_EARLIEST_DUE_DATE is null)))
      AND ((recinfo.LATEST_DUE_DATE = X_LATEST_DUE_DATE)
           OR ((recinfo.LATEST_DUE_DATE is null) AND (X_LATEST_DUE_DATE is null)))
      AND ((recinfo.FORECAST_SEQUENCE = X_FORECAST_SEQUENCE)
           OR ((recinfo.FORECAST_SEQUENCE is null) AND (X_FORECAST_SEQUENCE is null)))
      AND ((recinfo.REPETITIVE_MR_FLAG = X_REPETITIVE_MR_FLAG)
           OR ((recinfo.REPETITIVE_MR_FLAG is null) AND (X_REPETITIVE_MR_FLAG is null)))
      AND ((recinfo.TOLERANCE_FLAG = X_TOLERANCE_FLAG)
           OR ((recinfo.TOLERANCE_FLAG is null) AND (X_TOLERANCE_FLAG is null)))
      AND ((recinfo.MESSAGE_CODE = X_MESSAGE_CODE)
           OR ((recinfo.MESSAGE_CODE is null) AND (X_MESSAGE_CODE is null)))
      AND ((recinfo.DATE_RUN = X_DATE_RUN)
           OR ((recinfo.DATE_RUN is null) AND (X_DATE_RUN is null)))
      AND ((recinfo.PRECEDING_UE_ID = X_PRECEDING_UE_ID)
           OR ((recinfo.PRECEDING_UE_ID is null) AND (X_PRECEDING_UE_ID is null)))
      AND ((recinfo.SET_DUE_DATE = X_SET_DUE_DATE)
           OR ((recinfo.SET_DUE_DATE is null) AND (X_SET_DUE_DATE is null)))
      AND ((recinfo.ACCOMPLISHED_DATE = X_ACCOMPLISHED_DATE)
           OR ((recinfo.ACCOMPLISHED_DATE is null) AND (X_ACCOMPLISHED_DATE is null)))
      AND ((recinfo.SERVICE_LINE_ID = X_SERVICE_LINE_ID)
           OR ((recinfo.SERVICE_LINE_ID is null) AND (X_SERVICE_LINE_ID is null)))
      AND ((recinfo.PROGRAM_MR_HEADER_ID = X_PROGRAM_MR_HEADER_ID)
           OR ((recinfo.PROGRAM_MR_HEADER_ID is null) AND (X_PROGRAM_MR_HEADER_ID is null)))
      AND ((recinfo.CANCEL_REASON_CODE = X_CANCEL_REASON_CODE)
           OR ((recinfo.CANCEL_REASON_CODE is null) AND (X_CANCEL_REASON_CODE is null)))
      AND ((recinfo.ATTRIBUTE_CATEGORY = X_ATTRIBUTE_CATEGORY)
           OR ((recinfo.ATTRIBUTE_CATEGORY is null) AND (X_ATTRIBUTE_CATEGORY is null)))
      AND ((recinfo.ATTRIBUTE1 = X_ATTRIBUTE1)
           OR ((recinfo.ATTRIBUTE1 is null) AND (X_ATTRIBUTE1 is null)))
      AND ((recinfo.ATTRIBUTE2 = X_ATTRIBUTE2)
           OR ((recinfo.ATTRIBUTE2 is null) AND (X_ATTRIBUTE2 is null)))
      AND ((recinfo.ATTRIBUTE3 = X_ATTRIBUTE3)
           OR ((recinfo.ATTRIBUTE3 is null) AND (X_ATTRIBUTE3 is null)))
      AND ((recinfo.ATTRIBUTE4 = X_ATTRIBUTE4)
           OR ((recinfo.ATTRIBUTE4 is null) AND (X_ATTRIBUTE4 is null)))
      AND ((recinfo.ATTRIBUTE5 = X_ATTRIBUTE5)
           OR ((recinfo.ATTRIBUTE5 is null) AND (X_ATTRIBUTE5 is null)))
      AND ((recinfo.ATTRIBUTE6 = X_ATTRIBUTE6)
           OR ((recinfo.ATTRIBUTE6 is null) AND (X_ATTRIBUTE6 is null)))
      AND ((recinfo.ATTRIBUTE7 = X_ATTRIBUTE7)
           OR ((recinfo.ATTRIBUTE7 is null) AND (X_ATTRIBUTE7 is null)))
      AND ((recinfo.ATTRIBUTE8 = X_ATTRIBUTE8)
           OR ((recinfo.ATTRIBUTE8 is null) AND (X_ATTRIBUTE8 is null)))
      AND ((recinfo.ATTRIBUTE9 = X_ATTRIBUTE9)
           OR ((recinfo.ATTRIBUTE9 is null) AND (X_ATTRIBUTE9 is null)))
      AND ((recinfo.ATTRIBUTE10 = X_ATTRIBUTE10)
           OR ((recinfo.ATTRIBUTE10 is null) AND (X_ATTRIBUTE10 is null)))
      AND ((recinfo.ATTRIBUTE11 = X_ATTRIBUTE11)
           OR ((recinfo.ATTRIBUTE11 is null) AND (X_ATTRIBUTE11 is null)))
      AND ((recinfo.ATTRIBUTE12 = X_ATTRIBUTE12)
           OR ((recinfo.ATTRIBUTE12 is null) AND (X_ATTRIBUTE12 is null)))
      AND ((recinfo.ATTRIBUTE13 = X_ATTRIBUTE13)
           OR ((recinfo.ATTRIBUTE13 is null) AND (X_ATTRIBUTE13 is null)))
      AND ((recinfo.ATTRIBUTE14 = X_ATTRIBUTE14)
           OR ((recinfo.ATTRIBUTE14 is null) AND (X_ATTRIBUTE14 is null)))
      AND ((recinfo.ATTRIBUTE15 = X_ATTRIBUTE15)
           OR ((recinfo.ATTRIBUTE15 is null) AND (X_ATTRIBUTE15 is null)))
      AND (recinfo.OBJECT_VERSION_NUMBER = X_OBJECT_VERSION_NUMBER)
      AND (recinfo.CSI_ITEM_INSTANCE_ID = X_CSI_ITEM_INSTANCE_ID)
      AND ((recinfo.MR_HEADER_ID = X_MR_HEADER_ID)
           OR ((recinfo.MR_HEADER_ID is null) AND (X_MR_HEADER_ID is null)))
      AND ((recinfo.MR_EFFECTIVITY_ID = X_MR_EFFECTIVITY_ID)
           OR ((recinfo.MR_EFFECTIVITY_ID is null) AND (X_MR_EFFECTIVITY_ID is null)))
      AND ((recinfo.MR_INTERVAL_ID = X_MR_INTERVAL_ID)
           OR ((recinfo.MR_INTERVAL_ID is null) AND (X_MR_INTERVAL_ID is null)))
      AND ((recinfo.STATUS_CODE = X_STATUS_CODE)
           OR ((recinfo.STATUS_CODE is null) AND (X_STATUS_CODE is null)))
      AND ((recinfo.DUE_DATE = X_DUE_DATE)
           OR ((recinfo.DUE_DATE is null) AND (X_DUE_DATE is null)))
      AND ((recinfo.DUE_COUNTER_VALUE = X_DUE_COUNTER_VALUE)
           OR ((recinfo.DUE_COUNTER_VALUE is null) AND (X_DUE_COUNTER_VALUE is null)))
      AND ((recinfo.DEFER_FROM_UE_ID = X_DEFER_FROM_UE_ID)
           OR ((recinfo.DEFER_FROM_UE_ID is null) AND (X_DEFER_FROM_UE_ID is null)))
      AND ((recinfo.ORIG_DEFERRAL_UE_ID = X_ORIG_DEFERRAL_UE_ID)
           OR ((recinfo.ORIG_DEFERRAL_UE_ID is null) AND (X_ORIG_DEFERRAL_UE_ID is null)))
  ) then
    null;
  else
    fnd_message.set_name('FND', 'FORM_RECORD_CHANGED');
    app_exception.raise_exception;
  end if;

  for tlinfo in c1 loop
    if (tlinfo.BASELANG = 'Y') then
      if (    ((tlinfo.REMARKS = X_REMARKS)
               OR ((tlinfo.REMARKS is null) AND (X_REMARKS is null)))
      ) then
        null;
      else
        fnd_message.set_name('FND', 'FORM_RECORD_CHANGED');
        app_exception.raise_exception;
      end if;
    end if;
  end loop;
  return;
end LOCK_ROW;

procedure UPDATE_ROW (
  X_UNIT_EFFECTIVITY_ID in NUMBER,
  X_MANUALLY_PLANNED_FLAG in VARCHAR2,
  X_LOG_SERIES_CODE in VARCHAR2,
  X_LOG_SERIES_NUMBER in NUMBER,
  X_FLIGHT_NUMBER in VARCHAR2,
  X_MEL_CDL_TYPE_CODE in VARCHAR2,
  X_POSITION_PATH_ID in NUMBER,
  X_ATA_CODE in VARCHAR2,
  --X_CLEAR_STATION_ORG_ID in NUMBER,
  --X_CLEAR_STATION_DEPT_ID in NUMBER,
  X_UNIT_CONFIG_HEADER_ID in NUMBER,
  X_QA_COLLECTION_ID in NUMBER,
  X_CS_INCIDENT_ID in NUMBER,
  X_OBJECT_TYPE in VARCHAR2,
  X_APPLICATION_USG_CODE in VARCHAR2,
  X_COUNTER_ID in NUMBER,
  X_EARLIEST_DUE_DATE in DATE,
  X_LATEST_DUE_DATE in DATE,
  X_FORECAST_SEQUENCE in NUMBER,
  X_REPETITIVE_MR_FLAG in VARCHAR2,
  X_TOLERANCE_FLAG in VARCHAR2,
  X_MESSAGE_CODE in VARCHAR2,
  X_DATE_RUN in DATE,
  X_PRECEDING_UE_ID in NUMBER,
  X_SET_DUE_DATE in DATE,
  X_ACCOMPLISHED_DATE in DATE,
  X_SERVICE_LINE_ID in NUMBER,
  X_PROGRAM_MR_HEADER_ID in NUMBER,
  X_CANCEL_REASON_CODE in VARCHAR2,
  X_ATTRIBUTE_CATEGORY in VARCHAR2,
  X_ATTRIBUTE1 in VARCHAR2,
  X_ATTRIBUTE2 in VARCHAR2,
  X_ATTRIBUTE3 in VARCHAR2,
  X_ATTRIBUTE4 in VARCHAR2,
  X_ATTRIBUTE5 in VARCHAR2,
  X_ATTRIBUTE6 in VARCHAR2,
  X_ATTRIBUTE7 in VARCHAR2,
  X_ATTRIBUTE8 in VARCHAR2,
  X_ATTRIBUTE9 in VARCHAR2,
  X_ATTRIBUTE10 in VARCHAR2,
  X_ATTRIBUTE11 in VARCHAR2,
  X_ATTRIBUTE12 in VARCHAR2,
  X_ATTRIBUTE13 in VARCHAR2,
  X_ATTRIBUTE14 in VARCHAR2,
  X_ATTRIBUTE15 in VARCHAR2,
  X_OBJECT_VERSION_NUMBER in NUMBER,
  X_CSI_ITEM_INSTANCE_ID in NUMBER,
  X_MR_HEADER_ID in NUMBER,
  X_MR_EFFECTIVITY_ID in NUMBER,
  X_MR_INTERVAL_ID in NUMBER,
  X_STATUS_CODE in VARCHAR2,
  X_DUE_DATE in DATE,
  X_DUE_COUNTER_VALUE in NUMBER,
  X_DEFER_FROM_UE_ID in NUMBER,
  X_ORIG_DEFERRAL_UE_ID in NUMBER,
  X_REMARKS in VARCHAR2,
  X_LAST_UPDATE_DATE in DATE,
  X_LAST_UPDATED_BY in NUMBER,
  X_LAST_UPDATE_LOGIN in NUMBER
) is
begin
  update AHL_UNIT_EFFECTIVITIES_B set
    MANUALLY_PLANNED_FLAG = X_MANUALLY_PLANNED_FLAG,
    LOG_SERIES_CODE = X_LOG_SERIES_CODE,
    LOG_SERIES_NUMBER = X_LOG_SERIES_NUMBER,
    FLIGHT_NUMBER = X_FLIGHT_NUMBER,
    MEL_CDL_TYPE_CODE = X_MEL_CDL_TYPE_CODE,
    POSITION_PATH_ID = X_POSITION_PATH_ID,
    ATA_CODE = X_ATA_CODE,
    --CLEAR_STATION_ORG_ID = X_CLEAR_STATION_ORG_ID,
    --CLEAR_STATION_DEPT_ID = X_CLEAR_STATION_DEPT_ID,
    UNIT_CONFIG_HEADER_ID = X_UNIT_CONFIG_HEADER_ID,
    QA_COLLECTION_ID = X_QA_COLLECTION_ID,
    CS_INCIDENT_ID = X_CS_INCIDENT_ID,
    OBJECT_TYPE = X_OBJECT_TYPE,
    APPLICATION_USG_CODE = X_APPLICATION_USG_CODE,
    COUNTER_ID = X_COUNTER_ID,
    EARLIEST_DUE_DATE = X_EARLIEST_DUE_DATE,
    LATEST_DUE_DATE = X_LATEST_DUE_DATE,
    FORECAST_SEQUENCE = X_FORECAST_SEQUENCE,
    REPETITIVE_MR_FLAG = X_REPETITIVE_MR_FLAG,
    TOLERANCE_FLAG = X_TOLERANCE_FLAG,
    MESSAGE_CODE = X_MESSAGE_CODE,
    DATE_RUN = X_DATE_RUN,
    PRECEDING_UE_ID = X_PRECEDING_UE_ID,
    SET_DUE_DATE = X_SET_DUE_DATE,
    ACCOMPLISHED_DATE = X_ACCOMPLISHED_DATE,
    SERVICE_LINE_ID = X_SERVICE_LINE_ID,
    PROGRAM_MR_HEADER_ID = X_PROGRAM_MR_HEADER_ID,
    CANCEL_REASON_CODE = X_CANCEL_REASON_CODE,
    ATTRIBUTE_CATEGORY = X_ATTRIBUTE_CATEGORY,
    ATTRIBUTE1 = X_ATTRIBUTE1,
    ATTRIBUTE2 = X_ATTRIBUTE2,
    ATTRIBUTE3 = X_ATTRIBUTE3,
    ATTRIBUTE4 = X_ATTRIBUTE4,
    ATTRIBUTE5 = X_ATTRIBUTE5,
    ATTRIBUTE6 = X_ATTRIBUTE6,
    ATTRIBUTE7 = X_ATTRIBUTE7,
    ATTRIBUTE8 = X_ATTRIBUTE8,
    ATTRIBUTE9 = X_ATTRIBUTE9,
    ATTRIBUTE10 = X_ATTRIBUTE10,
    ATTRIBUTE11 = X_ATTRIBUTE11,
    ATTRIBUTE12 = X_ATTRIBUTE12,
    ATTRIBUTE13 = X_ATTRIBUTE13,
    ATTRIBUTE14 = X_ATTRIBUTE14,
    ATTRIBUTE15 = X_ATTRIBUTE15,
    OBJECT_VERSION_NUMBER = X_OBJECT_VERSION_NUMBER,
    CSI_ITEM_INSTANCE_ID = X_CSI_ITEM_INSTANCE_ID,
    MR_HEADER_ID = X_MR_HEADER_ID,
    MR_EFFECTIVITY_ID = X_MR_EFFECTIVITY_ID,
    MR_INTERVAL_ID = X_MR_INTERVAL_ID,
    STATUS_CODE = X_STATUS_CODE,
    DUE_DATE = X_DUE_DATE,
    DUE_COUNTER_VALUE = X_DUE_COUNTER_VALUE,
    DEFER_FROM_UE_ID = X_DEFER_FROM_UE_ID,
    ORIG_DEFERRAL_UE_ID = X_ORIG_DEFERRAL_UE_ID,
    LAST_UPDATE_DATE = X_LAST_UPDATE_DATE,
    LAST_UPDATED_BY = X_LAST_UPDATED_BY,
    LAST_UPDATE_LOGIN = X_LAST_UPDATE_LOGIN
  where UNIT_EFFECTIVITY_ID = X_UNIT_EFFECTIVITY_ID;

  if (sql%notfound) then
    raise no_data_found;
  end if;

  update AHL_UNIT_EFFECTIVITIES_TL set
    REMARKS = X_REMARKS,
    LAST_UPDATE_DATE = X_LAST_UPDATE_DATE,
    LAST_UPDATED_BY = X_LAST_UPDATED_BY,
    LAST_UPDATE_LOGIN = X_LAST_UPDATE_LOGIN,
    SOURCE_LANG = userenv('LANG')
  where UNIT_EFFECTIVITY_ID = X_UNIT_EFFECTIVITY_ID
  and userenv('LANG') in (LANGUAGE, SOURCE_LANG);

  if (sql%notfound) then
    raise no_data_found;
  end if;
end UPDATE_ROW;

procedure DELETE_ROW (
  X_UNIT_EFFECTIVITY_ID in NUMBER
) is
begin
  delete from AHL_UNIT_EFFECTIVITIES_TL
  where UNIT_EFFECTIVITY_ID = X_UNIT_EFFECTIVITY_ID;

  if (sql%notfound) then
    raise no_data_found;
  end if;

  delete from AHL_UNIT_EFFECTIVITIES_B
  where UNIT_EFFECTIVITY_ID = X_UNIT_EFFECTIVITY_ID;

  if (sql%notfound) then
    raise no_data_found;
  end if;
end DELETE_ROW;

procedure ADD_LANGUAGE
is
begin
  delete from AHL_UNIT_EFFECTIVITIES_TL T
  where not exists
    (select NULL
    from AHL_UNIT_EFFECTIVITIES_B B
    where B.UNIT_EFFECTIVITY_ID = T.UNIT_EFFECTIVITY_ID
    );

  update AHL_UNIT_EFFECTIVITIES_TL T set (
      REMARKS
    ) = (select
      B.REMARKS
    from AHL_UNIT_EFFECTIVITIES_TL B
    where B.UNIT_EFFECTIVITY_ID = T.UNIT_EFFECTIVITY_ID
    and B.LANGUAGE = T.SOURCE_LANG)
  where (
      T.UNIT_EFFECTIVITY_ID,
      T.LANGUAGE
  ) in (select
      SUBT.UNIT_EFFECTIVITY_ID,
      SUBT.LANGUAGE
    from AHL_UNIT_EFFECTIVITIES_TL SUBB, AHL_UNIT_EFFECTIVITIES_TL SUBT
    where SUBB.UNIT_EFFECTIVITY_ID = SUBT.UNIT_EFFECTIVITY_ID
    and SUBB.LANGUAGE = SUBT.SOURCE_LANG
    and (SUBB.REMARKS <> SUBT.REMARKS
      or (SUBB.REMARKS is null and SUBT.REMARKS is not null)
      or (SUBB.REMARKS is not null and SUBT.REMARKS is null)
  ));

  insert into AHL_UNIT_EFFECTIVITIES_TL (
    UNIT_EFFECTIVITY_ID,
    LAST_UPDATE_DATE,
    LAST_UPDATED_BY,
    CREATION_DATE,
    CREATED_BY,
    LAST_UPDATE_LOGIN,
    REMARKS,
    LANGUAGE,
    SOURCE_LANG
  ) select
    B.UNIT_EFFECTIVITY_ID,
    B.LAST_UPDATE_DATE,
    B.LAST_UPDATED_BY,
    B.CREATION_DATE,
    B.CREATED_BY,
    B.LAST_UPDATE_LOGIN,
    B.REMARKS,
    L.LANGUAGE_CODE,
    B.SOURCE_LANG
  from AHL_UNIT_EFFECTIVITIES_TL B, FND_LANGUAGES L
  where L.INSTALLED_FLAG in ('I', 'B')
  and B.LANGUAGE = userenv('LANG')
  and not exists
    (select NULL
    from AHL_UNIT_EFFECTIVITIES_TL T
    where T.UNIT_EFFECTIVITY_ID = B.UNIT_EFFECTIVITY_ID
    and T.LANGUAGE = L.LANGUAGE_CODE);
end ADD_LANGUAGE;

end AHL_UNIT_EFFECTIVITIES_PKG;

/
