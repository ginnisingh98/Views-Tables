--------------------------------------------------------
--  DDL for Package Body IGI_IGIIACAR_XMLP_PKG
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE PACKAGE BODY "APPS"."IGI_IGIIACAR_XMLP_PKG" AS
/* $Header: IGIIACARB.pls 120.0.12010000.1 2008/07/29 08:58:24 appldev ship $ */
  FUNCTION AFTERREPORT RETURN BOOLEAN IS
  BEGIN
    /*SRW.USER_EXIT('FND SRWEXIT')*/NULL;
    RETURN (TRUE);
  END AFTERREPORT;
function BeforeReport return boolean is

 lv_message varchar2(200);
 t_account_flex_structure NUMBER;

begin
  if not igi_gen.is_req_installed('IAC') then
    fnd_message.set_name('IGI','IGI_IAC_NOT_INSTALLED');
    lv_message := fnd_message.get;
  --  srw.message(100,lv_message);
    RAISE_APPLICATION_ERROR(-20101,null);
  end if;




  Select fa.accounting_flex_structure
  into t_account_flex_structure
  From fa_book_controls fa
  Where fa.book_type_code = p_book_type_code;

  STRUCT_NUM := to_char(t_account_flex_structure);


 -- SRW.REFERENCE(:STRUCT_NUM);

/*  SRW.USER_EXIT('FND FLEXSQL
                 CODE="GL#"
                 APPL_SHORT_NAME="SQLGL"
                 OUTPUT=":CP_FLEX_DATA_ITEM"
                 MODE="SELECT"
                 DISPLAY="ALL"
                 NUM=":STRUCT_NUM"
                 TABLEALIAS="GL_ITEM"');*/


   return (TRUE);


end;
  FUNCTION CF_DATA_FOUNDFORMULA(CATEGORY_ID IN NUMBER) RETURN NUMBER IS
  BEGIN
    IF CATEGORY_ID IS NULL THEN
      RP_DATA_FOUND := 'N';
    ELSE
      RP_DATA_FOUND := 'Y';
    END IF;
    RETURN 0;
  END CF_DATA_FOUNDFORMULA;

  FUNCTION CF_PERIOD_FROMFORMULA RETURN NUMBER IS
  BEGIN
    IF (P_PERIOD_COUNTER_FROM IS NOT NULL) THEN
      SELECT
        PERIOD_NAME
      INTO CP_PERIOD_FROM
      FROM
        FA_DEPRN_PERIODS
      WHERE PERIOD_COUNTER = P_PERIOD_COUNTER_FROM
        AND BOOK_TYPE_CODE = P_BOOK_TYPE_CODE;
    ELSE
      CP_PERIOD_FROM := '-';
    END IF;
    RETURN (1);
  END CF_PERIOD_FROMFORMULA;

  FUNCTION CF_PERIOD_TOFORMULA RETURN NUMBER IS
  BEGIN
    IF (P_PERIOD_COUNTER_TO IS NOT NULL) THEN
      SELECT
        PERIOD_NAME
      INTO CP_PERIOD_TO
      FROM
        FA_DEPRN_PERIODS
      WHERE PERIOD_COUNTER = P_PERIOD_COUNTER_TO
        AND BOOK_TYPE_CODE = P_BOOK_TYPE_CODE;
    ELSE
      CP_PERIOD_TO := '-';
    END IF;
    RETURN (1);
  END CF_PERIOD_TOFORMULA;

  FUNCTION CF_CURR_CODEFORMULA RETURN NUMBER IS
  BEGIN
    SELECT
      A.CURRENCY_CODE
    INTO CP_CURR_CODE
    FROM
      GL_SETS_OF_BOOKS A,
      FA_BOOK_CONTROLS B
    WHERE A.SET_OF_BOOKS_ID = B.SET_OF_BOOKS_ID
      AND B.BOOK_TYPE_CODE = P_BOOK_TYPE_CODE;
    RETURN (1);
  EXCEPTION
    WHEN OTHERS THEN
      /*SRW.MESSAGE(100
                 ,'Failed. Currency code not defined')*/NULL;
      /*RAISE SRW.PROGRAM_ABORT*/RAISE_APPLICATION_ERROR(-20101,null);
      RETURN (1);
  END CF_CURR_CODEFORMULA;

  FUNCTION CF_DR_AMOUNTFORMULA(DR_CR_FLAG IN VARCHAR2
                              ,AMOUNT IN NUMBER) RETURN NUMBER IS
  BEGIN
    IF DR_CR_FLAG = 'DR' THEN
      CP_DR_AMOUNT := AMOUNT;
    ELSE
      CP_DR_AMOUNT := NULL;
    END IF;
    RETURN (1);
  END CF_DR_AMOUNTFORMULA;

  FUNCTION CF_CR_AMOUNTFORMULA(DR_CR_FLAG IN VARCHAR2
                              ,AMOUNT IN NUMBER) RETURN NUMBER IS
  BEGIN
    IF DR_CR_FLAG = 'CR' THEN
      CP_CR_AMOUNT := AMOUNT;
    ELSE
      CP_CR_AMOUNT := NULL;
    END IF;
    RETURN (1);
  END CF_CR_AMOUNTFORMULA;

  FUNCTION CP_DR_AMOUNT_P RETURN NUMBER IS
  BEGIN
    RETURN CP_DR_AMOUNT;
  END CP_DR_AMOUNT_P;

  FUNCTION CP_CR_AMOUNT_P RETURN NUMBER IS
  BEGIN
    RETURN CP_CR_AMOUNT;
  END CP_CR_AMOUNT_P;

  FUNCTION CP_PERIOD_FROM_P RETURN VARCHAR2 IS
  BEGIN
    RETURN CP_PERIOD_FROM;
  END CP_PERIOD_FROM_P;

  FUNCTION CP_PERIOD_TO_P RETURN VARCHAR2 IS
  BEGIN
    RETURN CP_PERIOD_TO;
  END CP_PERIOD_TO_P;

  FUNCTION CP_CURR_CODE_P RETURN VARCHAR2 IS
  BEGIN
    RETURN CP_CURR_CODE;
  END CP_CURR_CODE_P;

  FUNCTION STRUCT_NUM_P RETURN VARCHAR2 IS
  BEGIN
    RETURN STRUCT_NUM;
  END STRUCT_NUM_P;

  FUNCTION CP_FLEX_DATA_ITEM_P RETURN VARCHAR2 IS
  BEGIN
    RETURN CP_FLEX_DATA_ITEM;
  END CP_FLEX_DATA_ITEM_P;

  FUNCTION RP_DATA_FOUND_P RETURN VARCHAR2 IS
  BEGIN
    RETURN RP_DATA_FOUND;
  END RP_DATA_FOUND_P;

END IGI_IGIIACAR_XMLP_PKG;


/
