--------------------------------------------------------
--  DDL for Package Body JL_JLCOGLAM_XMLP_PKG
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE PACKAGE BODY "APPS"."JL_JLCOGLAM_XMLP_PKG" AS
/* $Header: JLCOGLAMB.pls 120.1 2007/12/25 16:47:39 dwkrishn noship $ */
  FUNCTION BEFOREREPORT RETURN BOOLEAN IS
  BEGIN
    IF P_LITERAL_START IS NULL THEN
      BEGIN
        SELECT
          NVL(MIN(LITERAL_CODE)
             ,0)
        INTO CP_LITERAL_START
        FROM
          JL_CO_GL_MG_LITERALS
        WHERE REPORTED_YEAR = P_REPORTED_YEAR
          AND SET_OF_BOOKS_ID = P_SOB_ID;
        P_LITERAL_START := CP_LITERAL_START;
      EXCEPTION
        WHEN NO_DATA_FOUND THEN
          CP_LITERAL_START := 0;
        WHEN OTHERS THEN
          NULL;
      END;
    END IF;
    IF P_LITERAL_END IS NULL THEN
      BEGIN
        SELECT
          NVL(MAX(LITERAL_CODE)
             ,9999)
        INTO CP_LITERAL_END
        FROM
          JL_CO_GL_MG_LITERALS
        WHERE REPORTED_YEAR = P_REPORTED_YEAR
          AND SET_OF_BOOKS_ID = P_SOB_ID;
        P_LITERAL_END := CP_LITERAL_END;
      EXCEPTION
        WHEN NO_DATA_FOUND THEN
          CP_LITERAL_END := 9999;
        WHEN OTHERS THEN
          NULL;
      END;
    END IF;
    SELECT
      CHART_OF_ACCOUNTS_ID,
      CURRENCY_CODE
    INTO C_CHART_OF_ACCOUNTS_ID,P_CURRENCY_CODE
    FROM
      GL_SETS_OF_BOOKS
    WHERE SET_OF_BOOKS_ID = P_SOB_ID;
    C_ACCOUNT_START := JL_ZZ_GL_SEGS_PKG.GET_COLUMNS(C_CHART_OF_ACCOUNTS_ID
                                                    ,'mgr'
                                                    ,'ALL'
                                                    ,'LOW');
    C_ACCOUNT_END := JL_ZZ_GL_SEGS_PKG.GET_COLUMNS(C_CHART_OF_ACCOUNTS_ID
                                                  ,'mgr'
                                                  ,'ALL'
                                                  ,'HIGH');
    BEGIN
      SELECT
        NAME COMP_NAME,
        REGISTRATION_NUMBER COMP_ID
      INTO P_REPORT_SUB_TITLE,CP_COMP_NIT
      FROM
        XLE_FIRSTPARTY_INFORMATION_V
      WHERE LEGAL_ENTITY_ID = P_LEGAL_ENTITY_ID;
    EXCEPTION
      WHEN NO_DATA_FOUND THEN
        SELECT
          NAME
        INTO P_REPORT_SUB_TITLE
        FROM
          GL_SETS_OF_BOOKS
        WHERE SET_OF_BOOKS_ID = P_SOB_ID
          AND ROWNUM < 2;
    END;
    LP_REPORT_SUB_TITLE:=P_REPORT_SUB_TITLE;
    RETURN (TRUE);
  END BEFOREREPORT;

  FUNCTION AFTERREPORT RETURN BOOLEAN IS
  BEGIN
    /*SRW.USER_EXIT('FND SRWEXIT')*/NULL;
    RETURN (TRUE);
  END AFTERREPORT;

  FUNCTION BEFOREPFORM RETURN BOOLEAN IS
  BEGIN
    P_CONC_REQUEST_ID := FND_GLOBAL.CONC_REQUEST_ID;
    /*SRW.USER_EXIT('FND SRWINIT')*/NULL;
    RETURN (TRUE);
  END BEFOREPFORM;

  FUNCTION CP_COMP_NIT_P RETURN VARCHAR2 IS
  BEGIN
    RETURN CP_COMP_NIT;
  END CP_COMP_NIT_P;

  FUNCTION CP_COMP_NIT_VERF_DIG_P RETURN NUMBER IS
  BEGIN
    RETURN CP_COMP_NIT_VERF_DIG;
  END CP_COMP_NIT_VERF_DIG_P;

  FUNCTION CP_LITERAL_START_P RETURN NUMBER IS
  BEGIN
    RETURN CP_LITERAL_START;
  END CP_LITERAL_START_P;

  FUNCTION CP_LITERAL_END_P RETURN NUMBER IS
  BEGIN
    RETURN CP_LITERAL_END;
  END CP_LITERAL_END_P;

  FUNCTION CP_LOCATION_ID_P RETURN NUMBER IS
  BEGIN
    RETURN CP_LOCATION_ID;
  END CP_LOCATION_ID_P;

  FUNCTION C_ACCOUNT_START_P RETURN VARCHAR2 IS
  BEGIN
    RETURN C_ACCOUNT_START;
  END C_ACCOUNT_START_P;

  FUNCTION C_ACCOUNT_END_P RETURN VARCHAR2 IS
  BEGIN
    RETURN C_ACCOUNT_END;
  END C_ACCOUNT_END_P;

  FUNCTION C_CHART_OF_ACCOUNTS_ID_P RETURN NUMBER IS
  BEGIN
    RETURN C_CHART_OF_ACCOUNTS_ID;
  END C_CHART_OF_ACCOUNTS_ID_P;

END JL_JLCOGLAM_XMLP_PKG;




/
