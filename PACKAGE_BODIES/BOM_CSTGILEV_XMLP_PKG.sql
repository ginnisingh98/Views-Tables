--------------------------------------------------------
--  DDL for Package Body BOM_CSTGILEV_XMLP_PKG
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE PACKAGE BODY "APPS"."BOM_CSTGILEV_XMLP_PKG" AS
/* $Header: CSTGILEVB.pls 120.1 2008/01/02 15:03:44 dwkrishn noship $ */
  FUNCTION AFTERREPORT RETURN BOOLEAN IS
  BEGIN
    /*SRW.USER_EXIT('FND SRWEXIT')*/NULL;
    RETURN (TRUE);
  END AFTERREPORT;

  FUNCTION BEFOREREPORT RETURN BOOLEAN IS
  BEGIN
    P_CONC_REQUEST_ID := FND_GLOBAL.CONC_REQUEST_ID;
    P_VALUE_PRECISION_1 :=nvl(P_VALUE_PRECISION,2);
    P_QUANTITY_PRECISION_1:=nvl(P_QUANTITY_PRECISION,2);
    P_COST_PRECISION_1:=nvl(P_COST_PRECISION,2);
    qty_precision1:=bom_common_xmlp_pkg.get_precision(P_VALUE_PRECISION_1);
    qty_precision2:=bom_common_xmlp_pkg.get_precision(P_QUANTITY_PRECISION_1);
    qty_precision3:=bom_common_xmlp_pkg.get_precision(P_COST_PRECISION_1);
    /*SRW.USER_EXIT('FND SRWINIT')*/NULL;
    DECLARE
      X_RETCODE NUMBER;
      X_ERRBUFF VARCHAR2(240);
      X_ERRCODE VARCHAR2(240);
    BEGIN
      CST_MGD_LIFO_COST_PROCESSOR.POPULATE_TEMP_TABLE(P_LEGAL_ENTITY_ID
                                                     ,P_PAC_PERIOD_ID
                                                     ,P_COST_GROUP_ID
                                                     ,P_COST_TYPE_ID
                                                     ,P_DETAILED_REPORT
                                                     ,P_ITEM_CODE_FROM
                                                     ,P_ITEM_CODE_TO
                                                     ,X_RETCODE
                                                     ,X_ERRBUFF
                                                     ,X_ERRCODE);
    END;
    SELECT
      XFI.NAME,
      GSOB.CURRENCY_CODE
    INTO H_LEGAL_ENTITY,H_CURRENCY
    FROM
      XLE_FIRSTPARTY_INFORMATION_V XFI,
      CST_LE_COST_TYPES CLCT,
      GL_SETS_OF_BOOKS GSOB
    WHERE XFI.LEGAL_ENTITY_ID = P_LEGAL_ENTITY_ID
      AND CLCT.LEGAL_ENTITY = XFI.LEGAL_ENTITY_ID
      AND CLCT.COST_TYPE_ID = P_COST_TYPE_ID
      AND CLCT.SET_OF_BOOKS_ID = GSOB.SET_OF_BOOKS_ID;
    SELECT
      COST_GROUP,
      DESCRIPTION
    INTO H_COST_GROUP,H_COST_GROUP_DESC
    FROM
      CST_COST_GROUPS
    WHERE COST_GROUP_ID = P_COST_GROUP_ID;
    SELECT
      COST_TYPE,
      DESCRIPTION
    INTO H_COST_TYPE,H_COST_TYPE_DESC
    FROM
      CST_COST_TYPES
    WHERE COST_TYPE_ID = P_COST_TYPE_ID;
    SELECT
      PERIOD_NAME,
      PERIOD_YEAR
    INTO H_PERIOD,H_FISCAL_YEAR
    FROM
      CST_PAC_PERIODS
    WHERE PAC_PERIOD_ID = P_PAC_PERIOD_ID;
    SELECT
      MAX(TO_CHAR(PROCESS_UPTO_DATE
                 ,' DD-MON-RR'))
    INTO H_UPTO_DATE
    FROM
      CST_PAC_PROCESS_PHASES
    WHERE COST_GROUP_ID = P_COST_GROUP_ID
      AND PAC_PERIOD_ID = P_PAC_PERIOD_ID;
    IF (P_DETAILED_REPORT = 'Y') THEN
      H_REPORT_SUBTITLE := P_DETAILED_REPORT_SUBTITLE || ' ' || '(' || H_CURRENCY || ')';
    ELSE
      H_REPORT_SUBTITLE := P_SUMMARIZED_REPORT_SUBTITLE || ' ' || '(' || H_CURRENCY || ')';
    END IF;
    RETURN TRUE;
  END BEFOREREPORT;

 /* PROCEDURE FORMAT_QUANTITY(P_PRECISION IN NUMBER) IS
  BEGIN
    SRW.ATTR.MASK := SRW.FORMATMASK_ATTR;
    IF P_PRECISION = 0 THEN
      SRW.ATTR.FORMATMASK := '-NNN,NNN,NNN,NN0';
    ELSIF P_PRECISION = 1 THEN
      SRW.ATTR.FORMATMASK := '-NNN,NNN,NNN,NN0.0';
    ELSIF P_PRECISION = 3 THEN
      SRW.ATTR.FORMATMASK := '-NN,NNN,NNN,NN0.000';
    ELSIF P_PRECISION = 4 THEN
      SRW.ATTR.FORMATMASK := '-N,NNN,NNN,NN0.0000';
    ELSIF P_PRECISION = 5 THEN
      SRW.ATTR.FORMATMASK := '-NNN,NNN,NN0.00000';
    ELSIF P_PRECISION = 6 THEN
      SRW.ATTR.FORMATMASK := '-NN,NNN,NN0.000000';
    ELSIF P_PRECISION = 7 THEN
      SRW.ATTR.FORMATMASK := '-NNNNNNNNNNN0';
    ELSIF P_PRECISION = 8 THEN
      SRW.ATTR.FORMATMASK := '-NNNNNNNNNNN0.0';
    ELSIF P_PRECISION = 9 THEN
      SRW.ATTR.FORMATMASK := '-NNNNNNNNNN0.00';
    ELSIF P_PRECISION = 10 THEN
      SRW.ATTR.FORMATMASK := '-NNNNNNNNNN0.000';
    ELSIF P_PRECISION = 11 THEN
      SRW.ATTR.FORMATMASK := '-NNNNNNNNN0.0000';
    ELSIF P_PRECISION = 12 THEN
      SRW.ATTR.FORMATMASK := '-NNNNNNNN0.00000';
    ELSIF P_PRECISION = 13 THEN
      SRW.ATTR.FORMATMASK := '-NNNNNNN0.000000';
    ELSE
      SRW.ATTR.FORMATMASK := '-NNN,NNN,NNN,NN0.00';
    END IF;
   SRW.SET_ATTR(0
                ,SRW.ATTR);
  END FORMAT_QUANTITY;
*/
  FUNCTION H_LEGAL_ENTITY_P RETURN VARCHAR2 IS
  BEGIN
    RETURN H_LEGAL_ENTITY;
  END H_LEGAL_ENTITY_P;

  FUNCTION H_COST_GROUP_P RETURN VARCHAR2 IS
  BEGIN
    RETURN H_COST_GROUP;
  END H_COST_GROUP_P;

  FUNCTION H_COST_TYPE_P RETURN VARCHAR2 IS
  BEGIN
    RETURN H_COST_TYPE;
  END H_COST_TYPE_P;

  FUNCTION H_PERIOD_P RETURN VARCHAR2 IS
  BEGIN
    RETURN H_PERIOD;
  END H_PERIOD_P;

  FUNCTION H_CURRENCY_P RETURN VARCHAR2 IS
  BEGIN
    RETURN H_CURRENCY;
  END H_CURRENCY_P;

  FUNCTION H_REPORT_SUBTITLE_P RETURN VARCHAR2 IS
  BEGIN
    RETURN H_REPORT_SUBTITLE;
  END H_REPORT_SUBTITLE_P;

  FUNCTION H_COST_GROUP_DESC_P RETURN VARCHAR2 IS
  BEGIN
    RETURN H_COST_GROUP_DESC;
  END H_COST_GROUP_DESC_P;

  FUNCTION H_COST_TYPE_DESC_P RETURN VARCHAR2 IS
  BEGIN
    RETURN H_COST_TYPE_DESC;
  END H_COST_TYPE_DESC_P;

  FUNCTION H_FISCAL_YEAR_P RETURN NUMBER IS
  BEGIN
    RETURN H_FISCAL_YEAR;
  END H_FISCAL_YEAR_P;

  FUNCTION H_UPTO_DATE_P RETURN VARCHAR2 IS
  BEGIN
    RETURN H_UPTO_DATE;
  END H_UPTO_DATE_P;

END BOM_CSTGILEV_XMLP_PKG;


/
