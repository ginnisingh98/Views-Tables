--------------------------------------------------------
--  DDL for Package Body JA_JAINER1_XMLP_PKG
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE PACKAGE BODY "APPS"."JA_JAINER1_XMLP_PKG" AS
/* $Header: JAINER1B.pls 120.1 2007/12/25 16:17:45 dwkrishn noship $ */
  FUNCTION CENVAT_BASIC_ED RETURN NUMBER IS
    V_BASIC_ED NUMBER;
  BEGIN
    SELECT
      NVL(SUM(BASIC_ED)
         ,0)
    INTO V_BASIC_ED
    FROM
      JAI_CMN_RG_I_TRXS
    WHERE ORGANIZATION_ID = P_ORGANIZATION_ID
      AND LOCATION_ID = P_LOCATION_ID
      AND PAYMENT_REGISTER in ( 'RG23A' , 'RG23C' )
      AND TRUNC(CREATION_DATE) >= P_START_DATE
      AND TRUNC(CREATION_DATE) <= P_END_DATE;
    RETURN (V_BASIC_ED);
  END CENVAT_BASIC_ED;

  FUNCTION CF_ORGANIZATION_NAMEFORMULA RETURN CHAR IS
    V_ORGANIZATION_NAME VARCHAR2(60);
  BEGIN
    IF P_ORGANIZATION_NAME IS NULL THEN
      SELECT
        ORGANIZATION_NAME
      INTO V_ORGANIZATION_NAME
      FROM
        ORG_ORGANIZATION_DEFINITIONS
      WHERE ORGANIZATION_ID = P_ORGANIZATION_ID;
    ELSE
      V_ORGANIZATION_NAME := P_ORGANIZATION_NAME;
    END IF;
    RETURN (V_ORGANIZATION_NAME);
  EXCEPTION
    WHEN OTHERS THEN
      /*SRW.MESSAGE(1275
                 ,'CF_organization_name:' || SQLERRM)*/NULL;
      RETURN NULL;
  END CF_ORGANIZATION_NAMEFORMULA;

  FUNCTION CF_EC_CODEFORMULA RETURN CHAR IS
    V_EC_CODE VARCHAR2(50);
  BEGIN
    SELECT
      EC_CODE
    INTO V_EC_CODE
    FROM
      JAI_CMN_INVENTORY_ORGS
    WHERE ORGANIZATION_ID = P_ORGANIZATION_ID
      AND LOCATION_ID = P_LOCATION_ID;
    RETURN (V_EC_CODE);
  EXCEPTION
    WHEN OTHERS THEN
      /*SRW.MESSAGE(1275
                 ,'CF_ec_code:' || SQLERRM)*/NULL;
      RETURN NULL;
  END CF_EC_CODEFORMULA;

  FUNCTION CF_CENVAT_DUTYFORMULA(CETSH IN VARCHAR2
                                ,INVENTORY_ITEM_ID IN NUMBER
                                ,UNITS IN VARCHAR2) RETURN NUMBER IS
    LN_BASIC_ED JAI_CMN_RG_I_TRXS.BASIC_ED%TYPE;
  BEGIN
    SELECT
      NVL(SUM(BASIC_ED)
         ,0)
    INTO LN_BASIC_ED
    FROM
      JAI_CMN_RG_I_TRXS A,
      JAI_INV_ITM_SETUPS C
    WHERE A.INVENTORY_ITEM_ID = C.INVENTORY_ITEM_ID
      AND A.ORGANIZATION_ID = C.ORGANIZATION_ID
      AND ( C.ITEM_TARIFF = CETSH
    OR A.INVENTORY_ITEM_ID = cf_cenvat_dutyformula.INVENTORY_ITEM_ID )
      AND A.PRIMARY_UOM_CODE = UNITS
      AND A.PAYMENT_REGISTER in ( 'RG23A' , 'RG23C' )
      AND A.TRANSACTION_TYPE = 'I'
      AND A.ISSUE_TYPE in ( 'OPE' , 'HU' , 'EWE' )
      AND A.LOCATION_ID = P_LOCATION_ID
      AND A.ORGANIZATION_ID = P_ORGANIZATION_ID
      AND TRUNC(A.CREATION_DATE) >= P_START_DATE
      AND TRUNC(A.CREATION_DATE) <= P_END_DATE
      AND A.EXCISE_DUTY_RATE <> 0;
    RETURN LN_BASIC_ED;
  EXCEPTION
    WHEN OTHERS THEN
      /*SRW.MESSAGE(1275
                 ,'CF_cenvat_duty:' || SQLERRM)*/NULL;
      RETURN NULL;
  END CF_CENVAT_DUTYFORMULA;

  FUNCTION CF_ASSESSABLE_VALUEFORMULA0008(CF_RATE IN NUMBER
                                         ,CF_DUTY_PAYABLE IN NUMBER) RETURN NUMBER IS
  BEGIN
    IF NVL(CF_RATE
       ,0) = 0 THEN
      RETURN CF_RATE;
    ELSE
      RETURN ROUND(((NVL(CF_DUTY_PAYABLE
                      ,0) + NVL(CP_AED_DUTY_PAYABLE
                      ,0)) * 100) / CF_RATE
                  ,0);
    END IF;
  END CF_ASSESSABLE_VALUEFORMULA0008;

  FUNCTION CF_CENVAT_ACC_CURRENTFORMULA RETURN NUMBER IS
    CURSOR GET_PLA_AMOUNT IS
      SELECT
        SUM(NVL(CR_BASIC_ED
               ,0) + NVL(CR_OTHER_ED
               ,0))
      FROM
        JAI_CMN_RG_PLA_TRXS
      WHERE ORGANIZATION_ID = P_ORGANIZATION_ID
        AND LOCATION_ID = P_LOCATION_ID
        AND CREATION_DATE >= P_START_DATE
        AND CREATION_DATE <= TRUNC(NVL(P_END_DATE
               ,SYSDATE))
        AND TRANSACTION_SOURCE_NUM = 91;
    LN_PLA_AMOUNT NUMBER;
  BEGIN
    OPEN GET_PLA_AMOUNT;
    FETCH GET_PLA_AMOUNT
     INTO LN_PLA_AMOUNT;
    CLOSE GET_PLA_AMOUNT;
    RETURN ROUND(NVL(LN_PLA_AMOUNT
                    ,0)
                ,0);
  EXCEPTION
    WHEN OTHERS THEN
      /*SRW.MESSAGE(1275
                 ,'CF_cenvat_acc_current:' || SQLERRM)*/NULL;
      RETURN NULL;
  END CF_CENVAT_ACC_CURRENTFORMULA;

  FUNCTION CF_OTHER_ACC_CURRENTFORMULA RETURN NUMBER IS
    CURSOR GET_ADDL_AMOUNT IS
      SELECT
        SUM(NVL(CREDIT
               ,0))
      FROM
        JAI_CMN_RG_OTHERS
      WHERE SOURCE_TYPE = 2
        AND TAX_TYPE in ( TAX_TYPE_EXC_EDU_CESS , TAX_TYPE_CVD_EDU_CESS )
        AND SOURCE_REGISTER_ID in (
        SELECT
          REGISTER_ID
        FROM
          JAI_CMN_RG_PLA_TRXS
        WHERE ORGANIZATION_ID = P_ORGANIZATION_ID
          AND LOCATION_ID = P_LOCATION_ID
          AND CREATION_DATE >= P_START_DATE
          AND CREATION_DATE <= TRUNC(NVL(P_END_DATE
                 ,SYSDATE))
          AND TRANSACTION_SOURCE_NUM = 91 );
    LN_ADDL_DUTY_AMOUNT NUMBER;
  BEGIN
    OPEN GET_ADDL_AMOUNT;
    FETCH GET_ADDL_AMOUNT
     INTO LN_ADDL_DUTY_AMOUNT;
    CLOSE GET_ADDL_AMOUNT;
    RETURN ROUND(LN_ADDL_DUTY_AMOUNT
                ,0);
  EXCEPTION
    WHEN OTHERS THEN
      /*SRW.MESSAGE(1275
                 ,'CF_other_acc_current:' || SQLERRM)*/NULL;
      RETURN NULL;
  END CF_OTHER_ACC_CURRENTFORMULA;

  FUNCTION CF_CENVAT_ACC_CREDITFORMULA RETURN NUMBER IS
    LN_CR_BASIC_ED JAI_CMN_RG_23AC_II_TRXS.CR_BASIC_ED%TYPE;
  BEGIN
    SELECT
      SUM(DECODE(UPPER(A.PAYMENT_REGISTER)
                ,'RG23A'
                ,NVL(A.BASIC_ED
                   ,0) + NVL(A.ADDITIONAL_ED
                   ,0) + NVL(A.OTHER_ED
                   ,0)
                ,'RG23C'
                ,NVL(A.BASIC_ED
                   ,0) + NVL(A.ADDITIONAL_ED
                   ,0) + NVL(A.OTHER_ED
                   ,0))) CENVAT_DUTY_PAYABLE
    INTO LN_CR_BASIC_ED
    FROM
      JAI_CMN_RG_I_TRXS A,
      MTL_SYSTEM_ITEMS B,
      JAI_INV_ITM_SETUPS C
    WHERE A.TRANSACTION_TYPE in ( 'I' , 'IA' , 'IOI' , 'PI' )
      AND A.INVENTORY_ITEM_ID = B.INVENTORY_ITEM_ID
      AND C.INVENTORY_ITEM_ID = B.INVENTORY_ITEM_ID
      AND C.ORGANIZATION_ID = B.ORGANIZATION_ID
      AND A.ORGANIZATION_ID = B.ORGANIZATION_ID
      AND A.LOCATION_ID = P_LOCATION_ID
      AND A.ORGANIZATION_ID = P_ORGANIZATION_ID
      AND TRUNC(A.CREATION_DATE) >= P_START_DATE
      AND TRUNC(A.CREATION_DATE) <= NVL(P_END_DATE
       ,SYSDATE);
    RETURN ROUND(LN_CR_BASIC_ED
                ,0);
  EXCEPTION
    WHEN OTHERS THEN
      /*SRW.MESSAGE(1275
                 ,'CF_cenvat_acc_credit:' || SQLERRM)*/NULL;
      RETURN NULL;
  END CF_CENVAT_ACC_CREDITFORMULA;

  FUNCTION CF_OTHER_ACC_CREDITFORMULA RETURN NUMBER IS
    LN_CR_OTHER_ED JAI_CMN_RG_23AC_II_TRXS.CR_OTHER_ED%TYPE;
    CURSOR CUR_GET_AMOUNT IS
      SELECT
        SUM(NVL(DEBIT
               ,0))
      FROM
        JAI_CMN_RG_OTHERS
      WHERE TAX_TYPE in ( TAX_TYPE_EXC_EDU_CESS , TAX_TYPE_CVD_EDU_CESS )
        AND SOURCE_TYPE = 1
        AND SOURCE_REGISTER_ID in (
        SELECT
          REGISTER_ID
        FROM
          JAI_CMN_RG_23AC_II_TRXS
        WHERE LOCATION_ID = P_LOCATION_ID
          AND ORGANIZATION_ID = P_ORGANIZATION_ID
          AND TRUNC(CREATION_DATE) >= P_START_DATE
          AND TRUNC(CREATION_DATE) <= TRUNC(NVL(P_END_DATE
                 ,SYSDATE)) );
  BEGIN
    OPEN CUR_GET_AMOUNT;
    FETCH CUR_GET_AMOUNT
     INTO LN_CR_OTHER_ED;
    CLOSE CUR_GET_AMOUNT;
    RETURN ROUND(LN_CR_OTHER_ED
                ,0);
  EXCEPTION
    WHEN OTHERS THEN
      /*SRW.MESSAGE(1275
                 ,'CF_other_acc_credit:' || SQLERRM)*/NULL;
      RETURN NULL;
  END CF_OTHER_ACC_CREDITFORMULA;

  FUNCTION CF_CENVAT_TOTALFORMULA(CF_CENVAT_ACC_CURRENT IN NUMBER
                                 ,CF_CENVAT_ACC_CREDIT IN NUMBER) RETURN NUMBER IS
  BEGIN
    RETURN ROUND((NVL(CF_CENVAT_ACC_CURRENT
                    ,0) + NVL(CF_CENVAT_ACC_CREDIT
                    ,0))
                ,0);
  END CF_CENVAT_TOTALFORMULA;

  FUNCTION CF_OTHER_TOTALFORMULA(CF_OTHER_ACC_CURRENT IN NUMBER
                                ,CF_OTHER_ACC_CREDIT IN NUMBER) RETURN NUMBER IS
  BEGIN
    RETURN ROUND((NVL(CF_OTHER_ACC_CURRENT
                    ,0) + NVL(CF_OTHER_ACC_CREDIT
                    ,0))
                ,0);
  END CF_OTHER_TOTALFORMULA;

  FUNCTION CF_OPENING_BALANCEFORMULA RETURN NUMBER IS
    LN_OPENING_BALANCE JAI_CMN_RG_23AC_II_TRXS.OPENING_BALANCE%TYPE;
  BEGIN
    SELECT
      SUM(NVL(CR_BASIC_ED
             ,0) + NVL(CR_ADDITIONAL_ED
             ,0) + NVL(CR_OTHER_ED
             ,0) - NVL(DR_BASIC_ED
             ,0) - NVL(DR_ADDITIONAL_ED
             ,0) - NVL(DR_OTHER_ED
             ,0))
    INTO LN_OPENING_BALANCE
    FROM
      JAI_CMN_RG_23AC_II_TRXS
    WHERE LOCATION_ID = P_LOCATION_ID
      AND ORGANIZATION_ID = P_ORGANIZATION_ID
      AND CREATION_DATE < P_START_DATE;
    RETURN ROUND(NVL(LN_OPENING_BALANCE
                    ,0)
                ,0);
  EXCEPTION
    WHEN OTHERS THEN
      /*SRW.MESSAGE(1275
                 ,'CF_opening_balance:' || SQLERRM)*/NULL;
      RETURN NULL;
  END CF_OPENING_BALANCEFORMULA;

  FUNCTION CF_CLOSING_BALANCEFORMULA(CF_OPENING_BALANCE IN NUMBER
                                    ,TOTAL_CREDIT_AVAILED IN NUMBER
                                    ,CF_CR_UTILIZED IN NUMBER
                                    ,CF_RTV_AMOUNT IN NUMBER) RETURN NUMBER IS
  BEGIN
    RETURN ROUND((NVL(CF_OPENING_BALANCE
                    ,0) + NVL(TOTAL_CREDIT_AVAILED
                    ,0) - NVL(CF_CR_UTILIZED
                    ,0) - NVL(CF_RTV_AMOUNT
                    ,0))
                ,0);
  END CF_CLOSING_BALANCEFORMULA;

  FUNCTION CF_MONTHFORMULA RETURN VARCHAR2 IS
  BEGIN
    RETURN 'Return of excisable goods and availment of CENVAT credit for the month of ' || TO_CHAR(NVL(P_START_DATE
                      ,SYSDATE)
                  ,'MM YYYY');
  END CF_MONTHFORMULA;

  FUNCTION CF_CESS_EXCISE_INPUTFORMULA RETURN NUMBER IS
    LN_EDU_CESS_EXCISE NUMBER;
    CURSOR CUR_GET_EDU_CESS_EXCISE IS
      SELECT
        NVL(SUM(CREDIT)
           ,0)
      FROM
        JAI_CMN_RG_OTHERS JRO,
        JAI_CMN_RG_23AC_II_TRXS RG23
      WHERE JRO.SOURCE_REGISTER_ID = RG23.REGISTER_ID
        AND RG23.LOCATION_ID = P_LOCATION_ID
        AND RG23.ORGANIZATION_ID = P_ORGANIZATION_ID
        AND TRUNC(RG23.CREATION_DATE) >= P_START_DATE
        AND TRUNC(RG23.CREATION_DATE) <= TRUNC(NVL(P_END_DATE
               ,SYSDATE))
        AND RG23.REGISTER_TYPE = 'A'
        AND JRO.SOURCE_REGISTER = 'RG23A_P2'
        AND JRO.TAX_TYPE in ( TAX_TYPE_CVD_EDU_CESS , TAX_TYPE_EXC_EDU_CESS );
  BEGIN
    OPEN CUR_GET_EDU_CESS_EXCISE;
    FETCH CUR_GET_EDU_CESS_EXCISE
     INTO LN_EDU_CESS_EXCISE;
    CLOSE CUR_GET_EDU_CESS_EXCISE;
    RETURN (ROUND(LN_EDU_CESS_EXCISE
                ,0));
  EXCEPTION
    WHEN OTHERS THEN
      /*SRW.MESSAGE(1275
                 ,'CF_cess_excise_input:' || SQLERRM)*/NULL;
      RETURN NULL;
  END CF_CESS_EXCISE_INPUTFORMULA;

  FUNCTION CF_CESS_EXCISE_CAPFORMULA RETURN NUMBER IS
    LN_EDU_CESS_CAP NUMBER;
    CURSOR CUR_GET_EDU_CESS_CAP IS
      SELECT
        NVL(SUM(CREDIT)
           ,0)
      FROM
        JAI_CMN_RG_OTHERS JRO,
        JAI_CMN_RG_23AC_II_TRXS RG23
      WHERE JRO.SOURCE_REGISTER_ID = RG23.REGISTER_ID
        AND RG23.LOCATION_ID = P_LOCATION_ID
        AND RG23.ORGANIZATION_ID = P_ORGANIZATION_ID
        AND TRUNC(RG23.CREATION_DATE) >= P_START_DATE
        AND TRUNC(RG23.CREATION_DATE) <= TRUNC(NVL(P_END_DATE
               ,SYSDATE))
        AND RG23.REGISTER_TYPE = 'C'
        AND JRO.SOURCE_REGISTER = 'RG23C_P2'
        AND JRO.TAX_TYPE in ( TAX_TYPE_CVD_EDU_CESS , TAX_TYPE_EXC_EDU_CESS );
  BEGIN
    OPEN CUR_GET_EDU_CESS_CAP;
    FETCH CUR_GET_EDU_CESS_CAP
     INTO LN_EDU_CESS_CAP;
    CLOSE CUR_GET_EDU_CESS_CAP;
    RETURN (ROUND(LN_EDU_CESS_CAP
                ,0));
  EXCEPTION
    WHEN OTHERS THEN
      /*SRW.MESSAGE(1275
                 ,'CF_cess_excise_cap:' || SQLERRM)*/NULL;
      RETURN NULL;
  END CF_CESS_EXCISE_CAPFORMULA;

  FUNCTION CF_TAX_SERVICESFORMULA RETURN NUMBER IS
    CURSOR CUR_ST_CESS IS
      SELECT
        SUM(SERVICE_CREDIT),
        SUM(EDU_CESS_CREDIT)
      FROM
        (   SELECT
            JRTF1.RECOVERED_AMOUNT SERVICE_CREDIT,
            JRTF2.RECOVERED_AMOUNT EDU_CESS_CREDIT
          FROM
            JAI_RGM_TRX_REFS JRTF1,
            JAI_RGM_TRX_REFS JRTF2
          WHERE JRTF1.SOURCE = 'AP'
            AND JRTF1.INVOICE_ID = jrtf2.invoice_id (+)
            AND JRTF1.TAX_TYPE = 'Service'
            AND jrtf2.tax_type (+) = TAX_TYPE_SERVICE_EDU_CESS
            AND ( NVL(TRUNC(JRTF1.CREATION_DATE)
             ,TRUNC(SYSDATE)) ) BETWEEN ( NVL(P_START_DATE
             ,TRUNC(JRTF1.CREATION_DATE)) )
            AND ( NVL(P_END_DATE
             ,TRUNC(SYSDATE)) )
            AND JRTF1.ORGANIZATION_ID IN (
            SELECT
              DISTINCT
              ORGANIZATION_ID
            FROM
              JAI_RGM_ORG_REGNS_V
            WHERE REGIME_CODE = 'SERVICE'
              AND REGISTRATION_TYPE = 'OTHERS'
              AND ATTRIBUTE_TYPE_CODE = 'PRIMARY'
              AND ATTRIBUTE_CODE = 'SERVICE_TAX_REGISTRATION_NO'
              AND ATTRIBUTE_VALUE = P_REGISTRATION_NUMBER
              AND ORGANIZATION_ID = NVL(P_OPERATING_UNIT
               ,ORGANIZATION_ID) )
          UNION ALL
          SELECT
            JRTR1.CREDIT_AMOUNT SERVICE_CREDIT,
            JRTR2.CREDIT_AMOUNT EDU_CESS_CREDIT
          FROM
            JAI_RGM_TRX_RECORDS JRTR1,
            JAI_RGM_TRX_RECORDS JRTR2
          WHERE JRTR1.SOURCE = 'SERVICE_DISTRIBUTE_IN'
            AND JRTR1.REGIME_CODE = 'SERVICE'
            AND JRTR1.TAX_TYPE = 'Service'
            AND jrtr2.tax_type (+) = TAX_TYPE_SERVICE_EDU_CESS
            AND JRTR1.ORGANIZATION_ID = jrtr2.organization_id (+)
            AND JRTR1.SOURCE_DOCUMENT_ID = jrtr2.source_document_id (+)
            AND JRTR1.REGIME_PRIMARY_REGNO = P_REGISTRATION_NUMBER
            AND ( NVL(TRUNC(JRTR1.CREATION_DATE)
             ,TRUNC(SYSDATE)) ) BETWEEN ( NVL(P_START_DATE
             ,TRUNC(JRTR1.CREATION_DATE)) )
            AND ( NVL(P_END_DATE
             ,TRUNC(SYSDATE)) )
          UNION ALL
          SELECT
            JRTR1.CREDIT_AMOUNT SERVICE_CREDIT,
            JRTR2.CREDIT_AMOUNT EDU_CESS_CREDIT
          FROM
            JAI_RGM_TRX_RECORDS JRTR1,
            JAI_RGM_TRX_RECORDS JRTR2
          WHERE JRTR1.SOURCE = 'MANUAL'
            AND JRTR1.REGIME_CODE = 'SERVICE'
            AND JRTR1.TAX_TYPE = 'Service'
            AND jrtr2.tax_type (+) = TAX_TYPE_SERVICE_EDU_CESS
            AND JRTR1.SOURCE_TRX_TYPE IN ( 'ADJUSTMENT-RECOVERY' , 'RECOVERY' )
            AND JRTR1.SOURCE_TRX_TYPE = jrtr2.source_trx_type (+)
            AND JRTR1.ORGANIZATION_ID = jrtr2.organization_id (+)
            AND JRTR1.SOURCE_DOCUMENT_ID = jrtr2.source_document_id (+)
            AND JRTR1.REGIME_PRIMARY_REGNO = P_REGISTRATION_NUMBER
            AND ( NVL(TRUNC(JRTR1.CREATION_DATE)
             ,TRUNC(SYSDATE)) ) BETWEEN ( NVL(P_START_DATE
             ,TRUNC(JRTR1.CREATION_DATE)) )
            AND ( NVL(P_END_DATE
             ,TRUNC(SYSDATE)) ) );
    CURSOR CUR_ST_SH_CESS IS
      SELECT
        SUM(SERVICE_CREDIT),
        SUM(EDU_CESS_CREDIT)
      FROM
        (   SELECT
            JRTF1.RECOVERED_AMOUNT SERVICE_CREDIT,
            JRTF2.RECOVERED_AMOUNT EDU_CESS_CREDIT
          FROM
            JAI_RGM_TRX_REFS JRTF1,
            JAI_RGM_TRX_REFS JRTF2
          WHERE JRTF1.SOURCE = 'AP'
            AND JRTF1.INVOICE_ID = jrtf2.invoice_id (+)
            AND JRTF1.TAX_TYPE = 'Service'
            AND jrtf2.tax_type (+) = TAX_TYPE_SH_SERVICE_EDU_CESS
            AND ( NVL(TRUNC(JRTF1.CREATION_DATE)
             ,TRUNC(SYSDATE)) ) BETWEEN ( NVL(P_START_DATE
             ,TRUNC(JRTF1.CREATION_DATE)) )
            AND ( NVL(P_END_DATE
             ,TRUNC(SYSDATE)) )
            AND JRTF1.ORGANIZATION_ID IN (
            SELECT
              DISTINCT
              ORGANIZATION_ID
            FROM
              JAI_RGM_ORG_REGNS_V
            WHERE REGIME_CODE = 'SERVICE'
              AND REGISTRATION_TYPE = 'OTHERS'
              AND ATTRIBUTE_TYPE_CODE = 'PRIMARY'
              AND ATTRIBUTE_CODE = 'SERVICE_TAX_REGISTRATION_NO'
              AND ATTRIBUTE_VALUE = P_REGISTRATION_NUMBER
              AND ORGANIZATION_ID = NVL(P_OPERATING_UNIT
               ,ORGANIZATION_ID) )
          UNION ALL
          SELECT
            JRTR1.CREDIT_AMOUNT SERVICE_CREDIT,
            JRTR2.CREDIT_AMOUNT EDU_CESS_CREDIT
          FROM
            JAI_RGM_TRX_RECORDS JRTR1,
            JAI_RGM_TRX_RECORDS JRTR2
          WHERE JRTR1.SOURCE = 'SERVICE_DISTRIBUTE_IN'
            AND JRTR1.REGIME_CODE = 'SERVICE'
            AND JRTR1.TAX_TYPE = 'Service'
            AND jrtr2.tax_type (+) = TAX_TYPE_SH_SERVICE_EDU_CESS
            AND JRTR1.ORGANIZATION_ID = jrtr2.organization_id (+)
            AND JRTR1.SOURCE_DOCUMENT_ID = jrtr2.source_document_id (+)
            AND JRTR1.REGIME_PRIMARY_REGNO = P_REGISTRATION_NUMBER
            AND ( NVL(TRUNC(JRTR1.CREATION_DATE)
             ,TRUNC(SYSDATE)) ) BETWEEN ( NVL(P_START_DATE
             ,TRUNC(JRTR1.CREATION_DATE)) )
            AND ( NVL(P_END_DATE
             ,TRUNC(SYSDATE)) )
          UNION ALL
          SELECT
            JRTR1.CREDIT_AMOUNT SERVICE_CREDIT,
            JRTR2.CREDIT_AMOUNT EDU_CESS_CREDIT
          FROM
            JAI_RGM_TRX_RECORDS JRTR1,
            JAI_RGM_TRX_RECORDS JRTR2
          WHERE JRTR1.SOURCE = 'MANUAL'
            AND JRTR1.REGIME_CODE = 'SERVICE'
            AND JRTR1.TAX_TYPE = 'Service'
            AND jrtr2.tax_type (+) = TAX_TYPE_SH_SERVICE_EDU_CESS
            AND JRTR1.SOURCE_TRX_TYPE IN ( 'ADJUSTMENT-RECOVERY' , 'RECOVERY' )
            AND JRTR1.SOURCE_TRX_TYPE = jrtr2.source_trx_type (+)
            AND JRTR1.ORGANIZATION_ID = jrtr2.organization_id (+)
            AND JRTR1.SOURCE_DOCUMENT_ID = jrtr2.source_document_id (+)
            AND JRTR1.REGIME_PRIMARY_REGNO = P_REGISTRATION_NUMBER
            AND ( NVL(TRUNC(JRTR1.CREATION_DATE)
             ,TRUNC(SYSDATE)) ) BETWEEN ( NVL(P_START_DATE
             ,TRUNC(JRTR1.CREATION_DATE)) )
            AND ( NVL(P_END_DATE
             ,TRUNC(SYSDATE)) ) );
    LV_ST_CREDIT_AVLD NUMBER;
    LV_CESS_CREDIT_AVLD NUMBER;
    LV_ST_SH_CREDIT_AVLD NUMBER;
    LV_SH_CESS_CREDIT_AVLD NUMBER;
  BEGIN
    OPEN CUR_ST_CESS;
    FETCH CUR_ST_CESS
     INTO LV_ST_CREDIT_AVLD,LV_CESS_CREDIT_AVLD;
    CLOSE CUR_ST_CESS;
    OPEN CUR_ST_SH_CESS;
    FETCH CUR_ST_SH_CESS
     INTO LV_ST_SH_CREDIT_AVLD,LV_SH_CESS_CREDIT_AVLD;
    CLOSE CUR_ST_SH_CESS;
    CP_CESS_CREDIT_AVLD := LV_CESS_CREDIT_AVLD;
    CP_SH_CESS_CREDIT_AVLD := LV_SH_CESS_CREDIT_AVLD;
    RETURN ROUND(LV_ST_CREDIT_AVLD
                ,0);
  END CF_TAX_SERVICESFORMULA;

  FUNCTION CF_TAX_DUTY_GOODSFORMULA RETURN NUMBER IS
    CURSOR CUR_AR_UTIL_CREDIT IS
      SELECT
        SUM(RECOVERED_AMOUNT)
      FROM
        JAI_RGM_TRX_REFS
      WHERE SOURCE = 'AR'
        AND TAX_TYPE = 'Service'
        AND ORGANIZATION_ID IN (
        SELECT
          DISTINCT
          ORGANIZATION_ID
        FROM
          JAI_RGM_ORG_REGNS_V
        WHERE REGIME_CODE = 'SERVICE'
          AND REGISTRATION_TYPE = 'OTHERS'
          AND ATTRIBUTE_TYPE_CODE = 'PRIMARY'
          AND ATTRIBUTE_CODE = 'SERVICE_TAX_REGISTRATION_NO'
          AND ATTRIBUTE_VALUE = P_REGISTRATION_NUMBER
          AND ORGANIZATION_ID = NVL(P_OPERATING_UNIT
           ,ORGANIZATION_ID) )
        AND ( NVL(TRUNC(CREATION_DATE)
         ,SYSDATE) ) BETWEEN ( NVL(P_START_DATE
         ,SYSDATE) )
        AND ( NVL(P_END_DATE
         ,SYSDATE) );
    CURSOR CUR_AR_SER_DIST_OUT_DEBIT IS
      SELECT
        NVL(SUM(DEBIT_AMOUNT)
           ,0)
      FROM
        JAI_RGM_TRX_RECORDS
      WHERE SOURCE = 'SERVICE_DISTRIBUTE_OUT'
        AND REGIME_CODE = 'SERVICE'
        AND TAX_TYPE = 'Service'
        AND REGIME_PRIMARY_REGNO = P_REGISTRATION_NUMBER
        AND ORGANIZATION_ID = NVL(P_OPERATING_UNIT
         ,ORGANIZATION_ID)
        AND ( NVL(TRUNC(CREATION_DATE)
         ,SYSDATE) ) BETWEEN ( NVL(P_START_DATE
         ,SYSDATE) )
        AND ( NVL(P_END_DATE
         ,SYSDATE) );
    CURSOR CUR_MANUAL_DEBIT IS
      SELECT
        NVL(SUM(DEBIT_AMOUNT)
           ,0)
      FROM
        JAI_RGM_TRX_RECORDS
      WHERE SOURCE = 'MANUAL'
        AND REGIME_CODE = 'SERVICE'
        AND TAX_TYPE = 'Service'
        AND SOURCE_TRX_TYPE IN ( 'ADJUSTMENT-LIABILITY' , 'LIABILITY' )
        AND REGIME_PRIMARY_REGNO = P_REGISTRATION_NUMBER
        AND ORGANIZATION_ID = NVL(P_OPERATING_UNIT
         ,ORGANIZATION_ID)
        AND ( NVL(TRUNC(CREATION_DATE)
         ,SYSDATE) ) BETWEEN ( NVL(P_START_DATE
         ,SYSDATE) )
        AND ( NVL(P_END_DATE
         ,SYSDATE) );
    CURSOR CUR_PAYMENT IS
      SELECT
        NVL(SUM(DEBIT_AMOUNT)
           ,0)
      FROM
        JAI_RGM_TRX_RECORDS
      WHERE SOURCE = 'MANUAL'
        AND REGIME_CODE = 'SERVICE'
        AND TAX_TYPE = 'Service'
        AND SOURCE_TRX_TYPE = 'PAYMENT'
        AND REGIME_PRIMARY_REGNO = P_REGISTRATION_NUMBER
        AND ORGANIZATION_ID = NVL(P_OPERATING_UNIT
         ,ORGANIZATION_ID)
        AND ( NVL(TRUNC(CREATION_DATE)
         ,SYSDATE) ) BETWEEN ( NVL(P_START_DATE
         ,SYSDATE) )
        AND ( NVL(P_END_DATE
         ,SYSDATE) );
    LN_AR_UTIL_CREDIT NUMBER := 0;
    LN_AR_SER_DIST_OUT_DEBIT NUMBER := 0;
    LV_MANUAL_DEBIT NUMBER := 0;
    LV_PAYMENT NUMBER := 0;
  BEGIN
    OPEN CUR_AR_UTIL_CREDIT;
    FETCH CUR_AR_UTIL_CREDIT
     INTO LN_AR_UTIL_CREDIT;
    CLOSE CUR_AR_UTIL_CREDIT;
    OPEN CUR_AR_SER_DIST_OUT_DEBIT;
    FETCH CUR_AR_SER_DIST_OUT_DEBIT
     INTO LN_AR_SER_DIST_OUT_DEBIT;
    CLOSE CUR_AR_SER_DIST_OUT_DEBIT;
    OPEN CUR_MANUAL_DEBIT;
    FETCH CUR_MANUAL_DEBIT
     INTO LV_MANUAL_DEBIT;
    CLOSE CUR_MANUAL_DEBIT;
    OPEN CUR_PAYMENT;
    FETCH CUR_PAYMENT
     INTO LV_PAYMENT;
    CLOSE CUR_PAYMENT;
    RETURN ROUND((NVL(LN_AR_UTIL_CREDIT
                    ,0) + NVL(LN_AR_SER_DIST_OUT_DEBIT
                    ,0) + NVL(LV_MANUAL_DEBIT
                    ,0) - NVL(LV_PAYMENT
                    ,0))
                ,0);
  END CF_TAX_DUTY_GOODSFORMULA;

  FUNCTION CF_CESS_TAX_DUTY_GOODSFORMULA RETURN NUMBER IS
    CURSOR CUR_AR_UTIL_CREDIT IS
      SELECT
        SUM(RECOVERED_AMOUNT)
      FROM
        JAI_RGM_TRX_REFS
      WHERE SOURCE = 'AR'
        AND TAX_TYPE = TAX_TYPE_SERVICE_EDU_CESS
        AND ORGANIZATION_ID IN (
        SELECT
          DISTINCT
          ORGANIZATION_ID
        FROM
          JAI_RGM_ORG_REGNS_V
        WHERE REGIME_CODE = 'SERVICE'
          AND REGISTRATION_TYPE = 'OTHERS'
          AND ATTRIBUTE_TYPE_CODE = 'PRIMARY'
          AND ATTRIBUTE_CODE = 'SERVICE_TAX_REGISTRATION_NO'
          AND ATTRIBUTE_VALUE = P_REGISTRATION_NUMBER
          AND ORGANIZATION_ID = NVL(P_OPERATING_UNIT
           ,ORGANIZATION_ID) )
        AND ( NVL(TRUNC(CREATION_DATE)
         ,SYSDATE) ) BETWEEN ( NVL(P_START_DATE
         ,SYSDATE) )
        AND ( NVL(P_END_DATE
         ,SYSDATE) );
    CURSOR CUR_AR_SER_DIST_OUT_DEBIT IS
      SELECT
        NVL(SUM(DEBIT_AMOUNT)
           ,0)
      FROM
        JAI_RGM_TRX_RECORDS
      WHERE SOURCE = 'SERVICE_DISTRIBUTE_OUT'
        AND REGIME_CODE = 'SERVICE'
        AND TAX_TYPE = TAX_TYPE_SERVICE_EDU_CESS
        AND REGIME_PRIMARY_REGNO = P_REGISTRATION_NUMBER
        AND ORGANIZATION_ID = NVL(P_OPERATING_UNIT
         ,ORGANIZATION_ID)
        AND ( NVL(TRUNC(CREATION_DATE)
         ,SYSDATE) ) BETWEEN ( NVL(P_START_DATE
         ,SYSDATE) )
        AND ( NVL(P_END_DATE
         ,SYSDATE) );
    CURSOR CUR_MANUAL_DEBIT IS
      SELECT
        NVL(SUM(DEBIT_AMOUNT)
           ,0)
      FROM
        JAI_RGM_TRX_RECORDS
      WHERE SOURCE = 'MANUAL'
        AND REGIME_CODE = 'SERVICE'
        AND TAX_TYPE = TAX_TYPE_SERVICE_EDU_CESS
        AND SOURCE_TRX_TYPE IN ( 'ADJUSTMENT-LIABILITY' , 'LIABILITY' )
        AND REGIME_PRIMARY_REGNO = P_REGISTRATION_NUMBER
        AND ORGANIZATION_ID = NVL(P_OPERATING_UNIT
         ,ORGANIZATION_ID)
        AND ( NVL(TRUNC(CREATION_DATE)
         ,SYSDATE) ) BETWEEN ( NVL(P_START_DATE
         ,SYSDATE) )
        AND ( NVL(P_END_DATE
         ,SYSDATE) );
    CURSOR CUR_PAYMENT IS
      SELECT
        NVL(SUM(DEBIT_AMOUNT)
           ,0)
      FROM
        JAI_RGM_TRX_RECORDS
      WHERE SOURCE = 'MANUAL'
        AND REGIME_CODE = 'SERVICE'
        AND TAX_TYPE = TAX_TYPE_SERVICE_EDU_CESS
        AND SOURCE_TRX_TYPE = 'PAYMENT'
        AND REGIME_PRIMARY_REGNO = P_REGISTRATION_NUMBER
        AND ORGANIZATION_ID = NVL(P_OPERATING_UNIT
         ,ORGANIZATION_ID)
        AND ( NVL(TRUNC(CREATION_DATE)
         ,SYSDATE) ) BETWEEN ( NVL(P_START_DATE
         ,SYSDATE) )
        AND ( NVL(P_END_DATE
         ,SYSDATE) );
    LN_AR_UTIL_CREDIT NUMBER := 0;
    LN_AR_SER_DIST_OUT_DEBIT NUMBER := 0;
    LV_MANUAL_DEBIT NUMBER := 0;
    LV_PAYMENT NUMBER := 0;
  BEGIN
    OPEN CUR_AR_UTIL_CREDIT;
    FETCH CUR_AR_UTIL_CREDIT
     INTO LN_AR_UTIL_CREDIT;
    CLOSE CUR_AR_UTIL_CREDIT;
    OPEN CUR_AR_SER_DIST_OUT_DEBIT;
    FETCH CUR_AR_SER_DIST_OUT_DEBIT
     INTO LN_AR_SER_DIST_OUT_DEBIT;
    CLOSE CUR_AR_SER_DIST_OUT_DEBIT;
    OPEN CUR_MANUAL_DEBIT;
    FETCH CUR_MANUAL_DEBIT
     INTO LV_MANUAL_DEBIT;
    CLOSE CUR_MANUAL_DEBIT;
    OPEN CUR_PAYMENT;
    FETCH CUR_PAYMENT
     INTO LV_PAYMENT;
    CLOSE CUR_PAYMENT;
    RETURN ROUND((NVL(LN_AR_UTIL_CREDIT
                    ,0) + NVL(LN_AR_SER_DIST_OUT_DEBIT
                    ,0) + NVL(LV_MANUAL_DEBIT
                    ,0) - NVL(LV_PAYMENT
                    ,0))
                ,0);
  END CF_CESS_TAX_DUTY_GOODSFORMULA;

  FUNCTION CF_TAX_DUTY_SERVICESFORMULA RETURN NUMBER IS
    LN_TAX_DUTY_SRVCS NUMBER;
  BEGIN
    SELECT
      NVL(SUM(CR_BASIC_ED)
         ,0)
    INTO LN_TAX_DUTY_SRVCS
    FROM
      JAI_CMN_RG_PLA_TRXS
    WHERE TRANSACTION_SOURCE_NUM = 151
      AND ORGANIZATION_ID = P_ORGANIZATION_ID
      AND LOCATION_ID = P_LOCATION_ID
      AND CREATION_DATE >= P_START_DATE
      AND CREATION_DATE <= TRUNC(NVL(P_END_DATE
             ,SYSDATE));
    RETURN ROUND(LN_TAX_DUTY_SRVCS
                ,0);
  EXCEPTION
    WHEN OTHERS THEN
      /*SRW.MESSAGE(1275
                 ,'CF_tax_duty_services:' || SQLERRM)*/NULL;
      RETURN NULL;
  END CF_TAX_DUTY_SERVICESFORMULA;

  FUNCTION CF_CESS_TAX_DUTY_SERVICESFORMU RETURN NUMBER IS
    LN_CESS_TAX_DUTY_SRVCS NUMBER;
  BEGIN
    SELECT
      NVL(SUM(OTHER_TAX_CREDIT)
         ,0)
    INTO LN_CESS_TAX_DUTY_SRVCS
    FROM
      JAI_CMN_RG_PLA_TRXS
    WHERE TRANSACTION_SOURCE_NUM = 151
      AND ORGANIZATION_ID = P_ORGANIZATION_ID
      AND LOCATION_ID = P_LOCATION_ID
      AND TRUNC(CREATION_DATE) >= P_START_DATE
      AND TRUNC(CREATION_DATE) <= TRUNC(NVL(P_END_DATE
             ,SYSDATE));
    RETURN LN_CESS_TAX_DUTY_SRVCS;
  EXCEPTION
    WHEN OTHERS THEN
      /*SRW.MESSAGE(1275
                 ,'CF_cess_tax_duty_services:' || SQLERRM)*/NULL;
      RETURN NULL;
  END CF_CESS_TAX_DUTY_SERVICESFORMU;

  FUNCTION CF_CESS_OPENING_BLNCFORMULA RETURN NUMBER IS
    LV_REGISTER_ID JAI_CMN_RG_23AC_II_TRXS.REGISTER_ID%TYPE;
    CURSOR CUR_OPENING_BAL IS
      SELECT
        SUM(NVL(CREDIT
               ,0) - NVL(DEBIT
               ,0))
      FROM
        JAI_CMN_RG_OTHERS
      WHERE SOURCE_TYPE = 1
        AND SOURCE_REGISTER_ID in (
        SELECT
          REGISTER_ID
        FROM
          JAI_CMN_RG_23AC_II_TRXS
        WHERE LOCATION_ID = P_LOCATION_ID
          AND ORGANIZATION_ID = P_ORGANIZATION_ID
          AND TRUNC(CREATION_DATE) < P_START_DATE )
        AND TAX_TYPE in ( TAX_TYPE_CVD_EDU_CESS , TAX_TYPE_EXC_EDU_CESS );
    LN_OPENING_BALANCE NUMBER;
  BEGIN
    OPEN CUR_OPENING_BAL;
    FETCH CUR_OPENING_BAL
     INTO LN_OPENING_BALANCE;
    CLOSE CUR_OPENING_BAL;
    RETURN ROUND(LN_OPENING_BALANCE
                ,0);
  END CF_CESS_OPENING_BLNCFORMULA;

  FUNCTION BEFOREREPORT RETURN BOOLEAN IS
    CURSOR CUR_PROGRAM_ID(P_REQUEST_ID IN NUMBER) IS
      SELECT
        CONCURRENT_PROGRAM_ID,
        NVL(ENABLE_TRACE
           ,'N')
      FROM
        FND_CONCURRENT_REQUESTS
      WHERE REQUEST_ID = P_REQUEST_ID;
    CURSOR CUR_GET_AUDSID IS
      SELECT
        A.SID,
        A.SERIAL#,
        B.SPID
      FROM
        V$SESSION A,
        V$PROCESS B
      WHERE AUDSID = USERENV('SESSIONID')
        AND A.PADDR = B.ADDR;
    CURSOR CUR_GET_DBNAME IS
      SELECT
        NAME
      FROM
        V$DATABASE;
    AUDSID NUMBER := USERENV('SESSIONID');
    SID NUMBER;
    SERIAL NUMBER;
    SPID VARCHAR2(9);
    NAME1 VARCHAR2(25);
    V_ENABLE_TRACE FND_CONCURRENT_PROGRAMS.ENABLE_TRACE%TYPE;
    V_PROGRAM_ID FND_CONCURRENT_PROGRAMS.CONCURRENT_PROGRAM_ID%TYPE;
  BEGIN
    P_CONC_REQUEST_ID := FND_GLOBAL.CONC_REQUEST_ID;
    /*SRW.USER_EXIT('FND SRWINIT')*/NULL;
    /*SRW.MESSAGE(1275
               ,'Report Version is 120.7 last modified date is 28/05/2007')*/NULL;
    /*SRW.MESSAGE(1275
               ,'Sysdate:' || SYSDATE)*/NULL;
    BEGIN
      OPEN CUR_PROGRAM_ID(P_CONC_REQUEST_ID);
      FETCH CUR_PROGRAM_ID
       INTO V_PROGRAM_ID,V_ENABLE_TRACE;
      CLOSE CUR_PROGRAM_ID;
      /*SRW.MESSAGE(1275
                 ,'v_program_id -> ' || V_PROGRAM_ID || ', v_enable_trace -> ' || V_ENABLE_TRACE || ', request_id -> ' || P_CONC_REQUEST_ID)*/NULL;
      IF V_ENABLE_TRACE = 'Y' THEN
        OPEN CUR_GET_AUDSID;
        FETCH CUR_GET_AUDSID
         INTO SID,SERIAL,SPID;
        CLOSE CUR_GET_AUDSID;
        OPEN CUR_GET_DBNAME;
        FETCH CUR_GET_DBNAME
         INTO NAME1;
        CLOSE CUR_GET_DBNAME;
        /*SRW.MESSAGE(1275
                   ,'TraceFile Name = ' || LOWER(NAME1) || '_ora_' || SPID || '.trc')*/NULL;
        EXECUTE IMMEDIATE
          'ALTER SESSION SET EVENTS ''10046 trace name context forever, level 4''';
      END IF;
    EXCEPTION
      WHEN OTHERS THEN
        /*SRW.MESSAGE(1275
                   ,'Error during enabling the trace. ErrCode -> ' || SQLCODE || ', ErrMesg ->' || SQLERRM)*/NULL;
    END;
    RETURN (TRUE);
  END BEFOREREPORT;

  FUNCTION CF_SRVC_OPEN_BALNCFORMULA RETURN NUMBER IS
    CURSOR CUR_INVOICE_OPEN_BAL IS
      SELECT
        SUM(RECOVERED_AMOUNT)
      FROM
        JAI_RGM_TRX_REFS
      WHERE SOURCE = 'AP'
        AND TAX_TYPE = 'Service'
        AND TRUNC(CREATION_DATE) < P_START_DATE
        AND ORGANIZATION_ID in (
        SELECT
          DISTINCT
          ORGANIZATION_ID
        FROM
          JAI_RGM_ORG_REGNS_V
        WHERE REGIME_CODE = 'SERVICE'
          AND REGISTRATION_TYPE = 'OTHERS'
          AND ATTRIBUTE_TYPE_CODE = 'PRIMARY'
          AND ATTRIBUTE_CODE = 'SERVICE_TAX_REGISTRATION_NO'
          AND ATTRIBUTE_VALUE = P_REGISTRATION_NUMBER
          AND ORGANIZATION_ID = NVL(P_OPERATING_UNIT
           ,ORGANIZATION_ID) );
    CURSOR CUR_DIST_IN IS
      SELECT
        SUM(CREDIT_AMOUNT)
      FROM
        JAI_RGM_TRX_RECORDS
      WHERE SOURCE = 'SERVICE_DISTRIBUTE_IN'
        AND REGIME_CODE = 'SERVICE'
        AND TAX_TYPE = 'Service'
        AND REGIME_PRIMARY_REGNO = P_REGISTRATION_NUMBER
        AND ORGANIZATION_ID = NVL(P_OPERATING_UNIT
         ,ORGANIZATION_ID)
        AND ( NVL(TRUNC(CREATION_DATE)
         ,TRUNC(SYSDATE)) ) < ( NVL(P_START_DATE
         ,TRUNC(SYSDATE)) );
    CURSOR CUR_MANUAL_IN IS
      SELECT
        SUM(CREDIT_AMOUNT)
      FROM
        JAI_RGM_TRX_RECORDS
      WHERE SOURCE = 'MANUAL'
        AND REGIME_CODE = 'SERVICE'
        AND TAX_TYPE = 'Service'
        AND SOURCE_TRX_TYPE IN ( 'ADJUSTMENT-RECOVERY' , 'RECOVERY' )
        AND REGIME_PRIMARY_REGNO = P_REGISTRATION_NUMBER
        AND ORGANIZATION_ID = NVL(P_OPERATING_UNIT
         ,ORGANIZATION_ID)
        AND ( NVL(TRUNC(CREATION_DATE)
         ,TRUNC(SYSDATE)) ) < ( NVL(P_START_DATE
         ,TRUNC(SYSDATE)) );
    CURSOR CUR_AR_UTIL_CREDIT IS
      SELECT
        SUM(RECOVERED_AMOUNT)
      FROM
        JAI_RGM_TRX_REFS
      WHERE SOURCE = 'AR'
        AND TAX_TYPE = 'Service'
        AND TRUNC(CREATION_DATE) < P_START_DATE
        AND ORGANIZATION_ID IN (
        SELECT
          DISTINCT
          ORGANIZATION_ID
        FROM
          JAI_RGM_ORG_REGNS_V
        WHERE REGIME_CODE = 'SERVICE'
          AND REGISTRATION_TYPE = 'OTHERS'
          AND ATTRIBUTE_TYPE_CODE = 'PRIMARY'
          AND ATTRIBUTE_CODE = 'SERVICE_TAX_REGISTRATION_NO'
          AND ATTRIBUTE_VALUE = P_REGISTRATION_NUMBER
          AND ORGANIZATION_ID = NVL(P_OPERATING_UNIT
           ,ORGANIZATION_ID) );
    CURSOR CUR_AR_SER_DIST_OUT_DEBIT IS
      SELECT
        NVL(SUM(DEBIT_AMOUNT)
           ,0)
      FROM
        JAI_RGM_TRX_RECORDS
      WHERE SOURCE = 'SERVICE_DISTRIBUTE_OUT'
        AND REGIME_CODE = 'SERVICE'
        AND TAX_TYPE = 'Service'
        AND REGIME_PRIMARY_REGNO = P_REGISTRATION_NUMBER
        AND ORGANIZATION_ID = NVL(P_OPERATING_UNIT
         ,ORGANIZATION_ID)
        AND ( NVL(TRUNC(CREATION_DATE)
         ,TRUNC(SYSDATE)) ) < ( NVL(P_START_DATE
         ,TRUNC(SYSDATE)) );
    CURSOR CUR_MANUAL_DEBIT IS
      SELECT
        NVL(SUM(DEBIT_AMOUNT)
           ,0)
      FROM
        JAI_RGM_TRX_RECORDS
      WHERE SOURCE = 'MANUAL'
        AND REGIME_CODE = 'SERVICE'
        AND TAX_TYPE = 'Service'
        AND SOURCE_TRX_TYPE IN ( 'ADJUSTMENT-LIABILITY' , 'LIABILITY' )
        AND REGIME_PRIMARY_REGNO = P_REGISTRATION_NUMBER
        AND ORGANIZATION_ID = NVL(P_OPERATING_UNIT
         ,ORGANIZATION_ID)
        AND ( NVL(TRUNC(CREATION_DATE)
         ,TRUNC(SYSDATE)) ) < ( NVL(P_START_DATE
         ,TRUNC(SYSDATE)) );
    CURSOR CUR_PAYMENT IS
      SELECT
        NVL(SUM(DEBIT_AMOUNT)
           ,0)
      FROM
        JAI_RGM_TRX_RECORDS
      WHERE SOURCE = 'MANUAL'
        AND REGIME_CODE = 'SERVICE'
        AND TAX_TYPE = ( 'Service' )
        AND SOURCE_TRX_TYPE = 'PAYMENT'
        AND REGIME_PRIMARY_REGNO = P_REGISTRATION_NUMBER
        AND ORGANIZATION_ID = NVL(P_OPERATING_UNIT
         ,ORGANIZATION_ID)
        AND ( NVL(TRUNC(CREATION_DATE)
         ,TRUNC(SYSDATE)) ) < ( NVL(P_START_DATE
         ,TRUNC(SYSDATE)) );
    LV_INV_OPEN_BAL NUMBER := 0;
    LV_OPEN_DIST_BAL NUMBER := 0;
    LV_AR_UTIL_CREDIT NUMBER := 0;
    LV_AR_SER_DIST_OUT_DEBIT NUMBER := 0;
    LV_MANUAL_BAL NUMBER := 0;
    LV_MANUAL_DEBIT_BAL NUMBER := 0;
    LV_MANUAL_PAYMENT NUMBER := 0;
  BEGIN
    OPEN CUR_INVOICE_OPEN_BAL;
    FETCH CUR_INVOICE_OPEN_BAL
     INTO LV_INV_OPEN_BAL;
    CLOSE CUR_INVOICE_OPEN_BAL;
    OPEN CUR_DIST_IN;
    FETCH CUR_DIST_IN
     INTO LV_OPEN_DIST_BAL;
    CLOSE CUR_DIST_IN;
    OPEN CUR_MANUAL_IN;
    FETCH CUR_MANUAL_IN
     INTO LV_MANUAL_BAL;
    CLOSE CUR_MANUAL_IN;
    OPEN CUR_MANUAL_DEBIT;
    FETCH CUR_MANUAL_DEBIT
     INTO LV_MANUAL_DEBIT_BAL;
    CLOSE CUR_MANUAL_DEBIT;
    OPEN CUR_AR_UTIL_CREDIT;
    FETCH CUR_AR_UTIL_CREDIT
     INTO LV_AR_UTIL_CREDIT;
    CLOSE CUR_AR_UTIL_CREDIT;
    OPEN CUR_AR_SER_DIST_OUT_DEBIT;
    FETCH CUR_AR_SER_DIST_OUT_DEBIT
     INTO LV_AR_SER_DIST_OUT_DEBIT;
    CLOSE CUR_AR_SER_DIST_OUT_DEBIT;
    OPEN CUR_PAYMENT;
    FETCH CUR_PAYMENT
     INTO LV_MANUAL_PAYMENT;
    CLOSE CUR_PAYMENT;
    RETURN ROUND((NVL(LV_OPEN_DIST_BAL
                    ,0) + NVL(LV_INV_OPEN_BAL
                    ,0) + NVL(LV_MANUAL_BAL
                    ,0) - NVL(LV_AR_UTIL_CREDIT
                    ,0) - NVL(LV_AR_SER_DIST_OUT_DEBIT
                    ,0) - NVL(LV_MANUAL_DEBIT_BAL
                    ,0) + NVL(LV_MANUAL_PAYMENT
                    ,0))
                ,0);
  END CF_SRVC_OPEN_BALNCFORMULA;

  FUNCTION CF_SRVC_CESS_OPNGFORMULA RETURN NUMBER IS
    CURSOR CUR_INVOICE_OPEN_BAL IS
      SELECT
        SUM(RECOVERED_AMOUNT)
      FROM
        JAI_RGM_TRX_REFS
      WHERE SOURCE = 'AP'
        AND TAX_TYPE = TAX_TYPE_SERVICE_EDU_CESS
        AND TRUNC(CREATION_DATE) < P_START_DATE
        AND ORGANIZATION_ID in (
        SELECT
          DISTINCT
          ORGANIZATION_ID
        FROM
          JAI_RGM_ORG_REGNS_V
        WHERE REGIME_CODE = 'SERVICE'
          AND REGISTRATION_TYPE = 'OTHERS'
          AND ATTRIBUTE_TYPE_CODE = 'PRIMARY'
          AND ATTRIBUTE_CODE = 'SERVICE_TAX_REGISTRATION_NO'
          AND ATTRIBUTE_VALUE = P_REGISTRATION_NUMBER
          AND ORGANIZATION_ID = NVL(P_OPERATING_UNIT
           ,ORGANIZATION_ID) );
    CURSOR CUR_DIST_IN IS
      SELECT
        SUM(CREDIT_AMOUNT)
      FROM
        JAI_RGM_TRX_RECORDS
      WHERE SOURCE = 'SERVICE_DISTRIBUTE_IN'
        AND REGIME_CODE = 'SERVICE'
        AND TAX_TYPE = TAX_TYPE_SERVICE_EDU_CESS
        AND REGIME_PRIMARY_REGNO = P_REGISTRATION_NUMBER
        AND ORGANIZATION_ID = NVL(P_OPERATING_UNIT
         ,ORGANIZATION_ID)
        AND ( NVL(TRUNC(CREATION_DATE)
         ,TRUNC(SYSDATE)) ) < ( NVL(P_START_DATE
         ,TRUNC(SYSDATE)) );
    CURSOR CUR_MANUAL_IN IS
      SELECT
        SUM(CREDIT_AMOUNT)
      FROM
        JAI_RGM_TRX_RECORDS
      WHERE SOURCE = 'MANUAL'
        AND REGIME_CODE = 'SERVICE'
        AND TAX_TYPE = TAX_TYPE_SERVICE_EDU_CESS
        AND SOURCE_TRX_TYPE IN ( 'ADJUSTMENT-RECOVERY' , 'RECOVERY' )
        AND REGIME_PRIMARY_REGNO = P_REGISTRATION_NUMBER
        AND ORGANIZATION_ID = NVL(P_OPERATING_UNIT
         ,ORGANIZATION_ID)
        AND ( NVL(TRUNC(CREATION_DATE)
         ,TRUNC(SYSDATE)) ) < ( NVL(P_START_DATE
         ,TRUNC(SYSDATE)) );
    CURSOR CUR_AR_UTIL_CREDIT IS
      SELECT
        SUM(RECOVERED_AMOUNT)
      FROM
        JAI_RGM_TRX_REFS
      WHERE SOURCE = 'AR'
        AND TAX_TYPE = TAX_TYPE_SERVICE_EDU_CESS
        AND TRUNC(CREATION_DATE) < P_START_DATE
        AND ORGANIZATION_ID IN (
        SELECT
          DISTINCT
          ORGANIZATION_ID
        FROM
          JAI_RGM_ORG_REGNS_V
        WHERE REGIME_CODE = 'SERVICE'
          AND REGISTRATION_TYPE = 'OTHERS'
          AND ATTRIBUTE_TYPE_CODE = 'PRIMARY'
          AND ATTRIBUTE_CODE = 'SERVICE_TAX_REGISTRATION_NO'
          AND ATTRIBUTE_VALUE = P_REGISTRATION_NUMBER
          AND ORGANIZATION_ID = NVL(P_OPERATING_UNIT
           ,ORGANIZATION_ID) );
    CURSOR CUR_AR_SER_DIST_OUT_DEBIT IS
      SELECT
        NVL(SUM(DEBIT_AMOUNT)
           ,0)
      FROM
        JAI_RGM_TRX_RECORDS
      WHERE SOURCE = 'SERVICE_DISTRIBUTE_OUT'
        AND REGIME_CODE = 'SERVICE'
        AND TAX_TYPE = TAX_TYPE_SERVICE_EDU_CESS
        AND REGIME_PRIMARY_REGNO = P_REGISTRATION_NUMBER
        AND ORGANIZATION_ID = NVL(P_OPERATING_UNIT
         ,ORGANIZATION_ID)
        AND ( NVL(TRUNC(CREATION_DATE)
         ,TRUNC(SYSDATE)) ) < ( NVL(P_START_DATE
         ,TRUNC(SYSDATE)) );
    CURSOR CUR_MANUAL_DEBIT IS
      SELECT
        NVL(SUM(DEBIT_AMOUNT)
           ,0)
      FROM
        JAI_RGM_TRX_RECORDS
      WHERE SOURCE = 'MANUAL'
        AND REGIME_CODE = 'SERVICE'
        AND TAX_TYPE = TAX_TYPE_SERVICE_EDU_CESS
        AND SOURCE_TRX_TYPE IN ( 'ADJUSTMENT-LIABILITY' , 'LIABILITY' )
        AND REGIME_PRIMARY_REGNO = P_REGISTRATION_NUMBER
        AND ORGANIZATION_ID = NVL(P_OPERATING_UNIT
         ,ORGANIZATION_ID)
        AND ( NVL(TRUNC(CREATION_DATE)
         ,TRUNC(SYSDATE)) ) < ( NVL(P_START_DATE
         ,TRUNC(SYSDATE)) );
    CURSOR CUR_PAYMENT IS
      SELECT
        NVL(SUM(DEBIT_AMOUNT)
           ,0)
      FROM
        JAI_RGM_TRX_RECORDS
      WHERE SOURCE = 'MANUAL'
        AND REGIME_CODE = 'SERVICE'
        AND TAX_TYPE = TAX_TYPE_SERVICE_EDU_CESS
        AND SOURCE_TRX_TYPE = 'PAYMENT'
        AND REGIME_PRIMARY_REGNO = P_REGISTRATION_NUMBER
        AND ORGANIZATION_ID = NVL(P_OPERATING_UNIT
         ,ORGANIZATION_ID)
        AND ( NVL(TRUNC(CREATION_DATE)
         ,TRUNC(SYSDATE)) ) < ( NVL(P_START_DATE
         ,TRUNC(SYSDATE)) );
    LV_INV_OPEN_BAL NUMBER := 0;
    LV_OPEN_DIST_BAL NUMBER := 0;
    LV_AR_UTIL_CREDIT NUMBER := 0;
    LV_AR_SER_DIST_OUT_DEBIT NUMBER := 0;
    LV_MANUAL_BAL NUMBER := 0;
    LV_MANUAL_DEBIT_BAL NUMBER := 0;
    LV_MANUAL_PAYMENT NUMBER := 0;
  BEGIN
    OPEN CUR_INVOICE_OPEN_BAL;
    FETCH CUR_INVOICE_OPEN_BAL
     INTO LV_INV_OPEN_BAL;
    CLOSE CUR_INVOICE_OPEN_BAL;
    OPEN CUR_DIST_IN;
    FETCH CUR_DIST_IN
     INTO LV_OPEN_DIST_BAL;
    CLOSE CUR_DIST_IN;
    OPEN CUR_MANUAL_IN;
    FETCH CUR_MANUAL_IN
     INTO LV_MANUAL_BAL;
    CLOSE CUR_MANUAL_IN;
    OPEN CUR_MANUAL_DEBIT;
    FETCH CUR_MANUAL_DEBIT
     INTO LV_MANUAL_DEBIT_BAL;
    CLOSE CUR_MANUAL_DEBIT;
    OPEN CUR_AR_UTIL_CREDIT;
    FETCH CUR_AR_UTIL_CREDIT
     INTO LV_AR_UTIL_CREDIT;
    CLOSE CUR_AR_UTIL_CREDIT;
    OPEN CUR_AR_SER_DIST_OUT_DEBIT;
    FETCH CUR_AR_SER_DIST_OUT_DEBIT
     INTO LV_AR_SER_DIST_OUT_DEBIT;
    CLOSE CUR_AR_SER_DIST_OUT_DEBIT;
    OPEN CUR_PAYMENT;
    FETCH CUR_PAYMENT
     INTO LV_MANUAL_PAYMENT;
    CLOSE CUR_PAYMENT;
    RETURN ROUND((NVL(LV_OPEN_DIST_BAL
                    ,0) + NVL(LV_INV_OPEN_BAL
                    ,0) + NVL(LV_MANUAL_BAL
                    ,0) - NVL(LV_AR_UTIL_CREDIT
                    ,0) - NVL(LV_AR_SER_DIST_OUT_DEBIT
                    ,0) - NVL(LV_MANUAL_DEBIT_BAL
                    ,0) + NVL(LV_MANUAL_PAYMENT
                    ,0))
                ,0);
  END CF_SRVC_CESS_OPNGFORMULA;

  FUNCTION CF_CLOSING_BLNC_STFORMULA(CF_SRVC_OPEN_BALNC IN NUMBER
                                    ,CF_TOT_CR_AVAILED_ST IN NUMBER
                                    ,CF_TAX_DUTY_GOODS IN NUMBER) RETURN NUMBER IS
  BEGIN
    RETURN ROUND((NVL(CF_SRVC_OPEN_BALNC
                    ,0) + NVL(CF_TOT_CR_AVAILED_ST
                    ,0) - NVL(CF_TAX_DUTY_GOODS
                    ,0))
                ,0);
  END CF_CLOSING_BLNC_STFORMULA;

  FUNCTION CF_TOT_CR_AVAILED_ECFORMULA(CF_CESS_EXCISE_INPUT IN NUMBER
                                      ,CF_CESS_EXCISE_CAP IN NUMBER) RETURN NUMBER IS
  BEGIN
    RETURN ROUND((NVL(CF_CESS_EXCISE_INPUT
                    ,0) + NVL(CF_CESS_EXCISE_CAP
                    ,0))
                ,0);
  END CF_TOT_CR_AVAILED_ECFORMULA;

  FUNCTION CF_TOT_CR_AVAILED_STFORMULA(CF_SRVC_OPEN_BALNC IN NUMBER
                                      ,CF_TAX_SERVICES IN NUMBER) RETURN NUMBER IS
  BEGIN
    RETURN ROUND((NVL(CF_SRVC_OPEN_BALNC
                    ,0) + NVL(CF_TAX_SERVICES
                    ,0))
                ,0);
  END CF_TOT_CR_AVAILED_STFORMULA;

  FUNCTION CF_TOT_CR_AVAILED_SCFORMULA(CF_SRVC_CESS_OPNG IN NUMBER) RETURN NUMBER IS
  BEGIN
    RETURN ROUND((NVL(CF_SRVC_CESS_OPNG
                    ,0) + NVL(CP_CESS_CREDIT_AVLD
                    ,0))
                ,0);
  END CF_TOT_CR_AVAILED_SCFORMULA;

  FUNCTION CF_CLOSING_BLNC_ECFORMULA(CF_CESS_OPENING_BLNC IN NUMBER
                                    ,CF_TOT_CR_AVAILED_EC IN NUMBER
                                    ,CF_CESS_UTIL_PAY_GOODS IN NUMBER
                                    ,CF_CR_UTIL_INP_RM_CESS IN NUMBER) RETURN NUMBER IS
  BEGIN
    RETURN ROUND(NVL(CF_CESS_OPENING_BLNC
                    ,0) + NVL(CF_TOT_CR_AVAILED_EC
                    ,0) - NVL(CF_CESS_UTIL_PAY_GOODS
                    ,0) - NVL(CF_CR_UTIL_INP_RM_CESS
                    ,0)
                ,0);
  END CF_CLOSING_BLNC_ECFORMULA;

  FUNCTION CF_CLOSING_BLNC_SCFORMULA(CF_SRVC_CESS_OPNG IN NUMBER
                                    ,CF_TOT_CR_AVAILED_SC IN NUMBER
                                    ,CF_CESS_TAX_DUTY_GOODS IN NUMBER) RETURN NUMBER IS
  BEGIN
    RETURN ROUND((NVL(CF_SRVC_CESS_OPNG
                    ,0) + NVL(CF_TOT_CR_AVAILED_SC
                    ,0) - NVL(CF_CESS_TAX_DUTY_GOODS
                    ,0))
                ,0);
  END CF_CLOSING_BLNC_SCFORMULA;

  FUNCTION CF_1FORMULA(REGISTER IN VARCHAR2
                      ,INVENTORY_ITEM_ID IN NUMBER
                      ,CETSH IN VARCHAR2
                      ,UNITS IN VARCHAR2
                      ,EXCISE_DUTY_RATE IN NUMBER) RETURN NUMBER IS
    LN_QTY_MFTRD NUMBER;
  BEGIN
    IF REGISTER = 'RG1' THEN
      SELECT
        SUM(NVL(MANUFACTURED_LOOSE_QTY
               ,0) + NVL(FOR_HOME_USE_PAY_ED_QTY
               ,0) + NVL(FOR_EXPORT_PAY_ED_QTY
               ,0) + NVL(FOR_EXPORT_N_PAY_ED_QTY
               ,0) + NVL(TO_OTHER_FACTORY_N_PAY_ED_QTY
               ,0) + NVL(OTHER_PURPOSE_N_PAY_ED_QTY
               ,0) + NVL(OTHER_PURPOSE_PAY_ED_QTY
               ,0)) QTY_MANUFACTURED
      INTO LN_QTY_MFTRD
      FROM
        JAI_CMN_RG_I_TRXS JRGI,
        JAI_INV_ITM_SETUPS ITEMS
      WHERE JRGI.TRANSACTION_TYPE in ( 'R' , 'PR' , 'RA' , 'IOR' , 'CR' )
        AND ( JRGI.INVENTORY_ITEM_ID = CF_1FORMULA.INVENTORY_ITEM_ID
      OR NVL(ITEMS.ITEM_TARIFF
         ,'xyz') = NVL(CETSH
         ,'xyz') )
        AND ITEMS.INVENTORY_ITEM_ID = JRGI.INVENTORY_ITEM_ID
        AND JRGI.ORGANIZATION_ID = P_ORGANIZATION_ID
        AND ITEMS.ORGANIZATION_ID = JRGI.ORGANIZATION_ID
        AND NVL(JRGI.PRIMARY_UOM_CODE
         ,'XYZ') = NVL(UNITS
         ,'XYZ')
        AND NVL(ROUND(JRGI.EXCISE_DUTY_RATE
               ,0)
         ,-999.95) = NVL(CF_1FORMULA.EXCISE_DUTY_RATE
         ,-999.95)
        AND JRGI.LOCATION_ID = P_LOCATION_ID
        AND TRUNC(JRGI.CREATION_DATE) between TRUNC(P_START_DATE)
        AND TRUNC(P_END_DATE);
      RETURN LN_QTY_MFTRD;
    ELSIF REGISTER = 'RG23_PART_I' THEN
      RETURN TO_NUMBER(NULL);
    END IF;
  EXCEPTION
    WHEN OTHERS THEN
      /*SRW.MESSAGE(1275
                 ,'CF_Qty_Mftrd:' || SQLERRM)*/NULL;
      RETURN NULL;
  END CF_1FORMULA;

  FUNCTION CF_QTY_CLEAREDFORMULA(REGISTER IN VARCHAR2
                                ,INVENTORY_ITEM_ID IN NUMBER
                                ,CETSH IN VARCHAR2
                                ,EXCISE_DUTY_RATE IN NUMBER
                                ,UNITS IN VARCHAR2) RETURN NUMBER IS
    LN_QTY_CLRD NUMBER;
  BEGIN
    IF REGISTER = 'RG1' THEN
      SELECT
        SUM(NVL(MANUFACTURED_LOOSE_QTY
               ,0) + NVL(FOR_HOME_USE_PAY_ED_QTY
               ,0) + NVL(FOR_EXPORT_PAY_ED_QTY
               ,0) + NVL(FOR_EXPORT_N_PAY_ED_QTY
               ,0) + NVL(TO_OTHER_FACTORY_N_PAY_ED_QTY
               ,0) + NVL(OTHER_PURPOSE_N_PAY_ED_QTY
               ,0) + NVL(OTHER_PURPOSE_PAY_ED_QTY
               ,0)) QTY_MANUFACTURED
      INTO LN_QTY_CLRD
      FROM
        JAI_CMN_RG_I_TRXS JRGI,
        JAI_INV_ITM_SETUPS ITEMS
      WHERE JRGI.TRANSACTION_TYPE in ( 'I' , 'IA' , 'PI' , 'IOI' )
        AND ( JRGI.INVENTORY_ITEM_ID = CF_QTY_CLEAREDFORMULA.INVENTORY_ITEM_ID
      OR NVL(ITEMS.ITEM_TARIFF
         ,'xyz') = NVL(CETSH
         ,'xyz') )
        AND ITEMS.INVENTORY_ITEM_ID = JRGI.INVENTORY_ITEM_ID
        AND JRGI.ORGANIZATION_ID = P_ORGANIZATION_ID
        AND ITEMS.ORGANIZATION_ID = JRGI.ORGANIZATION_ID
        AND NVL(ROUND(JRGI.EXCISE_DUTY_RATE
               ,0)
         ,-999.95) = NVL(CF_QTY_CLEAREDFORMULA.EXCISE_DUTY_RATE
         ,-999.95)
        AND NVL(JRGI.PRIMARY_UOM_CODE
         ,'xyz') = NVL(UNITS
         ,'xyz')
        AND JRGI.LOCATION_ID = P_LOCATION_ID
        AND TRUNC(JRGI.CREATION_DATE) between TRUNC(P_START_DATE)
        AND TRUNC(P_END_DATE);
      RETURN LN_QTY_CLRD;
    ELSIF REGISTER = 'RG23_PART_I' THEN
      RETURN TO_NUMBER(NULL);
    END IF;
  EXCEPTION
    WHEN OTHERS THEN
      /*SRW.MESSAGE(1275
                 ,'CF_Qty_Cleared:' || SQLERRM)*/NULL;
      RETURN NULL;
  END CF_QTY_CLEAREDFORMULA;

  FUNCTION CF_TR6_CHALLAN_AMNTFORMULA RETURN NUMBER IS
    LN_PLA_AMOUNT NUMBER;
  BEGIN
    SELECT
      NVL(SUM(PLA_AMOUNT)
         ,0)
    INTO LN_PLA_AMOUNT
    FROM
      JAI_CMN_RG_PLA_HDRS A
    WHERE A.ORGANIZATION_ID = P_ORGANIZATION_ID
      AND A.LOCATION_ID = P_LOCATION_ID
      AND TRUNC(A.TR6_DATE) >= P_START_DATE
      AND TRUNC(A.TR6_DATE) <= P_END_DATE
      AND A.ACK_RECVD_FLAG = 'Y';
    RETURN LN_PLA_AMOUNT;
  EXCEPTION
    WHEN OTHERS THEN
      /*SRW.MESSAGE(1275
                 ,'CF_TR6_Challan_amnt:' || SQLERRM)*/NULL;
      RETURN NULL;
  END CF_TR6_CHALLAN_AMNTFORMULA;

  FUNCTION CF_RATEFORMULA(CF_QTY_CLEARED IN NUMBER
                         ,EXCISE_DUTY_RATE IN NUMBER) RETURN NUMBER IS
  BEGIN
    IF CF_QTY_CLEARED IS NULL THEN
      RETURN NULL;
    ELSE
      RETURN EXCISE_DUTY_RATE;
    END IF;
  END CF_RATEFORMULA;

  FUNCTION CF_DUTY_PAYABLEFORMULA(INVENTORY_ITEM_ID IN NUMBER
                                 ,CETSH IN VARCHAR2
                                 ,UNITS IN VARCHAR2
                                 ,EXCISE_DUTY_RATE IN NUMBER
                                 ,REGISTER IN VARCHAR2) RETURN NUMBER IS
    CURSOR C_DUTY_PAYABLE IS
      SELECT
        SUM(NVL(JRGI.BASIC_ED
               ,0) + NVL(JRGI.OTHER_ED
               ,0)) DUTY_PAYABLE,
        SUM(NVL(JRGI.ADDITIONAL_ED
               ,0)) AED_DUTY_PAYABLE
      FROM
        JAI_CMN_RG_I_TRXS JRGI,
        JAI_INV_ITM_SETUPS ITEMS
      WHERE JRGI.TRANSACTION_TYPE in ( 'I' , 'PI' , 'IA' , 'IOI' )
        AND ( JRGI.INVENTORY_ITEM_ID = cf_duty_payableformula.INVENTORY_ITEM_ID
      OR ITEMS.ITEM_TARIFF = CETSH )
        AND ITEMS.INVENTORY_ITEM_ID = JRGI.INVENTORY_ITEM_ID
        AND JRGI.ORGANIZATION_ID = P_ORGANIZATION_ID
        AND ITEMS.ORGANIZATION_ID = JRGI.ORGANIZATION_ID
        AND NVL(JRGI.PRIMARY_UOM_CODE
         ,'XYZ') = NVL(UNITS
         ,'XYZ')
        AND NVL(ROUND(JRGI.EXCISE_DUTY_RATE
               ,0)
         ,-999.95) = NVL(cf_duty_payableformula.EXCISE_DUTY_RATE
         ,-999.95)
        AND JRGI.LOCATION_ID = P_LOCATION_ID
        AND TRUNC(JRGI.CREATION_DATE) between TRUNC(P_START_DATE)
        AND TRUNC(P_END_DATE);
    LN_DUTY_PAYABLE NUMBER;
    LN_AED_DUTY_PAYABLE NUMBER;
    CURSOR C_DUTY_PAYABLE_PART_I IS
      SELECT
        SUM(NVL(JRGI.BASIC_ED
               ,0) + NVL(JRGI.OTHER_ED
               ,0)) DUTY_PAYABLE,
        SUM(NVL(JRGI.ADDITIONAL_ED
               ,0)) AED_DUTY_PAYABLE
      FROM
        JAI_CMN_RG_23AC_I_TRXS JRGI,
        JAI_INV_ITM_SETUPS ITEMS
      WHERE JRGI.TRANSACTION_TYPE in ( 'RTV' , 'I' , 'IA' , 'IOI' , 'PI' )
        AND ( JRGI.INVENTORY_ITEM_ID = cf_duty_payableformula.INVENTORY_ITEM_ID
      OR ITEMS.ITEM_TARIFF = CETSH )
        AND ITEMS.INVENTORY_ITEM_ID = JRGI.INVENTORY_ITEM_ID
        AND JRGI.ORGANIZATION_ID = P_ORGANIZATION_ID
        AND ITEMS.ORGANIZATION_ID = JRGI.ORGANIZATION_ID
        AND NVL(JRGI.PRIMARY_UOM_CODE
         ,'XYZ') = NVL(UNITS
         ,'XYZ')
        AND JRGI.LOCATION_ID = P_LOCATION_ID
        AND TRUNC(JRGI.CREATION_DATE) between TRUNC(P_START_DATE)
        AND TRUNC(P_END_DATE);
    LN_DUTY_PAYABLE_PART_I NUMBER;
    LN_AED_DUTY_PAYABLE_PART_I NUMBER;
  BEGIN
    IF REGISTER = 'RG1' THEN
      OPEN C_DUTY_PAYABLE;
      FETCH C_DUTY_PAYABLE
       INTO LN_DUTY_PAYABLE,LN_AED_DUTY_PAYABLE;
      CLOSE C_DUTY_PAYABLE;
      CP_AED_DUTY_PAYABLE := ROUND(NVL(LN_AED_DUTY_PAYABLE
                                      ,0)
                                  ,0);
      RETURN ROUND(LN_DUTY_PAYABLE
                  ,0);
    ELSIF REGISTER = 'RG23_PART_I' THEN
      OPEN C_DUTY_PAYABLE_PART_I;
      FETCH C_DUTY_PAYABLE_PART_I
       INTO LN_DUTY_PAYABLE_PART_I,LN_AED_DUTY_PAYABLE_PART_I;
      CLOSE C_DUTY_PAYABLE_PART_I;
      CP_AED_DUTY_PAYABLE := ROUND(NVL(LN_AED_DUTY_PAYABLE_PART_I
                                      ,0)
                                  ,0);
      RETURN ROUND(LN_DUTY_PAYABLE_PART_I
                  ,0);
    END IF;
  EXCEPTION
    WHEN OTHERS THEN
      /*SRW.MESSAGE(1275
                 ,'CF_Duty_Payable' || SQLERRM)*/NULL;
      RETURN NULL;
  END CF_DUTY_PAYABLEFORMULA;

  FUNCTION CF_OTHER_DUTIESFORMULA(INVENTORY_ITEM_ID IN NUMBER
                                 ,CETSH IN VARCHAR2
                                 ,UNITS IN VARCHAR2
                                 ,EXCISE_DUTY_RATE IN NUMBER
                                 ,REGISTER IN VARCHAR2) RETURN NUMBER IS
    LN_DUTY_PAYABLE NUMBER;
    LN_PLA_DUTY NUMBER;
    LN_RG23_DUTY NUMBER;
    CURSOR CUR_OTHER_DUTIES_PLA IS
      SELECT
        NVL(SUM(DEBIT)
           ,0)
      FROM
        JAI_CMN_RG_OTHERS
      WHERE SOURCE_REGISTER_ID IN (
        SELECT
          REGISTER_ID_PART_II
        FROM
          JAI_CMN_RG_I_TRXS JRGI,
          JAI_INV_ITM_SETUPS ITEMS
        WHERE ( JRGI.INVENTORY_ITEM_ID = cf_other_dutiesformula.INVENTORY_ITEM_ID
        OR ITEMS.ITEM_TARIFF = CETSH )
          AND ITEMS.INVENTORY_ITEM_ID = JRGI.INVENTORY_ITEM_ID
          AND JRGI.ORGANIZATION_ID = P_ORGANIZATION_ID
          AND ITEMS.ORGANIZATION_ID = JRGI.ORGANIZATION_ID
          AND NVL(JRGI.PRIMARY_UOM_CODE
           ,'XYZ') = NVL(UNITS
           ,'XYZ')
          AND NVL(ROUND(JRGI.EXCISE_DUTY_RATE
                 ,0)
           ,-999.95) = NVL(cf_other_dutiesformula.EXCISE_DUTY_RATE
           ,-999.95)
          AND JRGI.LOCATION_ID = P_LOCATION_ID
          AND TRUNC(JRGI.CREATION_DATE) between TRUNC(P_START_DATE)
          AND TRUNC(P_END_DATE)
          AND JRGI.TRANSACTION_TYPE in ( 'I' , 'IA' , 'PI' , 'IOI' )
          AND PAYMENT_REGISTER = 'PLA' )
        AND SOURCE_TYPE = 2
        AND TAX_TYPE in ( TAX_TYPE_EXC_EDU_CESS , TAX_TYPE_CVD_EDU_CESS );
    CURSOR CUR_OTHER_DUTIES_RG23 IS
      SELECT
        NVL(SUM(DEBIT)
           ,0)
      FROM
        JAI_CMN_RG_OTHERS
      WHERE SOURCE_REGISTER_ID IN (
        SELECT
          REGISTER_ID_PART_II
        FROM
          JAI_CMN_RG_I_TRXS JRGI,
          JAI_INV_ITM_SETUPS ITEMS
        WHERE ( JRGI.INVENTORY_ITEM_ID = cf_other_dutiesformula.INVENTORY_ITEM_ID
        OR ITEMS.ITEM_TARIFF = CETSH )
          AND ITEMS.INVENTORY_ITEM_ID = JRGI.INVENTORY_ITEM_ID
          AND JRGI.ORGANIZATION_ID = P_ORGANIZATION_ID
          AND ITEMS.ORGANIZATION_ID = JRGI.ORGANIZATION_ID
          AND NVL(JRGI.PRIMARY_UOM_CODE
           ,'XYZ') = NVL(UNITS
           ,'XYZ')
          AND NVL(ROUND(JRGI.EXCISE_DUTY_RATE
                 ,0)
           ,-999.95) = NVL(cf_other_dutiesformula.EXCISE_DUTY_RATE
           ,-999.95)
          AND JRGI.LOCATION_ID = P_LOCATION_ID
          AND TRUNC(JRGI.CREATION_DATE) between TRUNC(P_START_DATE)
          AND TRUNC(P_END_DATE)
          AND JRGI.TRANSACTION_TYPE in ( 'I' , 'IA' , 'PI' , 'IOI' )
          AND PAYMENT_REGISTER IN ( 'RG23A' , 'RG23C' ) )
        AND SOURCE_TYPE = 1
        AND TAX_TYPE in ( TAX_TYPE_EXC_EDU_CESS , TAX_TYPE_CVD_EDU_CESS );
    CURSOR CUR_OTHER_DUTIES_PLA_PART_I IS
      SELECT
        NVL(SUM(DEBIT)
           ,0)
      FROM
        JAI_CMN_RG_OTHERS
      WHERE SOURCE_REGISTER_ID IN (
        SELECT
          REGISTER_ID_PART_II
        FROM
          JAI_CMN_RG_23AC_I_TRXS JRGI,
          JAI_INV_ITM_SETUPS ITEMS
        WHERE ( JRGI.INVENTORY_ITEM_ID = cf_other_dutiesformula.INVENTORY_ITEM_ID
        OR ITEMS.ITEM_TARIFF = CETSH )
          AND ITEMS.INVENTORY_ITEM_ID = JRGI.INVENTORY_ITEM_ID
          AND JRGI.ORGANIZATION_ID = P_ORGANIZATION_ID
          AND ITEMS.ORGANIZATION_ID = JRGI.ORGANIZATION_ID
          AND NVL(JRGI.PRIMARY_UOM_CODE
           ,'XYZ') = NVL(UNITS
           ,'XYZ')
          AND JRGI.LOCATION_ID = P_LOCATION_ID
          AND TRUNC(JRGI.CREATION_DATE) between TRUNC(P_START_DATE)
          AND TRUNC(P_END_DATE)
          AND JRGI.TRANSACTION_TYPE in ( 'RTV' , 'I' , 'IA' , 'IOI' , 'PI' )
          AND REGISTER_TYPE = 'PLA' )
        AND SOURCE_TYPE = 2
        AND TAX_TYPE in ( TAX_TYPE_EXC_EDU_CESS , TAX_TYPE_CVD_EDU_CESS );
    CURSOR CUR_OTHER_DUTIES_RG23_PART_I IS
      SELECT
        NVL(SUM(DEBIT)
           ,0)
      FROM
        JAI_CMN_RG_OTHERS
      WHERE SOURCE_REGISTER_ID IN (
        SELECT
          REGISTER_ID_PART_II
        FROM
          JAI_CMN_RG_23AC_I_TRXS JRGI,
          JAI_INV_ITM_SETUPS ITEMS
        WHERE ( JRGI.INVENTORY_ITEM_ID = cf_other_dutiesformula.INVENTORY_ITEM_ID
        OR ITEMS.ITEM_TARIFF = CETSH )
          AND ITEMS.INVENTORY_ITEM_ID = JRGI.INVENTORY_ITEM_ID
          AND JRGI.ORGANIZATION_ID = P_ORGANIZATION_ID
          AND ITEMS.ORGANIZATION_ID = JRGI.ORGANIZATION_ID
          AND NVL(JRGI.PRIMARY_UOM_CODE
           ,'XYZ') = NVL(UNITS
           ,'XYZ')
          AND JRGI.LOCATION_ID = P_LOCATION_ID
          AND TRUNC(JRGI.CREATION_DATE) between TRUNC(P_START_DATE)
          AND TRUNC(P_END_DATE)
          AND JRGI.TRANSACTION_TYPE in ( 'RTV' , 'I' , 'IA' , 'IOI' , 'PI' )
          AND REGISTER_TYPE IN ( 'A' , 'C' ) )
        AND SOURCE_TYPE = 1
        AND TAX_TYPE in ( TAX_TYPE_EXC_EDU_CESS , TAX_TYPE_CVD_EDU_CESS );
    LN_PLA_DUTY_PART_I NUMBER;
    LN_RG23_DUTY_PART_I NUMBER;
  BEGIN
    IF REGISTER = 'RG1' THEN
      /*SRW.MESSAGE(1275
                 ,'1')*/NULL;
      OPEN CUR_OTHER_DUTIES_PLA;
      FETCH CUR_OTHER_DUTIES_PLA
       INTO LN_PLA_DUTY;
      CLOSE CUR_OTHER_DUTIES_PLA;
      OPEN CUR_OTHER_DUTIES_RG23;
      FETCH CUR_OTHER_DUTIES_RG23
       INTO LN_RG23_DUTY;
      CLOSE CUR_OTHER_DUTIES_RG23;
      LN_DUTY_PAYABLE := ROUND((NVL(LN_PLA_DUTY
                                  ,0) + NVL(LN_RG23_DUTY
                                  ,0))
                              ,0);
      /*SRW.MESSAGE(1275
                 ,'1a')*/NULL;
      RETURN LN_DUTY_PAYABLE;
    ELSIF REGISTER = 'RG23_PART_I' THEN
      /*SRW.MESSAGE(1275
                 ,'2')*/NULL;
      OPEN CUR_OTHER_DUTIES_PLA_PART_I;
      FETCH CUR_OTHER_DUTIES_PLA_PART_I
       INTO LN_PLA_DUTY_PART_I;
      CLOSE CUR_OTHER_DUTIES_PLA_PART_I;
      OPEN CUR_OTHER_DUTIES_RG23_PART_I;
      FETCH CUR_OTHER_DUTIES_RG23_PART_I
       INTO LN_RG23_DUTY_PART_I;
      CLOSE CUR_OTHER_DUTIES_RG23_PART_I;
      LN_DUTY_PAYABLE := ROUND((NVL(LN_PLA_DUTY_PART_I
                                  ,0) + NVL(LN_RG23_DUTY_PART_I
                                  ,0))
                              ,0);
      /*SRW.MESSAGE(1275
                 ,'2a')*/NULL;
      RETURN LN_DUTY_PAYABLE;
    END IF;
  EXCEPTION
    WHEN OTHERS THEN
      /*SRW.MESSAGE(1275
                 ,'CF_OTHER_duties' || SQLERRM)*/NULL;
      RETURN NULL;
  END CF_OTHER_DUTIESFORMULA;

  FUNCTION CF_CESS_UTIL_PAY_GOODSFORMULA(CF_CR_UTIL_INP_RM_CESS IN NUMBER) RETURN NUMBER IS
    LN_EDU_CESS_EXCISE NUMBER;
  BEGIN
    SELECT
      NVL(SUM(DEBIT)
         ,0)
    INTO LN_EDU_CESS_EXCISE
    FROM
      JAI_CMN_RG_OTHERS JRO,
      JAI_CMN_RG_23AC_II_TRXS RG23
    WHERE JRO.SOURCE_REGISTER_ID = RG23.REGISTER_ID
      AND RG23.LOCATION_ID = P_LOCATION_ID
      AND RG23.ORGANIZATION_ID = P_ORGANIZATION_ID
      AND TRUNC(RG23.CREATION_DATE) >= P_START_DATE
      AND TRUNC(RG23.CREATION_DATE) <= TRUNC(NVL(P_END_DATE
             ,SYSDATE))
      AND RG23.REGISTER_TYPE IN ( 'A' , 'C' )
      AND JRO.SOURCE_REGISTER in ( 'RG23A_P2' , 'RG23C_P2' )
      AND JRO.TAX_TYPE in ( TAX_TYPE_CVD_EDU_CESS , TAX_TYPE_EXC_EDU_CESS );
    RETURN (ROUND(NVL(LN_EDU_CESS_EXCISE
                    ,0) - NVL(CF_CR_UTIL_INP_RM_CESS
                    ,0)
                ,0));
  EXCEPTION
    WHEN OTHERS THEN
      /*SRW.MESSAGE(1275
                 ,'CF_cess_util_pay_goods:' || SQLERRM)*/NULL;
      RETURN NULL;
  END CF_CESS_UTIL_PAY_GOODSFORMULA;

  FUNCTION CF_ITEM_DESCRIPTION(INVENTORY_ITEM_ID IN NUMBER) RETURN CHAR IS
    LV_ITEM_DESC MTL_SYSTEM_ITEMS.DESCRIPTION%TYPE;
    CURSOR CUR_ITEM_DESC IS
      SELECT
        MSI.DESCRIPTION
      FROM
        MTL_SYSTEM_ITEMS MSI
      WHERE MSI.INVENTORY_ITEM_ID = cf_item_description.INVENTORY_ITEM_ID
        AND MSI.ORGANIZATION_ID = P_ORGANIZATION_ID;
  BEGIN
    OPEN CUR_ITEM_DESC;
    FETCH CUR_ITEM_DESC
     INTO LV_ITEM_DESC;
    CLOSE CUR_ITEM_DESC;
    RETURN LV_ITEM_DESC;
  EXCEPTION
    WHEN OTHERS THEN
      CLOSE CUR_ITEM_DESC;
      RETURN NULL;
  END CF_ITEM_DESCRIPTION;

  FUNCTION CF_CREDIT_INPUT_MANF RETURN NUMBER IS
    CURSOR CUR_CRDIT_INPUT_MANF IS
      SELECT
        SUM(DECODE(REGISTER_TYPE
                  ,'A'
                  ,NVL(CR_BASIC_ED
                     ,0) + NVL(CR_ADDITIONAL_ED
                     ,0) + NVL(CR_OTHER_ED
                     ,0)
                  ,0)) CREDIT_AVAILED_ON_INPUTS_VEND
      FROM
        JAI_CMN_RG_23AC_II_TRXS JIRP,
        JAI_CMN_VENDOR_SITES JIPV
      WHERE LOCATION_ID = P_LOCATION_ID
        AND ORGANIZATION_ID = P_ORGANIZATION_ID
        AND JIRP.VENDOR_ID = JIPV.VENDOR_ID
        AND JIRP.VENDOR_SITE_ID = JIPV.VENDOR_SITE_ID
        AND ( JIPV.VENDOR_TYPE IN ( 'Manufacturer' , 'Importer' )
      OR JIPV.VENDOR_TYPE IS NULL )
        AND TRUNC(JIRP.CREATION_DATE) >= P_START_DATE
        AND TRUNC(JIRP.CREATION_DATE) <= TRUNC(NVL(P_END_DATE
               ,SYSDATE))
        AND not exists (
        SELECT
          1
        FROM
          JAI_INV_ITM_SETUPS JMSI
        WHERE JIRP.ORGANIZATION_ID = JMSI.ORGANIZATION_ID
          AND JIRP.INVENTORY_ITEM_ID = JMSI.INVENTORY_ITEM_ID
          AND ( JMSI.ITEM_CLASS = 'RMEX'
        OR ( JMSI.ITEM_CLASS = 'RMIN'
          AND exists (
          SELECT
            1
          FROM
            JAI_RCV_LINES JTL,
            JAI_RCV_LINE_TAXES JRTL
          WHERE JTL.TRANSACTION_ID = JIRP.RECEIPT_REF
            AND JTL.SHIPMENT_LINE_ID = JRTL.SHIPMENT_LINE_ID
            AND JRTL.TAX_TYPE IN ( 'ADDITIONAL_CVD' , 'CVD' ) ) ) ) );
    CURSOR CUR_CRDIT_INPUT_CUST IS
      SELECT
        SUM(DECODE(REGISTER_TYPE
                  ,'A'
                  ,NVL(CR_BASIC_ED
                     ,0) + NVL(CR_ADDITIONAL_ED
                     ,0) + NVL(CR_OTHER_ED
                     ,0)
                  ,0)) CREDIT_AVAILED_ON_INPUTS_CUST
      FROM
        JAI_CMN_RG_23AC_II_TRXS JIRP,
        JAI_CMN_CUS_ADDRESSES JICA,
        HZ_CUST_ACCT_SITES_ALL HZCAS,
        HZ_CUST_SITE_USES_ALL HZCSU
      WHERE HZCAS.CUST_ACCT_SITE_ID = HZCSU.CUST_ACCT_SITE_ID
        AND JICA.ADDRESS_ID = HZCSU.CUST_ACCT_SITE_ID
        AND HZCSU.SITE_USE_ID = JIRP.CUSTOMER_SITE_ID
        AND JIRP.CUSTOMER_ID = JICA.CUSTOMER_ID
        AND JIRP.LOCATION_ID = P_LOCATION_ID
        AND JIRP.ORGANIZATION_ID = P_ORGANIZATION_ID
        AND TRUNC(JIRP.CREATION_DATE) >= P_START_DATE
        AND TRUNC(JIRP.CREATION_DATE) <= TRUNC(NVL(P_END_DATE
               ,SYSDATE))
        AND not exists (
        SELECT
          1
        FROM
          JAI_INV_ITM_SETUPS JMSI
        WHERE JIRP.ORGANIZATION_ID = JMSI.ORGANIZATION_ID
          AND JIRP.INVENTORY_ITEM_ID = JMSI.INVENTORY_ITEM_ID
          AND ( JMSI.ITEM_CLASS = 'RMEX'
        OR ( JMSI.ITEM_CLASS = 'RMIN'
          AND exists (
          SELECT
            1
          FROM
            JAI_RCV_LINES JTL,
            JAI_RCV_LINE_TAXES JRTL
          WHERE JTL.TRANSACTION_ID = JIRP.RECEIPT_REF
            AND JTL.SHIPMENT_LINE_ID = JRTL.SHIPMENT_LINE_ID
            AND JRTL.TAX_TYPE IN ( 'ADDITIONAL_CVD' , 'CVD' ) ) ) ) );
    CURSOR CUR_CRDIT_INPUT_MANF_ISO IS
      SELECT
        SUM(DECODE(REGISTER_TYPE
                  ,'A'
                  ,NVL(CR_BASIC_ED
                     ,0) + NVL(CR_ADDITIONAL_ED
                     ,0) + NVL(CR_OTHER_ED
                     ,0)
                  ,0)) CREDIT_AVAILED_ON_INPUTS
      FROM
        JAI_CMN_RG_23AC_II_TRXS JIRP,
        JAI_CMN_INVENTORY_ORGS JIHO
      WHERE JIRP.LOCATION_ID = P_LOCATION_ID
        AND JIRP.ORGANIZATION_ID = P_ORGANIZATION_ID
        AND ABS(JIRP.VENDOR_ID) = JIHO.ORGANIZATION_ID
        AND ABS(JIRP.VENDOR_SITE_ID) = JIHO.LOCATION_ID
        AND JIHO.MANUFACTURING = 'Y'
        AND TRUNC(JIRP.CREATION_DATE) >= P_START_DATE
        AND TRUNC(JIRP.CREATION_DATE) <= TRUNC(NVL(P_END_DATE
               ,SYSDATE))
        AND not exists (
        SELECT
          1
        FROM
          JAI_INV_ITM_SETUPS JMSI
        WHERE JIRP.ORGANIZATION_ID = JMSI.ORGANIZATION_ID
          AND JIRP.INVENTORY_ITEM_ID = JMSI.INVENTORY_ITEM_ID
          AND ( JMSI.ITEM_CLASS = 'RMEX'
        OR ( JMSI.ITEM_CLASS = 'RMIN'
          AND exists (
          SELECT
            1
          FROM
            JAI_RCV_LINES JTL,
            JAI_RCV_LINE_TAXES JRTL
          WHERE JTL.TRANSACTION_ID = JIRP.RECEIPT_REF
            AND JTL.SHIPMENT_LINE_ID = JRTL.SHIPMENT_LINE_ID
            AND JRTL.TAX_TYPE IN ( 'ADDITIONAL_CVD' , 'CVD' ) ) ) ) );
    LN_CLOSED_INPUT_MANF NUMBER;
    LN_CLOSED_INPUT_MANF_ISO NUMBER;
    LN_CLOSED_INPUT_CUST NUMBER;
    CURSOR C_CREDIT_IMPORT_INPUT IS
      SELECT
        ROUND(NVL(SUM(DECODE(REGISTER_TYPE
                            ,'A'
                            ,NVL(CR_BASIC_ED
                               ,0) + NVL(CR_ADDITIONAL_ED
                               ,0) + NVL(CR_OTHER_ED
                               ,0)
                            ,0))
                 ,0)
             ,0) CREDIT_ON_IMPORT_INPUTS
      FROM
        JAI_CMN_RG_23AC_II_TRXS JIRP,
        JAI_INV_ITM_SETUPS JMSI
      WHERE JIRP.LOCATION_ID = P_LOCATION_ID
        AND JIRP.ORGANIZATION_ID = P_ORGANIZATION_ID
        AND JIRP.ORGANIZATION_ID = JMSI.ORGANIZATION_ID
        AND JIRP.INVENTORY_ITEM_ID = JMSI.INVENTORY_ITEM_ID
        AND TRUNC(JIRP.CREATION_DATE) >= P_START_DATE
        AND TRUNC(JIRP.CREATION_DATE) <= TRUNC(NVL(P_END_DATE
               ,SYSDATE))
        AND ( ( JIRP.VENDOR_ID is not null
        AND JIRP.VENDOR_SITE_ID is not null )
      OR ( JIRP.CUSTOMER_ID is not null
        AND JIRP.LOCATION_ID is not null ) )
        AND ( JMSI.ITEM_CLASS = 'RMEX'
      OR ( JMSI.ITEM_CLASS = 'RMIN'
        AND exists (
        SELECT
          1
        FROM
          JAI_RCV_LINES JTL,
          JAI_RCV_LINE_TAXES JRTL
        WHERE JTL.TRANSACTION_ID = JIRP.RECEIPT_REF
          AND JTL.SHIPMENT_LINE_ID = JRTL.SHIPMENT_LINE_ID
          AND JRTL.TAX_TYPE IN ( 'ADDITIONAL_CVD' , 'CVD' ) ) ) );
  BEGIN
    OPEN CUR_CRDIT_INPUT_MANF;
    FETCH CUR_CRDIT_INPUT_MANF
     INTO LN_CLOSED_INPUT_MANF;
    CLOSE CUR_CRDIT_INPUT_MANF;
    OPEN CUR_CRDIT_INPUT_MANF_ISO;
    FETCH CUR_CRDIT_INPUT_MANF_ISO
     INTO LN_CLOSED_INPUT_MANF_ISO;
    CLOSE CUR_CRDIT_INPUT_MANF_ISO;
    OPEN CUR_CRDIT_INPUT_CUST;
    FETCH CUR_CRDIT_INPUT_CUST
     INTO LN_CLOSED_INPUT_CUST;
    CLOSE CUR_CRDIT_INPUT_CUST;
    OPEN C_CREDIT_IMPORT_INPUT;
    FETCH C_CREDIT_IMPORT_INPUT
     INTO CP_CRDT_IMPORT_INPUT;
    CLOSE C_CREDIT_IMPORT_INPUT;
    RETURN ROUND(NVL(LN_CLOSED_INPUT_MANF
                    ,0) + NVL(LN_CLOSED_INPUT_MANF_ISO
                    ,0) + NVL(LN_CLOSED_INPUT_CUST
                    ,0)
                ,0);
  EXCEPTION
    WHEN OTHERS THEN
      CLOSE CUR_CRDIT_INPUT_MANF;
      CLOSE CUR_CRDIT_INPUT_MANF_ISO;
      CLOSE CUR_CRDIT_INPUT_CUST;
      RETURN NULL;
  END CF_CREDIT_INPUT_MANF;

  FUNCTION CF_CREDIT_INPUT_I_II_STG RETURN NUMBER IS
    CURSOR CUR_CRDIT_INPUT_STG IS
      SELECT
        SUM(DECODE(REGISTER_TYPE
                  ,'A'
                  ,NVL(CR_BASIC_ED
                     ,0) + NVL(CR_ADDITIONAL_ED
                     ,0) + NVL(CR_OTHER_ED
                     ,0)
                  ,0)) CREDIT_AVAILED_ON_INPUTS
      FROM
        JAI_CMN_RG_23AC_II_TRXS JIRP,
        JAI_CMN_VENDOR_SITES JIPV
      WHERE LOCATION_ID = P_LOCATION_ID
        AND ORGANIZATION_ID = P_ORGANIZATION_ID
        AND JIRP.VENDOR_ID = JIPV.VENDOR_ID
        AND JIRP.VENDOR_SITE_ID = JIPV.VENDOR_SITE_ID
        AND JIPV.VENDOR_TYPE IN ( 'First Stage Dealer' , 'Second Stage Dealer' )
        AND TRUNC(JIRP.CREATION_DATE) >= P_START_DATE
        AND TRUNC(JIRP.CREATION_DATE) <= TRUNC(NVL(P_END_DATE
               ,SYSDATE))
        AND not exists (
        SELECT
          1
        FROM
          JAI_INV_ITM_SETUPS JMSI
        WHERE JIRP.ORGANIZATION_ID = JMSI.ORGANIZATION_ID
          AND JIRP.INVENTORY_ITEM_ID = JMSI.INVENTORY_ITEM_ID
          AND ( JMSI.ITEM_CLASS = 'RMEX'
        OR ( JMSI.ITEM_CLASS = 'RMIN'
          AND exists (
          SELECT
            1
          FROM
            JAI_RCV_LINES JTL,
            JAI_RCV_LINE_TAXES JRTL
          WHERE JTL.TRANSACTION_ID = JIRP.RECEIPT_REF
            AND JTL.SHIPMENT_LINE_ID = JRTL.SHIPMENT_LINE_ID
            AND JRTL.TAX_TYPE IN ( 'ADDITIONAL_CVD' , 'CVD' ) ) ) ) );
    CURSOR CUR_CRDIT_INPUT_STG_ISO IS
      SELECT
        SUM(DECODE(REGISTER_TYPE
                  ,'A'
                  ,NVL(CR_BASIC_ED
                     ,0) + NVL(CR_ADDITIONAL_ED
                     ,0) + NVL(CR_OTHER_ED
                     ,0)
                  ,0)) CREDIT_AVAILED_ON_INPUTS
      FROM
        JAI_CMN_RG_23AC_II_TRXS JIRP,
        JAI_CMN_INVENTORY_ORGS JIHO
      WHERE JIRP.LOCATION_ID = P_LOCATION_ID
        AND JIRP.ORGANIZATION_ID = P_ORGANIZATION_ID
        AND ABS(JIRP.VENDOR_ID) = JIHO.ORGANIZATION_ID
        AND ABS(JIRP.VENDOR_SITE_ID) = JIHO.LOCATION_ID
        AND JIHO.TRADING = 'Y'
        AND TRUNC(JIRP.CREATION_DATE) >= P_START_DATE
        AND TRUNC(JIRP.CREATION_DATE) <= TRUNC(NVL(P_END_DATE
               ,SYSDATE))
        AND not exists (
        SELECT
          1
        FROM
          JAI_INV_ITM_SETUPS JMSI
        WHERE JIRP.ORGANIZATION_ID = JMSI.ORGANIZATION_ID
          AND JIRP.INVENTORY_ITEM_ID = JMSI.INVENTORY_ITEM_ID
          AND ( JMSI.ITEM_CLASS = 'RMEX'
        OR ( JMSI.ITEM_CLASS = 'RMIN'
          AND exists (
          SELECT
            1
          FROM
            JAI_RCV_LINES JTL,
            JAI_RCV_LINE_TAXES JRTL
          WHERE JTL.TRANSACTION_ID = JIRP.RECEIPT_REF
            AND JTL.SHIPMENT_LINE_ID = JRTL.SHIPMENT_LINE_ID
            AND JRTL.TAX_TYPE IN ( 'ADDITIONAL_CVD' , 'CVD' ) ) ) ) );
    LN_CLOSED_INPUT_STG NUMBER;
    LN_CLOSED_INPUT_STG_ISO NUMBER;
  BEGIN
    OPEN CUR_CRDIT_INPUT_STG;
    FETCH CUR_CRDIT_INPUT_STG
     INTO LN_CLOSED_INPUT_STG;
    CLOSE CUR_CRDIT_INPUT_STG;
    OPEN CUR_CRDIT_INPUT_STG_ISO;
    FETCH CUR_CRDIT_INPUT_STG_ISO
     INTO LN_CLOSED_INPUT_STG_ISO;
    CLOSE CUR_CRDIT_INPUT_STG_ISO;
    RETURN ROUND(NVL(LN_CLOSED_INPUT_STG
                    ,0) + NVL(LN_CLOSED_INPUT_STG_ISO
                    ,0)
                ,0);
  EXCEPTION
    WHEN OTHERS THEN
      CLOSE CUR_CRDIT_INPUT_STG;
      CLOSE CUR_CRDIT_INPUT_STG_ISO;
      RETURN NULL;
  END CF_CREDIT_INPUT_I_II_STG;

  FUNCTION CF_CESS_EXCISE_INPUT_MANF RETURN NUMBER IS
    CURSOR CUR_CESS_EXCISE_INPUT_MANF IS
      SELECT
        NVL(SUM(CREDIT)
           ,0)
      FROM
        JAI_CMN_RG_OTHERS JRO,
        JAI_CMN_RG_23AC_II_TRXS RG23,
        JAI_CMN_VENDOR_SITES JIPV
      WHERE JRO.SOURCE_REGISTER_ID = RG23.REGISTER_ID
        AND RG23.VENDOR_ID = JIPV.VENDOR_ID
        AND RG23.VENDOR_SITE_ID = JIPV.VENDOR_SITE_ID
        AND ( JIPV.VENDOR_TYPE IN ( 'Manufacturer' , 'Importer' )
      OR JIPV.VENDOR_TYPE IS NULL )
        AND RG23.LOCATION_ID = P_LOCATION_ID
        AND RG23.ORGANIZATION_ID = P_ORGANIZATION_ID
        AND TRUNC(RG23.CREATION_DATE) >= P_START_DATE
        AND TRUNC(RG23.CREATION_DATE) <= TRUNC(NVL(P_END_DATE
               ,SYSDATE))
        AND RG23.REGISTER_TYPE = 'A'
        AND JRO.SOURCE_REGISTER = 'RG23A_P2'
        AND JRO.TAX_TYPE IN ( TAX_TYPE_CVD_EDU_CESS , TAX_TYPE_EXC_EDU_CESS );
    CURSOR CUR_CESS_EXCISE_INPUT_CUST IS
      SELECT
        NVL(SUM(CREDIT)
           ,0)
      FROM
        JAI_CMN_RG_OTHERS JRO,
        JAI_CMN_RG_23AC_II_TRXS RG23,
        JAI_CMN_CUS_ADDRESSES JICA,
        HZ_CUST_ACCT_SITES_ALL HZCAS,
        HZ_CUST_SITE_USES_ALL HZCSU
      WHERE HZCAS.CUST_ACCT_SITE_ID = HZCSU.CUST_ACCT_SITE_ID
        AND JICA.ADDRESS_ID = HZCSU.CUST_ACCT_SITE_ID
        AND HZCSU.SITE_USE_ID = RG23.CUSTOMER_SITE_ID
        AND RG23.CUSTOMER_ID = JICA.CUSTOMER_ID
        AND JRO.SOURCE_REGISTER_ID = RG23.REGISTER_ID
        AND RG23.LOCATION_ID = P_LOCATION_ID
        AND RG23.ORGANIZATION_ID = P_ORGANIZATION_ID
        AND TRUNC(RG23.CREATION_DATE) >= P_START_DATE
        AND TRUNC(RG23.CREATION_DATE) <= TRUNC(NVL(P_END_DATE
               ,SYSDATE))
        AND RG23.REGISTER_TYPE = 'A'
        AND JRO.SOURCE_REGISTER = 'RG23A_P2'
        AND JRO.TAX_TYPE IN ( TAX_TYPE_CVD_EDU_CESS , TAX_TYPE_EXC_EDU_CESS );
    CURSOR CUR_CESS_EXCISE_INPUT_MANF_ISO IS
      SELECT
        NVL(SUM(CREDIT)
           ,0)
      FROM
        JAI_CMN_RG_OTHERS JRO,
        JAI_CMN_RG_23AC_II_TRXS RG23,
        JAI_CMN_INVENTORY_ORGS JIHO
      WHERE JRO.SOURCE_REGISTER_ID = RG23.REGISTER_ID
        AND ABS(RG23.VENDOR_ID) = JIHO.ORGANIZATION_ID
        AND ABS(RG23.VENDOR_SITE_ID) = JIHO.LOCATION_ID
        AND JIHO.MANUFACTURING = 'Y'
        AND RG23.LOCATION_ID = P_LOCATION_ID
        AND RG23.ORGANIZATION_ID = P_ORGANIZATION_ID
        AND TRUNC(RG23.CREATION_DATE) >= P_START_DATE
        AND TRUNC(RG23.CREATION_DATE) <= TRUNC(NVL(P_END_DATE
               ,SYSDATE))
        AND RG23.REGISTER_TYPE = 'A'
        AND JRO.SOURCE_REGISTER = 'RG23A_P2'
        AND JRO.TAX_TYPE IN ( TAX_TYPE_CVD_EDU_CESS , TAX_TYPE_EXC_EDU_CESS );
    LN_EDU_CESS_EXCISE_MANF NUMBER;
    LN_EDU_CESS_EXCISE_MANF_ISO NUMBER;
    LN_EDU_CESS_EXCISE_CUST NUMBER;
  BEGIN
    OPEN CUR_CESS_EXCISE_INPUT_MANF;
    FETCH CUR_CESS_EXCISE_INPUT_MANF
     INTO LN_EDU_CESS_EXCISE_MANF;
    CLOSE CUR_CESS_EXCISE_INPUT_MANF;
    OPEN CUR_CESS_EXCISE_INPUT_MANF_ISO;
    FETCH CUR_CESS_EXCISE_INPUT_MANF_ISO
     INTO LN_EDU_CESS_EXCISE_MANF_ISO;
    CLOSE CUR_CESS_EXCISE_INPUT_MANF_ISO;
    OPEN CUR_CESS_EXCISE_INPUT_CUST;
    FETCH CUR_CESS_EXCISE_INPUT_CUST
     INTO LN_EDU_CESS_EXCISE_CUST;
    CLOSE CUR_CESS_EXCISE_INPUT_CUST;
    RETURN ROUND(NVL(LN_EDU_CESS_EXCISE_MANF
                    ,0) + NVL(LN_EDU_CESS_EXCISE_MANF_ISO
                    ,0) + NVL(LN_EDU_CESS_EXCISE_CUST
                    ,0)
                ,0);
  EXCEPTION
    WHEN OTHERS THEN
      IF CUR_CESS_EXCISE_INPUT_MANF%ISOPEN THEN
        CLOSE CUR_CESS_EXCISE_INPUT_MANF;
      END IF;
      IF CUR_CESS_EXCISE_INPUT_MANF_ISO%ISOPEN THEN
        CLOSE CUR_CESS_EXCISE_INPUT_MANF_ISO;
      END IF;
      RETURN NULL;
  END CF_CESS_EXCISE_INPUT_MANF;

  FUNCTION CF_CESS_EXCISE_INPUT_STG RETURN NUMBER IS
    CURSOR CUR_CESS_EXCISE_INPUT_STG IS
      SELECT
        NVL(SUM(CREDIT)
           ,0)
      FROM
        JAI_CMN_RG_OTHERS JRO,
        JAI_CMN_RG_23AC_II_TRXS RG23,
        JAI_CMN_VENDOR_SITES JIPV
      WHERE JRO.SOURCE_REGISTER_ID = RG23.REGISTER_ID
        AND RG23.VENDOR_ID = JIPV.vendor_id (+)
        AND RG23.VENDOR_SITE_ID = JIPV.vendor_site_id (+)
        AND JIPV.VENDOR_TYPE IN ( 'First Stage Dealer' , 'Second Stage Dealer' )
        AND RG23.LOCATION_ID = P_LOCATION_ID
        AND RG23.ORGANIZATION_ID = P_ORGANIZATION_ID
        AND TRUNC(RG23.CREATION_DATE) >= P_START_DATE
        AND TRUNC(RG23.CREATION_DATE) <= TRUNC(NVL(P_END_DATE
               ,SYSDATE))
        AND RG23.REGISTER_TYPE = 'A'
        AND JRO.SOURCE_REGISTER = 'RG23A_P2'
        AND JRO.TAX_TYPE IN ( TAX_TYPE_CVD_EDU_CESS , TAX_TYPE_EXC_EDU_CESS );
    CURSOR CUR_CESS_EXCISE_INPUT_STG_ISO IS
      SELECT
        NVL(SUM(CREDIT)
           ,0)
      FROM
        JAI_CMN_RG_OTHERS JRO,
        JAI_CMN_RG_23AC_II_TRXS RG23,
        JAI_CMN_INVENTORY_ORGS JIHO
      WHERE JRO.SOURCE_REGISTER_ID = RG23.REGISTER_ID
        AND ABS(RG23.VENDOR_ID) = JIHO.ORGANIZATION_ID
        AND ABS(RG23.VENDOR_SITE_ID) = JIHO.LOCATION_ID
        AND JIHO.TRADING = 'Y'
        AND RG23.LOCATION_ID = P_LOCATION_ID
        AND RG23.ORGANIZATION_ID = P_ORGANIZATION_ID
        AND TRUNC(RG23.CREATION_DATE) >= P_START_DATE
        AND TRUNC(RG23.CREATION_DATE) <= TRUNC(NVL(P_END_DATE
               ,SYSDATE))
        AND RG23.REGISTER_TYPE = 'A'
        AND JRO.SOURCE_REGISTER = 'RG23A_P2'
        AND JRO.TAX_TYPE IN ( TAX_TYPE_CVD_EDU_CESS , TAX_TYPE_EXC_EDU_CESS );
    LN_EDU_CESS_EXCISE_STG NUMBER;
    LN_EDU_CESS_EXCISE_STG_ISO NUMBER;
  BEGIN
    OPEN CUR_CESS_EXCISE_INPUT_STG;
    FETCH CUR_CESS_EXCISE_INPUT_STG
     INTO LN_EDU_CESS_EXCISE_STG;
    CLOSE CUR_CESS_EXCISE_INPUT_STG;
    OPEN CUR_CESS_EXCISE_INPUT_STG_ISO;
    FETCH CUR_CESS_EXCISE_INPUT_STG_ISO
     INTO LN_EDU_CESS_EXCISE_STG_ISO;
    CLOSE CUR_CESS_EXCISE_INPUT_STG_ISO;
    RETURN ROUND(NVL(LN_EDU_CESS_EXCISE_STG
                    ,0) + NVL(LN_EDU_CESS_EXCISE_STG_ISO
                    ,0)
                ,0);
  EXCEPTION
    WHEN OTHERS THEN
      IF CUR_CESS_EXCISE_INPUT_STG%ISOPEN THEN
        CLOSE CUR_CESS_EXCISE_INPUT_STG;
      END IF;
      IF CUR_CESS_EXCISE_INPUT_STG_ISO%ISOPEN THEN
        CLOSE CUR_CESS_EXCISE_INPUT_STG_ISO;
      END IF;
      RETURN NULL;
  END CF_CESS_EXCISE_INPUT_STG;

  FUNCTION CF_GET_CETSH(INVENTORY_ITEM_ID IN NUMBER
                       ,CETSH_SUB IN VARCHAR2) RETURN CHAR IS
    LV_CETSH JAI_INV_ITM_SETUPS.ITEM_TARIFF%TYPE;
    CURSOR CUR_GET_CETSH IS
      SELECT
        SUBSTR(JIMSI.ITEM_TARIFF
              ,1
              ,15)
      FROM
        JAI_INV_ITM_SETUPS JIMSI
      WHERE JIMSI.INVENTORY_ITEM_ID = cf_get_cetsh.INVENTORY_ITEM_ID
        AND JIMSI.ORGANIZATION_ID = P_ORGANIZATION_ID;
  BEGIN
    IF (P_GROUP_BY = 'I') THEN
      OPEN CUR_GET_CETSH;
      FETCH CUR_GET_CETSH
       INTO LV_CETSH;
      CLOSE CUR_GET_CETSH;
      RETURN LV_CETSH;
    ELSE
      RETURN CETSH_SUB;
    END IF;
  EXCEPTION
    WHEN OTHERS THEN
      CLOSE CUR_GET_CETSH;
      RETURN NULL;
  END CF_GET_CETSH;

  FUNCTION CF_CENVAT_TOTAL1(CF_CENVAT_ACC_CURRENT IN NUMBER
                           ,CF_CENVAT_CREDIT_UTILIZED IN NUMBER) RETURN NUMBER IS
  BEGIN
    RETURN ROUND((NVL(CF_CENVAT_ACC_CURRENT
                    ,0) + NVL(CF_CENVAT_CREDIT_UTILIZED
                    ,0)));
  END CF_CENVAT_TOTAL1;

  FUNCTION AFTERREPORT RETURN BOOLEAN IS
    CURSOR CUR_SETUP_MISS_VENDORS IS
      SELECT
        PVS.VENDOR_SITE_CODE,
        PVS.VENDOR_ID,
        PVS.ADDRESS_LINE1,
        PVS.ADDRESS_LINE2,
        PVS.ADDRESS_LINE3,
        PVS.VENDOR_SITE_ID
      FROM
        PO_VENDOR_SITES_ALL PVS,
        JAI_CMN_RG_23AC_II_TRXS JIRP
      WHERE JIRP.VENDOR_ID = PVS.VENDOR_ID
        AND JIRP.VENDOR_SITE_ID = PVS.VENDOR_SITE_ID
        AND JIRP.VENDOR_ID || JIRP.VENDOR_SITE_ID NOT IN (
        SELECT
          JIPV.VENDOR_ID || JIPV.VENDOR_SITE_ID
        FROM
          JAI_CMN_VENDOR_SITES JIPV )
        AND JIRP.LOCATION_ID = P_LOCATION_ID
        AND JIRP.ORGANIZATION_ID = P_ORGANIZATION_ID
        AND TRUNC(JIRP.CREATION_DATE) >= P_START_DATE
        AND TRUNC(JIRP.CREATION_DATE) <= TRUNC(NVL(P_END_DATE
               ,SYSDATE));
    LN_DATA_EXIST VARCHAR2(1) := 'Y';
  BEGIN
    FOR i IN CUR_SETUP_MISS_VENDORS LOOP
      IF LN_DATA_EXIST = 'Y' THEN
        /*SRW.MESSAGE(1275
                   ,'|------------------------------------------------------------------------------------------------------------------------|')*/NULL;
        /*SRW.MESSAGE(1275
                   ,'|List of Vendors for whom Additional Supplier Info setup is not done                                                     |')*/NULL;
        /*SRW.MESSAGE(1275
                   ,'|------------------------------------------------------------------------------------------------------------------------|')*/NULL;
        /*SRW.MESSAGE(1275
                   ,RPAD('|Party Name'
                       ,30
                       ,' ') || RPAD('Party Id'
                       ,30
                       ,' ') || RPAD('Party Site/Address'
                       ,30
                       ,' ') || RPAD('Party Site Id'
                       ,31
                       ,' ') || '|')*/NULL;
        /*SRW.MESSAGE(1275
                   ,'|------------------------------------------------------------------------------------------------------------------------|')*/NULL;
        LN_DATA_EXIST := 'N';
      END IF;
      /*SRW.MESSAGE(1275
                 ,'|' || RPAD(I.VENDOR_SITE_CODE
                     ,30
                     ,' ') || RPAD(I.VENDOR_ID
                     ,30
                     ,' ') || RPAD(SUBSTR(I.ADDRESS_LINE1 || I.ADDRESS_LINE2 || I.ADDRESS_LINE3
                            ,1
                            ,30)
                     ,30
                     ,' ') || RPAD(I.VENDOR_SITE_ID
                     ,31
                     ,' ') || '|')*/NULL;
    END LOOP;
    /*SRW.USER_EXIT('FND SRWEXIT')*/NULL;
    RETURN (TRUE);
  END AFTERREPORT;

  FUNCTION CF_RTV_AMOUNTFORMULA RETURN NUMBER IS
    CURSOR GET_RTV_AMOUNT IS
      SELECT
        SUM(NVL(JRG23_II.DR_BASIC_ED
               ,0) + NVL(JRG23_II.DR_ADDITIONAL_ED
               ,0) + NVL(JRG23_II.DR_OTHER_ED
               ,0))
      FROM
        JAI_CMN_RG_23AC_II_TRXS JRG23_II,
        JAI_CMN_RG_23AC_I_TRXS JRG23_I
      WHERE JRG23_II.ORGANIZATION_ID = P_ORGANIZATION_ID
        AND JRG23_II.LOCATION_ID = P_LOCATION_ID
        AND TRUNC(JRG23_II.CREATION_DATE) >= P_START_DATE
        AND TRUNC(JRG23_II.CREATION_DATE) <= TRUNC(NVL(P_END_DATE
               ,SYSDATE))
        AND JRG23_I.TRANSACTION_TYPE = 'RTV'
        AND JRG23_II.ORGANIZATION_ID = JRG23_I.ORGANIZATION_ID
        AND JRG23_II.LOCATION_ID = JRG23_I.LOCATION_ID
        AND JRG23_II.REGISTER_ID_PART_I = JRG23_I.REGISTER_ID;
    CURSOR GET_CGIN_SALES IS
      SELECT
        SUM(NVL(JRG23_II.DR_BASIC_ED
               ,0) + NVL(JRG23_II.DR_ADDITIONAL_ED
               ,0) + NVL(JRG23_II.DR_OTHER_ED
               ,0))
      FROM
        JAI_CMN_RG_23AC_II_TRXS JRG23_II,
        JAI_CMN_RG_23AC_I_TRXS JRG23_I,
        JAI_INV_ITM_SETUPS JMSI
      WHERE JRG23_II.ORGANIZATION_ID = JRG23_I.ORGANIZATION_ID
        AND JRG23_II.LOCATION_ID = JRG23_I.LOCATION_ID
        AND JRG23_II.REGISTER_ID_PART_I = JRG23_I.REGISTER_ID
        AND JMSI.ORGANIZATION_ID = JRG23_II.ORGANIZATION_ID
        AND JMSI.ITEM_CLASS like 'CG%'
        AND JMSI.INVENTORY_ITEM_ID = JRG23_II.INVENTORY_ITEM_ID
        AND JMSI.ORGANIZATION_ID = P_ORGANIZATION_ID
        AND JRG23_II.ORGANIZATION_ID = P_ORGANIZATION_ID
        AND JRG23_II.LOCATION_ID = P_LOCATION_ID
        AND TRUNC(JRG23_II.CREATION_DATE) >= P_START_DATE
        AND TRUNC(JRG23_II.CREATION_DATE) <= TRUNC(NVL(P_END_DATE
               ,SYSDATE))
        AND JRG23_I.TRANSACTION_TYPE <> 'RTV';
    LN_RTV_AMOUNT NUMBER;
    LN_CGIN_SALE_AMT NUMBER;
    LN_AMT_INPUTS_RM NUMBER;
  BEGIN
    OPEN GET_RTV_AMOUNT;
    FETCH GET_RTV_AMOUNT
     INTO LN_RTV_AMOUNT;
    CLOSE GET_RTV_AMOUNT;
    OPEN GET_CGIN_SALES;
    FETCH GET_CGIN_SALES
     INTO LN_CGIN_SALE_AMT;
    CLOSE GET_CGIN_SALES;
    RETURN ROUND(NVL(LN_RTV_AMOUNT
                    ,0) + NVL(LN_CGIN_SALE_AMT
                    ,0));
  EXCEPTION
    WHEN OTHERS THEN
      /*SRW.MESSAGE(1275
                 ,'CF_rtv_amountFormula:' || SQLERRM)*/NULL;
      RETURN NULL;
  END CF_RTV_AMOUNTFORMULA;

  FUNCTION CF_CR_UTILIZEDFORMULA(CREDIT_UTILIZED IN NUMBER
                                ,CF_RTV_AMOUNT IN NUMBER) RETURN NUMBER IS
  BEGIN
    RETURN (ROUND(NVL(CREDIT_UTILIZED
                    ,0) - NVL(CF_RTV_AMOUNT
                    ,0)));
  END CF_CR_UTILIZEDFORMULA;

  FUNCTION CF_CR_UTIL_INP_RM_CESSFORMULA RETURN NUMBER IS
    CURSOR GET_RTV_CESS IS
      SELECT
        SUM(NVL(DEBIT
               ,0))
      FROM
        JAI_CMN_RG_OTHERS
      WHERE SOURCE_TYPE = 1
        AND TAX_TYPE in ( TAX_TYPE_CVD_EDU_CESS , TAX_TYPE_EXC_EDU_CESS )
        AND SOURCE_REGISTER_ID in (
        SELECT
          JRG23_II.REGISTER_ID
        FROM
          JAI_CMN_RG_23AC_II_TRXS JRG23_II,
          JAI_CMN_RG_23AC_I_TRXS JRG23_I
        WHERE JRG23_II.ORGANIZATION_ID = P_ORGANIZATION_ID
          AND JRG23_II.LOCATION_ID = P_LOCATION_ID
          AND TRUNC(JRG23_II.CREATION_DATE) >= P_START_DATE
          AND TRUNC(JRG23_II.CREATION_DATE) <= TRUNC(NVL(P_END_DATE
                 ,SYSDATE))
          AND JRG23_I.TRANSACTION_TYPE = 'RTV'
          AND JRG23_II.ORGANIZATION_ID = JRG23_I.ORGANIZATION_ID
          AND JRG23_II.LOCATION_ID = JRG23_I.LOCATION_ID
          AND JRG23_II.REGISTER_ID_PART_I = JRG23_I.REGISTER_ID );
    CURSOR GET_CGIN_SALES_CESS IS
      SELECT
        SUM(NVL(DEBIT
               ,0))
      FROM
        JAI_CMN_RG_OTHERS
      WHERE SOURCE_TYPE = 1
        AND TAX_TYPE in ( TAX_TYPE_CVD_EDU_CESS , TAX_TYPE_EXC_EDU_CESS )
        AND SOURCE_REGISTER_ID in (
        SELECT
          JRG23_II.REGISTER_ID
        FROM
          JAI_CMN_RG_23AC_II_TRXS JRG23_II,
          JAI_CMN_RG_23AC_I_TRXS JRG23_I,
          JAI_INV_ITM_SETUPS JMSI
        WHERE JRG23_II.ORGANIZATION_ID = JRG23_I.ORGANIZATION_ID
          AND JRG23_II.LOCATION_ID = JRG23_I.LOCATION_ID
          AND JRG23_II.REGISTER_ID_PART_I = JRG23_I.REGISTER_ID
          AND JMSI.ORGANIZATION_ID = JRG23_II.ORGANIZATION_ID
          AND JMSI.ITEM_CLASS like 'CG%'
          AND JMSI.INVENTORY_ITEM_ID = JRG23_II.INVENTORY_ITEM_ID
          AND JMSI.ORGANIZATION_ID = P_ORGANIZATION_ID
          AND JRG23_II.ORGANIZATION_ID = P_ORGANIZATION_ID
          AND JRG23_II.LOCATION_ID = P_LOCATION_ID
          AND TRUNC(JRG23_II.CREATION_DATE) >= P_START_DATE
          AND TRUNC(JRG23_II.CREATION_DATE) <= TRUNC(NVL(P_END_DATE
                 ,SYSDATE))
          AND JRG23_I.TRANSACTION_TYPE <> 'RTV' );
    LN_RTV_CESS NUMBER;
    LN_CGIN_SALES_CESS NUMBER;
    LN_CR_UTIL_INP_RM_CESS NUMBER;
  BEGIN
    OPEN GET_RTV_CESS;
    FETCH GET_RTV_CESS
     INTO LN_RTV_CESS;
    CLOSE GET_RTV_CESS;
    OPEN GET_CGIN_SALES_CESS;
    FETCH GET_CGIN_SALES_CESS
     INTO LN_CGIN_SALES_CESS;
    CLOSE GET_CGIN_SALES_CESS;
    RETURN ROUND(NVL(LN_RTV_CESS
                    ,0) + NVL(LN_CGIN_SALES_CESS
                    ,0));
  EXCEPTION
    WHEN OTHERS THEN
      /*SRW.MESSAGE(1275
                 ,'CF_cr_util_inp_rm_cessFormula:' || SQLERRM)*/NULL;
      RETURN NULL;
  END CF_CR_UTIL_INP_RM_CESSFORMULA;

  FUNCTION CF_LTUFORMULA RETURN CHAR IS
  BEGIN
    RETURN 'Large Taxpayer Unit opted for (name of the city)* .-' || P_CITY;
  END CF_LTUFORMULA;

  FUNCTION CF_CRDT_AVALIED_CAP_GOODSFORMU(CREDIT_AVAILED_ON_CAP_GOODS IN NUMBER) RETURN NUMBER IS
    CURSOR C_CREDIT_CAP_GOODS IS
      SELECT
        ROUND(SUM(DECODE(REGISTER_TYPE
                        ,'C'
                        ,NVL(CR_BASIC_ED
                           ,0) + NVL(CR_ADDITIONAL_ED
                           ,0) + NVL(CR_OTHER_ED
                           ,0)
                        ,0))
             ,0) CREDIT_AVAILED_ON_CAP_GOODS
      FROM
        JAI_CMN_RG_23AC_II_TRXS JIRP,
        JAI_INV_ITM_SETUPS JMSI
      WHERE JIRP.LOCATION_ID = P_LOCATION_ID
        AND JIRP.ORGANIZATION_ID = P_ORGANIZATION_ID
        AND JIRP.ORGANIZATION_ID = JMSI.ORGANIZATION_ID
        AND JIRP.INVENTORY_ITEM_ID = JMSI.INVENTORY_ITEM_ID
        AND TRUNC(JIRP.CREATION_DATE) >= P_START_DATE
        AND TRUNC(JIRP.CREATION_DATE) <= TRUNC(NVL(P_END_DATE
               ,SYSDATE))
        AND ( JMSI.ITEM_CLASS = 'CGEX'
      OR ( JMSI.ITEM_CLASS = 'CGIN'
        AND exists (
        SELECT
          1
        FROM
          JAI_RCV_LINES JTL,
          JAI_RCV_LINE_TAXES JRTL
        WHERE JTL.TRANSACTION_ID = JIRP.RECEIPT_REF
          AND JTL.SHIPMENT_LINE_ID = JRTL.SHIPMENT_LINE_ID
          AND JRTL.TAX_TYPE IN ( 'ADDITIONAL_CVD' , 'CVD' ) ) ) );
  BEGIN
    OPEN C_CREDIT_CAP_GOODS;
    FETCH C_CREDIT_CAP_GOODS
     INTO CP_CRDT_IMPORT_CAP_GOODS;
    CLOSE C_CREDIT_CAP_GOODS;
    RETURN NVL(CREDIT_AVAILED_ON_CAP_GOODS
              ,0) - NVL(CP_CRDT_IMPORT_CAP_GOODS
              ,0);
  END CF_CRDT_AVALIED_CAP_GOODSFORMU;

  FUNCTION CF_PLA_OPENING_BALANCEFORMULA RETURN NUMBER IS
    LN_OPENING_BALANCE JAI_CMN_RG_PLA_TRXS.OPENING_BALANCE%TYPE;
  BEGIN
    SELECT
      SUM(NVL(CR_BASIC_ED
             ,0) + NVL(CR_ADDITIONAL_ED
             ,0) + NVL(CR_OTHER_ED
             ,0) - NVL(DR_BASIC_ED
             ,0) - NVL(DR_ADDITIONAL_ED
             ,0) - NVL(DR_OTHER_ED
             ,0))
    INTO LN_OPENING_BALANCE
    FROM
      JAI_CMN_RG_PLA_TRXS
    WHERE LOCATION_ID = P_LOCATION_ID
      AND ORGANIZATION_ID = P_ORGANIZATION_ID
      AND CREATION_DATE < P_START_DATE;
    RETURN ROUND(NVL(LN_OPENING_BALANCE
                    ,0)
                ,0);
  EXCEPTION
    WHEN OTHERS THEN
      /*SRW.MESSAGE(1275
                 ,'CF_pla_opening_balance:' || SQLERRM)*/NULL;
      RETURN NULL;
  END CF_PLA_OPENING_BALANCEFORMULA;

  FUNCTION CF_PLA_TR6_CHALLAN_AMTFORMULA RETURN NUMBER IS
    LN_PLA_AMOUNT NUMBER;
  BEGIN
    SELECT
      NVL(SUM(PLA_AMOUNT)
         ,0)
    INTO LN_PLA_AMOUNT
    FROM
      JAI_CMN_RG_PLA_HDRS A
    WHERE A.ORGANIZATION_ID = P_ORGANIZATION_ID
      AND A.LOCATION_ID = P_LOCATION_ID
      AND TRUNC(A.TR6_DATE) >= P_START_DATE
      AND TRUNC(A.TR6_DATE) <= P_END_DATE
      AND A.ACK_RECVD_FLAG = 'Y';
    RETURN LN_PLA_AMOUNT;
  EXCEPTION
    WHEN OTHERS THEN
      /*SRW.MESSAGE(1275
                 ,'CF_pla_TR6_Challan_Amt:' || SQLERRM)*/NULL;
      RETURN NULL;
  END CF_PLA_TR6_CHALLAN_AMTFORMULA;

  FUNCTION CF_PLA_TOTALFORMULA(CF_PLA_OPENING_BALANCE IN NUMBER
                              ,CF_PLA_TR6_CHALLAN_AMT IN NUMBER) RETURN NUMBER IS
    LN_PLA_TOTAL_AMT NUMBER;
  BEGIN
    LN_PLA_TOTAL_AMT := CF_PLA_OPENING_BALANCE + CF_PLA_TR6_CHALLAN_AMT;
    RETURN NVL(LN_PLA_TOTAL_AMT
              ,0);
  END CF_PLA_TOTALFORMULA;

  FUNCTION CF_PLA_CLOSING_BALANCEFORMULA(CF_PLA_TOTAL IN NUMBER
                                        ,CF_CENVAT_ACC_CURRENT IN NUMBER) RETURN NUMBER IS
  BEGIN
    RETURN ROUND((NVL(CF_PLA_TOTAL
                    ,0) - NVL(CF_CENVAT_ACC_CURRENT
                    ,0))
                ,0);
  END CF_PLA_CLOSING_BALANCEFORMULA;

  FUNCTION CF_AED_ACC_CREDITFORMULA RETURN NUMBER IS
    CURSOR C_AED_ACC_CREDIT IS
      SELECT
        ROUND(SUM(NVL(DR_ADDITIONAL_ED
                     ,0))
             ,0) AED_CREDIT_UTILIZED
      FROM
        JAI_CMN_RG_23AC_II_TRXS
      WHERE LOCATION_ID = P_LOCATION_ID
        AND ORGANIZATION_ID = P_ORGANIZATION_ID
        AND TRUNC(CREATION_DATE) >= P_START_DATE
        AND TRUNC(CREATION_DATE) <= TRUNC(NVL(P_END_DATE
               ,SYSDATE));
    LN_AED_ACC_CREDIT NUMBER;
    CURSOR C_AED_ACC_CURRENT IS
      SELECT
        ROUND(SUM(NVL(CR_ADDITIONAL_ED
                     ,0))
             ,0)
      FROM
        JAI_CMN_RG_PLA_TRXS
      WHERE ORGANIZATION_ID = P_ORGANIZATION_ID
        AND LOCATION_ID = P_LOCATION_ID
        AND CREATION_DATE >= P_START_DATE
        AND CREATION_DATE <= TRUNC(NVL(P_END_DATE
               ,SYSDATE))
        AND TRANSACTION_SOURCE_NUM = 91;
  BEGIN
    OPEN C_AED_ACC_CURRENT;
    FETCH C_AED_ACC_CURRENT
     INTO CP_AED_ACC_CURRENT;
    CLOSE C_AED_ACC_CURRENT;
    OPEN C_AED_ACC_CREDIT;
    FETCH C_AED_ACC_CREDIT
     INTO LN_AED_ACC_CREDIT;
    CLOSE C_AED_ACC_CREDIT;
    RETURN NVL(LN_AED_ACC_CREDIT
              ,0);
  END CF_AED_ACC_CREDITFORMULA;

  FUNCTION CF_AED_TOTALFORMULA(CF_AED_ACC_CREDIT IN NUMBER) RETURN NUMBER IS
  BEGIN
    RETURN ROUND((NVL(CF_AED_ACC_CREDIT
                    ,0) + NVL(CP_AED_ACC_CURRENT
                    ,0))
                ,0);
  END CF_AED_TOTALFORMULA;

  FUNCTION CF_CENVAT_CREDIT_UTILIZEDFORMU(CREDIT_UTILIZED IN NUMBER
                                         ,CF_AED_ACC_CREDIT IN NUMBER) RETURN NUMBER IS
  BEGIN
    RETURN NVL(CREDIT_UTILIZED
              ,0) - NVL(CF_AED_ACC_CREDIT
              ,0);
  END CF_CENVAT_CREDIT_UTILIZEDFORMU;

  FUNCTION CF_EXCISE_UOMFORMULA(ORGANIZATION_ID IN NUMBER
                               ,UNITS IN VARCHAR2) RETURN CHAR IS
    CURSOR C_EXCISE_UOM_CODE(CP_ORGANIZATION_ID IN NUMBER,CP_PRIMARY_UOM_CODE IN VARCHAR2) IS
      SELECT
        EXCISE_UOM_CODE
      FROM
        JAI_AR_EXCISE_UOM
      WHERE ORGANIZATION_ID = CP_ORGANIZATION_ID
        AND PRIMARY_UOM_CODE = CP_PRIMARY_UOM_CODE;
    LV_UQC VARCHAR2(8);
  BEGIN
    OPEN C_EXCISE_UOM_CODE(ORGANIZATION_ID,UNITS);
    FETCH C_EXCISE_UOM_CODE
     INTO LV_UQC;
    CLOSE C_EXCISE_UOM_CODE;
    RETURN LV_UQC;
  END CF_EXCISE_UOMFORMULA;

  FUNCTION CF_SH_CESS_OPENING_BLNCFORMULA RETURN NUMBER IS
    LV_REGISTER_ID JAI_CMN_RG_23AC_II_TRXS.REGISTER_ID%TYPE;
    CURSOR CUR_OPENING_BAL IS
      SELECT
        SUM(NVL(CREDIT
               ,0) - NVL(DEBIT
               ,0))
      FROM
        JAI_CMN_RG_OTHERS
      WHERE SOURCE_TYPE = 1
        AND SOURCE_REGISTER_ID in (
        SELECT
          REGISTER_ID
        FROM
          JAI_CMN_RG_23AC_II_TRXS
        WHERE LOCATION_ID = P_LOCATION_ID
          AND ORGANIZATION_ID = P_ORGANIZATION_ID
          AND TRUNC(CREATION_DATE) < P_START_DATE )
        AND TAX_TYPE in ( TAX_TYPE_SH_CVD_EDU_CESS , TAX_TYPE_SH_EXC_EDU_CESS );
    LN_OPENING_BALANCE NUMBER;
  BEGIN
    OPEN CUR_OPENING_BAL;
    FETCH CUR_OPENING_BAL
     INTO LN_OPENING_BALANCE;
    CLOSE CUR_OPENING_BAL;
    RETURN ROUND(LN_OPENING_BALANCE
                ,0);
  END CF_SH_CESS_OPENING_BLNCFORMULA;

  FUNCTION CF_SH_CESS_EXCISE_INPUT_MANFFO RETURN NUMBER IS
    CURSOR CUR_CESS_EXCISE_INPUT_MANF IS
      SELECT
        NVL(SUM(CREDIT)
           ,0)
      FROM
        JAI_CMN_RG_OTHERS JRO,
        JAI_CMN_RG_23AC_II_TRXS RG23,
        JAI_CMN_VENDOR_SITES JIPV
      WHERE JRO.SOURCE_REGISTER_ID = RG23.REGISTER_ID
        AND RG23.VENDOR_ID = JIPV.VENDOR_ID
        AND RG23.VENDOR_SITE_ID = JIPV.VENDOR_SITE_ID
        AND ( JIPV.VENDOR_TYPE IN ( 'Manufacturer' , 'Importer' )
      OR JIPV.VENDOR_TYPE IS NULL )
        AND RG23.LOCATION_ID = P_LOCATION_ID
        AND RG23.ORGANIZATION_ID = P_ORGANIZATION_ID
        AND TRUNC(RG23.CREATION_DATE) >= P_START_DATE
        AND TRUNC(RG23.CREATION_DATE) <= TRUNC(NVL(P_END_DATE
               ,SYSDATE))
        AND RG23.REGISTER_TYPE = 'A'
        AND JRO.SOURCE_REGISTER = 'RG23A_P2'
        AND JRO.TAX_TYPE IN ( TAX_TYPE_SH_CVD_EDU_CESS , TAX_TYPE_SH_EXC_EDU_CESS );
    CURSOR CUR_CESS_EXCISE_INPUT_CUST IS
      SELECT
        NVL(SUM(CREDIT)
           ,0)
      FROM
        JAI_CMN_RG_OTHERS JRO,
        JAI_CMN_RG_23AC_II_TRXS RG23,
        JAI_CMN_CUS_ADDRESSES JICA,
        HZ_CUST_ACCT_SITES_ALL HZCAS,
        HZ_CUST_SITE_USES_ALL HZCSU
      WHERE HZCAS.CUST_ACCT_SITE_ID = HZCSU.CUST_ACCT_SITE_ID
        AND JICA.ADDRESS_ID = HZCSU.CUST_ACCT_SITE_ID
        AND HZCSU.SITE_USE_ID = RG23.CUSTOMER_SITE_ID
        AND RG23.CUSTOMER_ID = JICA.CUSTOMER_ID
        AND JRO.SOURCE_REGISTER_ID = RG23.REGISTER_ID
        AND RG23.LOCATION_ID = P_LOCATION_ID
        AND RG23.ORGANIZATION_ID = P_ORGANIZATION_ID
        AND TRUNC(RG23.CREATION_DATE) >= P_START_DATE
        AND TRUNC(RG23.CREATION_DATE) <= TRUNC(NVL(P_END_DATE
               ,SYSDATE))
        AND RG23.REGISTER_TYPE = 'A'
        AND JRO.SOURCE_REGISTER = 'RG23A_P2'
        AND JRO.TAX_TYPE IN ( TAX_TYPE_SH_CVD_EDU_CESS , TAX_TYPE_SH_EXC_EDU_CESS );
    CURSOR CUR_CESS_EXCISE_INPUT_MANF_ISO IS
      SELECT
        NVL(SUM(CREDIT)
           ,0)
      FROM
        JAI_CMN_RG_OTHERS JRO,
        JAI_CMN_RG_23AC_II_TRXS RG23,
        JAI_CMN_INVENTORY_ORGS JIHO
      WHERE JRO.SOURCE_REGISTER_ID = RG23.REGISTER_ID
        AND ABS(RG23.VENDOR_ID) = JIHO.ORGANIZATION_ID
        AND ABS(RG23.VENDOR_SITE_ID) = JIHO.LOCATION_ID
        AND JIHO.MANUFACTURING = 'Y'
        AND RG23.LOCATION_ID = P_LOCATION_ID
        AND RG23.ORGANIZATION_ID = P_ORGANIZATION_ID
        AND TRUNC(RG23.CREATION_DATE) >= P_START_DATE
        AND TRUNC(RG23.CREATION_DATE) <= TRUNC(NVL(P_END_DATE
               ,SYSDATE))
        AND RG23.REGISTER_TYPE = 'A'
        AND JRO.SOURCE_REGISTER = 'RG23A_P2'
        AND JRO.TAX_TYPE IN ( TAX_TYPE_SH_CVD_EDU_CESS , TAX_TYPE_SH_EXC_EDU_CESS );
    LN_EDU_CESS_EXCISE_MANF NUMBER;
    LN_EDU_CESS_EXCISE_MANF_ISO NUMBER;
    LN_EDU_CESS_EXCISE_CUST NUMBER;
  BEGIN
    OPEN CUR_CESS_EXCISE_INPUT_MANF;
    FETCH CUR_CESS_EXCISE_INPUT_MANF
     INTO LN_EDU_CESS_EXCISE_MANF;
    CLOSE CUR_CESS_EXCISE_INPUT_MANF;
    OPEN CUR_CESS_EXCISE_INPUT_MANF_ISO;
    FETCH CUR_CESS_EXCISE_INPUT_MANF_ISO
     INTO LN_EDU_CESS_EXCISE_MANF_ISO;
    CLOSE CUR_CESS_EXCISE_INPUT_MANF_ISO;
    OPEN CUR_CESS_EXCISE_INPUT_CUST;
    FETCH CUR_CESS_EXCISE_INPUT_CUST
     INTO LN_EDU_CESS_EXCISE_CUST;
    CLOSE CUR_CESS_EXCISE_INPUT_CUST;
    RETURN ROUND(NVL(LN_EDU_CESS_EXCISE_MANF
                    ,0) + NVL(LN_EDU_CESS_EXCISE_MANF_ISO
                    ,0) + NVL(LN_EDU_CESS_EXCISE_CUST
                    ,0)
                ,0);
  EXCEPTION
    WHEN OTHERS THEN
      IF CUR_CESS_EXCISE_INPUT_MANF%ISOPEN THEN
        CLOSE CUR_CESS_EXCISE_INPUT_MANF;
      END IF;
      IF CUR_CESS_EXCISE_INPUT_MANF_ISO%ISOPEN THEN
        CLOSE CUR_CESS_EXCISE_INPUT_MANF_ISO;
      END IF;
      RETURN NULL;
  END CF_SH_CESS_EXCISE_INPUT_MANFFO;

  FUNCTION CF_SH_CESS_EXCISE_INPUT_STGFOR RETURN NUMBER IS
    CURSOR CUR_CESS_EXCISE_INPUT_STG IS
      SELECT
        NVL(SUM(CREDIT)
           ,0)
      FROM
        JAI_CMN_RG_OTHERS JRO,
        JAI_CMN_RG_23AC_II_TRXS RG23,
        JAI_CMN_VENDOR_SITES JIPV
      WHERE JRO.SOURCE_REGISTER_ID = RG23.REGISTER_ID
        AND RG23.VENDOR_ID = JIPV.vendor_id (+)
        AND RG23.VENDOR_SITE_ID = JIPV.vendor_site_id (+)
        AND JIPV.VENDOR_TYPE IN ( 'First Stage Dealer' , 'Second Stage Dealer' )
        AND RG23.LOCATION_ID = P_LOCATION_ID
        AND RG23.ORGANIZATION_ID = P_ORGANIZATION_ID
        AND TRUNC(RG23.CREATION_DATE) >= P_START_DATE
        AND TRUNC(RG23.CREATION_DATE) <= TRUNC(NVL(P_END_DATE
               ,SYSDATE))
        AND RG23.REGISTER_TYPE = 'A'
        AND JRO.SOURCE_REGISTER = 'RG23A_P2'
        AND JRO.TAX_TYPE IN ( TAX_TYPE_SH_CVD_EDU_CESS , TAX_TYPE_SH_EXC_EDU_CESS );
    CURSOR CUR_CESS_EXCISE_INPUT_STG_ISO IS
      SELECT
        NVL(SUM(CREDIT)
           ,0)
      FROM
        JAI_CMN_RG_OTHERS JRO,
        JAI_CMN_RG_23AC_II_TRXS RG23,
        JAI_CMN_INVENTORY_ORGS JIHO
      WHERE JRO.SOURCE_REGISTER_ID = RG23.REGISTER_ID
        AND ABS(RG23.VENDOR_ID) = JIHO.ORGANIZATION_ID
        AND ABS(RG23.VENDOR_SITE_ID) = JIHO.LOCATION_ID
        AND JIHO.TRADING = 'Y'
        AND RG23.LOCATION_ID = P_LOCATION_ID
        AND RG23.ORGANIZATION_ID = P_ORGANIZATION_ID
        AND TRUNC(RG23.CREATION_DATE) >= P_START_DATE
        AND TRUNC(RG23.CREATION_DATE) <= TRUNC(NVL(P_END_DATE
               ,SYSDATE))
        AND RG23.REGISTER_TYPE = 'A'
        AND JRO.SOURCE_REGISTER = 'RG23A_P2'
        AND JRO.TAX_TYPE IN ( TAX_TYPE_SH_CVD_EDU_CESS , TAX_TYPE_SH_EXC_EDU_CESS );
    LN_EDU_CESS_EXCISE_STG NUMBER;
    LN_EDU_CESS_EXCISE_STG_ISO NUMBER;
  BEGIN
    OPEN CUR_CESS_EXCISE_INPUT_STG;
    FETCH CUR_CESS_EXCISE_INPUT_STG
     INTO LN_EDU_CESS_EXCISE_STG;
    CLOSE CUR_CESS_EXCISE_INPUT_STG;
    OPEN CUR_CESS_EXCISE_INPUT_STG_ISO;
    FETCH CUR_CESS_EXCISE_INPUT_STG_ISO
     INTO LN_EDU_CESS_EXCISE_STG_ISO;
    CLOSE CUR_CESS_EXCISE_INPUT_STG_ISO;
    RETURN ROUND(NVL(LN_EDU_CESS_EXCISE_STG
                    ,0) + NVL(LN_EDU_CESS_EXCISE_STG_ISO
                    ,0)
                ,0);
  EXCEPTION
    WHEN OTHERS THEN
      IF CUR_CESS_EXCISE_INPUT_STG%ISOPEN THEN
        CLOSE CUR_CESS_EXCISE_INPUT_STG;
      END IF;
      IF CUR_CESS_EXCISE_INPUT_STG_ISO%ISOPEN THEN
        CLOSE CUR_CESS_EXCISE_INPUT_STG_ISO;
      END IF;
      RETURN NULL;
  END CF_SH_CESS_EXCISE_INPUT_STGFOR;

  FUNCTION CF_SH_CESS_EXCISE_CAPFORMULA RETURN NUMBER IS
    LN_EDU_CESS_CAP NUMBER;
    CURSOR CUR_GET_EDU_CESS_CAP IS
      SELECT
        NVL(SUM(CREDIT)
           ,0)
      FROM
        JAI_CMN_RG_OTHERS JRO,
        JAI_CMN_RG_23AC_II_TRXS RG23
      WHERE JRO.SOURCE_REGISTER_ID = RG23.REGISTER_ID
        AND RG23.LOCATION_ID = P_LOCATION_ID
        AND RG23.ORGANIZATION_ID = P_ORGANIZATION_ID
        AND TRUNC(RG23.CREATION_DATE) >= P_START_DATE
        AND TRUNC(RG23.CREATION_DATE) <= TRUNC(NVL(P_END_DATE
               ,SYSDATE))
        AND RG23.REGISTER_TYPE = 'C'
        AND JRO.SOURCE_REGISTER = 'RG23C_P2'
        AND JRO.TAX_TYPE in ( TAX_TYPE_SH_CVD_EDU_CESS , TAX_TYPE_SH_EXC_EDU_CESS );
  BEGIN
    OPEN CUR_GET_EDU_CESS_CAP;
    FETCH CUR_GET_EDU_CESS_CAP
     INTO LN_EDU_CESS_CAP;
    CLOSE CUR_GET_EDU_CESS_CAP;
    RETURN (ROUND(LN_EDU_CESS_CAP
                ,0));
  EXCEPTION
    WHEN OTHERS THEN
      /*SRW.MESSAGE(1275
                 ,'CF_cess_excise_cap:' || SQLERRM)*/NULL;
      RETURN NULL;
  END CF_SH_CESS_EXCISE_CAPFORMULA;

  FUNCTION CF_TOT_CR_AVAILED_SH_ECFORMULA(CF_SH_CESS_EXCISE_INPUT IN NUMBER
                                         ,CF_SH_CESS_EXCISE_CAP IN NUMBER) RETURN NUMBER IS
  BEGIN
    RETURN ROUND((NVL(CF_SH_CESS_EXCISE_INPUT
                    ,0) + NVL(CF_SH_CESS_EXCISE_CAP
                    ,0))
                ,0);
  END CF_TOT_CR_AVAILED_SH_ECFORMULA;

  FUNCTION CF_SH_CESS_EXCISE_INPUTFORMULA RETURN NUMBER IS
    LN_EDU_CESS_EXCISE NUMBER;
    CURSOR CUR_GET_EDU_CESS_EXCISE IS
      SELECT
        NVL(SUM(CREDIT)
           ,0)
      FROM
        JAI_CMN_RG_OTHERS JRO,
        JAI_CMN_RG_23AC_II_TRXS RG23
      WHERE JRO.SOURCE_REGISTER_ID = RG23.REGISTER_ID
        AND RG23.LOCATION_ID = P_LOCATION_ID
        AND RG23.ORGANIZATION_ID = P_ORGANIZATION_ID
        AND TRUNC(RG23.CREATION_DATE) >= P_START_DATE
        AND TRUNC(RG23.CREATION_DATE) <= TRUNC(NVL(P_END_DATE
               ,SYSDATE))
        AND RG23.REGISTER_TYPE = 'A'
        AND JRO.SOURCE_REGISTER = 'RG23A_P2'
        AND JRO.TAX_TYPE in ( TAX_TYPE_SH_CVD_EDU_CESS , TAX_TYPE_SH_EXC_EDU_CESS );
  BEGIN
    OPEN CUR_GET_EDU_CESS_EXCISE;
    FETCH CUR_GET_EDU_CESS_EXCISE
     INTO LN_EDU_CESS_EXCISE;
    CLOSE CUR_GET_EDU_CESS_EXCISE;
    RETURN (ROUND(LN_EDU_CESS_EXCISE
                ,0));
  EXCEPTION
    WHEN OTHERS THEN
      /*SRW.MESSAGE(1275
                 ,'CF_sh_cess_excise_input:' || SQLERRM)*/NULL;
      RETURN NULL;
  END CF_SH_CESS_EXCISE_INPUTFORMULA;

  FUNCTION CF_SH_CESS_UTIL_PAY_GOODSFORMU(CF_CR_UTIL_INP_RM_SH_CESS IN NUMBER) RETURN NUMBER IS
    LN_EDU_CESS_EXCISE NUMBER;
    CURSOR CUR_GET_EDU_CESS_EXCISE IS
      SELECT
        NVL(SUM(DEBIT)
           ,0)
      FROM
        JAI_CMN_RG_OTHERS JRO,
        JAI_CMN_RG_23AC_II_TRXS RG23
      WHERE JRO.SOURCE_REGISTER_ID = RG23.REGISTER_ID
        AND RG23.LOCATION_ID = P_LOCATION_ID
        AND RG23.ORGANIZATION_ID = P_ORGANIZATION_ID
        AND TRUNC(RG23.CREATION_DATE) >= P_START_DATE
        AND TRUNC(RG23.CREATION_DATE) <= TRUNC(NVL(P_END_DATE
               ,SYSDATE))
        AND RG23.REGISTER_TYPE IN ( 'A' , 'C' )
        AND JRO.SOURCE_REGISTER in ( 'RG23A_P2' , 'RG23C_P2' )
        AND JRO.TAX_TYPE in ( TAX_TYPE_SH_CVD_EDU_CESS , TAX_TYPE_SH_EXC_EDU_CESS );
  BEGIN
    RETURN (ROUND(NVL(LN_EDU_CESS_EXCISE
                    ,0) - NVL(CF_CR_UTIL_INP_RM_SH_CESS
                    ,0)
                ,0));
  EXCEPTION
    WHEN OTHERS THEN
      /*SRW.MESSAGE(1275
                 ,'CF_sh_cess_util_pay_goods:' || SQLERRM)*/NULL;
      RETURN NULL;
  END CF_SH_CESS_UTIL_PAY_GOODSFORMU;

  FUNCTION CF_SRVC_SH_CESS_OPNGFORMULA RETURN NUMBER IS
    CURSOR CUR_INVOICE_OPEN_BAL IS
      SELECT
        SUM(RECOVERED_AMOUNT)
      FROM
        JAI_RGM_TRX_REFS
      WHERE SOURCE = 'AP'
        AND TAX_TYPE = TAX_TYPE_SH_SERVICE_EDU_CESS
        AND TRUNC(CREATION_DATE) < P_START_DATE
        AND ORGANIZATION_ID in (
        SELECT
          DISTINCT
          ORGANIZATION_ID
        FROM
          JAI_RGM_ORG_REGNS_V
        WHERE REGIME_CODE = 'SERVICE'
          AND REGISTRATION_TYPE = 'OTHERS'
          AND ATTRIBUTE_TYPE_CODE = 'PRIMARY'
          AND ATTRIBUTE_CODE = 'SERVICE_TAX_REGISTRATION_NO'
          AND ATTRIBUTE_VALUE = P_REGISTRATION_NUMBER
          AND ORGANIZATION_ID = NVL(P_OPERATING_UNIT
           ,ORGANIZATION_ID) );
    CURSOR CUR_DIST_IN IS
      SELECT
        SUM(CREDIT_AMOUNT)
      FROM
        JAI_RGM_TRX_RECORDS
      WHERE SOURCE = 'SERVICE_DISTRIBUTE_IN'
        AND REGIME_CODE = 'SERVICE'
        AND TAX_TYPE = TAX_TYPE_SH_SERVICE_EDU_CESS
        AND REGIME_PRIMARY_REGNO = P_REGISTRATION_NUMBER
        AND ORGANIZATION_ID = NVL(P_OPERATING_UNIT
         ,ORGANIZATION_ID)
        AND ( NVL(TRUNC(CREATION_DATE)
         ,TRUNC(SYSDATE)) ) < ( NVL(P_START_DATE
         ,TRUNC(SYSDATE)) );
    CURSOR CUR_MANUAL_IN IS
      SELECT
        SUM(CREDIT_AMOUNT)
      FROM
        JAI_RGM_TRX_RECORDS
      WHERE SOURCE = 'MANUAL'
        AND REGIME_CODE = 'SERVICE'
        AND TAX_TYPE = TAX_TYPE_SH_SERVICE_EDU_CESS
        AND SOURCE_TRX_TYPE IN ( 'ADJUSTMENT-RECOVERY' , 'RECOVERY' )
        AND REGIME_PRIMARY_REGNO = P_REGISTRATION_NUMBER
        AND ORGANIZATION_ID = NVL(P_OPERATING_UNIT
         ,ORGANIZATION_ID)
        AND ( NVL(TRUNC(CREATION_DATE)
         ,TRUNC(SYSDATE)) ) < ( NVL(P_START_DATE
         ,TRUNC(SYSDATE)) );
    CURSOR CUR_AR_UTIL_CREDIT IS
      SELECT
        SUM(RECOVERED_AMOUNT)
      FROM
        JAI_RGM_TRX_REFS
      WHERE SOURCE = 'AR'
        AND TAX_TYPE = TAX_TYPE_SH_SERVICE_EDU_CESS
        AND TRUNC(CREATION_DATE) < P_START_DATE
        AND ORGANIZATION_ID IN (
        SELECT
          DISTINCT
          ORGANIZATION_ID
        FROM
          JAI_RGM_ORG_REGNS_V
        WHERE REGIME_CODE = 'SERVICE'
          AND REGISTRATION_TYPE = 'OTHERS'
          AND ATTRIBUTE_TYPE_CODE = 'PRIMARY'
          AND ATTRIBUTE_CODE = 'SERVICE_TAX_REGISTRATION_NO'
          AND ATTRIBUTE_VALUE = P_REGISTRATION_NUMBER
          AND ORGANIZATION_ID = NVL(P_OPERATING_UNIT
           ,ORGANIZATION_ID) );
    CURSOR CUR_AR_SER_DIST_OUT_DEBIT IS
      SELECT
        NVL(SUM(DEBIT_AMOUNT)
           ,0)
      FROM
        JAI_RGM_TRX_RECORDS
      WHERE SOURCE = 'SERVICE_DISTRIBUTE_OUT'
        AND REGIME_CODE = 'SERVICE'
        AND TAX_TYPE = TAX_TYPE_SH_SERVICE_EDU_CESS
        AND REGIME_PRIMARY_REGNO = P_REGISTRATION_NUMBER
        AND ORGANIZATION_ID = NVL(P_OPERATING_UNIT
         ,ORGANIZATION_ID)
        AND ( NVL(TRUNC(CREATION_DATE)
         ,TRUNC(SYSDATE)) ) < ( NVL(P_START_DATE
         ,TRUNC(SYSDATE)) );
    CURSOR CUR_MANUAL_DEBIT IS
      SELECT
        NVL(SUM(DEBIT_AMOUNT)
           ,0)
      FROM
        JAI_RGM_TRX_RECORDS
      WHERE SOURCE = 'MANUAL'
        AND REGIME_CODE = 'SERVICE'
        AND TAX_TYPE = TAX_TYPE_SH_SERVICE_EDU_CESS
        AND SOURCE_TRX_TYPE IN ( 'ADJUSTMENT-LIABILITY' , 'LIABILITY' )
        AND REGIME_PRIMARY_REGNO = P_REGISTRATION_NUMBER
        AND ORGANIZATION_ID = NVL(P_OPERATING_UNIT
         ,ORGANIZATION_ID)
        AND ( NVL(TRUNC(CREATION_DATE)
         ,TRUNC(SYSDATE)) ) < ( NVL(P_START_DATE
         ,TRUNC(SYSDATE)) );
    CURSOR CUR_PAYMENT IS
      SELECT
        NVL(SUM(DEBIT_AMOUNT)
           ,0)
      FROM
        JAI_RGM_TRX_RECORDS
      WHERE SOURCE = 'MANUAL'
        AND REGIME_CODE = 'SERVICE'
        AND TAX_TYPE = TAX_TYPE_SH_SERVICE_EDU_CESS
        AND SOURCE_TRX_TYPE = 'PAYMENT'
        AND REGIME_PRIMARY_REGNO = P_REGISTRATION_NUMBER
        AND ORGANIZATION_ID = NVL(P_OPERATING_UNIT
         ,ORGANIZATION_ID)
        AND ( NVL(TRUNC(CREATION_DATE)
         ,TRUNC(SYSDATE)) ) < ( NVL(P_START_DATE
         ,TRUNC(SYSDATE)) );
    LV_INV_OPEN_BAL NUMBER;
    LV_OPEN_DIST_BAL NUMBER;
    LV_AR_UTIL_CREDIT NUMBER;
    LV_AR_SER_DIST_OUT_DEBIT NUMBER;
    LV_MANUAL_BAL NUMBER;
    LV_MANUAL_DEBIT_BAL NUMBER;
    LV_MANUAL_PAYMENT NUMBER;
  BEGIN
    LV_INV_OPEN_BAL := 0;
    LV_OPEN_DIST_BAL := 0;
    LV_AR_UTIL_CREDIT := 0;
    LV_AR_SER_DIST_OUT_DEBIT := 0;
    LV_MANUAL_BAL := 0;
    LV_MANUAL_DEBIT_BAL := 0;
    LV_MANUAL_PAYMENT := 0;
    OPEN CUR_INVOICE_OPEN_BAL;
    FETCH CUR_INVOICE_OPEN_BAL
     INTO LV_INV_OPEN_BAL;
    CLOSE CUR_INVOICE_OPEN_BAL;
    OPEN CUR_DIST_IN;
    FETCH CUR_DIST_IN
     INTO LV_OPEN_DIST_BAL;
    CLOSE CUR_DIST_IN;
    OPEN CUR_MANUAL_IN;
    FETCH CUR_MANUAL_IN
     INTO LV_MANUAL_BAL;
    CLOSE CUR_MANUAL_IN;
    OPEN CUR_MANUAL_DEBIT;
    FETCH CUR_MANUAL_DEBIT
     INTO LV_MANUAL_DEBIT_BAL;
    CLOSE CUR_MANUAL_DEBIT;
    OPEN CUR_AR_UTIL_CREDIT;
    FETCH CUR_AR_UTIL_CREDIT
     INTO LV_AR_UTIL_CREDIT;
    CLOSE CUR_AR_UTIL_CREDIT;
    OPEN CUR_AR_SER_DIST_OUT_DEBIT;
    FETCH CUR_AR_SER_DIST_OUT_DEBIT
     INTO LV_AR_SER_DIST_OUT_DEBIT;
    CLOSE CUR_AR_SER_DIST_OUT_DEBIT;
    OPEN CUR_PAYMENT;
    FETCH CUR_PAYMENT
     INTO LV_MANUAL_PAYMENT;
    CLOSE CUR_PAYMENT;
    RETURN ROUND((NVL(LV_OPEN_DIST_BAL
                    ,0) + NVL(LV_INV_OPEN_BAL
                    ,0) + NVL(LV_MANUAL_BAL
                    ,0) - NVL(LV_AR_UTIL_CREDIT
                    ,0) - NVL(LV_AR_SER_DIST_OUT_DEBIT
                    ,0) - NVL(LV_MANUAL_DEBIT_BAL
                    ,0) + NVL(LV_MANUAL_PAYMENT
                    ,0))
                ,0);
  END CF_SRVC_SH_CESS_OPNGFORMULA;

  FUNCTION CF_CR_UTIL_INP_RM_SH_CESSFORMU RETURN NUMBER IS
    CURSOR GET_RTV_CESS IS
      SELECT
        SUM(NVL(DEBIT
               ,0))
      FROM
        JAI_CMN_RG_OTHERS
      WHERE SOURCE_TYPE = 1
        AND TAX_TYPE in ( TAX_TYPE_SH_CVD_EDU_CESS , TAX_TYPE_SH_EXC_EDU_CESS )
        AND SOURCE_REGISTER_ID in (
        SELECT
          JRG23_II.REGISTER_ID
        FROM
          JAI_CMN_RG_23AC_II_TRXS JRG23_II,
          JAI_CMN_RG_23AC_I_TRXS JRG23_I
        WHERE JRG23_II.ORGANIZATION_ID = P_ORGANIZATION_ID
          AND JRG23_II.LOCATION_ID = P_LOCATION_ID
          AND TRUNC(JRG23_II.CREATION_DATE) >= P_START_DATE
          AND TRUNC(JRG23_II.CREATION_DATE) <= TRUNC(NVL(P_END_DATE
                 ,SYSDATE))
          AND JRG23_I.TRANSACTION_TYPE = 'RTV'
          AND JRG23_II.ORGANIZATION_ID = JRG23_I.ORGANIZATION_ID
          AND JRG23_II.LOCATION_ID = JRG23_I.LOCATION_ID
          AND JRG23_II.REGISTER_ID_PART_I = JRG23_I.REGISTER_ID );
    CURSOR GET_CGIN_SALES_CESS IS
      SELECT
        SUM(NVL(DEBIT
               ,0))
      FROM
        JAI_CMN_RG_OTHERS
      WHERE SOURCE_TYPE = 1
        AND TAX_TYPE in ( TAX_TYPE_SH_CVD_EDU_CESS , TAX_TYPE_SH_EXC_EDU_CESS )
        AND SOURCE_REGISTER_ID in (
        SELECT
          JRG23_II.REGISTER_ID
        FROM
          JAI_CMN_RG_23AC_II_TRXS JRG23_II,
          JAI_CMN_RG_23AC_I_TRXS JRG23_I,
          JAI_INV_ITM_SETUPS JMSI
        WHERE JRG23_II.ORGANIZATION_ID = JRG23_I.ORGANIZATION_ID
          AND JRG23_II.LOCATION_ID = JRG23_I.LOCATION_ID
          AND JRG23_II.REGISTER_ID_PART_I = JRG23_I.REGISTER_ID
          AND JMSI.ORGANIZATION_ID = JRG23_II.ORGANIZATION_ID
          AND JMSI.ITEM_CLASS like 'CG%'
          AND JMSI.INVENTORY_ITEM_ID = JRG23_II.INVENTORY_ITEM_ID
          AND JMSI.ORGANIZATION_ID = P_ORGANIZATION_ID
          AND JRG23_II.ORGANIZATION_ID = P_ORGANIZATION_ID
          AND JRG23_II.LOCATION_ID = P_LOCATION_ID
          AND TRUNC(JRG23_II.CREATION_DATE) >= P_START_DATE
          AND TRUNC(JRG23_II.CREATION_DATE) <= TRUNC(NVL(P_END_DATE
                 ,SYSDATE))
          AND JRG23_I.TRANSACTION_TYPE <> 'RTV' );
    LN_RTV_CESS NUMBER;
    LN_CGIN_SALES_CESS NUMBER;
    LN_CR_UTIL_INP_RM_CESS NUMBER;
  BEGIN
    OPEN GET_RTV_CESS;
    FETCH GET_RTV_CESS
     INTO LN_RTV_CESS;
    CLOSE GET_RTV_CESS;
    OPEN GET_CGIN_SALES_CESS;
    FETCH GET_CGIN_SALES_CESS
     INTO LN_CGIN_SALES_CESS;
    CLOSE GET_CGIN_SALES_CESS;
    RETURN ROUND(NVL(LN_RTV_CESS
                    ,0) + NVL(LN_CGIN_SALES_CESS
                    ,0));
  EXCEPTION
    WHEN OTHERS THEN
      /*SRW.MESSAGE(1275
                 ,'CF_cr_util_inp_rm_sh_cessFormula:' || SQLERRM)*/NULL;
      RETURN NULL;
  END CF_CR_UTIL_INP_RM_SH_CESSFORMU;

  FUNCTION CF_CLOSING_BLNC_SH_ECFORMULA(CF_SH_CESS_OPENING_BLNC IN NUMBER
                                       ,CF_TOT_CR_AVAILED_SH_EC IN NUMBER
                                       ,CF_SH_CESS_UTIL_PAY_GOODS IN NUMBER
                                       ,CF_CR_UTIL_INP_RM_SH_CESS IN NUMBER) RETURN NUMBER IS
  BEGIN
    RETURN ROUND(NVL(CF_SH_CESS_OPENING_BLNC
                    ,0) + NVL(CF_TOT_CR_AVAILED_SH_EC
                    ,0) - NVL(CF_SH_CESS_UTIL_PAY_GOODS
                    ,0) - NVL(CF_CR_UTIL_INP_RM_SH_CESS
                    ,0)
                ,0);
  END CF_CLOSING_BLNC_SH_ECFORMULA;

  FUNCTION CF_CLOSING_BLNC_SH_SCFORMULA(CF_SRVC_SH_CESS_OPNG IN NUMBER
                                       ,CF_TOT_CR_AVAILED_SH_SC IN NUMBER
                                       ,CF_SH_CESS_TAX_DUTY_GOODS IN NUMBER) RETURN NUMBER IS
  BEGIN
    RETURN ROUND((NVL(CF_SRVC_SH_CESS_OPNG
                    ,0) + NVL(CF_TOT_CR_AVAILED_SH_SC
                    ,0) - NVL(CF_SH_CESS_TAX_DUTY_GOODS
                    ,0))
                ,0);
  END CF_CLOSING_BLNC_SH_SCFORMULA;

  FUNCTION CF_SH_CESS_TAX_DUTY_GOODSFORMU RETURN NUMBER IS
    CURSOR CUR_AR_UTIL_CREDIT IS
      SELECT
        SUM(RECOVERED_AMOUNT)
      FROM
        JAI_RGM_TRX_REFS
      WHERE SOURCE = 'AR'
        AND TAX_TYPE = TAX_TYPE_SH_SERVICE_EDU_CESS
        AND ORGANIZATION_ID IN (
        SELECT
          DISTINCT
          ORGANIZATION_ID
        FROM
          JAI_RGM_ORG_REGNS_V
        WHERE REGIME_CODE = 'SERVICE'
          AND REGISTRATION_TYPE = 'OTHERS'
          AND ATTRIBUTE_TYPE_CODE = 'PRIMARY'
          AND ATTRIBUTE_CODE = 'SERVICE_TAX_REGISTRATION_NO'
          AND ATTRIBUTE_VALUE = P_REGISTRATION_NUMBER
          AND ORGANIZATION_ID = NVL(P_OPERATING_UNIT
           ,ORGANIZATION_ID) )
        AND ( NVL(TRUNC(CREATION_DATE)
         ,SYSDATE) ) BETWEEN ( NVL(P_START_DATE
         ,SYSDATE) )
        AND ( NVL(P_END_DATE
         ,SYSDATE) );
    CURSOR CUR_AR_SER_DIST_OUT_DEBIT IS
      SELECT
        NVL(SUM(DEBIT_AMOUNT)
           ,0)
      FROM
        JAI_RGM_TRX_RECORDS
      WHERE SOURCE = 'SERVICE_DISTRIBUTE_OUT'
        AND REGIME_CODE = 'SERVICE'
        AND TAX_TYPE = TAX_TYPE_SH_SERVICE_EDU_CESS
        AND REGIME_PRIMARY_REGNO = P_REGISTRATION_NUMBER
        AND ORGANIZATION_ID = NVL(P_OPERATING_UNIT
         ,ORGANIZATION_ID)
        AND ( NVL(TRUNC(CREATION_DATE)
         ,SYSDATE) ) BETWEEN ( NVL(P_START_DATE
         ,SYSDATE) )
        AND ( NVL(P_END_DATE
         ,SYSDATE) );
    CURSOR CUR_MANUAL_DEBIT IS
      SELECT
        NVL(SUM(DEBIT_AMOUNT)
           ,0)
      FROM
        JAI_RGM_TRX_RECORDS
      WHERE SOURCE = 'MANUAL'
        AND REGIME_CODE = 'SERVICE'
        AND TAX_TYPE = TAX_TYPE_SH_SERVICE_EDU_CESS
        AND SOURCE_TRX_TYPE IN ( 'ADJUSTMENT-LIABILITY' , 'LIABILITY' )
        AND REGIME_PRIMARY_REGNO = P_REGISTRATION_NUMBER
        AND ORGANIZATION_ID = NVL(P_OPERATING_UNIT
         ,ORGANIZATION_ID)
        AND ( NVL(TRUNC(CREATION_DATE)
         ,SYSDATE) ) BETWEEN ( NVL(P_START_DATE
         ,SYSDATE) )
        AND ( NVL(P_END_DATE
         ,SYSDATE) );
    CURSOR CUR_PAYMENT IS
      SELECT
        NVL(SUM(DEBIT_AMOUNT)
           ,0)
      FROM
        JAI_RGM_TRX_RECORDS
      WHERE SOURCE = 'MANUAL'
        AND REGIME_CODE = 'SERVICE'
        AND TAX_TYPE = TAX_TYPE_SH_SERVICE_EDU_CESS
        AND SOURCE_TRX_TYPE = 'PAYMENT'
        AND REGIME_PRIMARY_REGNO = P_REGISTRATION_NUMBER
        AND ORGANIZATION_ID = NVL(P_OPERATING_UNIT
         ,ORGANIZATION_ID)
        AND ( NVL(TRUNC(CREATION_DATE)
         ,SYSDATE) ) BETWEEN ( NVL(P_START_DATE
         ,SYSDATE) )
        AND ( NVL(P_END_DATE
         ,SYSDATE) );
    LN_AR_UTIL_CREDIT NUMBER;
    LN_AR_SER_DIST_OUT_DEBIT NUMBER;
    LV_MANUAL_DEBIT NUMBER;
    LV_PAYMENT NUMBER;
  BEGIN
    LN_AR_UTIL_CREDIT := 0;
    LN_AR_SER_DIST_OUT_DEBIT := 0;
    LV_MANUAL_DEBIT := 0;
    LV_PAYMENT := 0;
    OPEN CUR_AR_UTIL_CREDIT;
    FETCH CUR_AR_UTIL_CREDIT
     INTO LN_AR_UTIL_CREDIT;
    CLOSE CUR_AR_UTIL_CREDIT;
    OPEN CUR_AR_SER_DIST_OUT_DEBIT;
    FETCH CUR_AR_SER_DIST_OUT_DEBIT
     INTO LN_AR_SER_DIST_OUT_DEBIT;
    CLOSE CUR_AR_SER_DIST_OUT_DEBIT;
    OPEN CUR_MANUAL_DEBIT;
    FETCH CUR_MANUAL_DEBIT
     INTO LV_MANUAL_DEBIT;
    CLOSE CUR_MANUAL_DEBIT;
    OPEN CUR_PAYMENT;
    FETCH CUR_PAYMENT
     INTO LV_PAYMENT;
    CLOSE CUR_PAYMENT;
    RETURN ROUND((NVL(LN_AR_UTIL_CREDIT
                    ,0) + NVL(LN_AR_SER_DIST_OUT_DEBIT
                    ,0) + NVL(LV_MANUAL_DEBIT
                    ,0) - NVL(LV_PAYMENT
                    ,0))
                ,0);
  END CF_SH_CESS_TAX_DUTY_GOODSFORMU;

  FUNCTION CF_TOT_CR_AVAILED_SH_SCFORMULA(CF_SRVC_SH_CESS_OPNG IN NUMBER) RETURN NUMBER IS
  BEGIN
    RETURN ROUND((NVL(CF_SRVC_SH_CESS_OPNG
                    ,0) + NVL(CP_SH_CESS_CREDIT_AVLD
                    ,0))
                ,0);
  END CF_TOT_CR_AVAILED_SH_SCFORMULA;

  FUNCTION CF_OTHER_SH_ACC_CREDITFORMULA RETURN NUMBER IS
    LN_CR_OTHER_ED JAI_CMN_RG_23AC_II_TRXS.CR_OTHER_ED%TYPE;
    CURSOR CUR_GET_AMOUNT IS
      SELECT
        SUM(NVL(DEBIT
               ,0))
      FROM
        JAI_CMN_RG_OTHERS
      WHERE TAX_TYPE in ( TAX_TYPE_SH_EXC_EDU_CESS , TAX_TYPE_SH_CVD_EDU_CESS )
        AND SOURCE_TYPE = 1
        AND SOURCE_REGISTER_ID in (
        SELECT
          REGISTER_ID
        FROM
          JAI_CMN_RG_23AC_II_TRXS
        WHERE LOCATION_ID = P_LOCATION_ID
          AND ORGANIZATION_ID = P_ORGANIZATION_ID
          AND TRUNC(CREATION_DATE) >= P_START_DATE
          AND TRUNC(CREATION_DATE) <= TRUNC(NVL(P_END_DATE
                 ,SYSDATE)) );
  BEGIN
    OPEN CUR_GET_AMOUNT;
    FETCH CUR_GET_AMOUNT
     INTO LN_CR_OTHER_ED;
    CLOSE CUR_GET_AMOUNT;
    RETURN ROUND(LN_CR_OTHER_ED
                ,0);
  EXCEPTION
    WHEN OTHERS THEN
      /*SRW.MESSAGE(1275
                 ,'CF_other_acc_credit:' || SQLERRM)*/NULL;
      RETURN NULL;
  END CF_OTHER_SH_ACC_CREDITFORMULA;

  FUNCTION CF_OTHER_SH_ACC_CURRENTFORMULA RETURN NUMBER IS
    CURSOR CUR_GET_ADDL_AMOUNT IS
      SELECT
        SUM(NVL(CREDIT
               ,0))
      FROM
        JAI_CMN_RG_OTHERS
      WHERE SOURCE_TYPE = 2
        AND TAX_TYPE in ( TAX_TYPE_SH_EXC_EDU_CESS , TAX_TYPE_SH_CVD_EDU_CESS )
        AND SOURCE_REGISTER_ID in (
        SELECT
          REGISTER_ID
        FROM
          JAI_CMN_RG_PLA_TRXS
        WHERE ORGANIZATION_ID = P_ORGANIZATION_ID
          AND LOCATION_ID = P_LOCATION_ID
          AND CREATION_DATE >= P_START_DATE
          AND CREATION_DATE <= TRUNC(NVL(P_END_DATE
                 ,SYSDATE))
          AND TRANSACTION_SOURCE_NUM = 91 );
    LN_ADDL_DUTY_AMOUNT NUMBER;
  BEGIN
    OPEN CUR_GET_ADDL_AMOUNT;
    FETCH CUR_GET_ADDL_AMOUNT
     INTO LN_ADDL_DUTY_AMOUNT;
    CLOSE CUR_GET_ADDL_AMOUNT;
    RETURN ROUND(LN_ADDL_DUTY_AMOUNT
                ,0);
  EXCEPTION
    WHEN OTHERS THEN
      /*SRW.MESSAGE(1275
                 ,'CF_other_acc_current:' || SQLERRM)*/NULL;
      RETURN NULL;
  END CF_OTHER_SH_ACC_CURRENTFORMULA;

  FUNCTION CF_SH_OTHER_TOTALFORMULA(CF_OTHER_SH_ACC_CURRENT IN NUMBER
                                   ,CF_OTHER_SH_ACC_CREDIT IN NUMBER) RETURN NUMBER IS
  BEGIN
    RETURN ROUND((NVL(CF_OTHER_SH_ACC_CURRENT
                    ,0) + NVL(CF_OTHER_SH_ACC_CREDIT
                    ,0))
                ,0);
  END CF_SH_OTHER_TOTALFORMULA;

  FUNCTION CF_SH_OTHER_DUTIESFORMULA(INVENTORY_ITEM_ID IN NUMBER
                                    ,CETSH IN VARCHAR2
                                    ,UNITS IN VARCHAR2
                                    ,EXCISE_DUTY_RATE IN NUMBER
                                    ,REGISTER IN VARCHAR2) RETURN NUMBER IS
    LN_DUTY_PAYABLE NUMBER;
    LN_PLA_DUTY NUMBER;
    LN_RG23_DUTY NUMBER;
    CURSOR CUR_OTHER_DUTIES_PLA IS
      SELECT
        NVL(SUM(DEBIT)
           ,0)
      FROM
        JAI_CMN_RG_OTHERS
      WHERE SOURCE_REGISTER_ID IN (
        SELECT
          REGISTER_ID_PART_II
        FROM
          JAI_CMN_RG_I_TRXS JRGI,
          JAI_INV_ITM_SETUPS ITEMS
        WHERE ( JRGI.INVENTORY_ITEM_ID = cf_sh_other_dutiesformula.INVENTORY_ITEM_ID
        OR ITEMS.ITEM_TARIFF = CETSH )
          AND ITEMS.INVENTORY_ITEM_ID = JRGI.INVENTORY_ITEM_ID
          AND JRGI.ORGANIZATION_ID = P_ORGANIZATION_ID
          AND ITEMS.ORGANIZATION_ID = JRGI.ORGANIZATION_ID
          AND NVL(JRGI.PRIMARY_UOM_CODE
           ,'XYZ') = NVL(UNITS
           ,'XYZ')
          AND NVL(ROUND(JRGI.EXCISE_DUTY_RATE
                 ,0)
           ,-999.95) = NVL(cf_sh_other_dutiesformula.EXCISE_DUTY_RATE
           ,-999.95)
          AND JRGI.LOCATION_ID = P_LOCATION_ID
          AND TRUNC(JRGI.CREATION_DATE) between TRUNC(P_START_DATE)
          AND TRUNC(P_END_DATE)
          AND JRGI.TRANSACTION_TYPE in ( 'I' , 'IA' , 'PI' , 'IOI' )
          AND PAYMENT_REGISTER = 'PLA' )
        AND SOURCE_TYPE = 2
        AND TAX_TYPE in ( TAX_TYPE_SH_EXC_EDU_CESS , TAX_TYPE_SH_CVD_EDU_CESS );
    CURSOR CUR_OTHER_DUTIES_RG23 IS
      SELECT
        NVL(SUM(DEBIT)
           ,0)
      FROM
        JAI_CMN_RG_OTHERS
      WHERE SOURCE_REGISTER_ID IN (
        SELECT
          REGISTER_ID_PART_II
        FROM
          JAI_CMN_RG_I_TRXS JRGI,
          JAI_INV_ITM_SETUPS ITEMS
        WHERE ( JRGI.INVENTORY_ITEM_ID = cf_sh_other_dutiesformula.INVENTORY_ITEM_ID
        OR ITEMS.ITEM_TARIFF = CETSH )
          AND ITEMS.INVENTORY_ITEM_ID = JRGI.INVENTORY_ITEM_ID
          AND JRGI.ORGANIZATION_ID = P_ORGANIZATION_ID
          AND ITEMS.ORGANIZATION_ID = JRGI.ORGANIZATION_ID
          AND NVL(JRGI.PRIMARY_UOM_CODE
           ,'XYZ') = NVL(UNITS
           ,'XYZ')
          AND NVL(ROUND(JRGI.EXCISE_DUTY_RATE
                 ,0)
           ,-999.95) = NVL(cf_sh_other_dutiesformula.EXCISE_DUTY_RATE
           ,-999.95)
          AND JRGI.LOCATION_ID = P_LOCATION_ID
          AND TRUNC(JRGI.CREATION_DATE) between TRUNC(P_START_DATE)
          AND TRUNC(P_END_DATE)
          AND JRGI.TRANSACTION_TYPE in ( 'I' , 'IA' , 'PI' , 'IOI' )
          AND PAYMENT_REGISTER IN ( 'RG23A' , 'RG23C' ) )
        AND SOURCE_TYPE = 1
        AND TAX_TYPE in ( TAX_TYPE_SH_EXC_EDU_CESS , TAX_TYPE_SH_CVD_EDU_CESS );
    CURSOR CUR_OTHER_DUTIES_PLA_PART_I IS
      SELECT
        NVL(SUM(DEBIT)
           ,0)
      FROM
        JAI_CMN_RG_OTHERS
      WHERE SOURCE_REGISTER_ID IN (
        SELECT
          REGISTER_ID_PART_II
        FROM
          JAI_CMN_RG_23AC_I_TRXS JRGI,
          JAI_INV_ITM_SETUPS ITEMS
        WHERE ( JRGI.INVENTORY_ITEM_ID = cf_sh_other_dutiesformula.INVENTORY_ITEM_ID
        OR ITEMS.ITEM_TARIFF = CETSH )
          AND ITEMS.INVENTORY_ITEM_ID = JRGI.INVENTORY_ITEM_ID
          AND JRGI.ORGANIZATION_ID = P_ORGANIZATION_ID
          AND ITEMS.ORGANIZATION_ID = JRGI.ORGANIZATION_ID
          AND NVL(JRGI.PRIMARY_UOM_CODE
           ,'XYZ') = NVL(UNITS
           ,'XYZ')
          AND JRGI.LOCATION_ID = P_LOCATION_ID
          AND TRUNC(JRGI.CREATION_DATE) between TRUNC(P_START_DATE)
          AND TRUNC(P_END_DATE)
          AND JRGI.TRANSACTION_TYPE in ( 'RTV' , 'I' , 'IA' , 'IOI' , 'PI' )
          AND REGISTER_TYPE = 'PLA' )
        AND SOURCE_TYPE = 2
        AND TAX_TYPE in ( TAX_TYPE_SH_EXC_EDU_CESS , TAX_TYPE_SH_CVD_EDU_CESS );
    CURSOR CUR_OTHER_DUTIES_RG23_PART_I IS
      SELECT
        NVL(SUM(DEBIT)
           ,0)
      FROM
        JAI_CMN_RG_OTHERS
      WHERE SOURCE_REGISTER_ID IN (
        SELECT
          REGISTER_ID_PART_II
        FROM
          JAI_CMN_RG_23AC_I_TRXS JRGI,
          JAI_INV_ITM_SETUPS ITEMS
        WHERE ( JRGI.INVENTORY_ITEM_ID = cf_sh_other_dutiesformula.INVENTORY_ITEM_ID
        OR ITEMS.ITEM_TARIFF = CETSH )
          AND ITEMS.INVENTORY_ITEM_ID = JRGI.INVENTORY_ITEM_ID
          AND JRGI.ORGANIZATION_ID = P_ORGANIZATION_ID
          AND ITEMS.ORGANIZATION_ID = JRGI.ORGANIZATION_ID
          AND NVL(JRGI.PRIMARY_UOM_CODE
           ,'XYZ') = NVL(UNITS
           ,'XYZ')
          AND JRGI.LOCATION_ID = P_LOCATION_ID
          AND TRUNC(JRGI.CREATION_DATE) between TRUNC(P_START_DATE)
          AND TRUNC(P_END_DATE)
          AND JRGI.TRANSACTION_TYPE in ( 'RTV' , 'I' , 'IA' , 'IOI' , 'PI' )
          AND REGISTER_TYPE IN ( 'A' , 'C' ) )
        AND SOURCE_TYPE = 1
        AND TAX_TYPE in ( TAX_TYPE_SH_EXC_EDU_CESS , TAX_TYPE_SH_CVD_EDU_CESS );
    LN_PLA_DUTY_PART_I NUMBER;
    LN_RG23_DUTY_PART_I NUMBER;
  BEGIN
    IF REGISTER = 'RG1' THEN
      /*SRW.MESSAGE(1275
                 ,'1')*/NULL;
      OPEN CUR_OTHER_DUTIES_PLA;
      FETCH CUR_OTHER_DUTIES_PLA
       INTO LN_PLA_DUTY;
      CLOSE CUR_OTHER_DUTIES_PLA;
      OPEN CUR_OTHER_DUTIES_RG23;
      FETCH CUR_OTHER_DUTIES_RG23
       INTO LN_RG23_DUTY;
      CLOSE CUR_OTHER_DUTIES_RG23;
      LN_DUTY_PAYABLE := ROUND((NVL(LN_PLA_DUTY
                                  ,0) + NVL(LN_RG23_DUTY
                                  ,0))
                              ,0);
      /*SRW.MESSAGE(1275
                 ,'1a')*/NULL;
      RETURN LN_DUTY_PAYABLE;
    ELSIF REGISTER = 'RG23_PART_I' THEN
      /*SRW.MESSAGE(1275
                 ,'2')*/NULL;
      OPEN CUR_OTHER_DUTIES_PLA_PART_I;
      FETCH CUR_OTHER_DUTIES_PLA_PART_I
       INTO LN_PLA_DUTY_PART_I;
      CLOSE CUR_OTHER_DUTIES_PLA_PART_I;
      OPEN CUR_OTHER_DUTIES_RG23_PART_I;
      FETCH CUR_OTHER_DUTIES_RG23_PART_I
       INTO LN_RG23_DUTY_PART_I;
      CLOSE CUR_OTHER_DUTIES_RG23_PART_I;
      LN_DUTY_PAYABLE := ROUND((NVL(LN_PLA_DUTY_PART_I
                                  ,0) + NVL(LN_RG23_DUTY_PART_I
                                  ,0))
                              ,0);
      /*SRW.MESSAGE(1275
                 ,'2a')*/NULL;
      RETURN LN_DUTY_PAYABLE;
    END IF;
  EXCEPTION
    WHEN OTHERS THEN
      /*SRW.MESSAGE(1275
                 ,'CF_OTHER_duties' || SQLERRM)*/NULL;
      RETURN NULL;
  END CF_SH_OTHER_DUTIESFORMULA;

  FUNCTION CP_AED_DUTY_PAYABLE_P RETURN NUMBER IS
  BEGIN
    RETURN CP_AED_DUTY_PAYABLE;
  END CP_AED_DUTY_PAYABLE_P;

  FUNCTION CP_CRDT_IMPORT_CAP_GOODS_P RETURN NUMBER IS
  BEGIN
    RETURN CP_CRDT_IMPORT_CAP_GOODS;
  END CP_CRDT_IMPORT_CAP_GOODS_P;

  FUNCTION CP_CRDT_IMPORT_INPUT_P RETURN NUMBER IS
  BEGIN
    RETURN CP_CRDT_IMPORT_INPUT;
  END CP_CRDT_IMPORT_INPUT_P;

  FUNCTION CP_CESS_CREDIT_AVLD_P RETURN NUMBER IS
  BEGIN
    RETURN CP_CESS_CREDIT_AVLD;
  END CP_CESS_CREDIT_AVLD_P;

  FUNCTION CP_SH_CESS_CREDIT_AVLD_P RETURN NUMBER IS
  BEGIN
    RETURN CP_SH_CESS_CREDIT_AVLD;
  END CP_SH_CESS_CREDIT_AVLD_P;

  FUNCTION CP_AED_ACC_CURRENT_P RETURN NUMBER IS
  BEGIN
    RETURN CP_AED_ACC_CURRENT;
  END CP_AED_ACC_CURRENT_P;

END JA_JAINER1_XMLP_PKG;



/
