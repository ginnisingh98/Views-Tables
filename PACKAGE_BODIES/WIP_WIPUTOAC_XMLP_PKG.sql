--------------------------------------------------------
--  DDL for Package Body WIP_WIPUTOAC_XMLP_PKG
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE PACKAGE BODY "APPS"."WIP_WIPUTOAC_XMLP_PKG" AS
/* $Header: WIPUTOACB.pls 120.1 2008/01/31 12:55:07 npannamp noship $ */
  FUNCTION BEFOREREPORT RETURN BOOLEAN IS
  BEGIN
    P_CONC_REQUEST_ID := FND_GLOBAL.CONC_REQUEST_ID;
    /*SRW.USER_EXIT('FND SRWINIT')*/NULL;
    /*SRW.USER_EXIT('FND FLEXSQL CODE="GL#" NUM=":P_STRUCT_NUM"
                                APPL_SHORT_NAME="SQLGL", OUTPUT=":P_M_ACCT_FLEX"
                                 MODE="SELECT" DISPLAY="ALL" TABLEALIAS="GCC1"')*/NULL;
    IF (P_FROM_ACCOUNT IS NOT NULL) THEN
      IF (P_TO_ACCOUNT IS NOT NULL) THEN
        NULL;
      ELSE
        NULL;
      END IF;
    ELSE
      IF (P_TO_ACCOUNT IS NOT NULL) THEN
        NULL;
      END IF;
    END IF;
    RETURN (TRUE);
    RETURN (TRUE);
  END BEFOREREPORT;

  FUNCTION AFTERREPORT RETURN BOOLEAN IS
  BEGIN
    /*SRW.USER_EXIT('FND SRWEXIT')*/NULL;
    RETURN (TRUE);
  END AFTERREPORT;

  FUNCTION LIMIT_DATES RETURN CHARACTER IS
    LIMIT_DATES VARCHAR2(120);
  BEGIN
    IF (P_FROM_DATE IS NOT NULL) THEN
      IF (P_TO_DATE IS NOT NULL) THEN
        LIMIT_DATES := ' AND WT.transaction_date >= TO_DATE(''' || TO_CHAR(P_FROM_DATE
                              ,'YYYYMMDD') || ''',''YYYYMMDD'')' || ' AND WT.transaction_date < TO_DATE(''' || TO_CHAR(P_TO_DATE + 1
                              ,'YYYYMMDD') || ''',''YYYYMMDD'')';
      ELSE
        LIMIT_DATES := ' AND WT.transaction_date >= TO_DATE(''' || TO_CHAR(P_FROM_DATE
                              ,'YYYYMMDD') || ''',''YYYYMMDD'')';
      END IF;
    ELSE
      IF (P_TO_DATE IS NOT NULL) THEN
        LIMIT_DATES := ' AND WT.transaction_date < TO_DATE(''' || TO_CHAR(P_TO_DATE + 1
                              ,'YYYYMMDD') || ''',''YYYYMMDD'')';
      ELSE
        LIMIT_DATES := ' ';
      END IF;
    END IF;
    RETURN (LIMIT_DATES);
  END LIMIT_DATES;

  FUNCTION C_LIMIT_ACCOUNTSFORMULA RETURN VARCHAR2 IS
  BEGIN
    BEGIN
      IF (P_ACCT_WHERE IS NOT NULL) THEN
        RETURN ('AND ');
      ELSE
        RETURN ('  ');
      END IF;
    END;
    RETURN NULL;
  END C_LIMIT_ACCOUNTSFORMULA;

  FUNCTION C_SUBTITLE_CURRENCYFORMULA(C_CURRENCY_CODE IN VARCHAR2) RETURN VARCHAR2 IS
  BEGIN
    RETURN ('(' || C_CURRENCY_CODE || ')');
  END C_SUBTITLE_CURRENCYFORMULA;

  FUNCTION C_D_ACCT_SORTFORMULA(C_D_ACCT_SORT IN VARCHAR2) RETURN VARCHAR2 IS
  BEGIN
    RETURN (C_D_ACCT_SORT);
  END C_D_ACCT_SORTFORMULA;

  FUNCTION C_M_ACCT_SORTFORMULA(C_M_ACCT_FLEX IN VARCHAR2
                               ,C_M_ACCT_FIELD IN VARCHAR2
                               ,C_M_ACCT_SORT IN VARCHAR2) RETURN VARCHAR2 IS
  BEGIN
    /*SRW.REFERENCE(C_M_ACCT_FLEX)*/NULL;
    /*SRW.REFERENCE(C_M_ACCT_FIELD)*/NULL;
    RETURN (C_M_ACCT_SORT);
  END C_M_ACCT_SORTFORMULA;

  FUNCTION AFTERPFORM RETURN BOOLEAN IS
  BEGIN
    RETURN (TRUE);
  END AFTERPFORM;

END WIP_WIPUTOAC_XMLP_PKG;


/
