--------------------------------------------------------
--  DDL for Package Body ZX_AR_ACTG_EXTRACT_PKG
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE PACKAGE BODY "APPS"."ZX_AR_ACTG_EXTRACT_PKG" AS
/* $Header: zxriractgextpvtb.pls 120.8.12010000.2 2008/11/12 12:48:06 spasala ship $ */

-----------------------------------------
--Private Methods Declarations
-----------------------------------------
PROCEDURE BUILD_SQL(
  P_MRC_SOB_TYPE                  IN VARCHAR2
);


PROCEDURE FETCH_AR_TRX_INFO;
PROCEDURE EXECUTE_DYNAMIC_SQL_STRG(
  p_statement          IN VARCHAR2
);

PROCEDURE INSERT_AR_TRX_INFO;

PROCEDURE ASSIGN_AR_GLOBAL_VARIABLES(
  P_TRL_GLOBAL_VARIABLES_REC  IN ZX_EXTRACT_PKG.TRL_GLOBAL_VARIABLES_REC_TYPE
);

PROCEDURE INIT_AR_GT_TABLES;

-----------------------------------------
--Public Variable Declarations
-----------------------------------------
-- bug fix 3062098 by lxzhang
--PG_DEBUG varchar2(1) := NVL(FND_PROFILE.value('TAX_DEBUG_FLAG'), 'N');
PG_DEBUG varchar2(1) := NVL(FND_PROFILE.value('AFLOG_ENABLED'), 'N');
L_MSG                                VARCHAR2(500);

C_LINES_PER_INSERT                 CONSTANT NUMBER :=  5000;

--  AR cursor to execute
C_EXC_AR_5                         CONSTANT NUMBER :=  1;
C_EXC_AR_TRX_MR_Y_1_2_3_6          CONSTANT NUMBER :=  2;
C_EXC_AR_TRX_MR_Y_4                CONSTANT NUMBER :=  3;
C_EXC_AR_TRX_MR_N_1_2_3_6          CONSTANT NUMBER :=  4;
C_EXC_AR_TRX_MR_N_4                CONSTANT NUMBER :=  5;
C_EXC_AR_TRX_LINE_MR_N_1_3_6       CONSTANT NUMBER :=  6;
C_EXC_AR_TRX_LINE_MR_N_2           CONSTANT NUMBER :=  7;
C_EXC_AR_TRX_LINE_MR_N_4           CONSTANT NUMBER :=  8;
C_EXC_AR_TRX_LINE_MR_Y_1_2_3_6     CONSTANT NUMBER :=  9;
C_EXC_AR_TRX_LINE_MR_Y_4           CONSTANT NUMBER :=  10;
C_EXC_AR_TRX_DIS_1_3_6             CONSTANT NUMBER :=  11;
C_EXC_AR_TRX_DIS_4                 CONSTANT NUMBER :=  12;
C_EXC_AR_TRX_DIS_2                 CONSTANT NUMBER :=  13;

L_COLUMN_LIST_AR_INV  VARCHAR2(32000);
L_TABLE_LIST_AR_INV   VARCHAR2(2000);
L_WHERE_CLAUSE_AR_INV VARCHAR2(15000);
L_COLUMN_LIST_AR_CM   VARCHAR2(32000);
L_TABLE_LIST_AR_CM    VARCHAR2(2000);
L_WHERE_CLAUSE_AR_CM  VARCHAR2(15000);
L_COLUMN_LIST_AR_APP  VARCHAR2(32000);
L_TABLE_LIST_AR_APP   VARCHAR2(2000);
L_WHERE_CLAUSE_AR_APP VARCHAR2(32000);
L_COLUMN_LIST_AR_ADJ  VARCHAR2(32000);
L_TABLE_LIST_AR_ADJ   VARCHAR2(2000);
L_WHERE_CLAUSE_AR_ADJ VARCHAR2(32000);
L_COLUMN_LIST_AR_MISC  VARCHAR2(32000);
L_TABLE_LIST_AR_MISC   VARCHAR2(2000);
L_WHERE_CLAUSE_AR_MISC VARCHAR2(32000);
L_COLUMN_LIST_AR_BR    VARCHAR2(32000);
L_TABLE_LIST_AR_BR     VARCHAR2(2000);
L_WHERE_CLAUSE_AR_BR   VARCHAR2(32000);



        -- Declare Table Type variables
         GT_DETAIL_TAX_LINE_ID                    ZX_EXTRACT_PKG.DETAIL_TAX_LINE_ID_TBL;
        GT_LEDGER_ID	                   ZX_EXTRACT_PKG.LEDGER_ID_TBL;
        GT_TRX_ID	                           ZX_EXTRACT_PKG.TRX_ID_TBL;
        GT_DOC_SEQ_ID	                   ZX_EXTRACT_PKG.DOC_SEQ_ID_TBL;
        GT_DOC_SEQ_NAME	                   ZX_EXTRACT_PKG.DOC_SEQ_NAME_TBL;
        GT_TRX_TYPE_ID	                   ZX_EXTRACT_PKG.TRX_TYPE_ID_TBL;
        GT_LINE_CLASS                      ZX_EXTRACT_PKG.TRX_LINE_CLASS_TBL;
        GT_EVENT_CLASS_CODE	                   ZX_EXTRACT_PKG.EVENT_CLASS_CODE_TBL;
        GT_APPLIED_FROM_ENTITY_CODE	           ZX_EXTRACT_PKG.APPLIED_FROM_ENTITY_CODE_TBL;
        GT_APPLIED_FROM_TRX_ID	           ZX_EXTRACT_PKG.APPLIED_FROM_TRX_ID_TBL;
        GT_APPLIED_FROM_EVENT_CLS_CD	   ZX_EXTRACT_PKG.APPLIED_FROM_EVENT_CLS_CD_TBL;
        GT_APPLIED_TO_ENTITY_CODE	           ZX_EXTRACT_PKG.APPLIED_TO_ENTITY_CODE_TBL;
        GT_APPLIED_TO_TRX_ID	           ZX_EXTRACT_PKG.APPLIED_TO_TRX_ID_TBL;
        GT_APPLIED_TO_EVENT_CLS_CODE	   ZX_EXTRACT_PKG.APPLIED_TO_EVENT_CLS_CODE_TBL;
        GT_APPLIED_TO_TRX_NUMBER	           ZX_EXTRACT_PKG.APPLIED_TO_TRX_NUMBER_TBL;
        GT_BILLING_TRADING_PARTNER_ID	   ZX_EXTRACT_PKG.BILLING_TRADING_PARTNER_ID_TBL;
        GT_BILLING_TP_SITE_ID	           ZX_EXTRACT_PKG.BILLING_TP_SITE_ID_TBL;
        GT_BILLING_TP_ADDRESS_ID	           ZX_EXTRACT_PKG.BILLING_TP_ADDRESS_ID_TBL;
        GT_SHIPPING_TP_ID	   ZX_EXTRACT_PKG.SHIPPING_TP_ID_TBL;
        GT_SHIPPING_TP_SITE_ID	           ZX_EXTRACT_PKG.SHIPPING_TP_SITE_ID_TBL;
        GT_SHIPPING_TP_ADDRESS_ID	           ZX_EXTRACT_PKG.SHIPPING_TP_ADDRESS_ID_TBL;
        GT_BATCH_SOURCE_ID	                   ZX_EXTRACT_PKG.BATCH_SOURCE_ID_TBL;
        GT_TRX_BATCH_SOURCE_DATE                   ZX_EXTRACT_PKG.TRX_BATCH_SOURCE_DATE_TBL;
        GT_TAX_RATE_ID	                   ZX_EXTRACT_PKG.TAX_RATE_ID_TBL;
        GT_TAX_RATE_REG_TYPE_CODE	   ZX_EXTRACT_PKG.TAX_RATE_REG_TYPE_CODE_TBL;
        --GT_TAX_RATE_ID	                   ZX_EXTRACT_PKG.TAX_RATE_ID_TBL;
        GT_PRODUCT_ID	                   ZX_EXTRACT_PKG.PRODUCT_ID_TBL;
        GT_PRODUCT_DESCRIPTION	           ZX_EXTRACT_PKG.PRODUCT_DESCRIPTION_TBL;
        GT_TAXABLE_LINE_SOURCELE	   ZX_EXTRACT_PKG.TAXABLE_LINE_SOURCE_TABLE_TBL;
        GT_TAXABLE_ITEM_SOURCE_ID	           ZX_EXTRACT_PKG.TAXABLE_ITEM_SOURCE_ID_TBL;
        GT_TAX_EXEMPTION_ID	                   ZX_EXTRACT_PKG.TAX_EXEMPTION_ID_TBL;
        GT_TAX_EXCEPTION_ID	                   ZX_EXTRACT_PKG.TAX_EXCEPTION_ID_TBL;
        GT_TAXABLE_LINE_TOTAL_AMOUNT	   ZX_EXTRACT_PKG.TAXABLE_LINE_TOTAL_AMOUNT_TBL;
        GT_TAX_LINE_ID	                   ZX_EXTRACT_PKG.TAX_LINE_ID_TBL;
        GT_TAX_AMT	                           ZX_EXTRACT_PKG.TAX_AMT_TBL;
     --   GT_EXEMPT_ENTERED_AMOUNT	           ZX_EXTRACT_PKG.EXEMPT_ENTERED_AMOUNT_TBL;
        GT_TAX_AMT_FUNCL_CURR	           ZX_EXTRACT_PKG.TAX_AMT_FUNCL_CURR_TBL;
        GT_TAX_LINE_NUMBER	                   ZX_EXTRACT_PKG.TAX_LINE_NUMBER_TBL;
     --   GT_TAXABLE_AMT	                   ZX_EXTRACT_PKG.TAXABLE_AMT_TBL;
      --  GT_TAXABLE_AMT_FUNCL_CURR	           ZX_EXTRACT_PKG.TAXABLE_AMT_FUNCL_CURR_TBL;
     --   GT_ACCTG_DIST_ID	                   ZX_EXTRACT_PKG.ACCTG_DIST_ID_TBL;
     --   GT_XLA_CODE_COMBINATION_ID	           ZX_EXTRACT_PKG.XLA_CODE_COMBINATION_ID_TBL;
        GT_TRX_LINE_ID	                   ZX_EXTRACT_PKG.TRX_LINE_ID_TBL;
        GT_TRX_LINE_QUANTITY	           ZX_EXTRACT_PKG.TRX_LINE_QUANTITY_TBL;
        GT_BILLING_TP_SITE_NAME	           ZX_EXTRACT_PKG.BILLING_TP_SITE_NAME_TBL;
        GT_BILLING_TP_SITE_TX_REG_NUM	   ZX_EXTRACT_PKG.BILLING_TP_SITE_TX_REG_NUM_TBL;
        GT_SHIPPING_TP_SITE_NAME	           ZX_EXTRACT_PKG.SHIPPING_TP_SITE_NAME_TBL;
        GT_SHIPPING_TP_SITE_TX_REG_NUM	   ZX_EXTRACT_PKG.SHIPPING_TP_SITE_TX_RG_NUM_TBL;
        GT_EXEMPT_CERTIFICATE_NUMBER	   ZX_EXTRACT_PKG.EXEMPT_CERTIFICATE_NUMBER_TBL;
        GT_EXEMPT_REASON_CODE	           ZX_EXTRACT_PKG.EXEMPT_REASON_CODE_TBL;
        GT_TAX_EXCEPTION_REASON_CODE	   ZX_EXTRACT_PKG.TAX_EXCEPTION_REASON_CODE_TBL;
        GT_UOM_CODE	                           ZX_EXTRACT_PKG.UOM_CODE_TBL;
        GT_RECONCILIATION_FLAG	           ZX_EXTRACT_PKG.RECONCILIATION_FLAG_TBL;
        GT_INTERNAL_ORGANIZATION_ID	ZX_EXTRACT_PKG.INTERNAL_ORGANIZATION_ID_TBL;
        --GT_CURRENCY_CONVERSION_RATE	           ZX_EXTRACT_PKG.CURRENCY_CONVERSION_RATE_TBL;
        --GT_TRX_CURRENCY_CODE	           ZX_EXTRACT_PKG.TRX_CURRENCY_CODE_TBL;
     --   GT_XLA_ACCOUNTING_DATE	           ZX_EXTRACT_PKG.XLA_ACCOUNTING_DATE_TBL;
        --GT_INTERNAL_ORGANIZATION_ID	   ZX_EXTRACT_PKG.INTERNAL_ORGANIZATION_ID_TBL;
    --   GT_TAXABLE_EXMT_TOT_ENT_AMT	   ZX_EXTRACT_PKG.TAXABLE_EXMT_TOT_ENT_AMT_TBL; --Check this column
        GT_BR_REF_CUSTOMER_TRX_ID	           ZX_EXTRACT_PKG.BR_REF_CUSTOMER_TRX_ID_TBL;
        GT_REVERSE_FLAG	                   ZX_EXTRACT_PKG.REVERSE_FLAG_TBL;
       -- GT_REVERSE_DATE	                    ZX_EXTRACT_PKG.REVERSE_DATE_TBL;
        GT_AMOUNT_APPLIED	                   ZX_EXTRACT_PKG.AMOUNT_APPLIED_TBL;
        GT_TAX_APPLIED	                   ZX_EXTRACT_PKG.TAX_APPLIED_TBL;
        GT_TAX_RATE	                           ZX_EXTRACT_PKG.TAX_RATE_TBL;
        GT_TAX_RATE_CODE	                   ZX_EXTRACT_PKG.TAX_RATE_CODE_TBL;
        GT_TAX_RATE_VAT_TRX_TYPE_CODE	   ZX_EXTRACT_PKG.TAX_RATE_VAT_TRX_TYPE_CODE_TBL;
        GT_TAX_TYPE_CODE	           ZX_EXTRACT_PKG.TAX_TYPE_CODE_TBL;
        GT_TAX_TYPE_MNG	                           ZX_EXTRACT_PKG.TAX_TYPE_MNG_TBL;
        GT_TAX_STATUS_ID                           ZX_EXTRACT_PKG.TAX_STATUS_ID_TBL;
        GT_TAX_RATE_CODE_NAME	           ZX_EXTRACT_PKG.TAX_RATE_CODE_NAME_TBL;
  --      GT_TAX_RATE_CODE_DESCRIPTION	           ZX_EXTRACT_PKG.TAX_RATE_CODE_DESCRIPTION_TBL;
        GT_TRX_NUMBER	                   ZX_EXTRACT_PKG.TRX_NUMBER_TBL;
        GT_TRX_DESCRIPTION	                   ZX_EXTRACT_PKG.TRX_DESCRIPTION_TBL;
        GT_DOC_SEQ_VALUE	                   ZX_EXTRACT_PKG.DOC_SEQ_VALUE_TBL;
        GT_TRX_DATE	                           ZX_EXTRACT_PKG.TRX_DATE_TBL;
        GT_DEPOSIT_DATE	                           ZX_EXTRACT_PKG.DEPOSIT_DATE_TBL;
        GT_TRX_DUE_DATE	                   ZX_EXTRACT_PKG.TRX_DUE_DATE_TBL;
        GT_TRX_SHIPPING_DATE	           ZX_EXTRACT_PKG.TRX_SHIPPING_DATE_TBL;
        GT_TRX_COMMUNICATED_DATE	           ZX_EXTRACT_PKG.TRX_COMMUNICATED_DATE_TBL;
        GT_TRX_CURRENCY_CODE	           ZX_EXTRACT_PKG.TRX_CURRENCY_CODE_TBL;
        GT_CURRENCY_CONVERSION_TYPE	           ZX_EXTRACT_PKG.CURRENCY_CONVERSION_TYPE_TBL;
        GT_CURRENCY_CONVERSION_DATE	           ZX_EXTRACT_PKG.CURRENCY_CONVERSION_DATE_TBL;
        GT_CURRENCY_CONVERSION_RATE	           ZX_EXTRACT_PKG.CURRENCY_CONVERSION_RATE_TBL;
        GT_TRX_SIC_CODE	                   ZX_EXTRACT_PKG.TRX_SIC_CODE_TBL;
        GT_FOB_POINT	                   ZX_EXTRACT_PKG.FOB_POINT_TBL;
        GT_TRX_WAYBILL_NUMBER	           ZX_EXTRACT_PKG.TRX_WAYBILL_NUMBER_TBL;
        GT_TRX_BATCH_SOURCE_NAME	           ZX_EXTRACT_PKG.TRX_BATCH_SOURCE_NAME_TBL;
        GT_TRX_LINE_CLASS                          ZX_EXTRACT_PKG.TRX_LINE_CLASS_TBL;
      --  GT_TRX_TYPE_MEANING	                   ZX_EXTRACT_PKG.TRX_TYPE_MEANING_TBL;
        GT_TRX_TYPE_DESCRIPTION	           ZX_EXTRACT_PKG.TRX_TYPE_DESCRIPTION_TBL;
        GT_TAX_RATE_CODE_DESCRIPTION	   ZX_EXTRACT_PKG.TAX_RATE_CODE_DESCRIPTION_TBL;
      --  GT_TAX_RATE_CODE	                   ZX_EXTRACT_PKG.TAX_RATE_CODE_TBL;
      --  GT_TAX_RATE	                           ZX_EXTRACT_PKG.TAX_RATE_TBL;
        --GT_TAX_RATE_CODE_TYPE_CODE	           ZX_EXTRACT_PKG.TAX_RATE_CODE_TYPE_CODE_TBL;
        --GT_TAX_RATE_CODE_NAME	           ZX_EXTRACT_PKG.TAX_RATE_CODE_NAME_TBL;
        GT_TRX_LINE_DESCRIPTION	           ZX_EXTRACT_PKG.TRX_LINE_DESCRIPTION_TBL;
        GT_TAXABLE_AMT	                   ZX_EXTRACT_PKG.TAXABLE_AMT_TBL;
        GT_TAXABLE_AMT_FUNCL_CURR	           ZX_EXTRACT_PKG.TAXABLE_AMT_FUNCL_CURR_TBL;
     --   GT_GDF_RA_CUST_TRX_LINE_ATT1	   ZX_EXTRACT_PKG.GDF_RA_CUST_TRX_LINE_ATT1_TBL;
      --  GT_GDF_RA_CUST_TRX_LINE_ATT11	   ZX_EXTRACT_PKG.GDF_RA_CUST_TRX_LINE_ATT11_TBL;
        GT_TRX_LINE_NUMBER	                   ZX_EXTRACT_PKG.TRX_LINE_NUMBER_TBL;
        GT_TRX_LINE_TYPE	                   ZX_EXTRACT_PKG.TRX_LINE_TYPE_TBL;
      --  GT_TRX_LINE_TYPE	                   ZX_EXTRACT_PKG.TRX_LINE_TYPE_TBL;
        GT_TAX_LINE_USER_CATEGORY	           ZX_EXTRACT_PKG.TAX_LINE_USER_CATEGORY_TBL;
        GT_TAX_LINE_USER_ATTRIBUTE1	           ZX_EXTRACT_PKG.TAX_LINE_USER_ATTRIBUTE1_TBL;
        GT_TAX_LINE_USER_ATTRIBUTE2	           ZX_EXTRACT_PKG.TAX_LINE_USER_ATTRIBUTE2_TBL;
        GT_TAX_LINE_USER_ATTRIBUTE3	           ZX_EXTRACT_PKG.TAX_LINE_USER_ATTRIBUTE3_TBL;
        GT_TAX_LINE_USER_ATTRIBUTE4	           ZX_EXTRACT_PKG.TAX_LINE_USER_ATTRIBUTE4_TBL;
        GT_TAX_LINE_USER_ATTRIBUTE5	           ZX_EXTRACT_PKG.TAX_LINE_USER_ATTRIBUTE5_TBL;
        GT_TAX_LINE_USER_ATTRIBUTE6	           ZX_EXTRACT_PKG.TAX_LINE_USER_ATTRIBUTE6_TBL;
        GT_TAX_LINE_USER_ATTRIBUTE7	           ZX_EXTRACT_PKG.TAX_LINE_USER_ATTRIBUTE7_TBL;
        GT_TAX_LINE_USER_ATTRIBUTE8	           ZX_EXTRACT_PKG.TAX_LINE_USER_ATTRIBUTE8_TBL;
        GT_TAX_LINE_USER_ATTRIBUTE9	           ZX_EXTRACT_PKG.TAX_LINE_USER_ATTRIBUTE9_TBL;
        GT_TAX_LINE_USER_ATTRIBUTE10	   ZX_EXTRACT_PKG.TAX_LINE_USER_ATTRIBUTE10_TBL;
        GT_TAX_LINE_USER_ATTRIBUTE11	   ZX_EXTRACT_PKG.TAX_LINE_USER_ATTRIBUTE11_TBL;
        GT_TAX_LINE_USER_ATTRIBUTE12	   ZX_EXTRACT_PKG.TAX_LINE_USER_ATTRIBUTE12_TBL;
        GT_TAX_LINE_USER_ATTRIBUTE13	   ZX_EXTRACT_PKG.TAX_LINE_USER_ATTRIBUTE13_TBL;
        GT_TAX_LINE_USER_ATTRIBUTE14	   ZX_EXTRACT_PKG.TAX_LINE_USER_ATTRIBUTE14_TBL;
        GT_TAX_LINE_USER_ATTRIBUTE15	   ZX_EXTRACT_PKG.TAX_LINE_USER_ATTRIBUTE15_TBL;
       -- GT_XLA_ACCOUNTING_DATE	           ZX_EXTRACT_PKG.XLA_ACCOUNTING_DATE_TBL;
        GT_APPLICATION_ID	                   ZX_EXTRACT_PKG.APPLICATION_ID_TBL;
        GT_DOC_EVENT_STATUS	                   ZX_EXTRACT_PKG.DOC_EVENT_STATUS_TBL;
        GT_APPLICATION_DOC_STATUS                  ZX_EXTRACT_PKG.APPLICATION_DOC_STATUS_TBL;
        GT_ESTABLISHMENT_ID	                   ZX_EXTRACT_PKG.ESTABLISHMENT_ID_TBL;
        GT_EXTRACT_SOURCE_LEDGER	           ZX_EXTRACT_PKG.EXTRACT_SOURCE_LEDGER_TBL;
        GT_FUNCTIONAL_CURRECNY_CODE	           ZX_EXTRACT_PKG.FUNCTIONAL_CURRENCY_CODE_TBL;
     --   GT_INTERNAL_ORGANIZATION_ID	           ZX_EXTRACT_PKG.INTERNAL_ORGANIZATION_ID_TBL;
        GT_LEDGER_NAME	                   ZX_EXTRACT_PKG.LEDGER_NAME_TBL;
        GT_MINIMUM_ACCOUNTABLE_UNIT	           ZX_EXTRACT_PKG.MINIMUM_ACCOUNTABLE_UNIT_TBL;
        GT_PRECISION	                   ZX_EXTRACT_PKG.PRECISION_TBL;
        GT_RECEIPT_CLASS_ID	                   ZX_EXTRACT_PKG.RECEIPT_CLASS_ID_TBL;
        GT_ADJUSTED_DOC_APPL_ID	   ZX_EXTRACT_PKG.ADJUSTED_DOC_APPL_ID_TBL;
        GT_ADJUSTED_DOC_DATE	           ZX_EXTRACT_PKG.ADJUSTED_DOC_DATE_TBL;
        GT_ADJUSTED_DOC_ENTITY_CODE	           ZX_EXTRACT_PKG.ADJUSTED_DOC_ENTITY_CODE_TBL;
        GT_ADJUSTED_DOC_EVENT_CLS_CD	   ZX_EXTRACT_PKG.ADJUSTED_DOC_EVENT_CLS_CD_TBL;
        GT_ADJUSTED_DOC_NUMBER	           ZX_EXTRACT_PKG.ADJUSTED_DOC_NUMBER_TBL;
        GT_ADJUSTED_DOC_TRX_ID	           ZX_EXTRACT_PKG.ADJUSTED_DOC_TRX_ID_TBL;
        GT_RELATED_DOC_APPLICATION_ID	   ZX_EXTRACT_PKG.RELATED_DOC_APPLICATION_ID_TBL;
        GT_RELATED_DOC_DATE	                   ZX_EXTRACT_PKG.RELATED_DOC_DATE_TBL;
        GT_RELATED_DOC_ENTITY_CODE	           ZX_EXTRACT_PKG.RELATED_DOC_ENTITY_CODE_TBL;
        GT_RELATED_DOC_EVENT_CLS_CODE	   ZX_EXTRACT_PKG.RELATED_DOC_EVENT_CLS_CODE_TBL;
        GT_RELATED_DOC_NUMBER	           ZX_EXTRACT_PKG.RELATED_DOC_NUMBER_TBL;
        GT_RELATED_DOC_TRX_ID	           ZX_EXTRACT_PKG.RELATED_DOC_TRX_ID_TBL;
        GT_APPLIED_TO_APPLICATION_ID	   ZX_EXTRACT_PKG.APPLIED_TO_APPLICATION_ID_TBL;
        GT_APPLIED_TO_TRX_LINE_ID	           ZX_EXTRACT_PKG.APPLIED_TO_TRX_LINE_ID_TBL;
        GT_BANKING_TP_TAXPAYER_ID	           ZX_EXTRACT_PKG.BANKING_TP_TAXPAYER_ID_TBL;
        GT_REF_DOC_APPLICATION_ID	           ZX_EXTRACT_PKG.REF_DOC_APPLICATION_ID_TBL;
        GT_REF_DOC_ENTITY_CODE	           ZX_EXTRACT_PKG.REF_DOC_ENTITY_CODE_TBL;
        GT_REF_DOC_EVENT_CLASS_CODE	           ZX_EXTRACT_PKG.REF_DOC_EVENT_CLASS_CODE_TBL;
        GT_REF_DOC_LINE_ID	                   ZX_EXTRACT_PKG.REF_DOC_LINE_ID_TBL;
        GT_REF_DOC_LINE_QUANTITY	           ZX_EXTRACT_PKG.REF_DOC_LINE_QUANTITY_TBL;
        GT_REF_DOC_TRX_ID	                   ZX_EXTRACT_PKG.REF_DOC_TRX_ID_TBL;
        GT_DEF_REC_SETTLEMENT_OPT_CD	   ZX_EXTRACT_PKG.DEF_REC_SETTLEMENT_OPT_CD_TBL;
        GT_DEFAULT_TAXATION_COUNTRY	           ZX_EXTRACT_PKG.DEFAULT_TAXATION_COUNTRY_TBL;
        GT_DOCUMENT_SUB_TYPE	           ZX_EXTRACT_PKG.DOCUMENT_SUB_TYPE_TBL;
        GT_TRX_BUSINESS_CATEGORY	           ZX_EXTRACT_PKG.TRX_BUSINESS_CATEGORY_TBL;
        GT_LINE_INTENDED_USE	           ZX_EXTRACT_PKG.LINE_INTENDED_USE_TBL;
        GT_PRODUCT_CATEGORY	                   ZX_EXTRACT_PKG.PRODUCT_CATEGORY_TBL;
        GT_PROD_FISC_CLASSIFICATION	   ZX_EXTRACT_PKG.PROD_FISC_CLASSIFICATION_TBL;
        GT_SUPPLIER_EXCHANGE_RATE	           ZX_EXTRACT_PKG.SUPPLIER_EXCHANGE_RATE_TBL;
        GT_SUPPLIER_TAX_INVOICE_DATE	   ZX_EXTRACT_PKG.SUPPLIER_TAX_INVOICE_DATE_TBL;
        GT_SUPPLIER_TAX_INVOICE_NUM	   ZX_EXTRACT_PKG.SUPPLIER_TAX_INVOICE_NUM_TBL;
        GT_USER_DEFINED_FISC_CLASS	           ZX_EXTRACT_PKG.USER_DEFINED_FISC_CLASS_TBL;
        GT_EXCEPTION_RATE	                   ZX_EXTRACT_PKG.EXCEPTION_RATE_TBL;
        GT_EXEMPT_RATE_MODIFIER	           ZX_EXTRACT_PKG.EXEMPT_RATE_MODIFIER_TBL;
        GT_ORIG_TAX_AMT	                   ZX_EXTRACT_PKG.ORIG_TAX_AMT_TBL;
        GT_ORIG_TAX_AMT_TAX_CURR	           ZX_EXTRACT_PKG.ORIG_TAX_AMT_TAX_CURR_TBL;
        GT_ORIG_TAXABLE_AMT	                   ZX_EXTRACT_PKG.ORIG_TAXABLE_AMT_TBL;
        GT_ORIG_TAXABLE_AMT_TAX_CURR	   ZX_EXTRACT_PKG.ORIG_TAXABLE_AMT_TAX_CURR_TBL;
        GT_RECOVERY_RATE_CODE	           ZX_EXTRACT_PKG.RECOVERY_RATE_CODE_TBL;
        GT_TAX_AMT_TAX_CURR	                   ZX_EXTRACT_PKG.TAX_AMT_TAX_CURR_TBL;
        GT_TAX_APPORTIONMENT_LINE_NUM	   ZX_EXTRACT_PKG.TAX_APPORTIONMENT_LINE_NUM_TBL;
        GT_TAX_CURRENCY_CODE	           ZX_EXTRACT_PKG.TAX_CURRENCY_CODE_TBL;
        GT_TAX_DATE	                           ZX_EXTRACT_PKG.TAX_DATE_TBL;
        GT_TAX_DETERMINE_DATE	           ZX_EXTRACT_PKG.TAX_DETERMINE_DATE_TBL;
        GT_TAX_INVOICE_DATE	                   ZX_EXTRACT_PKG.TAX_INVOICE_DATE_TBL;
        GT_TAX_INVOICE_NUMBER	           ZX_EXTRACT_PKG.TAX_INVOICE_NUMBER_TBL;
        GT_TAX_JURISDICTION_CODE	           ZX_EXTRACT_PKG.TAX_JURISDICTION_CODE_TBL;
        GT_TAX_RATE_VAT_TRX_TYPE_DESC	   ZX_EXTRACT_PKG.TAX_RATE_VAT_TRX_TYPE_DESC_TBL;
        GT_TAX_REGIME_CODE	                   ZX_EXTRACT_PKG.TAX_REGIME_CODE_TBL;
        GT_TAX_STATUS_CODE	                   ZX_EXTRACT_PKG.TAX_STATUS_CODE_TBL;
        GT_BILLING_TP_PARTY_NUMBER	           ZX_EXTRACT_PKG.BILLING_TP_PARTY_NUMBER_TBL;
        GT_BILLING_TP_TAX_REG_NUM	           ZX_EXTRACT_PKG.BILLING_TP_TAX_REG_NUM_TBL;
        GT_BILLING_TP_TAXPAYER_ID	           ZX_EXTRACT_PKG.BILLING_TP_TAXPAYER_ID_TBL;
        GT_BILLING_TP_NAME	   ZX_EXTRACT_PKG.BILLING_TP_NAME_TBL;
        GT_BILLING_TP_NUMBER	   ZX_EXTRACT_PKG.BILLING_TP_NUMBER_TBL;
        GT_SHIP_FROM_PTY_TAX_PROF_ID	   ZX_EXTRACT_PKG.SHIP_FROM_PTY_TAX_PROF_ID_TBL;
        GT_SHIP_FROM_SITE_TAX_PROF_ID	   ZX_EXTRACT_PKG.SHIP_FROM_SITE_TAX_PROF_ID_TBL;
        GT_SHIP_TO_PARTY_TAX_PROF_ID	   ZX_EXTRACT_PKG.SHIP_TO_PARTY_TAX_PROF_ID_TBL;
        GT_SHIP_TO_SITE_TAX_PROF_ID	           ZX_EXTRACT_PKG.SHIP_TO_SITE_TAX_PROF_ID_TBL;
        GT_BILL_TO_PTY_TAX_PROF_ID	   ZX_EXTRACT_PKG.BILL_FROM_PTY_TAX_PROF_ID_TBL;
        GT_BILL_TO_SITE_TAX_PROF_ID	   ZX_EXTRACT_PKG.BILL_FROM_SITE_TAX_PROF_ID_TBL;
        GT_HQ_ESTB_REG_NUMBER	           ZX_EXTRACT_PKG.HQ_ESTB_REG_NUMBER_TBL;
        GT_LEGAL_ENTITY_TAX_REG_NUM	   ZX_EXTRACT_PKG.LEGAL_ENTITY_TAX_REG_NUM_TBL;
        GT_OWN_HQ_PARTY_SITE_PROF_ID	   ZX_EXTRACT_PKG.OWN_HQ_PARTY_SITE_PROF_ID_TBL;
        GT_OWN_HQ_PARTY_TAX_PROF_ID	           ZX_EXTRACT_PKG.OWN_HQ_PARTY_TAX_PROF_ID_TBL;
        GT_PORT_OF_ENTRY_CODE	           ZX_EXTRACT_PKG.PORT_OF_ENTRY_CODE_TBL;
        GT_REGISTRATION_PARTY_TYPE	           ZX_EXTRACT_PKG.REGISTRATION_PARTY_TYPE_TBL;
        GT_CANCEL_FLAG	                   ZX_EXTRACT_PKG.CANCEL_FLAG_TBL;
        GT_HISTORICAL_FLAG	                   ZX_EXTRACT_PKG.HISTORICAL_FLAG_TBL;
        GT_MRC_TAX_LINE_FLAG	           ZX_EXTRACT_PKG.MRC_TAX_LINE_FLAG_TBL;
        GT_POSTED_FLAG	                   ZX_EXTRACT_PKG.POSTED_FLAG_TBL;
        GT_REPORTING_ONLY_FLAG	           ZX_EXTRACT_PKG.REPORTING_ONLY_FLAG_TBL;
        GT_TAX_AMT_INCLUDED_FLAG	           ZX_EXTRACT_PKG.TAX_AMT_INCLUDED_FLAG_TBL;
        GT_TAX_ONLY_LINE_FLAG	                   ZX_EXTRACT_PKG.TAX_ONLY_FLAG_TBL;
        GT_AR_CASH_RECEIPT_REV_STATUS            ZX_EXTRACT_PKG.AR_CASH_RECEIPT_REV_STAT_TBL;
        GT_AR_CASH_RECEIPT_REV_DATE            ZX_EXTRACT_PKG.AR_CASH_RECEIPT_REV_DATE_TBL;
        GT_EXTRACT_REPORT_LINE_NUMBER         ZX_EXTRACT_PKG.EXTRACT_REPORT_LINE_NUMBER_TBL;
        GT_AR_CASH_RCPT_RVRS_DATE              ZX_EXTRACT_PKG.AR_CASH_RCPT_RVRS_DATE_TBL;
        GT_AR_CASH_RCPT_RVRS_STATUS            ZX_EXTRACT_PKG.AR_CASH_RCPT_RVRS_STATUS_TBL;
        GT_ACCTD_AMOUNT_CR                     ZX_EXTRACT_PKG.ACCTD_AMOUNT_CR_TBL;
        GT_ACCTD_AMOUNT_DR                     ZX_EXTRACT_PKG.ACCTD_AMOUNT_DR_TBL;
        GT_REC_APPLICATION_STATUS              ZX_EXTRACT_PKG.REC_APPLICATION_STATUS_TBL;
        GT_ACCOUNT_CLASS		 ZX_EXTRACT_PKG.ACCOUNT_CLASS_TBL;
        GT_LATEST_REC_FLAG		 ZX_EXTRACT_PKG.LATEST_REC_FLAG_TBL;

    -- New columns added for US Sales Tax Report--
    GT_EVENT_CLASS_MAPPING_ID              ZX_EXTRACT_PKG.EVENT_CLASS_MAPPING_ID_TBL;
    GT_TRX_LEVEL_TYPE                      ZX_EXTRACT_PKG.TRX_LEVEL_TYPE_TBL;
    GT_PLACE_OF_SUPPLY_TYPE_CODE           ZX_EXTRACT_PKG.PLACE_OF_SUPPLY_TYPE_CODE_TBL;
    GT_POA_LOCATION_ID                     ZX_EXTRACT_PKG.POA_LOCATION_ID_TBL;
    GT_POO_LOCATION_ID                     ZX_EXTRACT_PKG.POO_LOCATION_ID_TBL;
    GT_DEF_PLACE_OF_SUP_TYPE_CODE       ZX_EXTRACT_PKG.DEF_PLACE_OF_SUP_TYPE_CODE_TBL;
    GT_LINE_AMT                            ZX_EXTRACT_PKG.TRX_LINE_AMT_TBL;
    GT_TAX_PROVIDER_ID                     ZX_EXTRACT_PKG.TAX_PROVIDER_ID_TBL;

-- Accounting global variables declarations

    GT_ACTG_EXT_LINE_ID         ZX_EXTRACT_PKG.ACTG_EXT_LINE_ID_TBL;
    GT_ACTG_EVENT_TYPE_CODE             ZX_EXTRACT_PKG.ACTG_EVENT_TYPE_CODE_TBL;
    GT_ACTG_EVENT_NUMBER                ZX_EXTRACT_PKG.ACTG_EVENT_NUMBER_TBL;
    GT_ACTG_EVENT_STATUS_FLAG           ZX_EXTRACT_PKG.ACTG_EVENT_STATUS_FLAG_TBL;
    GT_ACTG_CATEGORY_CODE               ZX_EXTRACT_PKG.ACTG_CATEGORY_CODE_TBL;
    GT_ACCOUNTING_DATE          ZX_EXTRACT_PKG.ACCOUNTING_DATE_TBL;
    GT_GL_TRANSFER_FLAG         ZX_EXTRACT_PKG.GL_TRANSFER_FLAG_TBL;
    GT_GL_TRANSFER_RUN_ID               ZX_EXTRACT_PKG.GL_TRANSFER_RUN_ID_TBL;
    GT_ACTG_HEADER_DESCRIPTION          ZX_EXTRACT_PKG.ACTG_HEADER_DESCRIPTION_TBL;
    GT_ACTG_LINE_NUM            ZX_EXTRACT_PKG.ACTG_LINE_NUM_TBL;
    GT_ACTG_LINE_TYPE_CODE              ZX_EXTRACT_PKG.ACTG_LINE_TYPE_CODE_TBL;
    GT_ACTG_LINE_DESCRIPTION            ZX_EXTRACT_PKG.ACTG_LINE_DESCRIPTION_TBL;
    GT_ACTG_STAT_AMT            ZX_EXTRACT_PKG.ACTG_STAT_AMT_TBL;
    GT_ACTG_ERROR_CODE          ZX_EXTRACT_PKG.ACTG_ERROR_CODE_TBL;
    GT_GL_TRANSFER_CODE         ZX_EXTRACT_PKG.GL_TRANSFER_CODE_TBL;
    GT_ACTG_DOC_SEQUENCE_ID             ZX_EXTRACT_PKG.ACTG_DOC_SEQUENCE_ID_TBL;
    GT_ACTG_DOC_SEQUENCE_NAME           ZX_EXTRACT_PKG.ACTG_DOC_SEQUENCE_NAME_TBL;
    GT_ACTG_DOC_SEQUENCE_VALUE          ZX_EXTRACT_PKG.ACTG_DOC_SEQUENCE_VALUE_TBL;
    GT_ACTG_PARTY_ID            ZX_EXTRACT_PKG.ACTG_PARTY_ID_TBL;
    GT_ACTG_PARTY_SITE_ID               ZX_EXTRACT_PKG.ACTG_PARTY_SITE_ID_TBL;
    GT_ACTG_PARTY_TYPE          ZX_EXTRACT_PKG.ACTG_PARTY_TYPE_TBL;
    GT_ACTG_EVENT_ID            ZX_EXTRACT_PKG.ACTG_EVENT_ID_TBL;
    GT_ACTG_HEADER_ID           ZX_EXTRACT_PKG.ACTG_HEADER_ID_TBL;
    GT_ACTG_SOURCE_ID           ZX_EXTRACT_PKG.ACTG_SOURCE_ID_TBL;
    GT_ACTG_SOURCE_TABLE                ZX_EXTRACT_PKG.ACTG_SOURCE_TABLE_TBL;
    GT_ACTG_LINE_CCID           ZX_EXTRACT_PKG.ACTG_LINE_CCID_TBL;
    GT_PERIOD_NAME              ZX_EXTRACT_PKG.PERIOD_NAME_TBL;

  /*  GT_CREATED_BY               ZX_EXTRACT_PKG.CREATED_BY_TBL;
    GT_CREATION_DATE            ZX_EXTRACT_PKG.CREATION_DATE_TBL;
    GT_LAST_UPDATED_BY          ZX_EXTRACT_PKG.LAST_UPDATED_BY_TBL;
    GT_LAST_UPDATE_DATE         ZX_EXTRACT_PKG.LAST_UPDATE_DATE_TBL;
    GT_LAST_UPDATE_LOGIN                ZX_EXTRACT_PKG.LAST_UPDATE_LOGIN_TBL;
    GT_PROGRAM_APPLICATION_ID           ZX_EXTRACT_PKG.PROGRAM_APPLICATION_ID_TBL;
    GT_PROGRAM_ID               ZX_EXTRACT_PKG.PROGRAM_ID_TBL;
    GT_PROGRAM_LOGIN_ID         ZX_EXTRACT_PKG.PROGRAM_LOGIN_ID_TBL;
*/
    G_CREATED_BY                      NUMBER(15);
    G_CREATION_DATE                   DATE;
    G_LAST_UPDATED_BY                 NUMBER(15);
    G_LAST_UPDATE_DATE                DATE;
    G_LAST_UPDATE_LOGIN               NUMBER(15);
    G_PROGRAM_APPLICATION_ID          NUMBER;
    G_PROGRAM_ID                      NUMBER;
    G_PROGRAM_LOGIN_ID                NUMBER;

-- Global Parameters

       G_REPORTING_LEVEL                VARCHAR2(30);
       G_REPORTING_CONTEXT		VARCHAR2(30);
-- apai       G_LEGAL_ENTITY_LEVEL		VARCHAR2(30);
       G_LEGAL_ENTITY_ID		NUMBER;
       G_SUMMARY_LEVEL                  VARCHAR2(30);
       G_LEDGER_ID		        NUMBER;
       G_REGISTER_TYPE		        VARCHAR2(30);
       G_PRODUCT		        VARCHAR2(30);
       G_MATRIX_REPORT		        VARCHAR2(30);
       G_CURRENCY_CODE_LOW		VARCHAR2(30);
       G_CURRENCY_CODE_HIGH		VARCHAR2(30);
       G_INCLUDE_AP_STD_TRX_CLASS	VARCHAR2(1);
       G_INCLUDE_AP_DM_TRX_CLASS	VARCHAR2(1);
       G_INCLUDE_AP_CM_TRX_CLASS	VARCHAR2(1);
       G_INCLUDE_AP_PREP_TRX_CLASS	VARCHAR2(1);
       G_INCLUDE_AP_MIX_TRX_CLASS	VARCHAR2(1);
       G_INCLUDE_AP_EXP_TRX_CLASS       VARCHAR2(1);
       G_INCLUDE_AP_INT_TRX_CLASS	VARCHAR2(1);
       G_INCLUDE_AR_INV_TRX_CLASS       VARCHAR2(1);
       G_INCLUDE_AR_APPL_TRX_CLASS	VARCHAR2(1);
       G_INCLUDE_AR_ADJ_TRX_CLASS	VARCHAR2(1);
       G_INCLUDE_AR_MISC_TRX_CLASS	VARCHAR2(1);
       G_INCLUDE_AR_BR_TRX_CLASS	VARCHAR2(1);
       G_INCLUDE_GL_MANUAL_LINES        VARCHAR2(30);
       G_TRX_NUMBER_LOW		        VARCHAR2(30);
       G_TRX_NUMBER_HIGH		VARCHAR2(30);
       G_EXTRACT_REPORT_LINE_NUMBER     NUMBER;
       G_AR_TRX_PRINTING_STATUS         VARCHAR2(30);
       G_AR_EXEMPTION_STATUS		VARCHAR2(30);
       G_GL_DATE_LOW		        DATE;
       G_GL_DATE_HIGH		        DATE;
       G_TRX_DATE_LOW		        DATE;
       G_TRX_DATE_HIGH		        DATE;
       G_GL_PERIOD_NAME_LOW		VARCHAR2(15);
       G_GL_PERIOD_NAME_HIGH		VARCHAR2(15);
       G_TRX_DATE_PERIOD_NAME_LOW	VARCHAR2(15);
       G_TRX_DATE_PERIOD_NAME_HIGH	VARCHAR2(15);
       g_tax_jurisdiction_code             VARCHAR2(30);
       g_first_party_tax_reg_num           VARCHAR2(30);
       G_TAX_REGIME_CODE		VARCHAR2(30);
       G_TAX		                VARCHAR2(30);
       G_TAX_STATUS_CODE		VARCHAR2(30);
       G_TAX_RATE_CODE_LOW                 VARCHAR2(30);
       G_TAX_RATE_CODE_HIGH                        VARCHAR2(30);
       G_TAX_TYPE_CODE_LOW                 VARCHAR2(30);
       G_TAX_TYPE_CODE_HIGH                VARCHAR2(30);
       G_DOCUMENT_SUB_TYPE              VARCHAR2(30);
       G_TRX_BUSINESS_CATEGORY		VARCHAR2(30);
       G_TAX_INVOICE_DATE_LOW		VARCHAR2(30);
       G_TAX_INVOICE_DATE_HIGH		VARCHAR2(30);
       G_POSTING_STATUS		        VARCHAR2(30);
       G_EXTRACT_ACCTED_TAX_LINES       VARCHAR2(30);
       G_INCLUDE_ACCOUNTING_SEGMENTS	VARCHAR2(1);
       G_BALANCING_SEGMENT_LOW		VARCHAR2(30);
       G_BALANCING_SEGMENT_HIGH	        VARCHAR2(30);
       G_INCLUDE_DISCOUNTS		VARCHAR2(1);
       G_EXTRACT_STARTING_LINE_NUM       NUMBER;
       G_REQUEST_ID                     NUMBER;
       G_REPORT_NAME		        VARCHAR2(30);
       G_VAT_TRANSACTION_TYPE_CODE	VARCHAR2(30);
       G_INCLUDE_FULLY_NR_TAX_FLAG	VARCHAR2(30);
       G_MUNICIPAL_TAX_TYPE_CODE_LOW	VARCHAR2(30);
       G_MUNICIPAL_TAX_TYPE_CODE_HIGH	VARCHAR2(30);
       G_PROV_TAX_TYPE_CODE_LOW	        VARCHAR2(30);
       G_PROV_TAX_TYPE_CODE_HIGH        VARCHAR2(30);
       G_EXCISE_TAX_TYPE_CODE_LOW	VARCHAR2(30);
       G_EXCISE_TAX_TYPE_CODE_HIGH	VARCHAR2(30);
       G_NON_TAXABLE_TAX_TYPE_CODE	VARCHAR2(30);
       G_PER_TAX_TYPE_CODE_LOW		VARCHAR2(30);
       G_PER_TAX_TYPE_CODE_HIGH	        VARCHAR2(30);
       G_VAT_TAX_TYPE_CODE		VARCHAR2(30);
       G_EXCISE_TAX		        VARCHAR2(30);
       G_VAT_ADDITIONAL_TAX		VARCHAR2(30);
       G_VAT_NON_TAXABLE_TAX            VARCHAR2(30);
       G_VAT_NOT_TAX		        VARCHAR2(30);
       G_VAT_PERCEPTION_TAX		VARCHAR2(30);
       G_VAT_TAX		        VARCHAR2(30);
       G_INC_SELF_WD_TAX		VARCHAR2(30);
       G_EXCLUDING_TRX_LETTER           VARCHAR2(30);
       G_TRX_LETTER_LOW		        VARCHAR2(30);
       G_TRX_LETTER_HIGH		VARCHAR2(30);
       G_INCLUDE_REFERENCED_SOURCE	VARCHAR2(30);
       G_PARTY_NAME		        VARCHAR2(30);
       G_BATCH_NAME		        VARCHAR2(30);
       G_BATCH_DATE_LOW                 DATE;
       G_BATCH_DATE_HIGH                DATE;
       G_BATCH_SOURCE_ID		VARCHAR2(30);
       G_ADJUSTED_DOC_FROM		VARCHAR2(30);
       G_ADJUSTED_DOC_TO		VARCHAR2(30);
       G_STANDARD_VAT_TAX_RATE		VARCHAR2(30);
       G_MUNICIPAL_TAX		        VARCHAR2(30);
       G_PROVINCIAL_TAX		        VARCHAR2(30);
       G_TAX_ACCOUNT_LOW		VARCHAR2(30);
       G_TAX_ACCOUNT_HIGH		VARCHAR2(30);
       G_EXP_CERT_DATE_FROM		DATE;
       G_EXP_CERT_DATE_TO		DATE;
       G_EXP_METHOD		        VARCHAR2(30);
       G_PRINT_COMPANY_INFO		VARCHAR2(30);
       G_REPRINT                        VARCHAR2(1);
       G_ERRBUF			        VARCHAR2(30);
       G_AR_RETCODE		        VARCHAR2(30);
       G_TRX_CLASS                      VARCHAR2(30);
       G_CHART_OF_ACCOUNTS_ID           number;

 g_current_runtime_level           NUMBER;
  g_level_statement       CONSTANT  NUMBER  := FND_LOG.LEVEL_STATEMENT;
  g_level_procedure       CONSTANT  NUMBER  := FND_LOG.LEVEL_PROCEDURE;
  g_level_event           CONSTANT  NUMBER  := FND_LOG.LEVEL_EVENT;
  g_level_unexpected      CONSTANT  NUMBER  := FND_LOG.LEVEL_UNEXPECTED;
  g_error_buffer                  VARCHAR2(200);
  g_retcode    NUMBER   := 2;

/*===========================================================================+
 | PROCEDURE                                                                 |
 |   INSERT_TAX_DATA                                                     |
 |                                                                           |
 | DESCRIPTION                                                               |
 |    This procedure takes the input parameters from ZX_EXTRACT_PKG         |
 |    and builds  dynamic SQL statement clauses based on the parameters,     |
 |    supplies them as output parameters.                                    |
 |                                                                           |
 | SCOPE - Public                                                            |
 |                                                                           |
 | NOTES                                                                     |
 |                                                                           |
 | MODIFICATION HISTORY                                                      |
 |   04-Mar-04  Ling Zhang   Created                                         |
 |                                                                           |
 +===========================================================================*/

PROCEDURE INSERT_TAX_DATA (
  P_MRC_SOB_TYPE             IN            VARCHAR2,
  P_TRL_GLOBAL_VARIABLES_REC IN OUT NOCOPY ZX_EXTRACT_PKG.TRL_GLOBAL_VARIABLES_REC_TYPE
) IS

BEGIN

     g_current_runtime_level := FND_LOG.G_CURRENT_RUNTIME_LEVEL;
    g_retcode := P_TRL_GLOBAL_VARIABLES_REC.RETCODE;
    IF (g_level_procedure >= g_current_runtime_level ) THEN
        FND_LOG.STRING(g_level_procedure, 'ZX.TRL.ZX_AR_ACTG_EXTRACT_PKG.INSERT_TAX_DATA.BEGIN',
                                      'ZX_AR_ACTG_EXTRACT_PKG: INSERT_TAX_DATA(+)');
    END IF;

  ASSIGN_AR_GLOBAL_VARIABLES(
    P_TRL_GLOBAL_VARIABLES_REC => P_TRL_GLOBAL_VARIABLES_REC
  );

  IF g_retcode <> 2 THEN
    BUILD_SQL( P_MRC_SOB_TYPE => P_MRC_SOB_TYPE);
  END IF;
  IF g_retcode <> 2 THEN
    FETCH_AR_TRX_INFO;
  END IF;

  -- assign the output global variable
     P_TRL_GLOBAL_VARIABLES_REC.EXTRACT_REPORT_LINE_NUMBER := G_EXTRACT_REPORT_LINE_NUMBER;

    IF (g_level_procedure >= g_current_runtime_level ) THEN
        FND_LOG.STRING(g_level_procedure, 'ZX.TRL.ZX_AR_ACTG_EXTRACT_PKG.INSERT_TAX_DATA.END',
                                      'ZX_AR_ACTG_EXTRACT_PKG: INSERT_TAX_DATA(-)');
    END IF;


 EXCEPTION
  WHEN OTHERS THEN
    g_error_buffer  := sqlcode || ': ' || SUBSTR(SQLERRM, 1, 80);
    FND_MESSAGE.SET_NAME('ZX','GENERIC_MESSAGE');
    FND_MESSAGE.SET_TOKEN('GENERIC_TEXT','INSERT_TAX_DATA- '|| g_error_buffer);
    FND_MSG_PUB.Add;
    IF (g_level_unexpected >= g_current_runtime_level ) THEN
      FND_LOG.STRING(g_level_unexpected,
                     'ZX.TRL.ZX_EXTRACT_PKG.INSERT_TAX_DATA',
                      g_error_buffer);
    END IF;
    P_TRL_GLOBAL_VARIABLES_REC.RETCODE := 2;


END INSERT_TAX_DATA;

/*===========================================================================+
 | PROCEDURE                                                                 |
 |   build_sql                                                               |
 |                                                                           |
 | DESCRIPTION                                                               |
 |    This procedure of the ZX_AR_ACTG_EXTRACT_PKG, takes the input parameters       |
 |    and builds a dynamic SQL statement based on the parameters, and        |
 |    supplies it as an output parameter.                                    |
 |                                                                           |
 | SCOPE - Public                                                            |
 |                                                                           |
 | NOTES                                                                     |
 |                                                                           |
 | MODIFICATION HISTORY                                                      |
 |   15-July-99 Nilesh Patel Created                                         |
 |   18-Apr-02  Bug 2322350                                                  |
 |   30-APR-02  Bug 2111178 :Modified the code due to performance problems   |
 |                           when running TRL in AR,Modified the code to have|
 |                           bind variables ,instead of hard coded dates.    |
 |   16-SEP-03  Phong La     Changed for Primary and Reporting SOB types for |
 |                           MRC changes                                     |
 |   06-OCT-03  Phong La     Changed and added Exchange rate, Min acct unit, |
 |                           Precision, Balancing segment value, Org id,     |
 |                           Gl date, Gl posted date, Tax class, Taxable     |
 |                           amount, tax entered amount, Exempt entered      |
 |                           amount, tax exemption id  and others            |
 |   04-Mar-04  Ling Zhang   Change the signature. Original passing-in params|
 |                           defined as public variable to be shared among   |
 |                           the fetch and insert procedures.                |
 +===========================================================================*/

PROCEDURE BUILD_SQL(
    P_MRC_SOB_TYPE                  IN VARCHAR2
) IS

  L_WHERE_REPORTING_CONTEXT_TRXH  varchar2(500);
  L_WHERE_REPORTING_CONTEXT_VAT   varchar2(500);
  L_WHERE_REPORTING_CONTEXT_EX    varchar2(500);
  L_WHERE_REPORTING_CONTEXT_TYP   varchar2(500);
  L_WHERE_REPORTING_CONTEXT_BS    varchar2(500);
  L_WHERE_REPORTING_CONTEXT_ADJ   varchar2(500);
  L_WHERE_REPORTING_CONTEXT_CS    varchar2(500);
  L_WHERE_REPORTING_CONTEXT_TH    varchar2(500);
  L_WHERE_AR_TRX_PRINTING_STATUS  varchar2(200);
  L_WHERE_REGISTER_TYPE_AR_TRX    varchar2(200);
  L_WHERE_REGISTER_TYPE_AR_TRXCM  varchar2(200);
  L_WHERE_REG_TYPE_TRXCM_ARDTAX   varchar2(200);
  L_WHERE_REGISTER_TYPE_AR_APP    varchar2(200);
  L_WHERE_REGISTER_TYPE_AR_ADJ    varchar2(200);
  L_WHERE_REGISTER_TYPE_AR_MISC   varchar2(200);
  L_WHERE_REGISTER_TYPE_AR_BR     varchar2(200);
  L_WHERE_TAX_CLASS               varchar2(200);
  L_WHERE_PRODUCT_AR              varchar2(200);
  L_WHERE_GL_DATE_INV             varchar2(200);
  L_WHERE_GL_DATE_APP             varchar2(200);
  L_WHERE_GL_DATE_ADJ             varchar2(200);
  L_WHERE_GL_DATE_MISC            varchar2(200);
  L_WHERE_GL_DATE_BR              varchar2(200);
  L_WHERE_TRX_DATE_INV            varchar2(200);
  L_WHERE_TRX_DATE_CM             varchar2(200);
  L_WHERE_TRX_DATE_APP            varchar2(200);
  L_WHERE_TRX_DATE_ADJ            varchar2(200);
  L_WHERE_TRX_DATE_MISC           varchar2(200);
  L_WHERE_TRX_DATE_BR             varchar2(200);
  L_WHERE_TRX_CLASS_INV_CM_DM     varchar2(200);
  L_WHERE_TRX_CLASS_CM            varchar2(200);
  L_WHERE_TRX_CLASS_APP_DISC      varchar2(200);
  L_WHERE_TRX_CLASS_ADJ_FINCHRG   varchar2(200);
  L_WHERE_TRX_CLASS_MISC          varchar2(200);
  L_WHERE_TRX_CLASS_BR            varchar2(200);
  L_WHERE_TAX_CODE                varchar2(200);
  L_WHERE_CURRENCY_CODE_INV       varchar2(200);
  L_WHERE_CURRENCY_CODE_APP        varchar2(200);
  L_WHERE_POSTING_STATUS_TRX      varchar2(200);
  L_WHERE_POSTING_STATUS_ADJ      varchar2(200);
  L_WHERE_POSTING_STATUS_APP      varchar2(200);
  L_WHERE_POSTING_STATUS_BR       varchar2(200);
  L_WHERE_POSTING_STATUS_CM_REC   varchar2(200);
  L_WHERE_EXEMPTION_STATUS        varchar2(200);
  L_WHERE_EXEMPT_STATUS_OTH       varchar2(200);
  L_WHERE_GBL_TAX_DATE            varchar2(200);
  L_WHERE_GBL_TAX_DATE_C          varchar2(200);
  L_WHERE_GBL_CM_TAX_DATE         varchar2(200); -- Bug 2322350
  L_WHERE_BATCH_SOURCE_NAME       varchar2(200);
  L_WHERE_BATCH_SOURCE_NAME_C     varchar2(200);
  L_WHERE_TAX_CODE_VAT_TRX_TYPE   varchar2(200);
  L_WHERE_TAX_CODE_TYPE           varchar2(200);
  L_WHERE_TP_TAX_REG_NUM          varchar2(200);
  L_WHERE_TP_TAX_REG_NUM_C        varchar2(200);
  L_WHERE_TP_TAXPAYER_ID          varchar2(1000); -- apai 0220
  L_WHERE_TP_TAXPAYER_ID_C        varchar2(1000); -- apai 0220
  L_WHERE_TP_NAME_AR              varchar2(1000); -- apai 0220
  L_WHERE_TRX_NUMBER_INV          varchar2(1000); -- apai 0220
  L_WHERE_TRX_NUMBER_CM           varchar2(1000); -- apai 0220
  L_WHERE_TRX_NUMBER_APP          varchar2(1000); -- apai 0220
  L_WHERE_TRX_NUMBER_ADJ          varchar2(1000); -- apai 0220
  L_WHERE_TRX_NUMBER_BR           varchar2(1000); -- apai 0220
  L_WHERE_TRX_NUMBER_MISC          varchar2(1000); -- apai 0220
  L_WHERE_CHART_OF_ACCOUNTS_ID    varchar2(1000); -- apai 0220
  L_CHART_OF_ACCOUNTS_ID          number(15);
  L_WHERE_GL_FLEX                 varchar2(200);
  L_WHERE_GDF_AR_TAX_CODES_ATT1   varchar2(500);
  L_WHERE_GDF_RA_CUST_TRX_ATT1    varchar2(200);
  L_WHERE_GDF_RA_CUST_TRX_ATT1_C  varchar2(200);
  L_WHERE_CUST_TRX_LINES_ATT1     varchar2(200);
  L_WHERE_CUST_TRX_LINES_ATT1_C   varchar2(200);
  L_WHERE_CUST_TRX_LINES_ATT2     varchar2(200);
  L_WHERE_CUST_TRX_LINES_ATT2_C   varchar2(200);
  L_WHERE_CUST_TRX_LINES_ATT3     varchar2(200);
  L_WHERE_CUST_TRX_LINES_ATT3_C   varchar2(200);
  L_WHERE_CUST_TRX_LINES_ATT4     varchar2(200);
  L_WHERE_CUST_TRX_LINES_ATT4_C   varchar2(200);
  L_WHERE_CUST_TRX_LINES_ATT5     varchar2(200);
  L_WHERE_CUST_TRX_LINES_ATT5_C   varchar2(200);
  L_WHERE_TRX_LINES_ATT1_IS_NULL  varchar2(200);
  L_WHERE_TRX_LINES_ATT1_IS_NL_C  varchar2(200);
  L_WHERE_SPECIAL_PL_HU           varchar2(5000);
  L_WHERE_SPECIAL_PL_HU_C         varchar2(5000);
  L_WHERE_AR_ADJUSTMENTS_ATT1     varchar2(300);
  L_WHERE_AR_ADJUSTMENTS_ATT2     varchar2(300);
  L_WHERE_AR_ADJUSTMENTS_ATT3     varchar2(300);
  L_WHERE_AR_ADJUSTMENTS_ATT4     varchar2(300);
  L_WHERE_AR_ADJUSTMENTS_ATT5     varchar2(300);
  L_WHERE_AR_ADJ_ATT1_IS_NULL     varchar2(300);
  L_WHERE_SPECIAL_PL_HU_ADJ       varchar2(5000);
  L_REPORTING_CONTEXT_VAL         varchar2(15);
  L_INV_ORGANIZATION_ID           NUMBER;
  L_WHERE_INV_ORG_ID              VARCHAR2(200);
  L_WHERE_SET_OF_BOOKS_ID         VARCHAR2(200);
  L_TRX_DATE_LOW                  DATE;
  L_TRX_DATE_HIGH                 DATE;
  L_IS_DEFERRED_TAX_USED_STMT     VARCHAR2(4000);
  L_IS_DEFERRED_TAX_USED          NUMBER;
  -- Added by apai
  L_WHERE_TRADING_PARTNER_ID      varchar2(1000); -- apai 0220
  L_WHERE_TRADING_PARTNER_ID_C    varchar2(1000); -- apai 0220
  L_WHERE_TAX_ACCOUNT_FLEX        varchar2(1000); -- apai 0220
 L_WHERE_LEDGER_ID                 VARCHAR2(1000);
 L_WHERE_LEDGER_ID_MISC                 VARCHAR2(1000);
L_WHERE_LEGAL_ENTITY_ID           VARCHAR2(1000);
L_WHERE_LEGAL_ENTITY_ID_MISC           VARCHAR2(1000);
L_WHERE_DOCUMENT_SUB_TYPE         VARCHAR2(1000);
L_WHERE_TRX_BUSINESS_CATEGORY     VARCHAR2(1000);
L_WHERE_TAX_INVOICE_DATE          varchar2(1000);
L_WHERE_TAX_JURISDICTION_CODE     varchar2(1000);
L_WHERE_TAX_REGIME_CODE           varchar2(1000);
L_WHERE_TAX                        varchar2(1000);
L_WHERE_TAX_STATUS_CODE            varchar2(1000);
L_WHERE_TAX_JURIS_CODE_OTH     varchar2(1000);
L_WHERE_TAX_REGIME_CODE_OTH           varchar2(1000);
L_WHERE_TAX_OTH                         varchar2(1000);
L_WHERE_TAX_STATUS_CODE_OTH            varchar2(1000);
L_WHERE_FIRST_PTY_TAX_REG_NUM      varchar2(1000);
L_WHERE_FIRST_PTY_TAX_REG_OTH      varchar2(1000);
L_WHERE_TAX_RATE_CODE               varchar2(1000);
L_WHERE_TAX_TYPE_CODE             varchar2(1000);
L_WHERE_CURRENCY_CODE             varchar2(1000);
L_WHERE_BATCH_NAME                varchar2(1000);
--L_WHERE_SOURCE_NAME
  L_WHERE_TAX_LTE_OTHER_CLS        varchar2(1000);
  L_WHERE_TAX_LTE                 varchar2(1000);
  --
  -- MRC changes
  --
  L_TBL_NAME_AR_DIST_ALL              VARCHAR2(30);
  L_TBL_NAME_AR_DIST                  VARCHAR2(30);
  L_TBL_NAME_AR_TRX_HIST_ALL          VARCHAR2(30);
  L_TBL_NAME_AR_TRX_HIST              VARCHAR2(30);
  L_TBL_NAME_CUSTOMER_TRX_ALL         VARCHAR2(30);
  L_TBL_NAME_CUSTOMER_TRX             VARCHAR2(30);
  L_TBL_NAME_AR_ADJUSTMENTS_ALL       VARCHAR2(30);
  L_TBL_NAME_AR_ADJUSTMENTS           VARCHAR2(30);
  L_TBL_AR_RECEIVABLE_APPS_ALL        VARCHAR2(30);
  L_TBL_AR_RECEIVABLE_APPS            VARCHAR2(30);
  L_TBL_CUS_TRX_LINE_GL_DIST_ALL      VARCHAR2(30);
  L_TBL_CUS_TRX_LINE_GL_DIST          VARCHAR2(30);
  -- added by lxzhang
  L_TBL_AR_MISC_CASH_DIST_ALL         VARCHAR2(30);

  --
  --  group by statements
  --
  L_GROUP_BY_AR_INV       VARCHAR2(15000); -- apai 0220
  L_GROUP_BY_AR_INV_2       VARCHAR2(15000); -- apai 0220
  L_GROUP_BY_AR_INV_3       VARCHAR2(15000); -- apai 0220
  L_GROUP_BY_AR_INV_4       VARCHAR2(15000); -- apai 0220
  L_GROUP_BY_AR_INV_5       VARCHAR2(15000); -- apai 0220
  L_GROUP_BY_AR_INV_6       VARCHAR2(15000); -- apai 0220
  L_GROUP_BY_AR_CM_8        VARCHAR2(15000); -- apai 0220
  L_GROUP_BY_AR_CM_9        VARCHAR2(15000); -- apai 0220
  L_GROUP_BY_AR_CM_10       VARCHAR2(15000); -- apai 0220
  L_GROUP_BY_AR_CM_11       VARCHAR2(15000); -- apai 0220
  L_GROUP_BY_AR_CM_12       VARCHAR2(15000); -- apai 0220
  L_GROUP_BY_AR_CM_13       VARCHAR2(15000); -- apai 0220
  L_GROUP_BY_AR_CM_14       VARCHAR2(15000); -- apai 0220

  l_where_num_of_tax_lines        VARCHAR2(2000);
  l_where_tax_code_other_trx      VARCHAR2(2000);
  l_where_reg_type_other_trx      VARCHAR2(200);

      l_fnd_mo_org_stg        VARCHAR2(200);
      l_internal_org_stg      VARCHAR2(200);
      l_string_len            NUMBER;
      l_org_len               NUMBER;
      l_get_org_id            VARCHAR2(15);

BEGIN


    IF (g_level_procedure >= g_current_runtime_level ) THEN
        FND_LOG.STRING(g_level_procedure, 'ZX.TRL.ZX_AR_ACTG_EXTRACT_PKG.BUILD_SQL.BEGIN',
                                      'ZX_AR_ACTG_EXTRACT_PKG: BUILD_SQL(+)');
    END IF;

  --
  -- determine which table to use based on MRC sob type
  --
  IF P_MRC_SOB_TYPE = 'R' THEN
    L_TBL_NAME_AR_DIST_ALL         := 'AR_DISTRIBUTIONS_ALL_MRC_V';
    L_TBL_NAME_AR_DIST             := 'AR_DISTRIBUTIONS_MRC_V';
    L_TBL_NAME_AR_TRX_HIST_ALL     := 'AR_TRX_HISTORY_ALL_MRC_V';
    L_TBL_NAME_AR_TRX_HIST         := 'AR_TRX_HISTORY_MRC_V';
    L_TBL_NAME_CUSTOMER_TRX_ALL    := 'RA_CUSTOMER_TRX_ALL_MRC_V';
    L_TBL_NAME_CUSTOMER_TRX        := 'RA_CUSTOMER_TRX_MRC_V';
    L_TBL_NAME_AR_ADJUSTMENTS_ALL  := 'AR_ADJUSTMENTS_ALL_MRC_V';
    L_TBL_NAME_AR_ADJUSTMENTS      := 'AR_ADJUSTMENTS_MRC_V';
    L_TBL_AR_RECEIVABLE_APPS_ALL   := 'AR_RECEIVABLE_APPS_ALL_MRC_V';
    L_TBL_AR_RECEIVABLE_APPS       := 'AR_RECEIVABLE_APPS_MRC_V';
    L_TBL_CUS_TRX_LINE_GL_DIST_ALL := 'RA_TRX_LINE_GL_DIST_ALL_MRC_V';
    L_TBL_CUS_TRX_LINE_GL_DIST     := 'RA_TRX_LINE_GL_DIST_MRC_V';
    L_TBL_AR_MISC_CASH_DIST_ALL    := 'AR_MISC_CASH_DISTS_ALL_MRC_V'; -- added by lxzhang
  ELSE
    L_TBL_NAME_AR_DIST_ALL         := 'AR_DISTRIBUTIONS_ALL';
    L_TBL_NAME_AR_DIST             := 'AR_DISTRIBUTIONS';
    L_TBL_NAME_AR_TRX_HIST_ALL     := 'AR_TRANSACTION_HISTORY_ALL';
    L_TBL_NAME_AR_TRX_HIST         := 'AR_TRANSACTION_HISTORY';
    L_TBL_NAME_CUSTOMER_TRX_ALL    := 'RA_CUSTOMER_TRX_ALL';
    L_TBL_NAME_CUSTOMER_TRX        := 'RA_CUSTOMER_TRX';
    L_TBL_NAME_AR_ADJUSTMENTS_ALL  := 'AR_ADJUSTMENTS_ALL';
    L_TBL_NAME_AR_ADJUSTMENTS      := 'AR_ADJUSTMENTS';
    L_TBL_AR_RECEIVABLE_APPS_ALL   := 'AR_RECEIVABLE_APPLICATIONS_ALL';
    L_TBL_AR_RECEIVABLE_APPS       := 'AR_RECEIVABLE_APPLICATIONS';
    L_TBL_CUS_TRX_LINE_GL_DIST_ALL := 'RA_CUST_TRX_LINE_GL_DIST_ALL';
    L_TBL_CUS_TRX_LINE_GL_DIST     := 'RA_CUST_TRX_LINE_GL_DIST';
    L_TBL_AR_MISC_CASH_DIST_ALL    := 'AR_MISC_CASH_DISTRIBUTIONS_ALL'; -- added by lxzhang
  END IF;

  --
  --   Performance Imporvement
  --   Go through AR_VAT_TAX_ALL table for the Reporting Level / Context
  --   and see if there exists any row which has
  --  If no rows are found, the customer is not using Deferred Taxes.
  --  In that case, do not build SQL for Transaction Class 'APPLICATION', , 'EDISC--  ','UNEDISC','ADJ','FINCHRG', 'BR'

  --   Building Where Clauses:
  --   L_WHERE_REPORTING_CONTEXT :
  --   These where clauses will be used in the queries to restrict the
  --   data from multi-org tables to the appropriate reporting context .
  --   Hardcode the Low and High Transaction dates if they are null.


 -- New Where Clause Code based on Etax Repository :   -- Skorrapa
 -- These where clauses will be build for transaction classes : Invoice, Debit Memor, and Credit Memo



     --  ADD NEW PREDICATE CODE HERE



  --   L_WHERE_REPORTING_CONTEXT :
  --   These where clauses will be used in the queries to restrict the
  --   data from multi-org tables to the appropriate reporting context .

  --   Hardcode the Low and High Transaction dates if they are null.
  IF G_REPORTING_LEVEL IS NOT NULL THEN
     L_REPORTING_CONTEXT_VAL := ' '||TO_CHAR(G_REPORTING_CONTEXT)||' ';

     FND_MO_REPORTING_API.INITIALIZE (
         p_reporting_level =>G_REPORTING_LEVEL,
         p_reporting_entity_id => G_REPORTING_CONTEXT,
         p_pred_type =>'AUTO');


    IF (g_level_procedure >= g_current_runtime_level ) THEN
       FND_LOG.STRING(g_level_procedure, 'ZX.TRL.ZX_AR_ACTG_EXTRACT_PKG.BUILD_SQL',
                                        'After FND_MO_REPORTING_API.INITIALIZE Call : ');
    END IF;

-- Check with Kripa  --skorrapa


   l_fnd_mo_org_stg := FND_MO_REPORTING_API.GET_PREDICATE('ZX_DET',NULL,L_REPORTING_CONTEXT_VAL);
    IF (g_level_procedure >= g_current_runtime_level ) THEN
       FND_LOG.STRING(g_level_procedure, 'ZX.TRL.ZX_AR_ACTG_EXTRACT_PKG.BUILD_SQL',
                                        'After FND_MO_REPORTING_API.GET_PREDICATE Call = '||l_fnd_mo_org_stg);
    END IF;

    l_internal_org_stg:= REPLACE(l_fnd_mo_org_stg,'ORG_ID','INTERNAL_ORGANIZATION_ID');

  IF (g_level_procedure >= g_current_runtime_level ) THEN
       FND_LOG.STRING(g_level_procedure, 'ZX.TRL.ZX_AR_ACTG_EXTRACT_PKG.BUILD_SQL',
                    'l_internal_org_stg = '||l_internal_org_stg);
    END IF;


--  L_WHERE_REPORTING_CONTEXT_TRXH := 'AND ZX_DET.INTERNAL_ORGANIZATION_ID '||l_get_org_id;
  L_WHERE_REPORTING_CONTEXT_TRXH := l_internal_org_stg;
     --    FND_MO_REPORTING_API.GET_PREDICATE('ZX_DET',NULL,L_REPORTING_CONTEXT_VAL);
  L_WHERE_REPORTING_CONTEXT_VAT :=
         FND_MO_REPORTING_API.GET_PREDICATE('VAT',NULL,L_REPORTING_CONTEXT_VAL);
  L_WHERE_REPORTING_CONTEXT_EX :=
         FND_MO_REPORTING_API.GET_PREDICATE('EX',NULL,L_REPORTING_CONTEXT_VAL);
  L_WHERE_REPORTING_CONTEXT_TYP :=
         FND_MO_REPORTING_API.GET_PREDICATE('TYPES',NULL,L_REPORTING_CONTEXT_VAL);
  L_WHERE_REPORTING_CONTEXT_BS :=
         FND_MO_REPORTING_API.GET_PREDICATE('BS',NULL,L_REPORTING_CONTEXT_VAL);
  L_WHERE_REPORTING_CONTEXT_ADJ :=
         FND_MO_REPORTING_API.GET_PREDICATE('ADJ',NULL,L_REPORTING_CONTEXT_VAL);
  L_WHERE_REPORTING_CONTEXT_CS :=
         FND_MO_REPORTING_API.GET_PREDICATE('ARCS',NULL,L_REPORTING_CONTEXT_VAL);
  L_WHERE_REPORTING_CONTEXT_TH :=
         FND_MO_REPORTING_API.GET_PREDICATE('TH',NULL,L_REPORTING_CONTEXT_VAL);
  END IF;

    IF (g_level_procedure >= g_current_runtime_level ) THEN
        FND_LOG.STRING(g_level_procedure, 'ZX.TRL.ZX_AR_ACTG_EXTRACT_PKG.BUILD_SQL',
                      'L_WHERE_REPORTING_CONTEXT_TRXH : '||L_WHERE_REPORTING_CONTEXT_TRXH);
    END IF;

--New parameter code
   IF G_LEDGER_ID IS NOT NULL THEN
         L_WHERE_LEDGER_ID := ' AND ZX_DET.LEDGER_ID = :G_LEDGER_ID ';
         L_WHERE_LEDGER_ID_MISC := ' AND DIST.SET_OF_BOOKS_ID = :G_LEDGER_ID ';
   ELSE
         L_WHERE_LEDGER_ID := ' AND DECODE(:G_LEDGER_ID,NULL,NULL) IS NULL ';
         L_WHERE_LEDGER_ID_MISC := ' AND DECODE(:G_LEDGER_ID,NULL,NULL) IS NULL ';
   END IF;

--New parameter code  :
/* apai
   IF G_LEGAL_ENTITY_LEVEL = 'LEGAL ENTITY' THEN
         L_WHERE_LEGAL_ENTITY_ID :=
         ' AND ZX_DET.LEGAL_ENTITY_ID = :G_LEGAL_ENTITY_ID ';
         L_WHERE_LEGAL_ENTITY_ID_MISC :=
         ' AND ARCS.LEGAL_ENTITY_ID = :G_LEGAL_ENTITY_ID ';
   ELSE
         L_WHERE_LEGAL_ENTITY_ID := ' AND DECODE(:G_LEGAL_ENTITY_ID,NULL,NULL) IS NULL ';
         L_WHERE_LEGAL_ENTITY_ID_MISC := ' AND DECODE(:G_LEGAL_ENTITY_ID,NULL,NULL) IS NULL ';
   END IF;
*/

   IF g_reporting_level = '2000' THEN
         L_WHERE_LEGAL_ENTITY_ID :=
         ' AND ZX_DET.LEGAL_ENTITY_ID = :G_LEGAL_ENTITY_ID ';
         L_WHERE_LEGAL_ENTITY_ID_MISC :=
         ' AND ARCS.LEGAL_ENTITY_ID = :G_LEGAL_ENTITY_ID ';
   ELSE
         L_WHERE_LEGAL_ENTITY_ID := ' AND DECODE(:G_LEGAL_ENTITY_ID,NULL,NULL) IS NULL ';
         L_WHERE_LEGAL_ENTITY_ID_MISC := ' AND DECODE(:G_LEGAL_ENTITY_ID,NULL,NULL) IS NULL ';
   END IF;

-- New Parameter code

  --    L_WHERE_REGISTER_TYPE:
  --    The following where clauses will be built to select appropriate register type
  IF G_INCLUDE_AR_INV_TRX_CLASS = 'Y' THEN
  IF  G_REGISTER_TYPE = 'INTERIM' THEN
    L_WHERE_REGISTER_TYPE_AR_TRX :=
             ' AND ZX_RATE.DEF_REC_SETTLEMENT_OPTION_CODE = ''DEFERRED'' ';
     L_WHERE_REGISTER_TYPE_AR_APP :=
             ' AND ARDTAX.SOURCE_TYPE = ''DEFERRED_TAX''';
    L_WHERE_REGISTER_TYPE_AR_ADJ :=
             ' AND ARDTAX.SOURCE_TYPE = ''DEFERRED_TAX''';
    L_WHERE_REGISTER_TYPE_AR_MISC := ' AND 1 = 2 ';
    L_WHERE_REG_TYPE_OTHER_TRX :=
             ' AND ARDTAX2.SOURCE_TYPE = ''DEFERRED_TAX''';
    L_WHERE_REGISTER_TYPE_AR_BR :=
             ' AND ARDTAX.SOURCE_TYPE = ''DEFERRED_TAX''';
  ELSIF G_REGISTER_TYPE = 'TAX' THEN
    L_WHERE_REGISTER_TYPE_AR_TRX :=
             ' AND NVL(ZX_RATE.DEF_REC_SETTLEMENT_OPTION_CODE,''IMMEDIATE'') = ''IMMEDIATE'' ';
    L_WHERE_REGISTER_TYPE_AR_APP :=
             ' AND ARDTAX.SOURCE_TYPE = ''TAX''';
    L_WHERE_REGISTER_TYPE_AR_ADJ :=
             ' AND ARDTAX.SOURCE_TYPE = ''TAX''';
    L_WHERE_REGISTER_TYPE_AR_MISC := ' AND 1 = 1 ';
    L_WHERE_REG_TYPE_OTHER_TRX :=
             ' AND ARDTAX2.SOURCE_TYPE = ''TAX''';
    L_WHERE_REGISTER_TYPE_AR_BR :=
             ' AND ARDTAX.SOURCE_TYPE = ''TAX''';
  ELSIF G_REGISTER_TYPE = 'NON-RECOVERABLE' THEN
    L_WHERE_REGISTER_TYPE_AR_TRX := ' AND 1 = 2 ';
    L_WHERE_REGISTER_TYPE_AR_APP := ' AND ARDTAX.SOURCE_TYPE IN
           (''EDISC_NON_REC_TAX'''||','||'''UNEDISC_NON_REC_TAX'''||')';
    L_WHERE_REGISTER_TYPE_AR_ADJ := ' AND ARDTAX.SOURCE_TYPE IN
           ('||'''ADJ_NON_REC_TAX'''||','||'''FINCHRG_NON_REC_TAX'''||')';
    L_WHERE_REGISTER_TYPE_AR_MISC := ' AND 1 = 2 ';
    L_WHERE_REG_TYPE_OTHER_TRX :=
                    ' AND ARDTAX2.SOURCE_TYPE IN ( ''EDISC_NON_REC_TAX'',
          ''UNEDISC_NON_REC_TAX'',''ADJ_NON_REC_TAX'',''FINCHRG_NON_REC_TAX'' ) ';
    L_WHERE_REGISTER_TYPE_AR_BR :=
                    ' AND ARDTAX.SOURCE_TYPE IN ( ''EDISC_NON_REC_TAX'',
          ''UNEDISC_NON_REC_TAX'',''ADJ_NON_REC_TAX'',''FINCHRG_NON_REC_TAX'' ) ';
  ELSIF NVL(G_REGISTER_TYPE,'ALL') = 'ALL' THEN
    L_WHERE_REGISTER_TYPE_AR_TRX := ' AND 1 = 1 ';
    L_WHERE_REGISTER_TYPE_AR_APP := ' AND 1 = 1 ';
    L_WHERE_REGISTER_TYPE_AR_ADJ := ' AND 1 = 1 ';
    L_WHERE_REGISTER_TYPE_AR_MISC := ' AND 1 = 1 ';
    L_WHERE_REGISTER_TYPE_AR_BR := ' AND 1 = 1 ';
  END IF;
END IF;


-- New Parameter code
    IF G_TRX_DATE_LOW IS NOT NULL AND G_TRX_DATE_HIGH IS NOT NULL THEN
       L_WHERE_TRX_DATE_INV := ' AND ZX_DET.TRX_DATE BETWEEN :G_TRX_DATE_LOW and :G_TRX_DATE_HIGH ' ;
       L_WHERE_TRX_DATE_MISC :=' AND ARCS.RECEIPT_DATE BETWEEN :G_TRX_DATE_LOW and :G_TRX_DATE_HIGH ';
       L_WHERE_TRX_DATE_APP :=' AND ARCS.RECEIPT_DATE BETWEEN :G_TRX_DATE_LOW and :G_TRX_DATE_HIGH ';
       L_WHERE_TRX_DATE_ADJ :=' AND ADJ.APPLY_DATE BETWEEN :G_TRX_DATE_LOW and :G_TRX_DATE_HIGH ';
       L_WHERE_TRX_DATE_BR :=' AND TH.TRX_DATE BETWEEN :G_TRX_DATE_LOW and :G_TRX_DATE_HIGH ';
     ELSE
       L_WHERE_TRX_DATE_INV :=  ' AND decode(:G_TRX_DATE_LOW,NULL,NULL) is null and decode(:G_TRX_DATE_HIGH,NULL,NULL) is null ';
       L_WHERE_TRX_DATE_MISC :=  ' AND decode(:G_TRX_DATE_LOW,NULL,NULL) is null and decode(:G_TRX_DATE_HIGH,NULL,NULL) is null ';
       L_WHERE_TRX_DATE_APP :=  ' AND decode(:G_TRX_DATE_LOW,NULL,NULL) is null and decode(:G_TRX_DATE_HIGH,NULL,NULL) is null ';
       L_WHERE_TRX_DATE_ADJ :=  ' AND decode(:G_TRX_DATE_LOW,NULL,NULL) is null and decode(:G_TRX_DATE_HIGH,NULL,NULL) is null ';
       L_WHERE_TRX_DATE_BR :=  ' AND decode(:G_TRX_DATE_LOW,NULL,NULL) is null and decode(:G_TRX_DATE_HIGH,NULL,NULL) is null ';
     END IF;

    IF G_GL_DATE_LOW IS NOT NULL AND G_GL_DATE_HIGH IS NOT NULL THEN
       L_WHERE_GL_DATE_INV := ' AND XLA_HEAD.ACCOUNTING_DATE BETWEEN :G_GL_DATE_LOW and :G_GL_DATE_HIGH ' ;
       L_WHERE_GL_DATE_MISC := ' AND DIST.GL_DATE BETWEEN :G_GL_DATE_LOW and :G_GL_DATE_HIGH ';
       L_WHERE_GL_DATE_APP :=' AND APP.GL_DATE BETWEEN :G_GL_DATE_LOW and :G_GL_DATE_HIGH ';
       L_WHERE_GL_DATE_ADJ :=' AND ADJ.GL_DATE BETWEEN :G_GL_DATE_LOW and :G_GL_DATE_HIGH ';
       L_WHERE_GL_DATE_BR :=' AND TH.GL_DATE BETWEEN :G_GL_DATE_LOW and :G_GL_DATE_HIGH ';
     ELSE
       L_WHERE_GL_DATE_MISC   := ' AND 1=1 ';
       L_WHERE_GL_DATE_APP   := ' AND 1=1 ';
       L_WHERE_GL_DATE_ADJ :=' AND 1=1 ';
       L_WHERE_GL_DATE_BR :=' AND 1=1 ';
       L_WHERE_GL_DATE_INV :=  ' AND decode(:G_GL_DATE_LOW,NULL,NULL) is null and decode(:G_GL_DATE_HIGH,NULL,NULL) is null ';
       L_WHERE_GL_DATE_MISC :=  ' AND decode(:G_GL_DATE_LOW,NULL,NULL) is null and decode(:G_GL_DATE_HIGH,NULL,NULL) is null ';
       L_WHERE_GL_DATE_APP :=  ' AND decode(:G_GL_DATE_LOW,NULL,NULL) is null and decode(:G_GL_DATE_HIGH,NULL,NULL) is null ';
       L_WHERE_GL_DATE_ADJ :=  ' AND decode(:G_GL_DATE_LOW,NULL,NULL) is null and decode(:G_GL_DATE_HIGH,NULL,NULL) is null ';
       L_WHERE_GL_DATE_BR :=  ' AND decode(:G_GL_DATE_LOW,NULL,NULL) is null and decode(:G_GL_DATE_HIGH,NULL,NULL) is null ';
     END IF;




-- New parameter code
    IF G_DOCUMENT_SUB_TYPE IS NOT NULL THEN
      L_WHERE_DOCUMENT_SUB_TYPE := ' AND ZX_DET.DOCUMENT_SUB_TYPE = :G_DOCUMENT_SUB_TYPE ';
    ELSE
      L_WHERE_DOCUMENT_SUB_TYPE := ' AND DECODE(:G_DOCUMENT_SUB_TYPE,NULL,NULL) IS NULL ';
    END IF;

    IF G_TRX_BUSINESS_CATEGORY IS NOT NULL THEN
      L_WHERE_TRX_BUSINESS_CATEGORY := ' AND ZX_DET.TRX_BUSINESS_CATEGORY = :G_TRX_BUSINESS_CATEGORY ';
    ELSE
      L_WHERE_TRX_BUSINESS_CATEGORY := ' AND DECODE(:G_TRX_BUSINESS_CATEGORY,NULL,NULL) IS NULL ';
    END IF;

    IF G_TAX_INVOICE_DATE_LOW IS NOT NULL AND G_TAX_INVOICE_DATE_HIGH IS NOT NULL THEN
        L_WHERE_TAX_INVOICE_DATE := ' ZX_DET.TAX_INVOICE_DATE BETWEEN :G_TAX_INVOICE_DATE_LOW AND :G_TAX_INVOICE_DATE_HIGH ';
    ELSE
        L_WHERE_TAX_INVOICE_DATE := ' AND DECODE(:G_TAX_INVOICE_DATE_LOW,NULL,NULL) IS NULL AND DECODE(:G_TAX_INVOICE_DATE_HIGH,NULL,NULL) IS NULL ';
    END IF;


--New Parameter Code
    IF g_first_party_tax_reg_num IS NOT NULL THEN
       L_WHERE_FIRST_PTY_TAX_REG_NUM :=  ' AND zx_line.hq_estb_reg_number = :g_first_party_tax_reg_num ';
    ELSE
       L_WHERE_FIRST_PTY_TAX_REG_NUM :=  ' AND DECODE(:g_first_party_tax_reg_num,NULL,NULL) IS NULL ';
    END IF;

    IF g_first_party_tax_reg_num IS NOT NULL THEN
       L_WHERE_FIRST_PTY_TAX_REG_OTH :=  ' AND ptp.rep_registration_number = :g_first_party_tax_reg_num ';
    ELSE
       L_WHERE_FIRST_PTY_TAX_REG_OTH :=  ' AND DECODE(:g_first_party_tax_reg_num,NULL,NULL) IS NULL ';
    END IF;

    IF g_tax_jurisdiction_code IS NOT NULL THEN
       L_WHERE_TAX_JURISDICTION_CODE := ' AND ZX_LINE.TAX_REGIME_CODE = :g_tax_jurisdiction_code ';
    ELSE
       L_WHERE_TAX_JURISDICTION_CODE := ' AND DECODE(:g_tax_jurisdiction_code,NULL,NULL) IS NULL ';
    END IF;

    IF g_tax_jurisdiction_code IS NOT NULL THEN
       L_WHERE_TAX_JURIS_CODE_OTH := ' AND ZX_RATE.TAX_REGIME_CODE = :g_tax_jurisdiction_code ';
    ELSE
       L_WHERE_TAX_JURIS_CODE_OTH := ' AND DECODE(:g_tax_jurisdiction_code,NULL,NULL) IS NULL ';
    END IF;

   IF G_TAX_REGIME_CODE IS NOT NULL THEN
      L_WHERE_TAX_REGIME_CODE := ' AND ZX_LINE.TAX_REGIME_CODE = :G_TAX_REGIME_CODE ';
   ELSE
      L_WHERE_TAX_REGIME_CODE := ' AND DECODE(:G_TAX_REGIME_CODE,NULL,NULL) IS NULL ';
   END IF;

   IF G_TAX_REGIME_CODE IS NOT NULL THEN
      L_WHERE_TAX_REGIME_CODE_OTH := ' AND ZX_RATE.TAX_REGIME_CODE = :G_TAX_REGIME_CODE ';
   ELSE
      L_WHERE_TAX_REGIME_CODE_OTH := ' AND DECODE(:G_TAX_REGIME_CODE,NULL,NULL) IS NULL ';
   END IF;

   IF G_TAX IS NOT NULL THEN
      L_WHERE_TAX := ' AND ZX_LINE.TAX = :G_TAX ';
   ELSE
      L_WHERE_TAX := ' AND DECODE(:G_TAX,NULL,NULL) IS NULL ';
   END IF;

  IF G_TAX IS NOT NULL THEN
      L_WHERE_TAX_OTH := ' AND ZX_RATE.TAX = :G_TAX ';
   ELSE
      L_WHERE_TAX_OTH := ' AND DECODE(:G_TAX,NULL,NULL) IS NULL ';
   END IF;

   IF G_TAX_STATUS_CODE IS NOT NULL THEN
      L_WHERE_TAX_STATUS_CODE := ' AND ZX_LINE.TAX_STATUS_CODE = :G_TAX_STATUS_CODE ';
   ELSE
      L_WHERE_TAX_STATUS_CODE := ' AND DECODE(:G_TAX_STATUS_CODE,NULL,NULL) IS NULL ';
   END IF;

   IF G_TAX_STATUS_CODE IS NOT NULL THEN
      L_WHERE_TAX_STATUS_CODE_OTH := ' AND ZX_RATE.TAX_STATUS_CODE = :G_TAX_STATUS_CODE ';
   ELSE
      L_WHERE_TAX_STATUS_CODE_OTH := ' AND DECODE(:G_TAX_STATUS_CODE,NULL,NULL) IS NULL ';
   END IF;


    IF g_tax_rate_code_low IS NOT NULL AND g_tax_rate_code_high IS NOT NULL THEN
       L_WHERE_TAX_RATE_CODE := ' AND ZX_LINE.TAX_RATE_CODE = :G_TAX_RATE_CODE_LOW AND :G_TAX_RATE_CODE_HIGH ';
    ELSE
       L_WHERE_TAX_RATE_CODE := ' AND DECODE(:G_TAX_RATE_CODE_LOW,NULL,NULL) IS NULL '||
                                ' AND DECODE(:G_TAX_RATE_CODE_HIGH,NULL,NULL) IS NULL ';
    END IF;

    IF g_tax_type_code_low IS NOT NULL AND g_tax_type_code_high IS NOT NULL THEN
       L_WHERE_TAX_TYPE_CODE := ' AND ZX_TAX.TAX_TYPE_CODE = :G_TAX_TYPE_CODE_LOW AND :G_TAX_TYPE_CODE_HIGH ';
    ELSE
       L_WHERE_TAX_TYPE_CODE := ' AND DECODE(:G_TAX_TYPE_CODE_LOW,NULL,NULL) IS NULL '||
                                  ' AND DECODE(:G_TAX_TYPE_CODE_HIGH,NULL,NULL) IS NULL ';
    END IF;

/*   IF G_TAX_RATE_CODE IS NOT NULL THEN
      L_WHERE_TAX_RATE_CODE := ' AND ZX_LINE.TAX_RATE_CODE = :G_TAX_RATE_CODE ';
   ELSE
      L_WHERE_TAX_RATE_CODE := ' AND DECODE(:G_TAX_RATE_CODE,NULL,NULL) IS NULL ';
   END IF;

   IF G_TAX_TYPE_CODE IS NOT NULL THEN
      L_WHERE_TAX_TYPE_CODE := ' AND ZX_TAX.TAX_TYPE_CODE = :G_TAX_TYPE_CODE ';
   ELSE
      L_WHERE_TAX_TYPE_CODE := ' AND DECODE(:G_TAX_TYPE_CODE,NULL,NULL) IS NULL ';
   END IF;
*/

   -- LTE paramaters code
   IF G_TAX IS NULL AND G_VAT_TAX IS NOT NULL THEN
        L_WHERE_TAX_LTE := ' ZX_LINE.TAX IN ('''||G_VAT_TAX||''',';
       BEGIN
          IF G_VAT_ADDITIONAL_TAX IS NOT NULL THEN
             L_WHERE_TAX_LTE :=L_WHERE_TAX_LTE|| '''||G_VAT_ADDITIONAL_TAX||'',';
          ELSE
             L_WHERE_TAX_LTE :=L_WHERE_TAX_LTE|| '''||G_VAT_ADDITIONAL_TAX||'',';
          END IF;

         IF G_VAT_NON_TAXABLE_TAX IS NOT NULL THEN
            L_WHERE_TAX_LTE :=L_WHERE_TAX_LTE|| '''||G_VAT_NON_TAXABLE_TAX||'',';
         ELSE
           L_WHERE_TAX_LTE :=L_WHERE_TAX_LTE|| '''||G_VAT_NON_TAXABLE_TAX||'',';
         END IF;

         IF G_VAT_NOT_TAX IS NOT NULL THEN
            L_WHERE_TAX_LTE :=L_WHERE_TAX_LTE|| '''||G_VAT_NOT_TAX||'',';
         ELSE
           L_WHERE_TAX_LTE :=L_WHERE_TAX_LTE|| '''||G_VAT_NOT_TAX||'',';
         END IF;

         IF G_VAT_PERCEPTION_TAX IS NOT NULL THEN
            L_WHERE_TAX_LTE :=L_WHERE_TAX_LTE|| '''||G_VAT_PERCEPTION_TAX||'',';
         ELSE
           L_WHERE_TAX_LTE :=L_WHERE_TAX_LTE|| '''||G_VAT_PERCEPTION_TAX||'',';
         END IF;

         IF G_EXCISE_TAX IS NOT NULL THEN
            L_WHERE_TAX_LTE :=L_WHERE_TAX_LTE|| '''||G_EXCISE_TAX||'',';
         ELSE
            L_WHERE_TAX_LTE :=L_WHERE_TAX_LTE|| '''||G_EXCISE_TAX||'',';
         END IF;

           L_WHERE_TAX_LTE := L_WHERE_TAX_LTE || ')';
       END;
    ELSE
        L_WHERE_TAX_LTE := 'AND decode(:G_VAT_TAX,NULL,NULL) is null
                            AND decode(:G_VAT_ADDITIONAL_TAX,NULL,NULL) is null
                            AND decode(:G_VAT_NON_TAXABLE_TAX,NULL,NULL) is null
                            AND decode(:G_VAT_NOT_TAX,NULL,NULL) is null
                            AND decode(:G_VAT_PERCEPTION_TAX,NULL,NULL) is null
                            AND decode(:G_EXCISE_TAX,NULL,NULL) is null ';
    END IF;

     L_WHERE_TAX_LTE_OTHER_CLS := 'AND decode(:G_VAT_TAX,NULL,NULL) is null
                            AND decode(:P_VAT_ADDITIONAL_TAX,NULL,NULL) is null
                            AND decode(:G_VAT_NON_TAXABLE_TAX,NULL,NULL) is null
                            AND decode(:G_VAT_NOT_TAX,NULL,NULL) is null
                            AND decode(:G_VAT_PERCEPTION_TAX,NULL,NULL) is null
                            AND decode(:G_EXCISE_TAX,NULL,NULL) is null ';


-- Add code for Category - Tax predicate


  -- New Parameter code
  --  L_WHERE_CURRENCY_CODE

   IF G_CURRENCY_CODE_LOW IS NOT NULL AND G_CURRENCY_CODE_HIGH IS NOT NULL THEN
      L_WHERE_CURRENCY_CODE := ' AND ZX_DET.TRX_CURRENCY_CODE BETWEEN :G_CURRENCY_CODE_LOW AND :G_CURRENCY_CODE_HIGH ';
      L_WHERE_CURRENCY_CODE_APP  :=
          ' AND ARCS.CURRENCY_CODE BETWEEN :G_CURRENCY_CODE_LOW AND :G_CURRENCY_CODE_HIGH ';
   ELSE
      L_WHERE_CURRENCY_CODE := ' AND DECODE(:G_CURRENCY_CODE_LOW,NULL,NULL) IS NULL
                                             AND DECODE(:G_CURRENCY_CODE_HIGH,NULL,NULL) IS NULL ';
      L_WHERE_CURRENCY_CODE_APP := ' AND DECODE(:G_CURRENCY_CODE_LOW,NULL,NULL) IS NULL
                                             AND DECODE(:G_CURRENCY_CODE_HIGH,NULL,NULL) IS NULL ';

   END IF;


-- Check this with kripa

  --  L_WHERE_EXEMPTION_STATUS
  IF G_AR_EXEMPTION_STATUS IS NULL THEN
    L_WHERE_EXEMPTION_STATUS := ' AND DECODE(:G_AR_EXEMPTION_STATUS,NULL,NULL) is NULL' ;
  ELSE
    L_WHERE_EXEMPTION_STATUS := ' AND ZX_EX.EXEMPTION_STATUS_CODE = :G_AR_EXEMPTION_STATUS ';
  END IF;

    L_WHERE_EXEMPT_STATUS_OTH := ' AND DECODE(:G_AR_EXEMPTION_STATUS,NULL,NULL) is NULL' ;

--  L_WHERE_EXEMPTION_STATUS_C := ' AND  DECODE(:G_AR_EXEMPTION_STATUS,NULL,NULL) is NULL' ;

-- Verify this parameter

  --  L_WHERE_BATCH_SOURCE_NAME
  IF  G_BATCH_NAME IS NOT NULL THEN
    L_WHERE_BATCH_NAME := ' AND ZX_DET.BATCH_SOURCE_NAME = :G_BATCH_NAME ';
  ELSE
    L_WHERE_BATCH_NAME := ' AND DECODE(:G_BATCH_NAME,NULL,NULL) IS NULL ';
  END IF;

 --  L_WHERE_TAX_CODE_VAT_TRX_TYPE
  IF G_VAT_TRANSACTION_TYPE_CODE IS NOT NULL
  THEN
    L_WHERE_TAX_CODE_VAT_TRX_TYPE   :=
    ' AND ZX_RATE.VAT_TRANSACTION_TYPE_CODE  = :G_VAT_TRANSACTION_TYPE_CODE ';
  ELSE
    L_WHERE_TAX_CODE_VAT_TRX_TYPE  := ' AND DECODE(:G_VAT_TRANSACTION_TYPE_CODE,NULL,NULL) IS NULL ';
  END IF;

-- New parameter code
  -- Building predicates for different TRX_CLASSES
 -- Check for Misc and BR classes

     IF G_INCLUDE_AR_INV_TRX_CLASS = 'Y' THEN
        L_WHERE_TRX_CLASS_INV_CM_DM  := ' AND ZX_DET.LINE_CLASS in (''INVOICE'',''CREDIT_MEMO'',''DEBIT_MEMO'') ';
     ELSE
         L_WHERE_TRX_CLASS_INV_CM_DM := ' AND 1 = 2 ';
     END IF;

     IF G_INCLUDE_AR_APPL_TRX_CLASS = 'Y' THEN
        L_WHERE_TRX_CLASS_APP_DISC := ' AND ard.source_type in (''EDISC'',''UNEDISC'',''REC'') ';
     ELSE
         L_WHERE_TRX_CLASS_APP_DISC := ' AND 1 = 2 ';
     END IF;

     IF G_INCLUDE_AR_ADJ_TRX_CLASS = 'Y' THEN
        L_WHERE_TRX_CLASS_ADJ_FINCHRG := ' AND ADJ.TYPE IN (''INVOICE'',''CHARGES'',''LINE'',''TAX'') ';
     ELSE
         L_WHERE_TRX_CLASS_ADJ_FINCHRG := ' AND 1 = 2 ';
     END IF;



-- New paraneter code
      IF G_TRX_NUMBER_LOW IS NOT NULL AND G_TRX_NUMBER_HIGH IS NOT NULL THEN
         L_WHERE_TRX_NUMBER_INV := ' AND ZX_DET.TRX_NUMBER BETWEEN :G_TRX_NUMBER_LOW AND :G_TRX_NUMBER_HIGH ';
         L_WHERE_TRX_NUMBER_APP := ' AND ARCS.RECEIPT_NUMBER BETWEEN :G_TRX_NUMBER_LOW AND :G_TRX_NUMBER_HIGH ';
         L_WHERE_TRX_NUMBER_ADJ := ' AND ADJ.ADJUSTMENT_NUMBER BETWEEN :G_TRX_NUMBER_LOW AND :G_TRX_NUMBER_HIGH ';
         L_WHERE_TRX_NUMBER_BR := ' AND TRXH.TRX_NUMBER BETWEEN :G_TRX_NUMBER_LOW AND :G_TRX_NUMBER_HIGH ';
         L_WHERE_TRX_NUMBER_MISC := ' AND ARCS.RECEIPT_NUMBER BETWEEN :G_TRX_NUMBER_LOW AND :G_TRX_NUMBER_HIGH ';
      ELSE
        L_WHERE_TRX_NUMBER_INV := ' AND DECODE(:G_TRX_NUMBER_LOW,NULL,NULL) IS NULL AND DECODE(:G_TRX_NUMBER_HIGH,NULL,NULL) IS NULL ';
        L_WHERE_TRX_NUMBER_APP := ' AND DECODE(:G_TRX_NUMBER_LOW,NULL,NULL) IS NULL AND DECODE(:G_TRX_NUMBER_HIGH,NULL,NULL) IS NULL ';
        L_WHERE_TRX_NUMBER_ADJ := ' AND DECODE(:G_TRX_NUMBER_LOW,NULL,NULL) IS NULL AND DECODE(:G_TRX_NUMBER_HIGH,NULL,NULL) IS NULL ';
        L_WHERE_TRX_NUMBER_BR :=  ' AND DECODE(:G_TRX_NUMBER_LOW,NULL,NULL) IS NULL AND DECODE(:G_TRX_NUMBER_HIGH,NULL,NULL) IS NULL ';
        L_WHERE_TRX_NUMBER_MISC :=  ' AND DECODE(:G_TRX_NUMBER_LOW,NULL,NULL) IS NULL AND DECODE(:G_TRX_NUMBER_HIGH,NULL,NULL) IS NULL ';
      END IF;



 -- End of New Where Clause Code :   -- Skorrapa


-- End of Old Predicate Code
/*
  --  L_WHERE_GL_FLEX
  --  Get the SEGMENT_NUMBER of the Balancing Segment of the
  --  Chart_of_accounts_id associated with the user's set of books.
  --  Get the chart of accounts id

  IF G_BALANCING_SEGMENT_LOW IS NOT NULL AND
    G_BALANCING_SEGMENT_HIGH IS NOT NULL
  THEN
    SELECT CHART_OF_ACCOUNTS_ID
      INTO   L_CHART_OF_ACCOUNTS_ID
      FROM   GL_SETS_OF_BOOKS
      WHERE  SET_OF_BOOKS_ID = FND_PROFILE.VALUE('GL_SET_OF_BKS_ID');

  --      Build the where clause for restricting the data to the
  --      balancing segments specified.
  --      L_WHERE_GL_FLEX'

    L_WHERE_GL_FLEX :=
         FA_RX_FLEX_PKG.FLEX_SQL(
         P_APPLICATION_ID => 101,
         P_ID_FLEX_CODE => 'GL#',
         P_ID_FLEX_NUM => G_CHART_OF_ACCOUNTS_ID,
         P_TABLE_ALIAS => 'CC',
         P_MODE => 'WHERE',
         P_QUALIFIER =>'GL_BALANCING',
         P_FUNCTION => 'BETWEEN',
         P_OPERAND1 => G_BALANCING_SEGMENT_LOW,
         P_OPERAND2 => G_BALANCING_SEGMENT_HIGH );

    L_WHERE_GL_FLEX := ' AND '||L_WHERE_GL_FLEX||' ';


  END IF;

  L_IS_DEFERRED_TAX_USED_STMT :=
      'SELECT count(*) '||
      ' FROM AR_VAT_TAX_ALL_B VAT '||
      ' WHERE VAT.INTERIM_TAX_CCID IS NOT NULL  '||
      ' AND ROWNUM = :1 '
      || L_WHERE_TAX_CLASS
      || L_WHERE_TAX_CODE
      || L_WHERE_TAX_CODE_VAT_TRX_TYPE
      || L_WHERE_TAX_CODE_TYPE
      || L_WHERE_GDF_AR_TAX_CODES_ATT1
      || L_WHERE_REPORTING_CONTEXT_VAT;


  BEGIN
    EXECUTE IMMEDIATE L_IS_DEFERRED_TAX_USED_STMT
            INTO  L_IS_DEFERRED_TAX_USED
            USING 1;
                  --G_TAX_CODE_LOW,
                  --G_TAX_CODE_HIGH,
                  --G_TAX_CODE_VAT_TRX_TYPE_LOW,
                  --G_TAX_CODE_VAT_TRX_TYPE_HIGH,
                  --G_TAX_CODE_TYPE_LOW,
                  --G_TAX_CODE_TYPE_HIGH,
              --    G_GDF_AR_TAX_CODES_ATT1,
               --   G_GDF_AR_TAX_CODES_CATEGORY;

  EXCEPTION
    WHEN OTHERS THEN
      IF PG_DEBUG = 'Y' THEN
       arp_util_tax.debug ('L_IS_DEFERRED_TAX_USED_STMT ' || L_IS_DEFERRED_TAX_USED_STMT);
            arp_util_tax.debug(' Exception ZX_EXTRACT_PKG.L_IS_DEFERRED_TAX_USED_STMT: '
                             ||SQLCODE||' ; '||SQLERRM);
      END IF;
      IF PG_DEBUG = 'Y' THEN
      arp_util_Tax.debug ('Setting L_IS_DEFERRED_TAX_USED to 0 ');
      END IF;
      L_IS_DEFERRED_TAX_USED := 0;
  END;
*/
  --  Building the Column List, Table List and Where Clauses for
  -- Invoices, On account credit and debit memos:
  -- CONDITIONALLY EXECUTE

    IF (g_level_procedure >= g_current_runtime_level ) THEN
        FND_LOG.STRING(g_level_procedure, 'ZX.TRL.ZX_AR_ACTG_EXTRACT_PKG.BUILD_SQL',
                      'Dynamic SQL Statement Sarts Here:');
        FND_LOG.STRING(g_level_procedure, 'ZX.TRL.ZX_AR_ACTG_EXTRACT_PKG.BUILD_SQL',
                      'G_INCLUDE_AR_INV_TRX_CLASS : '||G_INCLUDE_AR_INV_TRX_CLASS);
        FND_LOG.STRING(g_level_procedure, 'ZX.TRL.ZX_AR_ACTG_EXTRACT_PKG.BUILD_SQL',
                      'G_REGISTER_TYPE   : '||G_REGISTER_TYPE);
        FND_LOG.STRING(g_level_procedure, 'ZX.TRL.ZX_AR_ACTG_EXTRACT_PKG.BUILD_SQL',
                      'G_SUMMARY_LEVEL   : '||G_SUMMARY_LEVEL);
    END IF;


-- Build SQL for INV, CM, DM

  IF  G_INCLUDE_AR_INV_TRX_CLASS = 'Y' THEN
 --   IF G_REGISTER_TYPE <> 'NON-RECOVERABLE'  THEN
  --    IF (G_REGISTER_TYPE = 'INTERIM' AND L_IS_DEFERRED_TAX_USED = 1)
   --           OR G_REGISTER_TYPE IN ('TAX','ALL')
    --  THEN
        IF  UPPER(G_SUMMARY_LEVEL) = 'TRANSACTION' THEN

    IF (g_level_procedure >= g_current_runtime_level ) THEN
        FND_LOG.STRING(g_level_procedure, 'ZX.TRL.ZX_AR_ACTG_EXTRACT_PKG.BUILD_SQL',
                      'SQL-1 For Invoice, Credit Memo, Debit Memo: Header Level');
    END IF;

 L_COLUMN_LIST_AR_INV :=
   'SELECT '||
        'ZX_DET.LEDGER_ID,
         ZX_DET.TRX_ID    ,
         ZX_DET.DOC_SEQ_ID ,
         ZX_DET.DOC_SEQ_NAME ,
         ZX_DET.RECEIVABLES_TRX_TYPE_ID,
         ZX_DET.LINE_CLASS,
         ZX_DET.EVENT_CLASS_CODE ,
         TO_CHAR(NULL) ,'|| --APPLIED_FROM_ENTITY_CODE
         'TO_NUMBER(NULL)  ,'||--APPLIED_FROM_TRX_ID
         'TO_CHAR(NULL)  ,'||--APPLIED_FROM_EVENT_CLASS_CODE
         'TO_CHAR(NULL)  ,'||  -- ADJUSTED_DOC_ENTITY_CODE --APPLIED_TO_ENTITY_CODE
         'TO_NUMBER(NULL) ,'|| --ADJSUTED_DOC_ID --APPLIED_TO_TRX_ID
         'TO_CHAR(NULL)  ,'||  --ADJUSTED_DOC_EVENT_CLASS_CODE  --APPLIED_TO_EVENT_CLASS_CODE
         'TO_CHAR(NULL)  ,'|| --ADJUSTED_DOC_NUMBER  --APPLIED_TO_TRX_NUMBER
         'ZX_DET.BATCH_SOURCE_ID,
         ZX_LINE.TAX_RATE_ID ,
         DECODE(ZX_RATE.DEF_REC_SETTLEMENT_OPTION_CODE,''IMMEDIATE'',''TAX'',''DEFERRED'',''INTERIM''),
         ZX_DET.PRODUCT_ID,
         ZX_DET.PRODUCT_DESCRIPTION,
         TO_CHAR(NULL),'||  --TAXABLE_LINE_SOURCE_TABLE
         'TO_NUMBER(NULL),'|| --TAXABLE_ITEM_SOURCE_ID
         'ZX_LINE.TAX_EXEMPTION_ID,
         ZX_LINE.TAX_EXCEPTION_ID,
         TO_NUMBER(NULL),'||     --TAXABLE_LINE_TOTAL_AMOUNT
         'TO_NUMBER(NULL),'|| --ZX_LINE.TAX_LINE_ID
         'ZX_LINE.TAX_AMT,
         ZX_LINE.TAX_AMT_FUNCL_CURR  ,
         TO_NUMBER(NULL),'|| --ZX_LINE.TAX_LINE_NUMBER
         'ZX_LINE.TAXABLE_AMT,
         ZX_LINE.TAXABLE_AMT_FUNCL_CURR ,
         TO_NUMBER(NULL),'|| --ZX_LINE.TRX_LINE_ID
         'TO_NUMBER(NULL),'|| --ZX_LINE.TRX_LINE_QUANTITY
         'ZX_DET.EXEMPT_CERTIFICATE_NUMBER,
         ZX_LINE.EXEMPT_REASON_CODE   ,
         TO_CHAR(NULL), --exception_reason_code
         ZX_DET.UOM_CODE,
         TO_CHAR(NULL),'||--RECONCILIATION_FLAG
         'ZX_DET.INTERNAL_ORGANIZATION_ID ,'||--ORG_ID
         'TO_NUMBER(NULL),'||--BR_REF_CUSTOMER_TRX_ID
        -- 'TO_CHAR(NULL),  --reverse_date
         'TO_NUMBER(NULL),'||  --AMOUNT_APPLIED
         'TO_NUMBER(NULL),'||  --TAX_APPLIED
         'ZX_LINE.TAX_RATE,
         ZX_LINE.TAX_RATE_CODE,
         ZX_RATE.VAT_TRANSACTION_TYPE_CODE,
       ZX_RATE.RATE_TYPE_CODE,
       ZX_RATE.TAX_RATE_NAME,
         ZX_DET.TRX_NUMBER,
         ZX_DET.TRX_DESCRIPTION,
         ZX_DET.DOC_SEQ_VALUE,
         ZX_DET.TRX_DATE,
         TO_DATE(NULL),   --Deposit Date
         ZX_DET.TRX_DUE_DATE ,
         ZX_DET.TRX_SHIPPING_DATE ,
         ZX_DET.TRX_COMMUNICATED_DATE ,
         ZX_DET.TRX_CURRENCY_CODE,
         ZX_DET.CURRENCY_CONVERSION_TYPE,
         ZX_DET.CURRENCY_CONVERSION_DATE,
         ZX_DET.CURRENCY_CONVERSION_RATE,
         ZX_DET.TRX_SIC_CODE,
         ZX_DET.FOB_POINT,
         ZX_DET.TRX_WAYBILL_NUMBER,
         ZX_DET.BATCH_SOURCE_NAME,
         ZX_DET.TRX_TYPE_DESCRIPTION,
         ZX_DET.TRX_LINE_DESCRIPTION,'||
         'TO_NUMBER(NULL),'|| --ZX_LINE.TRX_LINE_NUMBER,
         'TO_CHAR(NULL),'|| --ZX_DET.TRX_LINE_TYPE,
         'TO_CHAR(NULL),
         TO_CHAR(NULL),
         TO_CHAR(NULL),
         TO_CHAR(NULL),
         TO_CHAR(NULL),
         TO_CHAR(NULL),
         TO_CHAR(NULL),
         TO_CHAR(NULL),
         TO_CHAR(NULL),
         TO_CHAR(NULL),
         TO_CHAR(NULL),
         TO_CHAR(NULL),
         TO_CHAR(NULL),
         TO_CHAR(NULL),
         TO_CHAR(NULL),
         TO_CHAR(NULL),
         ZX_DET.APPLICATION_ID,
         ZX_DET.DOC_EVENT_STATUS,
         ZX_DET.APPLICATION_DOC_STATUS,
         ZX_DET.ESTABLISHMENT_ID,
         ''AR'','||           --EXTRACT_SOURCE_LEDGER
         '--ZX_DET.FUNCTIONAL_CURRECNY_CODE,
         --ZX_DET.LEDGER_NAME,
         ZX_DET.MINIMUM_ACCOUNTABLE_UNIT,
         ZX_DET.PRECISION,
         TO_NUMBER(NULL),'|| --RECEIPT_CLASS_ID
         'ZX_DET.APPLIED_TO_APPLICATION_ID,
         ZX_DET.APPLIED_TO_TRX_LINE_ID,
         ZX_DET.APPLIED_TO_ENTITY_CODE,
         ZX_DET.APPLIED_TO_TRX_ID,
         ZX_DET.APPLIED_TO_EVENT_CLASS_CODE,
         ZX_DET.APPLIED_TO_TRX_NUMBER,
         ZX_DET.RELATED_DOC_APPLICATION_ID,
         ZX_DET.RELATED_DOC_DATE,
         ZX_DET.RELATED_DOC_ENTITY_CODE,
         ZX_DET.RELATED_DOC_EVENT_CLASS_CODE,
         ZX_DET.RELATED_DOC_NUMBER,
         ZX_DET.RELATED_DOC_TRX_ID,
         ZX_DET.ADJUSTED_DOC_APPLICATION_ID,
         ZX_DET.ADJUSTED_DOC_DATE,
         --ZX_DET.BANKING_TP_TAXPAYER_ID,
         ZX_DET.REF_DOC_APPLICATION_ID,
         ZX_DET.REF_DOC_ENTITY_CODE,
         ZX_DET.REF_DOC_EVENT_CLASS_CODE,
         TO_NUMBER(NULL),'||   --ZX_DET.REF_DOC_LINE_ID,
         'TO_NUMBER(NULL),'||   --ZX_DET.REF_DOC_LINE_QUANTITY,
         'ZX_DET.REF_DOC_TRX_ID,
         ZX_RATE.DEF_REC_SETTLEMENT_OPTION_CODE,
         ZX_DET.DEFAULT_TAXATION_COUNTRY,
         ZX_DET.DOCUMENT_SUB_TYPE,
         ZX_DET.TRX_BUSINESS_CATEGORY,
         ZX_DET.LINE_INTENDED_USE,
         ZX_DET.PRODUCT_CATEGORY,
         ZX_DET.PRODUCT_FISC_CLASSIFICATION,
         ZX_DET.SUPPLIER_EXCHANGE_RATE,
         ZX_DET.SUPPLIER_TAX_INVOICE_DATE,
         ZX_DET.SUPPLIER_TAX_INVOICE_NUMBER,
         ZX_DET.USER_DEFINED_FISC_CLASS,
         ZX_LINE.EXCEPTION_RATE,
         ZX_LINE.EXEMPT_RATE_MODIFIER,
         ZX_LINE.ORIG_TAX_AMT,
         ZX_LINE.ORIG_TAX_AMT_TAX_CURR ,
         ZX_LINE.ORIG_TAXABLE_AMT,
         ZX_LINE.ORIG_TAXABLE_AMT_TAX_CURR,
         TO_CHAR(NULL),'|| -- RECOVERY_RATE_CODE,
         'ZX_LINE.TAX_AMT_TAX_CURR ,
         ZX_LINE.TAX_APPORTIONMENT_LINE_NUMBER,
         ZX_LINE.TAX_CURRENCY_CODE,
         ZX_LINE.TAX_DATE,
         ZX_LINE.TAX_DETERMINE_DATE,
         ZX_DET.TAX_INVOICE_DATE,
         ZX_DET.TAX_INVOICE_NUMBER,
         ZX_LINE.TAX_JURISDICTION_CODE,
         ZX_LINE.TAX_REGIME_CODE,
         ZX_LINE.TAX_STATUS_CODE,
         ZX_DET.SHIP_FROM_PARTY_TAX_PROF_ID  ,
         ZX_DET.SHIP_FROM_SITE_TAX_PROF_ID,
         ZX_DET.SHIP_TO_PARTY_TAX_PROF_ID  ,
         ZX_DET.SHIP_TO_SITE_TAX_PROF_ID  ,
         ZX_DET.BILL_TO_PARTY_TAX_PROF_ID,
         ZX_DET.BILL_TO_SITE_TAX_PROF_ID,
         ZX_DET.SHIP_THIRD_PTY_ACCT_SITE_ID,
         ZX_DET.BILL_THIRD_PTY_ACCT_SITE_ID,
         ZX_DET.SHIP_TO_CUST_ACCT_SITE_USE_ID,
         ZX_DET.BILL_TO_CUST_ACCT_SITE_USE_ID,
         ZX_DET.SHIP_THIRD_PTY_ACCT_ID,
         ZX_DET.BILL_THIRD_PTY_ACCT_ID,
         ZX_LINE.HQ_ESTB_REG_NUMBER ,
         ZX_LINE.LEGAL_ENTITY_TAX_REG_NUMBER,
         ZX_DET.OWN_HQ_SITE_TAX_PROF_ID,
         ZX_DET.OWN_HQ_PARTY_TAX_PROF_ID,
         ZX_DET.PORT_OF_ENTRY_CODE,
         ZX_LINE.REGISTRATION_PARTY_TYPE,
         ZX_LINE.HISTORICAL_FLAG,
         ZX_LINE.MRC_TAX_LINE_FLAG,
     --    ZX_LINE.POSTED_FLAG,
         ZX_LINE.REPORTING_ONLY_FLAG,
         ZX_LINE.TAX_AMT_INCLUDED_FLAG,
         ZX_LINE.TAX_ONLY_LINE_FLAG,
         ZX_DET.EVENT_CLASS_MAPPING_ID,
         ZX_DET.TRX_LEVEL_TYPE,
         ZX_LINE.PLACE_OF_SUPPLY_TYPE_CODE,
         ZX_DET.POA_LOCATION_ID,
         ZX_DET.POO_LOCATION_ID,
         ZX_TAX.DEF_PLACE_OF_SUPPLY_TYPE_CODE,
         ZX_DET.LINE_AMT,
         ZX_LINE.TAX_PROVIDER_ID,
        xla_event.event_type_code, -- Accounting Columns
        xla_event.event_number,
        xla_event.event_status_code,
        xla_head.je_category_name,
        xla_head.accounting_date,
        xla_head.gl_transfer_status_code,
        xla_head.description,
        to_number(NULL),    --xla_line.ae_line_num,
        to_char(NULL),   --xla_dist.accounting_class_code,
        to_char(NULL),  --xla_line.description,
        to_number(NULL),  --xla_line.statistical_amount,
        xla_event.process_status_code,
        xla_head.gl_transfer_status_code,
        xla_head.doc_sequence_id,
        xla_head.doc_sequence_value,
        to_number(NULL),  --xla_line.party_id,
        to_number(NULL),  --xla_line.party_site_id,
        to_char(NULL),  --xla_line.party_type_code,
        xla_event.event_id,
        xla_head.ae_header_id,
        to_number(NULL),  --xla_line.code_combination_id,
        xla_head.period_name,
        zx_det.trx_id,
        TO_DATE(NULL),
        TO_CHAR(NULL),
        TO_NUMBER(NULL),
        TO_NUMBER(NULL),
        TO_CHAR(NULL),
        TO_CHAR(NULL),
        TO_CHAR(NULL) ';

  L_TABLE_LIST_AR_INV   :=
   ' FROM ZX_LINES ZX_LINE,
        ZX_LINES_DET_FACTORS ZX_DET,
        ZX_TAXES_B    ZX_TAX,
        ZX_RATES_VL    ZX_RATE,
        ZX_EXEMPTIONS  ZX_EX,
        XLA_TRANSACTION_ENTITIES XLA_ENT,
        XLA_EVENTS     XLA_EVENT,
        XLA_AE_HEADERS  XLA_HEAD,
        XLA_AE_LINES    XLA_LINE,
        xla_acct_class_assgns  acs,
        xla_assignment_defns_b asd';

  L_WHERE_CLAUSE_AR_INV :=
  ' WHERE ZX_DET.INTERNAL_ORGANIZATION_ID = ZX_LINE.INTERNAL_ORGANIZATION_ID
    AND ZX_DET.APPLICATION_ID    = ZX_LINE.APPLICATION_ID
    AND ZX_DET.APPLICATION_ID    =  222
    AND ZX_DET.ENTITY_CODE       = ZX_LINE.ENTITY_CODE
    AND ZX_DET.EVENT_CLASS_CODE  = ZX_LINE.EVENT_CLASS_CODE
    AND ZX_DET.TRX_ID            = ZX_LINE.TRX_ID
    AND ZX_DET.TRX_LINE_ID            = ZX_LINE.TRX_LINE_ID
    AND zx_det.trx_id           = xla_ent.source_id_int_1    -- Accounting Joins
    AND zx_det.application_id =   xla_ent.application_id
    AND xla_ent.entity_code      = ''RA_CUSTOMER_TRX''
    AND xla_ent.entity_id        = xla_event.entity_id
    AND xla_event.event_id       = xla_head.event_id
    AND xla_head.ae_header_id    = xla_line.ae_header_id
    AND acs.program_code   = ''TAX_REPORTING_LEDGER_SALES''
    AND acs.program_code = asd.program_code
    AND asd.assignment_code = acs.assignment_code
    AND asd.enabled_flag = ''Y''
    AND acs.accounting_class_code = xla_line.accounting_class_code  -- End of Accounting Joins
--    AND xla_line.accounting_class_code = ''TAX''
    AND ZX_DET.TAX_REPORTING_FLAG = ''Y''
    AND ZX_LINE.TAX_EXEMPTION_ID = ZX_EX.TAX_EXEMPTION_ID(+)
    AND ZX_LINE.TAX_ID          = ZX_TAX.TAX_ID
    AND ZX_LINE.TAX_RATE_ID     = NVL(ZX_RATE.SOURCE_ID,ZX_RATE.TAX_RATE_ID)
    AND ((ZX_RATE.RECORD_TYPE_CODE <> ''MIGRATED'')
         OR (ZX_RATE.SOURCE_ID IS NULL)) '
       || L_WHERE_REPORTING_CONTEXT_TRXH
       || L_WHERE_LEDGER_ID
       || L_WHERE_LEGAL_ENTITY_ID
       || L_WHERE_REGISTER_TYPE_AR_TRX
       || L_WHERE_TRX_CLASS_INV_CM_DM
       || L_WHERE_BATCH_NAME
       || L_WHERE_TRX_NUMBER_INV
       || L_WHERE_TRX_DATE_INV
       || L_WHERE_GL_DATE_INV
       || L_WHERE_DOCUMENT_SUB_TYPE
       || L_WHERE_TRX_BUSINESS_CATEGORY
       || L_WHERE_TAX_INVOICE_DATE
       ||L_WHERE_TAX_JURISDICTION_CODE
       ||L_WHERE_FIRST_PTY_TAX_REG_NUM
       || L_WHERE_TAX_REGIME_CODE
       || L_WHERE_TAX
       || L_WHERE_TAX_STATUS_CODE
       || L_WHERE_TAX_RATE_CODE
       || L_WHERE_TAX_TYPE_CODE
       || L_WHERE_CURRENCY_CODE
       || L_WHERE_EXEMPTION_STATUS
       || L_WHERE_TAX_CODE_VAT_TRX_TYPE
       || L_WHERE_TAX_LTE;

  L_GROUP_BY_AR_INV :=
  ' GROUP BY '||
      'ZX_DET.LEDGER_ID,
         ZX_DET.TRX_ID    ,
         ZX_DET.DOC_SEQ_ID ,
         ZX_DET.DOC_SEQ_NAME ,
         ZX_DET.RECEIVABLES_TRX_TYPE_ID,
         ZX_DET.LINE_CLASS,
         ZX_DET.EVENT_CLASS_CODE ,
         ZX_DET.BATCH_SOURCE_ID,
         ZX_LINE.TAX_RATE_ID ,
        -- ZX_RATE.DEF_REC_SETTLEMENT_OPTION_CODE,
         --ZX_LINE.TAX_RATE_REGISTER_TYPE_CODE,
         ZX_DET.PRODUCT_ID,
         ZX_DET.PRODUCT_DESCRIPTION,
         ZX_LINE.TAX_EXEMPTION_ID,
         ZX_LINE.TAX_EXCEPTION_ID,
         ZX_LINE.TAX_AMT,
         ZX_LINE.TAX_AMT_FUNCL_CURR  ,
         ZX_LINE.TAXABLE_AMT,
         ZX_LINE.TAXABLE_AMT_FUNCL_CURR ,
         ZX_DET.EXEMPT_CERTIFICATE_NUMBER,
         ZX_LINE.EXEMPT_REASON_CODE   ,
         TO_CHAR(NULL), --exception_reason_code
         ZX_DET.UOM_CODE,
         ZX_DET.INTERNAL_ORGANIZATION_ID ,--ORG_ID
         TO_CHAR(NULL),  --reverse_date
         ZX_LINE.TAX_RATE,
         ZX_LINE.TAX_RATE_CODE,
ZX_RATE.VAT_TRANSACTION_TYPE_CODE,
       ZX_RATE.RATE_TYPE_CODE,
       ZX_RATE.TAX_RATE_NAME,
         ZX_DET.TRX_NUMBER,
         ZX_DET.TRX_DESCRIPTION,
         ZX_DET.DOC_SEQ_VALUE,
         ZX_DET.TRX_DATE,
         ZX_DET.TRX_DUE_DATE ,
         ZX_DET.TRX_SHIPPING_DATE ,
         ZX_DET.TRX_COMMUNICATED_DATE ,
         ZX_DET.TRX_CURRENCY_CODE,
         ZX_DET.CURRENCY_CONVERSION_TYPE,
         ZX_DET.CURRENCY_CONVERSION_DATE,
         ZX_DET.CURRENCY_CONVERSION_RATE,
         ZX_DET.TRX_SIC_CODE,
         ZX_DET.FOB_POINT,
         ZX_DET.TRX_WAYBILL_NUMBER,
         ZX_DET.BATCH_SOURCE_NAME,
         ZX_DET.TRX_TYPE_DESCRIPTION,
         ZX_DET.TRX_LINE_DESCRIPTION,
         ZX_DET.APPLICATION_ID,
         ZX_DET.DOC_EVENT_STATUS,
         ZX_DET.APPLICATION_DOC_STATUS,
         ZX_DET.ESTABLISHMENT_ID,
         --ZX_DET.FUNCTIONAL_CURRECNY_CODE,
         --ZX_DET.LEDGER_NAME,
         ZX_DET.MINIMUM_ACCOUNTABLE_UNIT,
         ZX_DET.PRECISION,
         ZX_DET.APPLIED_TO_APPLICATION_ID,
         ZX_DET.APPLIED_TO_TRX_LINE_ID,
         ZX_DET.APPLIED_TO_ENTITY_CODE,
         ZX_DET.APPLIED_TO_TRX_ID,
         ZX_DET.APPLIED_TO_EVENT_CLASS_CODE,
         ZX_DET.APPLIED_TO_TRX_NUMBER,
         ZX_DET.RELATED_DOC_APPLICATION_ID,
         ZX_DET.RELATED_DOC_DATE,
         ZX_DET.RELATED_DOC_ENTITY_CODE,
         ZX_DET.RELATED_DOC_EVENT_CLASS_CODE,
         ZX_DET.RELATED_DOC_NUMBER,
         ZX_DET.RELATED_DOC_TRX_ID,
         ZX_DET.ADJUSTED_DOC_APPLICATION_ID,
         ZX_DET.ADJUSTED_DOC_DATE,
         --ZX_DET.BANKING_TP_TAXPAYER_ID,
         ZX_DET.REF_DOC_APPLICATION_ID,
         ZX_DET.REF_DOC_ENTITY_CODE,
         ZX_DET.REF_DOC_EVENT_CLASS_CODE,
         ZX_DET.REF_DOC_TRX_ID,
         ZX_RATE.DEF_REC_SETTLEMENT_OPTION_CODE,
         ZX_DET.DEFAULT_TAXATION_COUNTRY,
         ZX_DET.DOCUMENT_SUB_TYPE,
         ZX_DET.TRX_BUSINESS_CATEGORY,
         ZX_DET.LINE_INTENDED_USE,
         ZX_DET.PRODUCT_CATEGORY,
         ZX_DET.PRODUCT_FISC_CLASSIFICATION,
         ZX_DET.SUPPLIER_EXCHANGE_RATE,
         ZX_DET.SUPPLIER_TAX_INVOICE_DATE,
         ZX_DET.SUPPLIER_TAX_INVOICE_NUMBER,
         ZX_DET.USER_DEFINED_FISC_CLASS,
         ZX_LINE.EXCEPTION_RATE,
         ZX_LINE.EXEMPT_RATE_MODIFIER,
         ZX_LINE.ORIG_TAX_AMT,
         ZX_LINE.ORIG_TAX_AMT_TAX_CURR ,
         ZX_LINE.ORIG_TAXABLE_AMT,
         ZX_LINE.ORIG_TAXABLE_AMT_TAX_CURR,
         ZX_LINE.TAX_AMT_TAX_CURR ,
         ZX_LINE.TAX_APPORTIONMENT_LINE_NUMBER,
         ZX_LINE.TAX_CURRENCY_CODE,
         ZX_LINE.TAX_DATE,
         ZX_LINE.TAX_DETERMINE_DATE,
         ZX_DET.TAX_INVOICE_DATE,
         ZX_DET.TAX_INVOICE_NUMBER,
         ZX_LINE.TAX_JURISDICTION_CODE,
         ZX_LINE.TAX_REGIME_CODE,
         ZX_LINE.TAX_STATUS_CODE,
         ZX_DET.SHIP_FROM_PARTY_TAX_PROF_ID  ,
         ZX_DET.SHIP_FROM_SITE_TAX_PROF_ID,
         ZX_DET.SHIP_TO_PARTY_TAX_PROF_ID  ,
         ZX_DET.SHIP_TO_SITE_TAX_PROF_ID  ,
         ZX_DET.BILL_TO_PARTY_TAX_PROF_ID,
         ZX_DET.BILL_TO_SITE_TAX_PROF_ID,
         ZX_DET.SHIP_THIRD_PTY_ACCT_SITE_ID,
         ZX_DET.BILL_THIRD_PTY_ACCT_SITE_ID,
         ZX_DET.SHIP_TO_CUST_ACCT_SITE_USE_ID,
         ZX_DET.BILL_TO_CUST_ACCT_SITE_USE_ID,
         ZX_DET.SHIP_THIRD_PTY_ACCT_ID,
         ZX_DET.BILL_THIRD_PTY_ACCT_ID,
         ZX_LINE.HQ_ESTB_REG_NUMBER ,
         ZX_LINE.LEGAL_ENTITY_TAX_REG_NUMBER,
         ZX_DET.OWN_HQ_SITE_TAX_PROF_ID,
         ZX_DET.OWN_HQ_PARTY_TAX_PROF_ID,
         ZX_DET.PORT_OF_ENTRY_CODE,
         ZX_LINE.REGISTRATION_PARTY_TYPE,
         ZX_LINE.HISTORICAL_FLAG,
         ZX_LINE.MRC_TAX_LINE_FLAG,
     --    ZX_LINE.POSTED_FLAG,
         ZX_LINE.REPORTING_ONLY_FLAG,
         ZX_LINE.TAX_AMT_INCLUDED_FLAG,
         ZX_LINE.TAX_ONLY_LINE_FLAG,
         ZX_DET.EVENT_CLASS_MAPPING_ID,
         ZX_DET.TRX_LEVEL_TYPE,
         ZX_LINE.PLACE_OF_SUPPLY_TYPE_CODE,
         ZX_DET.POA_LOCATION_ID,
         ZX_DET.POO_LOCATION_ID,
         ZX_TAX.DEF_PLACE_OF_SUPPLY_TYPE_CODE,
         ZX_DET.LINE_AMT,
         ZX_LINE.TAX_PROVIDER_ID,
        xla_event.event_type_code, -- Accounting Columns
        xla_event.event_number,
        xla_event.event_status_code,
        xla_head.je_category_name,
        xla_head.accounting_date,
        xla_head.gl_transfer_status_code,
        xla_head.description,
        --to_number(NULL),    --xla_line.ae_line_num,
        --to_char(NULL),   --xla_dist.accounting_line_code,
        --to_char(NULL),  --xla_line.description,
        --to_number(NULL),  --xla_line.statistical_amount,
        xla_event.process_status_code,
        xla_head.gl_transfer_status_code,
        xla_head.doc_sequence_id,
        xla_head.doc_sequence_value,
        --to_number(NULL),  --xla_line.party_id,
        --to_number(NULL),  --xla_line.party_site_id,
        --to_char(NULL),  --xla_line.party_type_code,
        xla_event.event_id,
        xla_head.ae_header_id,
        --to_number(NULL),  --xla_line.code_combination_id,
        xla_head.period_name,
        zx_det.trx_id';

  L_WHERE_CLAUSE_AR_INV := L_WHERE_CLAUSE_AR_INV || L_GROUP_BY_AR_INV;


        ELSIF UPPER(G_SUMMARY_LEVEL) = 'TRANSACTION_LINE' THEN
        -- apai commented : needs to be removed AND NVL(G_TRX_CLASS,'INV') IN ('INV','CM','DM')  THEN

       IF (g_level_procedure >= g_current_runtime_level ) THEN
           FND_LOG.STRING(g_level_procedure, 'ZX.TRL.ZX_AR_ACTG_EXTRACT_PKG.BUILD_SQL',
                      'SQL-2 For Invoice, Credit Memo, Debit Memo: Line Level');
       END IF;


  L_COLUMN_LIST_AR_INV :=
  'SELECT '||
        'ZX_DET.LEDGER_ID,
        ZX_DET.TRX_ID    ,
        ZX_DET.DOC_SEQ_ID ,
        ZX_DET.DOC_SEQ_NAME ,
        ZX_DET.RECEIVABLES_TRX_TYPE_ID,
        ZX_DET.LINE_CLASS,
        ZX_DET.EVENT_CLASS_CODE ,
        TO_CHAR(NULL) ,'|| --APPLIED_FROM_ENTITY_CODE
       'TO_NUMBER(NULL)  ,'||--APPLIED_FROM_TRX_ID
       'TO_CHAR(NULL)  ,'||--APPLIED_FROM_EVENT_CLASS_CODE
       'TO_CHAR(NULL)  ,'||  -- ADJUSTED_DOC_ENTITY_CODE --APPLIED_TO_ENTITY_CODE
       'TO_NUMBER(NULL) ,'|| --ADJSUTED_DOC_ID --APPLIED_TO_TRX_ID
       'TO_CHAR(NULL)  ,'||  --ADJUSTED_DOC_EVENT_CLASS_CODE  --APPLIED_TO_EVENT_CLASS_CODE
       'TO_CHAR(NULL)  ,'|| --ADJUSTED_DOC_NUMBER  --APPLIED_TO_TRX_NUMBER
       'ZX_DET.BATCH_SOURCE_ID,
        ZX_LINE.TAX_RATE_ID ,
         DECODE(ZX_RATE.DEF_REC_SETTLEMENT_OPTION_CODE,''IMMEDIATE'',''TAX'',''DEFERRED'',''INTERIM''), --ZX_LINE.TAX_RATE_REGISTER_TYPE_CODE,
        ZX_DET.PRODUCT_ID,
        ZX_DET.PRODUCT_DESCRIPTION,
        TO_CHAR(NULL), --TAXABLE_LINE_SOURCE_TABLE,
        TO_NUMBER(NULL), --TAXABLE_ITEM_SOURCE_ID,
        ZX_LINE.TAX_EXEMPTION_ID ,
        ZX_LINE.TAX_EXCEPTION_ID  ,
        TO_NUMBER(NULL),  --TAXABLE_LINE_TOTAL_AMOUNT  ,
        ZX_LINE.TAX_LINE_ID,
        ZX_LINE.TAX_AMT,
        ZX_LINE.TAX_AMT_FUNCL_CURR  ,
        ZX_LINE.TAX_LINE_NUMBER,
        ZX_LINE.TAXABLE_AMT,
        ZX_LINE.TAXABLE_AMT_FUNCL_CURR ,
        ZX_LINE.TRX_LINE_ID,
        ZX_LINE.TRX_LINE_QUANTITY  ,
        ZX_DET.EXEMPT_CERTIFICATE_NUMBER,
        ZX_LINE.EXEMPT_REASON_CODE   ,
        TO_CHAR(NULL), --exception_reason_code
        ZX_DET.UOM_CODE,
        TO_CHAR(NULL)  ,'||--RECONCILIATION_FLAG
       'ZX_DET.INTERNAL_ORGANIZATION_ID ,'||--ORG_ID
       'TO_NUMBER(NULL),'||--BR_REF_CUSTOMER_TRX_ID
      -- 'TO_CHAR(NULL),  --reverse_date
        'TO_NUMBER(NULL)   ,'||--AMOUNT_APPLIED
        'TO_NUMBER(NULL),'||  --TAX_APPLIED
       'ZX_LINE.TAX_RATE,
        ZX_LINE.TAX_RATE_CODE,
ZX_RATE.VAT_TRANSACTION_TYPE_CODE,
       ZX_RATE.RATE_TYPE_CODE,
       ZX_RATE.TAX_RATE_NAME,
        ZX_DET.TRX_NUMBER,
        ZX_DET.TRX_DESCRIPTION,
        ZX_DET.DOC_SEQ_VALUE,
        ZX_DET.TRX_DATE,
        TO_DATE(NULL),   --Deposit Date
        ZX_DET.TRX_DUE_DATE ,
        ZX_DET.TRX_SHIPPING_DATE ,
        ZX_DET.TRX_COMMUNICATED_DATE ,
        ZX_DET.TRX_CURRENCY_CODE,
        ZX_DET.CURRENCY_CONVERSION_TYPE,
        ZX_DET.CURRENCY_CONVERSION_DATE,
        ZX_DET.CURRENCY_CONVERSION_RATE,
        ZX_DET.TRX_SIC_CODE,
        ZX_DET.FOB_POINT,
        ZX_DET.TRX_WAYBILL_NUMBER,
        ZX_DET.BATCH_SOURCE_NAME,
       ZX_DET.TRX_TYPE_DESCRIPTION,
        ZX_DET.TRX_LINE_DESCRIPTION,
        ZX_LINE.TRX_LINE_NUMBER,
      ZX_DET.TRX_LINE_TYPE,
        ZX_LINE.ATTRIBUTE_CATEGORY,
        ZX_LINE.ATTRIBUTE1,
        ZX_LINE.ATTRIBUTE2,
        ZX_LINE.ATTRIBUTE3,
        ZX_LINE.ATTRIBUTE4,
        ZX_LINE.ATTRIBUTE5,
        ZX_LINE.ATTRIBUTE6,
        ZX_LINE.ATTRIBUTE7,
        ZX_LINE.ATTRIBUTE8,
        ZX_LINE.ATTRIBUTE9,
        ZX_LINE.ATTRIBUTE10,
        ZX_LINE.ATTRIBUTE11,
        ZX_LINE.ATTRIBUTE12,
        ZX_LINE.ATTRIBUTE13,
        ZX_LINE.ATTRIBUTE14,
        ZX_LINE.ATTRIBUTE15,
        ZX_DET.APPLICATION_ID,
        ZX_DET.DOC_EVENT_STATUS,
         ZX_DET.APPLICATION_DOC_STATUS,
        ZX_DET.ESTABLISHMENT_ID,
        ''AR'','|| --EXTRACT_SOURCE_LEDGER
       '--ZX_DET.FUNCTIONAL_CURRECNY_CODE,
        --ZX_DET.LEDGER_NAME,
        ZX_DET.MINIMUM_ACCOUNTABLE_UNIT,
        ZX_DET.PRECISION,
        TO_NUMBER(NULL),'|| --RECEIPT_CLASS_ID
       'ZX_DET.APPLIED_TO_APPLICATION_ID,
        ZX_DET.APPLIED_TO_TRX_LINE_ID,
        ZX_DET.APPLIED_TO_ENTITY_CODE,
        ZX_DET.APPLIED_TO_TRX_ID,
        ZX_DET.APPLIED_TO_EVENT_CLASS_CODE,
        ZX_DET.APPLIED_TO_TRX_NUMBER,
        ZX_DET.RELATED_DOC_APPLICATION_ID,
        ZX_DET.RELATED_DOC_DATE,
        ZX_DET.RELATED_DOC_ENTITY_CODE,
        ZX_DET.RELATED_DOC_EVENT_CLASS_CODE,
        ZX_DET.RELATED_DOC_NUMBER,
        ZX_DET.RELATED_DOC_TRX_ID,
        ZX_DET.ADJUSTED_DOC_APPLICATION_ID,
        ZX_DET.ADJUSTED_DOC_DATE,
        --ZX_DET.BANKING_TP_TAXPAYER_ID,
        ZX_DET.REF_DOC_APPLICATION_ID,
        ZX_DET.REF_DOC_ENTITY_CODE,
        ZX_DET.REF_DOC_EVENT_CLASS_CODE,
        ZX_DET.REF_DOC_LINE_ID,
        ZX_DET.REF_DOC_LINE_QUANTITY,
        ZX_DET.REF_DOC_TRX_ID,
        ZX_RATE.DEF_REC_SETTLEMENT_OPTION_CODE,
        ZX_DET.DEFAULT_TAXATION_COUNTRY,
        ZX_DET.DOCUMENT_SUB_TYPE,
        ZX_DET.TRX_BUSINESS_CATEGORY,
        ZX_DET.LINE_INTENDED_USE,
        ZX_DET.PRODUCT_CATEGORY,
        ZX_DET.PRODUCT_FISC_CLASSIFICATION,
        ZX_DET.SUPPLIER_EXCHANGE_RATE,
        ZX_DET.SUPPLIER_TAX_INVOICE_DATE,
        ZX_DET.SUPPLIER_TAX_INVOICE_NUMBER,
        ZX_DET.USER_DEFINED_FISC_CLASS,
        ZX_LINE.EXCEPTION_RATE,
        ZX_LINE.EXEMPT_RATE_MODIFIER,
        ZX_LINE.ORIG_TAX_AMT,
        ZX_LINE.ORIG_TAX_AMT_TAX_CURR ,
        ZX_LINE.ORIG_TAXABLE_AMT,
        ZX_LINE.ORIG_TAXABLE_AMT_TAX_CURR,
        TO_CHAR(NULL),'|| -- RECOVERY_RATE_CODE,
       'ZX_LINE.TAX_AMT_TAX_CURR ,
        ZX_LINE.TAX_APPORTIONMENT_LINE_NUMBER,
        ZX_LINE.TAX_CURRENCY_CODE,
        ZX_LINE.TAX_DATE,
        ZX_LINE.TAX_DETERMINE_DATE,
        ZX_DET.TAX_INVOICE_DATE,
        ZX_DET.TAX_INVOICE_NUMBER,
        ZX_LINE.TAX_JURISDICTION_CODE,
        ZX_LINE.TAX_REGIME_CODE,
        ZX_LINE.TAX_STATUS_CODE,
        ZX_DET.SHIP_FROM_PARTY_TAX_PROF_ID  ,
        ZX_DET.SHIP_FROM_SITE_TAX_PROF_ID,
        ZX_DET.SHIP_TO_PARTY_TAX_PROF_ID  ,
        ZX_DET.SHIP_TO_SITE_TAX_PROF_ID  ,
        ZX_DET.BILL_TO_PARTY_TAX_PROF_ID,
        ZX_DET.BILL_TO_SITE_TAX_PROF_ID,
         ZX_DET.SHIP_THIRD_PTY_ACCT_SITE_ID,
         ZX_DET.BILL_THIRD_PTY_ACCT_SITE_ID,
         ZX_DET.SHIP_TO_CUST_ACCT_SITE_USE_ID,
         ZX_DET.BILL_TO_CUST_ACCT_SITE_USE_ID,
         ZX_DET.SHIP_THIRD_PTY_ACCT_ID,
         ZX_DET.BILL_THIRD_PTY_ACCT_ID,
        ZX_LINE.HQ_ESTB_REG_NUMBER ,
        ZX_LINE.LEGAL_ENTITY_TAX_REG_NUMBER,
        ZX_DET.OWN_HQ_SITE_TAX_PROF_ID,
        ZX_DET.OWN_HQ_PARTY_TAX_PROF_ID,
        ZX_DET.PORT_OF_ENTRY_CODE,
        ZX_LINE.REGISTRATION_PARTY_TYPE,
        ZX_LINE.HISTORICAL_FLAG,
        ZX_LINE.MRC_TAX_LINE_FLAG,
     --   ZX_LINE.POSTED_FLAG,
        ZX_LINE.REPORTING_ONLY_FLAG,
        ZX_LINE.TAX_AMT_INCLUDED_FLAG,
        ZX_LINE.TAX_ONLY_LINE_FLAG,
         ZX_DET.EVENT_CLASS_MAPPING_ID,
         ZX_DET.TRX_LEVEL_TYPE,
         ZX_LINE.PLACE_OF_SUPPLY_TYPE_CODE,
         ZX_DET.POA_LOCATION_ID,
         ZX_DET.POO_LOCATION_ID,
         ZX_TAX.DEF_PLACE_OF_SUPPLY_TYPE_CODE,
         ZX_DET.LINE_AMT,
         ZX_LINE.TAX_PROVIDER_ID,
        xla_event.event_type_code, -- Accounting Columns
        xla_event.event_number,
        xla_event.event_status_code,
        xla_head.je_category_name,
        xla_head.accounting_date,
        xla_head.gl_transfer_status_code,
        xla_head.description,
        xla_line.ae_line_num,
        xla_line.accounting_class_code,
        xla_line.description,
        xla_line.statistical_amount,
        xla_event.process_status_code,
        xla_head.gl_transfer_status_code,
        xla_head.doc_sequence_id,
        xla_head.doc_sequence_value,
        xla_line.party_id,
        xla_line.party_site_id,
        xla_line.party_type_code,
        xla_event.event_id,
        xla_head.ae_header_id,
        xla_line.code_combination_id,
        xla_head.period_name,
        zx_det.trx_line_id,
        TO_DATE(NULL),
        TO_CHAR(NULL),
        TO_NUMBER(NULL),
        TO_NUMBER(NULL),
        TO_CHAR(NULL),
        TO_CHAR(NULL),
        TO_CHAR(NULL) ';

  L_TABLE_LIST_AR_INV   :=
  ' FROM ZX_LINES ZX_LINE,
        ZX_LINES_DET_FACTORS ZX_DET,
        ZX_TAXES_B    ZX_TAX,
        ZX_RATES_VL    ZX_RATE,
        ZX_EXEMPTIONS  ZX_EX,
        XLA_TRANSACTION_ENTITIES xla_ent,
        xla_events     xla_event,
        xla_ae_headers  xla_head,
        xla_ae_lines    xla_line,
        xla_acct_class_assgns  acs,
        xla_assignment_defns_b asd';

  L_WHERE_CLAUSE_AR_INV :=
 ' WHERE ZX_DET.INTERNAL_ORGANIZATION_ID = ZX_LINE.INTERNAL_ORGANIZATION_ID
    AND ZX_DET.APPLICATION_ID    = ZX_LINE.APPLICATION_ID
    AND ZX_DET.ENTITY_CODE       = ZX_LINE.ENTITY_CODE
    AND ZX_DET.EVENT_CLASS_CODE  = ZX_LINE.EVENT_CLASS_CODE
    AND ZX_DET.TRX_ID            = ZX_LINE.TRX_ID
    AND ZX_DET.TRX_LINE_ID            = ZX_LINE.TRX_LINE_ID
    AND zx_det.trx_id           = xla_ent.source_id_int_1    -- Accounting Joins
    AND zx_det.application_id =   xla_ent.application_id
    AND xla_ent.entity_code      = ''RA_CUSTOMER_TRX''
    AND xla_ent.entity_id        = xla_event.entity_id
    AND xla_event.event_id       = xla_head.event_id
    AND xla_head.ae_header_id    = xla_line.ae_header_id
    AND acs.program_code   = ''TAX_REPORTING_LEDGER_SALES''
    AND acs.program_code = asd.program_code
    AND asd.assignment_code = acs.assignment_code
    AND asd.enabled_flag = ''Y''
    AND acs.accounting_class_code = xla_line.accounting_class_code  -- End of Accounting Joins
--    AND xla_line.accounting_class_code = ''TAX''
    AND zx_det.tax_reporting_flag = ''Y''
    AND ZX_LINE.TAX_EXEMPTION_ID = ZX_EX.TAX_EXEMPTION_ID(+)
    AND ZX_LINE.TAX_ID          = ZX_TAX.TAX_ID
    AND ZX_LINE.TAX_RATE_ID  = NVL(ZX_RATE.SOURCE_ID,ZX_RATE.TAX_RATE_ID)
    AND ((ZX_RATE.RECORD_TYPE_CODE <> ''MIGRATED'')
         OR (ZX_RATE.SOURCE_ID IS NULL)) '
       || L_WHERE_REPORTING_CONTEXT_TRXH
       || L_WHERE_LEDGER_ID
       || L_WHERE_LEGAL_ENTITY_ID
       || L_WHERE_REGISTER_TYPE_AR_TRX
       || L_WHERE_TRX_CLASS_INV_CM_DM
       || L_WHERE_BATCH_NAME
       || L_WHERE_TRX_NUMBER_INV
       || L_WHERE_TRX_DATE_INV
       || L_WHERE_GL_DATE_INV
       || L_WHERE_DOCUMENT_SUB_TYPE
       || L_WHERE_TRX_BUSINESS_CATEGORY
       || L_WHERE_TAX_INVOICE_DATE
       ||L_WHERE_TAX_JURISDICTION_CODE
       ||L_WHERE_FIRST_PTY_TAX_REG_NUM
       || L_WHERE_TAX_REGIME_CODE
       || L_WHERE_TAX
       || L_WHERE_TAX_STATUS_CODE
       || L_WHERE_TAX_RATE_CODE
       || L_WHERE_TAX_TYPE_CODE
       || L_WHERE_CURRENCY_CODE
       || L_WHERE_EXEMPTION_STATUS
       || L_WHERE_TAX_CODE_VAT_TRX_TYPE
       || L_WHERE_TAX_LTE;

  L_GROUP_BY_AR_INV :=
  ' GROUP BY '||
      'ZX_DET.LEDGER_ID,
        ZX_DET.TRX_ID    ,
        ZX_DET.DOC_SEQ_ID ,
        ZX_DET.DOC_SEQ_NAME ,
        ZX_DET.RECEIVABLES_TRX_TYPE_ID,
        ZX_DET.LINE_CLASS,
        ZX_DET.EVENT_CLASS_CODE ,
       ZX_DET.BATCH_SOURCE_ID,
        ZX_LINE.TAX_RATE_ID ,
         ZX_RATE.DEF_REC_SETTLEMENT_OPTION_CODE,
        --ZX_LINE.TAX_RATE_REGISTER_TYPE_CODE,
        ZX_DET.PRODUCT_ID,
        ZX_DET.PRODUCT_DESCRIPTION,
        ZX_LINE.TAX_EXEMPTION_ID ,
        ZX_LINE.TAX_EXCEPTION_ID  ,
        ZX_LINE.TAX_LINE_ID,
        ZX_LINE.TAX_AMT,
        ZX_LINE.TAX_AMT_FUNCL_CURR  ,
        ZX_LINE.TAX_LINE_NUMBER,
        ZX_LINE.TAXABLE_AMT,
        ZX_LINE.TAXABLE_AMT_FUNCL_CURR ,
        ZX_LINE.TRX_LINE_ID,
        ZX_LINE.TRX_LINE_QUANTITY  ,
        ZX_DET.EXEMPT_CERTIFICATE_NUMBER,
        ZX_LINE.EXEMPT_REASON_CODE   ,
        TO_CHAR(NULL), --exception_reason_code
        ZX_DET.UOM_CODE,
       ZX_DET.INTERNAL_ORGANIZATION_ID ,--ORG_ID
       TO_CHAR(NULL),  --reverse_date
       ZX_LINE.TAX_RATE,
        ZX_LINE.TAX_RATE_CODE,
       --ZX_RATE.VAT_TRANSACTION_TYPE_CODE,
       ZX_RATE.RATE_TYPE_CODE,
       ZX_RATE.TAX_RATE_NAME,
        ZX_DET.TRX_NUMBER,
        ZX_DET.TRX_DESCRIPTION,
        ZX_DET.DOC_SEQ_VALUE,
        ZX_DET.TRX_DATE,
        ZX_DET.TRX_DUE_DATE ,
        ZX_DET.TRX_SHIPPING_DATE ,
        ZX_DET.TRX_COMMUNICATED_DATE ,
        ZX_DET.TRX_CURRENCY_CODE,
        ZX_DET.CURRENCY_CONVERSION_TYPE,
        ZX_DET.CURRENCY_CONVERSION_DATE,
        ZX_DET.CURRENCY_CONVERSION_RATE,
        ZX_DET.TRX_SIC_CODE,
        ZX_DET.FOB_POINT,
        ZX_DET.TRX_WAYBILL_NUMBER,
        ZX_DET.BATCH_SOURCE_NAME,
       ZX_DET.TRX_TYPE_DESCRIPTION,
        ZX_DET.TRX_LINE_DESCRIPTION,
        ZX_LINE.TRX_LINE_NUMBER,
      ZX_DET.TRX_LINE_TYPE,
        ZX_LINE.ATTRIBUTE_CATEGORY,
        ZX_LINE.ATTRIBUTE1,
        ZX_LINE.ATTRIBUTE2,
        ZX_LINE.ATTRIBUTE3,
        ZX_LINE.ATTRIBUTE4,
        ZX_LINE.ATTRIBUTE5,
        ZX_LINE.ATTRIBUTE6,
        ZX_LINE.ATTRIBUTE7,
        ZX_LINE.ATTRIBUTE8,
        ZX_LINE.ATTRIBUTE9,
        ZX_LINE.ATTRIBUTE10,
        ZX_LINE.ATTRIBUTE11,
        ZX_LINE.ATTRIBUTE12,
        ZX_LINE.ATTRIBUTE13,
        ZX_LINE.ATTRIBUTE14,
        ZX_LINE.ATTRIBUTE15,
        ZX_DET.APPLICATION_ID,
        ZX_DET.DOC_EVENT_STATUS,
         ZX_DET.APPLICATION_DOC_STATUS,
        ZX_DET.ESTABLISHMENT_ID,
       --ZX_DET.FUNCTIONAL_CURRECNY_CODE,
        --ZX_DET.LEDGER_NAME,
        ZX_DET.MINIMUM_ACCOUNTABLE_UNIT,
        ZX_DET.PRECISION,
       ZX_DET.APPLIED_TO_APPLICATION_ID,
        ZX_DET.APPLIED_TO_TRX_LINE_ID,
        ZX_DET.APPLIED_TO_ENTITY_CODE,
        ZX_DET.APPLIED_TO_TRX_ID,
        ZX_DET.APPLIED_TO_EVENT_CLASS_CODE,
        ZX_DET.APPLIED_TO_TRX_NUMBER,
        ZX_DET.RELATED_DOC_APPLICATION_ID,
        ZX_DET.RELATED_DOC_DATE,
        ZX_DET.RELATED_DOC_ENTITY_CODE,
        ZX_DET.RELATED_DOC_EVENT_CLASS_CODE,
        ZX_DET.RELATED_DOC_NUMBER,
        ZX_DET.RELATED_DOC_TRX_ID,
        ZX_DET.ADJUSTED_DOC_APPLICATION_ID,
        ZX_DET.ADJUSTED_DOC_DATE,
        --ZX_DET.BANKING_TP_TAXPAYER_ID,
        ZX_DET.REF_DOC_APPLICATION_ID,
        ZX_DET.REF_DOC_ENTITY_CODE,
        ZX_DET.REF_DOC_EVENT_CLASS_CODE,
        ZX_DET.REF_DOC_LINE_ID,
        ZX_DET.REF_DOC_LINE_QUANTITY,
        ZX_DET.REF_DOC_TRX_ID,
        ZX_RATE.DEF_REC_SETTLEMENT_OPTION_CODE,
        ZX_DET.DEFAULT_TAXATION_COUNTRY,
        ZX_DET.DOCUMENT_SUB_TYPE,
        ZX_DET.TRX_BUSINESS_CATEGORY,
        ZX_DET.LINE_INTENDED_USE,
        ZX_DET.PRODUCT_CATEGORY,
        ZX_DET.PRODUCT_FISC_CLASSIFICATION,
        ZX_DET.SUPPLIER_EXCHANGE_RATE,
        ZX_DET.SUPPLIER_TAX_INVOICE_DATE,
        ZX_DET.SUPPLIER_TAX_INVOICE_NUMBER,
        ZX_DET.USER_DEFINED_FISC_CLASS,
        ZX_LINE.EXCEPTION_RATE,
        ZX_LINE.EXEMPT_RATE_MODIFIER,
        ZX_LINE.ORIG_TAX_AMT,
        ZX_LINE.ORIG_TAX_AMT_TAX_CURR ,
        ZX_LINE.ORIG_TAXABLE_AMT,
        ZX_LINE.ORIG_TAXABLE_AMT_TAX_CURR,
       ZX_LINE.TAX_AMT_TAX_CURR ,
        ZX_LINE.TAX_APPORTIONMENT_LINE_NUMBER,
        ZX_LINE.TAX_CURRENCY_CODE,
        ZX_LINE.TAX_DATE,
        ZX_LINE.TAX_DETERMINE_DATE,
        ZX_DET.TAX_INVOICE_DATE,
        ZX_DET.TAX_INVOICE_NUMBER,
        ZX_LINE.TAX_JURISDICTION_CODE,
        ZX_LINE.TAX_REGIME_CODE,
        ZX_LINE.TAX_STATUS_CODE,
        ZX_DET.SHIP_FROM_PARTY_TAX_PROF_ID  ,
        ZX_DET.SHIP_FROM_SITE_TAX_PROF_ID,
        ZX_DET.SHIP_TO_PARTY_TAX_PROF_ID  ,
        ZX_DET.SHIP_TO_SITE_TAX_PROF_ID  ,
        ZX_DET.BILL_TO_PARTY_TAX_PROF_ID,
        ZX_DET.BILL_TO_SITE_TAX_PROF_ID,
         ZX_DET.SHIP_THIRD_PTY_ACCT_SITE_ID,
         ZX_DET.BILL_THIRD_PTY_ACCT_SITE_ID,
         ZX_DET.SHIP_TO_CUST_ACCT_SITE_USE_ID,
         ZX_DET.BILL_TO_CUST_ACCT_SITE_USE_ID,
         ZX_DET.SHIP_THIRD_PTY_ACCT_ID,
         ZX_DET.BILL_THIRD_PTY_ACCT_ID,
        ZX_LINE.HQ_ESTB_REG_NUMBER ,
        ZX_LINE.LEGAL_ENTITY_TAX_REG_NUMBER,
        ZX_DET.OWN_HQ_SITE_TAX_PROF_ID,
        ZX_DET.OWN_HQ_PARTY_TAX_PROF_ID,
        ZX_DET.PORT_OF_ENTRY_CODE,
        ZX_LINE.REGISTRATION_PARTY_TYPE,
        ZX_LINE.HISTORICAL_FLAG,
        ZX_LINE.MRC_TAX_LINE_FLAG,
      --  ZX_LINE.POSTED_FLAG,
        ZX_LINE.REPORTING_ONLY_FLAG,
        ZX_LINE.TAX_AMT_INCLUDED_FLAG,
        ZX_LINE.TAX_ONLY_LINE_FLAG,
         ZX_DET.EVENT_CLASS_MAPPING_ID,
         ZX_DET.TRX_LEVEL_TYPE,
         ZX_LINE.PLACE_OF_SUPPLY_TYPE_CODE,
         ZX_DET.POA_LOCATION_ID,
         ZX_DET.POO_LOCATION_ID,
         ZX_TAX.DEF_PLACE_OF_SUPPLY_TYPE_CODE,
         ZX_DET.LINE_AMT,
         ZX_LINE.TAX_PROVIDER_ID,
        xla_event.event_type_code, -- Accounting Columns
        xla_event.event_number,
        xla_event.event_status_code,
        xla_head.je_category_name,
        xla_head.accounting_date,
        xla_head.gl_transfer_status_code,
        xla_head.description,
        xla_line.ae_line_num,
        xla_line.accounting_class_code,
        xla_line.description,
        xla_line.statistical_amount,
        xla_event.process_status_code,
        xla_head.gl_transfer_status_code,
        xla_head.doc_sequence_id,
        xla_head.doc_sequence_value,
        xla_line.party_id,
        xla_line.party_site_id,
        xla_line.party_type_code,
        xla_event.event_id,
        xla_head.ae_header_id,
        xla_line.code_combination_id,
        xla_head.period_name,
	zx_det.trx_line_id';


 -- P_WHERE_CLAUSE_AR_INV := L_WHERE_CLAUSE_AR_INV || L_GROUP_BY_AR_INV_4;
  L_WHERE_CLAUSE_AR_INV := L_WHERE_CLAUSE_AR_INV || L_GROUP_BY_AR_INV_4;

        ELSIF UPPER(G_SUMMARY_LEVEL) = 'TRANSACTION_DISTRIBUTION' THEN
        -- apai commented : needs to be removed   AND NVL(G_TRX_CLASS,'INV') IN ('INV','CM','DM')  THEN
        --    Matrix reporting is not supported at transaction distribution level


    IF (g_level_procedure >= g_current_runtime_level ) THEN
        FND_LOG.STRING(g_level_procedure, 'ZX.TRL.ZX_AR_ACTG_EXTRACT_PKG.BUILD_SQL',
                      'SQL-3 For Invoice, Credit Memo, Debit Memo: Distribution Level');
    END IF;

  L_COLUMN_LIST_AR_INV :=
  'SELECT '||
       'ZX_DET.LEDGER_ID,
        ZX_DET.TRX_ID    ,
        ZX_DET.DOC_SEQ_ID ,
        ZX_DET.DOC_SEQ_NAME ,
        ZX_DET.RECEIVABLES_TRX_TYPE_ID,
        ZX_DET.LINE_CLASS,
        ZX_DET.EVENT_CLASS_CODE ,
        TO_CHAR(NULL) ,'|| --APPLIED_FROM_ENTITY_CODE
       'TO_NUMBER(NULL)  ,'||--APPLIED_FROM_TRX_ID
       'TO_CHAR(NULL)  ,'||--APPLIED_FROM_EVENT_CLASS_CODE
       'TO_CHAR(NULL)  ,'||  -- ADJUSTED_DOC_ENTITY_CODE --APPLIED_TO_ENTITY_CODE
       'TO_NUMBER(NULL) ,'|| --ADJSUTED_DOC_ID --APPLIED_TO_TRX_ID
       'TO_CHAR(NULL)  ,'||  --ADJUSTED_DOC_EVENT_CLASS_CODE  --APPLIED_TO_EVENT_CLASS_CODE
       'TO_CHAR(NULL)  ,'|| --ADJUSTED_DOC_NUMBER  --APPLIED_TO_TRX_NUMBER
       'ZX_DET.BATCH_SOURCE_ID,
        ZX_LINE.TAX_RATE_ID ,
         DECODE(ZX_RATE.DEF_REC_SETTLEMENT_OPTION_CODE,''IMMEDIATE'',''TAX'',''DEFERRED'',''INTERIM''), --ZX_LINE.TAX_RATE_REGISTER_TYPE_CODE,
        ZX_DET.PRODUCT_ID,
        ZX_DET.PRODUCT_DESCRIPTION,
        TO_CHAR(NULL),   --TAXABLE_LINE_SOURCE_TABLE,
        TO_NUMBER(NULL),   --TAXABLE_ITEM_SOURCE_ID,
        ZX_LINE.TAX_EXEMPTION_ID ,
        ZX_LINE.TAX_EXCEPTION_ID  ,
        TO_NUMBER(NULL),   --TAXABLE_LINE_TOTAL_AMOUNT  ,
        ZX_LINE.TAX_LINE_ID,
        ZX_LINE.TAX_AMT,
        ZX_LINE.TAX_AMT_FUNCL_CURR  ,
        ZX_LINE.TAX_LINE_NUMBER,
        ZX_LINE.TAXABLE_AMT,
        ZX_LINE.TAXABLE_AMT_FUNCL_CURR ,
       ZX_LINE.TRX_LINE_ID,
        ZX_LINE.TRX_LINE_QUANTITY  ,
       ZX_DET.EXEMPT_CERTIFICATE_NUMBER,
        ZX_LINE.EXEMPT_REASON_CODE   ,
        TO_CHAR(NULL), --exception_reason_code
        ZX_DET.UOM_CODE,
        TO_CHAR(NULL)  ,'||--RECONCILIATION_FLAG
       'ZX_DET.INTERNAL_ORGANIZATION_ID ,'||--ORG_ID
       'TO_NUMBER(NULL),'||--BR_REF_CUSTOMER_TRX_ID
       --'TO_CHAR(NULL),  --reverse_date
        'TO_NUMBER(NULL)   ,'||--AMOUNT_APPLIED
        'TO_NUMBER(NULL),'||  --TAX_APPLIED
       'ZX_LINE.TAX_RATE,
        ZX_LINE.TAX_RATE_CODE,
        ZX_RATE.VAT_TRANSACTION_TYPE_CODE,
       ZX_RATE.RATE_TYPE_CODE,
       ZX_RATE.TAX_RATE_NAME,
        ZX_DET.TRX_NUMBER,
        ZX_DET.TRX_DESCRIPTION,
        ZX_DET.DOC_SEQ_VALUE,
        ZX_DET.TRX_DATE,
        TO_DATE(NULL),   --Deposit Date
        ZX_DET.TRX_DUE_DATE ,
        ZX_DET.TRX_SHIPPING_DATE ,
        ZX_DET.TRX_COMMUNICATED_DATE ,
        ZX_DET.TRX_CURRENCY_CODE,
        ZX_DET.CURRENCY_CONVERSION_TYPE,
        ZX_DET.CURRENCY_CONVERSION_DATE,
        ZX_DET.CURRENCY_CONVERSION_RATE,
        ZX_DET.TRX_SIC_CODE,
        ZX_DET.FOB_POINT,
        ZX_DET.TRX_WAYBILL_NUMBER,
        ZX_DET.BATCH_SOURCE_NAME,
       ZX_DET.TRX_TYPE_DESCRIPTION,
        ZX_DET.TRX_LINE_DESCRIPTION,
        ZX_LINE.TRX_LINE_NUMBER,
        ZX_DET.TRX_LINE_TYPE,
        ZX_LINE.ATTRIBUTE_CATEGORY,
        ZX_LINE.ATTRIBUTE1,
        ZX_LINE.ATTRIBUTE2,
        ZX_LINE.ATTRIBUTE3,
        ZX_LINE.ATTRIBUTE4,
        ZX_LINE.ATTRIBUTE5,
        ZX_LINE.ATTRIBUTE6,
        ZX_LINE.ATTRIBUTE7,
        ZX_LINE.ATTRIBUTE8,
        ZX_LINE.ATTRIBUTE9,
        ZX_LINE.ATTRIBUTE10,
        ZX_LINE.ATTRIBUTE11,
        ZX_LINE.ATTRIBUTE12,
        ZX_LINE.ATTRIBUTE13,
        ZX_LINE.ATTRIBUTE14,
        ZX_LINE.ATTRIBUTE15,
       ZX_DET.APPLICATION_ID,
        ZX_DET.DOC_EVENT_STATUS,
         ZX_DET.APPLICATION_DOC_STATUS,
        ZX_DET.ESTABLISHMENT_ID,
        ''AR'','|| --EXTRACT_SOURCE_LEDGER
       '--ZX_DET.FUNCTIONAL_CURRECNY_CODE,
        --ZX_DET.LEDGER_NAME,
        ZX_DET.MINIMUM_ACCOUNTABLE_UNIT,
        ZX_DET.PRECISION,
        TO_NUMBER(NULL)  ,'|| --RECEIPT_CLASS_ID
       'ZX_DET.APPLIED_TO_APPLICATION_ID,
        ZX_DET.APPLIED_TO_TRX_LINE_ID,
        ZX_DET.APPLIED_TO_ENTITY_CODE,
        ZX_DET.APPLIED_TO_TRX_ID,
        ZX_DET.APPLIED_TO_EVENT_CLASS_CODE,
        ZX_DET.APPLIED_TO_TRX_NUMBER,
        ZX_DET.RELATED_DOC_APPLICATION_ID,
        ZX_DET.RELATED_DOC_DATE,
        ZX_DET.RELATED_DOC_ENTITY_CODE,
        ZX_DET.RELATED_DOC_EVENT_CLASS_CODE,
        ZX_DET.RELATED_DOC_NUMBER,
        ZX_DET.RELATED_DOC_TRX_ID,
        ZX_DET.ADJUSTED_DOC_APPLICATION_ID,
        ZX_DET.ADJUSTED_DOC_DATE,
        --ZX_DET.BANKING_TP_TAXPAYER_ID,
        ZX_DET.REF_DOC_APPLICATION_ID,
        ZX_DET.REF_DOC_ENTITY_CODE,
        ZX_DET.REF_DOC_EVENT_CLASS_CODE,
        ZX_DET.REF_DOC_LINE_ID,
        ZX_DET.REF_DOC_LINE_QUANTITY,
        ZX_DET.REF_DOC_TRX_ID,
        ZX_RATE.DEF_REC_SETTLEMENT_OPTION_CODE,
        ZX_DET.DEFAULT_TAXATION_COUNTRY,
        ZX_DET.DOCUMENT_SUB_TYPE,
        ZX_DET.TRX_BUSINESS_CATEGORY,
        ZX_DET.LINE_INTENDED_USE,
        ZX_DET.PRODUCT_CATEGORY,
        ZX_DET.PRODUCT_FISC_CLASSIFICATION,
        ZX_DET.SUPPLIER_EXCHANGE_RATE,
        ZX_DET.SUPPLIER_TAX_INVOICE_DATE,
        ZX_DET.SUPPLIER_TAX_INVOICE_NUMBER,
        ZX_DET.USER_DEFINED_FISC_CLASS,
        ZX_LINE.EXCEPTION_RATE,
        ZX_LINE.EXEMPT_RATE_MODIFIER,
        ZX_LINE.ORIG_TAX_AMT,
        ZX_LINE.ORIG_TAX_AMT_TAX_CURR ,
        ZX_LINE.ORIG_TAXABLE_AMT,
        ZX_LINE.ORIG_TAXABLE_AMT_TAX_CURR,
        TO_CHAR(NULL)  ,'|| -- RECOVERY_RATE_CODE,
       'ZX_LINE.TAX_AMT_TAX_CURR ,
        ZX_LINE.TAX_APPORTIONMENT_LINE_NUMBER,
        ZX_LINE.TAX_CURRENCY_CODE,
        ZX_LINE.TAX_DATE,
        ZX_LINE.TAX_DETERMINE_DATE,
        ZX_DET.TAX_INVOICE_DATE,
        ZX_DET.TAX_INVOICE_NUMBER,
        ZX_LINE.TAX_JURISDICTION_CODE,
        ZX_LINE.TAX_REGIME_CODE,
        ZX_LINE.TAX_STATUS_CODE,
        ZX_DET.SHIP_FROM_PARTY_TAX_PROF_ID  ,
        ZX_DET.SHIP_FROM_SITE_TAX_PROF_ID,
        ZX_DET.SHIP_TO_PARTY_TAX_PROF_ID  ,
        ZX_DET.SHIP_TO_SITE_TAX_PROF_ID  ,
        ZX_DET.BILL_TO_PARTY_TAX_PROF_ID,
        ZX_DET.BILL_TO_SITE_TAX_PROF_ID,
         ZX_DET.SHIP_THIRD_PTY_ACCT_SITE_ID,
         ZX_DET.BILL_THIRD_PTY_ACCT_SITE_ID,
         ZX_DET.SHIP_TO_CUST_ACCT_SITE_USE_ID,
         ZX_DET.BILL_TO_CUST_ACCT_SITE_USE_ID,
         ZX_DET.SHIP_THIRD_PTY_ACCT_ID,
         ZX_DET.BILL_THIRD_PTY_ACCT_ID,
        ZX_LINE.HQ_ESTB_REG_NUMBER ,
        ZX_LINE.LEGAL_ENTITY_TAX_REG_NUMBER,
        ZX_DET.OWN_HQ_SITE_TAX_PROF_ID,
        ZX_DET.OWN_HQ_PARTY_TAX_PROF_ID,
        ZX_DET.PORT_OF_ENTRY_CODE,
        ZX_LINE.REGISTRATION_PARTY_TYPE,
        ZX_LINE.HISTORICAL_FLAG,
        ZX_LINE.MRC_TAX_LINE_FLAG,
   --     ZX_LINE.POSTED_FLAG,
        ZX_LINE.REPORTING_ONLY_FLAG,
        ZX_LINE.TAX_AMT_INCLUDED_FLAG,
        ZX_LINE.TAX_ONLY_LINE_FLAG,
         ZX_DET.EVENT_CLASS_MAPPING_ID,
         ZX_DET.TRX_LEVEL_TYPE,
         ZX_LINE.PLACE_OF_SUPPLY_TYPE_CODE,
         ZX_DET.POA_LOCATION_ID,
         ZX_DET.POO_LOCATION_ID,
         ZX_TAX.DEF_PLACE_OF_SUPPLY_TYPE_CODE,
         ZX_DET.LINE_AMT,
         ZX_LINE.TAX_PROVIDER_ID,
        xla_event.event_type_code, -- Accounting Columns
        xla_event.event_number,
        xla_event.event_status_code,
        xla_head.je_category_name,
        xla_head.accounting_date,
        xla_head.gl_transfer_status_code,
        xla_head.description,
        xla_line.ae_line_num,
        xla_line.accounting_class_code,
        xla_line.description,
        xla_line.statistical_amount,
        xla_event.process_status_code,
        xla_head.gl_transfer_status_code,
        xla_head.doc_sequence_id,
        xla_head.doc_sequence_value,
        xla_line.party_id,
        xla_line.party_site_id,
        xla_line.party_type_code,
        xla_event.event_id,
        xla_head.ae_header_id,
        xla_line.code_combination_id,
        xla_head.period_name,
        dist.cust_trx_line_gl_dist_id,
         TO_DATE ( NULL ),
         TO_CHAR ( NULL ),
         TO_NUMBER ( NULL ),
         TO_NUMBER ( NULL ),
         TO_CHAR ( NULL ),
         DIST.ACCOUNT_CLASS,
         DIST.LATEST_REC_FLAG ';

L_TABLE_LIST_AR_INV   :=
  ' FROM ZX_LINES ZX_LINE,
        ZX_LINES_DET_FACTORS ZX_DET
        RA_CUSTOMER_TRX_LINES_ALL LINES,
        RA_CUST_TRX_LINE_GL_DIST_ALL DIST,
        ZX_TAXES_B    ZX_TAX,
        ZX_RATES_VL    ZX_RATE,
        ZX_EXEMPTIONS  ZX_EX,
        XLA_TRANSACTION_ENTITIES XLA_ENT,
        XLA_EVENTS     XLA_EVENT,
        XLA_AE_HEADERS  XLA_HEAD,
        XLA_AE_LINES    XLA_LINE,
        xla_acct_class_assgns  acs,
        xla_assignment_defns_b asd ';
L_WHERE_CLAUSE_AR_INV :=
 ' WHERE ZX_DET.INTERNAL_ORGANIZATION_ID = ZX_LINE.INTERNAL_ORGANIZATION_ID
    AND ZX_DET.APPLICATION_ID    = ZX_LINE.APPLICATION_ID
    AND ZX_DET.ENTITY_CODE       = ZX_LINE.ENTITY_CODE
    AND ZX_DET.EVENT_CLASS_CODE  = ZX_LINE.EVENT_CLASS_CODE
    AND ZX_DET.TRX_ID            = ZX_LINE.TRX_ID
    AND ZX_DET.TRX_LINE_ID            = ZX_LINE.TRX_LINE_ID
    AND LINES.CUSTOMER_TRX_ID = ZX_DET.TRX_ID
    AND LINES.TAX_LINE_ID = ZX_LINE.TAX_LINE_ID
    AND DIST.CUSTOMER_TRX_ID     = LINES.CUSTOMER_TRX_ID
    AND DIST.CUSTOMER_TRX_LINE_ID = LINES.CUSTOMER_TRX_LINE_ID
    AND DIST.ACCOUNT_CLASS = ''TAX''
    AND zx_det.trx_id           = xla_ent.source_id_int_1    -- Accounting Joins
    AND zx_det.application_id =   xla_ent.application_id
    AND xla_ent.entity_code      = ''RA_CUSTOMER_TRX''
    AND xla_ent.entity_id        = xla_event.entity_id
    AND xla_event.event_id       = xla_head.event_id
    AND xla_head.ae_header_id    = xla_line.ae_header_id
    AND acs.program_code   = ''TAX_REPORTING_LEDGER_SALES''
    AND acs.program_code = asd.program_code
    AND asd.assignment_code = acs.assignment_code
    AND asd.enabled_flag = ''Y''
    AND acs.accounting_class_code = xla_line.accounting_class_code  -- End of Accounting Joins
    --AND xla_line.accounting_class_code = ''TAX''
    AND zx_det.tax_reporting_flag = ''Y''
    AND ZX_LINE.TAX_EXEMPTION_ID = ZX_EX.TAX_EXEMPTION_ID(+)
    AND ZX_LINE.TAX_ID          = ZX_TAX.TAX_ID
    AND ZX_LINE.TAX_RATE_ID     = NVL(ZX_RATE.SOURCE_ID,ZX_RATE.TAX_RATE_ID)
    AND ((ZX_RATE.RECORD_TYPE_CODE <> ''MIGRATED'')
         OR (ZX_RATE.SOURCE_ID IS NULL)) '
       || L_WHERE_REPORTING_CONTEXT_TRXH
       || L_WHERE_LEDGER_ID
       || L_WHERE_LEGAL_ENTITY_ID
       || L_WHERE_REGISTER_TYPE_AR_TRX
       || L_WHERE_TRX_CLASS_INV_CM_DM
       || L_WHERE_BATCH_NAME
       || L_WHERE_TRX_NUMBER_INV
       || L_WHERE_TRX_DATE_INV
       || L_WHERE_GL_DATE_INV
       || L_WHERE_DOCUMENT_SUB_TYPE
       || L_WHERE_TRX_BUSINESS_CATEGORY
       || L_WHERE_TAX_INVOICE_DATE
       ||L_WHERE_TAX_JURISDICTION_CODE
       ||L_WHERE_FIRST_PTY_TAX_REG_NUM
       || L_WHERE_TAX_REGIME_CODE
       || L_WHERE_TAX
       || L_WHERE_TAX_STATUS_CODE
       || L_WHERE_TAX_RATE_CODE
       || L_WHERE_TAX_TYPE_CODE
       || L_WHERE_CURRENCY_CODE
       || L_WHERE_EXEMPTION_STATUS
       || L_WHERE_TAX_CODE_VAT_TRX_TYPE
       || L_WHERE_TAX_LTE;


--P_WHERE_CLAUSE_AR_INV := L_WHERE_CLAUSE_AR_INV;

        END IF; -- G_SUMMARY_LEVEL
   --   END IF; -- G_REGISTER_TYPE
  --  END IF; -- G_REGISTER_TYPE
  END IF; -- G_TRX_CLASS IS NULL


  --  The queries for Invoices, Applied Credit Memos, Applications, Adjustments,
  --  Cash Receipts have been separated for ease of maintenance.

  --  Building the Column List, Table List and Where Clauses for

  --  Applied Credit Memos : Applied Credit Memos : Applied Credit Memos
  --  Applied Credit Memos : Applied Credit Memos : Applied Credit Memos
  --  Applied Credit Memos : Applied Credit Memos : Applied Credit Memos
  -- CONDITIONALLY EXECUTE

  -- Build SQL for APPLIED CM

  --    NEED CHECK WITH KRIPA HOW TO HANDLE APPLIED CREDIT MEMOS IN ETAX


  IF  G_INCLUDE_AR_APPL_TRX_CLASS = 'Y' THEN
    IF (UPPER(G_SUMMARY_LEVEL) = 'TRANSACTION'
        OR
        UPPER(G_SUMMARY_LEVEL) = 'TRANSACTION_LINE')
    THEN

    IF (g_level_procedure >= g_current_runtime_level ) THEN
        FND_LOG.STRING(g_level_procedure, 'ZX.TRL.ZX_AR_ACTG_EXTRACT_PKG.BUILD_SQL',
                      'SQL-4 For AR Applications : Header or Line Level');
    END IF;

  L_COLUMN_LIST_AR_APP :=
      'SELECT '||
           'ARCS.SET_OF_BOOKS_ID,
             ARCS.CASH_RECEIPT_ID, '||
            'ARCS.DOC_SEQUENCE_ID,
             SEQ.NAME,
             TO_NUMBER(NULL), '||
             'DECODE(ARD.SOURCE_TYPE,''EDISC'',''EDISC'',''UNEDISC'',
                    ''UNEDISC'',''REC'',''APP''), '||
             'DECODE(ARD.SOURCE_TYPE,''EDISC'',''EDISC'',''UNEDISC'',
                    ''UNEDISC'',''REC'',''APP''), '||
            ' ''APP'',
             APP.RECEIVABLE_APPLICATION_ID, '||
            '''APP'','||
             'ZX_DET.ADJUSTED_DOC_ENTITY_CODE,'||    --INV
             'ZX_DET.ADJUSTED_DOC_TRX_ID,'|| -- Applied_to_trx_id -- adjusted_doc_id in eTax
            'ZX_DET.ADJUSTED_DOC_EVENT_CLASS_CODE,'||   -- INV
            'ZX_DET.ADJUSTED_DOC_NUMBER, --Applied_doc_number
             ZX_DET.BATCH_SOURCE_ID,'||
            'ARDTAX.TAX_CODE_ID,'||
            'DECODE(ARDTAX.SOURCE_TYPE,''TAX'',''TAX'',''DEFERRED_TAX'',''INTERIM'',
                ''UNEDISC_NON_REC_TAX'',''NON-RECOVERABLE'',
                ''EDISC_NON_REC_TAX'',''NON-RECOVERABLE'',NULL), ' || -- REG. TYPE CODE
            'TO_NUMBER(NULL),
             TO_CHAR(NULL),
             ARD.SOURCE_TABLE,
             ARD.SOURCE_ID,
             TO_NUMBER(NULL),'||
            'TO_NUMBER(NULL),'||
            'sum(nvl(ARDTAX.TAXABLE_ENTERED_CR,0)-nvl(ARDTAX.TAXABLE_ENTERED_DR,0)),'||-- Total Amount
            'TO_NUMBER(NULL), ' || -- tax_line_id
            'sum(nvl(ARDTAX.AMOUNT_CR,0)-nvl(ARDTAX.AMOUNT_DR,0)),'||
            'sum(nvl(ARDTAX.ACCTD_AMOUNT_CR,0) - nvl(ARDTAX.ACCTD_AMOUNT_DR,0)) ,'||
            'TO_NUMBER(NULL), '||
            'sum(nvl(ARDTAX.TAXABLE_ENTERED_CR,0) - nvl(ARDTAX.TAXABLE_ENTERED_DR,0)) ,'||
            'sum(nvl(ARDTAX.TAXABLE_ACCOUNTED_CR,0) - nvl(ARDTAX.TAXABLE_ACCOUNTED_DR,0)),'|| -- ar matrix ++ 17
             'TO_NUMBER(NULL),
             TO_NUMBER(NULL),
             TO_CHAR(NULL),
             TO_CHAR(NULL),
             TO_CHAR(NULL),
             TO_CHAR(NULL), '||
             'DECODE(ARDTAX.SOURCE_TYPE_SECONDARY,''RECONCILE'',''Y'','||
            ' ''ASSIGNMENT_RECONCILE'', ''Y'',''N''), ' ||
            'ZX_DET.INTERNAL_ORGANIZATION_ID,
            TO_NUMBER(NULL), ' ||
        --    'ARCS.REVERSAL_DATE,     --Check this column
            ' APP.AMOUNT_APPLIED,
             APP.TAX_APPLIED,
             ZX_RATE.PERCENTAGE_RATE,
             ZX_RATE.TAX_RATE_CODE,
             ZX_RATE.VAT_TRANSACTION_TYPE_CODE,
             ZX_RATE.RATE_TYPE_CODE,
             ZX_RATE.TAX_RATE_NAME,
             ARCS.RECEIPT_NUMBER,
             ZX_DET.TRX_DESCRIPTION,
             ARCS.DOC_SEQUENCE_VALUE,
             ARCS.RECEIPT_DATE,
             ARCS.DEPOSIT_DATE,
             ZX_DET.TRX_DUE_DATE,
             ZX_DET.TRX_SHIPPING_DATE,
             ZX_DET.TRX_COMMUNICATED_DATE,
             ARCS.CURRENCY_CODE,
             ARCS.EXCHANGE_RATE_TYPE,
             ARCS.EXCHANGE_DATE,
             ARCS.EXCHANGE_RATE,
             TO_CHAR(NULL),
             ZX_DET.FOB_POINT,
             ZX_DET.TRX_WAYBILL_NUMBER,
             ZX_DET.BATCH_SOURCE_NAME,'||
            'TO_CHAR(NULL),'|| -- TRX_TYPE_DESCRIPTION
            -- 'ZX_RATE.RATE_TYPE_CODE,
            'TO_CHAR(NULL),
            TO_NUMBER(NULL),
             TO_CHAR(NULL),
             TO_CHAR(NULL),
             TO_CHAR(NULL),
             TO_CHAR(NULL),
             TO_CHAR(NULL),
             TO_CHAR(NULL),
             TO_CHAR(NULL),
             TO_CHAR(NULL),
             TO_CHAR(NULL),
             TO_CHAR(NULL),
             TO_CHAR(NULL),
             TO_CHAR(NULL),
             TO_CHAR(NULL),
             TO_CHAR(NULL),
             TO_CHAR(NULL),
             TO_CHAR(NULL),
             TO_CHAR(NULL),
             ZX_DET.APPLICATION_ID,
              ZX_DET.DOC_EVENT_STATUS,
         ZX_DET.APPLICATION_DOC_STATUS,
              ZX_DET.ESTABLISHMENT_ID,
              ''AR'', --EXTRACT_SOURCE_LEDGER,
              --ZX_DET.FUNCTIONAL_CURRECNY_CODE,
              --ZX_DET.LEDGER_NAME,
              ZX_DET.MINIMUM_ACCOUNTABLE_UNIT,
              ZX_DET.PRECISION,
              to_number(NULL),      --RECEIPT_CLASS_ID,
              ZX_DET.APPLIED_TO_APPLICATION_ID,
              ZX_DET.APPLIED_TO_TRX_LINE_ID,
              ZX_DET.APPLIED_TO_ENTITY_CODE,
              ZX_DET.APPLIED_TO_TRX_ID,
              ZX_DET.APPLIED_TO_EVENT_CLASS_CODE,
              ZX_DET.APPLIED_TO_TRX_NUMBER,
              ZX_DET.RELATED_DOC_APPLICATION_ID,
              ZX_DET.RELATED_DOC_DATE,
              ZX_DET.RELATED_DOC_ENTITY_CODE,
              ZX_DET.RELATED_DOC_EVENT_CLASS_CODE,
              ZX_DET.RELATED_DOC_NUMBER,
              ZX_DET.RELATED_DOC_TRX_ID,
              ZX_DET.ADJUSTED_DOC_APPLICATION_ID,
              ZX_DET.ADJUSTED_DOC_DATE,
              --ZX_DET.BANKING_TP_TAXPAYER_ID,
              ZX_DET.REF_DOC_APPLICATION_ID,
              ZX_DET.REF_DOC_ENTITY_CODE,
              ZX_DET.REF_DOC_EVENT_CLASS_CODE,
              ZX_DET.REF_DOC_LINE_ID,
              ZX_DET.REF_DOC_LINE_QUANTITY,
              ZX_DET.REF_DOC_TRX_ID,
              ZX_RATE.DEF_REC_SETTLEMENT_OPTION_CODE,
              ZX_DET.DEFAULT_TAXATION_COUNTRY,
              ZX_DET.DOCUMENT_SUB_TYPE,
              ZX_DET.TRX_BUSINESS_CATEGORY,
              ZX_DET.LINE_INTENDED_USE,
              ZX_DET.PRODUCT_CATEGORY,
              ZX_DET.PRODUCT_FISC_CLASSIFICATION,
              ZX_DET.SUPPLIER_EXCHANGE_RATE,
              ZX_DET.SUPPLIER_TAX_INVOICE_DATE,
              ZX_DET.SUPPLIER_TAX_INVOICE_NUMBER,
              ZX_DET.USER_DEFINED_FISC_CLASS,
              TO_NUMBER(NULL),    --ZX_LINE.EXCEPTION_RATE,
              TO_NUMBER(NULL),    --ZX_LINE.EXEMPT_RATE_MODIFIER,
              TO_NUMBER(NULL),    --ZX_LINE.ORIG_TAX_AMT,
              TO_NUMBER(NULL),    --ZX_LINE.ORIG_TAX_AMT_TAX_CURR,
              TO_NUMBER(NULL),    --ZX_LINE.ORIG_TAXABLE_AMT,
              TO_NUMBER(NULL),    --ZX_LINE.ORIG_TAXABLE_AMT_TAX_CURR,
              TO_CHAR(NULL),    --ZX_RATE.RECOVERY_RATE_CODE,
              TO_NUMBER(NULL),    --ZX_LINE.TAX_AMT_TAX_CURR,
              TO_NUMBER(NULL),    --ZX_LINE.TAX_APPORTIONMENT_LINE_NUMBER,
              TO_CHAR(NULL),    --ZX_LINE.TAX_CURRENCY_CODE,
              TO_DATE(NULL),    --ZX_LINE.TAX_DATE,
              TO_DATE(NULL),    --ZX_LINE.TAX_DETERMINE_DATE,
              TO_DATE(NULL),    --ZX_DET.TAX_INVOICE_DATE,
              TO_NUMBER(NULL),    --ZX_DET.TAX_INVOICE_NUMBER,
              ZX_RATE.TAX_JURISDICTION_CODE,
              ZX_RATE.TAX_REGIME_CODE,
              ZX_RATE.TAX_STATUS_CODE,
              ZX_DET.SHIP_FROM_PARTY_TAX_PROF_ID,
              ZX_DET.SHIP_FROM_SITE_TAX_PROF_ID,
              ZX_DET.SHIP_TO_PARTY_TAX_PROF_ID,
              ZX_DET.SHIP_TO_SITE_TAX_PROF_ID,
              ZX_DET.BILL_TO_PARTY_TAX_PROF_ID,
              ZX_DET.BILL_TO_SITE_TAX_PROF_ID,'||
         'ZX_DET.SHIP_THIRD_PTY_ACCT_SITE_ID,
         ZX_DET.BILL_THIRD_PTY_ACCT_SITE_ID,
         ZX_DET.SHIP_TO_CUST_ACCT_SITE_USE_ID,
         ZX_DET.BILL_TO_CUST_ACCT_SITE_USE_ID,
         ZX_DET.SHIP_THIRD_PTY_ACCT_ID,
         ZX_DET.BILL_THIRD_PTY_ACCT_ID,
              TO_CHAR(NULL),'||  --ZX_LINE.HQ_ESTB_REG_NUMBER
              'TO_CHAR(NULL),'||     --ZX_LINE.LEGAL_ENTITY_TAX_REG_NUMBER
             'ZX_DET.OWN_HQ_SITE_TAX_PROF_ID,
              ZX_DET.OWN_HQ_PARTY_TAX_PROF_ID,
              ZX_DET.PORT_OF_ENTRY_CODE,
              TO_CHAR(NULL),'||     --ZX_LINE.REGISTRATION_PARTY_TYPE
              'TO_CHAR(NULL),'||     --ZX_LINE.HISTORICAL_FLAG
              'TO_CHAR(NULL),'||     --ZX_LINE.MRC_TAX_LINE_FLAG
            --  'TO_CHAR(NULL),'||     --ZX_LINE.POSTED_FLAG
              'TO_CHAR(NULL),'||     --ZX_LINE.REPORTING_ONLY_FLAG
              'TO_CHAR(NULL),'||     --ZX_LINE.TAX_AMT_INCLUDED_FLAG
              'TO_CHAR(NULL),'||     --ZX_LINE.TAX_ONLY_LINE_FLAG
         'ZX_DET.EVENT_CLASS_MAPPING_ID,
         ZX_DET.TRX_LEVEL_TYPE,
         TO_CHAR(NULL),       -- Place of supply type code
         ZX_DET.POA_LOCATION_ID,
         ZX_DET.POO_LOCATION_ID,
         TO_CHAR(NULL),       -- Default Place of supply type code
         ZX_DET.LINE_AMT,
         TO_NUMBER(NULL),'||
        'xla_event.event_type_code, -- Accounting Columns
        xla_event.event_number,
        xla_event.event_status_code,
        xla_head.je_category_name,
        xla_head.accounting_date,
        xla_head.gl_transfer_status_code,
        xla_head.description,
        xla_line.ae_line_num,
        xla_line.accounting_class_code,
        xla_line.description,
        xla_line.statistical_amount,
        xla_event.process_status_code,
        xla_head.gl_transfer_status_code,
        xla_head.doc_sequence_id,
        xla_head.doc_sequence_value,
        xla_line.party_id,
        xla_line.party_site_id,
        xla_line.party_type_code,
        xla_event.event_id,
        xla_head.ae_header_id,
        xla_line.code_combination_id,
        xla_head.period_name,
        ard.line_id,
         ARCS.REVERSAL_DATE,
         ARCS.STATUS,
         sum(ARD.ACCTD_AMOUNT_CR),
         sum(ARD.ACCTD_AMOUNT_DR),
         APP.STATUS,
         TO_CHAR(NULL),
         TO_CHAR(NULL) ';

-- P_COLUMN_LIST_AR_APP := L_COLUMN_LIST_AR_APP;

 L_TABLE_LIST_AR_APP   :=
    ' FROM   '||
    ' GL_CODE_COMBINATIONS       CC, '||
--    ' HZ_CUST_SITE_USES_ALL     TPSU_BILL, '||
--    ' HZ_CUST_SITE_USES_ALL     TPSU_SHIP, '||
--    ' RA_BATCH_SOURCES_ALL      BS, '||
    ' FND_DOCUMENT_SEQUENCES    SEQ, '||
--    ' AR_DISTRIBUTIONS_ALL       ARD, '||
--    ' AR_DISTRIBUTIONS_ALL       ARDTAX, '||
    L_TBL_NAME_AR_DIST_ALL || ' ARD, ' ||
    L_TBL_NAME_AR_DIST_ALL || ' ARDTAX, ' ||
    ' AR_PAYMENT_SCHEDULES_ALL   PAY, '||
    ' ZX_RATES_VL           ZX_RATE, '  ||
--    ' ZX_EXEMPTIONS         ZX_EX, ' ||
    ' ZX_LINES_DET_FACTORS        ZX_DET, '||
    ' ZX_PARTY_TAX_PROFILE     PTP, '||
    ' XLA_TRANSACTION_ENTITIES XLA_ENT, '||
    ' XLA_EVENTS     XLA_EVENT, '||
    ' XLA_AE_HEADERS  XLA_HEAD, '||
    ' XLA_AE_LINES    XLA_LINE, '||
        'xla_acct_class_assgns  acs,'||
        'xla_assignment_defns_b asd,'||
--    L_TBL_NAME_CUSTOMER_TRX_ALL || ' TRXH, ' ||
    ' AR_CASH_RECEIPTS_ALL       ARCS, '||
--    ' AR_RECEIVABLE_APPLICATIONS_ALL APP ';
    L_TBL_AR_RECEIVABLE_APPS_ALL || ' APP ';

--P_TABLE_LIST_AR_APP := L_TABLE_LIST_AR_APP;

L_WHERE_CLAUSE_AR_APP   :=
' WHERE zx_det.trx_id  = app.applied_customer_trx_id '||
  ' AND zx_det.tax_reporting_flag = ''Y'''||
  ' AND zx_det.hq_estb_party_tax_prof_id = ptp.party_tax_profile_id(+) '||
' AND   app.cash_receipt_id = ARcs.cash_receipt_id '||
' AND   app.status = ''APP'' ' ||
' AND   nvl(ARcs.confirmed_flag, ''Y'') = ''Y'' '||
--' AND   app.set_of_books_id = '||to_char(G_LEDGER_ID)||' '||
--' AND   trxh.complete_flag = ''Y'' '||
' AND   pay.payment_schedule_id = app.payment_schedule_id '||
' AND ( (
                         ard.source_type = ''EDISC''
                         and (ardtax.source_type_secondary = ''EDISC''
                              or ardtax.source_type = ''EDISC_NON_REC_TAX'')
        )
        OR
        (
                         ard.source_type = ''REC''
                         and ardtax.source_type_secondary in (''PAYMENT'',
                         ''ASSIGNMENT'',''RECONCILE'',''ASSIGNMENT_RECONCILE'')
        )
        OR
        (
                         ard.source_type = ''UNEDISC''
                         and (ardtax.source_type_secondary = ''UNEDISC''
                              or ardtax.source_type = ''UNEDISC_NON_REC_TAX'')
        )
      ) '||
' AND   ard.source_id = app.receivable_application_id '||
' AND   ard.source_table = ''RA'' '||
' AND   ardtax.source_id = app.receivable_application_id '||
' AND   ardtax.source_type in (''TAX'',''DEFERRED_TAX'', '||
'                   ''EDISC_NON_REC_TAX'',''UNEDISC_NON_REC_TAX'') '||
' AND   ardtax.source_table = ''RA'' '||
' AND   nvl(ardtax.tax_link_id,0) = nvl(ard.tax_link_id,0) '||
' AND ARCS.CASH_RECEIPT_ID           = XLA_ENT.SOURCE_ID_INT_1    -- Accounting Joins
  AND ZX_DET.APPLICATION_ID =   XLA_ENT.APPLICATION_ID
  AND XLA_ENT.ENTITY_CODE      = ''AR_CASH_RECEIPTS''
  AND XLA_ENT.ENTITY_ID        = XLA_EVENT.ENTITY_ID
  AND XLA_EVENT.EVENT_ID       = XLA_HEAD.EVENT_ID
  AND XLA_HEAD.AE_HEADER_ID    = XLA_LINE.AE_HEADER_ID
    AND acs.program_code   = ''TAX_REPORTING_LEDGER_SALES''
    AND acs.program_code = asd.program_code
    AND asd.assignment_code = acs.assignment_code
    AND asd.enabled_flag = ''Y''
    AND acs.accounting_class_code = xla_line.accounting_class_code'||  -- End Of Accounting Joins
--  AND XLA_LINE.ACCOUNTING_CLASS_CODE IN (''TAX'',''DEFERRED_TAX'', '||
--'                   ''EDISC_NON_REC_TAX'',''UNEDISC_NON_REC_TAX'')'||
--' AND   ZX_LINE.TAX_EXEMPTION_ID = ZX_EX.TAX_EXEMPTION_ID '||
' AND   ardtax.tax_code_id = NVL(ZX_RATE.SOURCE_ID,ZX_RATE.TAX_RATE_ID)
    AND ((ZX_RATE.RECORD_TYPE_CODE <> ''MIGRATED'')
         OR (ZX_RATE.SOURCE_ID IS NULL)) '||
' AND   ard.code_combination_id = cc.code_combination_id '||
' AND   arcs.doc_sequence_id = seq.doc_sequence_id (+) '
       || L_WHERE_REPORTING_CONTEXT_TRXH
       || L_WHERE_LEDGER_ID
       || L_WHERE_LEGAL_ENTITY_ID
       || L_WHERE_REGISTER_TYPE_AR_APP
       || L_WHERE_TRX_CLASS_APP_DISC
       || L_WHERE_BATCH_NAME
       || L_WHERE_TRX_NUMBER_APP
       || L_WHERE_TRX_DATE_APP
       || L_WHERE_GL_DATE_APP
       || L_WHERE_DOCUMENT_SUB_TYPE
       || L_WHERE_TRX_BUSINESS_CATEGORY
       || L_WHERE_TAX_INVOICE_DATE
       ||L_WHERE_TAX_JURIS_CODE_OTH
       ||L_WHERE_FIRST_PTY_TAX_REG_OTH
       || L_WHERE_TAX_REGIME_CODE_OTH
       || L_WHERE_TAX_OTH
       || L_WHERE_TAX_STATUS_CODE_OTH
       || L_WHERE_TAX_RATE_CODE
       || L_WHERE_TAX_TYPE_CODE
--       || L_WHERE_CURRENCY_CODE
       || L_WHERE_CURRENCY_CODE_APP
       || L_WHERE_EXEMPT_STATUS_OTH
       || L_WHERE_TAX_CODE_VAT_TRX_TYPE
       || L_WHERE_TAX_LTE_OTHER_CLS
 ||' GROUP BY '||
     'ARCS.SET_OF_BOOKS_ID,
             ARCS.CASH_RECEIPT_ID, '||
            'ARCS.DOC_SEQUENCE_ID,
             SEQ.NAME,
             DECODE(ARD.SOURCE_TYPE,''EDISC'',''EDISC'',''UNEDISC'',
                    ''UNEDISC'',''REC'',''APP''), '||
            ' ''APP'',
             APP.RECEIVABLE_APPLICATION_ID, '||
            '''APP'','||
             'ZX_DET.ADJUSTED_DOC_ENTITY_CODE,'||    --INV
             'ZX_DET.ADJUSTED_DOC_TRX_ID,'|| -- Applied_to_trx_id -- adjusted_doc_id in eTax
            'ZX_DET.ADJUSTED_DOC_EVENT_CLASS_CODE,'||   -- INV
            'ZX_DET.ADJUSTED_DOC_NUMBER, --Applied_doc_number
             ZX_DET.BATCH_SOURCE_ID,'||
            'ARDTAX.TAX_CODE_ID,'||
            'DECODE(ARDTAX.SOURCE_TYPE,''TAX'',''TAX'',''DEFERRED_TAX'',''INTERIM'',
                ''UNEDISC_NON_REC_TAX'',''NON-RECOVERABLE'',
                ''EDISC_NON_REC_TAX'',''NON-RECOVERABLE'',NULL), ' || -- REG. TYPE CODE
             'ARD.SOURCE_TABLE,
             ARD.SOURCE_ID,'||
             'DECODE(ARDTAX.SOURCE_TYPE_SECONDARY,''RECONCILE'',''Y'','||
            ' ''ASSIGNMENT_RECONCILE'', ''Y'',''N''), ' ||
            'ZX_DET.INTERNAL_ORGANIZATION_ID,
           -- ARCS.REVERSAL_DATE,
             APP.AMOUNT_APPLIED,
             APP.TAX_APPLIED,
             ZX_RATE.PERCENTAGE_RATE,
             ZX_RATE.TAX_RATE_CODE,
             ZX_RATE.VAT_TRANSACTION_TYPE_CODE,
             ZX_RATE.RATE_TYPE_CODE,
             ZX_RATE.TAX_RATE_NAME,
             ARCS.RECEIPT_NUMBER,
             ZX_DET.TRX_DESCRIPTION,
             ARCS.DOC_SEQUENCE_VALUE,
             ARCS.RECEIPT_DATE,
             ARCS.DEPOSIT_DATE,
             ZX_DET.TRX_DUE_DATE,
             ZX_DET.TRX_SHIPPING_DATE,
             ZX_DET.TRX_COMMUNICATED_DATE,
             ARCS.CURRENCY_CODE,
             ARCS.EXCHANGE_RATE_TYPE,
             ARCS.EXCHANGE_DATE,
             ARCS.EXCHANGE_RATE,
             ZX_DET.FOB_POINT,
             ZX_DET.TRX_WAYBILL_NUMBER,
             ZX_DET.BATCH_SOURCE_NAME,'||
            -- 'ZX_RATE.RATE_TYPE_CODE,
             'ZX_DET.APPLICATION_ID,
              ZX_DET.DOC_EVENT_STATUS,
         ZX_DET.APPLICATION_DOC_STATUS,
              ZX_DET.ESTABLISHMENT_ID,
              --ZX_DET.FUNCTIONAL_CURRECNY_CODE,
              --ZX_DET.LEDGER_NAME,
              ZX_DET.MINIMUM_ACCOUNTABLE_UNIT,
              ZX_DET.PRECISION,
            --  RECEIPT_CLASS_ID,
              ZX_DET.APPLIED_TO_APPLICATION_ID,
              ZX_DET.APPLIED_TO_TRX_LINE_ID,
              ZX_DET.APPLIED_TO_ENTITY_CODE,
              ZX_DET.APPLIED_TO_TRX_ID,
              ZX_DET.APPLIED_TO_EVENT_CLASS_CODE,
              ZX_DET.APPLIED_TO_TRX_NUMBER,
              ZX_DET.RELATED_DOC_APPLICATION_ID,
              ZX_DET.RELATED_DOC_DATE,
              ZX_DET.RELATED_DOC_ENTITY_CODE,
              ZX_DET.RELATED_DOC_EVENT_CLASS_CODE,
              ZX_DET.RELATED_DOC_NUMBER,
              ZX_DET.RELATED_DOC_TRX_ID,
              ZX_DET.ADJUSTED_DOC_APPLICATION_ID,
              ZX_DET.ADJUSTED_DOC_DATE,
              --ZX_DET.BANKING_TP_TAXPAYER_ID,
              ZX_DET.REF_DOC_APPLICATION_ID,
              ZX_DET.REF_DOC_ENTITY_CODE,
              ZX_DET.REF_DOC_EVENT_CLASS_CODE,
              ZX_DET.REF_DOC_LINE_ID,
              ZX_DET.REF_DOC_LINE_QUANTITY,
              ZX_DET.REF_DOC_TRX_ID,
              ZX_RATE.DEF_REC_SETTLEMENT_OPTION_CODE,
              ZX_DET.DEFAULT_TAXATION_COUNTRY,
              ZX_DET.DOCUMENT_SUB_TYPE,
              ZX_DET.TRX_BUSINESS_CATEGORY,
              ZX_DET.LINE_INTENDED_USE,
              ZX_DET.PRODUCT_CATEGORY,
              ZX_DET.PRODUCT_FISC_CLASSIFICATION,
              ZX_DET.SUPPLIER_EXCHANGE_RATE,
              ZX_DET.SUPPLIER_TAX_INVOICE_DATE,
              ZX_DET.SUPPLIER_TAX_INVOICE_NUMBER,
              ZX_DET.USER_DEFINED_FISC_CLASS,
             -- ZX_LINE.EXCEPTION_RATE,
              --ZX_LINE.EXEMPT_RATE_MODIFIER,
             -- ZX_RATE.RECOVERY_RATE_CODE,
              ZX_RATE.TAX_JURISDICTION_CODE,
              ZX_RATE.TAX_REGIME_CODE,
              ZX_RATE.TAX_STATUS_CODE,
              ZX_DET.SHIP_FROM_PARTY_TAX_PROF_ID,
              ZX_DET.SHIP_FROM_SITE_TAX_PROF_ID,
              ZX_DET.SHIP_TO_PARTY_TAX_PROF_ID,
              ZX_DET.SHIP_TO_SITE_TAX_PROF_ID,
              ZX_DET.BILL_TO_PARTY_TAX_PROF_ID,
              ZX_DET.BILL_TO_SITE_TAX_PROF_ID,'||
         'ZX_DET.SHIP_THIRD_PTY_ACCT_SITE_ID,
         ZX_DET.BILL_THIRD_PTY_ACCT_SITE_ID,
         ZX_DET.SHIP_TO_CUST_ACCT_SITE_USE_ID,
         ZX_DET.BILL_TO_CUST_ACCT_SITE_USE_ID,
         ZX_DET.SHIP_THIRD_PTY_ACCT_ID,
         ZX_DET.BILL_THIRD_PTY_ACCT_ID,
             ZX_DET.OWN_HQ_SITE_TAX_PROF_ID,
              ZX_DET.OWN_HQ_PARTY_TAX_PROF_ID,
              ZX_DET.PORT_OF_ENTRY_CODE,'||
         'ZX_DET.EVENT_CLASS_MAPPING_ID,
         ZX_DET.TRX_LEVEL_TYPE,
         ZX_DET.POA_LOCATION_ID,
         ZX_DET.POO_LOCATION_ID,
         ZX_DET.LINE_AMT,'||
        'xla_event.event_type_code, -- Accounting Columns
        xla_event.event_number,
        xla_event.event_status_code,
        xla_head.je_category_name,
        xla_head.accounting_date,
        xla_head.gl_transfer_status_code,
        xla_head.description,
        xla_line.ae_line_num,
        xla_line.accounting_class_code,
        xla_line.description,
        xla_line.statistical_amount,
        xla_event.process_status_code,
        xla_head.gl_transfer_status_code,
        xla_head.doc_sequence_id,
        xla_head.doc_sequence_value,
        xla_line.party_id,
        xla_line.party_site_id,
        xla_line.party_type_code,
        xla_event.event_id,
        xla_head.ae_header_id,
        xla_line.code_combination_id,
        xla_head.period_name,
        ard.line_id,
        ARCS.REVERSAL_DATE,
        ARCS.STATUS,
        APP.STATUS,
        TO_CHAR(NULL),
        TO_CHAR(NULL)';

    ELSIF UPPER(G_SUMMARY_LEVEL) = 'TRANSACTION_DISTRIBUTION' THEN

    IF (g_level_procedure >= g_current_runtime_level ) THEN
        FND_LOG.STRING(g_level_procedure, 'ZX.TRL.ZX_AR_ACTG_EXTRACT_PKG.BUILD_SQL',
                      'SQL-5 For AR Applications : Distribution Level');
    END IF;

  L_COLUMN_LIST_AR_APP :=
      'SELECT DISTINCT '||
            'ARCS.SET_OF_BOOKS_ID,
             ARCS.CASH_RECEIPT_ID, '||
            'ARCS.DOC_SEQUENCE_ID,
             SEQ.NAME,
             TO_NUMBER(NULL), '||
             'DECODE(ARD.SOURCE_TYPE,''EDISC'',''EDISC'',''UNEDISC'',
                    ''UNEDISC'',''REC'',''APP''), '||
       'DECODE(ARD.SOURCE_TYPE,''EDISC'',''EDISC'',''UNEDISC'',
                    ''UNEDISC'',''REC'',''APP''), '||
            ' ''APP'',
             APP.RECEIVABLE_APPLICATION_ID, '||
            ' ''APP'','||
             'ZX_DET.ADJUSTED_DOC_ENTITY_CODE,'||    --INV
             'ZX_DET.ADJUSTED_DOC_TRX_ID,'|| -- Applied_to_trx_id -- adjusted_doc_id in eTax
            'ZX_DET.ADJUSTED_DOC_EVENT_CLASS_CODE,'||   -- INV
            'ZX_DET.ADJUSTED_DOC_NUMBER,'||  --Applied_doc_number
            'ZX_DET.BATCH_SOURCE_ID,'||
            'ARDTAX.TAX_CODE_ID,'||
            'DECODE(ARDTAX.SOURCE_TYPE,''TAX'',''TAX'',''DEFERRED_TAX'',''INTERIM'',
                ''UNEDISC_NON_REC_TAX'',''NON-RECOVERABLE'',
                ''EDISC_NON_REC_TAX'',''NON-RECOVERABLE'',NULL), ' || -- REG. TYPE CODE
            'TO_NUMBER(NULL),
             TO_CHAR(NULL),
             ARD.SOURCE_TABLE,
             ARD.SOURCE_ID,
             TO_NUMBER(NULL) ,'||
            'TO_NUMBER(NULL), ' ||
            '(nvl(ARDTAX.TAXABLE_ENTERED_CR,0) - nvl(ARDTAX.TAXABLE_ENTERED_DR,0)),'|| -- Total Amount
            'TO_NUMBER(NULL),
            (nvl(ARDTAX.AMOUNT_CR,0)-nvl(ARDTAX.AMOUNT_DR,0)),'||
            '(nvl(ARDTAX.ACCTD_AMOUNT_CR,0) - nvl(ARDTAX.ACCTD_AMOUNT_DR,0)),
             TO_NUMBER(NULL), '||
            '(nvl(ARDTAX.TAXABLE_ENTERED_CR,0) - nvl(ARDTAX.TAXABLE_ENTERED_DR,0)),'||
            '(nvl(ARDTAX.TAXABLE_ACCOUNTED_CR,0) - nvl(ARDTAX.TAXABLE_ACCOUNTED_DR,0)),'|| -- ar matrix ++ 20
            'TO_NUMBER(NULL),
            TO_NUMBER(NULL),
            TO_CHAR(NULL),
            TO_CHAR(NULL),
             TO_CHAR(NULL),
             TO_CHAR(NULL), '||
            'DECODE(ARDTAX.SOURCE_TYPE_SECONDARY,''RECONCILE'',''Y'','||
            ' ''ASSIGNMENT_RECONCILE'',''Y'',''N''),'  ||
            'ZX_DET.INTERNAL_ORGANIZATION_ID,
            TO_NUMBER(NULL), ' ||
           -- 'ARCS.REVERSAL_DATE,
             'APP.AMOUNT_APPLIED,
             APP.TAX_APPLIED,
             ZX_RATE.PERCENTAGE_RATE,
             ZX_RATE.TAX_RATE_CODE,
             ZX_RATE.VAT_TRANSACTION_TYPE_CODE,
             ZX_RATE.RATE_TYPE_CODE,
             ZX_RATE.TAX_RATE_NAME,
             ARCS.RECEIPT_NUMBER,
              ZX_DET.TRX_DESCRIPTION,
              ARCS.DOC_SEQUENCE_VALUE,
              ARCS.RECEIPT_DATE,
              ARCS.DEPOSIT_DATE,
              ZX_DET.TRX_DUE_DATE,
              ZX_DET.TRX_SHIPPING_DATE,
              ZX_DET.TRX_COMMUNICATED_DATE,
              ARCS.CURRENCY_CODE,
              ARCS.EXCHANGE_RATE_TYPE,
              ARCS.EXCHANGE_DATE,
              ARCS.EXCHANGE_RATE,
              TO_CHAR(NULL),
              ZX_DET.FOB_POINT,
              ZX_DET.TRX_WAYBILL_NUMBER,
             ZX_DET.BATCH_SOURCE_NAME,
              TO_CHAR(NULL),
             -- ZX_RATE.RATE_TYPE_CODE,
              TO_CHAR(NULL),
               TO_NUMBER(NULL),
               TO_CHAR(NULL),
              TO_CHAR(NULL),
              TO_CHAR(NULL),
              TO_CHAR(NULL),
              TO_CHAR(NULL),
              TO_CHAR(NULL),
              TO_CHAR(NULL),
              TO_CHAR(NULL),
              TO_CHAR(NULL),
              TO_CHAR(NULL),
              TO_CHAR(NULL),
              TO_CHAR(NULL),
              TO_CHAR(NULL),
              TO_CHAR(NULL),
              TO_CHAR(NULL),
              TO_CHAR(NULL),
              TO_CHAR(NULL),
             ZX_DET.APPLICATION_ID,
              ZX_DET.DOC_EVENT_STATUS,
         ZX_DET.APPLICATION_DOC_STATUS,
              ZX_DET.ESTABLISHMENT_ID,
              ''AR'', --EXTRACT_SOURCE_LEDGER,
              --ZX_DET.FUNCTIONAL_CURRECNY_CODE,
              --ZX_DET.LEDGER_NAME,
              ZX_DET.MINIMUM_ACCOUNTABLE_UNIT,
              ZX_DET.PRECISION,
              TO_NUMBER(NULL),   --RECEIPT_CLASS_ID,
              ZX_DET.APPLIED_TO_APPLICATION_ID,
              ZX_DET.APPLIED_TO_TRX_LINE_ID,
              ZX_DET.APPLIED_TO_ENTITY_CODE,
              ZX_DET.APPLIED_TO_TRX_ID,
              ZX_DET.APPLIED_TO_EVENT_CLASS_CODE,
              ZX_DET.APPLIED_TO_TRX_NUMBER,
              ZX_DET.RELATED_DOC_APPLICATION_ID,
              ZX_DET.RELATED_DOC_DATE,
              ZX_DET.RELATED_DOC_ENTITY_CODE,
              ZX_DET.RELATED_DOC_EVENT_CLASS_CODE,
              ZX_DET.RELATED_DOC_NUMBER,
              ZX_DET.RELATED_DOC_TRX_ID,
              ZX_DET.ADJUSTED_DOC_APPLICATION_ID,
              ZX_DET.ADJUSTED_DOC_DATE,
              --ZX_DET.BANKING_TP_TAXPAYER_ID,
              ZX_DET.REF_DOC_APPLICATION_ID,
              ZX_DET.REF_DOC_ENTITY_CODE,
              ZX_DET.REF_DOC_EVENT_CLASS_CODE,
              ZX_DET.REF_DOC_LINE_ID,
              ZX_DET.REF_DOC_LINE_QUANTITY,
              ZX_DET.REF_DOC_TRX_ID,
              ZX_RATE.DEF_REC_SETTLEMENT_OPTION_CODE,
              ZX_DET.DEFAULT_TAXATION_COUNTRY,
              ZX_DET.DOCUMENT_SUB_TYPE,
              ZX_DET.TRX_BUSINESS_CATEGORY,
              ZX_DET.LINE_INTENDED_USE,
              ZX_DET.PRODUCT_CATEGORY,
              ZX_DET.PRODUCT_FISC_CLASSIFICATION,
              ZX_DET.SUPPLIER_EXCHANGE_RATE,
              ZX_DET.SUPPLIER_TAX_INVOICE_DATE,
              ZX_DET.SUPPLIER_TAX_INVOICE_NUMBER,
              ZX_DET.USER_DEFINED_FISC_CLASS,
              TO_NUMBER(NULL),    --ZZX_LINE.EXCEPTION_RATE,
              TO_NUMBER(NULL),    --ZX_LINE.EXEMPT_RATE_MODIFIER,
              TO_NUMBER(NULL),  --ZX_LINE.ORIG_TAX_AMT,
              TO_NUMBER(NULL),  --ZX_LINE.ORIG_TAX_AMT_TAX_CURR,
              TO_NUMBER(NULL),  --ZX_LINE.ORIG_TAXABLE_AMT,
              TO_NUMBER(NULL),  --ZX_LINE.ORIG_TAXABLE_AMT_TAX_CURR,
              TO_CHAR(NULL),    --ZX_RATE.RECOVERY_RATE_CODE,
              TO_NUMBER(NULL),  --ZX_LINE.TAX_AMT_TAX_CURR,
              TO_NUMBER(NULL),  --ZX_LINE.TAX_APPORTIONMENT_LINE_NUMBER,
              TO_CHAR(NULL),    --ZX_LINE.TAX_CURRENCY_CODE,
              TO_DATE(NULL),   --ZX_LINE.TAX_DATE,
              TO_DATE(NULL),   --ZX_LINE.TAX_DETERMINE_DATE,
              TO_DATE(NULL),   --ZX_DET.TAX_INVOICE_DATE,
              TO_CHAR(NULL),    --ZX_DET.TAX_INVOICE_NUMBER,
              ZX_RATE.TAX_JURISDICTION_CODE,
              ZX_RATE.TAX_REGIME_CODE,
              ZX_RATE.TAX_STATUS_CODE,
              ZX_DET.SHIP_FROM_PARTY_TAX_PROF_ID,
              ZX_DET.SHIP_FROM_SITE_TAX_PROF_ID,
              ZX_DET.SHIP_TO_PARTY_TAX_PROF_ID,
              ZX_DET.SHIP_TO_SITE_TAX_PROF_ID,
              ZX_DET.BILL_TO_PARTY_TAX_PROF_ID,
              ZX_DET.BILL_TO_SITE_TAX_PROF_ID,
         ZX_DET.SHIP_THIRD_PTY_ACCT_SITE_ID,
         ZX_DET.BILL_THIRD_PTY_ACCT_SITE_ID,
         ZX_DET.SHIP_TO_CUST_ACCT_SITE_USE_ID,
         ZX_DET.BILL_TO_CUST_ACCT_SITE_USE_ID,
         ZX_DET.SHIP_THIRD_PTY_ACCT_ID,
         ZX_DET.BILL_THIRD_PTY_ACCT_ID,
              TO_CHAR(NULL),'||  --ZX_LINE.HQ_ESTB_REG_NUMBER,
              'TO_CHAR(NULL),'||     --ZX_LINE.LEGAL_ENTITY_TAX_REG_NUMBER,
              'ZX_DET.OWN_HQ_SITE_TAX_PROF_ID,
              ZX_DET.OWN_HQ_PARTY_TAX_PROF_ID,
              ZX_DET.PORT_OF_ENTRY_CODE,
              TO_CHAR(NULL),'||     --ZX_LINE.REGISTRATION_PARTY_TYPE
              'TO_CHAR(NULL),'||     --ZX_LINE.HISTORICAL_FLAG
              'TO_CHAR(NULL),'||     --ZX_LINE.MRC_TAX_LINE_FLAG
            --  'TO_CHAR(NULL),'||     --ZX_LINE.POSTED_FLAG
              'TO_CHAR(NULL),'||     --ZX_LINE.REPORTING_ONLY_FLAG
              'TO_CHAR(NULL),'||     --ZX_LINE.TAX_AMT_INCLUDED_FLAG
              'TO_CHAR(NULL),'||     --ZX_LINE.TAX_ONLY_LINE_FLAG
         'ZX_DET.EVENT_CLASS_MAPPING_ID,
         ZX_DET.TRX_LEVEL_TYPE,
         TO_CHAR(NULL),       -- Place of supply type code
         ZX_DET.POA_LOCATION_ID,
         ZX_DET.POO_LOCATION_ID,
         TO_CHAR(NULL),       -- Default Place of supply type code
         ZX_DET.LINE_AMT,
         TO_NUMBER(NULL),'||
        'xla_event.event_type_code, -- Accounting Columns
        xla_event.event_number,
        xla_event.event_status_code,
        xla_head.je_category_name,
        xla_head.accounting_date,
        xla_head.gl_transfer_status_code,
        xla_head.description,
        xla_line.ae_line_num,
        xla_line.accounting_class_code,
        xla_line.description,
        xla_line.statistical_amount,
        xla_event.process_status_code,
        xla_head.gl_transfer_status_code,
        xla_head.doc_sequence_id,
        xla_head.doc_sequence_value,
        xla_line.party_id,
        xla_line.party_site_id,
        xla_line.party_type_code,
        xla_event.event_id,
        xla_head.ae_header_id,
        xla_line.code_combination_id,
        xla_head.period_name,
        ardtax.line_id,
         ARCS.REVERSAL_DATE,
         ARCS.STATUS,
         sum(ARD.ACCTD_AMOUNT_CR),
         sum(ARD.ACCTD_AMOUNT_DR),
         APP.STATUS,
         TO_CHAR(NULL),
         TO_CHAR(NULL) ';

--P_COLUMN_LIST_AR_APP := L_COLUMN_LIST_AR_APP;

L_TABLE_LIST_AR_APP   :=
    ' FROM GL_CODE_COMBINATIONS CC,  '||
--    'HZ_CUST_SITE_USES_ALL      TPSU_BILL, '||
--    'HZ_CUST_SITE_USES_ALL      TPSU_SHIP, '||
--    'RA_BATCH_SOURCES_ALL       BS, '||
    'FND_DOCUMENT_SEQUENCES     SEQ, '||
--    'AR_DISTRIBUTIONS_ALL       ARD, '||
--    'AR_DISTRIBUTIONS_ALL       ARDTAX, '||
    L_TBL_NAME_AR_DIST_ALL || ' ARD, ' ||
    L_TBL_NAME_AR_DIST_ALL || ' ARDTAX, ' ||
    'AR_PAYMENT_SCHEDULES_ALL   PAY, '||
    'ZX_RATES_VL        ZX_RATE , '  ||
--    'ZX_EXEMPTIONS      ZX_EX , '||
    'ZX_LINES_DET_FACTORS         ZX_DET, '||
    ' ZX_PARTY_TAX_PROFILE     PTP, '||
    ' XLA_TRANSACTION_ENTITIES XLA_ENT, '||
    ' XLA_EVENTS     XLA_EVENT, '||
    ' XLA_AE_HEADERS  XLA_HEAD, '||
    ' XLA_AE_LINES    XLA_LINE, '||
        'xla_acct_class_assgns  acs,'||
        'xla_assignment_defns_b asd,'||
--    L_TBL_NAME_CUSTOMER_TRX_ALL || ' TRXH, ' ||
    'AR_CASH_RECEIPTS_ALL       ARCS, '||
--    'AR_RECEIVABLE_APPLICATIONS_ALL APP ';
    L_TBL_AR_RECEIVABLE_APPS_ALL || ' APP ';

--P_TABLE_LIST_AR_APP := L_TABLE_LIST_AR_APP;

L_WHERE_CLAUSE_AR_APP   :=
' WHERE zx_det.trx_id = app.applied_customer_trx_id '||
  ' AND zx_det.tax_reporting_flag = ''Y'''||
  ' AND zx_det.hq_estb_party_tax_prof_id = ptp.party_tax_profile_id(+) '||
' AND   app.cash_receipt_id = ARcs.cash_receipt_id '||
' AND   app.status = ''APP'' ' ||
' AND   nvl(ARcs.confirmed_flag, ''Y'') = ''Y'' '||
--' AND   app.set_of_books_id = '||to_char(G_LEDGER_ID) ||' '||
--' AND   trxh.complete_flag = ''Y'' '||
' AND   pay.payment_schedule_id = app.payment_schedule_id '||
--' AND   cc.chart_of_accounts_id = '||to_char(G_CHART_OF_ACCOUNTS_ID)||' '||
' AND ( (
                         ard.source_type = ''EDISC''
                         and (ardtax.source_type_secondary = ''EDISC''
                              or ardtax.source_type = ''EDISC_NON_REC_TAX'')
        )
        OR
        (
                         ard.source_type = ''REC''
                         and ardtax.source_type_secondary  in (''PAYMENT'',
                         ''ASSIGNMENT'',''RECONCILE'',''ASSIGNMENT_RECONCILE'')
        )
        OR
        (
                         ard.source_type = ''UNEDISC''
                         and (ardtax.source_type_secondary = ''UNEDISC''
                              or ardtax.source_type = ''UNEDISC_NON_REC_TAX'')
        )
      ) '||
' AND   ard.source_id = app.receivable_application_id '||
' AND   ard.source_table = ''RA'' '||
' AND   ard.code_combination_id = cc.code_combination_id '||
' AND   ardtax.source_id = app.receivable_application_id '||
' AND   ardtax.source_type in (''TAX'',''DEFERRED_TAX'', '||
'                   ''EDISC_NON_REC_TAX'',''UNEDISC_NON_REC_TAX'') '||
' AND   ardtax.source_table = ''RA'' '||
' AND   nvl(ardtax.tax_link_id,0) = nvl(ard.tax_link_id,0) '||
' AND arcs.cash_receipt_id    = XLA_ENT.SOURCE_ID_INT_1    -- Accounting Joins
  AND ZX_DET.APPLICATION_ID =   XLA_ENT.APPLICATION_ID
  AND XLA_ENT.ENTITY_CODE      = ''AR_CASH_RECEIPTS''
  AND XLA_ENT.ENTITY_ID        = XLA_EVENT.ENTITY_ID
  AND XLA_EVENT.EVENT_ID       = XLA_HEAD.EVENT_ID
  AND XLA_HEAD.AE_HEADER_ID    = XLA_LINE.AE_HEADER_ID
    AND acs.program_code   = ''TAX_REPORTING_LEDGER_SALES''
    AND acs.program_code = asd.program_code
    AND asd.assignment_code = acs.assignment_code
    AND asd.enabled_flag = ''Y''
    AND acs.accounting_class_code = xla_line.accounting_class_code'||
--  AND XLA_LINE.ACCOUNTING_CLASS_CODE IN (''TAX'',''DEFERRED_TAX'', '||
--'                   ''EDISC_NON_REC_TAX'',''UNEDISC_NON_REC_TAX'')'||
--' AND   ZX_LINE.TAX_EXEMPTION_ID = ZX_EX.TAX_EXEMPTION_ID '||
' AND   ardtax.tax_code_id = NVL(ZX_RATE.SOURCE_ID,ZX_RATE.TAX_RATE_ID)
    AND ((ZX_RATE.RECORD_TYPE_CODE <> ''MIGRATED'')
         OR (ZX_RATE.SOURCE_ID IS NULL)) '||
--' AND   trxh.bill_to_site_use_id =  tpsu_bill.site_use_id (+) '||
--' AND   trxh.ship_to_site_use_id =  tpsu_ship.site_use_id(+) '||
--' AND   bs.batch_source_id (+) = trxh.batch_source_id '||
' AND   ARcs.doc_sequence_id = seq.doc_sequence_id (+) '
--' AND ( bs.org_id is null or bs.org_id = ARcs.org_id ) '
       || L_WHERE_REPORTING_CONTEXT_TRXH
       || L_WHERE_LEDGER_ID
       || L_WHERE_LEGAL_ENTITY_ID
       || L_WHERE_REGISTER_TYPE_AR_APP
       || L_WHERE_TRX_CLASS_APP_DISC
       || L_WHERE_BATCH_NAME
       || L_WHERE_TRX_NUMBER_APP
       || L_WHERE_TRX_DATE_APP
       || L_WHERE_GL_DATE_APP
       || L_WHERE_DOCUMENT_SUB_TYPE
       || L_WHERE_TRX_BUSINESS_CATEGORY
       || L_WHERE_TAX_INVOICE_DATE
       ||L_WHERE_TAX_JURIS_CODE_OTH
       ||L_WHERE_FIRST_PTY_TAX_REG_OTH
       || L_WHERE_TAX_REGIME_CODE_OTH
       || L_WHERE_TAX_OTH
       || L_WHERE_TAX_STATUS_CODE_OTH
       || L_WHERE_TAX_RATE_CODE
       || L_WHERE_TAX_TYPE_CODE
--       || L_WHERE_CURRENCY_CODE
       || L_WHERE_CURRENCY_CODE_APP
       || L_WHERE_EXEMPT_STATUS_OTH
       || L_WHERE_TAX_CODE_VAT_TRX_TYPE
       || L_WHERE_TAX_LTE_OTHER_CLS;

    END IF; -- G_SUMMARY_LEVEL
  END IF; -- G_TRX_CLASS
-- END IF; -- DEFERRED TAX USED



  --   ADJUSTMENTS - ADJUSTMENTS - ADJUSTMENTS - ADJUSTMENTS - ADJUSTMENTS
  --   ADJUSTMENTS - ADJUSTMENTS - ADJUSTMENTS - ADJUSTMENTS - ADJUSTMENTS
  -- IF L_IS_DEFERRED_TAX_USED = 1 THEN

  IF G_INCLUDE_AR_ADJ_TRX_CLASS = 'Y' THEN
    IF (UPPER(G_SUMMARY_LEVEL) = 'TRANSACTION'
        OR
        UPPER(G_SUMMARY_LEVEL) = 'TRANSACTION_LINE')
    THEN

    IF (g_level_procedure >= g_current_runtime_level ) THEN
        FND_LOG.STRING(g_level_procedure, 'ZX.TRL.ZX_AR_ACTG_EXTRACT_PKG.BUILD_SQL',
                      'SQL-6 For AR Adjustments : Header or Line Level');
    END IF;

   L_COLUMN_LIST_AR_ADJ :=
      'SELECT '||
      'ADJ.SET_OF_BOOKS_ID,
             ADJ.ADJUSTMENT_ID, '||
            'ADJ.DOC_SEQUENCE_ID,
             SEQ.NAME,'||
            'TO_NUMBER(NULL), '||  -- Trx Type ID
            '''ADJ'','||
            '''ADJ'',
             TO_CHAR(NULL),
             TO_NUMBER(NULL),'||
            'TO_CHAR(NULL),
             ZX_DET.ADJUSTED_DOC_ENTITY_CODE,'||    --INV
            'ZX_DET.ADJUSTED_DOC_TRX_ID,'|| -- Applied_to_trx_id -- adjusted_doc_id in eTax
            'ZX_DET.ADJUSTED_DOC_EVENT_CLASS_CODE,'||   -- INV
            'ZX_DET.ADJUSTED_DOC_NUMBER,'||  --Applied_doc_number
            'ZX_DET.BATCH_SOURCE_ID,'||
            'ARDTAX.TAX_CODE_ID,'||
            'DECODE(ARDTAX.SOURCE_TYPE,''TAX'',''TAX'',''DEFERRED_TAX'',''INTERIM'',
               ''ADJ_NON_REC_TAX'',''NON-RECOVERABLE'',
               ''FINCHRG_NON_REC_TAX'',''NON-RECOVERABLE'',NULL),'|| --REG.TYPE CODE
            'TO_NUMBER(NULL),'||
            'TO_CHAR(NULL),
             ARDTAX.SOURCE_TABLE,
             ARDTAX.SOURCE_ID,
             TO_NUMBER(NULL) ,'||
            'TO_NUMBER(NULL), ' ||
            'sum(nvl(ARDTAX.TAXABLE_ENTERED_CR,0)-nvl(ARDTAX.TAXABLE_ENTERED_DR,0)) ,'|| --Total Amount
            'TO_NUMBER(NULL),'||
            'sum(nvl(ARDTAX.AMOUNT_CR,0)- nvl(ARDTAX.AMOUNT_DR,0)),'||
            'sum(nvl(ARDTAX.ACCTD_AMOUNT_CR,0) - nvl(ARDTAX.ACCTD_AMOUNT_DR,0)),
             TO_NUMBER(NULL),'||
            'sum(nvl(ARDTAX.TAXABLE_ENTERED_CR,0) - nvl(ARDTAX.TAXABLE_ENTERED_DR,0)) ,'||
            'sum(nvl(ARDTAX.TAXABLE_ACCOUNTED_CR,0) - nvl(ARDTAX.TAXABLE_ACCOUNTED_DR,0)),'|| -- ar matrix ++ 21
             'TO_NUMBER(NULL), '||
            'TO_NUMBER(NULL), '||
            'TO_CHAR(NULL),
             TO_CHAR(NULL),
             TO_CHAR(NULL),'||
            'TO_CHAR(NULL), ' ||
       'DECODE(ARDTAX.SOURCE_TYPE_SECONDARY,''RECONCILE'',''Y'','||
            ' ''ASSIGNMENT_RECONCILE'',''Y'',''N'')
            ' || ' , ' ||
            'ZX_DET.INTERNAL_ORGANIZATION_ID,'||  -- Org_id
            'TO_NUMBER(NULL), ' ||
          --  'TO_DATE(NULL),'||     --reversal_date
            'TO_NUMBER(NULL),'||   -- AMOUNT_APPLIED
            'TO_NUMBER(NULL),'||   -- TAX_APPLIED
             'ZX_RATE.PERCENTAGE_RATE,
             ZX_RATE.TAX_RATE_CODE,
             ZX_RATE.VAT_TRANSACTION_TYPE_CODE,
             ZX_RATE.RATE_TYPE_CODE,
             ZX_RATE.TAX_RATE_NAME,
             ADJ.ADJUSTMENT_NUMBER,
              ZX_DET.TRX_DESCRIPTION,'||    --COMMENTS,
             'ADJ.DOC_SEQUENCE_VALUE,
              ADJ.APPLY_DATE,
              TO_DATE(NULL),    -- Deposite date
              ZX_DET.TRX_DUE_DATE,
              ZX_DET.TRX_SHIPPING_DATE,
              ZX_DET.TRX_COMMUNICATED_DATE,
              ZX_DET.TRX_CURRENCY_CODE,
              ZX_DET.CURRENCY_CONVERSION_TYPE,
              ZX_DET.CURRENCY_CONVERSION_DATE,
              ZX_DET.CURRENCY_CONVERSION_RATE,
              TO_CHAR(NULL),'||   -- TRX_SIC_CODE
              'ZX_DET.FOB_POINT,
              ZX_DET.TRX_WAYBILL_NUMBER,
              ZX_DET.BATCH_SOURCE_NAME,
              ZX_DET.TRX_TYPE_DESCRIPTION,
              TO_CHAR(NULL),
               TO_NUMBER(NULL),
               TO_CHAR(NULL),
             TO_CHAR(NULL),
              TO_CHAR(NULL),
              TO_CHAR(NULL),
              TO_CHAR(NULL),
              TO_CHAR(NULL),
              TO_CHAR(NULL),
              TO_CHAR(NULL),
              TO_CHAR(NULL),
              TO_CHAR(NULL),
              TO_CHAR(NULL),
              TO_CHAR(NULL),
              TO_CHAR(NULL),
              TO_CHAR(NULL),
              TO_CHAR(NULL),
              TO_CHAR(NULL),
              TO_CHAR(NULL),
             ZX_DET.APPLICATION_ID,
              ZX_DET.DOC_EVENT_STATUS,
         ZX_DET.APPLICATION_DOC_STATUS,
              ZX_DET.ESTABLISHMENT_ID,
              ''AR'', --EXTRACT_SOURCE_LEDGER,
              --ZX_DET.FUNCTIONAL_CURRECNY_CODE,
              --ZX_DET.LEDGER_NAME,
              ZX_DET.MINIMUM_ACCOUNTABLE_UNIT,
              ZX_DET.PRECISION,
              TO_NUMBER(NULL),   --RECEIPT_CLASS_ID,
              ZX_DET.APPLIED_TO_APPLICATION_ID,
              ZX_DET.APPLIED_TO_TRX_LINE_ID,
              ZX_DET.APPLIED_TO_ENTITY_CODE,
              ZX_DET.APPLIED_TO_TRX_ID,
              ZX_DET.APPLIED_TO_EVENT_CLASS_CODE,
              ZX_DET.APPLIED_TO_TRX_NUMBER,
              ZX_DET.RELATED_DOC_APPLICATION_ID,
              ZX_DET.RELATED_DOC_DATE,
              ZX_DET.RELATED_DOC_ENTITY_CODE,
              ZX_DET.RELATED_DOC_EVENT_CLASS_CODE,
              ZX_DET.RELATED_DOC_NUMBER,
              ZX_DET.RELATED_DOC_TRX_ID,
              ZX_DET.ADJUSTED_DOC_APPLICATION_ID,
              ZX_DET.ADJUSTED_DOC_DATE,
              --ZX_DET.BANKING_TP_TAXPAYER_ID,
              ZX_DET.REF_DOC_APPLICATION_ID,
              ZX_DET.REF_DOC_ENTITY_CODE,
              ZX_DET.REF_DOC_EVENT_CLASS_CODE,
              ZX_DET.REF_DOC_LINE_ID,
              ZX_DET.REF_DOC_LINE_QUANTITY,
              ZX_DET.REF_DOC_TRX_ID,
              ZX_RATE.DEF_REC_SETTLEMENT_OPTION_CODE,
              ZX_DET.DEFAULT_TAXATION_COUNTRY,
              ZX_DET.DOCUMENT_SUB_TYPE,
              ZX_DET.TRX_BUSINESS_CATEGORY,
              ZX_DET.LINE_INTENDED_USE,
              ZX_DET.PRODUCT_CATEGORY,
              ZX_DET.PRODUCT_FISC_CLASSIFICATION,
              ZX_DET.SUPPLIER_EXCHANGE_RATE,
              ZX_DET.SUPPLIER_TAX_INVOICE_DATE,
              ZX_DET.SUPPLIER_TAX_INVOICE_NUMBER,
              ZX_DET.USER_DEFINED_FISC_CLASS,
              TO_NUMBER(NULL),    --ZX_LINE.EXCEPTION_RATE,
              TO_NUMBER(NULL),    --ZX_LINE.EXEMPT_RATE_MODIFIER,
              TO_NUMBER(NULL),  --ZX_LINE.ORIG_TAX_AMT,
              TO_NUMBER(NULL),  --ZX_LINE.ORIG_TAX_AMT_TAX_CURR,
              TO_NUMBER(NULL),  --ZX_LINE.ORIG_TAXABLE_AMT,
              TO_NUMBER(NULL),  --ZX_LINE.ORIG_TAXABLE_AMT_TAX_CURR,
              TO_CHAR(NULL),   --ZX_RATE.RECOVERY_RATE_CODE,
              TO_NUMBER(NULL),  --ZX_LINE.TAX_AMT_TAX_CURR,
              TO_NUMBER(NULL),  --ZX_LINE.TAX_APPORTIONMENT_LINE_NUMBER,
              TO_CHAR(NULL),   --ZX_LINE.TAX_CURRENCY_CODE,
              TO_DATE(NULL),    --ZX_LINE.TAX_DATE,
              TO_DATE(NULL),    --ZX_LINE.TAX_DETERMINE_DATE,
              TO_DATE(NULL),    --ZX_DET.TAX_INVOICE_DATE,
              TO_CHAR(NULL),   --ZX_DET.TAX_INVOICE_NUMBER,
              ZX_RATE.TAX_JURISDICTION_CODE,
              ZX_RATE.TAX_REGIME_CODE,
              ZX_RATE.TAX_STATUS_CODE,
              ZX_DET.SHIP_FROM_PARTY_TAX_PROF_ID,
              ZX_DET.SHIP_FROM_SITE_TAX_PROF_ID,
              ZX_DET.SHIP_TO_PARTY_TAX_PROF_ID,
              ZX_DET.SHIP_TO_SITE_TAX_PROF_ID,
              ZX_DET.BILL_TO_PARTY_TAX_PROF_ID,
              ZX_DET.BILL_TO_SITE_TAX_PROF_ID,
         ZX_DET.SHIP_THIRD_PTY_ACCT_SITE_ID,
         ZX_DET.BILL_THIRD_PTY_ACCT_SITE_ID,
         ZX_DET.SHIP_TO_CUST_ACCT_SITE_USE_ID,
         ZX_DET.BILL_TO_CUST_ACCT_SITE_USE_ID,
         ZX_DET.SHIP_THIRD_PTY_ACCT_ID,
         ZX_DET.BILL_THIRD_PTY_ACCT_ID,
              TO_CHAR(NULL),'||  --ZX_LINE.HQ_ESTB_REG_NUMBER,
              'TO_CHAR(NULL),'||     --ZX_LINE.LEGAL_ENTITY_TAX_REG_NUMBER,
              'ZX_DET.OWN_HQ_SITE_TAX_PROF_ID,
              ZX_DET.OWN_HQ_PARTY_TAX_PROF_ID,
              ZX_DET.PORT_OF_ENTRY_CODE,
              TO_CHAR(NULL),'||     --ZX_LINE.REGISTRATION_PARTY_TYPE,
              'TO_CHAR(NULL),'||     --ZX_LINE.HISTORICAL_FLAG,
              'TO_CHAR(NULL),'||     --ZX_LINE.MRC_TAX_LINE_FLAG,
        --      'TO_CHAR(NULL),'||     --ZX_LINE.POSTED_FLAG,
              'TO_CHAR(NULL),'||     --ZX_LINE.REPORTING_ONLY_FLAG,
              'TO_CHAR(NULL),'||     --ZX_LINE.TAX_AMT_INCLUDED_FLAG,
              'TO_CHAR(NULL),'||    --ZX_LINE.TAX_ONLY_LINE_FLAG
         'ZX_DET.EVENT_CLASS_MAPPING_ID,
         ZX_DET.TRX_LEVEL_TYPE,
         TO_CHAR(NULL),       -- Place of supply type code
         ZX_DET.POA_LOCATION_ID,
         ZX_DET.POO_LOCATION_ID,
         TO_CHAR(NULL),       -- Default Place of supply type code
         ZX_DET.LINE_AMT,
         TO_NUMBER(NULL),'||
        'xla_event.event_type_code, -- Accounting Columns
        xla_event.event_number,
        xla_event.event_status_code,
        xla_head.je_category_name,
        xla_head.accounting_date,
        xla_head.gl_transfer_status_code,
        xla_head.description,
        xla_line.ae_line_num,
        xla_line.accounting_class_code,
        xla_line.description,
        xla_line.statistical_amount,
        xla_event.process_status_code,
        xla_head.gl_transfer_status_code,
        xla_head.doc_sequence_id,
        xla_head.doc_sequence_value,
        xla_line.party_id,
        xla_line.party_site_id,
        xla_line.party_type_code,
        xla_event.event_id,
        xla_head.ae_header_id,
        xla_line.code_combination_id,
        xla_head.period_name,
        zx_det.trx_id,
         TO_DATE(NULL),
         TO_CHAR(NULL),
         sum(ARDTAX.ACCTD_AMOUNT_CR),
         sum(ARDTAX.ACCTD_AMOUNT_DR),
         TO_CHAR(NULL),
         TO_CHAR(NULL),
         TO_CHAR(NULL) ';

--  P_COLUMN_LIST_AR_ADJ := L_COLUMN_LIST_AR_ADJ;

  L_TABLE_LIST_AR_ADJ   :=
  ' FROM   '||
  '               GL_CODE_COMBINATIONS CC, '||
  '               FND_DOCUMENT_SEQUENCES   SEQ, '||
--  '               AR_DISTRIBUTIONS_ALL ARDTAX, '||
                  L_TBL_NAME_AR_DIST_ALL || ' ARDTAX, ' ||
--  '               AR_VAT_TAX_ALL_VL  VAT, '||
   '              ZX_RATES_VL     ZX_RATE,'||
--  '               ZX_EXEMPTIONS   ZX_EX, '||
 -- '               HZ_CUST_SITE_USES_ALL  TPSU_SHIP, '||
 -- '               HZ_CUST_SITE_USES_ALL  TPSU_BILL, '||
 -- '               RA_BATCH_SOURCES_ALL  BS, '||      --det_factors table replaces this
--  '               RA_CUST_TRX_TYPES_ALL TYPES, '|| --det_factors table replaces this
--  '             RA_CUSTOMER_TRX_ALL TRXH, '||
--                  L_TBL_NAME_CUSTOMER_TRX_ALL || ' TRXH, ' || --det_factors table replaces this
    '             ZX_LINES_DET_FACTORS  ZX_DET,'||
    ' ZX_PARTY_TAX_PROFILE     PTP, '||
    ' XLA_TRANSACTION_ENTITIES XLA_ENT, '||
    ' XLA_EVENTS     XLA_EVENT, '||
    ' XLA_AE_HEADERS  XLA_HEAD, '||
    ' XLA_AE_LINES    XLA_LINE, '||
        'xla_acct_class_assgns  acs,'||
        'xla_assignment_defns_b asd,'||
--  '               AR_ADJUSTMENTS_ALL ADJ  ';
                  L_TBL_NAME_AR_ADJUSTMENTS_ALL || '  ADJ  ';


--  P_TABLE_LIST_AR_ADJ := L_TABLE_LIST_AR_ADJ;

  L_WHERE_CLAUSE_AR_ADJ :=

'  WHERE         ' ||
-- apai commented : needs to be removed '               ADJ.TYPE IN (''INVOICE'',''CHARGES'',''LINE'',''TAX'') '||
'               ADJ.STATUS = ''A'' '||
--'    AND        ADJ.SET_OF_BOOKS_ID = '||to_char(G_LEDGER_ID) ||' '||
'    AND        ADJ.CUSTOMER_TRX_ID = ZX_DET.TRX_ID '||
' AND adj.ADJUSTMENT_ID        = XLA_ENT.SOURCE_ID_INT_1    -- Accounting Joins
  AND ZX_DET.APPLICATION_ID =   XLA_ENT.APPLICATION_ID
  AND XLA_ENT.ENTITY_CODE      = ''AR_ADJUSTMENTS''
  AND XLA_ENT.ENTITY_ID        = XLA_EVENT.ENTITY_ID
  AND XLA_EVENT.EVENT_ID       = XLA_HEAD.EVENT_ID
  AND XLA_HEAD.AE_HEADER_ID    = XLA_LINE.AE_HEADER_ID
    AND acs.program_code   = ''TAX_REPORTING_LEDGER_SALES''
    AND acs.program_code = asd.program_code
    AND asd.assignment_code = acs.assignment_code
    AND asd.enabled_flag = ''Y''
    AND acs.accounting_class_code = xla_line.accounting_class_code'||
--  AND XLA_LINE.ACCOUNTING_CLASS_CODE IN (''TAX'',''DEFERRED_TAX'', '||
--'               ''ADJ_NON_REC_TAX'',''FINCHRG_NON_REC_TAX'') '||
  ' AND zx_det.tax_reporting_flag = ''Y'''||
  ' AND zx_det.hq_estb_party_tax_prof_id = ptp.party_tax_profile_id(+) '||
--'    AND        TRXH.COMPLETE_FLAG = ''Y'' '||
'    AND        ARDTAX.SOURCE_ID  = ADJ.ADJUSTMENT_ID '||
'    AND        ARDTAX.SOURCE_TYPE IN (''TAX'',''DEFERRED_TAX'', '||
'               ''ADJ_NON_REC_TAX'',''FINCHRG_NON_REC_TAX'') '||
'    AND        ARDTAX.SOURCE_TABLE = ''ADJ'' '||
'    AND        ARDTAX.CODE_COMBINATION_ID = CC.CODE_COMBINATION_ID '||
--' AND   ZX_LINE.TAX_EXEMPTION_ID = ZX_EX.TAX_EXEMPTION_ID '||
'    AND        ARDTAX.TAX_CODE_ID    =  NVL(ZX_RATE.SOURCE_ID,ZX_RATE.TAX_RATE_ID)
    AND ((ZX_RATE.RECORD_TYPE_CODE <> ''MIGRATED'')
         OR (ZX_RATE.SOURCE_ID IS NULL)) '||
--'    AND        TRXH.BILL_TO_SITE_USE_ID =  TPSU_BILL.SITE_USE_ID (+) '||
--'    AND        TRXH.SHIP_TO_SITE_USE_ID =  TPSU_SHIP.SITE_USE_ID(+) '||
--'    AND        BS.BATCH_SOURCE_ID (+) = TRXH.BATCH_SOURCE_ID '||
'    AND        ADJ.DOC_SEQUENCE_ID = SEQ.DOC_SEQUENCE_ID (+) '
--'    AND        TYPES.CUST_TRX_TYPE_ID = TRXH.CUST_TRX_TYPE_ID  ' ||
--'    AND       ( bs.org_id is null or bs.org_id = adj.org_id ) '||
--'    AND       ( types.org_id is null or types.org_id = adj.org_id ) '
       || L_WHERE_LEDGER_ID
       || L_WHERE_LEGAL_ENTITY_ID
       || L_WHERE_REGISTER_TYPE_AR_ADJ
       || L_WHERE_TRX_CLASS_ADJ_FINCHRG
       || L_WHERE_BATCH_NAME
       || L_WHERE_TRX_NUMBER_ADJ
       || L_WHERE_TRX_DATE_ADJ
       || L_WHERE_GL_DATE_ADJ
       || L_WHERE_DOCUMENT_SUB_TYPE
       || L_WHERE_TRX_BUSINESS_CATEGORY
       || L_WHERE_TAX_INVOICE_DATE
       ||L_WHERE_TAX_JURIS_CODE_OTH
       ||L_WHERE_FIRST_PTY_TAX_REG_OTH
       || L_WHERE_TAX_REGIME_CODE_OTH
       || L_WHERE_TAX_OTH
       || L_WHERE_TAX_STATUS_CODE_OTH
       || L_WHERE_TAX_RATE_CODE
       || L_WHERE_TAX_TYPE_CODE
       || L_WHERE_CURRENCY_CODE
       || L_WHERE_EXEMPT_STATUS_OTH
       || L_WHERE_TAX_CODE_VAT_TRX_TYPE
       || L_WHERE_TAX_LTE_OTHER_CLS
 ||' GROUP BY '||
      'ADJ.SET_OF_BOOKS_ID,
             ADJ.ADJUSTMENT_ID,
            ADJ.DOC_SEQUENCE_ID,
             SEQ.NAME,
             ZX_DET.ADJUSTED_DOC_ENTITY_CODE,'||    --INV
            'ZX_DET.ADJUSTED_DOC_TRX_ID,'|| -- Applied_to_trx_id -- adjusted_doc_id in eTax
            'ZX_DET.ADJUSTED_DOC_EVENT_CLASS_CODE,'||   -- INV
            'ZX_DET.ADJUSTED_DOC_NUMBER,'||  --Applied_doc_number
            'ZX_DET.BATCH_SOURCE_ID,'||
            'ARDTAX.TAX_CODE_ID,'||
            'DECODE(ARDTAX.SOURCE_TYPE,''TAX'',''TAX'',''DEFERRED_TAX'',''INTERIM'',
               ''ADJ_NON_REC_TAX'',''NON-RECOVERABLE'',
               ''FINCHRG_NON_REC_TAX'',''NON-RECOVERABLE'',NULL),'|| --REG.TYPE CODE
             'ARDTAX.SOURCE_TABLE,
             ARDTAX.SOURCE_ID,
          DECODE(ARDTAX.SOURCE_TYPE_SECONDARY,''RECONCILE'',''Y'','||
            ' ''ASSIGNMENT_RECONCILE'',''Y'',''N'')
            ' || ' , ' ||
            'ZX_DET.INTERNAL_ORGANIZATION_ID,'||  -- Org_id
             'ZX_RATE.PERCENTAGE_RATE,
             ZX_RATE.TAX_RATE_CODE,
             ZX_RATE.VAT_TRANSACTION_TYPE_CODE,
             ZX_RATE.RATE_TYPE_CODE,
             ZX_RATE.TAX_RATE_NAME,
             ADJ.ADJUSTMENT_NUMBER,
              ZX_DET.TRX_DESCRIPTION,'||
             'ADJ.DOC_SEQUENCE_VALUE,
              ADJ.APPLY_DATE,
              ZX_DET.TRX_DUE_DATE,
              ZX_DET.TRX_SHIPPING_DATE,
              ZX_DET.TRX_COMMUNICATED_DATE,
              ZX_DET.TRX_CURRENCY_CODE,
              ZX_DET.CURRENCY_CONVERSION_TYPE,
              ZX_DET.CURRENCY_CONVERSION_DATE,
              ZX_DET.CURRENCY_CONVERSION_RATE,
              ZX_DET.FOB_POINT,
              ZX_DET.TRX_WAYBILL_NUMBER,
              ZX_DET.BATCH_SOURCE_NAME,
              ZX_DET.TRX_TYPE_DESCRIPTION,
             ZX_DET.APPLICATION_ID,
              ZX_DET.DOC_EVENT_STATUS,
         ZX_DET.APPLICATION_DOC_STATUS,
              ZX_DET.ESTABLISHMENT_ID,
              --EXTRACT_SOURCE_LEDGER,
              --ZX_DET.FUNCTIONAL_CURRECNY_CODE,
              --ZX_DET.LEDGER_NAME,
              ZX_DET.MINIMUM_ACCOUNTABLE_UNIT,
              ZX_DET.PRECISION,
              --RECEIPT_CLASS_ID,
              ZX_DET.APPLIED_TO_APPLICATION_ID,
              ZX_DET.APPLIED_TO_TRX_LINE_ID,
              ZX_DET.APPLIED_TO_ENTITY_CODE,
              ZX_DET.APPLIED_TO_TRX_ID,
              ZX_DET.APPLIED_TO_EVENT_CLASS_CODE,
              ZX_DET.APPLIED_TO_TRX_NUMBER,
              ZX_DET.RELATED_DOC_APPLICATION_ID,
              ZX_DET.RELATED_DOC_DATE,
              ZX_DET.RELATED_DOC_ENTITY_CODE,
              ZX_DET.RELATED_DOC_EVENT_CLASS_CODE,
              ZX_DET.RELATED_DOC_NUMBER,
              ZX_DET.RELATED_DOC_TRX_ID,
              ZX_DET.ADJUSTED_DOC_APPLICATION_ID,
              ZX_DET.ADJUSTED_DOC_DATE,
              --ZX_DET.BANKING_TP_TAXPAYER_ID,
              ZX_DET.REF_DOC_APPLICATION_ID,
              ZX_DET.REF_DOC_ENTITY_CODE,
              ZX_DET.REF_DOC_EVENT_CLASS_CODE,
              ZX_DET.REF_DOC_LINE_ID,
              ZX_DET.REF_DOC_LINE_QUANTITY,
              ZX_DET.REF_DOC_TRX_ID,
              ZX_RATE.DEF_REC_SETTLEMENT_OPTION_CODE,
              ZX_DET.DEFAULT_TAXATION_COUNTRY,
              ZX_DET.DOCUMENT_SUB_TYPE,
              ZX_DET.TRX_BUSINESS_CATEGORY,
              ZX_DET.LINE_INTENDED_USE,
              ZX_DET.PRODUCT_CATEGORY,
              ZX_DET.PRODUCT_FISC_CLASSIFICATION,
              ZX_DET.SUPPLIER_EXCHANGE_RATE,
              ZX_DET.SUPPLIER_TAX_INVOICE_DATE,
              ZX_DET.SUPPLIER_TAX_INVOICE_NUMBER,
              ZX_DET.USER_DEFINED_FISC_CLASS,
             -- ZX_LINE.EXCEPTION_RATE,
             -- ZX_LINE.EXEMPT_RATE_MODIFIER,
             -- ZX_RATE.RECOVERY_RATE_CODE,
            --  ZX_LINE.TAX_AMT_TAX_CURR,
              ZX_RATE.TAX_JURISDICTION_CODE,
              ZX_RATE.TAX_REGIME_CODE,
              ZX_RATE.TAX_STATUS_CODE,
              ZX_DET.SHIP_FROM_PARTY_TAX_PROF_ID,
              ZX_DET.SHIP_FROM_SITE_TAX_PROF_ID,
              ZX_DET.SHIP_TO_PARTY_TAX_PROF_ID,
              ZX_DET.SHIP_TO_SITE_TAX_PROF_ID,
              ZX_DET.BILL_TO_PARTY_TAX_PROF_ID,
              ZX_DET.BILL_TO_SITE_TAX_PROF_ID,
         ZX_DET.SHIP_THIRD_PTY_ACCT_SITE_ID,
         ZX_DET.BILL_THIRD_PTY_ACCT_SITE_ID,
         ZX_DET.SHIP_TO_CUST_ACCT_SITE_USE_ID,
         ZX_DET.BILL_TO_CUST_ACCT_SITE_USE_ID,
         ZX_DET.SHIP_THIRD_PTY_ACCT_ID,
         ZX_DET.BILL_THIRD_PTY_ACCT_ID,
              ZX_DET.OWN_HQ_SITE_TAX_PROF_ID,
              ZX_DET.OWN_HQ_PARTY_TAX_PROF_ID,
              ZX_DET.PORT_OF_ENTRY_CODE,'||
         'ZX_DET.EVENT_CLASS_MAPPING_ID,
         ZX_DET.TRX_LEVEL_TYPE,
         ZX_DET.POA_LOCATION_ID,
         ZX_DET.POO_LOCATION_ID,
         ZX_DET.LINE_AMT,'||
        'xla_event.event_type_code, -- Accounting Columns
        xla_event.event_number,
        xla_event.event_status_code,
        xla_head.je_category_name,
        xla_head.accounting_date,
        xla_head.gl_transfer_status_code,
        xla_head.description,
        xla_line.ae_line_num,
        xla_line.accounting_class_code,
        xla_line.description,
        xla_line.statistical_amount,
        xla_event.process_status_code,
        xla_head.gl_transfer_status_code,
        xla_head.doc_sequence_id,
        xla_head.doc_sequence_value,
        xla_line.party_id,
        xla_line.party_site_id,
        xla_line.party_type_code,
        xla_event.event_id,
        xla_head.ae_header_id,
        xla_line.code_combination_id,
        xla_head.period_name
        zx_det.trx_id,
	TO_DATE(NULL),
	TO_CHAR(NULL),
	TO_CHAR(NULL),
	TO_CHAR(NULL),
	TO_CHAR(NULL)' ;



--   P_WHERE_CLAUSE_AR_ADJ := L_WHERE_CLAUSE_AR_ADJ;


    ELSIF  UPPER(G_SUMMARY_LEVEL) = 'TRANSACTION_DISTRIBUTION' THEN
    -- apai commented : needs to be removed  AND  NVL(G_TRX_CLASS,'ADJ') IN ('ADJ','FINCHRG') THEN
    -- Matrix reporting is not supported at distribution level.


    IF (g_level_procedure >= g_current_runtime_level ) THEN
        FND_LOG.STRING(g_level_procedure, 'ZX.TRL.ZX_AR_ACTG_EXTRACT_PKG.BUILD_SQL',
                      'SQL-7 For AR Adjustments : Distributions Level');
    END IF;


  L_COLUMN_LIST_AR_ADJ :=

      'SELECT DISTINCT '||
            'ADJ.SET_OF_BOOKS_ID,
             ADJ.ADJUSTMENT_ID, '||
            'ADJ.DOC_SEQUENCE_ID,
             SEQ.NAME,'||
            'TO_NUMBER(NULL), '||
            '''ADJ'','||
            ' ''ADJ'',
             TO_CHAR(NULL),
             TO_NUMBER(NULL), '||
            'TO_CHAR(NULL),
            ZX_DET.ADJUSTED_DOC_ENTITY_CODE,'||    --INV
            'ZX_DET.ADJUSTED_DOC_TRX_ID,'|| -- Applied_to_trx_id -- adjusted_doc_id in eTax
            'ZX_DET.ADJUSTED_DOC_EVENT_CLASS_CODE,'||   -- INV
            'ZX_DET.ADJUSTED_DOC_NUMBER,'||  --Applied_doc_number
            'ZX_DET.BATCH_SOURCE_ID,'||
            'ARDTAX.TAX_CODE_ID,'||
            'DECODE(ARDTAX.SOURCE_TYPE,''TAX'',''TAX'',''DEFERRED_TAX'',''INTERIM'',
                ''ADJ_NON_REC_TAX'',''NON-RECOVERABLE'',
                ''FINCHRG_NON_REC_TAX'',''NON-RECOVERABLE'',NULL),'|| -- REG. TYPE CODE
             'TO_NUMBER(NULL),'||
            'TO_CHAR(NULL),
             ARD.SOURCE_TABLE,
             ARD.SOURCE_ID,
             TO_NUMBER(NULL),'||
            'TO_NUMBER(NULL), ' ||
            '(nvl(ARDTAX.TAXABLE_ENTERED_CR,0) - nvl(ARDTAX.TAXABLE_ENTERED_DR,0)),'||--Total Amount
            'TO_NUMBER(NULL),
            (nvl(ARDTAX.AMOUNT_CR,0) - nvl(ARDTAX.AMOUNT_DR,0)),'||
            '(nvl(ARDTAX.ACCTD_AMOUNT_CR,0) - nvl(ARDTAX.ACCTD_AMOUNT_DR,0)),'||
            ' TO_NUMBER(NULL), '||
            '(nvl(ARDTAX.TAXABLE_ENTERED_CR,0) - nvl(ARDTAX.TAXABLE_ENTERED_DR,0)),'||
            '(nvl(ARDTAX.TAXABLE_ACCOUNTED_CR,0) - nvl(ARDTAX.TAXABLE_ACCOUNTED_DR,0)),'|| -- ar matrix ++ 24
            'TO_NUMBER(NULL),
             TO_NUMBER(NULL),
             TO_CHAR(NULL),
            TO_CHAR(NULL),
             TO_CHAR(NULL),
             TO_CHAR(NULL), '||
            'DECODE(ARDTAX.SOURCE_TYPE_SECONDARY,''RECONCILE'',''Y'','||
            ' ''ASSIGNMENT_RECONCILE'',''Y'',''N''), ' ||
            'ZX_DET.INTERNAL_ORGANIZATION_ID,'||  -- Org_id
            'TO_NUMBER(NULL), ' ||
           -- 'TO_DATE(NULL),
            'TO_NUMBER(NULL),   --Applied_amount
             TO_NUMBER(NULL),   --tax_amount
             ZX_RATE.PERCENTAGE_RATE,
             ZX_RATE.TAX_RATE_CODE,
             ZX_RATE.VAT_TRANSACTION_TYPE_CODE,
             ZX_RATE.RATE_TYPE_CODE,
             ZX_RATE.TAX_RATE_NAME,
             ADJ.ADJUSTMENT_NUMBER,
              ZX_DET.TRX_DESCRIPTION,
              ADJ.DOC_SEQUENCE_VALUE,
              ADJ.APPLY_DATE,
              TO_DATE(NULL),   --Deposit Date
              ZX_DET.TRX_DUE_DATE,
              ZX_DET.TRX_SHIPPING_DATE,
              ZX_DET.TRX_COMMUNICATED_DATE,
              ZX_DET.TRX_CURRENCY_CODE,
              ZX_DET.CURRENCY_CONVERSION_TYPE,
              ZX_DET.CURRENCY_CONVERSION_DATE,
              ZX_DET.CURRENCY_CONVERSION_RATE,
              TO_CHAR(NULL),
              ZX_DET.FOB_POINT,
              ZX_DET.TRX_WAYBILL_NUMBER,'||
             'ZX_DET.BATCH_SOURCE_NAME,
              ZX_DET.TRX_TYPE_DESCRIPTION,
              TO_CHAR(NULL),
               TO_NUMBER(NULL),
               TO_CHAR(NULL),
             TO_CHAR(NULL),
              TO_CHAR(NULL),
              TO_CHAR(NULL),
              TO_CHAR(NULL),
              TO_CHAR(NULL),
              TO_CHAR(NULL),
              TO_CHAR(NULL),
              TO_CHAR(NULL),
              TO_CHAR(NULL),
              TO_CHAR(NULL),
              TO_CHAR(NULL),
              TO_CHAR(NULL),
              TO_CHAR(NULL),
              TO_CHAR(NULL),
              TO_CHAR(NULL),
              TO_CHAR(NULL),
              ZX_DET.APPLICATION_ID,
              ZX_DET.DOC_EVENT_STATUS,
              ZX_DET.APPLICATION_DOC_STATUS,
              ZX_DET.ESTABLISHMENT_ID,
              ''AR'', --EXTRACT_SOURCE_LEDGER,
              --ZX_DET.FUNCTIONAL_CURRECNY_CODE,
              --ZX_DET.LEDGER_NAME,
              ZX_DET.MINIMUM_ACCOUNTABLE_UNIT,
              ZX_DET.PRECISION,
              TO_NUMBER(NULL), --RECEIPT_CLASS_ID,
              ZX_DET.APPLIED_TO_APPLICATION_ID,
              ZX_DET.APPLIED_TO_TRX_LINE_ID,
              ZX_DET.APPLIED_TO_ENTITY_CODE,
              ZX_DET.APPLIED_TO_TRX_ID,
              ZX_DET.APPLIED_TO_EVENT_CLASS_CODE,
              ZX_DET.APPLIED_TO_TRX_NUMBER,
              ZX_DET.RELATED_DOC_APPLICATION_ID,
              ZX_DET.RELATED_DOC_DATE,
              ZX_DET.RELATED_DOC_ENTITY_CODE,
              ZX_DET.RELATED_DOC_EVENT_CLASS_CODE,
              ZX_DET.RELATED_DOC_NUMBER,
              ZX_DET.RELATED_DOC_TRX_ID,
              ZX_DET.ADJUSTED_DOC_APPLICATION_ID,
              ZX_DET.ADJUSTED_DOC_DATE,
              --ZX_DET.BANKING_TP_TAXPAYER_ID,
              ZX_DET.REF_DOC_APPLICATION_ID,
              ZX_DET.REF_DOC_ENTITY_CODE,
              ZX_DET.REF_DOC_EVENT_CLASS_CODE,
              ZX_DET.REF_DOC_LINE_ID,
              ZX_DET.REF_DOC_LINE_QUANTITY,
              ZX_DET.REF_DOC_TRX_ID,
              ZX_RATE.DEF_REC_SETTLEMENT_OPTION_CODE,
              ZX_DET.DEFAULT_TAXATION_COUNTRY,
              ZX_DET.DOCUMENT_SUB_TYPE,
              ZX_DET.TRX_BUSINESS_CATEGORY,
              ZX_DET.LINE_INTENDED_USE,
              ZX_DET.PRODUCT_CATEGORY,
              ZX_DET.PRODUCT_FISC_CLASSIFICATION,
              ZX_DET.SUPPLIER_EXCHANGE_RATE,
              ZX_DET.SUPPLIER_TAX_INVOICE_DATE,
              ZX_DET.SUPPLIER_TAX_INVOICE_NUMBER,
              ZX_DET.USER_DEFINED_FISC_CLASS,
              TO_NUMBER(NULL),    --ZX_LINE.EXCEPTION_RATE,
              TO_NUMBER(NULL),    --ZX_LINE.EXEMPT_RATE_MODIFIER,
              TO_NUMBER(NULL),    --ZX_LINE.ORIG_TAX_AMT,
              TO_NUMBER(NULL),    --ZX_LINE.ORIG_TAX_AMT_TAX_CURR,
              TO_NUMBER(NULL),    --ZX_LINE.ORIG_TAXABLE_AMT,
              TO_NUMBER(NULL),    --ZX_LINE.ORIG_TAXABLE_AMT_TAX_CURR,
              TO_CHAR(NULL),   --   ZX_RATE.RECOVERY_RATE_CODE,
              TO_NUMBER(NULL),    --ZX_LINE.TAX_AMT_TAX_CURR,
              TO_NUMBER(NULL),   --ZX_LINE.TAX_APPORTIONMENT_LINE_NUMBER,
              TO_CHAR(NULL),  --ZX_LINE.TAX_CURRENCY_CODE,
              TO_DATE(NULL),   --ZX_LINE.TAX_DATE,
              TO_DATE(NULL),   --ZX_LINE.TAX_DETERMINE_DATE,
              TO_DATE(NULL),   --ZX_DET.TAX_INVOICE_DATE,
              TO_CHAR(NULL),  --ZX_DET.TAX_INVOICE_NUMBER,
              ZX_RATE.TAX_JURISDICTION_CODE,
              ZX_RATE.TAX_REGIME_CODE,
              ZX_RATE.TAX_STATUS_CODE,
              ZX_DET.SHIP_FROM_PARTY_TAX_PROF_ID,
              ZX_DET.SHIP_FROM_SITE_TAX_PROF_ID,
              ZX_DET.SHIP_TO_PARTY_TAX_PROF_ID,
              ZX_DET.SHIP_TO_SITE_TAX_PROF_ID,
              ZX_DET.BILL_TO_PARTY_TAX_PROF_ID,
              ZX_DET.BILL_TO_SITE_TAX_PROF_ID,
         ZX_DET.SHIP_THIRD_PTY_ACCT_SITE_ID,
         ZX_DET.BILL_THIRD_PTY_ACCT_SITE_ID,
         ZX_DET.SHIP_TO_CUST_ACCT_SITE_USE_ID,
         ZX_DET.BILL_TO_CUST_ACCT_SITE_USE_ID,
         ZX_DET.SHIP_THIRD_PTY_ACCT_ID,
         ZX_DET.BILL_THIRD_PTY_ACCT_ID,
              TO_CHAR(NULL),'||  --ZX_LINE.HQ_ESTB_REG_NUMBER,
              'TO_CHAR(NULL),'||     --ZX_LINE.LEGAL_ENTITY_TAX_REG_NUMBER,
              'ZX_DET.OWN_HQ_SITE_TAX_PROF_ID,
              ZX_DET.OWN_HQ_PARTY_TAX_PROF_ID,
              ZX_DET.PORT_OF_ENTRY_CODE,
              TO_CHAR(NULL),'||     --ZX_LINE.REGISTRATION_PARTY_TYPE,
              'TO_CHAR(NULL),'||     --ZX_LINE.HISTORICAL_FLAG,
              'TO_CHAR(NULL),'||     --ZX_LINE.MRC_TAX_LINE_FLAG,
       --       'TO_CHAR(NULL),'||     --ZX_LINE.POSTED_FLAG,
              'TO_CHAR(NULL),'||     --ZX_LINE.REPORTING_ONLY_FLAG,
              'TO_CHAR(NULL),'||     --ZX_LINE.TAX_AMT_INCLUDED_FLAG,
              'TO_CHAR(NULL)' ||    --ZX_LINE.TAX_ONLY_LINE_FLAG
         'ZX_DET.EVENT_CLASS_MAPPING_ID,
         ZX_DET.TRX_LEVEL_TYPE,
         TO_CHAR(NULL),       -- Place of supply type code
         ZX_DET.POA_LOCATION_ID,
         ZX_DET.POO_LOCATION_ID,
         TO_CHAR(NULL),       -- Default Place of supply type code
         ZX_DET.LINE_AMT,
         TO_NUMBER(NULL),'||
             'xla_event.event_type_code, -- Accounting Columns
        xla_event.event_number,
        xla_event.event_status_code,
        xla_head.je_category_name,
        xla_head.accounting_date,
        xla_head.gl_transfer_status_code,
        xla_head.description,
        xla_line.ae_line_num,
        xla_line.accounting_class_code,
        xla_line.description,
        xla_line.statistical_amount,
        xla_event.process_status_code,
        xla_head.gl_transfer_status_code,
        xla_head.doc_sequence_id,
        xla_head.doc_sequence_value,
        xla_line.party_id,
        xla_line.party_site_id,
        xla_line.party_type_code,
        xla_event.event_id,
        xla_head.ae_header_id,
        xla_line.code_combination_id,
        xla_head.period_name,
        ardtax.line_id,
         TO_DATE(NULL),
         TO_CHAR(NULL),
         sum(ARD.ACCTD_AMOUNT_CR),
         sum(ARD.ACCTD_AMOUNT_DR),
         TO_CHAR(NULL),
         TO_CHAR(NULL),
         TO_CHAR(NULL) ';

  L_TABLE_LIST_AR_ADJ   :=
  ' FROM    ' ||
  '               GL_CODE_COMBINATIONS CC,'||
  '               FND_DOCUMENT_SEQUENCES   SEQ, '||
  -- '            AR_DISTRIBUTIONS_ALL  ARD, '||
  -- '               AR_DISTRIBUTIONS_ALL ARDTAX, '||
                  L_TBL_NAME_AR_DIST_ALL || ' ARD, ' ||
                  L_TBL_NAME_AR_DIST_ALL || ' ARDTAX, ' ||
--  '               AR_VAT_TAX_ALL_VL  VAT, '||
   '              ZX_RATES_VL     ZX_RATE,'||
--   '              ZX_EXEMPTIONS   ZX_EX, '||
--  '               HZ_CUST_SITE_USES_ALL  TPSU_SHIP, '||
--  '               HZ_CUST_SITE_USES_ALL  TPSU_BILL, '||
--  '               RA_BATCH_SOURCES_ALL  BS, '||
--  '               RA_CUST_TRX_TYPES_ALL TYPES, '||
  -- '            RA_CUSTOMER_TRX_ALL TRXH, '||
  --                L_TBL_NAME_CUSTOMER_TRX_ALL || ' TRXH, ' ||
    '             ZX_LINES_DET_FACTORS   ZX_DET,'||
    ' ZX_PARTY_TAX_PROFILE     PTP, '||
    ' XLA_TRANSACTION_ENTITIES XLA_ENT, '||
    ' XLA_EVENTS     XLA_EVENT, '||
    ' XLA_AE_HEADERS  XLA_HEAD, '||
    ' XLA_AE_LINES    XLA_LINE, '||
        'xla_acct_class_assgns  acs,'||
        'xla_assignment_defns_b asd,'||
  -- '               AR_ADJUSTMENTS_ALL ADJ  ';
                  L_TBL_NAME_AR_ADJUSTMENTS_ALL || '  ADJ  ';

  L_WHERE_CLAUSE_AR_ADJ   :=

  ' WHERE         ' ||
  -- apai commented : needs to be removed '               ADJ.TYPE IN (''INVOICE'',''CHARGES'',''LINE'',''TAX'') '||
  '               ADJ.STATUS = ''A'' '||
--  '    AND        ADJ.SET_OF_BOOKS_ID =  '||to_char(G_LEDGER_ID)||' '||
  '    AND        ADJ.CUSTOMER_TRX_ID = ZX_DET.TRX_ID '||
' AND adj.ADJUSTMENT_ID        = XLA_ENT.SOURCE_ID_INT_1    -- Accounting Joins
  AND ZX_DET.APPLICATION_ID =   XLA_ENT.APPLICATION_ID
  AND XLA_ENT.ENTITY_CODE      = ''AR_ADJUSTMENTS''
  AND XLA_ENT.ENTITY_ID        = XLA_EVENT.ENTITY_ID
  AND XLA_EVENT.EVENT_ID       = XLA_HEAD.EVENT_ID
  AND XLA_HEAD.AE_HEADER_ID    = XLA_LINE.AE_HEADER_ID
    AND acs.program_code   = ''TAX_REPORTING_LEDGER_SALES''
    AND acs.program_code = asd.program_code
    AND asd.assignment_code = acs.assignment_code
    AND asd.enabled_flag = ''Y''
    AND acs.accounting_class_code = xla_line.accounting_class_code'||
--  AND XLA_LINE.ACCOUNTING_CLASS_CODE IN (''TAX'',''DEFERRED_TAX'', '||
--'               ''ADJ_NON_REC_TAX'',''FINCHRG_NON_REC_TAX'') '||
  ' AND zx_det.tax_reporting_flag = ''Y'''||
  ' AND zx_det.hq_estb_party_tax_prof_id = ptp.party_tax_profile_id(+) '||
--  '    AND        TRXH.COMPLETE_FLAG = ''Y'' '||
 -- '    AND        CC.CHART_OF_ACCOUNTS_ID = '||to_char(G_CHART_OF_ACCOUNTS_ID)||' '||
  '    AND        ARD.SOURCE_ID(+) = ARDTAX.SOURCE_ID '||
  '    AND        ARDTAX.SOURCE_ID  = ADJ.ADJUSTMENT_ID '||
  '    AND        nvl(ARD.CODE_COMBINATION_ID,ARDTAX.CODE_COMBINATION_ID)
                             = CC.CODE_COMBINATION_ID '||
  '    AND        ARDTAX.SOURCE_TYPE IN (''TAX'',''DEFERRED_TAX'', '||
  '               ''ADJ_NON_REC_TAX'',''FINCHRG_NON_REC_TAX'') '||
  '    AND        nvl(ARD.SOURCE_TYPE,''ADJ'') IN (''ADJ'',''REC'',''FINCHRG'') '||
  '    AND        ARD.SOURCE_TABLE(+) = ''ADJ'' '||
  '    AND        ARDTAX.SOURCE_TABLE = ''ADJ'' '||
--' AND   ZX_LINE.TAX_EXEMPTION_ID = ZX_EX.TAX_EXEMPTION_ID '||
  '    AND        ARDTAX.TAX_CODE_ID   = NVL(ZX_RATE.SOURCE_ID,ZX_RATE.TAX_RATE_ID)
    AND ((ZX_RATE.RECORD_TYPE_CODE <> ''MIGRATED'')
         OR (ZX_RATE.SOURCE_ID IS NULL)) '||
  '    AND        ARD.TAX_LINK_ID(+)  = ARDTAX.TAX_LINK_ID '||
--  '    AND        TRXH.BILL_TO_SITE_USE_ID =  TPSU_BILL.SITE_USE_ID (+) '||
--  '    AND        TRXH.SHIP_TO_SITE_USE_ID =  TPSU_SHIP.SITE_USE_ID(+) '||
--  '    AND        BS.BATCH_SOURCE_ID (+) = TRXH.BATCH_SOURCE_ID '||
  '    AND        ADJ.DOC_SEQUENCE_ID = SEQ.DOC_SEQUENCE_ID (+) '
--  '    AND        TYPES.CUST_TRX_TYPE_ID = TRXH.CUST_TRX_TYPE_ID  ' ||
--  '    AND       ( bs.org_id is null or bs.org_id = adj.org_id ) '||
--  '    AND       ( types.org_id is null or types.org_id = adj.org_id ) '
       || L_WHERE_LEDGER_ID
       || L_WHERE_LEGAL_ENTITY_ID
       || L_WHERE_REGISTER_TYPE_AR_ADJ
       || L_WHERE_TRX_CLASS_ADJ_FINCHRG
       || L_WHERE_BATCH_NAME
       || L_WHERE_TRX_NUMBER_ADJ
       || L_WHERE_TRX_DATE_ADJ
       || L_WHERE_GL_DATE_ADJ
       || L_WHERE_DOCUMENT_SUB_TYPE
       || L_WHERE_TRX_BUSINESS_CATEGORY
       || L_WHERE_TAX_INVOICE_DATE
       ||L_WHERE_TAX_JURIS_CODE_OTH
       ||L_WHERE_FIRST_PTY_TAX_REG_OTH
       || L_WHERE_TAX_REGIME_CODE_OTH
       || L_WHERE_TAX_OTH
       || L_WHERE_TAX_STATUS_CODE_OTH
       || L_WHERE_TAX_RATE_CODE
       || L_WHERE_TAX_TYPE_CODE
       || L_WHERE_CURRENCY_CODE
       || L_WHERE_EXEMPT_STATUS_OTH
       || L_WHERE_TAX_CODE_VAT_TRX_TYPE
       || L_WHERE_TAX_LTE_OTHER_CLS;

    END IF; -- G_SUMMARY_LEVEL
  END IF; -- G_TRX_CLASS IS NULL

  -- END IF; -- DEFERRED TAX USED


  IF G_INCLUDE_AR_MISC_TRX_CLASS = 'Y' THEN
--    IF G_REGISTER_TYPE NOT IN ('NON-RECOVERABLE','INTERIM') THEN
      IF (UPPER(G_SUMMARY_LEVEL) = 'TRANSACTION'
          OR
          UPPER(G_SUMMARY_LEVEL) = 'TRANSACTION_LINE')
      THEN

    IF (g_level_procedure >= g_current_runtime_level ) THEN
        FND_LOG.STRING(g_level_procedure, 'ZX.TRL.ZX_AR_EXTRACT_PKG.BUILD_SQL',
                      'SQL-8 For AR Misc Cash Receipts : Header or Line Level');
    END IF;

  L_COLUMN_LIST_AR_MISC :=
      'SELECT  '||
           'ARCS.SET_OF_BOOKS_ID,
             ARCS.CASH_RECEIPT_ID,'||
            'ARCS.DOC_SEQUENCE_ID,
             SEQ.NAME,'||
            'TO_NUMBER(NULL),'||
            '''MISC_CASH_RECEIPT'','||
            '''MISC_CASH_RECEIPT'',
             TO_CHAR(NULL),
             TO_NUMBER(NULL), '||
            'TO_CHAR(NULL),
             TO_CHAR(NULL),
             TO_NUMBER(NULL),'||
            'TO_CHAR(NULL),
             TO_CHAR(NULL),
            TO_NUMBER(NULL),'||
            'ARDTAX.TAX_CODE_ID,'||
            '''TAX'','|| -- REGISTER TYPE CODE
             'TO_NUMBER(NULL),'||
            'TO_CHAR(NULL),
             ARD.SOURCE_TABLE,
             ARD.SOURCE_ID,
             TO_NUMBER(NULL) ,'||
            'TO_NUMBER(NULL), ' ||
            'nvl(ARDTAX.TAXABLE_ENTERED_CR,0) - nvl(ARDTAX.TAXABLE_ENTERED_DR,0) ,'|| -- Total Amount
            'TO_NUMBER(NULL),
            nvl(ARDTAX.AMOUNT_CR,0) - nvl(ARDTAX.AMOUNT_DR,0),'||
            'nvl(ARDTAX.ACCTD_AMOUNT_CR,0) - nvl(ARDTAX.ACCTD_AMOUNT_DR,0) ,'||
            ' TO_NUMBER(NULL), '||
            'nvl(ARDTAX.TAXABLE_ENTERED_CR,0) - nvl(ARDTAX.TAXABLE_ENTERED_DR,0) ,'||
            'nvl(ARDTAX.TAXABLE_ACCOUNTED_CR,0) - nvl(ARDTAX.TAXABLE_ACCOUNTED_DR,0),'|| -- ar matrix ++ 25
            'TO_NUMBER(NULL),
             TO_NUMBER(NULL),
             TO_CHAR(NULL),
             TO_CHAR(NULL),
             TO_CHAR(NULL),
             TO_CHAR(NULL),'||
             '''N'', ' ||
            'DIST.ORG_ID,
            TO_NUMBER(NULL), ' ||
            'ARCS.REVERSAL_DATE,
             TO_NUMBER(NULL),   --amount_applied
             TO_NUMBER(NULL),  --tax_applied
             ZX_TAX.PERCENTAGE_RATE,
             ZX_RATE.TAX_RATE_CODE,
             ZX_RATE.VAT_TRANSACTION_TYPE_CODE,
             ZX_RATE.RATE_TYPE_CODE,
             ZX_RATE.TAX_RATE_NAME,
             ARCS.RECEIPT_NUMBER,
              TO_CHAR(NULL),
              ARCS.DOC_SEQUENCE_VALUE,
              ARCS.RECEIPT_DATE,
             ARCS.DEPOSIT_DATE,
              TO_DATE(NULL), ' ||
             'TO_DATE(NULL),
              TO_DATE(NULL),
              ARCS.CURRENCY_CODE,
              ARCS.EXCHANGE_RATE_TYPE,
              ARCS.EXCHANGE_DATE,
              ARCS.EXCHANGE_RATE,
              TO_CHAR(NULL),
              TO_CHAR(NULL),
              TO_CHAR(NULL),
              TO_CHAR(NULL),
              TO_CHAR(NULL),
              TO_CHAR(NULL),
               TO_NUMBER(NULL),
               TO_CHAR(NULL),
             TO_CHAR(NULL),
              TO_CHAR(NULL),
              TO_CHAR(NULL),
              TO_CHAR(NULL),
              TO_CHAR(NULL),
              TO_CHAR(NULL),
              TO_CHAR(NULL),
              TO_CHAR(NULL),
              TO_CHAR(NULL),
              TO_CHAR(NULL),
              TO_CHAR(NULL),
              TO_CHAR(NULL),
              TO_CHAR(NULL),
              TO_CHAR(NULL),
              TO_CHAR(NULL),
              TO_CHAR(NULL),
              ZX_DET.APPLICATION_ID,
              ZX_DET.DOC_EVENT_STATUS,
         ZX_DET.APPLICATION_DOC_STATUS,
              ZX_DET.ESTABLISHMENT_ID,
              EXTRACT_SOURCE_LEDGER,
              ZX_DET.FUNCTIONAL_CURRECNY_CODE,
              ZX_DET.LEDGER_NAME,
              ZX_DET.MINIMUM_ACCOUNTABLE_UNIT,
              ZX_DET.PRECISION,
              RECEIPT_CLASS_ID,   --Check this
              ZX_DET.ADJUSTED_DOC_APPLICATION_ID,
              ZX_DET.ADJUSTED_DOC_DATE,
              ZX_DET.ADJUSTED_DOC_ENTITY_CODE,
              ZX_DET.ADJUSTED_DOC_EVENT_CLASS_CODE,
              ZX_DET.ADJUSTED_DOC_NUMBER,
              ZX_DET.ADJUSTED_DOC_TRX_ID,
              ZX_DET.RELATED_DOC_APPLICATION_ID,
              ZX_DET.RELATED_DOC_DATE,
              ZX_DET.RELATED_DOC_ENTITY_CODE,
              ZX_DET.RELATED_DOC_EVENT_CLASS_CODE,
              ZX_DET.RELATED_DOC_NUMBER,
              ZX_DET.RELATED_DOC_TRX_ID,
              ZX_DET.APPLIED_TO_APPLICATION_ID,
              ZX_DET.APPLIED_TO_TRX_LINE_ID,
              ZX_DET.BANKING_TP_TAXPAYER_ID,
              ZX_DET.REF_DOC_APPLICATION_ID,
              ZX_DET.REF_DOC_ENTITY_CODE,
              ZX_DET.REF_DOC_EVENT_CLASS_CODE,
              ZX_DET.REF_DOC_LINE_ID,
              ZX_DET.REF_DOC_LINE_QUANTITY,
              ZX_DET.REF_DOC_TRX_ID,
              ZX_DET.DEF_REC_SETTLEMENT_OPTION_CODE,
              ZX_DET.DEFAULT_TAXATION_COUNTRY,
              ZX_DET.DOCUMENT_SUB_TYPE,
              ZX_DET.TRX_BUSINESS_CATEGORY,
              ZX_DET.LINE_INTENDED_USE,
              ZX_DET.PRODUCT_CATEGORY,
              ZX_DET.PRODUCT_FISC_CLASSIFICATION,
              ZX_DET.SUPPLIER_EXCHANGE_RATE,
              ZX_DET.SUPPLIER_TAX_INVOICE_DATE,
              ZX_DET.SUPPLIER_TAX_INVOICE_NUMBER,
              ZX_DET.USER_DEFINED_FISC_CLASS,
              ZX_DET.EXCEPTION_RATE,
              ZX_DET.EXEMPT_RATE_MODIFIER,
              TO_NUMBER(NULL),   --ZX_LINE.ORIG_TAX_AMT,
              TO_NUMBER(NULL),   --ZX_LINE.ORIG_TAX_AMT_TAX_CURR,
              TO_NUMBER(NULL),   --ZX_LINE.ORIG_TAXABLE_AMT,
              TO_NUMBER(NULL),   --ZX_LINE.ORIG_TAXABLE_AMT_TAX_CURR,
              ZX_RATE.RECOVERY_RATE_CODE,
              ZX_LINE.TAX_AMT_TAX_CURR,
              TO_NUMBER(NULL),   --ZX_LINE.TAX_APPORTIONMENT_LINE_NUMBER,
              TO_CHAR(NULL),   --ZX_LINE.TAX_CURRENCY_CODE,
              TO_DATE(NULL),  --ZX_LINE.TAX_DATE,
              TO_DATE(NULL),  --ZX_LINE.TAX_DETERMINE_DATE,
              TO_DATE(NULL),  --ZX_LINE.TAX_INVOICE_DATE,
              TO_CHAR(NULL),   --ZX_LINE.TAX_INVOICE_NUMBER,
              ZX_RATE.TAX_JURISDICTION_CODE,
              ZX_RATE.TAX_REGIME_CODE,
              ZX_RATE.TAX_STATUS_CODE,
              ZX_DET.SHIP_FROM_PARTY_TAX_PROF_ID,
              ZX_DET.SHIP_FROM_SITE_TAX_PROF_ID,
              ZX_DET.SHIP_TO_PARTY_TAX_PROF_ID,
              ZX_DET.SHIP_TO_SITE_TAX_PROF_ID,
              ZX_DET.BILL_TO_PARTY_TAX_PROF_ID,
              ZX_DET.BILL_TO_SITE_TAX_PROF_ID,
              TO_CHAR(NULL),'||  --ZX_LINE.HQ_ESTB_REG_NUMBER,
              'TO_CHAR(NULL),'||     --ZX_LINE.LEGAL_ENTITY_TAX_REG_NUMBER,
              'ZX_DET.OWN_HQ_PARTY_SITE_PROF_ID,
              ZX_DET.OWN_HQ_PARTY_TAX_PROF_ID,
              ZX_DET.PORT_OF_ENTRY_CODE,
              TO_CHAR(NULL),'||     --ZX_LINE.REGISTRATION_PARTY_TYPE
              'TO_CHAR(NULL),'||     --ZX_LINE.HISTORICAL_FLAG
              'TO_CHAR(NULL),'||     --ZX_LINE.MRC_TAX_LINE_FLAG
              'TO_CHAR(NULL),'||     --ZX_LINE.POSTED_FLAG
              'TO_CHAR(NULL),'||     --ZX_LINE.REPORTING_ONLY_FLAG
              'TO_CHAR(NULL),'||     --ZX_LINE.TAX_AMT_INCLUDED_FLAG
              'TO_CHAR(NULL),'||     --ZX_LINE.TAX_ONLY_FLAG
         'ZX_DET.EVENT_CLASS_MAPPING_ID,
         ZX_DET.TRX_LEVEL_TYPE,
         TO_CHAR(NULL),       -- Place of supply type code
         ZX_DET.POA_LOCATION_ID,
         ZX_DET.POO_LOCATION_ID,
         TO_CHAR(NULL),       -- Default Place of supply type code
         ZX_DET.LINE_AMT,
         TO_NUMBER(NULL),'||
               'xla_event.event_type_code, -- Accounting Columns
        xla_event.event_number,
        xla_event.event_status_code,
        xla_head.je_category_name,
        xla_head.accounting_date,
        xla_head.gl_transfer_status_code,
        xla_head.description,
        xla_line.ae_line_num,
        xla_line.accounting_class_code,
        xla_line.description,
        xla_line.statistical_amount,
        xla_event.process_status_code,
        xla_head.gl_transfer_status_code,
        xla_head.doc_sequence_id,
        xla_head.doc_sequence_value,
        xla_line.party_id,
        xla_line.party_site_id,
        xla_line.party_type_code,
        xla_event.event_id,
        xla_head.ae_header_id,
        xla_line.code_combination_id,
        xla_head.period_name,
        arcs.cash_receipt_id,
        ARCS.REVERSAL_DATE,
        ARCS.STATUS,
        sum(ARD.ACCTD_AMOUNT_CR),
        sum(ARD.ACCTD_AMOOUNT_DR),
         TO_CHAR(NULL),
         TO_CHAR(NULL),
         TO_CHAR(NULL) ';

-- P_COLUMN_LIST_AR_MISC := L_COLUMN_LIST_AR_MISC;

 L_TABLE_LIST_AR_MISC   :=

' FROM  '||
'               GL_CODE_COMBINATIONS CC, '||
'               ZX_RATES_VL     ZX_RATE, '||
'               FND_DOCUMENT_SEQUENCES  SEQ,'||
-- '            AR_DISTRIBUTIONS_ALL ARD, '||
-- '            AR_DISTRIBUTIONS_ALL ARDTAX, '||
                L_TBL_NAME_AR_DIST_ALL || ' ARD, ' ||
                L_TBL_NAME_AR_DIST_ALL || ' ARDTAX, ' ||
'               AR_CASH_RECEIPTS_ALL ARCS, '||
--'             AR_MISC_CASH_DISTRIBUTIONS_ALL DIST,'||
    ' XLA_TRANSACTION_ENTITIES XLA_ENT, '||
    ' XLA_EVENTS     XLA_EVENT, '||
    ' XLA_AE_HEADERS  XLA_HEAD, '||
    ' XLA_AE_LINES    XLA_LINE, '||
        'xla_acct_class_assgns  acs,'||
        'xla_assignment_defns_b asd,'||
                L_TBL_AR_MISC_CASH_DIST_ALL || ' DIST '; -- changed by lxzhang

-- P_TABLE_LIST_AR_MISC := L_TABLE_LIST_AR_MISC;

 L_WHERE_CLAUSE_AR_MISC :=

' WHERE  '||
'               NVL(ARCS.CONFIRMED_FLAG,''Y'') = ''Y'' '||
'   AND         DIST.CASH_RECEIPT_ID = ARCS.CASH_RECEIPT_ID '||
--'   AND         DIST.SET_OF_BOOKS_ID = '||to_char(G_LEDGER_ID)||' '||
'   AND         ARCS.TYPE = ''MISC'' '||
'   AND         ARD.SOURCE_TABLE = ''MCD'' '||
'   AND         ARD.SOURCE_ID = DIST.MISC_CASH_DISTRIBUTION_ID '||
'   AND         ARD.SOURCE_TYPE = ''MISCCASH'' '||
'   AND         ARDTAX.SOURCE_ID = DIST.MISC_CASH_DISTRIBUTION_ID '||
'   AND         DIST.CODE_COMBINATION_ID = CC.CODE_COMBINATION_ID '||
'   AND         ARDTAX.SOURCE_TYPE = ''TAX'' ' ||
'   AND         ARDTAX.SOURCE_TABLE = ''MCD'' '|| --BugFix 2747443
' AND ARCS.CASH_RECEIPT_ID  = XLA_ENT.SOURCE_ID_INT_1    -- Accounting Joins
--  AND ZX_DET.APPLICATION_ID =   XLA_ENT.APPLICATION_ID
  AND XLA_ENT.ENTITY_CODE      = ''AR_MISC_CASH_DISTRIBUTIONS''
  AND XLA_ENT.ENTITY_ID        = XLA_EVENT.ENTITY_ID
  AND XLA_EVENT.EVENT_ID       = XLA_HEAD.EVENT_ID
  AND XLA_HEAD.AE_HEADER_ID    = XLA_LINE.AE_HEADER_ID
    AND acs.program_code   = ''TAX_REPORTING_LEDGER_SALES''
    AND acs.program_code = asd.program_code
    AND asd.assignment_code = acs.assignment_code
    AND asd.enabled_flag = ''Y''
    AND acs.accounting_class_code = xla_line.accounting_class_code'||
'   AND         ARDTAX.TAX_CODE_ID  = NVL(ZX_RATE.SOURCE_ID,ZX_RATE.TAX_RATE_ID)
    AND ((ZX_RATE.RECORD_TYPE_CODE <> ''MIGRATED'')
         OR (ZX_RATE.SOURCE_ID IS NULL)) '||
'   AND         ARCS.DOC_SEQUENCE_ID = SEQ.DOC_SEQUENCE_ID(+) '
       || L_WHERE_LEDGER_ID
       || L_WHERE_LEGAL_ENTITY_ID_MISC
       || L_WHERE_REGISTER_TYPE_AR_MISC
       || L_WHERE_TRX_CLASS_MISC
       || L_WHERE_BATCH_NAME
       || L_WHERE_TRX_NUMBER_MISC
       || L_WHERE_TRX_DATE_MISC
       || L_WHERE_GL_DATE_MISC
       || L_WHERE_DOCUMENT_SUB_TYPE
       || L_WHERE_TRX_BUSINESS_CATEGORY
       || L_WHERE_TAX_INVOICE_DATE
       ||L_WHERE_TAX_JURIS_CODE_OTH
       ||L_WHERE_FIRST_PTY_TAX_REG_OTH
       || L_WHERE_TAX_REGIME_CODE_OTH
       || L_WHERE_TAX_OTH
       || L_WHERE_TAX_STATUS_CODE_OTH
       || L_WHERE_TAX_RATE_CODE
       || L_WHERE_TAX_TYPE_CODE
       || L_WHERE_CURRENCY_CODE
       || L_WHERE_EXEMPT_STATUS_OTH
       || L_WHERE_TAX_CODE_VAT_TRX_TYPE
       || L_WHERE_TAX_LTE_OTHER_CLS;

      ELSIF  UPPER(G_SUMMARY_LEVEL) = 'TRANSACTION_DISTRIBUTION' THEN
    -- apai commented : needs to be removed  AND  NVL(G_TRX_CLASS,'MISC_CASH_RECEIPT') = ('MISC_CASH_RECEIPT') THEN

    IF (g_level_procedure >= g_current_runtime_level ) THEN
        FND_LOG.STRING(g_level_procedure, 'ZX.TRL.ZX_AR_EXTRACT_PKG.BUILD_SQL',
                      'SQL-9 For AR Misc Cash Receipts : Distributions Level');
    END IF;


L_COLUMN_LIST_AR_MISC :=
      'SELECT  '||
      'ARCS.SET_OF_BOOKS_ID,
             ARCS.CASH_RECEIPT_ID,'||
            'ARCS.DOC_SEQUENCE_ID,
             SEQ.NAME,'||
            'TO_NUMBER(NULL),'||
            '''MISC_CASH_RECEIPT'','||
            '''MISC_CASH_RECEIPT'',
             TO_CHAR(NULL),
             TO_NUMBER(NULL),
            TO_CHAR(NULL),
             TO_CHAR(NULL),
             TO_NUMBER(NULL),
             TO_CHAR(NULL),
             TO_CHAR(NULL),
             TO_NUMBER(NULL),'||
            'ARDTAX.TAX_CODE_ID,'||
            '''TAX'','|| -- REGISTER TYPE CODE
             'TO_NUMBER(NULL),'||
            'TO_CHAR(NULL),
             ARD.SOURCE_TABLE,
             ARD.SOURCE_ID,
             TO_NUMBER(NULL),'||
            'TO_NUMBER(NULL), ' ||
            '(nvl(ARDTAX.TAXABLE_ENTERED_CR,0) - nvl(ARDTAX.TAXABLE_ENTERED_DR,0)),'||
            'TO_NUMBER(NULL), --Tax Line ID
            (nvl(ARDTAX.AMOUNT_CR,0) - nvl(ARDTAX.AMOUNT_DR,0)),'||
            '(nvl(ARDTAX.ACCTD_AMOUNT_CR,0) - nvl(ARDTAX.ACCTD_AMOUNT_DR,0)),
             TO_NUMBER(NULL), '||  --Tax Line Number
            '(nvl(ARDTAX.TAXABLE_ENTERED_CR,0) - nvl(ARDTAX.TAXABLE_ENTERED_DR,0)),'||
            '(nvl(ARDTAX.TAXABLE_ACCOUNTED_CR,0) - nvl(ARDTAX.TAXABLE_ACCOUNTED_DR,0)),'|| -- ar matrix ++ 26
            'TO_NUMBER(NULL),'||   -- Trx_line_id
             'TO_NUMBER(NULL),
             TO_CHAR(NULL),
             TO_CHAR(NULL),
             TO_CHAR(NULL),
             TO_CHAR(NULL),
             ''N'', ' ||    --Reconcialiation Flag
            'DIST.ORG_ID,
            TO_NUMBER(NULL), ' ||
            'ARCS.REVERSAL_DATE,
             TO_NUMBER(NULL),   -- Amount_applied
             TO_NUMBER(NULL),   -- tax_Amount
             ZX_TAX.PERCENTAGE_RATE,
             ZX_RATE.TAX_RATE_CODE,
             ZX_RATE.VAT_TRANSACTION_TYPE_CODE,
             ZX_RATE.RATE_TYPE_CODE,
             ZX_RATE.TAX_RATE_NAME,
             ARCS.RECEIPT_NUMBER,
              TO_CHAR(NULL),
              ARCS.DOC_SEQUENCE_VALUE,
              ARCS.RECEIPT_DATE,
              ARCS.DEPOSIT_DATE,
              TO_DATE(NULL), ' ||
             'TO_DATE(NULL),
              TO_DATE(NULL),
              ARCS.CURRENCY_CODE,
              ARCS.EXCHANGE_RATE_TYPE,
              ARCS.EXCHANGE_DATE,
              ARCS.EXCHANGE_RATE,'||
             'TO_CHAR(NULL),     --trx_sic_code
              TO_CHAR(NULL),    --FOB
              TO_CHAR(NULL),   --Waybill Number
              TO_CHAR(NULL),   --batch source name
              TO_CHAR(NULL),'|| --trx_type_description
              'TO_CHAR(NULL),
               TO_NUMBER(NULL),
               TO_CHAR(NULL),
             TO_CHAR(NULL),
              TO_CHAR(NULL),
              TO_CHAR(NULL),
              TO_CHAR(NULL),
              TO_CHAR(NULL),
              TO_CHAR(NULL),
              TO_CHAR(NULL),
              TO_CHAR(NULL),
              TO_CHAR(NULL),
              TO_CHAR(NULL),
              TO_CHAR(NULL),
              TO_CHAR(NULL),
              TO_CHAR(NULL),
              TO_CHAR(NULL),
              TO_CHAR(NULL),
              TO_CHAR(NULL),
             ZX_DET.APPLICATION_ID
              ZX_DET.DOC_EVENT_STATUS
         ZX_DET.APPLICATION_DOC_STATUS,
              ZX_DET.ESTABLISHMENT_ID
              EXTRACT_SOURCE_LEDGER
              ZX_DET.FUNCTIONAL_CURRECNY_CODE
              ZX_DET.LEDGER_NAME
              ZX_DET.MINIMUM_ACCOUNTABLE_UNIT
              ZX_DET.PRECISION
              RECEIPT_CLASS_ID
              ZX_DET.ADJUSTED_DOC_APPLICATION_ID
              ZX_DET.ADJUSTED_DOC_DATE
              ZX_DET.ADJUSTED_DOC_ENTITY_CODE
              ZX_DET.ADJUSTED_DOC_EVENT_CLASS_CODE
              ZX_DET.ADJUSTED_DOC_NUMBER
              ZX_DET.ADJUSTED_DOC_TRX_ID
              ZX_DET.RELATED_DOC_APPLICATION_ID
              ZX_DET.RELATED_DOC_DATE
              ZX_DET.RELATED_DOC_ENTITY_CODE
              ZX_DET.RELATED_DOC_EVENT_CLASS_CODE
              ZX_DET.RELATED_DOC_NUMBER
              ZX_DET.RELATED_DOC_TRX_ID
              ZX_DET.APPLIED_TO_APPLICATION_ID
              ZX_DET.APPLIED_TO_TRX_LINE_ID
              ZX_DET.BANKING_TP_TAXPAYER_ID
              ZX_DET.REF_DOC_APPLICATION_ID
              ZX_DET.REF_DOC_ENTITY_CODE
              ZX_DET.REF_DOC_EVENT_CLASS_CODE
              ZX_DET.REF_DOC_LINE_ID
              ZX_DET.REF_DOC_LINE_QUANTITY
              ZX_DET.REF_DOC_TRX_ID
              ZX_DET.DEF_REC_SETTLEMENT_OPTION_CODE
              ZX_DET.DEFAULT_TAXATION_COUNTRY
              ZX_DET.DOCUMENT_SUB_TYPE
              ZX_DET.TRX_BUSINESS_CATEGORY
              ZX_DET.LINE_INTENDED_USE
              ZX_DET.PRODUCT_CATEGORY
              ZX_DET.PRODUCT_FISC_CLASSIFICATION
              ZX_DET.SUPPLIER_EXCHANGE_RATE
              ZX_DET.SUPPLIER_TAX_INVOICE_DATE
              ZX_DET.SUPPLIER_TAX_INVOICE_NUMBER
              ZX_DET.USER_DEFINED_FISC_CLASS
              ZX_DET.EXCEPTION_RATE
              ZX_DET.EXEMPT_RATE_MODIFIER
              TO_NUMBER(NULL),   --ZX_LINE.ORIG_TAX_AMT
              TO_NUMBER(NULL),   --ZX_LINE.ORIG_TAX_AMT_TAX_CURR
              TO_NUMBER(NULL),   --ZX_LINE.ORIG_TAXABLE_AMT
              TO_NUMBER(NULL),   --ZX_LINE.ORIG_TAXABLE_AMT_TAX_CURR
              ZX_RATE.RECOVERY_RATE_CODE
              TO_NUMBER(NULL),   --ZX_LINE.TAX_AMT_TAX_CURR
              TO_NUMBER(NULL),   --ZX_LINE.TAX_APPORTIONMENT_LINE_NUMBER
              TO_CHAR(NULL),   --ZX_LINE.TAX_CURRENCY_CODE
              TO_DATE(NULL),  --ZX_LINE.TAX_DATE
              TO_DATE(NULL),  --ZX_LINE.TAX_DETERMINE_DATE
              TO_DATE(NULL),  --ZX_LINE.TAX_INVOICE_DATE
              TO_CHAR(NULL),   --ZX_LINE.TAX_INVOICE_NUMBER
              ZX_RATE.TAX_JURISDICTION_CODE
              ZX_RATE.TAX_REGIME_CODE
              ZX_RATE.TAX_STATUS_CODE
              ZX_DET.SHIP_FROM_PARTY_TAX_PROF_ID
              ZX_DET.SHIP_FROM_SITE_TAX_PROF_ID
              ZX_DET.SHIP_TO_PARTY_TAX_PROF_ID
              ZX_DET.SHIP_TO_SITE_TAX_PROF_ID
              ZX_DET.BILL_TO_PARTY_TAX_PROF_ID
              ZX_DET.BILL_TO_SITE_TAX_PROF_ID
              TO_CHAR(NULL),'||  --ZX_LINE.HQ_ESTB_REG_NUMBER
              'TO_CHAR(NULL),'||     --ZX_LINE.LEGAL_ENTITY_TAX_REG_NUMBER
              'ZX_DET.OWN_HQ_PARTY_SITE_PROF_ID,
              ZX_DET.OWN_HQ_PARTY_TAX_PROF_ID,
              ZX_DET.PORT_OF_ENTRY_CODE,
              TO_CHAR(NULL),'||     --ZX_LINE.REGISTRATION_PARTY_TYPE
              'TO_CHAR(NULL),'||     --ZX_LINE.HISTORICAL_FLAG
              'TO_CHAR(NULL),'||     --ZX_LINE.MRC_TAX_LINE_FLAG
              'TO_CHAR(NULL),'||     --ZX_LINE.POSTED_FLAG
              'TO_CHAR(NULL),'||     --ZX_LINE.REPORTING_ONLY_FLAG
              'TO_CHAR(NULL),'||     --ZX_LINE.TAX_AMT_INCLUDED_FLAG
              'TO_CHAR(NULL),'||     --ZX_LINE.TAX_ONLY_FLAG
         'ZX_DET.EVENT_CLASS_MAPPING_ID,
         ZX_DET.TRX_LEVEL_TYPE,
         TO_CHAR(NULL),       -- Place of supply type code
         ZX_DET.POA_LOCATION_ID,
         ZX_DET.POO_LOCATION_ID,
         TO_CHAR(NULL),       -- Default Place of supply type code
         ZX_DET.LINE_AMT,
         TO_NUMBER(NULL),'||
       'xla_event.event_type_code, -- Accounting Columns
        xla_event.event_number,
        xla_event.event_status_code,
        xla_head.je_category_name,
        xla_head.accounting_date,
        xla_head.gl_transfer_status_code,
        xla_head.description,
        xla_line.ae_line_num,
        xla_line.accounting_class_code,
        xla_line.description,
        xla_line.statistical_amount,
        xla_event.process_status_code,
        xla_head.gl_transfer_status_code,
        xla_head.doc_sequence_id,
        xla_head.doc_sequence_value,
        xla_line.party_id,
        xla_line.party_site_id,
        xla_line.party_type_code,
        xla_event.event_id,
        xla_head.ae_header_id,
        xla_line.code_combination_id,
        xla_head.period_name,
        ardtax.line_id,
        ARCS.REVERSAL_DATE,
        ARCS.STATUS,
        sum(ARD.ACCTD_AMOUNT_CR),
	sum(ARD.ACCTD_AMOOUNT_DR),
        TO_CHAR(NULL),
        TO_CHAR(NULL),
        TO_CHAR(NULL) ';

L_TABLE_LIST_AR_MISC   :=

' FROM          '||
'               GL_CODE_COMBINATIONS CC,'||
'               ZX_RATES_VL      ZX_RATE, '||
'               FND_DOCUMENT_SEQUENCES  SEQ,'||
-- '            AR_DISTRIBUTIONS_ALL ARD, '||
-- '            AR_DISTRIBUTIONS_ALL ARDTAX, '||
                L_TBL_NAME_AR_DIST_ALL || ' ARD, ' ||
                L_TBL_NAME_AR_DIST_ALL || ' ARDTAX, ' ||
'               AR_CASH_RECEIPTS_ALL ARCS, '||
--'             AR_MISC_CASH_DISTRIBUTIONS_ALL DIST '
    ' XLA_TRANSACTION_ENTITIES XLA_ENT, '||
    ' XLA_EVENTS     XLA_EVENT, '||
    ' XLA_AE_HEADERS  XLA_HEAD, '||
    ' XLA_AE_LINES    XLA_LINE, '||
        'xla_acct_class_assgns  acs,'||
        'xla_assignment_defns_b asd,'||
                L_TBL_AR_MISC_CASH_DIST_ALL || ' DIST '; -- changed by lxzhang

--P_TABLE_LIST_AR_MISC := L_TABLE_LIST_AR_MISC;

L_WHERE_CLAUSE_AR_MISC  :=

' WHERE  '||
'               NVL(ARCS.CONFIRMED_FLAG,''Y'') = ''Y'' '||
'   AND         DIST.CASH_RECEIPT_ID = ARCS.CASH_RECEIPT_ID '||
--'   AND         DIST.SET_OF_BOOKS_ID =  '||to_char(G_LEDGER_ID)||' '||
'   AND         ARCS.TYPE = ''MISC'' '||
'   AND         CC.CHART_OF_ACCOUNTS_ID = '||to_char(G_CHART_OF_ACCOUNTS_ID)||' '||
'   AND         ARD.SOURCE_TABLE = ''MCD'' '||
'   AND         ARD.SOURCE_ID = DIST.MISC_CASH_DISTRIBUTION_ID '||
'   AND         ARD.SOURCE_TYPE = ''MISCCASH'' '||
'   AND         ARDTAX.SOURCE_ID = DIST.MISC_CASH_DISTRIBUTION_ID '||
'   AND         DIST.CODE_COMBINATION_ID = CC.CODE_COMBINATION_ID '||
'   AND         ARDTAX.SOURCE_TYPE = ''TAX'' ' ||
'   AND         ARDTAX.SOURCE_TABLE = ''MCD'' '|| --BugFix 2747443
' AND ARCS.CASH_RECEIPT_ID     = XLA_ENT.SOURCE_ID_INT_1    -- Accounting Joins
--  AND ZX_DET.APPLICATION_ID =   XLA_ENT.APPLICATION_ID
  AND XLA_ENT.ENTITY_CODE      = ''AR_MISC_CASH_DISTRIBUTIONS''
  AND XLA_ENT.ENTITY_ID        = XLA_EVENT.ENTITY_ID
  AND XLA_EVENT.EVENT_ID       = XLA_HEAD.EVENT_ID
  AND XLA_HEAD.AE_HEADER_ID    = XLA_LINE.AE_HEADER_ID
    AND acs.program_code   = ''TAX_REPORTING_LEDGER_SALES''
    AND acs.program_code = asd.program_code
    AND asd.assignment_code = acs.assignment_code
    AND asd.enabled_flag = ''Y''
    AND acs.accounting_class_code = xla_line.accounting_class_code'||
'   AND         ARDTAX.TAX_CODE_ID  = NVL(ZX_RATE.SOURCE_ID,ZX_RATE.TAX_RATE_ID)
    AND ((ZX_RATE.RECORD_TYPE_CODE <> ''MIGRATED'')
         OR (ZX_RATE.SOURCE_ID IS NULL)) '||
'   AND         ARCS.DOC_SEQUENCE_ID = SEQ.DOC_SEQUENCE_ID(+) '
       || L_WHERE_LEDGER_ID
       || L_WHERE_LEGAL_ENTITY_ID_MISC
       || L_WHERE_REGISTER_TYPE_AR_MISC
       || L_WHERE_TRX_CLASS_MISC
       || L_WHERE_BATCH_NAME
       || L_WHERE_TRX_NUMBER_MISC
       || L_WHERE_TRX_DATE_MISC
       || L_WHERE_GL_DATE_MISC
       || L_WHERE_DOCUMENT_SUB_TYPE
       || L_WHERE_TRX_BUSINESS_CATEGORY
       || L_WHERE_TAX_INVOICE_DATE
       ||L_WHERE_TAX_JURIS_CODE_OTH
       ||L_WHERE_FIRST_PTY_TAX_REG_OTH
       || L_WHERE_TAX_REGIME_CODE_OTH
       || L_WHERE_TAX_OTH
       || L_WHERE_TAX_STATUS_CODE_OTH
       || L_WHERE_TAX_RATE_CODE
       || L_WHERE_TAX_TYPE_CODE
       || L_WHERE_CURRENCY_CODE
       || L_WHERE_EXEMPT_STATUS_OTH
       || L_WHERE_TAX_CODE_VAT_TRX_TYPE
       || L_WHERE_TAX_LTE_OTHER_CLS;

      END IF; -- G_SUMMARY_LEVEL
--    END IF; -- G_REGISTER_TYPE
  END IF; -- G_TRX_CLASS IS NULL

--  Building the Column List, Table List and Where Clauses for
--  Bills Receivable : Bills Receivable : Bills Receivable : Bills Receivable :
--  Bills Receivable : Bills Receivable : Bills Receivable : Bills Receivable :
--  Bills Receivable : Bills Receivable : Bills Receivable : Bills Receivable :

  IF G_INCLUDE_AR_BR_TRX_CLASS = 'Y' THEN
 --   IF L_IS_DEFERRED_TAX_USED = 1 THEN
      IF (UPPER(G_SUMMARY_LEVEL) = 'TRANSACTION'
          OR
          UPPER(G_SUMMARY_LEVEL) = 'TRANSACTION_LINE')
      THEN

    IF (g_level_procedure >= g_current_runtime_level ) THEN
        FND_LOG.STRING(g_level_procedure, 'ZX.TRL.ZX_AR_ACTG_EXTRACT_PKG.BUILD_SQL',
                      'SQL-10 For AR Bills Receivables : Header or Line Level');
    END IF;

L_COLUMN_LIST_AR_BR   :=
'SELECT  '||
 'ZX_DET.LEDGER_ID,
       ZX_DET.TRX_ID, '||
      'ZX_DET.DOC_SEQ_ID,
       ZX_DET.DOC_SEQ_NAME,
       TO_NUMBER(NULL),
       ''BR'', '||
       '''BR'', '||
      ' TO_CHAR(NULL),
       TO_NUMBER(NULL), '||
      ' TO_CHAR(NULL),
       TO_CHAR(NULL),
       TO_NUMBER(NULL),'||
      ' TO_CHAR(NULL),
       TO_CHAR(NULL), '||
      'ZX_DET.BATCH_SOURCE_ID,'||
      'ARDTAX.TAX_CODE_ID,'||
      'DECODE(ARDTAX.SOURCE_TYPE,''TAX'',''TAX'',''DEFERRED_TAX'',''INTERIM''
      ,NULL), ' || -- REG. TYPE CODE
       'TO_NUMBER(NULL),
       TO_CHAR(NULL),
       TO_CHAR(NULL),
       TO_NUMBER(NULL),
       TO_NUMBER(NULL) ,'||
      'TO_NUMBER(NULL), ' ||
       'sum(nvl(ARDTAX.TAXABLE_ENTERED_CR,0)-nvl(ARDTAX.TAXABLE_ENTERED_DR,0)),'||-- Total Amount
      'TO_NUMBER(NULL),
      sum(nvl(ARDTAX.AMOUNT_CR,0)-nvl(ARDTAX.AMOUNT_DR,0)),'||
      'sum(nvl(ARDTAX.ACCTD_AMOUNT_CR,0) - nvl(ARDTAX.ACCTD_AMOUNT_DR,0)) ,'||
      'TO_NUMBER(NULL), '||
      'sum(nvl(ARDTAX.TAXABLE_ENTERED_CR,0) - nvl(ARDTAX.TAXABLE_ENTERED_DR,0)) ,'||
      'sum(nvl(ARDTAX.TAXABLE_ACCOUNTED_CR,0) - nvl(ARDTAX.TAXABLE_ACCOUNTED_DR,0)),'|| -- ar matrix ++ 27
      'TO_NUMBER(NULL),
       TO_NUMBER(NULL), '||
      'TO_CHAR(NULL),'||
      'TO_CHAR(NULL),
       TO_CHAR(NULL),
       TO_CHAR(NULL),
       ''N'', ' ||
      'ZX_DET.INTERNAL_ORGANIZATION_ID,
      TO_NUMBER(NULL), ' ||
      --'TO_DATE(NULL),
       'TO_NUMBER(NULL), --amount_applied
       TO_NUMBER(NULL), --tax_applied
       ZX_RATE.PERCENTAGE_RATE,
       ZX_RATE.TAX_RATE_CODE,
       ZX_RATE.VAT_TRANSACTION_TYPE_CODE,
       ZX_RATE.RATE_TYPE_CODE,
       ZX_RATE.TAX_RATE_NAME,
      ZX_DET.TRX_NUMBER,
       ZX_DET.TRX_DESCRIPTION,
       ZX_DET.DOC_SEQ_VALUE,
       ZX_DET.TRX_DATE,
       TO_DATE(NULL), --Deposit Date
       ZX_DET.TRX_DUE_DATE,
       ZX_DET.TRX_SHIPPING_DATE,
       ZX_DET.TRX_COMMUNICATED_DATE,
       ZX_DET.TRX_CURRENCY_CODE,
       ZX_DET.CURRENCY_CONVERSION_TYPE,
       ZX_DET.CURRENCY_CONVERSION_DATE,
       ZX_DET.CURRENCY_CONVERSION_RATE,
       TO_CHAR(NULL),
       ZX_DET.FOB_POINT,
       ZX_DET.TRX_WAYBILL_NUMBER,
       ZX_DET.BATCH_SOURCE_NAME, '||
       'ZX_DET.TRX_TYPE_DESCRIPTION,
      TO_CHAR(NULL),
      TO_NUMBER(NULL),
       TO_CHAR(NULL),
       LINE.ATTRIBUTE_CATEGORY,
        LINE.ATTRIBUTE1,
        LINE.ATTRIBUTE2,
        LINE.ATTRIBUTE3,
        LINE.ATTRIBUTE4,
        LINE.ATTRIBUTE5,
        LINE.ATTRIBUTE6,
        LINE.ATTRIBUTE7,
        LINE.ATTRIBUTE8,
        LINE.ATTRIBUTE9,
        LINE.ATTRIBUTE10,
        LINE.ATTRIBUTE11,
        LINE.ATTRIBUTE12,
        LINE.ATTRIBUTE13,
        LINE.ATTRIBUTE14,
        LINE.ATTRIBUTE15,
       ZX_DET.APPLICATION_ID,
        ZX_DET.DOC_EVENT_STATUS,
         ZX_DET.APPLICATION_DOC_STATUS,
        ZX_DET.ESTABLISHMENT_ID,
        ''AR'', --EXTRACT_SOURCE_LEDGER,
        --ZX_DET.FUNCTIONAL_CURRECNY_CODE,
        --ZX_DET.LEDGER_NAME,
        ZX_DET.MINIMUM_ACCOUNTABLE_UNIT,
        ZX_DET.PRECISION,
        to_number(NULL),   --RECEIPT_CLASS_ID,
              ZX_DET.APPLIED_TO_APPLICATION_ID,
              ZX_DET.APPLIED_TO_TRX_LINE_ID,
              ZX_DET.APPLIED_TO_ENTITY_CODE,
              ZX_DET.APPLIED_TO_TRX_ID,
              ZX_DET.APPLIED_TO_EVENT_CLASS_CODE,
              ZX_DET.APPLIED_TO_TRX_NUMBER,
              ZX_DET.RELATED_DOC_APPLICATION_ID,
              ZX_DET.RELATED_DOC_DATE,
              ZX_DET.RELATED_DOC_ENTITY_CODE,
              ZX_DET.RELATED_DOC_EVENT_CLASS_CODE,
              ZX_DET.RELATED_DOC_NUMBER,
              ZX_DET.RELATED_DOC_TRX_ID,
              ZX_DET.ADJUSTED_DOC_APPLICATION_ID,
              ZX_DET.ADJUSTED_DOC_DATE,
        --ZX_DET.BANKING_TP_TAXPAYER_ID,
        ZX_DET.REF_DOC_APPLICATION_ID,
        ZX_DET.REF_DOC_ENTITY_CODE,
        ZX_DET.REF_DOC_EVENT_CLASS_CODE,
        ZX_DET.REF_DOC_LINE_ID,
        ZX_DET.REF_DOC_LINE_QUANTITY,
        ZX_DET.REF_DOC_TRX_ID,
        ZX_RATE.DEF_REC_SETTLEMENT_OPTION_CODE,
        ZX_DET.DEFAULT_TAXATION_COUNTRY,
        ZX_DET.DOCUMENT_SUB_TYPE,
        ZX_DET.TRX_BUSINESS_CATEGORY,
        ZX_DET.LINE_INTENDED_USE,
        ZX_DET.PRODUCT_CATEGORY,
        ZX_DET.PRODUCT_FISC_CLASSIFICATION,
        ZX_DET.SUPPLIER_EXCHANGE_RATE,
        ZX_DET.SUPPLIER_TAX_INVOICE_DATE,
        ZX_DET.SUPPLIER_TAX_INVOICE_NUMBER,
        ZX_DET.USER_DEFINED_FISC_CLASS,
        TO_NUMBER(NULL),    --ZX_LINE.EXCEPTION_RATE,
        TO_NUMBER(NULL),    --ZX_LINE.EXEMPT_RATE_MODIFIER,
        TO_NUMBER(NULL),   --ZX_LINE.ORIG_TAX_AMT,
        TO_NUMBER(NULL),   --ZX_LINE.ORIG_TAX_AMT_TAX_CURR,
        TO_NUMBER(NULL),   --ZX_LINE.ORIG_TAXABLE_AMT,
        TO_NUMBER(NULL),   --ZX_LINE.ORIG_TAXABLE_AMT_TAX_CURR,
        TO_CHAR(NULL),    --ZX_RATE.RECOVERY_RATE_CODE,
        TO_NUMBER(NULL),   --ZX_LINE.TAX_AMT_TAX_CURR,
        TO_NUMBER(NULL),   --ZX_LINE.TAX_APPORTIONMENT_LINE_NUMBER,
        TO_CHAR(NULL),   --ZX_LINE.TAX_CURRENCY_CODE,
        TO_DATE(NULL),  --ZX_LINE.TAX_DATE,
        TO_DATE(NULL),  --ZX_LINE.TAX_DETERMINE_DATE,
        TO_DATE(NULL),  --ZX_DET.TAX_INVOICE_DATE,
        TO_CHAR(NULL),   --ZX_DET.TAX_INVOICE_NUMBER,
        ZX_RATE.TAX_JURISDICTION_CODE,
        ZX_RATE.TAX_REGIME_CODE,
        ZX_RATE.TAX_STATUS_CODE,
        ZX_DET.SHIP_FROM_PARTY_TAX_PROF_ID,
        ZX_DET.SHIP_FROM_SITE_TAX_PROF_ID,
        ZX_DET.SHIP_TO_PARTY_TAX_PROF_ID,
        ZX_DET.SHIP_TO_SITE_TAX_PROF_ID,
        ZX_DET.BILL_TO_PARTY_TAX_PROF_ID,
        ZX_DET.BILL_TO_SITE_TAX_PROF_ID,
         ZX_DET.SHIP_THIRD_PTY_ACCT_SITE_ID,
         ZX_DET.BILL_THIRD_PTY_ACCT_SITE_ID,
         ZX_DET.SHIP_TO_CUST_ACCT_SITE_USE_ID,
         ZX_DET.BILL_TO_CUST_ACCT_SITE_USE_ID,
         ZX_DET.SHIP_THIRD_PTY_ACCT_ID,
         ZX_DET.BILL_THIRD_PTY_ACCT_ID,
        TO_CHAR(NULL),'||  --ZX_LINE.HQ_ESTB_REG_NUMBER,
        'TO_CHAR(NULL),'||     --ZX_LINE.LEGAL_ENTITY_TAX_REG_NUMBER,
        'ZX_DET.OWN_HQ_SITE_TAX_PROF_ID,
        ZX_DET.OWN_HQ_PARTY_TAX_PROF_ID,
        ZX_DET.PORT_OF_ENTRY_CODE,
        TO_CHAR(NULL),'||     --ZX_LINE.REGISTRATION_PARTY_TYPE,
        'TO_CHAR(NULL),'||     --ZX_LINE.HISTORICAL_FLAG,
        'TO_CHAR(NULL),'||     --ZX_LINE.MRC_TAX_LINE_FLAG,
   --     'TO_CHAR(NULL),'||     --ZX_LINE.POSTED_FLAG,
        'TO_CHAR(NULL),'||     --ZX_LINE.REPORTING_ONLY_FLAG,
        'TO_CHAR(NULL),'||     --ZX_LINE.TAX_AMT_INCLUDED_FLAG,
        'TO_CHAR(NULL),'||     --ZX_LINE.TAX_ONLY_LINE_FLAG
         'ZX_DET.EVENT_CLASS_MAPPING_ID,
         ZX_DET.TRX_LEVEL_TYPE,
         TO_CHAR(NULL),       -- Place of supply type code
         ZX_DET.POA_LOCATION_ID,
         ZX_DET.POO_LOCATION_ID,
         TO_CHAR(NULL),       -- Default Place of supply type code
         ZX_DET.LINE_AMT,
         TO_NUMBER(NULL),'||
               'xla_event.event_type_code, -- Accounting Columns
        xla_event.event_number,
        xla_event.event_status_code,
        xla_head.je_category_name,
        xla_head.accounting_date,
        xla_head.gl_transfer_status_code,
        xla_head.description,
        xla_line.ae_line_num,
        xla_line.accounting_class_code,
        xla_line.description,
        xla_line.statistical_amount,
        xla_event.process_status_code,
        xla_head.gl_transfer_status_code,
        xla_head.doc_sequence_id,
        xla_head.doc_sequence_value,
        xla_line.party_id,
        xla_line.party_site_id,
        xla_line.party_type_code,
        xla_event.event_id,
        xla_head.ae_header_id,
        xla_line.code_combination_id,
        xla_head.period_name,
        zx_det.trx_id,
        TO_DATE(NULL),
        TO_CHAR(NULL),
        sum(ARDTAX.ACCTD_AMOUNT_CR),
 	sum(ARDTAX.ACCTD_AMOUNT_DR),
        TO_CHAR(NULL),
        TO_CHAR(NULL),
        TO_CHAR(NULL)';


--P_COLUMN_LIST_AR_BR   := L_COLUMN_LIST_AR_BR  ;

L_TABLE_LIST_AR_BR   :=
    ' FROM GL_CODE_COMBINATIONS CC,  '||
--    'HZ_CUST_SITE_USES_ALL      TPSU_BILL, '||
--    'HZ_CUST_SITE_USES_ALL      TPSU_SHIP, '||
--    'RA_CUST_TRX_TYPES_ALL      TYPES, '||
--    'RA_BATCH_SOURCES_ALL       BS, '||
--    'FND_DOCUMENT_SEQUENCES     SEQ, '||
      'ZX_RATES_VL                ZX_RATE, '  ||
     'RA_CUSTOMER_TRX_LINES_ALL  LINE, '||
     'ZX_LINES_DET_FACTORS         ZX_DET, '||
    ' XLA_TRANSACTION_ENTITIES XLA_ENT, '||
    ' XLA_EVENTS     XLA_EVENT, '||
    ' XLA_AE_HEADERS  XLA_HEAD, '||
    ' XLA_AE_LINES    XLA_LINE, '||
        'xla_acct_class_assgns  acs,'||
        'xla_assignment_defns_b asd,'||
--    'AR_DISTRIBUTIONS_ALL       ARDTAX, '||
--    'AR_TRANSACTION_HISTORY_ALL TH ';
    L_TBL_NAME_CUSTOMER_TRX_ALL || ' TRXH, ' ||
    L_TBL_NAME_AR_DIST_ALL || ' ARDTAX, ' ||
    L_TBL_NAME_AR_TRX_HIST_ALL || ' TH ' ;

--P_TABLE_LIST_AR_BR := L_TABLE_LIST_AR_BR;

L_WHERE_CLAUSE_AR_BR    :=
' WHERE  th.transaction_history_id = ardtax.source_id '||
' AND   ardtax.source_table = ''TH''' ||
' AND   ardtax.source_type in (''TAX'',''DEFERRED_TAX'') '||
' AND   ardtax.source_table_secondary = ''CTL'''||
' AND   ardtax.source_id_secondary = line.customer_Trx_line_id '||
' AND   line.customer_trx_id =  zx_det.trx_id  '||
' AND zx_det.trx_id   = XLA_ENT.SOURCE_ID_INT_1    -- Accounting Joins
  AND ZX_DET.APPLICATION_ID =   XLA_ENT.APPLICATION_ID
  AND XLA_ENT.ENTITY_CODE      = ''RA_CUSTOMER_TRX''
  AND XLA_ENT.ENTITY_ID        = XLA_EVENT.ENTITY_ID
  AND XLA_EVENT.EVENT_ID       = XLA_HEAD.EVENT_ID
  AND XLA_HEAD.AE_HEADER_ID    = XLA_LINE.AE_HEADER_ID
    AND acs.program_code   = ''TAX_REPORTING_LEDGER_SALES''
    AND acs.program_code = asd.program_code
    AND asd.assignment_code = acs.assignment_code
    AND asd.enabled_flag = ''Y''
    AND acs.accounting_class_code = xla_line.accounting_class_code'||
--  AND XLA_LINE.ACCOUNTING_CLASS_CODE IN in (''TAX'',''DEFERRED_TAX'') '||
  ' AND zx_det.tax_reporting_flag = ''Y'''||
--' AND   trxh.cust_trx_type_id = types.cust_trx_type_id  '||
--' AND   trxh.batch_source_id = bs.batch_source_id(+)  '||
--' AND   trxh.complete_flag = ''Y'''||
--' AND     zx_det.ledger_id = '||to_char(G_LEDGER_ID) ||' '||
--' AND   cc.chart_of_accounts_id = '||to_char(G_CHART_OF_ACCOUNTS_ID)||' '||
' AND   ardtax.code_combination_id = cc.code_combination_id '||
' AND   nvl(ardtax.tax_code_id,ardtax.location_segment_id) = NVL(ZX_RATE.SOURCE_ID,ZX_RATE.TAX_RATE_ID)
    AND ((ZX_RATE.RECORD_TYPE_CODE <> ''MIGRATED'')
         OR (ZX_RATE.SOURCE_ID IS NULL)) '
--' AND   trxh.bill_to_site_use_id =  tpsu_bill.site_use_id (+) '||
--' AND   trxh.ship_to_site_use_id =  tpsu_ship.site_use_id(+) '||
--' AND   bs.batch_source_id (+) = trxh.batch_source_id '||
--' AND   trxh.doc_sequence_id = seq.doc_sequence_id (+) '||
--' AND ( bs.org_id is null or bs.org_id = trxh.org_id ) '
       || L_WHERE_LEDGER_ID
       || L_WHERE_LEGAL_ENTITY_ID
       || L_WHERE_REGISTER_TYPE_AR_BR
       || L_WHERE_TRX_CLASS_BR
       || L_WHERE_BATCH_NAME
       || L_WHERE_TRX_NUMBER_BR
       || L_WHERE_TRX_DATE_BR
       || L_WHERE_GL_DATE_BR
       || L_WHERE_DOCUMENT_SUB_TYPE
       || L_WHERE_TRX_BUSINESS_CATEGORY
       || L_WHERE_TAX_INVOICE_DATE
       ||L_WHERE_TAX_JURIS_CODE_OTH
       ||L_WHERE_FIRST_PTY_TAX_REG_OTH
       || L_WHERE_TAX_REGIME_CODE_OTH
       || L_WHERE_TAX_OTH
       || L_WHERE_TAX_STATUS_CODE_OTH
       || L_WHERE_TAX_RATE_CODE
       || L_WHERE_TAX_TYPE_CODE
       || L_WHERE_CURRENCY_CODE
       || L_WHERE_EXEMPT_STATUS_OTH
       || L_WHERE_TAX_CODE_VAT_TRX_TYPE
       || L_WHERE_TAX_LTE_OTHER_CLS
||' GROUP BY '||
   'ZX_DET.LEDGER_ID,
       ZX_DET.TRX_ID, '||
      'ZX_DET.DOC_SEQ_ID,
       ZX_DET.DOC_SEQ_NAME,
      ZX_DET.BATCH_SOURCE_ID,'||
      'ARDTAX.TAX_CODE_ID,'||
      'DECODE(ARDTAX.SOURCE_TYPE,''TAX'',''TAX'',''DEFERRED_TAX'',''INTERIM''
      ,NULL), ' || -- REG. TYPE CODE
      'ZX_DET.INTERNAL_ORGANIZATION_ID,
       ZX_RATE.PERCENTAGE_RATE,
       ZX_RATE.TAX_RATE_CODE,
       ZX_RATE.VAT_TRANSACTION_TYPE_CODE,
       ZX_RATE.RATE_TYPE_CODE,
       ZX_RATE.TAX_RATE_NAME,
      ZX_DET.TRX_NUMBER,
       ZX_DET.TRX_DESCRIPTION,
       ZX_DET.DOC_SEQ_VALUE,
       ZX_DET.TRX_DATE,
       ZX_DET.TRX_DUE_DATE,
       ZX_DET.TRX_SHIPPING_DATE,
       ZX_DET.TRX_COMMUNICATED_DATE,
       ZX_DET.TRX_CURRENCY_CODE,
       ZX_DET.CURRENCY_CONVERSION_TYPE,
       ZX_DET.CURRENCY_CONVERSION_DATE,
       ZX_DET.CURRENCY_CONVERSION_RATE,
       ZX_DET.FOB_POINT,
       ZX_DET.TRX_WAYBILL_NUMBER,
       ZX_DET.BATCH_SOURCE_NAME, '||
       'ZX_DET.TRX_TYPE_DESCRIPTION,
       LINE.ATTRIBUTE_CATEGORY,
        LINE.ATTRIBUTE1,
        LINE.ATTRIBUTE2,
        LINE.ATTRIBUTE3,
        LINE.ATTRIBUTE4,
        LINE.ATTRIBUTE5,
        LINE.ATTRIBUTE6,
        LINE.ATTRIBUTE7,
        LINE.ATTRIBUTE8,
        LINE.ATTRIBUTE9,
        LINE.ATTRIBUTE10,
        LINE.ATTRIBUTE11,
        LINE.ATTRIBUTE12,
        LINE.ATTRIBUTE13,
        LINE.ATTRIBUTE14,
        LINE.ATTRIBUTE15,
       ZX_DET.APPLICATION_ID,
        ZX_DET.DOC_EVENT_STATUS,
         ZX_DET.APPLICATION_DOC_STATUS,
        ZX_DET.ESTABLISHMENT_ID,
        --ZX_DET.FUNCTIONAL_CURRECNY_CODE,
        --ZX_DET.LEDGER_NAME,
        ZX_DET.MINIMUM_ACCOUNTABLE_UNIT,
        ZX_DET.PRECISION,
        TO_NUMBER(NULL),   --RECEIPT_CLASS_ID,
              ZX_DET.APPLIED_TO_APPLICATION_ID,
              ZX_DET.APPLIED_TO_TRX_LINE_ID,
              ZX_DET.APPLIED_TO_ENTITY_CODE,
              ZX_DET.APPLIED_TO_TRX_ID,
              ZX_DET.APPLIED_TO_EVENT_CLASS_CODE,
              ZX_DET.APPLIED_TO_TRX_NUMBER,
              ZX_DET.RELATED_DOC_APPLICATION_ID,
              ZX_DET.RELATED_DOC_DATE,
              ZX_DET.RELATED_DOC_ENTITY_CODE,
              ZX_DET.RELATED_DOC_EVENT_CLASS_CODE,
              ZX_DET.RELATED_DOC_NUMBER,
              ZX_DET.RELATED_DOC_TRX_ID,
              ZX_DET.ADJUSTED_DOC_APPLICATION_ID,
              ZX_DET.ADJUSTED_DOC_DATE,
        --ZX_DET.BANKING_TP_TAXPAYER_ID,
        ZX_DET.REF_DOC_APPLICATION_ID,
        ZX_DET.REF_DOC_ENTITY_CODE,
        ZX_DET.REF_DOC_EVENT_CLASS_CODE,
        ZX_DET.REF_DOC_LINE_ID,
        ZX_DET.REF_DOC_LINE_QUANTITY,
        ZX_DET.REF_DOC_TRX_ID,
        ZX_RATE.DEF_REC_SETTLEMENT_OPTION_CODE,
        ZX_DET.DEFAULT_TAXATION_COUNTRY,
        ZX_DET.DOCUMENT_SUB_TYPE,
        ZX_DET.TRX_BUSINESS_CATEGORY,
        ZX_DET.LINE_INTENDED_USE,
        ZX_DET.PRODUCT_CATEGORY,
        ZX_DET.PRODUCT_FISC_CLASSIFICATION,
        ZX_DET.SUPPLIER_EXCHANGE_RATE,
        ZX_DET.SUPPLIER_TAX_INVOICE_DATE,
        ZX_DET.SUPPLIER_TAX_INVOICE_NUMBER,
        ZX_DET.USER_DEFINED_FISC_CLASS,
       -- ZX_LINE.EXCEPTION_RATE,
       -- ZX_LINE.EXEMPT_RATE_MODIFIER,
      --  ZX_RATE.RECOVERY_RATE_CODE,
        ZX_RATE.TAX_JURISDICTION_CODE,
        ZX_RATE.TAX_REGIME_CODE,
        ZX_RATE.TAX_STATUS_CODE,
        ZX_DET.SHIP_FROM_PARTY_TAX_PROF_ID,
        ZX_DET.SHIP_FROM_SITE_TAX_PROF_ID,
        ZX_DET.SHIP_TO_PARTY_TAX_PROF_ID,
        ZX_DET.SHIP_TO_SITE_TAX_PROF_ID,
        ZX_DET.BILL_TO_PARTY_TAX_PROF_ID,
        ZX_DET.BILL_TO_SITE_TAX_PROF_ID,
         ZX_DET.SHIP_THIRD_PTY_ACCT_SITE_ID,
         ZX_DET.BILL_THIRD_PTY_ACCT_SITE_ID,
         ZX_DET.SHIP_TO_CUST_ACCT_SITE_USE_ID,
         ZX_DET.BILL_TO_CUST_ACCT_SITE_USE_ID,
         ZX_DET.SHIP_THIRD_PTY_ACCT_ID,
         ZX_DET.BILL_THIRD_PTY_ACCT_ID,
        ZX_DET.OWN_HQ_SITE_TAX_PROF_ID,
        ZX_DET.OWN_HQ_PARTY_TAX_PROF_ID,
        ZX_DET.PORT_OF_ENTRY_CODE,'||
         'ZX_DET.EVENT_CLASS_MAPPING_ID,
         ZX_DET.TRX_LEVEL_TYPE,
         ZX_DET.POA_LOCATION_ID,
         ZX_DET.POO_LOCATION_ID,
         ZX_DET.LINE_AMT,'||
        'xla_event.event_type_code, -- Accounting Columns
        xla_event.event_number,
        xla_event.event_status_code,
        xla_head.je_category_name,
        xla_head.accounting_date,
        xla_head.gl_transfer_status_code,
        xla_head.description,
        xla_line.ae_line_num,
        xla_line.accounting_class_code,
        xla_line.description,
        xla_line.statistical_amount,
        xla_event.process_status_code,
        xla_head.gl_transfer_status_code,
        xla_head.doc_sequence_id,
        xla_head.doc_sequence_value,
        xla_line.party_id,
        xla_line.party_site_id,
        xla_line.party_type_code,
        xla_event.event_id,
        xla_head.ae_header_id,
        xla_line.code_combination_id,
        xla_head.period_name,
        zx_det.trx_id,
         TO_DATE(NULL),
         TO_CHAR(NULL),
         TO_CHAR(NULL),
         TO_CHAR(NULL),
         TO_CHAR(NULL)';


--P_WHERE_CLAUSE_AR_BR  := L_WHERE_CLAUSE_AR_BR ;

      ELSIF UPPER(G_SUMMARY_LEVEL) = 'TRANSACTION_DISTRIBUTION' THEN
      -- apai commented : needs to be removed   AND  NVL(G_TRX_CLASS,'BR' ) = 'BR' THEN

    IF (g_level_procedure >= g_current_runtime_level ) THEN
        FND_LOG.STRING(g_level_procedure, 'ZX.TRL.ZX_AR_ACTG_EXTRACT_PKG.BUILD_SQL',
                      'SQL-11 For AR Bills Receivables : Distributions Level');
    END IF;

L_COLUMN_LIST_AR_BR   :=

'SELECT DISTINCT '||
       'ZX_DET.LEDGER_ID,
       ZX_DET.TRX_ID, '||
      'ZX_DET.DOC_SEQ_ID,
       ZX_DET.DOC_SEQ_NAME,
       TO_NUMBER(NULL),
       ''BR'', '||
       '''BR'', '||
      ' TO_CHAR(NULL),
       TO_NUMBER(NULL), '||
      ' TO_CHAR(NULL),
       TO_CHAR(NULL),
       TO_NUMBER(NULL),'||
      ' TO_CHAR(NULL),
       TO_CHAR(NULL), '||
      'ZX_DET.BATCH_SOURCE_ID,'||
      'ARDTAX.TAX_CODE_ID,'||
      'DECODE(ARDTAX.SOURCE_TYPE,''TAX'',''TAX'',''DEFERRED_TAX'',''INTERIM''
      ,NULL), ' || -- REG. TYPE CODE
       'TO_NUMBER(NULL),
       TO_CHAR(NULL),
       ARDTAX.SOURCE_TABLE,
       ARDTAX.SOURCE_ID,
       TO_NUMBER(NULL),'||
      'TO_NUMBER(NULL), ' ||
      '(nvl(ARDTAX.TAXABLE_ENTERED_CR,0) - nvl(ARDTAX.TAXABLE_ENTERED_DR,0)) ,'|| -- Total Amount
      'TO_NUMBER(NULL),
      (nvl(ARDTAX.AMOUNT_CR,0)-nvl(ARDTAX.AMOUNT_DR,0)),'||
      '(nvl(ARDTAX.ACCTD_AMOUNT_CR,0) - nvl(ARDTAX.ACCTD_AMOUNT_DR,0)) ,
       TO_NUMBER(NULL), '||
      '(nvl(ARDTAX.TAXABLE_ENTERED_CR,0) - nvl(ARDTAX.TAXABLE_ENTERED_DR,0)),'||
      '(nvl(ARDTAX.TAXABLE_ACCOUNTED_CR,0) - nvl(ARDTAX.TAXABLE_ACCOUNTED_DR,0)),'|| -- ar matrix ++ 30
      'TO_NUMBER(NULL),
       TO_NUMBER(NULL),
       TO_CHAR(NULL),
       TO_CHAR(NULL),
       TO_CHAR(NULL),
       TO_CHAR(NULL),'||
       '''N'', ' ||
      'ZX_DET.INTERNAL_ORGANIZATION_ID,'||  -- Org_id
      'LINE.BR_REF_CUSTOMER_TRX_ID, ' ||  --add in BR_REF_CUSTOMER_TRX_ID
      --'TO_DATE(NULL),
       'TO_NUMBER(NULL),  --amount_applied
       TO_NUMBER(NULL),  --tax_applied
       ZX_RATE.PERCENTAGE_RATE,
       ZX_RATE.TAX_RATE_CODE,
       ZX_RATE.VAT_TRANSACTION_TYPE_CODE,
       ZX_RATE.RATE_TYPE_CODE,
       ZX_RATE.TAX_RATE_NAME,
       ZX_DET.TRX_NUMBER,
       ZX_DET.TRX_DESCRIPTION,
       ZX_DET.DOC_SEQ_VALUE,
       ZX_DET.TRX_DATE,
       TO_DATE(NULL),   -- Deposit Date
       ZX_DET.TRX_DUE_DATE,
       ZX_DET.TRX_SHIPPING_DATE,
       ZX_DET.TRX_COMMUNICATED_DATE,
       ZX_DET.TRX_CURRENCY_CODE,
       ZX_DET.CURRENCY_CONVERSION_TYPE,
       ZX_DET.CURRENCY_CONVERSION_DATE,
       ZX_DET.CURRENCY_CONVERSION_RATE,
       TO_CHAR(NULL),
       ZX_DET.FOB_POINT,
       ZX_DET.TRX_WAYBILL_NUMBER,
       ZX_DET.BATCH_SOURCE_NAME,
       ZX_DET.TRX_TYPE_DESCRIPTION,
      TO_CHAR(NULL),
       TO_NUMBER(NULL),
       TO_CHAR(NULL),
       LINE.ATTRIBUTE_CATEGORY,
        LINE.ATTRIBUTE1,
        LINE.ATTRIBUTE2,
        LINE.ATTRIBUTE3,
        LINE.ATTRIBUTE4,
        LINE.ATTRIBUTE5,
        LINE.ATTRIBUTE6,
        LINE.ATTRIBUTE7,
        LINE.ATTRIBUTE8,
        LINE.ATTRIBUTE9,
        LINE.ATTRIBUTE10,
        LINE.ATTRIBUTE11,
        LINE.ATTRIBUTE12,
        LINE.ATTRIBUTE13,
        LINE.ATTRIBUTE14,
        LINE.ATTRIBUTE15,
       ZX_DET.APPLICATION_ID,
        ZX_DET.DOC_EVENT_STATUS,
         ZX_DET.APPLICATION_DOC_STATUS,
        ZX_DET.ESTABLISHMENT_ID,
        ''AR'', --EXTRACT_SOURCE_LEDGER,
        --ZX_DET.FUNCTIONAL_CURRECNY_CODE,
        --ZX_DET.LEDGER_NAME,
        ZX_DET.MINIMUM_ACCOUNTABLE_UNIT,
        ZX_DET.PRECISION,
        TO_NUMBER(NULL),  --RECEIPT_CLASS_ID,
        ZX_DET.APPLIED_TO_APPLICATION_ID,
        ZX_DET.APPLIED_TO_TRX_LINE_ID,
        ZX_DET.APPLIED_TO_ENTITY_CODE,
        ZX_DET.APPLIED_TO_TRX_ID,
        ZX_DET.APPLIED_TO_EVENT_CLASS_CODE,
        ZX_DET.APPLIED_TO_TRX_NUMBER,
        ZX_DET.RELATED_DOC_APPLICATION_ID,
        ZX_DET.RELATED_DOC_DATE,
        ZX_DET.RELATED_DOC_ENTITY_CODE,
        ZX_DET.RELATED_DOC_EVENT_CLASS_CODE,
        ZX_DET.RELATED_DOC_NUMBER,
        ZX_DET.RELATED_DOC_TRX_ID,
        ZX_DET.ADJUSTED_DOC_APPLICATION_ID,
        ZX_DET.ADJUSTED_DOC_DATE,
        --ZX_DET.BANKING_TP_TAXPAYER_ID,
        ZX_DET.REF_DOC_APPLICATION_ID,
        ZX_DET.REF_DOC_ENTITY_CODE,
        ZX_DET.REF_DOC_EVENT_CLASS_CODE,
        ZX_DET.REF_DOC_LINE_ID,
        ZX_DET.REF_DOC_LINE_QUANTITY,
        ZX_DET.REF_DOC_TRX_ID,
        ZX_RATE.DEF_REC_SETTLEMENT_OPTION_CODE,
        ZX_DET.DEFAULT_TAXATION_COUNTRY,
        ZX_DET.DOCUMENT_SUB_TYPE,
        ZX_DET.TRX_BUSINESS_CATEGORY,
        ZX_DET.LINE_INTENDED_USE,
        ZX_DET.PRODUCT_CATEGORY,
        ZX_DET.PRODUCT_FISC_CLASSIFICATION,
        ZX_DET.SUPPLIER_EXCHANGE_RATE,
        ZX_DET.SUPPLIER_TAX_INVOICE_DATE,
        ZX_DET.SUPPLIER_TAX_INVOICE_NUMBER,
        ZX_DET.USER_DEFINED_FISC_CLASS,
        TO_NUMBER(NULL),    --ZX_LINE.EXCEPTION_RATE,
        TO_NUMBER(NULL),    --ZX_LINE.EXEMPT_RATE_MODIFIER,
        TO_NUMBER(NULL),   --ZX_LINE.ORIG_TAX_AMT,
        TO_NUMBER(NULL),   --ZX_LINE.ORIG_TAX_AMT_TAX_CURR,
        TO_NUMBER(NULL),   --ZX_LINE.ORIG_TAXABLE_AMT,
        TO_NUMBER(NULL),   --ZX_LINE.ORIG_TAXABLE_AMT_TAX_CURR,
        TO_CHAR(NULL),    --ZX_RATE.RECOVERY_RATE_CODE,
        TO_NUMBER(NULL),   --ZX_LINE.TAX_AMT_TAX_CURR,
        TO_NUMBER(NULL),   --ZX_LINE.TAX_APPORTIONMENT_LINE_NUMBER,
        TO_CHAR(NULL),   --ZX_LINE.TAX_CURRENCY_CODE,
        TO_DATE(NULL),  --ZX_LINE.TAX_DATE,
        TO_DATE(NULL),  --ZX_LINE.TAX_DETERMINE_DATE,
        TO_DATE(NULL),  --ZX_DET.TAX_INVOICE_DATE,
        TO_CHAR(NULL),   --ZX_DET.TAX_INVOICE_NUMBER,
        ZX_RATE.TAX_JURISDICTION_CODE,
        ZX_RATE.TAX_REGIME_CODE,
        ZX_RATE.TAX_STATUS_CODE,
        ZX_DET.SHIP_FROM_PARTY_TAX_PROF_ID,
        ZX_DET.SHIP_FROM_SITE_TAX_PROF_ID,
        ZX_DET.SHIP_TO_PARTY_TAX_PROF_ID,
        ZX_DET.SHIP_TO_SITE_TAX_PROF_ID,
        ZX_DET.BILL_TO_PARTY_TAX_PROF_ID,
        ZX_DET.BILL_TO_SITE_TAX_PROF_ID,
         ZX_DET.SHIP_THIRD_PTY_ACCT_SITE_ID,
         ZX_DET.BILL_THIRD_PTY_ACCT_SITE_ID,
         ZX_DET.SHIP_TO_CUST_ACCT_SITE_USE_ID,
         ZX_DET.BILL_TO_CUST_ACCT_SITE_USE_ID,
         ZX_DET.SHIP_THIRD_PTY_ACCT_ID,
         ZX_DET.BILL_THIRD_PTY_ACCT_ID,
        TO_CHAR(NULL),'||  --ZX_LINE.HQ_ESTB_REG_NUMBER,
        'TO_CHAR(NULL),'||     --ZX_LINE.LEGAL_ENTITY_TAX_REG_NUMBER,
        'ZX_DET.OWN_HQ_SITE_TAX_PROF_ID,
        ZX_DET.OWN_HQ_PARTY_TAX_PROF_ID,
        ZX_DET.PORT_OF_ENTRY_CODE,
        TO_CHAR(NULL),'||     --ZX_LINE.REGISTRATION_PARTY_TYPE
        'TO_CHAR(NULL),'||     --ZX_LINE.HISTORICAL_FLAG
        'TO_CHAR(NULL),'||     --ZX_LINE.MRC_TAX_LINE_FLAG
  --      'TO_CHAR(NULL),'||     --ZX_LINE.POSTED_FLAG
        'TO_CHAR(NULL),'||     --ZX_LINE.REPORTING_ONLY_FLAG
        'TO_CHAR(NULL),'||     --ZX_LINE.TAX_AMT_INCLUDED_FLAG
        'TO_CHAR(NULL),' ||    --ZX_LINE.TAX_ONLY_LINE_FLAG
         'ZX_DET.EVENT_CLASS_MAPPING_ID,
         ZX_DET.TRX_LEVEL_TYPE,
         TO_CHAR(NULL),       -- Place of supply type code
         ZX_DET.POA_LOCATION_ID,
         ZX_DET.POO_LOCATION_ID,
         TO_CHAR(NULL),       -- Default Place of supply type code
         ZX_DET.LINE_AMT,
         TO_NUMBER(NULL),'||
        'xla_event.event_type_code, -- Accounting Columns
        xla_event.event_number,
        xla_event.event_status_code,
        xla_head.je_category_name,
        xla_head.accounting_date,
        xla_head.gl_transfer_status_code,
        xla_head.description,
        xla_line.ae_line_num,
        xla_line.accounting_class_code,
        xla_line.description,
        xla_line.statistical_amount,
        xla_event.process_status_code,
        xla_head.gl_transfer_status_code,
        xla_head.doc_sequence_id,
        xla_head.doc_sequence_value,
        xla_line.party_id,
        xla_line.party_site_id,
        xla_line.party_type_code,
        xla_event.event_id,
        xla_head.ae_header_id,
        xla_line.code_combination_id,
        xla_head.period_name,
        ardtax.line_id,
         TO_DATE(NULL),
         TO_CHAR(NULL),
         sum(ARDTAX.ACCTD_AMOUNT_CR),
         sum(ARDTAX.ACCTD_AMOUNT_DR),
         TO_CHAR(NULL),
         TO_CHAR(NULL),
         TO_CHAR(NULL) ';

--P_COLUMN_LIST_AR_BR   := L_COLUMN_LIST_AR_BR ;

L_TABLE_LIST_AR_BR   :=
    ' FROM GL_CODE_COMBINATIONS CC,  '||
--    'HZ_CUST_SITE_USES_ALL      TPSU_BILL, '||
--    'HZ_CUST_SITE_USES_ALL      TPSU_SHIP, '||
--    'RA_CUST_TRX_TYPES_ALL      TYPES, '||
--    'RA_BATCH_SOURCES_ALL       BS, '||
    'FND_DOCUMENT_SEQUENCES     SEQ, '||
    'ZX_RATES_VL                ZX_RATE, '  ||
    'RA_CUSTOMER_TRX_LINES_ALL  LINE, '||
    'ZX_LINES_DET_FACTORS       ZX_DET, '||
    ' XLA_TRANSACTION_ENTITIES XLA_ENT, '||
    ' XLA_EVENTS     XLA_EVENT, '||
    ' XLA_AE_HEADERS  XLA_HEAD, '||
    ' XLA_AE_LINES    XLA_LINE, '||
        'xla_acct_class_assgns  acs,'||
        'xla_assignment_defns_b asd,'||
--    'AR_DISTRIBUTIONS_ALL       ARDTAX, '||
--    'AR_TRANSACTION_HISTORY_ALL TH ';
--    L_TBL_NAME_CUSTOMER_TRX_ALL || ' TRXH, ' ||
    L_TBL_NAME_AR_DIST_ALL || ' ARDTAX, ' ||
    L_TBL_NAME_AR_TRX_HIST_ALL || ' TH ' ;


--P_TABLE_LIST_AR_BR := L_TABLE_LIST_AR_BR;

L_WHERE_CLAUSE_AR_BR    :=
' WHERE  th.transaction_history_id = ardtax.source_id '||
' AND   ardtax.source_table = ''TH'' ' ||
' AND   ardtax.source_type in (''TAX'',''DEFERRED_TAX'') '||
' AND   ardtax.source_table_secondary = ''CTL'' '||
' AND   ardtax.source_id_secondary = line.customer_Trx_line_id '||
' AND   line.customer_trx_id =  zx_det.trx_id '||
' AND zx_det.trx_id    = XLA_ENT.SOURCE_ID_INT_1    -- Accounting Joins
  AND ZX_DET.APPLICATION_ID =   XLA_ENT.APPLICATION_ID
  AND XLA_ENT.ENTITY_CODE      = ''RA_CUSTOMER_TRX''
  AND XLA_ENT.ENTITY_ID        = XLA_EVENT.ENTITY_ID
  AND XLA_EVENT.EVENT_ID       = XLA_HEAD.EVENT_ID
  AND XLA_HEAD.AE_HEADER_ID    = XLA_LINE.AE_HEADER_ID
    AND acs.program_code   = ''TAX_REPORTING_LEDGER_SALES''
    AND acs.program_code = asd.program_code
    AND asd.assignment_code = acs.assignment_code
    AND asd.enabled_flag = ''Y''
    AND acs.accounting_class_code = xla_line.accounting_class_code'||
--  AND XLA_LINE.ACCOUNTING_CLASS_CODE IN (''TAX'',''DEFERRED_TAX'') '||
  ' AND zx_det.tax_reporting_flag = ''Y'''||
--' AND   trxh.cust_trx_type_id = types.cust_trx_type_id  '||
--' AND   trxh.batch_source_id = bs.batch_source_id(+)  '||
--' AND   trxh.complete_flag = ''Y'' '||
--' AND     zx_det.ledger_id  = '||to_char(G_LEDGER_ID) ||' '||
--' AND   cc.chart_of_accounts_id = '||to_char(G_CHART_OF_ACCOUNTS_ID)||' '||
' AND   ardtax.code_combination_id = cc.code_combination_id '||
' AND   nvl(ardtax.tax_code_id,ardtax.location_segment_id) = NVL(ZX_RATE.SOURCE_ID,ZX_RATE.TAX_RATE_ID)
    AND ((ZX_RATE.RECORD_TYPE_CODE <> ''MIGRATED'')
         OR (ZX_RATE.SOURCE_ID IS NULL)) '
--' AND   trxh.bill_to_site_use_id =  tpsu_bill.site_use_id (+) '||
--' AND   trxh.ship_to_site_use_id =  tpsu_ship.site_use_id(+) '||
--' AND   bs.batch_source_id (+) = trxh.batch_source_id '||
--' AND   trxh.doc_sequence_id = seq.doc_sequence_id (+) '||
--' AND ( bs.org_id is null or bs.org_id = trxh.org_id ) '
       || L_WHERE_LEDGER_ID
       || L_WHERE_LEGAL_ENTITY_ID
       || L_WHERE_REGISTER_TYPE_AR_BR
       || L_WHERE_TRX_CLASS_BR
       || L_WHERE_BATCH_NAME
       || L_WHERE_TRX_NUMBER_BR
       || L_WHERE_TRX_DATE_BR
       || L_WHERE_GL_DATE_BR
       || L_WHERE_DOCUMENT_SUB_TYPE
       || L_WHERE_TRX_BUSINESS_CATEGORY
       || L_WHERE_TAX_INVOICE_DATE
       ||L_WHERE_TAX_JURIS_CODE_OTH
       ||L_WHERE_FIRST_PTY_TAX_REG_OTH
       ||L_WHERE_TAX_JURIS_CODE_OTH
       ||L_WHERE_FIRST_PTY_TAX_REG_OTH
       || L_WHERE_TAX_REGIME_CODE_OTH
       || L_WHERE_TAX_OTH
       || L_WHERE_TAX_STATUS_CODE_OTH
       || L_WHERE_TAX_RATE_CODE
       || L_WHERE_TAX_TYPE_CODE
       || L_WHERE_CURRENCY_CODE
       || L_WHERE_EXEMPT_STATUS_OTH
       || L_WHERE_TAX_CODE_VAT_TRX_TYPE
       || L_WHERE_TAX_LTE_OTHER_CLS;

--P_WHERE_CLAUSE_AR_BR  :=  L_WHERE_CLAUSE_AR_BR;

      END IF; -- G_SUMMARY_LEVEL
  --  END IF; -- L_IS_DEFERRED_TAX_USED
  END IF; -- G_TRX_CLASS IS NULL


    IF (g_level_procedure >= g_current_runtime_level ) THEN
        FND_LOG.STRING(g_level_procedure, 'ZX.TRL.ZX_AR_ACTG_EXTRACT_PKG.BUILD_SQL.END',
                                      'ZX_AR_ACTG_EXTRACT_PKG: BUILD_SQL(-)');
    END IF;

 EXCEPTION
  WHEN OTHERS THEN
    g_error_buffer  := sqlcode || ': ' || SUBSTR(SQLERRM, 1, 100);
    FND_MESSAGE.SET_NAME('ZX','GENERIC_MESSAGE');
    FND_MESSAGE.SET_TOKEN('GENERIC_TEXT','BUILD_SQL- '|| g_error_buffer);
    FND_MSG_PUB.Add;
    IF (g_level_unexpected >= g_current_runtime_level ) THEN
      FND_LOG.STRING(g_level_unexpected,
                     'ZX.TRL.ZX_EXTRACT_PKG.BUILD_SQL',
                      g_error_buffer);
    END IF;
    g_retcode := 2;

END BUILD_SQL;

/*===========================================================================+
 | PROCEDURE                                                                 |
 |   FETCH_AR_TRX_INFO                                                          |
 |                                                                           |
 | DESCRIPTION                                                               |
 |    This procedure executes the Dynamic SQL statement returned by          |
 |    the procedure BUILD_SQL.                                               |
 |                                                                           |
 |    Called from ZX_EXTRACT_PKG.POPULATE                                   |
 |                                                                           |
 | SCOPE - Public                                                            |
 |                                                                           |
 | NOTES                                                                     |
 |                                                                           |
 | MODIFICATION HISTORY                                                      |
 |   20-Feb-04  Ling Zhang   move from ZX_EXTRACT_PKG and modify with AR    |
 |                           specific logic.                                 |
 +===========================================================================*/

PROCEDURE FETCH_AR_TRX_INFO IS

  l_sql_statement_ar_1  varchar2(32000);
  l_sql_statement_ar_2  varchar2(32000);
  l_sql_statement_ar_3  varchar2(32000);
  l_sql_statement_ar_4  varchar2(32000);
  l_sql_statement_ar_5  varchar2(32000);
  l_sql_statement_ar_6  varchar2(32000);
  L_SQL_STATEMENT_TBL   SQL_STATEMENT_TABTYPE;
  l_sql1          varchar2(3500);
  l_sql2          varchar2(3500);
  l_sql3          varchar2(3500);
  l_sql4          varchar2(3500);
  l_sql5          varchar2(3500);
  l_sql6          varchar2(3500);
  l_sql7          varchar2(3500);
  l_sql8          varchar2(3500);
  l_sql9          varchar2(3500);
  l_sql10          varchar2(3500);
  l_sql11          varchar2(3500);
BEGIN

    IF (g_level_procedure >= g_current_runtime_level ) THEN
        FND_LOG.STRING(g_level_procedure, 'ZX.TRL.ZX_AR_ACTG_EXTRACT_PKG.FETCH_AR_TRX_INFO.BEGIN',
                                      'ZX_AR_ACTG_EXTRACT_PKG: FETCH_AR_TRX_INFO(+)');
    END IF;

  --   Since the driving SQL statement for AR exceeds 32000 characters which
  --   is the maximum length of varchar2 field, the query will be executed
  --   in parts.

/*  IF G_TRX_CLASS IN ('INV','DM','CM') THEN
    l_sql_statement_ar_1 :=
      l_column_list_ar_inv  ||
      l_table_list_ar_inv   ||
      l_where_clause_ar_inv ;

  ELSIF G_TRX_CLASS IN ('APP','EDISC','UNEDISC') THEN
    l_sql_statement_ar_1 :=
      l_column_list_ar_app  ||
      l_table_list_ar_app   ||
      l_where_clause_ar_app ;

  ELSIF G_TRX_CLASS IN ('ADJ','FINCHRG') THEN
    l_sql_statement_ar_1 :=
      l_column_list_ar_adj  ||
      l_table_list_ar_adj   ||
      l_where_clause_ar_adj ;

  ELSIF G_TRX_CLASS = 'MISC_CASH_RECEIPT' THEN
    l_sql_statement_ar_1 :=
      l_column_list_ar_misc  ||
      l_table_list_ar_misc   ||
      l_where_clause_ar_misc ;

  ELSIF G_TRX_CLASS = 'BR' THEN
    l_sql_statement_ar_1 :=
      l_column_list_ar_br  ||
      l_table_list_ar_br   ||
      l_where_clause_ar_br ;
  ELSE */
    l_sql_statement_ar_1 :=
      l_column_list_ar_inv  ||
      l_table_list_ar_inv   ||
      l_where_clause_ar_inv ;

    l_sql_statement_ar_3 :=
      l_column_list_ar_app  ||
      l_table_list_ar_app   ||
      l_where_clause_ar_app ;

    l_sql_statement_ar_4 :=
      l_column_list_ar_adj  ||
      l_table_list_ar_adj   ||
      l_where_clause_ar_adj ;

    l_sql_statement_ar_5 :=
      l_column_list_ar_misc  ||
      l_table_list_ar_misc   ||
      l_where_clause_ar_misc ;

    l_sql_statement_ar_6 :=
      l_column_list_ar_br  ||
      l_table_list_ar_br   ||
      l_where_clause_ar_br ;
--  END IF ;

 IF (g_level_procedure >= g_current_runtime_level ) THEN
        FND_LOG.STRING(g_level_procedure, 'ZX.TRL.ZX_AR_ACTG_EXTRACT_PKG.FETCH_AR_TRX_INFO',
                                      'l_sql_statement_tbl  : ');
 END IF;
/*
 --    l_sql1 := substr(l_sql_statement_ar_1,1,3000);
 IF (g_level_procedure >= g_current_runtime_level ) THEN
      l_sql1 := substr(l_sql_statement_ar_1,1,3000);
     FND_LOG.STRING(g_level_procedure, 'ZX.TRL.ZX_AR_ACTG_EXTRACT_PKG.FETCH_AR_TRX_INFO SQL', 'l_sql_statement_tbl1  : '||l_sql1);
     l_sql2 := substr(l_sql_statement_ar_1,3001,3000);
       FND_LOG.STRING(g_level_procedure, 'ZX.TRL.ZX_AR_ACTG_EXTRACT_PKG.FETCH_AR_TRX_INFO SQL', 'l_sql_statement_tbl2  : '||l_sql2);
        l_sql3 := substr(l_sql_statement_ar_1,6001,3000);
     FND_LOG.STRING(g_level_procedure, 'ZX.TRL.ZX_AR_ACTG_EXTRACT_PKG.FETCH_AR_TRX_INFO SQL', 'l_sql_statement_tbl3  : '||l_sql3);
        l_sql4 := substr(l_sql_statement_ar_1,9001,3000);
     FND_LOG.STRING(g_level_procedure, 'ZX.TRL.ZX_AR_ACTG_EXTRACT_PKG.FETCH_AR_TRX_INFO SQL', 'l_sql_statement_tbl4  : '||l_sql4);
        l_sql5 := substr(l_sql_statement_ar_1,12001,3000);
     FND_LOG.STRING(g_level_procedure, 'ZX.TRL.ZX_AR_ACTG_EXTRACT_PKG.FETCH_AR_TRX_INFO SQL', 'l_sql_statement_tbl5  : '||l_sql5);
        l_sql6 := substr(l_sql_statement_ar_1,15001,3000);
     FND_LOG.STRING(g_level_procedure, 'ZX.TRL.ZX_AR_ACTG_EXTRACT_PKG.FETCH_AR_TRX_INFO SQL', 'l_sql_statement_tbl6  : '||l_sql6);
        l_sql7 := substr(l_sql_statement_ar_1,18001,3000);
     FND_LOG.STRING(g_level_procedure, 'ZX.TRL.ZX_AR_ACTG_EXTRACT_PKG.FETCH_AR_TRX_INFO SQL', 'l_sql_statement_tbl7  : '||l_sql7);
        l_sql8 := substr(l_sql_statement_ar_1,21001,3000);
 END IF;

IF (g_level_procedure >= g_current_runtime_level ) THEN
      l_sql1 := substr(l_sql_statement_ar_3,1,3000);
     FND_LOG.STRING(g_level_procedure, 'ZX.TRL.ZX_AR_ACTG_EXTRACT_PKG.FETCH_AR_TRX_INFO SQL', 'l_sql_statement_tbl1  : '||l_sql1);
     l_sql2 := substr(l_sql_statement_ar_3,3001,3000);
       FND_LOG.STRING(g_level_procedure, 'ZX.TRL.ZX_AR_ACTG_EXTRACT_PKG.FETCH_AR_TRX_INFO SQL', 'l_sql_statement_tbl2  : '||l_sql2);
        l_sql3 := substr(l_sql_statement_ar_3,6001,3000);
     FND_LOG.STRING(g_level_procedure, 'ZX.TRL.ZX_AR_ACTG_EXTRACT_PKG.FETCH_AR_TRX_INFO SQL', 'l_sql_statement_tbl3  : '||l_sql3);
        l_sql4 := substr(l_sql_statement_ar_3,9001,3000);
     FND_LOG.STRING(g_level_procedure, 'ZX.TRL.ZX_AR_ACTG_EXTRACT_PKG.FETCH_AR_TRX_INFO SQL', 'l_sql_statement_tbl4  : '||l_sql4);
        l_sql5 := substr(l_sql_statement_ar_3,12001,3000);
     FND_LOG.STRING(g_level_procedure, 'ZX.TRL.ZX_AR_ACTG_EXTRACT_PKG.FETCH_AR_TRX_INFO SQL', 'l_sql_statement_tbl5  : '||l_sql5);
        l_sql6 := substr(l_sql_statement_ar_3,15001,3000);
     FND_LOG.STRING(g_level_procedure, 'ZX.TRL.ZX_AR_ACTG_EXTRACT_PKG.FETCH_AR_TRX_INFO SQL', 'l_sql_statement_tbl6  : '||l_sql6);
        l_sql7 := substr(l_sql_statement_ar_3,18001,3000);
     FND_LOG.STRING(g_level_procedure, 'ZX.TRL.ZX_AR_ACTG_EXTRACT_PKG.FETCH_AR_TRX_INFO SQL', 'l_sql_statement_tbl7  : '||l_sql7);
        l_sql8 := substr(l_sql_statement_ar_3,21001,3000);
 END IF;

IF (g_level_procedure >= g_current_runtime_level ) THEN
      l_sql1 := substr(l_sql_statement_ar_4,1,3000);
     FND_LOG.STRING(g_level_procedure, 'ZX.TRL.ZX_AR_ACTG_EXTRACT_PKG.FETCH_AR_TRX_INFO SQL', 'l_sql_statement_tbl1  : '||l_sql1);
     l_sql2 := substr(l_sql_statement_ar_4,3001,3000);
       FND_LOG.STRING(g_level_procedure, 'ZX.TRL.ZX_AR_ACTG_EXTRACT_PKG.FETCH_AR_TRX_INFO SQL', 'l_sql_statement_tbl2  : '||l_sql2);
        l_sql3 := substr(l_sql_statement_ar_4,6001,3000);
     FND_LOG.STRING(g_level_procedure, 'ZX.TRL.ZX_AR_ACTG_EXTRACT_PKG.FETCH_AR_TRX_INFO SQL', 'l_sql_statement_tbl3  : '||l_sql3);
        l_sql4 := substr(l_sql_statement_ar_4,9001,3000);
     FND_LOG.STRING(g_level_procedure, 'ZX.TRL.ZX_AR_ACTG_EXTRACT_PKG.FETCH_AR_TRX_INFO SQL', 'l_sql_statement_tbl4  : '||l_sql4);
        l_sql5 := substr(l_sql_statement_ar_4,12001,3000);
     FND_LOG.STRING(g_level_procedure, 'ZX.TRL.ZX_AR_ACTG_EXTRACT_PKG.FETCH_AR_TRX_INFO SQL', 'l_sql_statement_tbl5  : '||l_sql5);
        l_sql6 := substr(l_sql_statement_ar_4,15001,3000);
     FND_LOG.STRING(g_level_procedure, 'ZX.TRL.ZX_AR_ACTG_EXTRACT_PKG.FETCH_AR_TRX_INFO SQL', 'l_sql_statement_tbl6  : '||l_sql6);
        l_sql7 := substr(l_sql_statement_ar_4,18001,3000);
     FND_LOG.STRING(g_level_procedure, 'ZX.TRL.ZX_AR_ACTG_EXTRACT_PKG.FETCH_AR_TRX_INFO SQL', 'l_sql_statement_tbl7  : '||l_sql7);
        l_sql8 := substr(l_sql_statement_ar_4,21001,3000);
 END IF;
IF (g_level_procedure >= g_current_runtime_level ) THEN
      l_sql1 := substr(l_sql_statement_ar_5,1,3000);
     FND_LOG.STRING(g_level_procedure, 'ZX.TRL.ZX_AR_ACTG_EXTRACT_PKG.FETCH_AR_TRX_INFO SQL', 'l_sql_statement_tbl1  : '||l_sql1);
     l_sql2 := substr(l_sql_statement_ar_5,3001,3000);
       FND_LOG.STRING(g_level_procedure, 'ZX.TRL.ZX_AR_ACTG_EXTRACT_PKG.FETCH_AR_TRX_INFO SQL', 'l_sql_statement_tbl2  : '||l_sql2);
        l_sql3 := substr(l_sql_statement_ar_5,6001,3000);
     FND_LOG.STRING(g_level_procedure, 'ZX.TRL.ZX_AR_ACTG_EXTRACT_PKG.FETCH_AR_TRX_INFO SQL', 'l_sql_statement_tbl3  : '||l_sql3);
        l_sql4 := substr(l_sql_statement_ar_5,9001,3000);
     FND_LOG.STRING(g_level_procedure, 'ZX.TRL.ZX_AR_ACTG_EXTRACT_PKG.FETCH_AR_TRX_INFO SQL', 'l_sql_statement_tbl4  : '||l_sql4);
        l_sql5 := substr(l_sql_statement_ar_5,12001,3000);
     FND_LOG.STRING(g_level_procedure, 'ZX.TRL.ZX_AR_ACTG_EXTRACT_PKG.FETCH_AR_TRX_INFO SQL', 'l_sql_statement_tbl5  : '||l_sql5);
        l_sql6 := substr(l_sql_statement_ar_5,15001,3000);
     FND_LOG.STRING(g_level_procedure, 'ZX.TRL.ZX_AR_ACTG_EXTRACT_PKG.FETCH_AR_TRX_INFO SQL', 'l_sql_statement_tbl6  : '||l_sql6);
        l_sql7 := substr(l_sql_statement_ar_5,18001,3000);
     FND_LOG.STRING(g_level_procedure, 'ZX.TRL.ZX_AR_ACTG_EXTRACT_PKG.FETCH_AR_TRX_INFO SQL', 'l_sql_statement_tbl7  : '||l_sql7);
        l_sql8 := substr(l_sql_statement_ar_4,21001,3000);
 END IF;
*/
  l_sql_statement_tbl(1) := l_sql_statement_ar_1; --AR_INV
  l_sql_statement_tbl(2) := l_sql_statement_ar_3; --AR_APP
  l_sql_statement_tbl(3) := l_sql_statement_ar_4; --AR_ADJ
  l_sql_statement_tbl(4) := l_sql_statement_ar_5; --AR_MISC
  l_sql_statement_tbl(5) := l_sql_statement_ar_6; --AR_BR

--         EXECUTE_DYNAMIC_SQL_STRG(l_sql_statement_ar_1);
    FOR I IN 1..l_sql_statement_tbl.COUNT LOOP
      IF L_SQL_STATEMENT_TBL(I) IS NOT NULL THEN
         EXECUTE_DYNAMIC_SQL_STRG(l_sql_statement_tbl(i));
         COMMIT;
      END IF;
    END LOOP;

   IF (g_level_procedure >= g_current_runtime_level ) THEN
        FND_LOG.STRING(g_level_procedure, 'ZX.TRL.ZX_AR_ACTG_EXTRACT_PKG.FETCH_AR_TRX_INFO.END',
                                      'ZX_AR_ACTG_EXTRACT_PKG: FETCH_AR_TRX_INFO(-)');
    END IF;


END FETCH_AR_TRX_INFO;

/**********************************************************
      -- PROCEDURE EXECUTE_DYNAMIC_SQL_STRG

**************************************************************/

PROCEDURE EXECUTE_DYNAMIC_SQL_STRG(
    p_statement          IN VARCHAR2
) IS

  TYPE zx_rep_detail_curtype IS REF CURSOR;
  zx_rep_detail_csr       zx_rep_detail_curtype;
  i                             BINARY_INTEGER;
  l_sql1          varchar2(3500);
  l_sql2          varchar2(3500);
  l_sql3          varchar2(3500);
  l_sql4          varchar2(3500);
  l_sql5          varchar2(3500);
  l_sql6          varchar2(3500);
  l_sql7          varchar2(3500);
  l_sql8          varchar2(3500);
  l_sql9          varchar2(3500);
  l_sql10          varchar2(3500);
  l_sql11          varchar2(3500);
   st1             varchar(32000);
BEGIN



   IF (g_level_procedure >= g_current_runtime_level ) THEN
        FND_LOG.STRING(g_level_procedure, 'ZX.TRL.ZX_AR_ACTG_EXTRACT_PKG.EXECUTE_DYNAMIC_SQL_STRG.BEGIN',
                                      'ZX_AR_ACTG_EXTRACT_PKG: EXECUTE_DYNAMIC_SQL_STRG(+)');
        FND_LOG.STRING(g_level_procedure, 'ZX.TRL.ZX_AR_ACTG_EXTRACT_PKG.EXECUTE_DYNAMIC_SQL_STRG',
                                      'OPEN zx_rep_detail_csr : ');

    END IF;


st1 := ' SELECT ZX_DET.LEDGER_ID,
         ZX_DET.TRX_ID    ,
         ZX_DET.DOC_SEQ_ID ,
         ZX_DET.DOC_SEQ_NAME ,
         ZX_DET.RECEIVABLES_TRX_TYPE_ID,
         ZX_DET.LINE_CLASS,
         ZX_DET.EVENT_CLASS_CODE ,
         TO_CHAR(NULL) ,TO_NUMBER(NULL)  ,TO_CHAR(NULL)  ,TO_CHAR(NULL)  ,TO_NUMBER(NULL)
,TO_CHAR(NULL)  ,TO_CHAR(NULL)  ,ZX_DET.BATCH_SOURCE_ID,
         ZX_LINE.TAX_RATE_ID ,
         DECODE(ZX_RATE.DEF_REC_SETTLEMENT_OPTION_CODE,''IMMEDIATE'',''TAX'',''DEFERRED'',''INTERIM''),
         ZX_DET.PRODUCT_ID,
         ZX_DET.PRODUCT_DESCRIPTION,
         TO_CHAR(NULL),TO_NUMBER(NULL),ZX_LINE.TAX_EXEMPTION_ID,
         ZX_LINE.TAX_EXCEPTION_ID,
         TO_NUMBER(NULL),TO_NUMBER(NULL),ZX_LINE.TAX_AMT,
         ZX_LINE.TAX_AMT_FUNCL_CURR  ,
         TO_NUMBER(NULL),ZX_LINE.TAXABLE_AMT,
         ZX_LINE.TAXABLE_AMT_FUNCL_CURR ,
         TO_NUMBER(NULL),TO_NUMBER(NULL),ZX_DET.EXEMPT_CERTIFICATE_NUMBER,
         ZX_LINE.EXEMPT_REASON_CODE   ,
         TO_CHAR(NULL), --exception_reason_code
         ZX_DET.UOM_CODE,
         TO_CHAR(NULL),ZX_DET.INTERNAL_ORGANIZATION_ID ,TO_NUMBER(NULL),TO_NUMBER(NULL),TO_NUMBER(NULL),ZX_LINE.TAX_RATE,
         ZX_LINE.TAX_RATE_CODE,
         ZX_RATE.VAT_TRANSACTION_TYPE_CODE,
       ZX_RATE.RATE_TYPE_CODE,
       ZX_RATE.TAX_RATE_NAME,
         ZX_DET.TRX_NUMBER,
         ZX_DET.TRX_DESCRIPTION,
         ZX_DET.DOC_SEQ_VALUE,
         ZX_DET.TRX_DATE,
         TO_DATE(NULL),   --Deposit Date
         ZX_DET.TRX_DUE_DATE ,
         ZX_DET.TRX_SHIPPING_DATE ,
         ZX_DET.TRX_COMMUNICATED_DATE ,
         ZX_DET.TRX_CURRENCY_CODE,
         ZX_DET.CURRENCY_CONVERSION_TYPE,
         ZX_DET.CURRENCY_CONVERSION_DATE,
         ZX_DET.CURRENCY_CONVERSION_RATE,
         ZX_DET.TRX_SIC_CODE,
         ZX_DET.FOB_POINT,
         ZX_DET.TRX_WAYBILL_NUMBER,
         ZX_DET.BATCH_SOURCE_NAME,
         ZX_DET.TRX_TYPE_DESCRIPTION,
         ZX_DET.TRX_LINE_DESCRIPTION,TO_NUMBER(NULL),TO_CHAR(NULL),TO_CHAR(NULL) ,
         TO_CHAR(NULL),
         TO_CHAR(NULL),
         TO_CHAR(NULL),
         TO_CHAR(NULL),
         TO_CHAR(NULL),
         TO_CHAR(NULL),
         TO_CHAR(NULL),
         TO_CHAR(NULL),
         TO_CHAR(NULL),
         TO_CHAR(NULL),
         TO_CHAR(NULL),
         TO_CHAR(NULL),
         TO_CHAR(NULL),
         TO_CHAR(NULL),
         TO_CHAR(NULL),
         ZX_DET.APPLICATION_ID,
         ZX_DET.DOC_EVENT_STATUS,
         ZX_DET.APPLICATION_DOC_STATUS,
         ZX_DET.ESTABLISHMENT_ID,
         ''AR'',--ZX_DET.FUNCTIONAL_CURRECNY_CODE,
         --ZX_DET.LEDGER_NAME,
         ZX_DET.MINIMUM_ACCOUNTABLE_UNIT,
         ZX_DET.PRECISION,
         TO_NUMBER(NULL),ZX_DET.APPLIED_TO_APPLICATION_ID,
         ZX_DET.APPLIED_TO_TRX_LINE_ID,
         ZX_DET.APPLIED_TO_ENTITY_CODE,
         ZX_DET.APPLIED_TO_TRX_ID,
         ZX_DET.APPLIED_TO_EVENT_CLASS_CODE,
         ZX_DET.APPLIED_TO_TRX_NUMBER,
         ZX_DET.RELATED_DOC_APPLICATION_ID,
         ZX_DET.RELATED_DOC_DATE,
         ZX_DET.RELATED_DOC_ENTITY_CODE,
         ZX_DET.RELATED_DOC_EVENT_CLASS_CODE,
      ZX_DET.RELATED_DOC_NUMBER,
         ZX_DET.RELATED_DOC_TRX_ID,
         ZX_DET.ADJUSTED_DOC_APPLICATION_ID,
         ZX_DET.ADJUSTED_DOC_DATE,
         --ZX_DET.BANKING_TP_TAXPAYER_ID,
         ZX_DET.REF_DOC_APPLICATION_ID,
         ZX_DET.REF_DOC_ENTITY_CODE,
         ZX_DET.REF_DOC_EVENT_CLASS_CODE,
         TO_NUMBER(NULL),TO_NUMBER(NULL),ZX_DET.REF_DOC_TRX_ID,
         ZX_RATE.DEF_REC_SETTLEMENT_OPTION_CODE,
         ZX_DET.DEFAULT_TAXATION_COUNTRY,
         ZX_DET.DOCUMENT_SUB_TYPE,
         ZX_DET.TRX_BUSINESS_CATEGORY,
         ZX_DET.LINE_INTENDED_USE,
         ZX_DET.PRODUCT_CATEGORY,
         ZX_DET.PRODUCT_FISC_CLASSIFICATION,
         ZX_DET.SUPPLIER_EXCHANGE_RATE,
         ZX_DET.SUPPLIER_TAX_INVOICE_DATE,
         ZX_DET.SUPPLIER_TAX_INVOICE_NUMBER,
         ZX_DET.USER_DEFINED_FISC_CLASS,
         ZX_LINE.EXCEPTION_RATE,
         ZX_LINE.EXEMPT_RATE_MODIFIER,
         ZX_LINE.ORIG_TAX_AMT,
         ZX_LINE.ORIG_TAX_AMT_TAX_CURR ,
         ZX_LINE.ORIG_TAXABLE_AMT,
         ZX_LINE.ORIG_TAXABLE_AMT_TAX_CURR,
         TO_CHAR(NULL),ZX_LINE.TAX_AMT_TAX_CURR ,
         ZX_LINE.TAX_APPORTIONMENT_LINE_NUMBER,
         ZX_LINE.TAX_CURRENCY_CODE,
         ZX_LINE.TAX_DATE,
         ZX_LINE.TAX_DETERMINE_DATE,
         ZX_DET.TAX_INVOICE_DATE,
         ZX_DET.TAX_INVOICE_NUMBER,
         ZX_LINE.TAX_JURISDICTION_CODE,
         ZX_LINE.TAX_REGIME_CODE,
         ZX_LINE.TAX_STATUS_CODE,
         ZX_DET.SHIP_FROM_PARTY_TAX_PROF_ID  ,
         ZX_DET.SHIP_FROM_SITE_TAX_PROF_ID,
         ZX_DET.SHIP_TO_PARTY_TAX_PROF_ID  ,
         ZX_DET.SHIP_TO_SITE_TAX_PROF_ID  ,
         ZX_DET.BILL_TO_PARTY_TAX_PROF_ID,
         ZX_DET.BILL_TO_SITE_TAX_PROF_ID,
         ZX_DET.SHIP_THIRD_PTY_ACCT_SITE_ID,
         ZX_DET.BILL_THIRD_PTY_ACCT_SITE_ID,
         ZX_DET.SHIP_TO_CUST_ACCT_SITE_USE_ID,
         ZX_DET.BILL_TO_CUST_ACCT_SITE_USE_ID,
         ZX_DET.SHIP_THIRD_PTY_ACCT_ID,
         ZX_DET.BILL_THIRD_PTY_ACCT_ID,
         ZX_LINE.HQ_ESTB_REG_NUMBER ,
         ZX_LINE.LEGAL_ENTITY_TAX_REG_NUMBER,
         ZX_DET.OWN_HQ_SITE_TAX_PROF_ID,
         ZX_DET.OWN_HQ_PARTY_TAX_PROF_ID,
         ZX_DET.PORT_OF_ENTRY_CODE,
         ZX_LINE.REGISTRATION_PARTY_TYPE,
         ZX_LINE.HISTORICAL_FLAG,
         ZX_LINE.MRC_TAX_LINE_FLAG,
     --    ZX_LINE.POSTED_FLAG,
         ZX_LINE.REPORTING_ONLY_FLAG,
         ZX_LINE.TAX_AMT_INCLUDED_FLAG,
         ZX_LINE.TAX_ONLY_LINE_FLAG,
        to_char(NULL),  --xla_event.event_type_code, -- Accounting Column
        to_char(NULL),  --xla_event.event_number,
        to_char(NULL),  --xla_event.event_status_code,
        to_char(NULL),  --xla_head.je_category_name,
        to_date(NULL),  --xla_head.accounting_date,
        to_char(NULL),  --xla_head.gl_transfer_status_code,
        to_char(NULL),  --xla_head.description,
        to_number(NULL),    --xla_line.ae_line_num,
        to_char(NULL),   --xla_dist.accounting_line_code,
        to_char(NULL),  --xla_line.description,
        to_number(NULL),  --xla_line.statistical_amount,
        to_char(NULL),  --xla_event.process_status_code,
        to_char(NULL),  --xla_head.gl_transfer_status_code,
        to_number(NULL),--xla_head.doc_sequence_id,
        to_char(NULL),  --xla_head.doc_sequence_value,
        to_number(NULL),  --xla_line.party_id,
        to_number(NULL),  --xla_line.party_site_id,
        to_char(NULL),  --xla_line.party_type_code,
        to_number(NULL),--xla_event.event_id,
        to_number(NULL),--xla_head.ae_header_id,
        to_number(NULL),  --xla_line.code_combination_id,
        to_char(NULL),  --xla_head.period_name,
        zx_det.trx_id
FROM ZX_LINES ZX_LINE,
        ZX_LINES_DET_FACTORS ZX_DET,
        ZX_TAXES_B    ZX_TAX,
        ZX_RATES_VL    ZX_RATE
 WHERE ZX_DET.INTERNAL_ORGANIZATION_ID = ZX_LINE.INTERNAL_ORGANIZATION_ID
    AND ZX_DET.APPLICATION_ID    = ZX_LINE.APPLICATION_ID
    AND ZX_DET.ENTITY_CODE       = ZX_LINE.ENTITY_CODE
    AND ZX_DET.EVENT_CLASS_CODE  = ZX_LINE.EVENT_CLASS_CODE
    AND ZX_DET.TRX_ID            = ZX_LINE.TRX_ID
    AND ZX_DET.TRX_LINE_ID            = ZX_LINE.TRX_LINE_ID
    AND zx_det.tax_reporting_flag = ''Y''
    AND  ZX_LINE.TAX_ID          = ZX_TAX.TAX_ID(+)
    AND ZX_LINE.TAX_RATE_ID     = NVL(ZX_RATE.SOURCE_ID,ZX_RATE.TAX_RATE_ID)
    AND ((ZX_RATE.RECORD_TYPE_CODE <> ''MIGRATED'')
         OR (ZX_RATE.SOURCE_ID IS NULL))
--    AND ZX_DET.trx_id = 83546
AND DECODE(:G_LEDGER_ID,NULL,NULL) IS NULL
--AND ZX_DET.LEGAL_ENTITY_ID = :G_LEGAL_ENTITY_ID
AND ZX_RATE.DEF_REC_SETTLEMENT_OPTION_CODE = ''IMMEDIATE''
AND ZX_DET.LINE_CLASS in (''INVOICE'',''CREDIT_MEMO'',''DEBIT_MEMO'')
AND DECODE(:G_BATCH_NAME,NULL,NULL) IS NULL
--AND ZX_DET.TRX_NUMBER BETWEEN :G_TRX_NUMBER_LOW AND :G_TRX_NUMBER_HIGH
AND decode(:G_TRX_DATE_LOW,NULL,NULL) is null and decode(:G_TRX_DATE_HIGH,NULL,NULL) is null
  AND decode(:G_GL_DATE_LOW,NULL,NULL) is null and decode(:G_GL_DATE_HIGH,NULL,NULL) is null
  AND DECODE(:G_DOCUMENT_SUB_TYPE,NULL,NULL) IS NULL  AND DECODE(:G_TRX_BUSINESS_CATEGORY,NULL,NULL) IS NULL
  AND DECODE(:G_TAX_INVOICE_DATE_LOW,NULL,NULL) IS NULL AND DECODE(:G_TAX_INVOICE_DATE_HIGH,NULL,NULL) IS NULL
 AND DECODE(:G_TAX_REGIME_CODE,NULL,NULL) IS NULL  AND DECODE(:G_TAX,NULL,NULL) IS NULL
AND DECODE(:G_TAX_STATUS_CODE,NULL,NULL) IS NULL
AND DECODE(:G_TAX_RATE_CODE_LOW,NULL,NULL) IS NULL
AND DECODE(:G_TAX_RATE_CODE_HIGH,NULL,NULL) IS NULL
 AND DECODE(:G_TAX_TYPE_CODE_LOW,NULL,NULL) IS NULL
 AND DECODE(:G_TAX_TYPE_CODE_HIGH,NULL,NULL) IS NULL
AND DECODE(:G_CURRENCY_CODE_LOW,NULL,NULL) IS NULL
AND DECODE(:G_CURRENCY_CODE_HIGH,NULL,NULL) IS NULL
AND DECODE(:G_AR_EXEMPTION_STATUS,NULL,NULL) is NULL
AND DECODE(:G_VAT_TRANSACTION_TYPE_CODE,NULL,NULL) IS NULL
AND decode(:G_VAT_TAX,NULL,NULL) is null
AND decode(:G_VAT_ADDITIONAL_TAX,NULL,NULL) is null
AND decode(:G_VAT_NON_TAXABLE_TAX,NULL,NULL) is null
AND decode(:G_VAT_NOT_TAX,NULL,NULL) is null
AND decode(:G_VAT_PERCEPTION_TAX,NULL,NULL) is null
AND decode(:G_EXCISE_TAX,NULL,NULL) is null
 GROUP BY ZX_DET.LEDGER_ID,
         ZX_DET.TRX_ID    ,
         ZX_DET.DOC_SEQ_ID ,
         ZX_DET.DOC_SEQ_NAME ,
         ZX_DET.RECEIVABLES_TRX_TYPE_ID,
         ZX_DET.LINE_CLASS,
         ZX_DET.EVENT_CLASS_CODE ,
         ZX_DET.BATCH_SOURCE_ID,
         ZX_LINE.TAX_RATE_ID ,
        -- ZX_RATE.DEF_REC_SETTLEMENT_OPTION_CODE,
         --ZX_LINE.TAX_RATE_REGISTER_TYPE_CODE,
         ZX_DET.PRODUCT_ID,
         ZX_DET.PRODUCT_DESCRIPTION,
         ZX_LINE.TAX_EXEMPTION_ID,
         ZX_LINE.TAX_EXCEPTION_ID,
         ZX_LINE.TAX_AMT,
         ZX_LINE.TAX_AMT_FUNCL_CURR  ,
         ZX_LINE.TAXABLE_AMT,
         ZX_LINE.TAXABLE_AMT_FUNCL_CURR ,
         ZX_DET.EXEMPT_CERTIFICATE_NUMBER,
         ZX_LINE.EXEMPT_REASON_CODE   ,
         TO_CHAR(NULL), --exception_reason_code
         ZX_DET.UOM_CODE,
         ZX_DET.INTERNAL_ORGANIZATION_ID ,--ORG_ID
         TO_CHAR(NULL),  --reverse_date
         ZX_LINE.TAX_RATE,
         ZX_LINE.TAX_RATE_CODE,
ZX_RATE.VAT_TRANSACTION_TYPE_CODE,
       ZX_RATE.RATE_TYPE_CODE,
       ZX_RATE.TAX_RATE_NAME,
         ZX_DET.TRX_NUMBER,
         ZX_DET.TRX_DESCRIPTION,
         ZX_DET.DOC_SEQ_VALUE,
         ZX_DET.TRX_DATE,
         ZX_DET.TRX_DUE_DATE ,
         ZX_DET.TRX_SHIPPING_DATE ,
         ZX_DET.TRX_COMMUNICATED_DATE ,
         ZX_DET.TRX_CURRENCY_CODE,
         ZX_DET.CURRENCY_CONVERSION_TYPE,
         ZX_DET.CURRENCY_CONVERSION_DATE,
         ZX_DET.CURRENCY_CONVERSION_RATE,
         ZX_DET.TRX_SIC_CODE,
         ZX_DET.FOB_POINT,
         ZX_DET.TRX_WAYBILL_NUMBER,
         ZX_DET.BATCH_SOURCE_NAME,
         ZX_DET.TRX_TYPE_DESCRIPTION,
         ZX_DET.TRX_LINE_DESCRIPTION,
         ZX_DET.APPLICATION_ID,
         ZX_DET.DOC_EVENT_STATUS,
         ZX_DET.APPLICATION_DOC_STATUS,
         ZX_DET.ESTABLISHMENT_ID,
         --ZX_DET.FUNCTIONAL_CURRECNY_CODE,
         --ZX_DET.LEDGER_NAME,
         ZX_DET.MINIMUM_ACCOUNTABLE_UNIT,
         ZX_DET.PRECISION,
         ZX_DET.APPLIED_TO_APPLICATION_ID,
         ZX_DET.APPLIED_TO_TRX_LINE_ID,
         ZX_DET.APPLIED_TO_ENTITY_CODE,
         ZX_DET.APPLIED_TO_TRX_ID,
         ZX_DET.APPLIED_TO_EVENT_CLASS_CODE,
         ZX_DET.APPLIED_TO_TRX_NUMBER,
         ZX_DET.RELATED_DOC_APPLICATION_ID,
         ZX_DET.RELATED_DOC_DATE,
         ZX_DET.RELATED_DOC_ENTITY_CODE,
         ZX_DET.RELATED_DOC_EVENT_CLASS_CODE,
         ZX_DET.RELATED_DOC_NUMBER,
         ZX_DET.RELATED_DOC_TRX_ID,
         ZX_DET.ADJUSTED_DOC_APPLICATION_ID,
         ZX_DET.ADJUSTED_DOC_DATE,
         --ZX_DET.BANKING_TP_TAXPAYER_ID,
         ZX_DET.REF_DOC_APPLICATION_ID,
         ZX_DET.REF_DOC_ENTITY_CODE,
         ZX_DET.REF_DOC_EVENT_CLASS_CODE,
         ZX_DET.REF_DOC_TRX_ID,
         ZX_RATE.DEF_REC_SETTLEMENT_OPTION_CODE,
         ZX_DET.DEFAULT_TAXATION_COUNTRY,
         ZX_DET.DOCUMENT_SUB_TYPE,
         ZX_DET.TRX_BUSINESS_CATEGORY,
         ZX_DET.LINE_INTENDED_USE,
         ZX_DET.PRODUCT_CATEGORY,
         ZX_DET.PRODUCT_FISC_CLASSIFICATION,
         ZX_DET.SUPPLIER_EXCHANGE_RATE,
         ZX_DET.SUPPLIER_TAX_INVOICE_DATE,
         ZX_DET.SUPPLIER_TAX_INVOICE_NUMBER,
         ZX_DET.USER_DEFINED_FISC_CLASS,
         ZX_LINE.EXCEPTION_RATE,
         ZX_LINE.EXEMPT_RATE_MODIFIER,
         ZX_LINE.ORIG_TAX_AMT,
         ZX_LINE.ORIG_TAX_AMT_TAX_CURR ,
         ZX_LINE.ORIG_TAXABLE_AMT,
         ZX_LINE.ORIG_TAXABLE_AMT_TAX_CURR,
         ZX_LINE.TAX_AMT_TAX_CURR ,
         ZX_LINE.TAX_APPORTIONMENT_LINE_NUMBER,
         ZX_LINE.TAX_CURRENCY_CODE,
         ZX_LINE.TAX_DATE,
         ZX_LINE.TAX_DETERMINE_DATE,
         ZX_DET.TAX_INVOICE_DATE,
         ZX_DET.TAX_INVOICE_NUMBER,
         ZX_LINE.TAX_JURISDICTION_CODE,
         ZX_LINE.TAX_REGIME_CODE,
         ZX_LINE.TAX_STATUS_CODE,
         ZX_DET.SHIP_FROM_PARTY_TAX_PROF_ID  ,
         ZX_DET.SHIP_FROM_SITE_TAX_PROF_ID,
         ZX_DET.SHIP_TO_PARTY_TAX_PROF_ID  ,
         ZX_DET.SHIP_TO_SITE_TAX_PROF_ID  ,
         ZX_DET.BILL_TO_PARTY_TAX_PROF_ID,
         ZX_DET.BILL_TO_SITE_TAX_PROF_ID,
         ZX_DET.SHIP_THIRD_PTY_ACCT_SITE_ID,
         ZX_DET.BILL_THIRD_PTY_ACCT_SITE_ID,
         ZX_DET.SHIP_TO_CUST_ACCT_SITE_USE_ID,
         ZX_DET.BILL_TO_CUST_ACCT_SITE_USE_ID,
         ZX_DET.SHIP_THIRD_PTY_ACCT_ID,
         ZX_DET.BILL_THIRD_PTY_ACCT_ID,
         ZX_LINE.HQ_ESTB_REG_NUMBER ,
         ZX_LINE.LEGAL_ENTITY_TAX_REG_NUMBER,
         ZX_DET.OWN_HQ_SITE_TAX_PROF_ID,
         ZX_DET.OWN_HQ_PARTY_TAX_PROF_ID,
         ZX_DET.PORT_OF_ENTRY_CODE,
         ZX_LINE.REGISTRATION_PARTY_TYPE,
         ZX_LINE.HISTORICAL_FLAG,
         ZX_LINE.MRC_TAX_LINE_FLAG,
     --    ZX_LINE.POSTED_FLAG,
         ZX_LINE.REPORTING_ONLY_FLAG,
         ZX_LINE.TAX_AMT_INCLUDED_FLAG,
         ZX_LINE.TAX_ONLY_LINE_FLAG ';

 IF (g_level_procedure >= g_current_runtime_level ) THEN
      l_sql1 := substr(p_statement,1,3000);
     FND_LOG.STRING(g_level_procedure, 'ZX.TRL.ZX_AR_ACTG_EXTRACT_PKG.FETCH_AR_TRX_INFO SQL', 'l_sql_statement_tbl1  : '||l_sql1);
     l_sql2 := substr(p_statement,3001,3000);
       FND_LOG.STRING(g_level_procedure, 'ZX.TRL.ZX_AR_ACTG_EXTRACT_PKG.FETCH_AR_TRX_INFO SQL', 'l_sql_statement_tbl2  : '||l_sql2);
        l_sql3 := substr(p_statement,6001,3000);
     FND_LOG.STRING(g_level_procedure, 'ZX.TRL.ZX_AR_ACTG_EXTRACT_PKG.FETCH_AR_TRX_INFO SQL', 'l_sql_statement_tbl3  : '||l_sql3);
        l_sql4 := substr(p_statement,9001,3000);
     FND_LOG.STRING(g_level_procedure, 'ZX.TRL.ZX_AR_ACTG_EXTRACT_PKG.FETCH_AR_TRX_INFO SQL', 'l_sql_statement_tbl4  : '||l_sql4);
        l_sql5 := substr(p_statement,12001,3000);
     FND_LOG.STRING(g_level_procedure, 'ZX.TRL.ZX_AR_ACTG_EXTRACT_PKG.FETCH_AR_TRX_INFO SQL', 'l_sql_statement_tbl5  : '||l_sql5);
        l_sql6 := substr(p_statement,15001,3000);
     FND_LOG.STRING(g_level_procedure, 'ZX.TRL.ZX_AR_ACTG_EXTRACT_PKG.FETCH_AR_TRX_INFO SQL', 'l_sql_statement_tbl6  : '||l_sql6);
        l_sql7 := substr(p_statement,18001,3000);
     FND_LOG.STRING(g_level_procedure, 'ZX.TRL.ZX_AR_ACTG_EXTRACT_PKG.FETCH_AR_TRX_INFO SQL', 'l_sql_statement_tbl7  : '||l_sql7);
        l_sql8 := substr(p_statement,21001,3000);
 FND_LOG.STRING(g_level_procedure, 'ZX.TRL.ZX_AR_ACTG_EXTRACT_PKG.FETCH_AR_TRX_INFO SQL', 'G_LEDGER_ID  : '||to_char(G_LEDGER_ID));
 FND_LOG.STRING(g_level_procedure, 'ZX.TRL.ZX_AR_ACTG_EXTRACT_PKG.FETCH_AR_TRX_INFO SQL', 'G_LEGAL_ENTITY_ID  : '||G_LEGAL_ENTITY_ID);
 FND_LOG.STRING(g_level_procedure, 'ZX.TRL.ZX_AR_ACTG_EXTRACT_PKG.FETCH_AR_TRX_INFO SQL', 'G_BATCH_NAME  : '||G_BATCH_NAME);
 FND_LOG.STRING(g_level_procedure, 'ZX.TRL.ZX_AR_ACTG_EXTRACT_PKG.FETCH_AR_TRX_INFO SQL', 'G_TRX_NUMBER_LOW  : '||G_TRX_NUMBER_LOW);
 FND_LOG.STRING(g_level_procedure, 'ZX.TRL.ZX_AR_ACTG_EXTRACT_PKG.FETCH_AR_TRX_INFO SQL', 'G_TRX_NUMBER_HIGH  : '||G_TRX_NUMBER_HIGH);
 FND_LOG.STRING(g_level_procedure, 'ZX.TRL.ZX_AR_ACTG_EXTRACT_PKG.FETCH_AR_TRX_INFO SQL', 'G_TRX_DATE_LOW  : '||G_TRX_DATE_LOW);
 FND_LOG.STRING(g_level_procedure, 'ZX.TRL.ZX_AR_ACTG_EXTRACT_PKG.FETCH_AR_TRX_INFO SQL', 'G_TRX_DATE_HIGH  : '||G_TRX_DATE_HIGH);
 FND_LOG.STRING(g_level_procedure, 'ZX.TRL.ZX_AR_ACTG_EXTRACT_PKG.FETCH_AR_TRX_INFO SQL', 'G_GL_DATE_LOW  : '||G_GL_DATE_LOW);
 FND_LOG.STRING(g_level_procedure, 'ZX.TRL.ZX_AR_ACTG_EXTRACT_PKG.FETCH_AR_TRX_INFO SQL', 'G_GL_DATE_HIGH  : '||G_GL_DATE_HIGH);
 FND_LOG.STRING(g_level_procedure, 'ZX.TRL.ZX_AR_ACTG_EXTRACT_PKG.FETCH_AR_TRX_INFO SQL', 'G_DOCUMENT_SUB_TYPE  : '||G_DOCUMENT_SUB_TYPE);

 END IF;



    OPEN zx_rep_detail_csr FOR st1 USING
--    OPEN zx_rep_detail_csr FOR p_statement USING
                               G_LEDGER_ID,
                     --          G_LEGAL_ENTITY_ID,
                               G_BATCH_NAME,
                      --         G_TRX_NUMBER_LOW,
                       --        G_TRX_NUMBER_HIGH,
                               G_TRX_DATE_LOW,
                               G_TRX_DATE_HIGH,
                               G_GL_DATE_LOW,
                               G_GL_DATE_HIGH,
                               G_DOCUMENT_SUB_TYPE,
                               G_TRX_BUSINESS_CATEGORY,
                               G_TAX_INVOICE_DATE_LOW,
                               G_TAX_INVOICE_DATE_HIGH,
                               G_TAX_JURISDICTION_CODE,
                               G_FIRST_PARTY_TAX_REG_NUM,
                               G_TAX_REGIME_CODE,
                               G_TAX,
                               G_TAX_STATUS_CODE,
                               G_TAX_RATE_CODE_LOW,
                               G_TAX_RATE_CODE_HIGH,
                               G_TAX_TYPE_CODE_LOW,
                               G_TAX_TYPE_CODE_HIGH,
                             --  G_TAX_RATE_CODE,
                             --  G_TAX_TYPE_CODE,
                               G_CURRENCY_CODE_LOW,
                               G_CURRENCY_CODE_HIGH,
                               G_AR_EXEMPTION_STATUS,
                               G_VAT_TRANSACTION_TYPE_CODE,
                               G_VAT_TAX,
                               G_VAT_ADDITIONAL_TAX,
                               G_VAT_NON_TAXABLE_TAX,
                               G_VAT_NOT_TAX,
                               G_VAT_PERCEPTION_TAX,
                               G_EXCISE_TAX;



   IF (g_level_procedure >= g_current_runtime_level ) THEN
        FND_LOG.STRING(g_level_procedure, 'ZX.TRL.ZX_AR_ACTG_EXTRACT_PKG.EXECUTE_DYNAMIC_SQL_STRG',
                                      'After Using Clause of zx_rep_detail_csr : ');

    END IF;
                   IF zx_rep_detail_csr%NOTFOUND THEN

   IF (g_level_procedure >= g_current_runtime_level ) THEN
        FND_LOG.STRING(g_level_procedure, 'ZX.TRL.ZX_AR_ACTG_EXTRACT_PKG.EXECUTE_DYNAMIC_SQL_STRG',
                                      'End of fetch zx_rep_detail_csr : ');

    END IF;
  END If;
  --
  -- init counter and global AR tables
  --
  i := 1;
  INIT_AR_GT_TABLES;

    -- Populate WHO columns --

    g_created_by        := fnd_global.user_id;
    g_creation_date     := sysdate;
    g_last_updated_by   := fnd_global.user_id;
    g_last_update_login := fnd_global.login_id;
    g_last_update_date  := sysdate;

    g_program_application_id := fnd_global.prog_appl_id        ; --program_application_id
    g_program_id            := fnd_global.conc_program_id     ; --program_id
    g_program_login_id      := fnd_global.conc_login_id       ; --program_login_id


  -- insert when fetch up to 1000 rows
  --
   IF (g_level_procedure >= g_current_runtime_level ) THEN
        FND_LOG.STRING(g_level_procedure, 'ZX.TRL.ZX_AR_ACTG_EXTRACT_PKG.EXECUTE_DYNAMIC_SQL_STRG',
                                      'FETCH zx_rep_detail_csr : ');
    END IF;

  LOOP
    FETCH zx_rep_detail_csr  INTO
        GT_LEDGER_ID(i),
       GT_TRX_ID(i),
        GT_DOC_SEQ_ID(i),
        GT_DOC_SEQ_NAME(i),
        GT_TRX_TYPE_ID(i),
        GT_LINE_CLASS(i),
        GT_EVENT_CLASS_CODE(i),
        GT_APPLIED_FROM_ENTITY_CODE(i),
        GT_APPLIED_FROM_TRX_ID(i),
        GT_APPLIED_FROM_EVENT_CLS_CD(i),
        GT_ADJUSTED_DOC_ENTITY_CODE(i),
        GT_ADJUSTED_DOC_TRX_ID(i),
        GT_ADJUSTED_DOC_EVENT_CLS_CD(i),
        GT_ADJUSTED_DOC_NUMBER(i),
        GT_BATCH_SOURCE_ID(i),
        GT_TAX_RATE_ID(i),
        GT_TAX_RATE_REG_TYPE_CODE(i),   --Check this
        GT_PRODUCT_ID(i),
        GT_PRODUCT_DESCRIPTION(i),
        GT_TAXABLE_LINE_SOURCELE(i),
        GT_TAXABLE_ITEM_SOURCE_ID(i),
        GT_TAX_EXEMPTION_ID(i),
        GT_TAX_EXCEPTION_ID(i),
        GT_TAXABLE_LINE_TOTAL_AMOUNT(i),
        GT_TAX_LINE_ID(i),
        GT_TAX_AMT(i),
        GT_TAX_AMT_FUNCL_CURR(i),
        GT_TAX_LINE_NUMBER(i),
        GT_TAXABLE_AMT(i),
        GT_TAXABLE_AMT_FUNCL_CURR(i),
        GT_TRX_LINE_ID(i),
        GT_TRX_LINE_QUANTITY(i),
        GT_EXEMPT_CERTIFICATE_NUMBER(i),
        GT_EXEMPT_REASON_CODE(i),
        GT_TAX_EXCEPTION_REASON_CODE(i),
        GT_UOM_CODE(i),
        GT_RECONCILIATION_FLAG(i),
        GT_INTERNAL_ORGANIZATION_ID(i),
        GT_BR_REF_CUSTOMER_TRX_ID(i),
     --   GT_REVERSE_FLAG(i),     --REVERSAL_DATE    Check this column
        GT_AMOUNT_APPLIED(i),
        GT_TAX_APPLIED(i),
        GT_TAX_RATE(i),
        GT_TAX_RATE_CODE(i),
        GT_TAX_RATE_VAT_TRX_TYPE_CODE(i),
        GT_TAX_TYPE_CODE(i),
        GT_TAX_RATE_CODE_NAME(i),     --  Do we need to rename tax_rate_name?
        GT_TRX_NUMBER(i),
        GT_TRX_DESCRIPTION(i),
        GT_DOC_SEQ_VALUE(i),
        GT_TRX_DATE(i),
        GT_DEPOSIT_DATE(i),
        GT_TRX_DUE_DATE(i),
        GT_TRX_SHIPPING_DATE(i),
        GT_TRX_COMMUNICATED_DATE(i),
        GT_TRX_CURRENCY_CODE(i),
        GT_CURRENCY_CONVERSION_TYPE(i),
        GT_CURRENCY_CONVERSION_DATE(i),
        GT_CURRENCY_CONVERSION_RATE(i),
        GT_TRX_SIC_CODE(i),
        GT_FOB_POINT(i),
        GT_TRX_WAYBILL_NUMBER(i),
        GT_TRX_BATCH_SOURCE_NAME(i),
        GT_TRX_TYPE_DESCRIPTION(i),
       -- GT_TAX_RATE_CODE_DESCRIPTION(i), --populate
        GT_TRX_LINE_DESCRIPTION(i),
        GT_TRX_LINE_NUMBER(i),
        GT_TRX_LINE_TYPE(i),
        GT_TAX_LINE_USER_CATEGORY(i),
        GT_TAX_LINE_USER_ATTRIBUTE1(i),
        GT_TAX_LINE_USER_ATTRIBUTE2(i),
        GT_TAX_LINE_USER_ATTRIBUTE3(i),
        GT_TAX_LINE_USER_ATTRIBUTE4(i),
        GT_TAX_LINE_USER_ATTRIBUTE5(i),
        GT_TAX_LINE_USER_ATTRIBUTE6(i),
        GT_TAX_LINE_USER_ATTRIBUTE7(i),
        GT_TAX_LINE_USER_ATTRIBUTE8(i),
        GT_TAX_LINE_USER_ATTRIBUTE9(i),
        GT_TAX_LINE_USER_ATTRIBUTE10(i),
        GT_TAX_LINE_USER_ATTRIBUTE11(i),
        GT_TAX_LINE_USER_ATTRIBUTE12(i),
        GT_TAX_LINE_USER_ATTRIBUTE13(i),
        GT_TAX_LINE_USER_ATTRIBUTE14(i),
        GT_TAX_LINE_USER_ATTRIBUTE15(i),
        GT_APPLICATION_ID(i),
        GT_DOC_EVENT_STATUS(i),
        GT_APPLICATION_DOC_STATUS(i),
        GT_ESTABLISHMENT_ID(i),
        GT_EXTRACT_SOURCE_LEDGER(i),
      --  GT_FUNCTIONAL_CURRECNY_CODE(i),
      --  GT_LEDGER_NAME(i),
        GT_MINIMUM_ACCOUNTABLE_UNIT(i),
        GT_PRECISION(i),
        GT_RECEIPT_CLASS_ID(i),
        GT_APPLIED_TO_APPLICATION_ID(i),
        GT_APPLIED_TO_TRX_LINE_ID(i),
        GT_APPLIED_TO_ENTITY_CODE(i),
        GT_APPLIED_TO_TRX_ID(i),
        GT_APPLIED_TO_EVENT_CLS_CODE(i),
        GT_APPLIED_TO_TRX_NUMBER(i),
        GT_RELATED_DOC_APPLICATION_ID(i),
        GT_RELATED_DOC_DATE(i),
        GT_RELATED_DOC_ENTITY_CODE(i),
        GT_RELATED_DOC_EVENT_CLS_CODE(i),
        GT_RELATED_DOC_NUMBER(i),
        GT_RELATED_DOC_TRX_ID(i),
        GT_ADJUSTED_DOC_APPL_ID(i),
        GT_ADJUSTED_DOC_DATE(i),
        GT_REF_DOC_APPLICATION_ID(i),
        GT_REF_DOC_ENTITY_CODE(i),
        GT_REF_DOC_EVENT_CLASS_CODE(i),
        GT_REF_DOC_LINE_ID(i),
        GT_REF_DOC_LINE_QUANTITY(i),
        GT_REF_DOC_TRX_ID(i),
        GT_DEF_REC_SETTLEMENT_OPT_CD(i),
        GT_DEFAULT_TAXATION_COUNTRY(i),
        GT_DOCUMENT_SUB_TYPE(i),
        GT_TRX_BUSINESS_CATEGORY(i),
        GT_LINE_INTENDED_USE(i),
        GT_PRODUCT_CATEGORY(i),
        GT_PROD_FISC_CLASSIFICATION(i),
        GT_SUPPLIER_EXCHANGE_RATE(i),
        GT_SUPPLIER_TAX_INVOICE_DATE(i),
        GT_SUPPLIER_TAX_INVOICE_NUM(i),
        GT_USER_DEFINED_FISC_CLASS(i),
        GT_EXCEPTION_RATE(i),
        GT_EXEMPT_RATE_MODIFIER(i),
        GT_ORIG_TAX_AMT(i),
        GT_ORIG_TAX_AMT_TAX_CURR(i),
        GT_ORIG_TAXABLE_AMT(i),
        GT_ORIG_TAXABLE_AMT_TAX_CURR(i),
        GT_RECOVERY_RATE_CODE(i),
        GT_TAX_AMT_TAX_CURR(i),
        GT_TAX_APPORTIONMENT_LINE_NUM(i),
        GT_TAX_CURRENCY_CODE(i),
        GT_TAX_DATE(i),
        GT_TAX_DETERMINE_DATE(i),
        GT_TAX_INVOICE_DATE(i),
        GT_TAX_INVOICE_NUMBER(i),
        GT_TAX_JURISDICTION_CODE(i),
        GT_TAX_REGIME_CODE(i),
        GT_TAX_STATUS_CODE(i),
        GT_SHIP_FROM_PTY_TAX_PROF_ID(i),
        GT_SHIP_FROM_SITE_TAX_PROF_ID(i),
        GT_SHIP_TO_PARTY_TAX_PROF_ID(i),
        GT_SHIP_TO_SITE_TAX_PROF_ID(i),
        GT_BILL_TO_PTY_TAX_PROF_ID(i),
        GT_BILL_TO_SITE_TAX_PROF_ID(i),
        GT_SHIPPING_TP_ADDRESS_ID(i),    --SHIP_THIRD_PTY_ACCT_SITE_ID
        GT_BILLING_TP_ADDRESS_ID(i),
        GT_SHIPPING_TP_SITE_ID(i),
        GT_BILLING_TP_SITE_ID(i),
        GT_SHIPPING_TP_ID(i),
        GT_BILLING_TRADING_PARTNER_ID(i),
        GT_HQ_ESTB_REG_NUMBER(i),
        GT_LEGAL_ENTITY_TAX_REG_NUM(i),
        GT_OWN_HQ_PARTY_SITE_PROF_ID(i),
        GT_OWN_HQ_PARTY_TAX_PROF_ID(i),
        GT_PORT_OF_ENTRY_CODE(i),
        GT_REGISTRATION_PARTY_TYPE(i),
        GT_HISTORICAL_FLAG(i),
        GT_MRC_TAX_LINE_FLAG(i),
     --   GT_POSTED_FLAG(i),
        GT_REPORTING_ONLY_FLAG(i),
        GT_TAX_AMT_INCLUDED_FLAG(i),
        GT_TAX_ONLY_LINE_FLAG(i),
        GT_EVENT_CLASS_MAPPING_ID(i),
        GT_TRX_LEVEL_TYPE(i),
        GT_PLACE_OF_SUPPLY_TYPE_CODE(i),
        GT_POA_LOCATION_ID(i),
        GT_POO_LOCATION_ID(i),
        GT_DEF_PLACE_OF_SUP_TYPE_CODE(i),
        GT_LINE_AMT(i),
        GT_TAX_PROVIDER_ID(i),
   --     gt_actg_ext_line_id(i),     --Accounting Columns -- Sequence ID
        gt_actg_event_type_code(i),
        gt_actg_event_number(i),
        gt_actg_event_status_flag(i),
        gt_actg_category_code(i),
        gt_accounting_date(i),
        gt_gl_transfer_flag(i),
   --     gt_gl_transfer_run_id(i),
        gt_actg_header_description(i),
        gt_actg_line_num(i),
        gt_actg_line_type_code(i),
        gt_actg_line_description(i),
        gt_actg_stat_amt(i),
        gt_actg_error_code(i),
        gt_gl_transfer_code(i),
        gt_actg_doc_sequence_id(i),
      --  gt_actg_doc_sequence_name(i),
        gt_actg_doc_sequence_value(i),
        gt_actg_party_id(i),
        gt_actg_party_site_id(i),
        gt_actg_party_type(i),
        gt_actg_event_id(i),
        gt_actg_header_id(i),
      --  gt_actg_source_table(i),
        gt_actg_line_ccid(i),
        gt_period_name(i),
        gt_actg_source_id(i),
        GT_AR_CASH_RCPT_RVRS_DATE(i),
        GT_AR_CASH_RCPT_RVRS_STATUS(i),
        GT_ACCTD_AMOUNT_CR(i),
        GT_ACCTD_AMOUNT_DR(i),
        GT_REC_APPLICATION_STATUS(i),
        GT_ACCOUNT_CLASS(i),
        GT_LATEST_REC_FLAG(i);


--        gt_created_by(i),
    --    gt_creation_date(i),
 --       gt_last_updated_by(i),
  --      gt_last_update_date(i),
   --     gt_last_update_login(i),
    --    gt_program_application_id(i),
     --   gt_program_id(i),
      --  gt_program_login_id(i);

    IF (g_level_procedure >= g_current_runtime_level ) THEN
        FND_LOG.STRING(g_level_procedure, 'ZX.TRL.ZX_AR_ACTG_EXTRACT_PKG.EXECUTE_DYNAMIC_SQL_STRG',
                                      'After FETCH zx_rep_detail_csr : '||to_char(gt_ledger_id.count));
    END IF;

   IF zx_rep_detail_csr%NOTFOUND THEN

   IF (g_level_procedure >= g_current_runtime_level ) THEN
        FND_LOG.STRING(g_level_procedure, 'ZX.TRL.ZX_AR_ACTG_EXTRACT_PKG.EXECUTE_DYNAMIC_SQL_STRG',
                                      'End of FETCH zx_rep_detail_csr : ');

    END IF;
 end if;

    IF  zx_rep_detail_csr%FOUND THEN
      --
      -- populate EXTRACT_REPORT_LINE_NUMBER
      --
      GT_EXTRACT_REPORT_LINE_NUMBER(i) := G_EXTRACT_REPORT_LINE_NUMBER;
      G_EXTRACT_REPORT_LINE_NUMBER := G_EXTRACT_REPORT_LINE_NUMBER + 1;

      IF (i >= C_LINES_PER_INSERT) THEN
        --INSERT_AR_SUB_ITF;
        INSERT_AR_TRX_INFO;
        COMMIT;
        --
        -- reset counter and init gt tables
        --
        i := 1;
        INIT_AR_GT_TABLES;
      ELSE
        i := i + 1;
      END IF;

    ELSE
      --
      -- total rows fetched less than 1000
      -- insert the rest of rows
      --
      --INSERT_AR_SUB_ITF;
      INSERT_AR_TRX_INFO;
      COMMIT;
      CLOSE zx_rep_detail_csr;
      EXIT;
    END IF;
  END LOOP;


   IF (g_level_procedure >= g_current_runtime_level ) THEN
        FND_LOG.STRING(g_level_procedure, 'ZX.TRL.ZX_AR_ACTG_EXTRACT_PKG.EXECUTE_DYNAMIC_SQL_STRG.END',
                                      'ZX_AR_ACTG_EXTRACT_PKG: EXECUTE_DYNAMIC_SQL_STRG(-)');
    END IF;

 EXCEPTION
   WHEN VALUE_ERROR THEN
    g_error_buffer  := sqlcode || ': ' || SUBSTR(SQLERRM, 1, 100);
    FND_MESSAGE.SET_NAME('ZX','GENERIC_MESSAGE');
    FND_MESSAGE.SET_TOKEN('GENERIC_TEXT','EXECUTE_DYNAMIC_SQL_STRG- '|| g_error_buffer);
    FND_MSG_PUB.Add;
    IF (g_level_unexpected >= g_current_runtime_level ) THEN
      FND_LOG.STRING(g_level_unexpected,
                     'ZX.TRL.ZX_EXTRACT_PKG.EXECUTE_DYNAMIC_SQL_STRG - Numeric error',
                      g_error_buffer);
    END IF;

   WHEN NO_DATA_FOUND THEN

  g_error_buffer  := sqlcode || ': ' || SUBSTR(SQLERRM, 1, 100);
    FND_MESSAGE.SET_NAME('ZX','GENERIC_MESSAGE');
    FND_MESSAGE.SET_TOKEN('GENERIC_TEXT','EXECUTE_DYNAMIC_SQL_STRG- '|| g_error_buffer);
    FND_MSG_PUB.Add;
    IF (g_level_unexpected >= g_current_runtime_level ) THEN
      FND_LOG.STRING(g_level_unexpected,
                     'ZX.TRL.ZX_EXTRACT_PKG.EXECUTE_DYNAMIC_SQL_STRG-No data',
                      g_error_buffer);
    END IF;

  WHEN OTHERS THEN
    g_error_buffer  := sqlcode || ': ' || SUBSTR(SQLERRM, 1, 80);
    FND_MESSAGE.SET_NAME('ZX','GENERIC_MESSAGE');
    FND_MESSAGE.SET_TOKEN('GENERIC_TEXT','EXECUTE_DYNAMIC_SQL_STRG- '|| g_error_buffer);
    FND_MSG_PUB.Add;
    IF (g_level_unexpected >= g_current_runtime_level ) THEN
      FND_LOG.STRING(g_level_unexpected,
                     'ZX.TRL.ZX_EXTRACT_PKG.EXECUTE_DYNAMIC_SQL_STRG',
                      g_error_buffer);
    END IF;

    g_retcode := 2;

END EXECUTE_DYNAMIC_SQL_STRG;


/*===========================================================================+
 | PROCEDURE                                                                 |
 |   INSERT_AR_TRX_INFO                                                      |
 |   name changed from INSERT_AR_SUB_ITF                                     |
 |   (rewrite from INSERT_SQL_AR)                                            |
 | DESCRIPTION                                                               |
 |    This procedure inserts AR data into ZX_AR_ACTG_EXTRACT_PKG_SUB_ITF table       |
 |                                                                           |
 | SCOPE - Private                                                           |
 |                                                                           |
 | NOTES                                                                     |
 |                                                                           |
 | MODIFICATION HISTORY                                                      |
 |   4-AUG-03   Phong La     Created                                         |
 |  07-OCT-03   Phong La     Bugfix 3175265 added ORG_ID, EXCHANGE_RATE,     |
 |                           GL_POSTED_DATE, PRECISION,                      |
 |                           MINIMUM_ACCOUNTABLE_UNIT,                       |
 |                           BALANCING_SEGMENT_VALUE to insert               |
 |  30-JUN-04   Amol Pai     Added Insert into ar and common extension       |
 |                           tables (moved code from populate to build_sql)  |
 |                                                                           |
 +===========================================================================*/
PROCEDURE INSERT_AR_TRX_INFO
IS

  l_count       number;

BEGIN

    IF (g_level_procedure >= g_current_runtime_level ) THEN
        FND_LOG.STRING(g_level_procedure, 'ZX.TRL.ZX_AR_ACTG_EXTRACT_PKG.INSERT_AR_TRX_INFO.BEGIN',
                                      'ZX_AR_ACTG_EXTRACT_PKG: INSERT_AR_TRX_INFO(+)');
        FND_LOG.STRING(g_level_procedure, 'ZX.TRL.ZX_AR_ACTG_EXTRACT_PKG.INSERT_AR_TRX_INFO',
                                      'Rows fetched : '||to_char(GT_LEDGER_ID.COUNT));
    END IF;

  l_count := NVL(GT_LEDGER_ID.COUNT, 0);

  FORALL i IN 1 .. l_count
    INSERT INTO ZX_REP_TRX_DETAIL_T(
        DETAIL_TAX_LINE_ID,
        LEDGER_ID,
        TRX_ID ,
        DOC_SEQ_ID,
        DOC_SEQ_NAME ,
        TRX_TYPE_ID ,
        TRX_LINE_CLASS,
        EVENT_CLASS_CODE ,
        APPLIED_FROM_ENTITY_CODE,
        APPLIED_FROM_TRX_ID,
        APPLIED_FROM_EVENT_CLASS_CODE,
        ADJUSTED_DOC_ENTITY_CODE ,
        ADJUSTED_DOC_TRX_ID ,
        ADJUSTED_DOC_EVENT_CLASS_CODE ,
        ADJUSTED_DOC_NUMBER ,
        TRX_BATCH_SOURCE_ID,
        TAX_RATE_ID ,
        TAX_RATE_REGISTER_TYPE_CODE,
        PRODUCT_ID,
        PRODUCT_DESCRIPTION,
        TAXABLE_LINE_SOURCE_TABLE ,
        TAXABLE_ITEM_SOURCE_ID,
        TAX_EXEMPTION_ID ,
        TAX_EXCEPTION_ID ,
        TAXABLE_LINE_TOTAL_AMOUNT,
        TAX_LINE_ID ,
        TAX_AMT ,
        TAX_AMT_FUNCL_CURR ,
        TAX_LINE_NUMBER ,
        TAXABLE_AMT ,
        TAXABLE_AMT_FUNCL_CURR ,
        TRX_LINE_ID ,
        TRX_LINE_QUANTITY ,
        EXEMPT_CERTIFICATE_NUMBER,
        EXEMPT_REASON_CODE ,
        TAX_EXCEPTION_REASON_CODE ,
        UOM_CODE,
        RECONCILIATION_FLAG ,
        INTERNAL_ORGANIZATION_ID,
        BR_REF_CUSTOMER_TRX_ID,
      --  REVERSE_FLAG,
        AMOUNT_APPLIED,
        TAX_APPLIED,
        TAX_RATE,
        TAX_RATE_CODE,
        TAX_RATE_VAT_TRX_TYPE_CODE,
        TAX_TYPE_CODE,
        TAX_RATE_CODE_NAME ,
        TRX_NUMBER ,
        TRX_DESCRIPTION ,
        DOC_SEQ_VALUE,
        TRX_DATE,
        DEPOSIT_DATE,
        TRX_DUE_DATE ,
        TRX_SHIPPING_DATE ,
        TRX_COMMUNICATED_DATE ,
        TRX_CURRENCY_CODE,
        CURRENCY_CONVERSION_TYPE,
        CURRENCY_CONVERSION_DATE,
        CURRENCY_CONVERSION_RATE,
        TRX_SIC_CODE,
        FOB_POINT,
        TRX_WAYBILL_NUMBER  ,
        TRX_BATCH_SOURCE_NAME,
        TRX_TYPE_DESCRIPTION,
     --   TAX_RATE_CODE_DESCRIPTION ,
        TRX_LINE_DESCRIPTION,
        TRX_LINE_NUMBER,
        TRX_LINE_TYPE,
        TAX_LINE_USER_CATEGORY ,
        TAX_LINE_USER_ATTRIBUTE1 ,
        TAX_LINE_USER_ATTRIBUTE2 ,
        TAX_LINE_USER_ATTRIBUTE3 ,
        TAX_LINE_USER_ATTRIBUTE4 ,
        TAX_LINE_USER_ATTRIBUTE5 ,
        TAX_LINE_USER_ATTRIBUTE6 ,
        TAX_LINE_USER_ATTRIBUTE7 ,
        TAX_LINE_USER_ATTRIBUTE8 ,
        TAX_LINE_USER_ATTRIBUTE9,
        TAX_LINE_USER_ATTRIBUTE10 ,
        TAX_LINE_USER_ATTRIBUTE11,
        TAX_LINE_USER_ATTRIBUTE12 ,
        TAX_LINE_USER_ATTRIBUTE13 ,
        TAX_LINE_USER_ATTRIBUTE14 ,
        TAX_LINE_USER_ATTRIBUTE15 ,
        APPLICATION_ID,
        DOC_EVENT_STATUS,
        APPLICATION_DOC_STATUS,
        ESTABLISHMENT_ID,
        EXTRACT_SOURCE_LEDGER ,
        --FUNCTIONAL_CURRENCY_CODE,
        --LEDGER_NAME,
        MINIMUM_ACCOUNTABLE_UNIT,
        PRECISION,
        RECEIPT_CLASS_ID ,
        APPLIED_TO_APPLICATION_ID                 ,
        APPLIED_TO_TRX_LINE_ID                   ,
        APPLIED_TO_ENTITY_CODE ,
        APPLIED_TO_TRX_ID,
        APPLIED_TO_EVENT_CLASS_CODE ,
        APPLIED_TO_TRX_NUMBER ,
        RELATED_DOC_APPLICATION_ID ,
        RELATED_DOC_DATE ,
        RELATED_DOC_ENTITY_CODE ,
        RELATED_DOC_EVENT_CLASS_CODE ,
        RELATED_DOC_NUMBER ,
        RELATED_DOC_TRX_ID ,
        ADJUSTED_DOC_APPLICATION_ID ,
        ADJUSTED_DOC_DATE ,
        REF_DOC_APPLICATION_ID ,
        REF_DOC_ENTITY_CODE ,
        REF_DOC_EVENT_CLASS_CODE ,
        REF_DOC_LINE_ID ,
        REF_DOC_LINE_QUANTITY ,
        REF_DOC_TRX_ID ,
        DEF_REC_SETTLEMENT_OPTION_CODE,
        DEFAULT_TAXATION_COUNTRY,
        DOCUMENT_SUB_TYPE,
        TRX_BUSINESS_CATEGORY,
        LINE_INTENDED_USE,
        PRODUCT_CATEGORY  ,
        PRODUCT_FISC_CLASSIFICATION,
        SUPPLIER_EXCHANGE_RATE,
        SUPPLIER_TAX_INVOICE_DATE,
        SUPPLIER_TAX_INVOICE_NUMBER,
        USER_DEFINED_FISC_CLASS,
        EXCEPTION_RATE,
        EXEMPT_RATE_MODIFIER,
        ORIG_TAX_AMT,
        ORIG_TAX_AMT_TAX_CURR ,
        ORIG_TAXABLE_AMT,
        ORIG_TAXABLE_AMT_TAX_CURR,
        recovery_rate_code,
        TAX_AMT_TAX_CURR ,
        TAX_APPORTIONMENT_LINE_NUMBER,
        TAX_CURRENCY_CODE,
        TAX_DATE,
        TAX_DETERMINE_DATE,
        TAX_INVOICE_DATE,
        TAX_INVOICE_NUMBER ,
        TAX_JURISDICTION_CODE,
       -- TAX_RATE_VAT_TRX_TYPE_DESC ,
        TAX_REGIME_CODE,
        TAX_STATUS_CODE,
        SHIP_FROM_PARTY_TAX_PROF_ID,
        SHIP_FROM_SITE_TAX_PROF_ID,
        SHIP_TO_PARTY_TAX_PROF_ID  ,
        SHIP_TO_SITE_TAX_PROF_ID  ,
        BILL_TO_PARTY_TAX_PROF_ID,
        BILL_TO_SITE_TAX_PROF_ID,
        SHIPPING_TP_ADDRESS_ID,    --SHIP_THIRD_PTY_ACCT_SITE_ID
        BILLING_TP_ADDRESS_ID,
        SHIPPING_TP_SITE_ID,
        BILLING_TP_SITE_ID,
        SHIPPING_TRADING_PARTNER_ID,
        BILLING_TRADING_PARTNER_ID,
        HQ_ESTB_REG_NUMBER ,
        LEGAL_ENTITY_TAX_REG_NUMBER,
        OWN_HQ_PARTY_SITE_PROF_ID ,
        OWN_HQ_PARTY_TAX_PROF_ID ,
        PORT_OF_ENTRY_CODE,
        REGISTRATION_PARTY_TYPE,
        HISTORICAL_FLAG,
        MRC_TAX_LINE_FLAG,
     --   POSTED_FLAG,
        REPORTING_ONLY_FLAG,
        TAX_AMT_INCLUDED_FLAG,
        TAX_ONLY_FLAG,
        EVENT_CLASS_MAPPING_ID,
        TRX_LEVEL_TYPE,
        PLACE_OF_SUPPLY_TYPE_CODE,
        POA_LOCATION_ID,
        POO_LOCATION_ID,
        DEF_PLACE_OF_SUPPLY_TYPE_CODE,
        TRX_LINE_AMT,
        TAX_PROVIDER_ID,
        CREATED_BY ,
        CREATION_DATE ,
        LAST_UPDATED_BY,
        LAST_UPDATE_DATE,
        LAST_UPDATE_LOGIN,
        REQUEST_ID,
        AR_CASH_RECEIPT_REVERSE_DATE,
        AR_CASH_RECEIPT_REVERSE_STATUS,
        ACCTD_AMOUNT_CR,
        ACCTD_AMOUNT_DR,
        REC_APPLICATION_STATUS,
        ACCOUNT_CLASS,
        LATEST_REC_FLAG)

  VALUES(
        ZX_REP_TRX_DETAIL_T_S.NEXTVAL,
        GT_LEDGER_ID(i),
        GT_TRX_ID(i),
        GT_DOC_SEQ_ID(i),
        GT_DOC_SEQ_NAME(i),
        GT_TRX_TYPE_ID(i),
        GT_LINE_CLASS(i),
        GT_EVENT_CLASS_CODE(i),
        GT_APPLIED_FROM_ENTITY_CODE(i),
        GT_APPLIED_FROM_TRX_ID(i),
        GT_APPLIED_FROM_EVENT_CLS_CD(i),
        GT_ADJUSTED_DOC_ENTITY_CODE(i),
        GT_ADJUSTED_DOC_TRX_ID(i),
        GT_ADJUSTED_DOC_EVENT_CLS_CD(i),
        GT_ADJUSTED_DOC_NUMBER(i),
        GT_BATCH_SOURCE_ID(i),
        GT_TAX_RATE_ID(i),
       -- g_register_type,
        GT_TAX_RATE_REG_TYPE_CODE(i),
        GT_PRODUCT_ID(i),
        GT_PRODUCT_DESCRIPTION(i),
        GT_TAXABLE_LINE_SOURCELE(i),
        GT_TAXABLE_ITEM_SOURCE_ID(i),
        GT_TAX_EXEMPTION_ID(i),
        GT_TAX_EXCEPTION_ID(i),
        GT_TAXABLE_LINE_TOTAL_AMOUNT(i),
        GT_TAX_LINE_ID(i),
        GT_TAX_AMT(i),
        GT_TAX_AMT_FUNCL_CURR(i),
        GT_TAX_LINE_NUMBER(i),
        GT_TAXABLE_AMT(i),
        GT_TAXABLE_AMT_FUNCL_CURR(i),
        GT_TRX_LINE_ID(i),
        GT_TRX_LINE_QUANTITY(i),
        GT_EXEMPT_CERTIFICATE_NUMBER(i),
        GT_EXEMPT_REASON_CODE(i),
        GT_TAX_EXCEPTION_REASON_CODE(i),
        GT_UOM_CODE(i),
        GT_RECONCILIATION_FLAG(i),
        GT_INTERNAL_ORGANIZATION_ID(i),
        GT_BR_REF_CUSTOMER_TRX_ID(i),
     --   GT_REVERSE_FLAG(i),   -- REVERSAL_DATE    Check this column
        GT_AMOUNT_APPLIED(i),
        GT_TAX_APPLIED(i),
        GT_TAX_RATE(i),
        GT_TAX_RATE_CODE(i),
        GT_TAX_RATE_VAT_TRX_TYPE_CODE(i),
        GT_TAX_TYPE_CODE(i),
        GT_TAX_RATE_CODE_NAME(i),     --  Do we need to rename tax_rate_name?
        GT_TRX_NUMBER(i),
        GT_TRX_DESCRIPTION(i),
        GT_DOC_SEQ_VALUE(i),
        GT_TRX_DATE(i),
        GT_DEPOSIT_DATE(i),
        GT_TRX_DUE_DATE(i),
        GT_TRX_SHIPPING_DATE(i),
        GT_TRX_COMMUNICATED_DATE(i),
        GT_TRX_CURRENCY_CODE(i),
        GT_CURRENCY_CONVERSION_TYPE(i),
        GT_CURRENCY_CONVERSION_DATE(i),
        GT_CURRENCY_CONVERSION_RATE(i),
        GT_TRX_SIC_CODE(i),
        GT_FOB_POINT(i),
        GT_TRX_WAYBILL_NUMBER(i),
        GT_TRX_BATCH_SOURCE_NAME(i),
        GT_TRX_TYPE_DESCRIPTION(i),
       -- GT_TAX_RATE_CODE_DESCRIPTION(i), --populate
        GT_TRX_LINE_DESCRIPTION(i),
        GT_TRX_LINE_NUMBER(i),
        GT_TRX_LINE_TYPE(i),
        GT_TAX_LINE_USER_CATEGORY(i),
        GT_TAX_LINE_USER_ATTRIBUTE1(i),
        GT_TAX_LINE_USER_ATTRIBUTE2(i),
        GT_TAX_LINE_USER_ATTRIBUTE3(i),
        GT_TAX_LINE_USER_ATTRIBUTE4(i),
        GT_TAX_LINE_USER_ATTRIBUTE5(i),
        GT_TAX_LINE_USER_ATTRIBUTE6(i),
        GT_TAX_LINE_USER_ATTRIBUTE7(i),
        GT_TAX_LINE_USER_ATTRIBUTE8(i),
        GT_TAX_LINE_USER_ATTRIBUTE9(i),
        GT_TAX_LINE_USER_ATTRIBUTE10(i),
        GT_TAX_LINE_USER_ATTRIBUTE11(i),
        GT_TAX_LINE_USER_ATTRIBUTE12(i),
        GT_TAX_LINE_USER_ATTRIBUTE13(i),
        GT_TAX_LINE_USER_ATTRIBUTE14(i),
        GT_TAX_LINE_USER_ATTRIBUTE15(i),
        GT_APPLICATION_ID(i),
        GT_DOC_EVENT_STATUS(i),
        GT_APPLICATION_DOC_STATUS(i),
        GT_ESTABLISHMENT_ID(i),
        GT_EXTRACT_SOURCE_LEDGER(i),
      --  GT_FUNCTIONAL_CURRECNY_CODE(i),
      --  GT_LEDGER_NAME(i),
        GT_MINIMUM_ACCOUNTABLE_UNIT(i),
        GT_PRECISION(i),
        GT_RECEIPT_CLASS_ID(i),
        GT_APPLIED_TO_APPLICATION_ID(i),
        GT_APPLIED_TO_TRX_LINE_ID(i),
        GT_APPLIED_TO_ENTITY_CODE(i),
        GT_APPLIED_TO_TRX_ID(i),
        GT_APPLIED_TO_EVENT_CLS_CODE(i),
        GT_APPLIED_TO_TRX_NUMBER(i),
        GT_RELATED_DOC_APPLICATION_ID(i),
        GT_RELATED_DOC_DATE(i),
        GT_RELATED_DOC_ENTITY_CODE(i),
        GT_RELATED_DOC_EVENT_CLS_CODE(i),
        GT_RELATED_DOC_NUMBER(i),
        GT_RELATED_DOC_TRX_ID(i),
        GT_ADJUSTED_DOC_APPL_ID(i),
        GT_ADJUSTED_DOC_DATE(i),
        GT_REF_DOC_APPLICATION_ID(i),
        GT_REF_DOC_ENTITY_CODE(i),
        GT_REF_DOC_EVENT_CLASS_CODE(i),
        GT_REF_DOC_LINE_ID(i),
        GT_REF_DOC_LINE_QUANTITY(i),
        GT_REF_DOC_TRX_ID(i),
        GT_DEF_REC_SETTLEMENT_OPT_CD(i),
        GT_DEFAULT_TAXATION_COUNTRY(i),
        GT_DOCUMENT_SUB_TYPE(i),
        GT_TRX_BUSINESS_CATEGORY(i),
        GT_LINE_INTENDED_USE(i),
        GT_PRODUCT_CATEGORY(i),
        GT_PROD_FISC_CLASSIFICATION(i),
        GT_SUPPLIER_EXCHANGE_RATE(i),
        GT_SUPPLIER_TAX_INVOICE_DATE(i),
        GT_SUPPLIER_TAX_INVOICE_NUM(i),
        GT_USER_DEFINED_FISC_CLASS(i),
        GT_EXCEPTION_RATE(i),
        GT_EXEMPT_RATE_MODIFIER(i),
        GT_ORIG_TAX_AMT(i),
        GT_ORIG_TAX_AMT_TAX_CURR(i),
        GT_ORIG_TAXABLE_AMT(i),
        GT_ORIG_TAXABLE_AMT_TAX_CURR(i),
        GT_RECOVERY_RATE_CODE(i),
        GT_TAX_AMT_TAX_CURR(i),
        GT_TAX_APPORTIONMENT_LINE_NUM(i),
        GT_TAX_CURRENCY_CODE(i),
        GT_TAX_DATE(i),
        GT_TAX_DETERMINE_DATE(i),
        GT_TAX_INVOICE_DATE(i),
        GT_TAX_INVOICE_NUMBER(i),
        GT_TAX_JURISDICTION_CODE(i),
        GT_TAX_REGIME_CODE(i),
        GT_TAX_STATUS_CODE(i),
        GT_SHIP_FROM_PTY_TAX_PROF_ID(i),
        GT_SHIP_FROM_SITE_TAX_PROF_ID(i),
        GT_SHIP_TO_PARTY_TAX_PROF_ID(i),
        GT_SHIP_TO_SITE_TAX_PROF_ID(i),
        GT_BILL_TO_PTY_TAX_PROF_ID(i),
        GT_BILL_TO_SITE_TAX_PROF_ID(i),
        GT_SHIPPING_TP_ADDRESS_ID(i),    --SHIP_THIRD_PTY_ACCT_SITE_ID
        GT_BILLING_TP_ADDRESS_ID(i),
        GT_SHIPPING_TP_SITE_ID(i),
        GT_BILLING_TP_SITE_ID(i),
        GT_SHIPPING_TP_ID(i),
        GT_BILLING_TRADING_PARTNER_ID(i),
        GT_HQ_ESTB_REG_NUMBER(i),
        GT_LEGAL_ENTITY_TAX_REG_NUM(i),
        GT_OWN_HQ_PARTY_SITE_PROF_ID(i),
        GT_OWN_HQ_PARTY_TAX_PROF_ID(i),
        GT_PORT_OF_ENTRY_CODE(i),
        GT_REGISTRATION_PARTY_TYPE(i),
        GT_HISTORICAL_FLAG(i),
        GT_MRC_TAX_LINE_FLAG(i),
     --   GT_POSTED_FLAG(i),
        GT_REPORTING_ONLY_FLAG(i),
        GT_TAX_AMT_INCLUDED_FLAG(i),
        GT_TAX_ONLY_LINE_FLAG(i),
        GT_EVENT_CLASS_MAPPING_ID(i),
        GT_TRX_LEVEL_TYPE(i),
        GT_PLACE_OF_SUPPLY_TYPE_CODE(i),
        GT_POA_LOCATION_ID(i),
        GT_POO_LOCATION_ID(i),
        GT_DEF_PLACE_OF_SUP_TYPE_CODE(i),
        GT_LINE_AMT(i),
        GT_TAX_PROVIDER_ID(i),
        G_CREATED_BY ,
        G_CREATION_DATE ,
        G_LAST_UPDATED_BY,
        G_LAST_UPDATE_DATE,
        G_LAST_UPDATE_LOGIN,
        g_request_id,
        GT_AR_CASH_RCPT_RVRS_DATE(i),
        GT_AR_CASH_RCPT_RVRS_STATUS(i),
        GT_ACCTD_AMOUNT_CR(i),
        GT_ACCTD_AMOUNT_DR(i),
        GT_REC_APPLICATION_STATUS(i),
        GT_ACCOUNT_CLASS(i),
        GT_LATEST_REC_FLAG(i));
/*
        GT_LEDGER_ID(i),
        GT_TRX_ID(i),
        GT_DOC_SEQ_ID(i),
        GT_DOC_SEQ_NAME(i),
        GT_TRX_TYPE_ID(i),
        GT_LINE_CLASS(i),
        GT_EVENT_CLASS_CODE(i),
        GT_APPLIED_FROM_ENTITY_CODE(i),
        GT_APPLIED_FROM_TRX_ID(i),
        GT_APPLIED_FROM_EVENT_CLS_CD(i),
        GT_ADJUSTED_DOC_ENTITY_CODE(i),
        GT_ADJUSTED_DOC_TRX_ID(i),
        GT_ADJUSTED_DOC_EVENT_CLS_CD(i),
        GT_ADJUSTED_DOC_NUMBER(i),
        GT_BATCH_SOURCE_ID(i),
        GT_TAX_RATE_ID(i),
        g_register_type,
       -- GT_TAX_RATE_REG_TYPE_CODE(i),
        GT_PRODUCT_ID(i),
        GT_PRODUCT_DESCRIPTION(i),
        GT_TAXABLE_LINE_SOURCELE(i),
        GT_TAXABLE_ITEM_SOURCE_ID(i),
        GT_TAX_EXEMPTION_ID(i),
        GT_TAX_EXCEPTION_ID(i),
        GT_TAXABLE_LINE_TOTAL_AMOUNT(i),
        GT_TAX_LINE_ID(i),
        GT_TAX_AMT(i),
        GT_TAX_AMT_FUNCL_CURR(i),
        GT_TAX_LINE_NUMBER(i),
        GT_TAXABLE_AMT(i),
        GT_TAXABLE_AMT_FUNCL_CURR(i),
        GT_TRX_LINE_ID(i),
        GT_TRX_LINE_QUANTITY(i),
        GT_EXEMPT_CERTIFICATE_NUMBER(i),
        GT_EXEMPT_REASON_CODE(i),
        GT_TAX_EXCEPTION_REASON_CODE(i),
        GT_UOM_CODE(i),
        GT_RECONCILIATION_FLAG(i),
        GT_INTERNAL_ORGANIZATION_ID(i),
        GT_BR_REF_CUSTOMER_TRX_ID(i),
        GT_REVERSE_FLAG(i),   -- REVERSAL_DATE    Check this column
        GT_AMOUNT_APPLIED(i),
        GT_TAX_APPLIED(i),
        GT_TAX_RATE(i),
        GT_TAX_RATE_CODE(i),
        GT_TAX_RATE_VAT_TRX_TYPE_CODE(i),
        GT_TAX_TYPE_CODE(i),
        GT_TAX_RATE_CODE_NAME(i),     --  Do we need to rename tax_rate_name?
        GT_TRX_NUMBER(i),
        GT_TRX_DESCRIPTION(i),
        GT_DOC_SEQ_VALUE(i),
        GT_TRX_DATE(i),
        GT_DEPOSIT_DATE(i),
        GT_TRX_DUE_DATE(i),
        GT_TRX_SHIPPING_DATE(i),
        GT_TRX_COMMUNICATED_DATE(i),
        GT_TRX_CURRENCY_CODE(i),
        GT_CURRENCY_CONVERSION_TYPE(i),
        GT_CURRENCY_CONVERSION_DATE(i),
        GT_CURRENCY_CONVERSION_RATE(i),
        GT_TRX_SIC_CODE(i),
        GT_FOB_POINT(i),
        GT_TRX_WAYBILL_NUMBER(i),
        GT_TRX_BATCH_SOURCE_NAME(i),
        GT_TRX_TYPE_DESCRIPTION(i),
        GT_TAX_RATE_CODE_DESCRIPTION(i),
        GT_TRX_LINE_DESCRIPTION(i),
        GT_TRX_LINE_NUMBER(i),
        GT_TRX_LINE_TYPE(i),
        GT_TAX_LINE_USER_CATEGORY(i),
        GT_TAX_LINE_USER_ATTRIBUTE1(i),
        GT_TAX_LINE_USER_ATTRIBUTE2(i),
        GT_TAX_LINE_USER_ATTRIBUTE3(i),
        GT_TAX_LINE_USER_ATTRIBUTE4(i),
        GT_TAX_LINE_USER_ATTRIBUTE5(i),
        GT_TAX_LINE_USER_ATTRIBUTE6(i),
        GT_TAX_LINE_USER_ATTRIBUTE7(i),
        GT_TAX_LINE_USER_ATTRIBUTE8(i),
        GT_TAX_LINE_USER_ATTRIBUTE9(i),
        GT_TAX_LINE_USER_ATTRIBUTE10(i),
        GT_TAX_LINE_USER_ATTRIBUTE11(i),
        GT_TAX_LINE_USER_ATTRIBUTE12(i),
        GT_TAX_LINE_USER_ATTRIBUTE13(i),
        GT_TAX_LINE_USER_ATTRIBUTE14(i),
        GT_TAX_LINE_USER_ATTRIBUTE15(i),
        GT_APPLICATION_ID(i),
        GT_DOC_EVENT_STATUS(i),
        GT_APPLICATION_DOC_STATUS(i),
        GT_ESTABLISHMENT_ID(i),
        GT_EXTRACT_SOURCE_LEDGER(i),
      --  GT_FUNCTIONAL_CURRECNY_CODE(i),
      --  GT_LEDGER_NAME(i),
        GT_MINIMUM_ACCOUNTABLE_UNIT(i),
        GT_PRECISION(i),
        GT_RECEIPT_CLASS_ID(i),
        GT_APPLIED_TO_APPLICATION_ID(i),
        GT_APPLIED_TO_TRX_LINE_ID(i),
        GT_APPLIED_TO_ENTITY_CODE(i),
        GT_APPLIED_TO_TRX_ID(i),
        GT_APPLIED_TO_EVENT_CLS_CODE(i),
        GT_APPLIED_TO_TRX_NUMBER(i),
        GT_RELATED_DOC_APPLICATION_ID(i),
        GT_RELATED_DOC_DATE(i),
        GT_RELATED_DOC_ENTITY_CODE(i),
        GT_RELATED_DOC_EVENT_CLS_CODE(i),
        GT_RELATED_DOC_NUMBER(i),
        GT_RELATED_DOC_TRX_ID(i),
        GT_ADJUSTED_DOC_APPL_ID(i),
        GT_ADJUSTED_DOC_DATE(i),
        GT_REF_DOC_APPLICATION_ID(i),
        GT_REF_DOC_ENTITY_CODE(i),
        GT_REF_DOC_EVENT_CLASS_CODE(i),
        GT_REF_DOC_LINE_ID(i),
        GT_REF_DOC_LINE_QUANTITY(i),
        GT_REF_DOC_TRX_ID(i),
        GT_DEF_REC_SETTLEMENT_OPT_CD(i),
        GT_DEFAULT_TAXATION_COUNTRY(i),
        GT_DOCUMENT_SUB_TYPE(i),
        GT_TRX_BUSINESS_CATEGORY(i),
        GT_LINE_INTENDED_USE(i),
        GT_PRODUCT_CATEGORY(i),
        GT_PROD_FISC_CLASSIFICATION(i),
        GT_SUPPLIER_EXCHANGE_RATE(i),
        GT_SUPPLIER_TAX_INVOICE_DATE(i),
        GT_SUPPLIER_TAX_INVOICE_NUM(i),
        GT_USER_DEFINED_FISC_CLASS(i),
        GT_EXCEPTION_RATE(i),
        GT_EXEMPT_RATE_MODIFIER(i),
        GT_ORIG_TAX_AMT(i),
        GT_ORIG_TAX_AMT_TAX_CURR(i),
        GT_ORIG_TAXABLE_AMT(i),
        GT_ORIG_TAXABLE_AMT_TAX_CURR(i),
        GT_RECOVERY_RATE_CODE(i),
        GT_TAX_AMT_TAX_CURR(i),
        GT_TAX_APPORTIONMENT_LINE_NUM(i),
        GT_TAX_CURRENCY_CODE(i),
        GT_TAX_DATE(i),
        GT_TAX_DETERMINE_DATE(i),
        GT_TAX_INVOICE_DATE(i),
        GT_TAX_INVOICE_NUMBER(i),
        GT_TAX_JURISDICTION_CODE(i),
        GT_TAX_REGIME_CODE(i),
        GT_TAX_STATUS_CODE(i),
        GT_SHIP_FROM_PTY_TAX_PROF_ID(i),
        GT_SHIP_FROM_SITE_TAX_PROF_ID(i),
        GT_SHIP_TO_PARTY_TAX_PROF_ID(i),
        GT_SHIP_TO_SITE_TAX_PROF_ID(i),
        GT_BILL_TO_PTY_TAX_PROF_ID(i),
        GT_BILL_TO_SITE_TAX_PROF_ID(i),
        GT_HQ_ESTB_REG_NUMBER(i),
        GT_LEGAL_ENTITY_TAX_REG_NUM(i),
        GT_OWN_HQ_PARTY_SITE_PROF_ID(i),
        GT_OWN_HQ_PARTY_TAX_PROF_ID(i),
        GT_PORT_OF_ENTRY_CODE(i),
        GT_REGISTRATION_PARTY_TYPE(i),
        GT_HISTORICAL_FLAG(i),
        GT_MRC_TAX_LINE_FLAG(i),
     --   GT_POSTED_FLAG(i),
        GT_REPORTING_ONLY_FLAG(i),
        GT_TAX_AMT_INCLUDED_FLAG(i),
        GT_TAX_ONLY_LINE_FLAG(i));
*/
    IF (g_level_procedure >= g_current_runtime_level ) THEN
       FND_LOG.STRING(g_level_procedure, 'ZX.TRL.ZX_AR_ACTG_EXTRACT_PKG.INSERT_AR_TRX_INFO',
                      'Number of AR rows successfully inserted = '||TO_CHAR(NVL(GT_LEDGER_ID.COUNT, 0)));
        FND_LOG.STRING(g_level_procedure, 'ZX.TRL.ZX_AR_ACTG_EXTRACT_PKG.INSERT_AR_TRX_INFO.END',
                                      'ZX_AR_ACTG_EXTRACT_PKG: INSERT_AR_TRX_INFO(-)');
    END IF;
    FORALL i IN 1 .. l_count
    INSERT INTO ZX_REP_ACTG_EXT_T(
        actg_ext_line_id,
        detail_tax_line_id,
        actg_event_type_code,
        actg_event_number,
        actg_event_status_flag,
        actg_category_code,
        accounting_date,
        gl_transfer_flag,
       -- gl_transfer_run_id,
        actg_header_description,
        actg_line_num,
        actg_line_type_code,
        actg_line_description,
        actg_stat_amt,
        actg_error_code,
        gl_transfer_code,
        actg_doc_sequence_id,
      --  actg_doc_sequence_name,
        actg_doc_sequence_value,
        actg_party_id,
        actg_party_site_id,
        actg_party_type,
        actg_event_id,
        actg_header_id,
        actg_source_id,
       -- actg_source_table,
        actg_line_ccid,
        period_name,
        created_by,
        creation_date,
        last_updated_by,
        last_update_date,
        last_update_login,
        program_application_id,
        program_id,
        program_login_id)
VALUES (zx_rep_actg_ext_t_s.nextval,
        gt_detail_tax_line_id(i),
        gt_actg_event_type_code(i),
        gt_actg_event_number(i),
        gt_actg_event_status_flag(i),
        gt_actg_category_code(i),
        gt_accounting_date(i),
        gt_gl_transfer_flag(i),
     --   gt_gl_transfer_run_id(i),
        gt_actg_header_description(i),
        gt_actg_line_num(i),
        gt_actg_line_type_code(i),
        gt_actg_line_description(i),
        gt_actg_stat_amt(i),
        gt_actg_error_code(i),
        gt_gl_transfer_code(i),
        gt_actg_doc_sequence_id(i),
       -- gt_actg_doc_sequence_name(i),
        gt_actg_doc_sequence_value(i),
        gt_actg_party_id(i),
        gt_actg_party_site_id(i),
        gt_actg_party_type(i),
        gt_actg_event_id(i),
        gt_actg_header_id(i),
        gt_actg_source_id(i),
       -- gt_actg_source_table(i),
        gt_actg_line_ccid(i),
        gt_period_name(i),
        g_created_by,
        g_creation_date,
        g_last_updated_by,
        g_last_update_date,
        g_last_update_login,
        g_program_application_id,
        g_program_id,
        g_program_login_id);

 EXCEPTION
  WHEN OTHERS THEN
    g_error_buffer  := sqlcode || ': ' || SUBSTR(SQLERRM, 1, 80);
    FND_MESSAGE.SET_NAME('ZX','GENERIC_MESSAGE');
    FND_MESSAGE.SET_TOKEN('GENERIC_TEXT','INSERT_AR_TRX_INFO- '|| g_error_buffer);
    FND_MSG_PUB.Add;
    IF (g_level_unexpected >= g_current_runtime_level ) THEN
      FND_LOG.STRING(g_level_unexpected,
                     'ZX.TRL.ZX_EXTRACT_PKG.INSERT_AR_TRX_INFO',
                      g_error_buffer);
    END IF;
    g_retcode := 2;

END INSERT_AR_TRX_INFO;

/*===========================================================================+
 | PROCEDURE                                                                 |
 |   INIT_AR_GT_TABLES                                                          |
 | DESCRIPTION                                                               |
 |    This proceure initializes all GT tables used to hold data fetched      |
 |    from the execute sql for AP, AR and GL                                 |
 |                                                                           |
 | SCOPE - Private                                                           |
 |                                                                           |
 | NOTES                                                                     |
 |                                                                           |
 | MODIFICATION HISTORY                                                      |
 |   4-AUG-03   Phong La     Created                                         |
 |  07-OCT-03   Phong La     Bugfix 3175265 added initialize tables for      |
 |                           GL_POSTED_DATE, PRECISION, EXCHANGE_RATE,       |
 |                           MINIMUM_ACCOUNTABLE_UNIT, ORG_ID,               |
 |                           BALANCING_SEGMENT_VALUE, TAX_CODE_TYPE_CODE,    |
 |                           AL_JOURNAL_SEQUENCE_ID                          |
 |                                                                           |
 +===========================================================================*/

PROCEDURE INIT_AR_GT_TABLES  IS
BEGIN

        GT_LEDGER_ID.DELETE;
        GT_TRX_ID.DELETE;
        GT_DOC_SEQ_ID.DELETE;
        GT_DOC_SEQ_NAME.DELETE;
        GT_TRX_TYPE_ID.DELETE;
        GT_LINE_CLASS.DELETE;
        GT_EVENT_CLASS_CODE.DELETE;
        GT_APPLIED_FROM_ENTITY_CODE.DELETE;
        GT_APPLIED_FROM_TRX_ID.DELETE;
        GT_APPLIED_FROM_EVENT_CLS_CD.DELETE;
        GT_ADJUSTED_DOC_ENTITY_CODE.DELETE;
        GT_ADJUSTED_DOC_TRX_ID.DELETE;
        GT_ADJUSTED_DOC_EVENT_CLS_CD.DELETE;
        GT_ADJUSTED_DOC_NUMBER.DELETE;
        GT_BATCH_SOURCE_ID.DELETE;
        GT_TAX_RATE_ID.DELETE;
        GT_TAX_RATE_REG_TYPE_CODE.DELETE;   --Check this
        GT_PRODUCT_ID.DELETE;
        GT_PRODUCT_DESCRIPTION.DELETE;
        GT_TAXABLE_LINE_SOURCELE.DELETE;
        GT_TAXABLE_ITEM_SOURCE_ID.DELETE;
        GT_TAX_EXEMPTION_ID.DELETE;
        GT_TAX_EXCEPTION_ID.DELETE;
        GT_TAXABLE_LINE_TOTAL_AMOUNT.DELETE;
        GT_TAX_LINE_ID.DELETE;
        GT_TAX_AMT.DELETE;
        GT_TAX_AMT_FUNCL_CURR.DELETE;
        GT_TAX_LINE_NUMBER.DELETE;
        GT_TAXABLE_AMT.DELETE;
        GT_TAXABLE_AMT_FUNCL_CURR.DELETE;
        GT_TRX_LINE_ID.DELETE;
        GT_TRX_LINE_QUANTITY.DELETE;
        GT_EXEMPT_CERTIFICATE_NUMBER.DELETE;
        GT_EXEMPT_REASON_CODE.DELETE;
        GT_TAX_EXCEPTION_REASON_CODE.DELETE;
        GT_UOM_CODE.DELETE;
        GT_RECONCILIATION_FLAG.DELETE;
        GT_INTERNAL_ORGANIZATION_ID.DELETE;
        GT_BR_REF_CUSTOMER_TRX_ID.DELETE;
     --   GT_REVERSE_FLAG.DELETE;     --REVERSAL_DATE    Check this column
        GT_AMOUNT_APPLIED.DELETE;
        GT_TAX_APPLIED.DELETE;
        GT_TAX_RATE.DELETE;
        GT_TAX_RATE_CODE.DELETE;
        GT_TAX_RATE_VAT_TRX_TYPE_CODE.DELETE;
        GT_TAX_TYPE_CODE.DELETE;
        GT_TAX_RATE_CODE_NAME.DELETE;     --  Do we need to rename tax_rate_name?
        GT_TRX_NUMBER.DELETE;
        GT_TRX_DESCRIPTION.DELETE;
        GT_DOC_SEQ_VALUE.DELETE;
        GT_TRX_DATE.DELETE;
        GT_DEPOSIT_DATE.DELETE;
        GT_TRX_DUE_DATE.DELETE;
        GT_TRX_SHIPPING_DATE.DELETE;
        GT_TRX_COMMUNICATED_DATE.DELETE;
        GT_TRX_CURRENCY_CODE.DELETE;
        GT_CURRENCY_CONVERSION_TYPE.DELETE;
        GT_CURRENCY_CONVERSION_DATE.DELETE;
        GT_CURRENCY_CONVERSION_RATE.DELETE;
        GT_TRX_SIC_CODE.DELETE;
        GT_FOB_POINT.DELETE;
        GT_TRX_WAYBILL_NUMBER.DELETE;
        GT_TRX_BATCH_SOURCE_NAME.DELETE;
        GT_TRX_TYPE_DESCRIPTION.DELETE;
       -- GT_TAX_RATE_CODE_DESCRIPTION.DELETE; --populate
        GT_TRX_LINE_DESCRIPTION.DELETE;
        GT_TRX_LINE_NUMBER.DELETE;
        GT_TRX_LINE_TYPE.DELETE;
        GT_TAX_LINE_USER_CATEGORY.DELETE;
        GT_TAX_LINE_USER_ATTRIBUTE1.DELETE;
        GT_TAX_LINE_USER_ATTRIBUTE2.DELETE;
        GT_TAX_LINE_USER_ATTRIBUTE3.DELETE;
        GT_TAX_LINE_USER_ATTRIBUTE4.DELETE;
        GT_TAX_LINE_USER_ATTRIBUTE5.DELETE;
        GT_TAX_LINE_USER_ATTRIBUTE6.DELETE;
        GT_TAX_LINE_USER_ATTRIBUTE7.DELETE;
        GT_TAX_LINE_USER_ATTRIBUTE8.DELETE;
        GT_TAX_LINE_USER_ATTRIBUTE9.DELETE;
        GT_TAX_LINE_USER_ATTRIBUTE10.DELETE;
        GT_TAX_LINE_USER_ATTRIBUTE11.DELETE;
        GT_TAX_LINE_USER_ATTRIBUTE12.DELETE;
        GT_TAX_LINE_USER_ATTRIBUTE13.DELETE;
        GT_TAX_LINE_USER_ATTRIBUTE14.DELETE;
        GT_TAX_LINE_USER_ATTRIBUTE15.DELETE;
        GT_APPLICATION_ID.DELETE;
        GT_DOC_EVENT_STATUS.DELETE;
        GT_APPLICATION_DOC_STATUS.DELETE;
        GT_ESTABLISHMENT_ID.DELETE;
        GT_EXTRACT_SOURCE_LEDGER.DELETE;
      --  GT_FUNCTIONAL_CURRECNY_CODE.DELETE;
      --  GT_LEDGER_NAME.DELETE;
        GT_MINIMUM_ACCOUNTABLE_UNIT.DELETE;
        GT_PRECISION.DELETE;
        GT_RECEIPT_CLASS_ID.DELETE;
        GT_APPLIED_TO_APPLICATION_ID.DELETE;
        GT_APPLIED_TO_TRX_LINE_ID.DELETE;
        GT_APPLIED_TO_ENTITY_CODE.DELETE;
        GT_APPLIED_TO_TRX_ID.DELETE;
        GT_APPLIED_TO_EVENT_CLS_CODE.DELETE;
        GT_APPLIED_TO_TRX_NUMBER.DELETE;
        GT_RELATED_DOC_APPLICATION_ID.DELETE;
        GT_RELATED_DOC_DATE.DELETE;
        GT_RELATED_DOC_ENTITY_CODE.DELETE;
        GT_RELATED_DOC_EVENT_CLS_CODE.DELETE;
        GT_RELATED_DOC_NUMBER.DELETE;
        GT_RELATED_DOC_TRX_ID.DELETE;
        GT_ADJUSTED_DOC_APPL_ID.DELETE;
        GT_ADJUSTED_DOC_DATE.DELETE;
        GT_REF_DOC_APPLICATION_ID.DELETE;
        GT_REF_DOC_ENTITY_CODE.DELETE;
        GT_REF_DOC_EVENT_CLASS_CODE.DELETE;
        GT_REF_DOC_LINE_ID.DELETE;
        GT_REF_DOC_LINE_QUANTITY.DELETE;
        GT_REF_DOC_TRX_ID.DELETE;
        GT_DEF_REC_SETTLEMENT_OPT_CD.DELETE;
        GT_DEFAULT_TAXATION_COUNTRY.DELETE;
        GT_DOCUMENT_SUB_TYPE.DELETE;
        GT_TRX_BUSINESS_CATEGORY.DELETE;
        GT_LINE_INTENDED_USE.DELETE;
        GT_PRODUCT_CATEGORY.DELETE;
        GT_PROD_FISC_CLASSIFICATION.DELETE;
        GT_SUPPLIER_EXCHANGE_RATE.DELETE;
        GT_SUPPLIER_TAX_INVOICE_DATE.DELETE;
        GT_SUPPLIER_TAX_INVOICE_NUM.DELETE;
        GT_USER_DEFINED_FISC_CLASS.DELETE;
        GT_EXCEPTION_RATE.DELETE;
        GT_EXEMPT_RATE_MODIFIER.DELETE;
        GT_ORIG_TAX_AMT.DELETE;
        GT_ORIG_TAX_AMT_TAX_CURR.DELETE;
        GT_ORIG_TAXABLE_AMT.DELETE;
        GT_ORIG_TAXABLE_AMT_TAX_CURR.DELETE;
        GT_RECOVERY_RATE_CODE.DELETE;
        GT_TAX_AMT_TAX_CURR.DELETE;
        GT_TAX_APPORTIONMENT_LINE_NUM.DELETE;
        GT_TAX_CURRENCY_CODE.DELETE;
        GT_TAX_DATE.DELETE;
        GT_TAX_DETERMINE_DATE.DELETE;
        GT_TAX_INVOICE_DATE.DELETE;
        GT_TAX_INVOICE_NUMBER.DELETE;
        GT_TAX_JURISDICTION_CODE.DELETE;
        GT_TAX_REGIME_CODE.DELETE;
        GT_TAX_STATUS_CODE.DELETE;
        GT_SHIP_FROM_PTY_TAX_PROF_ID.DELETE;
        GT_SHIP_FROM_SITE_TAX_PROF_ID.DELETE;
        GT_SHIP_TO_PARTY_TAX_PROF_ID.DELETE;
        GT_SHIP_TO_SITE_TAX_PROF_ID.DELETE;
        GT_BILL_TO_PTY_TAX_PROF_ID.DELETE;
        GT_BILL_TO_SITE_TAX_PROF_ID.DELETE;
        GT_HQ_ESTB_REG_NUMBER.DELETE;
        GT_LEGAL_ENTITY_TAX_REG_NUM.DELETE;
        GT_OWN_HQ_PARTY_SITE_PROF_ID.DELETE;
        GT_OWN_HQ_PARTY_TAX_PROF_ID.DELETE;
        GT_PORT_OF_ENTRY_CODE.DELETE;
        GT_REGISTRATION_PARTY_TYPE.DELETE;
        GT_HISTORICAL_FLAG.DELETE;
        GT_MRC_TAX_LINE_FLAG.DELETE;
     --   GT_POSTED_FLAG.DELETE;
        GT_REPORTING_ONLY_FLAG.DELETE;
        GT_TAX_AMT_INCLUDED_FLAG.DELETE;
        GT_TAX_ONLY_LINE_FLAG.DELETE;
--      GT_SHIP_FROM_PTY_TAX_PROF_ID.DELETE;
--      GT_SHIP_FROM_SITE_TAX_PROF_ID.DELETE;
--      GT_SHIP_TO_PARTY_TAX_PROF_ID.DELETE;
--      GT_SHIP_TO_SITE_TAX_PROF_ID.DELETE;
--      GT_BILL_FROM_PTY_TAX_PROF_ID.DELETE;
--      GT_BILL_FROM_SITE_TAX_PROF_ID.DELETE;
        GT_EVENT_CLASS_MAPPING_ID.DELETE;
        GT_TRX_LEVEL_TYPE.DELETE;
        GT_PLACE_OF_SUPPLY_TYPE_CODE.DELETE;
        GT_POA_LOCATION_ID.DELETE;
        GT_POO_LOCATION_ID.DELETE;
        GT_DEF_PLACE_OF_SUP_TYPE_CODE.DELETE;
        GT_LINE_AMT.DELETE;
        GT_TAX_PROVIDER_ID.DELETE;
                gt_actg_ext_line_id.delete;
        gt_detail_tax_line_id.delete;
        gt_actg_event_type_code.delete;
        gt_actg_event_number.delete;
        gt_actg_event_status_flag.delete;
        gt_actg_category_code.delete;
        gt_accounting_date.delete;
        gt_gl_transfer_flag.delete;
        gt_gl_transfer_run_id.delete;
        gt_actg_header_description.delete;
        gt_actg_line_num.delete;
        gt_actg_line_type_code.delete;
        gt_actg_line_description.delete;
        gt_actg_stat_amt.delete;
        gt_actg_error_code.delete;
        gt_gl_transfer_code.delete;
        gt_actg_doc_sequence_id.delete;
        gt_actg_doc_sequence_name.delete;
        gt_actg_doc_sequence_value.delete;
        gt_actg_party_id.delete;
        gt_actg_party_site_id.delete;
        gt_actg_party_type.delete;
        gt_actg_event_id.delete;
        gt_actg_header_id.delete;
        gt_actg_source_id.delete;
        gt_actg_source_table.delete;
        gt_actg_line_ccid.delete;
        gt_period_name.delete;
        GT_AR_CASH_RCPT_RVRS_DATE.DELETE;
        GT_AR_CASH_RCPT_RVRS_STATUS.DELETE;
        GT_ACCTD_AMOUNT_CR.DELETE;
        GT_ACCTD_AMOUNT_DR.DELETE;
        GT_REC_APPLICATION_STATUS.DELETE;
        GT_ACCOUNT_CLASS.DELETE;
        GT_LATEST_REC_FLAG.DELETE;

  /*      gt_created_by.delete;
        gt_creation_date.delete;
        gt_last_updated_by.delete;
        gt_last_update_date.delete;
        gt_last_update_login.delete;
        gt_program_application_id.delete;
        gt_program_id.delete;
        gt_program_login_id.delete;*/

 /* PG_EXTRACT_REPORT_LINE_NUM_TAB.DELETE;
  PG_LEDGER_ID_TAB.DELETE;
  PG_MATRIX_REPORT_FLAG_TAB.DELETE;
  PG_TRX_ID_TAB.DELETE;
  PG_TRX_DOC_SEQUENCE_ID_TAB.DELETE;
  PG_TRX_DOC_SEQUENCE_NAME_TAB.DELETE;
  PG_TRX_TYPE_ID_TAB.DELETE;
  PG_TRX_CLASS_CODE_TAB.DELETE;
  PG_TRX_APPLIED_FRM_HDR_TBL_TAB.DELETE;
  PG_TRX_FRM_TRX_HDR_ID_TAB.DELETE;
  PG_TRX_APPLD_FRM_CLS_CD_TAB.DELETE;
  PG_TRX_APPLIED_TO_HDR_TBL_TAB.DELETE;
  PG_TRX_APPLD_TO_TRX_HDR_ID_TAB.DELETE;
  PG_TRX_APPLIED_TO_CLS_CD_TAB.DELETE;
  PG_TRX_APPLIED_TO_TRX_NUM_TAB.DELETE;
  PG_BILLING_TRDG_PTNR_ID_TAB.DELETE;
  PG_BILLING_TP_SITE_ID_TAB.DELETE;
  PG_BILLING_TP_ADDRESS_ID_TAB.DELETE;
  PG_SHIPPING_TRDG_PTNR_ID_TAB.DELETE;
  PG_SHIPPING_TP_SITE_ID_TAB.DELETE;
  PG_SHIPPING_TP_ADDRESS_ID_TAB.DELETE;
  PG_AR_TRX_BATCH_SOURCE_ID_TAB.DELETE;
  PG_TAX_CODE_ID_TAB.DELETE;
  PG_TAX_CODE_RGSTR_TYP_CD_TAB.DELETE;
  PG_TAX_OFFSET_TAX_CODE_ID_TAB.DELETE;
  PG_TAXABLE_LINE_ITEM_ID_TAB.DELETE;
  PG_TAXABLE_LINE_ITEM_DESC_TAB.DELETE;
  PG_TAXABLE_LINE_SOURCE_TBL_TAB.DELETE;
  PG_TAXABLE_ITEM_SOURCE_ID_TAB.DELETE;
  PG_TAX_EXEMPTION_ID_TAB.DELETE;
  PG_TAX_EXCEPTION_ID_TAB.DELETE;
  PG_TAXABLE_LINE_TOTAL_AMT_TAB.DELETE;
  PG_TAX_LINE_ID_TAB.DELETE;
  PG_TAX_ENTERED_DR_TAB.DELETE;
  PG_TAX_ENTERED_CR_TAB.DELETE;
  PG_TAX_ENTERED_AMOUNT_TAB.DELETE;
  PG_EXEMPT_ENTERED_AMOUNT_TAB.DELETE;
  PG_TAX_ACCOUNTED_DR_TAB.DELETE;
  PG_TAX_ACCOUNTED_CR_TAB.DELETE;
  PG_TAX_ACCOUNTED_AMOUNT_TAB.DELETE;
  PG_TAX_LINE_NUMBER_TAB.DELETE;
  PG_TAXABLE_ENTERED_DR_TAB.DELETE;
  PG_TAXABLE_ENTERED_CR_TAB.DELETE;
  PG_TAXABLE_AMOUNT_TAB.DELETE;
  PG_TAXABLE_ACCOUNTED_DR_TAB.DELETE;
  PG_TAXABLE_ACCOUNTED_CR_TAB.DELETE;
  PG_TAXABLE_ACCOUNTED_AMT_TAB.DELETE;
  PG_ACCTG_DIST_ID_TAB.DELETE;
  PG_AE_SOURCE_TABLE_TAB.DELETE;
  PG_AE_SOURCE_ID_TAB.DELETE;
  PG_AL_ACCOUNT_CCID_TAB.DELETE;
  PG_TRX_LINE_ID_TAB.DELETE;
  PG_TAXABLE_LINE_QUANTITY_TAB.DELETE;
  PG_BILLING_TP_SITE_NAME_TAB.DELETE;
  PG_BLNG_TP_SITE_TX_REG_NUM_TAB.DELETE;
  PG_SHIPPING_TP_SITE_NAME_TAB.DELETE;
  PG_SHP_TP_SITE_TAX_REG_NUM_TAB.DELETE;
  PG_TAX_EXEMPT_NUMBER_TAB.DELETE;
  PG_TAX_EXEMPT_REASON_CODE_TAB.DELETE;
  PG_TAX_EXCEPTN_REASN_CODE_TAB.DELETE;
  PG_TXBL_QUANTITY_UOM_CODE_TAB.DELETE;
  PG_RECONCILIATION_FLAG_TAB.DELETE;
  PG_ORG_ID_TAB.DELETE;
  PG_EXCHANGE_RATE_TAB.DELETE;
  PG_CURRENCY_CODE_TAB.DELETE;
  PG_ACCOUNTING_DATE_TAB.DELETE;
  PG_GL_POSTED_DATE_TAB.DELETE;
  PG_TAX_CLASS_TAB.DELETE;
  PG_TXBL_XMPT_TOT_ENTRD_AMT_TAB.DELETE;
  PG_BR_REF_CUSTOMER_TRX_ID_TAB.DELETE;
  PG_REVERSAL_DATE_TAB.DELETE;
  PG_AMOUNT_APPLIED_TAB.DELETE;
  PG_GDF_AR_VAT_TAX_ATT_CAT_TAB.DELETE;
  PG_GDF_AR_VAT_TAX_ATT1_TAB.DELETE;
  PG_GDF_AR_VAT_TAX_ATT4_TAB.DELETE;
  PG_GDF_AR_VAT_TAX_ATT6_TAB.DELETE;
  PG_TAX_RATE_TAB.DELETE;
  PG_ENABLED_FLAG_TAB.DELETE;
  PG_GDF_RA_BCH_SRC_ATT_CAT_TAB.DELETE;
  PG_GDF_RA_BATCH_SRC_ATT1_TAB.DELETE;
  PG_GDF_RA_BATCH_SRC_ATT3_TAB.DELETE;
  PG_GDF_RA_TRX_TYP_ATT_CAT_TAB.DELETE;
  PG_GDF_RA_TRX_TYPES_ATT1_TAB.DELETE;
  PG_GDF_RA_TRX_TYPES_ATT6_TAB.DELETE;
  PG_GDF_RA_TRX_TYPES_ATT7_TAB.DELETE;
  PG_GDF_RA_CUST_TRX_ATT_CAT_TAB.DELETE;
  PG_GDF_RA_CUST_TRX_ATT19_TAB.DELETE;
  PG_GDF_RA_CUST_TRX_ATT5_TAB.DELETE;
  PG_GDF_RA_CUST_TRX_ATT9_TAB.DELETE;
  PG_TAX1_CODE_TAB.DELETE;
  PG_TAX1_CD_VAT_TRX_TYPE_CD_TAB.DELETE;
  PG_TAX1_CODE_TYPE_MEANING_TAB.DELETE;
  PG_TAX1_CODE_TYPE_CODE_TAB.DELETE;
  PG_TAX1_CODE_NAME_TAB.DELETE;
  PG_TAX1_CODE_DESCRIPTION_TAB.DELETE;
  PG_TRX_NUMBER_TAB.DELETE;
  PG_TRX_DESCRIPTION_TAB.DELETE;
  PG_TRX_DOC_SEQUENCE_VALUE_TAB.DELETE;
  PG_TRX_DATE_TAB.DELETE;
  PG_TRX_HEADER_CATEGORY_TAB.DELETE;
  PG_TRX_HEADER_ATTRIBUTE1_TAB.DELETE;
  PG_TRX_HEADER_ATTRIBUTE2_TAB.DELETE;
  PG_TRX_HEADER_ATTRIBUTE3_TAB.DELETE;
  PG_TRX_HEADER_ATTRIBUTE4_TAB.DELETE;
  PG_TRX_HEADER_ATTRIBUTE5_TAB.DELETE;
  PG_TRX_HEADER_ATTRIBUTE6_TAB.DELETE;
  PG_TRX_HEADER_ATTRIBUTE7_TAB.DELETE;
  PG_TRX_HEADER_ATTRIBUTE8_TAB.DELETE;
  PG_TRX_HEADER_ATTRIBUTE9_TAB.DELETE;
  PG_TRX_HEADER_ATTRIBUTE10_TAB.DELETE;
  PG_TRX_HEADER_ATTRIBUTE11_TAB.DELETE;
  PG_TRX_HEADER_ATTRIBUTE12_TAB.DELETE;
  PG_TRX_HEADER_ATTRIBUTE13_TAB.DELETE;
  PG_TRX_HEADER_ATTRIBUTE14_TAB.DELETE;
  PG_TRX_HEADER_ATTRIBUTE15_TAB.DELETE;
  PG_TRX_DUE_DATE_TAB.DELETE;
  PG_TRX_SHIPPING_DATE_TAB.DELETE;
  PG_TRX_COMMUNICATED_DATE_TAB.DELETE;
  PG_TRX_CURRENCY_CODE_TAB.DELETE;
  PG_TRX_CURRENCY_CNVRSN_TYP_TAB.DELETE;
  PG_TRX_CURRENCY_CNVRSN_DT_TAB.DELETE;
  PG_TRX_CURRENCY_CNVRSN_RT_TAB.DELETE;
  PG_GDF_RA_CUST_TRX_ATT1_TAB.DELETE;
  PG_GDF_RA_CST_TRX_ATT1_DT_TAB.DELETE;
  PG_GDF_RA_CUST_TRX_ATT2_TAB.DELETE;
  PG_GDF_RA_CUST_TRX_ATT3_TAB.DELETE;
  PG_GDF_RA_CUST_TRX_ATT4_TAB.DELETE;
  PG_GDF_RA_CUST_TRX_ATT6_TAB.DELETE;
  PG_GDF_RA_CUST_TRX_ATT7_TAB.DELETE;
  PG_GDF_RA_CUST_TRX_ATT8_TAB.DELETE;
  PG_GDF_RA_CUST_TRX_ATT10_TAB.DELETE;
  PG_GDF_RA_CUST_TRX_ATT11_TAB.DELETE;
  PG_GDF_RA_CUST_TRX_ATT12_TAB.DELETE;
  PG_GDF_RA_CUST_TRX_ATT13_TAB.DELETE;
  PG_GDF_RA_CUST_TRX_ATT14_TAB.DELETE;
  PG_GDF_RA_CUST_TRX_ATT15_TAB.DELETE;
  PG_GDF_RA_CUST_TRX_ATT16_TAB.DELETE;
  PG_GDF_RA_CUST_TRX_ATT17_TAB.DELETE;
  PG_GDF_RA_CUST_TRX_ATT18_TAB.DELETE;
  PG_GDF_RA_CUST_TRX_ATT20_TAB.DELETE;
  PG_AR_TRX_SIC_CODE_TAB.DELETE;
  PG_AR_TRX_FOB_POINT_TAB.DELETE;
  PG_AR_TRX_WAYBILL_NUMBER_TAB.DELETE;
  PG_AR_TRX_POSTING_STATUS_TAB.DELETE;
  PG_AR_TRX_PURCHASE_ORDER_TAB.DELETE;
  PG_AR_TRX_PRCHS_ODR_RVS_TAB.DELETE;
  PG_AR_TRX_SALES_ORDER_TAB.DELETE;
  PG_AR_TRX_SALES_ODR_SRC_TAB.DELETE;
  PG_AR_TRX_SLS_ODR_RVS_TAB.DELETE;
  PG_AR_TRX_SALES_ORDER_DATE_TAB.DELETE;
  PG_AR_TRX_BATCH_SRC_NAME_TAB.DELETE;
  PG_GDF_RA_BTCH_SRC_ATT2_TAB.DELETE;
  PG_GDF_RA_BTCH_SRC_ATT4_TAB.DELETE;
  PG_GDF_RA_BTCH_SRC_ATT5_TAB.DELETE;
  PG_GDF_RA_BTCH_SRC_ATT6_TAB.DELETE;
  PG_TRX_TYPE_MEANING_TAB.DELETE;
  PG_TRX_TYPE_DESCRIPTION_TAB.DELETE;
  PG_GDF_RA_TRX_TYP_ATT2_TAB.DELETE;
  PG_GDF_RA_TRX_TYP_ATT3_TAB.DELETE;
  PG_GDF_RA_TRX_TYP_ATT4_TAB.DELETE;
  PG_GDF_RA_TRX_TYP_ATT5_TAB.DELETE;
  PG_GDF_RA_TRX_TYP_ATT10_TAB.DELETE;
  PG_GDF_RA_TRX_TYP_ATT20_TAB.DELETE;
  PG_TAX_CODE_DESCRIPTION_TAB.DELETE;
  PG_GDF_AR_VAT_TAX_ATT2_TAB.DELETE;
  PG_GDF_AR_VAT_TAX_ATT3_TAB.DELETE;
  PG_GDF_AR_VAT_TAX_ATT5_TAB.DELETE;
  PG_GDF_AR_VAT_TAX_ATT7_TAB.DELETE;
  PG_TAX_CODE_TAX_CLASS_CODE_TAB.DELETE;
  PG_TAX_CODE_TAB.DELETE;
  PG_TAX_CODE_RATE_TAB.DELETE;
  PG_TAX_CODE_TYPE_CODE_TAB.DELETE;
  PG_TAX_CD_VAT_TRX_TYP_CD_TAB.DELETE;
  PG_TAX_CODE_NAME_TAB.DELETE;
  PG_TAXABLE_LINE_DESC_TAB.DELETE;
  PG_TAXABLE_LN_ENTERED_AMT_TAB.DELETE;
  PG_TAXABLE_LINE_ACCTED_AMT_TAB.DELETE;
  PG_GDF_RA_TRX_LN_ATT_CAT_TAB.DELETE;
  PG_GDF_RA_TRX_LN_ATT1_TAB.DELETE;
  PG_GDF_RA_TRX_LN_ATT2_TAB.DELETE;
  PG_GDF_RA_TRX_LN_ATT3_TAB.DELETE;
  PG_GDF_RA_TRX_LN_ATT4_TAB.DELETE;
  PG_GDF_RA_TRX_LN_ATT5_TAB.DELETE;
  PG_GDF_RA_TRX_LN_ATT6_TAB.DELETE;
  PG_GDF_RA_TRX_LN_ATT7_TAB.DELETE;
  PG_GDF_RA_TRX_LN_ATT8_TAB.DELETE;
  PG_GDF_RA_TRX_LN_ATT9_TAB.DELETE;
  PG_GDF_RA_TRX_LN_ATT10_TAB.DELETE;
  PG_GDF_RA_TRX_LN_ATT11_TAB.DELETE;
  PG_GDF_RA_TRX_LN_ATT12_TAB.DELETE;
  PG_GDF_RA_TRX_LN_ATT13_TAB.DELETE;
  PG_GDF_RA_TRX_LN_ATT14_TAB.DELETE;
  PG_GDF_RA_TRX_LN_ATT15_TAB.DELETE;
  PG_GDF_RA_TRX_LN_ATT16_TAB.DELETE;
  PG_GDF_RA_TRX_LN_ATT17_TAB.DELETE;
  PG_GDF_RA_TRX_LN_ATT18_TAB.DELETE;
  PG_GDF_RA_TRX_LN_ATT19_TAB.DELETE;
  PG_GDF_RA_TRX_LN_ATT20_TAB.DELETE;
  PG_TAXABLE_LINE_NUMBER_TAB.DELETE;
  PG_TAXABLE_LINE_TYPE_CODE_TAB.DELETE;
  PG_TAXABLE_LN_TYPE_MNING_TAB.DELETE;
  PG_TAX_LINE_USER_CATEGORY_TAB.DELETE;
  PG_TAX_LN_USR_ATTRIB1_TAB.DELETE;
  PG_TAX_LN_USR_ATTRIB2_TAB.DELETE;
  PG_TAX_LN_USR_ATTRIB3_TAB.DELETE;
  PG_TAX_LN_USR_ATTRIB4_TAB.DELETE;
  PG_TAX_LN_USR_ATTRIB5_TAB.DELETE;
  PG_TAX_LN_USR_ATTRIB6_TAB.DELETE;
  PG_TAX_LN_USR_ATTRIB7_TAB.DELETE;
  PG_TAX_LN_USR_ATTRIB8_TAB.DELETE;
  PG_TAX_LN_USR_ATTRIB9_TAB.DELETE;
  PG_TAX_LN_USR_ATTRIB10_TAB.DELETE;
  PG_TAX_LN_USR_ATTRIB11_TAB.DELETE;
  PG_TAX_LN_USR_ATTRIB12_TAB.DELETE;
  PG_TAX_LN_USR_ATTRIB13_TAB.DELETE;
  PG_TAX_LN_USR_ATTRIB14_TAB.DELETE;
  PG_TAX_LN_USR_ATTRIB15_TAB.DELETE;
  PG_TAX_LN_EFCTV_TAX_RATE_TAB.DELETE;
  PG_AH_ACCOUNTING_DATE_TAB.DELETE;
 */

 EXCEPTION
  WHEN OTHERS THEN
    g_error_buffer  := sqlcode || ': ' || SUBSTR(SQLERRM, 1, 80);
    FND_MESSAGE.SET_NAME('ZX','GENERIC_MESSAGE');
    FND_MESSAGE.SET_TOKEN('GENERIC_TEXT','INIT_AR_GT_TABLES- '|| g_error_buffer);
    FND_MSG_PUB.Add;
    IF (g_level_unexpected >= g_current_runtime_level ) THEN
      FND_LOG.STRING(g_level_unexpected,
                     'ZX.TRL.ZX_EXTRACT_PKG.INIT_AR_GT_TABLES',
                      g_error_buffer);
    END IF;

    g_retcode := 2;
END INIT_AR_GT_TABLES;

/*===========================================================================+
 | FUNCTION                                                                  |
 |   ASSIGN_GLOBAL_VARIABLES_AR                                              |
 |                                                                           |
 | DESCRIPTION                                                               |
 |    Assign the global variable to the the output parameters.               |
 |    This procedure is used by AR procedures to get the global              |
 |    variable  values from Main package.                                    |
 |                                                                           |
 | SCOPE - Public                                                            |
 |                                                                           |
 | NOTES                                                                     |
 |                                                                           |
 | MODIFICATION HISTORY                                                      |
 |   21-Jan-2005  Srinivasa Rao Korrapati                                    |
 |                                                                           |
 +===========================================================================*/

PROCEDURE ASSIGN_AR_GLOBAL_VARIABLES (
  P_TRL_GLOBAL_VARIABLES_REC IN ZX_EXTRACT_PKG.TRL_GLOBAL_VARIABLES_REC_TYPE
) IS

BEGIN



    IF (g_level_procedure >= g_current_runtime_level ) THEN
        FND_LOG.STRING(g_level_procedure, 'ZX.TRL.ZX_AR_ACTG_EXTRACT_PKG.ASSIGN_AR_GLOBAL_VARIABLES.BEGIN',
                                      'ZX_AR_ACTG_EXTRACT_PKG:ASSIGN_AR_GLOBAL_VARIABLES(+)');
    END IF;

G_REPORTING_LEVEL		:=	P_TRL_GLOBAL_VARIABLES_REC.REPORTING_LEVEL;
G_REPORTING_CONTEXT		:=	P_TRL_GLOBAL_VARIABLES_REC.REPORTING_CONTEXT;
-- apai G_LEGAL_ENTITY_LEVEL		:=	P_TRL_GLOBAL_VARIABLES_REC.LEGAL_ENTITY_LEVEL;
G_LEGAL_ENTITY_ID		:=	P_TRL_GLOBAL_VARIABLES_REC.LEGAL_ENTITY_ID;
G_SUMMARY_LEVEL			:=	P_TRL_GLOBAL_VARIABLES_REC.SUMMARY_LEVEL;
G_LEDGER_ID			:=	P_TRL_GLOBAL_VARIABLES_REC.LEDGER_ID;
G_REGISTER_TYPE			:=	P_TRL_GLOBAL_VARIABLES_REC.REGISTER_TYPE;
G_PRODUCT			:=	P_TRL_GLOBAL_VARIABLES_REC.PRODUCT;
G_MATRIX_REPORT			:=	P_TRL_GLOBAL_VARIABLES_REC.MATRIX_REPORT;
G_CURRENCY_CODE_LOW		:=	P_TRL_GLOBAL_VARIABLES_REC.CURRENCY_CODE_LOW;
G_CURRENCY_CODE_HIGH		:=	P_TRL_GLOBAL_VARIABLES_REC.CURRENCY_CODE_HIGH;
G_INCLUDE_AP_STD_TRX_CLASS	:=	P_TRL_GLOBAL_VARIABLES_REC.INCLUDE_AP_STD_TRX_CLASS;
G_INCLUDE_AP_DM_TRX_CLASS	:=	P_TRL_GLOBAL_VARIABLES_REC.INCLUDE_AP_DM_TRX_CLASS;
G_INCLUDE_AP_CM_TRX_CLASS	:=	P_TRL_GLOBAL_VARIABLES_REC.INCLUDE_AP_CM_TRX_CLASS;
G_INCLUDE_AP_PREP_TRX_CLASS	:=	P_TRL_GLOBAL_VARIABLES_REC.INCLUDE_AP_PREP_TRX_CLASS;
G_INCLUDE_AP_MIX_TRX_CLASS	:=	P_TRL_GLOBAL_VARIABLES_REC.INCLUDE_AP_MIX_TRX_CLASS;
G_INCLUDE_AP_EXP_TRX_CLASS	:=	P_TRL_GLOBAL_VARIABLES_REC.INCLUDE_AP_EXP_TRX_CLASS;
G_INCLUDE_AP_INT_TRX_CLASS	:=	P_TRL_GLOBAL_VARIABLES_REC.INCLUDE_AP_INT_TRX_CLASS;
G_INCLUDE_AR_INV_TRX_CLASS	:=	P_TRL_GLOBAL_VARIABLES_REC.INCLUDE_AR_INV_TRX_CLASS;
G_INCLUDE_AR_APPL_TRX_CLASS	:=	P_TRL_GLOBAL_VARIABLES_REC.INCLUDE_AR_APPL_TRX_CLASS;
G_INCLUDE_AR_ADJ_TRX_CLASS	:=	P_TRL_GLOBAL_VARIABLES_REC.INCLUDE_AR_ADJ_TRX_CLASS;
G_INCLUDE_AR_MISC_TRX_CLASS	:=	P_TRL_GLOBAL_VARIABLES_REC.INCLUDE_AR_MISC_TRX_CLASS;
G_INCLUDE_AR_BR_TRX_CLASS	:=	P_TRL_GLOBAL_VARIABLES_REC.INCLUDE_AR_BR_TRX_CLASS;
G_INCLUDE_GL_MANUAL_LINES	:=	P_TRL_GLOBAL_VARIABLES_REC.INCLUDE_GL_MANUAL_LINES;
G_TRX_NUMBER_LOW		:=	P_TRL_GLOBAL_VARIABLES_REC.TRX_NUMBER_LOW;
G_TRX_NUMBER_HIGH		:=	P_TRL_GLOBAL_VARIABLES_REC.TRX_NUMBER_HIGH;
G_AR_TRX_PRINTING_STATUS	:=	P_TRL_GLOBAL_VARIABLES_REC.AR_TRX_PRINTING_STATUS;
G_AR_EXEMPTION_STATUS		:=	P_TRL_GLOBAL_VARIABLES_REC.AR_EXEMPTION_STATUS;
G_GL_DATE_LOW			:=	P_TRL_GLOBAL_VARIABLES_REC.GL_DATE_LOW;
G_GL_DATE_HIGH			:=	P_TRL_GLOBAL_VARIABLES_REC.GL_DATE_HIGH;
G_TRX_DATE_LOW			:=	P_TRL_GLOBAL_VARIABLES_REC.TRX_DATE_LOW;
G_TRX_DATE_HIGH			:=	P_TRL_GLOBAL_VARIABLES_REC.TRX_DATE_HIGH;
G_GL_PERIOD_NAME_LOW		:=	P_TRL_GLOBAL_VARIABLES_REC.GL_PERIOD_NAME_LOW;
G_GL_PERIOD_NAME_HIGH		:=	P_TRL_GLOBAL_VARIABLES_REC.GL_PERIOD_NAME_HIGH;
G_TRX_DATE_PERIOD_NAME_LOW	:=	P_TRL_GLOBAL_VARIABLES_REC.TRX_DATE_PERIOD_NAME_LOW;
G_TRX_DATE_PERIOD_NAME_HIGH	:=	P_TRL_GLOBAL_VARIABLES_REC.TRX_DATE_PERIOD_NAME_HIGH;
g_tax_jurisdiction_code         :=      p_trl_global_variables_rec.tax_jurisdiction_code;
g_first_party_tax_reg_num       :=      p_trl_global_variables_rec.first_party_tax_reg_num;
G_TAX_REGIME_CODE		:=	P_TRL_GLOBAL_VARIABLES_REC.TAX_REGIME_CODE;
G_TAX			        :=	P_TRL_GLOBAL_VARIABLES_REC.TAX;
G_TAX_STATUS_CODE		:=	P_TRL_GLOBAL_VARIABLES_REC.TAX_STATUS_CODE;
G_TAX_RATE_CODE_LOW             :=      p_trl_global_variables_rec.tax_rate_code_low;
G_TAX_RATE_CODE_HIGH            :=      p_trl_global_variables_rec.tax_rate_code_high;
G_TAX_TYPE_CODE_LOW             :=      p_trl_global_variables_rec.tax_type_code_low;
G_TAX_TYPE_CODE_HIGH            :=      p_trl_global_variables_rec.tax_type_code_high;
--G_TAX_RATE_CODE			:=	P_TRL_GLOBAL_VARIABLES_REC.TAX_RATE_CODE;
--G_TAX_TYPE_CODE			:=	P_TRL_GLOBAL_VARIABLES_REC.TAX_TYPE_CODE;
G_DOCUMENT_SUB_TYPE		:=	P_TRL_GLOBAL_VARIABLES_REC.DOCUMENT_SUB_TYPE;
G_TRX_BUSINESS_CATEGORY		:=	P_TRL_GLOBAL_VARIABLES_REC.TRX_BUSINESS_CATEGORY;
G_TAX_INVOICE_DATE_LOW		:=	P_TRL_GLOBAL_VARIABLES_REC.TAX_INVOICE_DATE_LOW;
G_TAX_INVOICE_DATE_HIGH		:=	P_TRL_GLOBAL_VARIABLES_REC.TAX_INVOICE_DATE_HIGH;
G_POSTING_STATUS		:=	P_TRL_GLOBAL_VARIABLES_REC.POSTING_STATUS;
G_EXTRACT_ACCTED_TAX_LINES	:=	P_TRL_GLOBAL_VARIABLES_REC.EXTRACT_ACCTED_TAX_LINES;
G_INCLUDE_ACCOUNTING_SEGMENTS	:=	P_TRL_GLOBAL_VARIABLES_REC.INCLUDE_ACCOUNTING_SEGMENTS;
G_BALANCING_SEGMENT_LOW		:=	P_TRL_GLOBAL_VARIABLES_REC.BALANCING_SEGMENT_LOW;
G_BALANCING_SEGMENT_HIGH	:=	P_TRL_GLOBAL_VARIABLES_REC.BALANCING_SEGMENT_HIGH;
G_INCLUDE_DISCOUNTS		:=	P_TRL_GLOBAL_VARIABLES_REC.INCLUDE_DISCOUNTS;
G_EXTRACT_STARTING_LINE_NUM	:=	P_TRL_GLOBAL_VARIABLES_REC.EXTRACT_STARTING_LINE_NUM;
G_REQUEST_ID			:=	P_TRL_GLOBAL_VARIABLES_REC.REQUEST_ID;
G_REPORT_NAME			:=	P_TRL_GLOBAL_VARIABLES_REC.REPORT_NAME;
G_VAT_TRANSACTION_TYPE_CODE	:=	P_TRL_GLOBAL_VARIABLES_REC.VAT_TRANSACTION_TYPE_CODE;
G_INCLUDE_FULLY_NR_TAX_FLAG	:=	P_TRL_GLOBAL_VARIABLES_REC.INCLUDE_FULLY_NR_TAX_FLAG;
G_MUNICIPAL_TAX_TYPE_CODE_LOW	:=	P_TRL_GLOBAL_VARIABLES_REC.MUNICIPAL_TAX_TYPE_CODE_LOW;
G_MUNICIPAL_TAX_TYPE_CODE_HIGH	:=	P_TRL_GLOBAL_VARIABLES_REC.MUNICIPAL_TAX_TYPE_CODE_HIGH;
G_PROV_TAX_TYPE_CODE_LOW	:=	P_TRL_GLOBAL_VARIABLES_REC.PROV_TAX_TYPE_CODE_LOW;
G_PROV_TAX_TYPE_CODE_HIGH	:=	P_TRL_GLOBAL_VARIABLES_REC.PROV_TAX_TYPE_CODE_HIGH;
G_EXCISE_TAX_TYPE_CODE_LOW	:=	P_TRL_GLOBAL_VARIABLES_REC.EXCISE_TAX_TYPE_CODE_LOW;
G_EXCISE_TAX_TYPE_CODE_HIGH	:=	P_TRL_GLOBAL_VARIABLES_REC.EXCISE_TAX_TYPE_CODE_HIGH;
G_NON_TAXABLE_TAX_TYPE_CODE	:=	P_TRL_GLOBAL_VARIABLES_REC.NON_TAXABLE_TAX_TYPE_CODE;
G_PER_TAX_TYPE_CODE_LOW		:=	P_TRL_GLOBAL_VARIABLES_REC.PER_TAX_TYPE_CODE_LOW;
G_PER_TAX_TYPE_CODE_HIGH	:=	P_TRL_GLOBAL_VARIABLES_REC.PER_TAX_TYPE_CODE_HIGH;
G_VAT_TAX_TYPE_CODE		:=	P_TRL_GLOBAL_VARIABLES_REC.VAT_TAX_TYPE_CODE;
G_EXCISE_TAX			:=	P_TRL_GLOBAL_VARIABLES_REC.EXCISE_TAX;
G_VAT_ADDITIONAL_TAX		:=	P_TRL_GLOBAL_VARIABLES_REC.VAT_ADDITIONAL_TAX;
G_VAT_NON_TAXABLE_TAX		:=	P_TRL_GLOBAL_VARIABLES_REC.VAT_NON_TAXABLE_TAX;
G_VAT_NOT_TAX			:=	P_TRL_GLOBAL_VARIABLES_REC.VAT_NOT_TAX;
G_VAT_PERCEPTION_TAX		:=	P_TRL_GLOBAL_VARIABLES_REC.VAT_PERCEPTION_TAX;
G_VAT_TAX			:=	P_TRL_GLOBAL_VARIABLES_REC.VAT_TAX;
G_INC_SELF_WD_TAX		:=	P_TRL_GLOBAL_VARIABLES_REC.INC_SELF_WD_TAX;
G_EXCLUDING_TRX_LETTER		:=	P_TRL_GLOBAL_VARIABLES_REC.EXCLUDING_TRX_LETTER;
G_TRX_LETTER_LOW		:=	P_TRL_GLOBAL_VARIABLES_REC.TRX_LETTER_LOW;
G_TRX_LETTER_HIGH		:=	P_TRL_GLOBAL_VARIABLES_REC.TRX_LETTER_HIGH;
G_INCLUDE_REFERENCED_SOURCE	:=	P_TRL_GLOBAL_VARIABLES_REC.INCLUDE_REFERENCED_SOURCE;
G_PARTY_NAME			:=	P_TRL_GLOBAL_VARIABLES_REC.PARTY_NAME;
G_BATCH_NAME			:=	P_TRL_GLOBAL_VARIABLES_REC.BATCH_NAME;
G_BATCH_DATE_LOW		:=	P_TRL_GLOBAL_VARIABLES_REC.BATCH_DATE_LOW;
G_BATCH_DATE_HIGH		:=	P_TRL_GLOBAL_VARIABLES_REC.BATCH_DATE_HIGH;
G_BATCH_SOURCE_ID		:=	P_TRL_GLOBAL_VARIABLES_REC.BATCH_SOURCE_ID;
G_ADJUSTED_DOC_FROM		:=	P_TRL_GLOBAL_VARIABLES_REC.ADJUSTED_DOC_FROM;
G_ADJUSTED_DOC_TO		:=	P_TRL_GLOBAL_VARIABLES_REC.ADJUSTED_DOC_TO;
G_STANDARD_VAT_TAX_RATE		:=	P_TRL_GLOBAL_VARIABLES_REC.STANDARD_VAT_TAX_RATE;
G_MUNICIPAL_TAX			:=	P_TRL_GLOBAL_VARIABLES_REC.MUNICIPAL_TAX;
G_PROVINCIAL_TAX		:=	P_TRL_GLOBAL_VARIABLES_REC.PROVINCIAL_TAX;
G_TAX_ACCOUNT_LOW		:=	P_TRL_GLOBAL_VARIABLES_REC.TAX_ACCOUNT_LOW;
G_TAX_ACCOUNT_HIGH		:=	P_TRL_GLOBAL_VARIABLES_REC.TAX_ACCOUNT_HIGH;
G_EXP_CERT_DATE_FROM		:=	P_TRL_GLOBAL_VARIABLES_REC.EXP_CERT_DATE_FROM;
G_EXP_CERT_DATE_TO		:=	P_TRL_GLOBAL_VARIABLES_REC.EXP_CERT_DATE_TO;
G_EXP_METHOD			:=	P_TRL_GLOBAL_VARIABLES_REC.EXP_METHOD;
G_PRINT_COMPANY_INFO		:=	P_TRL_GLOBAL_VARIABLES_REC.PRINT_COMPANY_INFO;
G_REPRINT			:=	P_TRL_GLOBAL_VARIABLES_REC.REPRINT;
G_ERRBUF			:=	P_TRL_GLOBAL_VARIABLES_REC.ERRBUF;
G_AR_RETCODE			:=	P_TRL_GLOBAL_VARIABLES_REC.RETCODE;

G_EXTRACT_REPORT_LINE_NUMBER  := 1;
G_TRX_CLASS  := NULL;


    IF (g_level_procedure >= g_current_runtime_level ) THEN
        FND_LOG.STRING(g_level_procedure, 'ZX.TRL.ZX_AR_ACTG_EXTRACT_PKG.ASSIGN_AR_GLOBAL_VARIABLES.END',
                                      'ZX_AR_ACTG_EXTRACT_PKG:ASSIGN_AR_GLOBAL_VARIABLES(-)');
    END IF;
 EXCEPTION
  WHEN OTHERS THEN
    g_error_buffer  := sqlcode || ': ' || SUBSTR(SQLERRM, 1, 80);
    FND_MESSAGE.SET_NAME('ZX','GENERIC_MESSAGE');
    FND_MESSAGE.SET_TOKEN('GENERIC_TEXT','ASSIGN_AR_GLOBAL_VARIABLES- '|| g_error_buffer);
    FND_MSG_PUB.Add;
    IF (g_level_unexpected >= g_current_runtime_level ) THEN
      FND_LOG.STRING(g_level_unexpected,
                     'ZX.TRL.ZX_EXTRACT_PKG.ASSIGN_AR_GLOBAL_VARIABLES',
                      g_error_buffer);
    END IF;

END ASSIGN_AR_GLOBAL_VARIABLES;

END ZX_AR_ACTG_EXTRACT_PKG;

/
