--------------------------------------------------------
--  DDL for Package Body PA_PAXCPCAL_XMLP_PKG
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE PACKAGE BODY "APPS"."PA_PAXCPCAL_XMLP_PKG" AS
/* $Header: PAXCPCALB.pls 120.0 2008/01/02 11:24:10 krreddy noship $ */
  FUNCTION GET_COVER_PAGE_VALUES RETURN BOOLEAN IS
  BEGIN
    RETURN (TRUE);
  EXCEPTION
    WHEN OTHERS THEN
      RETURN (FALSE);
  END GET_COVER_PAGE_VALUES;

  FUNCTION BEFOREREPORT RETURN BOOLEAN IS
  BEGIN
    DECLARE
      INIT_FAILURE EXCEPTION;
      NDF VARCHAR2(80);
      ERRBUF VARCHAR2(525);
      PA_DPIS_THRU_DATE DATE;
    BEGIN
      P_CONC_REQUEST_ID := FND_GLOBAL.CONC_REQUEST_ID;
      CP_DPIS_THROUGH := TO_CHAR(P_DPIS_THROUGH,'DD-MON-YYYY');
      /*SRW.USER_EXIT('FND SRWINIT')*/NULL;
      CURR_CODE := PA_CURRENCY.GET_CURRENCY_CODE;
      IF (GET_COMPANY_NAME <> TRUE) THEN
        RAISE INIT_FAILURE;
      END IF;
      SELECT
        SUBSTR(MEANING,4,14)
      INTO NDF
      FROM
        PA_LOOKUPS
      WHERE LOOKUP_CODE = 'NO_DATA_FOUND'
        AND LOOKUP_TYPE = 'MESSAGE';
      C_NO_DATA_FOUND := NDF;
      BEGIN
    /*    SELECT
          CP_DPIS_THROUGH
        INTO PA_DPIS_THRU_DATE
        FROM
          DUAL;
        SELECT
          P_CONC_REQUEST_ID
        INTO P_CONC_REQUEST_ID
        FROM
          DUAL; */
        PA_FAXFACE.SET_REQUEST_ID(P_CONC_REQUEST_ID);
        PA_FAXFACE.INTERFACE_ASSETS(ERRBUF
                                   ,C_RETCODE
                                   ,P_FROM_PROJECT_NUMBER
                                   ,P_TO_PROJECT_NUMBER
                                   ,PA_DPIS_THRU_DATE);
        /*SRW.MESSAGE(1
                   ,'Completed interface assets process')*/NULL;
        --P_CONC_REQUEST_ID := P_CONC_REQUEST_ID;
        IF (C_RETCODE <> 0) THEN
          /*SRW.MESSAGE(1
                     ,ERRBUF)*/NULL;
        END IF;
        C_ERROR_BUF := ERRBUF;
      EXCEPTION
        WHEN STORAGE_ERROR THEN
          C_RETCODE := -9999;
          /*SRW.MESSAGE(1
                     ,'Exception: Storage Error')*/NULL;
        WHEN TIMEOUT_ON_RESOURCE THEN
          C_RETCODE := -9999;
          /*SRW.MESSAGE(1
                     ,'Exception: Time Out Occured, waiting for a resource')*/NULL;
        WHEN OTHERS THEN
          C_RETCODE := -9999;
          /*SRW.MESSAGE(1
                     ,'Exception was generated by Interface assets API')*/NULL;
      END;
    EXCEPTION
      WHEN NO_DATA_FOUND THEN
        SELECT
          MEANING
        INTO NDF
        FROM
          PA_LOOKUPS
        WHERE LOOKUP_CODE = 'NO_DATA_FOUND'
          AND LOOKUP_TYPE = 'MESSAGE';
        C_NO_DATA_FOUND := NDF;
        C_DUMMY_DATA := 1;
      WHEN OTHERS THEN
        /*SRW.MESSAGE(1
                   ,SQLERRM)*/NULL;
        /*RAISE SRW.PROGRAM_ABORT*/RAISE_APPLICATION_ERROR(-20101,null);
    END;
    RETURN (TRUE);
  END BEFOREREPORT;

  FUNCTION GET_COMPANY_NAME RETURN BOOLEAN IS
    L_NAME VARCHAR2(30);
  BEGIN
    SELECT
      GL.NAME
    INTO L_NAME
    FROM
      GL_SETS_OF_BOOKS GL,
      PA_IMPLEMENTATIONS PI
    WHERE GL.SET_OF_BOOKS_ID = PI.SET_OF_BOOKS_ID;
    C_COMPANY_NAME_HEADER := L_NAME;
    RETURN (TRUE);
  EXCEPTION
    WHEN OTHERS THEN
      RETURN (FALSE);
  END GET_COMPANY_NAME;

  FUNCTION AFTERREPORT RETURN BOOLEAN IS
  BEGIN
    DECLARE
      NUMBER_OF_MESSAGES NUMBER;
      MESSAGE_BUF VARCHAR2(2000);
      INTERFACE_ERROR EXCEPTION;
      ERRBUF VARCHAR2(80);
    BEGIN
      NUMBER_OF_MESSAGES := PA_DEBUG.NO_OF_DEBUG_MESSAGES;
      /*SRW.MESSAGE(1
                 ,'Debug Messages:')*/NULL;
      FOR i IN 1 .. NUMBER_OF_MESSAGES LOOP
        PA_DEBUG.GET_MESSAGE(I
                            ,MESSAGE_BUF);
        /*SRW.MESSAGE(1
                   ,MESSAGE_BUF)*/NULL;
      END LOOP;
      ERRBUF := C_ERROR_BUF;
      IF (C_RETCODE <> 0) THEN
        /*SRW.MESSAGE(1
                   ,ERRBUF)*/NULL;
      END IF;
    EXCEPTION
      WHEN OTHERS THEN
        /*RAISE SRW.PROGRAM_ABORT*/RAISE_APPLICATION_ERROR(-20101,null);
    END;
    /*SRW.USER_EXIT('FND SRWEXIT')*/NULL;
    RETURN (TRUE);
  END AFTERREPORT;

  FUNCTION CF_FORMAT_MASKFORMULA RETURN CHAR IS
    TMP_FMT_MASK VARCHAR2(15);
  BEGIN
    RETURN (PA_MULTI_CURRENCY.GET_ACCT_CURRENCY_CODE);
  END CF_FORMAT_MASKFORMULA;

  FUNCTION C_COMPANY_NAME_HEADER_P RETURN VARCHAR2 IS
  BEGIN
    RETURN C_COMPANY_NAME_HEADER;
  END C_COMPANY_NAME_HEADER_P;

  FUNCTION C_NO_DATA_FOUND_P RETURN VARCHAR2 IS
  BEGIN
    RETURN C_NO_DATA_FOUND;
  END C_NO_DATA_FOUND_P;

  FUNCTION C_DUMMY_DATA_P RETURN NUMBER IS
  BEGIN
    RETURN C_DUMMY_DATA;
  END C_DUMMY_DATA_P;

  FUNCTION C_RETCODE_P RETURN VARCHAR2 IS
  BEGIN
    RETURN C_RETCODE;
  END C_RETCODE_P;

  FUNCTION CURR_CODE_P RETURN VARCHAR2 IS
  BEGIN
    RETURN CURR_CODE;
  END CURR_CODE_P;

  FUNCTION C_ERROR_BUF_P RETURN VARCHAR2 IS
  BEGIN
    RETURN C_ERROR_BUF;
  END C_ERROR_BUF_P;

END PA_PAXCPCAL_XMLP_PKG;


/
