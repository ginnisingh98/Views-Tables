--------------------------------------------------------
--  DDL for Package Body AR_RAXTTL_XMLP_PKG
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE PACKAGE BODY "APPS"."AR_RAXTTL_XMLP_PKG" AS
/* $Header: RAXTTLB.pls 120.0 2007/12/27 14:34:56 abraghun noship $ */
  FUNCTION REPORT_NAMEFORMULA(COMPANY_NAME IN VARCHAR2) RETURN VARCHAR2 IS
  BEGIN
    DECLARE
      L_REPORT_NAME VARCHAR2(80);
    BEGIN
      RP_COMPANY_NAME := COMPANY_NAME;
      SELECT
        SUBSTRB(CP.USER_CONCURRENT_PROGRAM_NAME
               ,1
               ,80)
      INTO L_REPORT_NAME
      FROM
        FND_CONCURRENT_PROGRAMS_VL CP,
        FND_CONCURRENT_REQUESTS CR
      WHERE CR.REQUEST_ID = P_CONC_REQUEST_ID
        AND CP.APPLICATION_ID = CR.PROGRAM_APPLICATION_ID
        AND CP.CONCURRENT_PROGRAM_ID = CR.CONCURRENT_PROGRAM_ID;
      RP_REPORT_NAME := L_REPORT_NAME;
      RETURN (L_REPORT_NAME);
    EXCEPTION
      WHEN NO_DATA_FOUND THEN
        RP_REPORT_NAME := 'Transaction Types Listing';
        RETURN ('Transaction Types Listing');
    END;
    RETURN NULL;
  END REPORT_NAMEFORMULA;

  FUNCTION BEFOREREPORT RETURN BOOLEAN IS
  BEGIN
    BEGIN
      P_CONC_REQUEST_ID := FND_GLOBAL.CONC_REQUEST_ID;
      /*SRW.USER_EXIT('FND SRWINIT')*/NULL;
    END;
    RETURN (TRUE);
  END BEFOREREPORT;

  FUNCTION SUB_TITLEFORMULA RETURN VARCHAR2 IS
  BEGIN
    BEGIN
      RP_SUB_TITLE := ' ';
      RETURN (' ');
    END;
    RETURN NULL;
  END SUB_TITLEFORMULA;

  FUNCTION AFTERREPORT RETURN BOOLEAN IS
  BEGIN
    /*SRW.USER_EXIT('FND SRWEXIT')*/NULL;
    RETURN (TRUE);
  END AFTERREPORT;

  FUNCTION GET_YES_NOFORMULA RETURN VARCHAR2 IS
  BEGIN
    DECLARE
      YES VARCHAR2(30);
      NO VARCHAR2(30);
    BEGIN
      SELECT
        SUBSTR(LC1.MEANING
              ,1
              ,16),
        SUBSTR(LC2.MEANING
              ,1
              ,16)
      INTO YES,NO
      FROM
        AR_LOOKUPS LC1,
        AR_LOOKUPS LC2
      WHERE LC1.LOOKUP_CODE = 'Y'
        AND LC1.LOOKUP_TYPE = 'YES/NO'
        AND LC2.LOOKUP_CODE = 'N'
        AND LC2.LOOKUP_TYPE = 'YES/NO';
      YES := YES;
      NO := NO;
      RETURN (1);
    END;
    RETURN NULL;
  END GET_YES_NOFORMULA;

  FUNCTION INVOICE_TYPEFORMULA(INVOICE_TYPE_TYPE_ID IN NUMBER) RETURN VARCHAR2 IS
  BEGIN
    DECLARE
      INVOICE_TYPE VARCHAR2(30);
    BEGIN
      RP_DATA_FOUND := 'X';
      SELECT
        DECODE(INVOICE_TYPE_TYPE_ID
              ,NULL
              ,''
              ,SUBSTR(NAME
                    ,1
                    ,21))
      INTO INVOICE_TYPE
      FROM
        RA_CUST_TRX_TYPES
      WHERE CUST_TRX_TYPE_ID = INVOICE_TYPE_TYPE_ID
      OR ( INVOICE_TYPE_TYPE_ID is null
        AND ROWNUM < 2 );
      RETURN (INVOICE_TYPE);
    END;
    RETURN NULL;
  END INVOICE_TYPEFORMULA;

  FUNCTION CREDIT_MEMO_TYPEFORMULA(CREDIT_MEMO_TYPE_ID IN NUMBER) RETURN VARCHAR2 IS
  BEGIN
    DECLARE
      CREDIT_MEMO_TYPE VARCHAR2(30);
    BEGIN
      SELECT
        DECODE(CREDIT_MEMO_TYPEFORMULA.CREDIT_MEMO_TYPE_ID
              ,NULL
              ,''
              ,SUBSTR(NAME
                    ,1
                    ,27))
      INTO CREDIT_MEMO_TYPE
      FROM
        RA_CUST_TRX_TYPES
      WHERE CUST_TRX_TYPE_ID = CREDIT_MEMO_TYPEFORMULA.CREDIT_MEMO_TYPE_ID
      OR ( CREDIT_MEMO_TYPEFORMULA.CREDIT_MEMO_TYPE_ID is null AND ROWNUM < 2 );
      RETURN (CREDIT_MEMO_TYPE);
    END;
    RETURN NULL;
  END CREDIT_MEMO_TYPEFORMULA;

  FUNCTION TERM_NAMEFORMULA(TERM_ID IN NUMBER) RETURN VARCHAR2 IS
  BEGIN
    DECLARE
      TERM_NAME VARCHAR2(30);
    BEGIN
      SELECT
        DECODE(TERM_ID
              ,NULL
              ,''
              ,SUBSTR(NAME
                    ,1
                    ,27))
      INTO TERM_NAME
      FROM
        RA_TERMS
      WHERE TERM_ID = TERM_NAMEFORMULA.TERM_ID
      OR ( TERM_ID is null
        AND ROWNUM < 2 );
      RETURN (TERM_NAME);
    END;
    RETURN NULL;
  END TERM_NAMEFORMULA;

  FUNCTION RP_COMPANY_NAME_P RETURN VARCHAR2 IS
  BEGIN
    RETURN RP_COMPANY_NAME;
  END RP_COMPANY_NAME_P;

  FUNCTION RP_REPORT_NAME_P RETURN VARCHAR2 IS
  BEGIN
    RETURN RP_REPORT_NAME;
  END RP_REPORT_NAME_P;

  FUNCTION RP_DATA_FOUND_P RETURN VARCHAR2 IS
  BEGIN
    RETURN RP_DATA_FOUND;
  END RP_DATA_FOUND_P;

  FUNCTION RP_SUB_TITLE_P RETURN VARCHAR2 IS
  BEGIN
    RETURN RP_SUB_TITLE;
  END RP_SUB_TITLE_P;

  FUNCTION YES_P RETURN VARCHAR2 IS
  BEGIN
    RETURN 'Yes';
  END YES_P;

  FUNCTION NO_P RETURN VARCHAR2 IS
  BEGIN
    RETURN 'No';
  END NO_P;

END AR_RAXTTL_XMLP_PKG;


/
