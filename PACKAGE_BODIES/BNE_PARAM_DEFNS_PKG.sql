--------------------------------------------------------
--  DDL for Package Body BNE_PARAM_DEFNS_PKG
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE PACKAGE BODY "APPS"."BNE_PARAM_DEFNS_PKG" as
/* $Header: bnepardb.pls 120.3.12010000.3 2014/06/13 15:43:13 amgonzal ship $ */

/* ============================================================*/
/* WARNING WARNING WARNING WARNING WARNING WARNING WARNING     */
/* This is not the default package body generated by tltblgen. */
/* X_DEFAULT_STRING_TRANS_FLAG has been added.                 */
/* ============================================================*/

procedure INSERT_ROW (
  X_ROWID in out NOCOPY VARCHAR2,
  X_APPLICATION_ID in NUMBER,
  X_PARAM_DEFN_CODE in VARCHAR2,
  X_OBJECT_VERSION_NUMBER in NUMBER,
  X_PARAM_NAME in VARCHAR2,
  X_PARAM_SOURCE in VARCHAR2,
  X_PARAM_CATEGORY in NUMBER,
  X_DATATYPE in NUMBER,
  X_ATTRIBUTE_APP_ID in NUMBER,
  X_ATTRIBUTE_CODE in VARCHAR2,
  X_PARAM_RESOLVER in VARCHAR2,
  X_DEFAULT_REQUIRED_FLAG in VARCHAR2,
  X_DEFAULT_VISIBLE_FLAG in VARCHAR2,
  X_DEFAULT_USER_MODIFYABLE_FLAG in VARCHAR2,
  X_DEFAULT_DATE in DATE,
  X_DEFAULT_NUMBER in NUMBER,
  X_DEFAULT_BOOLEAN_FLAG in VARCHAR2,
  X_DEFAULT_FORMULA in VARCHAR2,
  X_VAL_TYPE in VARCHAR2,
  X_VAL_VALUE in VARCHAR2,
  X_MAX_SIZE in NUMBER,
  X_DISPLAY_TYPE in NUMBER,
  X_DISPLAY_STYLE in NUMBER,
  X_DISPLAY_SIZE in NUMBER,
  X_HELP_URL in VARCHAR2,
  X_FORMAT_MASK in VARCHAR2,
  X_USER_NAME in VARCHAR2,
  X_DEFAULT_STRING in VARCHAR2,
  X_DEFAULT_STRING_TRANS_FLAG in VARCHAR2,
  X_DEFAULT_DESC in VARCHAR2,
  X_PROMPT_LEFT in VARCHAR2,
  X_PROMPT_ABOVE in VARCHAR2,
  X_USER_TIP in VARCHAR2,
  X_ACCESS_KEY in VARCHAR2,
  X_CREATION_DATE in DATE,
  X_CREATED_BY in NUMBER,
  X_LAST_UPDATE_DATE in DATE,
  X_LAST_UPDATED_BY in NUMBER,
  X_LAST_UPDATE_LOGIN in NUMBER,
  X_OA_FLEX_APPLICATION_ID in NUMBER,
  X_OA_FLEX_CODE in VARCHAR2,
  X_OA_FLEX_NUM in VARCHAR2
) is
  cursor C is select ROWID from BNE_PARAM_DEFNS_B
    where APPLICATION_ID = X_APPLICATION_ID
    and PARAM_DEFN_CODE = X_PARAM_DEFN_CODE
    ;
  l_base_default_string   bne_param_defns_b.default_string%type;
  l_trans_default_string  bne_param_defns_tl.default_string%type;
begin
  -- 17860033: COMPONENT PARAM: WINDOW & COL HEADER LABELS ARE EMPTY WHEN MIGRATED WITH FNDLOAD
  if X_DEFAULT_STRING_TRANS_FLAG = 'Y'
  then
    l_base_default_string  := X_DEFAULT_STRING;
    l_trans_default_string := X_DEFAULT_STRING;
  else
    l_base_default_string  := X_DEFAULT_STRING;
    l_trans_default_string := null;
  end if;

  insert into BNE_PARAM_DEFNS_B (
    APPLICATION_ID,
    PARAM_DEFN_CODE,
    OBJECT_VERSION_NUMBER,
    PARAM_NAME,
    PARAM_SOURCE,
    PARAM_CATEGORY,
    DATATYPE,
    ATTRIBUTE_APP_ID,
    ATTRIBUTE_CODE,
    PARAM_RESOLVER,
    DEFAULT_REQUIRED_FLAG,
    DEFAULT_VISIBLE_FLAG,
    DEFAULT_USER_MODIFYABLE_FLAG,
    DEFAULT_DATE,
    DEFAULT_NUMBER,
    DEFAULT_BOOLEAN_FLAG,
    DEFAULT_FORMULA,
    DEFAULT_STRING,
    VAL_TYPE,
    VAL_VALUE,
    MAX_SIZE,
    DISPLAY_TYPE,
    DISPLAY_STYLE,
    DISPLAY_SIZE,
    HELP_URL,
    FORMAT_MASK,
    CREATION_DATE,
    CREATED_BY,
    LAST_UPDATE_DATE,
    LAST_UPDATED_BY,
    LAST_UPDATE_LOGIN,
    OA_FLEX_APPLICATION_ID,
    OA_FLEX_CODE,
    OA_FLEX_NUM
  ) values (
    X_APPLICATION_ID,
    X_PARAM_DEFN_CODE,
    X_OBJECT_VERSION_NUMBER,
    X_PARAM_NAME,
    X_PARAM_SOURCE,
    X_PARAM_CATEGORY,
    X_DATATYPE,
    X_ATTRIBUTE_APP_ID,
    X_ATTRIBUTE_CODE,
    X_PARAM_RESOLVER,
    X_DEFAULT_REQUIRED_FLAG,
    X_DEFAULT_VISIBLE_FLAG,
    X_DEFAULT_USER_MODIFYABLE_FLAG,
    X_DEFAULT_DATE,
    X_DEFAULT_NUMBER,
    X_DEFAULT_BOOLEAN_FLAG,
    X_DEFAULT_FORMULA,
    l_base_default_string,
    X_VAL_TYPE,
    X_VAL_VALUE,
    X_MAX_SIZE,
    X_DISPLAY_TYPE,
    X_DISPLAY_STYLE,
    X_DISPLAY_SIZE,
    X_HELP_URL,
    X_FORMAT_MASK,
    X_CREATION_DATE,
    X_CREATED_BY,
    X_LAST_UPDATE_DATE,
    X_LAST_UPDATED_BY,
    X_LAST_UPDATE_LOGIN,
    X_OA_FLEX_APPLICATION_ID,
    X_OA_FLEX_CODE,
    X_OA_FLEX_NUM
  );

  insert into BNE_PARAM_DEFNS_TL (
    USER_NAME,
    APPLICATION_ID,
    PARAM_DEFN_CODE,
    DEFAULT_STRING,
    DEFAULT_DESC,
    PROMPT_LEFT,
    PROMPT_ABOVE,
    USER_TIP,
    ACCESS_KEY,
    CREATED_BY,
    CREATION_DATE,
    LAST_UPDATED_BY,
    LAST_UPDATE_DATE,
    LAST_UPDATE_LOGIN,
    LANGUAGE,
    SOURCE_LANG
  ) select
    X_USER_NAME,
    X_APPLICATION_ID,
    X_PARAM_DEFN_CODE,
    l_trans_default_string,
    X_DEFAULT_DESC,
    X_PROMPT_LEFT,
    X_PROMPT_ABOVE,
    X_USER_TIP,
    X_ACCESS_KEY,
    X_CREATED_BY,
    X_CREATION_DATE,
    X_LAST_UPDATED_BY,
    X_LAST_UPDATE_DATE,
    X_LAST_UPDATE_LOGIN,
    L.LANGUAGE_CODE,
    userenv('LANG')
  from FND_LANGUAGES L
  where L.INSTALLED_FLAG in ('I', 'B')
  and not exists
    (select NULL
    from BNE_PARAM_DEFNS_TL T
    where T.APPLICATION_ID = X_APPLICATION_ID
    and T.PARAM_DEFN_CODE = X_PARAM_DEFN_CODE
    and T.LANGUAGE = L.LANGUAGE_CODE);

  open c;
  fetch c into X_ROWID;
  if (c%notfound) then
    close c;
    raise no_data_found;
  end if;
  close c;

end INSERT_ROW;

procedure LOCK_ROW (
  X_APPLICATION_ID in NUMBER,
  X_PARAM_DEFN_CODE in VARCHAR2,
  X_OBJECT_VERSION_NUMBER in NUMBER,
  X_PARAM_NAME in VARCHAR2,
  X_PARAM_SOURCE in VARCHAR2,
  X_PARAM_CATEGORY in NUMBER,
  X_DATATYPE in NUMBER,
  X_ATTRIBUTE_APP_ID in NUMBER,
  X_ATTRIBUTE_CODE in VARCHAR2,
  X_PARAM_RESOLVER in VARCHAR2,
  X_DEFAULT_REQUIRED_FLAG in VARCHAR2,
  X_DEFAULT_VISIBLE_FLAG in VARCHAR2,
  X_DEFAULT_USER_MODIFYABLE_FLAG in VARCHAR2,
  X_DEFAULT_DATE in DATE,
  X_DEFAULT_NUMBER in NUMBER,
  X_DEFAULT_BOOLEAN_FLAG in VARCHAR2,
  X_DEFAULT_FORMULA in VARCHAR2,
  X_VAL_TYPE in VARCHAR2,
  X_VAL_VALUE in VARCHAR2,
  X_MAX_SIZE in NUMBER,
  X_DISPLAY_TYPE in NUMBER,
  X_DISPLAY_STYLE in NUMBER,
  X_DISPLAY_SIZE in NUMBER,
  X_HELP_URL in VARCHAR2,
  X_FORMAT_MASK in VARCHAR2,
  X_USER_NAME in VARCHAR2,
  X_DEFAULT_STRING in VARCHAR2,
  X_DEFAULT_STRING_TRANS_FLAG in VARCHAR2,
  X_DEFAULT_DESC in VARCHAR2,
  X_PROMPT_LEFT in VARCHAR2,
  X_PROMPT_ABOVE in VARCHAR2,
  X_USER_TIP in VARCHAR2,
  X_ACCESS_KEY in VARCHAR2,
  X_OA_FLEX_APPLICATION_ID in NUMBER,
  X_OA_FLEX_CODE in VARCHAR2,
  X_OA_FLEX_NUM in VARCHAR2
) is
  cursor c is select
      OBJECT_VERSION_NUMBER,
      PARAM_NAME,
      PARAM_SOURCE,
      PARAM_CATEGORY,
      DATATYPE,
      ATTRIBUTE_APP_ID,
      ATTRIBUTE_CODE,
      PARAM_RESOLVER,
      DEFAULT_REQUIRED_FLAG,
      DEFAULT_VISIBLE_FLAG,
      DEFAULT_USER_MODIFYABLE_FLAG,
      DEFAULT_DATE,
      DEFAULT_NUMBER,
      DEFAULT_BOOLEAN_FLAG,
      DEFAULT_FORMULA,
      VAL_TYPE,
      VAL_VALUE,
      MAX_SIZE,
      DISPLAY_TYPE,
      DISPLAY_STYLE,
      DISPLAY_SIZE,
      HELP_URL,
      FORMAT_MASK,
      OA_FLEX_APPLICATION_ID,
      OA_FLEX_CODE,
      OA_FLEX_NUM
    from BNE_PARAM_DEFNS_B
    where APPLICATION_ID = X_APPLICATION_ID
    and PARAM_DEFN_CODE = X_PARAM_DEFN_CODE
    for update of APPLICATION_ID nowait;
  recinfo c%rowtype;

  cursor c1 is select
      USER_NAME,
      DEFAULT_STRING,
      DEFAULT_DESC,
      PROMPT_LEFT,
      PROMPT_ABOVE,
      USER_TIP,
      ACCESS_KEY,
      decode(LANGUAGE, userenv('LANG'), 'Y', 'N') BASELANG
    from BNE_PARAM_DEFNS_TL
    where APPLICATION_ID = X_APPLICATION_ID
    and PARAM_DEFN_CODE = X_PARAM_DEFN_CODE
    and userenv('LANG') in (LANGUAGE, SOURCE_LANG)
    for update of APPLICATION_ID nowait;
begin
  open c;
  fetch c into recinfo;
  if (c%notfound) then
    close c;
    fnd_message.set_name('FND', 'FORM_RECORD_DELETED');
    app_exception.raise_exception;
  end if;
  close c;
  if (    (recinfo.OBJECT_VERSION_NUMBER = X_OBJECT_VERSION_NUMBER)
      AND (recinfo.PARAM_NAME = X_PARAM_NAME)
      AND (recinfo.PARAM_SOURCE = X_PARAM_SOURCE)
      AND (recinfo.PARAM_CATEGORY = X_PARAM_CATEGORY)
      AND (recinfo.DATATYPE = X_DATATYPE)
      AND ((recinfo.ATTRIBUTE_APP_ID = X_ATTRIBUTE_APP_ID)
           OR ((recinfo.ATTRIBUTE_APP_ID is null) AND (X_ATTRIBUTE_APP_ID is null)))
      AND ((recinfo.ATTRIBUTE_CODE = X_ATTRIBUTE_CODE)
           OR ((recinfo.ATTRIBUTE_CODE is null) AND (X_ATTRIBUTE_CODE is null)))
      AND ((recinfo.PARAM_RESOLVER = X_PARAM_RESOLVER)
           OR ((recinfo.PARAM_RESOLVER is null) AND (X_PARAM_RESOLVER is null)))
      AND (recinfo.DEFAULT_REQUIRED_FLAG = X_DEFAULT_REQUIRED_FLAG)
      AND (recinfo.DEFAULT_VISIBLE_FLAG = X_DEFAULT_VISIBLE_FLAG)
      AND (recinfo.DEFAULT_USER_MODIFYABLE_FLAG = X_DEFAULT_USER_MODIFYABLE_FLAG)
      AND ((recinfo.DEFAULT_DATE = X_DEFAULT_DATE)
           OR ((recinfo.DEFAULT_DATE is null) AND (X_DEFAULT_DATE is null)))
      AND ((recinfo.DEFAULT_NUMBER = X_DEFAULT_NUMBER)
           OR ((recinfo.DEFAULT_NUMBER is null) AND (X_DEFAULT_NUMBER is null)))
      AND ((recinfo.DEFAULT_BOOLEAN_FLAG = X_DEFAULT_BOOLEAN_FLAG)
           OR ((recinfo.DEFAULT_BOOLEAN_FLAG is null) AND (X_DEFAULT_BOOLEAN_FLAG is null)))
      AND ((recinfo.DEFAULT_FORMULA = X_DEFAULT_FORMULA)
           OR ((recinfo.DEFAULT_FORMULA is null) AND (X_DEFAULT_FORMULA is null)))
      AND (recinfo.VAL_TYPE = X_VAL_TYPE)
      AND ((recinfo.VAL_VALUE = X_VAL_VALUE)
           OR ((recinfo.VAL_VALUE is null) AND (X_VAL_VALUE is null)))
      AND (recinfo.MAX_SIZE = X_MAX_SIZE)
      AND (recinfo.DISPLAY_TYPE = X_DISPLAY_TYPE)
      AND (recinfo.DISPLAY_STYLE = X_DISPLAY_STYLE)
      AND (recinfo.DISPLAY_SIZE = X_DISPLAY_SIZE)
      AND ((recinfo.HELP_URL = X_HELP_URL)
           OR ((recinfo.HELP_URL is null) AND (X_HELP_URL is null)))
      AND ((recinfo.FORMAT_MASK = X_FORMAT_MASK)
           OR ((recinfo.FORMAT_MASK is null) AND (X_FORMAT_MASK is null)))
      AND ((recinfo.OA_FLEX_APPLICATION_ID = X_OA_FLEX_APPLICATION_ID)
           OR ((recinfo.OA_FLEX_APPLICATION_ID is null) AND (X_OA_FLEX_APPLICATION_ID is null)))
      AND ((recinfo.OA_FLEX_CODE = X_OA_FLEX_CODE)
           OR ((recinfo.OA_FLEX_CODE is null) AND (X_OA_FLEX_CODE is null)))
      AND ((recinfo.OA_FLEX_NUM = X_OA_FLEX_NUM)
           OR ((recinfo.OA_FLEX_NUM is null) AND (X_OA_FLEX_NUM is null)))
  ) then
    null;
  else
    fnd_message.set_name('FND', 'FORM_RECORD_CHANGED');
    app_exception.raise_exception;
  end if;

  for tlinfo in c1 loop
    if (tlinfo.BASELANG = 'Y') then
      if (    (tlinfo.USER_NAME = X_USER_NAME)
          AND ((tlinfo.DEFAULT_STRING = X_DEFAULT_STRING)
               OR ((tlinfo.DEFAULT_STRING is null) AND (X_DEFAULT_STRING is null)))
          AND ((tlinfo.DEFAULT_DESC = X_DEFAULT_DESC)
               OR ((tlinfo.DEFAULT_DESC is null) AND (X_DEFAULT_DESC is null)))
          AND ((tlinfo.PROMPT_LEFT = X_PROMPT_LEFT)
               OR ((tlinfo.PROMPT_LEFT is null) AND (X_PROMPT_LEFT is null)))
          AND ((tlinfo.PROMPT_ABOVE = X_PROMPT_ABOVE)
               OR ((tlinfo.PROMPT_ABOVE is null) AND (X_PROMPT_ABOVE is null)))
          AND ((tlinfo.USER_TIP = X_USER_TIP)
               OR ((tlinfo.USER_TIP is null) AND (X_USER_TIP is null)))
          AND ((tlinfo.ACCESS_KEY = X_ACCESS_KEY)
               OR ((tlinfo.ACCESS_KEY is null) AND (X_ACCESS_KEY is null)))
      ) then
        null;
      else
        fnd_message.set_name('FND', 'FORM_RECORD_CHANGED');
        app_exception.raise_exception;
      end if;
    end if;
  end loop;
  return;
end LOCK_ROW;

procedure UPDATE_ROW (
  X_APPLICATION_ID in NUMBER,
  X_PARAM_DEFN_CODE in VARCHAR2,
  X_OBJECT_VERSION_NUMBER in NUMBER,
  X_PARAM_NAME in VARCHAR2,
  X_PARAM_SOURCE in VARCHAR2,
  X_PARAM_CATEGORY in NUMBER,
  X_DATATYPE in NUMBER,
  X_ATTRIBUTE_APP_ID in NUMBER,
  X_ATTRIBUTE_CODE in VARCHAR2,
  X_PARAM_RESOLVER in VARCHAR2,
  X_DEFAULT_REQUIRED_FLAG in VARCHAR2,
  X_DEFAULT_VISIBLE_FLAG in VARCHAR2,
  X_DEFAULT_USER_MODIFYABLE_FLAG in VARCHAR2,
  X_DEFAULT_DATE in DATE,
  X_DEFAULT_NUMBER in NUMBER,
  X_DEFAULT_BOOLEAN_FLAG in VARCHAR2,
  X_DEFAULT_FORMULA in VARCHAR2,
  X_VAL_TYPE in VARCHAR2,
  X_VAL_VALUE in VARCHAR2,
  X_MAX_SIZE in NUMBER,
  X_DISPLAY_TYPE in NUMBER,
  X_DISPLAY_STYLE in NUMBER,
  X_DISPLAY_SIZE in NUMBER,
  X_HELP_URL in VARCHAR2,
  X_FORMAT_MASK in VARCHAR2,
  X_USER_NAME in VARCHAR2,
  X_DEFAULT_STRING in VARCHAR2,
  X_DEFAULT_STRING_TRANS_FLAG in VARCHAR2,
  X_DEFAULT_DESC in VARCHAR2,
  X_PROMPT_LEFT in VARCHAR2,
  X_PROMPT_ABOVE in VARCHAR2,
  X_USER_TIP in VARCHAR2,
  X_ACCESS_KEY in VARCHAR2,
  X_LAST_UPDATE_DATE in DATE,
  X_LAST_UPDATED_BY in NUMBER,
  X_LAST_UPDATE_LOGIN in NUMBER,
  X_OA_FLEX_APPLICATION_ID in NUMBER,
  X_OA_FLEX_CODE in VARCHAR2,
  X_OA_FLEX_NUM in VARCHAR2
) is
  l_base_default_string   bne_param_defns_b.default_string%type;
  l_trans_default_string  bne_param_defns_tl.default_string%type;
begin
  -- 17860033: COMPONENT PARAM: WINDOW & COL HEADER LABELS ARE EMPTY WHEN MIGRATED WITH FNDLOAD
	if X_DEFAULT_STRING_TRANS_FLAG = 'Y'
  then
    l_base_default_string  := X_DEFAULT_STRING;
    l_trans_default_string := X_DEFAULT_STRING;
  else
    l_base_default_string  := X_DEFAULT_STRING;
    l_trans_default_string := null;
  end if;

  update BNE_PARAM_DEFNS_B set
    OBJECT_VERSION_NUMBER = X_OBJECT_VERSION_NUMBER,
    PARAM_NAME = X_PARAM_NAME,
    PARAM_SOURCE = X_PARAM_SOURCE,
    PARAM_CATEGORY = X_PARAM_CATEGORY,
    DATATYPE = X_DATATYPE,
    ATTRIBUTE_APP_ID = X_ATTRIBUTE_APP_ID,
    ATTRIBUTE_CODE = X_ATTRIBUTE_CODE,
    PARAM_RESOLVER = X_PARAM_RESOLVER,
    DEFAULT_REQUIRED_FLAG = X_DEFAULT_REQUIRED_FLAG,
    DEFAULT_VISIBLE_FLAG = X_DEFAULT_VISIBLE_FLAG,
    DEFAULT_USER_MODIFYABLE_FLAG = X_DEFAULT_USER_MODIFYABLE_FLAG,
    DEFAULT_DATE = X_DEFAULT_DATE,
    DEFAULT_NUMBER = X_DEFAULT_NUMBER,
    DEFAULT_BOOLEAN_FLAG = X_DEFAULT_BOOLEAN_FLAG,
    DEFAULT_FORMULA = X_DEFAULT_FORMULA,
    DEFAULT_STRING = l_base_default_string,
    VAL_TYPE = X_VAL_TYPE,
    VAL_VALUE = X_VAL_VALUE,
    MAX_SIZE = X_MAX_SIZE,
    DISPLAY_TYPE = X_DISPLAY_TYPE,
    DISPLAY_STYLE = X_DISPLAY_STYLE,
    DISPLAY_SIZE = X_DISPLAY_SIZE,
    HELP_URL = X_HELP_URL,
    FORMAT_MASK = X_FORMAT_MASK,
    LAST_UPDATE_DATE = X_LAST_UPDATE_DATE,
    LAST_UPDATED_BY = X_LAST_UPDATED_BY,
    LAST_UPDATE_LOGIN = X_LAST_UPDATE_LOGIN,
    OA_FLEX_APPLICATION_ID = X_OA_FLEX_APPLICATION_ID,
    OA_FLEX_CODE = X_OA_FLEX_CODE,
    OA_FLEX_NUM = X_OA_FLEX_NUM
  where APPLICATION_ID = X_APPLICATION_ID
  and PARAM_DEFN_CODE = X_PARAM_DEFN_CODE;

  if (sql%notfound) then
    raise no_data_found;
  end if;

  update BNE_PARAM_DEFNS_TL set
    USER_NAME = X_USER_NAME,
    DEFAULT_STRING = l_trans_default_string,
    DEFAULT_DESC = X_DEFAULT_DESC,
    PROMPT_LEFT = X_PROMPT_LEFT,
    PROMPT_ABOVE = X_PROMPT_ABOVE,
    USER_TIP = X_USER_TIP,
    ACCESS_KEY = X_ACCESS_KEY,
    LAST_UPDATE_DATE = X_LAST_UPDATE_DATE,
    LAST_UPDATED_BY = X_LAST_UPDATED_BY,
    LAST_UPDATE_LOGIN = X_LAST_UPDATE_LOGIN,
    SOURCE_LANG = userenv('LANG')
  where APPLICATION_ID = X_APPLICATION_ID
  and PARAM_DEFN_CODE = X_PARAM_DEFN_CODE
  and userenv('LANG') in (LANGUAGE, SOURCE_LANG);

  if (sql%notfound) then
    raise no_data_found;
  end if;
end UPDATE_ROW;

procedure DELETE_ROW (
  X_APPLICATION_ID in NUMBER,
  X_PARAM_DEFN_CODE in VARCHAR2
) is
begin
  delete from BNE_PARAM_DEFNS_TL
  where APPLICATION_ID = X_APPLICATION_ID
  and PARAM_DEFN_CODE = X_PARAM_DEFN_CODE;

  if (sql%notfound) then
    raise no_data_found;
  end if;

  delete from BNE_PARAM_DEFNS_B
  where APPLICATION_ID = X_APPLICATION_ID
  and PARAM_DEFN_CODE = X_PARAM_DEFN_CODE;

  if (sql%notfound) then
    raise no_data_found;
  end if;
end DELETE_ROW;

procedure ADD_LANGUAGE
is
begin
  delete from BNE_PARAM_DEFNS_TL T
  where not exists
    (select NULL
    from BNE_PARAM_DEFNS_B B
    where B.APPLICATION_ID = T.APPLICATION_ID
    and B.PARAM_DEFN_CODE = T.PARAM_DEFN_CODE
    );

  update BNE_PARAM_DEFNS_TL T set (
      USER_NAME,
      DEFAULT_STRING,
      DEFAULT_DESC,
      PROMPT_LEFT,
      PROMPT_ABOVE,
      USER_TIP,
      ACCESS_KEY
    ) = (select
      B.USER_NAME,
      B.DEFAULT_STRING,
      B.DEFAULT_DESC,
      B.PROMPT_LEFT,
      B.PROMPT_ABOVE,
      B.USER_TIP,
      B.ACCESS_KEY
    from BNE_PARAM_DEFNS_TL B
    where B.APPLICATION_ID = T.APPLICATION_ID
    and B.PARAM_DEFN_CODE = T.PARAM_DEFN_CODE
    and B.LANGUAGE = T.SOURCE_LANG)
  where (
      T.APPLICATION_ID,
      T.PARAM_DEFN_CODE,
      T.LANGUAGE
  ) in (select
      SUBT.APPLICATION_ID,
      SUBT.PARAM_DEFN_CODE,
      SUBT.LANGUAGE
    from BNE_PARAM_DEFNS_TL SUBB, BNE_PARAM_DEFNS_TL SUBT
    where SUBB.APPLICATION_ID = SUBT.APPLICATION_ID
    and SUBB.PARAM_DEFN_CODE = SUBT.PARAM_DEFN_CODE
    and SUBB.LANGUAGE = SUBT.SOURCE_LANG
    and (SUBB.USER_NAME <> SUBT.USER_NAME
      or SUBB.DEFAULT_STRING <> SUBT.DEFAULT_STRING
      or (SUBB.DEFAULT_STRING is null and SUBT.DEFAULT_STRING is not null)
      or (SUBB.DEFAULT_STRING is not null and SUBT.DEFAULT_STRING is null)
      or SUBB.DEFAULT_DESC <> SUBT.DEFAULT_DESC
      or (SUBB.DEFAULT_DESC is null and SUBT.DEFAULT_DESC is not null)
      or (SUBB.DEFAULT_DESC is not null and SUBT.DEFAULT_DESC is null)
      or SUBB.PROMPT_LEFT <> SUBT.PROMPT_LEFT
      or (SUBB.PROMPT_LEFT is null and SUBT.PROMPT_LEFT is not null)
      or (SUBB.PROMPT_LEFT is not null and SUBT.PROMPT_LEFT is null)
      or SUBB.PROMPT_ABOVE <> SUBT.PROMPT_ABOVE
      or (SUBB.PROMPT_ABOVE is null and SUBT.PROMPT_ABOVE is not null)
      or (SUBB.PROMPT_ABOVE is not null and SUBT.PROMPT_ABOVE is null)
      or SUBB.USER_TIP <> SUBT.USER_TIP
      or (SUBB.USER_TIP is null and SUBT.USER_TIP is not null)
      or (SUBB.USER_TIP is not null and SUBT.USER_TIP is null)
      or SUBB.ACCESS_KEY <> SUBT.ACCESS_KEY
      or (SUBB.ACCESS_KEY is null and SUBT.ACCESS_KEY is not null)
      or (SUBB.ACCESS_KEY is not null and SUBT.ACCESS_KEY is null)
  ));

  insert into BNE_PARAM_DEFNS_TL (
    USER_NAME,
    APPLICATION_ID,
    PARAM_DEFN_CODE,
    DEFAULT_STRING,
    DEFAULT_DESC,
    PROMPT_LEFT,
    PROMPT_ABOVE,
    USER_TIP,
    ACCESS_KEY,
    CREATED_BY,
    CREATION_DATE,
    LAST_UPDATED_BY,
    LAST_UPDATE_DATE,
    LAST_UPDATE_LOGIN,
    LANGUAGE,
    SOURCE_LANG
  ) select
    B.USER_NAME,
    B.APPLICATION_ID,
    B.PARAM_DEFN_CODE,
    B.DEFAULT_STRING,
    B.DEFAULT_DESC,
    B.PROMPT_LEFT,
    B.PROMPT_ABOVE,
    B.USER_TIP,
    B.ACCESS_KEY,
    B.CREATED_BY,
    B.CREATION_DATE,
    B.LAST_UPDATED_BY,
    B.LAST_UPDATE_DATE,
    B.LAST_UPDATE_LOGIN,
    L.LANGUAGE_CODE,
    B.SOURCE_LANG
  from BNE_PARAM_DEFNS_TL B, FND_LANGUAGES L
  where L.INSTALLED_FLAG in ('I', 'B')
  and B.LANGUAGE = userenv('LANG')
  and not exists
    (select NULL
    from BNE_PARAM_DEFNS_TL T
    where T.APPLICATION_ID = B.APPLICATION_ID
    and T.PARAM_DEFN_CODE = B.PARAM_DEFN_CODE
    and T.LANGUAGE = L.LANGUAGE_CODE);
end ADD_LANGUAGE;

--------------------------------------------------------------------------------
--  PROCEDURE:   TRANSLATE_ROW                                                --
--                                                                            --
--  DESCRIPTION: Load a translation into the BNE_PARAM_DEFNS entity.          --
--               This proc is called from the apps loader.                    --
--                                                                            --
--  SEE:   http://www-apps.us.oracle.com/atg/plans/r115/fndloadqr.txt         --
--                                                                            --
--                                                                            --
--  MODIFICATION HISTORY                                                      --
--  Date       Username  Description                                          --
--  1-Oct-02   DGROVES   CREATED                                              --
--------------------------------------------------------------------------------
procedure TRANSLATE_ROW(
  x_param_defn_asn               in VARCHAR2,
  x_param_defn_code              in VARCHAR2,
  x_default_string_trans         in VARCHAR2,
  x_user_name                    in VARCHAR2,
  x_default_desc                 in VARCHAR2,
  x_prompt_left                  in VARCHAR2,
  x_prompt_above                 in VARCHAR2,
  x_user_tip                     in VARCHAR2,
  x_access_key                   in VARCHAR2,
  x_owner                        in VARCHAR2,
  x_last_update_date             in VARCHAR2,
  x_custom_mode                  in VARCHAR2
)
is
  l_app_id          number;
  f_luby            number;  -- entity owner in file
  f_ludate          date;    -- entity update date in file
  db_luby           number;  -- entity owner in db
  db_ludate         date;    -- entity update date in db
begin
  -- translate values to IDs
  l_app_id        := BNE_LCT_TOOLS_PKG.ASN_TO_APP_ID(x_param_defn_asn);

  -- Translate owner to file_last_updated_by
  f_luby := fnd_load_util.owner_id(x_owner);

  -- Translate char last_update_date to date
  f_ludate := nvl(to_date(x_last_update_date, 'YYYY/MM/DD'), sysdate);
  begin
    select LAST_UPDATED_BY, LAST_UPDATE_DATE
    into db_luby, db_ludate
    from BNE_PARAM_DEFNS_TL
    where APPLICATION_ID  = l_app_id
    and   PARAM_DEFN_CODE = x_param_defn_code
    and   LANGUAGE        = userenv('LANG');

    -- Test for customization and version
    if (fnd_load_util.upload_test(f_luby, f_ludate, db_luby,
                                  db_ludate, x_custom_mode)) then


      update BNE_PARAM_DEFNS_TL
      set USER_TIP          = x_user_tip,
          PROMPT_LEFT       = x_prompt_left,
          PROMPT_ABOVE      = x_prompt_above,
          USER_NAME         = x_user_name,
          DEFAULT_DESC      = x_default_desc,
          DEFAULT_STRING    = x_default_string_trans,
          ACCESS_KEY        = x_access_key,
          LAST_UPDATE_DATE  = f_ludate,
          LAST_UPDATED_BY   = f_luby,
          LAST_UPDATE_LOGIN = 0,
          SOURCE_LANG       = userenv('LANG')
      where APPLICATION_ID  = l_app_id
      AND   PARAM_DEFN_CODE = x_param_defn_code
      AND   userenv('LANG') in (LANGUAGE, SOURCE_LANG)
      ;
    end if;
  exception
    when no_data_found then
      -- Do not insert missing translations, skip this row
      null;
  end;

end TRANSLATE_ROW;


--------------------------------------------------------------------------------
--  PROCEDURE:     LOAD_ROW                                                   --
--                                                                            --
--  DESCRIPTION:   Load a row into the BNE_PARAM_DEFNS entity.                --
--                 This proc is called from the apps loader.                  --
--                                                                            --
--  SEE:     http://www-apps.us.oracle.com/atg/plans/r115/fndloadqr.txt       --
--                                                                            --
--                                                                            --
--  MODIFICATION HISTORY                                                      --
--  Date       Username  Description                                          --
--  1-Oct-02   DGROVES   CREATED                                              --
--------------------------------------------------------------------------------

procedure LOAD_ROW(
  x_param_defn_asn               in VARCHAR2,
  x_param_defn_code              in VARCHAR2,
  x_object_version_number        in VARCHAR2,
  x_param_name                   in VARCHAR2,
  x_param_source                 in VARCHAR2,
  x_param_category               in VARCHAR2,
  x_datatype                     in VARCHAR2,
  x_attribute_asn                in VARCHAR2,
  x_attribute_code               in VARCHAR2,
  x_param_resolver               in VARCHAR2,
  x_default_required_flag        in VARCHAR2,
  x_default_visible_flag         in VARCHAR2,
  x_default_user_modifyable_flag in VARCHAR2,
  x_default_string               in VARCHAR2,
  x_default_string_trans_flag    in VARCHAR2,
  x_default_date                 in VARCHAR2,
  x_default_number               in VARCHAR2,
  x_default_boolean_flag         in VARCHAR2,
  x_default_formula              in VARCHAR2,
  x_val_type                     in VARCHAR2,
  x_val_value                    in VARCHAR2,
  x_max_size                     in VARCHAR2,
  x_display_type                 in VARCHAR2,
  x_display_style                in VARCHAR2,
  x_display_size                 in VARCHAR2,
  x_help_url                     in VARCHAR2,
  x_format_mask                  in VARCHAR2,
  x_user_name                    in VARCHAR2,
  x_default_desc                 in VARCHAR2,
  x_prompt_left                  in VARCHAR2,
  x_prompt_above                 in VARCHAR2,
  x_user_tip                     in VARCHAR2,
  x_access_key                   in VARCHAR2,
  x_owner                        in VARCHAR2,
  x_last_update_date             in VARCHAR2,
  x_custom_mode                  in VARCHAR2,
  x_oa_flex_asn                  in VARCHAR2,
  x_oa_flex_code                 in VARCHAR2,
  x_oa_flex_num                  in VARCHAR2
)
is
  l_app_id          number;
  l_attrib_app_id   number;
  l_flex_app_id     number;
  l_row_id          varchar2(64);
  l_default_number  number;
  l_default_date    date;
  f_luby            number;  -- entity owner in file
  f_ludate          date;    -- entity update date in file
  db_luby           number;  -- entity owner in db
  db_ludate         date;    -- entity update date in db
begin
  -- translate values to IDs
  l_app_id        := BNE_LCT_TOOLS_PKG.ASN_TO_APP_ID(x_param_defn_asn);
  l_attrib_app_id := BNE_LCT_TOOLS_PKG.ASN_TO_APP_ID(x_attribute_asn);
  l_flex_app_id   := BNE_LCT_TOOLS_PKG.ASN_TO_APP_ID(x_oa_flex_asn);

  l_default_number := null;
  l_default_date   := null;
  if x_default_number is not null
  then
    l_default_number := to_number(x_default_number);
  end if;
  if x_default_date is not null
    then
      l_default_date := to_date(x_default_date, 'YYYY/MM/DD-HH24:MI:SS');
  end if;

  -- Translate owner to file_last_updated_by
  f_luby := fnd_load_util.owner_id(x_owner);

  -- Translate char last_update_date to date
  f_ludate := nvl(to_date(x_last_update_date, 'YYYY/MM/DD'), sysdate);
  begin
    select LAST_UPDATED_BY, LAST_UPDATE_DATE
    into db_luby, db_ludate
    from BNE_PARAM_DEFNS_B
    where APPLICATION_ID  = l_app_id
    and   PARAM_DEFN_CODE = x_param_defn_code;

    -- Test for customization and version
    if (fnd_load_util.upload_test(f_luby, f_ludate, db_luby,
                                  db_ludate, x_custom_mode)) then
      -- Update existing row

      BNE_PARAM_DEFNS_PKG.Update_Row(
        X_APPLICATION_ID        => l_app_id,
        X_PARAM_DEFN_CODE       => x_param_defn_code,
        X_OBJECT_VERSION_NUMBER => x_object_version_number,
        X_PARAM_NAME            => x_param_name,
        X_PARAM_SOURCE          => x_param_source,
        X_PARAM_CATEGORY        => x_param_category,
        X_DATATYPE              => x_datatype,
        X_ATTRIBUTE_APP_ID      => l_attrib_app_id,
        X_ATTRIBUTE_CODE        => x_attribute_code,
        X_PARAM_RESOLVER        => x_param_resolver,
        X_DEFAULT_REQUIRED_FLAG => x_default_required_flag,
        X_DEFAULT_VISIBLE_FLAG  => x_default_visible_flag,
        X_DEFAULT_USER_MODIFYABLE_FLAG => x_default_user_modifyable_flag,
        X_DEFAULT_DATE          => l_default_date,
        X_DEFAULT_NUMBER        => l_default_number,
        X_DEFAULT_BOOLEAN_FLAG  => x_default_boolean_flag,
        X_DEFAULT_FORMULA       => x_default_formula,
        X_VAL_TYPE              => x_val_type,
        X_VAL_VALUE             => x_val_value,
        X_MAX_SIZE              => x_max_size,
        X_DISPLAY_TYPE          => x_display_type,
        X_DISPLAY_STYLE         => x_display_style,
        X_DISPLAY_SIZE          => x_display_size,
        X_HELP_URL              => x_help_url,
        X_FORMAT_MASK           => x_format_mask,
        X_USER_NAME             => x_user_name,
        X_DEFAULT_STRING        => x_default_string,
        X_DEFAULT_STRING_TRANS_FLAG  => x_default_string_trans_flag,
        X_DEFAULT_DESC          => x_default_desc,
        X_PROMPT_LEFT           => x_prompt_left,
        X_PROMPT_ABOVE          => x_prompt_above,
        X_USER_TIP              => x_user_tip,
        X_ACCESS_KEY            => x_access_key,
        X_LAST_UPDATE_DATE      => f_ludate,
        X_LAST_UPDATED_BY       => f_luby,
        X_LAST_UPDATE_LOGIN     => 0,
        X_OA_FLEX_APPLICATION_ID=> l_flex_app_id,
        X_OA_FLEX_CODE          => x_oa_flex_code,
        X_OA_FLEX_NUM           => x_oa_flex_num
      );
    end if;
  exception
    when no_data_found then
      -- Record doesn't exist - insert in all cases
      BNE_PARAM_DEFNS_PKG.Insert_Row(
        X_ROWID                 => l_row_id,
        X_APPLICATION_ID        => l_app_id,
        X_PARAM_DEFN_CODE       => x_param_defn_code,
        X_OBJECT_VERSION_NUMBER => x_object_version_number,
        X_PARAM_NAME            => x_param_name,
        X_PARAM_SOURCE          => x_param_source,
        X_PARAM_CATEGORY        => x_param_category,
        X_DATATYPE              => x_datatype,
        X_ATTRIBUTE_APP_ID      => l_attrib_app_id,
        X_ATTRIBUTE_CODE        => x_attribute_code,
        X_PARAM_RESOLVER        => x_param_resolver,
        X_DEFAULT_REQUIRED_FLAG => x_default_required_flag,
        X_DEFAULT_VISIBLE_FLAG  => x_default_visible_flag,
        X_DEFAULT_USER_MODIFYABLE_FLAG => x_default_user_modifyable_flag,
        X_DEFAULT_DATE          => l_default_date,
        X_DEFAULT_NUMBER        => l_default_number,
        X_DEFAULT_BOOLEAN_FLAG  => x_default_boolean_flag,
        X_DEFAULT_FORMULA       => x_default_formula,
        X_VAL_TYPE              => x_val_type,
        X_VAL_VALUE             => x_val_value,
        X_MAX_SIZE              => x_max_size,
        X_DISPLAY_TYPE          => x_display_type,
        X_DISPLAY_STYLE         => x_display_style,
        X_DISPLAY_SIZE          => x_display_size,
        X_HELP_URL              => x_help_url,
        X_FORMAT_MASK           => x_format_mask,
        X_USER_NAME             => x_user_name,
        X_DEFAULT_STRING        => x_default_string,
        X_DEFAULT_STRING_TRANS_FLAG  => x_default_string_trans_flag,
        X_DEFAULT_DESC          => x_default_desc,
        X_PROMPT_LEFT           => x_prompt_left,
        X_PROMPT_ABOVE          => x_prompt_above,
        X_USER_TIP              => x_user_tip,
        X_ACCESS_KEY            => x_access_key,
        X_CREATION_DATE         => f_ludate,
        X_CREATED_BY            => f_luby,
        X_LAST_UPDATE_DATE      => f_ludate,
        X_LAST_UPDATED_BY       => f_luby,
        X_LAST_UPDATE_LOGIN     => 0,
        X_OA_FLEX_APPLICATION_ID=> l_flex_app_id,
        X_OA_FLEX_CODE          => x_oa_flex_code,
        X_OA_FLEX_NUM           => x_oa_flex_num
      );

  end;
end LOAD_ROW;



end BNE_PARAM_DEFNS_PKG;

/
