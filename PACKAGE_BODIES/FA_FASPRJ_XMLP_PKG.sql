--------------------------------------------------------
--  DDL for Package Body FA_FASPRJ_XMLP_PKG
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE PACKAGE BODY "APPS"."FA_FASPRJ_XMLP_PKG" AS
/* $Header: FASPRJB.pls 120.0.12010000.1 2008/07/28 13:17:16 appldev ship $ */
  FUNCTION REPORT_NAMEFORMULA(COMPANY_NAME IN VARCHAR2) RETURN VARCHAR2 IS
  BEGIN
    DECLARE
      L_REPORT_NAME VARCHAR2(80);
      L_CONC_PROGRAM_ID NUMBER;
    BEGIN
      RP_COMPANY_NAME := COMPANY_NAME;
      SELECT
        CR.CONCURRENT_PROGRAM_ID
      INTO L_CONC_PROGRAM_ID
      FROM
        FND_CONCURRENT_REQUESTS CR
      WHERE CR.PROGRAM_APPLICATION_ID = 140
        AND CR.REQUEST_ID = P_CONC_REQUEST_ID;
      SELECT
        CP.USER_CONCURRENT_PROGRAM_NAME
      INTO L_REPORT_NAME
      FROM
        FND_CONCURRENT_PROGRAMS_VL CP
      WHERE CP.CONCURRENT_PROGRAM_ID = L_CONC_PROGRAM_ID
        AND CP.APPLICATION_ID = 140;

      L_REPORT_NAME := SUBSTR(L_REPORT_NAME,1,INSTR(L_REPORT_NAME,' (XML)'));

      RP_REPORT_NAME := L_REPORT_NAME;

      RETURN (L_REPORT_NAME);
    EXCEPTION
      WHEN OTHERS THEN
        RP_REPORT_NAME := ':Depreciation Projection Report:';
        RETURN (RP_REPORT_NAME);
    END;
    RETURN NULL;
  END REPORT_NAMEFORMULA;

  FUNCTION BEFOREREPORT RETURN BOOLEAN IS
  BEGIN
    P_CONC_REQUEST_ID := FND_GLOBAL.CONC_REQUEST_ID;
    /*SRW.USER_EXIT('FND SRWINIT')*/NULL;


    select SUBSTR(argument1,INSTR(argument1,'=',1)+1,LENGTH(argument1)),
SUBSTR(argument2,INSTR(argument2,'=',1)+1,LENGTH(argument2)),
SUBSTR(argument3,INSTR(argument3,'=',1)+1,LENGTH(argument3)),
SUBSTR(argument4,INSTR(argument4,'=',1)+1,LENGTH(argument4)),
SUBSTR(argument5,INSTR(argument5,'=',1)+1,LENGTH(argument5)),
SUBSTR(argument6,INSTR(argument6,'=',1)+1,LENGTH(argument6)),
SUBSTR(argument7,INSTR(argument7,'=',1)+1,LENGTH(argument7)),
SUBSTR(argument8,INSTR(argument8,'=',1)+1,LENGTH(argument8))
into
P_FAPROJ_REQ_ID,
P_DISPLAY_ASSET_NUMBER,
P_DISPLAY_COSTCTR,
RP_PROJ_INTERIM_TABLE,
P_BOOK1,
P_BOOK2,
P_BOOK3,
P_BOOK4
from FND_CONCURRENT_REQUESTS
where request_id=P_CONC_REQUEST_ID;

RP_PROJ_INTERIM_TABLE_noquotes := RP_PROJ_INTERIM_TABLE;
RP_PROJ_INTERIM_TABLE := ''' ||  RP_PROJ_INTERIM_TABLE || ''';

P_BOOK1:= replace(P_BOOK1,'"','');
P_BOOK2:= replace(P_BOOK2,'"','');
P_BOOK3:= replace(P_BOOK3,'"','');
P_BOOK4:= replace(P_BOOK4,'"','');

P_BOOK1:= replace(P_BOOK1,chr(0),'');
P_BOOK2:= replace(P_BOOK2,chr(0),'');
P_BOOK3:= replace(P_BOOK3,chr(0),'');
P_BOOK4:= replace(P_BOOK4,chr(0),'');

-- P_FAPROJ_REQ_ID=4490298, P_DISPLAY_ASSET_NUMBER=YES, P_DISPLAY_COSTCTR=YES, RP_PROJ_INTERIM_TABLE=FA_PROJ_INTERIM_4490298, P_BOOK1="VIS CORP", P_BOOK2="OPS CORP", P_BOOK3="OPS BUDGET", P_BOOK4="VIS TAX"

    RETURN (TRUE);
  END BEFOREREPORT;

  FUNCTION AFTERREPORT RETURN BOOLEAN IS
  BEGIN
    DECLARE
      OUT_ORACLE_SCHEMA VARCHAR2(100);
      OUT_STATUS VARCHAR2(100);
      OUT_INDUSTRY VARCHAR2(100);
      L_X BOOLEAN;
    BEGIN
      IF (TO_NUMBER(P_FAPROJ_REQ_ID) <> 0) THEN
        EXECUTE IMMEDIATE
          'drop table ' || RP_PROJ_INTERIM_TABLE;
      END IF;
      /*SRW.USER_EXIT('FND SRWEXIT')*/NULL;
    EXCEPTION
      WHEN /*SRW.DO_SQL_FAILURE*/OTHERS THEN
        NULL;
    END;
    RETURN (TRUE);
  END AFTERREPORT;

  FUNCTION SET_TABLE_NAMEFORMULA RETURN VARCHAR2 IS
  BEGIN
    /*SRW.REFERENCE(RP_PROJ_INTERIM_TABLE)*/NULL;
    RP_PROJ_INTERIM_TABLE := 'FA_PROJ_INTERIM_' || TO_CHAR(TO_NUMBER(P_FAPROJ_REQ_ID));
    RETURN (RP_PROJ_INTERIM_TABLE);
  END SET_TABLE_NAMEFORMULA;

  FUNCTION DISP_CC RETURN BOOLEAN IS
  BEGIN
    RETURN (P_DISPLAY_COSTCTR = 'YES');
  END DISP_CC;

  FUNCTION DISP_AN RETURN BOOLEAN IS
  BEGIN
    RETURN (P_DISPLAY_ASSET_NUMBER = 'YES');
  END DISP_AN;

  FUNCTION BK2 RETURN BOOLEAN IS
  BEGIN
    RETURN (P_BOOK2 IS NOT NULL);
  END BK2;

  FUNCTION BK3 RETURN BOOLEAN IS
  BEGIN
    RETURN (P_BOOK3 IS NOT NULL);
  END BK3;

  FUNCTION BK4 RETURN BOOLEAN IS
  BEGIN
    RETURN (P_BOOK4 IS NOT NULL);
  END BK4;

  FUNCTION ACCT_BAL_APROMPT_P RETURN VARCHAR2 IS
  BEGIN
    RETURN ACCT_BAL_APROMPT;
  END ACCT_BAL_APROMPT_P;

  FUNCTION ACCT_CC_APROMPT_P RETURN VARCHAR2 IS
  BEGIN
    RETURN ACCT_CC_APROMPT;
  END ACCT_CC_APROMPT_P;

  FUNCTION CAT_MAJ_RPROMPT_P RETURN VARCHAR2 IS
  BEGIN
    RETURN CAT_MAJ_RPROMPT;
  END CAT_MAJ_RPROMPT_P;

  FUNCTION RP_COMPANY_NAME_P RETURN VARCHAR2 IS
  BEGIN
    RETURN RP_COMPANY_NAME;
  END RP_COMPANY_NAME_P;

  FUNCTION RP_REPORT_NAME_P RETURN VARCHAR2 IS
  BEGIN
    RETURN RP_REPORT_NAME;
  END RP_REPORT_NAME_P;

END FA_FASPRJ_XMLP_PKG;


/
