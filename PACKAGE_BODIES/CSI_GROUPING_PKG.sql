--------------------------------------------------------
--  DDL for Package Body CSI_GROUPING_PKG
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE PACKAGE BODY "APPS"."CSI_GROUPING_PKG" as
/* $Header: csitgrpb.pls 120.3 2008/04/03 21:52:45 devijay ship $*/

G_PKG_NAME CONSTANT VARCHAR2(30)  := 'CSI_GROUPING_PKG';
G_FILE_NAME CONSTANT VARCHAR2(12) := 'csitgrpb.pls';

PROCEDURE Insert_Row(
      px_COUNTER_GROUP_ID 		IN OUT NOCOPY NUMBER
	,p_NAME                         VARCHAR2
	,p_DESCRIPTION                  VARCHAR2
	,p_TEMPLATE_FLAG                VARCHAR2
	,p_CP_SERVICE_ID                NUMBER
	,p_CUSTOMER_PRODUCT_ID          NUMBER
	,p_LAST_UPDATE_DATE             DATE
	,p_LAST_UPDATED_BY              NUMBER
	,p_CREATION_DATE                DATE
	,p_CREATED_BY                   NUMBER
	,p_LAST_UPDATE_LOGIN            NUMBER
	,p_START_DATE_ACTIVE            DATE
	,p_END_DATE_ACTIVE              DATE
	,p_ATTRIBUTE1                   VARCHAR2
	,p_ATTRIBUTE2                   VARCHAR2
	,p_ATTRIBUTE3                   VARCHAR2
	,p_ATTRIBUTE4                   VARCHAR2
	,p_ATTRIBUTE5                   VARCHAR2
	,p_ATTRIBUTE6                   VARCHAR2
	,p_ATTRIBUTE7                   VARCHAR2
	,p_ATTRIBUTE8                   VARCHAR2
	,p_ATTRIBUTE9                   VARCHAR2
	,p_ATTRIBUTE10                  VARCHAR2
	,p_ATTRIBUTE11                  VARCHAR2
	,p_ATTRIBUTE12                  VARCHAR2
	,p_ATTRIBUTE13                  VARCHAR2
	,p_ATTRIBUTE14                  VARCHAR2
	,p_ATTRIBUTE15                  VARCHAR2
	,p_CONTEXT                      VARCHAR2
	,p_OBJECT_VERSION_NUMBER        NUMBER
	,p_CREATED_FROM_CTR_GRP_TMPL_ID NUMBER
	,p_ASSOCIATION_TYPE             VARCHAR2
	,p_SOURCE_OBJECT_CODE           VARCHAR2
	,p_SOURCE_OBJECT_ID             NUMBER
	,p_SOURCE_COUNTER_GROUP_ID      NUMBER
	,p_SECURITY_GROUP_ID            NUMBER
      )  IS

   CURSOR C1 IS
   SELECT CS_COUNTER_GROUPS_S.nextval
   FROM   dual;
BEGIN
   IF (px_COUNTER_GROUP_ID IS NULL) OR (px_COUNTER_GROUP_ID = FND_API.G_MISS_NUM) then
      OPEN C1;
      FETCH C1 INTO px_COUNTER_GROUP_ID;
      CLOSE C1;
   END IF;

   INSERT INTO CS_CSI_COUNTER_GROUPS(
        COUNTER_GROUP_ID
	,NAME
	,DESCRIPTION
	,TEMPLATE_FLAG
	,CP_SERVICE_ID
	,CUSTOMER_PRODUCT_ID
	,LAST_UPDATE_DATE
	,LAST_UPDATED_BY
	,CREATION_DATE
	,CREATED_BY
	,LAST_UPDATE_LOGIN
	,START_DATE_ACTIVE
	,END_DATE_ACTIVE
	,ATTRIBUTE1
	,ATTRIBUTE2
	,ATTRIBUTE3
	,ATTRIBUTE4
	,ATTRIBUTE5
	,ATTRIBUTE6
	,ATTRIBUTE7
	,ATTRIBUTE8
	,ATTRIBUTE9
	,ATTRIBUTE10
	,ATTRIBUTE11
	,ATTRIBUTE12
	,ATTRIBUTE13
	,ATTRIBUTE14
	,ATTRIBUTE15
	,CONTEXT
	,OBJECT_VERSION_NUMBER
	,CREATED_FROM_CTR_GRP_TMPL_ID
	,ASSOCIATION_TYPE
	,SOURCE_OBJECT_CODE
	,SOURCE_OBJECT_ID
	,SOURCE_COUNTER_GROUP_ID
	,SECURITY_GROUP_ID
      )
   VALUES(
        px_COUNTER_GROUP_ID
	,decode(p_NAME, FND_API.G_MISS_CHAR, NULL,p_NAME)
	,decode(p_DESCRIPTION, FND_API.G_MISS_CHAR, NULL,p_DESCRIPTION)
	,decode(p_TEMPLATE_FLAG, FND_API.G_MISS_CHAR, NULL, p_TEMPLATE_FLAG)
	,decode(p_CP_SERVICE_ID, FND_API.G_MISS_NUM, NULL, p_CP_SERVICE_ID)
	,decode(p_CUSTOMER_PRODUCT_ID, FND_API.G_MISS_NUM, NULL, p_CUSTOMER_PRODUCT_ID)
	,decode(p_LAST_UPDATE_DATE, FND_API.G_MISS_DATE, TO_DATE(NULL), p_LAST_UPDATE_DATE)
	,decode(p_LAST_UPDATED_BY, FND_API.G_MISS_NUM, NULL, p_LAST_UPDATED_BY)
	,decode(p_CREATION_DATE, FND_API.G_MISS_DATE, TO_DATE(NULL), p_CREATION_DATE)
	,decode(p_CREATED_BY, FND_API.G_MISS_NUM, NULL,p_CREATED_BY)
	,decode(p_LAST_UPDATE_LOGIN, FND_API.G_MISS_NUM, NULL,p_LAST_UPDATE_LOGIN)
	,decode(p_START_DATE_ACTIVE, FND_API.G_MISS_DATE, TO_DATE(NULL), p_START_DATE_ACTIVE)
	,decode(p_END_DATE_ACTIVE, FND_API.G_MISS_DATE, TO_DATE(NULL), p_END_DATE_ACTIVE)
	,decode(p_ATTRIBUTE1, FND_API.G_MISS_CHAR, NULL, p_ATTRIBUTE1)
	,decode(p_ATTRIBUTE2, FND_API.G_MISS_CHAR, NULL, p_ATTRIBUTE2)
	,decode(p_ATTRIBUTE3, FND_API.G_MISS_CHAR, NULL, p_ATTRIBUTE3)
	,decode(p_ATTRIBUTE4, FND_API.G_MISS_CHAR, NULL, p_ATTRIBUTE4)
	,decode(p_ATTRIBUTE5, FND_API.G_MISS_CHAR, NULL, p_ATTRIBUTE5)
	,decode(p_ATTRIBUTE6, FND_API.G_MISS_CHAR, NULL, p_ATTRIBUTE6)
	,decode(p_ATTRIBUTE7, FND_API.G_MISS_CHAR, NULL, p_ATTRIBUTE7)
	,decode(p_ATTRIBUTE8, FND_API.G_MISS_CHAR, NULL, p_ATTRIBUTE8)
	,decode(p_ATTRIBUTE9, FND_API.G_MISS_CHAR, NULL, p_ATTRIBUTE9)
	,decode(p_ATTRIBUTE10, FND_API.G_MISS_CHAR, NULL, p_ATTRIBUTE10)
	,decode(p_ATTRIBUTE11, FND_API.G_MISS_CHAR, NULL, p_ATTRIBUTE11)
	,decode(p_ATTRIBUTE12, FND_API.G_MISS_CHAR, NULL, p_ATTRIBUTE12)
	,decode(p_ATTRIBUTE13, FND_API.G_MISS_CHAR, NULL, p_ATTRIBUTE13)
	,decode(p_ATTRIBUTE14, FND_API.G_MISS_CHAR, NULL, p_ATTRIBUTE14)
	,decode(p_ATTRIBUTE15, FND_API.G_MISS_CHAR, NULL, p_ATTRIBUTE15)
	,decode(p_CONTEXT , FND_API.G_MISS_CHAR, NULL, p_CONTEXT)
	,decode(p_OBJECT_VERSION_NUMBER, FND_API.G_MISS_NUM, NULL, p_OBJECT_VERSION_NUMBER)
	,decode(p_CREATED_FROM_CTR_GRP_TMPL_ID, FND_API.G_MISS_NUM, NULL, p_CREATED_FROM_CTR_GRP_TMPL_ID)
	,decode(p_ASSOCIATION_TYPE, FND_API.G_MISS_CHAR, NULL, p_ASSOCIATION_TYPE)
  	,decode(p_SOURCE_OBJECT_CODE, FND_API.G_MISS_CHAR, NULL, p_SOURCE_OBJECT_CODE)
	,decode(p_SOURCE_OBJECT_ID, FND_API.G_MISS_NUM, NULL, p_SOURCE_OBJECT_ID)
	,decode(p_SOURCE_COUNTER_GROUP_ID, FND_API.G_MISS_NUM, NULL, p_SOURCE_COUNTER_GROUP_ID)
	,decode(p_SECURITY_GROUP_ID, FND_API.G_MISS_NUM, NULL, p_SECURITY_GROUP_ID)
    );
End Insert_Row;

PROCEDURE Update_Row(
        p_COUNTER_GROUP_ID 		NUMBER
	,p_NAME                         VARCHAR2
	,p_DESCRIPTION                  VARCHAR2
	,p_TEMPLATE_FLAG                VARCHAR2
	,p_CP_SERVICE_ID                NUMBER
	,p_CUSTOMER_PRODUCT_ID          NUMBER
	,p_LAST_UPDATE_DATE             DATE
	,p_LAST_UPDATED_BY              NUMBER
	,p_CREATION_DATE                DATE
	,p_CREATED_BY                   NUMBER
	,p_LAST_UPDATE_LOGIN            NUMBER
	,p_START_DATE_ACTIVE            DATE
	,p_END_DATE_ACTIVE              DATE
	,p_ATTRIBUTE1                   VARCHAR2
	,p_ATTRIBUTE2                   VARCHAR2
	,p_ATTRIBUTE3                   VARCHAR2
	,p_ATTRIBUTE4                   VARCHAR2
	,p_ATTRIBUTE5                   VARCHAR2
	,p_ATTRIBUTE6                   VARCHAR2
	,p_ATTRIBUTE7                   VARCHAR2
	,p_ATTRIBUTE8                   VARCHAR2
	,p_ATTRIBUTE9                   VARCHAR2
	,p_ATTRIBUTE10                  VARCHAR2
	,p_ATTRIBUTE11                  VARCHAR2
	,p_ATTRIBUTE12                  VARCHAR2
	,p_ATTRIBUTE13                  VARCHAR2
	,p_ATTRIBUTE14                  VARCHAR2
	,p_ATTRIBUTE15                  VARCHAR2
	,p_CONTEXT                      VARCHAR2
	,p_OBJECT_VERSION_NUMBER        NUMBER
	,p_CREATED_FROM_CTR_GRP_TMPL_ID NUMBER
	,p_ASSOCIATION_TYPE             VARCHAR2
	,p_SOURCE_OBJECT_CODE           VARCHAR2
	,p_SOURCE_OBJECT_ID             NUMBER
	,p_SOURCE_COUNTER_GROUP_ID      NUMBER
	,p_SECURITY_GROUP_ID            NUMBER)  IS
 BEGIN
    UPDATE CS_CSI_COUNTER_GROUPS
    SET    NAME = decode(p_NAME, NULL, NAME, FND_API.G_MISS_CHAR, NULL, p_NAME)
	   ,DESCRIPTION = decode(p_DESCRIPTION, NULL, DESCRIPTION, FND_API.G_MISS_CHAR, NULL, p_DESCRIPTION)
	   ,TEMPLATE_FLAG = decode(p_TEMPLATE_FLAG, NULL, TEMPLATE_FLAG,  FND_API.G_MISS_CHAR, NULL, p_TEMPLATE_FLAG)
	   ,CP_SERVICE_ID = decode(p_CP_SERVICE_ID, NULL, CP_SERVICE_ID, FND_API.G_MISS_NUM, NULL, p_CP_SERVICE_ID)
	   ,CUSTOMER_PRODUCT_ID = decode(p_CUSTOMER_PRODUCT_ID, NULL, CUSTOMER_PRODUCT_ID, FND_API.G_MISS_NUM, NULL, p_CUSTOMER_PRODUCT_ID)
  	   ,LAST_UPDATE_DATE = decode(p_LAST_UPDATE_DATE, NULL, LAST_UPDATE_DATE, FND_API.G_MISS_DATE, NULL,p_LAST_UPDATE_DATE)
	   ,LAST_UPDATED_BY = decode(p_LAST_UPDATED_BY, NULL,LAST_UPDATED_BY, FND_API.G_MISS_NUM, NULL,p_LAST_UPDATED_BY)
   	   ,CREATION_DATE = decode(p_CREATION_DATE, NULL, CREATION_DATE, FND_API.G_MISS_DATE, CREATION_DATE, p_CREATION_DATE)
	   ,CREATED_BY = decode(p_CREATED_BY, NULL, CREATED_BY, FND_API.G_MISS_NUM, CREATED_BY, p_CREATED_BY)
	   ,LAST_UPDATE_LOGIN = decode(p_LAST_UPDATE_LOGIN, NULL,LAST_UPDATE_LOGIN, FND_API.G_MISS_NUM, NULL, p_LAST_UPDATE_LOGIN)
 	   ,START_DATE_ACTIVE = decode(p_START_DATE_ACTIVE, NULL, START_DATE_ACTIVE, FND_API.G_MISS_DATE, NULL, p_START_DATE_ACTIVE)
  	   ,END_DATE_ACTIVE = decode(p_END_DATE_ACTIVE, NULL, END_DATE_ACTIVE, FND_API.G_MISS_DATE, NULL,p_END_DATE_ACTIVE)
	   ,ATTRIBUTE1 = decode(p_ATTRIBUTE1, NULL, ATTRIBUTE1, FND_API.G_MISS_CHAR, NULL, p_ATTRIBUTE1)
	   ,ATTRIBUTE2 = decode(p_ATTRIBUTE2, NULL, ATTRIBUTE2, FND_API.G_MISS_CHAR, NULL, p_ATTRIBUTE2)
	   ,ATTRIBUTE3 = decode(p_ATTRIBUTE3, NULL, ATTRIBUTE3, FND_API.G_MISS_CHAR, NULL, p_ATTRIBUTE3)
	   ,ATTRIBUTE4 = decode(p_ATTRIBUTE4, NULL, ATTRIBUTE4, FND_API.G_MISS_CHAR, NULL, p_ATTRIBUTE4)
	   ,ATTRIBUTE5 = decode(p_ATTRIBUTE5, NULL, ATTRIBUTE5, FND_API.G_MISS_CHAR, NULL, p_ATTRIBUTE5)
	   ,ATTRIBUTE6 = decode(p_ATTRIBUTE6, NULL, ATTRIBUTE6, FND_API.G_MISS_CHAR, NULL, p_ATTRIBUTE6)
	   ,ATTRIBUTE7 = decode(p_ATTRIBUTE7, NULL, ATTRIBUTE7, FND_API.G_MISS_CHAR, NULL, p_ATTRIBUTE7)
	   ,ATTRIBUTE8 = decode(p_ATTRIBUTE8, NULL, ATTRIBUTE8, FND_API.G_MISS_CHAR, NULL, p_ATTRIBUTE8)
	   ,ATTRIBUTE9 = decode(p_ATTRIBUTE9, NULL, ATTRIBUTE9, FND_API.G_MISS_CHAR, NULL, p_ATTRIBUTE9)
	   ,ATTRIBUTE10 = decode(p_ATTRIBUTE10, NULL, ATTRIBUTE10, FND_API.G_MISS_CHAR, NULL, p_ATTRIBUTE10)
	   ,ATTRIBUTE11 = decode(p_ATTRIBUTE11, NULL, ATTRIBUTE11, FND_API.G_MISS_CHAR, NULL, p_ATTRIBUTE11)
	   ,ATTRIBUTE12 = decode(p_ATTRIBUTE12, NULL, ATTRIBUTE12, FND_API.G_MISS_CHAR, NULL, p_ATTRIBUTE12)
	   ,ATTRIBUTE13 = decode(p_ATTRIBUTE13, NULL, ATTRIBUTE13, FND_API.G_MISS_CHAR, NULL, p_ATTRIBUTE13)
	   ,ATTRIBUTE14 = decode(p_ATTRIBUTE14, NULL, ATTRIBUTE14, FND_API.G_MISS_CHAR, NULL, p_ATTRIBUTE14)
	   ,ATTRIBUTE15 = decode(p_ATTRIBUTE15, NULL, ATTRIBUTE15, FND_API.G_MISS_CHAR, NULL, p_ATTRIBUTE15)
	   ,CONTEXT = decode(p_CONTEXT, NULL, CONTEXT, FND_API.G_MISS_CHAR, NULL, p_CONTEXT)
	   ,OBJECT_VERSION_NUMBER = decode(p_OBJECT_VERSION_NUMBER, NULL, OBJECT_VERSION_NUMBER, FND_API.G_MISS_NUM, NULL, p_OBJECT_VERSION_NUMBER)
  	   ,CREATED_FROM_CTR_GRP_TMPL_ID = decode(p_CREATED_FROM_CTR_GRP_TMPL_ID, NULL, CREATED_FROM_CTR_GRP_TMPL_ID, FND_API.G_MISS_NUM, NULL, p_CREATED_FROM_CTR_GRP_TMPL_ID)
	,ASSOCIATION_TYPE = decode(p_ASSOCIATION_TYPE, NULL, ASSOCIATION_TYPE, FND_API.G_MISS_CHAR, NULL, p_ASSOCIATION_TYPE)
  	,SOURCE_OBJECT_CODE = decode(p_SOURCE_OBJECT_CODE, NULL, SOURCE_OBJECT_CODE, FND_API.G_MISS_CHAR, NULL, p_SOURCE_OBJECT_CODE)
	,SOURCE_OBJECT_ID = decode(p_SOURCE_OBJECT_ID, NULL, SOURCE_OBJECT_ID, FND_API.G_MISS_NUM, NULL, p_SOURCE_OBJECT_ID)
	,SOURCE_COUNTER_GROUP_ID = decode(p_SOURCE_COUNTER_GROUP_ID, NULL, SOURCE_COUNTER_GROUP_ID, FND_API.G_MISS_NUM, NULL, p_SOURCE_COUNTER_GROUP_ID)
	,SECURITY_GROUP_ID = decode(p_SECURITY_GROUP_ID, NULL, SECURITY_GROUP_ID, FND_API.G_MISS_NUM, NULL, p_SECURITY_GROUP_ID)
    WHERE  COUNTER_GROUP_ID = p_COUNTER_GROUP_ID;

    If (SQL%NOTFOUND) then
        RAISE NO_DATA_FOUND;
    End If;
END Update_Row;

PROCEDURE Delete_Row(p_COUNTER_GROUP_ID  NUMBER)  IS
BEGIN
   DELETE FROM CS_CSI_COUNTER_GROUPS
   WHERE  COUNTER_GROUP_ID = p_COUNTER_GROUP_ID;
   IF (SQL%NOTFOUND) then
       RAISE NO_DATA_FOUND;
   END IF;
END Delete_Row;

PROCEDURE Lock_Row(
        p_COUNTER_GROUP_ID 		NUMBER
	,p_NAME                         VARCHAR2
	,p_DESCRIPTION                  VARCHAR2
	,p_TEMPLATE_FLAG                VARCHAR2
	,p_CP_SERVICE_ID                NUMBER
	,p_CUSTOMER_PRODUCT_ID          NUMBER
	,p_LAST_UPDATE_DATE             DATE
	,p_LAST_UPDATED_BY              NUMBER
	,p_CREATION_DATE                DATE
	,p_CREATED_BY                   NUMBER
	,p_LAST_UPDATE_LOGIN            NUMBER
	,p_START_DATE_ACTIVE            DATE
	,p_END_DATE_ACTIVE              DATE
	,p_ATTRIBUTE1                   VARCHAR2
	,p_ATTRIBUTE2                   VARCHAR2
	,p_ATTRIBUTE3                   VARCHAR2
	,p_ATTRIBUTE4                   VARCHAR2
	,p_ATTRIBUTE5                   VARCHAR2
	,p_ATTRIBUTE6                   VARCHAR2
	,p_ATTRIBUTE7                   VARCHAR2
	,p_ATTRIBUTE8                   VARCHAR2
	,p_ATTRIBUTE9                   VARCHAR2
	,p_ATTRIBUTE10                  VARCHAR2
	,p_ATTRIBUTE11                  VARCHAR2
	,p_ATTRIBUTE12                  VARCHAR2
	,p_ATTRIBUTE13                  VARCHAR2
	,p_ATTRIBUTE14                  VARCHAR2
	,p_ATTRIBUTE15                  VARCHAR2
	,p_CONTEXT                      VARCHAR2
	,p_OBJECT_VERSION_NUMBER        NUMBER
	,p_CREATED_FROM_CTR_GRP_TMPL_ID NUMBER
	,p_ASSOCIATION_TYPE             VARCHAR2
	,p_SOURCE_OBJECT_CODE           VARCHAR2
	,p_SOURCE_OBJECT_ID             NUMBER
	,p_SOURCE_COUNTER_GROUP_ID      NUMBER
	,p_SECURITY_GROUP_ID            NUMBER)  IS

   CURSOR C1 IS
   SELECT *
   FROM   CS_CSI_COUNTER_GROUPS
   WHERE  COUNTER_GROUP_ID = p_COUNTER_GROUP_ID
   FOR UPDATE of COUNTER_GROUP_ID NOWAIT;
   Recinfo C1%ROWTYPE;
BEGIN
   OPEN C1;
   FETCH C1 INTO Recinfo;
   IF (C1%NOTFOUND) then
      CLOSE C1;
      FND_MESSAGE.SET_NAME('FND', 'FORM_RECORD_DELETED');
      APP_EXCEPTION.RAISE_EXCEPTION;
   END IF;
   CLOSE C1;

   IF (
           (      Recinfo.COUNTER_GROUP_ID  = p_COUNTER_GROUP_ID )
       AND (    ( Recinfo.NAME = p_NAME)
            OR (    ( Recinfo.NAME IS NULL )
                AND (  p_NAME IS NULL )))
       AND (    ( Recinfo.DESCRIPTION = p_DESCRIPTION)
            OR (    ( Recinfo.DESCRIPTION IS NULL )
                AND (  p_DESCRIPTION IS NULL )))
       AND (    ( Recinfo.TEMPLATE_FLAG = p_TEMPLATE_FLAG)
            OR (    ( Recinfo.TEMPLATE_FLAG IS NULL )
                AND (  p_TEMPLATE_FLAG IS NULL )))
       AND (    ( Recinfo.CP_SERVICE_ID = p_CP_SERVICE_ID)
            OR (    ( Recinfo.CP_SERVICE_ID IS NULL )
                AND (  p_CP_SERVICE_ID IS NULL )))
       AND (    ( Recinfo.CUSTOMER_PRODUCT_ID = p_CUSTOMER_PRODUCT_ID)
            OR (    ( Recinfo.CUSTOMER_PRODUCT_ID IS NULL )
                AND (  p_CUSTOMER_PRODUCT_ID IS NULL )))
       AND (    ( Recinfo.LAST_UPDATE_DATE = p_LAST_UPDATE_DATE)
            OR (    ( Recinfo.LAST_UPDATE_DATE IS NULL )
                AND (  p_LAST_UPDATE_DATE IS NULL )))
       AND (    ( Recinfo.LAST_UPDATED_BY = p_LAST_UPDATED_BY)
            OR (    ( Recinfo.LAST_UPDATED_BY IS NULL )
                AND (  p_LAST_UPDATED_BY IS NULL )))
       AND (    ( Recinfo.CREATION_DATE = p_CREATION_DATE)
            OR (    ( Recinfo.CREATION_DATE IS NULL )
                AND (  p_CREATION_DATE IS NULL )))
       AND (    ( Recinfo.CREATED_BY = p_CREATED_BY)
            OR (    ( Recinfo.CREATED_BY IS NULL )
                AND (  p_CREATED_BY IS NULL )))
       AND (    ( Recinfo.LAST_UPDATE_LOGIN = p_LAST_UPDATE_LOGIN)
            OR (    ( Recinfo.LAST_UPDATE_LOGIN IS NULL )
                AND (  p_LAST_UPDATE_LOGIN IS NULL )))
       AND (    ( Recinfo.START_DATE_ACTIVE = p_START_DATE_ACTIVE)
             OR (    ( Recinfo.START_DATE_ACTIVE IS NULL )
                AND (  p_START_DATE_ACTIVE IS NULL )))
       AND (    ( Recinfo.END_DATE_ACTIVE = p_END_DATE_ACTIVE)
             OR (    ( Recinfo.END_DATE_ACTIVE IS NULL )
                AND (  p_END_DATE_ACTIVE IS NULL )))
       AND (    ( Recinfo.ATTRIBUTE1 = p_ATTRIBUTE1)
            OR (    ( Recinfo.ATTRIBUTE1 IS NULL )
                AND (  p_ATTRIBUTE1 IS NULL )))
       AND (    ( Recinfo.ATTRIBUTE2 = p_ATTRIBUTE2)
            OR (    ( Recinfo.ATTRIBUTE2 IS NULL )
                AND (  p_ATTRIBUTE2 IS NULL )))
       AND (    ( Recinfo.ATTRIBUTE3 = p_ATTRIBUTE3)
            OR (    ( Recinfo.ATTRIBUTE3 IS NULL )
                AND (  p_ATTRIBUTE3 IS NULL )))
       AND (    ( Recinfo.ATTRIBUTE4 = p_ATTRIBUTE4)
            OR (    ( Recinfo.ATTRIBUTE4 IS NULL )
                AND (  p_ATTRIBUTE4 IS NULL )))
       AND (    ( Recinfo.ATTRIBUTE5 = p_ATTRIBUTE5)
            OR (    ( Recinfo.ATTRIBUTE5 IS NULL )
                AND (  p_ATTRIBUTE5 IS NULL )))
       AND (    ( Recinfo.ATTRIBUTE6 = p_ATTRIBUTE6)
            OR (    ( Recinfo.ATTRIBUTE6 IS NULL )
                AND (  p_ATTRIBUTE6 IS NULL )))
       AND (    ( Recinfo.ATTRIBUTE7 = p_ATTRIBUTE7)
            OR (    ( Recinfo.ATTRIBUTE7 IS NULL )
                AND (  p_ATTRIBUTE7 IS NULL )))
       AND (    ( Recinfo.ATTRIBUTE8 = p_ATTRIBUTE8)
            OR (    ( Recinfo.ATTRIBUTE8 IS NULL )
                AND (  p_ATTRIBUTE8 IS NULL )))
       AND (    ( Recinfo.ATTRIBUTE9 = p_ATTRIBUTE9)
            OR (    ( Recinfo.ATTRIBUTE9 IS NULL )
                AND (  p_ATTRIBUTE9 IS NULL )))
       AND (    ( Recinfo.ATTRIBUTE10 = p_ATTRIBUTE10)
            OR (    ( Recinfo.ATTRIBUTE10 IS NULL )
                AND (  p_ATTRIBUTE10 IS NULL )))
       AND (    ( Recinfo.ATTRIBUTE11 = p_ATTRIBUTE11)
            OR (    ( Recinfo.ATTRIBUTE11 IS NULL )
                AND (  p_ATTRIBUTE11 IS NULL )))
       AND (    ( Recinfo.ATTRIBUTE12 = p_ATTRIBUTE12)
            OR (    ( Recinfo.ATTRIBUTE12 IS NULL )
                AND (  p_ATTRIBUTE12 IS NULL )))
       AND (    ( Recinfo.ATTRIBUTE13 = p_ATTRIBUTE13)
            OR (    ( Recinfo.ATTRIBUTE13 IS NULL )
                AND (  p_ATTRIBUTE13 IS NULL )))
       AND (    ( Recinfo.ATTRIBUTE14 = p_ATTRIBUTE14)
            OR (    ( Recinfo.ATTRIBUTE14 IS NULL )
                AND (  p_ATTRIBUTE14 IS NULL )))
       AND (    ( Recinfo.ATTRIBUTE15 = p_ATTRIBUTE15)
            OR (    ( Recinfo.ATTRIBUTE15 IS NULL )
                AND (  p_ATTRIBUTE15 IS NULL )))
       AND (    ( Recinfo.CONTEXT = p_CONTEXT)
            OR (    ( Recinfo.CONTEXT IS NULL )
                AND (  p_CONTEXT IS NULL )))
       AND (    ( Recinfo.OBJECT_VERSION_NUMBER = p_OBJECT_VERSION_NUMBER)
            OR (    ( Recinfo.OBJECT_VERSION_NUMBER IS NULL )
                AND (  p_OBJECT_VERSION_NUMBER IS NULL )))
       AND (    ( Recinfo.CREATED_FROM_CTR_GRP_TMPL_ID = p_CREATED_FROM_CTR_GRP_TMPL_ID)
            OR (    ( Recinfo.CREATED_FROM_CTR_GRP_TMPL_ID IS NULL )
                AND (  p_CREATED_FROM_CTR_GRP_TMPL_ID IS NULL )))
       AND (    ( Recinfo.ASSOCIATION_TYPE = p_ASSOCIATION_TYPE)
            OR (    ( Recinfo.ASSOCIATION_TYPE IS NULL )
                AND (  p_ASSOCIATION_TYPE IS NULL )))
       AND (    ( Recinfo.SOURCE_OBJECT_CODE = p_SOURCE_OBJECT_CODE)
            OR (    ( Recinfo.SOURCE_OBJECT_CODE IS NULL )
                AND (  p_SOURCE_OBJECT_CODE IS NULL )))
       AND (    ( Recinfo.SOURCE_OBJECT_ID = p_SOURCE_OBJECT_ID)
            OR (    ( Recinfo.SOURCE_OBJECT_ID IS NULL )
                AND (  p_SOURCE_OBJECT_ID IS NULL )))
       AND (    ( Recinfo.SOURCE_COUNTER_GROUP_ID = p_SOURCE_COUNTER_GROUP_ID)
            OR (    ( Recinfo.SOURCE_COUNTER_GROUP_ID IS NULL )
                AND (  p_SOURCE_COUNTER_GROUP_ID IS NULL )))
       AND (    ( Recinfo.SECURITY_GROUP_ID = p_SECURITY_GROUP_ID)
            OR (    ( Recinfo.SECURITY_GROUP_ID IS NULL )
                AND (  p_SECURITY_GROUP_ID IS NULL )))
       ) then
       return;
   ELSE
      FND_MESSAGE.SET_NAME('FND', 'FORM_RECORD_CHANGED');
      APP_EXCEPTION.RAISE_EXCEPTION;
   END IF;
END Lock_Row;

End CSI_GROUPING_PKG;

/
