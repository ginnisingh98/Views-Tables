--------------------------------------------------------
--  DDL for Package Body WSH_WSHRDOPN_XMLP_PKG
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE PACKAGE BODY "APPS"."WSH_WSHRDOPN_XMLP_PKG" AS
/* $Header: WSHRDOPNB.pls 120.2 2007/12/25 07:26:23 nchinnam noship $ */
  FUNCTION BEFOREREPORT RETURN BOOLEAN IS
    CURSOR GET_ORG_CODE IS
      SELECT
        ORGANIZATION_CODE
      FROM
        MTL_PARAMETERS
      WHERE ORGANIZATION_ID = P_ORGANIZATION_ID;
    X_ORGANIZATION MTL_PARAMETERS.ORGANIZATION_CODE%TYPE;
    CURSOR GET_ORG_NAME IS
      SELECT
        NAME
      FROM
        HR_ALL_ORGANIZATION_UNITS
      WHERE ORGANIZATION_ID = P_ORGANIZATION_ID;
    X_NAME HR_ALL_ORGANIZATION_UNITS.NAME%TYPE;
    V_SHIP_TO VARCHAR2(20) := NULL;
    V_CUSTOMER HZ_CUST_ACCOUNTS.ACCOUNT_NUMBER%TYPE;
    V_CUST_ID NUMBER;
    CURSOR GET_CUSTOMER IS
      SELECT
        ACCOUNT_NUMBER
      FROM
        HZ_CUST_ACCOUNTS
      WHERE CUST_ACCOUNT_ID = V_CUST_ID;
    V_SHIP FND_LOOKUP_VALUES_VL.LOOKUP_CODE%TYPE;
    V_ITEM_DISPLAY WSH_LOOKUPS.MEANING%TYPE;
    CURSOR GET_ITEM_DISP_MEANING IS
      SELECT
        MEANING
      FROM
        WSH_LOOKUPS
      WHERE LOOKUP_TYPE = 'ITEM_DISPLAY'
        AND LOOKUP_CODE = P_ITEM_DISPLAY;
    V_CONCAT MTL_SYSTEM_ITEMS_KFV.CONCATENATED_SEGMENTS%TYPE;
    V_ITEM_ID MTL_SYSTEM_ITEMS_KFV.INVENTORY_ITEM_ID%TYPE;
    CURSOR GET_ITEM_NAME IS
      SELECT
        CONCATENATED_SEGMENTS
      FROM
        MTL_SYSTEM_ITEMS_KFV
      WHERE ORGANIZATION_ID = P_ORGANIZATION_ID
        AND INVENTORY_ITEM_ID = V_ITEM_ID;
    V_ITEM_SELECT VARCHAR2(90);
    V_ITEM_FROM VARCHAR2(150);
    V_ITEM_WHERE VARCHAR2(240);
    V_ITEM_QUALIFY VARCHAR2(240);
    V_ITEM_TOTAL VARCHAR2(720);
    V_BATCH_ID WSH_PICKING_BATCHES.BATCH_ID%TYPE;
    V_BTCH_NO WSH_PICKING_BATCHES.NAME%TYPE;
    CURSOR GET_BATCH_NAME IS
      SELECT
        WPB.NAME
      FROM
        WSH_PICKING_BATCHES WPB
      WHERE WPB.BATCH_ID = V_BATCH_ID;
    V_SORT_DISPLAY FND_LOOKUP_VALUES_VL.MEANING%TYPE;
    CURSOR GET_SORT_DISP_MEANING IS
      SELECT
        MEANING
      FROM
        WSH_LOOKUPS
      WHERE LOOKUP_TYPE = 'OPN_SORT_BY'
        AND LOOKUP_CODE = P_SORT_BY;
  BEGIN
    BEGIN
      P_CONC_REQUEST_ID := FND_GLOBAL.CONC_REQUEST_ID;
      /*SRW.USER_EXIT('FND SRWINIT')*/NULL;
    EXCEPTION
      WHEN /*SRW.USER_EXIT_FAILURE*/OTHERS THEN
        /*SRW.MESSAGE(1
                   ,'Failed FND SRWINIT.')*/NULL;
        /*RAISE SRW.PROGRAM_ABORT*/RAISE_APPLICATION_ERROR(-20101,null);
    END;
    OPEN GET_ORG_CODE;
    FETCH GET_ORG_CODE
     INTO X_ORGANIZATION;
    IF (GET_ORG_CODE%NOTFOUND) THEN
      CP_WAREHOUSE_NAME := NULL;
    ELSE
      CP_WAREHOUSE_NAME := X_ORGANIZATION;
    END IF;
    CLOSE GET_ORG_CODE;
    OPEN GET_ORG_NAME;
    FETCH GET_ORG_NAME
     INTO X_NAME;
    IF (GET_ORG_NAME%NOTFOUND) THEN
      CP_WHSE_LONGNAME := NULL;
    ELSE
      CP_WHSE_LONGNAME := X_NAME;
    END IF;
    CLOSE GET_ORG_NAME;
    IF (P_SHIP_TO IS NULL) THEN
      CP_P_SHIPTO_LOCATION := NULL;
    ELSE
      CP_P_SHIPTO_LOCATION := WSH_UTIL_CORE.GET_LOCATION_DESCRIPTION(P_SHIP_TO
                                                                    ,'NEW UI CODE');
    END IF;
    IF (P_CUSTOMER_ID IS NULL) THEN
      CP_P_CUSTOMER := NULL;
    ELSE
      V_CUST_ID := P_CUSTOMER_ID;
      OPEN GET_CUSTOMER;
      FETCH GET_CUSTOMER
       INTO V_CUSTOMER;
      CLOSE GET_CUSTOMER;
      CP_P_CUSTOMER := V_CUSTOMER;
    END IF;
    IF (P_SHIP_METHOD_CODE IS NULL) THEN
      CP_P_SHIP_METHOD := NULL;
    ELSE
      CP_P_SHIP_METHOD := P_SHIP_METHOD_CODE;
    END IF;
    CP_P_ITEM_DISPLAY := NULL;
    OPEN GET_ITEM_DISP_MEANING;
    FETCH GET_ITEM_DISP_MEANING
     INTO V_ITEM_DISPLAY;
    CLOSE GET_ITEM_DISP_MEANING;
    CP_P_ITEM_DISPLAY := V_ITEM_DISPLAY;
    CP_P_BATCH_NO := NULL;
    IF (P_BATCH_NUMBER IS NOT NULL) THEN
      V_BATCH_ID := P_BATCH_NUMBER;
      OPEN GET_BATCH_NAME;
      FETCH GET_BATCH_NAME
       INTO V_BTCH_NO;
      CLOSE GET_BATCH_NAME;
      CP_P_BATCH_NO := V_BTCH_NO;
    END IF;
    CP_P_FROM_CREATION_DATE := NULL;
    CP_P_TO_CREATION_DATE := NULL;
    IF (P_FROM_CREATION_DATE IS NOT NULL) THEN
      CP_P_FROM_CREATION_DATE := P_FROM_CREATION_DATE;
    END IF;
    IF (P_TO_CREATION_DATE IS NOT NULL) THEN
      CP_P_TO_CREATION_DATE := P_TO_CREATION_DATE;
    END IF;
    CP_P_ITEM_NO := NULL;
    IF (P_ITEM_ID IS NOT NULL) THEN
      V_ITEM_ID := P_ITEM_ID;
      OPEN GET_ITEM_NAME;
      FETCH GET_ITEM_NAME
       INTO V_CONCAT;
      CLOSE GET_ITEM_NAME;
      CP_P_ITEM_NO := V_CONCAT;
    END IF;
    CP_P_SORT_ORDER := NULL;
    OPEN GET_SORT_DISP_MEANING;
    FETCH GET_SORT_DISP_MEANING
     INTO V_SORT_DISPLAY;
    CLOSE GET_SORT_DISP_MEANING;
    CP_P_SORT_ORDER := V_SORT_DISPLAY;
    RETURN (TRUE);
  END BEFOREREPORT;

  FUNCTION AFTERPFORM RETURN BOOLEAN IS
    CURSOR GET_ORG_CODE IS
      SELECT
        ORGANIZATION_CODE
      FROM
        MTL_PARAMETERS
      WHERE ORGANIZATION_ID = P_ORGANIZATION_ID;
    X_ORGANIZATION MTL_PARAMETERS.ORGANIZATION_CODE%TYPE;
    CURSOR GET_ORG_NAME IS
      SELECT
        NAME
      FROM
        HR_ALL_ORGANIZATION_UNITS
      WHERE ORGANIZATION_ID = P_ORGANIZATION_ID;
    X_NAME HR_ALL_ORGANIZATION_UNITS.NAME%TYPE;
    V_SHIP_TO VARCHAR2(20) := NULL;
    V_CUSTOMER HZ_CUST_ACCOUNTS.ACCOUNT_NUMBER%TYPE;
    V_CUST_ID NUMBER;
    CURSOR GET_CUSTOMER IS
      SELECT
        ACCOUNT_NUMBER
      FROM
        HZ_CUST_ACCOUNTS
      WHERE CUST_ACCOUNT_ID = V_CUST_ID;
    V_SHIP FND_LOOKUP_VALUES_VL.LOOKUP_CODE%TYPE;
    V_ITEM_DISPLAY WSH_LOOKUPS.MEANING%TYPE;
    CURSOR GET_ITEM_DISP_MEANING IS
      SELECT
        MEANING
      FROM
        WSH_LOOKUPS
      WHERE LOOKUP_TYPE = 'ITEM_DISPLAY'
        AND LOOKUP_CODE = P_ITEM_DISPLAY;
    V_CONCAT MTL_SYSTEM_ITEMS_KFV.CONCATENATED_SEGMENTS%TYPE;
    V_ITEM_ID MTL_SYSTEM_ITEMS_KFV.INVENTORY_ITEM_ID%TYPE;
    CURSOR GET_ITEM_NAME IS
      SELECT
        CONCATENATED_SEGMENTS
      FROM
        MTL_SYSTEM_ITEMS_KFV
      WHERE ORGANIZATION_ID = P_ORGANIZATION_ID
        AND INVENTORY_ITEM_ID = V_ITEM_ID;
    V_ITEM_SELECT VARCHAR2(90);
    V_ITEM_FROM VARCHAR2(150);
    V_ITEM_WHERE VARCHAR2(240);
    V_ITEM_QUALIFY VARCHAR2(240);
    V_ITEM_TOTAL VARCHAR2(720);
    V_BATCH_ID WSH_PICKING_BATCHES.BATCH_ID%TYPE;
    V_BTCH_NO WSH_PICKING_BATCHES.NAME%TYPE;
    CURSOR GET_BATCH_NAME IS
      SELECT
        WPB.NAME
      FROM
        WSH_PICKING_BATCHES WPB
      WHERE WPB.BATCH_ID = V_BATCH_ID;
    V_SORT_DISPLAY FND_LOOKUP_VALUES_VL.MEANING%TYPE;
    CURSOR GET_SORT_DISP_MEANING IS
      SELECT
        MEANING
      FROM
        WSH_LOOKUPS
      WHERE LOOKUP_TYPE = 'OPN_SORT_BY'
        AND LOOKUP_CODE = P_SORT_BY;
  BEGIN
    IF (P_SHIP_TO IS NULL) THEN
      F_WHERE := ' ';
    ELSE
      V_SHIP_TO := P_SHIP_TO;
      F_WHERE := F_WHERE || ' and wnd.ultimate_dropoff_location_id = :p_ship_to ';
    END IF;
    IF (P_CUSTOMER_ID IS NULL) THEN
      NULL;
    ELSE
      V_CUST_ID := P_CUSTOMER_ID;
      OPEN GET_CUSTOMER;
      FETCH GET_CUSTOMER
       INTO V_CUSTOMER;
      CLOSE GET_CUSTOMER;
      F_WHERE := F_WHERE || ' and hca.account_number = ' || '''' || V_CUSTOMER || '''';
    END IF;
    IF (P_SHIP_METHOD_CODE IS NULL) THEN
      NULL;
    ELSE
      V_SHIP := P_SHIP_METHOD_CODE;
      F_WHERE := F_WHERE || ' and wnd.ship_method_Code = :p_ship_method_code';
    END IF;
    IF (P_BATCH_NUMBER IS NOT NULL) THEN
      V_BATCH_ID := P_BATCH_NUMBER;
      OPEN GET_BATCH_NAME;
      FETCH GET_BATCH_NAME
       INTO V_BTCH_NO;
      CLOSE GET_BATCH_NAME;
      F_WHERE := ' and wdd.batch_id = ' || '''' || V_BTCH_NO || '''';
    END IF;
    IF (P_FROM_CREATION_DATE IS NOT NULL) THEN
      NULL;
    END IF;
    IF (P_TO_CREATION_DATE IS NOT NULL) THEN
      NULL;
    END IF;
    IF (P_FROM_CREATION_DATE IS NULL AND P_TO_CREATION_DATE IS NULL) THEN
      NULL;
    ELSE
      IF (P_FROM_CREATION_DATE IS NOT NULL AND P_TO_CREATION_DATE IS NOT NULL) THEN
        P_TO_CREATION_DATE := P_TO_CREATION_DATE + (86399 / 86400);
        F_WHERE := F_WHERE || ' and wnd.creation_date >= to_date(''' || TO_CHAR(P_FROM_CREATION_DATE
                          ,'YYYY/MM/DD HH24:MI:SS') || ''',''YYYY/MM/DD HH24:MI:SS'')' || ' and wnd.creation_date < to_date(''' || TO_CHAR(P_TO_CREATION_DATE
                          ,'YYYY/MM/DD HH24:MI:SS') || ''',''YYYY/MM/DD HH24:MI:SS'')';
      ELSE
        IF (P_FROM_CREATION_DATE IS NOT NULL) THEN
          F_WHERE := F_WHERE || ' and wnd.creation_date >= to_date(''' || TO_CHAR(P_FROM_CREATION_DATE
                            ,'YYYY/MM/DD HH24:MI:SS') || ''',''YYYY/MM/DD HH24:MI:SS'')';
        ELSE
          P_TO_CREATION_DATE := P_TO_CREATION_DATE + (86399 / 86400);
          F_WHERE := F_WHERE || ' and wnd.creation_date < to_date(''' || TO_CHAR(P_TO_CREATION_DATE
                            ,'YYYY/MM/DD HH24:MI:SS') || ''',''YYYY/MM/DD HH24:MI:SS'')';
        END IF;
      END IF;
    END IF;
    IF (P_ITEM_ID IS NOT NULL) THEN
      V_ITEM_ID := P_ITEM_ID;
      OPEN GET_ITEM_NAME;
      FETCH GET_ITEM_NAME
       INTO V_CONCAT;
      CLOSE GET_ITEM_NAME;
    END IF;
    IF (P_ITEM_ID IS NULL) THEN
      NULL;
    ELSE
      V_ITEM_SELECT := ' and (wnd.name, wnd.delivery_id) IN (select wnd2.name, wnd2.delivery_id ';
      V_ITEM_FROM := 'from wsh_new_deliveries wnd2, wsh_delivery_assignments_v wda2, wsh_delivery_details wdd2, mtl_system_items_kfv msik2 ';
      V_ITEM_WHERE := 'where wnd2.delivery_id = wda2.delivery_id and wda2.delivery_detail_id = wdd2.delivery_detail_id and
                        wnd2.organization_id = msik2.organization_id and wdd2.inventory_item_id = msik2.inventory_item_id and ';
      V_ITEM_QUALIFY := ' msik2.concatenated_segments = ' || '''' || V_CONCAT || '''' || ')';
      V_ITEM_TOTAL := V_ITEM_SELECT || V_ITEM_FROM || V_ITEM_WHERE || V_ITEM_QUALIFY;
      F_WHERE := F_WHERE || V_ITEM_TOTAL;
    END IF;
    OPEN GET_SORT_DISP_MEANING;
    FETCH GET_SORT_DISP_MEANING
     INTO V_SORT_DISPLAY;
    CLOSE GET_SORT_DISP_MEANING;
    IF (P_SORT_BY = NULL) THEN
      F_SORT_ORDER := 'deliv';
    END IF;
    IF (P_SORT_BY = 'D') THEN
      F_SORT_ORDER := 'deliv';
    END IF;
    IF (P_SORT_BY = 'C') THEN
      F_SORT_ORDER := 'credate, deliv';
    END IF;
    IF (P_SORT_BY = 'S') THEN
      F_SORT_ORDER := 'shippri, deliv';
    END IF;
    IF (P_SORT_BY = 'B') THEN
      F_SORT_ORDER := 'batchname, deliv';
    END IF;
    IF (P_SORT_BY = 'M') THEN
      F_SORT_ORDER := 'shipmeth, deliv';
    END IF;
    RETURN (TRUE);
  END AFTERPFORM;

  FUNCTION BEFOREPFORM RETURN BOOLEAN IS
  BEGIN
    RETURN (TRUE);
  END BEFOREPFORM;

  FUNCTION CF_SHIPMENT_PRIORITYFORMULA(SHIPPRI IN VARCHAR2) RETURN CHAR IS
    L_MEANING OE_LOOKUPS.MEANING%TYPE;
  BEGIN
    IF (SHIPPRI IS NOT NULL AND SHIPPRI <> 'Mixed') THEN
      SELECT
        MEANING
      INTO L_MEANING
      FROM
        OE_LOOKUPS
      WHERE LOOKUP_TYPE = 'SHIPMENT_PRIORITY'
        AND LOOKUP_CODE = SHIPPRI;
      RETURN L_MEANING;
    ELSE
      RETURN SHIPPRI;
    END IF;
  END CF_SHIPMENT_PRIORITYFORMULA;

  FUNCTION CF_LPNFORMULA(CONTAINER_FLAG IN VARCHAR2) RETURN CHAR IS
    LPN VARCHAR2(10);
  BEGIN
    IF CONTAINER_FLAG = 'Y' THEN
      SELECT
        MEANING
      INTO LPN
      FROM
        FND_LOOKUPS
      WHERE LOOKUP_CODE = 'Y'
        AND LOOKUP_TYPE = 'YES_NO';
      RETURN (LPN);
    ELSE
      RETURN (NULL);
    END IF;
  END CF_LPNFORMULA;

  FUNCTION AFTERREPORT RETURN BOOLEAN IS
  BEGIN
    BEGIN
      /*SRW.USER_EXIT('FND SRWEXIT')*/NULL;
    EXCEPTION
      WHEN /*SRW.USER_EXIT_FAILURE*/OTHERS THEN
        /*SRW.MESSAGE(1
                   ,'Failed in SRWEXIT')*/NULL;
        RAISE;
    END;
    RETURN (TRUE);
  END AFTERREPORT;

  FUNCTION CP_WAREHOUSE_NAME_P RETURN VARCHAR2 IS
  BEGIN
    RETURN CP_WAREHOUSE_NAME;
  END CP_WAREHOUSE_NAME_P;

  FUNCTION CP_WHSE_LONGNAME_P RETURN VARCHAR2 IS
  BEGIN
    RETURN CP_WHSE_LONGNAME;
  END CP_WHSE_LONGNAME_P;

  FUNCTION CP_P_SHIPTO_LOCATION_P RETURN VARCHAR2 IS
  BEGIN
    RETURN CP_P_SHIPTO_LOCATION;
  END CP_P_SHIPTO_LOCATION_P;

  FUNCTION CP_P_CUSTOMER_P RETURN VARCHAR2 IS
  BEGIN
    RETURN CP_P_CUSTOMER;
  END CP_P_CUSTOMER_P;

  FUNCTION CP_TEMP_P RETURN VARCHAR2 IS
  BEGIN
    RETURN CP_TEMP;
  END CP_TEMP_P;

  FUNCTION CP_P_SHIP_METHOD_P RETURN VARCHAR2 IS
  BEGIN
    RETURN CP_P_SHIP_METHOD;
  END CP_P_SHIP_METHOD_P;

  FUNCTION CP_P_ITEM_NO_P RETURN VARCHAR2 IS
  BEGIN
    RETURN CP_P_ITEM_NO;
  END CP_P_ITEM_NO_P;

  FUNCTION CP_P_BATCH_NO_P RETURN VARCHAR2 IS
  BEGIN
    RETURN CP_P_BATCH_NO;
  END CP_P_BATCH_NO_P;

  FUNCTION CP_P_FROM_CREATION_DATE_P RETURN DATE IS
  BEGIN
    RETURN CP_P_FROM_CREATION_DATE;
  END CP_P_FROM_CREATION_DATE_P;

  FUNCTION CP_P_TO_CREATION_DATE_P RETURN DATE IS
  BEGIN
    RETURN CP_P_TO_CREATION_DATE;
  END CP_P_TO_CREATION_DATE_P;

  FUNCTION CP_P_ITEM_DISPLAY_P RETURN VARCHAR2 IS
  BEGIN
    RETURN CP_P_ITEM_DISPLAY;
  END CP_P_ITEM_DISPLAY_P;

  FUNCTION CP_P_SORT_ORDER_P RETURN VARCHAR2 IS
  BEGIN
    RETURN CP_P_SORT_ORDER;
  END CP_P_SORT_ORDER_P;

END WSH_WSHRDOPN_XMLP_PKG;


/
