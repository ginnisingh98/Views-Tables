--------------------------------------------------------
--  DDL for Package Body WSH_DEPARTURES_PKG
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE PACKAGE BODY "APPS"."WSH_DEPARTURES_PKG" as
/* $Header: WSHDEPHB.pls 115.2 99/07/16 08:18:42 porting ship $ */

  -- The procedure insert_row can possibly return 2 kinds of exceptions
  -- 1. WSH_DEP_DUP_NAME : This the for the case that default departure name
  --                       generated by wsh_external_custom.departure_name
  --                       is duplicate in table wsh_departures
  -- 2. WSH_DEP_NULL_NAME : This is for the case that default departure name
  --                        generated by wsh_external_custom.departure_name
  -- 			    is NULL.
  PROCEDURE Insert_Row(X_Rowid                   IN OUT VARCHAR2,
                       X_Organization_Id                NUMBER,
                       X_Departure_Id                   IN OUT NUMBER,
                       X_Name                           IN OUT VARCHAR2,
                       X_Source_Code                    VARCHAR2,
                       X_Arrive_After_Departure_Id      NUMBER,
                       X_Status_Code                    VARCHAR2,
                       X_Report_Set_Id                  NUMBER,
                       X_Date_Closed                    DATE,
                       X_Vehicle_Item_Id                NUMBER,
                       X_Vehicle_Number                 VARCHAR2,
                       X_Freight_Carrier_Code           VARCHAR2,
                       X_Planned_Departure_Date         DATE,
                       X_Actual_Departure_Date          DATE,
                       X_Bill_Of_Lading                 VARCHAR2,
                       X_Gross_Weight                   NUMBER,
                       X_Net_Weight                     NUMBER,
                       X_Weight_Uom_Code                VARCHAR2,
                       X_Volume                         NUMBER,
                       X_Volume_Uom_Code                VARCHAR2,
                       X_Fill_Percent                   NUMBER,
                       X_Seal_Code                      VARCHAR2,
                       X_Routing_Instructions           VARCHAR2,
                       X_Attribute_Category             VARCHAR2,
                       X_Attribute1                     VARCHAR2,
                       X_Attribute2                     VARCHAR2,
                       X_Attribute3                     VARCHAR2,
                       X_Attribute4                     VARCHAR2,
                       X_Attribute5                     VARCHAR2,
                       X_Attribute6                     VARCHAR2,
                       X_Attribute7                     VARCHAR2,
                       X_Attribute8                     VARCHAR2,
                       X_Attribute9                     VARCHAR2,
                       X_Attribute10                    VARCHAR2,
                       X_Attribute11                    VARCHAR2,
                       X_Attribute12                    VARCHAR2,
                       X_Attribute13                    VARCHAR2,
                       X_Attribute14                    VARCHAR2,
                       X_Attribute15                    VARCHAR2,
                       X_Creation_Date                  DATE,
                       X_Created_By                     NUMBER,
                       X_Last_Update_Date               DATE,
                       X_Last_Updated_By                NUMBER,
                       X_Last_Update_Login              NUMBER
  ) IS
    CURSOR C IS SELECT rowid FROM wsh_departures
                 WHERE departure_id = X_Departure_Id;
      CURSOR C2 IS SELECT wsh_departures_s.nextval FROM sys.dual;
      dname 		wsh_departures.name%TYPE;
      CURSOR C3 (dep_name   VARCHAR2) IS
        SELECT COUNT(*) FROM wsh_departures
        WHERE name = dep_name;
      temp 		NUMBER;
      temp_id		NUMBER;
      duplicate_name	EXCEPTION;
      null_name		EXCEPTION;
   BEGIN
      if (X_Departure_Id is NULL) then
        OPEN C2;
        FETCH C2 INTO X_Departure_Id;
        CLOSE C2;
      end if;

      IF (X_Name IS NULL) THEN
        dname := wsh_external_custom.departure_name(X_Departure_Id);

    	IF ( dname IS NULL ) THEN
          RAISE null_name;
        -- shipping default make sure the departure name is not duplicate
        ELSIF ( dname = TO_CHAR(X_Departure_Id) ) THEN
          temp_id := X_Departure_Id;
          OPEN C2;

          LOOP
            dname := TO_CHAR(temp_id);
            OPEN C3( dname);
            FETCH C3 INTO temp;
            CLOSE C3;
            IF ( temp = 0 ) THEN
              EXIT;
            END IF;

            FETCH C2 INTO temp_id;
          END LOOP;
          CLOSE C2;
	  X_Departure_Id := temp_id;
        ELSE  -- name is generated from wsh_external_custom.departure_name
          OPEN C3( dname);
          FETCH C3 INTO temp;
          CLOSE C3;
          IF ( temp > 0 ) THEN
            RAISE duplicate_name;
          END IF;

        END IF;
        X_Name := dname;
      END IF;

      INSERT INTO wsh_departures(
              organization_id,
              departure_id,
              name,
              source_code,
              arrive_after_departure_id,
              status_code,
              report_set_id,
              date_closed,
              vehicle_item_id,
              vehicle_number,
              freight_carrier_code,
              planned_departure_date,
              actual_departure_date,
              bill_of_lading,
              gross_weight,
              net_weight,
              weight_uom_code,
              volume,
              volume_uom_code,
              fill_percent,
              seal_code,
              routing_instructions,
              attribute_category,
              attribute1,
              attribute2,
              attribute3,
              attribute4,
              attribute5,
              attribute6,
              attribute7,
              attribute8,
              attribute9,
              attribute10,
              attribute11,
              attribute12,
              attribute13,
              attribute14,
              attribute15,
              creation_date,
              created_by,
              last_update_date,
              last_updated_by,
              last_update_login
             ) VALUES (
              X_Organization_Id,
              X_Departure_Id,
              X_Name,
              X_Source_Code,
              X_Arrive_After_Departure_Id,
              X_Status_Code,
              X_Report_Set_Id,
              X_Date_Closed,
              X_Vehicle_Item_Id,
              X_Vehicle_Number,
              X_Freight_Carrier_Code,
              X_Planned_Departure_Date,
              X_Actual_Departure_Date,
              X_Bill_Of_Lading,
              X_Gross_Weight,
              X_Net_Weight,
              X_Weight_Uom_Code,
              X_Volume,
              X_Volume_Uom_Code,
              X_Fill_Percent,
              X_Seal_Code,
              X_Routing_Instructions,
              X_Attribute_Category,
              X_Attribute1,
              X_Attribute2,
              X_Attribute3,
              X_Attribute4,
              X_Attribute5,
              X_Attribute6,
              X_Attribute7,
              X_Attribute8,
              X_Attribute9,
              X_Attribute10,
              X_Attribute11,
              X_Attribute12,
              X_Attribute13,
              X_Attribute14,
              X_Attribute15,
              X_Creation_Date,
              X_Created_By,
              X_Last_Update_Date,
              X_Last_Updated_By,
              X_Last_Update_Login
             );

    OPEN C;
    FETCH C INTO X_Rowid;
    if (C%NOTFOUND) then
      CLOSE C;
      Raise NO_DATA_FOUND;
    end if;
    CLOSE C;
  EXCEPTION
    WHEN duplicate_name THEN
      FND_MESSAGE.Set_Name('OE', 'WSH_DEP_DUP_NAME');
      APP_EXCEPTION.Raise_Exception;
    WHEN null_name THEN
      FND_MESSAGE.Set_Name('OE', 'WSH_DEP_NULL_NAME');
      APP_EXCEPTION.Raise_Exception;
  END Insert_Row;


  PROCEDURE Lock_Row(X_Rowid                            VARCHAR2,
                     X_Organization_Id                  NUMBER,
                     X_Departure_Id                     NUMBER,
                     X_Name                             VARCHAR2,
                     X_Source_Code                      VARCHAR2,
                     X_Arrive_After_Departure_Id        NUMBER,
                     X_Status_Code                      VARCHAR2,
                     X_Report_Set_Id                    NUMBER,
                     X_Date_Closed                      DATE,
                     X_Vehicle_Item_Id                  NUMBER,
                     X_Vehicle_Number                   VARCHAR2,
                     X_Freight_Carrier_Code             VARCHAR2,
                     X_Planned_Departure_Date           DATE,
                     X_Actual_Departure_Date            DATE,
                     X_Bill_Of_Lading                   VARCHAR2,
                     X_Gross_Weight                     NUMBER,
                     X_Net_Weight                       NUMBER,
                     X_Weight_Uom_Code                  VARCHAR2,
                     X_Volume                           NUMBER,
                     X_Volume_Uom_Code                  VARCHAR2,
                     X_Fill_Percent                     NUMBER,
                     X_Seal_Code                        VARCHAR2,
                     X_Routing_Instructions             VARCHAR2,
                     X_Attribute_Category               VARCHAR2,
                     X_Attribute1                       VARCHAR2,
                     X_Attribute2                       VARCHAR2,
                     X_Attribute3                       VARCHAR2,
                     X_Attribute4                       VARCHAR2,
                     X_Attribute5                       VARCHAR2,
                     X_Attribute6                       VARCHAR2,
                     X_Attribute7                       VARCHAR2,
                     X_Attribute8                       VARCHAR2,
                     X_Attribute9                       VARCHAR2,
                     X_Attribute10                      VARCHAR2,
                     X_Attribute11                      VARCHAR2,
                     X_Attribute12                      VARCHAR2,
                     X_Attribute13                      VARCHAR2,
                     X_Attribute14                      VARCHAR2,
                     X_Attribute15                      VARCHAR2
  ) IS
    CURSOR C IS
        SELECT *
        FROM   wsh_departures
        WHERE  rowid = X_Rowid
        FOR UPDATE of Departure_Id NOWAIT;
    Recinfo C%ROWTYPE;


  BEGIN
    OPEN C;
    FETCH C INTO Recinfo;
    if (C%NOTFOUND) then
      CLOSE C;
      FND_MESSAGE.Set_Name('FND', 'FORM_RECORD_DELETED');
      APP_EXCEPTION.Raise_Exception;
    end if;
    CLOSE C;
    if (
               (Recinfo.organization_id =  X_Organization_Id)
           AND (Recinfo.departure_id =  X_Departure_Id)
           AND (Recinfo.name =  X_Name)
           AND (Recinfo.source_code =  X_Source_Code)
           AND (   (Recinfo.arrive_after_departure_id =  X_Arrive_After_Departure_Id)
                OR (    (Recinfo.arrive_after_departure_id IS NULL)
                    AND (X_Arrive_After_Departure_Id IS NULL)))
           AND (Recinfo.status_code =  X_Status_Code)
           AND (   (Recinfo.report_set_id =  X_Report_Set_Id)
                OR (    (Recinfo.report_set_id IS NULL)
                    AND (X_Report_Set_Id IS NULL)))
           AND (   (Recinfo.date_closed =  X_Date_Closed)
                OR (    (Recinfo.date_closed IS NULL)
                    AND (X_Date_Closed IS NULL)))
           AND (   (Recinfo.vehicle_item_id =  X_Vehicle_Item_Id)
                OR (    (Recinfo.vehicle_item_id IS NULL)
                    AND (X_Vehicle_Item_Id IS NULL)))
           AND (   (Recinfo.vehicle_number =  X_Vehicle_Number)
                OR (    (Recinfo.vehicle_number IS NULL)
                    AND (X_Vehicle_Number IS NULL)))
           AND (   (Recinfo.freight_carrier_code =  X_Freight_Carrier_Code)
                OR (    (Recinfo.freight_carrier_code IS NULL)
                    AND (X_Freight_Carrier_Code IS NULL)))
           AND (   (Recinfo.planned_departure_date =  X_Planned_Departure_Date)
                OR (    (Recinfo.planned_departure_date IS NULL)
                    AND (X_Planned_Departure_Date IS NULL)))
           AND (   (Recinfo.actual_departure_date =  X_Actual_Departure_Date)
                OR (    (Recinfo.actual_departure_date IS NULL)
                    AND (X_Actual_Departure_Date IS NULL)))
           AND (   (Recinfo.bill_of_lading =  X_Bill_Of_Lading)
                OR (    (Recinfo.bill_of_lading IS NULL)
                    AND (X_Bill_Of_Lading IS NULL)))
           AND (   (Recinfo.gross_weight =  X_Gross_Weight)
                OR (    (Recinfo.gross_weight IS NULL)
                    AND (X_Gross_Weight IS NULL)))
           AND (   (Recinfo.net_weight =  X_Net_Weight)
                OR (    (Recinfo.net_weight IS NULL)
                    AND (X_Net_Weight IS NULL)))
           AND (   (Recinfo.weight_uom_code =  X_Weight_Uom_Code)
                OR (    (Recinfo.weight_uom_code IS NULL)
                    AND (X_Weight_Uom_Code IS NULL)))
           AND (   (Recinfo.volume =  X_Volume)
                OR (    (Recinfo.volume IS NULL)
                    AND (X_Volume IS NULL)))
           AND (   (Recinfo.volume_uom_code =  X_Volume_Uom_Code)
                OR (    (Recinfo.volume_uom_code IS NULL)
                    AND (X_Volume_Uom_Code IS NULL)))
           AND (   (Recinfo.fill_percent =  X_Fill_Percent)
                OR (    (Recinfo.fill_percent IS NULL)
                    AND (X_Fill_Percent IS NULL)))
           AND (   (Recinfo.seal_code =  X_Seal_Code)
                OR (    (Recinfo.seal_code IS NULL)
                    AND (X_Seal_Code IS NULL)))
           AND (   (Recinfo.routing_instructions =  X_Routing_Instructions)
                OR (    (Recinfo.routing_instructions IS NULL)
                    AND (X_Routing_Instructions IS NULL)))
           AND (   (Recinfo.attribute_category =  X_Attribute_Category)
                OR (    (Recinfo.attribute_category IS NULL)
                    AND (X_Attribute_Category IS NULL)))
           AND (   (Recinfo.attribute1 =  X_Attribute1)
                OR (    (Recinfo.attribute1 IS NULL)
                    AND (X_Attribute1 IS NULL)))
           AND (   (Recinfo.attribute2 =  X_Attribute2)
                OR (    (Recinfo.attribute2 IS NULL)
                    AND (X_Attribute2 IS NULL)))
           AND (   (Recinfo.attribute3 =  X_Attribute3)
                OR (    (Recinfo.attribute3 IS NULL)
                    AND (X_Attribute3 IS NULL)))
           AND (   (Recinfo.attribute4 =  X_Attribute4)
                OR (    (Recinfo.attribute4 IS NULL)
                    AND (X_Attribute4 IS NULL)))
           AND (   (Recinfo.attribute5 =  X_Attribute5)
                OR (    (Recinfo.attribute5 IS NULL)
                    AND (X_Attribute5 IS NULL)))
           AND (   (Recinfo.attribute6 =  X_Attribute6)
                OR (    (Recinfo.attribute6 IS NULL)
                    AND (X_Attribute6 IS NULL)))
           AND (   (Recinfo.attribute7 =  X_Attribute7)
                OR (    (Recinfo.attribute7 IS NULL)
                    AND (X_Attribute7 IS NULL)))
           AND (   (Recinfo.attribute8 =  X_Attribute8)
                OR (    (Recinfo.attribute8 IS NULL)
                    AND (X_Attribute8 IS NULL)))
           AND (   (Recinfo.attribute9 =  X_Attribute9)
                OR (    (Recinfo.attribute9 IS NULL)
                    AND (X_Attribute9 IS NULL)))
           AND (   (Recinfo.attribute10 =  X_Attribute10)
                OR (    (Recinfo.attribute10 IS NULL)
                    AND (X_Attribute10 IS NULL)))
           AND (   (Recinfo.attribute11 =  X_Attribute11)
                OR (    (Recinfo.attribute11 IS NULL)
                    AND (X_Attribute11 IS NULL)))
           AND (   (Recinfo.attribute12 =  X_Attribute12)
                OR (    (Recinfo.attribute12 IS NULL)
                    AND (X_Attribute12 IS NULL)))
           AND (   (Recinfo.attribute13 =  X_Attribute13)
                OR (    (Recinfo.attribute13 IS NULL)
                    AND (X_Attribute13 IS NULL)))
           AND (   (Recinfo.attribute14 =  X_Attribute14)
                OR (    (Recinfo.attribute14 IS NULL)
                    AND (X_Attribute14 IS NULL)))
           AND (   (Recinfo.attribute15 =  X_Attribute15)
                OR (    (Recinfo.attribute15 IS NULL)
                    AND (X_Attribute15 IS NULL)))
      ) then
      return;
    else
      FND_MESSAGE.Set_Name('FND', 'FORM_RECORD_CHANGED');
      APP_EXCEPTION.Raise_Exception;
    end if;
  END Lock_Row;



  PROCEDURE Update_Row(X_Rowid                          VARCHAR2,
                       X_Organization_Id                NUMBER,
                       X_Departure_Id                   NUMBER,
                       X_Name                           IN OUT VARCHAR2,
                       X_Source_Code                    VARCHAR2,
                       X_Arrive_After_Departure_Id      NUMBER,
                       X_Status_Code                    VARCHAR2,
                       X_Report_Set_Id                  NUMBER,
                       X_Date_Closed                    DATE,
                       X_Vehicle_Item_Id                NUMBER,
                       X_Vehicle_Number                 VARCHAR2,
                       X_Freight_Carrier_Code           VARCHAR2,
                       X_Planned_Departure_Date         DATE,
                       X_Actual_Departure_Date          DATE,
                       X_Bill_Of_Lading                 VARCHAR2,
                       X_Gross_Weight                   NUMBER,
                       X_Net_Weight                     NUMBER,
                       X_Weight_Uom_Code                VARCHAR2,
                       X_Volume                         NUMBER,
                       X_Volume_Uom_Code                VARCHAR2,
                       X_Fill_Percent                   NUMBER,
                       X_Seal_Code                      VARCHAR2,
                       X_Routing_Instructions           VARCHAR2,
                       X_Attribute_Category             VARCHAR2,
                       X_Attribute1                     VARCHAR2,
                       X_Attribute2                     VARCHAR2,
                       X_Attribute3                     VARCHAR2,
                       X_Attribute4                     VARCHAR2,
                       X_Attribute5                     VARCHAR2,
                       X_Attribute6                     VARCHAR2,
                       X_Attribute7                     VARCHAR2,
                       X_Attribute8                     VARCHAR2,
                       X_Attribute9                     VARCHAR2,
                       X_Attribute10                    VARCHAR2,
                       X_Attribute11                    VARCHAR2,
                       X_Attribute12                    VARCHAR2,
                       X_Attribute13                    VARCHAR2,
                       X_Attribute14                    VARCHAR2,
                       X_Attribute15                    VARCHAR2,
                       X_Last_Update_Date               DATE,
                       X_Last_Updated_By                NUMBER,
                       X_Last_Update_Login              NUMBER
  ) IS
    dname 		wsh_departures.name%TYPE;
    CURSOR C2 IS SELECT wsh_departures_s.nextval FROM sys.dual;
    CURSOR C3 (dep_name   VARCHAR2) IS
      SELECT COUNT(*) FROM wsh_departures
      WHERE name = dep_name;
    temp 		NUMBER;
    temp_id		NUMBER;
    duplicate_name	EXCEPTION;
    null_name		EXCEPTION;

  BEGIN

    IF (X_Name IS NULL) THEN
      dname := wsh_external_custom.departure_name(X_Departure_Id);

      IF ( dname IS NULL ) THEN
        RAISE null_name;
      -- shipping default make sure the departure name is not duplicate
      ELSIF ( dname = TO_CHAR(X_Departure_Id) ) THEN
        temp_id := X_Departure_Id;
        OPEN C2;

        LOOP
          dname := TO_CHAR(temp_id);
          OPEN C3( dname);
          FETCH C3 INTO temp;
          CLOSE C3;
          IF ( temp = 0 ) THEN
            EXIT;
          END IF;

          FETCH C2 INTO temp_id;
        END LOOP;
        CLOSE C2;
      ELSE  -- name is generated from wsh_external_custom.departure_name
          OPEN C3( dname);
          FETCH C3 INTO temp;
          CLOSE C3;
          IF ( temp > 0 ) THEN
            RAISE duplicate_name;
          END IF;

      END IF;
      X_Name := NULL;
    END IF;

    UPDATE wsh_departures
    SET
       organization_id                 =     X_Organization_Id,
       departure_id                    =     X_Departure_Id,
       name                            =     X_Name,
       source_code                     =     X_Source_Code,
       arrive_after_departure_id       =     X_Arrive_After_Departure_Id,
       status_code                     =     X_Status_Code,
       report_set_id                   =     X_Report_Set_Id,
       date_closed                     =     X_Date_Closed,
       vehicle_item_id                 =     X_Vehicle_Item_Id,
       vehicle_number                  =     X_Vehicle_Number,
       freight_carrier_code            =     X_Freight_Carrier_Code,
       planned_departure_date          =     X_Planned_Departure_Date,
       actual_departure_date           =     X_Actual_Departure_Date,
       bill_of_lading                  =     X_Bill_Of_Lading,
       gross_weight                    =     X_Gross_Weight,
       net_weight                      =     X_Net_Weight,
       weight_uom_code                 =     X_Weight_Uom_Code,
       volume                          =     X_Volume,
       volume_uom_code                 =     X_Volume_Uom_Code,
       fill_percent                    =     X_Fill_Percent,
       seal_code                       =     X_Seal_Code,
       routing_instructions            =     X_Routing_Instructions,
       attribute_category              =     X_Attribute_Category,
       attribute1                      =     X_Attribute1,
       attribute2                      =     X_Attribute2,
       attribute3                      =     X_Attribute3,
       attribute4                      =     X_Attribute4,
       attribute5                      =     X_Attribute5,
       attribute6                      =     X_Attribute6,
       attribute7                      =     X_Attribute7,
       attribute8                      =     X_Attribute8,
       attribute9                      =     X_Attribute9,
       attribute10                     =     X_Attribute10,
       attribute11                     =     X_Attribute11,
       attribute12                     =     X_Attribute12,
       attribute13                     =     X_Attribute13,
       attribute14                     =     X_Attribute14,
       attribute15                     =     X_Attribute15,
       last_update_date                =     X_Last_Update_Date,
       last_updated_by                 =     X_Last_Updated_By,
       last_update_login               =     X_Last_Update_Login
    WHERE rowid = X_Rowid;

    if (SQL%NOTFOUND) then
      Raise NO_DATA_FOUND;
    end if;

  EXCEPTION
    WHEN duplicate_name THEN
      FND_MESSAGE.Set_Name('OE', 'WSH_DEP_DUP_NAME');
      APP_EXCEPTION.Raise_Exception;
    WHEN null_name THEN
      FND_MESSAGE.Set_Name('OE', 'WSH_DEP_NULL_NAME');
      APP_EXCEPTION.Raise_Exception;
  END Update_Row;

  PROCEDURE Delete_Row(X_Rowid VARCHAR2) IS
  BEGIN
    DELETE FROM wsh_departures
    WHERE rowid = X_Rowid;

    if (SQL%NOTFOUND) then
      Raise NO_DATA_FOUND;
    end if;
  END Delete_Row;


END WSH_DEPARTURES_PKG;

/
