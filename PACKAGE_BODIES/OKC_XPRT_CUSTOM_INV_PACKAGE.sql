--------------------------------------------------------
--  DDL for Package Body OKC_XPRT_CUSTOM_INV_PACKAGE
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE PACKAGE BODY "APPS"."OKC_XPRT_CUSTOM_INV_PACKAGE" AS
/* $Header: okcxprtudvtestinvprocb.pls 120.2 2007/12/12 13:43:10 harchand noship $ */


    G_RET_STS_SUCCESS            CONSTANT   varchar2(1) := FND_API.G_RET_STS_SUCCESS;
    G_RET_STS_ERROR              CONSTANT   varchar2(1) := FND_API.G_RET_STS_ERROR;
    G_RET_STS_UNEXP_ERROR        CONSTANT   varchar2(1) := FND_API.G_RET_STS_UNEXP_ERROR;



    PROCEDURE GET_OE_HEADER_VALUES (
        P_DOC_TYPE		     IN VARCHAR2,
        P_DOC_ID		     IN NUMBER,
	   P_VARIABLE_CODE		IN VARCHAR2,
	   X_VARIABLE_VALUE_ID	IN OUT NOCOPY VARCHAR2,
        X_RETURN_STATUS	     OUT NOCOPY VARCHAR2,
        X_MSG_COUNT		     OUT NOCOPY NUMBER,
        X_MSG_DATA		     OUT NOCOPY VARCHAR2
	)
    IS


    BEGIN


	x_return_status := G_RET_STS_SUCCESS;



    END GET_OE_HEADER_VALUES;


    PROCEDURE GET_PRICE_UPDATE_TOLERANCE (
        P_DOC_TYPE		     IN VARCHAR2,
        P_DOC_ID		     IN NUMBER,
	    P_VARIABLE_CODE			IN VARCHAR2,
    	X_VARIABLE_VALUE_ID	IN OUT NOCOPY VARCHAR2,
        X_RETURN_STATUS	     OUT NOCOPY VARCHAR2,
        X_MSG_COUNT		     OUT NOCOPY NUMBER,
        X_MSG_DATA		     OUT NOCOPY VARCHAR2
	)
    IS



    BEGIN



	x_return_status := G_RET_STS_SUCCESS;




    END GET_PRICE_UPDATE_TOLERANCE;

    PROCEDURE GET_QUOTE_SALES_SUPPLEMENT (
        P_DOC_TYPE		     IN VARCHAR2,
        P_DOC_ID		     IN NUMBER,
	    P_VARIABLE_CODE		 IN VARCHAR2,
    	X_VARIABLE_VALUE_ID	 IN OUT NOCOPY VARCHAR2,
        X_RETURN_STATUS	     OUT NOCOPY VARCHAR2,
        X_MSG_COUNT		     OUT NOCOPY NUMBER,
        X_MSG_DATA		     OUT NOCOPY VARCHAR2
	)
    IS



    BEGIN




	x_return_status := G_RET_STS_SUCCESS;



    END GET_QUOTE_SALES_SUPPLEMENT;

        PROCEDURE GET_SHIP_WAREHOUSE (
        P_DOC_TYPE		     IN VARCHAR2,
        P_DOC_ID		     IN NUMBER,
	    P_VARIABLE_CODE			IN VARCHAR2,
    	X_VARIABLE_VALUE_ID	IN OUT NOCOPY VARCHAR2,
        X_RETURN_STATUS	     OUT NOCOPY VARCHAR2,
        X_MSG_COUNT		     OUT NOCOPY NUMBER,
        X_MSG_DATA		     OUT NOCOPY VARCHAR2
	)
    IS
    BEGIN
	x_return_status := G_RET_STS_SUCCESS;
    END GET_SHIP_WAREHOUSE;

    PROCEDURE GET_SOURCING_UOM (
        P_DOC_TYPE		     IN VARCHAR2,
        P_DOC_ID		     IN NUMBER,
	    P_VARIABLE_CODE			IN VARCHAR2,
    	X_VARIABLE_VALUE_ID	IN OUT NOCOPY VARCHAR2,
        X_RETURN_STATUS	     OUT NOCOPY VARCHAR2,
        X_MSG_COUNT		     OUT NOCOPY NUMBER,
        X_MSG_DATA		     OUT NOCOPY VARCHAR2
	)
    IS



    BEGIN



	x_return_status := G_RET_STS_SUCCESS;




    END GET_SOURCING_UOM;

       PROCEDURE GET_PO_UOM (
        P_DOC_TYPE		     IN VARCHAR2,
        P_DOC_ID		     IN NUMBER,
	    P_VARIABLE_CODE			IN VARCHAR2,
    	X_VARIABLE_VALUE_ID	IN OUT NOCOPY VARCHAR2,
        X_RETURN_STATUS	     OUT NOCOPY VARCHAR2,
        X_MSG_COUNT		     OUT NOCOPY NUMBER,
        X_MSG_DATA		     OUT NOCOPY VARCHAR2
	)
    IS



    BEGIN



	x_return_status := G_RET_STS_SUCCESS;




    END GET_PO_UOM;

       PROCEDURE GET_RELEASE_RATIO (
        P_DOC_TYPE		     IN VARCHAR2,
        P_DOC_ID		     IN NUMBER,
	    P_VARIABLE_CODE			IN VARCHAR2,
    	X_VARIABLE_VALUE_ID	IN OUT NOCOPY VARCHAR2,
        X_RETURN_STATUS	     OUT NOCOPY VARCHAR2,
        X_MSG_COUNT		     OUT NOCOPY NUMBER,
        X_MSG_DATA		     OUT NOCOPY VARCHAR2
	)
    IS



    BEGIN


	x_return_status := G_RET_STS_SUCCESS;



    END GET_RELEASE_RATIO;

    PROCEDURE GET_BLANKET_AMOUNT_RANGE (
        P_DOC_TYPE		     IN VARCHAR2,
        P_DOC_ID		     IN NUMBER,
	    P_VARIABLE_CODE			IN VARCHAR2,
    	X_VARIABLE_VALUE_ID	IN OUT NOCOPY VARCHAR2,
        X_RETURN_STATUS	     OUT NOCOPY VARCHAR2,
        X_MSG_COUNT		     OUT NOCOPY NUMBER,
        X_MSG_DATA		     OUT NOCOPY VARCHAR2
	)
    IS



    BEGIN



	x_return_status := G_RET_STS_SUCCESS;



    END GET_BLANKET_AMOUNT_RANGE;

    PROCEDURE GET_DFF_PO (
        P_DOC_TYPE		     IN VARCHAR2,
        P_DOC_ID		     IN NUMBER,
	    P_VARIABLE_CODE			IN VARCHAR2,
    	X_VARIABLE_VALUE_ID	IN OUT NOCOPY VARCHAR2,
        X_RETURN_STATUS	     OUT NOCOPY VARCHAR2,
        X_MSG_COUNT		     OUT NOCOPY NUMBER,
        X_MSG_DATA		     OUT NOCOPY VARCHAR2
	)
    IS



    BEGIN



	x_return_status := G_RET_STS_SUCCESS;



    END GET_DFF_PO;

    PROCEDURE GET_DFF_SA (
        P_DOC_TYPE		     IN VARCHAR2,
        P_DOC_ID		     IN NUMBER,
	    P_VARIABLE_CODE			IN VARCHAR2,
    	X_VARIABLE_VALUE_ID	IN OUT NOCOPY VARCHAR2,
        X_RETURN_STATUS	     OUT NOCOPY VARCHAR2,
        X_MSG_COUNT		     OUT NOCOPY NUMBER,
        X_MSG_DATA		     OUT NOCOPY VARCHAR2
	)
    IS




    BEGIN



	x_return_status := G_RET_STS_SUCCESS;



    END GET_DFF_SA;

END OKC_XPRT_CUSTOM_INV_PACKAGE;


/
