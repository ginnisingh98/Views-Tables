--------------------------------------------------------
--  DDL for Package Body AK_FLOW_REGION_RELATIONS_PKG
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE PACKAGE BODY "APPS"."AK_FLOW_REGION_RELATIONS_PKG" as
/* $Header: AKDFRGRB.pls 120.2 2005/09/29 13:59:47 tshort ship $ */
procedure INSERT_ROW (
  X_ROWID in out NOCOPY VARCHAR2,
  X_FLOW_APPLICATION_ID in NUMBER,
  X_FLOW_CODE in VARCHAR2,
  X_FOREIGN_KEY_NAME in VARCHAR2,
  X_FROM_PAGE_APPL_ID in NUMBER,
  X_FROM_PAGE_CODE in VARCHAR2,
  X_FROM_REGION_APPL_ID in NUMBER,
  X_FROM_REGION_CODE in VARCHAR2,
  X_TO_PAGE_APPL_ID in NUMBER,
  X_TO_PAGE_CODE in VARCHAR2,
  X_TO_REGION_APPL_ID in NUMBER,
  X_TO_REGION_CODE in VARCHAR2,
  X_APPLICATION_ID in NUMBER,
  X_CREATION_DATE in DATE,
  X_CREATED_BY in NUMBER,
  X_LAST_UPDATE_DATE in DATE,
  X_LAST_UPDATED_BY in NUMBER,
  X_LAST_UPDATE_LOGIN in NUMBER,
  X_ATTRIBUTE_CATEGORY in VARCHAR2,
  X_ATTRIBUTE1 in VARCHAR2,
  X_ATTRIBUTE2 in VARCHAR2,
  X_ATTRIBUTE3 in VARCHAR2,
  X_ATTRIBUTE4 in VARCHAR2,
  X_ATTRIBUTE5 in VARCHAR2,
  X_ATTRIBUTE6 in VARCHAR2,
  X_ATTRIBUTE7 in VARCHAR2,
  X_ATTRIBUTE8 in VARCHAR2,
  X_ATTRIBUTE9 in VARCHAR2,
  X_ATTRIBUTE10 in VARCHAR2,
  X_ATTRIBUTE11 in VARCHAR2,
  X_ATTRIBUTE12 in VARCHAR2,
  X_ATTRIBUTE13 in VARCHAR2,
  X_ATTRIBUTE14 in VARCHAR2,
  X_ATTRIBUTE15 in VARCHAR2
) is
  cursor C is select ROWID from AK_FLOW_REGION_RELATIONS
    where FLOW_APPLICATION_ID = X_FLOW_APPLICATION_ID
    and FLOW_CODE = X_FLOW_CODE
    and FOREIGN_KEY_NAME = X_FOREIGN_KEY_NAME
    and FROM_PAGE_APPL_ID = X_FROM_PAGE_APPL_ID
    and FROM_PAGE_CODE  = X_FROM_PAGE_CODE
    and FROM_REGION_APPL_ID = X_FROM_REGION_APPL_ID
    and FROM_REGION_CODE = X_FROM_REGION_CODE
    and TO_PAGE_APPL_ID = X_TO_PAGE_APPL_ID
    and TO_PAGE_CODE = X_TO_PAGE_CODE
    and TO_REGION_APPL_ID = X_TO_REGION_APPL_ID
    and TO_REGION_CODE = X_TO_REGION_CODE;
begin
  insert into AK_FLOW_REGION_RELATIONS(
    FLOW_APPLICATION_ID,
    FLOW_CODE,
    FOREIGN_KEY_NAME,
    FROM_PAGE_APPL_ID,
    FROM_PAGE_CODE,
    FROM_REGION_APPL_ID,
    FROM_REGION_CODE,
    TO_PAGE_APPL_ID,
    TO_PAGE_CODE,
    TO_REGION_APPL_ID,
    TO_REGION_CODE,
    APPLICATION_ID,
    CREATION_DATE,
    CREATED_BY,
    LAST_UPDATE_DATE,
    LAST_UPDATED_BY,
    LAST_UPDATE_LOGIN,
    ATTRIBUTE_CATEGORY,
    ATTRIBUTE1,
    ATTRIBUTE2,
    ATTRIBUTE3,
    ATTRIBUTE4,
    ATTRIBUTE5,
    ATTRIBUTE6,
    ATTRIBUTE7,
    ATTRIBUTE8,
    ATTRIBUTE9,
    ATTRIBUTE10,
    ATTRIBUTE11,
    ATTRIBUTE12,
    ATTRIBUTE13,
    ATTRIBUTE14,
    ATTRIBUTE15
  ) values (
    X_FLOW_APPLICATION_ID,
    X_FLOW_CODE,
    X_FOREIGN_KEY_NAME,
    X_FROM_PAGE_APPL_ID,
    X_FROM_PAGE_CODE,
    X_FROM_REGION_APPL_ID,
    X_FROM_REGION_CODE,
    X_TO_PAGE_APPL_ID,
    X_TO_PAGE_CODE,
    X_TO_REGION_APPL_ID,
    X_TO_REGION_CODE,
    X_APPLICATION_ID,
    X_CREATION_DATE,
    X_CREATED_BY,
    X_LAST_UPDATE_DATE,
    X_LAST_UPDATED_BY,
    X_LAST_UPDATE_LOGIN,
    X_ATTRIBUTE_CATEGORY,
    X_ATTRIBUTE1,
    X_ATTRIBUTE2,
    X_ATTRIBUTE3,
    X_ATTRIBUTE4,
    X_ATTRIBUTE5,
    X_ATTRIBUTE6,
    X_ATTRIBUTE7,
    X_ATTRIBUTE8,
    X_ATTRIBUTE9,
    X_ATTRIBUTE10,
    X_ATTRIBUTE11,
    X_ATTRIBUTE12,
    X_ATTRIBUTE13,
    X_ATTRIBUTE14,
    X_ATTRIBUTE15
  );

  open c;
  fetch c into X_ROWID;
  if (c%notfound) then
    close c;
    raise no_data_found;
  end if;
  close c;
end INSERT_ROW;

procedure LOCK_ROW (
  X_FLOW_APPLICATION_ID in NUMBER,
  X_FLOW_CODE in VARCHAR2,
  X_FOREIGN_KEY_NAME in VARCHAR2,
  X_FROM_PAGE_APPL_ID in NUMBER,
  X_FROM_PAGE_CODE in VARCHAR2,
  X_FROM_REGION_APPL_ID in NUMBER,
  X_FROM_REGION_CODE in VARCHAR2,
  X_TO_PAGE_APPL_ID in NUMBER,
  X_TO_PAGE_CODE in VARCHAR2,
  X_TO_REGION_APPL_ID in NUMBER,
  X_TO_REGION_CODE in VARCHAR2,
  X_APPLICATION_ID in NUMBER
) is
  cursor c is select
    APPLICATION_ID
    from AK_FLOW_REGION_RELATIONS
    where FLOW_APPLICATION_ID = X_FLOW_APPLICATION_ID
    and FLOW_CODE = X_FLOW_CODE
    and FOREIGN_KEY_NAME = X_FOREIGN_KEY_NAME
    and FROM_PAGE_APPL_ID = X_FROM_PAGE_APPL_ID
    and FROM_PAGE_CODE = X_FROM_PAGE_CODE
    and FROM_REGION_APPL_ID = X_FROM_REGION_APPL_ID
    and FROM_REGION_CODE = X_FROM_REGION_CODE
    and TO_PAGE_APPL_ID = X_TO_PAGE_APPL_ID
    and TO_PAGE_CODE = X_TO_PAGE_CODE
    and TO_REGION_APPL_ID = X_TO_REGION_APPL_ID
    and TO_REGION_CODE = X_TO_REGION_CODE
    for update of APPLICATION_ID nowait;
  recinfo c%rowtype;

begin
  open c;
  fetch c into recinfo;
  if (c%notfound) then
    close c;
    fnd_message.set_name('FND', 'FORM_RECORD_DELETED');
    app_exception.raise_exception;
  end if;

  if (NOT( (recinfo.APPLICATION_ID = X_APPLICATION_ID)
  )) then
    fnd_message.set_name('FND', 'FORM_RECORD_CHANGED');
    app_exception.raise_exception;
  end if;
  if c%isopen then
    close c;
  end if;
end LOCK_ROW;

procedure UPDATE_ROW (
  X_FLOW_APPLICATION_ID in NUMBER,
  X_FLOW_CODE in VARCHAR2,
  X_FOREIGN_KEY_NAME in VARCHAR2,
  X_FROM_PAGE_APPL_ID in NUMBER,
  X_FROM_PAGE_CODE in VARCHAR2,
  X_FROM_REGION_APPL_ID in NUMBER,
  X_FROM_REGION_CODE in VARCHAR2,
  X_TO_PAGE_APPL_ID in NUMBER,
  X_TO_PAGE_CODE in VARCHAR2,
  X_TO_REGION_APPL_ID in NUMBER,
  X_TO_REGION_CODE in VARCHAR2,
  X_APPLICATION_ID in NUMBER,
  X_LAST_UPDATE_DATE in DATE,
  X_LAST_UPDATED_BY in NUMBER,
  X_LAST_UPDATE_LOGIN in NUMBER,
  X_ATTRIBUTE_CATEGORY in VARCHAR2,
  X_ATTRIBUTE1 in VARCHAR2,
  X_ATTRIBUTE2 in VARCHAR2,
  X_ATTRIBUTE3 in VARCHAR2,
  X_ATTRIBUTE4 in VARCHAR2,
  X_ATTRIBUTE5 in VARCHAR2,
  X_ATTRIBUTE6 in VARCHAR2,
  X_ATTRIBUTE7 in VARCHAR2,
  X_ATTRIBUTE8 in VARCHAR2,
  X_ATTRIBUTE9 in VARCHAR2,
  X_ATTRIBUTE10 in VARCHAR2,
  X_ATTRIBUTE11 in VARCHAR2,
  X_ATTRIBUTE12 in VARCHAR2,
  X_ATTRIBUTE13 in VARCHAR2,
  X_ATTRIBUTE14 in VARCHAR2,
  X_ATTRIBUTE15 in VARCHAR2
) is
begin
  update AK_FLOW_REGION_RELATIONS set
    FLOW_APPLICATION_ID = X_FLOW_APPLICATION_ID,
    FLOW_CODE = X_FLOW_CODE,
    FOREIGN_KEY_NAME = X_FOREIGN_KEY_NAME,
    FROM_PAGE_APPL_ID = X_FROM_PAGE_APPL_ID,
    FROM_PAGE_CODE = X_FROM_PAGE_CODE,
    FROM_REGION_APPL_ID = X_FROM_REGION_APPL_ID,
    FROM_REGION_CODE = X_FROM_REGION_CODE,
    TO_PAGE_APPL_ID = X_TO_PAGE_APPL_ID,
    TO_PAGE_CODE = X_TO_PAGE_CODE,
    TO_REGION_APPL_ID = X_TO_REGION_APPL_ID,
    TO_REGION_CODE = X_TO_REGION_CODE,
    APPLICATION_ID = X_APPLICATION_ID,
    LAST_UPDATE_DATE = X_LAST_UPDATE_DATE,
    LAST_UPDATED_BY = X_LAST_UPDATED_BY,
    LAST_UPDATE_LOGIN = X_LAST_UPDATE_LOGIN,
    ATTRIBUTE_CATEGORY = X_ATTRIBUTE_CATEGORY,
    ATTRIBUTE1 = X_ATTRIBUTE1,
    ATTRIBUTE2 = X_ATTRIBUTE2,
    ATTRIBUTE3 = X_ATTRIBUTE3,
    ATTRIBUTE4 = X_ATTRIBUTE4,
    ATTRIBUTE5 = X_ATTRIBUTE5,
    ATTRIBUTE6 = X_ATTRIBUTE6,
    ATTRIBUTE7 = X_ATTRIBUTE7,
    ATTRIBUTE8 = X_ATTRIBUTE8,
    ATTRIBUTE9 = X_ATTRIBUTE9,
    ATTRIBUTE10 = X_ATTRIBUTE10,
    ATTRIBUTE11 = X_ATTRIBUTE11,
    ATTRIBUTE12 = X_ATTRIBUTE12,
    ATTRIBUTE13 = X_ATTRIBUTE13,
    ATTRIBUTE14 = X_ATTRIBUTE14,
    ATTRIBUTE15 = X_ATTRIBUTE15
  where FLOW_APPLICATION_ID = X_FLOW_APPLICATION_ID
  and FLOW_CODE = X_FLOW_CODE
  and FOREIGN_KEY_NAME = X_FOREIGN_KEY_NAME
  and FROM_PAGE_APPL_ID = X_FROM_PAGE_APPL_ID
  and FROM_PAGE_CODE = X_FROM_PAGE_CODE
  and FROM_REGION_APPL_ID = X_FROM_REGION_APPL_ID
  and FROM_REGION_CODE = X_FROM_REGION_CODE
  and TO_PAGE_APPL_ID = X_TO_PAGE_APPL_ID
  and TO_PAGE_CODE = X_TO_PAGE_CODE
  and TO_REGION_APPL_ID = X_TO_REGION_APPL_ID
  and TO_REGION_CODE = X_TO_REGION_CODE;

  if (sql%notfound) then
    raise no_data_found;
  end if;
end UPDATE_ROW;

procedure DELETE_ROW (
  X_FLOW_APPLICATION_ID in NUMBER,
  X_FLOW_CODE in VARCHAR2,
  X_FOREIGN_KEY_NAME in VARCHAR2,
  X_FROM_PAGE_APPL_ID in NUMBER,
  X_FROM_PAGE_CODE in VARCHAR2,
  X_FROM_REGION_APPL_ID in NUMBER,
  X_FROM_REGION_CODE in VARCHAR2,
  X_TO_PAGE_APPL_ID in NUMBER,
  X_TO_PAGE_CODE in VARCHAR2,
  X_TO_REGION_APPL_ID in NUMBER,
  X_TO_REGION_CODE in VARCHAR2
) is
begin
  delete from AK_FLOW_REGION_RELATIONS
  where FLOW_APPLICATION_ID = X_FLOW_APPLICATION_ID
  and FLOW_CODE = X_FLOW_CODE
  and FOREIGN_KEY_NAME = X_FOREIGN_KEY_NAME
  and FROM_PAGE_APPL_ID = X_FROM_PAGE_APPL_ID
  and FROM_PAGE_CODE = X_FROM_PAGE_CODE
  and FROM_REGION_APPL_ID = X_FROM_REGION_APPL_ID
  and FROM_REGION_CODE = X_FROM_REGION_CODE
  and TO_PAGE_APPL_ID = X_TO_PAGE_APPL_ID
  and TO_PAGE_CODE = X_TO_PAGE_CODE
  and TO_REGION_APPL_ID = X_TO_REGION_APPL_ID
  and TO_REGION_CODE = X_TO_REGION_CODE;

  if (sql%notfound) then
    raise no_data_found;
  end if;
end DELETE_ROW;
end AK_FLOW_REGION_RELATIONS_PKG;

/
