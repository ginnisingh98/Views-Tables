--------------------------------------------------------
--  DDL for Package Body AK_OBJECT_ATTRIBUTES_PKG
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE PACKAGE BODY "APPS"."AK_OBJECT_ATTRIBUTES_PKG" as
/* $Header: AKDOBJAB.pls 120.3 2006/01/25 15:58:00 tshort ship $ */
--*****************************************************************************
procedure INSERT_ROW (
X_ROWID in out NOCOPY VARCHAR2,
X_DATABASE_OBJECT_NAME in VARCHAR2,
X_ATTRIBUTE_APPLICATION_ID in NUMBER,
X_ATTRIBUTE_CODE in VARCHAR2,
X_COLUMN_NAME in VARCHAR2,
X_ATTRIBUTE_LABEL_LENGTH in NUMBER,
X_BOLD in VARCHAR2,
X_ITALIC in VARCHAR2,
X_VERTICAL_ALIGNMENT in VARCHAR2,
X_HORIZONTAL_ALIGNMENT in VARCHAR2,
X_ATTRIBUTE_LABEL_LONG in VARCHAR2,
X_DATA_SOURCE_TYPE IN VARCHAR2,
X_DATA_STORAGE_TYPE IN VARCHAR2,
X_TABLE_NAME IN VARCHAR2,
X_BASE_TABLE_COLUMN_NAME IN VARCHAR2,
X_REQUIRED_FLAG IN VARCHAR2,
X_DISPLAY_VALUE_LENGTH IN NUMBER,
X_LOV_REGION_APPLICATION_ID IN NUMBER,
X_LOV_REGION_CODE IN VARCHAR2,
X_LOV_FOREIGN_KEY_NAME IN VARCHAR2,
X_LOV_ATTRIBUTE_APPLICATION_ID IN NUMBER,
X_LOV_ATTRIBUTE_CODE IN VARCHAR2,
X_DEFAULTING_API_PKG IN VARCHAR2,
X_DEFAULTING_API_PROC IN VARCHAR2,
X_VALIDATION_API_PKG IN VARCHAR2,
X_VALIDATION_API_PROC IN VARCHAR2,
X_DEFAULT_VALUE_VARCHAR2 in VARCHAR2,
X_DEFAULT_VALUE_NUMBER in NUMBER,
X_DEFAULT_VALUE_DATE in DATE,
X_CREATION_DATE in DATE,
X_CREATED_BY in NUMBER,
X_LAST_UPDATE_DATE in DATE,
X_LAST_UPDATED_BY in NUMBER,
X_LAST_UPDATE_LOGIN in NUMBER,
X_ATTRIBUTE_CATEGORY in VARCHAR2,
X_ATTRIBUTE1 in VARCHAR2,
X_ATTRIBUTE2 in VARCHAR2,
X_ATTRIBUTE3 in VARCHAR2,
X_ATTRIBUTE4 in VARCHAR2,
X_ATTRIBUTE5 in VARCHAR2,
X_ATTRIBUTE6 in VARCHAR2,
X_ATTRIBUTE7 in VARCHAR2,
X_ATTRIBUTE8 in VARCHAR2,
X_ATTRIBUTE9 in VARCHAR2,
X_ATTRIBUTE10 in VARCHAR2,
X_ATTRIBUTE11 in VARCHAR2,
X_ATTRIBUTE12 in VARCHAR2,
X_ATTRIBUTE13 in VARCHAR2,
X_ATTRIBUTE14 in VARCHAR2,
X_ATTRIBUTE15 in VARCHAR2
) is
cursor C is select ROWID from AK_OBJECT_ATTRIBUTES
where DATABASE_OBJECT_NAME = X_DATABASE_OBJECT_NAME
and ATTRIBUTE_APPLICATION_ID = X_ATTRIBUTE_APPLICATION_ID
and ATTRIBUTE_CODE = X_ATTRIBUTE_CODE;
begin
insert into AK_OBJECT_ATTRIBUTES (
DATABASE_OBJECT_NAME,
ATTRIBUTE_APPLICATION_ID,
ATTRIBUTE_CODE,
COLUMN_NAME,
ATTRIBUTE_LABEL_LENGTH,
BOLD,
ITALIC,
VERTICAL_ALIGNMENT,
HORIZONTAL_ALIGNMENT,
DATA_SOURCE_TYPE,
DATA_STORAGE_TYPE,
TABLE_NAME,
BASE_TABLE_COLUMN_NAME,
REQUIRED_FLAG,
DISPLAY_VALUE_LENGTH,
LOV_REGION_APPLICATION_ID,
LOV_REGION_CODE,
LOV_FOREIGN_KEY_NAME,
LOV_ATTRIBUTE_APPLICATION_ID,
LOV_ATTRIBUTE_CODE,
DEFAULTING_API_PKG,
DEFAULTING_API_PROC,
VALIDATION_API_PKG,
VALIDATION_API_PROC,
DEFAULT_VALUE_VARCHAR2,
DEFAULT_VALUE_NUMBER,
DEFAULT_VALUE_DATE,
CREATION_DATE,
CREATED_BY,
LAST_UPDATE_DATE,
LAST_UPDATED_BY,
LAST_UPDATE_LOGIN,
ATTRIBUTE_CATEGORY,
ATTRIBUTE1,
ATTRIBUTE2,
ATTRIBUTE3,
ATTRIBUTE4,
ATTRIBUTE5,
ATTRIBUTE6,
ATTRIBUTE7,
ATTRIBUTE8,
ATTRIBUTE9,
ATTRIBUTE10,
ATTRIBUTE11,
ATTRIBUTE12,
ATTRIBUTE13,
ATTRIBUTE14,
ATTRIBUTE15
) values (
X_DATABASE_OBJECT_NAME,
X_ATTRIBUTE_APPLICATION_ID,
X_ATTRIBUTE_CODE,
X_COLUMN_NAME,
X_ATTRIBUTE_LABEL_LENGTH,
X_BOLD,
X_ITALIC,
X_VERTICAL_ALIGNMENT,
X_HORIZONTAL_ALIGNMENT,
X_DATA_SOURCE_TYPE,
X_DATA_STORAGE_TYPE,
X_TABLE_NAME,
X_BASE_TABLE_COLUMN_NAME,
X_REQUIRED_FLAG,
X_DISPLAY_VALUE_LENGTH,
X_LOV_REGION_APPLICATION_ID,
X_LOV_REGION_CODE,
X_LOV_FOREIGN_KEY_NAME,
X_LOV_ATTRIBUTE_APPLICATION_ID,
X_LOV_ATTRIBUTE_CODE,
X_DEFAULTING_API_PKG,
X_DEFAULTING_API_PROC,
X_VALIDATION_API_PKG,
X_VALIDATION_API_PROC,
X_DEFAULT_VALUE_VARCHAR2,
X_DEFAULT_VALUE_NUMBER,
X_DEFAULT_VALUE_DATE,
X_CREATION_DATE,
X_CREATED_BY,
X_LAST_UPDATE_DATE,
X_LAST_UPDATED_BY,
X_LAST_UPDATE_LOGIN,
X_ATTRIBUTE_CATEGORY,
X_ATTRIBUTE1,
X_ATTRIBUTE2,
X_ATTRIBUTE3,
X_ATTRIBUTE4,
X_ATTRIBUTE5,
X_ATTRIBUTE6,
X_ATTRIBUTE7,
X_ATTRIBUTE8,
X_ATTRIBUTE9,
X_ATTRIBUTE10,
X_ATTRIBUTE11,
X_ATTRIBUTE12,
X_ATTRIBUTE13,
X_ATTRIBUTE14,
X_ATTRIBUTE15
);

open c;
fetch c into X_ROWID;
if (c%notfound) then
close c;
raise no_data_found;
end if;
close c;

insert into AK_OBJECT_ATTRIBUTES_TL (
DATABASE_OBJECT_NAME,
ATTRIBUTE_APPLICATION_ID,
ATTRIBUTE_CODE,
LANGUAGE,
ATTRIBUTE_LABEL_LONG,
SOURCE_LANG,
CREATED_BY,
CREATION_DATE,
LAST_UPDATED_BY,
LAST_UPDATE_DATE,
LAST_UPDATE_LOGIN
) select
X_DATABASE_OBJECT_NAME,
X_ATTRIBUTE_APPLICATION_ID,
X_ATTRIBUTE_CODE,
L.LANGUAGE_CODE,
X_ATTRIBUTE_LABEL_LONG,
userenv('LANG'),
X_CREATED_BY,
X_CREATION_DATE,
X_LAST_UPDATED_BY,
X_LAST_UPDATE_DATE,
X_LAST_UPDATE_LOGIN
from FND_LANGUAGES L
where L.INSTALLED_FLAG in ('I', 'B')
and not exists
(select NULL
from AK_OBJECT_ATTRIBUTES_TL T
where T.DATABASE_OBJECT_NAME = X_DATABASE_OBJECT_NAME
and T.ATTRIBUTE_APPLICATION_ID = X_ATTRIBUTE_APPLICATION_ID
and T.ATTRIBUTE_CODE = X_ATTRIBUTE_CODE
and T.LANGUAGE = L.LANGUAGE_CODE);
end INSERT_ROW;
--*****************************************************************************
procedure LOCK_ROW (
X_DATABASE_OBJECT_NAME in VARCHAR2,
X_ATTRIBUTE_APPLICATION_ID in NUMBER,
X_ATTRIBUTE_CODE in VARCHAR2,
X_ATTRIBUTE_CATEGORY in VARCHAR2,
X_ATTRIBUTE1 in VARCHAR2,
X_ATTRIBUTE2 in VARCHAR2,
X_ATTRIBUTE3 in VARCHAR2,
X_ATTRIBUTE4 in VARCHAR2,
X_ATTRIBUTE5 in VARCHAR2,
X_ATTRIBUTE6 in VARCHAR2,
X_ATTRIBUTE7 in VARCHAR2,
X_ATTRIBUTE8 in VARCHAR2,
X_ATTRIBUTE9 in VARCHAR2,
X_ATTRIBUTE10 in VARCHAR2,
X_ATTRIBUTE11 in VARCHAR2,
X_ATTRIBUTE12 in VARCHAR2,
X_ATTRIBUTE13 in VARCHAR2,
X_ATTRIBUTE14 in VARCHAR2,
X_ATTRIBUTE15 in VARCHAR2,
X_COLUMN_NAME in VARCHAR2,
X_ATTRIBUTE_LABEL_LENGTH in NUMBER,
X_BOLD in VARCHAR2,
X_ITALIC in VARCHAR2,
X_VERTICAL_ALIGNMENT in VARCHAR2,
X_HORIZONTAL_ALIGNMENT in VARCHAR2,
X_ATTRIBUTE_LABEL_LONG in VARCHAR2,
X_DATA_SOURCE_TYPE IN VARCHAR2,
X_DATA_STORAGE_TYPE IN VARCHAR2,
X_TABLE_NAME IN VARCHAR2,
X_BASE_TABLE_COLUMN_NAME IN VARCHAR2,
X_REQUIRED_FLAG IN VARCHAR2,
X_DISPLAY_VALUE_LENGTH IN NUMBER,
X_LOV_REGION_APPLICATION_ID IN NUMBER,
X_LOV_REGION_CODE IN VARCHAR2,
X_LOV_FOREIGN_KEY_NAME IN VARCHAR2,
X_LOV_ATTRIBUTE_APPLICATION_ID IN NUMBER,
X_LOV_ATTRIBUTE_CODE IN VARCHAR2,
X_DEFAULTING_API_PKG IN VARCHAR2,
X_DEFAULTING_API_PROC IN VARCHAR2,
X_VALIDATION_API_PKG IN VARCHAR2,
X_VALIDATION_API_PROC IN VARCHAR2,
X_DEFAULT_VALUE_VARCHAR2 in VARCHAR2,
X_DEFAULT_VALUE_NUMBER in NUMBER,
X_DEFAULT_VALUE_DATE in DATE
) is
cursor c is select
ATTRIBUTE_CATEGORY,
ATTRIBUTE1,
ATTRIBUTE2,
ATTRIBUTE3,
ATTRIBUTE4,
ATTRIBUTE5,
ATTRIBUTE6,
ATTRIBUTE7,
ATTRIBUTE8,
ATTRIBUTE9,
ATTRIBUTE10,
ATTRIBUTE11,
ATTRIBUTE12,
ATTRIBUTE13,
ATTRIBUTE14,
ATTRIBUTE15,
COLUMN_NAME,
ATTRIBUTE_LABEL_LENGTH,
BOLD,
ITALIC,
VERTICAL_ALIGNMENT,
HORIZONTAL_ALIGNMENT,
DATA_SOURCE_TYPE,
DATA_STORAGE_TYPE,
TABLE_NAME,
BASE_TABLE_COLUMN_NAME,
REQUIRED_FLAG,
DISPLAY_VALUE_LENGTH,
LOV_REGION_APPLICATION_ID,
LOV_REGION_CODE,
LOV_FOREIGN_KEY_NAME,
LOV_ATTRIBUTE_APPLICATION_ID,
LOV_ATTRIBUTE_CODE,
DEFAULTING_API_PKG,
DEFAULTING_API_PROC,
VALIDATION_API_PKG,
VALIDATION_API_PROC,
DEFAULT_VALUE_VARCHAR2,
DEFAULT_VALUE_NUMBER,
DEFAULT_VALUE_DATE
from AK_OBJECT_ATTRIBUTES
where DATABASE_OBJECT_NAME = X_DATABASE_OBJECT_NAME
and ATTRIBUTE_APPLICATION_ID = X_ATTRIBUTE_APPLICATION_ID
and ATTRIBUTE_CODE = X_ATTRIBUTE_CODE
for update of DATABASE_OBJECT_NAME nowait;
recinfo c%rowtype;

cursor c1 is select
ATTRIBUTE_LABEL_LONG
from AK_OBJECT_ATTRIBUTES_TL
where DATABASE_OBJECT_NAME = X_DATABASE_OBJECT_NAME
and ATTRIBUTE_APPLICATION_ID = X_ATTRIBUTE_APPLICATION_ID
and ATTRIBUTE_CODE = X_ATTRIBUTE_CODE
and LANGUAGE = userenv('LANG')
for update of DATABASE_OBJECT_NAME nowait;
tlinfo c1%rowtype;

begin
open c;
fetch c into recinfo;
if (c%notfound) then
close c;
fnd_message.set_name('FND', 'FORM_RECORD_DELETED');
app_exception.raise_exception;
end if;
close c;
if ( ((recinfo.ATTRIBUTE_CATEGORY = X_ATTRIBUTE_CATEGORY)
OR ((recinfo.ATTRIBUTE_CATEGORY is null)
AND (X_ATTRIBUTE_CATEGORY is null)))
AND ((recinfo.ATTRIBUTE1 = X_ATTRIBUTE1)
OR ((recinfo.ATTRIBUTE1 is null)
AND (X_ATTRIBUTE1 is null)))
AND ((recinfo.ATTRIBUTE2 = X_ATTRIBUTE2)
OR ((recinfo.ATTRIBUTE2 is null)
AND (X_ATTRIBUTE2 is null)))
AND ((recinfo.ATTRIBUTE3 = X_ATTRIBUTE3)
OR ((recinfo.ATTRIBUTE3 is null)
AND (X_ATTRIBUTE3 is null)))
AND ((recinfo.ATTRIBUTE4 = X_ATTRIBUTE4)
OR ((recinfo.ATTRIBUTE4 is null)
AND (X_ATTRIBUTE4 is null)))
AND ((recinfo.ATTRIBUTE5 = X_ATTRIBUTE5)
OR ((recinfo.ATTRIBUTE5 is null)
AND (X_ATTRIBUTE5 is null)))
AND ((recinfo.ATTRIBUTE6 = X_ATTRIBUTE6)
OR ((recinfo.ATTRIBUTE6 is null)
AND (X_ATTRIBUTE6 is null)))
AND ((recinfo.ATTRIBUTE7 = X_ATTRIBUTE7)
OR ((recinfo.ATTRIBUTE7 is null)
AND (X_ATTRIBUTE7 is null)))
AND ((recinfo.ATTRIBUTE8 = X_ATTRIBUTE8)
OR ((recinfo.ATTRIBUTE8 is null)
AND (X_ATTRIBUTE8 is null)))
AND ((recinfo.ATTRIBUTE9 = X_ATTRIBUTE9)
OR ((recinfo.ATTRIBUTE9 is null)
AND (X_ATTRIBUTE9 is null)))
AND ((recinfo.ATTRIBUTE10 = X_ATTRIBUTE10)
OR ((recinfo.ATTRIBUTE10 is null)
AND (X_ATTRIBUTE10 is null)))
AND ((recinfo.ATTRIBUTE11 = X_ATTRIBUTE11)
OR ((recinfo.ATTRIBUTE11 is null)
AND (X_ATTRIBUTE11 is null)))
AND ((recinfo.ATTRIBUTE12 = X_ATTRIBUTE12)
OR ((recinfo.ATTRIBUTE12 is null)
AND (X_ATTRIBUTE12 is null)))
AND ((recinfo.ATTRIBUTE13 = X_ATTRIBUTE13)
OR ((recinfo.ATTRIBUTE13 is null)
AND (X_ATTRIBUTE13 is null)))
AND ((recinfo.ATTRIBUTE14 = X_ATTRIBUTE14)
OR ((recinfo.ATTRIBUTE14 is null)
AND (X_ATTRIBUTE14 is null)))
AND ((recinfo.ATTRIBUTE15 = X_ATTRIBUTE15)
OR ((recinfo.ATTRIBUTE15 is null)
AND (X_ATTRIBUTE15 is null)))
AND ((recinfo.COLUMN_NAME = X_COLUMN_NAME)
OR ((recinfo.COLUMN_NAME is null)
AND (X_COLUMN_NAME is null)))
AND (recinfo.ATTRIBUTE_LABEL_LENGTH = X_ATTRIBUTE_LABEL_LENGTH)
AND (recinfo.BOLD = X_BOLD)
AND (recinfo.ITALIC = X_ITALIC)
AND (recinfo.VERTICAL_ALIGNMENT = X_VERTICAL_ALIGNMENT)
AND (recinfo.HORIZONTAL_ALIGNMENT = X_HORIZONTAL_ALIGNMENT)
AND (recinfo.DATA_SOURCE_TYPE = X_DATA_SOURCE_TYPE)
AND ((recinfo.DATA_STORAGE_TYPE = X_DATA_STORAGE_TYPE)
or ((recinfo.DATA_STORAGE_TYPE is null)
and (X_DATA_STORAGE_TYPE is null)))
AND ((recinfo.TABLE_NAME = X_TABLE_NAME)
or ((recinfo.TABLE_NAME is null)
and (X_TABLE_NAME is null)))
AND ((recinfo.BASE_TABLE_COLUMN_NAME = X_BASE_TABLE_COLUMN_NAME)
or ((recinfo.BASE_TABLE_COLUMN_NAME is null)
and (X_BASE_TABLE_COLUMN_NAME is null)))
AND (recinfo.REQUIRED_FLAG = X_REQUIRED_FLAG)
AND (recinfo.DISPLAY_VALUE_LENGTH = X_DISPLAY_VALUE_LENGTH)
AND ((recinfo.LOV_REGION_APPLICATION_ID = X_LOV_REGION_APPLICATION_ID)
or ((recinfo.LOV_REGION_APPLICATION_ID is null)
and (X_LOV_REGION_APPLICATION_ID is null)))
AND ((recinfo.LOV_REGION_CODE = X_LOV_REGION_CODE)
or ((recinfo.LOV_REGION_CODE is null)
and (X_LOV_REGION_CODE is null)))
AND ((recinfo.LOV_FOREIGN_KEY_NAME = X_LOV_FOREIGN_KEY_NAME)
or ((recinfo.LOV_FOREIGN_KEY_NAME is null)
and (X_LOV_FOREIGN_KEY_NAME is null)))
AND ((recinfo.LOV_ATTRIBUTE_APPLICATION_ID = X_LOV_ATTRIBUTE_APPLICATION_ID)
or ((recinfo.LOV_ATTRIBUTE_APPLICATION_ID is null)
and (X_LOV_ATTRIBUTE_APPLICATION_ID is null)))
AND ((recinfo.LOV_ATTRIBUTE_CODE = X_LOV_ATTRIBUTE_CODE)
or ((recinfo.LOV_ATTRIBUTE_CODE is null)
and (X_LOV_ATTRIBUTE_CODE is null)))
AND ((recinfo.DEFAULTING_API_PKG = X_DEFAULTING_API_PKG)
or ((recinfo.DEFAULTING_API_PKG is null)
and (X_DEFAULTING_API_PKG is null)))
AND ((recinfo.DEFAULTING_API_PROC = X_DEFAULTING_API_PROC)
or ((recinfo.DEFAULTING_API_PROC is null)
and (X_DEFAULTING_API_PROC is null)))
AND ((recinfo.VALIDATION_API_PKG = X_VALIDATION_API_PKG)
or ((recinfo.VALIDATION_API_PKG is null)
and (X_VALIDATION_API_PKG is null)))
AND ((recinfo.VALIDATION_API_PROC = X_VALIDATION_API_PROC)
or ((recinfo.VALIDATION_API_PROC is null)
and (X_VALIDATION_API_PROC is null)))
AND ((recinfo.DEFAULT_VALUE_VARCHAR2 = X_DEFAULT_VALUE_VARCHAR2)
or ((recinfo.DEFAULT_VALUE_VARCHAR2 is null)
and (X_DEFAULT_VALUE_VARCHAR2 is null)))
AND ((recinfo.DEFAULT_VALUE_NUMBER = X_DEFAULT_VALUE_NUMBER)
or ((recinfo.DEFAULT_VALUE_NUMBER is null)
and (X_DEFAULT_VALUE_NUMBER is null)))
AND ((recinfo.DEFAULT_VALUE_DATE = X_DEFAULT_VALUE_DATE)
or ((recinfo.DEFAULT_VALUE_DATE is null)
and (X_DEFAULT_VALUE_DATE is null)))
) then
null;
else
fnd_message.set_name('FND', 'FORM_RECORD_CHANGED');
app_exception.raise_exception;
end if;

open c1;
fetch c1 into tlinfo;
if (c1%notfound) then
close c1;
return;
end if;
close c1;

if ((tlinfo.attribute_label_long = X_attribute_label_long)
OR ((tlinfo.attribute_label_long is null)
AND (X_attribute_label_long is null)))
then
null;
else
fnd_message.set_name('FND', 'FORM_RECORD_CHANGED');
app_exception.raise_exception;
end if;
return;
end LOCK_ROW;
--*****************************************************************************
procedure UPDATE_ROW (
X_DATABASE_OBJECT_NAME in VARCHAR2,
X_ATTRIBUTE_APPLICATION_ID in NUMBER,
X_ATTRIBUTE_CODE in VARCHAR2,
X_COLUMN_NAME in VARCHAR2,
X_ATTRIBUTE_LABEL_LENGTH in NUMBER,
X_BOLD in VARCHAR2,
X_ITALIC in VARCHAR2,
X_VERTICAL_ALIGNMENT in VARCHAR2,
X_HORIZONTAL_ALIGNMENT in VARCHAR2,
X_ATTRIBUTE_LABEL_LONG in VARCHAR2,
X_DATA_SOURCE_TYPE IN VARCHAR2,
X_DATA_STORAGE_TYPE IN VARCHAR2,
X_TABLE_NAME IN VARCHAR2,
X_BASE_TABLE_COLUMN_NAME IN VARCHAR2,
X_REQUIRED_FLAG IN VARCHAR2,
X_DISPLAY_VALUE_LENGTH IN NUMBER,
X_LOV_REGION_APPLICATION_ID IN NUMBER,
X_LOV_REGION_CODE IN VARCHAR2,
X_LOV_FOREIGN_KEY_NAME IN VARCHAR2,
X_LOV_ATTRIBUTE_APPLICATION_ID IN NUMBER,
X_LOV_ATTRIBUTE_CODE IN VARCHAR2,
X_DEFAULTING_API_PKG IN VARCHAR2,
X_DEFAULTING_API_PROC IN VARCHAR2,
X_VALIDATION_API_PKG IN VARCHAR2,
X_VALIDATION_API_PROC IN VARCHAR2,
X_DEFAULT_VALUE_VARCHAR2 in VARCHAR2,
X_DEFAULT_VALUE_NUMBER in NUMBER,
X_DEFAULT_VALUE_DATE in DATE,
X_LAST_UPDATE_DATE in DATE,
X_LAST_UPDATED_BY in NUMBER,
X_LAST_UPDATE_LOGIN in NUMBER,
X_ATTRIBUTE_CATEGORY in VARCHAR2,
X_ATTRIBUTE1 in VARCHAR2,
X_ATTRIBUTE2 in VARCHAR2,
X_ATTRIBUTE3 in VARCHAR2,
X_ATTRIBUTE4 in VARCHAR2,
X_ATTRIBUTE5 in VARCHAR2,
X_ATTRIBUTE6 in VARCHAR2,
X_ATTRIBUTE7 in VARCHAR2,
X_ATTRIBUTE8 in VARCHAR2,
X_ATTRIBUTE9 in VARCHAR2,
X_ATTRIBUTE10 in VARCHAR2,
X_ATTRIBUTE11 in VARCHAR2,
X_ATTRIBUTE12 in VARCHAR2,
X_ATTRIBUTE13 in VARCHAR2,
X_ATTRIBUTE14 in VARCHAR2,
X_ATTRIBUTE15 in VARCHAR2
) is
begin
update AK_OBJECT_ATTRIBUTES set
DATABASE_OBJECT_NAME = X_DATABASE_OBJECT_NAME,
ATTRIBUTE_APPLICATION_ID = X_ATTRIBUTE_APPLICATION_ID,
ATTRIBUTE_CODE = X_ATTRIBUTE_CODE,
COLUMN_NAME = X_COLUMN_NAME,
ATTRIBUTE_LABEL_LENGTH = X_ATTRIBUTE_LABEL_LENGTH,
BOLD = X_BOLD,
ITALIC = X_ITALIC,
VERTICAL_ALIGNMENT = X_VERTICAL_ALIGNMENT,
HORIZONTAL_ALIGNMENT = X_HORIZONTAL_ALIGNMENT,
DATA_SOURCE_TYPE = X_DATA_SOURCE_TYPE,
DATA_STORAGE_TYPE = X_DATA_STORAGE_TYPE,
TABLE_NAME = X_TABLE_NAME,
BASE_TABLE_COLUMN_NAME = X_BASE_TABLE_COLUMN_NAME,
REQUIRED_FLAG = X_REQUIRED_FLAG,
DISPLAY_VALUE_LENGTH = X_DISPLAY_VALUE_LENGTH,
LOV_REGION_APPLICATION_ID = X_LOV_REGION_APPLICATION_ID,
LOV_REGION_CODE = X_LOV_REGION_CODE,
LOV_FOREIGN_KEY_NAME = X_LOV_FOREIGN_KEY_NAME,
LOV_ATTRIBUTE_APPLICATION_ID = X_LOV_ATTRIBUTE_APPLICATION_ID,
LOV_ATTRIBUTE_CODE = X_LOV_ATTRIBUTE_CODE,
DEFAULTING_API_PKG = X_DEFAULTING_API_PKG,
DEFAULTING_API_PROC = X_DEFAULTING_API_PROC,
VALIDATION_API_PKG = X_VALIDATION_API_PKG,
VALIDATION_API_PROC = X_VALIDATION_API_PROC,
DEFAULT_VALUE_VARCHAR2 = X_DEFAULT_VALUE_VARCHAR2,
DEFAULT_VALUE_NUMBER = X_DEFAULT_VALUE_NUMBER,
DEFAULT_VALUE_DATE = X_DEFAULT_VALUE_DATE,
LAST_UPDATE_DATE = X_LAST_UPDATE_DATE,
LAST_UPDATED_BY = X_LAST_UPDATED_BY,
LAST_UPDATE_LOGIN = X_LAST_UPDATE_LOGIN,
ATTRIBUTE_CATEGORY = X_ATTRIBUTE_CATEGORY,
ATTRIBUTE1 = X_ATTRIBUTE1,
ATTRIBUTE2 = X_ATTRIBUTE2,
ATTRIBUTE3 = X_ATTRIBUTE3,
ATTRIBUTE4 = X_ATTRIBUTE4,
ATTRIBUTE5 = X_ATTRIBUTE5,
ATTRIBUTE6 = X_ATTRIBUTE6,
ATTRIBUTE7 = X_ATTRIBUTE7,
ATTRIBUTE8 = X_ATTRIBUTE8,
ATTRIBUTE9 = X_ATTRIBUTE9,
ATTRIBUTE10 = X_ATTRIBUTE10,
ATTRIBUTE11 = X_ATTRIBUTE11,
ATTRIBUTE12 = X_ATTRIBUTE12,
ATTRIBUTE13 = X_ATTRIBUTE13,
ATTRIBUTE14 = X_ATTRIBUTE14,
ATTRIBUTE15 = X_ATTRIBUTE15
where DATABASE_OBJECT_NAME = X_DATABASE_OBJECT_NAME
and ATTRIBUTE_APPLICATION_ID = X_ATTRIBUTE_APPLICATION_ID
and ATTRIBUTE_CODE = X_ATTRIBUTE_CODE;
if (sql%notfound) then
raise no_data_found;
end if;
update AK_OBJECT_ATTRIBUTES_TL set
ATTRIBUTE_LABEL_LONG = X_ATTRIBUTE_LABEL_LONG,
LAST_UPDATE_DATE = X_LAST_UPDATE_DATE,
LAST_UPDATED_BY = X_LAST_UPDATED_BY,
LAST_UPDATE_LOGIN = X_LAST_UPDATE_LOGIN,
SOURCE_LANG = userenv('LANG')
where DATABASE_OBJECT_NAME = X_DATABASE_OBJECT_NAME
and ATTRIBUTE_CODE = X_ATTRIBUTE_CODE
and ATTRIBUTE_APPLICATION_ID = X_ATTRIBUTE_APPLICATION_ID
and userenv('LANG') in (LANGUAGE, SOURCE_LANG);
if (sql%notfound) then
raise no_data_found;
end if;
end UPDATE_ROW;
--*****************************************************************************
procedure DELETE_ROW (
X_DATABASE_OBJECT_NAME in VARCHAR2,
X_ATTRIBUTE_APPLICATION_ID in NUMBER,
X_ATTRIBUTE_CODE in VARCHAR2
) is
begin
delete from AK_OBJECT_ATTRIBUTES
where DATABASE_OBJECT_NAME = X_DATABASE_OBJECT_NAME
and ATTRIBUTE_APPLICATION_ID = X_ATTRIBUTE_APPLICATION_ID
and ATTRIBUTE_CODE = X_ATTRIBUTE_CODE;

if (sql%notfound) then
raise no_data_found;
end if;

delete from AK_OBJECT_ATTRIBUTES_TL
where DATABASE_OBJECT_NAME = X_DATABASE_OBJECT_NAME
and ATTRIBUTE_APPLICATION_ID = X_ATTRIBUTE_APPLICATION_ID
and ATTRIBUTE_CODE = X_ATTRIBUTE_CODE;
if (sql%notfound) then
raise no_data_found;
end if;
end DELETE_ROW;
--*****************************************************************************
procedure ADD_LANGUAGE
is
begin

/* Mar/19/03 requested by Ric Ginsberg */
/* The following delete and update statements are commented out */
/* as a quick workaround to fix the time-consuming table handler issue */
/* Eventually we'll need to turn them into a separate fix_language procedure */
/*
delete from AK_OBJECT_ATTRIBUTES_TL T
where not exists
(select NULL
from AK_OBJECT_ATTRIBUTES B
where B.DATABASE_OBJECT_NAME = T.DATABASE_OBJECT_NAME
and B.ATTRIBUTE_CODE = T.ATTRIBUTE_CODE
and B.ATTRIBUTE_APPLICATION_ID = T.ATTRIBUTE_APPLICATION_ID
);

update AK_OBJECT_ATTRIBUTES_TL T set (
ATTRIBUTE_LABEL_LONG,
ATTRIBUTE_LABEL_SHORT
) = (select
B.ATTRIBUTE_LABEL_LONG,
B.ATTRIBUTE_LABEL_SHORT
from AK_OBJECT_ATTRIBUTES_TL B
where B.DATABASE_OBJECT_NAME = T.DATABASE_OBJECT_NAME
and B.ATTRIBUTE_CODE = T.ATTRIBUTE_CODE
and B.ATTRIBUTE_APPLICATION_ID = T.ATTRIBUTE_APPLICATION_ID
and B.LANGUAGE = T.SOURCE_LANG)
where (
T.DATABASE_OBJECT_NAME,
T.ATTRIBUTE_CODE,
T.ATTRIBUTE_APPLICATION_ID,
T.LANGUAGE
) in (select
SUBT.DATABASE_OBJECT_NAME,
SUBT.ATTRIBUTE_CODE,
SUBT.ATTRIBUTE_APPLICATION_ID,
SUBT.LANGUAGE
from AK_OBJECT_ATTRIBUTES_TL SUBB, AK_OBJECT_ATTRIBUTES_TL SUBT
where SUBB.DATABASE_OBJECT_NAME = SUBT.DATABASE_OBJECT_NAME
and SUBB.ATTRIBUTE_CODE = SUBT.ATTRIBUTE_CODE
and SUBB.ATTRIBUTE_APPLICATION_ID = SUBT.ATTRIBUTE_APPLICATION_ID
and SUBB.LANGUAGE = SUBT.SOURCE_LANG
and (SUBB.ATTRIBUTE_LABEL_LONG <> SUBT.ATTRIBUTE_LABEL_LONG
or (SUBB.ATTRIBUTE_LABEL_LONG is null and SUBT.ATTRIBUTE_LABEL_LONG is not null)
or (SUBB.ATTRIBUTE_LABEL_LONG is not null and SUBT.ATTRIBUTE_LABEL_LONG is null)
or SUBB.ATTRIBUTE_LABEL_SHORT <> SUBT.ATTRIBUTE_LABEL_SHORT
or (SUBB.ATTRIBUTE_LABEL_SHORT is null and SUBT.ATTRIBUTE_LABEL_SHORT is not null)
or (SUBB.ATTRIBUTE_LABEL_SHORT is not null and SUBT.ATTRIBUTE_LABEL_SHORT is null)
));
*/

insert /*+ append parallel(tt) */ into AK_OBJECT_ATTRIBUTES_TL tt (
DATABASE_OBJECT_NAME,
ATTRIBUTE_APPLICATION_ID,
ATTRIBUTE_CODE,
ATTRIBUTE_LABEL_LONG,
ATTRIBUTE_LABEL_SHORT,
CREATED_BY,
CREATION_DATE,
LAST_UPDATED_BY,
LAST_UPDATE_DATE,
LAST_UPDATE_LOGIN,
LANGUAGE,
SOURCE_LANG
) select /*+ parallel(v) parallel(t) use_nl(t)  */ v.* from
(select /*+ no_merge ordered parallel(b) */
B.DATABASE_OBJECT_NAME,
B.ATTRIBUTE_APPLICATION_ID,
B.ATTRIBUTE_CODE,
B.ATTRIBUTE_LABEL_LONG,
B.ATTRIBUTE_LABEL_SHORT,
B.CREATED_BY,
B.CREATION_DATE,
B.LAST_UPDATED_BY,
B.LAST_UPDATE_DATE,
B.LAST_UPDATE_LOGIN,
L.LANGUAGE_CODE,
B.SOURCE_LANG
from AK_OBJECT_ATTRIBUTES_TL B, FND_LANGUAGES L
where L.INSTALLED_FLAG in ('I', 'B')
and B.LANGUAGE = userenv('LANG')
) v, AK_OBJECT_ATTRIBUTES_TL T
where T.DATABASE_OBJECT_NAME(+) = v.DATABASE_OBJECT_NAME
and T.ATTRIBUTE_CODE(+) = v.ATTRIBUTE_CODE
and T.ATTRIBUTE_APPLICATION_ID(+) = v.ATTRIBUTE_APPLICATION_ID
and T.LANGUAGE(+) = v.LANGUAGE_CODE
and T.DATABASE_OBJECT_NAME is NULL
and T.ATTRIBUTE_CODE is NULL
and T.ATTRIBUTE_APPLICATION_ID is NULL;

end ADD_LANGUAGE;

--*****************************************************************************
procedure ADD_REGION_ITEM (
X_REGION_APPLICATION_ID in NUMBER,
X_REGION_CODE in VARCHAR2,
X_ATTRIBUTE_APPLICATION_ID in NUMBER,
X_ATTRIBUTE_CODE in VARCHAR2,
X_ATTRIBUTE_LABEL_LENGTH in NUMBER,
X_BOLD in VARCHAR2,
X_ITALIC in VARCHAR2,
X_VERTICAL_ALIGNMENT in VARCHAR2,
X_HORIZONTAL_ALIGNMENT in VARCHAR2,
X_DEFAULT_VALUE_VARCHAR2 in VARCHAR2,
X_DEFAULT_VALUE_NUMBER in NUMBER,
X_DEFAULT_VALUE_DATE in DATE,
X_LOV_FOREIGN_KEY_NAME in VARCHAR2,
X_LOV_REGION_APPLICATION_ID in NUMBER,
X_LOV_REGION_CODE in VARCHAR2,
X_LOV_ATTRIBUTE_APPLICATION_ID in NUMBER,
X_LOV_ATTRIBUTE_CODE in VARCHAR2,
X_LOV_DEFAULT_FLAG in VARCHAR2,
X_ATTRIBUTE_LABEL_LONG in VARCHAR2,
X_CREATION_DATE in DATE,
X_CREATED_BY in NUMBER,
X_LAST_UPDATE_DATE in DATE,
X_LAST_UPDATED_BY in NUMBER,
X_LAST_UPDATE_LOGIN in NUMBER,
x_display_value_length in number,
X_COMMIT in VARCHAR2) IS
/* local variables */
max_sequence number;
dummy number;
row_id varchar2(30);
--display_flag_default varchar2(1) := 'Y';
display_flag_default varchar2(1) := 'N';
query_flag_default varchar2(1) := 'N';
attribute_label_length_default number := 30;
object_attribute_flag_default varchar2(1) := 'Y';
item_style_default varchar2(30) := 'TEXT';
l_submit varchar2(1) := 'N';
l_encrypt varchar2(1) := 'N';
l_display_height number := 1;
l_item_name varchar2(30) := '';

/* cursor definition */
cursor c1 is
select 1
from   ak_region_items
where  region_application_id = X_REGION_APPLICATION_ID
and    region_code = X_REGION_CODE
and    attribute_application_id = X_ATTRIBUTE_APPLICATION_ID
and    attribute_code = X_ATTRIBUTE_CODE;
cursor c2 is
select max(display_sequence)
from   ak_region_items
where  region_application_id = X_REGION_APPLICATION_ID
and    region_code = X_REGION_CODE;
begin
/* no need to insert record if one already exists */
open c1;
fetch c1 into dummy;
if (NOT c1%notfound) then
close c1;
return;
end if;
close c1;

/* set display sequence to one larger than the largest sequence */
open c2;
fetch c2 into dummy;
close c2;
max_sequence := nvl(dummy,0) + 1;

/* call package procedure to insert new record */

ak_region_items_pkg.insert_row(
x_rowid => row_id,
x_region_application_id => x_region_application_id,
x_region_code => x_region_code,
x_attribute_application_id => x_attribute_application_id,
x_attribute_code => x_attribute_code,
x_display_sequence => max_sequence,
x_node_display_flag => display_flag_default,
x_node_query_flag => query_flag_default,
x_attribute_label_length => nvl(x_attribute_label_length,attribute_label_length_default),
x_bold => x_bold,
x_italic => x_italic,
x_vertical_alignment => x_vertical_alignment,
x_horizontal_alignment => x_horizontal_alignment,
x_item_style => item_style_default,
x_object_attribute_flag => object_attribute_flag_default,
x_attribute_label_long => x_attribute_label_long,
x_description => '',
X_SECURITY_CODE => NULL,
X_UPDATE_FLAG => 'Y',
X_REQUIRED_FLAG => 'N',
X_DISPLAY_VALUE_LENGTH => x_display_value_length,
X_LOV_REGION_APPLICATION_ID => X_LOV_REGION_APPLICATION_ID,
X_LOV_REGION_CODE => X_LOV_REGION_CODE,
X_LOV_FOREIGN_KEY_NAME => X_LOV_FOREIGN_KEY_NAME,
X_LOV_ATTRIBUTE_APPLICATION_ID => X_LOV_ATTRIBUTE_APPLICATION_ID,
X_LOV_ATTRIBUTE_CODE => X_LOV_ATTRIBUTE_CODE,
X_LOV_DEFAULT_FLAG => X_LOV_DEFAULT_FLAG,
X_REGION_DEFAULTING_API_PKG => NULL,
X_REGION_DEFAULTING_API_PROC => NULL,
X_REGION_VALIDATION_API_PKG => NULL,
X_REGION_VALIDATION_API_PROC => NULL,
X_ORDER_SEQUENCE => NULL,
X_ORDER_DIRECTION => NULL,
X_DEFAULT_VALUE_VARCHAR2 => x_default_value_varchar2,
X_DEFAULT_VALUE_NUMBER => x_default_value_number,
X_DEFAULT_VALUE_DATE => x_default_value_date,
X_ITEM_NAME => l_item_name,
X_DISPLAY_HEIGHT => l_display_height,
X_SUBMIT => l_submit,
X_ENCRYPT => l_encrypt,
X_VIEW_USAGE_NAME => '',
X_VIEW_ATTRIBUTE_NAME => '',
X_CSS_CLASS_NAME => '',
X_CSS_LABEL_CLASS_NAME => '',
X_URL => '',
X_POPLIST_VIEWOBJECT => '',
X_POPLIST_DISPLAY_ATTRIBUTE => '',
X_POPLIST_VALUE_ATTRIBUTE => '',
X_IMAGE_FILE_NAME => '',
X_NESTED_REGION_CODE => '',
X_NESTED_REGION_APPL_ID => null,
X_MENU_NAME => null,
X_FLEXFIELD_NAME => null,
X_FLEXFIELD_APPLICATION_ID => null,
X_TABULAR_FUNCTION_CODE  => null,
X_TIP_TYPE                 => null,
X_TIP_MESSAGE_NAME         => null,
X_TIP_MESSAGE_APPLICATION_ID    => null,
X_FLEX_SEGMENT_LIST => '',
X_ENTITY_ID => '',
X_ANCHOR => '',
X_POPLIST_VIEW_USAGE_NAME => '',
X_USER_CUSTOMIZABLE => '',
X_SORTBY_VIEW_ATTRIBUTE_NAME => '',
x_creation_date => x_creation_date,
x_created_by => x_created_by,
x_last_update_date => x_last_update_date,
x_last_updated_by => x_last_updated_by,
x_last_update_login => x_last_update_login,
x_attribute_category => NULL,
x_attribute1 => NULL,
x_attribute2 => NULL,
x_attribute3 => NULL,
x_attribute4 => NULL,
x_attribute5 => NULL,
x_attribute6 => NULL,
x_attribute7 => NULL,
x_attribute8 => NULL,
x_attribute9 => NULL,
x_attribute10 => NULL,
x_attribute11 => NULL,
x_attribute12 => NULL,
x_attribute13 => NULL,
x_attribute14 => NULL,
x_attribute15 => NULL);

if (X_COMMIT = 'TRUE') then
commit;
end if;

end ADD_REGION_ITEM;
--*****************************************************************************
end AK_OBJECT_ATTRIBUTES_PKG;

/
