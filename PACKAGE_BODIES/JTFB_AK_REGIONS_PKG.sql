--------------------------------------------------------
--  DDL for Package Body JTFB_AK_REGIONS_PKG
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE PACKAGE BODY "APPS"."JTFB_AK_REGIONS_PKG" as
/* $Header: jtfbrgnb.pls 120.2 2005/10/25 05:30:02 psanyal ship $ */
--
--
procedure INSERT_ROW (
X_ROWID IN OUT NOCOPY /* file.sql.39 change */ VARCHAR2,
X_REGION_APPLICATION_ID in NUMBER,
X_REGION_CODE in VARCHAR2,
X_DATABASE_OBJECT_NAME in VARCHAR2,
X_REGION_STYLE in VARCHAR2,
X_NUM_COLUMNS in NUMBER,
X_ICX_CUSTOM_CALL in VARCHAR2,
X_NAME in VARCHAR2,
X_DESCRIPTION in VARCHAR2,
X_REGION_DEFAULTING_API_PKG in VARCHAR2,
X_REGION_DEFAULTING_API_PROC in VARCHAR2,
X_REGION_VALIDATION_API_PKG in VARCHAR2,
X_REGION_VALIDATION_API_PROC in VARCHAR2,
X_APPL_MODULE_OBJECT_TYPE in VARCHAR2,
X_NUM_ROWS_DISPLAY in NUMBER,
X_REGION_OBJECT_TYPE in VARCHAR2,
X_IMAGE_FILE_NAME in VARCHAR2,
X_ISFORM_FLAG in VARCHAR2,
X_HELP_TARGET in VARCHAR2,
X_STYLE_SHEET_FILENAME in VARCHAR2,
X_VERSION in VARCHAR2,
X_APPLICATIONMODULE_USAGE_NAME in VARCHAR2,
X_ADD_INDEXED_CHILDREN in VARCHAR2 := NULL,
X_STATEFUL_FLAG in VARCHAR2 := NULL,
X_FUNCTION_NAME in VARCHAR2 := NULL,
X_CHILDREN_VIEW_USAGE_NAME in VARCHAR2 := NULL,
X_CREATION_DATE in DATE,
X_CREATED_BY in NUMBER,
X_LAST_UPDATE_DATE in DATE,
X_LAST_UPDATED_BY in NUMBER,
X_LAST_UPDATE_LOGIN in NUMBER,
X_ATTRIBUTE_CATEGORY in VARCHAR2,
X_ATTRIBUTE1 in VARCHAR2,
X_ATTRIBUTE2 in VARCHAR2,
X_ATTRIBUTE3 in VARCHAR2,
X_ATTRIBUTE4 in VARCHAR2,
X_ATTRIBUTE5 in VARCHAR2,
X_ATTRIBUTE6 in VARCHAR2,
X_ATTRIBUTE7 in VARCHAR2,
X_ATTRIBUTE8 in VARCHAR2,
X_ATTRIBUTE9 in VARCHAR2,
X_ATTRIBUTE10 in VARCHAR2,
X_ATTRIBUTE11 in VARCHAR2,
X_ATTRIBUTE12 in VARCHAR2,
X_ATTRIBUTE13 in VARCHAR2,
X_ATTRIBUTE14 in VARCHAR2,
X_ATTRIBUTE15 in VARCHAR2
) is
cursor C is select ROWID from AK_REGIONS
where REGION_APPLICATION_ID = X_REGION_APPLICATION_ID
and REGION_CODE = X_REGION_CODE;
begin
insert into AK_REGIONS (
REGION_APPLICATION_ID,
REGION_CODE,
DATABASE_OBJECT_NAME,
REGION_STYLE,
NUM_COLUMNS,
ICX_CUSTOM_CALL,
REGION_DEFAULTING_API_PKG,
REGION_DEFAULTING_API_PROC,
REGION_VALIDATION_API_PKG,
REGION_VALIDATION_API_PROC,
APPLICATIONMODULE_OBJECT_TYPE,
NUM_ROWS_DISPLAY,
REGION_OBJECT_TYPE,
ISFORM_FLAG,
IMAGE_FILE_NAME,
HELP_TARGET,
STYLE_SHEET_FILENAME,
VERSION,
APPLICATIONMODULE_USAGE_NAME,
ADD_INDEXED_CHILDREN,
STATEFUL_FLAG,
FUNCTION_NAME,
CHILDREN_VIEW_USAGE_NAME,
CREATION_DATE,
CREATED_BY,
LAST_UPDATE_DATE,
LAST_UPDATED_BY,
LAST_UPDATE_LOGIN,
ATTRIBUTE_CATEGORY,
ATTRIBUTE1,
ATTRIBUTE2,
ATTRIBUTE3,
ATTRIBUTE4,
ATTRIBUTE5,
ATTRIBUTE6,
ATTRIBUTE7,
ATTRIBUTE8,
ATTRIBUTE9,
ATTRIBUTE10,
ATTRIBUTE11,
ATTRIBUTE12,
ATTRIBUTE13,
ATTRIBUTE14,
ATTRIBUTE15,
STANDALONE
) values (
X_REGION_APPLICATION_ID,
X_REGION_CODE,
X_DATABASE_OBJECT_NAME,
X_REGION_STYLE,
X_NUM_COLUMNS,
X_ICX_CUSTOM_CALL,
X_REGION_DEFAULTING_API_PKG,
X_REGION_DEFAULTING_API_PROC,
X_REGION_VALIDATION_API_PKG,
X_REGION_VALIDATION_API_PROC,
X_APPL_MODULE_OBJECT_TYPE,
X_NUM_ROWS_DISPLAY,
X_REGION_OBJECT_TYPE,
X_ISFORM_FLAG,
X_IMAGE_FILE_NAME,
X_HELP_TARGET,
X_STYLE_SHEET_FILENAME,
X_VERSION,
X_APPLICATIONMODULE_USAGE_NAME,
X_ADD_INDEXED_CHILDREN,
X_STATEFUL_FLAG,
X_FUNCTION_NAME,
X_CHILDREN_VIEW_USAGE_NAME,

sysdate,
fnd_global.user_id,
sysdate,
fnd_global.user_id,
fnd_global.login_id,

X_ATTRIBUTE_CATEGORY,
X_ATTRIBUTE1,
X_ATTRIBUTE2,
X_ATTRIBUTE3,
X_ATTRIBUTE4,
X_ATTRIBUTE5,
X_ATTRIBUTE6,
X_ATTRIBUTE7,
X_ATTRIBUTE8,
X_ATTRIBUTE9,
X_ATTRIBUTE10,
X_ATTRIBUTE11,
X_ATTRIBUTE12,
X_ATTRIBUTE13,
X_ATTRIBUTE14,
X_ATTRIBUTE15,
'Y'      -- STANDALONE
);

open c;
fetch c into X_ROWID;
if (c%notfound) then
close c;
    raise no_data_found;
  end if;
  close c;

  insert into AK_REGIONS_TL (
    REGION_APPLICATION_ID,
    REGION_CODE,
    LANGUAGE,
    NAME,
    DESCRIPTION,
    SOURCE_LANG,
    CREATED_BY,
    CREATION_DATE,
    LAST_UPDATED_BY,
    LAST_UPDATE_DATE,
    LAST_UPDATE_LOGIN
  ) select
    X_REGION_APPLICATION_ID,
    X_REGION_CODE,
    L.LANGUAGE_CODE,
    X_NAME,
    X_DESCRIPTION,
    userenv('LANG'),

    fnd_global.user_id,
    sysdate,
    fnd_global.user_id,
    sysdate,
    fnd_global.login_id

  from FND_LANGUAGES L
  where L.INSTALLED_FLAG in ('I', 'B')
  and not exists
    (select NULL
    from AK_REGIONS_TL T
    where T.REGION_APPLICATION_ID = X_REGION_APPLICATION_ID
    and T.REGION_CODE = X_REGION_CODE
    and T.LANGUAGE = L.LANGUAGE_CODE);
end INSERT_ROW;
--
--
procedure LOCK_ROW (
  X_REGION_APPLICATION_ID in NUMBER,
  X_REGION_CODE in VARCHAR2,
  X_ATTRIBUTE_CATEGORY in VARCHAR2,
  X_ATTRIBUTE1 in VARCHAR2,
  X_ATTRIBUTE2 in VARCHAR2,
  X_ATTRIBUTE3 in VARCHAR2,
  X_ATTRIBUTE4 in VARCHAR2,
  X_ATTRIBUTE5 in VARCHAR2,
  X_ATTRIBUTE6 in VARCHAR2,
  X_ATTRIBUTE7 in VARCHAR2,
  X_ATTRIBUTE8 in VARCHAR2,
  X_ATTRIBUTE9 in VARCHAR2,
  X_ATTRIBUTE10 in VARCHAR2,
  X_ATTRIBUTE11 in VARCHAR2,
  X_ATTRIBUTE12 in VARCHAR2,
  X_ATTRIBUTE13 in VARCHAR2,
  X_ATTRIBUTE14 in VARCHAR2,
  X_ATTRIBUTE15 in VARCHAR2,
  X_DATABASE_OBJECT_NAME in VARCHAR2,
  X_REGION_STYLE in VARCHAR2,
  X_NUM_COLUMNS in NUMBER,
  X_ICX_CUSTOM_CALL in VARCHAR2,
  X_NAME in VARCHAR2,
  X_DESCRIPTION in VARCHAR2,
  X_REGION_DEFAULTING_API_PKG in VARCHAR2,
  X_REGION_DEFAULTING_API_PROC in VARCHAR2,
  X_REGION_VALIDATION_API_PKG in VARCHAR2,
  X_REGION_VALIDATION_API_PROC in VARCHAR2,
  X_APPL_MODULE_OBJECT_TYPE in VARCHAR2,
  X_NUM_ROWS_DISPLAY in NUMBER,
  X_REGION_OBJECT_TYPE in VARCHAR2,
  X_IMAGE_FILE_NAME in VARCHAR2,
  X_ISFORM_FLAG in VARCHAR2,
  X_HELP_TARGET in VARCHAR2,
  X_STYLE_SHEET_FILENAME in VARCHAR2,
  X_VERSION in VARCHAR2,
  X_APPLICATIONMODULE_USAGE_NAME in VARCHAR2,
  X_ADD_INDEXED_CHILDREN in VARCHAR2,
  X_STATEFUL_FLAG in VARCHAR2,
  X_FUNCTION_NAME in VARCHAR2,
  X_CHILDREN_VIEW_USAGE_NAME in VARCHAR2
) is
  cursor c is select
      ATTRIBUTE_CATEGORY,
      ATTRIBUTE1,
      ATTRIBUTE2,
      ATTRIBUTE3,
      ATTRIBUTE4,
      ATTRIBUTE5,
      ATTRIBUTE6,
      ATTRIBUTE7,
      ATTRIBUTE8,
      ATTRIBUTE9,
      ATTRIBUTE10,
      ATTRIBUTE11,
      ATTRIBUTE12,
      ATTRIBUTE13,
      ATTRIBUTE14,
      ATTRIBUTE15,
      DATABASE_OBJECT_NAME,
      REGION_STYLE,
      NUM_COLUMNS,
      ICX_CUSTOM_CALL,
      REGION_DEFAULTING_API_PKG,
      REGION_DEFAULTING_API_PROC,
      REGION_VALIDATION_API_PKG,
      REGION_VALIDATION_API_PROC,
      APPLICATIONMODULE_OBJECT_TYPE,
      NUM_ROWS_DISPLAY,
      REGION_OBJECT_TYPE,
      ISFORM_FLAG,
      IMAGE_FILE_NAME,
      HELP_TARGET,
      STYLE_SHEET_FILENAME,
      VERSION,
      APPLICATIONMODULE_USAGE_NAME,
	  ADD_INDEXED_CHILDREN,
      STATEFUL_FLAG,
      FUNCTION_NAME,
      CHILDREN_VIEW_USAGE_NAME
    from AK_REGIONS
    where REGION_APPLICATION_ID = X_REGION_APPLICATION_ID
    and REGION_CODE = X_REGION_CODE
    for update of REGION_APPLICATION_ID nowait;
  recinfo c%rowtype;

  cursor c1 is select
      NAME,
      DESCRIPTION
    from AK_REGIONS_TL
    where REGION_CODE = X_REGION_CODE
    and REGION_APPLICATION_ID = X_REGION_APPLICATION_ID
    and LANGUAGE = userenv('LANG')
    for update of REGION_CODE nowait;
  tlinfo c1%rowtype;

begin
  open c;
  fetch c into recinfo;
  if (c%notfound) then
    close c;
    fnd_message.set_name('FND', 'FORM_RECORD_DELETED');
    app_exception.raise_exception;
  end if;
  close c;
      if ( ((recinfo.ATTRIBUTE_CATEGORY = X_ATTRIBUTE_CATEGORY)
           OR ((recinfo.ATTRIBUTE_CATEGORY is null)
               AND (X_ATTRIBUTE_CATEGORY is null)))
      AND ((recinfo.ATTRIBUTE1 = X_ATTRIBUTE1)
           OR ((recinfo.ATTRIBUTE1 is null)
               AND (X_ATTRIBUTE1 is null)))
      AND ((recinfo.ATTRIBUTE2 = X_ATTRIBUTE2)
           OR ((recinfo.ATTRIBUTE2 is null)
               AND (X_ATTRIBUTE2 is null)))
      AND ((recinfo.ATTRIBUTE3 = X_ATTRIBUTE3)
           OR ((recinfo.ATTRIBUTE3 is null)
               AND (X_ATTRIBUTE3 is null)))
      AND ((recinfo.ATTRIBUTE4 = X_ATTRIBUTE4)
           OR ((recinfo.ATTRIBUTE4 is null)
               AND (X_ATTRIBUTE4 is null)))
      AND ((recinfo.ATTRIBUTE5 = X_ATTRIBUTE5)
           OR ((recinfo.ATTRIBUTE5 is null)
               AND (X_ATTRIBUTE5 is null)))
      AND ((recinfo.ATTRIBUTE6 = X_ATTRIBUTE6)
           OR ((recinfo.ATTRIBUTE6 is null)
               AND (X_ATTRIBUTE6 is null)))
      AND ((recinfo.ATTRIBUTE7 = X_ATTRIBUTE7)
           OR ((recinfo.ATTRIBUTE7 is null)
               AND (X_ATTRIBUTE7 is null)))
      AND ((recinfo.ATTRIBUTE8 = X_ATTRIBUTE8)
           OR ((recinfo.ATTRIBUTE8 is null)
               AND (X_ATTRIBUTE8 is null)))
      AND ((recinfo.ATTRIBUTE9 = X_ATTRIBUTE9)
           OR ((recinfo.ATTRIBUTE9 is null)
               AND (X_ATTRIBUTE9 is null)))
      AND ((recinfo.ATTRIBUTE10 = X_ATTRIBUTE10)
           OR ((recinfo.ATTRIBUTE10 is null)
               AND (X_ATTRIBUTE10 is null)))
      AND ((recinfo.ATTRIBUTE11 = X_ATTRIBUTE11)
           OR ((recinfo.ATTRIBUTE11 is null)
               AND (X_ATTRIBUTE11 is null)))
      AND ((recinfo.ATTRIBUTE12 = X_ATTRIBUTE12)
           OR ((recinfo.ATTRIBUTE12 is null)
               AND (X_ATTRIBUTE12 is null)))
      AND ((recinfo.ATTRIBUTE13 = X_ATTRIBUTE13)
           OR ((recinfo.ATTRIBUTE13 is null)
               AND (X_ATTRIBUTE13 is null)))
      AND ((recinfo.ATTRIBUTE14 = X_ATTRIBUTE14)
           OR ((recinfo.ATTRIBUTE14 is null)
               AND (X_ATTRIBUTE14 is null)))
      AND ((recinfo.ATTRIBUTE15 = X_ATTRIBUTE15)
           OR ((recinfo.ATTRIBUTE15 is null)
               AND (X_ATTRIBUTE15 is null)))
      AND (recinfo.DATABASE_OBJECT_NAME = X_DATABASE_OBJECT_NAME)
      AND (recinfo.REGION_STYLE = X_REGION_STYLE)
      AND ((recinfo.NUM_COLUMNS = X_NUM_COLUMNS)
           OR ((recinfo.NUM_COLUMNS is null)
               AND (X_NUM_COLUMNS is null)))
      AND ((recinfo.ICX_CUSTOM_CALL = X_ICX_CUSTOM_CALL)
           OR ((recinfo.ICX_CUSTOM_CALL is null)
               AND (X_ICX_CUSTOM_CALL is null)))
      AND ((recinfo.REGION_DEFAULTING_API_PKG = X_REGION_DEFAULTING_API_PKG)
           or ((recinfo.REGION_DEFAULTING_API_PKG is null)
	       and (X_REGION_DEFAULTING_API_PKG is null)))
      AND ((recinfo.REGION_DEFAULTING_API_PROC = X_REGION_DEFAULTING_API_PROC)
           or ((recinfo.REGION_DEFAULTING_API_PROC is null)
	       and (X_REGION_DEFAULTING_API_PROC is null)))
      AND ((recinfo.REGION_VALIDATION_API_PKG = X_REGION_VALIDATION_API_PKG)
           or ((recinfo.REGION_VALIDATION_API_PKG is null)
	       and (X_REGION_VALIDATION_API_PKG is null)))
      AND ((recinfo.REGION_VALIDATION_API_PROC = X_REGION_VALIDATION_API_PROC)
           or ((recinfo.REGION_VALIDATION_API_PROC is null)
	       and (X_REGION_VALIDATION_API_PROC is null)))
 AND ((recinfo.APPLICATIONMODULE_OBJECT_TYPE = X_APPL_MODULE_OBJECT_TYPE)
           or ((recinfo.APPLICATIONMODULE_OBJECT_TYPE is null)
	       and (X_APPL_MODULE_OBJECT_TYPE is null)))
      AND ((recinfo.NUM_ROWS_DISPLAY = X_NUM_ROWS_DISPLAY)
           or ((recinfo.NUM_ROWS_DISPLAY is null)
	       and (X_NUM_ROWS_DISPLAY is null)))
      AND ((recinfo.REGION_OBJECT_TYPE = X_REGION_OBJECT_TYPE)
           or ((recinfo.REGION_OBJECT_TYPE is null)
	       and (X_REGION_OBJECT_TYPE is null)))
      AND ((recinfo.ISFORM_FLAG = X_ISFORM_FLAG)
           or ((recinfo.ISFORM_FLAG is null)
               and (X_ISFORM_FLAG is null)))
      AND ((recinfo.IMAGE_FILE_NAME = X_IMAGE_FILE_NAME)
           or ((recinfo.IMAGE_FILE_NAME is null)
               and (X_IMAGE_FILE_NAME is null)))
      AND ((recinfo.HELP_TARGET = X_HELP_TARGET)
           or ((recinfo.HELP_TARGET is null)
               and (X_HELP_TARGET is null)))
      AND ((recinfo.STYLE_SHEET_FILENAME = X_STYLE_SHEET_FILENAME)
           or ((recinfo.STYLE_SHEET_FILENAME is null)
               and (X_STYLE_SHEET_FILENAME is null)))
      AND ((recinfo.VERSION = X_VERSION)
           or ((recinfo.VERSION is null)
               and (X_VERSION is null)))
      AND ((recinfo.APPLICATIONMODULE_USAGE_NAME = X_APPLICATIONMODULE_USAGE_NAME)
           or ((recinfo.APPLICATIONMODULE_USAGE_NAME is null)
               and (X_APPLICATIONMODULE_USAGE_NAME is null)))
      AND ((recinfo.ADD_INDEXED_CHILDREN = X_ADD_INDEXED_CHILDREN)
           or ((recinfo.ADD_INDEXED_CHILDREN is null)
               and (X_ADD_INDEXED_CHILDREN is null)))
      AND ((recinfo.STATEFUL_FLAG = X_STATEFUL_FLAG)
           or ((recinfo.STATEFUL_FLAG is null)
               and (X_STATEFUL_FLAG is null)))
      AND ((recinfo.FUNCTION_NAME = X_FUNCTION_NAME)
           or ((recinfo.FUNCTION_NAME is null)
               and (X_FUNCTION_NAME is null)))
      AND ((recinfo.CHILDREN_VIEW_USAGE_NAME = X_CHILDREN_VIEW_USAGE_NAME)
           or ((recinfo.CHILDREN_VIEW_USAGE_NAME is null)
               and (X_CHILDREN_VIEW_USAGE_NAME is null)))
  ) then
    null;
  else
    fnd_message.set_name('FND', 'FORM_RECORD_CHANGED');
    app_exception.raise_exception;
  end if;

  open c1;
  fetch c1 into tlinfo;
  if (c1%notfound) then
    close c1;
    return;
  end if;
  close c1;

  if ( (tlinfo.NAME = X_NAME)
      AND ((tlinfo.DESCRIPTION = X_DESCRIPTION)
           OR ((tlinfo.DESCRIPTION is null)
               AND (X_DESCRIPTION is null)))
  ) then
    null;
  else
    fnd_message.set_name('FND', 'FORM_RECORD_CHANGED');
    app_exception.raise_exception;
  end if;
  return;
end LOCK_ROW;
--
--
procedure UPDATE_ROW (
  X_REGION_APPLICATION_ID in NUMBER,
  X_REGION_CODE in VARCHAR2,
  X_DATABASE_OBJECT_NAME in VARCHAR2,
  X_REGION_STYLE in VARCHAR2,
  X_NUM_COLUMNS in NUMBER,
  X_ICX_CUSTOM_CALL in VARCHAR2,
  X_NAME in VARCHAR2,
  X_DESCRIPTION in VARCHAR2,
  X_REGION_DEFAULTING_API_PKG in VARCHAR2,
  X_REGION_DEFAULTING_API_PROC in VARCHAR2,
  X_REGION_VALIDATION_API_PKG in VARCHAR2,
  X_REGION_VALIDATION_API_PROC in VARCHAR2,
  X_APPL_MODULE_OBJECT_TYPE in VARCHAR2,
  X_NUM_ROWS_DISPLAY in NUMBER,
  X_REGION_OBJECT_TYPE in VARCHAR2,
  X_IMAGE_FILE_NAME in VARCHAR2,
  X_ISFORM_FLAG in VARCHAR2,
  X_HELP_TARGET in VARCHAR2,
  X_STYLE_SHEET_FILENAME in VARCHAR2,
  X_VERSION in VARCHAR2,
  X_APPLICATIONMODULE_USAGE_NAME in VARCHAR2,
  X_ADD_INDEXED_CHILDREN in VARCHAR2 := NULL,
  X_STATEFUL_FLAG in VARCHAR2 := NULL,
  X_FUNCTION_NAME in VARCHAR2 := NULL,
  X_CHILDREN_VIEW_USAGE_NAME in VARCHAR2 := NULL,
  X_LAST_UPDATE_DATE in DATE,
  X_LAST_UPDATED_BY in NUMBER,
  X_LAST_UPDATE_LOGIN in NUMBER,
  X_ATTRIBUTE_CATEGORY in VARCHAR2,
  X_ATTRIBUTE1 in VARCHAR2,
  X_ATTRIBUTE2 in VARCHAR2,
  X_ATTRIBUTE3 in VARCHAR2,
  X_ATTRIBUTE4 in VARCHAR2,
  X_ATTRIBUTE5 in VARCHAR2,
  X_ATTRIBUTE6 in VARCHAR2,
  X_ATTRIBUTE7 in VARCHAR2,
  X_ATTRIBUTE8 in VARCHAR2,
  X_ATTRIBUTE9 in VARCHAR2,
  X_ATTRIBUTE10 in VARCHAR2,
  X_ATTRIBUTE11 in VARCHAR2,
  X_ATTRIBUTE12 in VARCHAR2,
  X_ATTRIBUTE13 in VARCHAR2,
  X_ATTRIBUTE14 in VARCHAR2,
  X_ATTRIBUTE15 in VARCHAR2
) is
begin
    update AK_REGIONS set
      REGION_APPLICATION_ID = X_REGION_APPLICATION_ID,
      REGION_CODE = X_REGION_CODE,
      DATABASE_OBJECT_NAME = X_DATABASE_OBJECT_NAME,
      REGION_STYLE = X_REGION_STYLE,
      NUM_COLUMNS = X_NUM_COLUMNS,
      ICX_CUSTOM_CALL = X_ICX_CUSTOM_CALL,
      REGION_DEFAULTING_API_PKG = X_REGION_DEFAULTING_API_PKG,
      REGION_DEFAULTING_API_PROC = X_REGION_DEFAULTING_API_PROC,
      REGION_VALIDATION_API_PKG = X_REGION_VALIDATION_API_PKG,
      REGION_VALIDATION_API_PROC = X_REGION_VALIDATION_API_PROC,
      APPLICATIONMODULE_OBJECT_TYPE =  X_APPL_MODULE_OBJECT_TYPE,
      NUM_ROWS_DISPLAY =  X_NUM_ROWS_DISPLAY,
      REGION_OBJECT_TYPE =  X_REGION_OBJECT_TYPE,
      ISFORM_FLAG = X_ISFORM_FLAG,
      IMAGE_FILE_NAME = X_IMAGE_FILE_NAME,
      HELP_TARGET = X_HELP_TARGET,
      STYLE_SHEET_FILENAME = X_STYLE_SHEET_FILENAME,
      VERSION = X_VERSION,
      APPLICATIONMODULE_USAGE_NAME = X_APPLICATIONMODULE_USAGE_NAME,
      ADD_INDEXED_CHILDREN = X_ADD_INDEXED_CHILDREN,
      STATEFUL_FLAG = X_STATEFUL_FLAG,
      FUNCTION_NAME = X_FUNCTION_NAME,
      CHILDREN_VIEW_USAGE_NAME = X_CHILDREN_VIEW_USAGE_NAME,

      LAST_UPDATE_DATE = sysdate,
      LAST_UPDATED_BY = fnd_global.user_id,
      LAST_UPDATE_LOGIN = fnd_global.login_id,

      ATTRIBUTE_CATEGORY = X_ATTRIBUTE_CATEGORY,
      ATTRIBUTE1 = X_ATTRIBUTE1,
      ATTRIBUTE2 = X_ATTRIBUTE2,
      ATTRIBUTE3 = X_ATTRIBUTE3,
      ATTRIBUTE4 = X_ATTRIBUTE4,
      ATTRIBUTE5 = X_ATTRIBUTE5,
      ATTRIBUTE6 = X_ATTRIBUTE6,
      ATTRIBUTE7 = X_ATTRIBUTE7,
      ATTRIBUTE8 = X_ATTRIBUTE8,
      ATTRIBUTE9 = X_ATTRIBUTE9,
      ATTRIBUTE10 = X_ATTRIBUTE10,
      ATTRIBUTE11 = X_ATTRIBUTE11,
      ATTRIBUTE12 = X_ATTRIBUTE12,
      ATTRIBUTE13 = X_ATTRIBUTE13,
      ATTRIBUTE14 = X_ATTRIBUTE14,
      ATTRIBUTE15 = X_ATTRIBUTE15,
      STANDALONE  = 'Y'
    where REGION_APPLICATION_ID = X_REGION_APPLICATION_ID
    and REGION_CODE = X_REGION_CODE;
  if (sql%notfound) then
    raise no_data_found;
  end if;

  update AK_REGIONS_TL set
    NAME = X_NAME,
    DESCRIPTION = X_DESCRIPTION,

    LAST_UPDATE_DATE = sysdate,
    LAST_UPDATED_BY = fnd_global.user_id,
    LAST_UPDATE_LOGIN = fnd_global.login_id,

    SOURCE_LANG = userenv('LANG')
  where REGION_CODE = X_REGION_CODE
  and REGION_APPLICATION_ID = X_REGION_APPLICATION_ID
  and userenv('LANG') in (LANGUAGE, SOURCE_LANG);
  if (sql%notfound) then
    raise no_data_found;
  end if;
end UPDATE_ROW;
--
--
procedure DELETE_ROW (
  X_REGION_APPLICATION_ID in NUMBER,
  X_REGION_CODE in VARCHAR2
) is
begin
  delete from AK_REGIONS
  where REGION_APPLICATION_ID = X_REGION_APPLICATION_ID
  and REGION_CODE = X_REGION_CODE;

  if (sql%notfound) then
    raise no_data_found;
  end if;

  delete from AK_REGIONS_TL
  where REGION_APPLICATION_ID = X_REGION_APPLICATION_ID
  and REGION_CODE = X_REGION_CODE;

  if (sql%notfound) then
    raise no_data_found;
  end if;
end DELETE_ROW;

procedure ADD_LANGUAGE
is
begin
  delete from AK_REGIONS_TL T
  where not exists
    (select NULL
    from AK_REGIONS B
    where B.REGION_CODE = T.REGION_CODE
    and B.REGION_APPLICATION_ID = T.REGION_APPLICATION_ID
    );

  update AK_REGIONS_TL T set (
      NAME,
      DESCRIPTION
    ) = (select
      B.NAME,
      B.DESCRIPTION
    from AK_REGIONS_TL B
    where B.REGION_CODE = T.REGION_CODE
    and B.REGION_APPLICATION_ID = T.REGION_APPLICATION_ID
    and B.LANGUAGE = T.SOURCE_LANG)
  where (
      T.REGION_CODE,
      T.REGION_APPLICATION_ID,
      T.LANGUAGE
  ) in (select
      SUBT.REGION_CODE,
      SUBT.REGION_APPLICATION_ID,
      SUBT.LANGUAGE
    from AK_REGIONS_TL SUBB, AK_REGIONS_TL SUBT
    where SUBB.REGION_CODE = SUBT.REGION_CODE
    and SUBB.REGION_APPLICATION_ID = SUBT.REGION_APPLICATION_ID
    and SUBB.LANGUAGE = SUBT.SOURCE_LANG
    and (SUBB.NAME <> SUBT.NAME
      or SUBB.DESCRIPTION <> SUBT.DESCRIPTION
      or (SUBB.DESCRIPTION is null and SUBT.DESCRIPTION is not null)
      or (SUBB.DESCRIPTION is not null and SUBT.DESCRIPTION is null)
  ));

  insert into AK_REGIONS_TL (
    REGION_APPLICATION_ID,
    REGION_CODE,
    NAME,
    DESCRIPTION,
    CREATED_BY,
    CREATION_DATE,
    LAST_UPDATED_BY,
    LAST_UPDATE_DATE,
    LAST_UPDATE_LOGIN,
    LANGUAGE,
    SOURCE_LANG
  ) select
    B.REGION_APPLICATION_ID,
    B.REGION_CODE,
    B.NAME,
    B.DESCRIPTION,
    B.CREATED_BY,
    B.CREATION_DATE,
    B.LAST_UPDATED_BY,
    B.LAST_UPDATE_DATE,
    B.LAST_UPDATE_LOGIN,
    L.LANGUAGE_CODE,
    B.SOURCE_LANG
  from AK_REGIONS_TL B, FND_LANGUAGES L
  where L.INSTALLED_FLAG in ('I', 'B')
  and B.LANGUAGE = userenv('LANG')
  and not exists
    (select NULL
    from AK_REGIONS_TL T
    where T.REGION_CODE = B.REGION_CODE
    and T.REGION_APPLICATION_ID = B.REGION_APPLICATION_ID
    and T.LANGUAGE = L.LANGUAGE_CODE);
end ADD_LANGUAGE;
--
--
end jtfb_ak_regions_pkg;

/
