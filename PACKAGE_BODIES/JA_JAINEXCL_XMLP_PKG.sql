--------------------------------------------------------
--  DDL for Package Body JA_JAINEXCL_XMLP_PKG
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE PACKAGE BODY "APPS"."JA_JAINEXCL_XMLP_PKG" AS
/* $Header: JAINEXCLB.pls 120.1 2007/12/25 16:18:17 dwkrishn noship $ */
  FUNCTION CF_ORG_NAMEFORMULA(ORGANIZATION_ID_V IN NUMBER) RETURN VARCHAR2 IS
    V_ORGANIZATION_NAME VARCHAR2(60);
  BEGIN
    SELECT
      ORGANIZATION_NAME
    INTO V_ORGANIZATION_NAME
    FROM
      ORG_ORGANIZATION_DEFINITIONS
    WHERE ORGANIZATION_ID = ORGANIZATION_ID_V;
    RETURN (V_ORGANIZATION_NAME);
  END CF_ORG_NAMEFORMULA;

  FUNCTION CF_LOCFORMULA(LOCATION_ID_V IN NUMBER) RETURN VARCHAR2 IS
    V_LOCATION_CODE VARCHAR2(60);
  BEGIN
    SELECT
      LOCATION_CODE
    INTO V_LOCATION_CODE
    FROM
      HR_LOCATIONS
    WHERE LOCATION_ID = LOCATION_ID_V;
    RETURN (V_LOCATION_CODE);
  END CF_LOCFORMULA;

  FUNCTION CF_SOB_NAMEFORMULA(ORGANIZATION_ID_V IN NUMBER) RETURN VARCHAR2 IS
    CURSOR FOR_SOB_ID(INV_ORG_ID IN NUMBER) IS
      SELECT
        SET_OF_BOOKS_ID
      FROM
        ORG_ORGANIZATION_DEFINITIONS
      WHERE ORGANIZATION_ID = INV_ORG_ID;
    CURSOR FOR_SOB_NAME(SOB_ID IN NUMBER) IS
      SELECT
        NAME
      FROM
        GL_SETS_OF_BOOKS
      WHERE SET_OF_BOOKS_ID = SOB_ID;
    V_NAME VARCHAR2(30);
    V_SOB_ID NUMBER;
  BEGIN
    OPEN FOR_SOB_ID(ORGANIZATION_ID_V);
    FETCH FOR_SOB_ID
     INTO V_SOB_ID;
    CLOSE FOR_SOB_ID;
    OPEN FOR_SOB_NAME(V_SOB_ID);
    FETCH FOR_SOB_NAME
     INTO V_NAME;
    CLOSE FOR_SOB_NAME;
    RETURN (V_NAME);
  END CF_SOB_NAMEFORMULA;

  FUNCTION CF_P_CUSTOMERFORMULA RETURN VARCHAR2 IS
    CURSOR FOR_CUST_NAME(C_ID IN NUMBER) IS
      SELECT
        PARTY_NAME
      FROM
        HZ_PARTIES HP,
        HZ_CUST_ACCOUNTS HCA
      WHERE HP.PARTY_ID = HCA.PARTY_ID
        AND HCA.CUST_ACCOUNT_ID = C_ID;
    V_NAME VARCHAR2(100);
  BEGIN
    OPEN FOR_CUST_NAME(P_CUSTOMER_ID);
    FETCH FOR_CUST_NAME
     INTO V_NAME;
    CLOSE FOR_CUST_NAME;
    RETURN (V_NAME);
  END CF_P_CUSTOMERFORMULA;

  FUNCTION BEFOREREPORT RETURN BOOLEAN IS
    CURSOR C_PROGRAM_ID(P_REQUEST_ID IN NUMBER) IS
      SELECT
        CONCURRENT_PROGRAM_ID,
        NVL(ENABLE_TRACE
           ,'N')
      FROM
        FND_CONCURRENT_REQUESTS
      WHERE REQUEST_ID = P_REQUEST_ID;
    V_ENABLE_TRACE FND_CONCURRENT_PROGRAMS.ENABLE_TRACE%TYPE;
    V_PROGRAM_ID FND_CONCURRENT_PROGRAMS.CONCURRENT_PROGRAM_ID%TYPE;
    CURSOR GET_AUDSID IS
      SELECT
        A.SID,
        A.SERIAL#,
        B.SPID
      FROM
        V$SESSION A,
        V$PROCESS B
      WHERE AUDSID = USERENV('SESSIONID')
        AND A.PADDR = B.ADDR;
    CURSOR GET_DBNAME IS
      SELECT
        NAME
      FROM
        V$DATABASE;
    AUDSID NUMBER := USERENV('SESSIONID');
    SID NUMBER;
    SERIAL NUMBER;
    SPID VARCHAR2(9);
    NAME1 VARCHAR2(25);
  BEGIN
    P_CONC_REQUEST_ID := FND_GLOBAL.CONC_REQUEST_ID;
    P_START_DATE_T:=TO_CHAR(P_START_DATE,'DD-MON-YYYY');
    P_END_DATE_T:=TO_CHAR(P_END_DATE,'DD-MON-YYYY');
    /*SRW.USER_EXIT('FND SRWINIT')*/NULL;
    /*SRW.MESSAGE(1275
               ,'Report Version is 120.2 Last modified date is 22-Feb-2006')*/NULL;
    IF P_END_DATE < P_START_DATE THEN
      /*SRW.MESSAGE(1275
                 ,'Start  Date can''t be greater than end date Date')*/NULL;
      /*RAISE SRW.PROGRAM_ABORT*/RAISE_APPLICATION_ERROR(-20101,null);
    END IF;
    BEGIN
      OPEN C_PROGRAM_ID(P_CONC_REQUEST_ID);
      FETCH C_PROGRAM_ID
       INTO V_PROGRAM_ID,V_ENABLE_TRACE;
      CLOSE C_PROGRAM_ID;
      /*SRW.MESSAGE(1275
                 ,'v_program_id -> ' || V_PROGRAM_ID || ', v_enable_trace -> ' || V_ENABLE_TRACE || ', request_id -> ' || P_CONC_REQUEST_ID)*/NULL;
      IF V_ENABLE_TRACE = 'Y' THEN
        OPEN GET_AUDSID;
        FETCH GET_AUDSID
         INTO SID,SERIAL,SPID;
        CLOSE GET_AUDSID;
        OPEN GET_DBNAME;
        FETCH GET_DBNAME
         INTO NAME1;
        CLOSE GET_DBNAME;
        /*SRW.MESSAGE(599
                   ,'TraceFile Name = ' || LOWER(NAME1) || '_ora_' || SPID || '.trc')*/NULL;
        EXECUTE IMMEDIATE
          'ALTER SESSION SET EVENTS ''10046 trace name context forever, level 4''';
      END IF;
      RETURN (TRUE);
    EXCEPTION
      WHEN OTHERS THEN
        /*SRW.MESSAGE(1275
                   ,'Error during enabling the trace. ErrCode -> ' || SQLCODE || ', ErrMesg ->' || SQLERRM)*/NULL;
        RETURN (TRUE);
    END;
  END BEFOREREPORT;

  FUNCTION P_CUSTOMER_IDVALIDTRIGGER RETURN BOOLEAN IS
  BEGIN
    RETURN (TRUE);
  END P_CUSTOMER_IDVALIDTRIGGER;

  FUNCTION BEFOREPFORM RETURN BOOLEAN IS
  BEGIN
    RETURN (TRUE);
  END BEFOREPFORM;

  FUNCTION AFTERPFORM RETURN BOOLEAN IS
  BEGIN
    RETURN (TRUE);
  END AFTERPFORM;

  FUNCTION BETWEENPAGE RETURN BOOLEAN IS
  BEGIN
    RETURN (TRUE);
  END BETWEENPAGE;

  FUNCTION AFTERREPORT RETURN BOOLEAN IS
  BEGIN
    /*SRW.USER_EXIT('FND SRWEXIT')*/NULL;
    RETURN (TRUE);
  END AFTERREPORT;

  FUNCTION CF_1FORMULA(RMA_LINE_ID_v IN NUMBER
                      ,EXCISE_INVOICE_NO IN VARCHAR2
                      ,EXCISE_INVOICE_DATE IN DATE) RETURN NUMBER IS
    LN_CESS_AMT NUMBER;
  BEGIN
    SELECT
      SUM(RTL.TAX_AMOUNT)
    INTO LN_CESS_AMT
    FROM
      JAI_OM_OE_RMA_TAXES RTL,
      JAI_CMN_TAXES_ALL JTC
    WHERE RTL.RMA_LINE_ID = RMA_LINE_ID_V
      AND JTC.TAX_ID = RTL.TAX_ID
      AND JTC.TAX_TYPE in ( 'CVD_EDUCATION_CESS' , 'EXCISE_EDUCATION_CESS' );
    /*SRW.MESSAGE(1275
               ,' ex inv  : ' || EXCISE_INVOICE_NO || ' date : ' || EXCISE_INVOICE_DATE)*/NULL;
    RETURN LN_CESS_AMT;
  END CF_1FORMULA;

END JA_JAINEXCL_XMLP_PKG;



/
