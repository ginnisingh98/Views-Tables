--------------------------------------------------------
--  DDL for Package Body IBY_ACCT_PMT_PROFILES_PKG
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE PACKAGE BODY "APPS"."IBY_ACCT_PMT_PROFILES_PKG" as
/* $Header: ibyacppb.pls 120.1 2005/10/27 15:59:03 syidner noship $ */

procedure INSERT_ROW (
  X_ROWID in out nocopy VARCHAR2,
  X_PAYMENT_PROFILE_ID in NUMBER,
  X_SYSTEM_PROFILE_CODE in VARCHAR2,
  X_OBJECT_VERSION_NUMBER in NUMBER,
  X_BEP_ACCOUNT_ID in NUMBER,
  X_SECURITY_CONFIGURATION_ID in NUMBER,
  X_TRANSMIT_CONFIGURATION_ID in NUMBER,
  X_RESET_VALUE_1 in NUMBER,
  X_LAST_USED_NUMBER_1 in NUMBER,
  X_RESET_REQUEST_1 in NUMBER,
  X_RESET_VALUE_2 in NUMBER,
  X_LAST_USED_NUMBER_2 in NUMBER,
  X_RESET_REQUEST_2 in NUMBER,
  X_RESET_VALUE_3 in NUMBER,
  X_LAST_USED_NUMBER_3 in NUMBER,
  X_RESET_REQUEST_3 in NUMBER,
  X_INACTIVE_DATE in DATE,
  X_ACK_SEC_CONFIG_ID in NUMBER,
  X_ACK_TRANSMIT_CONFIG_ID in NUMBER,
  X_PAYMENT_PROFILE_NAME in VARCHAR2,
  X_CREATION_DATE in DATE,
  X_CREATED_BY in NUMBER,
  X_LAST_UPDATE_DATE in DATE,
  X_LAST_UPDATED_BY in NUMBER,
  X_LAST_UPDATE_LOGIN in NUMBER
) is
  cursor C is select ROWID from IBY_ACCT_PMT_PROFILES_B
    where PAYMENT_PROFILE_ID = X_PAYMENT_PROFILE_ID
    ;
begin
  insert into IBY_ACCT_PMT_PROFILES_B (
    PAYMENT_PROFILE_ID,
    SYSTEM_PROFILE_CODE,
    OBJECT_VERSION_NUMBER,
    BEP_ACCOUNT_ID,
    SECURITY_CONFIGURATION_ID,
    TRANSMIT_CONFIGURATION_ID,
    RESET_VALUE_1,
    LAST_USED_NUMBER_1,
    RESET_REQUEST_1,
    RESET_VALUE_2,
    LAST_USED_NUMBER_2,
    RESET_REQUEST_2,
    RESET_VALUE_3,
    LAST_USED_NUMBER_3,
    RESET_REQUEST_3,
    INACTIVE_DATE,
    ACK_SEC_CONFIG_ID,
    ACK_TRANSMIT_CONFIG_ID,
    CREATION_DATE,
    CREATED_BY,
    LAST_UPDATE_DATE,
    LAST_UPDATED_BY,
    LAST_UPDATE_LOGIN
  ) values (
    X_PAYMENT_PROFILE_ID,
    X_SYSTEM_PROFILE_CODE,
    X_OBJECT_VERSION_NUMBER,
    X_BEP_ACCOUNT_ID,
    X_SECURITY_CONFIGURATION_ID,
    X_TRANSMIT_CONFIGURATION_ID,
    X_RESET_VALUE_1,
    X_LAST_USED_NUMBER_1,
    X_RESET_REQUEST_1,
    X_RESET_VALUE_2,
    X_LAST_USED_NUMBER_2,
    X_RESET_REQUEST_2,
    X_RESET_VALUE_3,
    X_LAST_USED_NUMBER_3,
    X_RESET_REQUEST_3,
    X_INACTIVE_DATE,
    X_ACK_SEC_CONFIG_ID,
    X_ACK_TRANSMIT_CONFIG_ID,
    X_CREATION_DATE,
    X_CREATED_BY,
    X_LAST_UPDATE_DATE,
    X_LAST_UPDATED_BY,
    X_LAST_UPDATE_LOGIN
  );

  insert into IBY_ACCT_PMT_PROFILES_TL (
    PAYMENT_PROFILE_ID,
    PAYMENT_PROFILE_NAME,
    CREATED_BY,
    CREATION_DATE,
    LAST_UPDATED_BY,
    LAST_UPDATE_DATE,
    LAST_UPDATE_LOGIN,
    OBJECT_VERSION_NUMBER,
    LANGUAGE,
    SOURCE_LANG
  ) select
    X_PAYMENT_PROFILE_ID,
    X_PAYMENT_PROFILE_NAME,
    X_CREATED_BY,
    X_CREATION_DATE,
    X_LAST_UPDATED_BY,
    X_LAST_UPDATE_DATE,
    X_LAST_UPDATE_LOGIN,
    X_OBJECT_VERSION_NUMBER,
    L.LANGUAGE_CODE,
    userenv('LANG')
  from FND_LANGUAGES L
  where L.INSTALLED_FLAG in ('I', 'B')
  and not exists
    (select NULL
    from IBY_ACCT_PMT_PROFILES_TL T
    where T.PAYMENT_PROFILE_ID = X_PAYMENT_PROFILE_ID
    and T.LANGUAGE = L.LANGUAGE_CODE);

  open c;
  fetch c into X_ROWID;
  if (c%notfound) then
    close c;
    raise no_data_found;
  end if;
  close c;

end INSERT_ROW;

procedure LOCK_ROW (
  X_PAYMENT_PROFILE_ID in NUMBER,
  X_SYSTEM_PROFILE_CODE in VARCHAR2,
  X_OBJECT_VERSION_NUMBER in NUMBER,
  X_BEP_ACCOUNT_ID in NUMBER,
  X_SECURITY_CONFIGURATION_ID in NUMBER,
  X_TRANSMIT_CONFIGURATION_ID in NUMBER,
  X_RESET_VALUE_1 in NUMBER,
  X_LAST_USED_NUMBER_1 in NUMBER,
  X_RESET_REQUEST_1 in NUMBER,
  X_RESET_VALUE_2 in NUMBER,
  X_LAST_USED_NUMBER_2 in NUMBER,
  X_RESET_REQUEST_2 in NUMBER,
  X_RESET_VALUE_3 in NUMBER,
  X_LAST_USED_NUMBER_3 in NUMBER,
  X_RESET_REQUEST_3 in NUMBER,
  X_INACTIVE_DATE in DATE,
  X_ACK_SEC_CONFIG_ID in NUMBER,
  X_ACK_TRANSMIT_CONFIG_ID in NUMBER,
  X_PAYMENT_PROFILE_NAME in VARCHAR2
) is
  cursor c is select
      SYSTEM_PROFILE_CODE,
      OBJECT_VERSION_NUMBER,
      BEP_ACCOUNT_ID,
      SECURITY_CONFIGURATION_ID,
      TRANSMIT_CONFIGURATION_ID,
      RESET_VALUE_1,
      LAST_USED_NUMBER_1,
      RESET_REQUEST_1,
      RESET_VALUE_2,
      LAST_USED_NUMBER_2,
      RESET_REQUEST_2,
      RESET_VALUE_3,
      LAST_USED_NUMBER_3,
      RESET_REQUEST_3,
      INACTIVE_DATE,
      ACK_SEC_CONFIG_ID,
      ACK_TRANSMIT_CONFIG_ID
    from IBY_ACCT_PMT_PROFILES_B
    where PAYMENT_PROFILE_ID = X_PAYMENT_PROFILE_ID
    for update of PAYMENT_PROFILE_ID nowait;
  recinfo c%rowtype;

  cursor c1 is select
      PAYMENT_PROFILE_NAME,
      decode(LANGUAGE, userenv('LANG'), 'Y', 'N') BASELANG
    from IBY_ACCT_PMT_PROFILES_TL
    where PAYMENT_PROFILE_ID = X_PAYMENT_PROFILE_ID
    and userenv('LANG') in (LANGUAGE, SOURCE_LANG)
    for update of PAYMENT_PROFILE_ID nowait;
begin
  open c;
  fetch c into recinfo;
  if (c%notfound) then
    close c;
    fnd_message.set_name('FND', 'FORM_RECORD_DELETED');
    app_exception.raise_exception;
  end if;
  close c;
  if (    (recinfo.SYSTEM_PROFILE_CODE = X_SYSTEM_PROFILE_CODE)
      AND (recinfo.OBJECT_VERSION_NUMBER = X_OBJECT_VERSION_NUMBER)
      AND ((recinfo.BEP_ACCOUNT_ID = X_BEP_ACCOUNT_ID)
           OR ((recinfo.BEP_ACCOUNT_ID is null) AND (X_BEP_ACCOUNT_ID is null)))
      AND ((recinfo.SECURITY_CONFIGURATION_ID = X_SECURITY_CONFIGURATION_ID)
           OR ((recinfo.SECURITY_CONFIGURATION_ID is null) AND (X_SECURITY_CONFIGURATION_ID is null)))
      AND ((recinfo.TRANSMIT_CONFIGURATION_ID = X_TRANSMIT_CONFIGURATION_ID)
           OR ((recinfo.TRANSMIT_CONFIGURATION_ID is null) AND (X_TRANSMIT_CONFIGURATION_ID is null)))
      AND ((recinfo.RESET_VALUE_1 = X_RESET_VALUE_1)
           OR ((recinfo.RESET_VALUE_1 is null) AND (X_RESET_VALUE_1 is null)))
      AND ((recinfo.LAST_USED_NUMBER_1 = X_LAST_USED_NUMBER_1)
           OR ((recinfo.LAST_USED_NUMBER_1 is null) AND (X_LAST_USED_NUMBER_1 is null)))
      AND ((recinfo.RESET_REQUEST_1 = X_RESET_REQUEST_1)
           OR ((recinfo.RESET_REQUEST_1 is null) AND (X_RESET_REQUEST_1 is null)))
      AND ((recinfo.RESET_VALUE_2 = X_RESET_VALUE_2)
           OR ((recinfo.RESET_VALUE_2 is null) AND (X_RESET_VALUE_2 is null)))
      AND ((recinfo.LAST_USED_NUMBER_2 = X_LAST_USED_NUMBER_2)
           OR ((recinfo.LAST_USED_NUMBER_2 is null) AND (X_LAST_USED_NUMBER_2 is null)))
      AND ((recinfo.RESET_REQUEST_2 = X_RESET_REQUEST_2)
           OR ((recinfo.RESET_REQUEST_2 is null) AND (X_RESET_REQUEST_2 is null)))
      AND ((recinfo.RESET_VALUE_3 = X_RESET_VALUE_3)
           OR ((recinfo.RESET_VALUE_3 is null) AND (X_RESET_VALUE_3 is null)))
      AND ((recinfo.LAST_USED_NUMBER_3 = X_LAST_USED_NUMBER_3)
           OR ((recinfo.LAST_USED_NUMBER_3 is null) AND (X_LAST_USED_NUMBER_3 is null)))
      AND ((recinfo.RESET_REQUEST_3 = X_RESET_REQUEST_3)
           OR ((recinfo.RESET_REQUEST_3 is null) AND (X_RESET_REQUEST_3 is null)))
      AND ((recinfo.INACTIVE_DATE = X_INACTIVE_DATE)
           OR ((recinfo.INACTIVE_DATE is null) AND (X_INACTIVE_DATE is null)))
      AND ((recinfo.ACK_SEC_CONFIG_ID = X_ACK_SEC_CONFIG_ID)
           OR ((recinfo.ACK_SEC_CONFIG_ID is null) AND (X_ACK_SEC_CONFIG_ID is null)))
      AND ((recinfo.ACK_TRANSMIT_CONFIG_ID = X_ACK_TRANSMIT_CONFIG_ID)
           OR ((recinfo.ACK_TRANSMIT_CONFIG_ID is null) AND (X_ACK_TRANSMIT_CONFIG_ID is null)))
  ) then
    null;
  else
    fnd_message.set_name('FND', 'FORM_RECORD_CHANGED');
    app_exception.raise_exception;
  end if;

  for tlinfo in c1 loop
    if (tlinfo.BASELANG = 'Y') then
      if (    (tlinfo.PAYMENT_PROFILE_NAME = X_PAYMENT_PROFILE_NAME)
      ) then
        null;
      else
        fnd_message.set_name('FND', 'FORM_RECORD_CHANGED');
        app_exception.raise_exception;
      end if;
    end if;
  end loop;
  return;
end LOCK_ROW;

procedure UPDATE_ROW (
  X_PAYMENT_PROFILE_ID in NUMBER,
  X_SYSTEM_PROFILE_CODE in VARCHAR2,
  X_OBJECT_VERSION_NUMBER in NUMBER,
  X_BEP_ACCOUNT_ID in NUMBER,
  X_SECURITY_CONFIGURATION_ID in NUMBER,
  X_TRANSMIT_CONFIGURATION_ID in NUMBER,
  X_RESET_VALUE_1 in NUMBER,
  X_LAST_USED_NUMBER_1 in NUMBER,
  X_RESET_REQUEST_1 in NUMBER,
  X_RESET_VALUE_2 in NUMBER,
  X_LAST_USED_NUMBER_2 in NUMBER,
  X_RESET_REQUEST_2 in NUMBER,
  X_RESET_VALUE_3 in NUMBER,
  X_LAST_USED_NUMBER_3 in NUMBER,
  X_RESET_REQUEST_3 in NUMBER,
  X_INACTIVE_DATE in DATE,
  X_ACK_SEC_CONFIG_ID in NUMBER,
  X_ACK_TRANSMIT_CONFIG_ID in NUMBER,
  X_PAYMENT_PROFILE_NAME in VARCHAR2,
  X_LAST_UPDATE_DATE in DATE,
  X_LAST_UPDATED_BY in NUMBER,
  X_LAST_UPDATE_LOGIN in NUMBER
) is
begin
  update IBY_ACCT_PMT_PROFILES_B set
    SYSTEM_PROFILE_CODE = X_SYSTEM_PROFILE_CODE,
    OBJECT_VERSION_NUMBER = X_OBJECT_VERSION_NUMBER,
    BEP_ACCOUNT_ID = X_BEP_ACCOUNT_ID,
    SECURITY_CONFIGURATION_ID = X_SECURITY_CONFIGURATION_ID,
    TRANSMIT_CONFIGURATION_ID = X_TRANSMIT_CONFIGURATION_ID,
    RESET_VALUE_1 = X_RESET_VALUE_1,
    LAST_USED_NUMBER_1 = X_LAST_USED_NUMBER_1,
    RESET_REQUEST_1 = X_RESET_REQUEST_1,
    RESET_VALUE_2 = X_RESET_VALUE_2,
    LAST_USED_NUMBER_2 = X_LAST_USED_NUMBER_2,
    RESET_REQUEST_2 = X_RESET_REQUEST_2,
    RESET_VALUE_3 = X_RESET_VALUE_3,
    LAST_USED_NUMBER_3 = X_LAST_USED_NUMBER_3,
    RESET_REQUEST_3 = X_RESET_REQUEST_3,
    INACTIVE_DATE = X_INACTIVE_DATE,
    ACK_SEC_CONFIG_ID = X_ACK_SEC_CONFIG_ID,
    ACK_TRANSMIT_CONFIG_ID = X_ACK_TRANSMIT_CONFIG_ID,
    LAST_UPDATE_DATE = X_LAST_UPDATE_DATE,
    LAST_UPDATED_BY = X_LAST_UPDATED_BY,
    LAST_UPDATE_LOGIN = X_LAST_UPDATE_LOGIN
  where PAYMENT_PROFILE_ID = X_PAYMENT_PROFILE_ID;

  if (sql%notfound) then
    raise no_data_found;
  end if;

  update IBY_ACCT_PMT_PROFILES_TL set
    PAYMENT_PROFILE_NAME = X_PAYMENT_PROFILE_NAME,
    LAST_UPDATE_DATE = X_LAST_UPDATE_DATE,
    LAST_UPDATED_BY = X_LAST_UPDATED_BY,
    LAST_UPDATE_LOGIN = X_LAST_UPDATE_LOGIN,
    SOURCE_LANG = userenv('LANG')
  where PAYMENT_PROFILE_ID = X_PAYMENT_PROFILE_ID
  and userenv('LANG') in (LANGUAGE, SOURCE_LANG);

  if (sql%notfound) then
    raise no_data_found;
  end if;
end UPDATE_ROW;

procedure DELETE_ROW (
  X_PAYMENT_PROFILE_ID in NUMBER
) is
begin
  delete from IBY_ACCT_PMT_PROFILES_TL
  where PAYMENT_PROFILE_ID = X_PAYMENT_PROFILE_ID;

  if (sql%notfound) then
    raise no_data_found;
  end if;

  delete from IBY_ACCT_PMT_PROFILES_B
  where PAYMENT_PROFILE_ID = X_PAYMENT_PROFILE_ID;

  if (sql%notfound) then
    raise no_data_found;
  end if;
end DELETE_ROW;

procedure ADD_LANGUAGE
is
begin
  delete from IBY_ACCT_PMT_PROFILES_TL T
  where not exists
    (select NULL
    from IBY_ACCT_PMT_PROFILES_B B
    where B.PAYMENT_PROFILE_ID = T.PAYMENT_PROFILE_ID
    );

  update IBY_ACCT_PMT_PROFILES_TL T set (
      PAYMENT_PROFILE_NAME
    ) = (select
      B.PAYMENT_PROFILE_NAME
    from IBY_ACCT_PMT_PROFILES_TL B
    where B.PAYMENT_PROFILE_ID = T.PAYMENT_PROFILE_ID
    and B.LANGUAGE = T.SOURCE_LANG)
  where (
      T.PAYMENT_PROFILE_ID,
      T.LANGUAGE
  ) in (select
      SUBT.PAYMENT_PROFILE_ID,
      SUBT.LANGUAGE
    from IBY_ACCT_PMT_PROFILES_TL SUBB, IBY_ACCT_PMT_PROFILES_TL SUBT
    where SUBB.PAYMENT_PROFILE_ID = SUBT.PAYMENT_PROFILE_ID
    and SUBB.LANGUAGE = SUBT.SOURCE_LANG
    and (SUBB.PAYMENT_PROFILE_NAME <> SUBT.PAYMENT_PROFILE_NAME
  ));

  insert into IBY_ACCT_PMT_PROFILES_TL (
    PAYMENT_PROFILE_ID,
    PAYMENT_PROFILE_NAME,
    CREATED_BY,
    CREATION_DATE,
    LAST_UPDATED_BY,
    LAST_UPDATE_DATE,
    LAST_UPDATE_LOGIN,
    OBJECT_VERSION_NUMBER,
    LANGUAGE,
    SOURCE_LANG
  ) select /*+ ORDERED */
    B.PAYMENT_PROFILE_ID,
    B.PAYMENT_PROFILE_NAME,
    B.CREATED_BY,
    B.CREATION_DATE,
    B.LAST_UPDATED_BY,
    B.LAST_UPDATE_DATE,
    B.LAST_UPDATE_LOGIN,
    B.OBJECT_VERSION_NUMBER,
    L.LANGUAGE_CODE,
    B.SOURCE_LANG
  from IBY_ACCT_PMT_PROFILES_TL B, FND_LANGUAGES L
  where L.INSTALLED_FLAG in ('I', 'B')
  and B.LANGUAGE = userenv('LANG')
  and not exists
    (select NULL
    from IBY_ACCT_PMT_PROFILES_TL T
    where T.PAYMENT_PROFILE_ID = B.PAYMENT_PROFILE_ID
    and T.LANGUAGE = L.LANGUAGE_CODE);
end ADD_LANGUAGE;

end IBY_ACCT_PMT_PROFILES_PKG;

/
