--------------------------------------------------------
--  DDL for Package Body IBY_BPEL_EBSR121PAYMENTAUTH
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE PACKAGE BODY "APPS"."IBY_BPEL_EBSR121PAYMENTAUTH" AS
/* $Header: IBYBPELPPADB.pls 120.1.12010000.2 2008/12/15 05:52:05 sgogula noship $ */

FUNCTION PL_TO_SQL1(aPlsqlItem IBY_PAYMENT_ADAPTER_PUB.PAYEE_REC_TYPE)
 	RETURN IBY_PAYMENT_ADAPTER_PUB_PAYEE IS
	aSqlItem IBY_PAYMENT_ADAPTER_PUB_PAYEE;
	BEGIN
		-- initialize the object
		aSqlItem := IBY_PAYMENT_ADAPTER_PUB_PAYEE(NULL);
		aSqlItem.PAYEE_ID := aPlsqlItem.PAYEE_ID;
		RETURN aSqlItem;
END PL_TO_SQL1;

FUNCTION SQL_TO_PL0(aSqlItem IBY_PAYMENT_ADAPTER_PUB_PAYEE)
	RETURN IBY_PAYMENT_ADAPTER_PUB.PAYEE_REC_TYPE IS
	aPlsqlItem IBY_PAYMENT_ADAPTER_PUB.PAYEE_REC_TYPE;
	BEGIN
		aPlsqlItem.PAYEE_ID := aSqlItem.PAYEE_ID;
		RETURN aPlsqlItem;
END SQL_TO_PL0;

FUNCTION PL_TO_SQL2(aPlsqlItem IBY_PAYMENT_ADAPTER_PUB.PAYER_REC_TYPE)
 	RETURN IBY_PAYMENT_ADAPTER_PUB_PAYER IS
	aSqlItem IBY_PAYMENT_ADAPTER_PUB_PAYER;
	BEGIN
		-- initialize the object
		aSqlItem := IBY_PAYMENT_ADAPTER_PUB_PAYER(NULL);
		aSqlItem.PARTY_ID := aPlsqlItem.PARTY_ID;
		RETURN aSqlItem;
END PL_TO_SQL2;

FUNCTION SQL_TO_PL1(aSqlItem IBY_PAYMENT_ADAPTER_PUB_PAYER)
	RETURN IBY_PAYMENT_ADAPTER_PUB.PAYER_REC_TYPE IS
	aPlsqlItem IBY_PAYMENT_ADAPTER_PUB.PAYER_REC_TYPE;
	BEGIN
		aPlsqlItem.PARTY_ID := aSqlItem.PARTY_ID;
		RETURN aPlsqlItem;
END SQL_TO_PL1;

/*
FUNCTION PL_TO_SQL3(aPlsqlItem IBY_PAYMENT_ADAPTER_PUB.ADDRESS_REC_TYPE)
 	RETURN IBYPAYMENTADAPTERPUBPMTINCRE_ IS
	aSqlItem IBYPAYMENTADAPTERPUBPMTINCRE_;
	BEGIN
		-- initialize the object
		aSqlItem := IBYPAYMENTADAPTERPUBPMTINCRE_(NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL);
		aSqlItem.ADDRESS1 := aPlsqlItem.ADDRESS1;
		aSqlItem.ADDRESS2 := aPlsqlItem.ADDRESS2;
		aSqlItem.ADDRESS3 := aPlsqlItem.ADDRESS3;
		aSqlItem.CITY := aPlsqlItem.CITY;
		aSqlItem.COUNTY := aPlsqlItem.COUNTY;
		aSqlItem.STATE := aPlsqlItem.STATE;
		aSqlItem.COUNTRY := aPlsqlItem.COUNTRY;
		aSqlItem.POSTALCODE := aPlsqlItem.POSTALCODE;
		aSqlItem.PHONE := aPlsqlItem.PHONE;
		aSqlItem.EMAIL := aPlsqlItem.EMAIL;
		RETURN aSqlItem;
END PL_TO_SQL3;
*/

/*
FUNCTION SQL_TO_PL7(aSqlItem IBYPAYMENTADAPTERPUBPMTINCRE_)
	RETURN IBY_PAYMENT_ADAPTER_PUB.ADDRESS_REC_TYPE IS
	aPlsqlItem IBY_PAYMENT_ADAPTER_PUB.ADDRESS_REC_TYPE;
	BEGIN
		aPlsqlItem.ADDRESS1 := aSqlItem.ADDRESS1;
		aPlsqlItem.ADDRESS2 := aSqlItem.ADDRESS2;
		aPlsqlItem.ADDRESS3 := aSqlItem.ADDRESS3;
		aPlsqlItem.CITY := aSqlItem.CITY;
		aPlsqlItem.COUNTY := aSqlItem.COUNTY;
		aPlsqlItem.STATE := aSqlItem.STATE;
		aPlsqlItem.COUNTRY := aSqlItem.COUNTRY;
		aPlsqlItem.POSTALCODE := aSqlItem.POSTALCODE;
		aPlsqlItem.PHONE := aSqlItem.PHONE;
		aPlsqlItem.EMAIL := aSqlItem.EMAIL;
		RETURN aPlsqlItem;
END SQL_TO_PL7;
*/

/*
FUNCTION PL_TO_SQL4(aPlsqlItem IBY_PAYMENT_ADAPTER_PUB.CREDITCARDINSTR_REC_TYPE)
 	RETURN IBYPAYMENTADAPTERPUBPMTIN_CRE IS
	aSqlItem IBYPAYMENTADAPTERPUBPMTIN_CRE;
	BEGIN
		-- initialize the object
		aSqlItem := IBYPAYMENTADAPTERPUBPMTIN_CRE(NULL, NULL, NULL, NULL, NULL, NULL);
		aSqlItem.FINAME := aPlsqlItem.FINAME;
		aSqlItem.CC_TYPE := aPlsqlItem.CC_TYPE;
		aSqlItem.CC_NUM := aPlsqlItem.CC_NUM;
		aSqlItem.CC_EXPDATE := aPlsqlItem.CC_EXPDATE;
		aSqlItem.CC_HOLDERNAME := aPlsqlItem.CC_HOLDERNAME;
		aSqlItem.CC_BILLINGADDR := PL_TO_SQL3(aPlsqlItem.CC_BILLINGADDR);
		RETURN aSqlItem;
END PL_TO_SQL4;
*/
/*
FUNCTION SQL_TO_PL8(aSqlItem IBYPAYMENTADAPTERPUBPMTIN_CRE)
	RETURN IBY_PAYMENT_ADAPTER_PUB.CREDITCARDINSTR_REC_TYPE IS
	aPlsqlItem IBY_PAYMENT_ADAPTER_PUB.CREDITCARDINSTR_REC_TYPE;
	BEGIN
		aPlsqlItem.FINAME := aSqlItem.FINAME;
		aPlsqlItem.CC_TYPE := aSqlItem.CC_TYPE;
		aPlsqlItem.CC_NUM := aSqlItem.CC_NUM;
		aPlsqlItem.CC_EXPDATE := aSqlItem.CC_EXPDATE;
		aPlsqlItem.CC_HOLDERNAME := aSqlItem.CC_HOLDERNAME;
		aPlsqlItem.CC_BILLINGADDR := SQL_TO_PL7(aSqlItem.CC_BILLINGADDR);
		RETURN aPlsqlItem;
END SQL_TO_PL8;
*/
/*
FUNCTION PL_TO_SQL5(aPlsqlItem IBY_PAYMENT_ADAPTER_PUB.PURCHASECARDINSTR_REC_TYPE)
 	RETURN IBYPAYMENTADAPTERPUBPMTIN_PUR IS
	aSqlItem IBYPAYMENTADAPTERPUBPMTIN_PUR;
	BEGIN
		-- initialize the object
		aSqlItem := IBYPAYMENTADAPTERPUBPMTIN_PUR(NULL, NULL, NULL, NULL, NULL, NULL, NULL);
		aSqlItem.FINAME := aPlsqlItem.FINAME;
		aSqlItem.PC_TYPE := aPlsqlItem.PC_TYPE;
		aSqlItem.PC_NUM := aPlsqlItem.PC_NUM;
		aSqlItem.PC_EXPDATE := aPlsqlItem.PC_EXPDATE;
		aSqlItem.PC_HOLDERNAME := aPlsqlItem.PC_HOLDERNAME;
		aSqlItem.PC_BILLINGADDR := PL_TO_SQL3(aPlsqlItem.PC_BILLINGADDR);
		aSqlItem.PC_SUBTYPE := aPlsqlItem.PC_SUBTYPE;
		RETURN aSqlItem;
END PL_TO_SQL5;
*/
/*
FUNCTION SQL_TO_PL9(aSqlItem IBYPAYMENTADAPTERPUBPMTIN_PUR)
	RETURN IBY_PAYMENT_ADAPTER_PUB.PURCHASECARDINSTR_REC_TYPE IS
	aPlsqlItem IBY_PAYMENT_ADAPTER_PUB.PURCHASECARDINSTR_REC_TYPE;
	BEGIN
		aPlsqlItem.FINAME := aSqlItem.FINAME;
		aPlsqlItem.PC_TYPE := aSqlItem.PC_TYPE;
		aPlsqlItem.PC_NUM := aSqlItem.PC_NUM;
		aPlsqlItem.PC_EXPDATE := aSqlItem.PC_EXPDATE;
		aPlsqlItem.PC_HOLDERNAME := aSqlItem.PC_HOLDERNAME;
		aPlsqlItem.PC_BILLINGADDR := SQL_TO_PL7(aSqlItem.PC_BILLINGADDR);
		aPlsqlItem.PC_SUBTYPE := aSqlItem.PC_SUBTYPE;
		RETURN aPlsqlItem;
END SQL_TO_PL9;
*/
FUNCTION PL_TO_SQL6(aPlsqlItem IBY_PAYMENT_ADAPTER_PUB.DUALPAYMENTINSTR_REC_TYPE)
 	RETURN IBYPAYMENTADAPTERPUBPMTIN_DUA IS
	aSqlItem IBYPAYMENTADAPTERPUBPMTIN_DUA;
	BEGIN
		-- initialize the object
		aSqlItem := IBYPAYMENTADAPTERPUBPMTIN_DUA(NULL, NULL, NULL, NULL);
		aSqlItem.PMTINSTR_ID := aPlsqlItem.PMTINSTR_ID;
		aSqlItem.PMTINSTR_SHORTNAME := aPlsqlItem.PMTINSTR_SHORTNAME;
		aSqlItem.BNFPMTINSTR_ID := aPlsqlItem.BNFPMTINSTR_ID;
		aSqlItem.BNFPMTINSTR_SHORTNAME := aPlsqlItem.BNFPMTINSTR_SHORTNAME;
		RETURN aSqlItem;
END PL_TO_SQL6;

FUNCTION SQL_TO_PL10(aSqlItem IBYPAYMENTADAPTERPUBPMTIN_DUA)
	RETURN IBY_PAYMENT_ADAPTER_PUB.DUALPAYMENTINSTR_REC_TYPE IS
	aPlsqlItem IBY_PAYMENT_ADAPTER_PUB.DUALPAYMENTINSTR_REC_TYPE;
	BEGIN
		aPlsqlItem.PMTINSTR_ID := aSqlItem.PMTINSTR_ID;
		aPlsqlItem.PMTINSTR_SHORTNAME := aSqlItem.PMTINSTR_SHORTNAME;
		aPlsqlItem.BNFPMTINSTR_ID := aSqlItem.BNFPMTINSTR_ID;
		aPlsqlItem.BNFPMTINSTR_SHORTNAME := aSqlItem.BNFPMTINSTR_SHORTNAME;
		RETURN aPlsqlItem;
END SQL_TO_PL10;

FUNCTION PL_TO_SQL7(aPlsqlItem IBY_PAYMENT_ADAPTER_PUB.PMTINSTR_REC_TYPE)
 	RETURN IBY_PAYMENT_ADAPTER_PUB_PMTIN IS
	aSqlItem IBY_PAYMENT_ADAPTER_PUB_PMTIN;
	BEGIN
		-- initialize the object
		aSqlItem := IBY_PAYMENT_ADAPTER_PUB_PMTIN(NULL, NULL, NULL, NULL, NULL);
		aSqlItem.PMTINSTR_ID := aPlsqlItem.PMTINSTR_ID;
		aSqlItem.PMTINSTR_TYPE := aPlsqlItem.PMTINSTR_TYPE;
		aSqlItem.PMTINSTR_SHORTNAME := aPlsqlItem.PMTINSTR_SHORTNAME;
		aSqlItem.PMTINSTR_ASSIGNMENT_ID :=  aPlsqlItem.PMTINSTR_ASSIGNMENT_ID;
		aSqlItem.DUALPAYMENTINSTR := PL_TO_SQL6(aPlsqlItem.DUALPAYMENTINSTR);
		RETURN aSqlItem;
END PL_TO_SQL7;

FUNCTION SQL_TO_PL2(aSqlItem IBY_PAYMENT_ADAPTER_PUB_PMTIN)
	RETURN IBY_PAYMENT_ADAPTER_PUB.PMTINSTR_REC_TYPE IS
	aPlsqlItem IBY_PAYMENT_ADAPTER_PUB.PMTINSTR_REC_TYPE;
	BEGIN
		aPlsqlItem.PMTINSTR_ID := aSqlItem.PMTINSTR_ID;
		aPlsqlItem.PMTINSTR_TYPE := aSqlItem.PMTINSTR_TYPE;
		aPlsqlItem.PMTINSTR_SHORTNAME := aSqlItem.PMTINSTR_SHORTNAME;
		aPlsqlItem.PMTINSTR_ASSIGNMENT_ID :=  aSqlItem.PMTINSTR_ASSIGNMENT_ID;
		aPlsqlItem.DUALPAYMENTINSTR := SQL_TO_PL10(aSqlItem.DUALPAYMENTINSTR);
		RETURN aPlsqlItem;
END SQL_TO_PL2;

FUNCTION PL_TO_SQL8(aPlsqlItem IBY_PAYMENT_ADAPTER_PUB.TANGIBLE_REC_TYPE)
 	RETURN IBY_PAYMENT_ADAPTER_PUB_TANGI IS
	aSqlItem IBY_PAYMENT_ADAPTER_PUB_TANGI;
	BEGIN
		-- initialize the object
		aSqlItem := IBY_PAYMENT_ADAPTER_PUB_TANGI(NULL, NULL, NULL, NULL, NULL, NULL);
		aSqlItem.TANGIBLE_ID := aPlsqlItem.TANGIBLE_ID;
		aSqlItem.TANGIBLE_AMOUNT := aPlsqlItem.TANGIBLE_AMOUNT;
		aSqlItem.CURRENCY_CODE := aPlsqlItem.CURRENCY_CODE;
		aSqlItem.REFINFO := aPlsqlItem.REFINFO;
		aSqlItem.MEMO := aPlsqlItem.MEMO;
		aSqlItem.ACCT_NUM := aPlsqlItem.ACCT_NUM;
		RETURN aSqlItem;
END PL_TO_SQL8;

FUNCTION SQL_TO_PL3(aSqlItem IBY_PAYMENT_ADAPTER_PUB_TANGI)
	RETURN IBY_PAYMENT_ADAPTER_PUB.TANGIBLE_REC_TYPE IS
	aPlsqlItem IBY_PAYMENT_ADAPTER_PUB.TANGIBLE_REC_TYPE;
	BEGIN
		aPlsqlItem.TANGIBLE_ID := aSqlItem.TANGIBLE_ID;
		aPlsqlItem.TANGIBLE_AMOUNT := aSqlItem.TANGIBLE_AMOUNT;
		aPlsqlItem.CURRENCY_CODE := aSqlItem.CURRENCY_CODE;
		aPlsqlItem.REFINFO := aSqlItem.REFINFO;
		aPlsqlItem.MEMO := aSqlItem.MEMO;
		aPlsqlItem.ACCT_NUM := aSqlItem.ACCT_NUM;
		RETURN aPlsqlItem;
END SQL_TO_PL3;
/*
FUNCTION PL_TO_SQL9(aPlsqlItem IBY_PAYMENT_ADAPTER_PUB.RETAILDATA_REC_TYPE)
 	RETURN IBYPAYMENTADAPTERPUBPMTRE_RET IS
	aSqlItem IBYPAYMENTADAPTERPUBPMTRE_RET;
	BEGIN
		-- initialize the object
		aSqlItem := IBYPAYMENTADAPTERPUBPMTRE_RET(NULL, NULL, NULL, NULL, NULL, NULL);
		aSqlItem.ISRETAIL := aPlsqlItem.ISRETAIL;
		aSqlItem.POSENTRYMODE := aPlsqlItem.POSENTRYMODE;
		aSqlItem.POSCAPABILITY := aPlsqlItem.POSCAPABILITY;
		aSqlItem.POSAUTHSOURCE := aPlsqlItem.POSAUTHSOURCE;
		aSqlItem.POSCARDIDMETHOD := aPlsqlItem.POSCARDIDMETHOD;
		aSqlItem.POSSWIPEDATA := aPlsqlItem.POSSWIPEDATA;
		RETURN aSqlItem;
END PL_TO_SQL9;

FUNCTION SQL_TO_PL11(aSqlItem IBYPAYMENTADAPTERPUBPMTRE_RET)
	RETURN IBY_PAYMENT_ADAPTER_PUB.RETAILDATA_REC_TYPE IS
	aPlsqlItem IBY_PAYMENT_ADAPTER_PUB.RETAILDATA_REC_TYPE;
	BEGIN
		aPlsqlItem.ISRETAIL := aSqlItem.ISRETAIL;
		aPlsqlItem.POSENTRYMODE := aSqlItem.POSENTRYMODE;
		aPlsqlItem.POSCAPABILITY := aSqlItem.POSCAPABILITY;
		aPlsqlItem.POSAUTHSOURCE := aSqlItem.POSAUTHSOURCE;
		aPlsqlItem.POSCARDIDMETHOD := aSqlItem.POSCARDIDMETHOD;
		aPlsqlItem.POSSWIPEDATA := aSqlItem.POSSWIPEDATA;
		RETURN aPlsqlItem;
END SQL_TO_PL11;
*/
FUNCTION PL_TO_SQL10(aPlsqlItem IBY_PAYMENT_ADAPTER_PUB.PMTREQTRXN_REC_TYPE)
 	RETURN IBY_PAYMENT_ADAPTER_PUB_PMTRE IS
	aSqlItem IBY_PAYMENT_ADAPTER_PUB_PMTRE;
	BEGIN
		-- initialize the object
		aSqlItem := IBY_PAYMENT_ADAPTER_PUB_PMTRE(NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL);
		aSqlItem.TRXN_EXTENSION_ID := aPlsqlItem.TRXN_EXTENSION_ID;
		aSqlItem.PMTMODE := aPlsqlItem.PMTMODE;
		aSqlItem.CVV2 := aPlsqlItem.CVV2;
		aSqlItem.SETTLEMENT_DATE := aPlsqlItem.SETTLEMENT_DATE;
		aSqlItem.AUTH_TYPE := aPlsqlItem.AUTH_TYPE;
		aSqlItem.CHECK_FLAG := aPlsqlItem.CHECK_FLAG;
		aSqlItem.RETRY_FLAG := aPlsqlItem.RETRY_FLAG;
		aSqlItem.ORG_ID := aPlsqlItem.ORG_ID;
		aSqlItem.NLS_LANG := aPlsqlItem.NLS_LANG;
		aSqlItem.PONUM := aPlsqlItem.PONUM;
		aSqlItem.TAXAMOUNT := aPlsqlItem.TAXAMOUNT;
		aSqlItem.SHIPFROMZIP := aPlsqlItem.SHIPFROMZIP;
		aSqlItem.SHIPTOZIP := aPlsqlItem.SHIPTOZIP;
		aSqlItem.ANALYZERISK := aPlsqlItem.ANALYZERISK;
		aSqlItem.AUTHCODE := aPlsqlItem.AUTHCODE;
		aSqlItem.VOICEAUTHFLAG := aPlsqlItem.VOICEAUTHFLAG;
		aSqlItem.TRXNREF := aPlsqlItem.TRXNREF;
		--aSqlItem.RETAILDATA := PL_TO_SQL9(aPlsqlItem.RETAILDATA);
		aSqlItem.DATEOFVOICEAUTHORIZATION := aPlsqlItem.DATEOFVOICEAUTHORIZATION;
		RETURN aSqlItem;
END PL_TO_SQL10;

FUNCTION SQL_TO_PL4(aSqlItem IBY_PAYMENT_ADAPTER_PUB_PMTRE)
	RETURN IBY_PAYMENT_ADAPTER_PUB.PMTREQTRXN_REC_TYPE IS
	aPlsqlItem IBY_PAYMENT_ADAPTER_PUB.PMTREQTRXN_REC_TYPE;
	BEGIN
		aPlsqlItem.TRXN_EXTENSION_ID := aSqlItem.TRXN_EXTENSION_ID;
		aPlsqlItem.PMTMODE := aSqlItem.PMTMODE;
		aPlsqlItem.CVV2 := aSqlItem.CVV2;
		aPlsqlItem.SETTLEMENT_DATE := aSqlItem.SETTLEMENT_DATE;
		aPlsqlItem.AUTH_TYPE := aSqlItem.AUTH_TYPE;
		aPlsqlItem.CHECK_FLAG := aSqlItem.CHECK_FLAG;
		aPlsqlItem.RETRY_FLAG := aSqlItem.RETRY_FLAG;
		aPlsqlItem.ORG_ID := aSqlItem.ORG_ID;
		aPlsqlItem.NLS_LANG := aSqlItem.NLS_LANG;
		aPlsqlItem.PONUM := aSqlItem.PONUM;
		aPlsqlItem.TAXAMOUNT := aSqlItem.TAXAMOUNT;
		aPlsqlItem.SHIPFROMZIP := aSqlItem.SHIPFROMZIP;
		aPlsqlItem.SHIPTOZIP := aSqlItem.SHIPTOZIP;
		aPlsqlItem.ANALYZERISK := aSqlItem.ANALYZERISK;
		aPlsqlItem.AUTHCODE := aSqlItem.AUTHCODE;
		aPlsqlItem.VOICEAUTHFLAG := aSqlItem.VOICEAUTHFLAG;
		aPlsqlItem.TRXNREF := aSqlItem.TRXNREF;
	--	aPlsqlItem.RETAILDATA := SQL_TO_PL11(aSqlItem.RETAILDATA);
		aPlsqlItem.DATEOFVOICEAUTHORIZATION := aSqlItem.DATEOFVOICEAUTHORIZATION;
		RETURN aPlsqlItem;
END SQL_TO_PL4;

FUNCTION PL_TO_SQL11(aPlsqlItem IBY_PAYMENT_ADAPTER_PUB.RESPONSE_REC_TYPE)
 	RETURN IBYPAYMENTADAPTERPUBREQRE_RES IS
	aSqlItem IBYPAYMENTADAPTERPUBREQRE_RES;
	BEGIN
		-- initialize the object
		aSqlItem := IBYPAYMENTADAPTERPUBREQRE_RES(NULL, NULL, NULL, NULL);
		aSqlItem.STATUS := aPlsqlItem.STATUS;
		aSqlItem.ERRCODE := aPlsqlItem.ERRCODE;
		aSqlItem.ERRMESSAGE := aPlsqlItem.ERRMESSAGE;
		aSqlItem.NLS_LANG := aPlsqlItem.NLS_LANG;
		RETURN aSqlItem;
END PL_TO_SQL11;

FUNCTION SQL_TO_PL12(aSqlItem IBYPAYMENTADAPTERPUBREQRE_RES)
	RETURN IBY_PAYMENT_ADAPTER_PUB.RESPONSE_REC_TYPE IS
	aPlsqlItem IBY_PAYMENT_ADAPTER_PUB.RESPONSE_REC_TYPE;
	BEGIN
		aPlsqlItem.STATUS := aSqlItem.STATUS;
		aPlsqlItem.ERRCODE := aSqlItem.ERRCODE;
		aPlsqlItem.ERRMESSAGE := aSqlItem.ERRMESSAGE;
		aPlsqlItem.NLS_LANG := aSqlItem.NLS_LANG;
		RETURN aPlsqlItem;
END SQL_TO_PL12;

FUNCTION PL_TO_SQL12(aPlsqlItem IBY_PAYMENT_ADAPTER_PUB.OFFLINERESP_REC_TYPE)
 	RETURN IBYPAYMENTADAPTERPUBREQRE_OFF IS
	aSqlItem IBYPAYMENTADAPTERPUBREQRE_OFF;
	BEGIN
		-- initialize the object
		aSqlItem := IBYPAYMENTADAPTERPUBREQRE_OFF(NULL, NULL);
		aSqlItem.EARLIESTSETTLEMENT_DATE := aPlsqlItem.EARLIESTSETTLEMENT_DATE;
		aSqlItem.SCHEDULED_DATE := aPlsqlItem.SCHEDULED_DATE;
		RETURN aSqlItem;
END PL_TO_SQL12;

FUNCTION SQL_TO_PL13(aSqlItem IBYPAYMENTADAPTERPUBREQRE_OFF)
	RETURN IBY_PAYMENT_ADAPTER_PUB.OFFLINERESP_REC_TYPE IS
	aPlsqlItem IBY_PAYMENT_ADAPTER_PUB.OFFLINERESP_REC_TYPE;
	BEGIN
		aPlsqlItem.EARLIESTSETTLEMENT_DATE := aSqlItem.EARLIESTSETTLEMENT_DATE;
		aPlsqlItem.SCHEDULED_DATE := aSqlItem.SCHEDULED_DATE;
		RETURN aPlsqlItem;
	END SQL_TO_PL13;

	FUNCTION PL_TO_SQL13(aPlsqlItem IBY_PAYMENT_ADAPTER_PUB.RISKRESP_REC_TYPE)
 	RETURN IBYPAYMENTADAPTERPUBREQRE_RIS IS
	aSqlItem IBYPAYMENTADAPTERPUBREQRE_RIS;
	BEGIN
		-- initialize the object
		aSqlItem := IBYPAYMENTADAPTERPUBREQRE_RIS(NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL);
		aSqlItem.STATUS := aPlsqlItem.STATUS;
		aSqlItem.ERRCODE := aPlsqlItem.ERRCODE;
		aSqlItem.ERRMESSAGE := aPlsqlItem.ERRMESSAGE;
		aSqlItem.ADDITIONAL_ERRMESSAGE := aPlsqlItem.ADDITIONAL_ERRMESSAGE;
		aSqlItem.RISK_SCORE := aPlsqlItem.RISK_SCORE;
		aSqlItem.RISK_THRESHOLD_VAL := aPlsqlItem.RISK_THRESHOLD_VAL;
		aSqlItem.RISKY_FLAG := aPlsqlItem.RISKY_FLAG;
		aSqlItem.AVSCODE_FLAG := aPlsqlItem.AVSCODE_FLAG;
		RETURN aSqlItem;
END PL_TO_SQL13;

FUNCTION SQL_TO_PL14(aSqlItem IBYPAYMENTADAPTERPUBREQRE_RIS)
	RETURN IBY_PAYMENT_ADAPTER_PUB.RISKRESP_REC_TYPE IS
	aPlsqlItem IBY_PAYMENT_ADAPTER_PUB.RISKRESP_REC_TYPE;
	BEGIN
		aPlsqlItem.STATUS := aSqlItem.STATUS;
		aPlsqlItem.ERRCODE := aSqlItem.ERRCODE;
		aPlsqlItem.ERRMESSAGE := aSqlItem.ERRMESSAGE;
		aPlsqlItem.ADDITIONAL_ERRMESSAGE := aSqlItem.ADDITIONAL_ERRMESSAGE;
		aPlsqlItem.RISK_SCORE := aSqlItem.RISK_SCORE;
		aPlsqlItem.RISK_THRESHOLD_VAL := aSqlItem.RISK_THRESHOLD_VAL;
		aPlsqlItem.RISKY_FLAG := aSqlItem.RISKY_FLAG;
		aPlsqlItem.AVSCODE_FLAG := aSqlItem.AVSCODE_FLAG;
		RETURN aPlsqlItem;
END SQL_TO_PL14;

FUNCTION PL_TO_SQL0(aPlsqlItem IBY_PAYMENT_ADAPTER_PUB.REQRESP_REC_TYPE)
 	RETURN IBY_PAYMENT_ADAPTER_PUB_REQRE IS
	aSqlItem IBY_PAYMENT_ADAPTER_PUB_REQRE;
	BEGIN
		-- initialize the object
		aSqlItem := IBY_PAYMENT_ADAPTER_PUB_REQRE(NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL);
		aSqlItem.RESPONSE := PL_TO_SQL11(aPlsqlItem.RESPONSE);
		aSqlItem.OFFLINERESP := PL_TO_SQL12(aPlsqlItem.OFFLINERESP);
		aSqlItem.RISKRESPINCLUDED := aPlsqlItem.RISKRESPINCLUDED;
		aSqlItem.RISKRESPONSE := PL_TO_SQL13(aPlsqlItem.RISKRESPONSE);
		aSqlItem.TRXN_ID := aPlsqlItem.TRXN_ID;
		aSqlItem.TRXN_TYPE := aPlsqlItem.TRXN_TYPE;
		aSqlItem.TRXN_DATE := aPlsqlItem.TRXN_DATE;
		aSqlItem.AUTHCODE := aPlsqlItem.AUTHCODE;
		aSqlItem.REFCODE := aPlsqlItem.REFCODE;
		aSqlItem.AVSCODE := aPlsqlItem.AVSCODE;
		aSqlItem.CVV2RESULT := aPlsqlItem.CVV2RESULT;
		aSqlItem.PMTINSTR_TYPE := aPlsqlItem.PMTINSTR_TYPE;
		aSqlItem.ACQUIRER := aPlsqlItem.ACQUIRER;
		aSqlItem.VPSBATCH_ID := aPlsqlItem.VPSBATCH_ID;
		aSqlItem.AUXMSG := aPlsqlItem.AUXMSG;
		aSqlItem.ERRORLOCATION := aPlsqlItem.ERRORLOCATION;
		aSqlItem.BEPERRCODE := aPlsqlItem.BEPERRCODE;
		aSqlItem.BEPERRMESSAGE := aPlsqlItem.BEPERRMESSAGE;
		RETURN aSqlItem;
END PL_TO_SQL0;

FUNCTION SQL_TO_PL6(aSqlItem IBY_PAYMENT_ADAPTER_PUB_REQRE)
	RETURN IBY_PAYMENT_ADAPTER_PUB.REQRESP_REC_TYPE IS
	aPlsqlItem IBY_PAYMENT_ADAPTER_PUB.REQRESP_REC_TYPE;
	BEGIN
		aPlsqlItem.RESPONSE := SQL_TO_PL12(aSqlItem.RESPONSE);
		aPlsqlItem.OFFLINERESP := SQL_TO_PL13(aSqlItem.OFFLINERESP);
		aPlsqlItem.RISKRESPINCLUDED := aSqlItem.RISKRESPINCLUDED;
		aPlsqlItem.RISKRESPONSE := SQL_TO_PL14(aSqlItem.RISKRESPONSE);
		aPlsqlItem.TRXN_ID := aSqlItem.TRXN_ID;
		aPlsqlItem.TRXN_TYPE := aSqlItem.TRXN_TYPE;
		aPlsqlItem.TRXN_DATE := aSqlItem.TRXN_DATE;
		aPlsqlItem.AUTHCODE := aSqlItem.AUTHCODE;
		aPlsqlItem.REFCODE := aSqlItem.REFCODE;
		aPlsqlItem.AVSCODE := aSqlItem.AVSCODE;
		aPlsqlItem.CVV2RESULT := aSqlItem.CVV2RESULT;
		aPlsqlItem.PMTINSTR_TYPE := aSqlItem.PMTINSTR_TYPE;
		aPlsqlItem.ACQUIRER := aSqlItem.ACQUIRER;
		aPlsqlItem.VPSBATCH_ID := aSqlItem.VPSBATCH_ID;
		aPlsqlItem.AUXMSG := aSqlItem.AUXMSG;
		aPlsqlItem.ERRORLOCATION := aSqlItem.ERRORLOCATION;
		aPlsqlItem.BEPERRCODE := aSqlItem.BEPERRCODE;
		aPlsqlItem.BEPERRMESSAGE := aSqlItem.BEPERRMESSAGE;
		RETURN aPlsqlItem;
END SQL_TO_PL6;

FUNCTION PL_TO_SQL14(aPlsqlItem IBY_PAYMENT_ADAPTER_PUB.RISKINFO_REC_TYPE)
 	RETURN IBY_PAYMENT_ADAPTER_PUB_RISKI IS
	aSqlItem IBY_PAYMENT_ADAPTER_PUB_RISKI;
	BEGIN
		-- initialize the object
		aSqlItem := IBY_PAYMENT_ADAPTER_PUB_RISKI(NULL, NULL, NULL, NULL);
		aSqlItem.FORMULA_NAME := aPlsqlItem.FORMULA_NAME;
		aSqlItem.SHIPTOBILLTO_FLAG := aPlsqlItem.SHIPTOBILLTO_FLAG;
		aSqlItem.TIME_OF_PURCHASE := aPlsqlItem.TIME_OF_PURCHASE;
		aSqlItem.CUSTOMER_ACCT_NUM := aPlsqlItem.CUSTOMER_ACCT_NUM;
		RETURN aSqlItem;
END PL_TO_SQL14;

FUNCTION SQL_TO_PL5(aSqlItem IBY_PAYMENT_ADAPTER_PUB_RISKI)
	RETURN IBY_PAYMENT_ADAPTER_PUB.RISKINFO_REC_TYPE IS
	aPlsqlItem IBY_PAYMENT_ADAPTER_PUB.RISKINFO_REC_TYPE;
	BEGIN
		aPlsqlItem.FORMULA_NAME := aSqlItem.FORMULA_NAME;
		aPlsqlItem.SHIPTOBILLTO_FLAG := aSqlItem.SHIPTOBILLTO_FLAG;
		aPlsqlItem.TIME_OF_PURCHASE := aSqlItem.TIME_OF_PURCHASE;
		aPlsqlItem.CUSTOMER_ACCT_NUM := aSqlItem.CUSTOMER_ACCT_NUM;
		RETURN aPlsqlItem;
END SQL_TO_PL5;

PROCEDURE IBY_PAYMENT_ADAPTER_PUB$ORAPM (P_API_VERSION NUMBER,P_INIT_MSG_LIST VARCHAR2,P_COMMIT VARCHAR2,P_VALIDATION_LEVEL NUMBER,P_ECAPP_ID NUMBER,P_PAYEE_REC IBY_PAYMENT_ADAPTER_PUB_PAYEE
             ,P_PAYER_REC IBY_PAYMENT_ADAPTER_PUB_PAYER,P_PMTINSTR_REC IBY_PAYMENT_ADAPTER_PUB_PMTIN,P_TANGIBLE_REC IBY_PAYMENT_ADAPTER_PUB_TANGI
	     ,P_PMTREQTRXN_REC IBY_PAYMENT_ADAPTER_PUB_PMTRE,P_RISKINFO_REC IBY_PAYMENT_ADAPTER_PUB_RISKI,X_RETURN_STATUS OUT NOCOPY VARCHAR2,X_MSG_COUNT OUT NOCOPY  NUMBER
	     ,X_MSG_DATA OUT NOCOPY VARCHAR2,X_REQRESP_REC OUT NOCOPY IBY_PAYMENT_ADAPTER_PUB_REQRE) IS
      P_PAYEE_REC_  IBY_PAYMENT_ADAPTER_PUB.PAYEE_REC_TYPE;
      P_PAYER_REC_  IBY_PAYMENT_ADAPTER_PUB.PAYER_REC_TYPE;
      P_PMTINSTR_REC_  IBY_PAYMENT_ADAPTER_PUB.PMTINSTR_REC_TYPE;
      P_TANGIBLE_REC_  IBY_PAYMENT_ADAPTER_PUB.TANGIBLE_REC_TYPE;
      P_PMTREQTRXN_REC_  IBY_PAYMENT_ADAPTER_PUB.PMTREQTRXN_REC_TYPE;
      P_RISKINFO_REC_  IBY_PAYMENT_ADAPTER_PUB.RISKINFO_REC_TYPE;
      X_REQRESP_REC_  IBY_PAYMENT_ADAPTER_PUB.REQRESP_REC_TYPE;
   BEGIN
      P_PAYEE_REC_ := IBY_BPEL_EBSR121PAYMENTAUTH.SQL_TO_PL0(P_PAYEE_REC);
      P_PAYER_REC_ := IBY_BPEL_EBSR121PAYMENTAUTH.SQL_TO_PL1(P_PAYER_REC);
      P_PMTINSTR_REC_ := IBY_BPEL_EBSR121PAYMENTAUTH.SQL_TO_PL2(P_PMTINSTR_REC);
      P_TANGIBLE_REC_ := IBY_BPEL_EBSR121PAYMENTAUTH.SQL_TO_PL3(P_TANGIBLE_REC);
      P_PMTREQTRXN_REC_ := IBY_BPEL_EBSR121PAYMENTAUTH.SQL_TO_PL4(P_PMTREQTRXN_REC);
      P_RISKINFO_REC_ := IBY_BPEL_EBSR121PAYMENTAUTH.SQL_TO_PL5(P_RISKINFO_REC);
      IBY_PAYMENT_ADAPTER_PUB.ORAPMTREQ(P_API_VERSION,P_INIT_MSG_LIST,P_COMMIT,P_VALIDATION_LEVEL,P_ECAPP_ID,P_PAYEE_REC_,P_PAYER_REC_
             ,P_PMTINSTR_REC_,P_TANGIBLE_REC_,P_PMTREQTRXN_REC_,P_RISKINFO_REC_,X_RETURN_STATUS,X_MSG_COUNT,X_MSG_DATA,X_REQRESP_REC_);
      X_REQRESP_REC := IBY_BPEL_EBSR121PAYMENTAUTH.PL_TO_SQL0(X_REQRESP_REC_);
END IBY_PAYMENT_ADAPTER_PUB$ORAPM;

END IBY_BPEL_EBSR121PAYMENTAUTH;


/
