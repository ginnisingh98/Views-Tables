--------------------------------------------------------
--  DDL for Package Body IGW_PROPOSALS_ALL_PKG
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE PACKAGE BODY "APPS"."IGW_PROPOSALS_ALL_PKG" as
 /* $Header: igwpr10b.pls 115.19 2002/03/28 19:13:23 pkm ship    $ */
procedure INSERT_ROW (
  X_ROWID in out VARCHAR2,
  X_PROPOSAL_ID in NUMBER,
  X_SPONSOR_ACTION_CODE in VARCHAR2,
  X_SPONSOR_ACTION_DATE in DATE,
  X_SPONSOR_ACTION_COMMENTS in VARCHAR2,
  X_AWARD_AMOUNT in NUMBER,
  X_PROPOSAL_NUMBER in VARCHAR2,
  X_LEAD_ORGANIZATION_ID in NUMBER,
  X_PROPOSAL_STATUS in VARCHAR2,
  X_PROPOSAL_START_DATE in DATE,
  X_PROPOSAL_END_DATE in DATE,
  X_PROPOSAL_TITLE in VARCHAR2,
  X_PROPOSAL_TYPE_CODE in VARCHAR2,
  X_AWARD_NUMBER in VARCHAR2,
  X_ORIGINAL_PROPOSAL_NUMBER in VARCHAR2,
  X_ORIGINAL_AWARD_NUMBER in VARCHAR2,
  X_ORIGINAL_PROPOSAL_START_DATE in DATE,
  X_ORIGINAL_PROPOSAL_END_DATE in DATE,
  X_ACTIVITY_TYPE_CODE in VARCHAR2,
  X_SPONSOR_ID in NUMBER,
  X_FUNDING_SPONSOR_UNIT in VARCHAR2,
  X_ORIGINAL_SPONSOR_ID in NUMBER,
  X_SPONSOR_PROPOSAL_NUMBER in VARCHAR2,
  X_NOTICE_OF_OPPORTUNITY_CODE in VARCHAR2,
  X_PROGRAM_NUMBER in VARCHAR2,
  X_PROGRAM_TITLE in VARCHAR2,
  X_PROGRAM_URL in VARCHAR2,
  X_SUBMITTING_ORGANIZATION_ID in NUMBER,
  X_SIGNING_OFFICIAL_ID in NUMBER,
  X_ADMIN_OFFICIAL_ID in NUMBER,
  X_DEADLINE_DATE in DATE,
  X_DEADLINE_TYPE in VARCHAR2,
  X_LETTER_OF_INTENT_DUE_DATE in DATE,
  X_ATTRIBUTE_CATEGORY in VARCHAR2,
  X_ATTRIBUTE1 in VARCHAR2,
  X_ATTRIBUTE2 in VARCHAR2,
  X_ATTRIBUTE3 in VARCHAR2,
  X_ATTRIBUTE4 in VARCHAR2,
  X_ATTRIBUTE5 in VARCHAR2,
  X_ATTRIBUTE6 in VARCHAR2,
  X_ATTRIBUTE7 in VARCHAR2,
  X_ATTRIBUTE8 in VARCHAR2,
  X_ATTRIBUTE9 in VARCHAR2,
  X_ATTRIBUTE10 in VARCHAR2,
  X_ATTRIBUTE11 in VARCHAR2,
  X_ATTRIBUTE12 in VARCHAR2,
  X_ATTRIBUTE13 in VARCHAR2,
  X_ATTRIBUTE14 in VARCHAR2,
  X_ATTRIBUTE15 in VARCHAR2,
  X_MODE in VARCHAR2 default 'R'
  ) is
    cursor C is select ROWID from IGW_PROPOSALS_ALL
      where PROPOSAL_ID = X_PROPOSAL_ID;
    X_LAST_UPDATE_DATE DATE;
    X_LAST_UPDATED_BY NUMBER;
    X_LAST_UPDATE_LOGIN NUMBER;
begin
  X_LAST_UPDATE_DATE := SYSDATE;
  if(X_MODE = 'I') then
    X_LAST_UPDATED_BY := 1;
    X_LAST_UPDATE_LOGIN := 0;
  elsif (X_MODE = 'R') then
    X_LAST_UPDATED_BY := FND_GLOBAL.USER_ID;
    if X_LAST_UPDATED_BY is NULL then
      X_LAST_UPDATED_BY := -1;
    end if;
    X_LAST_UPDATE_LOGIN :=FND_GLOBAL.LOGIN_ID;
    if X_LAST_UPDATE_LOGIN is NULL then
      X_LAST_UPDATE_LOGIN := -1;
    end if;
  else
    FND_MESSAGE.SET_NAME( 'FND', 'SYSTEM-INVALID ARGS');
    app_exception.raise_exception;
  end if;
  insert into IGW_PROPOSALS_ALL (
    SPONSOR_ACTION_CODE,
    SPONSOR_ACTION_DATE,
    SPONSOR_ACTION_COMMENTS,
    AWARD_AMOUNT,
    PROPOSAL_ID,
    PROPOSAL_NUMBER,
    LEAD_ORGANIZATION_ID,
    PROPOSAL_STATUS,
    PROPOSAL_START_DATE,
    PROPOSAL_END_DATE,
    PROPOSAL_TITLE,
    PROPOSAL_TYPE_CODE,
    AWARD_NUMBER,
    ORIGINAL_PROPOSAL_NUMBER,
    ORIGINAL_AWARD_NUMBER,
    ORIGINAL_PROPOSAL_START_DATE,
    ORIGINAL_PROPOSAL_END_DATE,
    ACTIVITY_TYPE_CODE,
    SPONSOR_ID,
    FUNDING_SPONSOR_UNIT,
    ORIGINAL_SPONSOR_ID,
    SPONSOR_PROPOSAL_NUMBER,
    NOTICE_OF_OPPORTUNITY_CODE,
    PROGRAM_NUMBER,
    PROGRAM_TITLE,
    PROGRAM_URL,
    SUBMITTING_ORGANIZATION_ID,
    SIGNING_OFFICIAL_ID,
    ADMIN_OFFICIAL_ID,
    DEADLINE_DATE,
    DEADLINE_TYPE,
    LETTER_OF_INTENT_DUE_DATE,
    ATTRIBUTE_CATEGORY,
    ATTRIBUTE1,
    ATTRIBUTE2,
    ATTRIBUTE3,
    ATTRIBUTE4,
    ATTRIBUTE5,
    ATTRIBUTE6,
    ATTRIBUTE7,
    ATTRIBUTE8,
    ATTRIBUTE9,
    ATTRIBUTE10,
    ATTRIBUTE11,
    ATTRIBUTE12,
    ATTRIBUTE13,
    ATTRIBUTE14,
    ATTRIBUTE15,
    CREATION_DATE,
    CREATED_BY,
    LAST_UPDATE_DATE,
    LAST_UPDATED_BY,
    LAST_UPDATE_LOGIN
  ) values (
    X_SPONSOR_ACTION_CODE,
    X_SPONSOR_ACTION_DATE,
    X_SPONSOR_ACTION_COMMENTS,
    X_AWARD_AMOUNT,
    X_PROPOSAL_ID,
    X_PROPOSAL_NUMBER,
    X_LEAD_ORGANIZATION_ID,
    X_PROPOSAL_STATUS,
    X_PROPOSAL_START_DATE,
    X_PROPOSAL_END_DATE,
    X_PROPOSAL_TITLE,
    X_PROPOSAL_TYPE_CODE,
    X_AWARD_NUMBER,
    X_ORIGINAL_PROPOSAL_NUMBER,
    X_ORIGINAL_AWARD_NUMBER,
    X_ORIGINAL_PROPOSAL_START_DATE,
    X_ORIGINAL_PROPOSAL_END_DATE,
    X_ACTIVITY_TYPE_CODE,
    X_SPONSOR_ID,
    X_FUNDING_SPONSOR_UNIT,
    X_ORIGINAL_SPONSOR_ID,
    X_SPONSOR_PROPOSAL_NUMBER,
    X_NOTICE_OF_OPPORTUNITY_CODE,
    X_PROGRAM_NUMBER,
    X_PROGRAM_TITLE,
    X_PROGRAM_URL,
    X_SUBMITTING_ORGANIZATION_ID,
    X_SIGNING_OFFICIAL_ID,
    X_ADMIN_OFFICIAL_ID,
    X_DEADLINE_DATE,
    X_DEADLINE_TYPE,
    X_LETTER_OF_INTENT_DUE_DATE,
    X_ATTRIBUTE_CATEGORY,
    X_ATTRIBUTE1,
    X_ATTRIBUTE2,
    X_ATTRIBUTE3,
    X_ATTRIBUTE4,
    X_ATTRIBUTE5,
    X_ATTRIBUTE6,
    X_ATTRIBUTE7,
    X_ATTRIBUTE8,
    X_ATTRIBUTE9,
    X_ATTRIBUTE10,
    X_ATTRIBUTE11,
    X_ATTRIBUTE12,
    X_ATTRIBUTE13,
    X_ATTRIBUTE14,
    X_ATTRIBUTE15,
    X_LAST_UPDATE_DATE,
    X_LAST_UPDATED_BY,
    X_LAST_UPDATE_DATE,
    X_LAST_UPDATED_BY,
    X_LAST_UPDATE_LOGIN
  );

  open c;
  fetch c into X_ROWID;
  if (c%notfound) then
    close c;
    raise no_data_found;
  end if;
  close c;

end INSERT_ROW;

procedure LOCK_ROW (
  X_ROWID in VARCHAR2,
  X_PROPOSAL_ID in NUMBER,
  X_SPONSOR_ACTION_CODE in VARCHAR2,
  X_SPONSOR_ACTION_DATE in DATE,
  X_SPONSOR_ACTION_COMMENTS in VARCHAR2,
  X_AWARD_AMOUNT in NUMBER,
  X_PROPOSAL_NUMBER in VARCHAR2,
  X_LEAD_ORGANIZATION_ID in NUMBER,
  X_PROPOSAL_STATUS in VARCHAR2,
  X_PROPOSAL_START_DATE in DATE,
  X_PROPOSAL_END_DATE in DATE,
  X_PROPOSAL_TITLE in VARCHAR2,
  X_PROPOSAL_TYPE_CODE in VARCHAR2,
  X_AWARD_NUMBER in VARCHAR2,
  X_ORIGINAL_PROPOSAL_NUMBER in VARCHAR2,
  X_ORIGINAL_AWARD_NUMBER in VARCHAR2,
  X_ORIGINAL_PROPOSAL_START_DATE in DATE,
  X_ORIGINAL_PROPOSAL_END_DATE in DATE,
  X_ACTIVITY_TYPE_CODE in VARCHAR2,
  X_SPONSOR_ID in NUMBER,
  X_FUNDING_SPONSOR_UNIT in VARCHAR2,
  X_ORIGINAL_SPONSOR_ID in NUMBER,
  X_SPONSOR_PROPOSAL_NUMBER in VARCHAR2,
  X_NOTICE_OF_OPPORTUNITY_CODE in VARCHAR2,
  X_PROGRAM_NUMBER in VARCHAR2,
  X_PROGRAM_TITLE in VARCHAR2,
  X_PROGRAM_URL in VARCHAR2,
  X_SUBMITTING_ORGANIZATION_ID in NUMBER,
  X_SIGNING_OFFICIAL_ID in NUMBER,
  X_ADMIN_OFFICIAL_ID in NUMBER,
  X_DEADLINE_DATE in DATE,
  X_DEADLINE_TYPE in VARCHAR2,
  X_LETTER_OF_INTENT_DUE_DATE in DATE,
  X_ATTRIBUTE_CATEGORY in VARCHAR2,
  X_ATTRIBUTE1 in VARCHAR2,
  X_ATTRIBUTE2 in VARCHAR2,
  X_ATTRIBUTE3 in VARCHAR2,
  X_ATTRIBUTE4 in VARCHAR2,
  X_ATTRIBUTE5 in VARCHAR2,
  X_ATTRIBUTE6 in VARCHAR2,
  X_ATTRIBUTE7 in VARCHAR2,
  X_ATTRIBUTE8 in VARCHAR2,
  X_ATTRIBUTE9 in VARCHAR2,
  X_ATTRIBUTE10 in VARCHAR2,
  X_ATTRIBUTE11 in VARCHAR2,
  X_ATTRIBUTE12 in VARCHAR2,
  X_ATTRIBUTE13 in VARCHAR2,
  X_ATTRIBUTE14 in VARCHAR2,
  X_ATTRIBUTE15 in VARCHAR2
) is
  cursor c1 is select
      SPONSOR_ACTION_CODE,
      SPONSOR_ACTION_DATE,
      SPONSOR_ACTION_COMMENTS,
      AWARD_AMOUNT,
      PROPOSAL_NUMBER,
      LEAD_ORGANIZATION_ID,
      PROPOSAL_STATUS,
      PROPOSAL_START_DATE,
      PROPOSAL_END_DATE,
      PROPOSAL_TITLE,
      PROPOSAL_TYPE_CODE,
      AWARD_NUMBER,
      ORIGINAL_PROPOSAL_NUMBER,
      ORIGINAL_AWARD_NUMBER,
      ORIGINAL_PROPOSAL_START_DATE,
      ORIGINAL_PROPOSAL_END_DATE,
      ACTIVITY_TYPE_CODE,
      SPONSOR_ID,
      FUNDING_SPONSOR_UNIT,
      ORIGINAL_SPONSOR_ID,
      SPONSOR_PROPOSAL_NUMBER,
      NOTICE_OF_OPPORTUNITY_CODE,
      PROGRAM_NUMBER,
      PROGRAM_TITLE,
      PROGRAM_URL,
      SUBMITTING_ORGANIZATION_ID,
      SIGNING_OFFICIAL_ID,
      ADMIN_OFFICIAL_ID,
      DEADLINE_DATE,
      DEADLINE_TYPE,
      LETTER_OF_INTENT_DUE_DATE,
      ATTRIBUTE_CATEGORY,
      ATTRIBUTE1,
      ATTRIBUTE2,
      ATTRIBUTE3,
      ATTRIBUTE4,
      ATTRIBUTE5,
      ATTRIBUTE6,
      ATTRIBUTE7,
      ATTRIBUTE8,
      ATTRIBUTE9,
      ATTRIBUTE10,
      ATTRIBUTE11,
      ATTRIBUTE12,
      ATTRIBUTE13,
      ATTRIBUTE14,
      ATTRIBUTE15
    from IGW_PROPOSALS_ALL
    where ROWID = X_ROWID
    for update of PROPOSAL_ID nowait;
  tlinfo c1%rowtype;

begin
  open c1;
  fetch c1 into tlinfo;
  if (c1%notfound) then
    fnd_message.set_name('FND', 'FORM_RECORD_CHANGED');
    app_exception.raise_exception;
    close c1;
    return;
  end if;
  close c1;

      if ( ((tlinfo.SPONSOR_ACTION_CODE = X_SPONSOR_ACTION_CODE)
           OR ((tlinfo.SPONSOR_ACTION_CODE is null)
               AND (X_SPONSOR_ACTION_CODE is null)))
      AND ((tlinfo.SPONSOR_ACTION_DATE = X_SPONSOR_ACTION_DATE)
           OR ((tlinfo.SPONSOR_ACTION_DATE is null)
               AND (X_SPONSOR_ACTION_DATE is null)))
      AND ((tlinfo.SPONSOR_ACTION_COMMENTS = X_SPONSOR_ACTION_COMMENTS)
           OR ((tlinfo.SPONSOR_ACTION_COMMENTS is null)
               AND (X_SPONSOR_ACTION_COMMENTS is null)))
      AND ((tlinfo.AWARD_AMOUNT = X_AWARD_AMOUNT)
           OR ((tlinfo.AWARD_AMOUNT is null)
               AND (X_AWARD_AMOUNT is null)))
      AND (tlinfo.PROPOSAL_NUMBER = X_PROPOSAL_NUMBER)
      AND (tlinfo.LEAD_ORGANIZATION_ID = X_LEAD_ORGANIZATION_ID)
      AND ((tlinfo.PROPOSAL_STATUS = X_PROPOSAL_STATUS)
           OR ((tlinfo.PROPOSAL_STATUS is null)
               AND (X_PROPOSAL_STATUS is null)))
      AND (tlinfo.PROPOSAL_START_DATE = X_PROPOSAL_START_DATE)
      AND (tlinfo.PROPOSAL_END_DATE = X_PROPOSAL_END_DATE)
      AND ((tlinfo.PROPOSAL_TITLE = X_PROPOSAL_TITLE)
           OR ((tlinfo.PROPOSAL_TITLE is null)
               AND (X_PROPOSAL_TITLE is null)))
      AND (tlinfo.PROPOSAL_TYPE_CODE = X_PROPOSAL_TYPE_CODE)
      AND ((tlinfo.AWARD_NUMBER = X_AWARD_NUMBER)
           OR ((tlinfo.AWARD_NUMBER is null)
               AND (X_AWARD_NUMBER is null)))
      AND ((tlinfo.ORIGINAL_PROPOSAL_NUMBER = X_ORIGINAL_PROPOSAL_NUMBER)
           OR ((tlinfo.ORIGINAL_PROPOSAL_NUMBER is null)
               AND (X_ORIGINAL_PROPOSAL_NUMBER is null)))
      AND ((tlinfo.ORIGINAL_AWARD_NUMBER = X_ORIGINAL_AWARD_NUMBER)
           OR ((tlinfo.ORIGINAL_AWARD_NUMBER is null)
               AND (X_ORIGINAL_AWARD_NUMBER is null)))
      AND ((tlinfo.ORIGINAL_PROPOSAL_START_DATE = X_ORIGINAL_PROPOSAL_START_DATE)
           OR ((tlinfo.ORIGINAL_PROPOSAL_START_DATE is null)
               AND (X_ORIGINAL_PROPOSAL_START_DATE is null)))
      AND ((tlinfo.ORIGINAL_PROPOSAL_END_DATE = X_ORIGINAL_PROPOSAL_END_DATE)
           OR ((tlinfo.ORIGINAL_PROPOSAL_END_DATE is null)
               AND (X_ORIGINAL_PROPOSAL_END_DATE is null)))
      AND (tlinfo.ACTIVITY_TYPE_CODE = X_ACTIVITY_TYPE_CODE)
      AND ((tlinfo.SPONSOR_ID = X_SPONSOR_ID)
           OR ((tlinfo.SPONSOR_ID is null)
               AND (X_SPONSOR_ID is null)))
      AND ((tlinfo.FUNDING_SPONSOR_UNIT = X_FUNDING_SPONSOR_UNIT)
           OR ((tlinfo.FUNDING_SPONSOR_UNIT is null)
               AND (X_FUNDING_SPONSOR_UNIT is null)))
      AND ((tlinfo.ORIGINAL_SPONSOR_ID = X_ORIGINAL_SPONSOR_ID)
           OR ((tlinfo.ORIGINAL_SPONSOR_ID is null)
               AND (X_ORIGINAL_SPONSOR_ID is null)))
      AND ((tlinfo.SPONSOR_PROPOSAL_NUMBER = X_SPONSOR_PROPOSAL_NUMBER)
           OR ((tlinfo.SPONSOR_PROPOSAL_NUMBER is null)
               AND (X_SPONSOR_PROPOSAL_NUMBER is null)))
      AND ((tlinfo.NOTICE_OF_OPPORTUNITY_CODE = X_NOTICE_OF_OPPORTUNITY_CODE)
           OR ((tlinfo.NOTICE_OF_OPPORTUNITY_CODE is null)
               AND (X_NOTICE_OF_OPPORTUNITY_CODE is null)))
      AND ((tlinfo.PROGRAM_NUMBER = X_PROGRAM_NUMBER)
           OR ((tlinfo.PROGRAM_NUMBER is null)
               AND (X_PROGRAM_NUMBER is null)))
      AND ((tlinfo.PROGRAM_TITLE = X_PROGRAM_TITLE)
           OR ((tlinfo.PROGRAM_TITLE is null)
               AND (X_PROGRAM_TITLE is null)))
      AND ((tlinfo.PROGRAM_URL = X_PROGRAM_URL)
           OR ((tlinfo.PROGRAM_URL is null)
               AND (X_PROGRAM_URL is null)))
      AND ((tlinfo.SUBMITTING_ORGANIZATION_ID = X_SUBMITTING_ORGANIZATION_ID)
           OR ((tlinfo.SUBMITTING_ORGANIZATION_ID is null)
               AND (X_SUBMITTING_ORGANIZATION_ID is null)))
      AND ((tlinfo.SIGNING_OFFICIAL_ID = X_SIGNING_OFFICIAL_ID)
           OR ((tlinfo.SIGNING_OFFICIAL_ID is null)
               AND (X_SIGNING_OFFICIAL_ID is null)))
      AND ((tlinfo.ADMIN_OFFICIAL_ID = X_ADMIN_OFFICIAL_ID)
           OR ((tlinfo.ADMIN_OFFICIAL_ID is null)
               AND (X_ADMIN_OFFICIAL_ID is null)))
      AND ((tlinfo.DEADLINE_DATE = X_DEADLINE_DATE)
           OR ((tlinfo.DEADLINE_DATE is null)
               AND (X_DEADLINE_DATE is null)))
      AND ((tlinfo.DEADLINE_TYPE = X_DEADLINE_TYPE)
           OR ((tlinfo.DEADLINE_TYPE is null)
               AND (X_DEADLINE_TYPE is null)))
      AND ((tlinfo.LETTER_OF_INTENT_DUE_DATE = X_LETTER_OF_INTENT_DUE_DATE)
           OR ((tlinfo.LETTER_OF_INTENT_DUE_DATE is null)
               AND (X_LETTER_OF_INTENT_DUE_DATE is null)))
      AND ((tlinfo.ATTRIBUTE_CATEGORY = X_ATTRIBUTE_CATEGORY)
           OR ((tlinfo.ATTRIBUTE_CATEGORY is null)
               AND (X_ATTRIBUTE_CATEGORY is null)))
      AND ((tlinfo.ATTRIBUTE1 = X_ATTRIBUTE1)
           OR ((tlinfo.ATTRIBUTE1 is null)
               AND (X_ATTRIBUTE1 is null)))
      AND ((tlinfo.ATTRIBUTE2 = X_ATTRIBUTE2)
           OR ((tlinfo.ATTRIBUTE2 is null)
               AND (X_ATTRIBUTE2 is null)))
      AND ((tlinfo.ATTRIBUTE3 = X_ATTRIBUTE3)
           OR ((tlinfo.ATTRIBUTE3 is null)
               AND (X_ATTRIBUTE3 is null)))
      AND ((tlinfo.ATTRIBUTE4 = X_ATTRIBUTE4)
           OR ((tlinfo.ATTRIBUTE4 is null)
               AND (X_ATTRIBUTE4 is null)))
      AND ((tlinfo.ATTRIBUTE5 = X_ATTRIBUTE5)
           OR ((tlinfo.ATTRIBUTE5 is null)
               AND (X_ATTRIBUTE5 is null)))
      AND ((tlinfo.ATTRIBUTE6 = X_ATTRIBUTE6)
           OR ((tlinfo.ATTRIBUTE6 is null)
               AND (X_ATTRIBUTE6 is null)))
      AND ((tlinfo.ATTRIBUTE7 = X_ATTRIBUTE7)
           OR ((tlinfo.ATTRIBUTE7 is null)
               AND (X_ATTRIBUTE7 is null)))
      AND ((tlinfo.ATTRIBUTE8 = X_ATTRIBUTE8)
           OR ((tlinfo.ATTRIBUTE8 is null)
               AND (X_ATTRIBUTE8 is null)))
      AND ((tlinfo.ATTRIBUTE9 = X_ATTRIBUTE9)
           OR ((tlinfo.ATTRIBUTE9 is null)
               AND (X_ATTRIBUTE9 is null)))
      AND ((tlinfo.ATTRIBUTE10 = X_ATTRIBUTE10)
           OR ((tlinfo.ATTRIBUTE10 is null)
               AND (X_ATTRIBUTE10 is null)))
      AND ((tlinfo.ATTRIBUTE11 = X_ATTRIBUTE11)
           OR ((tlinfo.ATTRIBUTE11 is null)
               AND (X_ATTRIBUTE11 is null)))
      AND ((tlinfo.ATTRIBUTE12 = X_ATTRIBUTE12)
           OR ((tlinfo.ATTRIBUTE12 is null)
               AND (X_ATTRIBUTE12 is null)))
      AND ((tlinfo.ATTRIBUTE13 = X_ATTRIBUTE13)
           OR ((tlinfo.ATTRIBUTE13 is null)
               AND (X_ATTRIBUTE13 is null)))
      AND ((tlinfo.ATTRIBUTE14 = X_ATTRIBUTE14)
           OR ((tlinfo.ATTRIBUTE14 is null)
               AND (X_ATTRIBUTE14 is null)))
      AND ((tlinfo.ATTRIBUTE15 = X_ATTRIBUTE15)
           OR ((tlinfo.ATTRIBUTE15 is null)
               AND (X_ATTRIBUTE15 is null)))
  ) then
    null;
  else
    fnd_message.set_name('FND', 'FORM_RECORD_CHANGED');
    app_exception.raise_exception;
  end if;
  return;
end LOCK_ROW;

procedure UPDATE_ROW (
  X_ROWID in VARCHAR2,
  X_PROPOSAL_ID in NUMBER,
  X_SPONSOR_ACTION_CODE in VARCHAR2,
  X_SPONSOR_ACTION_DATE in DATE,
  X_SPONSOR_ACTION_COMMENTS in VARCHAR2,
  X_AWARD_AMOUNT in NUMBER,
  X_PROPOSAL_NUMBER in VARCHAR2,
  X_LEAD_ORGANIZATION_ID in NUMBER,
  X_PROPOSAL_STATUS in VARCHAR2,
  X_PROPOSAL_START_DATE in DATE,
  X_PROPOSAL_END_DATE in DATE,
  X_PROPOSAL_TITLE in VARCHAR2,
  X_PROPOSAL_TYPE_CODE in VARCHAR2,
  X_AWARD_NUMBER in VARCHAR2,
  X_ORIGINAL_PROPOSAL_NUMBER in VARCHAR2,
  X_ORIGINAL_AWARD_NUMBER in VARCHAR2,
  X_ORIGINAL_PROPOSAL_START_DATE in DATE,
  X_ORIGINAL_PROPOSAL_END_DATE in DATE,
  X_ACTIVITY_TYPE_CODE in VARCHAR2,
  X_SPONSOR_ID in NUMBER,
  X_FUNDING_SPONSOR_UNIT in VARCHAR2,
  X_ORIGINAL_SPONSOR_ID in NUMBER,
  X_SPONSOR_PROPOSAL_NUMBER in VARCHAR2,
  X_NOTICE_OF_OPPORTUNITY_CODE in VARCHAR2,
  X_PROGRAM_NUMBER in VARCHAR2,
  X_PROGRAM_TITLE in VARCHAR2,
  X_PROGRAM_URL in VARCHAR2,
  X_SUBMITTING_ORGANIZATION_ID in NUMBER,
  X_SIGNING_OFFICIAL_ID in NUMBER,
  X_ADMIN_OFFICIAL_ID in NUMBER,
  X_DEADLINE_DATE in DATE,
  X_DEADLINE_TYPE in VARCHAR2,
  X_LETTER_OF_INTENT_DUE_DATE in DATE,
  X_ATTRIBUTE_CATEGORY in VARCHAR2,
  X_ATTRIBUTE1 in VARCHAR2,
  X_ATTRIBUTE2 in VARCHAR2,
  X_ATTRIBUTE3 in VARCHAR2,
  X_ATTRIBUTE4 in VARCHAR2,
  X_ATTRIBUTE5 in VARCHAR2,
  X_ATTRIBUTE6 in VARCHAR2,
  X_ATTRIBUTE7 in VARCHAR2,
  X_ATTRIBUTE8 in VARCHAR2,
  X_ATTRIBUTE9 in VARCHAR2,
  X_ATTRIBUTE10 in VARCHAR2,
  X_ATTRIBUTE11 in VARCHAR2,
  X_ATTRIBUTE12 in VARCHAR2,
  X_ATTRIBUTE13 in VARCHAR2,
  X_ATTRIBUTE14 in VARCHAR2,
  X_ATTRIBUTE15 in VARCHAR2,
  X_MODE in VARCHAR2 default 'R'
  ) is

    X_LAST_UPDATE_DATE DATE;
    X_LAST_UPDATED_BY NUMBER;
    X_LAST_UPDATE_LOGIN NUMBER;

    l_old_sponsor_action_date      date;
    l_old_sponsor_action_code      varchar2(30);
    l_old_sponsor_action_comments  varchar2(2000);

begin
  X_LAST_UPDATE_DATE := SYSDATE;
  if(X_MODE = 'I') then
    X_LAST_UPDATED_BY := 1;
    X_LAST_UPDATE_LOGIN := 0;
  elsif (X_MODE = 'R') then
    X_LAST_UPDATED_BY := FND_GLOBAL.USER_ID;
    if X_LAST_UPDATED_BY is NULL then
      X_LAST_UPDATED_BY := -1;
    end if;
    X_LAST_UPDATE_LOGIN :=FND_GLOBAL.LOGIN_ID;
    if X_LAST_UPDATE_LOGIN is NULL then
      X_LAST_UPDATE_LOGIN := -1;
    end if;
  else
    FND_MESSAGE.SET_NAME('FND', 'SYSTEM-INVALID ARGS');
    app_exception.raise_exception;
  end if;

  select sponsor_action_date,
         sponsor_action_code,
         sponsor_action_comments
  into   l_old_sponsor_action_date,
         l_old_sponsor_action_code,
         l_old_sponsor_action_comments
  from   igw_proposals_all
  where  proposal_id = x_proposal_id;

  update IGW_PROPOSALS_ALL set
    SPONSOR_ACTION_CODE = X_SPONSOR_ACTION_CODE,
    SPONSOR_ACTION_DATE = X_SPONSOR_ACTION_DATE,
    SPONSOR_ACTION_COMMENTS = X_SPONSOR_ACTION_COMMENTS,
    AWARD_AMOUNT = X_AWARD_AMOUNT,
    PROPOSAL_NUMBER = X_PROPOSAL_NUMBER,
    LEAD_ORGANIZATION_ID = X_LEAD_ORGANIZATION_ID,
    PROPOSAL_STATUS = X_PROPOSAL_STATUS,
    PROPOSAL_START_DATE = X_PROPOSAL_START_DATE,
    PROPOSAL_END_DATE = X_PROPOSAL_END_DATE,
    PROPOSAL_TITLE = X_PROPOSAL_TITLE,
    PROPOSAL_TYPE_CODE = X_PROPOSAL_TYPE_CODE,
    AWARD_NUMBER = X_AWARD_NUMBER,
    ORIGINAL_PROPOSAL_NUMBER = X_ORIGINAL_PROPOSAL_NUMBER,
    ORIGINAL_AWARD_NUMBER = X_ORIGINAL_AWARD_NUMBER,
    ORIGINAL_PROPOSAL_START_DATE = X_ORIGINAL_PROPOSAL_START_DATE,
    ORIGINAL_PROPOSAL_END_DATE = X_ORIGINAL_PROPOSAL_END_DATE,
    ACTIVITY_TYPE_CODE = X_ACTIVITY_TYPE_CODE,
    SPONSOR_ID = X_SPONSOR_ID,
    FUNDING_SPONSOR_UNIT = X_FUNDING_SPONSOR_UNIT,
    ORIGINAL_SPONSOR_ID = X_ORIGINAL_SPONSOR_ID,
    SPONSOR_PROPOSAL_NUMBER = X_SPONSOR_PROPOSAL_NUMBER,
    NOTICE_OF_OPPORTUNITY_CODE = X_NOTICE_OF_OPPORTUNITY_CODE,
    PROGRAM_NUMBER = X_PROGRAM_NUMBER,
    PROGRAM_TITLE = X_PROGRAM_TITLE,
    PROGRAM_URL = X_PROGRAM_URL,
    SUBMITTING_ORGANIZATION_ID = X_SUBMITTING_ORGANIZATION_ID,
    SIGNING_OFFICIAL_ID = X_SIGNING_OFFICIAL_ID,
    ADMIN_OFFICIAL_ID = X_ADMIN_OFFICIAL_ID,
    DEADLINE_DATE = X_DEADLINE_DATE,
    DEADLINE_TYPE = X_DEADLINE_TYPE,
    LETTER_OF_INTENT_DUE_DATE = X_LETTER_OF_INTENT_DUE_DATE,
    ATTRIBUTE_CATEGORY = X_ATTRIBUTE_CATEGORY,
    ATTRIBUTE1 = X_ATTRIBUTE1,
    ATTRIBUTE2 = X_ATTRIBUTE2,
    ATTRIBUTE3 = X_ATTRIBUTE3,
    ATTRIBUTE4 = X_ATTRIBUTE4,
    ATTRIBUTE5 = X_ATTRIBUTE5,
    ATTRIBUTE6 = X_ATTRIBUTE6,
    ATTRIBUTE7 = X_ATTRIBUTE7,
    ATTRIBUTE8 = X_ATTRIBUTE8,
    ATTRIBUTE9 = X_ATTRIBUTE9,
    ATTRIBUTE10 = X_ATTRIBUTE10,
    ATTRIBUTE11 = X_ATTRIBUTE11,
    ATTRIBUTE12 = X_ATTRIBUTE12,
    ATTRIBUTE13 = X_ATTRIBUTE13,
    ATTRIBUTE14 = X_ATTRIBUTE14,
    ATTRIBUTE15 = X_ATTRIBUTE15,
    LAST_UPDATE_DATE = X_LAST_UPDATE_DATE,
    LAST_UPDATED_BY = X_LAST_UPDATED_BY,
    LAST_UPDATE_LOGIN = X_LAST_UPDATE_LOGIN
    where ROWID = X_ROWID
  ;
  if (sql%notfound) then
    raise no_data_found;
  end if;

  if x_sponsor_action_code is not null then

  if x_sponsor_action_date <> l_old_sponsor_action_date or
     nvl(x_sponsor_action_code,'_') <> nvl(l_old_sponsor_action_code,'_') or
     nvl(x_sponsor_action_comments,'_') <> nvl(l_old_sponsor_action_comments,'_') then

     insert into igw_prop_comments
     (
     PROPOSAL_ID,
     COMMENT_ID,
     COMMENTS,
     LAST_UPDATE_DATE,
     LAST_UPDATED_BY,
     CREATION_DATE,
     CREATED_BY,
     LAST_UPDATE_LOGIN,
     RECORD_VERSION_NUMBER,
     SPONSOR_ACTION_CODE,
     SPONSOR_ACTION_DATE
     )
     values
     (
     X_PROPOSAL_ID,
     IGW_PROP_COMMENTS_S.NEXTVAL,
     X_SPONSOR_ACTION_COMMENTS,
     X_LAST_UPDATE_DATE,
     X_LAST_UPDATED_BY,
     X_LAST_UPDATE_DATE,
     X_LAST_UPDATED_BY,
     X_LAST_UPDATE_LOGIN,
     1,
     X_SPONSOR_ACTION_CODE,
     X_SPONSOR_ACTION_DATE
     );

   end if;

  end if;


end UPDATE_ROW;

procedure ADD_ROW (
  X_ROWID in out VARCHAR2,
  X_PROPOSAL_ID in NUMBER,
  X_SPONSOR_ACTION_CODE in VARCHAR2,
  X_SPONSOR_ACTION_DATE in DATE,
  X_SPONSOR_ACTION_COMMENTS in VARCHAR2,
  X_AWARD_AMOUNT in NUMBER,
  X_PROPOSAL_NUMBER in VARCHAR2,
  X_LEAD_ORGANIZATION_ID in NUMBER,
  X_PROPOSAL_STATUS in VARCHAR2,
  X_PROPOSAL_START_DATE in DATE,
  X_PROPOSAL_END_DATE in DATE,
  X_PROPOSAL_TITLE in VARCHAR2,
  X_PROPOSAL_TYPE_CODE in VARCHAR2,
  X_AWARD_NUMBER in VARCHAR2,
  X_ORIGINAL_PROPOSAL_NUMBER in VARCHAR2,
  X_ORIGINAL_AWARD_NUMBER in VARCHAR2,
  X_ORIGINAL_PROPOSAL_START_DATE in DATE,
  X_ORIGINAL_PROPOSAL_END_DATE in DATE,
  X_ACTIVITY_TYPE_CODE in VARCHAR2,
  X_SPONSOR_ID in NUMBER,
  X_FUNDING_SPONSOR_UNIT in VARCHAR2,
  X_ORIGINAL_SPONSOR_ID in NUMBER,
  X_SPONSOR_PROPOSAL_NUMBER in VARCHAR2,
  X_NOTICE_OF_OPPORTUNITY_CODE in VARCHAR2,
  X_PROGRAM_NUMBER in VARCHAR2,
  X_PROGRAM_TITLE in VARCHAR2,
  X_PROGRAM_URL in VARCHAR2,
  X_SUBMITTING_ORGANIZATION_ID in NUMBER,
  X_SIGNING_OFFICIAL_ID in NUMBER,
  X_ADMIN_OFFICIAL_ID in NUMBER,
  X_DEADLINE_DATE in DATE,
  X_DEADLINE_TYPE in VARCHAR2,
  X_LETTER_OF_INTENT_DUE_DATE in DATE,
  X_ATTRIBUTE_CATEGORY in VARCHAR2,
  X_ATTRIBUTE1 in VARCHAR2,
  X_ATTRIBUTE2 in VARCHAR2,
  X_ATTRIBUTE3 in VARCHAR2,
  X_ATTRIBUTE4 in VARCHAR2,
  X_ATTRIBUTE5 in VARCHAR2,
  X_ATTRIBUTE6 in VARCHAR2,
  X_ATTRIBUTE7 in VARCHAR2,
  X_ATTRIBUTE8 in VARCHAR2,
  X_ATTRIBUTE9 in VARCHAR2,
  X_ATTRIBUTE10 in VARCHAR2,
  X_ATTRIBUTE11 in VARCHAR2,
  X_ATTRIBUTE12 in VARCHAR2,
  X_ATTRIBUTE13 in VARCHAR2,
  X_ATTRIBUTE14 in VARCHAR2,
  X_ATTRIBUTE15 in VARCHAR2,
  X_MODE in VARCHAR2 default 'R'
  ) is
  cursor c1 is select rowid from IGW_PROPOSALS_ALL
     where PROPOSAL_ID = X_PROPOSAL_ID
  ;
  dummy c1%rowtype;
begin
  open c1;
  fetch c1 into dummy;
  if (c1%notfound) then
    close c1;
    INSERT_ROW (
     X_ROWID,
     X_PROPOSAL_ID,
     X_SPONSOR_ACTION_CODE,
     X_SPONSOR_ACTION_DATE,
     X_SPONSOR_ACTION_COMMENTS,
     X_AWARD_AMOUNT,
     X_PROPOSAL_NUMBER,
     X_LEAD_ORGANIZATION_ID,
     X_PROPOSAL_STATUS,
     X_PROPOSAL_START_DATE,
     X_PROPOSAL_END_DATE,
     X_PROPOSAL_TITLE,
     X_PROPOSAL_TYPE_CODE,
     X_AWARD_NUMBER,
     X_ORIGINAL_PROPOSAL_NUMBER,
     X_ORIGINAL_AWARD_NUMBER,
     X_ORIGINAL_PROPOSAL_START_DATE,
     X_ORIGINAL_PROPOSAL_END_DATE,
     X_ACTIVITY_TYPE_CODE,
     X_SPONSOR_ID,
     X_FUNDING_SPONSOR_UNIT,
     X_ORIGINAL_SPONSOR_ID,
     X_SPONSOR_PROPOSAL_NUMBER,
     X_NOTICE_OF_OPPORTUNITY_CODE,
     X_PROGRAM_NUMBER,
     X_PROGRAM_TITLE,
     X_PROGRAM_URL,
     X_SUBMITTING_ORGANIZATION_ID,
     X_SIGNING_OFFICIAL_ID,
     X_ADMIN_OFFICIAL_ID,
     X_DEADLINE_DATE,
     X_DEADLINE_TYPE,
     X_LETTER_OF_INTENT_DUE_DATE,
     X_ATTRIBUTE_CATEGORY,
     X_ATTRIBUTE1,
     X_ATTRIBUTE2,
     X_ATTRIBUTE3,
     X_ATTRIBUTE4,
     X_ATTRIBUTE5,
     X_ATTRIBUTE6,
     X_ATTRIBUTE7,
     X_ATTRIBUTE8,
     X_ATTRIBUTE9,
     X_ATTRIBUTE10,
     X_ATTRIBUTE11,
     X_ATTRIBUTE12,
     X_ATTRIBUTE13,
     X_ATTRIBUTE14,
     X_ATTRIBUTE15,
     X_MODE);
    return;
  end if;
  close c1;
  UPDATE_ROW (
   X_ROWID,
   X_PROPOSAL_ID,
   X_SPONSOR_ACTION_CODE,
   X_SPONSOR_ACTION_DATE,
   X_SPONSOR_ACTION_COMMENTS,
   X_AWARD_AMOUNT,
   X_PROPOSAL_NUMBER,
   X_LEAD_ORGANIZATION_ID,
   X_PROPOSAL_STATUS,
   X_PROPOSAL_START_DATE,
   X_PROPOSAL_END_DATE,
   X_PROPOSAL_TITLE,
   X_PROPOSAL_TYPE_CODE,
   X_AWARD_NUMBER,
   X_ORIGINAL_PROPOSAL_NUMBER,
   X_ORIGINAL_AWARD_NUMBER,
   X_ORIGINAL_PROPOSAL_START_DATE,
   X_ORIGINAL_PROPOSAL_END_DATE,
   X_ACTIVITY_TYPE_CODE,
   X_SPONSOR_ID,
   X_FUNDING_SPONSOR_UNIT,
   X_ORIGINAL_SPONSOR_ID,
   X_SPONSOR_PROPOSAL_NUMBER,
   X_NOTICE_OF_OPPORTUNITY_CODE,
   X_PROGRAM_NUMBER,
   X_PROGRAM_TITLE,
   X_PROGRAM_URL,
   X_SUBMITTING_ORGANIZATION_ID,
   X_SIGNING_OFFICIAL_ID,
   X_ADMIN_OFFICIAL_ID,
   X_DEADLINE_DATE,
   X_DEADLINE_TYPE,
   X_LETTER_OF_INTENT_DUE_DATE,
   X_ATTRIBUTE_CATEGORY,
   X_ATTRIBUTE1,
   X_ATTRIBUTE2,
   X_ATTRIBUTE3,
   X_ATTRIBUTE4,
   X_ATTRIBUTE5,
   X_ATTRIBUTE6,
   X_ATTRIBUTE7,
   X_ATTRIBUTE8,
   X_ATTRIBUTE9,
   X_ATTRIBUTE10,
   X_ATTRIBUTE11,
   X_ATTRIBUTE12,
   X_ATTRIBUTE13,
   X_ATTRIBUTE14,
   X_ATTRIBUTE15,
   X_MODE);
end ADD_ROW;

procedure DELETE_ROW (
  X_ROWID in VARCHAR2
) is
begin
  delete from IGW_PROPOSALS_ALL
  where ROWID = X_ROWID;
  if (sql%notfound) then
    raise no_data_found;
  end if;
end DELETE_ROW;

end IGW_PROPOSALS_ALL_PKG;

/
