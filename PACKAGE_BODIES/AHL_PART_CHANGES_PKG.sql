--------------------------------------------------------
--  DDL for Package Body AHL_PART_CHANGES_PKG
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE PACKAGE BODY "APPS"."AHL_PART_CHANGES_PKG" AS
/* $Header: AHLLPCKB.pls 120.1 2008/02/06 14:51:40 sracha ship $ */
-- Purpose: Briefly explain the functionality of the package body
-- Contains common table handler procedures update, insert to be used by parts change.
-- Person      Date    Comments
-- sangigup 	10/10/02

-- ---------   ------  -----------------------------------------
--This procedure will insert a row in teh table
procedure INSERT_ROW (
  X_ROWID in out nocopy VARCHAR2,
  X_PART_CHANGE_ID in out nocopy  NUMBER,
  X_UNIT_CONFIG_HEADER_ID in NUMBER,
  X_REMOVED_INSTANCE_ID in NUMBER,
  X_MC_RELATIONSHIP_ID in NUMBER,
  X_REMOVAL_CODE in VARCHAR2,
  --X_STATUS_ID in NUMBER,
  X_REMOVAL_REASON_ID in NUMBER,
  X_INSTALLED_INSTANCE_ID in NUMBER,
  X_WORKORDER_OPERATION_ID in NUMBER,
  X_ATTRIBUTE_CATEGORY in VARCHAR2,
  X_ATTRIBUTE1 in VARCHAR2,
  X_ATTRIBUTE2 in VARCHAR2,
  X_ATTRIBUTE3 in VARCHAR2,
  X_ATTRIBUTE4 in VARCHAR2,
  X_ATTRIBUTE5 in VARCHAR2,
  X_ATTRIBUTE6 in VARCHAR2,
  X_ATTRIBUTE7 in VARCHAR2,
  X_ATTRIBUTE8 in VARCHAR2,
  X_ATTRIBUTE9 in VARCHAR2,
  X_ATTRIBUTE10 in VARCHAR2,
  X_ATTRIBUTE11 in VARCHAR2,
  X_ATTRIBUTE12 in VARCHAR2,
  X_ATTRIBUTE13 in VARCHAR2,
  X_ATTRIBUTE14 in VARCHAR2,
  X_ATTRIBUTE15 in VARCHAR2,
  X_OBJECT_VERSION_NUMBER in NUMBER,
  --X_NON_ROUTINE_WORKORDER_ID in NUMBER,
  --X_COLLECTION_ID in NUMBER,
  --X_WORKORDER_MTL_TXN_ID in NUMBER,
  X_REMOVAL_DATE in DATE,
  X_INSTALLATION_DATE in DATE,
  X_ISSUE_MTL_TXN_ID  in NUMBER,
  X_RETURN_MTL_TXN_ID in NUMBER,
  X_PART_CHANGE_TYPE  in VARCHAR2,
  X_CREATION_DATE in DATE,
  X_CREATED_BY in NUMBER,
  X_LAST_UPDATE_DATE in DATE,
  X_LAST_UPDATED_BY in NUMBER,
  X_LAST_UPDATE_LOGIN in NUMBER,
  X_QUANTITY in NUMBER
) is
   cursor C is select ROWID from AHL_PART_CHANGES
    where part_change_id = X_PART_CHANGE_ID
    ;


begin
  insert into AHL_PART_CHANGES (
  part_change_id,
    UNIT_CONFIG_HEADER_ID,
    REMOVED_INSTANCE_ID,
    MC_RELATIONSHIP_ID,
    REMOVAL_CODE,
    --STATUS_ID,
    REMOVAL_REASON_ID,
    INSTALLED_INSTANCE_ID,
    WORKORDER_OPERATION_ID,
    ATTRIBUTE_CATEGORY,
    ATTRIBUTE1,
    ATTRIBUTE2,
    ATTRIBUTE3,
    ATTRIBUTE4,
    ATTRIBUTE5,
    ATTRIBUTE6,
    ATTRIBUTE7,
    ATTRIBUTE8,
    ATTRIBUTE9,
    ATTRIBUTE10,
    ATTRIBUTE11,
    ATTRIBUTE12,
    ATTRIBUTE13,
    ATTRIBUTE14,
    ATTRIBUTE15,
    OBJECT_VERSION_NUMBER,
    --NON_ROUTINE_WORKORDER_ID,
    --COLLECTION_ID,
    --WORKORDER_MTL_TXN_ID,
    REMOVAL_DATE,
    INSTALLATION_DATE,
    ISSUE_MTL_TXN_ID,
    RETURN_MTL_TXN_ID,
    PART_CHANGE_TYPE,
    CREATION_DATE,
    CREATED_BY,
    LAST_UPDATE_DATE,
    LAST_UPDATED_BY,
    LAST_UPDATE_LOGIN,
    QUANTITY
  ) values (
    ahl.ahl_part_changes_s.nextval,
    X_UNIT_CONFIG_HEADER_ID,
    X_REMOVED_INSTANCE_ID,
    X_MC_RELATIONSHIP_ID,
    X_REMOVAL_CODE,
    --X_STATUS_ID,
    X_REMOVAL_REASON_ID,
    X_INSTALLED_INSTANCE_ID,
    X_WORKORDER_OPERATION_ID,
    X_ATTRIBUTE_CATEGORY,
    X_ATTRIBUTE1,
    X_ATTRIBUTE2,
    X_ATTRIBUTE3,
    X_ATTRIBUTE4,
    X_ATTRIBUTE5,
    X_ATTRIBUTE6,
    X_ATTRIBUTE7,
    X_ATTRIBUTE8,
    X_ATTRIBUTE9,
    X_ATTRIBUTE10,
    X_ATTRIBUTE11,
    X_ATTRIBUTE12,
    X_ATTRIBUTE13,
    X_ATTRIBUTE14,
    X_ATTRIBUTE15,
    X_OBJECT_VERSION_NUMBER,
    --X_NON_ROUTINE_WORKORDER_ID,
    --X_COLLECTION_ID,
    --X_WORKORDER_MTL_TXN_ID,
    X_REMOVAL_DATE,
    X_INSTALLATION_DATE,
    X_ISSUE_MTL_TXN_ID,
    X_RETURN_MTL_TXN_ID,
    X_PART_CHANGE_TYPE,
    X_CREATION_DATE,
    X_CREATED_BY,
    X_LAST_UPDATE_DATE,
    X_LAST_UPDATED_BY,
    X_LAST_UPDATE_LOGIN,
    X_QUANTITY)
  RETURNING part_change_ID INTO X_part_change_id;

end INSERT_ROW;

procedure LOCK_ROW (
  X_PART_CHANGE_ID in NUMBER,
  X_UNIT_CONFIG_HEADER_ID in NUMBER,
  X_REMOVED_INSTANCE_ID in NUMBER,
  X_MC_RELATIONSHIP_ID in NUMBER,
  X_REMOVAL_CODE in VARCHAR2,
  --X_STATUS_ID in NUMBER,
  X_REMOVAL_REASON_ID in NUMBER,
  X_INSTALLED_INSTANCE_ID in NUMBER,
  X_WORKORDER_OPERATION_ID in NUMBER,
  X_ATTRIBUTE_CATEGORY in VARCHAR2,
  X_ATTRIBUTE1 in VARCHAR2,
  X_ATTRIBUTE2 in VARCHAR2,
  X_ATTRIBUTE3 in VARCHAR2,
  X_ATTRIBUTE4 in VARCHAR2,
  X_ATTRIBUTE5 in VARCHAR2,
  X_ATTRIBUTE6 in VARCHAR2,
  X_ATTRIBUTE7 in VARCHAR2,
  X_ATTRIBUTE8 in VARCHAR2,
  X_ATTRIBUTE9 in VARCHAR2,
  X_ATTRIBUTE10 in VARCHAR2,
  X_ATTRIBUTE11 in VARCHAR2,
  X_ATTRIBUTE12 in VARCHAR2,
  X_ATTRIBUTE13 in VARCHAR2,
  X_ATTRIBUTE14 in VARCHAR2,
  X_ATTRIBUTE15 in VARCHAR2,
  X_OBJECT_VERSION_NUMBER in NUMBER,
  --X_NON_ROUTINE_WORKORDER_ID in NUMBER,
  --X_COLLECTION_ID in NUMBER,
  --X_WORKORDER_MTL_TXN_ID in NUMBER,
  X_REMOVAL_DATE in DATE,
  X_INSTALLATION_DATE in DATE,
  X_ISSUE_MTL_TXN_ID  in NUMBER,
  X_RETURN_MTL_TXN_ID in NUMBER,
  X_PART_CHANGE_TYPE  in VARCHAR2,
  X_QUANTITY in NUMBER
) is
  cursor c is select
      UNIT_CONFIG_HEADER_ID,
      REMOVED_INSTANCE_ID,
      MC_RELATIONSHIP_ID,
      REMOVAL_CODE,
      --STATUS_ID,
      REMOVAL_REASON_ID,
      INSTALLED_INSTANCE_ID,
      WORKORDER_OPERATION_ID,
      ATTRIBUTE_CATEGORY,
      ATTRIBUTE1,
      ATTRIBUTE2,
      ATTRIBUTE3,
      ATTRIBUTE4,
      ATTRIBUTE5,
      ATTRIBUTE6,
      ATTRIBUTE7,
      ATTRIBUTE8,
      ATTRIBUTE9,
      ATTRIBUTE10,
      ATTRIBUTE11,
      ATTRIBUTE12,
      ATTRIBUTE13,
      ATTRIBUTE14,
      ATTRIBUTE15,
      OBJECT_VERSION_NUMBER,
      --NON_ROUTINE_WORKORDER_ID,
      --COLLECTION_ID,
      --WORKORDER_MTL_TXN_ID,
      REMOVAL_DATE,
      INSTALLATION_DATE,
      ISSUE_MTL_TXN_ID,
      RETURN_MTL_TXN_ID,
      PART_CHANGE_TYPE
    from AHL_PART_CHANGES
    where PART_CHANGE_ID = X_PART_CHANGE_ID
    for update of PART_CHANGE_ID nowait;
  recinfo c%rowtype;

begin
  open c;
  fetch c into recinfo;
  if (c%notfound) then
    close c;
    fnd_message.set_name('FND', 'FORM_RECORD_DELETED');
    app_exception.raise_exception;
  end if;
  close c;
  if (    ((recinfo.UNIT_CONFIG_HEADER_ID = X_UNIT_CONFIG_HEADER_ID)
           OR ((recinfo.UNIT_CONFIG_HEADER_ID is null) AND (X_UNIT_CONFIG_HEADER_ID is null)))
      AND ((recinfo.REMOVED_INSTANCE_ID = X_REMOVED_INSTANCE_ID)
           OR ((recinfo.REMOVED_INSTANCE_ID is null) AND (X_REMOVED_INSTANCE_ID is null)))
      AND ((recinfo.MC_RELATIONSHIP_ID = X_MC_RELATIONSHIP_ID)
           OR ((recinfo.MC_RELATIONSHIP_ID is null) AND (X_MC_RELATIONSHIP_ID is null)))
      AND ((recinfo.REMOVAL_CODE = X_REMOVAL_CODE)
           OR ((recinfo.REMOVAL_CODE is null) AND (X_REMOVAL_CODE is null)))
      --AND ((recinfo.STATUS_ID = X_STATUS_ID)
      --     OR ((recinfo.STATUS_ID is null) AND (X_STATUS_ID is null)))
      AND ((recinfo.REMOVAL_REASON_ID = X_REMOVAL_REASON_ID)
           OR ((recinfo.REMOVAL_REASON_ID is null) AND (X_REMOVAL_REASON_ID is null)))
      AND ((recinfo.INSTALLED_INSTANCE_ID = X_INSTALLED_INSTANCE_ID)
           OR ((recinfo.INSTALLED_INSTANCE_ID is null) AND (X_INSTALLED_INSTANCE_ID is null)))
      AND (recinfo.WORKORDER_OPERATION_ID = X_WORKORDER_OPERATION_ID)
      AND ((recinfo.ATTRIBUTE_CATEGORY = X_ATTRIBUTE_CATEGORY)
           OR ((recinfo.ATTRIBUTE_CATEGORY is null) AND (X_ATTRIBUTE_CATEGORY is null)))
      AND ((recinfo.ATTRIBUTE1 = X_ATTRIBUTE1)
           OR ((recinfo.ATTRIBUTE1 is null) AND (X_ATTRIBUTE1 is null)))
      AND ((recinfo.ATTRIBUTE2 = X_ATTRIBUTE2)
           OR ((recinfo.ATTRIBUTE2 is null) AND (X_ATTRIBUTE2 is null)))
      AND ((recinfo.ATTRIBUTE3 = X_ATTRIBUTE3)
           OR ((recinfo.ATTRIBUTE3 is null) AND (X_ATTRIBUTE3 is null)))
      AND ((recinfo.ATTRIBUTE4 = X_ATTRIBUTE4)
           OR ((recinfo.ATTRIBUTE4 is null) AND (X_ATTRIBUTE4 is null)))
      AND ((recinfo.ATTRIBUTE5 = X_ATTRIBUTE5)
           OR ((recinfo.ATTRIBUTE5 is null) AND (X_ATTRIBUTE5 is null)))
      AND ((recinfo.ATTRIBUTE6 = X_ATTRIBUTE6)
           OR ((recinfo.ATTRIBUTE6 is null) AND (X_ATTRIBUTE6 is null)))
      AND ((recinfo.ATTRIBUTE7 = X_ATTRIBUTE7)
           OR ((recinfo.ATTRIBUTE7 is null) AND (X_ATTRIBUTE7 is null)))
      AND ((recinfo.ATTRIBUTE8 = X_ATTRIBUTE8)
           OR ((recinfo.ATTRIBUTE8 is null) AND (X_ATTRIBUTE8 is null)))
      AND ((recinfo.ATTRIBUTE9 = X_ATTRIBUTE9)
           OR ((recinfo.ATTRIBUTE9 is null) AND (X_ATTRIBUTE9 is null)))
      AND ((recinfo.ATTRIBUTE10 = X_ATTRIBUTE10)
           OR ((recinfo.ATTRIBUTE10 is null) AND (X_ATTRIBUTE10 is null)))
      AND ((recinfo.ATTRIBUTE11 = X_ATTRIBUTE11)
           OR ((recinfo.ATTRIBUTE11 is null) AND (X_ATTRIBUTE11 is null)))
      AND ((recinfo.ATTRIBUTE12 = X_ATTRIBUTE12)
           OR ((recinfo.ATTRIBUTE12 is null) AND (X_ATTRIBUTE12 is null)))
      AND ((recinfo.ATTRIBUTE13 = X_ATTRIBUTE13)
           OR ((recinfo.ATTRIBUTE13 is null) AND (X_ATTRIBUTE13 is null)))
      AND ((recinfo.ATTRIBUTE14 = X_ATTRIBUTE14)
           OR ((recinfo.ATTRIBUTE14 is null) AND (X_ATTRIBUTE14 is null)))
      AND ((recinfo.ATTRIBUTE15 = X_ATTRIBUTE15)
           OR ((recinfo.ATTRIBUTE15 is null) AND (X_ATTRIBUTE15 is null)))
      AND ((recinfo.OBJECT_VERSION_NUMBER = X_OBJECT_VERSION_NUMBER)
           OR ((recinfo.OBJECT_VERSION_NUMBER is null) AND (X_OBJECT_VERSION_NUMBER is null)))
      --AND ((recinfo.NON_ROUTINE_WORKORDER_ID = X_NON_ROUTINE_WORKORDER_ID)
      --     OR ((recinfo.NON_ROUTINE_WORKORDER_ID is null) AND (X_NON_ROUTINE_WORKORDER_ID is null)))
      --AND ((recinfo.COLLECTION_ID = X_COLLECTION_ID)
      --     OR ((recinfo.COLLECTION_ID is null) AND (X_COLLECTION_ID is null)))
      --AND ((recinfo.WORKORDER_MTL_TXN_ID = X_WORKORDER_MTL_TXN_ID)
      --     OR ((recinfo.WORKORDER_MTL_TXN_ID is null) AND (X_WORKORDER_MTL_TXN_ID is null)))
      AND ((recinfo.REMOVAL_DATE = X_REMOVAL_DATE)
           OR ((recinfo.REMOVAL_DATE is null) AND (X_REMOVAL_DATE is null)))
      AND ((recinfo.INSTALLATION_DATE = X_INSTALLATION_DATE)
           OR ((recinfo.INSTALLATION_DATE is null) AND (X_INSTALLATION_DATE is null)))
      AND ((recinfo.ISSUE_MTL_TXN_ID = X_ISSUE_MTL_TXN_ID)
           OR ((recinfo.ISSUE_MTL_TXN_ID is null) AND (X_ISSUE_MTL_TXN_ID is null)))
      AND ((recinfo.RETURN_MTL_TXN_ID = X_RETURN_MTL_TXN_ID)
           OR ((recinfo.RETURN_MTL_TXN_ID is null) AND (X_RETURN_MTL_TXN_ID is null)))
      AND ((recinfo.PART_CHANGE_TYPE = X_PART_CHANGE_TYPE)
           OR ((recinfo.PART_CHANGE_TYPE is null) AND (X_PART_CHANGE_TYPE is null)))
  ) then
    null;
  else
    fnd_message.set_name('FND', 'FORM_RECORD_CHANGED');
    app_exception.raise_exception;
  end if;

  return;
end LOCK_ROW;

procedure UPDATE_ROW (
  X_PART_CHANGE_ID in NUMBER,
  X_UNIT_CONFIG_HEADER_ID in NUMBER,
  X_REMOVED_INSTANCE_ID in NUMBER,
  X_MC_RELATIONSHIP_ID in NUMBER,
  X_REMOVAL_CODE in VARCHAR2,
  --X_STATUS_ID in NUMBER,
  X_REMOVAL_REASON_ID in NUMBER,
  X_INSTALLED_INSTANCE_ID in NUMBER,
  X_WORKORDER_OPERATION_ID in NUMBER,
  X_ATTRIBUTE_CATEGORY in VARCHAR2,
  X_ATTRIBUTE1 in VARCHAR2,
  X_ATTRIBUTE2 in VARCHAR2,
  X_ATTRIBUTE3 in VARCHAR2,
  X_ATTRIBUTE4 in VARCHAR2,
  X_ATTRIBUTE5 in VARCHAR2,
  X_ATTRIBUTE6 in VARCHAR2,
  X_ATTRIBUTE7 in VARCHAR2,
  X_ATTRIBUTE8 in VARCHAR2,
  X_ATTRIBUTE9 in VARCHAR2,
  X_ATTRIBUTE10 in VARCHAR2,
  X_ATTRIBUTE11 in VARCHAR2,
  X_ATTRIBUTE12 in VARCHAR2,
  X_ATTRIBUTE13 in VARCHAR2,
  X_ATTRIBUTE14 in VARCHAR2,
  X_ATTRIBUTE15 in VARCHAR2,
  X_OBJECT_VERSION_NUMBER in NUMBER,
  --X_NON_ROUTINE_WORKORDER_ID in NUMBER,
  --X_COLLECTION_ID in NUMBER,
  --X_WORKORDER_MTL_TXN_ID in NUMBER,
  X_REMOVAL_DATE in DATE,
  X_INSTALLATION_DATE in DATE,
  X_ISSUE_MTL_TXN_ID  in NUMBER,
  X_RETURN_MTL_TXN_ID in NUMBER,
  X_PART_CHANGE_TYPE  in VARCHAR2,
  X_LAST_UPDATE_DATE in DATE,
  X_LAST_UPDATED_BY in NUMBER,
  X_LAST_UPDATE_LOGIN in NUMBER,
  X_QUANTITY in NUMBER
) is
begin
  update AHL_PART_CHANGES set
    UNIT_CONFIG_HEADER_ID = X_UNIT_CONFIG_HEADER_ID,
    REMOVED_INSTANCE_ID = X_REMOVED_INSTANCE_ID,
    MC_RELATIONSHIP_ID = X_MC_RELATIONSHIP_ID,
    REMOVAL_CODE = X_REMOVAL_CODE,
    --STATUS_ID = X_STATUS_ID,
    REMOVAL_REASON_ID = X_REMOVAL_REASON_ID,
    INSTALLED_INSTANCE_ID = X_INSTALLED_INSTANCE_ID,
    WORKORDER_OPERATION_ID = X_WORKORDER_OPERATION_ID,
    ATTRIBUTE_CATEGORY = X_ATTRIBUTE_CATEGORY,
    ATTRIBUTE1 = X_ATTRIBUTE1,
    ATTRIBUTE2 = X_ATTRIBUTE2,
    ATTRIBUTE3 = X_ATTRIBUTE3,
    ATTRIBUTE4 = X_ATTRIBUTE4,
    ATTRIBUTE5 = X_ATTRIBUTE5,
    ATTRIBUTE6 = X_ATTRIBUTE6,
    ATTRIBUTE7 = X_ATTRIBUTE7,
    ATTRIBUTE8 = X_ATTRIBUTE8,
    ATTRIBUTE9 = X_ATTRIBUTE9,
    ATTRIBUTE10 = X_ATTRIBUTE10,
    ATTRIBUTE11 = X_ATTRIBUTE11,
    ATTRIBUTE12 = X_ATTRIBUTE12,
    ATTRIBUTE13 = X_ATTRIBUTE13,
    ATTRIBUTE14 = X_ATTRIBUTE14,
    ATTRIBUTE15 = X_ATTRIBUTE15,
    OBJECT_VERSION_NUMBER = X_OBJECT_VERSION_NUMBER,
    --NON_ROUTINE_WORKORDER_ID = X_NON_ROUTINE_WORKORDER_ID,
    --COLLECTION_ID = X_COLLECTION_ID,
    --WORKORDER_MTL_TXN_ID = X_WORKORDER_MTL_TXN_ID,
    REMOVAL_DATE = X_REMOVAL_DATE,
    INSTALLATION_DATE = X_INSTALLATION_DATE,
    ISSUE_MTL_TXN_ID = X_ISSUE_MTL_TXN_ID,
    RETURN_MTL_TXN_ID = X_RETURN_MTL_TXN_ID,
    PART_CHANGE_TYPE = X_PART_CHANGE_TYPE,
    LAST_UPDATE_DATE = X_LAST_UPDATE_DATE,
    LAST_UPDATED_BY = X_LAST_UPDATED_BY,
    LAST_UPDATE_LOGIN = X_LAST_UPDATE_LOGIN,
    QUANTITY = X_QUANTITY
  where PART_CHANGE_ID = X_PART_CHANGE_ID;

  if (sql%notfound) then
    raise no_data_found;
  end if;

end UPDATE_ROW;

procedure DELETE_ROW (
  X_PART_CHANGE_ID in NUMBER
) is
begin

  delete from AHL_PART_CHANGES
  where PART_CHANGE_ID = X_PART_CHANGE_ID;

  if (sql%notfound) then
    raise no_data_found;
  end if;
end DELETE_ROW;


  procedure ADD_LANGUAGE
  is
begin
null;
end;

end AHL_PART_CHANGES_PKG;




/
