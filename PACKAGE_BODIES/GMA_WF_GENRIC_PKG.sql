--------------------------------------------------------
--  DDL for Package Body GMA_WF_GENRIC_PKG
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE PACKAGE BODY "APPS"."GMA_WF_GENRIC_PKG" AS
/* $Header: GMAWSRTB.pls 115.2 2002/12/03 22:41:38 appldev noship $ */
PROCEDURE SORT_ACT_DATA (P_ACTIVITY_ID NUMBER,
                      SORTED_DATA IN OUT NOCOPY ACT_SORTED_DATA_TBL_TYPE) AS
  TYPE RETRIEVE_DATA IS REF CURSOR;
  RET_DATA   RETRIEVE_DATA;  -- declare cursor variable
  sql_stmt   VARCHAR2(300);
  DATA_REC   GMA_ACTDATA_WF%ROWTYPE;
  COUNTER1   NUMBER(5) := 10;
  l_where1   VARCHAR2(40) := ' AND COLUMN_VALUE1 IS NOT NULL  ';
  l_where2   VARCHAR2(40) := ' AND COLUMN_VALUE2 IS NOT NULL  ';
  l_where3   VARCHAR2(40) := ' AND COLUMN_VALUE3 IS NOT NULL  ';
  l_where4   VARCHAR2(40) := ' AND COLUMN_VALUE4 IS NOT NULL  ';
  l_where5   VARCHAR2(40) := ' AND COLUMN_VALUE5 IS NOT NULL  ';
  l_where6   VARCHAR2(40) := ' AND COLUMN_VALUE6 IS NOT NULL  ';
  l_where7   VARCHAR2(40) := ' AND COLUMN_VALUE7 IS NOT NULL  ';
  l_where8   VARCHAR2(40) := ' AND COLUMN_VALUE8 IS NOT NULL  ';
  l_where9   VARCHAR2(40) := ' AND COLUMN_VALUE9 IS NOT NULL  ';
  l_where10  VARCHAR2(40) := ' AND COLUMN_VALUE10 IS NOT NULL  ';
  sql_stmt1  VARCHAR2(4000);
  no_cols    NUMBER(5);
  set_where  NUMBER(5);
  i    INTEGER := 1;
BEGIN
  sql_stmt := 'SELECT * FROM GMA_ACTDATA_WF WHERE ACTIVITY_ID = ' ||P_ACTIVITY_ID;
  LOOP
    IF COUNTER1 > 0 THEN
                  /* Make the last column value in hierarchy NULL */
      sql_stmt1 := sql_stmt || l_where1 || l_where2 || l_where3
                  || l_where4 || l_where5 || l_where6
                  || l_where7 || l_where8 || l_where9
                  || l_where10;
      OPEN RET_DATA FOR sql_stmt1;
      LOOP
        FETCH RET_DATA INTO DATA_REC;
        EXIT WHEN RET_DATA%NOTFOUND;
	SORTED_DATA(i).ACTIVITY_ID         :=DATA_REC.ACTIVITY_ID;
	SORTED_DATA(i).COLUMN_NAME1        :=DATA_REC.COLUMN_NAME1;
	SORTED_DATA(i).COLUMN_VALUE1       :=DATA_REC.COLUMN_VALUE1;
	SORTED_DATA(i).COLUMN_NAME2        :=DATA_REC.COLUMN_NAME2;
	SORTED_DATA(i).COLUMN_VALUE2       :=DATA_REC.COLUMN_VALUE2;
	SORTED_DATA(i).COLUMN_NAME3        :=DATA_REC.COLUMN_NAME3;
	SORTED_DATA(i).COLUMN_VALUE3       :=DATA_REC.COLUMN_VALUE3;
	SORTED_DATA(i).COLUMN_NAME4        :=DATA_REC.COLUMN_NAME4;
	SORTED_DATA(i).COLUMN_VALUE4       :=DATA_REC.COLUMN_VALUE4;
	SORTED_DATA(i).COLUMN_NAME5        :=DATA_REC.COLUMN_NAME5;
	SORTED_DATA(i).COLUMN_VALUE5       :=DATA_REC.COLUMN_VALUE5;
	SORTED_DATA(i).COLUMN_NAME6        :=DATA_REC.COLUMN_NAME6;
	SORTED_DATA(i).COLUMN_VALUE6       :=DATA_REC.COLUMN_VALUE6;
	SORTED_DATA(i).COLUMN_NAME7        :=DATA_REC.COLUMN_NAME7;
	SORTED_DATA(i).COLUMN_VALUE7       :=DATA_REC.COLUMN_VALUE7;
	SORTED_DATA(i).COLUMN_NAME8        :=DATA_REC.COLUMN_NAME8;
	SORTED_DATA(i).COLUMN_VALUE8       :=DATA_REC.COLUMN_VALUE8;
	SORTED_DATA(i).COLUMN_NAME9        :=DATA_REC.COLUMN_NAME9;
	SORTED_DATA(i).COLUMN_VALUE9       :=DATA_REC.COLUMN_VALUE9;
	SORTED_DATA(i).COLUMN_NAME10       :=DATA_REC.COLUMN_NAME10;
	SORTED_DATA(i).COLUMN_VALUE10      :=DATA_REC.COLUMN_VALUE10;
	SORTED_DATA(i).ROLE                :=DATA_REC.ROLE;
	SORTED_DATA(i).LAST_UPDATE_LOGIN   :=DATA_REC.LAST_UPDATE_LOGIN;
	SORTED_DATA(i).LAST_UPDATED_BY     :=DATA_REC.LAST_UPDATED_BY;
	SORTED_DATA(i).CREATED_BY          :=DATA_REC.CREATED_BY;
	SORTED_DATA(i).CREATION_DATE       :=DATA_REC.CREATION_DATE;
	SORTED_DATA(i).LAST_UPDATE_DATE    :=DATA_REC.LAST_UPDATE_DATE;
	SORTED_DATA(i).ENABLE_FLAG         :=DATA_REC.ENABLE_FLAG;
      UPDATE GMA_ACTDATA_WF
      SET SORT_ORDER = i
      WHERE ACTIVITY_ID          = DATA_REC.ACTIVITY_ID
	  AND NVL(COLUMN_VALUE1,0) = NVL(DATA_REC.COLUMN_VALUE1,0)
	  AND NVL(COLUMN_VALUE2,0) = NVL(DATA_REC.COLUMN_VALUE2,0)
	  AND NVL(COLUMN_VALUE3,0) =NVL(DATA_REC.COLUMN_VALUE3,0)
	  AND NVL(COLUMN_VALUE4,0) =NVL(DATA_REC.COLUMN_VALUE4,0)
	  AND NVL(COLUMN_VALUE5,0) =NVL(DATA_REC.COLUMN_VALUE5,0)
	  AND NVL(COLUMN_VALUE6,0) =NVL(DATA_REC.COLUMN_VALUE6,0)
	  AND NVL(COLUMN_VALUE7,0) =NVL(DATA_REC.COLUMN_VALUE7,0)
	  AND NVL(COLUMN_VALUE8,0) =NVL(DATA_REC.COLUMN_VALUE8,0)
	  AND NVL(COLUMN_VALUE9,0) =NVL(DATA_REC.COLUMN_VALUE9,0)
	  AND NVL(COLUMN_VALUE10,0)=NVL(DATA_REC.COLUMN_VALUE10,0);
             i:=i+1;
      END LOOP;
      CLOSE RET_DATA;
      IF  COUNTER1 = 10 THEN
          l_where10 :=  ' AND COLUMN_VALUE10 IS NULL  ';
      ELSIF COUNTER1 = 9 THEN
          l_where9 :=  ' AND COLUMN_VALUE9 IS NULL  ';
      ELSIF COUNTER1 = 8 THEN
          l_where8 :=  ' AND COLUMN_VALUE8 IS NULL  ';
      ELSIF COUNTER1 = 7 THEN
          l_where7 :=  ' AND COLUMN_VALUE7 IS NULL  ';
      ELSIF COUNTER1 = 6 THEN
          l_where6 :=  ' AND COLUMN_VALUE6 IS NULL  ';
      ELSIF COUNTER1 = 5 THEN
          l_where5 :=  ' AND COLUMN_VALUE5 IS NULL  ';
      ELSIF COUNTER1 = 4 THEN
          l_where4 :=  ' AND COLUMN_VALUE4 IS NULL  ';
      ELSIF COUNTER1 = 3 THEN
          l_where3 :=  ' AND COLUMN_VALUE3 IS NULL  ';
      ELSIF COUNTER1 = 2 THEN
          l_where2 :=  ' AND COLUMN_VALUE2 IS NULL  ';
      ELSIF COUNTER1 = 1 THEN
          l_where1 :=  ' AND COLUMN_VALUE1 IS NULL  ';
      END IF;
      COUNTER1 := COUNTER1 - 1;
    ELSE
      EXIT;
    END IF;
  END LOOP;
  SELECT count(*) INTO no_cols
  from  GMA_ACTCOL_WF_B
  WHERE ACTIVITY_ID = P_ACTIVITY_ID;
  l_where1   := ' AND COLUMN_VALUE1 IS NULL  ';
  l_where2   := ' AND COLUMN_VALUE2 IS NOT NULL  ';
  l_where3   := ' AND COLUMN_VALUE3 IS NOT NULL  ';
  l_where4   := ' AND COLUMN_VALUE4 IS NOT NULL  ';
  l_where5   := ' AND COLUMN_VALUE5 IS NOT NULL  ';
  l_where6   := ' AND COLUMN_VALUE6 IS NOT NULL  ';
  l_where7   := ' AND COLUMN_VALUE7 IS NOT NULL  ';
  l_where8   := ' AND COLUMN_VALUE8 IS NOT NULL  ';
  l_where9   := ' AND COLUMN_VALUE9 IS NOT NULL  ';
  l_where10  := ' AND COLUMN_VALUE10 IS NOT NULL  ';
  COUNTER1 := 10;
  set_where := no_cols;
  no_cols := 10 - no_cols;
  LOOP
    IF no_cols >0 THEN
       IF  COUNTER1 = 10 THEN
          l_where10 :=  '  ';
      ELSIF COUNTER1 = 9 THEN
          l_where9 :=  '   ';
      ELSIF COUNTER1 = 8 THEN
          l_where8 :=  '   ';
      ELSIF COUNTER1 = 7 THEN
          l_where7 :=  '   ';
      ELSIF COUNTER1 = 6 THEN
          l_where6 :=  '   ';
      ELSIF COUNTER1 = 5 THEN
          l_where5 :=  '   ';
      ELSIF COUNTER1 = 4 THEN
          l_where4 :=  '  ';
      ELSIF COUNTER1 = 3 THEN
          l_where3 :=  '  ';
      ELSIF COUNTER1 = 2 THEN
          l_where2 :=  '  ';
      ELSIF COUNTER1 = 1 THEN
          l_where1 :=  '  ';
      END IF;
      no_cols := no_cols - 1;
      counter1 := counter1 -1;
    ELSE
      EXIT;
    END IF;
  END LOOP;
  COUNTER1 := 1;
  LOOP
    IF COUNTER1 <= Set_where THEN
                  /* Make the last column value in hierarchy NULL */
      sql_stmt1 := sql_stmt || l_where1 || l_where2 || l_where3
                  || l_where4 || l_where5 || l_where6
                  || l_where7 || l_where8 || l_where9
                  || l_where10;
      OPEN RET_DATA FOR sql_stmt1;
      LOOP
        FETCH RET_DATA INTO DATA_REC;
        EXIT WHEN RET_DATA%NOTFOUND;
	SORTED_DATA(i).ACTIVITY_ID         :=DATA_REC.ACTIVITY_ID;
	SORTED_DATA(i).COLUMN_NAME1        :=DATA_REC.COLUMN_NAME1;
	SORTED_DATA(i).COLUMN_VALUE1       :=DATA_REC.COLUMN_VALUE1;
	SORTED_DATA(i).COLUMN_NAME2        :=DATA_REC.COLUMN_NAME2;
	SORTED_DATA(i).COLUMN_VALUE2       :=DATA_REC.COLUMN_VALUE2;
	SORTED_DATA(i).COLUMN_NAME3        :=DATA_REC.COLUMN_NAME3;
	SORTED_DATA(i).COLUMN_VALUE3       :=DATA_REC.COLUMN_VALUE3;
	SORTED_DATA(i).COLUMN_NAME4        :=DATA_REC.COLUMN_NAME4;
	SORTED_DATA(i).COLUMN_VALUE4       :=DATA_REC.COLUMN_VALUE4;
	SORTED_DATA(i).COLUMN_NAME5        :=DATA_REC.COLUMN_NAME5;
	SORTED_DATA(i).COLUMN_VALUE5       :=DATA_REC.COLUMN_VALUE5;
	SORTED_DATA(i).COLUMN_NAME6        :=DATA_REC.COLUMN_NAME6;
	SORTED_DATA(i).COLUMN_VALUE6       :=DATA_REC.COLUMN_VALUE6;
	SORTED_DATA(i).COLUMN_NAME7        :=DATA_REC.COLUMN_NAME7;
	SORTED_DATA(i).COLUMN_VALUE7       :=DATA_REC.COLUMN_VALUE7;
	SORTED_DATA(i).COLUMN_NAME8        :=DATA_REC.COLUMN_NAME8;
	SORTED_DATA(i).COLUMN_VALUE8       :=DATA_REC.COLUMN_VALUE8;
	SORTED_DATA(i).COLUMN_NAME9        :=DATA_REC.COLUMN_NAME9;
	SORTED_DATA(i).COLUMN_VALUE9       :=DATA_REC.COLUMN_VALUE9;
	SORTED_DATA(i).COLUMN_NAME10       :=DATA_REC.COLUMN_NAME10;
	SORTED_DATA(i).COLUMN_VALUE10      :=DATA_REC.COLUMN_VALUE10;
	SORTED_DATA(i).ROLE                :=DATA_REC.ROLE;
	SORTED_DATA(i).LAST_UPDATE_LOGIN   :=DATA_REC.LAST_UPDATE_LOGIN;
	SORTED_DATA(i).LAST_UPDATED_BY     :=DATA_REC.LAST_UPDATED_BY;
	SORTED_DATA(i).CREATED_BY          :=DATA_REC.CREATED_BY;
	SORTED_DATA(i).CREATION_DATE       :=DATA_REC.CREATION_DATE;
	SORTED_DATA(i).LAST_UPDATE_DATE    :=DATA_REC.LAST_UPDATE_DATE;
	SORTED_DATA(i).ENABLE_FLAG         :=DATA_REC.ENABLE_FLAG;
      UPDATE GMA_ACTDATA_WF
      SET SORT_ORDER = i
      WHERE ACTIVITY_ID          = DATA_REC.ACTIVITY_ID
	  AND NVL(COLUMN_VALUE1,0) = NVL(DATA_REC.COLUMN_VALUE1,0)
	  AND NVL(COLUMN_VALUE2,0) = NVL(DATA_REC.COLUMN_VALUE2,0)
	  AND NVL(COLUMN_VALUE3,0) =NVL(DATA_REC.COLUMN_VALUE3,0)
	  AND NVL(COLUMN_VALUE4,0) =NVL(DATA_REC.COLUMN_VALUE4,0)
	  AND NVL(COLUMN_VALUE5,0) =NVL(DATA_REC.COLUMN_VALUE5,0)
	  AND NVL(COLUMN_VALUE6,0) =NVL(DATA_REC.COLUMN_VALUE6,0)
	  AND NVL(COLUMN_VALUE7,0) =NVL(DATA_REC.COLUMN_VALUE7,0)
	  AND NVL(COLUMN_VALUE8,0) =NVL(DATA_REC.COLUMN_VALUE8,0)
	  AND NVL(COLUMN_VALUE9,0) =NVL(DATA_REC.COLUMN_VALUE9,0)
	  AND NVL(COLUMN_VALUE10,0)=NVL(DATA_REC.COLUMN_VALUE10,0);
        i:=i+1;
      END LOOP;
      CLOSE RET_DATA;
      COUNTER1 := COUNTER1 + 1;
      IF  COUNTER1 = 10 THEN
          l_where10 :=  ' AND COLUMN_VALUE10 IS NULL  ';
      ELSIF COUNTER1 = 9 THEN
          l_where9 :=  ' AND COLUMN_VALUE9 IS NULL  ';
      ELSIF COUNTER1 = 8 THEN
          l_where8 :=  ' AND COLUMN_VALUE8 IS NULL  ';
      ELSIF COUNTER1 = 7 THEN
          l_where7 :=  ' AND COLUMN_VALUE7 IS NULL  ';
      ELSIF COUNTER1 = 6 THEN
          l_where6 :=  ' AND COLUMN_VALUE6 IS NULL  ';
      ELSIF COUNTER1 = 5 THEN
          l_where5 :=  ' AND COLUMN_VALUE5 IS NULL  ';
      ELSIF COUNTER1 = 4 THEN
          l_where4 :=  ' AND COLUMN_VALUE4 IS NULL  ';
      ELSIF COUNTER1 = 3 THEN
          l_where3 :=  ' AND COLUMN_VALUE3 IS NULL  ';
      ELSIF COUNTER1 = 2 THEN
          l_where2 :=  ' AND COLUMN_VALUE2 IS NULL  ';
      ELSIF COUNTER1 = 1 THEN
          l_where1 :=  ' AND COLUMN_VALUE1 IS NULL  ';
      END IF;
    ELSE
      EXIT;
    END IF;
  END LOOP;
END;
PROCEDURE SORT_PROC_DATA (P_WF_ITEM_TYPE VARCHAR2,
                          P_PROCESS_NAME VARCHAR2,
                      SORTED_DATA IN OUT NOCOPY PROC_SORTED_DATA_TBL_TYPE)  IS
  TYPE RETRIEVE_DATA IS REF CURSOR;
  RET_DATA   RETRIEVE_DATA;  -- declare cursor variable
  sql_stmt   VARCHAR2(300);
  DATA_REC   GMA_PROCDATA_WF%ROWTYPE;
  COUNTER1   NUMBER(5) := 10;
  l_where1   VARCHAR2(40) := ' AND COLUMN_VALUE1 IS NOT NULL  ';
  l_where2   VARCHAR2(40) := ' AND COLUMN_VALUE2 IS NOT NULL  ';
  l_where3   VARCHAR2(40) := ' AND COLUMN_VALUE3 IS NOT NULL  ';
  l_where4   VARCHAR2(40) := ' AND COLUMN_VALUE4 IS NOT NULL  ';
  l_where5   VARCHAR2(40) := ' AND COLUMN_VALUE5 IS NOT NULL  ';
  l_where6   VARCHAR2(40) := ' AND COLUMN_VALUE6 IS NOT NULL  ';
  l_where7   VARCHAR2(40) := ' AND COLUMN_VALUE7 IS NOT NULL  ';
  l_where8   VARCHAR2(40) := ' AND COLUMN_VALUE8 IS NOT NULL  ';
  l_where9   VARCHAR2(40) := ' AND COLUMN_VALUE9 IS NOT NULL  ';
  l_where10  VARCHAR2(40) := ' AND COLUMN_VALUE10 IS NOT NULL  ';
  sql_stmt1  VARCHAR2(4000);
  no_cols    NUMBER(5);
  set_where  NUMBER(5);
  i    INTEGER := 1;
BEGIN
  sql_stmt := 'SELECT * FROM GMA_PROCDATA_WF WHERE WF_ITEM_TYPE = ' ||''''||P_WF_ITEM_TYPE ||'''' ||
              '   AND  PROCESS_NAME  = ' || ''''||P_PROCESS_NAME ||'''' ||'   ';
  LOOP
    IF COUNTER1 > 0 THEN
                  /* Make the last column value in hierarchy NULL */
      sql_stmt1 := sql_stmt || l_where1 || l_where2 || l_where3
                  || l_where4 || l_where5 || l_where6
                  || l_where7 || l_where8 || l_where9
                  || l_where10;
      OPEN RET_DATA FOR sql_stmt1;
      LOOP
        FETCH RET_DATA INTO DATA_REC;
        EXIT WHEN RET_DATA%NOTFOUND;
	SORTED_DATA(i).WF_ITEM_TYPE        :=DATA_REC.WF_ITEM_TYPE;
	SORTED_DATA(i).PROCESS_NAME        :=DATA_REC.PROCESS_NAME;
	SORTED_DATA(i).COLUMN_NAME1        :=DATA_REC.COLUMN_NAME1;
	SORTED_DATA(i).COLUMN_VALUE1       :=DATA_REC.COLUMN_VALUE1;
	SORTED_DATA(i).COLUMN_NAME2        :=DATA_REC.COLUMN_NAME2;
	SORTED_DATA(i).COLUMN_VALUE2       :=DATA_REC.COLUMN_VALUE2;
	SORTED_DATA(i).COLUMN_NAME3        :=DATA_REC.COLUMN_NAME3;
	SORTED_DATA(i).COLUMN_VALUE3       :=DATA_REC.COLUMN_VALUE3;
	SORTED_DATA(i).COLUMN_NAME4        :=DATA_REC.COLUMN_NAME4;
	SORTED_DATA(i).COLUMN_VALUE4       :=DATA_REC.COLUMN_VALUE4;
	SORTED_DATA(i).COLUMN_NAME5        :=DATA_REC.COLUMN_NAME5;
	SORTED_DATA(i).COLUMN_VALUE5       :=DATA_REC.COLUMN_VALUE5;
	SORTED_DATA(i).COLUMN_NAME6        :=DATA_REC.COLUMN_NAME6;
	SORTED_DATA(i).COLUMN_VALUE6       :=DATA_REC.COLUMN_VALUE6;
	SORTED_DATA(i).COLUMN_NAME7        :=DATA_REC.COLUMN_NAME7;
	SORTED_DATA(i).COLUMN_VALUE7       :=DATA_REC.COLUMN_VALUE7;
	SORTED_DATA(i).COLUMN_NAME8        :=DATA_REC.COLUMN_NAME8;
	SORTED_DATA(i).COLUMN_VALUE8       :=DATA_REC.COLUMN_VALUE8;
	SORTED_DATA(i).COLUMN_NAME9        :=DATA_REC.COLUMN_NAME9;
	SORTED_DATA(i).COLUMN_VALUE9       :=DATA_REC.COLUMN_VALUE9;
	SORTED_DATA(i).COLUMN_NAME10       :=DATA_REC.COLUMN_NAME10;
	SORTED_DATA(i).COLUMN_VALUE10      :=DATA_REC.COLUMN_VALUE10;
	SORTED_DATA(i).ROLE                :=DATA_REC.ROLE;
	SORTED_DATA(i).LAST_UPDATE_LOGIN   :=DATA_REC.LAST_UPDATE_LOGIN;
	SORTED_DATA(i).LAST_UPDATED_BY     :=DATA_REC.LAST_UPDATED_BY;
	SORTED_DATA(i).CREATED_BY          :=DATA_REC.CREATED_BY;
	SORTED_DATA(i).CREATION_DATE       :=DATA_REC.CREATION_DATE;
	SORTED_DATA(i).LAST_UPDATE_DATE    :=DATA_REC.LAST_UPDATE_DATE;
	SORTED_DATA(i).ENABLE_FLAG         :=DATA_REC.ENABLE_FLAG;
      UPDATE GMA_PROCDATA_WF
      SET SORT_ORDER = i
      WHERE WF_ITEM_TYPE          = DATA_REC.WF_ITEM_TYPE
        AND PROCESS_NAME          = DATA_REC.PROCESS_NAME
	  AND NVL(COLUMN_VALUE1,0) = NVL(DATA_REC.COLUMN_VALUE1,0)
	  AND NVL(COLUMN_VALUE2,0) = NVL(DATA_REC.COLUMN_VALUE2,0)
	  AND NVL(COLUMN_VALUE3,0) =NVL(DATA_REC.COLUMN_VALUE3,0)
	  AND NVL(COLUMN_VALUE4,0) =NVL(DATA_REC.COLUMN_VALUE4,0)
	  AND NVL(COLUMN_VALUE5,0) =NVL(DATA_REC.COLUMN_VALUE5,0)
	  AND NVL(COLUMN_VALUE6,0) =NVL(DATA_REC.COLUMN_VALUE6,0)
	  AND NVL(COLUMN_VALUE7,0) =NVL(DATA_REC.COLUMN_VALUE7,0)
	  AND NVL(COLUMN_VALUE8,0) =NVL(DATA_REC.COLUMN_VALUE8,0)
	  AND NVL(COLUMN_VALUE9,0) =NVL(DATA_REC.COLUMN_VALUE9,0)
	  AND NVL(COLUMN_VALUE10,0)=NVL(DATA_REC.COLUMN_VALUE10,0);
        i:=i+1;
      END LOOP;
      CLOSE RET_DATA;
      IF  COUNTER1 = 10 THEN
          l_where10 :=  ' AND COLUMN_VALUE10 IS NULL  ';
      ELSIF COUNTER1 = 9 THEN
          l_where9 :=  ' AND COLUMN_VALUE9 IS NULL  ';
      ELSIF COUNTER1 = 8 THEN
          l_where8 :=  ' AND COLUMN_VALUE8 IS NULL  ';
      ELSIF COUNTER1 = 7 THEN
          l_where7 :=  ' AND COLUMN_VALUE7 IS NULL  ';
      ELSIF COUNTER1 = 6 THEN
          l_where6 :=  ' AND COLUMN_VALUE6 IS NULL  ';
      ELSIF COUNTER1 = 5 THEN
          l_where5 :=  ' AND COLUMN_VALUE5 IS NULL  ';
      ELSIF COUNTER1 = 4 THEN
          l_where4 :=  ' AND COLUMN_VALUE4 IS NULL  ';
      ELSIF COUNTER1 = 3 THEN
          l_where3 :=  ' AND COLUMN_VALUE3 IS NULL  ';
      ELSIF COUNTER1 = 2 THEN
          l_where2 :=  ' AND COLUMN_VALUE2 IS NULL  ';
      ELSIF COUNTER1 = 1 THEN
          l_where1 :=  ' AND COLUMN_VALUE1 IS NULL  ';
      END IF;
      COUNTER1 := COUNTER1 - 1;
    ELSE
      EXIT;
    END IF;
  END LOOP;
  SELECT count(*) INTO no_cols
  from  GMA_PROCCOL_WF_B
  WHERE WF_ITEM_TYPE = P_WF_ITEM_TYPE
    AND PROCESS_NAME = P_PROCESS_NAME;
  l_where1   := ' AND COLUMN_VALUE1 IS NULL  ';
  l_where2   := ' AND COLUMN_VALUE2 IS NOT NULL  ';
  l_where3   := ' AND COLUMN_VALUE3 IS NOT NULL  ';
  l_where4   := ' AND COLUMN_VALUE4 IS NOT NULL  ';
  l_where5   := ' AND COLUMN_VALUE5 IS NOT NULL  ';
  l_where6   := ' AND COLUMN_VALUE6 IS NOT NULL  ';
  l_where7   := ' AND COLUMN_VALUE7 IS NOT NULL  ';
  l_where8   := ' AND COLUMN_VALUE8 IS NOT NULL  ';
  l_where9   := ' AND COLUMN_VALUE9 IS NOT NULL  ';
  l_where10  := ' AND COLUMN_VALUE10 IS NOT NULL  ';
  COUNTER1 := 10;
  set_where := no_cols;
  no_cols := 10 - no_cols;
  LOOP
    IF no_cols >0 THEN
       IF  COUNTER1 = 10 THEN
          l_where10 :=  '  ';
      ELSIF COUNTER1 = 9 THEN
          l_where9 :=  '   ';
      ELSIF COUNTER1 = 8 THEN
          l_where8 :=  '   ';
      ELSIF COUNTER1 = 7 THEN
          l_where7 :=  '   ';
      ELSIF COUNTER1 = 6 THEN
          l_where6 :=  '   ';
      ELSIF COUNTER1 = 5 THEN
          l_where5 :=  '   ';
      ELSIF COUNTER1 = 4 THEN
          l_where4 :=  '  ';
      ELSIF COUNTER1 = 3 THEN
          l_where3 :=  '  ';
      ELSIF COUNTER1 = 2 THEN
          l_where2 :=  '  ';
      ELSIF COUNTER1 = 1 THEN
          l_where1 :=  '  ';
      END IF;
      no_cols := no_cols - 1;
      counter1 := counter1 -1;
    ELSE
      EXIT;
    END IF;
  END LOOP;
  COUNTER1 := 1;
  LOOP
    IF COUNTER1 <= Set_where THEN
                  /* Make the last column value in hierarchy NULL */
      sql_stmt1 := sql_stmt || l_where1 || l_where2 || l_where3
                  || l_where4 || l_where5 || l_where6
                  || l_where7 || l_where8 || l_where9
                  || l_where10;
      OPEN RET_DATA FOR sql_stmt1;
      LOOP
        FETCH RET_DATA INTO DATA_REC;
        EXIT WHEN RET_DATA%NOTFOUND;
	SORTED_DATA(i).WF_ITEM_TYPE        :=DATA_REC.WF_ITEM_TYPE;
	SORTED_DATA(i).PROCESS_NAME        :=DATA_REC.PROCESS_NAME;
	SORTED_DATA(i).COLUMN_NAME1        :=DATA_REC.COLUMN_NAME1;
	SORTED_DATA(i).COLUMN_VALUE1       :=DATA_REC.COLUMN_VALUE1;
	SORTED_DATA(i).COLUMN_NAME2        :=DATA_REC.COLUMN_NAME2;
	SORTED_DATA(i).COLUMN_VALUE2       :=DATA_REC.COLUMN_VALUE2;
	SORTED_DATA(i).COLUMN_NAME3        :=DATA_REC.COLUMN_NAME3;
	SORTED_DATA(i).COLUMN_VALUE3       :=DATA_REC.COLUMN_VALUE3;
	SORTED_DATA(i).COLUMN_NAME4        :=DATA_REC.COLUMN_NAME4;
	SORTED_DATA(i).COLUMN_VALUE4       :=DATA_REC.COLUMN_VALUE4;
	SORTED_DATA(i).COLUMN_NAME5        :=DATA_REC.COLUMN_NAME5;
	SORTED_DATA(i).COLUMN_VALUE5       :=DATA_REC.COLUMN_VALUE5;
	SORTED_DATA(i).COLUMN_NAME6        :=DATA_REC.COLUMN_NAME6;
	SORTED_DATA(i).COLUMN_VALUE6       :=DATA_REC.COLUMN_VALUE6;
	SORTED_DATA(i).COLUMN_NAME7        :=DATA_REC.COLUMN_NAME7;
	SORTED_DATA(i).COLUMN_VALUE7       :=DATA_REC.COLUMN_VALUE7;
	SORTED_DATA(i).COLUMN_NAME8        :=DATA_REC.COLUMN_NAME8;
	SORTED_DATA(i).COLUMN_VALUE8       :=DATA_REC.COLUMN_VALUE8;
	SORTED_DATA(i).COLUMN_NAME9        :=DATA_REC.COLUMN_NAME9;
	SORTED_DATA(i).COLUMN_VALUE9       :=DATA_REC.COLUMN_VALUE9;
	SORTED_DATA(i).COLUMN_NAME10       :=DATA_REC.COLUMN_NAME10;
	SORTED_DATA(i).COLUMN_VALUE10      :=DATA_REC.COLUMN_VALUE10;
	SORTED_DATA(i).ROLE                :=DATA_REC.ROLE;
	SORTED_DATA(i).LAST_UPDATE_LOGIN   :=DATA_REC.LAST_UPDATE_LOGIN;
	SORTED_DATA(i).LAST_UPDATED_BY     :=DATA_REC.LAST_UPDATED_BY;
	SORTED_DATA(i).CREATED_BY          :=DATA_REC.CREATED_BY;
	SORTED_DATA(i).CREATION_DATE       :=DATA_REC.CREATION_DATE;
	SORTED_DATA(i).LAST_UPDATE_DATE    :=DATA_REC.LAST_UPDATE_DATE;
	SORTED_DATA(i).ENABLE_FLAG         :=DATA_REC.ENABLE_FLAG;
      UPDATE GMA_PROCDATA_WF
      SET SORT_ORDER = i
      WHERE WF_ITEM_TYPE          = DATA_REC.WF_ITEM_TYPE
        AND PROCESS_NAME          = DATA_REC.PROCESS_NAME
	  AND NVL(COLUMN_VALUE1,0) = NVL(DATA_REC.COLUMN_VALUE1,0)
	  AND NVL(COLUMN_VALUE2,0) = NVL(DATA_REC.COLUMN_VALUE2,0)
	  AND NVL(COLUMN_VALUE3,0) =NVL(DATA_REC.COLUMN_VALUE3,0)
	  AND NVL(COLUMN_VALUE4,0) =NVL(DATA_REC.COLUMN_VALUE4,0)
	  AND NVL(COLUMN_VALUE5,0) =NVL(DATA_REC.COLUMN_VALUE5,0)
	  AND NVL(COLUMN_VALUE6,0) =NVL(DATA_REC.COLUMN_VALUE6,0)
	  AND NVL(COLUMN_VALUE7,0) =NVL(DATA_REC.COLUMN_VALUE7,0)
	  AND NVL(COLUMN_VALUE8,0) =NVL(DATA_REC.COLUMN_VALUE8,0)
	  AND NVL(COLUMN_VALUE9,0) =NVL(DATA_REC.COLUMN_VALUE9,0)
	  AND NVL(COLUMN_VALUE10,0)=NVL(DATA_REC.COLUMN_VALUE10,0);
        i:=i+1;
      END LOOP;
      CLOSE RET_DATA;
      COUNTER1 := COUNTER1 + 1;
      IF  COUNTER1 = 10 THEN
          l_where10 :=  ' AND COLUMN_VALUE10 IS NULL  ';
      ELSIF COUNTER1 = 9 THEN
          l_where9 :=  ' AND COLUMN_VALUE9 IS NULL  ';
      ELSIF COUNTER1 = 8 THEN
          l_where8 :=  ' AND COLUMN_VALUE8 IS NULL  ';
      ELSIF COUNTER1 = 7 THEN
          l_where7 :=  ' AND COLUMN_VALUE7 IS NULL  ';
      ELSIF COUNTER1 = 6 THEN
          l_where6 :=  ' AND COLUMN_VALUE6 IS NULL  ';
      ELSIF COUNTER1 = 5 THEN
          l_where5 :=  ' AND COLUMN_VALUE5 IS NULL  ';
      ELSIF COUNTER1 = 4 THEN
          l_where4 :=  ' AND COLUMN_VALUE4 IS NULL  ';
      ELSIF COUNTER1 = 3 THEN
          l_where3 :=  ' AND COLUMN_VALUE3 IS NULL  ';
      ELSIF COUNTER1 = 2 THEN
          l_where2 :=  ' AND COLUMN_VALUE2 IS NULL  ';
      ELSIF COUNTER1 = 1 THEN
          l_where1 :=  ' AND COLUMN_VALUE1 IS NULL  ';
      END IF;
    ELSE
      EXIT;
    END IF;
  END LOOP;
END;
END;



/
