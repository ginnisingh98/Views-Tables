--------------------------------------------------------
--  DDL for Package Body RA_TERMS_TABLE_HANDLER
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE PACKAGE BODY "APPS"."RA_TERMS_TABLE_HANDLER" as
/* $Header: ARPRTMSB.pls 120.2 2006/01/20 18:44:44 jypandey ship $ */
procedure INSERT_ROW (
  X_ROWID in out NOCOPY VARCHAR2,
  X_TERM_ID in NUMBER,
  X_CREDIT_CHECK_FLAG in VARCHAR2,
  X_PREPAYMENT_FLAG in VARCHAR2,
  X_BILLING_CYCLE_ID in NUMBER,
  X_PRINTING_LEAD_DAYS in NUMBER,
  X_START_DATE_ACTIVE in DATE,
  X_END_DATE_ACTIVE in DATE,
  X_ATTRIBUTE_CATEGORY in VARCHAR2,
  X_ATTRIBUTE1 in VARCHAR2,
  X_ATTRIBUTE2 in VARCHAR2,
  X_ATTRIBUTE3 in VARCHAR2,
  X_ATTRIBUTE4 in VARCHAR2,
  X_ATTRIBUTE5 in VARCHAR2,
  X_ATTRIBUTE6 in VARCHAR2,
  X_ATTRIBUTE7 in VARCHAR2,
  X_ATTRIBUTE8 in VARCHAR2,
  X_ATTRIBUTE9 in VARCHAR2,
  X_ATTRIBUTE10 in VARCHAR2,
  X_BASE_AMOUNT in NUMBER,
  X_CALC_DISCOUNT_ON_LINES_FLAG in VARCHAR2,
  X_FIRST_INSTALLMENT_CODE in VARCHAR2,
  X_IN_USE in VARCHAR2,
  X_PARTIAL_DISCOUNT_FLAG in VARCHAR2,
  X_ATTRIBUTE11 in VARCHAR2,
  X_ATTRIBUTE12 in VARCHAR2,
  X_ATTRIBUTE13 in VARCHAR2,
  X_ATTRIBUTE14 in VARCHAR2,
  X_ATTRIBUTE15 in VARCHAR2,
  X_NAME in VARCHAR2,
  X_DESCRIPTION in VARCHAR2,
  X_CREATION_DATE in DATE,
  X_CREATED_BY in NUMBER,
  X_LAST_UPDATE_DATE in DATE,
  X_LAST_UPDATED_BY in NUMBER,
  X_LAST_UPDATE_LOGIN in NUMBER
) is
  cursor C is select ROWID from RA_TERMS_B
    where TERM_ID = X_TERM_ID
    ;
begin
  insert into RA_TERMS_B (
    TERM_ID,
    CREDIT_CHECK_FLAG,
    PREPAYMENT_FLAG,
    BILLING_CYCLE_ID,
    PRINTING_LEAD_DAYS,
    START_DATE_ACTIVE,
    END_DATE_ACTIVE,
    ATTRIBUTE_CATEGORY,
    ATTRIBUTE1,
    ATTRIBUTE2,
    ATTRIBUTE3,
    ATTRIBUTE4,
    ATTRIBUTE5,
    ATTRIBUTE6,
    ATTRIBUTE7,
    ATTRIBUTE8,
    ATTRIBUTE9,
    ATTRIBUTE10,
    BASE_AMOUNT,
    CALC_DISCOUNT_ON_LINES_FLAG,
    FIRST_INSTALLMENT_CODE,
    IN_USE,
    PARTIAL_DISCOUNT_FLAG,
    ATTRIBUTE11,
    ATTRIBUTE12,
    ATTRIBUTE13,
    ATTRIBUTE14,
    ATTRIBUTE15,
    CREATION_DATE,
    CREATED_BY,
    LAST_UPDATE_DATE,
    LAST_UPDATED_BY,
    LAST_UPDATE_LOGIN
  ) values (
    X_TERM_ID,
    X_CREDIT_CHECK_FLAG,
    X_PREPAYMENT_FLAG,
    X_BILLING_CYCLE_ID,
    X_PRINTING_LEAD_DAYS,
    X_START_DATE_ACTIVE,
    X_END_DATE_ACTIVE,
    X_ATTRIBUTE_CATEGORY,
    X_ATTRIBUTE1,
    X_ATTRIBUTE2,
    X_ATTRIBUTE3,
    X_ATTRIBUTE4,
    X_ATTRIBUTE5,
    X_ATTRIBUTE6,
    X_ATTRIBUTE7,
    X_ATTRIBUTE8,
    X_ATTRIBUTE9,
    X_ATTRIBUTE10,
    X_BASE_AMOUNT,
    X_CALC_DISCOUNT_ON_LINES_FLAG,
    X_FIRST_INSTALLMENT_CODE,
    X_IN_USE,
    X_PARTIAL_DISCOUNT_FLAG,
    X_ATTRIBUTE11,
    X_ATTRIBUTE12,
    X_ATTRIBUTE13,
    X_ATTRIBUTE14,
    X_ATTRIBUTE15,
    X_CREATION_DATE,
    X_CREATED_BY,
    X_LAST_UPDATE_DATE,
    X_LAST_UPDATED_BY,
    X_LAST_UPDATE_LOGIN
  );

  insert into RA_TERMS_TL (
    TERM_ID,
    DESCRIPTION,
    NAME,
    LAST_UPDATE_DATE,
    CREATION_DATE,
    CREATED_BY,
    LAST_UPDATED_BY,
    LAST_UPDATE_LOGIN,
    LANGUAGE,
    SOURCE_LANG
  ) select
    X_TERM_ID,
    X_DESCRIPTION,
    X_NAME,
    X_LAST_UPDATE_DATE,
    X_CREATION_DATE,
    X_CREATED_BY,
    X_LAST_UPDATED_BY,
    X_LAST_UPDATE_LOGIN,
    L.LANGUAGE_CODE,
    userenv('LANG')
  from FND_LANGUAGES L
  where L.INSTALLED_FLAG in ('I', 'B')
  and not exists
    (select NULL
    from RA_TERMS_TL T
    where T.TERM_ID = X_TERM_ID
    and T.LANGUAGE = L.LANGUAGE_CODE);

  open c;
  fetch c into X_ROWID;
  if (c%notfound) then
    close c;
    raise no_data_found;
  end if;
  close c;

end INSERT_ROW;

procedure LOCK_ROW (
  X_TERM_ID in NUMBER,
  X_CREDIT_CHECK_FLAG in VARCHAR2,
  X_PREPAYMENT_FLAG in VARCHAR2,
  X_BILLING_CYCLE_ID in NUMBER,
  X_PRINTING_LEAD_DAYS in NUMBER,
  X_START_DATE_ACTIVE in DATE,
  X_END_DATE_ACTIVE in DATE,
  X_ATTRIBUTE_CATEGORY in VARCHAR2,
  X_ATTRIBUTE1 in VARCHAR2,
  X_ATTRIBUTE2 in VARCHAR2,
  X_ATTRIBUTE3 in VARCHAR2,
  X_ATTRIBUTE4 in VARCHAR2,
  X_ATTRIBUTE5 in VARCHAR2,
  X_ATTRIBUTE6 in VARCHAR2,
  X_ATTRIBUTE7 in VARCHAR2,
  X_ATTRIBUTE8 in VARCHAR2,
  X_ATTRIBUTE9 in VARCHAR2,
  X_ATTRIBUTE10 in VARCHAR2,
  X_BASE_AMOUNT in NUMBER,
  X_CALC_DISCOUNT_ON_LINES_FLAG in VARCHAR2,
  X_FIRST_INSTALLMENT_CODE in VARCHAR2,
  X_IN_USE in VARCHAR2,
  X_PARTIAL_DISCOUNT_FLAG in VARCHAR2,
  X_ATTRIBUTE11 in VARCHAR2,
  X_ATTRIBUTE12 in VARCHAR2,
  X_ATTRIBUTE13 in VARCHAR2,
  X_ATTRIBUTE14 in VARCHAR2,
  X_ATTRIBUTE15 in VARCHAR2,
  X_NAME in VARCHAR2,
  X_DESCRIPTION in VARCHAR2
) is
--nvl added for prepayment_flag because this can contain null for existing records
  cursor c is select
      CREDIT_CHECK_FLAG,
      NVL(PREPAYMENT_FLAG,'N') PREPAYMENT_FLAG,
      BILLING_CYCLE_ID,
      PRINTING_LEAD_DAYS,
      START_DATE_ACTIVE,
      END_DATE_ACTIVE,
      ATTRIBUTE_CATEGORY,
      ATTRIBUTE1,
      ATTRIBUTE2,
      ATTRIBUTE3,
      ATTRIBUTE4,
      ATTRIBUTE5,
      ATTRIBUTE6,
      ATTRIBUTE7,
      ATTRIBUTE8,
      ATTRIBUTE9,
      ATTRIBUTE10,
      BASE_AMOUNT,
      CALC_DISCOUNT_ON_LINES_FLAG,
      FIRST_INSTALLMENT_CODE,
      IN_USE,
      PARTIAL_DISCOUNT_FLAG,
      ATTRIBUTE11,
      ATTRIBUTE12,
      ATTRIBUTE13,
      ATTRIBUTE14,
      ATTRIBUTE15
    from RA_TERMS_B
    where TERM_ID = X_TERM_ID
    for update of TERM_ID nowait;
  recinfo c%rowtype;

  cursor c1 is select
      NAME,
      DESCRIPTION,
      decode(LANGUAGE, userenv('LANG'), 'Y', 'N') BASELANG
    from RA_TERMS_TL
    where TERM_ID = X_TERM_ID
    and userenv('LANG') in (LANGUAGE, SOURCE_LANG)
    for update of TERM_ID nowait;
begin
  open c;
  fetch c into recinfo;
  if (c%notfound) then
    close c;
    fnd_message.set_name('FND', 'FORM_RECORD_DELETED');
    app_exception.raise_exception;
  end if;
  close c;
  if (    ((recinfo.CREDIT_CHECK_FLAG = X_CREDIT_CHECK_FLAG)
           OR ((recinfo.CREDIT_CHECK_FLAG is null) AND (X_CREDIT_CHECK_FLAG is null)))
      AND ((recinfo.PREPAYMENT_FLAG = X_PREPAYMENT_FLAG)
           OR ((recinfo.PREPAYMENT_FLAG is null) AND (X_PREPAYMENT_FLAG is null)))
      AND ((recinfo.BILLING_CYCLE_ID = X_BILLING_CYCLE_ID)
           OR ((recinfo.BILLING_CYCLE_ID is null) AND (X_BILLING_CYCLE_ID is null)))
      AND ((recinfo.PRINTING_LEAD_DAYS = X_PRINTING_LEAD_DAYS)
           OR ((recinfo.PRINTING_LEAD_DAYS is null) AND (X_PRINTING_LEAD_DAYS is null)))
      AND (recinfo.START_DATE_ACTIVE = X_START_DATE_ACTIVE)
      AND ((recinfo.END_DATE_ACTIVE = X_END_DATE_ACTIVE)
           OR ((recinfo.END_DATE_ACTIVE is null) AND (X_END_DATE_ACTIVE is null)))
      AND ((recinfo.ATTRIBUTE_CATEGORY = X_ATTRIBUTE_CATEGORY)
           OR ((recinfo.ATTRIBUTE_CATEGORY is null) AND (X_ATTRIBUTE_CATEGORY is null)))
      AND ((recinfo.ATTRIBUTE1 = X_ATTRIBUTE1)
           OR ((recinfo.ATTRIBUTE1 is null) AND (X_ATTRIBUTE1 is null)))
      AND ((recinfo.ATTRIBUTE2 = X_ATTRIBUTE2)
           OR ((recinfo.ATTRIBUTE2 is null) AND (X_ATTRIBUTE2 is null)))
      AND ((recinfo.ATTRIBUTE3 = X_ATTRIBUTE3)
           OR ((recinfo.ATTRIBUTE3 is null) AND (X_ATTRIBUTE3 is null)))
      AND ((recinfo.ATTRIBUTE4 = X_ATTRIBUTE4)
           OR ((recinfo.ATTRIBUTE4 is null) AND (X_ATTRIBUTE4 is null)))
      AND ((recinfo.ATTRIBUTE5 = X_ATTRIBUTE5)
           OR ((recinfo.ATTRIBUTE5 is null) AND (X_ATTRIBUTE5 is null)))
      AND ((recinfo.ATTRIBUTE6 = X_ATTRIBUTE6)
           OR ((recinfo.ATTRIBUTE6 is null) AND (X_ATTRIBUTE6 is null)))
      AND ((recinfo.ATTRIBUTE7 = X_ATTRIBUTE7)
           OR ((recinfo.ATTRIBUTE7 is null) AND (X_ATTRIBUTE7 is null)))
      AND ((recinfo.ATTRIBUTE8 = X_ATTRIBUTE8)
           OR ((recinfo.ATTRIBUTE8 is null) AND (X_ATTRIBUTE8 is null)))
      AND ((recinfo.ATTRIBUTE9 = X_ATTRIBUTE9)
           OR ((recinfo.ATTRIBUTE9 is null) AND (X_ATTRIBUTE9 is null)))
      AND ((recinfo.ATTRIBUTE10 = X_ATTRIBUTE10)
           OR ((recinfo.ATTRIBUTE10 is null) AND (X_ATTRIBUTE10 is null)))
      AND (recinfo.BASE_AMOUNT = X_BASE_AMOUNT)
      AND (recinfo.CALC_DISCOUNT_ON_LINES_FLAG = X_CALC_DISCOUNT_ON_LINES_FLAG)
      AND (recinfo.FIRST_INSTALLMENT_CODE = X_FIRST_INSTALLMENT_CODE)
      AND (recinfo.IN_USE = X_IN_USE)
      AND (recinfo.PARTIAL_DISCOUNT_FLAG = X_PARTIAL_DISCOUNT_FLAG)
      AND ((recinfo.ATTRIBUTE11 = X_ATTRIBUTE11)
           OR ((recinfo.ATTRIBUTE11 is null) AND (X_ATTRIBUTE11 is null)))
      AND ((recinfo.ATTRIBUTE12 = X_ATTRIBUTE12)
           OR ((recinfo.ATTRIBUTE12 is null) AND (X_ATTRIBUTE12 is null)))
      AND ((recinfo.ATTRIBUTE13 = X_ATTRIBUTE13)
           OR ((recinfo.ATTRIBUTE13 is null) AND (X_ATTRIBUTE13 is null)))
      AND ((recinfo.ATTRIBUTE14 = X_ATTRIBUTE14)
           OR ((recinfo.ATTRIBUTE14 is null) AND (X_ATTRIBUTE14 is null)))
      AND ((recinfo.ATTRIBUTE15 = X_ATTRIBUTE15)
           OR ((recinfo.ATTRIBUTE15 is null) AND (X_ATTRIBUTE15 is null)))
  ) then
    null;
  else
    fnd_message.set_name('FND', 'FORM_RECORD_CHANGED');
    app_exception.raise_exception;
  end if;

  for tlinfo in c1 loop
    if (tlinfo.BASELANG = 'Y') then
      if (    (tlinfo.NAME = X_NAME)
          AND ((tlinfo.DESCRIPTION = X_DESCRIPTION)
               OR ((tlinfo.DESCRIPTION is null) AND (X_DESCRIPTION is null)))
      ) then
        null;
      else
        fnd_message.set_name('FND', 'FORM_RECORD_CHANGED');
        app_exception.raise_exception;
      end if;
    end if;
  end loop;
  return;
end LOCK_ROW;

procedure UPDATE_ROW (
  X_TERM_ID in NUMBER,
  X_CREDIT_CHECK_FLAG in VARCHAR2,
  X_PREPAYMENT_FLAG in VARCHAR2,
  X_BILLING_CYCLE_ID in NUMBER,
  X_PRINTING_LEAD_DAYS in NUMBER,
  X_START_DATE_ACTIVE in DATE,
  X_END_DATE_ACTIVE in DATE,
  X_ATTRIBUTE_CATEGORY in VARCHAR2,
  X_ATTRIBUTE1 in VARCHAR2,
  X_ATTRIBUTE2 in VARCHAR2,
  X_ATTRIBUTE3 in VARCHAR2,
  X_ATTRIBUTE4 in VARCHAR2,
  X_ATTRIBUTE5 in VARCHAR2,
  X_ATTRIBUTE6 in VARCHAR2,
  X_ATTRIBUTE7 in VARCHAR2,
  X_ATTRIBUTE8 in VARCHAR2,
  X_ATTRIBUTE9 in VARCHAR2,
  X_ATTRIBUTE10 in VARCHAR2,
  X_BASE_AMOUNT in NUMBER,
  X_CALC_DISCOUNT_ON_LINES_FLAG in VARCHAR2,
  X_FIRST_INSTALLMENT_CODE in VARCHAR2,
  X_IN_USE in VARCHAR2,
  X_PARTIAL_DISCOUNT_FLAG in VARCHAR2,
  X_ATTRIBUTE11 in VARCHAR2,
  X_ATTRIBUTE12 in VARCHAR2,
  X_ATTRIBUTE13 in VARCHAR2,
  X_ATTRIBUTE14 in VARCHAR2,
  X_ATTRIBUTE15 in VARCHAR2,
  X_NAME in VARCHAR2,
  X_DESCRIPTION in VARCHAR2,
  X_LAST_UPDATE_DATE in DATE,
  X_LAST_UPDATED_BY in NUMBER,
  X_LAST_UPDATE_LOGIN in NUMBER
) is
begin
  update RA_TERMS_B set
    CREDIT_CHECK_FLAG = X_CREDIT_CHECK_FLAG,
    PREPAYMENT_FLAG = X_PREPAYMENT_FLAG,
    BILLING_CYCLE_ID = X_BILLING_CYCLE_ID,
    PRINTING_LEAD_DAYS = X_PRINTING_LEAD_DAYS,
    START_DATE_ACTIVE = X_START_DATE_ACTIVE,
    END_DATE_ACTIVE = X_END_DATE_ACTIVE,
    ATTRIBUTE_CATEGORY = X_ATTRIBUTE_CATEGORY,
    ATTRIBUTE1 = X_ATTRIBUTE1,
    ATTRIBUTE2 = X_ATTRIBUTE2,
    ATTRIBUTE3 = X_ATTRIBUTE3,
    ATTRIBUTE4 = X_ATTRIBUTE4,
    ATTRIBUTE5 = X_ATTRIBUTE5,
    ATTRIBUTE6 = X_ATTRIBUTE6,
    ATTRIBUTE7 = X_ATTRIBUTE7,
    ATTRIBUTE8 = X_ATTRIBUTE8,
    ATTRIBUTE9 = X_ATTRIBUTE9,
    ATTRIBUTE10 = X_ATTRIBUTE10,
    BASE_AMOUNT = X_BASE_AMOUNT,
    CALC_DISCOUNT_ON_LINES_FLAG = X_CALC_DISCOUNT_ON_LINES_FLAG,
    FIRST_INSTALLMENT_CODE = X_FIRST_INSTALLMENT_CODE,
    IN_USE = X_IN_USE,
    PARTIAL_DISCOUNT_FLAG = X_PARTIAL_DISCOUNT_FLAG,
    ATTRIBUTE11 = X_ATTRIBUTE11,
    ATTRIBUTE12 = X_ATTRIBUTE12,
    ATTRIBUTE13 = X_ATTRIBUTE13,
    ATTRIBUTE14 = X_ATTRIBUTE14,
    ATTRIBUTE15 = X_ATTRIBUTE15,
    LAST_UPDATE_DATE = X_LAST_UPDATE_DATE,
    LAST_UPDATED_BY = X_LAST_UPDATED_BY,
    LAST_UPDATE_LOGIN = X_LAST_UPDATE_LOGIN
  where TERM_ID = X_TERM_ID;

  if (sql%notfound) then
    raise no_data_found;
  end if;

  update RA_TERMS_TL set
    NAME = X_NAME,
    DESCRIPTION = X_DESCRIPTION,
    LAST_UPDATE_DATE = X_LAST_UPDATE_DATE,
    LAST_UPDATED_BY = X_LAST_UPDATED_BY,
    LAST_UPDATE_LOGIN = X_LAST_UPDATE_LOGIN,
    SOURCE_LANG = userenv('LANG')
  where TERM_ID = X_TERM_ID
  and userenv('LANG') in (LANGUAGE, SOURCE_LANG);

  if (sql%notfound) then
    raise no_data_found;
  end if;
end UPDATE_ROW;

procedure DELETE_ROW (
  X_TERM_ID in NUMBER
) is
begin
  delete from RA_TERMS_TL
  where TERM_ID = X_TERM_ID;

  if (sql%notfound) then
    raise no_data_found;
  end if;

  delete from RA_TERMS_B
  where TERM_ID = X_TERM_ID;

  if (sql%notfound) then
    raise no_data_found;
  end if;
end DELETE_ROW;

procedure ADD_LANGUAGE
is
begin
  delete from RA_TERMS_TL T
  where not exists
    (select NULL
    from RA_TERMS_B B
    where B.TERM_ID = T.TERM_ID
    );

  update RA_TERMS_TL T set (
      NAME,
      DESCRIPTION
    ) = (select
      B.NAME,
      B.DESCRIPTION
    from RA_TERMS_TL B
    where B.TERM_ID = T.TERM_ID
    and B.LANGUAGE = T.SOURCE_LANG)
  where (
      T.TERM_ID,
      T.LANGUAGE
  ) in (select
      SUBT.TERM_ID,
      SUBT.LANGUAGE
    from RA_TERMS_TL SUBB, RA_TERMS_TL SUBT
    where SUBB.TERM_ID = SUBT.TERM_ID
    and SUBB.LANGUAGE = SUBT.SOURCE_LANG
    and (SUBB.NAME <> SUBT.NAME
      or SUBB.DESCRIPTION <> SUBT.DESCRIPTION
      or (SUBB.DESCRIPTION is null and SUBT.DESCRIPTION is not null)
      or (SUBB.DESCRIPTION is not null and SUBT.DESCRIPTION is null)
  ));

  insert into RA_TERMS_TL (
    TERM_ID,
    DESCRIPTION,
    NAME,
    LAST_UPDATE_DATE,
    CREATION_DATE,
    CREATED_BY,
    LAST_UPDATED_BY,
    LAST_UPDATE_LOGIN,
    LANGUAGE,
    SOURCE_LANG
  ) select
    B.TERM_ID,
    B.DESCRIPTION,
    B.NAME,
    B.LAST_UPDATE_DATE,
    B.CREATION_DATE,
    B.CREATED_BY,
    B.LAST_UPDATED_BY,
    B.LAST_UPDATE_LOGIN,
    L.LANGUAGE_CODE,
    B.SOURCE_LANG
  from RA_TERMS_TL B, FND_LANGUAGES L
  where L.INSTALLED_FLAG in ('I', 'B')
  and B.LANGUAGE = userenv('LANG')
  and not exists
    (select NULL
    from RA_TERMS_TL T
    where T.TERM_ID = B.TERM_ID
    and T.LANGUAGE = L.LANGUAGE_CODE);
end ADD_LANGUAGE;

procedure LOAD_ROW (
  X_TERM_ID  in NUMBER,
  X_CREDIT_CHECK_FLAG  in VARCHAR2,
  X_PREPAYMENT_FLAG  in VARCHAR2,
  X_BILLING_CYCLE_ID  in NUMBER,
  X_PRINTING_LEAD_DAYS in  NUMBER,
  X_START_DATE_ACTIVE  in DATE,
  X_END_DATE_ACTIVE  in DATE,
  X_ATTRIBUTE_CATEGORY in  VARCHAR2,
  X_ATTRIBUTE1  in VARCHAR2,
  X_ATTRIBUTE2  in VARCHAR2,
  X_ATTRIBUTE3  in VARCHAR2,
  X_ATTRIBUTE4  in VARCHAR2,
  X_ATTRIBUTE5  in VARCHAR2,
  X_ATTRIBUTE6  in VARCHAR2,
  X_ATTRIBUTE7  in VARCHAR2,
  X_ATTRIBUTE8  in VARCHAR2,
  X_ATTRIBUTE9  in VARCHAR2,
  X_ATTRIBUTE10  in VARCHAR2,
  X_BASE_AMOUNT  in NUMBER,
  X_CALC_DISCOUNT_ON_LINES_FLAG  in VARCHAR2,
  X_FIRST_INSTALLMENT_CODE  in VARCHAR2,
  X_IN_USE  in VARCHAR2,
  X_PARTIAL_DISCOUNT_FLAG  in VARCHAR2,
  X_ATTRIBUTE11  in VARCHAR2,
  X_ATTRIBUTE12  in VARCHAR2,
  X_ATTRIBUTE13  in VARCHAR2,
  X_ATTRIBUTE14  in VARCHAR2,
  X_ATTRIBUTE15  in VARCHAR2,
  X_NAME  in VARCHAR2,
  X_DESCRIPTION  in VARCHAR2,
  X_OWNER   in VARCHAR2
) IS
begin

  declare
     user_id            number := 0;
     row_id             varchar2(64);

  begin

     if (X_OWNER = 'SEED') then
        user_id := -1;
     end if;

     begin
     RA_TERMS_TABLE_HANDLER.UPDATE_ROW (
          X_TERM_ID => X_TERM_ID,
          X_CREDIT_CHECK_FLAG => X_CREDIT_CHECK_FLAG,
          X_PREPAYMENT_FLAG => X_PREPAYMENT_FLAG,
          X_BILLING_CYCLE_ID => X_BILLING_CYCLE_ID,
          X_PRINTING_LEAD_DAYS => X_PRINTING_LEAD_DAYS,
          X_START_DATE_ACTIVE => X_START_DATE_ACTIVE,
          X_END_DATE_ACTIVE => X_END_DATE_ACTIVE,
          X_ATTRIBUTE_CATEGORY => X_ATTRIBUTE_CATEGORY,
          X_ATTRIBUTE1 => X_ATTRIBUTE1,
          X_ATTRIBUTE2 => X_ATTRIBUTE2,
          X_ATTRIBUTE3 => X_ATTRIBUTE3,
          X_ATTRIBUTE4 => X_ATTRIBUTE4,
          X_ATTRIBUTE5 => X_ATTRIBUTE5,
          X_ATTRIBUTE6 => X_ATTRIBUTE6,
          X_ATTRIBUTE7 => X_ATTRIBUTE7,
          X_ATTRIBUTE8 => X_ATTRIBUTE8,
          X_ATTRIBUTE9 => X_ATTRIBUTE9,
          X_ATTRIBUTE10 => X_ATTRIBUTE10,
          X_BASE_AMOUNT => X_BASE_AMOUNT,
          X_CALC_DISCOUNT_ON_LINES_FLAG => X_CALC_DISCOUNT_ON_LINES_FLAG,
          X_FIRST_INSTALLMENT_CODE => X_FIRST_INSTALLMENT_CODE,
          X_IN_USE => X_IN_USE,
          X_PARTIAL_DISCOUNT_FLAG => X_PARTIAL_DISCOUNT_FLAG,
          X_ATTRIBUTE11 => X_ATTRIBUTE11,
          X_ATTRIBUTE12 => X_ATTRIBUTE12,
          X_ATTRIBUTE13 => X_ATTRIBUTE13,
          X_ATTRIBUTE14 => X_ATTRIBUTE14,
          X_ATTRIBUTE15 => X_ATTRIBUTE15,
          X_NAME => X_NAME,
          X_DESCRIPTION => X_DESCRIPTION,
          X_LAST_UPDATE_DATE => sysdate,
          X_LAST_UPDATED_BY => user_id,
          X_LAST_UPDATE_LOGIN => 0
        );

      exception
       when NO_DATA_FOUND then
          RA_TERMS_TABLE_HANDLER.INSERT_ROW (
             X_ROWID => row_id,
             X_TERM_ID => X_TERM_ID,
             X_CREDIT_CHECK_FLAG => X_CREDIT_CHECK_FLAG,
             X_PREPAYMENT_FLAG => X_PREPAYMENT_FLAG,
             X_BILLING_CYCLE_ID => X_BILLING_CYCLE_ID,
             X_PRINTING_LEAD_DAYS => X_PRINTING_LEAD_DAYS,
             X_START_DATE_ACTIVE => X_START_DATE_ACTIVE,
             X_END_DATE_ACTIVE => X_END_DATE_ACTIVE,
             X_ATTRIBUTE_CATEGORY => X_ATTRIBUTE_CATEGORY,
             X_ATTRIBUTE1 => X_ATTRIBUTE1,
             X_ATTRIBUTE2 => X_ATTRIBUTE2,
             X_ATTRIBUTE3 => X_ATTRIBUTE3,
             X_ATTRIBUTE4 => X_ATTRIBUTE4,
             X_ATTRIBUTE5 => X_ATTRIBUTE5,
             X_ATTRIBUTE6 => X_ATTRIBUTE6,
             X_ATTRIBUTE7 => X_ATTRIBUTE7,
             X_ATTRIBUTE8 => X_ATTRIBUTE8,
             X_ATTRIBUTE9 => X_ATTRIBUTE9,
             X_ATTRIBUTE10 => X_ATTRIBUTE10,
             X_BASE_AMOUNT => X_BASE_AMOUNT,
             X_CALC_DISCOUNT_ON_LINES_FLAG => X_CALC_DISCOUNT_ON_LINES_FLAG,
             X_FIRST_INSTALLMENT_CODE => X_FIRST_INSTALLMENT_CODE,
             X_IN_USE => X_IN_USE,
             X_PARTIAL_DISCOUNT_FLAG => X_PARTIAL_DISCOUNT_FLAG,
             X_ATTRIBUTE11 => X_ATTRIBUTE10,
             X_ATTRIBUTE12 => X_ATTRIBUTE12,
             X_ATTRIBUTE13 => X_ATTRIBUTE13,
             X_ATTRIBUTE14 => X_ATTRIBUTE14,
             X_ATTRIBUTE15 => X_ATTRIBUTE15,
             X_NAME        => X_NAME,
             X_DESCRIPTION => X_DESCRIPTION,
             X_CREATION_DATE => sysdate,
             X_CREATED_BY => user_id,
             X_LAST_UPDATE_DATE => sysdate,
             X_LAST_UPDATED_BY => user_id,
             X_LAST_UPDATE_LOGIN => 0
           );
     end;
   end;

end LOAD_ROW;


procedure TRANSLATE_ROW (
  X_TERM_ID in NUMBER,
  X_DESCRIPTION in VARCHAR2,
  X_NAME in VARCHAR2,
  X_OWNER in VARCHAR2) IS
begin

    -- only update rows that have not been altered by user

    update RA_TERMS_TL
      set description = X_DESCRIPTION,
          name        = X_NAME,
          source_lang = userenv('LANG'),
          last_update_date = sysdate,
          last_updated_by = decode(X_OWNER, 'SEED', 1, 0),
          last_update_login = 0
    where term_id = X_TERM_ID
    and   userenv('LANG') in (language, source_lang);

end TRANSLATE_ROW;

end RA_TERMS_TABLE_HANDLER;

/
