--------------------------------------------------------
--  DDL for Package Body IBC_AUDIT_LOGS_PKG
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE PACKAGE BODY "APPS"."IBC_AUDIT_LOGS_PKG" AS
/* $Header: ibctlogb.pls 115.10 2002/11/15 00:31:42 svatsa noship $*/

-- Purpose: Table Handler for Ibc_Audit_Logs table.

-- MODIFICATION HISTORY
-- Person            Date        Comments
-- ---------         ------      ------------------------------------------
-- Sri Rangarajan    01/06/2002      Created Package
-- shitij.vatsa      11/04/2002      Updated for NOCOPY

PROCEDURE INSERT_ROW (
  px_AUDIT_LOG_ID IN OUT NOCOPY NUMBER,
  p_ACTIVITY IN VARCHAR2,
  p_parent_value  IN VARCHAR2,
  p_USER_ID IN NUMBER,
  p_TIME_STAMP IN DATE,
  p_OBJECT_TYPE IN VARCHAR2,
  p_OBJECT_VALUE1 IN VARCHAR2,
  p_OBJECT_VALUE2 IN VARCHAR2,
  p_OBJECT_VALUE3 IN VARCHAR2,
  p_OBJECT_VALUE4 IN VARCHAR2,
  p_OBJECT_VALUE5 IN VARCHAR2,
  p_DESCRIPTION IN VARCHAR2,

  P_OBJECT_STATUS IN VARCHAR2,
  P_INTERNAL_FLAG IN VARCHAR2,
  P_MESSAGE_APPLICATION IN VARCHAR2,
  P_MESSAGE_NAME IN VARCHAR2,
  P_EXTRA_INFO1_TYPE IN VARCHAR2,
  P_EXTRA_INFO1_REF_TYPE IN VARCHAR2,
  P_EXTRA_INFO1_VALUE IN VARCHAR2,
  P_EXTRA_INFO2_TYPE IN VARCHAR2,
  P_EXTRA_INFO2_REF_TYPE IN VARCHAR2,
  P_EXTRA_INFO2_VALUE IN VARCHAR2,
  P_EXTRA_INFO3_TYPE IN VARCHAR2,
  P_EXTRA_INFO3_REF_TYPE IN VARCHAR2,
  P_EXTRA_INFO3_VALUE IN VARCHAR2,
  P_EXTRA_INFO4_TYPE IN VARCHAR2,
  P_EXTRA_INFO4_REF_TYPE IN VARCHAR2,
  P_EXTRA_INFO4_VALUE IN VARCHAR2,
  P_EXTRA_INFO5_TYPE IN VARCHAR2,
  P_EXTRA_INFO5_REF_TYPE IN VARCHAR2,
  P_EXTRA_INFO5_VALUE IN VARCHAR2,

  p_OBJECT_VERSION_NUMBER IN NUMBER,
  p_CREATION_DATE IN DATE,
  p_CREATED_BY IN NUMBER,
  p_LAST_UPDATE_DATE IN DATE,
  p_LAST_UPDATED_BY IN NUMBER,
  p_LAST_UPDATE_LOGIN IN NUMBER,
  x_ROWID OUT NOCOPY VARCHAR2)
IS
  CURSOR C IS SELECT ROWID FROM IBC_AUDIT_LOGS
    WHERE AUDIT_LOG_ID = px_AUDIT_LOG_ID;
  CURSOR c2 IS SELECT ibc_audit_logs_s1.NEXTVAL FROM dual;

BEGIN

  -- Primary key validation check
  IF ((px_AUDIT_LOG_ID IS NULL) OR
      (px_AUDIT_LOG_ID = FND_API.G_MISS_NUM))
  THEN
    OPEN c2;
    FETCH c2 INTO px_AUDIT_LOG_ID;
    CLOSE c2;
  END IF;

  INSERT INTO IBC_AUDIT_LOGS (
    AUDIT_LOG_ID,
 parent_value,
    ACTIVITY,
    USER_ID,
    TIME_STAMP,
    OBJECT_TYPE,
    OBJECT_VALUE1,
    OBJECT_VALUE2,
    OBJECT_VALUE3,
    OBJECT_VALUE4,
    OBJECT_VALUE5,
    DESCRIPTION,

    APPLICATION_ID,
    OBJECT_STATUS,
    INTERNAL_FLAG,
    MESSAGE_APPLICATION,
    MESSAGE_NAME,
    EXTRA_INFO1_TYPE,
    EXTRA_INFO1_REF_TYPE,
    EXTRA_INFO1_VALUE,
    EXTRA_INFO2_TYPE,
    EXTRA_INFO2_REF_TYPE,
    EXTRA_INFO2_VALUE,
    EXTRA_INFO3_TYPE,
    EXTRA_INFO3_REF_TYPE,
    EXTRA_INFO3_VALUE,
    EXTRA_INFO4_TYPE,
    EXTRA_INFO4_REF_TYPE,
    EXTRA_INFO4_VALUE,
    EXTRA_INFO5_TYPE,
    EXTRA_INFO5_REF_TYPE,
    EXTRA_INFO5_VALUE,

    OBJECT_VERSION_NUMBER,
    CREATION_DATE,
    CREATED_BY,
    LAST_UPDATE_DATE,
    LAST_UPDATED_BY,
    LAST_UPDATE_LOGIN
  ) VALUES (
    px_AUDIT_LOG_ID,
    p_parent_value,
    p_ACTIVITY,
    p_USER_ID,
    p_TIME_STAMP,
    p_OBJECT_TYPE,
    p_OBJECT_VALUE1,
    DECODE(p_OBJECT_VALUE2,FND_API.G_MISS_CHAR,NULL,p_OBJECT_VALUE2),
    DECODE(p_OBJECT_VALUE3,FND_API.G_MISS_CHAR,NULL,p_OBJECT_VALUE3),
    DECODE(p_OBJECT_VALUE4,FND_API.G_MISS_CHAR,NULL,p_OBJECT_VALUE4),
    DECODE(p_OBJECT_VALUE5,FND_API.G_MISS_CHAR,NULL,p_OBJECT_VALUE5),
    DECODE(p_DESCRIPTION,FND_API.G_MISS_CHAR,NULL,p_DESCRIPTION),

    FND_GLOBAL.RESP_APPL_ID,
    DECODE(P_OBJECT_STATUS,FND_API.G_MISS_CHAR,NULL,P_OBJECT_STATUS),
    DECODE(P_INTERNAL_FLAG,FND_API.G_MISS_CHAR,NULL,P_INTERNAL_FLAG),
    DECODE(P_MESSAGE_APPLICATION,FND_API.G_MISS_CHAR,NULL,P_MESSAGE_APPLICATION),
    DECODE(P_MESSAGE_NAME,FND_API.G_MISS_CHAR,NULL,P_MESSAGE_NAME),
    DECODE(P_EXTRA_INFO1_TYPE,FND_API.G_MISS_CHAR,NULL,p_EXTRA_INFO1_TYPE),
    DECODE(P_EXTRA_INFO1_REF_TYPE,FND_API.G_MISS_CHAR,NULL,P_EXTRA_INFO1_REF_TYPE),
    DECODE(P_EXTRA_INFO1_VALUE,FND_API.G_MISS_CHAR,NULL,P_EXTRA_INFO1_VALUE),
    DECODE(P_EXTRA_INFO2_TYPE,FND_API.G_MISS_CHAR,NULL,P_EXTRA_INFO2_TYPE),
    DECODE(P_EXTRA_INFO2_REF_TYPE,FND_API.G_MISS_CHAR,NULL,P_EXTRA_INFO2_REF_TYPE),
    DECODE(P_EXTRA_INFO2_VALUE,FND_API.G_MISS_CHAR,NULL,P_EXTRA_INFO2_VALUE),
    DECODE(P_EXTRA_INFO3_TYPE,FND_API.G_MISS_CHAR,NULL,P_EXTRA_INFO3_TYPE),
    DECODE(P_EXTRA_INFO3_REF_TYPE,FND_API.G_MISS_CHAR,NULL,P_EXTRA_INFO3_REF_TYPE),
    DECODE(P_EXTRA_INFO3_VALUE,FND_API.G_MISS_CHAR,NULL,P_EXTRA_INFO3_VALUE),
    DECODE(P_EXTRA_INFO4_TYPE,FND_API.G_MISS_CHAR,NULL,P_EXTRA_INFO4_TYPE),
    DECODE(P_EXTRA_INFO4_REF_TYPE,FND_API.G_MISS_CHAR,NULL,P_EXTRA_INFO4_REF_TYPE),
    DECODE(P_EXTRA_INFO4_VALUE,FND_API.G_MISS_CHAR,NULL,P_EXTRA_INFO4_VALUE),
    DECODE(P_EXTRA_INFO5_TYPE,FND_API.G_MISS_CHAR,NULL,P_EXTRA_INFO5_TYPE),
    DECODE(P_EXTRA_INFO5_REF_TYPE,FND_API.G_MISS_CHAR,NULL,P_EXTRA_INFO5_REF_TYPE),
    DECODE(P_EXTRA_INFO5_VALUE,FND_API.G_MISS_CHAR,NULL,P_EXTRA_INFO5_VALUE),

    p_OBJECT_VERSION_NUMBER,
    DECODE(p_creation_date, FND_API.G_MISS_DATE, SYSDATE, NULL, SYSDATE,
           p_creation_date),
    DECODE(p_created_by, FND_API.G_MISS_NUM, FND_GLOBAL.user_id,
           NULL, FND_GLOBAL.user_id, p_created_by),
    DECODE(p_last_update_date, FND_API.G_MISS_DATE, SYSDATE, NULL, SYSDATE,
           p_last_update_date),
    DECODE(p_last_updated_by, FND_API.G_MISS_NUM, FND_GLOBAL.user_id,
           NULL, FND_GLOBAL.user_id, p_last_updated_by),
    DECODE(p_last_update_login, FND_API.G_MISS_NUM, FND_GLOBAL.login_id,
           NULL, FND_GLOBAL.login_id, p_last_update_login)
);


  OPEN c;
  FETCH c INTO x_ROWID;
  IF (c%NOTFOUND) THEN
    CLOSE c;
    RAISE NO_DATA_FOUND;
  END IF;
  CLOSE c;

END INSERT_ROW;

PROCEDURE LOCK_ROW (
  p_AUDIT_LOG_ID IN NUMBER,
  p_ACTIVITY IN VARCHAR2,
  p_USER_ID IN NUMBER,
  p_TIME_STAMP IN DATE,
  p_OBJECT_TYPE IN VARCHAR2,
  p_OBJECT_VALUE1 IN VARCHAR2,
  p_OBJECT_VALUE2 IN VARCHAR2,
  p_OBJECT_VALUE3 IN VARCHAR2,
  p_OBJECT_VALUE4 IN VARCHAR2,
  p_OBJECT_VALUE5 IN VARCHAR2,
  p_DESCRIPTION IN VARCHAR2,

  P_OBJECT_STATUS IN VARCHAR2,
  P_INTERNAL_FLAG IN VARCHAR2,
  P_MESSAGE_APPLICATION IN VARCHAR2,
  P_MESSAGE_NAME IN VARCHAR2,
  P_EXTRA_INFO1_TYPE IN VARCHAR2,
  P_EXTRA_INFO1_REF_TYPE IN VARCHAR2,
  P_EXTRA_INFO1_VALUE IN VARCHAR2,
  P_EXTRA_INFO2_TYPE IN VARCHAR2,
  P_EXTRA_INFO2_REF_TYPE IN VARCHAR2,
  P_EXTRA_INFO2_VALUE IN VARCHAR2,
  P_EXTRA_INFO3_TYPE IN VARCHAR2,
  P_EXTRA_INFO3_REF_TYPE IN VARCHAR2,
  P_EXTRA_INFO3_VALUE IN VARCHAR2,
  P_EXTRA_INFO4_TYPE IN VARCHAR2,
  P_EXTRA_INFO4_REF_TYPE IN VARCHAR2,
  P_EXTRA_INFO4_VALUE IN VARCHAR2,
  P_EXTRA_INFO5_TYPE IN VARCHAR2,
  P_EXTRA_INFO5_REF_TYPE IN VARCHAR2,
  P_EXTRA_INFO5_VALUE IN VARCHAR2,

  p_OBJECT_VERSION_NUMBER IN NUMBER
) IS
  CURSOR c IS SELECT
      ACTIVITY,
      USER_ID,
      TIME_STAMP,
      OBJECT_TYPE,
      OBJECT_VALUE1,
      OBJECT_VALUE2,
      OBJECT_VALUE3,
      OBJECT_VALUE4,
      OBJECT_VALUE5,
      DESCRIPTION,

      OBJECT_STATUS,
      INTERNAL_FLAG,
      MESSAGE_APPLICATION,
      MESSAGE_NAME,
      EXTRA_INFO1_TYPE,
      EXTRA_INFO1_REF_TYPE,
      EXTRA_INFO1_VALUE,
      EXTRA_INFO2_TYPE,
      EXTRA_INFO2_REF_TYPE,
      EXTRA_INFO2_VALUE,
      EXTRA_INFO3_TYPE,
      EXTRA_INFO3_REF_TYPE,
      EXTRA_INFO3_VALUE,
      EXTRA_INFO4_TYPE,
      EXTRA_INFO4_REF_TYPE,
      EXTRA_INFO4_VALUE,
      EXTRA_INFO5_TYPE,
      EXTRA_INFO5_REF_TYPE,
      EXTRA_INFO5_VALUE,

      OBJECT_VERSION_NUMBER
    FROM IBC_AUDIT_LOGS
    WHERE AUDIT_LOG_ID = p_AUDIT_LOG_ID
    FOR UPDATE OF AUDIT_LOG_ID NOWAIT;
  recinfo c%ROWTYPE;


BEGIN
  OPEN c;
  FETCH c INTO recinfo;
  IF (c%NOTFOUND) THEN
    CLOSE c;
    fnd_message.set_name('FND', 'FORM_RECORD_DELETED');
    app_exception.raise_exception;
  END IF;
  CLOSE c;
  IF (    (recinfo.ACTIVITY = p_ACTIVITY)
      AND (recinfo.USER_ID = p_USER_ID)
      AND (recinfo.TIME_STAMP = p_TIME_STAMP)
      AND (recinfo.OBJECT_TYPE = p_OBJECT_TYPE)
      AND (recinfo.OBJECT_VALUE1 = p_OBJECT_VALUE1)
      AND ((recinfo.OBJECT_VALUE2 = p_OBJECT_VALUE2)
           OR ((recinfo.OBJECT_VALUE2 IS NULL) AND (p_OBJECT_VALUE2 IS NULL)))
      AND ((recinfo.OBJECT_VALUE3 = p_OBJECT_VALUE3)
           OR ((recinfo.OBJECT_VALUE3 IS NULL) AND (p_OBJECT_VALUE3 IS NULL)))
      AND ((recinfo.OBJECT_VALUE4 = p_OBJECT_VALUE4)
           OR ((recinfo.OBJECT_VALUE4 IS NULL) AND (p_OBJECT_VALUE4 IS NULL)))
      AND ((recinfo.OBJECT_VALUE5 = p_OBJECT_VALUE5)
           OR ((recinfo.OBJECT_VALUE5 IS NULL) AND (p_OBJECT_VALUE5 IS NULL)))
      AND ((recinfo.DESCRIPTION = p_DESCRIPTION)
           OR ((recinfo.DESCRIPTION IS NULL) AND (p_DESCRIPTION IS NULL)))

      AND ((recinfo.OBJECT_STATUS = p_OBJECT_STATUS)
           OR ((recinfo.OBJECT_STATUS IS NULL) AND (p_OBJECT_STATUS IS NULL)))
      AND ((recinfo.INTERNAL_FLAG = p_INTERNAL_FLAG)
           OR ((recinfo.INTERNAL_FLAG IS NULL) AND (p_INTERNAL_FLAG IS NULL)))
      AND ((recinfo.MESSAGE_APPLICATION = p_MESSAGE_APPLICATION)
           OR ((recinfo.MESSAGE_APPLICATION IS NULL) AND (p_MESSAGE_APPLICATION IS NULL)))
      AND ((recinfo.MESSAGE_NAME = p_MESSAGE_NAME)
           OR ((recinfo.MESSAGE_NAME IS NULL) AND (p_MESSAGE_NAME IS NULL)))
      AND ((recinfo.EXTRA_INFO1_TYPE = p_EXTRA_INFO1_TYPE)
           OR ((recinfo.EXTRA_INFO1_TYPE IS NULL) AND (p_EXTRA_INFO1_TYPE IS NULL)))
      AND ((recinfo.EXTRA_INFO1_REF_TYPE = p_EXTRA_INFO1_REF_TYPE)
           OR ((recinfo.EXTRA_INFO1_REF_TYPE IS NULL) AND (p_EXTRA_INFO1_REF_TYPE IS NULL)))
      AND ((recinfo.EXTRA_INFO1_VALUE = p_EXTRA_INFO1_VALUE)
           OR ((recinfo.EXTRA_INFO1_VALUE IS NULL) AND (p_EXTRA_INFO1_VALUE IS NULL)))
      AND ((recinfo.EXTRA_INFO2_TYPE = p_EXTRA_INFO2_TYPE)
           OR ((recinfo.EXTRA_INFO2_TYPE IS NULL) AND (p_EXTRA_INFO2_TYPE IS NULL)))
      AND ((recinfo.EXTRA_INFO2_REF_TYPE = p_EXTRA_INFO2_REF_TYPE)
           OR ((recinfo.EXTRA_INFO2_REF_TYPE IS NULL) AND (p_EXTRA_INFO2_REF_TYPE IS NULL)))
      AND ((recinfo.EXTRA_INFO2_VALUE = p_EXTRA_INFO2_VALUE)
           OR ((recinfo.EXTRA_INFO2_VALUE IS NULL) AND (p_EXTRA_INFO2_VALUE IS NULL)))
      AND ((recinfo.EXTRA_INFO3_TYPE = p_EXTRA_INFO3_TYPE)
           OR ((recinfo.EXTRA_INFO3_TYPE IS NULL) AND (p_EXTRA_INFO3_TYPE IS NULL)))
      AND ((recinfo.EXTRA_INFO3_REF_TYPE = p_EXTRA_INFO3_REF_TYPE)
           OR ((recinfo.EXTRA_INFO3_REF_TYPE IS NULL) AND (p_EXTRA_INFO3_REF_TYPE IS NULL)))
      AND ((recinfo.EXTRA_INFO3_VALUE = p_EXTRA_INFO3_VALUE)
           OR ((recinfo.EXTRA_INFO3_VALUE IS NULL) AND (p_EXTRA_INFO3_VALUE IS NULL)))
      AND ((recinfo.EXTRA_INFO4_TYPE = p_EXTRA_INFO4_TYPE)
           OR ((recinfo.EXTRA_INFO4_TYPE IS NULL) AND (p_EXTRA_INFO4_TYPE IS NULL)))
      AND ((recinfo.EXTRA_INFO4_REF_TYPE = p_EXTRA_INFO4_REF_TYPE)
           OR ((recinfo.EXTRA_INFO4_REF_TYPE IS NULL) AND (p_EXTRA_INFO4_REF_TYPE IS NULL)))
      AND ((recinfo.EXTRA_INFO4_VALUE = p_EXTRA_INFO4_VALUE)
           OR ((recinfo.EXTRA_INFO4_VALUE IS NULL) AND (p_EXTRA_INFO4_VALUE IS NULL)))
      AND ((recinfo.EXTRA_INFO5_TYPE = p_EXTRA_INFO5_TYPE)
           OR ((recinfo.EXTRA_INFO5_TYPE IS NULL) AND (p_EXTRA_INFO5_TYPE IS NULL)))
      AND ((recinfo.EXTRA_INFO5_REF_TYPE = p_EXTRA_INFO5_REF_TYPE)
           OR ((recinfo.EXTRA_INFO5_REF_TYPE IS NULL) AND (p_EXTRA_INFO5_REF_TYPE IS NULL)))
      AND ((recinfo.EXTRA_INFO5_VALUE = p_EXTRA_INFO5_VALUE)
           OR ((recinfo.EXTRA_INFO5_VALUE IS NULL) AND (p_EXTRA_INFO5_VALUE IS NULL)))

      AND (recinfo.OBJECT_VERSION_NUMBER = p_OBJECT_VERSION_NUMBER)
  ) THEN
    NULL;
  ELSE
    fnd_message.set_name('FND', 'FORM_RECORD_CHANGED');
    app_exception.raise_exception;
  END IF;

  RETURN;
END LOCK_ROW;

/*PROCEDURE UPDATE_ROW (
  p_AUDIT_LOG_ID    IN  NUMBER,
  p_ACTIVITY    IN  VARCHAR2 DEFAULT  FND_API.G_MISS_CHAR,
  p_parent_id IN NUMBER DEFAULT FND_API.G_MISS_NUM,
  p_DESCRIPTION    IN  VARCHAR2 DEFAULT  FND_API.G_MISS_CHAR,
  p_LAST_UPDATED_BY    IN  NUMBER DEFAULT  FND_API.G_MISS_NUM,
  p_LAST_UPDATE_DATE    IN  DATE DEFAULT  FND_API.G_MISS_DATE,
  p_LAST_UPDATE_LOGIN    IN  NUMBER DEFAULT  FND_API.G_MISS_NUM,
  p_OBJECT_TYPE    IN  VARCHAR2 DEFAULT  FND_API.G_MISS_CHAR,
  p_OBJECT_VALUE1    IN  VARCHAR2 DEFAULT  FND_API.G_MISS_CHAR,
  p_OBJECT_VALUE2    IN  VARCHAR2 DEFAULT  FND_API.G_MISS_CHAR,
  p_OBJECT_VALUE3    IN  VARCHAR2 DEFAULT  FND_API.G_MISS_CHAR,
  p_OBJECT_VALUE4    IN  VARCHAR2 DEFAULT  FND_API.G_MISS_CHAR,
  p_OBJECT_VALUE5    IN  VARCHAR2 DEFAULT  FND_API.G_MISS_CHAR,

  P_OBJECT_STATUS IN VARCHAR2 DEFAULT NULL,
  P_INTERNAL_FLAG IN VARCHAR2 DEFAULT NULL,
  P_MESSAGE_APPLICATION IN VARCHAR2 DEFAULT NULL,
  P_MESSAGE_NAME IN VARCHAR2 DEFAULT NULL,
  P_EXTRA_INFO1_TYPE IN VARCHAR2 DEFAULT NULL,
  P_EXTRA_INFO1_REF_TYPE IN VARCHAR2 DEFAULT NULL,
  P_EXTRA_INFO1_VALUE IN VARCHAR2 DEFAULT NULL,
  P_EXTRA_INFO2_TYPE IN VARCHAR2 DEFAULT NULL,
  P_EXTRA_INFO2_REF_TYPE IN VARCHAR2 DEFAULT NULL,
  P_EXTRA_INFO2_VALUE IN VARCHAR2 DEFAULT NULL,
  P_EXTRA_INFO3_TYPE IN VARCHAR2 DEFAULT NULL,
  P_EXTRA_INFO3_REF_TYPE IN VARCHAR2 DEFAULT NULL,
  P_EXTRA_INFO3_VALUE IN VARCHAR2 DEFAULT NULL,
  P_EXTRA_INFO4_TYPE IN VARCHAR2 DEFAULT NULL,
  P_EXTRA_INFO4_REF_TYPE IN VARCHAR2 DEFAULT NULL,
  P_EXTRA_INFO4_VALUE IN VARCHAR2 DEFAULT NULL,
  P_EXTRA_INFO5_TYPE IN VARCHAR2 DEFAULT NULL,
  P_EXTRA_INFO5_REF_TYPE IN VARCHAR2 DEFAULT NULL,
  P_EXTRA_INFO5_VALUE IN VARCHAR2 DEFAULT NULL,

  p_OBJECT_VERSION_NUMBER    IN  NUMBER DEFAULT  FND_API.G_MISS_NUM,
  p_TIME_STAMP    IN  DATE DEFAULT  FND_API.G_MISS_DATE,
  p_USER_ID    IN  NUMBER DEFAULT  FND_API.G_MISS_NUM
) IS
BEGIN
  UPDATE IBC_AUDIT_LOGS SET
    ACTIVITY = DECODE(p_ACTIVITY,FND_API.G_MISS_CHAR,ACTIVITY,p_ACTIVITY),
 PARENT_ID = DECODE(p_parent_id,FND_API.G_MISS_CHAR,parent_id,p_parent_id),
    USER_ID = DECODE(p_USER_ID,FND_API.G_MISS_NUM,USER_ID,p_USER_ID),
    TIME_STAMP = DECODE(p_TIME_STAMP,FND_API.G_MISS_DATE,TIME_STAMP,p_TIME_STAMP),
    OBJECT_TYPE = DECODE(p_OBJECT_TYPE,FND_API.G_MISS_CHAR,OBJECT_TYPE,p_OBJECT_TYPE),
    OBJECT_VALUE1 = DECODE(p_OBJECT_VALUE1,FND_API.G_MISS_CHAR,OBJECT_VALUE1,p_OBJECT_VALUE1),
    OBJECT_VALUE2 = DECODE(p_OBJECT_VALUE2,FND_API.G_MISS_CHAR,OBJECT_VALUE2,p_OBJECT_VALUE2),
    OBJECT_VALUE3 = DECODE(p_OBJECT_VALUE3,FND_API.G_MISS_CHAR,OBJECT_VALUE3,p_OBJECT_VALUE3),
    OBJECT_VALUE4 = DECODE(p_OBJECT_VALUE4,FND_API.G_MISS_CHAR,OBJECT_VALUE4,p_OBJECT_VALUE4),
    OBJECT_VALUE5 = DECODE(p_OBJECT_VALUE5,FND_API.G_MISS_CHAR,OBJECT_VALUE5,p_OBJECT_VALUE5),
    DESCRIPTION = DECODE(p_DESCRIPTION,FND_API.G_MISS_CHAR,DESCRIPTION,p_DESCRIPTION),
    OBJECT_VERSION_NUMBER = OBJECT_VERSION_NUMBER + 1,
    last_update_date = DECODE(p_last_update_date, FND_API.G_MISS_DATE, SYSDATE,
                              NULL, SYSDATE, p_last_update_date),
    last_updated_by = DECODE(p_last_updated_by, FND_API.G_MISS_NUM,
                             FND_GLOBAL.user_id, NULL, FND_GLOBAL.user_id,
                             p_last_updated_by),
    last_update_login = DECODE(p_last_update_login, FND_API.G_MISS_NUM,
                             FND_GLOBAL.login_id, NULL, FND_GLOBAL.login_id,
                             p_last_update_login)

    WHERE AUDIT_LOG_ID = p_AUDIT_LOG_ID
    AND object_version_number = DECODE(p_object_version_number,
                                       FND_API.G_MISS_NUM,
                                       object_version_number,
                                       p_object_version_number);

  IF (SQL%NOTFOUND) THEN
    RAISE NO_DATA_FOUND;
  END IF;


END UPDATE_ROW;
*/

PROCEDURE DELETE_ROW (
  p_AUDIT_LOG_ID IN NUMBER
) IS
BEGIN

  DELETE FROM IBC_AUDIT_LOGS
  WHERE AUDIT_LOG_ID = p_AUDIT_LOG_ID;

  IF (SQL%NOTFOUND) THEN
    RAISE NO_DATA_FOUND;
  END IF;
END DELETE_ROW;


END Ibc_Audit_Logs_Pkg;

/
