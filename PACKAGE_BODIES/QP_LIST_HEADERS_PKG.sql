--------------------------------------------------------
--  DDL for Package Body QP_LIST_HEADERS_PKG
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE PACKAGE BODY "APPS"."QP_LIST_HEADERS_PKG" as
/* $Header: QPXLHDRB.pls 120.2 2006/03/21 11:17:49 rnayani noship $ */
procedure INSERT_ROW (
  X_ROWID in out NOCOPY /* file.sql.39 change */ VARCHAR2,
  X_CONTEXT in VARCHAR2,
  X_ATTRIBUTE1 in VARCHAR2,
  X_ATTRIBUTE2 in VARCHAR2,
  X_ATTRIBUTE3 in VARCHAR2,
  X_ATTRIBUTE4 in VARCHAR2,
  X_ATTRIBUTE5 in VARCHAR2,
  X_ATTRIBUTE6 in VARCHAR2,
  X_ATTRIBUTE7 in VARCHAR2,
  X_ATTRIBUTE8 in VARCHAR2,
  X_ATTRIBUTE9 in VARCHAR2,
  X_ATTRIBUTE10 in VARCHAR2,
  X_ATTRIBUTE11 in VARCHAR2,
  X_ATTRIBUTE12 in VARCHAR2,
  X_ATTRIBUTE13 in VARCHAR2,
  X_ATTRIBUTE14 in VARCHAR2,
  X_ATTRIBUTE15 in VARCHAR2,
  X_CURRENCY_CODE in VARCHAR2,
  X_SHIP_METHOD_CODE in VARCHAR2,
  X_FREIGHT_TERMS_CODE in VARCHAR2,
  X_LIST_HEADER_ID in NUMBER,
  X_CREATION_DATE in DATE,
  X_START_DATE_ACTIVE in DATE,
  X_END_DATE_ACTIVE in DATE,
  X_AUTOMATIC_FLAG in VARCHAR2,
  X_LIST_TYPE_CODE in VARCHAR2,
  X_TERMS_ID in NUMBER,
  X_ROUNDING_FACTOR in NUMBER,
  X_REQUEST_ID in NUMBER,
  X_CREATED_BY in NUMBER,
  X_LAST_UPDATE_DATE in DATE,
  X_LAST_UPDATED_BY in NUMBER,
  X_LAST_UPDATE_LOGIN in NUMBER,
  X_PROGRAM_APPLICATION_ID in NUMBER   DEFAULT NULL,
  X_PROGRAM_ID in NUMBER   DEFAULT NULL,
  X_PROGRAM_UPDATE_DATE in DATE   DEFAULT NULL,
  X_DISCOUNT_LINES_FLAG in VARCHAR2   DEFAULT NULL,
  X_NAME in VARCHAR2,
  X_DESCRIPTION in VARCHAR2,
  X_VERSION_NO in VARCHAR2   DEFAULT NULL,
  X_COMMENTS in VARCHAR2   DEFAULT NULL,
  X_GSA_INDICATOR in VARCHAR2   DEFAULT NULL,
  X_PRORATE_FLAG in VARCHAR2   DEFAULT NULL,
  X_SOURCE_SYSTEM_CODE in VARCHAR2   DEFAULT NULL,
  X_ASK_FOR_FLAG in VARCHAR2   DEFAULT NULL,
  X_PARENT_LIST_HEADER_ID in NUMBER   DEFAULT NULL,
  X_START_DATE_ACTIVE_FIRST in DATE   DEFAULT NULL,
  X_END_DATE_ACTIVE_FIRST in DATE   DEFAULT NULL,
  X_ACTIVE_DATE_FIRST_TYPE in VARCHAR2   DEFAULT NULL,
  X_START_DATE_ACTIVE_SECOND in DATE   DEFAULT NULL,
  X_END_DATE_ACTIVE_SECOND in DATE   DEFAULT NULL,
  X_ACTIVE_DATE_SECOND_TYPE in VARCHAR2   DEFAULT NULL,
  X_ACTIVE_FLAG in VARCHAR2   DEFAULT NULL,
  X_MOBILE_DOWNLOAD in VARCHAR2   DEFAULT NULL,
  X_CURRENCY_HEADER_ID in NUMBER   DEFAULT NULL,
  X_PTE_CODE in VARCHAR2   DEFAULT NULL,
  X_LIST_SOURCE_CODE in VARCHAR2   DEFAULT NULL,
  X_ORIG_SYSTEM_HEADER_REF in VARCHAR2   DEFAULT NULL,
  X_GLOBAL_FLAG in VARCHAR2   DEFAULT NULL,
  X_ORIG_ORG_ID in NUMBER   DEFAULT NULL,
  X_VIEW_FLAG in VARCHAR2   DEFAULT NULL,
  X_UPDATE_FLAG in VARCHAR2  DEFAULT NULL
) is
  l_rowid VARCHAR2(240);
  cursor C is select ROWID from QP_LIST_HEADERS_B
    where LIST_HEADER_ID = X_LIST_HEADER_ID
    ;
begin
  insert into QP_LIST_HEADERS_B (
    LIST_SOURCE_CODE,
    ORIG_SYSTEM_HEADER_REF,
    GLOBAL_FLAG,
    ORIG_ORG_ID,
    MOBILE_DOWNLOAD,
    CURRENCY_HEADER_ID,
    PTE_CODE,
    LIST_HEADER_ID,
    REQUEST_ID,
    LIST_TYPE_CODE,
    START_DATE_ACTIVE,
    END_DATE_ACTIVE,
    AUTOMATIC_FLAG,
    CURRENCY_CODE,
    ROUNDING_FACTOR,
    SHIP_METHOD_CODE,
    FREIGHT_TERMS_CODE,
    TERMS_ID,
    COMMENTS,
    DISCOUNT_LINES_FLAG,
    GSA_INDICATOR,
    PRORATE_FLAG,
    SOURCE_SYSTEM_CODE,
    ASK_FOR_FLAG,
    ACTIVE_FLAG,
    PARENT_LIST_HEADER_ID,
    START_DATE_ACTIVE_FIRST,
    END_DATE_ACTIVE_FIRST,
    ACTIVE_DATE_FIRST_TYPE,
    START_DATE_ACTIVE_SECOND,
    END_DATE_ACTIVE_SECOND,
    ACTIVE_DATE_SECOND_TYPE,
    CONTEXT,
    ATTRIBUTE1,
    ATTRIBUTE2,
    ATTRIBUTE3,
    ATTRIBUTE4,
    ATTRIBUTE5,
    ATTRIBUTE6,
    ATTRIBUTE7,
    ATTRIBUTE8,
    ATTRIBUTE9,
    ATTRIBUTE10,
    ATTRIBUTE11,
    ATTRIBUTE12,
    ATTRIBUTE13,
    ATTRIBUTE14,
    ATTRIBUTE15,
    CREATION_DATE,
    CREATED_BY,
    LAST_UPDATE_DATE,
    LAST_UPDATED_BY,
    LAST_UPDATE_LOGIN,
    PROGRAM_APPLICATION_ID,
    PROGRAM_ID,
    PROGRAM_UPDATE_DATE
  ) values (
    X_LIST_SOURCE_CODE,
    --ENH Upgrade BOAPI for orig_sys...ref RAVI
    nvl(X_ORIG_SYSTEM_HEADER_REF,QP_PRICE_LIST_UTIL.Get_Orig_Sys_Hdr(X_LIST_HEADER_ID)),
    X_GLOBAL_FLAG,
    X_ORIG_ORG_ID,
    X_MOBILE_DOWNLOAD,
    X_CURRENCY_HEADER_ID,
    X_PTE_CODE,
    X_LIST_HEADER_ID,
    X_REQUEST_ID,
    X_LIST_TYPE_CODE,
    X_START_DATE_ACTIVE,
    X_END_DATE_ACTIVE,
    X_AUTOMATIC_FLAG,
    X_CURRENCY_CODE,
    X_ROUNDING_FACTOR,
    X_SHIP_METHOD_CODE,
    X_FREIGHT_TERMS_CODE,
    X_TERMS_ID,
    X_COMMENTS,
    X_DISCOUNT_LINES_FLAG,
    X_GSA_INDICATOR,
    X_PRORATE_FLAG,
    X_SOURCE_SYSTEM_CODE,
    X_ASK_FOR_FLAG,
    X_ACTIVE_FLAG,
    X_PARENT_LIST_HEADER_ID,
    X_START_DATE_ACTIVE_FIRST,
    X_END_DATE_ACTIVE_FIRST,
    X_ACTIVE_DATE_FIRST_TYPE,
    X_START_DATE_ACTIVE_SECOND,
    X_END_DATE_ACTIVE_SECOND,
    X_ACTIVE_DATE_SECOND_TYPE,
    X_CONTEXT,
    X_ATTRIBUTE1,
    X_ATTRIBUTE2,
    X_ATTRIBUTE3,
    X_ATTRIBUTE4,
    X_ATTRIBUTE5,
    X_ATTRIBUTE6,
    X_ATTRIBUTE7,
    X_ATTRIBUTE8,
    X_ATTRIBUTE9,
    X_ATTRIBUTE10,
    X_ATTRIBUTE11,
    X_ATTRIBUTE12,
    X_ATTRIBUTE13,
    X_ATTRIBUTE14,
    X_ATTRIBUTE15,
    X_CREATION_DATE,
    X_CREATED_BY,
    X_LAST_UPDATE_DATE,
    X_LAST_UPDATED_BY,
    X_LAST_UPDATE_LOGIN,
    X_PROGRAM_APPLICATION_ID,
    X_PROGRAM_ID,
    X_PROGRAM_UPDATE_DATE
  );

  insert into QP_LIST_HEADERS_TL (
    LIST_HEADER_ID,
    CREATION_DATE,
    CREATED_BY,
    LAST_UPDATE_DATE,
    LAST_UPDATED_BY,
    LAST_UPDATE_LOGIN,
    NAME,
    DESCRIPTION,
    VERSION_NO,
    LANGUAGE,
    SOURCE_LANG
  ) select
    X_LIST_HEADER_ID,
    X_CREATION_DATE,
    X_CREATED_BY,
    X_LAST_UPDATE_DATE,
    X_LAST_UPDATED_BY,
    X_LAST_UPDATE_LOGIN,
    X_NAME,
    X_DESCRIPTION,
    X_VERSION_NO,
    L.LANGUAGE_CODE,
    userenv('LANG')
  from FND_LANGUAGES L
  where L.INSTALLED_FLAG in ('I', 'B')
  and not exists
    (select NULL
    from QP_LIST_HEADERS_TL T
    where T.LIST_HEADER_ID = X_LIST_HEADER_ID
    and T.LANGUAGE = L.LANGUAGE_CODE);

  open c;
  fetch c into l_rowid;
  if (c%notfound) then
    close c;
    raise no_data_found;
  end if;
 X_ROWID := l_rowid;
  close c;

end INSERT_ROW;

procedure LOCK_ROW (
  X_CONTEXT in VARCHAR2,
  X_ATTRIBUTE1 in VARCHAR2,
  X_ATTRIBUTE2 in VARCHAR2,
  X_ATTRIBUTE3 in VARCHAR2,
  X_ATTRIBUTE4 in VARCHAR2,
  X_ATTRIBUTE5 in VARCHAR2,
  X_ATTRIBUTE6 in VARCHAR2,
  X_ATTRIBUTE7 in VARCHAR2,
  X_ATTRIBUTE8 in VARCHAR2,
  X_ATTRIBUTE9 in VARCHAR2,
  X_ATTRIBUTE10 in VARCHAR2,
  X_ATTRIBUTE11 in VARCHAR2,
  X_ATTRIBUTE12 in VARCHAR2,
  X_ATTRIBUTE13 in VARCHAR2,
  X_ATTRIBUTE14 in VARCHAR2,
  X_ATTRIBUTE15 in VARCHAR2,
  X_CURRENCY_CODE in VARCHAR2,
  X_SHIP_METHOD_CODE in VARCHAR2,
  X_FREIGHT_TERMS_CODE in VARCHAR2,
  X_LIST_HEADER_ID in NUMBER,
  X_START_DATE_ACTIVE in DATE,
  X_END_DATE_ACTIVE in DATE,
  X_AUTOMATIC_FLAG in VARCHAR2,
  X_LIST_TYPE_CODE in VARCHAR2,
  X_TERMS_ID in NUMBER,
  X_ROUNDING_FACTOR in NUMBER,
  X_REQUEST_ID in NUMBER,
  X_PROGRAM_APPLICATION_ID in NUMBER  DEFAULT NULL,
  X_PROGRAM_ID in NUMBER   DEFAULT NULL,
  X_PROGRAM_UPDATE_DATE in DATE   DEFAULT NULL,
  X_DISCOUNT_LINES_FLAG in VARCHAR2   DEFAULT NULL,
  X_NAME in VARCHAR2,
  X_DESCRIPTION in VARCHAR2,
  X_VERSION_NO in VARCHAR2   DEFAULT NULL,
  X_COMMENTS in VARCHAR2   DEFAULT NULL,
  X_GSA_INDICATOR in VARCHAR2   DEFAULT NULL,
  X_PRORATE_FLAG in VARCHAR2   DEFAULT NULL,
  X_SOURCE_SYSTEM_CODE in VARCHAR2   DEFAULT NULL,
  X_ASK_FOR_FLAG in VARCHAR2   DEFAULT NULL,
  X_PARENT_LIST_HEADER_ID in NUMBER   DEFAULT NULL,
  X_START_DATE_ACTIVE_FIRST in DATE   DEFAULT NULL,
  X_END_DATE_ACTIVE_FIRST in DATE   DEFAULT NULL,
  X_ACTIVE_DATE_FIRST_TYPE in VARCHAR2   DEFAULT NULL,
  X_START_DATE_ACTIVE_SECOND in DATE   DEFAULT NULL,
  X_END_DATE_ACTIVE_SECOND in DATE   DEFAULT NULL,
  X_ACTIVE_DATE_SECOND_TYPE in VARCHAR2   DEFAULT NULL,
  X_ACTIVE_FLAG in VARCHAR2   DEFAULT NULL,
  X_MOBILE_DOWNLOAD in VARCHAR2   DEFAULT NULL,
  X_CURRENCY_HEADER_ID in NUMBER   DEFAULT NULL,
  X_PTE_CODE in VARCHAR2   DEFAULT NULL,
  X_LIST_SOURCE_CODE in VARCHAR2   DEFAULT NULL,
  X_ORIG_SYSTEM_HEADER_REF in VARCHAR2   DEFAULT NULL,
  X_GLOBAL_FLAG in VARCHAR2   DEFAULT NULL,
  X_ORIG_ORG_ID in NUMBER   DEFAULT NULL,
  X_VIEW_FLAG in VARCHAR2   DEFAULT NULL,
  X_UPDATE_FLAG in VARCHAR2  DEFAULT NULL
) is
  cursor c is select
      LIST_SOURCE_CODE,
      ORIG_SYSTEM_HEADER_REF,
      GLOBAL_FLAG,
      ORIG_ORG_ID,
      MOBILE_DOWNLOAD,
      CURRENCY_HEADER_ID,
      PTE_CODE,
      REQUEST_ID,
      LIST_TYPE_CODE,
      START_DATE_ACTIVE,
      END_DATE_ACTIVE,
      AUTOMATIC_FLAG,
      CURRENCY_CODE,
      ROUNDING_FACTOR,
      SHIP_METHOD_CODE,
      FREIGHT_TERMS_CODE,
      TERMS_ID,
      COMMENTS,
      DISCOUNT_LINES_FLAG,
      GSA_INDICATOR,
      PRORATE_FLAG,
      SOURCE_SYSTEM_CODE,
      ASK_FOR_FLAG,
      ACTIVE_FLAG,
      PARENT_LIST_HEADER_ID,
      START_DATE_ACTIVE_FIRST,
      END_DATE_ACTIVE_FIRST,
      ACTIVE_DATE_FIRST_TYPE,
      START_DATE_ACTIVE_SECOND,
      END_DATE_ACTIVE_SECOND,
      ACTIVE_DATE_SECOND_TYPE,
      CONTEXT,
      ATTRIBUTE1,
      ATTRIBUTE2,
      ATTRIBUTE3,
      ATTRIBUTE4,
      ATTRIBUTE5,
      ATTRIBUTE6,
      ATTRIBUTE7,
      ATTRIBUTE8,
      ATTRIBUTE9,
      ATTRIBUTE10,
      ATTRIBUTE11,
      ATTRIBUTE12,
      ATTRIBUTE13,
      ATTRIBUTE14,
      ATTRIBUTE15
    from QP_LIST_HEADERS_B
    where LIST_HEADER_ID = X_LIST_HEADER_ID
    for update of LIST_HEADER_ID nowait;
  recinfo c%rowtype;

  cursor c1 is select
      NAME,
      DESCRIPTION,
      decode(LANGUAGE, userenv('LANG'), 'Y', 'N') BASELANG,
      VERSION_NO
    from QP_LIST_HEADERS_TL
    where LIST_HEADER_ID = X_LIST_HEADER_ID
    and userenv('LANG') in (LANGUAGE, SOURCE_LANG)
    for update of LIST_HEADER_ID nowait;
begin
  open c;
  fetch c into recinfo;
  if (c%notfound) then
    close c;
    fnd_message.set_name('FND', 'FORM_RECORD_DELETED');
    app_exception.raise_exception;
  end if;
  close c;
  if (    ((recinfo.LIST_SOURCE_CODE = X_LIST_SOURCE_CODE)
           OR ((recinfo.LIST_SOURCE_CODE is null) AND (X_LIST_SOURCE_CODE is null)))
      AND ((recinfo.ORIG_SYSTEM_HEADER_REF = X_ORIG_SYSTEM_HEADER_REF)
           OR ((recinfo.ORIG_SYSTEM_HEADER_REF is null) AND (X_ORIG_SYSTEM_HEADER_REF is null)))
      AND ((recinfo.GLOBAL_FLAG = X_GLOBAL_FLAG)
           OR ((recinfo.GLOBAL_FLAG is null) AND (X_GLOBAL_FLAG is null)))
      AND ((recinfo.ORIG_ORG_ID = X_ORIG_ORG_ID)
           OR ((recinfo.ORIG_ORG_ID is null) AND (X_ORIG_ORG_ID is null)))
      AND ((recinfo.MOBILE_DOWNLOAD = X_MOBILE_DOWNLOAD)
           OR ((recinfo.MOBILE_DOWNLOAD is null) AND (X_MOBILE_DOWNLOAD is null)))
      AND ((recinfo.CURRENCY_HEADER_ID = X_CURRENCY_HEADER_ID)
           OR ((recinfo.CURRENCY_HEADER_ID is null) AND (X_CURRENCY_HEADER_ID is null)))
      AND ((recinfo.PTE_CODE = X_PTE_CODE)
           OR ((recinfo.PTE_CODE is null) AND (X_PTE_CODE is null)))
      AND ((recinfo.REQUEST_ID = X_REQUEST_ID)
           OR ((recinfo.REQUEST_ID is null) AND (X_REQUEST_ID is null)))
      AND (recinfo.LIST_TYPE_CODE = X_LIST_TYPE_CODE)
      AND ((recinfo.START_DATE_ACTIVE = X_START_DATE_ACTIVE)
           OR ((recinfo.START_DATE_ACTIVE is null) AND (X_START_DATE_ACTIVE is null)))
      AND ((recinfo.END_DATE_ACTIVE = X_END_DATE_ACTIVE)
           OR ((recinfo.END_DATE_ACTIVE is null) AND (X_END_DATE_ACTIVE is null)))
      AND ((recinfo.AUTOMATIC_FLAG = X_AUTOMATIC_FLAG)
           OR ((recinfo.AUTOMATIC_FLAG is null) AND (X_AUTOMATIC_FLAG is null)))
      AND ((recinfo.CURRENCY_CODE = X_CURRENCY_CODE)
           OR ((recinfo.CURRENCY_CODE is null) AND (X_CURRENCY_CODE is null)))
      AND ((recinfo.ROUNDING_FACTOR = X_ROUNDING_FACTOR)
           OR ((recinfo.ROUNDING_FACTOR is null) AND (X_ROUNDING_FACTOR is null)))
      AND ((recinfo.SHIP_METHOD_CODE = X_SHIP_METHOD_CODE)
           OR ((recinfo.SHIP_METHOD_CODE is null) AND (X_SHIP_METHOD_CODE is null)))
      AND ((recinfo.FREIGHT_TERMS_CODE = X_FREIGHT_TERMS_CODE)
           OR ((recinfo.FREIGHT_TERMS_CODE is null) AND (X_FREIGHT_TERMS_CODE is null)))
      AND ((recinfo.TERMS_ID = X_TERMS_ID)
           OR ((recinfo.TERMS_ID is null) AND (X_TERMS_ID is null)))
      AND ((recinfo.COMMENTS = X_COMMENTS)
           OR ((recinfo.COMMENTS is null) AND (X_COMMENTS is null)))
      AND ((recinfo.DISCOUNT_LINES_FLAG = X_DISCOUNT_LINES_FLAG)
           OR ((recinfo.DISCOUNT_LINES_FLAG is null) AND (X_DISCOUNT_LINES_FLAG is null)))
      AND ((recinfo.GSA_INDICATOR = X_GSA_INDICATOR)
           OR ((recinfo.GSA_INDICATOR is null) AND (X_GSA_INDICATOR is null)))
      AND ((recinfo.PRORATE_FLAG = X_PRORATE_FLAG)
           OR ((recinfo.PRORATE_FLAG is null) AND (X_PRORATE_FLAG is null)))
      AND ((recinfo.SOURCE_SYSTEM_CODE = X_SOURCE_SYSTEM_CODE)
           OR ((recinfo.SOURCE_SYSTEM_CODE is null) AND (X_SOURCE_SYSTEM_CODE is null)))
      AND ((recinfo.ASK_FOR_FLAG = X_ASK_FOR_FLAG)
           OR ((recinfo.ASK_FOR_FLAG is null) AND (X_ASK_FOR_FLAG is null)))
      AND ((recinfo.ACTIVE_FLAG = X_ACTIVE_FLAG)
           OR ((recinfo.ACTIVE_FLAG is null) AND (X_ACTIVE_FLAG is null)))
      AND ((recinfo.PARENT_LIST_HEADER_ID = X_PARENT_LIST_HEADER_ID)
           OR ((recinfo.PARENT_LIST_HEADER_ID is null) AND (X_PARENT_LIST_HEADER_ID is null)))
      AND ((recinfo.START_DATE_ACTIVE_FIRST = X_START_DATE_ACTIVE_FIRST)
           OR ((recinfo.START_DATE_ACTIVE_FIRST is null) AND (X_START_DATE_ACTIVE_FIRST is null)))
      AND ((recinfo.END_DATE_ACTIVE_FIRST = X_END_DATE_ACTIVE_FIRST)
           OR ((recinfo.END_DATE_ACTIVE_FIRST is null) AND (X_END_DATE_ACTIVE_FIRST is null)))
      AND ((recinfo.ACTIVE_DATE_FIRST_TYPE = X_ACTIVE_DATE_FIRST_TYPE)
           OR ((recinfo.ACTIVE_DATE_FIRST_TYPE is null) AND (X_ACTIVE_DATE_FIRST_TYPE is null)))
      AND ((recinfo.START_DATE_ACTIVE_SECOND = X_START_DATE_ACTIVE_SECOND)
           OR ((recinfo.START_DATE_ACTIVE_SECOND is null) AND (X_START_DATE_ACTIVE_SECOND is null)))
      AND ((recinfo.END_DATE_ACTIVE_SECOND = X_END_DATE_ACTIVE_SECOND)
           OR ((recinfo.END_DATE_ACTIVE_SECOND is null) AND (X_END_DATE_ACTIVE_SECOND is null)))
      AND ((recinfo.ACTIVE_DATE_SECOND_TYPE = X_ACTIVE_DATE_SECOND_TYPE)
           OR ((recinfo.ACTIVE_DATE_SECOND_TYPE is null) AND (X_ACTIVE_DATE_SECOND_TYPE is null)))
      AND ((recinfo.CONTEXT = X_CONTEXT)
           OR ((recinfo.CONTEXT is null) AND (X_CONTEXT is null)))
      AND ((recinfo.ATTRIBUTE1 = X_ATTRIBUTE1)
           OR ((recinfo.ATTRIBUTE1 is null) AND (X_ATTRIBUTE1 is null)))
      AND ((recinfo.ATTRIBUTE2 = X_ATTRIBUTE2)
           OR ((recinfo.ATTRIBUTE2 is null) AND (X_ATTRIBUTE2 is null)))
      AND ((recinfo.ATTRIBUTE3 = X_ATTRIBUTE3)
           OR ((recinfo.ATTRIBUTE3 is null) AND (X_ATTRIBUTE3 is null)))
      AND ((recinfo.ATTRIBUTE4 = X_ATTRIBUTE4)
           OR ((recinfo.ATTRIBUTE4 is null) AND (X_ATTRIBUTE4 is null)))
      AND ((recinfo.ATTRIBUTE5 = X_ATTRIBUTE5)
           OR ((recinfo.ATTRIBUTE5 is null) AND (X_ATTRIBUTE5 is null)))
      AND ((recinfo.ATTRIBUTE6 = X_ATTRIBUTE6)
           OR ((recinfo.ATTRIBUTE6 is null) AND (X_ATTRIBUTE6 is null)))
      AND ((recinfo.ATTRIBUTE7 = X_ATTRIBUTE7)
           OR ((recinfo.ATTRIBUTE7 is null) AND (X_ATTRIBUTE7 is null)))
      AND ((recinfo.ATTRIBUTE8 = X_ATTRIBUTE8)
           OR ((recinfo.ATTRIBUTE8 is null) AND (X_ATTRIBUTE8 is null)))
      AND ((recinfo.ATTRIBUTE9 = X_ATTRIBUTE9)
           OR ((recinfo.ATTRIBUTE9 is null) AND (X_ATTRIBUTE9 is null)))
      AND ((recinfo.ATTRIBUTE10 = X_ATTRIBUTE10)
           OR ((recinfo.ATTRIBUTE10 is null) AND (X_ATTRIBUTE10 is null)))
      AND ((recinfo.ATTRIBUTE11 = X_ATTRIBUTE11)
           OR ((recinfo.ATTRIBUTE11 is null) AND (X_ATTRIBUTE11 is null)))
      AND ((recinfo.ATTRIBUTE12 = X_ATTRIBUTE12)
           OR ((recinfo.ATTRIBUTE12 is null) AND (X_ATTRIBUTE12 is null)))
      AND ((recinfo.ATTRIBUTE13 = X_ATTRIBUTE13)
           OR ((recinfo.ATTRIBUTE13 is null) AND (X_ATTRIBUTE13 is null)))
      AND ((recinfo.ATTRIBUTE14 = X_ATTRIBUTE14)
           OR ((recinfo.ATTRIBUTE14 is null) AND (X_ATTRIBUTE14 is null)))
      AND ((recinfo.ATTRIBUTE15 = X_ATTRIBUTE15)
           OR ((recinfo.ATTRIBUTE15 is null) AND (X_ATTRIBUTE15 is null)))
  ) then
    null;
  else
    fnd_message.set_name('FND', 'FORM_RECORD_CHANGED');
    app_exception.raise_exception;
  end if;

  for tlinfo in c1 loop
    if (tlinfo.BASELANG = 'Y') then
      if (    (tlinfo.NAME = X_NAME)
          AND ((tlinfo.DESCRIPTION = X_DESCRIPTION)
               OR ((tlinfo.DESCRIPTION is null) AND (X_DESCRIPTION is null)))
          AND ((tlinfo.VERSION_NO = X_VERSION_NO)
               OR ((tlinfo.VERSION_NO is null) AND (X_VERSION_NO is null)))
      ) then
        null;
      else
        fnd_message.set_name('FND', 'FORM_RECORD_CHANGED');
        app_exception.raise_exception;
      end if;
    end if;
  end loop;
  return;
end LOCK_ROW;

procedure UPDATE_ROW (
  X_CONTEXT in VARCHAR2,
  X_ATTRIBUTE1 in VARCHAR2,
  X_ATTRIBUTE2 in VARCHAR2,
  X_ATTRIBUTE3 in VARCHAR2,
  X_ATTRIBUTE4 in VARCHAR2,
  X_ATTRIBUTE5 in VARCHAR2,
  X_ATTRIBUTE6 in VARCHAR2,
  X_ATTRIBUTE7 in VARCHAR2,
  X_ATTRIBUTE8 in VARCHAR2,
  X_ATTRIBUTE9 in VARCHAR2,
  X_ATTRIBUTE10 in VARCHAR2,
  X_ATTRIBUTE11 in VARCHAR2,
  X_ATTRIBUTE12 in VARCHAR2,
  X_ATTRIBUTE13 in VARCHAR2,
  X_ATTRIBUTE14 in VARCHAR2,
  X_ATTRIBUTE15 in VARCHAR2,
  X_CURRENCY_CODE in VARCHAR2,
  X_SHIP_METHOD_CODE in VARCHAR2,
  X_FREIGHT_TERMS_CODE in VARCHAR2,
  X_LIST_HEADER_ID in NUMBER,
  X_START_DATE_ACTIVE in DATE,
  X_END_DATE_ACTIVE in DATE,
  X_AUTOMATIC_FLAG in VARCHAR2,
  X_LIST_TYPE_CODE in VARCHAR2,
  X_TERMS_ID in NUMBER,
  X_ROUNDING_FACTOR in NUMBER,
  X_REQUEST_ID in NUMBER,
  X_LAST_UPDATE_DATE in DATE,
  X_LAST_UPDATED_BY in NUMBER,
  X_LAST_UPDATE_LOGIN in NUMBER,
  X_PROGRAM_APPLICATION_ID in NUMBER DEFAULT NULL,
  X_PROGRAM_ID in NUMBER DEFAULT NULL,
  X_PROGRAM_UPDATE_DATE in DATE DEFAULT NULL,
  X_DISCOUNT_LINES_FLAG in VARCHAR2 DEFAULT NULL,
  X_NAME in VARCHAR2,
  X_DESCRIPTION in VARCHAR2,
  X_VERSION_NO in VARCHAR2 DEFAULT NULL,
  X_COMMENTS in VARCHAR2 DEFAULT NULL,
  X_GSA_INDICATOR in VARCHAR2 DEFAULT NULL,
  X_PRORATE_FLAG in VARCHAR2 DEFAULT NULL,
  X_SOURCE_SYSTEM_CODE in VARCHAR2 DEFAULT NULL,
  X_ASK_FOR_FLAG in VARCHAR2 DEFAULT NULL,
  X_PARENT_LIST_HEADER_ID in NUMBER DEFAULT NULL,
  X_START_DATE_ACTIVE_FIRST in DATE DEFAULT NULL,
  X_END_DATE_ACTIVE_FIRST in DATE DEFAULT NULL,
  X_ACTIVE_DATE_FIRST_TYPE in VARCHAR2 DEFAULT NULL,
  X_START_DATE_ACTIVE_SECOND in DATE DEFAULT NULL,
  X_END_DATE_ACTIVE_SECOND in DATE DEFAULT NULL,
  X_ACTIVE_DATE_SECOND_TYPE in VARCHAR2 DEFAULT NULL,
  X_ACTIVE_FLAG in VARCHAR2 DEFAULT NULL,
  X_MOBILE_DOWNLOAD in VARCHAR2 DEFAULT NULL,
  X_CURRENCY_HEADER_ID in NUMBER DEFAULT NULL,
  X_PTE_CODE in VARCHAR2 DEFAULT NULL,
  X_LIST_SOURCE_CODE in VARCHAR2 DEFAULT NULL,
  X_ORIG_SYSTEM_HEADER_REF in VARCHAR2 DEFAULT NULL,
  X_GLOBAL_FLAG in VARCHAR2 DEFAULT NULL,
  X_ORIG_ORG_ID in NUMBER DEFAULT NULL,
  X_VIEW_FLAG in VARCHAR2 DEFAULT NULL,
  X_UPDATE_FLAG in VARCHAR2 DEFAULT NULL
) is
begin
  update QP_LIST_HEADERS_B set
    LIST_SOURCE_CODE = X_LIST_SOURCE_CODE,
    ORIG_SYSTEM_HEADER_REF = X_ORIG_SYSTEM_HEADER_REF,
    GLOBAL_FLAG = X_GLOBAL_FLAG,
    ORIG_ORG_ID = X_ORIG_ORG_ID,
    MOBILE_DOWNLOAD = X_MOBILE_DOWNLOAD,
    CURRENCY_HEADER_ID = X_CURRENCY_HEADER_ID,
    PTE_CODE = X_PTE_CODE,
    REQUEST_ID = X_REQUEST_ID,
    LIST_TYPE_CODE = X_LIST_TYPE_CODE,
    START_DATE_ACTIVE = X_START_DATE_ACTIVE,
    END_DATE_ACTIVE = X_END_DATE_ACTIVE,
    AUTOMATIC_FLAG = X_AUTOMATIC_FLAG,
    CURRENCY_CODE = X_CURRENCY_CODE,
    ROUNDING_FACTOR = X_ROUNDING_FACTOR,
    SHIP_METHOD_CODE = X_SHIP_METHOD_CODE,
    FREIGHT_TERMS_CODE = X_FREIGHT_TERMS_CODE,
    TERMS_ID = X_TERMS_ID,
    COMMENTS = X_COMMENTS,
    DISCOUNT_LINES_FLAG = X_DISCOUNT_LINES_FLAG,
    GSA_INDICATOR = X_GSA_INDICATOR,
    PRORATE_FLAG = X_PRORATE_FLAG,
    SOURCE_SYSTEM_CODE = X_SOURCE_SYSTEM_CODE,
    ASK_FOR_FLAG = X_ASK_FOR_FLAG,
    ACTIVE_FLAG = X_ACTIVE_FLAG,
    PARENT_LIST_HEADER_ID = X_PARENT_LIST_HEADER_ID,
    START_DATE_ACTIVE_FIRST = X_START_DATE_ACTIVE_FIRST,
    END_DATE_ACTIVE_FIRST = X_END_DATE_ACTIVE_FIRST,
    ACTIVE_DATE_FIRST_TYPE = X_ACTIVE_DATE_FIRST_TYPE,
    START_DATE_ACTIVE_SECOND = X_START_DATE_ACTIVE_SECOND,
    END_DATE_ACTIVE_SECOND = X_END_DATE_ACTIVE_SECOND,
    ACTIVE_DATE_SECOND_TYPE = X_ACTIVE_DATE_SECOND_TYPE,
    CONTEXT = X_CONTEXT,
    ATTRIBUTE1 = X_ATTRIBUTE1,
    ATTRIBUTE2 = X_ATTRIBUTE2,
    ATTRIBUTE3 = X_ATTRIBUTE3,
    ATTRIBUTE4 = X_ATTRIBUTE4,
    ATTRIBUTE5 = X_ATTRIBUTE5,
    ATTRIBUTE6 = X_ATTRIBUTE6,
    ATTRIBUTE7 = X_ATTRIBUTE7,
    ATTRIBUTE8 = X_ATTRIBUTE8,
    ATTRIBUTE9 = X_ATTRIBUTE9,
    ATTRIBUTE10 = X_ATTRIBUTE10,
    ATTRIBUTE11 = X_ATTRIBUTE11,
    ATTRIBUTE12 = X_ATTRIBUTE12,
    ATTRIBUTE13 = X_ATTRIBUTE13,
    ATTRIBUTE14 = X_ATTRIBUTE14,
    ATTRIBUTE15 = X_ATTRIBUTE15,
    LAST_UPDATE_DATE = X_LAST_UPDATE_DATE,
    LAST_UPDATED_BY = X_LAST_UPDATED_BY,
    LAST_UPDATE_LOGIN = X_LAST_UPDATE_LOGIN
  where LIST_HEADER_ID = X_LIST_HEADER_ID;

  if (sql%notfound) then
    raise no_data_found;
  end if;

  update QP_LIST_HEADERS_TL set
    NAME = X_NAME,
    DESCRIPTION = X_DESCRIPTION,
    LAST_UPDATE_DATE = X_LAST_UPDATE_DATE,
    LAST_UPDATED_BY = X_LAST_UPDATED_BY,
    LAST_UPDATE_LOGIN = X_LAST_UPDATE_LOGIN,
    SOURCE_LANG = userenv('LANG'),
    VERSION_NO = X_VERSION_NO
  where LIST_HEADER_ID = X_LIST_HEADER_ID
  and userenv('LANG') in (LANGUAGE, SOURCE_LANG);

  if (sql%notfound) then
    raise no_data_found;
  end if;
end UPDATE_ROW;

procedure DELETE_ROW (
  X_LIST_HEADER_ID in NUMBER
) is
begin
  delete from QP_LIST_HEADERS_TL
  where LIST_HEADER_ID = X_LIST_HEADER_ID;

  if (sql%notfound) then
    raise no_data_found;
  end if;

  delete from QP_LIST_HEADERS_B
  where LIST_HEADER_ID = X_LIST_HEADER_ID;

  if (sql%notfound) then
    raise no_data_found;
  end if;
end DELETE_ROW;

procedure ADD_LANGUAGE
is
begin
  delete from QP_LIST_HEADERS_TL T
  where not exists
    (select NULL
    from QP_LIST_HEADERS_B B
    where B.LIST_HEADER_ID = T.LIST_HEADER_ID
    );

  update QP_LIST_HEADERS_TL T set (
      NAME,
      DESCRIPTION
    ) = (select
      B.NAME,
      B.DESCRIPTION
    from QP_LIST_HEADERS_TL B
    where B.LIST_HEADER_ID = T.LIST_HEADER_ID
    and B.LANGUAGE = T.SOURCE_LANG)
  where (
      T.LIST_HEADER_ID,
      T.LANGUAGE
  ) in (select
      SUBT.LIST_HEADER_ID,
      SUBT.LANGUAGE
    from QP_LIST_HEADERS_TL SUBB, QP_LIST_HEADERS_TL SUBT
    where SUBB.LIST_HEADER_ID = SUBT.LIST_HEADER_ID
    and SUBB.LANGUAGE = SUBT.SOURCE_LANG
    and (SUBB.NAME <> SUBT.NAME
      or SUBB.DESCRIPTION <> SUBT.DESCRIPTION
      or (SUBB.DESCRIPTION is null and SUBT.DESCRIPTION is not null)
      or (SUBB.DESCRIPTION is not null and SUBT.DESCRIPTION is null)
  ));

  insert into QP_LIST_HEADERS_TL (
    LIST_HEADER_ID,
    CREATION_DATE,
    CREATED_BY,
    LAST_UPDATE_DATE,
    LAST_UPDATED_BY,
    LAST_UPDATE_LOGIN,
    NAME,
    DESCRIPTION,
    VERSION_NO,
    LANGUAGE,
    SOURCE_LANG
  ) select
    B.LIST_HEADER_ID,
    B.CREATION_DATE,
    B.CREATED_BY,
    B.LAST_UPDATE_DATE,
    B.LAST_UPDATED_BY,
    B.LAST_UPDATE_LOGIN,
    B.NAME,
    B.DESCRIPTION,
    B.VERSION_NO,
    L.LANGUAGE_CODE,
    B.SOURCE_LANG
  from QP_LIST_HEADERS_TL B, FND_LANGUAGES L
  where L.INSTALLED_FLAG in ('I', 'B')
  and B.LANGUAGE = userenv('LANG')
  and not exists
    (select NULL
    from QP_LIST_HEADERS_TL T
    where T.LIST_HEADER_ID = B.LIST_HEADER_ID
    and T.LANGUAGE = L.LANGUAGE_CODE);
end ADD_LANGUAGE;

end QP_LIST_HEADERS_PKG;

/
