--------------------------------------------------------
--  DDL for Package Body BOM_CSTRISLR_XMLP_PKG
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE PACKAGE BODY "APPS"."BOM_CSTRISLR_XMLP_PKG" AS
/* $Header: CSTRISLRB.pls 120.0 2007/12/24 10:02:09 dwkrishn noship $ */
  FUNCTION AFTERREPORT RETURN BOOLEAN IS
  BEGIN
    /*SRW.USER_EXIT('FND SRWEXIT')*/NULL;
    /*SRW.MESSAGE(1
               ,'BOM_CSTRISLR_XMLP_PKG >>     ' || TO_CHAR(SYSDATE
                      ,'Dy Mon FmDD HH24:MI:SS YYYY'))*/NULL;
    RETURN (TRUE);
  END AFTERREPORT;

  FUNCTION BEFOREREPORT RETURN BOOLEAN IS
  BEGIN
    DECLARE
      L_FCN_CURRENCY VARCHAR2(15);
      INVALID_OPTION EXCEPTION;
    BEGIN
      BEGIN
        P_CONC_REQUEST_ID := FND_GLOBAL.CONC_REQUEST_ID;
        LP_QTY_PRECISION := BOM_common_xmlp_pkg.get_precision(P_QTY_PRECISION);
        /*SRW.USER_EXIT('FND SRWINIT')*/NULL;
      EXCEPTION
        WHEN OTHERS THEN
          /*SRW.MESSAGE(999
                     ,'FND SRWINIT >X')*/NULL;
          RAISE;
      END;
      P_EXCHANGE_RATE := FND_NUMBER.CANONICAL_TO_NUMBER(P_EXCHANGE_RATE_CHAR);
      SELECT
        O.ORGANIZATION_NAME,
        NVL(EXTENDED_PRECISION
           ,PRECISION),
        NVL(MINIMUM_ACCOUNTABLE_UNIT
           ,POWER(10
                ,NVL(-PRECISION
                   ,0))),
        MCS.CATEGORY_SET_NAME
      INTO P_ORGANIZATION,P_EXT_PREC,ROUND_UNIT,P_CAT_SET_NAME
      FROM
        ORG_ORGANIZATION_DEFINITIONS O,
        FND_CURRENCIES FC,
        MTL_CATEGORY_SETS MCS
      WHERE FC.CURRENCY_CODE = P_CURRENCY_CODE
        AND O.ORGANIZATION_ID = P_ORG_ID
        AND MCS.CATEGORY_SET_ID = P_CATEGORY_SET;
      SELECT
        SOB.CURRENCY_CODE
      INTO L_FCN_CURRENCY
      FROM
        GL_SETS_OF_BOOKS SOB,
        ORG_ORGANIZATION_DEFINITIONS OOD
      WHERE OOD.ORGANIZATION_ID = P_ORG_ID
        AND SOB.SET_OF_BOOKS_ID = OOD.SET_OF_BOOKS_ID;
      IF L_FCN_CURRENCY = P_CURRENCY_CODE THEN
        P_CURRENCY_DSP := P_CURRENCY_CODE;
      ELSE
        P_CURRENCY_DSP := P_CURRENCY_CODE || ' @ ' || TO_CHAR(ROUND(1 / P_EXCHANGE_RATE
                                       ,5)) || L_FCN_CURRENCY;
      END IF;
      BEGIN
        NULL;
      EXCEPTION
        WHEN OTHERS THEN
          /*SRW.MESSAGE(999
                     ,'FND FLEXSQL(MCAT) >X')*/NULL;
          RAISE;
      END;
      BEGIN
        NULL;
      EXCEPTION
        WHEN OTHERS THEN
          /*SRW.MESSAGE(999
                     ,'FND FLEXSQL(MSTK) >X')*/NULL;
          RAISE;
      END;
      BEGIN
        NULL;
      EXCEPTION
        WHEN OTHERS THEN
          /*SRW.MESSAGE(999
                     ,'FND FLEXSQL(MTLL) >X')*/NULL;
          RAISE;
      END;
      /*SRW.MESSAGE(0
                 ,'BOM_CSTRISLR_XMLP_PKG <<     ' || TO_CHAR(SYSDATE
                        ,'Dy Mon FmDD HH24:MI:SS YYYY'))*/NULL;
    EXCEPTION
      WHEN INVALID_OPTION THEN
        /*RAISE SRW.PROGRAM_ABORT*/RAISE_APPLICATION_ERROR(-20101,null);
      WHEN OTHERS THEN
        /*SRW.MESSAGE(999
                   ,SQLERRM)*/NULL;
        /*SRW.MESSAGE(999
                   ,'BOM_CSTRISLR_XMLP_PKG >X     ' || TO_CHAR(SYSDATE
                          ,'Dy Mon FmDD HH24:MI:SS YYYY'))*/NULL;
        /*RAISE SRW.PROGRAM_ABORT*/RAISE_APPLICATION_ERROR(-20101,null);
    END;
    RETURN (TRUE);
  END BEFOREREPORT;

  FUNCTION AC_ITEM_PSEGFORMULA(AC_ITEM IN VARCHAR2
                              ,AC_ITEM_SEGMENT IN VARCHAR2
                              ,AC_ITEM_PSEG IN VARCHAR2) RETURN VARCHAR2 IS
  BEGIN
    /*SRW.REFERENCE(AC_ITEM)*/NULL;
    /*SRW.REFERENCE(AC_ITEM_SEGMENT)*/NULL;
    RETURN (AC_ITEM_PSEG);
  END AC_ITEM_PSEGFORMULA;

  FUNCTION AC_CAT_PSEGFORMULA(AC_CATEGORY IN VARCHAR2
                             ,AC_CATEGORY_SEGMENT IN VARCHAR2
                             ,AC_CAT_PSEG IN VARCHAR2) RETURN VARCHAR2 IS
  BEGIN
    /*SRW.REFERENCE(AC_CATEGORY)*/NULL;
    /*SRW.REFERENCE(AC_CATEGORY_SEGMENT)*/NULL;
    RETURN (AC_CAT_PSEG);
  END AC_CAT_PSEGFORMULA;

  FUNCTION AC_LOC_PSEGFORMULA(AC_LOC IN VARCHAR2
                             ,AC_LOC_SEGMENT IN VARCHAR2
                             ,AC_LOC_PSEG IN VARCHAR2) RETURN VARCHAR2 IS
  BEGIN
    /*SRW.REFERENCE(AC_LOC)*/NULL;
    /*SRW.REFERENCE(AC_LOC_SEGMENT)*/NULL;
    RETURN (AC_LOC_PSEG);
  END AC_LOC_PSEGFORMULA;

  FUNCTION AC_I_ROWCOUNTFORMULA(AC_I_QUANTITY IN NUMBER) RETURN NUMBER IS
  BEGIN
    IF P_ZERO_QTY = 1 AND P_NEG_QTY = 1 AND AC_I_QUANTITY <= 0 THEN
      RETURN (1);
    ELSIF P_ZERO_QTY = 1 AND P_NEG_QTY = 2 THEN
      RETURN (1);
    ELSIF P_ZERO_QTY = 2 AND P_NEG_QTY = 1 AND AC_I_QUANTITY < 0 THEN
      RETURN (1);
    ELSIF P_ZERO_QTY = 2 AND P_NEG_QTY = 2 AND AC_I_QUANTITY <> 0 THEN
      RETURN (1);
    ELSE
      RETURN (0);
    END IF;
    RETURN NULL;
  END AC_I_ROWCOUNTFORMULA;

END BOM_CSTRISLR_XMLP_PKG;


/
