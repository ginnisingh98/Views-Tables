--------------------------------------------------------
--  DDL for Package Body PSB_PSBRPBRT_XMLP_PKG
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE PACKAGE BODY "APPS"."PSB_PSBRPBRT_XMLP_PKG" AS
/* $Header: PSBRPBRTB.pls 120.0 2008/01/07 10:34:03 vijranga noship $ */
  FUNCTION CF_OPEN_BALANCEFORMULA(CODE_COMBINATION_ID IN NUMBER
                                 ,GL_BUDGET_VERSION_ID IN NUMBER
                                 ,SET_OF_BOOKS_ID IN NUMBER
                                 ,CURRENCY_CODE IN VARCHAR2) RETURN NUMBER IS
    L_OPEN_BALANCE NUMBER := 0;
  BEGIN
    L_OPEN_BALANCE := PSB_BUDGET_REVISIONS_PVT.FIND_ORIGINAL_BUDGET_BALANCE(P_CODE_COMBINATION_ID => CODE_COMBINATION_ID
                                                                           ,P_BUDGET_GROUP_ID => P_BUDGET_GROUP_ID
                                                                           ,P_GL_PERIOD => P_START_PERIOD
                                                                           ,P_GL_BUDGET_VERSION_ID => GL_BUDGET_VERSION_ID
                                                                           ,P_SET_OF_BOOKS_ID => SET_OF_BOOKS_ID
                                                                           ,P_END_GL_PERIOD => P_END_PERIOD
                                                                           ,P_CURRENCY_CODE => CURRENCY_CODE);
    RETURN (NVL(L_OPEN_BALANCE
              ,0));
  END CF_OPEN_BALANCEFORMULA;
  FUNCTION CP_1FORMULA(CF_OPEN_BALANCE IN NUMBER) RETURN NUMBER IS
  BEGIN
    RETURN (NVL(CF_OPEN_BALANCE
              ,0));
  END CP_1FORMULA;
  FUNCTION BEFOREREPORT RETURN BOOLEAN IS
  BEGIN
    P_CONC_REQUEST_ID := FND_GLOBAL.CONC_REQUEST_ID;
    /*SRW.USER_EXIT('FND SRWINIT')*/NULL;
    FND_MESSAGE.SET_NAME('PSB'
                        ,'PSB_NO_DATA_FOUND');
    CP_NO_DATA_FOUND := FND_MESSAGE.GET;
    FND_MESSAGE.SET_NAME('PSB'
                        ,'PSB_END_OF_REPORT');
    CP_END_OF_REPORT := FND_MESSAGE.GET;
    RETURN (TRUE);
  END BEFOREREPORT;
  FUNCTION CF_END_BALANCEFORMULA(CF_OPEN_BALANCE IN NUMBER
                                ,CS_REVISION_VALUE IN NUMBER) RETURN NUMBER IS
    L_END_BALANCE NUMBER := 0;
  BEGIN
    L_END_BALANCE := NVL(CF_OPEN_BALANCE
                        ,0) + NVL(CS_REVISION_VALUE
                        ,0);
    RETURN L_END_BALANCE;
  END CF_END_BALANCEFORMULA;
  FUNCTION CP_END_BALANCEFORMULA(CF_END_BALANCE IN NUMBER) RETURN NUMBER IS
  BEGIN
    RETURN (NVL(CF_END_BALANCE
              ,0));
  END CP_END_BALANCEFORMULA;
  FUNCTION AFTERPFORM RETURN BOOLEAN IS
    VSET_OF_BOOKS_ID NUMBER(20);
    L_DT_FMT varchar2(30) := 'DD-MON-YYYY';
    L_DT_FMT2 varchar2(30) := 'DD-MON-YY';
  BEGIN
    SELECT
      B.SET_OF_BOOKS_ID
    INTO VSET_OF_BOOKS_ID
    FROM
      PSB_BUDGET_GROUPS A,
      PSB_BUDGET_GROUPS B
    WHERE A.BUDGET_GROUP_ID = P_BUDGET_GROUP_ID
      AND NVL(A.ROOT_BUDGET_GROUP_ID
       ,A.BUDGET_GROUP_ID) = B.BUDGET_GROUP_ID;
    SELECT
      START_DATE
    INTO INPUT_PERIOD_START_DATE
    FROM
      GL_PERIOD_STATUSES
    WHERE APPLICATION_ID = 101
      AND SET_OF_BOOKS_ID = VSET_OF_BOOKS_ID
      AND PERIOD_NAME = P_START_PERIOD;
INPUT_PERIOD_START_DATE1 := TO_CHAR(TO_DATE(INPUT_PERIOD_START_DATE,L_DT_FMT),L_DT_FMT2);
    SELECT
      END_DATE
    INTO INPUT_PERIOD_END_DATE
    FROM
      GL_PERIOD_STATUSES
    WHERE APPLICATION_ID = 101
      AND SET_OF_BOOKS_ID = VSET_OF_BOOKS_ID
      AND PERIOD_NAME = P_END_PERIOD;
INPUT_PERIOD_END_DATE1 :=to_char(TO_DATE(INPUT_PERIOD_END_DATE,L_DT_FMT),L_DT_FMT2);
    SELECT
      SHORT_NAME
    INTO P_BUDGET_GROUP_NAME
    FROM
      PSB_BUDGET_GROUPS
    WHERE BUDGET_GROUP_ID = P_BUDGET_GROUP_ID;
    RETURN (TRUE);
  END AFTERPFORM;
  FUNCTION AFTERREPORT RETURN BOOLEAN IS
  BEGIN
    /*SRW.USER_EXIT('FND SRWEXIT')*/NULL;
    RETURN (TRUE);
  END AFTERREPORT;
  FUNCTION CF_ACCT_FLEX_DESCFORMULA(CODE_COMBINATION_ID_1 IN NUMBER) RETURN CHAR IS
    L_DESCRIPTION VARCHAR2(2000);
    L_CHART_OF_ACCOUNTS_ID NUMBER(15);
  BEGIN
    SELECT
      CHART_OF_ACCOUNTS_ID
    INTO L_CHART_OF_ACCOUNTS_ID
    FROM
      GL_CODE_COMBINATIONS_KFV
    WHERE CODE_COMBINATION_ID = CODE_COMBINATION_ID_1;
    IF FND_FLEX_KEYVAL.VALIDATE_CCID(APPL_SHORT_NAME => 'SQLGL'
                                 ,KEY_FLEX_CODE => 'GL#'
                                 ,STRUCTURE_NUMBER => L_CHART_OF_ACCOUNTS_ID
                                 ,COMBINATION_ID => CODE_COMBINATION_ID_1) THEN
      L_DESCRIPTION := FND_FLEX_KEYVAL.CONCATENATED_DESCRIPTIONS;
    END IF;
    RETURN (L_DESCRIPTION);
  END CF_ACCT_FLEX_DESCFORMULA;
  FUNCTION CP_OPEN_BALANCE_P RETURN NUMBER IS
  BEGIN
    RETURN CP_OPEN_BALANCE;
  END CP_OPEN_BALANCE_P;
  FUNCTION CP_END_BALANCE_P RETURN NUMBER IS
  BEGIN
    RETURN CP_END_BALANCE;
  END CP_END_BALANCE_P;
  FUNCTION CP_NO_DATA_FOUND_P RETURN VARCHAR2 IS
  BEGIN
    RETURN CP_NO_DATA_FOUND;
  END CP_NO_DATA_FOUND_P;
  FUNCTION CP_END_OF_REPORT_P RETURN VARCHAR2 IS
  BEGIN
    RETURN CP_END_OF_REPORT;
  END CP_END_OF_REPORT_P;
END PSB_PSBRPBRT_XMLP_PKG;



/
