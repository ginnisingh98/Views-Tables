--------------------------------------------------------
--  DDL for Package Body CSD_GROUP_JOB_PARAM_TEMP_PKG
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE PACKAGE BODY "APPS"."CSD_GROUP_JOB_PARAM_TEMP_PKG" as
/* $Header: csdtjprb.pls 115.6 2002/12/02 23:42:30 takwong noship $ */
-- Start of Comments
-- Package name     : CSD_GROUP_JOB_PARAM_TEMP_PKG
-- Purpose          :
-- History          :
-- NOTE             :
-- End of Comments


G_PKG_NAME CONSTANT VARCHAR2(30):= 'CSD_GROUP_JOB_PARAM_TEMP_PKG';
G_FILE_NAME CONSTANT VARCHAR2(12) := 'csdtjprb.pls';
l_debug        NUMBER := csd_gen_utility_pvt.g_debug_level;

PROCEDURE Insert_Row(
          px_GROUP_JOB_ID   IN OUT NOCOPY NUMBER
         ,p_REPAIR_GROUP_ID    NUMBER
         ,p_INVENTORY_ITEM_ID    NUMBER
         ,p_ORGANIZATION_ID    NUMBER
         ,p_JOB_TYPE    NUMBER
         ,p_ROUTING_REFERENCE_ID    NUMBER
         ,p_ALTERNATE_DESIGNATOR_CODE    VARCHAR2
         ,p_JOB_STATUS_TYPE    VARCHAR2
         ,p_ACCOUNTING_CLASS    VARCHAR2
         ,p_START_DATE    DATE
         ,p_COMPLETION_DATE    DATE
         ,p_QUANTITY_RECEIVED    NUMBER
         ,p_QUANTITY_SUBMITTED    NUMBER
         ,p_ITEM_REVISION    VARCHAR2
         ,p_CREATED_BY    NUMBER
         ,p_CREATION_DATE    DATE
         ,p_LAST_UPDATED_BY    NUMBER
         ,p_LAST_UPDATE_LOGIN    NUMBER
         ,p_OBJECT_VERSION_NUMBER    NUMBER
         ,p_LAST_UPDATE_DATE    DATE
         ,p_INCIDENT_ID    NUMBER
         ,p_PROCESS_ID    NUMBER)

 IS
   CURSOR C2 IS SELECT CSD_GROUP_JOB_PARAM_TEMP_S1.nextval FROM sys.dual;
BEGIN
   If (px_GROUP_JOB_ID IS NULL) OR (px_GROUP_JOB_ID = FND_API.G_MISS_NUM) then
       OPEN C2;
       FETCH C2 INTO px_GROUP_JOB_ID;
       CLOSE C2;
   End If;
   INSERT INTO CSD_GROUP_JOB_PARAM_TEMP(
           GROUP_JOB_ID
          ,REPAIR_GROUP_ID
          ,INVENTORY_ITEM_ID
          ,ORGANIZATION_ID
          ,JOB_TYPE
          ,ROUTING_REFERENCE_ID
          ,ALTERNATE_DESIGNATOR_CODE
          ,JOB_STATUS_TYPE
          ,ACCOUNTING_CLASS
          ,START_DATE
          ,COMPLETION_DATE
          ,QUANTITY_RECEIVED
          ,QUANTITY_SUBMITTED
          ,ITEM_REVISION
          ,CREATED_BY
          ,CREATION_DATE
          ,LAST_UPDATED_BY
          ,LAST_UPDATE_LOGIN
          ,OBJECT_VERSION_NUMBER
          ,LAST_UPDATE_DATE
          ,INCIDENT_ID
          ,PROCESS_ID
          ) VALUES (
           px_GROUP_JOB_ID
          ,decode( p_REPAIR_GROUP_ID, FND_API.G_MISS_NUM, NULL, p_REPAIR_GROUP_ID)
          ,decode( p_INVENTORY_ITEM_ID, FND_API.G_MISS_NUM, NULL, p_INVENTORY_ITEM_ID)
          ,decode( p_ORGANIZATION_ID, FND_API.G_MISS_NUM, NULL, p_ORGANIZATION_ID)
          ,decode( p_JOB_TYPE, FND_API.G_MISS_NUM, NULL, p_JOB_TYPE)
          ,decode( p_ROUTING_REFERENCE_ID, FND_API.G_MISS_NUM, NULL, p_ROUTING_REFERENCE_ID)
          ,decode( p_ALTERNATE_DESIGNATOR_CODE, FND_API.G_MISS_CHAR, NULL, p_ALTERNATE_DESIGNATOR_CODE)
          ,decode( p_JOB_STATUS_TYPE, FND_API.G_MISS_CHAR, NULL, p_JOB_STATUS_TYPE)
          ,decode( p_ACCOUNTING_CLASS, FND_API.G_MISS_CHAR, NULL, p_ACCOUNTING_CLASS)
          ,decode( p_START_DATE, FND_API.G_MISS_DATE, TO_DATE(NULL), p_START_DATE)
          ,decode( p_COMPLETION_DATE, FND_API.G_MISS_DATE, TO_DATE(NULL), p_COMPLETION_DATE)
          ,decode( p_QUANTITY_RECEIVED, FND_API.G_MISS_NUM, NULL, p_QUANTITY_RECEIVED)
          ,decode( p_QUANTITY_SUBMITTED, FND_API.G_MISS_NUM, NULL, p_QUANTITY_SUBMITTED)
          ,decode( p_ITEM_REVISION, FND_API.G_MISS_CHAR, NULL, p_ITEM_REVISION)
          ,decode( p_CREATED_BY, FND_API.G_MISS_NUM, NULL, p_CREATED_BY)
          ,decode( p_CREATION_DATE, FND_API.G_MISS_DATE, TO_DATE(NULL), p_CREATION_DATE)
          ,decode( p_LAST_UPDATED_BY, FND_API.G_MISS_NUM, NULL, p_LAST_UPDATED_BY)
          ,decode( p_LAST_UPDATE_LOGIN, FND_API.G_MISS_NUM, NULL, p_LAST_UPDATE_LOGIN)
          ,decode( p_OBJECT_VERSION_NUMBER, FND_API.G_MISS_NUM, NULL, p_OBJECT_VERSION_NUMBER)
          ,decode( p_LAST_UPDATE_DATE, FND_API.G_MISS_DATE, TO_DATE(NULL), p_LAST_UPDATE_DATE)
          ,decode( p_INCIDENT_ID, FND_API.G_MISS_NUM, NULL, p_INCIDENT_ID)
          ,decode( p_PROCESS_ID, FND_API.G_MISS_NUM, NULL, p_PROCESS_ID));
End Insert_Row;

PROCEDURE Update_Row(
          p_GROUP_JOB_ID    NUMBER
         ,p_REPAIR_GROUP_ID    NUMBER
         ,p_INVENTORY_ITEM_ID    NUMBER
         ,p_ORGANIZATION_ID    NUMBER
         ,p_JOB_TYPE    NUMBER
         ,p_ROUTING_REFERENCE_ID    NUMBER
         ,p_ALTERNATE_DESIGNATOR_CODE    VARCHAR2
         ,p_JOB_STATUS_TYPE    VARCHAR2
         ,p_ACCOUNTING_CLASS    VARCHAR2
         ,p_START_DATE    DATE
         ,p_COMPLETION_DATE    DATE
         ,p_QUANTITY_RECEIVED    NUMBER
         ,p_QUANTITY_SUBMITTED    NUMBER
         ,p_ITEM_REVISION    VARCHAR2
         ,p_CREATED_BY    NUMBER
         ,p_CREATION_DATE    DATE
         ,p_LAST_UPDATED_BY    NUMBER
         ,p_LAST_UPDATE_LOGIN    NUMBER
         ,p_OBJECT_VERSION_NUMBER    NUMBER
         ,p_LAST_UPDATE_DATE    DATE
         ,p_INCIDENT_ID    NUMBER
         ,p_PROCESS_ID    NUMBER)

IS
BEGIN
    Update CSD_GROUP_JOB_PARAM_TEMP
    SET
        REPAIR_GROUP_ID = decode( p_REPAIR_GROUP_ID, FND_API.G_MISS_NUM, REPAIR_GROUP_ID, p_REPAIR_GROUP_ID)
       ,INVENTORY_ITEM_ID = decode( p_INVENTORY_ITEM_ID, FND_API.G_MISS_NUM, INVENTORY_ITEM_ID, p_INVENTORY_ITEM_ID)
       ,ORGANIZATION_ID = decode( p_ORGANIZATION_ID, FND_API.G_MISS_NUM, ORGANIZATION_ID, p_ORGANIZATION_ID)
       ,JOB_TYPE = decode( p_JOB_TYPE, FND_API.G_MISS_NUM, JOB_TYPE, p_JOB_TYPE)
       ,ROUTING_REFERENCE_ID = decode( p_ROUTING_REFERENCE_ID, FND_API.G_MISS_NUM, ROUTING_REFERENCE_ID, p_ROUTING_REFERENCE_ID)
       ,ALTERNATE_DESIGNATOR_CODE = decode( p_ALTERNATE_DESIGNATOR_CODE, FND_API.G_MISS_CHAR, ALTERNATE_DESIGNATOR_CODE, p_ALTERNATE_DESIGNATOR_CODE)
       ,JOB_STATUS_TYPE = decode( p_JOB_STATUS_TYPE, FND_API.G_MISS_CHAR, JOB_STATUS_TYPE, p_JOB_STATUS_TYPE)
       ,ACCOUNTING_CLASS = decode( p_ACCOUNTING_CLASS, FND_API.G_MISS_CHAR, ACCOUNTING_CLASS, p_ACCOUNTING_CLASS)
       ,START_DATE = decode( p_START_DATE, FND_API.G_MISS_DATE, START_DATE, p_START_DATE)
       ,COMPLETION_DATE = decode( p_COMPLETION_DATE, FND_API.G_MISS_DATE, COMPLETION_DATE, p_COMPLETION_DATE)
       ,QUANTITY_RECEIVED = decode( p_QUANTITY_RECEIVED, FND_API.G_MISS_NUM, QUANTITY_RECEIVED, p_QUANTITY_RECEIVED)
       ,QUANTITY_SUBMITTED = decode( p_QUANTITY_SUBMITTED, FND_API.G_MISS_NUM, QUANTITY_SUBMITTED, p_QUANTITY_SUBMITTED)
       ,ITEM_REVISION = decode( p_ITEM_REVISION, FND_API.G_MISS_CHAR, ITEM_REVISION, p_ITEM_REVISION)
       ,CREATED_BY = decode( p_CREATED_BY, FND_API.G_MISS_NUM, CREATED_BY, p_CREATED_BY)
       ,CREATION_DATE = decode( p_CREATION_DATE, FND_API.G_MISS_DATE, CREATION_DATE, p_CREATION_DATE)
       ,LAST_UPDATED_BY = decode( p_LAST_UPDATED_BY, FND_API.G_MISS_NUM, LAST_UPDATED_BY, p_LAST_UPDATED_BY)
       ,LAST_UPDATE_LOGIN = decode( p_LAST_UPDATE_LOGIN, FND_API.G_MISS_NUM, LAST_UPDATE_LOGIN, p_LAST_UPDATE_LOGIN)
       ,OBJECT_VERSION_NUMBER = decode( p_OBJECT_VERSION_NUMBER, FND_API.G_MISS_NUM, OBJECT_VERSION_NUMBER, p_OBJECT_VERSION_NUMBER)
       ,LAST_UPDATE_DATE = decode( p_LAST_UPDATE_DATE, FND_API.G_MISS_DATE, LAST_UPDATE_DATE, p_LAST_UPDATE_DATE)
       ,INCIDENT_ID = decode( p_INCIDENT_ID, FND_API.G_MISS_NUM, INCIDENT_ID, p_INCIDENT_ID)
       ,PROCESS_ID = decode( p_PROCESS_ID, FND_API.G_MISS_NUM, PROCESS_ID, p_PROCESS_ID)
    where GROUP_JOB_ID = p_GROUP_JOB_ID;

    If (SQL%NOTFOUND) then
        RAISE NO_DATA_FOUND;
    End If;
END Update_Row;

PROCEDURE Delete_Row(
    p_GROUP_JOB_ID  NUMBER)
IS
BEGIN
    DELETE FROM CSD_GROUP_JOB_PARAM_TEMP
    WHERE GROUP_JOB_ID = p_GROUP_JOB_ID;
    If (SQL%NOTFOUND) then
        RAISE NO_DATA_FOUND;
    End If;
END Delete_Row;

PROCEDURE Lock_Row(
          p_GROUP_JOB_ID    NUMBER
         ,p_OBJECT_VERSION_NUMBER    NUMBER)

 IS
   CURSOR C IS
       SELECT *
       FROM CSD_GROUP_JOB_PARAM_TEMP
       WHERE GROUP_JOB_ID =  p_GROUP_JOB_ID
       FOR UPDATE of GROUP_JOB_ID NOWAIT;

   Recinfo C%ROWTYPE;
BEGIN
    OPEN C;
    FETCH C INTO Recinfo;

    If (C%NOTFOUND) then
        CLOSE C;
        FND_MESSAGE.SET_NAME('FND', 'FORM_RECORD_DELETED');
        APP_EXCEPTION.RAISE_EXCEPTION;
    End If;
    CLOSE C;

    If ( Recinfo.object_version_number = p_object_version_number  ) then
        return;
    else
        FND_MESSAGE.SET_NAME('FND', 'FORM_RECORD_CHANGED');
        APP_EXCEPTION.RAISE_EXCEPTION;
    End If;

END Lock_Row;

End CSD_GROUP_JOB_PARAM_TEMP_PKG;

/
