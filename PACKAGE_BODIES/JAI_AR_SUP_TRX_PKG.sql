--------------------------------------------------------
--  DDL for Package Body JAI_AR_SUP_TRX_PKG
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE PACKAGE BODY "APPS"."JAI_AR_SUP_TRX_PKG" AS
/* $Header: jai_ar_sup_trx.plb 120.20.12010000.12 2010/05/13 11:27:13 haoyang ship $ */

/* --------------------------------------------------------------------------------------
Filename:

Change History:

Date         Bug         Remarks
---------    ----------  -------------------------------------------------------------
08-Jun-2005  File Version 116.3. Object is Modified to refer to New DB Entity names in place of Old DB Entity Names
             as required for CASE COMPLAINCE.

13-Jun-2005  File Version: 116.4
             Ramananda for bug#4428980. Removal of SQL LITERALs is done

18-JUL-2005  Ramananda for bug# 4499078, File Version # 120.2
             Sequence JAI_AR_SUP_HDRS_ALL_S1 is used instead of JAI_AR_SUP_HDRS_ALL_S2 and JAI_AR_SUP_HDRS_ALL_S3

26-JUL-2005  Ramananda for bug#4499078, File Version # 120.3
       Added column Interface_Line_Attribute2 column in Cursor GET_SUPP_INV_LINES

07/12/2005   Hjujjuru for the bug 4866533 File version 120.3
              added the who columns in the insert commands for the tables
              JAI_AR_SUP_INV_T and JAI_AR_TRX_SUP_INV_T.
              Dependencies Due to this bug:-
              None

27-Dec-2005  Bug 4906958. Added by Lakshmi Gopalsami Version 120.6
                    Derived the value for default LE if the value is not retrieved via
        default BSV.

07-Mar-2006 Modified by aiyer for the bug 4947681, File version 120.7
            Issue :-
             Performance tuning for the cursor get_invoices SQL_ID 14827611. Cost = 1287 and sharabale memory 182519


     Fix   :-
             Modified the cursor get_invoices. Added the IL table jai_ar_trxs to the ra_customer_trx_all
             and also merged the correlated query to the main query thus reducing the sharable memory also


01/11/2006  SACSETHI for bug 5228046, File version 120.10

	    1. Forward porting the change in 11i bug 5365523 (Additional CVD Enhancement).
               This bug has datamodel and spec changes.

            2. Forward porting of 11i bug 5219225


           Dependency Due to This bug :-
           None

 10/09/2007  Bgowrava for Bug#6400997, File Version 120.9.12000000.3
             Debug messages added to apply on the instance and test for errors.

June-09-2009  Eric Ma/Jia Li   Add code for the ER of Advanced Pricing

08-Jul-2009	JMEENA for bug#6713564
		Modified cursor get_cnsldt_crdt_amt and get_cnsldt_crdt_rep_id in the procedure create_invoices.
16-jul-2009  vkaranam for bug#8671242
            Issue:
	    NOT ABLE TO GENERATE A SUPPLEMENTARY TRANSACTION
	    Fwdported the changes done in 6959261
16-sep-2009 vkaranam for bug#8880147
            IssueL
	    ST1212.XB1.SUPPLEMENTARY TRANS CAN NOT GENERATED BY CHANGE AV LIST
	    Reason:
	    this issue arises due to the code changes in bug#8775883
	    As part of this commented end if of  IF FETCH_INV.INTERFACE_HEADER_CONTEXT = 'ORDER ENTRY' THEN,
	    Due to this supplimentary transactions are not getting generated for manual invoices.

	    Fix:
	    Uncommented the  end if of  IF FETCH_INV.INTERFACE_HEADER_CONTEXT = 'ORDER ENTRY' THEN
	    Commented the end if of IF (v_prod_attr_value = to_char(i.inventory_item_id) and i.mapping_type <> 'T')
                OR i.mapping_type = 'T'
            THEN        -- 000aa1

19-APR-2010 Bug 9595773
            Description: Auto Invoice fails with 'This Tax Rate does not exist.' when importing Supplementary Invoices
            Fix: Replaced 'Localization' with NULL for tax_code column in RA_INTERFACE_LINES_ALL

13-May-2010 Bug 9709477  Allen Yang modified
            Description: TST1213.NON SHIPPABLE: PATCH FOR OTHER CHANGES OF NONSHIPPABLE
            Fix: Modified cursor c_get_so_picking_lines in procedure process_invoices to fetch non-shippable lines also.

-----------------------------------------------------------------------------------------*/

PROCEDURE process_report_stpr(p_batch_id number) is
 BEGIN
	 jai_ar_sup_trx_pkg.identify_invoices(p_batch_id);
   jai_ar_sup_trx_pkg.process_invoices;

 END process_report_stpr;

 PROCEDURE identify_invoices(P_BATCH_ID NUMBER)
   IS
   N NUMBER;
   O NUMBER;
   K NUMBER;
   V_LIST_CURRENCY  VARCHAR2(15);
   V_CURRENCY_MATCH VARCHAR2(1) ;
   check_flag varchar2(1) ;

  -- added, Harshita for Bug 4762433
  ld_creation_date    DATE;
  ln_created_by       NUMBER;

  /* Added by Ramananda for bug#4407165 */
  lv_object_name CONSTANT VARCHAR2(61) := 'jai_ar_sup_trx_pkg.identify_invoices';

   CURSOR CH(N NUMBER,M VARCHAR2) IS SELECT 1 FROM JAI_AR_TRX_SUP_INV_T WHERE CUSTOMER_TRX_ID = N
   AND MAPPING_TYPE = M;

  Cursor ch_tax(id number,tax_name number) is select 1 from JAI_AR_TRX_SUP_INV_T where customer_trx_id = id
  and mapping_type = 'T'
  and existing_type_id = tax_name;

  -- CURSOR FOR SELECTING ENTRIES FROM THE MASTER TABLE JAI_AR_SUP_CHANGES_ALL WHOSE PROCESS DATE IS NOT NULL --
   CURSOR MAP_IDENT IS
   SELECT SET_OF_BOOKS_ID,
          ORG_ID,
          CUSTOMER_ID,
          SITE_USE_ID,
          EXISTING_TYPE_ID,
          MAPPING_ID,
          MAPPING_TYPE,
          NEW_TYPE_ID,
          EFFECTIVE_FROM_DATE,
          EFFECTIVE_TO_DATE,
          CONVERSION_RATE,
          BATCH_ID
   FROM  JAI_AR_SUP_CHANGES_ALL
   WHERE PROCESS_DATE IS NULL
    AND  BATCH_ID = NVL(P_BATCH_ID,BATCH_ID)
   ORDER BY SITE_USE_ID,
         CUSTOMER_ID,
         ORG_ID,
         SET_OF_BOOKS_ID;

 CURSOR GET_LIST_CURRENCY(P_LIST_ID NUMBER) IS
   SELECT CURRENCY_CODE
   FROM   QP_LIST_HEADERS_B
   WHERE  LIST_HEADER_ID = P_LIST_ID;

 -- TILL HERE

   /*
   || Cursor modified by aiyer for the bug 4947681.SQL ID 14827611
   || Added the IL table jai_ar_trxs to the ra_customer_trx_all and
   || also merged the correlated query to the main query thus reducing the sharable memory also
   || New Cost = 28 Sharable memory = 113499
   */
   CURSOR GET_INVOICE ( effective_from_date         DATE                                              ,
                        p_effective_to_date         DATE                                              ,
                        cp_int_hdr_cxt              RA_CUSTOMER_TRX_ALL.INTERFACE_HEADER_CONTEXT%TYPE
                      )
   IS
   SELECT
          rcta.customer_trx_id,
          rcta.trx_date,
          rcta.set_of_books_id,
          rcta.bill_to_customer_id,
          rcta.bill_to_site_use_id,
          rcta.org_id,
          rcta.interface_header_context ,
          rcta.interface_header_attribute1,
          rcta.interface_header_attribute6,
          rcta.interface_header_attribute7,
          rcta.invoice_currency_code
   FROM ra_customer_trx_all rcta,
        jai_ar_trxs         jat ,
        ra_cust_trx_types_all rctta
   WHERE
        rcta.customer_trx_id              = jat.customer_trx_id
   AND  rcta.cust_trx_type_id             = rctta.cust_trx_type_id
   AND  rctta.type                        = 'INV'
   AND  trunc(rcta.trx_date)              between  trunc(effective_from_date) AND trunc(nvl(p_effective_to_date,sysdate))
   AND  (  rcta.interface_header_context  IS NULL
        OR rcta.interface_header_context  = cp_int_hdr_cxt
        );


  -- CURSOR FOR CHECKING WHETHER AN INVOICE HAS AN EXISTING ENTRY --

   CURSOR CHK_FOR_SUPP_INV_ENT(ID NUMBER) IS
   SELECT 1
   FROM JAI_AR_SUP_HDRS_ALL
   WHERE CUSTOMER_TRX_ID = ID ;

  --  CURSOR FOR SELECTING INVOICE FILTERED BY EFFECTIVE DATE AND TYPE --

   CURSOR SELECT_FILTER_INV IS
   SELECT * FROM JAI_AR_SUP_INV_T;

 /*
  CURSOR COUNT_COMBINTIONS IS
  SELECT SET_OF_BOOKS_ID,
         ORG_ID,
         CUSTOMER_ID,
         SITE_USE_ID
  FROM JAI_AR_SUP_CHANGES_ALL; */

  BEGIN

  -- added, Harshita for Bug 4762433
  ld_creation_date    := SYSDATE;
  ln_created_by       := FND_GLOBAL.user_id;

  FOR MAIN IN  MAP_IDENT
  LOOP

   FOR ONE IN GET_INVOICE(MAIN.EFFECTIVE_FROM_DATE,MAIN.EFFECTIVE_TO_DATE, 'ORDER ENTRY') /* Modified by Ramananda for removal of SQL LITERALs :bug#4428980*/

   LOOP
     OPEN CHK_FOR_SUPP_INV_ENT(ONE.CUSTOMER_TRX_ID);
     FETCH CHK_FOR_SUPP_INV_ENT INTO N;
     FETCH CHK_FOR_SUPP_INV_ENT INTO N;


     IF CHK_FOR_SUPP_INV_ENT%FOUND THEN
             NULL;
     ELSIF CHK_FOR_SUPP_INV_ENT%NOTFOUND THEN
      IF MAIN.MAPPING_TYPE IN ('I','P','A') THEN

          OPEN   GET_LIST_CURRENCY(MAIN.NEW_TYPE_ID);
          FETCH  GET_LIST_CURRENCY INTO V_LIST_CURRENCY;
          CLOSE  GET_LIST_CURRENCY;

          IF V_LIST_CURRENCY <> ONE.INVOICE_CURRENCY_CODE THEN

             V_CURRENCY_MATCH := 'N' ;

          ELSIF V_LIST_CURRENCY = ONE.INVOICE_CURRENCY_CODE THEN

              V_CURRENCY_MATCH := 'Y';
          END IF;
       ELSIF MAIN.MAPPING_TYPE = 'T' THEN

              V_CURRENCY_MATCH := 'Y';
       END IF;


       IF V_CURRENCY_MATCH = 'Y' THEN

         INSERT INTO JAI_AR_SUP_INV_T
                  (CUSTOMER_TRX_ID,
                  INTERFACE_HEADER_CONTEXT,
                  INTERFACE_HEADER_ATTRIBUTE1,
                  INTERFACE_HEADER_ATTRIBUTE6,
                  INTERFACE_HEADER_ATTRIBUTE7,
                  MAPPING_ID,
                  TRX_DATE,
                  EFFECTIVE_DATE,
                  SET_OF_BOOKS_ID,
                  CUSTOMER_ID,
                  ORG_ID,
                  CUSTOMER_SITE,
                  -- added, Harshita for Bug 4866533
                  CREATED_BY,
                  CREATION_DATE,
                  LAST_UPDATED_BY,
                  LAST_UPDATE_DATE
                  )
           VALUES(ONE.CUSTOMER_TRX_ID,
                 ONE.INTERFACE_HEADER_CONTEXT ,
                 ONE.INTERFACE_HEADER_ATTRIBUTE1,
                 ONE.INTERFACE_HEADER_ATTRIBUTE6 ,
                 ONE.INTERFACE_HEADER_ATTRIBUTE7,
                 MAIN.MAPPING_ID,
                 ONE.TRX_DATE,
                 MAIN.EFFECTIVE_FROM_DATE,
                 ONE.SET_OF_BOOKS_ID,
                 ONE.BILL_TO_CUSTOMER_ID,
                 NVL(ONE.ORG_ID,0),
                 ONE.BILL_TO_SITE_USE_ID,
                 -- added, Harshita for Bug 4866533
                 LN_CREATED_BY,
                 LD_CREATION_DATE,
                 LN_CREATED_BY,
                 LD_CREATION_DATE
                 );
       END IF;
    END IF;
   CLOSE CHK_FOR_SUPP_INV_ENT;
  END LOOP;
 END LOOP;
 begin
  for i in SELECT_FILTER_INV
   loop
    for j in MAP_IDENT
     loop
      IF I.TRX_DATE BETWEEN J.EFFECTIVE_FROM_DATE AND SYSDATE THEN
        IF J.MAPPING_TYPE = 'T' THEN
           OPEN CH_TAX(I.CUSTOMER_TRX_ID,J.EXISTING_TYPE_ID);
           FETCH CH_TAX INTO K;
             IF CH_TAX%FOUND THEN CHECK_FLAG := 'Y';
             ELSE
                CHECK_FLAG := 'N';
             END IF;
                CLOSE CH_TAX;
         ELSE OPEN CH(I.CUSTOMER_TRX_ID,J.MAPPING_TYPE);
              FETCH CH INTO  K;
              IF CH%FOUND THEN
                 CHECK_FLAG := 'Y';
              ELSE
                 CHECK_FLAG := 'N';
              END IF;
              CLOSE CH;
         END IF;
      IF CHECK_FLAG = 'N'  THEN

         IF i.set_of_books_id = j.set_of_books_id
          and i.org_id = nvl(j.org_id,i.org_id)
          and i.customer_id = nvl(j.customer_id,i.customer_id)
          and i.customer_site = nvl(j.site_use_id,i.customer_site) then
            IF I.INTERFACE_HEADER_CONTEXT LIKE '%ORDER%'
            AND J.MAPPING_TYPE LIKE 'P' THEN

              INSERT INTO JAI_AR_TRX_SUP_INV_T
                         (CUSTOMER_TRX_ID,
                         EXISTING_TYPE_ID,
                         NEW_TYPE_ID,
                         MAPPING_TYPE,
                         MAPPING_ID,
                         TRX_DATE,
                         EFFECTIVE_DATE,
                         SET_OF_BOOKS_ID,
                         ORG_ID,
                         CUSTOMER_SITE,
                         INTERFACE_HEADER_CONTEXT,
                         INTERFACE_HEADER_ATTRIBUTE1,
                         INTERFACE_HEADER_ATTRIBUTE6,
                         INTERFACE_HEADER_ATTRIBUTE7,
                         CONVERSION_RATE,
                         -- added, Harshita for Bug 4866533
                         CREATED_BY,
                         CREATION_DATE,
                         LAST_UPDATED_BY,
                         LAST_UPDATE_DATE
                        )
                VALUES  (I.CUSTOMER_TRX_ID,
                        J.EXISTING_TYPE_ID,
                        J.NEW_TYPE_ID,
                        J.MAPPING_TYPE,
                        J.MAPPING_ID,
                        I.TRX_DATE,
                        J.EFFECTIVE_FROM_DATE,
                        J.SET_OF_BOOKS_ID,
                        J.ORG_ID,
                        J.SITE_USE_ID,
                        I.INTERFACE_HEADER_CONTEXT,
                        I.INTERFACE_HEADER_ATTRIBUTE1,
                        I.INTERFACE_HEADER_ATTRIBUTE6,
                        I.INTERFACE_HEADER_ATTRIBUTE7,
                        J.CONVERSION_RATE,
                        -- added, Harshita for Bug 4866533
                        LN_CREATED_BY,
                        LD_CREATION_DATE,
                        LN_CREATED_BY,
                        LD_CREATION_DATE
                        );
            END IF;
            IF I.INTERFACE_HEADER_CONTEXT IS NULL
            AND J.MAPPING_TYPE LIKE 'I' THEN


              INSERT INTO JAI_AR_TRX_SUP_INV_T
                          (CUSTOMER_TRX_ID,
                          EXISTING_TYPE_ID,
                          NEW_TYPE_ID,
                          MAPPING_TYPE,
                          MAPPING_ID,
                          TRX_DATE,
                          EFFECTIVE_DATE,
                          SET_OF_BOOKS_ID,
                          ORG_ID,
                          CUSTOMER_SITE,
                          INTERFACE_HEADER_CONTEXT,
                          INTERFACE_HEADER_ATTRIBUTE1,
                          INTERFACE_HEADER_ATTRIBUTE6,
                          INTERFACE_HEADER_ATTRIBUTE7,
                          CONVERSION_RATE,
                          -- added, Harshita for Bug 4866533
                          CREATED_BY,
                          CREATION_DATE,
                          LAST_UPDATED_BY,
                          LAST_UPDATE_DATE
                          )
                  VALUES (I.CUSTOMER_TRX_ID,
                          J.EXISTING_TYPE_ID,
                          J.NEW_TYPE_ID,
                          J.MAPPING_TYPE,
                          J.MAPPING_ID,
                          I.TRX_DATE,
                          J.EFFECTIVE_FROM_DATE,
                          J.SET_OF_BOOKS_ID,
                          J.ORG_ID,
                          J.SITE_USE_ID,
                          I.INTERFACE_HEADER_CONTEXT,
                          I.INTERFACE_HEADER_ATTRIBUTE1,
                          I.INTERFACE_HEADER_ATTRIBUTE6,
                          I.INTERFACE_HEADER_ATTRIBUTE7,
                          J.CONVERSION_RATE,
                          -- added, Harshita for Bug 4866533
                          LN_CREATED_BY,
                          LD_CREATION_DATE,
                          LN_CREATED_BY,
                          LD_CREATION_DATE
                          );
            END IF;
            IF J.MAPPING_TYPE IN ('T','A') THEN


             INSERT INTO JAI_AR_TRX_SUP_INV_T
                        (CUSTOMER_TRX_ID,
                         EXISTING_TYPE_ID,
                         NEW_TYPE_ID,
                         MAPPING_TYPE,
                         MAPPING_ID,
                         TRX_DATE,
                         EFFECTIVE_DATE,
                         SET_OF_BOOKS_ID,
                         ORG_ID,
                         CUSTOMER_SITE,
                         INTERFACE_HEADER_CONTEXT,
                         INTERFACE_HEADER_ATTRIBUTE1,
                         INTERFACE_HEADER_ATTRIBUTE6,
                         INTERFACE_HEADER_ATTRIBUTE7,
                         CONVERSION_RATE,
                         -- added, Harshita for Bug 4866533
                         CREATED_BY,
                         CREATION_DATE,
                         LAST_UPDATED_BY,
                         LAST_UPDATE_DATE
                         )
                 VALUES(I.CUSTOMER_TRX_ID,
                        J.EXISTING_TYPE_ID,
                        J.NEW_TYPE_ID,
                        J.MAPPING_TYPE,
                        J.MAPPING_ID,
                        I.TRX_DATE,
                        J.EFFECTIVE_FROM_DATE,
                        J.SET_OF_BOOKS_ID,
                        J.ORG_ID,
                        J.SITE_USE_ID,
                        I.INTERFACE_HEADER_CONTEXT,
                        I.INTERFACE_HEADER_ATTRIBUTE1,
                        I.INTERFACE_HEADER_ATTRIBUTE6,
                        I.INTERFACE_HEADER_ATTRIBUTE7,
                        J.CONVERSION_RATE,
                        -- added, Harshita for Bug 4866533
                        LN_CREATED_BY,
                        LD_CREATION_DATE,
                        LN_CREATED_BY,
                        LD_CREATION_DATE
                        );
            END IF;
        END IF;
      END IF;
    END IF;
   END LOOP;
  END LOOP;
 END;


    UPDATE JAI_AR_SUP_CHANGES_ALL
    SET PROCESS_DATE = SYSDATE
    WHERE BATCH_ID = P_BATCH_ID
    AND PROCESS_DATE IS NULL;

   /* Added by Ramananda for bug#4407165 */
    EXCEPTION
     WHEN OTHERS THEN
      FND_MESSAGE.SET_NAME('JA','JAI_EXCEPTION_OCCURED');
      FND_MESSAGE.SET_TOKEN('JAI_PROCESS_MSG', lv_object_name ||'. Err:'||sqlerrm );
      app_exception.raise_exception;

END identify_invoices;

 PROCEDURE process_invoices
 IS

  /* Added by Ramananda for bug#4407165 */
  lv_object_name CONSTANT VARCHAR2(61) := 'jai_ar_sup_trx_pkg.process_invoices';

    inv_no              NUMBER;
    v_assess_value      NUMBER;
    atax_amount         NUMBER;
    t                   NUMBER;
    t_new_type_id       NUMBER;
    tax_diff_amt        NUMBER;
    pack_assess         number;
    customer_trx_line   NUMBER;
    v_p_mapping_id      number;
    v_i_mapping_id      number;
    v_a_mapping_id      number;
    t_mapping_id        NUMBER;
    check1              NUMBER;
    check2              NUMBER;
    check5              NUMBER;
    old_assessable_value    NUMBER;
    p_customer_trx_id   NUMBER;
    amount              NUMBER;
    i_customer_trx_id   NUMBER;
    i_new_type_id       NUMBER;
    a_customer_trx_id   NUMBER;
    t_existing_type_id  NUMBER;
    old_assess_value    NUMBER;
    assess_list_id      NUMBER;
    aselling_price      NUMBER;
    aunit_code          VARCHAR2(10);
    aquantity           NUMBER;
    apicking_line_id    NUMBER;
    atax_category_id    NUMBER;
    new_tax_others      NUMBER;
    o_s_p               NUMBER;
    indicator           VARCHAR2(10);
    n_s_p               NUMBER;
    o_a_val             NUMBER;
    n_a_val             NUMBER;
    exst_ln_amt         NUMBER;
    new_ln_amt          NUMBER;
    p_mapping_id        NUMBER;
    a_mapping_id        NUMBER;
    new_tax_excise      NUMBER := 0;
    old_tax_excise      NUMBER := 0;
    old_tax_type        JAI_CMN_TAXES_ALL.TAX_TYPE%TYPE ; /* Modified by aiyer for the bug  5378631*/
    new_tax_type        JAI_CMN_TAXES_ALL.TAX_TYPE%TYPE ; /* Modified by aiyer for the bug  5378631*/
    old_tax_other       NUMBER := 0;
    new_tax_other       NUMBER := 0;
    old_tax_amount      NUMBER := 0;
    new_tax_amount      NUMBER := 0;
    new_assess_value    NUMBER;
    i_unit_selling_price        NUMBER;
    old_invoice_amount      NUMBER;
    new_invoice_amount      NUMBER;
    oamount NUMBER;
    n_type_id               NUMBER;
    namount                 NUMBER;
    price_list_change_indicator     VARCHAR2(1);
    invoice_list_change_indicator   VARCHAR2(1);
    tax_list_change_indicator       VARCHAR2(1);
    assessable_list_change  VARCHAR2(1);
    adescription            VARCHAR2(250);
    status                  VARCHAR2(20);
    p_price_list            NUMBER;
    c_list_price            NUMBER;
    c_diff_price            NUMBER;
    tax_differ1             NUMBER;
    tax2_DIFFER2            NUMBER;
    p_existing_type_id      NUMBER;
    p_new_type_id           NUMBER;
    a_new_type_id           NUMBER;
    a_existing_type_id      NUMBER;
    passing_amount          NUMBER;
    passing_assessable      NUMBER;
    check_assess_inv        NUMBER;
    v_assesable_list_id     NUMBER;
    v_assessable_list_id    NUMBER;

    CURSOR FETCH_CMB_TAB_INV IS
        SELECT A.*, B.BATCH_ID
        FROM JAI_AR_TRX_SUP_INV_T A,
            JAI_AR_SUP_CHANGES_ALL B
        WHERE A.MAPPING_ID = B.MAPPING_ID
        ORDER BY CUSTOMER_TRX_ID;

    CURSOR CHECK_FOR_INV(INV NUMBER) IS
        SELECT customer_trx_id
        FROM JAI_AR_SUP_HDRS_ALL
        WHERE customer_trx_id = INV;

    CURSOR CHECK_SUPP_ASSESS_INV(STAT VARCHAR2,NO NUMBER) IS
        SELECT 1
        FROM JAI_AR_SUP_HDRS_ALL
        WHERE customer_trx_id = NO
        AND supp_inv_type = STAT;

    CURSOR get_inv_line( ino          NUMBER,
                         cp_line_type RA_CUSTOMER_TRX_LINES_ALL.LINE_TYPE%TYPE
                       )
    IS /* Modified by Ramananda for removal of SQL LITERALs :bug#4428980*/
    SELECT
        b.customer_trx_line_id,
        a.org_id,
        a.set_of_books_id,
        a.bill_to_customer_id,
        a.bill_to_site_use_id,
        b.line_number,
        b.uom_code,
        a.ship_to_site_use_id,
        a.interface_header_context,
        b.unit_selling_price,
        b.line_type,
        b.link_to_cust_trx_line_id,
        b.description,
        b.interface_line_attribute3,        -- delivery id is stored here.
        b.interface_line_attribute7,
        b.interface_line_attribute6,        -- oe_order_lines_all.line_id
        b.inventory_item_id,
        c.bom_item_type,
      --  d.mapping_type,                     -- added by sriram - bug # 3143813 - 19/09/2003 commented for bug 8775883
       -- d.new_type_id, commented for bug 8775883
        /* Bug 4224466. Added by LGOPALSA */
        a.invoice_currency_code
    FROM ra_customer_trx_all        a,
        ra_customer_trx_lines_all   b,
        mtl_system_items            c,
      --  jai_ar_trx_sup_inv_t        d,    -- added by sriram - bug # 3143813 - 19/09/2003	 commented for bug 8775883
        jai_ar_trxs                 jat  /* added the table and join condition - aiyer for the fwd porting bug 5225768*/
    WHERE a.customer_trx_id             = b.customer_trx_id
    AND b.inventory_item_id             = c.inventory_item_id
    --AND c.organization_id               = b.warehouse_id
    AND ( b.interface_line_attribute11  IS NULL
    OR    b.interface_line_attribute11  = '0'
        )
 --   AND d.customer_trx_id               = a.customer_trx_id commented for bug 8775883
    AND b.line_type                     =  cp_line_type --'LINE'
    AND a.customer_trx_id               = ino
    AND c.organization_id               = jat.organization_id
    AND a.customer_trx_id               = jat.customer_trx_id ;

    -- Above Cursor is modified as below by Vijay Shankar for Bug# 3515883
    CURSOR C_PRICE_LIST_INFO (p_list_header_id NUMBER, p_inv_item_id IN VARCHAR2) IS
        SELECT product_attr_value, list_header_id
        FROM qp_List_Lines_v
        WHERE List_header_id = p_list_header_id
        AND product_attribute_context = 'ITEM'
        AND product_attr_value = p_inv_item_id
        AND NVL( Start_Date_Active, SYSDATE - 1 ) <= SYSDATE
        AND NVL( End_Date_Active, SYSDATE + 1 ) >= SYSDATE;

    CURSOR LIST_PRICE(ID NUMBER,UNT_CODE VARCHAR2, PRICE_LIST NUMBER,TRDATE DATE) IS
        SELECT b.operand list_price
        FROM QP_LIST_LINES b, qp_pricing_attributes c
        WHERE c.PRODUCT_ATTR_VALUE      = TO_CHAR(Id)
        AND c.product_uom_code      = UNT_CODE
        AND b.list_header_id        =  PRICE_LIST
        AND     c.list_line_id      = b.list_line_id
        AND NVL(TRUNC(b.end_date_active),TRUNC(SYSDATE)) >= TRUNC(TRDATE);
    -- Till Here
    /* Removed ra_site_uses_all used hz_cust_site_uses_all for Bug# 4434287 */
    CURSOR GET_ADDRESS_OE(PICKING_ID VARCHAR2 ) IS
        SELECT DISTINCT  A.CUST_ACCT_SITE_ID ADDRESS_ID
        FROM HZ_CUST_SITE_USES_ALL A,
             OE_ORDER_LINES_ALL B
        WHERE A.SITE_USE_ID = B.SHIP_TO_ORG_ID
        AND   B.LINE_ID = PICKING_ID;
    /* Removed ra_site_uses_all used hz_cust_site_uses_all for Bug# 4434287 */
    CURSOR GET_ADDRESS_AR(p_ship_to_site_id number) IS
        SELECT  CUST_ACCT_SITE_ID ADDRESS_ID
        FROM  HZ_CUST_SITE_USES_ALL
        WHERE SITE_USE_ID = p_ship_to_site_id;

    CURSOR GET_ASSESS_PRICE(ADDRESS NUMBER,INO1 NUMBER) IS
        SELECT PRICE_LIST_ID
        FROM JAI_CMN_CUS_ADDRESSES
        WHERE ADDRESS_ID = NVL(ADDRESS,0)
        AND CUSTOMER_ID = INO1;

    CURSOR GET_ASSESSABLE_PRICE_LIST(v_cust_id number) IS
        SELECT PRICE_LIST_ID
        FROM  JAI_CMN_CUS_ADDRESSES
        WHERE ADDRESS_ID = 0
        AND  CUSTOMER_ID = v_cust_id;

    CURSOR GET_ASSESS_LIST (INVENT NUMBER,UNT VARCHAR2 ,NEW_NO NUMBER, ADATE DATE) IS
        SELECT b.operand list_price
        FROM QP_LIST_LINES b, qp_pricing_attributes c
        WHERE c.PRODUCT_ATTR_VALUE      = TO_CHAR(INVENT)
        AND c.product_uom_code      = UNT
        AND b.list_header_id        = NEW_NO
        AND     c.list_line_id      = b.list_line_id
        AND  NVL(TRUNC(b.end_date_active),TRUNC(SYSDATE)) >= TRUNC(ADATE);

    -- Added by Eric Ma for Advanced Pricing on 09-Jun-2009 , Begin
    --------------------------------------------------------------------------------------------
    -- Get category_set_name
    CURSOR category_set_name_cur
    IS
    SELECT
      category_set_name
    FROM
      mtl_default_category_sets_fk_v
    WHERE functional_area_desc = 'Order Entry';

    lv_category_set_name  VARCHAR2(30);

    -- Get item category value for the given parameters of price list, inventory_item_Id.
    CURSOR get_price_list_info_cat_cur
    ( pn_list_header_id    NUMBER
    , pn_inventory_item_id VARCHAR2
    )
    IS
    SELECT
      product_attr_value
    FROM
      qp_List_Lines_v c
    WHERE c.List_header_id = pn_list_header_id
      AND c.product_attribute_context = 'ITEM'
      AND NVL( c.Start_Date_Active, SYSDATE - 1 ) <= SYSDATE
      AND NVL( c.End_Date_Active, SYSDATE + 1 ) >= SYSDATE
      AND EXISTS ( SELECT
                     'x'
                   FROM
                     mtl_item_categories_v d
                   WHERE d.category_set_name  = lv_category_set_name
                     AND d.inventory_item_id  = pn_inventory_item_id
                     AND c.product_attr_value = TO_CHAR(d.category_id)
                  );

    lv_item_category_value  VARCHAR2(100);

    --Get the Excise Assessable Value for the given parameters of price list, inventory_item_id, uom code and Ordered date.
    CURSOR get_cust_ass_value_cat_cur
    ( pn_list_header_id    NUMBER
    , pn_inventory_item_id NUMBER
    , pv_uom_code          VARCHAR2
    , pd_ordered_date      DATE
    )
    IS
    SELECT
      b.operand          list_price
    FROM
      qp_list_lines         b
    , qp_pricing_attributes c
    WHERE b.list_header_id     = pn_list_header_id
      AND c.list_line_id       = b.list_line_id
      AND c.product_uom_code   = pv_uom_code
      -- AND NVL(TRUNC(b.start_date_active), TRUNC(SYSDATE)) >= TRUNC(pd_ordered_date) -- comment by Jia for Bug#8880147
      AND NVL(TRUNC(b.end_date_active), TRUNC(SYSDATE)) >= TRUNC(pd_ordered_date)  -- Added by Jia for Bug#8880147
      AND EXISTS ( SELECT
                     'x'
                   FROM
                     mtl_item_categories_v d
                   WHERE d.category_set_name  = lv_category_set_name
                     AND d.inventory_item_id  = pn_inventory_item_id
                     AND c.product_attr_value = TO_CHAR(d.category_id)
                  );
    ---------------------------------------------------------------------------------
    -- Added by Eric Ma for Advanced Pricing on 09-Jun-2009 , End

         /* Bug 4224466. Added by LGOPALSA.
       Amount in JAI_AR_SUP_LINES need to be rounded with
       respect to currency precision as the same is recorded
            in ra_interface_lines_all */

         Cursor get_curr_prec( lv_currency_code varchar2) is
     Select precision
       from fnd_currencies
           where currency_code = lv_currency_code;

         ln_precision   number;

    -- End for bug 4224466.

    -- Till Here
    --23/03/01 Anuradha Parthasarathy
    V_ASSESSABLE_VALUE      NUMBER;

    V_PROD_ATTR_VALUE VARCHAR2(100);
    V_LIST_HEADER_ID  NUMBER;

    -- Start, Vijay Shankar for bug # 3515883
    v_today             DATE; -- := trunc(SYSDATE); --Ramananda for File.Sql.35
    v_modifier_adhoc_amount NUMBER := 0;
    v_modifier_percentage NUMBER := 0;

    lv_list_line_type_code_dis   oe_price_adjustments.list_line_type_code%type ;
    lv_list_line_type_code_sur     oe_price_adjustments.list_line_type_code%type ;

   /* Modified by Ramananda for removal of SQL LITERALs :bug#4428980*/
      CURSOR c_adjustment_details(p_price_adjustment_id IN NUMBER) IS
        SELECT nvl( decode(list_line_type_code, lv_list_line_type_code_dis, operand, lv_list_line_type_code_sur, -operand), 0) operand, arithmetic_operator
  --nvl( decode(list_line_type_code, 'DIS', operand, 'SUR', -operand), 0) operand, arithmetic_operator
        FROM oe_price_adjustments a         -- , qp_modifier_summary_v b
        WHERE list_line_type_code IN ('DIS', 'SUR')
        AND modifier_level_code = 'LINE'
        AND price_adjustment_id = p_price_adjustment_id;

    r_adj   c_adjustment_details%ROWTYPE;
    v_statement_id  VARCHAR2(4); -- := '0'; --Ramananda for File.Sql.35
    -- End, Vijay Shankar for bug # 3515883
    /*
    || Following cursor added by aiyer for bug the fwd porting bug 4955151 (11i bug #4764676)
    || If the split has happened at the time of shipment, this cursor will take care of the multiple lines
    || to get the total quantity and total tax amount
    */
    CURSOR c_get_so_picking_lines(
                                    p_interface_line_attribute3  RA_CUSTOMER_TRX_LINES_ALL.interface_line_attribute3%TYPE ,
                                    p_interface_line_attribute6  RA_CUSTOMER_TRX_LINES_ALL.interface_line_attribute6%TYPE ,
                                    p_inventory_item_id          RA_CUSTOMER_TRX_LINES_ALL.inventory_item_id%TYPE
                                 )
    IS
    SELECT
           SUM(a.quantity), SUM(a.tax_amount),
           a.selling_price, a.unit_code, a.tax_category_id,
           a.picking_line_id, a.assessable_value
    FROM
           jai_om_wsh_lines_all A
    WHERE
           -- modified by Allen Yang for bug 9709477 13-May-2010, begin
           -- to_char(a.delivery_id)    = p_interface_line_attribute3
           to_char(NVL(a.delivery_id, 0))    = NVL(p_interface_line_attribute3, '0')
           -- modified by Allen Yang for bug 9709477 13-May-2010, end
    AND    to_char(a.order_line_id)  = p_interface_line_attribute6
    AND    a.inventory_item_id       = p_inventory_item_id
    GROUP BY
      a.selling_price, a.unit_code, a.tax_category_id,
      a.picking_line_id, a.assessable_value ;


    /*Commented below by JMEENA for bug#7567647 */
    /*Added the below by Bgowrava for Bug#6139693
    CURSOR c_get_sup_seq_val
    IS
    SELECT JAI_AR_SUP_LINES_S.NEXTVAL
    FROM DUAL;

    v_cust_trx_line_no_s NUMBER;
    v_cust_trx_line_no_s1 NUMBER;
    END, Bug#6139693*/


 BEGIN


 /*----------------------------------------------------------------------------------------------------------------------------
 CHANGE HISTORY:        FILENAME: jai_ar_sup_trx_pkg.process_invoices.sql
 S.No  Date        Author and Details
 ------------------------------------------------------------------------------------------------------------------------------
 1    24/03/2001   Bhaskar,
                    changed a query to select price_list_id basing on Header_Id rather than basing on order_number.

 2    23/03/2001   Anuradha Parthasarathy
                    To ensure that correct assessable value is considered in case of Price List Mapping

 3.   19/09/2003   ssumaith - bug # 3143813
                    Supplementary invoices in Ar are generated for all items in the invoice even though they are not part of the new price list. This has been rectified
                       by adding joins between the inventory item of the invoice and inventory item in the pricelist for price list types of mapping.

 4.   28/03/2004   Vijay Shankar for bug # 3515883, Version: 619.1
                    - modified cursor GET_INV_LINE to filter out Modifier lines from RA_CUSTOMER_TRX_LINES_ALL table and added a
                     seperate code that reduces/adds discounts/surcharges from actual item price.
                    Added Cursor c_adjustment_details  and required variables for discounts/surchages calculation
                    - Cursor C_PRICE_LIST_INFO is modified to use qp_list_lines_v View instead of qp_list_lines and  qp_pricing_attributes tables.
                    Added inventory_item_id, Start and end date checks to where clause on qp_list_lines_v
                     - Query to fetch details from JAI_OM_WSH_LINES_ALL is modified by adding Order_line_id filter.
                     Also removed the usage of RA_CUSTOMER_TRX_LINES_ALL table from the query which is redundant

 5.   15/03/2005   Bug 4224466. Added by LGOPALSA. Version 115.2
                   Added rounding code for Exist and new Sales amount.

 File Renamed to jai_ar_sup_trx.plb
 -----------------------------------
 6.  25/05/2005   Brathod,  For Bug# 4392001, Fileversion# 116.1
                  Issue:-
                  RA_INTERFACE_LINES DFF segments needs to be limited use only one segment
                  Fix:-
                  - Following four segments will be obsoleted
                    1.  SUPPLEMENT CM
                    2.  SUPPLEMENT DM
                    3.  SUPPLEMENT INVOICE
                    4.  TDS CREDIT
                  - A new segment (INDIA INVOICES) will be created with following attributes
                    1. INTERFACE_LINE_ATTRIBUTE1 - Invoice Type
                    2. INTERFACE_LINE_ATTRIBUTE2 - Unique Identifier
                  - As new dff uses the ATTRIBUTE1 field the existing values of ATTRIBUTE1 will be
                    migrated to ATTRIBUTE4
                  - Attribute context will be changed to INDIA INVOICES.
                  - INTERFACE_LINE_ATTRIBUTE1 will identify the type of invoice the possible values
                    for this field will be same as different segments used previously
                    i.e SUPPLEMENT CM, SUPPLEMENT DM, SUPPLEMENT INVOICE, TDS CREDIT

 7.             Aiyer for the bug 5378631, File version 120.9
                 Issues:-
                  India Suggestive Supplementary transactions  report does not pick up any invoices.
                  As a part of this fix fwd porting the following fixes:-
                  ==================================================
                  Slno   11i Bug       R12 FWD Porting bug
                  ==================================================
                  1.    4324523        No Fwd Porting bug logged
                  2.    4735409        No Fwd Porting bug logged
                  3.    4764676        4955151
                  4.    5104197        5225768
                  ===================================================
                  1. Bug 4324523:- Report India Suggestive Supplementary transactions errors out "PL/SQL: numeric or value error: character string buffer too small"
                  2. code text exceed 255 characters.
                  3.Supplementary transactions picks partial qty for dr/cr when line is split.
                  4.Supplementary invoice not being generated  for tax change

                Fix :-
                   1.Bug 4324523:-
                     Fixed the data type mismatch for old_tax_type and new_tax_type with the tax_type column of ja_in_tax_codes
                     in the declaration section. (11i bug 4324523)

                   2.Bug 4735409:-
                     Aligned so that the code doesn't exceed 255 characters (11i bug 4735409 )

                   3.Bug 4764676:-
                     When split happens at the time of shipment, code in this procedure, which is a Select..Into statement raises an exception.
                     Commented the Select..Into statment and added a Cursor. Added the cursor c_get_so_picking_lines which considers all the lines
                     (result of split) to get the Total Quantity and Total Tax Amount. (11i bug 4764676, Fwd porting bug 4955151)

                   4. Bug 5104197:-
                      Modified the cursor get_inv_line.  Removed the join condition for organization_id of mtl_system_items and
                      warehouse_id of ra_customer_trx_lines_all. Included a join condition for organization_id of mtl_system_items and jai_ar_trx.
                      This has been done because there are cases where the warehouse_id in the ra_customer_trx_lines_all is null. Hence removed that link.
                      (11i bug 5104197, fwd porting bug 5225768)


25-June-2007  Bgowrava for Bug#6139693, File Version 120.12
              Added Cursor c_get_sup_seq_val which is used to generate sequence numbers from the sequence
              JAI_AR_SUP_LINES_S. and this is used as the value for the customer_trx_line_id
              of the table JAI_AR_SUP_LINES.

07-Jul-2007   Bgowrava for Bug#6139693, File Version 120.13
              Added the NVL condition for the EXIST_NET_SALES_AMT fields in the update statements of
              JAI_AR_SUP_HDRS_ALL.

12-Sep-2007   Bgowrava for bug#6400997, File Version 120.9.12000000.6
               Added the columns SUPP_INV_RAISED_IND, CHOSEN_FOR_PROCESS in the insert statements
               and assigned values 'N' to both of them. This was done because the default values were
               not getting defaulted.

08-AUG-2008	JMEENA for bug#7567647
			 Commented the cursor c_get_sup_seq_val and replaced the cursor generated v_cust_trx_line_no_s
			 with  I.CUSTOMER_TRX_LINE_ID to insert in column CUSTOMER_TRX_LINE_ID  and interface_line_Attribute2.
14-aug-2009 vkaranam for bug#8775883
            Issue:
	    Supplimentary Invoice/CM/DM generated has the duplicate tax lines.

	   Reason:
	    Issue is with the the table jai_ar_trx_sup_inv_t from GET_INV_LINE cursor as
            it is resulting in same trx line getting repeated multiple times.

            Due to which duplicate insertion of the tax details is happening.

	    Fix:

	    Commented  the table jai_ar_trx_sup_inv_t  and its columns from  GET_INV_LINE cursor .
	    Also commented  OPEN   C_PRICE_LIST_INFO,fetch.. as this info .is no longer required.


 8.   03-Dec-2009   Jia for the Bug#8880147
                 Issues:
                    SUPPLEMENTARY TRANS CAN NOT GENERATED BY CHANGE AV LIST .
                 Fix:
			             Modify the condition for cursor get_cust_ass_value_cat_cur.

 9.   13-May-2010   Allen Yang for bug 9709477 File Version 120.20.12010000.12
                 Issues:
                    TST1213.NON SHIPPABLE: PATCH FOR OTHER CHANGES OF NONSHIPPABLE
                 Fix:
                    Modified cursor c_get_so_picking_lines to fetch non-shippable lines also.


 ------------------------------------------------------------------------------------------------------------------------------*/

 v_today    := trunc(SYSDATE); --Ramananda for File.Sql.35
 v_statement_id := '0'; --Ramananda for File.Sql.35

 FND_FILE.put_line(FND_FILE.log, '~~~~~~~~~~~~~~ Start India Localization Log ~~~~~~~~~~~~~~');

 v_statement_id := '1';

 FOR fetch_inv IN fetch_cmb_tab_inv LOOP        -- 00000a

    inv_no := null;

    v_statement_id := '2';

    IF CHECK_FOR_INV%ISOPEN THEN
        CLOSE CHECK_FOR_INV;
    END IF;

    v_statement_id := '3';

    -- CURSOR TO CHECK IF AN INVOICE HAS ENTRIES EXISTING IN THE JAI_AR_SUP_HDRS_ALL --
    OPEN CHECK_FOR_INV(FETCH_INV.CUSTOMER_TRX_ID);
    FETCH CHECK_FOR_INV INTO INV_NO;

    IF CHECK_FOR_INV%NOTFOUND THEN      -- 0000a1
				v_statement_id := '4';

        CLOSE CHECK_FOR_INV;

        BEGIN
       FOR I IN GET_INV_LINE(FETCH_INV.CUSTOMER_TRX_ID, 'LINE') LOOP       -- 0000aa

            v_statement_id := '4';
	  /*commented for bug 8775883	   as this info is no longer required
            -- following cursor and if condition added by sriram - bug # 3143813
            OPEN   C_PRICE_LIST_INFO (I.NEW_TYPE_ID, i.inventory_item_id);
            FETCH  C_PRICE_LIST_INFO INTO v_prod_attr_value, v_list_header_id;
            CLOSE  C_PRICE_LIST_INFO;
	    */

            -- Added by Jia for Advanced Pricing on 26-Jun-2009 , Begin
            ---------------------------------------------------------------------------------
             /*commented for bug 8775883	   as this info is no longer required
	    OPEN get_price_list_info_cat_cur (I.NEW_TYPE_ID, i.inventory_item_id);
            FETCH get_price_list_info_cat_cur INTO  lv_item_category_value;
            CLOSE get_price_list_info_cat_cur;
	    */

            -- Get category_set_name
            OPEN category_set_name_cur;
            FETCH category_set_name_cur INTO lv_category_set_name;
            CLOSE category_set_name_cur;
            ---------------------------------------------------------------------------------
            -- Added by Jia for Advanced Pricing on 26-Jun-2009 , End

            /* Bug 4224466. Added by LGOPALSA
               Get the currency Precision  */

                         Open get_curr_prec(i.invoice_currency_code);
              Fetch get_curr_prec into ln_precision;
            Close get_curr_prec;

            -- This is to ensure that the precision need not be
            -- kept as null. If it is null then precision is 0

            ln_precision := nvl(ln_precision,0);

            -- End for bug4224466

            v_statement_id := '5';

        /*commenting the below if condition for bug#8775883 as this is no longer required
here v_prod_attr_value is nothing but the inventory item_id,
then the below condition is like (if (1=1 and i.mapping_type<>'T') OR i.mapping_type='T'),
i.e it has to execute for all the mapping types.
Hence the belwo condition is not required**

IF (v_prod_attr_value = to_char(i.inventory_item_id) and i.mapping_type <> 'T')
                OR i.mapping_type = 'T'
            THEN        -- 000aa1
	    */

             v_statement_id := '6';
              IF FETCH_INV.INTERFACE_HEADER_CONTEXT = 'ORDER ENTRY' THEN      -- 00aa11
                v_statement_id := '7';
                /*
                || Aiyer for fwd porting bug 4955151 (11i bug#4764676), Start
                || Commented the select into query and added the below cursor statements.
                || When Split is done at the time of shipment, the above SELECT..INTO returns more than one row, which causes an exception
                || Added the following cursor statements which gets the Total Quantity and Total Tax Amount
                || grouped on the selling_price, unit_code, tax_category_id, picking_line_id, assessable_value
                */

                OPEN  c_get_so_picking_lines (
                                                i.interface_line_attribute3 ,
                                                i.interface_line_attribute6 ,
                                                i.inventory_item_id
                                              ) ;
                FETCH c_get_so_picking_lines INTO
                                             aquantity, atax_amount,
                                             aselling_price, aunit_code, atax_category_id,
                                             apicking_line_id, old_assessable_value ;
                CLOSE c_get_so_picking_lines ;
                /*
                || Ramananda for bug#4764676, End
                */

     END IF;             -- 00aa11	  commented for bug#8775883 uncommented for bug#8880147

              v_statement_id := '8';

                IF FETCH_INV.INTERFACE_HEADER_CONTEXT IS NULL THEN   -- 00aa12

                    BEGIN

                        -- DISTINCT Key Word is not required, Vijay Shankar for bug # 3515883
                        -- SELECT DISTINCT QUANTITY, TAX_CATEGORY_ID, ASSESSABLE_VALUE
                        SELECT QUANTITY, TAX_CATEGORY_ID, ASSESSABLE_VALUE
                        INTO AQUANTITY, ATAX_CATEGORY_ID, OLD_ASSESSABLE_VALUE
                        FROM JAI_AR_TRX_LINES
                        WHERE CUSTOMER_TRX_LINE_ID = I.CUSTOMER_TRX_LINE_ID;
                    EXCEPTION
                        WHEN OTHERS  THEN
                          NULL;
                    END;
                END IF;     -- 00aa12

                v_statement_id := '9';

                -- GETTING THE OLD PRICE ATTACHED TO AN ITEM --
                IF I.INTERFACE_HEADER_CONTEXT = 'ORDER ENTRY' THEN      -- 00aa13
                    O_S_P := ASELLING_PRICE;
                ELSIF I.INTERFACE_HEADER_CONTEXT IS NULL THEN
                    AUNIT_CODE := I.UOM_CODE;
                    O_S_P := I.UNIT_SELLING_PRICE;
                END IF;     -- 00aa13

                v_statement_id := '10';

                PRICE_LIST_CHANGE_INDICATOR  := 'N';
                INVOICE_LIST_CHANGE_INDICATOR := 'N';
                TAX_LIST_CHANGE_INDICATOR  := 'N';
                ASSESSABLE_LIST_CHANGE  := 'N';

                IF I.INTERFACE_HEADER_CONTEXT = 'ORDER ENTRY' THEN      -- 00aa14

								 BEGIN

                    v_statement_id := '11';

                    OAMOUNT := ASELLING_PRICE*AQUANTITY;

                    SELECT DISTINCT CUSTOMER_TRX_ID, EXISTING_TYPE_ID, NEW_TYPE_ID, Mapping_id
                    INTO P_CUSTOMER_TRX_ID, P_EXISTING_TYPE_ID, P_NEW_TYPE_ID, v_p_mapping_id
                    FROM JAI_AR_TRX_SUP_INV_T
                    WHERE MAPPING_TYPE = 'P'
                    AND CUSTOMER_TRX_ID = FETCH_INV.CUSTOMER_TRX_ID;

                    v_statement_id := '12';

                    IF SQL%FOUND THEN       -- 0aa141
                        -- BLOCK FOR GETTING THE ORIGINAL PRICE LIST ATTACHED TO INVOICE --
                        BEGIN

                            SELECT PRICE_LIST_ID
                            INTO P_PRICE_LIST
                            FROM OE_ORDER_HEADERS_ALL
                            WHERE header_id = (SELECT header_id
                            FROM   oe_order_lines_all
                            WHERE  line_id = FETCH_INV.INTERFACE_HEADER_ATTRIBUTE6
                            AND    org_id  = FETCH_INV.org_id);

                        EXCEPTION
                            When no_data_found   then
                                null;
                        END;

                        v_statement_id := '13';
                        IF P_PRICE_LIST = P_EXISTING_TYPE_ID
                            OR (P_EXISTING_TYPE_ID IS NULL AND P_PRICE_LIST  = P_NEW_TYPE_ID)
                        THEN        -- aa1411

                            v_statement_id := '14';
                            IF I.BOM_ITEM_TYPE <> 1 THEN
                                OPEN LIST_PRICE(I.INVENTORY_ITEM_ID,AUNIT_CODE,P_NEW_TYPE_ID,FETCH_INV.TRX_DATE);
                                FETCH LIST_PRICE INTO C_LIST_PRICE;
                                CLOSE list_price;
                            ELSIF i.bom_item_type = 1 THEN
                                jai_om_utils_pkg.get_ato_pricelist_value(P_NEW_TYPE_ID,AUNIT_CODE,I.INVENTORY_ITEM_ID, I.INTERFACE_LINE_ATTRIBUTE6, C_LIST_PRICE);
                            END IF;

                            v_statement_id := '15';


                            IF C_LIST_PRICE <> ASELLING_PRICE THEN

                                PRICE_LIST_CHANGE_INDICATOR := 'Y';

                                -- Start, Vijay Shankar for bug # 3515883
                                -- This is to get the modifier amount linked to Customer Trx Line
                                v_modifier_adhoc_amount := 0;
                                v_modifier_percentage := 0;
                                v_statement_id := '16';
                                FOR dis IN (SELECT customer_trx_line_id, to_number(interface_line_attribute11) price_adjustment_id
                                                --, line_number, unit_standard_price, unit_selling_price, extended_amount, revenue_amount
                                            FROM ra_customer_trx_lines_all
                                            WHERE interface_line_attribute11 <> '0'
                                            AND interface_line_attribute6 = I.interface_line_attribute6
                                            AND customer_trx_id = fetch_inv.customer_trx_id
                                            AND line_type = 'LINE')
                                LOOP

                                    r_adj := null;
                                    v_statement_id := '17';
                                    lv_list_line_type_code_dis := 'DIS' ;
                                    lv_list_line_type_code_sur := 'SUR' ;
                                    OPEN c_adjustment_details(dis.price_adjustment_id);
                                    FETCH c_adjustment_details INTO r_adj;
                                    CLOSE c_adjustment_details;

                                    v_statement_id := '18';
                                    IF r_adj.arithmetic_operator = 'AMT' THEN
                                        v_modifier_adhoc_amount := v_modifier_adhoc_amount + r_adj.operand;
                                    ELSIF r_adj.arithmetic_operator = '%' THEN
                                        v_modifier_percentage := v_modifier_percentage + r_adj.operand;
                                    END IF;

                                END LOOP;

                                v_statement_id := '18';
                                C_LIST_PRICE := C_LIST_PRICE - (C_LIST_PRICE * v_modifier_percentage/100);
                                C_LIST_PRICE := C_LIST_PRICE - v_modifier_adhoc_amount;
                                -- End, Vijay Shankar for bug # 3515883

                                C_DIFF_PRICE := (C_LIST_PRICE - ASELLING_PRICE) *AQUANTITY;
                                IF C_DIFF_PRICE < 0 THEN
                                    STATUS := 'CR';
                                ELSIF C_DIFF_PRICE > 0 THEN
                                    STATUS := 'SI';
                                END IF;
                                  /* Bug 4224466. Added by LGOPALSA.
                                   Rounded the Exist and new sales amount
                                   with respect to currency. */

                                OAMOUNT := round(ASELLING_PRICE*AQUANTITY ,ln_precision );
                                NAMOUNT := round(C_LIST_PRICE*AQUANTITY , ln_precision);


                               v_statement_id := '19';
                                IF PRICE_LIST_CHANGE_INDICATOR = 'Y' THEN

                                    v_statement_id := '20';
                                    OPEN CHECK_SUPP_ASSESS_INV(STATUS,FETCH_INV.CUSTOMER_TRX_ID);
                                    FETCH CHECK_SUPP_ASSESS_INV INTO CHECK_ASSESS_INV ;

                                    IF CHECK_SUPP_ASSESS_INV%NOTFOUND THEN
                                        v_statement_id := '21';
                                         INSERT INTO JAI_AR_SUP_HDRS_ALL(SUP_HDR_ID,
                                            CUSTOMER_TRX_ID, CUSTOMER_ID, TRX_DATE, SUPP_INV_TYPE, LAST_UPDATE_DATE, CREATED_BY,
                                            CREATION_DATE, LAST_UPDATED_BY, EXIST_NET_SALES_AMT, NEW_NET_SALES_AMT,
                                            SET_OF_BOOKS_ID, ORG_ID, CUSTOMER_SITE, BATCH_ID, SUPP_INV_RAISED_IND, CHOSEN_FOR_PROCESS
                                        ) VALUES ( JAI_AR_SUP_HDRS_ALL_S.nextval,
                                            FETCH_INV.CUSTOMER_TRX_ID, I.BILL_TO_CUSTOMER_ID, FETCH_INV.TRX_DATE, STATUS, SYSDATE, fnd_global.user_id,
                                            SYSDATE, fnd_global.user_id, OAMOUNT, NAMOUNT,
                                            I.SET_OF_BOOKS_ID, I.ORG_ID, I.BILL_TO_SITE_USE_ID, FETCH_INV.BATCH_ID, 'N', 'N'
                                        );--Bgowrava for Bug#6400997, added SUPP_INV_RAISED_IND, CHOSEN_FOR_PROCESS

                                    ELSE
																				v_statement_id := '22';

                                        UPDATE JAI_AR_SUP_HDRS_ALL
                                        SET EXIST_NET_SALES_AMT = nvl(EXIST_NET_SALES_AMT,0)+OAMOUNT,
                                            NEW_NET_SALES_AMT = nvl(NEW_NET_SALES_AMT,0) +NAMOUNT
                                        WHERE CUSTOMER_TRX_ID = FETCH_INV.CUSTOMER_TRX_ID
                                        AND SUPP_INV_TYPE = STATUS;
                                    END IF;

                                    CLOSE CHECK_SUPP_ASSESS_INV;

                                    v_statement_id := '23';
                                    /* Commented the below code by JMEENA for bug#7567647
									--Added by Bgowrava for Bug#6139693

																		OPEN c_get_sup_seq_val;
																		FETCH c_get_sup_seq_val into v_cust_trx_line_no_s;
                                    CLOSE c_get_sup_seq_val; */
                            /*bug#7567647 Replaced v_cust_trx_line_no_s with  I.CUSTOMER_TRX_LINE_ID to insert in column CUSTOMER_TRX_LINE_ID  and interface_line_Attribute2*/
                                 INSERT INTO JAI_AR_SUP_LINES(
                                        CUSTOMER_TRX_ID, CUSTOMER_TRX_LINE_ID, INVENTORY_ITEM_ID, LINE_NUMBER, SUP_INV_TYPE,
                                        DESCRIPTION, QUANTITY, UNIT_CODE, TAX_CATEGORY_ID,
                                        OLD_SELLING_PRICE, NEW_SELLING_PRICE, EXIST_LINE_AMT, NEW_LINE_AMT,
                                        LAST_UPDATE_DATE, LAST_UPDATED_BY, LAST_UPDATE_LOGIN,
                                        CREATION_DATE, CREATED_BY, PL_MAPPING_ID, interface_line_Attribute2
                                    ) VALUES (
                                        FETCH_INV.CUSTOMER_TRX_ID, I.CUSTOMER_TRX_LINE_ID, I.INVENTORY_ITEM_ID, I.LINE_NUMBER, STATUS,
                                        I.DESCRIPTION, AQUANTITY, AUNIT_CODE, ATAX_CATEGORY_ID,
                                        ASELLING_PRICE, C_LIST_PRICE, OAMOUNT, NAMOUNT,
                                        SYSDATE, fnd_global.user_id, NULL,
                                        SYSDATE, fnd_global.user_id, v_p_mapping_id,I.CUSTOMER_TRX_LINE_ID
                                    );

                                END IF;

                            END IF;

                        END IF;     -- aa1411

                    END IF;     -- 0aa141

                EXCEPTION
                    WHEN NO_DATA_FOUND THEN
                       NULL;
                END;

                END IF;     -- 00aa14

                v_statement_id := '25';
                IF FETCH_INV.INTERFACE_HEADER_CONTEXT IS NULL THEN      -- 00aa15
               BEGIN

                    INVOICE_LIST_CHANGE_INDICATOR := 'N';

                    v_statement_id := '26';
                    SELECT UNIT_SELLING_PRICE
                    INTO I_UNIT_SELLING_PRICE
                    FROM JAI_AR_TRX_LINES
                    WHERE CUSTOMER_TRX_LINE_ID = I.CUSTOMER_TRX_LINE_ID;

                    OLD_INVOICE_AMOUNT := I_UNIT_SELLING_PRICE*AQUANTITY;

                    v_statement_id := '27';
                    SELECT CUSTOMER_TRX_ID, NEW_TYPE_ID, mapping_id
                    INTO I_CUSTOMER_TRX_ID, I_NEW_TYPE_ID, v_i_mapping_id
                    FROM JAI_AR_TRX_SUP_INV_T
                    WHERE MAPPING_TYPE = 'I'
                    AND CUSTOMER_TRX_ID = FETCH_INV.CUSTOMER_TRX_ID;

                    v_statement_id := '28';
                    IF SQL%FOUND THEN   -- 0aa151
                      IF  I.BOM_ITEM_TYPE <> 1 THEN
                           v_statement_id := '29';
                            IF LIST_PRICE%ISOPEN THEN
                                CLOSE LIST_PRICE;
                            END IF;

                            v_statement_id := '30';
                            OPEN  LIST_PRICE(I.INVENTORY_ITEM_ID,I.UOM_CODE,I_NEW_TYPE_ID,FETCH_INV.TRX_DATE);
                            FETCH LIST_PRICE INTO C_LIST_PRICE;
                            CLOSE LIST_PRICE;

                        ELSIF I.BOM_ITEM_TYPE = 1 THEN

                            v_statement_id := '31';

                            jai_om_utils_pkg.get_ato_pricelist_value(I_NEW_TYPE_ID,AUNIT_CODE,I.INVENTORY_ITEM_ID, I.INTERFACE_LINE_ATTRIBUTE6,C_LIST_PRICE);
                        END IF;

                        v_statement_id := '32';
                        IF  C_LIST_PRICE <> I_UNIT_SELLING_PRICE THEN       -- aa1511

                            v_statement_id := '33';

                            INVOICE_LIST_CHANGE_INDICATOR := 'Y';
                            C_DIFF_PRICE := C_LIST_PRICE*AQUANTITY - I_UNIT_SELLING_PRICE*AQUANTITY;

                            /* Bug 4224466. Added by LGOPALSA.
                               Rounded the Exist and new sales amount
                               with respect to currency. */

                            OLD_INVOICE_AMOUNT := round( I_UNIT_SELLING_PRICE*AQUANTITY , ln_precision);
                            NEW_INVOICE_AMOUNT := round( C_LIST_PRICE*AQUANTITY , ln_precision );

                            v_statement_id := '34';
                            IF C_DIFF_PRICE > 0  THEN
                                STATUS := 'SI';
                            ELSIF C_DIFF_PRICE < 0 THEN
                                STATUS := 'CR';
                            END IF;

                            v_statement_id := '35';
                            IF INVOICE_LIST_CHANGE_INDICATOR = 'Y' THEN

                                IF CHECK_SUPP_ASSESS_INV%ISOPEN THEN
                                    CLOSE CHECK_SUPP_ASSESS_INV;
                                END IF;

                                v_statement_id := '36';
                                OPEN CHECK_SUPP_ASSESS_INV(STATUS,FETCH_INV.CUSTOMER_TRX_ID);
                                FETCH CHECK_SUPP_ASSESS_INV INTO CHECK_ASSESS_INV ;

                                IF CHECK_SUPP_ASSESS_INV%NOTFOUND THEN

                                    v_statement_id := '37';

                                    INSERT INTO JAI_AR_SUP_HDRS_ALL(SUP_HDR_ID,
                                        CUSTOMER_TRX_ID, CUSTOMER_ID, TRX_DATE, SUPP_INV_TYPE,
                                        LAST_UPDATE_DATE, CREATED_BY, CREATION_DATE, LAST_UPDATED_BY,
                                        EXIST_NET_SALES_AMT, NEW_NET_SALES_AMT, SET_OF_BOOKS_ID,
                                        CUSTOMER_SITE, ORG_ID, BATCH_ID, SUPP_INV_RAISED_IND, CHOSEN_FOR_PROCESS
                                    ) VALUES ( JAI_AR_SUP_HDRS_ALL_S.nextval,
                                        FETCH_INV.CUSTOMER_TRX_ID, I.BILL_TO_CUSTOMER_ID, FETCH_INV.TRX_DATE, STATUS,
                                        SYSDATE, fnd_global.user_id, SYSDATE, fnd_global.user_id,
                                        OLD_INVOICE_AMOUNT, NEW_INVOICE_AMOUNT, I.SET_OF_BOOKS_ID,
                                        I.BILL_TO_SITE_USE_ID, I.ORG_ID, FETCH_INV.BATCH_ID, 'N', 'N'
                                    );--Bgowrava for Bug#6400997, added SUPP_INV_RAISED_IND, CHOSEN_FOR_PROCESS

                                ELSIF CHECK_SUPP_ASSESS_INV%FOUND THEN

                                    v_statement_id := '38';

                                    UPDATE JAI_AR_SUP_HDRS_ALL
                                    SET EXIST_NET_SALES_AMT = nvl(EXIST_NET_SALES_AMT,0)+ OLD_INVOICE_AMOUNT,
                                    NEW_NET_SALES_AMT = nvl(NEW_NET_SALES_AMT,0) +NEW_INVOICE_AMOUNT
                                    WHERE CUSTOMER_TRX_ID = FETCH_INV.CUSTOMER_TRX_ID
                                    AND SUPP_INV_TYPE = STATUS;

                                END IF;

                                CLOSE CHECK_SUPP_ASSESS_INV;

                                v_statement_id := '39';
                             /*bug#7567647 Replaced v_cust_trx_line_no_s with  I.CUSTOMER_TRX_LINE_ID to insert in column CUSTOMER_TRX_LINE_ID  and interface_line_Attribute2*/
                                INSERT INTO JAI_AR_SUP_LINES(
                                    CUSTOMER_TRX_ID, CUSTOMER_TRX_LINE_ID, INVENTORY_ITEM_ID, LINE_NUMBER,
                                    DESCRIPTION, SUP_INV_TYPE, QUANTITY, UNIT_CODE,
                                    TAX_CATEGORY_ID, OLD_SELLING_PRICE, NEW_SELLING_PRICE,
                                    EXIST_LINE_AMT, NEW_LINE_AMT, LAST_UPDATE_DATE, LAST_UPDATED_BY,
                                    LAST_UPDATE_LOGIN, CREATION_DATE, CREATED_BY, PL_MAPPING_ID,interface_line_attribute2
                                ) VALUES (
                                    FETCH_INV.CUSTOMER_TRX_ID, I.CUSTOMER_TRX_LINE_ID, I.INVENTORY_ITEM_ID, I.LINE_NUMBER,
                                    I.DESCRIPTION, STATUS, AQUANTITY, AUNIT_CODE,
                                    ATAX_CATEGORY_ID, I_UNIT_SELLING_PRICE, C_LIST_PRICE,
                                    OLD_INVOICE_AMOUNT, NEW_INVOICE_AMOUNT, SYSDATE, fnd_global.user_id,
                                    NULL, SYSDATE, fnd_global.user_id, v_I_mapping_id,I.CUSTOMER_TRX_LINE_ID
                                );

                            END IF;

                        END IF;             -- aa1511

                    END IF;         -- 0aa151

                EXCEPTION
                    WHEN OTHERS  THEN
                    NULL;
                END;

                END IF;         -- 00aa15

                v_statement_id := '40';
                /* BLOCK FOR DEALING WITH ASSESSABLE VALUE CHANGES */
                DECLARE         -- X1
                    ADDRESS NUMBER;
                BEGIN
                	v_a_mapping_id := null;
                    IF FETCH_INV.INTERFACE_HEADER_CONTEXT = 'ORDER ENTRY'  THEN

                        v_statement_id := '41';
                        IF NOT GET_ADDRESS_OE%ISOPEN THEN
                        OPEN GET_ADDRESS_OE(I.INTERFACE_LINE_ATTRIBUTE6);
                        END IF;
                        FETCH GET_ADDRESS_OE INTO ADDRESS;
                        CLOSE GET_ADDRESS_OE;
                    ELSIF FETCH_INV.INTERFACE_HEADER_CONTEXT IS NULL THEN
                        v_statement_id := '42';
                        OPEN GET_ADDRESS_AR(I.SHIP_TO_SITE_USE_ID);
                        FETCH GET_ADDRESS_AR INTO ADDRESS;
                        CLOSE GET_ADDRESS_AR;
                    END IF;

                    v_statement_id := '43';
                    OPEN GET_ASSESS_PRICE(ADDRESS,I.BILL_TO_CUSTOMER_ID);
                    FETCH GET_ASSESS_PRICE INTO V_ASSESABLE_LIST_ID;
                    IF GET_ASSESS_PRICE%NOTFOUND THEN
                      v_statement_id := '44';
                        CLOSE GET_ASSESS_PRICE;

                        OPEN  GET_ASSESSABLE_PRICE_LIST(I.BILL_TO_CUSTOMER_ID);
                        FETCH GET_ASSESSABLE_PRICE_LIST INTO V_ASSESABLE_LIST_ID;
                        CLOSE GET_ASSESSABLE_PRICE_LIST;
                    ELSIF GET_ASSESS_PRICE%FOUND THEN
                        CLOSE GET_ASSESS_PRICE;
                    END IF;

                    v_statement_id := '45';

                    -- Added by Eric Ma for Advanced Pricing on 09-Jun-2009 , Begin
                    ------------------------------------------------------------------
                    -- Validate if there is more than one Item-UOM combination existing in used AV list for the Item selected
                    -- in the transaction. If yes, give an exception error message to stop transaction.
                    Jai_Avlist_Validate_Pkg.Check_AvList_Validation( pn_party_id          => I.BILL_TO_CUSTOMER_ID
                                                                   , pn_party_site_id     => ADDRESS
                                                                   , pn_inventory_item_id => I.INVENTORY_ITEM_ID
                                                                   , pd_ordered_date      => TRUNC(FETCH_INV.TRX_DATE)
                                                                   , pv_party_type        => 'C'
                                                                   , pn_pricing_list_id   => NULL
                                                                   );
                    -----------------------------------------------------------------------
                    -- Added by Eric Ma for Advanced Pricing on 09-Jun-2009 , End

                    OPEN  GET_ASSESS_LIST(I.INVENTORY_ITEM_ID,I.UOM_CODE,V_ASSESABLE_LIST_ID,FETCH_INV.TRX_DATE);
                    FETCH GET_ASSESS_LIST INTO V_ASSESSABLE_VALUE;
                    CLOSE GET_ASSESS_LIST;

                    -- Added by Eric Ma for Advanced Pricing on 09-Jun-2009 , Begin
                    ----------------------------------------------------------------
                    IF v_assessable_value IS NULL
                    THEN
                      -- Fetch Assessable Value of item category for the given Price list, Inventory Item and UOM Combination
                      OPEN get_cust_ass_value_cat_cur(  V_ASSESABLE_LIST_ID
                                                      , I.INVENTORY_ITEM_ID
                                                      , I.UOM_CODE
                                                      , TRUNC(FETCH_INV.TRX_DATE)
                                                      );
                      FETCH get_cust_ass_value_cat_cur
                       INTO v_assessable_value;
                      CLOSE get_cust_ass_value_cat_cur;
                    END IF; -- v_assessable_value is NULL , for given customer/site/inventory_item_id/UOM
                    ---------------------------------------------------------------
                    -- Added by Eric Ma for Advanced Pricing on 09-Jun-2009 , End

                    IF V_ASSESSABLE_VALUE IS NULL THEN
                       V_ASSESSABLE_VALUE := C_LIST_PRICE;
                    END IF;

                    v_statement_id := '46';
                    SELECT CUSTOMER_TRX_ID, EXISTING_TYPE_ID, NEW_TYPE_ID, mapping_id
                        INTO  A_CUSTOMER_TRX_ID, A_EXISTING_TYPE_ID, A_NEW_TYPE_ID, v_a_mapping_id
                    FROM  JAI_AR_TRX_SUP_INV_T
                    WHERE MAPPING_TYPE = 'A'
                    AND   CUSTOMER_TRX_ID = FETCH_INV.CUSTOMER_TRX_ID;


                    v_statement_id := '47';
                    IF SQL%FOUND THEN
                      v_statement_id := '48';
                        IF V_ASSESABLE_LIST_ID = A_EXISTING_TYPE_ID
                            OR (A_EXISTING_TYPE_ID IS NULL AND V_ASSESABLE_LIST_ID = A_NEW_TYPE_ID)
                        THEN
                            IF I.BOM_ITEM_TYPE = 1 THEN
                                v_statement_id := '50';
                                jai_om_utils_pkg.get_ato_assessable_value( A_NEW_TYPE_ID,I.INTERFACE_LINE_ATTRIBUTE6, NEW_ASSESS_VALUE);
                            ELSIF I.BOM_ITEM_TYPE <> 1 THEN
                                v_statement_id := '51';
                                OPEN  GET_ASSESS_LIST(I.INVENTORY_ITEM_ID,AUNIT_CODE,A_NEW_TYPE_ID,FETCH_INV.TRX_DATE) ;
                                FETCH GET_ASSESS_LIST INTO NEW_ASSESS_VALUE;
                                CLOSE GET_ASSESS_LIST;

                                -- Added by Eric Ma for Advanced Pricing on 09-Jun-2009 , Begin
                                -----------------------------------------------------------------
                                IF NEW_ASSESS_VALUE IS NULL
                                THEN
                                  -- Fetch Assessable Value of item category for the given Price list, Inventory Item and UOM Combination
                                  OPEN get_cust_ass_value_cat_cur ( A_NEW_TYPE_ID
                                                                  , I.INVENTORY_ITEM_ID
                                                                  , AUNIT_CODE
                                                                  , TRUNC(FETCH_INV.TRX_DATE)
                                                                  );
                                  FETCH get_cust_ass_value_cat_cur
                                   INTO new_assess_value;
                                  CLOSE get_cust_ass_value_cat_cur;
                                END IF; -- v_assessable_value is null, for the given customer/site/inventory_item_id/UOM
                                ----------------------------------------------------------------
                                -- Added by Eric Ma for Advanced Pricing on 09-Jun-2009 , End

                            END IF;

                            v_statement_id := '53';
                            IF OLD_ASSESSABLE_VALUE <> NEW_ASSESS_VALUE THEN
                                v_statement_id := '54';
                                ASSESSABLE_LIST_CHANGE := 'Y';
                            ELSE
                                ASSESSABLE_LIST_CHANGE := 'N';
                            END IF;
                        END IF;
                    END IF;

                EXCEPTION
                    WHEN NO_DATA_FOUND  THEN
                      NULL;
                END;        -- X1

              DELETE JAI_AR_TRX_TAX_CALC_T;

                v_statement_id := '55';
                -- BLOCK DEALING WITH TAX CHANGES
                DECLARE         -- 00X2
                    CURSOR GET_TAX IS
                        SELECT *
                        FROM   JAI_AR_TRX_TAX_LINES
                        WHERE  LINK_TO_CUST_TRX_LINE_ID = I.CUSTOMER_TRX_LINE_ID;

                    CURSOR GET_NEW_TAX IS
                        SELECT TEMP.TAX_LINE_NO,
                            TEMP.CUSTOMER_TRX_LINE_ID,
                            TEMP.LINK_TO_CUST_TRX_LINE_ID,
                            TEMP.TAX_ID,
                            TEMP.TAX_RATE,
                            TEMP.QTY_RATE,
                            TEMP.UOM,
                            TEMP.TAX_AMOUNT,
                            TEMP.FUNC_TAX_AMOUNT,
                            TEMP.BASE_TAX_AMOUNT,
                            TEMP.PRECEDENCE_1,
                            TEMP.PRECEDENCE_2,
                            TEMP.PRECEDENCE_3,
                            TEMP.PRECEDENCE_4,
                            TEMP.PRECEDENCE_5,
                            TEMP.PRECEDENCE_6,
                            TEMP.PRECEDENCE_7,
                            TEMP.PRECEDENCE_8,
                            TEMP.PRECEDENCE_9,
                            TEMP.PRECEDENCE_10,
			    COD.ADHOC_FLAG
                        FROM JAI_AR_TRX_TAX_CALC_T TEMP,
                        JAI_CMN_TAXES_ALL COD
                        WHERE LINK_TO_CUST_TRX_LINE_ID = I.CUSTOMER_TRX_LINE_ID
                        AND   TEMP.TAX_ID = COD.TAX_ID;

                    CURSOR GET_INV_TAX IS
                        SELECT  EXISTING_TYPE_ID, NEW_TYPE_ID, MAPPING_ID
                        FROM  JAI_AR_TRX_SUP_INV_T
                        WHERE  MAPPING_TYPE = 'T'
                        AND  CUSTOMER_TRX_ID = FETCH_INV.CUSTOMER_TRX_ID;

                BEGIN

                    T_mapping_id := null;

                    v_statement_id := '56';

                    INSERT INTO JAI_AR_TRX_TAX_CALC_T(
                        TAX_LINE_NO,
                        CUSTOMER_TRX_LINE_ID,
                        LINK_TO_CUST_TRX_LINE_ID,
                        PRECEDENCE_1,
                        PRECEDENCE_2,
                        PRECEDENCE_3,
                        PRECEDENCE_4,
                        PRECEDENCE_5,
                        PRECEDENCE_6,
                        PRECEDENCE_7,
                        PRECEDENCE_8,
                        PRECEDENCE_9,
                        PRECEDENCE_10,
			TAX_ID,
                        TAX_RATE,
                        QTY_RATE,
                        UOM,
                        TAX_AMOUNT,
                        INVOICE_CLASS,
                        FUNC_TAX_AMOUNT,
                        BASE_TAX_AMOUNT,
                        CREATION_DATE,
                        CREATED_BY,
                        LAST_UPDATE_DATE,
                        LAST_UPDATED_BY,
                        LAST_UPDATE_LOGIN
                    ) SELECT
                        TAX_LINE_NO,
                        CUSTOMER_TRX_LINE_ID,
                        LINK_TO_CUST_TRX_LINE_ID,
                        PRECEDENCE_1,
                        PRECEDENCE_2,
                        PRECEDENCE_3,
                        PRECEDENCE_4,
                        PRECEDENCE_5,
                        PRECEDENCE_6,
                        PRECEDENCE_7,
                        PRECEDENCE_8,
                        PRECEDENCE_9,
                        PRECEDENCE_10,
			TAX_ID,
                        TAX_RATE,
                        QTY_RATE,
                        UOM,
                        TAX_AMOUNT,
                        INVOICE_CLASS,
                        FUNC_TAX_AMOUNT,
                        BASE_TAX_AMOUNT,
                        CREATION_DATE,
                        CREATED_BY,
                        LAST_UPDATE_DATE,
                        LAST_UPDATED_BY,
                        LAST_UPDATE_LOGIN
                    FROM  JAI_AR_TRX_TAX_LINES
                    WHERE LINK_TO_CUST_TRX_LINE_ID = I.CUSTOMER_TRX_LINE_ID;

                    v_statement_id := '57';
                    IF GET_INV_TAX%ISOPEN THEN
                        CLOSE GET_INV_TAX;
                    END IF;

                    v_statement_id := '58';
                    OPEN GET_INV_TAX;
                    FETCH GET_INV_TAX INTO T_EXISTING_TYPE_ID, T_NEW_TYPE_ID, T_MAPPING_ID;
                    IF GET_INV_TAX%FOUND THEN
                     CLOSE GET_INV_TAX;
                        v_statement_id := '59';
                        FOR GTAX IN GET_TAX LOOP
                            FOR CTAX IN GET_INV_TAX LOOP

                                IF CTAX.EXISTING_TYPE_ID = GTAX.TAX_ID THEN
                                  TAX_LIST_CHANGE_INDICATOR := 'Y';
                                    v_statement_id := '60';
													          UPDATE JAI_AR_TRX_TAX_CALC_T
                                    SET TAX_ID = CTAX.NEW_TYPE_ID,
                                        TAX_RATE = (SELECT TAX_RATE FROM  JAI_CMN_TAXES_ALL WHERE TAX_ID = CTAX.NEW_TYPE_ID),
                                        UOM = (SELECT UOM FROM JAI_CMN_TAXES_ALL WHERE TAX_ID = CTAX.NEW_TYPE_ID)
                                    WHERE TAX_ID = CTAX.EXISTING_TYPE_ID;
                                END IF;

                            END LOOP;
                        END LOOP;

                    END IF;

                    v_statement_id := '61';
                    IF I.INTERFACE_HEADER_CONTEXT = 'ORDER ENTRY' THEN
										   IF PRICE_LIST_CHANGE_INDICATOR = 'Y' THEN
                        	 v_statement_id := '62';
                        	  O_S_P := ASELLING_PRICE;
                            N_S_P := C_LIST_PRICE;
                            PASSING_AMOUNT := NAMOUNT;
                            NEW_LN_AMT := NAMOUNT;
                            EXST_LN_AMT := OAMOUNT;
                        ELSIF PRICE_LIST_CHANGE_INDICATOR = 'N' THEN
                        	  v_statement_id := '63';
                        	  O_S_P := ASELLING_PRICE;
                            N_S_P := ASELLING_PRICE;
                            NEW_LN_AMT := OAMOUNT;
                            EXST_LN_AMT := OAMOUNT;
                            PASSING_AMOUNT := OAMOUNT;
                        END IF;

                    ELSIF I.INTERFACE_HEADER_CONTEXT IS NULL  THEN

                        IF INVOICE_LIST_CHANGE_INDICATOR = 'Y'  THEN
                            v_statement_id := '64';
                            O_S_P := I_UNIT_SELLING_PRICE;
                            N_S_P := C_LIST_PRICE;
                            NEW_LN_AMT := NAMOUNT;
                            EXST_LN_AMT := OAMOUNT;
                            PASSING_AMOUNT := NEW_INVOICE_AMOUNT;
                        ELSIF INVOICE_LIST_CHANGE_INDICATOR = 'N' THEN
                            v_statement_id := '65';
                            O_S_P := I_UNIT_SELLING_PRICE;
                            N_S_P := I_UNIT_SELLING_PRICE;
                            PASSING_AMOUNT := OLD_INVOICE_AMOUNT;
                            NEW_LN_AMT := OAMOUNT;
                            EXST_LN_AMT := OAMOUNT;
                        END IF;

                    END IF;

                    v_statement_id := '66';
                    IF ASSESSABLE_LIST_CHANGE = 'Y' THEN
                        PASSING_ASSESSABLE := NEW_ASSESS_VALUE;
                        O_A_VAL := OLD_ASSESSABLE_VALUE;
                        N_A_VAL := NEW_ASSESS_VALUE;
                    ELSIF ASSESSABLE_LIST_CHANGE = 'N' THEN
                       	--added the nvl condition for bug#8671242,
			PASSING_ASSESSABLE :=nvl(V_ASSESSABLE_VALUE,OLD_ASSESSABLE_VALUE);
                        O_A_VAL := OLD_ASSESSABLE_VALUE;
                        N_A_VAL := OLD_ASSESSABLE_VALUE;
                    END IF;

                    v_statement_id := '67';
                    IF PRICE_LIST_CHANGE_INDICATOR = 'Y'
                        OR INVOICE_LIST_CHANGE_INDICATOR = 'Y'
                        OR TAX_LIST_CHANGE_INDICATOR = 'Y'
                        OR ASSESSABLE_LIST_CHANGE = 'Y'
                    THEN
                        pack_assess := passing_assessable*aquantity;
                        v_statement_id := '68';


 jai_ar_sup_trx_pkg.calculate_tax('OE_LINES_UPDATE',ATAX_CATEGORY_ID,I.CUSTOMER_TRX_LINE_ID,
                            pack_assess ,PASSING_AMOUNT,NVL(FETCH_INV.CONVERSION_RATE,1),
                            I.Inventory_item_id,Aquantity, AUNIT_CODE,NULL,
                            NULL, NULL, SYSDATE,fnd_global.user_id,fnd_global.user_id );
                    END IF;

                    v_statement_id := '69';
                    IF ASSESSABLE_LIST_CHANGE = 'Y'
                        OR PRICE_LIST_CHANGE_INDICATOR = 'Y'
                        OR INVOICE_LIST_CHANGE_INDICATOR = 'Y'
                        OR TAX_LIST_CHANGE_INDICATOR = 'Y'
                    THEN                -- 0X2a

                        v_statement_id := '70';
                       FOR OLD_TAX_LINE_REC IN GET_TAX LOOP
                           FOR NEW_TAX_LINE_REC IN GET_NEW_TAX LOOP

                                IF OLD_TAX_LINE_REC.TAX_LINE_NO = NEW_TAX_LINE_REC.TAX_LINE_NO
                                    AND OLD_TAX_LINE_REC.LINK_TO_CUST_TRX_LINE_ID = NEW_TAX_LINE_REC.LINK_TO_CUST_TRX_LINE_ID
                                    AND OLD_TAX_LINE_REC.TAX_AMOUNT <> NEW_TAX_LINE_REC.TAX_AMOUNT
                                    AND NEW_TAX_LINE_REC.ADHOC_FLAG <> 'Y'
                                THEN
                                    v_statement_id := '71';
                                    TAX_DIFFER1 := NEW_TAX_LINE_REC.TAX_AMOUNT - OLD_TAX_LINE_REC.TAX_AMOUNT;
                                    OLD_TAX_AMOUNT := OLD_TAX_LINE_REC.TAX_AMOUNT ;
                                    NEW_TAX_AMOUNT := NEW_TAX_LINE_REC.TAX_AMOUNT;

                                    IF TAX_DIFFER1 > 0  THEN
                                        STATUS := 'SI';
                                    ELSIF TAX_DIFFER1 < 0 THEN
                                        STATUS := 'CR';
                                    END IF;

                                END IF;

                                v_statement_id := '72';
                                DECLARE
                                    CURSOR CHECK_SUPP_LINES IS
                                        SELECT 1 FROM JAI_AR_SUP_LINES
                                        WHERE CUSTOMER_TRX_ID = FETCH_INV.CUSTOMER_TRX_ID
                                        AND CUSTOMER_TRX_LINE_ID = I.CUSTOMER_TRX_LINE_ID
                                        AND SUP_INV_TYPE = STATUS;
                                BEGIN

                                    v_statement_id := '73';
                                    IF CHECK_SUPP_LINES%ISOPEN THEN
                                        CLOSE CHECK_SUPP_LINES;
                                    END IF;

                                    v_statement_id := '74';

                                    OPEN CHECK_SUPP_LINES;
                                    FETCH CHECK_SUPP_LINES INTO CHECK2;

                                    IF CHECK_SUPP_LINES%NOTFOUND AND STATUS IN ('SI','CR')
                                        AND TAX_DIFFER1 <> 0
                                    THEN
									/* Commented the below code by JMEENA for bug#7567647
                                    --Added by Bgowrava for Bug#6139693
																						OPEN c_get_sup_seq_val;
																						FETCH c_get_sup_seq_val into v_cust_trx_line_no_s;
																		        CLOSE c_get_sup_seq_val; */


                                        v_statement_id := '75';
                                        /*bug#7567647 Replaced v_cust_trx_line_no_s with  I.CUSTOMER_TRX_LINE_ID to insert in column CUSTOMER_TRX_LINE_ID  and interface_line_Attribute2*/
                                          INSERT INTO JAI_AR_SUP_LINES(
                                            CUSTOMER_TRX_ID, CUSTOMER_TRX_LINE_ID, LINE_NUMBER, SUP_INV_TYPE,
                                            INVENTORY_ITEM_ID, DESCRIPTION, QUANTITY, UNIT_CODE,
                                            TAX_CATEGORY_ID, OLD_ASSESSABLE_VALUE, NEW_ASSESSABLE_VALUE, AL_MAPPING_ID,
                                            LAST_UPDATE_DATE, LAST_UPDATED_BY, LAST_UPDATE_LOGIN, CREATION_DATE, CREATED_BY,interface_line_attribute2
                                        ) VALUES (
                                            FETCH_INV.CUSTOMER_TRX_ID, I.CUSTOMER_TRX_LINE_ID, I.LINE_NUMBER, STATUS,
                                            I.INVENTORY_ITEM_ID, I.DESCRIPTION, AQUANTITY, AUNIT_CODE,
                                            ATAX_CATEGORY_ID, O_A_VAL, N_A_VAL, v_a_mapping_id,
                                            SYSDATE, fnd_global.user_id, NULL, SYSDATE, fnd_global.user_id,I.CUSTOMER_TRX_LINE_ID
                                        );

                                    ELSIF CHECK_SUPP_LINES%FOUND AND STATUS IN ('SI','CR')
                                        AND TAX_DIFFER1 <> 0
                                    THEN

                                        v_statement_id := '76';

                                        UPDATE JAI_AR_SUP_LINES
                                        SET OLD_ASSESSABLE_VALUE = O_A_VAL,
                                            NEW_ASSESSABLE_VALUE = N_A_VAL,
                                            AL_MAPPING_ID = v_a_mapping_id
                                        WHERE CUSTOMER_TRX_ID = FETCH_INV.CUSTOMER_TRX_ID
                                        AND  CUSTOMER_TRX_LINE_ID = I.CUSTOMER_TRX_LINE_ID
                                        AND  SUP_INV_TYPE = STATUS;
                                    END IF;
                                    CLOSE CHECK_SUPP_LINES;

                                    IF CHECK_SUPP_ASSESS_INV%ISOPEN THEN
                                        CLOSE CHECK_SUPP_ASSESS_INV;
                                    END IF;

                                    v_statement_id := '77';
                                    OPEN CHECK_SUPP_ASSESS_INV(STATUS,FETCH_INV.CUSTOMER_TRX_ID);
                                    FETCH CHECK_SUPP_ASSESS_INV INTO CHECK_ASSESS_INV ;
                                    v_statement_id := '77a';

                                    IF CHECK_SUPP_ASSESS_INV%NOTFOUND AND STATUS IN ('CR','SI')
                                        AND TAX_DIFFER1 <> 0
                                    THEN

                                        v_statement_id := '78';


                                        INSERT INTO JAI_AR_SUP_HDRS_ALL(SUP_HDR_ID,
                                            CUSTOMER_TRX_ID, CUSTOMER_ID, TRX_DATE, SUPP_INV_TYPE,
                                            LAST_UPDATE_DATE, LAST_UPDATED_BY, LAST_UPDATE_LOGIN, CREATION_DATE,
                                            CREATED_BY, SET_OF_BOOKS_ID, ORG_ID, CUSTOMER_SITE, BATCH_ID, SUPP_INV_RAISED_IND, CHOSEN_FOR_PROCESS
                                        ) VALUES ( JAI_AR_SUP_HDRS_ALL_S.nextval,
                                            FETCH_INV.CUSTOMER_TRX_ID, I.BILL_TO_CUSTOMER_ID, FETCH_INV.TRX_DATE, STATUS,
                                            SYSDATE, fnd_global.user_id, NULL, SYSDATE,
                                            fnd_global.user_id, I.SET_OF_BOOKS_ID, I.ORG_ID, I.BILL_TO_SITE_USE_ID, FETCH_INV.BATCH_ID, 'N', 'N'
                                        );--Bgowrava for Bug#6400997, added SUPP_INV_RAISED_IND, CHOSEN_FOR_PROCESS

                                    END IF;

                                    CLOSE CHECK_SUPP_ASSESS_INV;
                                    v_statement_id := '79';

                                END;

                            END LOOP;
                        END LOOP;

                    END IF;             -- 0X2a

                    v_statement_id := '80';
                    FOR A IN GET_TAX LOOP       -- 1122
                        v_statement_id := '81';
                        FOR B IN GET_NEW_TAX LOOP       -- 1123

                            v_statement_id := '82';
                            TAX_DIFF_AMT := 0;
                            IF A.TAX_LINE_NO = B.TAX_LINE_NO
                                AND A.LINK_TO_CUST_TRX_LINE_ID = B.LINK_TO_CUST_TRX_LINE_ID
                                AND ((A.TAX_ID <> B.TAX_ID) OR (A.TAX_AMOUNT <> B.TAX_AMOUNT))
                                AND B.ADHOC_FLAG <> 'Y'
                            THEN

                                TAX_DIFF_AMT := B.TAX_AMOUNT - A.TAX_AMOUNT;
                                IF A.TAX_AMOUNT < B.TAX_AMOUNT THEN
                                    STATUS := 'SI';
                                ELSIF A.TAX_AMOUNT > B.TAX_AMOUNT  THEN
                                    STATUS := 'CR';
                                END IF;

                                v_statement_id := '83';

                                INSERT INTO JAI_AR_SUP_TAXES(
                                    TAX_LINE_NO, CUSTOMER_TRX_LINE_ID, LINK_TO_CUST_TRX_LINE_ID, SUP_INV_TYPE,
                                    OLD_TAX_ID, OLD_RATE, OLD_UOM, OLD_QTY_RATE,
                                    NEW_TAX_ID, NEW_RATE, NEW_UOM, NEW_QTY_RATE,
                                    MAPPING_ID,
				    PRECEDENCE_1, PRECEDENCE_2, PRECEDENCE_3, PRECEDENCE_4, PRECEDENCE_5,
				    PRECEDENCE_6, PRECEDENCE_7, PRECEDENCE_8, PRECEDENCE_9, PRECEDENCE_10,
				    EXIST_TAX_AMT, NEW_TAX_AMT,
                                    OLD_BASE_TAX_AMT, NEW_BASE_TAX_AMT, OLD_FUNC_TAX_AMT, NEW_FUNC_TAX_AMT,
                                    DIFF_AMT, LAST_UPDATE_DATE, LAST_UPDATED_BY,
                                    LAST_UPDATE_LOGIN, CREATION_DATE, CREATED_BY
                                ) VALUES (
                                    A.TAX_LINE_NO, JAI_AR_SUP_TAXES_S.NEXTVAL, A.LINK_TO_CUST_TRX_LINE_ID, STATUS,
                                    A.TAX_ID, A.TAX_RATE, A.UOM, A.QTY_RATE,
                                    B.TAX_ID, B.TAX_RATE, B.UOM, B.QTY_RATE,
                                    T_MAPPING_ID,
				    B.PRECEDENCE_1, B.PRECEDENCE_2, B.PRECEDENCE_3, B.PRECEDENCE_4, B.PRECEDENCE_5,
				    B.PRECEDENCE_6, B.PRECEDENCE_7, B.PRECEDENCE_8, B.PRECEDENCE_9, B.PRECEDENCE_10,
				    A.TAX_AMOUNT, B.TAX_AMOUNT,
                                    A.BASE_TAX_AMOUNT, B.BASE_TAX_AMOUNT, A.FUNC_TAX_AMOUNT, B.FUNC_TAX_AMOUNT,
                                    TAX_DIFF_AMT, SYSDATE, fnd_global.user_id,
                                    NULL, SYSDATE, fnd_global.user_id
                                );

                                v_statement_id := '84';
                                IF A.TAX_LINE_NO = B.TAX_LINE_NO THEN

                                    v_statement_id := '85';
                                    SELECT TAX_TYPE INTO OLD_TAX_TYPE FROM JAI_CMN_TAXES_ALL WHERE TAX_ID = A.TAX_ID;

                                    v_statement_id := '86';
                                    SELECT TAX_TYPE INTO NEW_TAX_TYPE FROM JAI_CMN_TAXES_ALL WHERE TAX_ID = B.TAX_ID;

                                    IF OLD_TAX_TYPE LIKE '%Excise%' THEN
                                        v_statement_id := '87';
                                        UPDATE JAI_AR_SUP_LINES
                                        SET EXIST_EXCISE_AMT = NVL(EXIST_EXCISE_AMT,0) + A.TAX_AMOUNT
                                        WHERE CUSTOMER_TRX_LINE_ID = A.LINK_TO_CUST_TRX_LINE_ID
                                        AND SUP_INV_TYPE = STATUS;

                                        v_statement_id := '88';
                                        UPDATE JAI_AR_SUP_HDRS_ALL
                                        SET EXIST_EXCISE_AMT = NVL(EXIST_EXCISE_AMT,0)+A.TAX_AMOUNT
                                        WHERE CUSTOMER_TRX_ID = FETCH_INV.CUSTOMER_TRX_ID
                                        AND SUPP_INV_TYPE = STATUS;

                                    ELSIF OLD_TAX_TYPE NOT LIKE '%Excise%' THEN
                                        v_statement_id := '89';
                                        UPDATE JAI_AR_SUP_LINES
                                        SET EXIST_OTHER_AMT = NVL(EXIST_OTHER_AMT,0) + A.TAX_AMOUNT
                                        WHERE CUSTOMER_TRX_LINE_ID = A.LINK_TO_CUST_TRX_LINE_ID
                                        AND SUP_INV_TYPE = STATUS;

                                        v_statement_id := '90';

                                        UPDATE JAI_AR_SUP_HDRS_ALL
                                        SET EXIST_OTHER_AMT = NVL(EXIST_OTHER_AMT,0)+A.TAX_AMOUNT
                                        WHERE CUSTOMER_TRX_ID = FETCH_INV.CUSTOMER_TRX_ID
                                        AND SUPP_INV_TYPE = STATUS;
                                    END IF;

                                    IF NEW_TAX_TYPE LIKE '%Excise%' THEN
                                        v_statement_id := '91';
                                        UPDATE  JAI_AR_SUP_LINES
                                        SET NEW_EXCISE_AMT = NVL(NEW_EXCISE_AMT,0) + B.TAX_AMOUNT
                                        WHERE CUSTOMER_TRX_LINE_ID = A.LINK_TO_CUST_TRX_LINE_ID
                                        AND SUP_INV_TYPE = STATUS;

                                        v_statement_id := '92';

                                        UPDATE JAI_AR_SUP_HDRS_ALL
                                        SET NEW_EXCISE_AMT = NVL(NEW_EXCISE_AMT,0)+B.TAX_AMOUNT
                                        WHERE CUSTOMER_TRX_ID = FETCH_INV.CUSTOMER_TRX_ID
                                        AND SUPP_INV_TYPE = STATUS;

                                    ELSIF OLD_TAX_TYPE NOT LIKE '%Excise%' THEN

                                        v_statement_id := '93';
                                        UPDATE JAI_AR_SUP_LINES
                                        SET NEW_OTHER_AMT = NVL(NEW_OTHER_AMT,0) + B.TAX_AMOUNT
                                        WHERE CUSTOMER_TRX_LINE_ID = A.LINK_TO_CUST_TRX_LINE_ID
                                        AND SUP_INV_TYPE = STATUS;

                                        v_statement_id := '94';

                                        UPDATE JAI_AR_SUP_HDRS_ALL
                                        SET NEW_OTHER_AMT = NVL(NEW_OTHER_AMT,0)+B.TAX_AMOUNT
                                        WHERE CUSTOMER_TRX_ID = FETCH_INV.CUSTOMER_TRX_ID
                                        AND SUPP_INV_TYPE = STATUS;

                                    END IF;
                                END IF;

                            END IF;

                            v_statement_id := '95';
							/* Replaced v_cust_trx_line_no_s with A.LINK_TO_CUST_TRX_LINE_ID for bug 7567647 by JMEENA */
                            UPDATE JAI_AR_SUP_LINES
                            SET EXCISE_DIFF_AMT =  NVL(NEW_EXCISE_AMT,0) - NVL(EXIST_EXCISE_AMT,0),
                                OTHER_DIFF_AMT =   NVL(NEW_OTHER_AMT,0) -  NVL(EXIST_OTHER_AMT,0)
                            WHERE CUSTOMER_TRX_LINE_ID = A.LINK_TO_CUST_TRX_LINE_ID;

                            v_statement_id := '96';

                            UPDATE JAI_AR_SUP_HDRS_ALL
                            SET EXCISE_DIFF_AMT = NVL(NEW_EXCISE_AMT,0) - NVL(EXIST_EXCISE_AMT,0),
                                OTHER_DIFF_AMT =  NVL(NEW_OTHER_AMT,0) - NVL(EXIST_OTHER_AMT,0)
                            WHERE CUSTOMER_TRX_ID = FETCH_INV.CUSTOMER_TRX_ID;

                        END LOOP;   -- 1123
                    END LOOP;       -- 1122

                -- END LOOP;
                END;                -- 00X2

        --    END IF;         -- 000aa1 -- added by sriram  - bug # 3143813 commented for bug 8880147

        END LOOP;       -- 0000aa

        END;

    END IF;             -- 0000a1

 END LOOP;      -- 00000a



 v_statement_id := '97';
 DELETE JAI_AR_TRX_SUP_INV_T;

 v_statement_id := '98';
 DELETE JAI_AR_SUP_INV_T;

 v_statement_id := '99';
DELETE JAI_AR_TRX_TAX_CALC_T;

 v_statement_id := '100';
 COMMIT;

 /*
 EXCEPTION
    WHEN OTHERS THEN
        FND_FILE.put_line(fnd_file.log, 'Error at Statement_id->'||v_statement_id|| ', and Error is ->'||SQLERRM);
        RAISE;
 */


   /* Added by Ramananda for bug#4407165 */
    EXCEPTION
     WHEN OTHERS THEN
      FND_MESSAGE.SET_NAME('JA','JAI_EXCEPTION_OCCURED');
      FND_MESSAGE.SET_TOKEN('JAI_PROCESS_MSG', lv_object_name ||'. Err:'||sqlerrm );
      app_exception.raise_exception;

END process_invoices;

PROCEDURE create_invoices
        (ERRBUF OUT NOCOPY VARCHAR2,
         RETCODE OUT NOCOPY VARCHAR2,
         CHSN_FOR_CNSLDT IN VARCHAR2)
IS
v_amount number;
  v_conversion_rate number;
  v_address number;
  v_seq number;
  v_sp_diff number;
  v_term varchar2(100);
  v_invoice_curr_code VARCHAR2(10);
  v_sales_rep_id number;
  v_term_id number;

  /* Added by Ramananda for bug#4407165 */
  lv_object_name CONSTANT VARCHAR2(61) := 'jai_ar_sup_trx_pkg.create_invoices';

  Cursor GET_SUPP_INV IS
  SELECT A.customer_trx_id,
         A.chosen_for_process,
         A.exist_net_sales_amt,
         A.new_net_sales_amt,
         A.set_of_books_id,
         A.org_id,
         B.bill_to_site_use_id,
         B.bill_to_customer_id,
         A.supp_inv_type,
         B.invoice_currency_code,
         B.primary_salesrep_id,
         B.term_id,
       C.organization_id
   FROM  JAI_AR_SUP_HDRS_ALL A,
         RA_CUSTOMER_TRX_ALL B,
       JAI_AR_TRXS C
   where A.CUSTOMER_TRX_ID = B.CUSTOMER_TRX_ID
    AND  A.CUSTOMER_TRX_ID = C.CUSTOMER_TRX_ID
    AND  A.chosen_for_process = 'Y'
    AND  A.SUPPLEMENTARY_NUM IS NULL;

 Cursor  get_cnsldt_header is
 select  distinct set_of_books_id,
         customer_id,
         customer_site,
         supp_inv_type,
         org_id
  from   JAI_AR_SUP_HDRS_ALL;

 cursor get_curr(id number,cid number,sid number) is
 select distinct invoice_currency_code,
        primary_salesrep_id,
        term_id
   from ra_customer_trx_all
  where set_of_books_id = id
    and bill_to_customer_id = cid
    and bill_to_site_use_id = sid;

 Cursor get_inv_cnsldt(sob_id number,cust_id number,cust_site number,inv_type varchar2)  is
 select sum(nvl(a.new_line_amt,0) - nvl(a.exist_line_amt,0)) AMT,
        B.SET_OF_BOOKS_ID,
        B.CUSTOMER_SITE,
        B.CUSTOMER_ID,
        B.supp_INV_TYPE ,
        INVENTORY_ITEM_ID,
        sum(QUANTITY) quant,
        a.description,
      a.unit_code, --2001/04/10 Anuradha Parthasarathy
      c.organization_id, --2001/05/10    Anuradha Parthasarathy,
        a.interface_line_attribute2
  from  JAI_AR_SUP_HDRS_ALL b,
        JAI_AR_SUP_LINES a,
      JAI_AR_TRXS c
 where  a.customer_trx_id = b.customer_trx_id
  and     a.customer_trx_id = c.customer_trx_id
  and   a.sup_inv_type = b.supp_inv_type
  and   b.chosen_for_process =  'Y'
  and   b.set_of_books_id = sob_id
  and   b.customer_id = cust_id
  and   b.customer_site = cust_site
  and   b.supp_inv_type = inv_type
  and   b.supp_inv_raised_ind = 'N'
  and   b.SUPPLEMENTARY_NUM is null
  and   b.supp_inv_date is null
 group by b.set_of_books_id,
          b.customer_site ,
          b.customer_id,
          a.inventory_item_id,
          b.supp_inv_type,
          a.description,
          a.unit_code,
          c.organization_id --Added by Nagaraj.s for Bug#3110461
          ; --2001/04/10    Anuradha Parthasarathy


 cursor get_cnsldt_crdt_amt(sob_id number,cid number,sid number,item_id number,sup_inv_type varchar2) is
   select  sum (C.REVENUE_AMOUNT_SPLIT) AMT,
           B.SET_OF_BOOKS_ID,
           B.CUSTOMER_SITE,
           B.CUSTOMER_ID,
           B.supp_INV_TYPE ,
           a.INVENTORY_ITEM_ID,
           a.interface_line_attribute2
    from   JAI_AR_SUP_HDRS_ALL b,
           JAI_AR_SUP_LINES a,
           RA_CUST_TRX_LINE_SALESREPS_ALL C
    where a.customer_trx_id = b.customer_trx_id
    and   a.sup_inv_type = b.supp_inv_type
    and   c.customer_trx_line_id = a.customer_Trx_line_id
    and   b.set_of_books_id = sob_id
    and   b.customer_id = cid  --Replaced customer_site with customer_id for bug6713564 by JMEENA
    and   b.customer_site = sid
    and   a.inventory_item_id = item_id
    and   a.sup_inv_type = sup_inv_type
    group by b.set_of_books_id,
             b.customer_site ,
             b.customer_id,
             a.inventory_item_id,
             b.supp_inv_type,
             a.description;

  cursor get_cnsldt_crdt_rep_id(sob_id number,cid number,sid number,invnt_item_id number,sup_inv varchar2) is
    select  sum (C.REVENUE_AMOUNT_SPLIT) REVENUE_AMT,
            c.salesrep_id,
            B.SET_OF_BOOKS_ID,
            B.CUSTOMER_SITE,
            B.CUSTOMER_ID,
            B.supp_INV_TYPE ,
            INVENTORY_ITEM_ID,
            D.SALES_CREDIT_TYPE_ID
     from   JAI_AR_SUP_HDRS_ALL b,
            JAI_AR_SUP_LINES a,
            RA_CUST_TRX_LINE_SALESREPS_ALL C,
            (SELECT distinct salesrep_id,SALES_CREDIT_TYPE_ID from ra_salesreps_all) d  --replaced table ra_salesreps_all by this inline view for bug#6713564
     where  a.customer_trx_id = b.customer_trx_id
     and    a.sup_inv_type = b.supp_inv_type
     and    c.customer_trx_line_id = a.customer_Trx_line_id
     and    c.salesrep_id = d.salesrep_id
     and    b.set_of_books_id = sob_id
     and    b.customer_id = cid
     and    b.customer_site = sid
     and    b.supp_inv_type = sup_inv
     and    a.inventory_item_id = invnt_item_id
     group by b.set_of_books_id,
              b.customer_site ,
              b.customer_id,
              a.inventory_item_id,
              b.supp_inv_type,
              a.description,
              c.salesrep_iD,
              D.SALES_CREDIT_TYPE_ID;
  /* Removed ra_site_uses_all and used hz_cust_site_uses_all for Bug# 4434287 */
  cursor get_address(site_id number) is
  select cust_acct_site_id address_id
  from   hz_cust_site_uses_all
  where  site_use_id = site_id;

  cursor GET_SUPP_INV_LINES(INV NUMBER,TYPE VARCHAR2) IS
  SELECT   K.customer_trx_line_id,
           K. OLD_SELLING_PRICE,
           K.NEW_SELLING_PRICE,
           K.quantity,
           K.inventory_item_id,
           K.description,
           k.pl_mapping_id,
           k.exist_line_amt,
           k.new_line_amt,
           k.unit_code,  --2001/04/10   Anuradha Parthasarathy
       k.interface_line_attribute2    --4499078
  FROM     JAI_AR_SUP_LINES K
  WHERE    K.CUSTOMER_TRX_ID = INV
  AND      K.SUP_INV_TYPE = TYPE;

  CURSOR GET_SALES_CRDT(INVLNO NUMBER) IS
  SELECT DISTINCT  A.salesrep_id,
         A.revenue_percent_split,
         C.sales_credit_type_id,
         A.cust_trx_line_salesrep_id
   FROM  RA_CUST_TRX_LINE_SALESREPS_ALL A,
         JAI_AR_SUP_LINES B,
         RA_SALESREPS_ALL C
   WHERE A.CUSTOMER_TRX_LINE_ID =INVLNO
   AND   C.salesrep_id = A.salesrep_id;

  CURSOR GET_CONVERSION_RATE(id number) IS
  SELECT conversion_rate
  FROM JAI_AR_SUP_CHANGES_ALL
  where mapping_id = id;

  CURSOR GET_TERM(id number) is
  SELECT name
    FROM  ra_terms
   WHERE  term_id = id;


   lv_line_type varchar2(10);
   lv_user    varchar2(10);
   lv_india_inv varchar2(20);
   lv_loc varchar2(20);


   cursor c_legal_entity_id (cp_org_id NUMBER) IS
   SELECT XLE_UTILITIES_GRP.Get_DefaultLegalContext_OU( cp_org_id  )
   from   dual;

   /* Bug 4906958. Added by Lakshmi Gopalsami
       Get the value of legal entity from hr_operating_units
       if the above cursor is returning null.
   */
   /* Bug 5243532. Added by Lakshmi Gopalsami
      Removed the cursor c_get_default_LE_id which
      is referring to hr_operating_units
      and replaced with caching logic.
      Declared variable for implementing caching logic.
    */
   l_func_curr_det jai_plsql_cache_pkg.func_curr_details;

   ln_legal_entity_id  NUMBER;


BEGIN


 -- 2:56 PM 8/16/99

/*------------------------------------------------------------------------------------------
 FILENAME: jai_ar_sup_trx_pkg.create_invoices.sql

 CHANGE HISTORY:
S.No      Date          Author and Details
1     2001/04/10        Anuradha Parthasarathy
                        Uom_Code inserted into Ra_Interface_Lines_All to ensure
                        that Standard Lines used in Auto Accounting is supported

2     2001/05/10        Anuradha Parthasarathy
                        Warehouse id added to make auto accounting to be organization specific.

3     2003/08/25        Nagaraj.s For Bug#3110461 Version : 616.1
                        Organization_id Added in the Group by Clause of cursor get_inv_cnsldt.
    16/04/2007        Kunkumar for bugno 5989740 version 115.6.6107.2
                        Forward porting to R12
--------------------------------------------------------------------------------------------*/
 IF CHSN_FOR_CNSLDT = 'N' OR CHSN_FOR_CNSLDT IS NULL THEN
  FOR SUPP_INV IN GET_SUPP_INV
  LOOP
    if supp_inv.supp_inv_type = 'CR' then
       --select JAI_AR_SUP_HDRS_ALL_S3.nextval into v_seq from dual;
       select JAI_AR_SUP_HDRS_ALL_S1.nextval into v_seq from dual;
    elsif supp_inv.supp_inv_type = 'DB' then
        --select JAI_AR_SUP_HDRS_ALL_S2.nextval into v_seq from dual;
        select JAI_AR_SUP_HDRS_ALL_S1.nextval into v_seq from dual;
    elsif supp_inv.supp_inv_type = 'SI' then
        select JAI_AR_SUP_HDRS_ALL_S1.nextval into v_seq from dual;
    end if ;
    open get_address(supp_inv.bill_to_site_use_id);
    fetch get_address into v_address;
    close get_address;
    FOR  SUPP_INV_LINE IN GET_SUPP_INV_LINES(SUPP_INV.CUSTOMER_TRX_ID,SUPP_INV.SUPP_INV_TYPE)
    LOOP
      if not get_conversion_rate%isopen  then
        open get_conversion_rate(supp_inv_line.pl_mapping_id);
      end if;
      fetch get_conversion_rate into v_conversion_rate;
      close get_conversion_rate;
      v_amount :=  NVL(supp_inv_line.new_line_amt,0) -  NVL(supp_inv_line.exist_line_amt,0);
      v_sp_diff := supp_inv_line.NEW_SELLING_PRICE - supp_inv_line.OLD_SELLING_PRICE;
      open get_term(supp_inv.term_id);
      fetch get_term into v_term;
      close get_term;

      /* added by ssumaith - for LE - bug# 4448789*/
      OPEN c_legal_entity_id(SUPP_INV.org_id);
      FETCH c_legal_entity_id into ln_legal_entity_id;
      close c_legal_entity_id;
      /* ends here additions by ssumaith - for LE - bug# 4448789*/

      /* Bug 4906958. Added by Lakshmi Gopalsami
          If ln_legal_entity_id is null fetch the legal entity id
    from the default_legal_context_id from hr_operating_units
      */

      If nvl(ln_legal_entity_id,-1) = -1 THEN
          /* bug 5243532. Added by Lakshmi Gopalsami
       Removed the reference to cursor c_get_default_LE_id
       and implemented caching logic.
     */
          l_func_curr_det := jai_plsql_cache_pkg.return_sob_curr
                            (p_org_id  =>SUPP_INV.org_id);
          ln_legal_entity_id := l_func_curr_det.legal_entity;
      END IF;

      INSERT INTO RA_INTERFACE_LINES_ALL
                  (amount,
                  inventory_item_id,
                  description,
                  uom_code, --2001/04/10    Anuradha Parthasarathy
                  orig_system_bill_customer_id,
                  orig_system_bill_address_id,
                  set_of_books_id,
                  trx_date,
                  trx_number,
                  batch_source_name,
                  cust_trx_type_name,
                  line_type,
                  conversion_rate,
                  conversion_type,
                  interface_line_context,
                  interface_line_attribute3,
                  interface_line_attribute2,
                  currency_code,
                  primary_salesrep_id,
                  tax_code,
                  term_id,
                  term_name,
                  interface_line_attribute1,
                  interface_line_attribute4,  -- Added by Brathod, bug 4392001
                  INTERFACE_LINE_ATTRIBUTE10, --2001/05/10    Anuradha Parthasarathy
                  warehouse_id,           --2001/05/10    Anuradha Parthasarathy
                  quantity,
                  unit_selling_price,
                  created_by,
                  creation_date,
                  last_updated_by,
                  last_update_date,
                  last_update_login,
                  legal_entity_id  ,  -- added by ssumaith - for LE - Bug# 4448789
                  org_id              -- added by ssumaith - for LE - Bug# 4448789
                  )
          values  (v_amount,
                  supp_inv_line.inventory_item_id,
                  SUPP_INV_LINE.DESCRIPTION,
                  supp_inv_line.unit_code, --2001/04/10 Anuradha Parthasarathy
                  supp_inv.bill_to_customer_id,
                  v_address,
                  supp_inv.set_of_books_id,
                  null, -- sysdate,
                  v_seq,
                  decode(supp_inv.supp_inv_type,'DB','Supplement Debit Memo','CR','Supplement Credit Memo',
                        'SI','Supplement Invoice'),
                  decode(supp_inv.supp_inv_type,'DB','Supplement DM','CR','Supplement CM',
                         'SI','Supplement Invoice'),
                  'LINE',
                   NVL(v_conversion_rate,1),
                  'User',
                   /* Commented by Brathod for Bug# 4392001
                   -decode(supp_inv.supp_inv_type,'DB','SUPPLEMENT DM','CR','SUPPLEMENT CM',
                         'SI','SUPPLEMENT INVOICE'),  -- Context
                   */
                   'INDIA INVOICES',  -- Added by brathod, Bug 4392001
                   supp_inv_line.customer_trx_line_id, -- attribute3
                   supp_inv_line.interface_line_attribute2,                 -- attribute2
                   supp_inv.invoice_currency_code,
                   supp_inv.primary_salesrep_id,
                   NULL, /*'Localization' - Commented Localization as this causes issues during Auto Invoice Import - Bug 9595773*/
                   decode(supp_inv.supp_inv_type,'DB',supp_inv.term_id,'SI',supp_inv.term_id,null),
                   decode(supp_inv.supp_inv_type,'CR',NULL,v_term),
                   decode(supp_inv.supp_inv_type,'DB','SUPPLEMENT DM','CR','SUPPLEMENT CM',
                         'SI','SUPPLEMENT INVOICE'), -- supp_inv.customer_trx_id ,Brathod, Bug# 4392001
                   supp_inv.customer_trx_id,  -- Added by Brathod for Bug# 4392001
                   supp_inv.organization_id,
                   supp_inv.organization_id,
                   supp_inv_line.quantity,
                   decode(v_amount,0,0,v_sp_diff),
                   fnd_global.user_id,
                   sysdate,
                   fnd_global.user_id,
                   sysdate,
                   null ,
                   ln_legal_entity_id ,
                   SUPP_INV.org_id
                   );

        FOR SALES_CRDT IN GET_SALES_CRDT(supp_inv_line.customer_trx_line_id)
        LOOP
          INSERT INTO RA_INTERFACE_SALESCREDITS_ALL
                     (sales_credit_percent_split,
                     salesrep_id,
                     /* Commented By Brathod, For Bug# 4392001
                     -- interface_line_context,
                     -- interface_line_attribute1,
                     -- interface_line_attribute2,
                     -- interface_line_attribute3,
                     End of Bug# 4392001 */
                     sales_credit_type_id,
                     created_by,
                     creation_date,
                     last_updated_by,
                     last_update_date)
             values  (sales_crdt.revenue_percent_split,
                     sales_crdt.salesrep_id,
                     /* Commented By Brathod, For Bug# 4392001
                     decode(supp_inv.supp_inv_type,'DB','SUPPLEMENT DM','CR','SUPPLEMENT CM',
                            'SI','SUPPLEMENT INVOICE'),
                     supp_inv.customer_trx_id,
                     supp_inv_line.interface_line_attribute2,
                     supp_inv_line.customer_trx_line_id,
                     End of Bug# 4392001 */
                     sales_crdt.sales_credit_type_id,
                     fnd_global.user_id,
                     sysdate,
                     fnd_global.user_id,
                     sysdate);
       END LOOP;
     END LOOP;

        UPDATE JAI_AR_SUP_HDRS_ALL
        SET    SUPPLEMENTARY_NUM = V_SEQ,
               SUPP_INV_DATE = SYSDATE,
               SUPP_INV_RAISED_IND = 'Y',
               LAST_UPDATE_DATE = SYSDATE,
               LAST_UPDATED_BY = fnd_global.user_id
         WHERE CUSTOMER_TRX_ID = SUPP_INV.CUSTOMER_TRX_ID
          AND SUPP_INV_TYPE = SUPP_INV.SUPP_INV_TYPE
          AND CHOSEN_FOR_PROCESS = 'Y';
   END LOOP;
   COMMIT;
 Elsif CHSN_FOR_CNSLDT = 'Y' THEN
   for cnsldt_header in get_cnsldt_header
   loop
     IF cnsldt_header.supp_inv_type = 'CR' then
        --select JAI_AR_SUP_HDRS_ALL_S3.nextval into v_seq from dual;
        select JAI_AR_SUP_HDRS_ALL_S1.nextval into v_seq from dual;
     elsif cnsldt_header.supp_inv_type = 'DB' then
        --select JAI_AR_SUP_HDRS_ALL_S2.nextval into v_seq from dual;
        select JAI_AR_SUP_HDRS_ALL_S1.nextval into v_seq from dual;
     elsif cnsldt_header.supp_inv_type = 'SI' then
        select JAI_AR_SUP_HDRS_ALL_S1.nextval into v_seq from dual;
     end if ;

     for inv_cnsldt in get_inv_cnsldt(cnsldt_header.set_of_books_id,cnsldt_header.customer_id,
                                            cnsldt_header.customer_site,cnsldt_header.supp_inv_type)
     loop
       open get_address(cnsldt_header.customer_site);
       fetch get_address into v_address;
       close get_address;

       open get_curr(cnsldt_header.set_of_books_id,cnsldt_header.customer_id,
                     cnsldt_header.customer_site);
       fetch get_curr into  v_invoice_curr_code ,v_sales_rep_id , v_term_id;
       close get_curr;

       open get_term(v_term_id);
       fetch get_term into v_term;
       close get_term;

       v_conversion_rate := NVL(v_conversion_rate,1) ;
       lv_line_type := 'LINE' ;
       lv_user := 'User' ;
       lv_india_inv :=   'INDIA INVOICES' ;
       lv_loc := 'Localization' ;


       /* added by ssumaith - for LE - bug# 4448789*/
       OPEN c_legal_entity_id(cnsldt_header.org_id);
       FETCH c_legal_entity_id into ln_legal_entity_id;
       close c_legal_entity_id;
       /* ends here additions by ssumaith - for LE - bug# 4448789*/

      /* Bug 4906958. Added by Lakshmi Gopalsami
          If ln_legal_entity_id is null fetch the legal entity id
    from the default_legal_context_id from hr_operating_units
      */

      If nvl(ln_legal_entity_id,-1) = -1 THEN
         /* bug 5243532. Added by Lakshmi Gopalsami
       Removed the reference to cursor c_get_default_LE_id
       and implemented caching logic.
     */
          l_func_curr_det := jai_plsql_cache_pkg.return_sob_curr
                            (p_org_id  =>cnsldt_header.org_id);
          ln_legal_entity_id := l_func_curr_det.legal_entity;
      END IF;

      INSERT INTO RA_INTERFACE_LINES_ALL
                   (amount,
                   inventory_item_id,
                   description,
                   uom_code, --2001/04/10   Anuradha Parthasarathy
                   orig_system_bill_customer_id,
                   orig_system_bill_address_id,
                   set_of_books_id,
                   trx_date,
                   trx_number,
                   batch_source_name,
                   cust_trx_type_name,
                   line_type,
                   conversion_rate,
                   conversion_type,
                   interface_line_context,
                   interface_line_attribute3,
                   interface_line_attribute2,
                   currency_code,
                   primary_salesrep_id,
                   tax_code,
                   term_id,
                   term_name,
                   interface_line_attribute1,
                   interface_line_attribute4, -- Added by brathod, Bug 4392001
                   INTERFACE_LINE_ATTRIBUTE10, --2001/05/10   Anuradha Parthasarathy
                   warehouse_id,           --2001/05/10   Anuradha Parthasarathy
                   quantity,
                   unit_selling_price,
                   created_by,
                   creation_date,
                   last_updated_by,
                   last_update_date,
                   last_update_login,
                   org_id ,        /* added by ssumaith - LE - Bug # 4448789 */
                   legal_entity_id /* added by ssumaith - LE - Bug # 4448789 */
                   )
           values  (inv_cnsldt.AMT,
                   inv_cnsldt.inventory_item_id,
                   inv_cnsldt.DESCRIPTION,
                   inv_cnsldt.unit_code, --2001/04/10   Anuradha Parthasarathy
                   inv_cnsldt.customer_id,
                   v_address,
                   inv_cnsldt.set_of_books_id,
                   null, -- sysdate,
                   v_seq,
                   decode(inv_cnsldt.supp_inv_type,'DB','Supplement Debit Memo',
                         'CR','Supplement Credit Memo','SI','Supplement Invoice'),
                   decode(inv_cnsldt.supp_inv_type,'DB','Supplement DM','CR','Supplement CM',
                          'SI','Supplement Invoice'),
                   lv_line_type, --'LINE',
                   v_conversion_rate,  --NVL(v_conversion_rate,1),
                   lv_user, --'User',
                   /* Commented By Brathod, Bug 4392001
                   decode(inv_cnsldt.supp_inv_type,'DB','SUPPLEMENT DM','CR','SUPPLEMENT CM',
                         'SI','SUPPLEMENT INVOICE'),
                   End of Bug# 4392001 */
                   lv_india_inv, --'INDIA INVOICES',  -- Added by brathod, Bug 4392001
                   NULL,
                   inv_cnsldt.interface_line_attribute2 ,
                   v_invoice_curr_code ,
                   v_sales_rep_id ,
                   NULL, /*lv_loc, --'Localization' - Commented Localization as this cause issues during Auto Invoice Import - Bug 9595773*/
                   decode(inv_cnsldt.supp_inv_type,'DB',v_term_id,'SI', v_term_id,null),
                   decode(inv_cnsldt.supp_inv_type,'CR',NULL,v_term),
                   /* Added By Brathod for Bug# 4392001 */
                   decode(inv_cnsldt.supp_inv_type,'DB','SUPPLEMENT DM','CR','SUPPLEMENT CM',
                         'SI','SUPPLEMENT INVOICE'),  -- attribute1
                   null,                              -- attribute4
                   inv_cnsldt.organization_id, --2001/05/10   Anuradha Parthasarathy
                   inv_cnsldt.organization_id, --2001/05/10   Anuradha Parthasarathy
                   inv_cnsldt.quant,
                   ( inv_cnsldt.AMT/inv_cnsldt.quant),
                   fnd_global.user_id,
                   sysdate,
                   fnd_global.user_id,
                   sysdate,
                   null,
                   cnsldt_header.org_id,
                   ln_legal_entity_id
                   );

       for cnsldt_crdt_amt in get_cnsldt_crdt_amt(cnsldt_header.set_of_books_id, cnsldt_header.customer_id,
                                                    cnsldt_header.customer_site,inv_cnsldt.inventory_item_id,
                                                    inv_cnsldt.supp_inv_type)
       loop
          for cnsldt_crdt_rep in get_cnsldt_crdt_rep_id(cnsldt_crdt_amt.set_of_books_id,cnsldt_crdt_amt.customer_id,
                                                 cnsldt_crdt_amt.customer_site,cnsldt_crdt_amt.inventory_item_id,
                                                 cnsldt_crdt_amt.supp_inv_type)
          loop

          INSERT INTO RA_INTERFACE_SALESCREDITS_ALL
                      (sales_credit_percent_split,
                       salesrep_id,
                       /*  Commented By Brathod for Bug# 4392001
                       interface_line_context,
                       interface_line_attribute1,
                       interface_line_attribute2,
                       interface_line_attribute3,
                       End Of Bug# 4392001*/
                       sales_credit_type_id,
                       created_by,
                       creation_date,
                       last_updated_by,
                       last_update_date)
             values    ((cnsldt_crdt_amt.AMT/cnsldt_crdt_rep.REVENUE_AMT)*100,
                       cnsldt_crdt_rep.salesrep_id,
                       /* Commented By Brathod for Bug# 4392001
                       decode(cnsldt_crdt_AMT.supp_inv_type,'DB','SUPPLEMENT DM','CR','SUPPLEMENT CM',
                             'SI','SUPPLEMENT INVOICE'),
                       NULL,
                       cnlsdt_crdt_amt.interface_line_attribute2,
                       NULL,
                       End of Bug# 4392001*/
                       cnsldt_crdt_rep.sales_credit_type_id,
                       fnd_global.user_id,
                       sysdate,
                       fnd_global.user_id,
                       sysdate);
                  --null;
           end loop;
        end loop;
      end loop;

        UPDATE JAI_AR_SUP_HDRS_ALL
        SET    SUPPLEMENTARY_NUM = V_SEQ,
               SUPP_INV_DATE = SYSDATE,
               SUPP_INV_RAISED_IND = 'Y',
               LAST_UPDATE_DATE = SYSDATE,
               LAST_UPDATED_BY = fnd_global.user_id
         WHERE SET_OF_BOOKS_ID = cnsldt_header.set_of_books_id
          AND  CUSTOMER_ID = cnsldt_header.customer_id
          AND  CUSTOMER_SITE =  cnsldt_header.customer_site
          AND  supp_inv_type = cnsldt_header.supp_inv_type
          AND  CHOSEN_FOR_PROCESS = 'Y'
          AND  SUPPLEMENTARY_NUM IS NULL
          AND  SUPP_INV_DATE IS NULL
          AND  SUPP_INV_RAISED_IND = 'N';
   end loop;
        COMMIT;
  end if;


   /* Added by Ramananda for bug#4407165 */
    EXCEPTION
     WHEN OTHERS THEN
      FND_MESSAGE.SET_NAME('JA','JAI_EXCEPTION_OCCURED');
      FND_MESSAGE.SET_TOKEN('JAI_PROCESS_MSG', lv_object_name ||'. Err:'||sqlerrm );
      app_exception.raise_exception;

  END create_invoices;
PROCEDURE calculate_tax(  transaction_name                VARCHAR2            ,
              P_tax_category_id               NUMBER              ,
              p_line_id                       NUMBER              ,
              p_assessable_value              NUMBER default 0    ,
              p_tax_amount   IN OUT  NOCOPY   NUMBER              ,
              p_currency_conv_factor          NUMBER              ,
              p_inventory_item_id             NUMBER              ,
              p_line_quantity                 NUMBER              ,
              p_uom_code                      VARCHAR2            ,
              p_currency                      VARCHAR2            ,
              p_creation_date                 DATE                ,
              p_created_by                    NUMBER              ,
              p_last_update_date              DATE                ,
              p_last_updated_by               NUMBER              ,
              p_last_update_login             NUMBER
            )
IS
 TYPE num_tab         IS TABLE OF NUMBER INDEX BY BINARY_INTEGER             ;
  TYPE tax_amt_num_tab IS TABLE OF NUMBER INDEX BY BINARY_INTEGER             ;
  p1                              NUM_TAB                                     ;
  p2                              NUM_TAB                                     ;
  p3                              NUM_TAB                                     ;
  p4                              NUM_TAB                                     ;
  p5                              NUM_TAB                                     ;

-- Date 01-NOV-2006 Bug 5228046 added by SACSETHI  ( added column from Precedence 6 to 10 )
-- START BUG 5228046

  p6                              NUM_TAB                                     ;
  p7                              NUM_TAB                                     ;
  p8                              NUM_TAB                                     ;
  p9                              NUM_TAB                                     ;
  p10                             NUM_TAB                                     ;

-- END BUG 5228046


  tax_rate_tab                    NUM_TAB                                     ;
  tax_type_tab                    NUM_TAB                                     ;
  tax_amt_tab                     TAX_AMT_NUM_TAB                             ;
  base_tax_amt_tab                TAX_AMT_NUM_TAB                             ;
  end_date_tab                    NUM_TAB                                     ;
  bsln_amt                        NUMBER ; --         := p_tax_amount         ;  --Ramananda for File.Sql.35
  v_conversion_rate               NUMBER          := 0                        ;
  v_currency_conv_factor          NUMBER ; --         := p_currency_conv_factor   ; --Ramananda for File.Sql.35
  v_tax_amt                       NUMBER(10,2)    := 0                        ;
  vamt                            NUMBER(10,2)    := 0                        ;
  v_amt                           NUMBER                                      ;
  row_count                       NUMBER          := 0                        ;
  counter                         NUMBER                                      ;
  max_iter                        NUMBER          := 10                       ;

 /* Added by Ramananda for bug#4407165 */
  lv_object_name CONSTANT VARCHAR2(61) := 'jai_ar_sup_trx_pkg.calculate_tax';


  /* Added by LGOPALSA. Bug 4210102.
   * Added Excise and CVD Education Cess
   * */
  CURSOR tax_cur( p_line_id NUMBER)
  IS
  SELECT
          c.tax_line_no lno,
          c.tax_id,
          c.tax_rate,
          c.qty_rate,
          c.uom uom_code,
          c.func_tax_amount,
          c.base_tax_amount,
          c.precedence_1 p_1,
          c.precedence_2 p_2,
          c.precedence_3 p_3,
          c.precedence_4 p_4,
          c.precedence_5 p_5,
          c.precedence_6 p_6,
          c.precedence_7 p_7,
          c.precedence_8 p_8,
          c.precedence_9 p_9,
          c.precedence_10 p_10,
	  c.tax_amount,
          d.tax_type,
          d.end_date valid_date,
          decode( upper(d.tax_type),
                  'EXCISE', 1,
                  'ADDL. EXCISE', 1,
                  'OTHER EXCISE', 1,
          -- Delete by Jia Li for Tax Inclusive Computations on 2007/12/07, Begin
          -----------------------------------------------------------------------
          --jai_constants.tax_type_exc_edu_cess,1,
          --jai_constants.tax_type_sh_exc_edu_cess,1,--Added higher education cess by kundan kumar for bug#5907436        'TDS', 2,
          -----------------------------------------------------------------------
          -- Delete by Jia Li for Tax Inclusive Computations on 2007/12/07, End

                  -- Added by Jia Li for Tax Inclusive Computations on 2007/12/07, Begin
                  -----------------------------------------------------------------------
                  'TDS'                  , 2,
                  'EXCISE_EDUCATION_CESS', 6,
                  'CVD_EDUCATION_CESS'   , 6,
                  'EXCISE_SH_EDU_CESS'   , 6,
                  -----------------------------------------------------------------------
                  -- Added by Jia Li for Tax Inclusive Computations on 2007/12/07, End
                  0
                 ) tax_type_val,
          d.inclusive_tax_flag     -- Added by Jia Li for Tax Inclusive Computations on 2007/12/07
  FROM
          JAI_AR_TRX_TAX_CALC_T c,
          JAI_CMN_TAXES_ALL     d
  WHERE
          c.link_to_cust_trx_line_id  = p_line_id     AND
          c.tax_id                    = d.tax_id
  ORDER BY
          c.tax_line_no;


  CURSOR uom_class_cur( p_line_uom_code       IN VARCHAR2,
                        p_tax_line_uom_code   IN VARCHAR2
                       )
  IS
  SELECT
          A.uom_class
  FROM
          mtl_units_of_measure A,
          mtl_units_of_measure B
  WHERE
          A.uom_code  = p_line_uom_code       AND
          B.uom_code  = p_tax_line_uom_code   AND
          A.uom_class = B.uom_class;

  -- Added by Jia Li for Tax Inclusive Computations on 2007/12/07, Begin
  -----------------------------------------------------------------------
  TYPE char_tab IS TABLE OF VARCHAR2(10) INDEX BY BINARY_INTEGER;
  tax_amt_rate_tax_tab   TAX_AMT_NUM_TAB;
  tax_amt_non_rate_tab   TAX_AMT_NUM_TAB;
  func_tax_amt_tab       TAX_AMT_NUM_TAB;
  tax_rate_zero_tab      NUM_TAB;
  tax_rate_per_rupee     NUM_TAB;
  tax_target_tab         NUM_TAB;
  inclu_tax_tab          CHAR_TAB;
  ln_assessable_value    NUMBER;
  ln_vamt_nr                NUMBER(38,10);
  ln_bsln_amt_nr            NUMBER(38,10);
  ln_v_tax_amt_nr           NUMBER(38,10);
  ln_v_func_tax_amt         NUMBER(38,10);
  ln_exclusive_price     NUMBER(38,10);
  ln_total_non_rate_tax     NUMBER(38,10);
  ln_total_tax_per_rupee    NUMBER(38,10);
  -----------------------------------------------------------------------
  -- Added by Jia Li for Tax Inclusive Computations on 2007/12/07, End

BEGIN



/*------------------------------------------------------------------------------------------
 FILENAME: jai_ar_sup_trx_pkg.calculate_tax.sql

 CHANGE HISTORY:
S.No Date       Author and Details
1  2001/04/04  Anuradha Parthasarathy
                  Comments added to avoid unneccessary rounding of taxes.

2. 2004/06/14  Aiyer for bug#3659008. Version#115.1
                Issue:-
                 New taxes are not getting calculated properly.

                Reason:-
                The variable for the plsql tables tax_amt_num_tab and num_tab was number (10,2) and Number(2)
                respectively.This was causing rounding of tax amounts hence the reported issue.

                Fix:-
                This datatype widths have been modified to Number to take care of all this issues.

                Dependency Due to this Bug:-
                 None
3. 2005/03/12  Bug 4210102. Adde by LGOPALSA
               Added CVD and Excise education cess
           Search for bug number for complete fix details

4. 03-Dec-2009   Jia for the Bug#8880147
                 Issues:
                    SUPPLEMENTARY TRANS CAN NOT GENERATED BY CHANGE AV LIST.
                    It's with the variable 'ln_exclusive_price' whose value is null, rather than a zero.
                 Fix:
			              The below Statement is causing the issue:
			                 ln_exclusive_price := (NVL(p_tax_amount,0) - ln_total_non_rate_tax ) / ln_total_tax_per_rupee;
			              Modified the code as following:
			                  ln_exclusive_price := (NVL(p_tax_amount,0)-NVL(ln_total_non_rate_tax,0) ) / ln_total_tax_per_rupee;


Future Dependencies For the release Of this Object:-
(Please add a row in the section below only if your bug introduces a dependency due to spec change/ A new call to a object/
A datamodel change )

----------------------------------------------------------------------------------------------------------------------------------------------------
Current Version       Current Bug    Dependent           Files          Version   Author   Date         Remarks
Of File                              On Bug/Patchset    Dependent On
jai_ar_sup_trx_pkg.calculate_tax
----------------------------------------------------------------------------------------------------------------------------------------------------
115.1                  3659008      IN60105D2             None           --       Aiyer   14/06/2004   Row introduces to start dependency tracking

115.2                  4210102      IN60106 + 4146708                           LGOPALSA  12/03/2005   Introduction of Cess dependency
----------------------------------------------------------------------------------------------------------------------------------------------------*/

--------------------------------------------------------------------------------------------*/
  bsln_amt                        := p_tax_amount         ;  --Ramananda for File.Sql.35
  v_currency_conv_factor          := p_currency_conv_factor   ; --Ramananda for File.Sql.35

/**************  Part  - 1 ******************************/
  FOR rec in tax_cur( p_line_id) LOOP
    p1(rec.lno)               := nvl(rec.p_1,-1)          ;
    p2(rec.lno)               := nvl(rec.p_2,-1)          ;
    p3(rec.lno)               := nvl(rec.p_3,-1)          ;
    p4(rec.lno)               := nvl(rec.p_4,-1)          ;
    p5(rec.lno)               := nvl(rec.p_5,-1)          ;

-- Date 01-NOV-2006 Bug 5228046 added by SACSETHI  ( added column from Precedence 6 to 10 )
-- START BUG 5228046

    p6(rec.lno)               := nvl(rec.p_6,-1)          ;
    p7(rec.lno)               := nvl(rec.p_7,-1)          ;
    p8(rec.lno)               := nvl(rec.p_8,-1)          ;
    p9(rec.lno)               := nvl(rec.p_9,-1)          ;
    p10(rec.lno)               := nvl(rec.p_10,-1)          ;

-- END BUG 5228046


    tax_rate_tab(rec.lno)     := nvl(rec.tax_rate,0)      ;

    -- Added by Jia Li for Tax Inclusive Computations on 2007/12/07, Begin
    -----------------------------------------------------------------------
    tax_rate_per_rupee(rec.lno) := NVL(rec.tax_rate, 0)/100;
    ln_total_tax_per_rupee         := 0;
    inclu_tax_tab(rec.lno)      := NVL(rec.inclusive_tax_flag, 'N');

    IF rec.tax_rate IS NULL
    THEN
      tax_rate_zero_tab(rec.lno) := 0;
    ELSIF rec.tax_rate = 0
    THEN
      tax_rate_zero_tab(rec.lno) := -9999;
    ELSE
      tax_rate_zero_tab(rec.lno) := rec.tax_rate;
    END IF; -- rec.tax_rate is null

    tax_amt_rate_tax_tab(rec.lno) := 0;
    tax_amt_non_rate_tab(rec.lno) := 0;   -- for tax inclusive
    -----------------------------------------------------------------------
    -- Added by Jia Li for Tax Inclusive Computations on 2007/12/07, End

    tax_type_tab(rec.lno)     := rec.tax_type_val         ;
    tax_amt_tab(rec.lno)      := 0                        ;
    base_tax_amt_tab(rec.lno) := 0                        ;

    IF tax_rate_tab(rec.lno) = 0 THEN
      FOR uom_cls IN uom_class_cur(p_uom_code, rec.uom_code) LOOP
        INV_CONVERT.inv_um_conversion( p_uom_code, rec.uom_code, p_inventory_item_id, v_conversion_rate);
        IF nvl(v_conversion_rate, 0) <= 0 THEN
          INV_CONVERT.inv_um_conversion( p_uom_code, rec.uom_code, 0, v_conversion_rate);
          IF nvl(v_conversion_rate, 0) <= 0 THEN
            v_conversion_rate := 0;
          END IF;
        END IF;
        tax_amt_tab(rec.lno) := nvl(rec.qty_rate * v_conversion_rate, 0) * p_line_quantity;

        -- Added by Jia Li for Tax Inclusive Computations on 2007/12/07, Begin
        -----------------------------------------------------------------------
        tax_amt_non_rate_tab(rec.lno) := NVL(rec.tax_amount * v_conversion_rate, 0)
                                          * p_line_quantity;
        base_tax_amt_tab(rec.lno) := tax_amt_non_rate_tab(rec.lno);
        -----------------------------------------------------------------------
        -- Added by Jia Li for Tax Inclusive Computations on 2007/12/07, End

      END LOOP;
    END IF;

    IF rec.valid_date is NULL OR rec.valid_date >= sysdate  THEN
      end_date_tab(rec.lno) := 1;
    ELSE
      tax_amt_tab(rec.lno)  := 0;
      end_date_tab(rec.lno) := 0;
    END IF;
    row_count := row_count + 1;
  END LOOP;

/**************  Part  - 2 ******************************/
  -- Added by Jia Li for Tax Inclusive Computations on 2007/12/07, Begin
  -----------------------------------------------------------------------
  IF p_assessable_value <> p_tax_amount
  THEN
    ln_assessable_value := p_assessable_value;
  ELSE
    ln_assessable_value := 1;
  END IF;
  -----------------------------------------------------------------------
  -- Added by Jia Li for Tax Inclusive Computations on 2007/12/07, End

  FOR I in 1..row_count LOOP
   -- Delete by Jia Li for Tax Inclusive Computations on 2007/12/07, Begin
   -----------------------------------------------------------------------
   /*
    IF tax_type_tab(I) = 1 THEN
      bsln_amt := p_assessable_value;
    ELSE
      bsln_amt := p_tax_amount;
    END IF;
    */
   -----------------------------------------------------------------------
   -- Delete by Jia Li for Tax Inclusive Computations on 2007/12/07, End

    -- Added by Jia Li for Tax Inclusive Computations on 2007/12/07, Begin
    -----------------------------------------------------------------------
    IF end_date_tab(I) <> 0
    THEN
      IF tax_type_tab(I) = 1
      THEN
        IF ln_assessable_value = 1
        THEN
          bsln_amt := 1;
          ln_bsln_amt_nr := 0;
        ELSE
          bsln_amt := 0;
          ln_bsln_amt_nr := ln_assessable_value;
        END IF;
      ELSIF tax_type_tab(I) = 4
      THEN
        IF ln_assessable_value = 1
        THEN
          bsln_amt := 1;
          ln_bsln_amt_nr := 0;
        ELSE
          bsln_amt := 0;
          ln_bsln_amt_nr := ln_assessable_value;
        END IF;
      ELSIF tax_type_tab(I) = 6
      THEN
        bsln_amt := 0;
        ln_bsln_amt_nr := 0;
      ELSE
        bsln_amt := 1;
        ln_bsln_amt_nr := 0;
     END IF; -- tax_type_tab(I) = 1
    -----------------------------------------------------------------------
    -- Added by Jia Li for Tax Inclusive Computations on 2007/12/07, End

    IF tax_rate_tab(I) <> 0 THEN
      IF p1(I) < I and p1(I) not in (-1,0) THEN
        vamt := vamt + nvl(tax_amt_tab(p1(I)),0);
        ln_vamt_nr := ln_vamt_nr + NVL(tax_amt_non_rate_tab(p1(I)), 0); -- Added by Jia Li for Tax Inclusive Computations on 2007/12/07
      ELSIF p1(I) = 0 THEN
        vamt := vamt + bsln_amt;
        ln_vamt_nr := ln_vamt_nr + ln_bsln_amt_nr; -- Added by Jia Li for Tax Inclusive Computations on 2007/12/07
      END IF;

      IF p2(I) < I and p2(I) not in (-1,0) THEN
        vamt := vamt + nvl(tax_amt_tab(p2(I)),0);
        ln_vamt_nr := ln_vamt_nr + NVL(tax_amt_non_rate_tab(p2(I)), 0); -- Added by Jia Li for Tax Inclusive Computations on 2007/12/07
      ELSIF p2(I) = 0 THEN
        vamt := vamt + bsln_amt;
        ln_vamt_nr := ln_vamt_nr + ln_bsln_amt_nr; -- Added by Jia Li for Tax Inclusive Computations on 2007/12/07
      END IF;

      IF p3(I) < I and p3(I) not in (-1,0) THEN
        vamt := vamt + nvl(tax_amt_tab(p3(I)),0);
        ln_vamt_nr := ln_vamt_nr + NVL(tax_amt_non_rate_tab(p3(I)), 0); -- Added by Jia Li for Tax Inclusive Computations on 2007/12/07
      ELSIF p3(I) = 0 THEN
        vamt := vamt + bsln_amt;
        ln_vamt_nr := ln_vamt_nr + ln_bsln_amt_nr; -- Added by Jia Li for Tax Inclusive Computations on 2007/12/07
      END IF;

      IF p4(I) < I and p4(I) not in (-1,0) THEN
        vamt := vamt + nvl(tax_amt_tab(p4(I)),0);
        ln_vamt_nr := ln_vamt_nr + NVL(tax_amt_non_rate_tab(p4(I)), 0); -- Added by Jia Li for Tax Inclusive Computations on 2007/12/07
      ELSIF p4(I) = 0 THEN
        vamt := vamt + bsln_amt;
        ln_vamt_nr := ln_vamt_nr + ln_bsln_amt_nr; -- Added by Jia Li for Tax Inclusive Computations on 2007/12/07
      END IF;

      IF p5(I) < I and p5(I) not in (-1,0) THEN
        vamt := vamt + nvl(tax_amt_tab(p5(I)),0);
        ln_vamt_nr := ln_vamt_nr + NVL(tax_amt_non_rate_tab(p5(I)), 0); -- Added by Jia Li for Tax Inclusive Computations on 2007/12/07
      ELSIF p5(I) = 0 THEN
        vamt := vamt + bsln_amt;
        ln_vamt_nr := ln_vamt_nr + ln_bsln_amt_nr; -- Added by Jia Li for Tax Inclusive Computations on 2007/12/07
      END IF;


-- Date 01-NOV-2006 Bug 5228046 added by SACSETHI  ( added column from Precedence 6 to 10 )
-- START BUG 5228046

      IF p6(I) < I and p6(I) not in (-1,0) THEN
        vamt := vamt + nvl(tax_amt_tab(p6(I)),0);
        ln_vamt_nr := ln_vamt_nr + NVL(tax_amt_non_rate_tab(p6(I)), 0); -- Added by Jia Li for Tax Inclusive Computations on 2007/12/07
      ELSIF p6(I) = 0 THEN
        vamt := vamt + bsln_amt;
        ln_vamt_nr := ln_vamt_nr + ln_bsln_amt_nr; -- Added by Jia Li for Tax Inclusive Computations on 2007/12/07
      END IF;

      IF p7(I) < I and p7(I) not in (-1,0) THEN
        vamt := vamt + nvl(tax_amt_tab(p7(I)),0);
        ln_vamt_nr := ln_vamt_nr + NVL(tax_amt_non_rate_tab(p7(I)), 0); -- Added by Jia Li for Tax Inclusive Computations on 2007/12/07
      ELSIF p7(I) = 0 THEN
        vamt := vamt + bsln_amt;
        ln_vamt_nr := ln_vamt_nr + ln_bsln_amt_nr; -- Added by Jia Li for Tax Inclusive Computations on 2007/12/07
      END IF;

      IF p8(I) < I and p8(I) not in (-1,0) THEN
        vamt := vamt + nvl(tax_amt_tab(p8(I)),0);
        ln_vamt_nr := ln_vamt_nr + NVL(tax_amt_non_rate_tab(p8(I)), 0); -- Added by Jia Li for Tax Inclusive Computations on 2007/12/07
      ELSIF p8(I) = 0 THEN
        vamt := vamt + bsln_amt;
        ln_vamt_nr := ln_vamt_nr + ln_bsln_amt_nr; -- Added by Jia Li for Tax Inclusive Computations on 2007/12/07
      END IF;

      IF p9(I) < I and p9(I) not in (-1,0) THEN
        vamt := vamt + nvl(tax_amt_tab(p9(I)),0);
        ln_vamt_nr := ln_vamt_nr + NVL(tax_amt_non_rate_tab(p9(I)), 0); -- Added by Jia Li for Tax Inclusive Computations on 2007/12/07
      ELSIF p9(I) = 0 THEN
        vamt := vamt + bsln_amt;
        ln_vamt_nr := ln_vamt_nr + ln_bsln_amt_nr; -- Added by Jia Li for Tax Inclusive Computations on 2007/12/07
      END IF;

      IF p10(I) < I and p10(I) not in (-1,0) THEN
        vamt := vamt + nvl(tax_amt_tab(p10(I)),0);
        ln_vamt_nr := ln_vamt_nr + NVL(tax_amt_non_rate_tab(p10(I)), 0); -- Added by Jia Li for Tax Inclusive Computations on 2007/12/07
      ELSIF p10(I) = 0 THEN
        vamt := vamt + bsln_amt;
        ln_vamt_nr := ln_vamt_nr + ln_bsln_amt_nr; -- Added by Jia Li for Tax Inclusive Computations on 2007/12/07
      END IF;

-- END BUG 5228046

      v_tax_amt := v_tax_amt + (vamt * (tax_rate_tab(I)/100));
      base_tax_amt_tab(I) := vamt;
      tax_amt_tab(I) := nvl(tax_amt_tab(I),0) + v_tax_amt;

      -- Added by Jia Li for Tax Inclusive Computations on 2007/12/07, Begin
      -----------------------------------------------------------------------
      ln_v_tax_amt_nr := ln_v_tax_amt_nr + (ln_vamt_nr * (tax_rate_tab(I)/100));
      tax_amt_non_rate_tab(I) := NVL(tax_amt_non_rate_tab(I), 0) + ln_v_tax_amt_nr;
      tax_amt_rate_tax_tab(I) := tax_amt_tab(I);
      -----------------------------------------------------------------------
      -- Added by Jia Li for Tax Inclusive Computations on 2007/12/07, End

      vamt := 0;
      v_tax_amt := 0;
      ln_vamt_nr      := 0;  -- Added by Jia Li for Tax Inclusive Computations on 2007/12/07
      ln_v_tax_amt_nr := 0;  -- Added by Jia Li for Tax Inclusive Computations on 2007/12/07

    END IF;

  -- Added by Jia Li for Tax Inclusive Computations on 2007/12/07, Begin
  -----------------------------------------------------------------------
  ELSE
    tax_amt_tab(I) := 0;
    base_tax_amt_tab(I) := 0;
  END IF; -- end_date_tab(I) <> 0
  -----------------------------------------------------------------------
  -- Added by Jia Li for Tax Inclusive Computations on 2007/12/07, End

  END LOOP;

/**************  Part  - 3 ******************************/
  FOR I in 1..row_count LOOP
    -- Added by Jia Li for Tax Inclusive Computations on 2007/12/07, Begin
    -----------------------------------------------------------------------
    IF end_date_tab(I) <> 0
    THEN
    -----------------------------------------------------------------------
    -- Added by Jia Li for Tax Inclusive Computations on 2007/12/07, End

      IF tax_rate_tab(I) <> 0 THEN
        IF p1(I) > I THEN
          vamt := vamt + nvl(tax_amt_tab(p1(I)),0);
          ln_vamt_nr := ln_vamt_nr + NVL(tax_amt_non_rate_tab(p1(I)), 0); -- Added by Jia Li for Tax Inclusive Computations on 2007/12/07
        END IF;

        IF p2(I) > I  THEN
          vamt := vamt + nvl(tax_amt_tab(p2(I)),0);
          ln_vamt_nr := ln_vamt_nr + NVL(tax_amt_non_rate_tab(p2(I)), 0); -- Added by Jia Li for Tax Inclusive Computations on 2007/12/07
        END IF;

        IF p3(I) > I  THEN
          vamt := vamt + nvl(tax_amt_tab(p3(I)),0);
          ln_vamt_nr := ln_vamt_nr + NVL(tax_amt_non_rate_tab(p3(I)), 0); -- Added by Jia Li for Tax Inclusive Computations on 2007/12/07
        END IF;

        IF p4(I) > I THEN
          vamt := vamt + nvl(tax_amt_tab(p4(I)),0);
          ln_vamt_nr := ln_vamt_nr + NVL(tax_amt_non_rate_tab(p4(I)), 0); -- Added by Jia Li for Tax Inclusive Computations on 2007/12/07
        END IF;

        IF p5(I) > I THEN
          vamt := vamt + nvl(tax_amt_tab(p5(I)),0);
          ln_vamt_nr := ln_vamt_nr + NVL(tax_amt_non_rate_tab(p5(I)), 0); -- Added by Jia Li for Tax Inclusive Computations on 2007/12/07
        END IF;

  -- Date 01-NOV-2006 Bug 5228046 added by SACSETHI  ( added column from Precedence 6 to 10 )
  -- START BUG 5228046

        IF p6(I) > I THEN
          vamt := vamt + nvl(tax_amt_tab(p6(I)),0);
          ln_vamt_nr := ln_vamt_nr + NVL(tax_amt_non_rate_tab(p6(I)), 0); -- Added by Jia Li for Tax Inclusive Computations on 2007/12/07
        END IF;

        IF p7(I) > I  THEN
          vamt := vamt + nvl(tax_amt_tab(p7(I)),0);
          ln_vamt_nr := ln_vamt_nr + NVL(tax_amt_non_rate_tab(p7(I)), 0); -- Added by Jia Li for Tax Inclusive Computations on 2007/12/07
        END IF;

        IF p8(I) > I  THEN
          vamt := vamt + nvl(tax_amt_tab(p8(I)),0);
          ln_vamt_nr := ln_vamt_nr + NVL(tax_amt_non_rate_tab(p8(I)), 0); -- Added by Jia Li for Tax Inclusive Computations on 2007/12/07
        END IF;

        IF p9(I) > I THEN
          vamt := vamt + nvl(tax_amt_tab(p9(I)),0);
          ln_vamt_nr := ln_vamt_nr + NVL(tax_amt_non_rate_tab(p9(I)), 0); -- Added by Jia Li for Tax Inclusive Computations on 2007/12/07
        END IF;

        IF p10(I) > I THEN
          vamt := vamt + nvl(tax_amt_tab(p10(I)),0);
          ln_vamt_nr := ln_vamt_nr + NVL(tax_amt_non_rate_tab(p10(I)), 0); -- Added by Jia Li for Tax Inclusive Computations on 2007/12/07
        END IF;

  -- END BUG 5228046

        v_tax_amt := v_tax_amt + (vamt * (tax_rate_tab(I)/100));

        base_tax_amt_tab(I) := vamt;  -- Added by Jia Li for Tax Inclusive Computations on 2007/12/07
        ln_v_tax_amt_nr := ln_v_tax_amt_nr + (ln_vamt_nr * (tax_rate_tab(I)/100));  -- Added by Jia Li for Tax Inclusive Computations on 2007/12/07

        IF vamt <> 0 THEN
          base_tax_amt_tab(I) := base_tax_amt_tab(I) + vamt;
        END IF;

        tax_amt_tab(I) := nvl(tax_amt_tab(I),0) + v_tax_amt;

        -- Added by Jia Li for Tax Inclusive Computations on 2007/12/07, Begin
        -----------------------------------------------------------------------
        tax_amt_non_rate_tab(I) := NVL(tax_amt_non_rate_tab(I), 0) * ln_v_tax_amt_nr;
        tax_amt_rate_tax_tab(I) := tax_amt_tab(I);
        ln_vamt_nr := 0;
        ln_v_tax_amt_nr := 0;
        -----------------------------------------------------------------------
        -- Added by Jia Li for Tax Inclusive Computations on 2007/12/07, End

        vamt := 0;
        v_tax_amt := 0;
      END IF;

    -- Added by Jia Li for Tax Inclusive Computations on 2007/12/07, Begin
    -----------------------------------------------------------------------
    ELSE
      base_tax_amt_tab(I) := vamt;
      tax_amt_tab(I) := 0;
    END IF; -- end_date_tab(I) <> 0
    -----------------------------------------------------------------------
    -- Added by Jia Li for Tax Inclusive Computations on 2007/12/07, End

  END LOOP;


/**************  Part  - 4 ******************************/
  FOR counter IN 1 .. max_iter LOOP
    vamt := 0;
    ln_vamt_nr := 0; -- Added by Jia Li for Tax Inclusive Computations on 2007/12/07
    v_tax_amt := 0;
    FOR i IN 1 .. row_count LOOP
      -- Deleted by Jia Li for Tax Inclusive Computations on 2007/12/07, Begin
      ------------------------------------------------------------------------
      /*
      IF tax_rate_tab( i ) > 0 THEN
        IF tax_type_tab( I ) = 1 THEN
          v_amt := p_assessable_value;
        ELSE
          IF p_assessable_value IN ( 0, -1 ) OR tax_type_tab( I ) <> 1 THEN
            v_amt := p_tax_amount;
          END IF;
        END IF;
      */
      ------------------------------------------------------------------------
      -- Deleted by Jia Li for Tax Inclusive Computations on 2007/12/07, End

      -- Added by Jia Li for Tax Inclusive Computations on 2007/12/07, Begin
      -----------------------------------------------------------------------
      IF ( tax_rate_tab(I) <> 0 OR tax_rate_zero_tab(I) = -9999 )
         AND
         ( end_date_tab(I) <> 0 )
      THEN
        IF tax_type_tab(I) = 1
        THEN
          IF ln_assessable_value = 1
          THEN
            v_amt := 1;
            ln_bsln_amt_nr := 0;
          ELSE
            v_amt := 0;
            ln_bsln_amt_nr := ln_assessable_value;
          END IF;
        ELSIF tax_type_tab(I) = 4
        THEN
          IF ln_assessable_value = 1
          THEN
            v_amt := 1;
            ln_bsln_amt_nr := 0;
          ELSE
            v_amt := 0;
            ln_bsln_amt_nr := ln_assessable_value;
          END IF;
        ELSIF tax_type_tab(I) = 6
        THEN
          v_amt := 0;
          ln_bsln_amt_nr := 0;
        ELSE
          v_amt := 1;
          ln_bsln_amt_nr := 0;
        END IF; -- tax_type_tab(I) = 1
      -----------------------------------------------------------------------
      -- Added by Jia Li for Tax Inclusive Computations on 2007/12/07, End

        IF p1( i ) <> -1 THEN
          IF p1( i ) <> 0 THEN
            vamt := vamt + tax_amt_tab( p1( I ) );
            ln_vamt_nr := ln_vamt_nr + tax_amt_non_rate_tab(p1(I));  -- Added by Jia Li for Tax Inclusive Computations on 2007/12/07
          ELSIF p1(i) = 0 THEN
            vamt := vamt + v_amt;
            ln_vamt_nr := ln_vamt_nr + ln_bsln_amt_nr; -- Added by Jia Li for Tax Inclusive Computations on 2007/12/07
          END IF;
        END IF;

        IF p2( i ) <> -1 THEN
          IF p2( i ) <> 0 THEN
            vamt := vamt + tax_amt_tab( p2( I ) );
            ln_vamt_nr := ln_vamt_nr + tax_amt_non_rate_tab(p2(I));  -- Added by Jia Li for Tax Inclusive Computations on 2007/12/07
          ELSIF p2(i) = 0 THEN
            vamt := vamt + v_amt;
            ln_vamt_nr := ln_vamt_nr + ln_bsln_amt_nr; -- Added by Jia Li for Tax Inclusive Computations on 2007/12/07
          END IF;
        END IF;

        IF p3( i ) <> -1 THEN
          IF p3( i ) <> 0 THEN
            vamt := vamt + tax_amt_tab( p3( I ) );
            ln_vamt_nr := ln_vamt_nr + tax_amt_non_rate_tab(p3(I));  -- Added by Jia Li for Tax Inclusive Computations on 2007/12/07
          ELSIF p3(i) = 0 THEN
            vamt := vamt + v_amt;
            ln_vamt_nr := ln_vamt_nr + ln_bsln_amt_nr; -- Added by Jia Li for Tax Inclusive Computations on 2007/12/07
          END IF;
        END IF;

        IF p4( i ) <> -1 THEN
          IF p4( i ) <> 0 THEN
            vamt := vamt + tax_amt_tab( p4( i ) );
            ln_vamt_nr := ln_vamt_nr + tax_amt_non_rate_tab(p4(I));  -- Added by Jia Li for Tax Inclusive Computations on 2007/12/07
          ELSIF p4(i) = 0 THEN
            vamt := vamt + v_amt;
            ln_vamt_nr := ln_vamt_nr + ln_bsln_amt_nr; -- Added by Jia Li for Tax Inclusive Computations on 2007/12/07
          END IF;
        END IF;

        IF p5( i ) <> -1 THEN
          IF p5( i ) <> 0 THEN
            vamt := vamt + tax_amt_tab( p5( i ) );
            ln_vamt_nr := ln_vamt_nr + tax_amt_non_rate_tab(p5(I));  -- Added by Jia Li for Tax Inclusive Computations on 2007/12/07
          ELSIF p5(i) = 0 THEN
            vamt := vamt + v_amt;
            ln_vamt_nr := ln_vamt_nr + ln_bsln_amt_nr; -- Added by Jia Li for Tax Inclusive Computations on 2007/12/07
          END IF;
        END IF;

-- Date 01-NOV-2006 Bug 5228046 added by SACSETHI  ( added column from Precedence 6 to 10 )
-- START BUG 5228046

	IF p6( i ) <> -1 THEN
          IF p6( i ) <> 0 THEN
            vamt := vamt + tax_amt_tab( p6( I ) );
            ln_vamt_nr := ln_vamt_nr + tax_amt_non_rate_tab(p6(I));  -- Added by Jia Li for Tax Inclusive Computations on 2007/12/07
          ELSIF p6(i) = 0 THEN
            vamt := vamt + v_amt;
            ln_vamt_nr := ln_vamt_nr + ln_bsln_amt_nr; -- Added by Jia Li for Tax Inclusive Computations on 2007/12/07
          END IF;
        END IF;

        IF p7( i ) <> -1 THEN
          IF p7( i ) <> 0 THEN
            vamt := vamt + tax_amt_tab( p7( I ) );
            ln_vamt_nr := ln_vamt_nr + tax_amt_non_rate_tab(p7(I));  -- Added by Jia Li for Tax Inclusive Computations on 2007/12/07
          ELSIF p7(i) = 0 THEN
            vamt := vamt + v_amt;
            ln_vamt_nr := ln_vamt_nr + ln_bsln_amt_nr; -- Added by Jia Li for Tax Inclusive Computations on 2007/12/07
          END IF;
        END IF;

        IF p8( i ) <> -1 THEN
          IF p8( i ) <> 0 THEN
            vamt := vamt + tax_amt_tab( p8( I ) );
            ln_vamt_nr := ln_vamt_nr + tax_amt_non_rate_tab(p8(I));  -- Added by Jia Li for Tax Inclusive Computations on 2007/12/07
          ELSIF p8(i) = 0 THEN
            vamt := vamt + v_amt;
            ln_vamt_nr := ln_vamt_nr + ln_bsln_amt_nr; -- Added by Jia Li for Tax Inclusive Computations on 2007/12/07
          END IF;
        END IF;

        IF p9( i ) <> -1 THEN
          IF p9( i ) <> 0 THEN
            vamt := vamt + tax_amt_tab( p9( i ) );
            ln_vamt_nr := ln_vamt_nr + tax_amt_non_rate_tab(p9(I));  -- Added by Jia Li for Tax Inclusive Computations on 2007/12/07
          ELSIF p9(i) = 0 THEN
            vamt := vamt + v_amt;
            ln_vamt_nr := ln_vamt_nr + ln_bsln_amt_nr; -- Added by Jia Li for Tax Inclusive Computations on 2007/12/07
          END IF;
        END IF;

        IF p10( i ) <> -1 THEN
          IF p10( i ) <> 0 THEN
            vamt := vamt + tax_amt_tab( p10( i ) );
            ln_vamt_nr := ln_vamt_nr + tax_amt_non_rate_tab(p10(I));  -- Added by Jia Li for Tax Inclusive Computations on 2007/12/07
          ELSIF p10(i) = 0 THEN
            vamt := vamt + v_amt;
            ln_vamt_nr := ln_vamt_nr + ln_bsln_amt_nr; -- Added by Jia Li for Tax Inclusive Computations on 2007/12/07
          END IF;
        END IF;
-- END BUG 5228046


        v_tax_amt := v_tax_amt + ( vamt * ( tax_rate_tab( i )/100));
      -- Added by Jia Li for Tax Inclusive Computations on 2007/12/07, Begin
      -----------------------------------------------------------------------
        base_tax_amt_tab(I) := vamt;
        tax_target_tab(I) := vamt;
        ln_v_func_tax_amt := v_tax_amt + ( vamt * ( tax_rate_tab(I)/100 ));
	      ln_v_tax_amt_nr := ln_v_tax_amt_nr +( ln_vamt_nr*(tax_rate_tab(I)/100)); --Added by Jia for Bug#8880147
        v_tax_amt := v_tax_amt + ( vamt * ( tax_rate_tab(I)/100 ));
      ELSIF tax_rate_tab(I) = 0
      THEN
        base_tax_amt_tab(I) := tax_amt_tab(I);
        v_tax_amt := tax_amt_tab(I);
        tax_target_tab(I) := v_tax_amt;
	      ln_v_tax_amt_nr := tax_amt_non_rate_tab(I);  --Added by Jia for Bug#8880147
      ELSIF end_date_tab(I) = 0
      THEN
        tax_amt_tab(I) := 0;
        base_tax_amt_tab(I) := 0;
        tax_target_tab(I) := 0;
      END IF;  -- (tax_rate_tab(I) <> 0 OR tax_rate_zero_tab(I) = -9999) AND (end_date_tab(I) <> 0)
      -----------------------------------------------------------------------
      -- Added by Jia Li for Tax Inclusive Computations on 2007/12/07, End

      -- Deleted by Jia Li for Tax Inclusive Computations on 2007/12/07, Begin
      -----------------------------------------------------------------------
      /*
      ELSE
        v_tax_amt := tax_amt_tab( i );
      END IF;
      */
      -----------------------------------------------------------------------
      -- Deleted by Jia Li for Tax Inclusive Computations on 2007/12/07, End

      tax_amt_tab( I ) := NVL( v_tax_amt, 0 );

      -- Added by Jia Li for Tax Inclusive Computations on 2007/12/07, Begin
      -----------------------------------------------------------------------
      tax_amt_rate_tax_tab(I) := tax_amt_tab(I);
      func_tax_amt_tab(I) := NVL(ln_v_func_tax_amt, 0);
      tax_amt_non_rate_tab(I) := ln_v_tax_amt_nr; --Added by Jia for Bug#8880147

      IF counter = max_iter
      THEN
        IF end_date_tab(I) = 0
        THEN
          tax_amt_tab(I) := 0;
          func_tax_amt_tab(I) := 0;
        END IF;  -- end_date_tab(I) = 0
      END IF;  -- counter = max_iter
      -----------------------------------------------------------------------
      -- Added by Jia Li for Tax Inclusive Computations on 2007/12/07, End

      vamt := 0;
      v_amt := 0;
      v_tax_amt := 0;
      ln_v_func_tax_amt := 0;  -- Added by Jia Li for Tax Inclusive Computations on 2007/12/07
      ln_v_tax_amt_nr := 0; --Added by Jia for Bug#8880147
      ln_vamt_nr := 0;  ----Added by Jia for Bug#8880147
    END LOOP;
  END LOOP;


  -- Added by Jia Li for Tax Inclusive Computations on 2007/12/07, Begin
  -- the following loop calculates the total tax per rupee and total tax thats not dependent on selling price.
  -- and calculation final tax amount
  -----------------------------------------------------------------------
  FOR I IN 1 .. row_count
  LOOP
    IF inclu_tax_tab(I) = 'Y'
    THEN
      ln_total_tax_per_rupee := ln_total_tax_per_rupee + NVL(tax_amt_rate_tax_tab(I),0)  ;
      ln_total_non_rate_tax := ln_total_non_rate_tax + NVL(tax_amt_non_rate_tab(I),0);
    END IF;
  END LOOP;

  ln_total_tax_per_rupee := ln_total_tax_per_rupee + 1;

  IF ln_total_tax_per_rupee <> 0
  THEN
   --ln_exclusive_price := (NVL(p_tax_amount,0) - ln_total_non_rate_tax ) / ln_total_tax_per_rupee; -- comment by Jia for Bug#8880147
   ln_exclusive_price := (NVL(p_tax_amount,0) - NVL(ln_total_non_rate_tax,0) ) / ln_total_tax_per_rupee; -- Added by Jia for Bug#8880147
  END If;

  FOR I IN 1 .. row_count
  LOOP
     tax_amt_tab (I) := (tax_amt_rate_tax_tab(I) * ln_exclusive_price ) + tax_amt_non_rate_tab(I);
  END LOOP;
  -----------------------------------------------------------------------
  -- Added by Jia Li for Tax Inclusive Computations on 2007/12/07, End

  /**************  Part  - 5 ******************************/
  FOR rec in  tax_cur( p_line_id) LOOP
    IF tax_type_tab(rec.lno) <> 2 THEN
      v_tax_amt := v_tax_amt + nvl(tax_amt_tab(rec.lno),0);
    END IF;

    IF transaction_name = 'OE_LINES_UPDATE' THEN

      UPDATE  JAI_AR_TRX_TAX_CALC_T
      SET
              tax_amount        = nvl(tax_amt_tab(rec.lno),0)                           ,
              base_tax_amount   = decode(nvl(base_tax_amt_tab(rec.lno),0)               ,
                                         0                                              ,
                                         nvl(tax_amt_tab(rec.lno),0)                    ,
                                         nvl(base_tax_amt_tab(rec.lno),0)
                                        )                                               ,
              func_tax_amount   = nvl(tax_amt_tab(rec.lno),0) *  v_currency_conv_factor ,
              last_update_date  = p_last_update_date                                    ,
              last_updated_by   = p_last_updated_by                                     ,
              last_update_login = p_last_update_login
      WHERE
              link_to_cust_trx_line_id = p_line_id  AND
              tax_line_no              = rec.lno;
    END IF;
  END LOOP;

  p_tax_amount := nvl(v_tax_amt,0);


   /* Added by Ramananda for bug#4407165 */
    EXCEPTION
     WHEN OTHERS THEN
      FND_MESSAGE.SET_NAME('JA','JAI_EXCEPTION_OCCURED');
      FND_MESSAGE.SET_TOKEN('JAI_PROCESS_MSG', lv_object_name ||'. Err:'||sqlerrm );
      app_exception.raise_exception;

END calculate_tax;

END jai_ar_sup_trx_pkg;

/
