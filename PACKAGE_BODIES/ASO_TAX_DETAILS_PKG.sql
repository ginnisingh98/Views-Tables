--------------------------------------------------------
--  DDL for Package Body ASO_TAX_DETAILS_PKG
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE PACKAGE BODY "APPS"."ASO_TAX_DETAILS_PKG" as
/* $Header: asottaxb.pls 120.2 2005/08/30 04:58:06 anrajan ship $ */
-- Start of Comments
-- Package name     : ASO_TAX_DETAILS_PKG
-- Purpose          :
-- History          :
-- NOTE             :
-- End of Comments


G_PKG_NAME CONSTANT VARCHAR2(30):= 'ASO_TAX_DETAILS_PKG';
G_FILE_NAME CONSTANT VARCHAR2(12) := 'asottaxb.pls';

--Added the TAX_RATE_ID column in INSERT_ROW,UPDATE_ROW and LOCK_ROW procedures
--by Anoop Rajan on 30 August 2005.
PROCEDURE Insert_Row(
          px_TAX_DETAIL_ID   IN OUT NOCOPY /* file.sql.39 change */   NUMBER,
          p_CREATION_DATE    DATE,
          p_CREATED_BY    NUMBER,
          p_LAST_UPDATE_DATE    DATE,
          p_LAST_UPDATED_BY    NUMBER,
          p_LAST_UPDATE_LOGIN    NUMBER,
          p_REQUEST_ID    NUMBER,
          p_PROGRAM_APPLICATION_ID    NUMBER,
          p_PROGRAM_ID    NUMBER,
          p_PROGRAM_UPDATE_DATE    DATE,
          p_QUOTE_HEADER_ID    NUMBER,
          p_QUOTE_LINE_ID    NUMBER,
          p_QUOTE_SHIPMENT_ID    NUMBER,
          p_ORIG_TAX_CODE    VARCHAR2,
          p_TAX_CODE    VARCHAR2,
          p_TAX_RATE    NUMBER,
          p_TAX_DATE    DATE,
          p_TAX_AMOUNT    NUMBER,
          p_TAX_EXEMPT_FLAG    VARCHAR2,
          p_TAX_EXEMPT_NUMBER    VARCHAR2,
          p_TAX_EXEMPT_REASON_CODE    VARCHAR2,
          p_ATTRIBUTE_CATEGORY    VARCHAR2,
          p_ATTRIBUTE1    VARCHAR2,
          p_ATTRIBUTE2    VARCHAR2,
          p_ATTRIBUTE3    VARCHAR2,
          p_ATTRIBUTE4    VARCHAR2,
          p_ATTRIBUTE5    VARCHAR2,
          p_ATTRIBUTE6    VARCHAR2,
          p_ATTRIBUTE7    VARCHAR2,
          p_ATTRIBUTE8    VARCHAR2,
          p_ATTRIBUTE9    VARCHAR2,
          p_ATTRIBUTE10    VARCHAR2,
          p_ATTRIBUTE11    VARCHAR2,
          p_ATTRIBUTE12    VARCHAR2,
          p_ATTRIBUTE13    VARCHAR2,
          p_ATTRIBUTE14    VARCHAR2,
          p_ATTRIBUTE15    VARCHAR2,
           p_ATTRIBUTE16    VARCHAR2,
          p_ATTRIBUTE17    VARCHAR2,
          p_ATTRIBUTE18    VARCHAR2,
          p_ATTRIBUTE19    VARCHAR2,
          p_ATTRIBUTE20    VARCHAR2,
		p_TAX_INCLUSIVE_FLAG  VARCHAR2,
          p_OBJECT_VERSION_NUMBER  NUMBER,
	  p_TAX_RATE_ID		NUMBER
		)

 IS
   CURSOR C2 IS SELECT ASO_TAX_DETAILS_S.nextval FROM sys.dual;
BEGIN
   If (px_TAX_DETAIL_ID IS NULL) OR (px_TAX_DETAIL_ID = FND_API.G_MISS_NUM) then
       OPEN C2;
       FETCH C2 INTO px_TAX_DETAIL_ID;
       CLOSE C2;
   End If;
   INSERT INTO ASO_TAX_DETAILS(
           TAX_DETAIL_ID,
           CREATION_DATE,
           CREATED_BY,
           LAST_UPDATE_DATE,
           LAST_UPDATED_BY,
           LAST_UPDATE_LOGIN,
           REQUEST_ID,
           PROGRAM_APPLICATION_ID,
           PROGRAM_ID,
           PROGRAM_UPDATE_DATE,
           QUOTE_HEADER_ID,
           QUOTE_LINE_ID,
           QUOTE_SHIPMENT_ID,
           ORIG_TAX_CODE,
           TAX_CODE,
           TAX_RATE,
           TAX_DATE,
           TAX_AMOUNT,
           TAX_EXEMPT_FLAG,
           TAX_EXEMPT_NUMBER,
           TAX_EXEMPT_REASON_CODE,
           ATTRIBUTE_CATEGORY,
           ATTRIBUTE1,
           ATTRIBUTE2,
           ATTRIBUTE3,
           ATTRIBUTE4,
           ATTRIBUTE5,
           ATTRIBUTE6,
           ATTRIBUTE7,
           ATTRIBUTE8,
           ATTRIBUTE9,
           ATTRIBUTE10,
           ATTRIBUTE11,
           ATTRIBUTE12,
           ATTRIBUTE13,
           ATTRIBUTE14,
           ATTRIBUTE15,
            ATTRIBUTE16,
           ATTRIBUTE17,
           ATTRIBUTE18,
           ATTRIBUTE19,
           ATTRIBUTE20,
		 TAX_INCLUSIVE_FLAG,
           OBJECT_VERSION_NUMBER,
	   TAX_RATE_ID
          ) VALUES (
           px_TAX_DETAIL_ID,
           ASO_UTILITY_PVT.decode( p_CREATION_DATE, FND_API.G_MISS_DATE, NULL, p_CREATION_DATE),
           decode( p_CREATED_BY, FND_API.G_MISS_NUM, NULL, p_CREATED_BY),
           ASO_UTILITY_PVT.decode( p_LAST_UPDATE_DATE, FND_API.G_MISS_DATE, NULL, p_LAST_UPDATE_DATE),
           decode( p_LAST_UPDATED_BY, FND_API.G_MISS_NUM, NULL, p_LAST_UPDATED_BY),
           decode( p_LAST_UPDATE_LOGIN, FND_API.G_MISS_NUM, NULL, p_LAST_UPDATE_LOGIN),
           decode( p_REQUEST_ID, FND_API.G_MISS_NUM, NULL, p_REQUEST_ID),
           decode( p_PROGRAM_APPLICATION_ID, FND_API.G_MISS_NUM, NULL, p_PROGRAM_APPLICATION_ID),
           decode( p_PROGRAM_ID, FND_API.G_MISS_NUM, NULL, p_PROGRAM_ID),
           ASO_UTILITY_PVT.decode( p_PROGRAM_UPDATE_DATE, FND_API.G_MISS_DATE, NULL, p_PROGRAM_UPDATE_DATE),
           decode( p_QUOTE_HEADER_ID, FND_API.G_MISS_NUM, NULL, p_QUOTE_HEADER_ID),
           decode( p_QUOTE_LINE_ID, FND_API.G_MISS_NUM, NULL, p_QUOTE_LINE_ID),
           decode( p_QUOTE_SHIPMENT_ID, FND_API.G_MISS_NUM, NULL, p_QUOTE_SHIPMENT_ID),
           decode( p_ORIG_TAX_CODE, FND_API.G_MISS_CHAR, NULL, p_ORIG_TAX_CODE),
           decode( p_TAX_CODE, FND_API.G_MISS_CHAR, NULL, p_TAX_CODE),
           decode( p_TAX_RATE, FND_API.G_MISS_NUM, NULL, p_TAX_RATE),
           ASO_UTILITY_PVT.decode( p_TAX_DATE, FND_API.G_MISS_DATE, NULL, p_TAX_DATE),
           decode( p_TAX_AMOUNT, FND_API.G_MISS_NUM, NULL, p_TAX_AMOUNT),
           decode( p_TAX_EXEMPT_FLAG, FND_API.G_MISS_CHAR, NULL, p_TAX_EXEMPT_FLAG),
           decode( p_TAX_EXEMPT_NUMBER, FND_API.G_MISS_CHAR, NULL, p_TAX_EXEMPT_NUMBER),
           decode( p_TAX_EXEMPT_REASON_CODE, FND_API.G_MISS_CHAR, NULL, p_TAX_EXEMPT_REASON_CODE),
           decode( p_ATTRIBUTE_CATEGORY, FND_API.G_MISS_CHAR, NULL, p_ATTRIBUTE_CATEGORY),
           decode( p_ATTRIBUTE1, FND_API.G_MISS_CHAR, NULL, p_ATTRIBUTE1),
           decode( p_ATTRIBUTE2, FND_API.G_MISS_CHAR, NULL, p_ATTRIBUTE2),
           decode( p_ATTRIBUTE3, FND_API.G_MISS_CHAR, NULL, p_ATTRIBUTE3),
           decode( p_ATTRIBUTE4, FND_API.G_MISS_CHAR, NULL, p_ATTRIBUTE4),
           decode( p_ATTRIBUTE5, FND_API.G_MISS_CHAR, NULL, p_ATTRIBUTE5),
           decode( p_ATTRIBUTE6, FND_API.G_MISS_CHAR, NULL, p_ATTRIBUTE6),
           decode( p_ATTRIBUTE7, FND_API.G_MISS_CHAR, NULL, p_ATTRIBUTE7),
           decode( p_ATTRIBUTE8, FND_API.G_MISS_CHAR, NULL, p_ATTRIBUTE8),
           decode( p_ATTRIBUTE9, FND_API.G_MISS_CHAR, NULL, p_ATTRIBUTE9),
           decode( p_ATTRIBUTE10, FND_API.G_MISS_CHAR, NULL, p_ATTRIBUTE10),
           decode( p_ATTRIBUTE11, FND_API.G_MISS_CHAR, NULL, p_ATTRIBUTE11),
           decode( p_ATTRIBUTE12, FND_API.G_MISS_CHAR, NULL, p_ATTRIBUTE12),
           decode( p_ATTRIBUTE13, FND_API.G_MISS_CHAR, NULL, p_ATTRIBUTE13),
           decode( p_ATTRIBUTE14, FND_API.G_MISS_CHAR, NULL, p_ATTRIBUTE14),
           decode( p_ATTRIBUTE15, FND_API.G_MISS_CHAR, NULL, p_ATTRIBUTE15),
           decode( p_ATTRIBUTE16, FND_API.G_MISS_CHAR, NULL, p_ATTRIBUTE16),
           decode( p_ATTRIBUTE17, FND_API.G_MISS_CHAR, NULL, p_ATTRIBUTE17),
           decode( p_ATTRIBUTE18, FND_API.G_MISS_CHAR, NULL, p_ATTRIBUTE18),
           decode( p_ATTRIBUTE19, FND_API.G_MISS_CHAR, NULL, p_ATTRIBUTE19),
           decode( p_ATTRIBUTE20, FND_API.G_MISS_CHAR, NULL, p_ATTRIBUTE20),
           decode( p_TAX_INCLUSIVE_FLAG, FND_API.G_MISS_CHAR, NULL, p_TAX_INCLUSIVE_FLAG),
           decode ( p_OBJECT_VERSION_NUMBER, FND_API.G_MISS_NUM,1,NULL,1, p_OBJECT_VERSION_NUMBER),
	   decode( p_TAX_RATE_ID, FND_API.G_MISS_NUM, NULL, p_TAX_RATE_ID)
		 );
End Insert_Row;

PROCEDURE Update_Row(
          p_TAX_DETAIL_ID    NUMBER,
          p_CREATION_DATE    DATE,
          p_CREATED_BY    NUMBER,
          p_LAST_UPDATE_DATE    DATE,
          p_LAST_UPDATED_BY    NUMBER,
          p_LAST_UPDATE_LOGIN    NUMBER,
          p_REQUEST_ID    NUMBER,
          p_PROGRAM_APPLICATION_ID    NUMBER,
          p_PROGRAM_ID    NUMBER,
          p_PROGRAM_UPDATE_DATE    DATE,
          p_QUOTE_HEADER_ID    NUMBER,
          p_QUOTE_LINE_ID    NUMBER,
          p_QUOTE_SHIPMENT_ID    NUMBER,
          p_ORIG_TAX_CODE    VARCHAR2,
          p_TAX_CODE    VARCHAR2,
          p_TAX_RATE    NUMBER,
          p_TAX_DATE    DATE,
          p_TAX_AMOUNT    NUMBER,
          p_TAX_EXEMPT_FLAG    VARCHAR2,
          p_TAX_EXEMPT_NUMBER    VARCHAR2,
          p_TAX_EXEMPT_REASON_CODE    VARCHAR2,
          p_ATTRIBUTE_CATEGORY    VARCHAR2,
          p_ATTRIBUTE1    VARCHAR2,
          p_ATTRIBUTE2    VARCHAR2,
          p_ATTRIBUTE3    VARCHAR2,
          p_ATTRIBUTE4    VARCHAR2,
          p_ATTRIBUTE5    VARCHAR2,
          p_ATTRIBUTE6    VARCHAR2,
          p_ATTRIBUTE7    VARCHAR2,
          p_ATTRIBUTE8    VARCHAR2,
          p_ATTRIBUTE9    VARCHAR2,
          p_ATTRIBUTE10    VARCHAR2,
          p_ATTRIBUTE11    VARCHAR2,
          p_ATTRIBUTE12    VARCHAR2,
          p_ATTRIBUTE13    VARCHAR2,
          p_ATTRIBUTE14    VARCHAR2,
          p_ATTRIBUTE15    VARCHAR2,
           p_ATTRIBUTE16    VARCHAR2,
          p_ATTRIBUTE17    VARCHAR2,
          p_ATTRIBUTE18    VARCHAR2,
          p_ATTRIBUTE19    VARCHAR2,
           p_ATTRIBUTE20    VARCHAR2,
		p_TAX_INCLUSIVE_FLAG  VARCHAR2,
          p_OBJECT_VERSION_NUMBER  NUMBER,
	  p_TAX_RATE_ID		NUMBER
		)

 IS
 BEGIN
    Update ASO_TAX_DETAILS
    SET
            /*  CREATION_DATE = ASO_UTILITY_PVT.decode( p_CREATION_DATE, FND_API.G_MISS_DATE, CREATION_DATE, p_CREATION_DATE),
              CREATED_BY = decode( p_CREATED_BY, FND_API.G_MISS_NUM, CREATED_BY, p_CREATED_BY),*/
              LAST_UPDATE_DATE = ASO_UTILITY_PVT.decode( p_LAST_UPDATE_DATE, FND_API.G_MISS_DATE, LAST_UPDATE_DATE, p_LAST_UPDATE_DATE),
              LAST_UPDATED_BY = decode( p_LAST_UPDATED_BY, FND_API.G_MISS_NUM, LAST_UPDATED_BY, p_LAST_UPDATED_BY),
              LAST_UPDATE_LOGIN = decode( p_LAST_UPDATE_LOGIN, FND_API.G_MISS_NUM, LAST_UPDATE_LOGIN, p_LAST_UPDATE_LOGIN),
              REQUEST_ID = decode( p_REQUEST_ID, FND_API.G_MISS_NUM, REQUEST_ID, p_REQUEST_ID),
              PROGRAM_APPLICATION_ID = decode( p_PROGRAM_APPLICATION_ID, FND_API.G_MISS_NUM, PROGRAM_APPLICATION_ID, p_PROGRAM_APPLICATION_ID),
              PROGRAM_ID = decode( p_PROGRAM_ID, FND_API.G_MISS_NUM, PROGRAM_ID, p_PROGRAM_ID),
              PROGRAM_UPDATE_DATE = ASO_UTILITY_PVT.decode( p_PROGRAM_UPDATE_DATE, FND_API.G_MISS_DATE, PROGRAM_UPDATE_DATE, p_PROGRAM_UPDATE_DATE),
              QUOTE_HEADER_ID = decode( p_QUOTE_HEADER_ID, FND_API.G_MISS_NUM, QUOTE_HEADER_ID, p_QUOTE_HEADER_ID),
              QUOTE_LINE_ID = decode( p_QUOTE_LINE_ID, FND_API.G_MISS_NUM, QUOTE_LINE_ID, p_QUOTE_LINE_ID),
              QUOTE_SHIPMENT_ID = decode( p_QUOTE_SHIPMENT_ID, FND_API.G_MISS_NUM, QUOTE_SHIPMENT_ID, p_QUOTE_SHIPMENT_ID),
              ORIG_TAX_CODE = decode( p_ORIG_TAX_CODE, FND_API.G_MISS_CHAR, ORIG_TAX_CODE, p_ORIG_TAX_CODE),
              TAX_CODE = decode( p_TAX_CODE, FND_API.G_MISS_CHAR, TAX_CODE, p_TAX_CODE),
              TAX_RATE = decode( p_TAX_RATE, FND_API.G_MISS_NUM, TAX_RATE, p_TAX_RATE),
              TAX_DATE = ASO_UTILITY_PVT.decode( p_TAX_DATE, FND_API.G_MISS_DATE, TAX_DATE, p_TAX_DATE),
              TAX_AMOUNT = decode( p_TAX_AMOUNT, FND_API.G_MISS_NUM, TAX_AMOUNT, p_TAX_AMOUNT),
              TAX_EXEMPT_FLAG = decode( p_TAX_EXEMPT_FLAG, FND_API.G_MISS_CHAR, TAX_EXEMPT_FLAG, p_TAX_EXEMPT_FLAG),
              TAX_EXEMPT_NUMBER = decode( p_TAX_EXEMPT_NUMBER, FND_API.G_MISS_CHAR, TAX_EXEMPT_NUMBER, p_TAX_EXEMPT_NUMBER),
              TAX_EXEMPT_REASON_CODE = decode( p_TAX_EXEMPT_REASON_CODE, FND_API.G_MISS_CHAR, TAX_EXEMPT_REASON_CODE, p_TAX_EXEMPT_REASON_CODE),
              ATTRIBUTE_CATEGORY = decode( p_ATTRIBUTE_CATEGORY, FND_API.G_MISS_CHAR, ATTRIBUTE_CATEGORY, p_ATTRIBUTE_CATEGORY),
              ATTRIBUTE1 = decode( p_ATTRIBUTE1, FND_API.G_MISS_CHAR, ATTRIBUTE1, p_ATTRIBUTE1),
              ATTRIBUTE2 = decode( p_ATTRIBUTE2, FND_API.G_MISS_CHAR, ATTRIBUTE2, p_ATTRIBUTE2),
              ATTRIBUTE3 = decode( p_ATTRIBUTE3, FND_API.G_MISS_CHAR, ATTRIBUTE3, p_ATTRIBUTE3),
              ATTRIBUTE4 = decode( p_ATTRIBUTE4, FND_API.G_MISS_CHAR, ATTRIBUTE4, p_ATTRIBUTE4),
              ATTRIBUTE5 = decode( p_ATTRIBUTE5, FND_API.G_MISS_CHAR, ATTRIBUTE5, p_ATTRIBUTE5),
              ATTRIBUTE6 = decode( p_ATTRIBUTE6, FND_API.G_MISS_CHAR, ATTRIBUTE6, p_ATTRIBUTE6),
              ATTRIBUTE7 = decode( p_ATTRIBUTE7, FND_API.G_MISS_CHAR, ATTRIBUTE7, p_ATTRIBUTE7),
              ATTRIBUTE8 = decode( p_ATTRIBUTE8, FND_API.G_MISS_CHAR, ATTRIBUTE8, p_ATTRIBUTE8),
              ATTRIBUTE9 = decode( p_ATTRIBUTE9, FND_API.G_MISS_CHAR, ATTRIBUTE9, p_ATTRIBUTE9),
              ATTRIBUTE10 = decode( p_ATTRIBUTE10, FND_API.G_MISS_CHAR, ATTRIBUTE10, p_ATTRIBUTE10),
              ATTRIBUTE11 = decode( p_ATTRIBUTE11, FND_API.G_MISS_CHAR, ATTRIBUTE11, p_ATTRIBUTE11),
              ATTRIBUTE12 = decode( p_ATTRIBUTE12, FND_API.G_MISS_CHAR, ATTRIBUTE12, p_ATTRIBUTE12),
              ATTRIBUTE13 = decode( p_ATTRIBUTE13, FND_API.G_MISS_CHAR, ATTRIBUTE13, p_ATTRIBUTE13),
              ATTRIBUTE14 = decode( p_ATTRIBUTE14, FND_API.G_MISS_CHAR, ATTRIBUTE14, p_ATTRIBUTE14),
              ATTRIBUTE15 = decode( p_ATTRIBUTE15, FND_API.G_MISS_CHAR, ATTRIBUTE15, p_ATTRIBUTE15),
               ATTRIBUTE16 = decode( p_ATTRIBUTE16, FND_API.G_MISS_CHAR, ATTRIBUTE16, p_ATTRIBUTE16),
              ATTRIBUTE17 = decode( p_ATTRIBUTE17, FND_API.G_MISS_CHAR, ATTRIBUTE17, p_ATTRIBUTE17),
              ATTRIBUTE18 = decode( p_ATTRIBUTE18, FND_API.G_MISS_CHAR, ATTRIBUTE18, p_ATTRIBUTE18),
              ATTRIBUTE19 = decode( p_ATTRIBUTE19, FND_API.G_MISS_CHAR, ATTRIBUTE19, p_ATTRIBUTE19),
              ATTRIBUTE20 = decode( p_ATTRIBUTE20, FND_API.G_MISS_CHAR, ATTRIBUTE20, p_ATTRIBUTE20),
              TAX_INCLUSIVE_FLAG = decode( p_TAX_INCLUSIVE_FLAG, FND_API.G_MISS_CHAR, TAX_INCLUSIVE_FLAG, p_TAX_INCLUSIVE_FLAG),
		    OBJECT_VERSION_NUMBER = decode( p_OBJECT_VERSION_NUMBER, FND_API.G_MISS_NUM, nvl(OBJECT_VERSION_NUMBER,0)+1, nvl(p_OBJECT_VERSION_NUMBER, nvl(OBJECT_VERSION_NUMBER,0))+1),
		    TAX_RATE_ID = decode(p_TAX_RATE_ID, FND_API.G_MISS_NUM, TAX_RATE_ID, p_TAX_RATE_ID)
    where TAX_DETAIL_ID = p_TAX_DETAIL_ID;

    If (SQL%NOTFOUND) then
        RAISE NO_DATA_FOUND;
    End If;
END Update_Row;

PROCEDURE Delete_Row(
    p_TAX_DETAIL_ID  NUMBER)
 IS
 BEGIN
   DELETE FROM ASO_TAX_DETAILS
    WHERE TAX_DETAIL_ID = p_TAX_DETAIL_ID;
   If (SQL%NOTFOUND) then
       RAISE NO_DATA_FOUND;
   End If;
 END Delete_Row;


PROCEDURE Delete_Row(
    p_QUOTE_LINE_ID  NUMBER)
 IS
 BEGIN
   DELETE FROM ASO_TAX_DETAILS
    WHERE QUOTE_LINE_ID = p_QUOTE_LINE_ID;
   If (SQL%NOTFOUND) then
       RAISE NO_DATA_FOUND;
   End If;
 END Delete_Row;


PROCEDURE Lock_Row(
          --p_OBJECT_VERSION_NUMBER  NUMBER,
          p_TAX_DETAIL_ID    NUMBER,
          p_CREATION_DATE    DATE,
          p_CREATED_BY    NUMBER,
          p_LAST_UPDATE_DATE    DATE,
          p_LAST_UPDATED_BY    NUMBER,
          p_LAST_UPDATE_LOGIN    NUMBER,
          p_REQUEST_ID    NUMBER,
          p_PROGRAM_APPLICATION_ID    NUMBER,
          p_PROGRAM_ID    NUMBER,
          p_PROGRAM_UPDATE_DATE    DATE,
          p_QUOTE_HEADER_ID    NUMBER,
          p_QUOTE_LINE_ID    NUMBER,
          p_QUOTE_SHIPMENT_ID    NUMBER,
          p_ORIG_TAX_CODE    VARCHAR2,
          p_TAX_CODE    VARCHAR2,
          p_TAX_RATE    NUMBER,
          p_TAX_DATE    DATE,
          p_TAX_AMOUNT    NUMBER,
          p_TAX_EXEMPT_FLAG    VARCHAR2,
          p_TAX_EXEMPT_NUMBER    VARCHAR2,
          p_TAX_EXEMPT_REASON_CODE    VARCHAR2,
          p_ATTRIBUTE_CATEGORY    VARCHAR2,
          p_ATTRIBUTE1    VARCHAR2,
          p_ATTRIBUTE2    VARCHAR2,
          p_ATTRIBUTE3    VARCHAR2,
          p_ATTRIBUTE4    VARCHAR2,
          p_ATTRIBUTE5    VARCHAR2,
          p_ATTRIBUTE6    VARCHAR2,
          p_ATTRIBUTE7    VARCHAR2,
          p_ATTRIBUTE8    VARCHAR2,
          p_ATTRIBUTE9    VARCHAR2,
          p_ATTRIBUTE10    VARCHAR2,
          p_ATTRIBUTE11    VARCHAR2,
          p_ATTRIBUTE12    VARCHAR2,
          p_ATTRIBUTE13    VARCHAR2,
          p_ATTRIBUTE14    VARCHAR2,
          p_ATTRIBUTE15    VARCHAR2,
	  p_TAX_RATE_ID		NUMBER)

 IS
   CURSOR C IS
        SELECT TAX_EXEMPT_FLAG,
	   --OBJECT_VERSION_NUMBER,
TAX_EXEMPT_NUMBER,
TAX_EXEMPT_REASON_CODE,
ATTRIBUTE_CATEGORY,
ATTRIBUTE1,
ATTRIBUTE2,
ATTRIBUTE3,
ATTRIBUTE4,
ATTRIBUTE5,
ATTRIBUTE6,
ATTRIBUTE7,
ATTRIBUTE8,
ATTRIBUTE9,
ATTRIBUTE10,
ATTRIBUTE11,
ATTRIBUTE12,
ATTRIBUTE13,
ATTRIBUTE14,
ATTRIBUTE15,
TAX_DETAIL_ID,
CREATION_DATE,
CREATED_BY,
LAST_UPDATE_DATE,
LAST_UPDATED_BY,
LAST_UPDATE_LOGIN,
REQUEST_ID,
PROGRAM_APPLICATION_ID,
PROGRAM_ID,
PROGRAM_UPDATE_DATE,
QUOTE_HEADER_ID,
QUOTE_LINE_ID,
QUOTE_SHIPMENT_ID,
ORIG_TAX_CODE,
TAX_CODE,
TAX_RATE,
TAX_DATE,
TAX_AMOUNT,
TAX_RATE_ID
         FROM ASO_TAX_DETAILS
        WHERE TAX_DETAIL_ID =  p_TAX_DETAIL_ID
        FOR UPDATE of TAX_DETAIL_ID NOWAIT;
   Recinfo C%ROWTYPE;
 BEGIN
    OPEN C;
    FETCH C INTO Recinfo;
    If (C%NOTFOUND) then
        CLOSE C;
        FND_MESSAGE.SET_NAME('FND', 'FORM_RECORD_DELETED');
        APP_EXCEPTION.RAISE_EXCEPTION;
    End If;
    CLOSE C;
    if (
/*
           (      Recinfo.TAX_DETAIL_ID = p_TAX_DETAIL_ID)
       AND (    ( Recinfo.CREATION_DATE = p_CREATION_DATE)
            OR (    ( Recinfo.CREATION_DATE IS NULL )
                AND (  p_CREATION_DATE IS NULL )))
       AND (    ( Recinfo.CREATED_BY = p_CREATED_BY)
            OR (    ( Recinfo.CREATED_BY IS NULL )
                AND (  p_CREATED_BY IS NULL )))
       AND
*/
	  (    ( Recinfo.LAST_UPDATE_DATE = p_LAST_UPDATE_DATE)
            OR (    ( Recinfo.LAST_UPDATE_DATE IS NULL )
                AND (  p_LAST_UPDATE_DATE IS NULL )))
/*
       AND
	   (    ( Recinfo.OBJECT_VERSION_NUMBER = p_OBJECT_VERSION_NUMBER)
	      OR (    ( Recinfo.OBJECT_VERSION_NUMBER IS NULL )
		         AND (  p_OBJECT_VERSION_NUMBER IS NULL )))

       AND (    ( Recinfo.LAST_UPDATED_BY = p_LAST_UPDATED_BY)
            OR (    ( Recinfo.LAST_UPDATED_BY IS NULL )
                AND (  p_LAST_UPDATED_BY IS NULL )))
       AND (    ( Recinfo.LAST_UPDATE_LOGIN = p_LAST_UPDATE_LOGIN)
            OR (    ( Recinfo.LAST_UPDATE_LOGIN IS NULL )
                AND (  p_LAST_UPDATE_LOGIN IS NULL )))
       AND (    ( Recinfo.REQUEST_ID = p_REQUEST_ID)
            OR (    ( Recinfo.REQUEST_ID IS NULL )
                AND (  p_REQUEST_ID IS NULL )))
       AND (    ( Recinfo.PROGRAM_APPLICATION_ID = p_PROGRAM_APPLICATION_ID)
            OR (    ( Recinfo.PROGRAM_APPLICATION_ID IS NULL )
                AND (  p_PROGRAM_APPLICATION_ID IS NULL )))
       AND (    ( Recinfo.PROGRAM_ID = p_PROGRAM_ID)
            OR (    ( Recinfo.PROGRAM_ID IS NULL )
                AND (  p_PROGRAM_ID IS NULL )))
       AND (    ( Recinfo.PROGRAM_UPDATE_DATE = p_PROGRAM_UPDATE_DATE)
            OR (    ( Recinfo.PROGRAM_UPDATE_DATE IS NULL )
                AND (  p_PROGRAM_UPDATE_DATE IS NULL )))
       AND (    ( Recinfo.QUOTE_HEADER_ID = p_QUOTE_HEADER_ID)
            OR (    ( Recinfo.QUOTE_HEADER_ID IS NULL )
                AND (  p_QUOTE_HEADER_ID IS NULL )))
       AND (    ( Recinfo.QUOTE_LINE_ID = p_QUOTE_LINE_ID)
            OR (    ( Recinfo.QUOTE_LINE_ID IS NULL )
                AND (  p_QUOTE_LINE_ID IS NULL )))
       AND (    ( Recinfo.QUOTE_SHIPMENT_ID = p_QUOTE_SHIPMENT_ID)
            OR (    ( Recinfo.QUOTE_SHIPMENT_ID IS NULL )
                AND (  p_QUOTE_SHIPMENT_ID IS NULL )))
       AND (    ( Recinfo.ORIG_TAX_CODE = p_ORIG_TAX_CODE)
            OR (    ( Recinfo.ORIG_TAX_CODE IS NULL )
                AND (  p_ORIG_TAX_CODE IS NULL )))
       AND (    ( Recinfo.TAX_CODE = p_TAX_CODE)
            OR (    ( Recinfo.TAX_CODE IS NULL )
                AND (  p_TAX_CODE IS NULL )))
       AND (    ( Recinfo.TAX_RATE = p_TAX_RATE)
            OR (    ( Recinfo.TAX_RATE IS NULL )
                AND (  p_TAX_RATE IS NULL )))
       AND (    ( Recinfo.TAX_DATE = p_TAX_DATE)
            OR (    ( Recinfo.TAX_DATE IS NULL )
                AND (  p_TAX_DATE IS NULL )))
       AND (    ( Recinfo.TAX_AMOUNT = p_TAX_AMOUNT)
            OR (    ( Recinfo.TAX_AMOUNT IS NULL )
                AND (  p_TAX_AMOUNT IS NULL )))
       AND (    ( Recinfo.TAX_EXEMPT_FLAG = p_TAX_EXEMPT_FLAG)
            OR (    ( Recinfo.TAX_EXEMPT_FLAG IS NULL )
                AND (  p_TAX_EXEMPT_FLAG IS NULL )))
       AND (    ( Recinfo.TAX_EXEMPT_NUMBER = p_TAX_EXEMPT_NUMBER)
            OR (    ( Recinfo.TAX_EXEMPT_NUMBER IS NULL )
                AND (  p_TAX_EXEMPT_NUMBER IS NULL )))
       AND (    ( Recinfo.TAX_EXEMPT_REASON_CODE = p_TAX_EXEMPT_REASON_CODE)
            OR (    ( Recinfo.TAX_EXEMPT_REASON_CODE IS NULL )
                AND (  p_TAX_EXEMPT_REASON_CODE IS NULL )))
       AND (    ( Recinfo.ATTRIBUTE_CATEGORY = p_ATTRIBUTE_CATEGORY)
            OR (    ( Recinfo.ATTRIBUTE_CATEGORY IS NULL )
                AND (  p_ATTRIBUTE_CATEGORY IS NULL )))
       AND (    ( Recinfo.ATTRIBUTE1 = p_ATTRIBUTE1)
            OR (    ( Recinfo.ATTRIBUTE1 IS NULL )
                AND (  p_ATTRIBUTE1 IS NULL )))
       AND (    ( Recinfo.ATTRIBUTE2 = p_ATTRIBUTE2)
            OR (    ( Recinfo.ATTRIBUTE2 IS NULL )
                AND (  p_ATTRIBUTE2 IS NULL )))
       AND (    ( Recinfo.ATTRIBUTE3 = p_ATTRIBUTE3)
            OR (    ( Recinfo.ATTRIBUTE3 IS NULL )
                AND (  p_ATTRIBUTE3 IS NULL )))
       AND (    ( Recinfo.ATTRIBUTE4 = p_ATTRIBUTE4)
            OR (    ( Recinfo.ATTRIBUTE4 IS NULL )
                AND (  p_ATTRIBUTE4 IS NULL )))
       AND (    ( Recinfo.ATTRIBUTE5 = p_ATTRIBUTE5)
            OR (    ( Recinfo.ATTRIBUTE5 IS NULL )
                AND (  p_ATTRIBUTE5 IS NULL )))
       AND (    ( Recinfo.ATTRIBUTE6 = p_ATTRIBUTE6)
            OR (    ( Recinfo.ATTRIBUTE6 IS NULL )
                AND (  p_ATTRIBUTE6 IS NULL )))
       AND (    ( Recinfo.ATTRIBUTE7 = p_ATTRIBUTE7)
            OR (    ( Recinfo.ATTRIBUTE7 IS NULL )
                AND (  p_ATTRIBUTE7 IS NULL )))
       AND (    ( Recinfo.ATTRIBUTE8 = p_ATTRIBUTE8)
            OR (    ( Recinfo.ATTRIBUTE8 IS NULL )
                AND (  p_ATTRIBUTE8 IS NULL )))
       AND (    ( Recinfo.ATTRIBUTE9 = p_ATTRIBUTE9)
            OR (    ( Recinfo.ATTRIBUTE9 IS NULL )
                AND (  p_ATTRIBUTE9 IS NULL )))
       AND (    ( Recinfo.ATTRIBUTE10 = p_ATTRIBUTE10)
            OR (    ( Recinfo.ATTRIBUTE10 IS NULL )
                AND (  p_ATTRIBUTE10 IS NULL )))
       AND (    ( Recinfo.ATTRIBUTE11 = p_ATTRIBUTE11)
            OR (    ( Recinfo.ATTRIBUTE11 IS NULL )
                AND (  p_ATTRIBUTE11 IS NULL )))
       AND (    ( Recinfo.ATTRIBUTE12 = p_ATTRIBUTE12)
            OR (    ( Recinfo.ATTRIBUTE12 IS NULL )
                AND (  p_ATTRIBUTE12 IS NULL )))
       AND (    ( Recinfo.ATTRIBUTE13 = p_ATTRIBUTE13)
            OR (    ( Recinfo.ATTRIBUTE13 IS NULL )
                AND (  p_ATTRIBUTE13 IS NULL )))
       AND (    ( Recinfo.ATTRIBUTE14 = p_ATTRIBUTE14)
            OR (    ( Recinfo.ATTRIBUTE14 IS NULL )
                AND (  p_ATTRIBUTE14 IS NULL )))
       AND (    ( Recinfo.ATTRIBUTE15 = p_ATTRIBUTE15)
            OR (    ( Recinfo.ATTRIBUTE15 IS NULL )
                AND (  p_ATTRIBUTE15 IS NULL )))
*/
       ) then
       return;
   else
       FND_MESSAGE.SET_NAME('FND', 'FORM_RECORD_CHANGED');
       APP_EXCEPTION.RAISE_EXCEPTION;
   End If;
END Lock_Row;

End ASO_TAX_DETAILS_PKG;

/
