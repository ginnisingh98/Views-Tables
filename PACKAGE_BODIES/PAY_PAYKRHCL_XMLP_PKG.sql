--------------------------------------------------------
--  DDL for Package Body PAY_PAYKRHCL_XMLP_PKG
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE PACKAGE BODY "APPS"."PAY_PAYKRHCL_XMLP_PKG" AS
/* $Header: PAYKRHCLB.pls 120.0 2007/12/13 12:19:58 amakrish noship $ */
  FUNCTION BEFOREREPORT RETURN BOOLEAN IS
  BEGIN

  select
  SUBSTR(argument1,INSTR(argument1,'=',1)+1,LENGTH(argument1)),
  SUBSTR(argument2,INSTR(argument2,'=',1)+1,LENGTH(argument2)),
  SUBSTR(argument3,INSTR(argument3,'=',1)+1,LENGTH(argument3))
  into
    LP_PAYROLL_ACTION_ID,  LP_BP_HI_NUMBER ,  LP_REPORTED_DATE
  from FND_CONCURRENT_REQUESTS
  where request_id= FND_GLOBAL.conc_request_id;

    P_CONC_REQUEST_ID := FND_GLOBAL.CONC_REQUEST_ID;
    X_HI_PREM_EE_WO_ADJ := GET_USER_ENTITY_ID('X_HI_PREM_EE_WO_ADJ');
    X_EARNINGS_SUBJ_HI := GET_USER_ENTITY_ID('X_EARNINGS_SUBJ_HI');
    X_HI_WORKING_MONTHS := GET_USER_ENTITY_ID('X_HI_WORKING_MONTHS');
    X_KR_HIA_BUSINESS_PLACE_CODE := GET_USER_ENTITY_ID('X_KR_HIA_BUSINESS_PLACE_CODE');
    X_KR_HIA_HI_NUMBER := GET_USER_ENTITY_ID('X_KR_HIA_HI_NUMBER');
    X_KR_HIA_EMPLOYEE_NAME := GET_USER_ENTITY_ID('X_KR_HIA_EMPLOYEE_NAME');
    X_KR_HIA_REGISTRATION_NUMBER := GET_USER_ENTITY_ID('X_KR_HIA_REGISTRATION_NUMBER');
    X_KR_HIA_QUALIFIED_DATE := GET_USER_ENTITY_ID('X_KR_HIA_QUALIFIED_DATE');
    X_KR_HI_NUM_OF_MTHS_PREM_PAID := GET_USER_ENTITY_ID('X_KR_HI_NUM_OF_MTHS_PREM_PAID');



  RETURN (TRUE);
  END BEFOREREPORT;

  FUNCTION AFTERREPORT RETURN BOOLEAN IS
  BEGIN
    RETURN (TRUE);
  END AFTERREPORT;

  FUNCTION CF_BUSINESS_GROUPFORMULA RETURN VARCHAR2 IS
    V_BUSINESS_GROUP HR_ORGANIZATION_UNITS.NAME%TYPE;
  BEGIN
    V_BUSINESS_GROUP := HR_REPORTS.GET_BUSINESS_GROUP(P_BUSINESS_GROUP_ID);
    RETURN V_BUSINESS_GROUP;
  END CF_BUSINESS_GROUPFORMULA;

  FUNCTION CF_LEGISLATION_CODEFORMULA RETURN VARCHAR2 IS
    V_LEGISLATION_CODE HR_ORGANIZATION_INFORMATION.ORG_INFORMATION9%TYPE := NULL;
    CURSOR LEGISLATION_CODE(C_BUSINESS_GROUP_ID IN HR_ORGANIZATION_INFORMATION.ORGANIZATION_ID%TYPE) IS
      SELECT
        ORG_INFORMATION9
      FROM
        HR_ORGANIZATION_INFORMATION
      WHERE ORGANIZATION_ID = C_BUSINESS_GROUP_ID
        AND ORG_INFORMATION9 is not null
        AND ORG_INFORMATION_CONTEXT = 'Business Group Information';
  BEGIN
    OPEN LEGISLATION_CODE(P_BUSINESS_GROUP_ID);
    FETCH LEGISLATION_CODE
     INTO
       V_LEGISLATION_CODE;
    CLOSE LEGISLATION_CODE;
    RETURN V_LEGISLATION_CODE;
  END CF_LEGISLATION_CODEFORMULA;

  FUNCTION CF_CURRENCY_FORMAT_MASKFORMULA(CF_LEGISLATION_CODE IN VARCHAR2) RETURN VARCHAR2 IS
    V_CURRENCY_CODE FND_CURRENCIES.CURRENCY_CODE%TYPE;
    V_FORMAT_MASK VARCHAR2(100) := NULL;
    V_FIELD_LENGTH NUMBER(3) := 14;
    CURSOR CURRENCY_FORMAT_MASK(C_TERRITORY_CODE IN FND_CURRENCIES.ISSUING_TERRITORY_CODE%TYPE) IS
      SELECT
        CURRENCY_CODE
      FROM
        FND_CURRENCIES
      WHERE ISSUING_TERRITORY_CODE = C_TERRITORY_CODE;
  BEGIN
    OPEN CURRENCY_FORMAT_MASK(CF_LEGISLATION_CODE);
    FETCH CURRENCY_FORMAT_MASK
     INTO
       V_CURRENCY_CODE;
    CLOSE CURRENCY_FORMAT_MASK;
    V_FORMAT_MASK := FND_CURRENCY.GET_FORMAT_MASK(V_CURRENCY_CODE
                                                 ,V_FIELD_LENGTH);
    RETURN V_FORMAT_MASK;
  END CF_CURRENCY_FORMAT_MASKFORMULA;

  PROCEDURE SET_CURRENCY_FORMAT_MASK IS
  BEGIN
    NULL;
  END SET_CURRENCY_FORMAT_MASK;

  FUNCTION P_BUSINESS_GROUP_IDVALIDTRIGGE RETURN BOOLEAN IS
  BEGIN
    RETURN (TRUE);
  END P_BUSINESS_GROUP_IDVALIDTRIGGE;

  FUNCTION GET_USER_ENTITY_ID(P_USER_ENTITY_NAME IN FF_USER_ENTITIES.USER_ENTITY_NAME%TYPE) RETURN NUMBER IS
    L_USER_ENTITY_ID FF_USER_ENTITIES.USER_ENTITY_ID%TYPE;
    CURSOR GET_USER_ENTITY_ID IS
      SELECT
        USER_ENTITY_ID
      FROM
        FF_USER_ENTITIES
      WHERE LEGISLATION_CODE = 'KR'
        AND USER_ENTITY_NAME = P_USER_ENTITY_NAME;
  BEGIN
    OPEN GET_USER_ENTITY_ID;
    FETCH GET_USER_ENTITY_ID
     INTO
       L_USER_ENTITY_ID;
    CLOSE GET_USER_ENTITY_ID;
    RETURN (L_USER_ENTITY_ID);
  EXCEPTION
    WHEN NO_DATA_FOUND THEN
      RETURN (0);
    WHEN OTHERS THEN
      IF GET_USER_ENTITY_ID%ISOPEN THEN
        CLOSE GET_USER_ENTITY_ID;
      END IF;
      RAISE;
  END GET_USER_ENTITY_ID;

  FUNCTION CF_SEQUENCE_COUNTERFORMULA(CF_SEQUENCE_COUNTER IN NUMBER) RETURN NUMBER IS
  BEGIN
    RETURN (CF_SEQUENCE_COUNTER + 1);
  END CF_SEQUENCE_COUNTERFORMULA;

  FUNCTION CF_GET_DATAFORMULA(ASSIGNMENT_ACTION_ID IN NUMBER
                             ,ACTUAL_TERMINATION_DATE IN DATE) RETURN NUMBER IS
  BEGIN
    CP_HIA_BUSINESS_PLACE_CODE := RPAD(SUBSTR(PAY_KR_REPORT_PKG.GET_ARCHIVE_ITEMS(ASSIGNMENT_ACTION_ID
                                                                                 ,X_KR_HIA_BUSINESS_PLACE_CODE)
                                             ,1
                                             ,8)
                                      ,8
                                      ,' ');
    CP_HIA_HI_NUMBER := PAY_KR_REPORT_PKG.GET_ARCHIVE_ITEMS(ASSIGNMENT_ACTION_ID
                                                           ,X_KR_HIA_HI_NUMBER);
    CP_HIA_EMPLOYEE_NAME := PAY_KR_REPORT_PKG.GET_ARCHIVE_ITEMS(ASSIGNMENT_ACTION_ID
                                                               ,X_KR_HIA_EMPLOYEE_NAME);
    CP_HIA_REGISTRATION_NUMBER := REPLACE(PAY_KR_REPORT_PKG.GET_ARCHIVE_ITEMS(ASSIGNMENT_ACTION_ID
                                                                             ,X_KR_HIA_REGISTRATION_NUMBER)
                                         ,'-');
    CP_HIA_QUALIFIED_DATE := TO_CHAR(FND_DATE.CANONICAL_TO_DATE(PAY_KR_REPORT_PKG.GET_ARCHIVE_ITEMS(ASSIGNMENT_ACTION_ID
                                                                                                   ,X_KR_HIA_QUALIFIED_DATE))
                                    ,'YYYYMMDD');
    CP_HI_PREM_EE_WO_ADJ_ASG_YTD := TO_NUMBER(PAY_KR_REPORT_PKG.GET_ARCHIVE_ITEMS(ASSIGNMENT_ACTION_ID
                                                                                 ,X_HI_PREM_EE_WO_ADJ));
    CP_EARNINGS_SUBJ_HI_ASG_YTD := TO_NUMBER(PAY_KR_REPORT_PKG.GET_ARCHIVE_ITEMS(ASSIGNMENT_ACTION_ID
                                                                                ,X_EARNINGS_SUBJ_HI));
    CP_HI_WORKING_MONTHS := TO_NUMBER(PAY_KR_REPORT_PKG.GET_ARCHIVE_ITEMS(ASSIGNMENT_ACTION_ID
                                                                         ,X_HI_WORKING_MONTHS));
    CP_TERMINATION_DATE := ACTUAL_TERMINATION_DATE;
    CP_SEQUENCE_NUMBER := CP_SEQUENCE_NUMBER + 1;
    CP_NUMBER_OF_MONTHS_PAID := TO_NUMBER(PAY_KR_REPORT_PKG.GET_ARCHIVE_ITEMS(ASSIGNMENT_ACTION_ID
                                                                             ,X_KR_HI_NUM_OF_MTHS_PREM_PAID));
    RETURN (1);
  END CF_GET_DATAFORMULA;

  FUNCTION CP_CONCAT_BP_NAMESFORMULA RETURN VARCHAR2 IS
    CURSOR BP_NAMES IS
      SELECT
        HOU1.NAME
      FROM
        HR_ORGANIZATION_UNITS HOU1,
        PAY_PAYROLL_ACTIONS PPA,
        HR_ORGANIZATION_INFORMATION HOI2
      WHERE PPA.PAYROLL_ACTION_ID = LP_PAYROLL_ACTION_ID
        AND HOU1.BUSINESS_GROUP_ID = PPA.BUSINESS_GROUP_ID
        AND HOU1.ORGANIZATION_ID = HOI2.ORGANIZATION_ID
        AND HOI2.ORG_INFORMATION_CONTEXT = 'KR_HI_INFORMATION'
        AND HOI2.ORG_INFORMATION1 = LP_BP_HI_NUMBER;
    L_CONCAT VARCHAR2(300);
  BEGIN
    L_CONCAT := NULL;
    FOR rec IN BP_NAMES LOOP
      L_CONCAT := SUBSTR(L_CONCAT || REC.NAME
                        ,0
                        ,300);
      L_CONCAT := SUBSTR(L_CONCAT || ', '
                        ,0
                        ,300);
    END LOOP;
    L_CONCAT := RTRIM(L_CONCAT
                     ,', ');
    RETURN L_CONCAT;
  END CP_CONCAT_BP_NAMESFORMULA;

  FUNCTION CP_HIA_BUSINESS_PLACE_CODE_P RETURN VARCHAR2 IS
  BEGIN
    RETURN CP_HIA_BUSINESS_PLACE_CODE;
  END CP_HIA_BUSINESS_PLACE_CODE_P;

  FUNCTION CP_HIA_HI_NUMBER_P RETURN VARCHAR2 IS
  BEGIN
    RETURN CP_HIA_HI_NUMBER;
  END CP_HIA_HI_NUMBER_P;

  FUNCTION CP_HIA_EMPLOYEE_NAME_P RETURN VARCHAR2 IS
  BEGIN
    RETURN CP_HIA_EMPLOYEE_NAME;
  END CP_HIA_EMPLOYEE_NAME_P;

  FUNCTION CP_HIA_REGISTRATION_NUMBER_P RETURN VARCHAR2 IS
  BEGIN
    RETURN CP_HIA_REGISTRATION_NUMBER;
  END CP_HIA_REGISTRATION_NUMBER_P;

  FUNCTION CP_HIA_QUALIFIED_DATE_P RETURN VARCHAR2 IS
  BEGIN
    RETURN CP_HIA_QUALIFIED_DATE;
  END CP_HIA_QUALIFIED_DATE_P;

  FUNCTION CP_HI_PREM_EE_WO_ADJ_ASG_YTD_P RETURN NUMBER IS
  BEGIN
    RETURN CP_HI_PREM_EE_WO_ADJ_ASG_YTD;
  END CP_HI_PREM_EE_WO_ADJ_ASG_YTD_P;

  FUNCTION CP_EARNINGS_SUBJ_HI_ASG_YTD_P RETURN NUMBER IS
  BEGIN
    RETURN CP_EARNINGS_SUBJ_HI_ASG_YTD;
  END CP_EARNINGS_SUBJ_HI_ASG_YTD_P;

  FUNCTION CP_HI_WORKING_MONTHS_P RETURN NUMBER IS
  BEGIN
    RETURN CP_HI_WORKING_MONTHS;
  END CP_HI_WORKING_MONTHS_P;

  FUNCTION CP_NUMBER_OF_MONTHS_PAID_P RETURN NUMBER IS
  BEGIN
    RETURN CP_NUMBER_OF_MONTHS_PAID;
  END CP_NUMBER_OF_MONTHS_PAID_P;

  FUNCTION CP_TERMINATION_DATE_P RETURN DATE IS
  BEGIN
    RETURN CP_TERMINATION_DATE;
  END CP_TERMINATION_DATE_P;

  FUNCTION CP_SEQUENCE_NUMBER_P RETURN NUMBER IS
  BEGIN
    RETURN CP_SEQUENCE_NUMBER;
  END CP_SEQUENCE_NUMBER_P;

END PAY_PAYKRHCL_XMLP_PKG;

/
