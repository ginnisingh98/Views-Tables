--------------------------------------------------------
--  DDL for Package Body LNS_FEE_SCHEDULES_PKG
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE PACKAGE BODY "APPS"."LNS_FEE_SCHEDULES_PKG" AS
/* $Header: LNS_FEESC_TBLH_B.pls 120.1.12010000.3 2010/02/24 02:38:48 mbolli ship $ */

/* Insert_Row procedure */
PROCEDURE Insert_Row(
	X_FEE_SCHEDULE_ID		IN OUT NOCOPY NUMBER
	,P_FEE_ID		IN NUMBER
	,P_LOAN_ID		IN NUMBER
	,P_FEE_AMOUNT		IN NUMBER
	,P_FEE_INSTALLMENT		IN NUMBER
	,P_FEE_DESCRIPTION		IN VARCHAR2
	,P_ACTIVE_FLAG		IN VARCHAR2
	,P_BILLED_FLAG		IN VARCHAR2
	,P_FEE_WAIVABLE_FLAG		IN VARCHAR2
	,P_WAIVED_AMOUNT		IN NUMBER
	,P_CREATED_BY		IN NUMBER
	,P_CREATION_DATE		IN DATE
	,P_LAST_UPDATED_BY		IN NUMBER
	,P_LAST_UPDATE_DATE		IN DATE
	,P_LAST_UPDATE_LOGIN		IN NUMBER
	,P_PROGRAM_ID		IN NUMBER
	,P_REQUEST_ID		IN NUMBER
	,P_OBJECT_VERSION_NUMBER		IN NUMBER
	,P_DISB_HEADER_ID		IN NUMBER
	,P_PHASE		IN VARCHAR2
) IS
BEGIN
	INSERT INTO LNS_FEE_SCHEDULES
	(
		FEE_SCHEDULE_ID
		,FEE_ID
		,LOAN_ID
		,FEE_AMOUNT
		,FEE_INSTALLMENT
		,FEE_DESCRIPTION
		,ACTIVE_FLAG
		,BILLED_FLAG
		,FEE_WAIVABLE_FLAG
		,WAIVED_AMOUNT
		,CREATED_BY
		,CREATION_DATE
		,LAST_UPDATED_BY
		,LAST_UPDATE_DATE
		,LAST_UPDATE_LOGIN
		,PROGRAM_ID
		,REQUEST_ID
		,OBJECT_VERSION_NUMBER
		,DISB_HEADER_ID
		,PHASE
	) VALUES (
		DECODE(X_FEE_SCHEDULE_ID, FND_API.G_MISS_NUM,
LNS_FEE_SCHEDULE_S.NEXTVAL, NULL, LNS_FEE_SCHEDULE_S.NEXTVAL, X_FEE_SCHEDULE_ID)
		,DECODE(P_FEE_ID, FND_API.G_MISS_NUM, NULL, P_FEE_ID)
		,DECODE(P_LOAN_ID, FND_API.G_MISS_NUM, NULL, P_LOAN_ID)
		,DECODE(P_FEE_AMOUNT, FND_API.G_MISS_NUM, NULL, P_FEE_AMOUNT)
		,DECODE(P_FEE_INSTALLMENT, FND_API.G_MISS_NUM, NULL,
P_FEE_INSTALLMENT)
		,DECODE(P_FEE_DESCRIPTION, FND_API.G_MISS_CHAR, NULL,
P_FEE_DESCRIPTION)
		,DECODE(P_ACTIVE_FLAG, FND_API.G_MISS_CHAR, NULL, P_ACTIVE_FLAG)
		,DECODE(P_BILLED_FLAG, FND_API.G_MISS_CHAR, NULL, P_BILLED_FLAG)
		,DECODE(P_FEE_WAIVABLE_FLAG, FND_API.G_MISS_CHAR, NULL,
P_FEE_WAIVABLE_FLAG)
		,DECODE(P_WAIVED_AMOUNT, FND_API.G_MISS_NUM, NULL,
P_WAIVED_AMOUNT)
		,LNS_UTILITY_PUB.CREATED_BY
		,LNS_UTILITY_PUB.CREATION_DATE
		,LNS_UTILITY_PUB.LAST_UPDATED_BY
		,LNS_UTILITY_PUB.LAST_UPDATE_DATE
		,LNS_UTILITY_PUB.LAST_UPDATE_LOGIN
		,DECODE(P_PROGRAM_ID, FND_API.G_MISS_NUM, NULL, P_PROGRAM_ID)
		,DECODE(P_REQUEST_ID, FND_API.G_MISS_NUM, NULL, P_REQUEST_ID)
		,DECODE(P_OBJECT_VERSION_NUMBER, FND_API.G_MISS_NUM, NULL,
P_OBJECT_VERSION_NUMBER)
		,DECODE(P_DISB_HEADER_ID, FND_API.G_MISS_NUM, NULL,
P_DISB_HEADER_ID)
		,DECODE(P_PHASE, FND_API.G_MISS_CHAR, NULL, P_PHASE)
	) RETURNING
		 FEE_SCHEDULE_ID
	 INTO
		 X_FEE_SCHEDULE_ID;
END Insert_Row;

/* Update_Row procedure */
PROCEDURE Update_Row(
	P_FEE_SCHEDULE_ID		IN NUMBER
	,P_FEE_ID			IN NUMBER
	,P_LOAN_ID			IN NUMBER
	,P_FEE_AMOUNT			IN NUMBER
	,P_FEE_INSTALLMENT		IN NUMBER
	,P_FEE_DESCRIPTION		IN VARCHAR2
	,P_ACTIVE_FLAG			IN VARCHAR2
	,P_BILLED_FLAG			IN VARCHAR2
	,P_FEE_WAIVABLE_FLAG		IN VARCHAR2
	,P_WAIVED_AMOUNT		IN NUMBER
	,P_LAST_UPDATED_BY		IN NUMBER
	,P_LAST_UPDATE_DATE		IN DATE
	,P_LAST_UPDATE_LOGIN		IN NUMBER
	,P_PROGRAM_ID			IN NUMBER
	,P_REQUEST_ID			IN NUMBER
	,P_OBJECT_VERSION_NUMBER	IN NUMBER
	,P_DISB_HEADER_ID		IN NUMBER
	,P_PHASE			IN VARCHAR2
) IS
BEGIN
	UPDATE LNS_FEE_SCHEDULES SET
		FEE_ID = DECODE(P_FEE_ID, NULL, FEE_ID, FND_API.G_MISS_NUM,
NULL, P_FEE_ID)
		,LOAN_ID = DECODE(P_LOAN_ID, NULL, LOAN_ID, FND_API.G_MISS_NUM,
NULL, P_LOAN_ID)
		,FEE_AMOUNT = DECODE(P_FEE_AMOUNT, NULL, FEE_AMOUNT,
FND_API.G_MISS_NUM, NULL, P_FEE_AMOUNT)
		,FEE_INSTALLMENT = DECODE(P_FEE_INSTALLMENT, NULL,
FEE_INSTALLMENT, FND_API.G_MISS_NUM, NULL, P_FEE_INSTALLMENT)
		,FEE_DESCRIPTION = DECODE(P_FEE_DESCRIPTION, NULL,
FEE_DESCRIPTION, FND_API.G_MISS_CHAR, NULL, P_FEE_DESCRIPTION)
		,ACTIVE_FLAG = DECODE(P_ACTIVE_FLAG, NULL, ACTIVE_FLAG,
FND_API.G_MISS_CHAR, NULL, P_ACTIVE_FLAG)
		,BILLED_FLAG = DECODE(P_BILLED_FLAG, NULL, BILLED_FLAG,
FND_API.G_MISS_CHAR, NULL, P_BILLED_FLAG)
		,FEE_WAIVABLE_FLAG = DECODE(P_FEE_WAIVABLE_FLAG, NULL,
FEE_WAIVABLE_FLAG, FND_API.G_MISS_CHAR, NULL, P_FEE_WAIVABLE_FLAG)
		,WAIVED_AMOUNT = DECODE(P_WAIVED_AMOUNT, NULL, WAIVED_AMOUNT,
FND_API.G_MISS_NUM, NULL, P_WAIVED_AMOUNT)
		,LAST_UPDATED_BY = LNS_UTILITY_PUB.LAST_UPDATED_BY
		,LAST_UPDATE_DATE = LNS_UTILITY_PUB.LAST_UPDATE_DATE
		,LAST_UPDATE_LOGIN = LNS_UTILITY_PUB.LAST_UPDATE_LOGIN
		,PROGRAM_ID = DECODE(P_PROGRAM_ID, NULL, PROGRAM_ID,
FND_API.G_MISS_NUM, NULL, P_PROGRAM_ID)
		,REQUEST_ID = DECODE(P_REQUEST_ID, NULL, REQUEST_ID,
FND_API.G_MISS_NUM, NULL, P_REQUEST_ID)
		,OBJECT_VERSION_NUMBER = DECODE(P_OBJECT_VERSION_NUMBER, NULL,
OBJECT_VERSION_NUMBER, FND_API.G_MISS_NUM, NULL, P_OBJECT_VERSION_NUMBER)
		,DISB_HEADER_ID = DECODE(P_DISB_HEADER_ID, NULL, DISB_HEADER_ID,
FND_API.G_MISS_NUM, NULL, P_DISB_HEADER_ID)
		,PHASE = DECODE(P_PHASE, NULL, PHASE, FND_API.G_MISS_CHAR, NULL,
P_PHASE)
	 WHERE FEE_SCHEDULE_ID = P_FEE_SCHEDULE_ID;

	if (sql%notfound) then
		raise no_data_found;
	end if;
END Update_Row;

/* Delete_Row procedure */
PROCEDURE Delete_Row(P_FEE_SCHEDULE_ID IN NUMBER) IS
BEGIN
	DELETE FROM LNS_FEE_SCHEDULES
		WHERE FEE_SCHEDULE_ID = P_FEE_SCHEDULE_ID;

	if (sql%notfound) then
		raise no_data_found;
	end if;
END Delete_Row;

/* Lock_Row procedure */
PROCEDURE Lock_Row(
	P_FEE_SCHEDULE_ID		IN NUMBER
	,P_FEE_ID			IN NUMBER
	,P_LOAN_ID			IN NUMBER
	,P_FEE_AMOUNT			IN NUMBER
	,P_FEE_INSTALLMENT		IN NUMBER
	,P_FEE_DESCRIPTION		IN VARCHAR2
	,P_ACTIVE_FLAG			IN VARCHAR2
	,P_BILLED_FLAG			IN VARCHAR2
	,P_FEE_WAIVABLE_FLAG		IN VARCHAR2
	,P_WAIVED_AMOUNT		IN NUMBER
	,P_CREATED_BY			IN NUMBER
	,P_CREATION_DATE		IN DATE
	,P_LAST_UPDATED_BY		IN NUMBER
	,P_LAST_UPDATE_DATE		IN DATE
	,P_LAST_UPDATE_LOGIN		IN NUMBER
	,P_PROGRAM_ID			IN NUMBER
	,P_REQUEST_ID			IN NUMBER
	,P_OBJECT_VERSION_NUMBER	IN NUMBER
	,P_DISB_HEADER_ID		IN NUMBER
	,P_PHASE			IN VARCHAR2
) IS
	CURSOR C IS SELECT * FROM LNS_FEE_SCHEDULES
		WHERE FEE_SCHEDULE_ID = P_FEE_SCHEDULE_ID
		FOR UPDATE of FEE_SCHEDULE_ID NOWAIT;
	Recinfo C%ROWTYPE;
BEGIN
	OPEN C;
	FETCH C INTO Recinfo;
	IF (C%NOTFOUND) THEN
		CLOSE C;
		FND_MESSAGE.Set_Name('FND', 'FORM_RECORD_DELETED');
		APP_EXCEPTION.Raise_Exception;
	END IF;
	CLOSE C;

	IF (
		(Recinfo.FEE_SCHEDULE_ID = P_FEE_SCHEDULE_ID)
		AND ( (Recinfo.FEE_ID = P_FEE_ID)
			OR ( (Recinfo.FEE_ID IS NULL)
				AND (P_FEE_ID IS NULL)))
		AND ( (Recinfo.LOAN_ID = P_LOAN_ID)
			OR ( (Recinfo.LOAN_ID IS NULL)
				AND (P_LOAN_ID IS NULL)))
		AND ( (Recinfo.FEE_AMOUNT = P_FEE_AMOUNT)
			OR ( (Recinfo.FEE_AMOUNT IS NULL)
				AND (P_FEE_AMOUNT IS NULL)))
		AND ( (Recinfo.FEE_INSTALLMENT = P_FEE_INSTALLMENT)
			OR ( (Recinfo.FEE_INSTALLMENT IS NULL)
				AND (P_FEE_INSTALLMENT IS NULL)))
		AND ( (Recinfo.FEE_DESCRIPTION = P_FEE_DESCRIPTION)
			OR ( (Recinfo.FEE_DESCRIPTION IS NULL)
				AND (P_FEE_DESCRIPTION IS NULL)))
		AND ( (Recinfo.ACTIVE_FLAG = P_ACTIVE_FLAG)
			OR ( (Recinfo.ACTIVE_FLAG IS NULL)
				AND (P_ACTIVE_FLAG IS NULL)))
		AND ( (Recinfo.BILLED_FLAG = P_BILLED_FLAG)
			OR ( (Recinfo.BILLED_FLAG IS NULL)
				AND (P_BILLED_FLAG IS NULL)))
		AND ( (Recinfo.FEE_WAIVABLE_FLAG = P_FEE_WAIVABLE_FLAG)
			OR ( (Recinfo.FEE_WAIVABLE_FLAG IS NULL)
				AND (P_FEE_WAIVABLE_FLAG IS NULL)))
		AND ( (Recinfo.WAIVED_AMOUNT = P_WAIVED_AMOUNT)
			OR ( (Recinfo.WAIVED_AMOUNT IS NULL)
				AND (P_WAIVED_AMOUNT IS NULL)))
		AND ( (Recinfo.CREATED_BY = P_CREATED_BY)
			OR ( (Recinfo.CREATED_BY IS NULL)
				AND (P_CREATED_BY IS NULL)))
		AND ( (Recinfo.CREATION_DATE = P_CREATION_DATE)
			OR ( (Recinfo.CREATION_DATE IS NULL)
				AND (P_CREATION_DATE IS NULL)))
		AND ( (Recinfo.LAST_UPDATED_BY = P_LAST_UPDATED_BY)
			OR ( (Recinfo.LAST_UPDATED_BY IS NULL)
				AND (P_LAST_UPDATED_BY IS NULL)))
		AND ( (Recinfo.LAST_UPDATE_DATE = P_LAST_UPDATE_DATE)
			OR ( (Recinfo.LAST_UPDATE_DATE IS NULL)
				AND (P_LAST_UPDATE_DATE IS NULL)))
		AND ( (Recinfo.LAST_UPDATE_LOGIN = P_LAST_UPDATE_LOGIN)
			OR ( (Recinfo.LAST_UPDATE_LOGIN IS NULL)
				AND (P_LAST_UPDATE_LOGIN IS NULL)))
		AND ( (Recinfo.PROGRAM_ID = P_PROGRAM_ID)
			OR ( (Recinfo.PROGRAM_ID IS NULL)
				AND (P_PROGRAM_ID IS NULL)))
		AND ( (Recinfo.REQUEST_ID = P_REQUEST_ID)
			OR ( (Recinfo.REQUEST_ID IS NULL)
				AND (P_REQUEST_ID IS NULL)))
		AND ( (Recinfo.OBJECT_VERSION_NUMBER = P_OBJECT_VERSION_NUMBER)
			OR ( (Recinfo.OBJECT_VERSION_NUMBER IS NULL)
				AND (P_OBJECT_VERSION_NUMBER IS NULL)))
		AND ( (Recinfo.DISB_HEADER_ID = P_DISB_HEADER_ID)
			OR ( (Recinfo.DISB_HEADER_ID IS NULL)
				AND (P_DISB_HEADER_ID IS NULL)))
		AND ( (Recinfo.PHASE = P_PHASE)
			OR ( (Recinfo.PHASE IS NULL)
				AND (P_PHASE IS NULL)))
	   ) THEN
		return;
	ELSE
		FND_MESSAGE.Set_Name('FND', 'FORM_RECORD_CHANGED');
		APP_EXCEPTION.Raise_Exception;
	END IF;
END Lock_Row;
END;


/
