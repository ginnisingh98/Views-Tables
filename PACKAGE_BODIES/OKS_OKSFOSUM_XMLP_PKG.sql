--------------------------------------------------------
--  DDL for Package Body OKS_OKSFOSUM_XMLP_PKG
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE PACKAGE BODY "APPS"."OKS_OKSFOSUM_XMLP_PKG" AS
/* $Header: OKSFOSUMB.pls 120.2 2007/12/25 07:57:32 nchinnam noship $ */
  FUNCTION BEFOREREPORT RETURN BOOLEAN IS
    CURSOR ORG IS
      SELECT
        NAME
      FROM
        HR_OPERATING_UNITS
      WHERE ORGANIZATION_ID = LP_OPERATING_UNIT;
    APF BOOLEAN;
  BEGIN
    APF := AFTERPFORM;
    IF LP_OPERATING_UNIT IS NOT NULL THEN
      MO_GLOBAL.SET_POLICY_CONTEXT('S'
                                  ,LP_OPERATING_UNIT);
    END IF;
    IF LP_OPERATING_UNIT IS NOT NULL THEN
      OPEN ORG;
      FETCH ORG
       INTO CP_ORG_NAME;
      CLOSE ORG;
    END IF;
    OKS_EXTWAR_UTIL_PVT.CALCULATE_REV_REC(P_CONC_REQUEST_ID => OKS_OKSFOSUM_XMLP_PKG.P_CONC_REQUEST_ID
                                         ,P_CONTRACT_GROUP => OKS_OKSFOSUM_XMLP_PKG.P_CONTRACT_GROUP
                                         ,P_ORGID => LP_OPERATING_UNIT
                                         ,P_FORFDATE => P_START_DATE
                                         ,P_FORTDATE => P_END_DATE
                                         ,P_MIN => P_MIN_VAL
                                         ,P_MAX => P_MAX_VAL
                                         ,P_REGZ_DATE => P_REV_REC_DATE
                                         ,P_CURR => P_CURRENCY_CODE);
    RETURN (TRUE);
  END BEFOREREPORT;
  FUNCTION AFTERPFORM RETURN BOOLEAN IS
    CURSOR ORG IS
      SELECT
        NAME
      FROM
        HR_OPERATING_UNITS
      WHERE ORGANIZATION_ID = LP_OPERATING_UNIT;
    CURSOR C3(CN_CONTRACT_GROUP_ID IN NUMBER) IS
      SELECT
        NAME
      FROM
        OKC_K_GROUPS_V
      WHERE ID = CN_CONTRACT_GROUP_ID;
  BEGIN
    BEGIN
      P_CONC_REQUEST_ID := FND_GLOBAL.CONC_REQUEST_ID;
      LP_OPERATING_UNIT := P_OPERATING_UNIT;
      P_START_DATE1 := to_char(P_START_DATE,'DD-MON-YY');
      P_END_DATE1 := to_Char(P_END_DATE,'DD-MON-YY');
      /*SRW.USER_EXIT('FND SRWINIT')*/NULL;
    EXCEPTION
      WHEN /*SRW.USER_EXIT_FAILURE*/OTHERS THEN
        /*SRW.MESSAGE(1
                   ,'srw_init')*/NULL;
    END;
    IF (LP_OPERATING_UNIT IS NULL) THEN
      IF FND_PROFILE.VALUE('OKC_VIEW_K_BY_ORG') = 'Y' THEN
        LP_OPERATING_UNIT := FND_PROFILE.VALUE('ORG_ID');
      END IF;
    END IF;
    IF LP_OPERATING_UNIT IS NOT NULL THEN
      OPEN ORG;
      FETCH ORG
       INTO P_ORG_NAME;
      CLOSE ORG;
    END IF;
    IF P_CONTRACT_GROUP IS NOT NULL THEN
      P_CONTRACT_GROUP_NAME := NULL;
      OPEN C3(P_CONTRACT_GROUP);
      FETCH C3
       INTO P_CONTRACT_GROUP_NAME;
      CLOSE C3;
    END IF;
    RETURN (TRUE);
  END AFTERPFORM;
  FUNCTION AFTERREPORT RETURN BOOLEAN IS
  BEGIN
    DELETE FROM OKS_STATUS_FORECAST
     WHERE CONC_REQUEST_ID = P_CONC_REQUEST_ID;
    COMMIT;
    BEGIN
      /*SRW.USER_EXIT('FND SRWEXIT')*/NULL;
    EXCEPTION
      WHEN /*SRW.USER_EXIT_FAILURE*/OTHERS THEN
        /*SRW.MESSAGE(1
                   ,'srw_exit')*/NULL;
    END;
    RETURN (TRUE);
  END AFTERREPORT;
  FUNCTION P_WHERE_CLAUSE_P RETURN VARCHAR2 IS
  BEGIN
    RETURN P_WHERE_CLAUSE;
  END P_WHERE_CLAUSE_P;
  FUNCTION CP_ORG_NAME_P RETURN VARCHAR2 IS
  BEGIN
    RETURN CP_ORG_NAME;
  END CP_ORG_NAME_P;
END OKS_OKSFOSUM_XMLP_PKG;


/
