--------------------------------------------------------
--  DDL for Package Body PER_CALENDAR_UTIL
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE PACKAGE BODY "APPS"."PER_CALENDAR_UTIL" AS
  /* $Header: pecalutl.pkb 120.0.12010000.4 2008/11/19 07:24:46 osamvats noship $ */

  DATEICALFORMAT CONSTANT VARCHAR2(15)  DEFAULT 'yyyyMMdd';
  TIMEICALFORMAT CONSTANT VARCHAR2(15)  DEFAULT 'HH24MIss';

-- CONVERTS DATE FROM OLD TIME ZONE TO GMT
   FUNCTION CONVERT_TIMEZONE
     (L_DATE		IN DATE,
      L_OLDTIMEZONE IN VARCHAR2 DEFAULT DBTIMEZONE)
    RETURN DATE
    IS
    BEGIN
	RETURN FND_TIMEZONE_PUB.adjust_datetime(L_DATE,L_OLDTIMEZONE,'GMT');

    END CONVERT_TIMEZONE;

  --REPLACING \ , ;
  FUNCTION ESCAPE_CHARACTERS(IPSTRING IN VARCHAR2)

  RETURN VARCHAR2
  AS
	  TEMP	VARCHAR2(2000):=	IPSTRING;
  BEGIN
	  TEMP := REPLACE(TEMP,'\','\\');
	  TEMP := REPLACE(TEMP,',','\,');
	  TEMP := REPLACE(TEMP,';','\;');
	  RETURN TEMP;

  END ESCAPE_CHARACTERS;


  PROCEDURE CALENDAR_GENERATE_ICAL_STRING
    (DTSTART          IN             VARCHAR2
    ,DTEND            IN             VARCHAR2
    ,SUBJECT          IN             VARCHAR2
    ,LOCATION         IN             VARCHAR2
    ,DESCRIPTION      IN             VARCHAR2
    ,DTSTAMP          IN             VARCHAR2
    ,ACCESS           IN             VARCHAR2
    ,UID              IN             VARCHAR2
    ,METHOD 	      IN 	     VARCHAR2
    ,MAIL_TO 	      IN 	     VARCHAR2
    ,ICS              OUT NOCOPY     VARCHAR2
    ,PRIMARY_KEY IN VARCHAR2 DEFAULT NULL
    ) IS
    NEWLINE         VARCHAR2(5);
    L_CALENDAR      VARCHAR2(10000);
  BEGIN

    NEWLINE:=FND_GLOBAL.LOCAL_CHR(10);
    L_CALENDAR := 'BEGIN:VCALENDAR' ||NEWLINE
               || 'VERSION:2.0'|| NEWLINE
               || 'PRODID:-//ORACLE//Ical Builder//EN' || NEWLINE
               || 'METHOD:' || METHOD || NEWLINE
               || 'BEGIN:VEVENT' || NEWLINE
               || 'DTSTART' ||DTSTART || NEWLINE
               || 'DTEND' || DTEND || NEWLINE;

    IF PRIMARY_KEY IS NOT NULL THEN
    L_CALENDAR := L_CALENDAR || 'UID:' || UID|| PRIMARY_KEY|| NEWLINE;
    ELSE
    L_CALENDAR := L_CALENDAR || 'UID:' || UID|| NEWLINE;
    END IF;

    L_CALENDAR := L_CALENDAR || 'DTSTAMP:' || DTSTAMP || NEWLINE;

    IF DESCRIPTION IS NOT NULL THEN
     L_CALENDAR := L_CALENDAR || 'DESCRIPTION:' || ESCAPE_CHARACTERS(DESCRIPTION)|| NEWLINE;
    END IF;

    IF LOCATION IS NOT NULL THEN
      L_CALENDAR := L_CALENDAR || 'LOCATION:' || ESCAPE_CHARACTERS(LOCATION)|| NEWLINE;
    END IF;

    IF MAIL_TO IS NOT NULL THEN
      L_CALENDAR := L_CALENDAR || 'ORGANIZER:MAILTO:' || (MAIL_TO)|| NEWLINE;
    END IF;

    IF SUBJECT IS NOT NULL THEN
      L_CALENDAR := L_CALENDAR || 'SUMMARY:' || ESCAPE_CHARACTERS(SUBJECT)|| NEWLINE;
    END IF;


      L_CALENDAR := L_CALENDAR || 'CLASS:'||ACCESS ||  NEWLINE;


    L_CALENDAR := L_CALENDAR || 'END:VEVENT' || NEWLINE || 'END:VCALENDAR';

    ICS := L_CALENDAR;

  END CALENDAR_GENERATE_ICAL_STRING;


 PROCEDURE CALENDAR_GENERATE_ICAL
    (DTSTARTDATE	IN		 DATE
    ,DTENDDATE 		IN		 DATE
    ,DTSTARTTIME 	IN 		 DATE   DEFAULT NULL
    ,DTENDTIME		IN		 DATE   DEFAULT NULL
    ,SUBJECT            IN             VARCHAR2 DEFAULT NULL
    ,LOCATION           IN             VARCHAR2 DEFAULT NULL
    ,DESCRIPTION        IN             VARCHAR2 DEFAULT NULL
    ,ACCESS             IN             VARCHAR2 DEFAULT 'PUBLIC'
    ,TIMEZONE           IN             VARCHAR2	DEFAULT NULL
    ,METHOD 	        IN 	       VARCHAR2 DEFAULT 'PUBLISH'
    ,IGNORE_TIME_ZONE   IN             BOOLEAN  DEFAULT FALSE
    ,MAIL_TO 	        IN 	       VARCHAR2 DEFAULT NULL
    ,ICAL	        OUT NOCOPY     VARCHAR2
    ,PRIMARY_KEY IN VARCHAR2 DEFAULT NULL
    )
  IS
	STARTDATE VARCHAR2(30);
	ENDDATE VARCHAR2(30);

	IDTSTARTDATE DATE;
	IDTENDDATE DATE;
	IDTSTARTTIME DATE;
	IDTENDTIME DATE;
	TEMP VARCHAR2(30);
	DEFAULT_TIME_ZONE VARCHAR(80);
	DTSTAMP VARCHAR2(30);
	UID VARCHAR2(300);
  BEGIN
	IDTSTARTDATE:=	DTSTARTDATE;
	IDTENDDATE:=	DTENDDATE;
	IDTSTARTTIME:=	DTSTARTTIME;
	IDTENDTIME:=	DTENDTIME;


	IF TIMEZONE IS NOT NULL THEN
		DEFAULT_TIME_ZONE:=TIMEZONE;
	ELSE
		SELECT DBTIMEZONE INTO DEFAULT_TIME_ZONE FROM DUAL;
	END IF;

	IF NOT IGNORE_TIME_ZONE THEN
		-- FOR START TIME
		IF IDTSTARTTIME IS NOT NULL THEN
			TEMP:=TO_CHAR(DTSTARTDATE,DATEICALFORMAT)||' '||TO_CHAR(DTSTARTTIME,TIMEICALFORMAT);
			IDTSTARTDATE:=TO_DATE(TEMP,DATEICALFORMAT||' '||TIMEICALFORMAT);
			IDTSTARTDATE:=CONVERT_TIMEZONE(IDTSTARTDATE,DEFAULT_TIME_ZONE);
			IDTSTARTTIME:=IDTSTARTDATE;

		END IF;

		-- FOR END TIME
		IF IDTENDTIME IS NOT NULL THEN
			TEMP:=TO_CHAR(DTENDDATE,DATEICALFORMAT)||' '||TO_CHAR(DTENDTIME,TIMEICALFORMAT);
			IDTENDDATE:=TO_DATE(TEMP,DATEICALFORMAT||' '||TIMEICALFORMAT);
			IDTENDDATE:=CONVERT_TIMEZONE(IDTENDDATE,DEFAULT_TIME_ZONE);
			IDTENDTIME:=IDTENDDATE;

		END IF;



	END IF;


	IF IDTSTARTTIME IS NULL THEN
		--for events with date only
		STARTDATE:=';VALUE=DATE:' || to_char(IDTSTARTDATE,DATEICALFORMAT);
		UID:='DTS' || to_char(IDTSTARTDATE,DATEICALFORMAT);

	ELSE
		STARTDATE:=':' ||to_char(IDTSTARTDATE,DATEICALFORMAT) ||'T' || to_char(IDTSTARTTIME,TIMEICALFORMAT) ;
		UID:='DTS' ||to_char(IDTSTARTDATE,DATEICALFORMAT)||to_char(IDTSTARTTIME,TIMEICALFORMAT);
		IF  NOT IGNORE_TIME_ZONE THEN
			STARTDATE:=STARTDATE ||'Z';
			UID:=UID||'Z';
		END IF;

	END IF;

	IF IDTENDTIME IS NULL THEN
		--for events with date only. to be considered as day event.
		-- so increment by one
		IDTENDDATE:=IDTENDDATE+1;
		ENDDATE:=';VALUE=DATE:' || to_char(IDTENDDATE,DATEICALFORMAT);
		UID:=UID||'DTE'||to_char(IDTENDDATE,DATEICALFORMAT);
	ELSE
		ENDDATE:=':' || to_char(IDTENDDATE,DATEICALFORMAT) ||'T' ||to_char(IDTENDTIME,TIMEICALFORMAT);
		UID:=UID||'DTE'||to_char(IDTENDDATE,DATEICALFORMAT)||to_char(IDTENDTIME,TIMEICALFORMAT);
		IF  NOT IGNORE_TIME_ZONE THEN
			ENDDATE:=ENDDATE ||'Z';
			UID:=UID||'Z';
		END IF;


	END IF;

	DTSTAMP:=TO_CHAR(SYSDATE,DATEICALFORMAT) ||'T'|| TO_CHAR(SYSDATE,TIMEICALFORMAT) ||'Z';

	--BUILING ICALENDAR STRING
	PER_CALENDAR_UTIL.CALENDAR_GENERATE_ICAL_STRING
          (DTSTART         =>STARTDATE
          ,DTEND           =>ENDDATE
          ,SUBJECT         =>SUBJECT
          ,LOCATION        =>LOCATION
          ,DESCRIPTION     =>DESCRIPTION
          ,DTSTAMP         =>DTSTAMP
          ,ACCESS          =>ACCESS
          ,UID             =>UID
          ,ICS             =>ICAL
	  ,MAIL_TO  	   =>MAIL_TO
          ,METHOD          =>METHOD
          ,PRIMARY_KEY=>PRIMARY_KEY
	);


  END CALENDAR_GENERATE_ICAL;




  PROCEDURE CALENDAR_GENERATE_ICAL
    (DTSTARTDATE	IN		 DATE
    ,DTENDDATE 		IN		 DATE
    ,DTSTARTTIME 	IN 		 VARCHAR2
    ,DTENDTIME		IN		 VARCHAR2
    ,DTTIMEFORMAT       IN 		 VARCHAR2 DEFAULT NULL
    ,SUBJECT            IN             VARCHAR2 DEFAULT NULL
    ,LOCATION           IN             VARCHAR2 DEFAULT NULL
    ,DESCRIPTION        IN             VARCHAR2 DEFAULT NULL
    ,ACCESS            IN              VARCHAR2 DEFAULT 'PUBLIC'
    ,TIMEZONE           IN             VARCHAR2	DEFAULT NULL
    ,METHOD 	        IN 	       VARCHAR2 DEFAULT 'PUBLISH'
    ,IGNORE_TIME_ZONE   IN             BOOLEAN  DEFAULT FALSE
    ,MAIL_TO 	        IN 	       VARCHAR2 DEFAULT NULL
    ,ICAL	        OUT NOCOPY     VARCHAR2
    ,PRIMARY_KEY IN VARCHAR2 DEFAULT NULL
    )
  IS
  IDTSTARTDATE DATE;
  IDTSTARTTIME DATE;
  ISDTSTARTTIME VARCHAR2(30);
  IDTENDDATE DATE;
  IDTENDTIME DATE;
  ISDTENDTIME VARCHAR2(30);
  TEMP VARCHAR2(30);

  BEGIN
	IDTSTARTDATE:=DTSTARTDATE;
	ISDTSTARTTIME:=DTSTARTTIME;
	IDTENDDATE:=DTENDDATE;
	ISDTENDTIME:=DTENDTIME;




	IF DTTIMEFORMAT IS NULL THEN
	-- NO TIME INFO CAN BE USED. SO CALLING DEFAULT ROUTINE WITHOUT TIME INFO
		 IDTSTARTTIME:=NULL;
		 IDTENDTIME:=NULL;
	ELSE
	  -- TRYING TO EXTRACT TIME INFO
	    IF 	ISDTSTARTTIME IS NOT NULL THEN
		TEMP:=TO_CHAR(IDTSTARTDATE,DATEICALFORMAT);
		TEMP:=TEMP || ' ' || ISDTSTARTTIME;
		IDTSTARTDATE:=TO_DATE(TEMP,DATEICALFORMAT||' '||DTTIMEFORMAT);
		IDTSTARTTIME:=IDTSTARTDATE;
	    END IF;
	    IF 	ISDTENDTIME IS NOT NULL THEN
		TEMP:=TO_CHAR(IDTENDDATE,DATEICALFORMAT);
		TEMP:=TEMP || ' ' || ISDTENDTIME;
		IDTENDDATE:=TO_DATE(TEMP,DATEICALFORMAT||' '||DTTIMEFORMAT);
		IDTENDTIME:=IDTENDDATE;

            END IF;
	END IF;

	--CALLING MASTER ROUNTINE
	PER_CALENDAR_UTIL.CALENDAR_GENERATE_ICAL(
        	DTSTARTDATE	=>	IDTSTARTDATE
	    ,DTENDDATE 		=>	IDTENDDATE
	    ,DTSTARTTIME 	=>	IDTSTARTTIME
	    ,DTENDTIME		=>	IDTENDTIME
	    ,SUBJECT            =>	SUBJECT
	    ,LOCATION           =>	LOCATION
	    ,DESCRIPTION        =>	DESCRIPTION
	    ,ACCESS             =>	ACCESS
	    ,TIMEZONE           =>	TIMEZONE
	    ,METHOD 	        =>	METHOD
	    ,IGNORE_TIME_ZONE   =>	IGNORE_TIME_ZONE
	    ,MAIL_TO		=>	MAIL_TO
	    ,ICAL	        =>	ICAL
	    ,PRIMARY_KEY=>PRIMARY_KEY
	);
  END CALENDAR_GENERATE_ICAL;
END PER_CALENDAR_UTIL;

/
