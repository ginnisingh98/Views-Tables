--------------------------------------------------------
--  DDL for Package Body CSD_REPAIR_TYPES_SAR_PKG
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE PACKAGE BODY "APPS"."CSD_REPAIR_TYPES_SAR_PKG" as
/* $Header: csdtsarb.pls 115.2 2003/01/07 03:14:50 takwong noship $ */
-- Start of Comments
-- Package name     : CSD_REPAIR_TYPES_SAR_PKG
-- Purpose          :
-- History          :
-- NOTE             :
-- End of Comments


G_PKG_NAME CONSTANT VARCHAR2(30):= 'CSD_REPAIR_TYPES_SAR_PKG';
G_FILE_NAME CONSTANT VARCHAR2(12) := 'csdtsarb.pls';

PROCEDURE Insert_Row(
          px_REPAIR_TXN_BILLING_TYPE_ID IN OUT NOCOPY NUMBER
         ,p_REPAIR_TYPE_ID    NUMBER
         ,p_TXN_BILLING_TYPE_ID    NUMBER
         ,p_CREATED_BY    NUMBER
         ,p_CREATION_DATE    DATE
         ,p_LAST_UPDATED_BY    NUMBER
         ,p_LAST_UPDATE_DATE    DATE
         ,p_LAST_UPDATE_LOGIN    NUMBER
         ,p_OBJECT_VERSION_NUMBER    NUMBER
)
 IS
   CURSOR C2 IS SELECT CSD_REPAIR_TYPES_SAR_S1.nextval FROM sys.dual;
BEGIN
   If (px_REPAIR_TXN_BILLING_TYPE_ID IS NULL) OR (px_REPAIR_TXN_BILLING_TYPE_ID = FND_API.G_MISS_NUM) then
       OPEN C2;
       FETCH C2 INTO px_REPAIR_TXN_BILLING_TYPE_ID;
       CLOSE C2;
   End If;
   INSERT INTO CSD_REPAIR_TYPES_SAR(
           REPAIR_TXN_BILLING_TYPE_ID
          ,REPAIR_TYPE_ID
          ,TXN_BILLING_TYPE_ID
          ,CREATED_BY
          ,CREATION_DATE
          ,LAST_UPDATED_BY
          ,LAST_UPDATE_DATE
          ,LAST_UPDATE_LOGIN
          ,OBJECT_VERSION_NUMBER
          ) VALUES (
           px_REPAIR_TXN_BILLING_TYPE_ID
          ,decode( p_REPAIR_TYPE_ID, FND_API.G_MISS_NUM, NULL, p_REPAIR_TYPE_ID)
          ,decode( p_TXN_BILLING_TYPE_ID, FND_API.G_MISS_NUM, NULL, p_TXN_BILLING_TYPE_ID)
          ,decode( p_CREATED_BY, FND_API.G_MISS_NUM, NULL, p_CREATED_BY)
          ,decode( p_CREATION_DATE, FND_API.G_MISS_DATE, TO_DATE(NULL), p_CREATION_DATE)
          ,decode( p_LAST_UPDATED_BY, FND_API.G_MISS_NUM, NULL, p_LAST_UPDATED_BY)
          ,decode( p_LAST_UPDATE_DATE, FND_API.G_MISS_DATE, TO_DATE(NULL), p_LAST_UPDATE_DATE)
          ,decode( p_LAST_UPDATE_LOGIN, FND_API.G_MISS_NUM, NULL, p_LAST_UPDATE_LOGIN)
          ,decode( p_OBJECT_VERSION_NUMBER, FND_API.G_MISS_NUM, NULL, p_OBJECT_VERSION_NUMBER)
);
End Insert_Row;

PROCEDURE Update_Row(
          p_REPAIR_TXN_BILLING_TYPE_ID    NUMBER
         ,p_REPAIR_TYPE_ID    NUMBER
         ,p_TXN_BILLING_TYPE_ID    NUMBER
         ,p_CREATED_BY    NUMBER
         ,p_CREATION_DATE    DATE
         ,p_LAST_UPDATED_BY    NUMBER
         ,p_LAST_UPDATE_DATE    DATE
         ,p_LAST_UPDATE_LOGIN    NUMBER
         ,p_OBJECT_VERSION_NUMBER    NUMBER
)
IS
BEGIN
    Update CSD_REPAIR_TYPES_SAR
    SET
        REPAIR_TYPE_ID = decode( p_REPAIR_TYPE_ID, FND_API.G_MISS_NUM, REPAIR_TYPE_ID, p_REPAIR_TYPE_ID)
       ,TXN_BILLING_TYPE_ID = decode( p_TXN_BILLING_TYPE_ID, FND_API.G_MISS_NUM, TXN_BILLING_TYPE_ID, p_TXN_BILLING_TYPE_ID)
       ,CREATED_BY = decode( p_CREATED_BY, FND_API.G_MISS_NUM, CREATED_BY, p_CREATED_BY)
       ,CREATION_DATE = decode( p_CREATION_DATE, FND_API.G_MISS_DATE, CREATION_DATE, p_CREATION_DATE)
       ,LAST_UPDATED_BY = decode( p_LAST_UPDATED_BY, FND_API.G_MISS_NUM, LAST_UPDATED_BY, p_LAST_UPDATED_BY)
       ,LAST_UPDATE_DATE = decode( p_LAST_UPDATE_DATE, FND_API.G_MISS_DATE, LAST_UPDATE_DATE, p_LAST_UPDATE_DATE)
       ,LAST_UPDATE_LOGIN = decode( p_LAST_UPDATE_LOGIN, FND_API.G_MISS_NUM, LAST_UPDATE_LOGIN, p_LAST_UPDATE_LOGIN)
       ,OBJECT_VERSION_NUMBER = decode( p_OBJECT_VERSION_NUMBER, FND_API.G_MISS_NUM, OBJECT_VERSION_NUMBER, p_OBJECT_VERSION_NUMBER)
    where REPAIR_TXN_BILLING_TYPE_ID = p_REPAIR_TXN_BILLING_TYPE_ID;

    If (SQL%NOTFOUND) then
        RAISE NO_DATA_FOUND;
    End If;
END Update_Row;

PROCEDURE Delete_Row(
    p_REPAIR_TXN_BILLING_TYPE_ID  NUMBER)
IS
BEGIN
    DELETE FROM CSD_REPAIR_TYPES_SAR
    WHERE REPAIR_TXN_BILLING_TYPE_ID = p_REPAIR_TXN_BILLING_TYPE_ID;
    If (SQL%NOTFOUND) then
        RAISE NO_DATA_FOUND;
    End If;
END Delete_Row;

PROCEDURE Lock_Row(
          p_REPAIR_TXN_BILLING_TYPE_ID    NUMBER
         ,p_OBJECT_VERSION_NUMBER    NUMBER
)
 IS
   CURSOR C IS
       SELECT object_version_number
       FROM CSD_REPAIR_TYPES_SAR
       WHERE REPAIR_TXN_BILLING_TYPE_ID =  p_REPAIR_TXN_BILLING_TYPE_ID
       FOR UPDATE of REPAIR_TXN_BILLING_TYPE_ID NOWAIT;
   Recinfo C%ROWTYPE;
BEGIN
    OPEN C;
    FETCH C INTO Recinfo;
    If (C%NOTFOUND) then
        CLOSE C;
        FND_MESSAGE.SET_NAME('FND', 'FORM_RECORD_DELETED');
        APP_EXCEPTION.RAISE_EXCEPTION;
    End If;
    CLOSE C;

    IF ( (Recinfo.OBJECT_VERSION_NUMBER = p_OBJECT_VERSION_NUMBER)
            OR (    ( Recinfo.OBJECT_VERSION_NUMBER IS NULL )
                AND (  p_OBJECT_VERSION_NUMBER IS NULL ))
        ) then
        return;
    else
        FND_MESSAGE.SET_NAME('FND', 'FORM_RECORD_CHANGED');
        APP_EXCEPTION.RAISE_EXCEPTION;
    End If;

END Lock_Row;

End CSD_REPAIR_TYPES_SAR_PKG;

/
