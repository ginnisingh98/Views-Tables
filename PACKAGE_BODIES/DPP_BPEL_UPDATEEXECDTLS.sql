--------------------------------------------------------
--  DDL for Package Body DPP_BPEL_UPDATEEXECDTLS
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE PACKAGE BODY "APPS"."DPP_BPEL_UPDATEEXECDTLS" AS
/* $Header: dppvbueb.pls 120.1 2007/12/12 06:03:22 sdasan noship $ */
	FUNCTION PL_TO_SQL4(aPlsqlItem DPP_EXECUTIONDETAILS_PVT.DPP_EXE_UPDATE_REC_TYPE)
 	RETURN DPP_EXECUTIONDETAILS_PVT_DPP_ IS
	aSqlItem DPP_EXECUTIONDETAILS_PVT_DPP_;
	BEGIN
		-- initialize the object
		aSqlItem := DPP_EXECUTIONDETAILS_PVT_DPP_(NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL);
		aSqlItem.TRANSACTION_HEADER_ID := aPlsqlItem.TRANSACTION_HEADER_ID;
		aSqlItem.ORG_ID := aPlsqlItem.ORG_ID;
		aSqlItem.EXECUTION_DETAIL_ID := aPlsqlItem.EXECUTION_DETAIL_ID;
		aSqlItem.OUTPUT_XML := aPlsqlItem.OUTPUT_XML;
		aSqlItem.EXECUTION_STATUS := aPlsqlItem.EXECUTION_STATUS;
		aSqlItem.EXECUTION_END_DATE := aPlsqlItem.EXECUTION_END_DATE;
		aSqlItem.PROVIDER_PROCESS_ID := aPlsqlItem.PROVIDER_PROCESS_ID;
		aSqlItem.PROVIDER_PROCESS_INSTANCE_ID := aPlsqlItem.PROVIDER_PROCESS_INSTANCE_ID;
		aSqlItem.LAST_UPDATED_BY := aPlsqlItem.LAST_UPDATED_BY;
		aSqlItem.LAST_UPDATE_LOGIN := aPlsqlItem.LAST_UPDATE_LOGIN;
		RETURN aSqlItem;
	END PL_TO_SQL4;
	FUNCTION SQL_TO_PL4(aSqlItem DPP_EXECUTIONDETAILS_PVT_DPP_)
	RETURN DPP_EXECUTIONDETAILS_PVT.DPP_EXE_UPDATE_REC_TYPE IS
	aPlsqlItem DPP_EXECUTIONDETAILS_PVT.DPP_EXE_UPDATE_REC_TYPE;
	BEGIN
		aPlsqlItem.TRANSACTION_HEADER_ID := aSqlItem.TRANSACTION_HEADER_ID;
		aPlsqlItem.ORG_ID := aSqlItem.ORG_ID;
		aPlsqlItem.EXECUTION_DETAIL_ID := aSqlItem.EXECUTION_DETAIL_ID;
		aPlsqlItem.OUTPUT_XML := aSqlItem.OUTPUT_XML;
		aPlsqlItem.EXECUTION_STATUS := aSqlItem.EXECUTION_STATUS;
		aPlsqlItem.EXECUTION_END_DATE := aSqlItem.EXECUTION_END_DATE;
		aPlsqlItem.PROVIDER_PROCESS_ID := aSqlItem.PROVIDER_PROCESS_ID;
		aPlsqlItem.PROVIDER_PROCESS_INSTANCE_ID := aSqlItem.PROVIDER_PROCESS_INSTANCE_ID;
		aPlsqlItem.LAST_UPDATED_BY := aSqlItem.LAST_UPDATED_BY;
		aPlsqlItem.LAST_UPDATE_LOGIN := aSqlItem.LAST_UPDATE_LOGIN;
		RETURN aPlsqlItem;
	END SQL_TO_PL4;
	FUNCTION PL_TO_SQL6(aPlsqlItem DPP_EXECUTIONDETAILS_PVT.DPP_STATUS_UPDATE_REC_TYPE)
 	RETURN DPP_EXECUTIONDETAILS_PVT_DPP5 IS
	aSqlItem DPP_EXECUTIONDETAILS_PVT_DPP5;
	BEGIN
		-- initialize the object
		aSqlItem := DPP_EXECUTIONDETAILS_PVT_DPP5(NULL, NULL);
		aSqlItem.TRANSACTION_LINE_ID := aPlsqlItem.TRANSACTION_LINE_ID;
		aSqlItem.UPDATE_STATUS := aPlsqlItem.UPDATE_STATUS;
		RETURN aSqlItem;
	END PL_TO_SQL6;
	FUNCTION SQL_TO_PL6(aSqlItem DPP_EXECUTIONDETAILS_PVT_DPP5)
	RETURN DPP_EXECUTIONDETAILS_PVT.DPP_STATUS_UPDATE_REC_TYPE IS
	aPlsqlItem DPP_EXECUTIONDETAILS_PVT.DPP_STATUS_UPDATE_REC_TYPE;
	BEGIN
		aPlsqlItem.TRANSACTION_LINE_ID := aSqlItem.TRANSACTION_LINE_ID;
		aPlsqlItem.UPDATE_STATUS := aSqlItem.UPDATE_STATUS;
		RETURN aPlsqlItem;
	END SQL_TO_PL6;
	FUNCTION PL_TO_SQL5(aPlsqlItem DPP_EXECUTIONDETAILS_PVT.DPP_STATUS_UPDATE_TBL_TYPE)
 	RETURN DPP_EXECUTIONDETAILS_PVT_DPP4 IS
	aSqlItem DPP_EXECUTIONDETAILS_PVT_DPP4;
	BEGIN
		-- initialize the table
		aSqlItem := DPP_EXECUTIONDETAILS_PVT_DPP4();
		aSqlItem.EXTEND(aPlsqlItem.COUNT);
		FOR I IN aPlsqlItem.FIRST..aPlsqlItem.LAST LOOP
			aSqlItem(I + 1 - aPlsqlItem.FIRST) := PL_TO_SQL6(aPlsqlItem(I));
		END LOOP;
		RETURN aSqlItem;
	END PL_TO_SQL5;
	FUNCTION SQL_TO_PL5(aSqlItem DPP_EXECUTIONDETAILS_PVT_DPP4)
	RETURN DPP_EXECUTIONDETAILS_PVT.DPP_STATUS_UPDATE_TBL_TYPE IS
	aPlsqlItem DPP_EXECUTIONDETAILS_PVT.DPP_STATUS_UPDATE_TBL_TYPE;
	BEGIN
		FOR I IN 1..aSqlItem.COUNT LOOP
			aPlsqlItem(I) := SQL_TO_PL6(aSqlItem(I));
		END LOOP;
		RETURN aPlsqlItem;
	END SQL_TO_PL5;

   PROCEDURE DPP_EXECUTIONDETAILS_PVT$UPDA (P_API_VERSION NUMBER,P_INIT_MSG_LIST VARCHAR2,P_COMMIT VARCHAR2,P_VALIDATION_LEVEL NUMBER,
   X_RETURN_STATUS OUT NOCOPY VARCHAR2,X_MSG_COUNT OUT NOCOPY NUMBER,X_MSG_DATA OUT NOCOPY VARCHAR2,
   P_EXE_UPDATE_REC IN OUT NOCOPY DPP_EXECUTIONDETAILS_PVT_DPP_,P_STATUS_UPDATE_TBL IN OUT NOCOPY DPP_EXECUTIONDETAILS_PVT_DPP4) IS
      P_EXE_UPDATE_REC_ APPS.DPP_EXECUTIONDETAILS_PVT.DPP_EXE_UPDATE_REC_TYPE;
      P_STATUS_UPDATE_TBL_ APPS.DPP_EXECUTIONDETAILS_PVT.DPP_STATUS_UPDATE_TBL_TYPE;
   BEGIN
      P_EXE_UPDATE_REC_ := DPP_BPEL_UPDATEEXECDTLS.SQL_TO_PL4(P_EXE_UPDATE_REC);
      P_STATUS_UPDATE_TBL_ := DPP_BPEL_UPDATEEXECDTLS.SQL_TO_PL5(P_STATUS_UPDATE_TBL);
      APPS.DPP_EXECUTIONDETAILS_PVT.UPDATE_EXECUTIONDETAILS(P_API_VERSION,P_INIT_MSG_LIST,P_COMMIT,P_VALIDATION_LEVEL,X_RETURN_STATUS,X_MSG_COUNT,X_MSG_DATA,P_EXE_UPDATE_REC_,P_STATUS_UPDATE_TBL_);
      P_EXE_UPDATE_REC := DPP_BPEL_UPDATEEXECDTLS.PL_TO_SQL4(P_EXE_UPDATE_REC_);
      P_STATUS_UPDATE_TBL := DPP_BPEL_UPDATEEXECDTLS.PL_TO_SQL5(P_STATUS_UPDATE_TBL_);
   END DPP_EXECUTIONDETAILS_PVT$UPDA;

END DPP_BPEL_UPDATEEXECDTLS;

/
