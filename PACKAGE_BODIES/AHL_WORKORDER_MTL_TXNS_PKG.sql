--------------------------------------------------------
--  DDL for Package Body AHL_WORKORDER_MTL_TXNS_PKG
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE PACKAGE BODY "APPS"."AHL_WORKORDER_MTL_TXNS_PKG" as
/* $Header: AHLLWMTB.pls 120.0 2005/05/26 01:44:29 appldev noship $ */
procedure INSERT_ROW  (
	X_ROWID                     in out nocopy VARCHAR2,
	X_WORKORDER_MTL_TXN_ID	    Out Nocopy	  NUMBER,
	X_OBJECT_VERSION_NUMBER	    in 	  NUMBER,
	X_WORKORDER_OPERATION_ID	in	  NUMBER,
	X_MATERIAL_TRANSACTION_ID   in	  NUMBER,
	X_COLLECTION_ID			    in	  NUMBER,
	X_STATUS_ID				    in 	  NUMBER,
	X_NON_ROUTINE_WORKORDER_ID  IN 	  NUMBER,
	X_ORGANIZATION_ID		    in 	  NUMBER,
	X_INVENTORY_ITEM_ID		    in 	  NUMBER,
	X_REVISION				    in	  VARCHAR2,
	X_LOT_NUMBER			   	in	  VARCHAR2,
	X_SERIAL_NUMBER			  	in	  VARCHAR2,
	X_LOCATOR_ID				in	  NUMBER,
	X_SUBINVENTORY_CODE		    in	  VARCHAR2,
	X_QUANTITY				    in	  NUMBER,
	X_TRANSACTION_TYPE_ID	    in	  NUMBER,
	X_UOM 					    in	  VARCHAR2,
        X_RECEPIENT_ID              IN    NUMBER,
        X_INSTANCE_ID               IN    NUMBER,
        X_TRANSACTION_DATE          IN    DATE,
        X_PRIMARY_UOM_QUANTITY      IN    NUMBER,
	X_ATTRIBUTE_CATEGORY 		in 	  VARCHAR2  ,
	X_ATTRIBUTE1 				in 	  VARCHAR2  ,
	X_ATTRIBUTE2				in 	  VARCHAR2  ,
	X_ATTRIBUTE3 				in 	  VARCHAR2  ,
	X_ATTRIBUTE4 				in 	  VARCHAR2  ,
	X_ATTRIBUTE5 				in 	  VARCHAR2  ,
	X_ATTRIBUTE6 				in 	  VARCHAR2  ,
	X_ATTRIBUTE7 				in 	  VARCHAR2  ,
	X_ATTRIBUTE8 				in 	  VARCHAR2  ,
	X_ATTRIBUTE9 				in 	  VARCHAR2  ,
	X_ATTRIBUTE10 			    in	  VARCHAR2  ,
	X_ATTRIBUTE11 			   	in 	  VARCHAR2  ,
	X_ATTRIBUTE12 			    in 	  VARCHAR2  ,
	X_ATTRIBUTE13 			    in 	  VARCHAR2  ,
	X_ATTRIBUTE14 			    in 	  VARCHAR2  ,
	X_ATTRIBUTE15 			    in 	  VARCHAR2  ,
	X_CREATION_DATE 			in 	  DATE,
	X_CREATED_BY 				in 	  NUMBER,
	X_LAST_UPDATE_DATE 		    in 	  DATE,
	X_LAST_UPDATED_BY 		    in 	  NUMBER,
	X_LAST_UPDATE_LOGIN 		in 	  NUMBER)
is
begin

INSERT INTO AHL_WORKORDER_MTL_TXNS (
   WORKORDER_MTL_TXN_ID,
   OBJECT_VERSION_NUMBER,
   LAST_UPDATE_DATE,
   LAST_UPDATED_BY,
   CREATION_DATE,
   CREATED_BY,
   LAST_UPDATE_LOGIN,
   WORKORDER_OPERATION_ID,
   MATERIAL_TRANSACTION_ID,
   COLLECTION_ID,
   STATUS_ID,
   NON_ROUTINE_WORKORDER_ID,
   ORGANIZATION_ID,
   INVENTORY_ITEM_ID,
   REVISION,
   LOT_NUMBER,
   SERIAL_NUMBER,
   LOCATOR_ID,
   SUBINVENTORY_CODE,
   QUANTITY,
   TRANSACTION_TYPE_ID,
   UOM,
   RECEPIENT_ID,
   INSTANCE_ID,
   TRANSACTION_DATE,
   PRIMARY_UOM_QTY,
   ATTRIBUTE_CATEGORY,
   ATTRIBUTE1,
   ATTRIBUTE2,
   ATTRIBUTE3,
   ATTRIBUTE4,
   ATTRIBUTE5,
   ATTRIBUTE6,
   ATTRIBUTE7,
   ATTRIBUTE8,
   ATTRIBUTE9,
   ATTRIBUTE10,
   ATTRIBUTE11,
   ATTRIBUTE12,
   ATTRIBUTE13,
   ATTRIBUTE14,
   ATTRIBUTE15)
VALUES (
   AHL_WORKORDER_MTL_TXNS_S.NextVal,
   X_OBJECT_VERSION_NUMBER,
   X_LAST_UPDATE_DATE,
   X_LAST_UPDATED_BY,
   X_CREATION_DATE,
   X_CREATED_BY,
   X_LAST_UPDATE_LOGIN,
   X_WORKORDER_OPERATION_ID,
   X_MATERIAL_TRANSACTION_ID,
   X_COLLECTION_ID,
   X_STATUS_ID,
   X_NON_ROUTINE_WORKORDER_ID,
   X_ORGANIZATION_ID,
   X_INVENTORY_ITEM_ID,
   X_REVISION,
   X_LOT_NUMBER,
   X_SERIAL_NUMBER,
   X_LOCATOR_ID,
   X_SUBINVENTORY_CODE,
   X_QUANTITY,
   X_TRANSACTION_TYPE_ID,
   X_UOM,
   X_RECEPIENT_ID,
   X_INSTANCE_ID,
   X_TRANSACTION_DATE,
   X_PRIMARY_UOM_QUANTITY,
   X_ATTRIBUTE_CATEGORY,
   X_ATTRIBUTE1,
   X_ATTRIBUTE2,
   X_ATTRIBUTE3,
   X_ATTRIBUTE4,
   X_ATTRIBUTE5,
   X_ATTRIBUTE6,
   X_ATTRIBUTE7,
   X_ATTRIBUTE8,
   X_ATTRIBUTE9,
   X_ATTRIBUTE10,
   X_ATTRIBUTE11,
   X_ATTRIBUTE12,
   X_ATTRIBUTE13,
   X_ATTRIBUTE14,
   X_ATTRIBUTE15)
   RETURNING WORKORDER_MTL_TXN_ID INTO X_WORKORDER_MTL_TXN_ID;

end INSERT_ROW;

procedure LOCK_ROW (
	X_WORKORDER_MTL_TXN_ID	    in 	  NUMBER,
	X_OBJECT_VERSION_NUMBER in NUMBER,
	X_ATTRIBUTE_CATEGORY in VARCHAR2,
	X_ATTRIBUTE1 in VARCHAR2,
	X_ATTRIBUTE2 in VARCHAR2,
	X_ATTRIBUTE3 in VARCHAR2,
	X_ATTRIBUTE4 in VARCHAR2,
	X_ATTRIBUTE5 in VARCHAR2,
	X_ATTRIBUTE6 in VARCHAR2,
	X_ATTRIBUTE7 in VARCHAR2,
	X_ATTRIBUTE8 in VARCHAR2,
	X_ATTRIBUTE9 in VARCHAR2,
	X_ATTRIBUTE10 in VARCHAR2,
	X_ATTRIBUTE11 in VARCHAR2,
	X_ATTRIBUTE12 in VARCHAR2,
	X_ATTRIBUTE13 in VARCHAR2,
	X_ATTRIBUTE14 in VARCHAR2,
	X_ATTRIBUTE15 in VARCHAR2
	) is
  cursor c is select
      OBJECT_VERSION_NUMBER,
      WORKORDER_MTL_TXN_ID,
      ATTRIBUTE_CATEGORY,
      ATTRIBUTE1,
      ATTRIBUTE2,
      ATTRIBUTE3,
      ATTRIBUTE4,
      ATTRIBUTE5,
      ATTRIBUTE6,
      ATTRIBUTE7,
      ATTRIBUTE8,
      ATTRIBUTE9,
      ATTRIBUTE10,
      ATTRIBUTE11,
      ATTRIBUTE12,
      ATTRIBUTE13,
      ATTRIBUTE14,
      ATTRIBUTE15
    from AHL_WORKORDER_MTL_TXNS
    where WORKORDER_MTL_TXN_ID = X_WORKORDER_MTL_TXN_ID
    for update of WORKORDER_MTL_TXN_ID nowait;
  recinfo c%rowtype;

begin
  open c;
  fetch c into recinfo;
  if (c%notfound) then
    close c;
    fnd_message.set_name('FND', 'FORM_RECORD_DELETED');
    app_exception.raise_exception;
  end if;
  close c;
  if (    (recinfo.OBJECT_VERSION_NUMBER = X_OBJECT_VERSION_NUMBER)
      AND ((recinfo.ATTRIBUTE_CATEGORY = X_ATTRIBUTE_CATEGORY)
           OR ((recinfo.ATTRIBUTE_CATEGORY is null) AND (X_ATTRIBUTE_CATEGORY is null)))
      AND ((recinfo.ATTRIBUTE1 = X_ATTRIBUTE1)
           OR ((recinfo.ATTRIBUTE1 is null) AND (X_ATTRIBUTE1 is null)))
      AND ((recinfo.ATTRIBUTE2 = X_ATTRIBUTE2)
           OR ((recinfo.ATTRIBUTE2 is null) AND (X_ATTRIBUTE2 is null)))
      AND ((recinfo.ATTRIBUTE3 = X_ATTRIBUTE3)
           OR ((recinfo.ATTRIBUTE3 is null) AND (X_ATTRIBUTE3 is null)))
      AND ((recinfo.ATTRIBUTE4 = X_ATTRIBUTE4)
           OR ((recinfo.ATTRIBUTE4 is null) AND (X_ATTRIBUTE4 is null)))
      AND ((recinfo.ATTRIBUTE5 = X_ATTRIBUTE5)
           OR ((recinfo.ATTRIBUTE5 is null) AND (X_ATTRIBUTE5 is null)))
      AND ((recinfo.ATTRIBUTE6 = X_ATTRIBUTE6)
           OR ((recinfo.ATTRIBUTE6 is null) AND (X_ATTRIBUTE6 is null)))
      AND ((recinfo.ATTRIBUTE7 = X_ATTRIBUTE7)
           OR ((recinfo.ATTRIBUTE7 is null) AND (X_ATTRIBUTE7 is null)))
      AND ((recinfo.ATTRIBUTE8 = X_ATTRIBUTE8)
           OR ((recinfo.ATTRIBUTE8 is null) AND (X_ATTRIBUTE8 is null)))
      AND ((recinfo.ATTRIBUTE9 = X_ATTRIBUTE9)
           OR ((recinfo.ATTRIBUTE9 is null) AND (X_ATTRIBUTE9 is null)))
      AND ((recinfo.ATTRIBUTE10 = X_ATTRIBUTE10)
           OR ((recinfo.ATTRIBUTE10 is null) AND (X_ATTRIBUTE10 is null)))
      AND ((recinfo.ATTRIBUTE11 = X_ATTRIBUTE11)
           OR ((recinfo.ATTRIBUTE11 is null) AND (X_ATTRIBUTE11 is null)))
      AND ((recinfo.ATTRIBUTE12 = X_ATTRIBUTE12)
           OR ((recinfo.ATTRIBUTE12 is null) AND (X_ATTRIBUTE12 is null)))
      AND ((recinfo.ATTRIBUTE13 = X_ATTRIBUTE13)
           OR ((recinfo.ATTRIBUTE13 is null) AND (X_ATTRIBUTE13 is null)))
      AND ((recinfo.ATTRIBUTE14 = X_ATTRIBUTE14)
           OR ((recinfo.ATTRIBUTE14 is null) AND (X_ATTRIBUTE14 is null)))
      AND ((recinfo.ATTRIBUTE15 = X_ATTRIBUTE15)
           OR ((recinfo.ATTRIBUTE15 is null) AND (X_ATTRIBUTE15 is null)))
  ) then
    null;
  else
    fnd_message.set_name('FND', 'FORM_RECORD_CHANGED');
    app_exception.raise_exception;
  end if;

  return;
end LOCK_ROW;

procedure UPDATE_ROW (
	X_WORKORDER_MTL_TXN_ID	    in 	  NUMBER,
	X_OBJECT_VERSION_NUMBER	    in 	  NUMBER,
	X_WORKORDER_OPERATION_ID	in	  NUMBER,
	X_MATERIAL_TRANSACTION_ID   in	  NUMBER,
	X_COLLECTION_ID			    in	  NUMBER,
	X_STATUS_ID				    in 	  NUMBER,
	X_NON_ROUTINE_WORKORDER_ID  IN 	  NUMBER,
	X_ORGANIZATION_ID		    in 	  NUMBER,
	X_INVENTORY_ITEM_ID		    in 	  NUMBER,
	X_REVISION				    in	  VARCHAR2,
	X_LOT_NUMBER			   	in	  VARCHAR2,
	X_SERIAL_NUMBER			  	in	  VARCHAR2,
	X_LOCATOR_ID				in	  NUMBER,
	X_SUBINVENTORY_CODE		    in	  VARCHAR2,
	X_QUANTITY				    in	  NUMBER,
	X_TRANSACTION_TYPE_ID	    in	  NUMBER,
	X_UOM 					    in	  VARCHAR2,
	X_ATTRIBUTE_CATEGORY 		in 	  VARCHAR2,
	X_ATTRIBUTE1 				in 	  VARCHAR2,
	X_ATTRIBUTE2				in 	  VARCHAR2,
	X_ATTRIBUTE3 				in 	  VARCHAR2,
	X_ATTRIBUTE4 				in 	  VARCHAR2,
	X_ATTRIBUTE5 				in 	  VARCHAR2,
	X_ATTRIBUTE6 				in 	  VARCHAR2,
	X_ATTRIBUTE7 				in 	  VARCHAR2,
	X_ATTRIBUTE8 				in 	  VARCHAR2,
	X_ATTRIBUTE9 				in 	  VARCHAR2,
	X_ATTRIBUTE10 			    in	  VARCHAR2,
	X_ATTRIBUTE11 			   	in 	  VARCHAR2,
	X_ATTRIBUTE12 			    in 	  VARCHAR2,
	X_ATTRIBUTE13 			    in 	  VARCHAR2,
	X_ATTRIBUTE14 			    in 	  VARCHAR2,
	X_ATTRIBUTE15 			    in 	  VARCHAR2,
	X_CREATION_DATE 			in 	  DATE,
	X_CREATED_BY 				in 	  NUMBER,
	X_LAST_UPDATE_DATE 		    in 	  DATE,
	X_LAST_UPDATED_BY 		    in 	  NUMBER,
	X_LAST_UPDATE_LOGIN 		in 	  NUMBER)
is
begin
  update AHL_WORKORDER_MTL_TXNS set
    OBJECT_VERSION_NUMBER = X_OBJECT_VERSION_NUMBER,
    ATTRIBUTE_CATEGORY = X_ATTRIBUTE_CATEGORY,
    ATTRIBUTE1 = X_ATTRIBUTE1,
    ATTRIBUTE2 = X_ATTRIBUTE2,
    ATTRIBUTE3 = X_ATTRIBUTE3,
    ATTRIBUTE4 = X_ATTRIBUTE4,
    ATTRIBUTE5 = X_ATTRIBUTE5,
    ATTRIBUTE6 = X_ATTRIBUTE6,
    ATTRIBUTE7 = X_ATTRIBUTE7,
    ATTRIBUTE8 = X_ATTRIBUTE8,
    ATTRIBUTE9 = X_ATTRIBUTE9,
    ATTRIBUTE10 = X_ATTRIBUTE10,
    ATTRIBUTE11 = X_ATTRIBUTE11,
    ATTRIBUTE12 = X_ATTRIBUTE12,
    ATTRIBUTE13 = X_ATTRIBUTE13,
    ATTRIBUTE14 = X_ATTRIBUTE14,
    ATTRIBUTE15 = X_ATTRIBUTE15,
    LAST_UPDATE_DATE = X_LAST_UPDATE_DATE,
    LAST_UPDATED_BY = X_LAST_UPDATED_BY,
    LAST_UPDATE_LOGIN = X_LAST_UPDATE_LOGIN
  where WORKORDER_MTL_TXN_ID = X_WORKORDER_MTL_TXN_ID;

  if (sql%notfound) then
    raise no_data_found;
  end if;

end UPDATE_ROW;

procedure DELETE_ROW (
  X_WORKORDER_MTL_TXN_ID in NUMBER
) is
begin

  delete from AHL_WORKORDER_MTL_TXNS
  where WORKORDER_MTL_TXN_ID = X_WORKORDER_MTL_TXN_ID;

  if (sql%notfound) then
    raise no_data_found;
  end if;
end DELETE_ROW;


end AHL_WORKORDER_MTL_TXNS_PKG;

/
