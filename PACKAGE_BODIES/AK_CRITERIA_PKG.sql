--------------------------------------------------------
--  DDL for Package Body AK_CRITERIA_PKG
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE PACKAGE BODY "APPS"."AK_CRITERIA_PKG" as
/* $Header: AKCRTRAB.pls 120.2 2005/09/29 13:59:29 tshort noship $ */
procedure INSERT_ROW (
X_ROWID                        in out NOCOPY VARCHAR2,
X_CUSTOMIZATION_APPLICATION_ID in     NUMBER,
X_CUSTOMIZATION_CODE           in     VARCHAR2,
X_REGION_APPLICATION_ID        in     NUMBER,
X_REGION_CODE                  in     VARCHAR2,
X_ATTRIBUTE_APPLICATION_ID     in     NUMBER,
X_ATTRIBUTE_CODE               in     VARCHAR2,
X_SEQUENCE_NUMBER              in     NUMBER,
X_OPERATION                    in     VARCHAR2,
X_VALUE_VARCHAR2               in     VARCHAR2,
X_VALUE_NUMBER                 in     NUMBER,
X_VALUE_DATE                   in     DATE,
X_CREATED_BY                   in     NUMBER,
X_CREATION_DATE                in     DATE,
X_LAST_UPDATED_BY              in     NUMBER,
X_LAST_UPDATE_DATE             in     DATE,
X_LAST_UPDATE_LOGIN            in     NUMBER,
X_START_DATE_ACTIVE            in     DATE,
X_END_DATE_ACTIVE              in     DATE
) is
cursor C is select ROWID from AK_CRITERIA
where CUSTOMIZATION_APPLICATION_ID = X_CUSTOMIZATION_APPLICATION_ID
and   CUSTOMIZATION_CODE           = X_CUSTOMIZATION_CODE
and   REGION_APPLICATION_ID        = X_REGION_APPLICATION_ID
and   REGION_CODE                  = X_REGION_CODE
and   ATTRIBUTE_APPLICATION_ID     = X_ATTRIBUTE_APPLICATION_ID
and   ATTRIBUTE_CODE               = X_ATTRIBUTE_CODE
and   SEQUENCE_NUMBER              = X_SEQUENCE_NUMBER;
begin
insert into AK_CRITERIA (
CUSTOMIZATION_APPLICATION_ID,
CUSTOMIZATION_CODE,
REGION_APPLICATION_ID,
REGION_CODE,
ATTRIBUTE_APPLICATION_ID,
ATTRIBUTE_CODE,
SEQUENCE_NUMBER,
OPERATION,
VALUE_VARCHAR2,
VALUE_NUMBER,
VALUE_DATE,
CREATED_BY,
CREATION_DATE,
LAST_UPDATED_BY,
LAST_UPDATE_DATE,
LAST_UPDATE_LOGIN,
START_DATE_ACTIVE,
END_DATE_ACTIVE
) values (
X_CUSTOMIZATION_APPLICATION_ID,
X_CUSTOMIZATION_CODE,
X_REGION_APPLICATION_ID,
X_REGION_CODE,
X_ATTRIBUTE_APPLICATION_ID,
X_ATTRIBUTE_CODE,
X_SEQUENCE_NUMBER,
X_OPERATION,
X_VALUE_VARCHAR2,
X_VALUE_NUMBER,
X_VALUE_DATE,
X_CREATED_BY,
X_CREATION_DATE,
X_LAST_UPDATED_BY,
X_LAST_UPDATE_DATE,
X_LAST_UPDATE_LOGIN,
X_START_DATE_ACTIVE,
X_END_DATE_ACTIVE
);

open C;
fetch C into X_ROWID;
if (C%notfound) then
close C;
raise no_data_found;
end if;
close C;
end INSERT_ROW;

procedure LOCK_ROW (
X_CUSTOMIZATION_APPLICATION_ID in     NUMBER,
X_CUSTOMIZATION_CODE           in     VARCHAR2,
X_REGION_APPLICATION_ID        in     NUMBER,
X_REGION_CODE                  in     VARCHAR2,
X_ATTRIBUTE_APPLICATION_ID     in     NUMBER,
X_ATTRIBUTE_CODE               in     VARCHAR2,
X_SEQUENCE_NUMBER              in     NUMBER,
X_OPERATION                    in     VARCHAR2,
X_VALUE_VARCHAR2               in     VARCHAR2,
X_VALUE_NUMBER                 in     NUMBER,
X_VALUE_DATE                   in     DATE,
X_CREATED_BY                   in     NUMBER,
X_CREATION_DATE                in     DATE,
X_LAST_UPDATED_BY              in     NUMBER,
X_LAST_UPDATE_DATE             in     DATE,
X_LAST_UPDATE_LOGIN            in     NUMBER,
X_START_DATE_ACTIVE            in     DATE,
X_END_DATE_ACTIVE              in     DATE
) is
cursor C is select
CUSTOMIZATION_APPLICATION_ID,
CUSTOMIZATION_CODE,
REGION_APPLICATION_ID,
REGION_CODE,
ATTRIBUTE_APPLICATION_ID,
ATTRIBUTE_CODE,
SEQUENCE_NUMBER,
OPERATION,
VALUE_VARCHAR2,
VALUE_NUMBER,
VALUE_DATE
from AK_CRITERIA
where CUSTOMIZATION_APPLICATION_ID = X_CUSTOMIZATION_APPLICATION_ID
and   CUSTOMIZATION_CODE           = X_CUSTOMIZATION_CODE
and   REGION_APPLICATION_ID        = X_REGION_APPLICATION_ID
and   REGION_CODE                  = X_REGION_CODE
and   ATTRIBUTE_APPLICATION_ID     = X_ATTRIBUTE_APPLICATION_ID
and   ATTRIBUTE_CODE               = X_ATTRIBUTE_CODE
and   SEQUENCE_NUMBER              = X_SEQUENCE_NUMBER
for update of CUSTOMIZATION_APPLICATION_ID nowait;
recinfo C%rowtype;
begin
open C;
fetch C into recinfo;
if (C%notfound) then
close C;
fnd_message.set_name('FND', 'FORM_RECORD_DELETED');
app_exception.raise_exception;
end if;
close C;

if (((recinfo.CUSTOMIZATION_APPLICATION_ID = X_CUSTOMIZATION_APPLICATION_ID)
OR ((recinfo.CUSTOMIZATION_APPLICATION_ID is null)
AND (X_CUSTOMIZATION_APPLICATION_ID is null)))
AND ((recinfo.CUSTOMIZATION_CODE = X_CUSTOMIZATION_CODE)
OR ((recinfo.CUSTOMIZATION_CODE is null)
AND (X_CUSTOMIZATION_CODE is null)))
AND ((recinfo.REGION_APPLICATION_ID = X_REGION_APPLICATION_ID)
OR ((recinfo.REGION_APPLICATION_ID is null)
AND (X_REGION_APPLICATION_ID is null)))
AND ((recinfo.REGION_CODE = X_REGION_CODE)
OR ((recinfo.REGION_CODE is null)
AND (X_REGION_CODE is null)))
AND ((recinfo.ATTRIBUTE_APPLICATION_ID = X_ATTRIBUTE_APPLICATION_ID)
OR ((recinfo.ATTRIBUTE_APPLICATION_ID is null)
AND (X_ATTRIBUTE_APPLICATION_ID is null)))
AND ((recinfo.ATTRIBUTE_CODE = X_ATTRIBUTE_CODE)
OR ((recinfo.ATTRIBUTE_CODE is null)
AND (X_ATTRIBUTE_CODE is null)))
AND ((recinfo.SEQUENCE_NUMBER = X_SEQUENCE_NUMBER)
OR ((recinfo.SEQUENCE_NUMBER is null)
AND (X_SEQUENCE_NUMBER is null)))
AND ((recinfo.OPERATION = X_OPERATION)
OR ((recinfo.OPERATION is null)
AND (X_OPERATION is null)))
AND ((recinfo.VALUE_VARCHAR2 = X_VALUE_VARCHAR2)
OR ((recinfo.VALUE_VARCHAR2 is null)
AND (X_VALUE_VARCHAR2 is null)))
AND ((recinfo.VALUE_NUMBER = X_VALUE_NUMBER)
OR ((recinfo.VALUE_NUMBER is null)
AND (X_VALUE_NUMBER is null)))
AND ((recinfo.VALUE_DATE = X_VALUE_DATE)
OR ((recinfo.VALUE_DATE is null)
AND (X_VALUE_DATE is null)))
) then
null;
else
fnd_message.set_name('FND', 'FORM_RECORD_CHANGED');
app_exception.raise_exception;
end if;
return;
end LOCK_ROW;

procedure UPDATE_ROW (
X_CUSTOMIZATION_APPLICATION_ID in NUMBER,
X_CUSTOMIZATION_CODE           in VARCHAR2,
X_REGION_APPLICATION_ID        in NUMBER,
X_REGION_CODE                  in VARCHAR2,
X_ATTRIBUTE_APPLICATION_ID     in NUMBER,
X_ATTRIBUTE_CODE               in VARCHAR2,
X_SEQUENCE_NUMBER              in NUMBER,
X_OPERATION                    in VARCHAR2,
X_VALUE_VARCHAR2               in VARCHAR2,
X_VALUE_NUMBER                 in NUMBER,
X_VALUE_DATE                   in DATE,
X_LAST_UPDATED_BY              in NUMBER,
X_LAST_UPDATE_DATE             in DATE,
X_LAST_UPDATE_LOGIN            in NUMBER,
X_START_DATE_ACTIVE            in DATE,
X_END_DATE_ACTIVE              in DATE
) is
begin
update AK_CRITERIA set
CUSTOMIZATION_APPLICATION_ID = X_CUSTOMIZATION_APPLICATION_ID,
CUSTOMIZATION_CODE           = X_CUSTOMIZATION_CODE,
REGION_APPLICATION_ID        = X_REGION_APPLICATION_ID,
REGION_CODE                  = X_REGION_CODE,
ATTRIBUTE_APPLICATION_ID     = X_ATTRIBUTE_APPLICATION_ID,
ATTRIBUTE_CODE               = X_ATTRIBUTE_CODE,
SEQUENCE_NUMBER              = X_SEQUENCE_NUMBER,
OPERATION                    = X_OPERATION,
VALUE_VARCHAR2               = X_VALUE_VARCHAR2,
VALUE_NUMBER                 = X_VALUE_NUMBER,
VALUE_DATE                   = X_VALUE_DATE,
LAST_UPDATED_BY              = X_LAST_UPDATED_BY,
LAST_UPDATE_DATE             = X_LAST_UPDATE_DATE,
LAST_UPDATE_LOGIN            = X_LAST_UPDATE_LOGIN,
START_DATE_ACTIVE            = X_START_DATE_ACTIVE,
END_DATE_ACTIVE              = X_END_DATE_ACTIVE
where CUSTOMIZATION_APPLICATION_ID = X_CUSTOMIZATION_APPLICATION_ID
and   CUSTOMIZATION_CODE           = X_CUSTOMIZATION_CODE
and   REGION_APPLICATION_ID        = X_REGION_APPLICATION_ID
and   REGION_CODE                  = X_REGION_CODE
and   ATTRIBUTE_APPLICATION_ID     = X_ATTRIBUTE_APPLICATION_ID
and   ATTRIBUTE_CODE               = X_ATTRIBUTE_CODE
and   SEQUENCE_NUMBER              = X_SEQUENCE_NUMBER;

if (sql%notfound) then
raise no_data_found;
end if;
end UPDATE_ROW;

procedure DELETE_ROW (
X_CUSTOMIZATION_APPLICATION_ID in NUMBER,
X_CUSTOMIZATION_CODE           in VARCHAR2,
X_REGION_APPLICATION_ID        in NUMBER,
X_REGION_CODE                  in VARCHAR2,
X_ATTRIBUTE_APPLICATION_ID     in NUMBER,
X_ATTRIBUTE_CODE               in VARCHAR2,
X_SEQUENCE_NUMBER              in NUMBER
) is
begin
delete from AK_CRITERIA
where CUSTOMIZATION_APPLICATION_ID = X_CUSTOMIZATION_APPLICATION_ID
and   CUSTOMIZATION_CODE           = X_CUSTOMIZATION_CODE
and   REGION_APPLICATION_ID        = X_REGION_APPLICATION_ID
and   REGION_CODE                  = X_REGION_CODE
and   ATTRIBUTE_APPLICATION_ID     = X_ATTRIBUTE_APPLICATION_ID
and   ATTRIBUTE_CODE               = X_ATTRIBUTE_CODE
and   SEQUENCE_NUMBER              = X_SEQUENCE_NUMBER;

if (sql%notfound) then
raise no_data_found;
end if;
end DELETE_ROW;

end AK_CRITERIA_PKG;

/
