--------------------------------------------------------
--  DDL for Package Body ONT_UPGRADE_EXCEPTION_REPORT
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE PACKAGE BODY "APPS"."ONT_UPGRADE_EXCEPTION_REPORT" As
/* $Header: OEXNUPUB.pls 120.0 2005/06/01 03:02:11 appldev noship $ */
function BASE_LINE_NUMBER(
   P_PARENT_LINE_ID                      IN NUMBER DEFAULT NULL
,  P_SERVICE_PARENT_LINE_ID              IN NUMBER DEFAULT NULL
,  P_SHIPMENT_SCHEDULE_LINE_ID           IN NUMBER DEFAULT NULL
,  P_LINE_NUMBER                         IN NUMBER DEFAULT NULL
                          )
   return NUMBER
IS
   V_SHIPMENT_SCHEDULE_LINE_ID NUMBER := NULL;  -- default is NULL
   V_PARENT_LINE_ID NUMBER := NULL;  -- default is NULL
   V_LINE_NUMBER NUMBER := NULL;  -- default is NULL
   BASE_LINE_NUMBER NUMBER := NULL;  -- default is NULL
BEGIN
   IF (  P_SERVICE_PARENT_LINE_ID IS NULL ) THEN
       V_SHIPMENT_SCHEDULE_LINE_ID := P_SHIPMENT_SCHEDULE_LINE_ID;
       V_PARENT_LINE_ID := P_PARENT_LINE_ID;
       V_LINE_NUMBER := P_LINE_NUMBER;
   ELSE
         SELECT SHIPMENT_SCHEDULE_LINE_ID,
                PARENT_LINE_ID,
                LINE_NUMBER
         INTO   V_SHIPMENT_SCHEDULE_LINE_ID,
                V_PARENT_LINE_ID,
                V_LINE_NUMBER
         FROM   SO_LINES_ALL
         WHERE  LINE_ID = P_SERVICE_PARENT_LINE_ID;
   END IF;
   IF (V_SHIPMENT_SCHEDULE_LINE_ID IS NULL) THEN
        IF (V_PARENT_LINE_ID IS NULL) THEN
                BASE_LINE_NUMBER := V_LINE_NUMBER;
        ELSE
          SELECT  LINE_NUMBER
          INTO    BASE_LINE_NUMBER
          FROM    SO_LINES_ALL
          WHERE   LINE_ID = V_PARENT_LINE_ID;
        END IF;
   ELSE
     SELECT    LINE_NUMBER
     INTO BASE_LINE_NUMBER
     FROM SO_LINES_ALL
     WHERE     LINE_ID = V_SHIPMENT_SCHEDULE_LINE_ID;
   END IF;

   RETURN(BASE_LINE_NUMBER);

EXCEPTION
   WHEN NO_DATA_FOUND THEN
      RETURN( NULL );
END BASE_LINE_NUMBER;


function SHIPMENT_SCHEDULE_NUMBER(
   P_PARENT_LINE_ID                       IN NUMBER DEFAULT NULL
,  P_SERVICE_PARENT_LINE_ID               IN NUMBER DEFAULT NULL
,  P_SHIPMENT_SCHEDULE_LINE_ID            IN NUMBER DEFAULT NULL
,  P_LINE_NUMBER                          IN NUMBER DEFAULT NULL
                          )
   return NUMBER
IS
   V_SHIPMENT_SCHEDULE_LINE_ID NUMBER := NULL;  -- default is NULL
   V_PARENT_LINE_ID NUMBER := NULL;  -- default is NULL
   V_LINE_NUMBER NUMBER := NULL;  -- default is NULL
   SCHEDULE_LINE_NUMBER NUMBER := NULL;  -- default is NULL
BEGIN
   IF (  P_SERVICE_PARENT_LINE_ID IS NULL ) THEN
       V_SHIPMENT_SCHEDULE_LINE_ID := P_SHIPMENT_SCHEDULE_LINE_ID;
       V_PARENT_LINE_ID := P_PARENT_LINE_ID;
       V_LINE_NUMBER := P_LINE_NUMBER;
   ELSE
         SELECT SHIPMENT_SCHEDULE_LINE_ID,
         PARENT_LINE_ID,
         LINE_NUMBER
         INTO   V_SHIPMENT_SCHEDULE_LINE_ID,
         V_PARENT_LINE_ID,
         V_LINE_NUMBER
         FROM   SO_LINES_ALL
         WHERE  LINE_ID = P_SERVICE_PARENT_LINE_ID;
   END IF;
   IF (V_SHIPMENT_SCHEDULE_LINE_ID IS NOT NULL) THEN
     IF (V_PARENT_LINE_ID IS NULL) THEN
          SCHEDULE_LINE_NUMBER := V_LINE_NUMBER;
     ELSE
          SELECT    LINE_NUMBER
          INTO SCHEDULE_LINE_NUMBER
          FROM SO_LINES_ALL
          WHERE     LINE_ID = V_PARENT_LINE_ID;
     END IF;
   END IF;

   RETURN(SCHEDULE_LINE_NUMBER);

EXCEPTION
  WHEN NO_DATA_FOUND THEN
    RETURN( NULL );
END SHIPMENT_SCHEDULE_NUMBER;


function OPTION_LINE_NUMBER(
   P_PARENT_LINE_ID                       IN NUMBER DEFAULT NULL
,  P_SERVICE_PARENT_LINE_ID               IN NUMBER DEFAULT NULL
,  P_SHIPMENT_SCHEDULE_LINE_ID            IN NUMBER DEFAULT NULL
,  P_LINE_NUMBER                          IN NUMBER DEFAULT NULL
                          )
   return NUMBER
IS
   V_SHIPMENT_SCHEDULE_LINE_ID NUMBER := NULL;  -- default is NULL
   V_PARENT_LINE_ID NUMBER := NULL;  -- default is NULL
   V_LINE_NUMBER NUMBER := NULL;  -- default is NULL
   OPTION_LINE_NUMBER NUMBER := NULL;  -- default is NULL
BEGIN
   IF (  P_SERVICE_PARENT_LINE_ID IS NULL ) THEN
       V_SHIPMENT_SCHEDULE_LINE_ID := P_SHIPMENT_SCHEDULE_LINE_ID;
       V_PARENT_LINE_ID := P_PARENT_LINE_ID;
       V_LINE_NUMBER := P_LINE_NUMBER;
   ELSE
         SELECT SHIPMENT_SCHEDULE_LINE_ID,
                PARENT_LINE_ID,
                LINE_NUMBER
         INTO   V_SHIPMENT_SCHEDULE_LINE_ID,
                V_PARENT_LINE_ID,
                V_LINE_NUMBER
         FROM   SO_LINES_ALL
         WHERE  LINE_ID = P_SERVICE_PARENT_LINE_ID;
   END IF;
   IF (V_SHIPMENT_SCHEDULE_LINE_ID IS NULL) THEN
        IF (V_PARENT_LINE_ID IS NOT NULL) THEN
                OPTION_LINE_NUMBER := V_LINE_NUMBER;
        END IF;
   ELSE
        IF (V_SHIPMENT_SCHEDULE_LINE_ID IS NOT NULL) THEN
           IF (V_PARENT_LINE_ID IS NOT NULL) THEN
                OPTION_LINE_NUMBER := V_LINE_NUMBER;
           END IF;
        END IF;
   END IF;

   RETURN(OPTION_LINE_NUMBER);

EXCEPTION
  WHEN NO_DATA_FOUND THEN
     RETURN( NULL );
END OPTION_LINE_NUMBER;

END ONT_UPGRADE_EXCEPTION_REPORT;

/
