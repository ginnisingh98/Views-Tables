--------------------------------------------------------
--  DDL for Package Body PER_PERSACTR_XMLP_PKG
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE PACKAGE BODY "APPS"."PER_PERSACTR_XMLP_PKG" AS
/* $Header: PERSACTRB.pls 120.2 2008/03/11 10:23:38 vjaganat noship $ */
  FUNCTION BEFOREREPORT RETURN BOOLEAN IS

   x boolean ;
  BEGIN
   x:= P_BUSINESS_GROUP_IDVALIDTRIGGE;
    P_CONC_REQUEST_ID := FND_GLOBAL.CONC_REQUEST_ID;
    INSERT INTO FND_SESSIONS
      (SESSION_ID
      ,EFFECTIVE_DATE)
    VALUES   (USERENV('SESSIONID')
      ,NVL(LP_DATE
         ,SYSDATE));
    RETURN (TRUE);
  END BEFOREREPORT;

  FUNCTION AFTERREPORT RETURN BOOLEAN IS
  BEGIN
    DELETE FROM FND_SESSIONS
     WHERE SESSION_ID = USERENV('SESSIONID');
    RETURN (TRUE);
  END AFTERREPORT;

  FUNCTION CF_BUSINESS_GROUPFORMULA RETURN VARCHAR2 IS
    V_BUSINESS_GROUP HR_ALL_ORGANIZATION_UNITS.NAME%TYPE;
  BEGIN
    V_BUSINESS_GROUP := HR_REPORTS.GET_BUSINESS_GROUP(P_BUSINESS_GROUP_ID);
    RETURN V_BUSINESS_GROUP;
  END CF_BUSINESS_GROUPFORMULA;

  FUNCTION CF_LEGISLATION_CODEFORMULA RETURN VARCHAR2 IS
    V_LEGISLATION_CODE HR_ORGANIZATION_INFORMATION.ORG_INFORMATION9%TYPE := NULL;
    CURSOR LEGISLATION_CODE(C_BUSINESS_GROUP_ID IN HR_ORGANIZATION_INFORMATION.ORGANIZATION_ID%TYPE) IS
      SELECT
        ORG_INFORMATION9
      FROM
        HR_ORGANIZATION_INFORMATION
      WHERE ORGANIZATION_ID = C_BUSINESS_GROUP_ID
        AND ORG_INFORMATION9 is not null
        AND ORG_INFORMATION_CONTEXT = 'Business Group Information';
  BEGIN
    OPEN LEGISLATION_CODE(P_BUSINESS_GROUP_ID);
    FETCH LEGISLATION_CODE
     INTO
       V_LEGISLATION_CODE;
    CLOSE LEGISLATION_CODE;
    RETURN V_LEGISLATION_CODE;
  END CF_LEGISLATION_CODEFORMULA;

  FUNCTION CF_CURRENCY_FORMAT_MASKFORMULA(CF_LEGISLATION_CODE IN VARCHAR2) RETURN VARCHAR2 IS
    V_CURRENCY_CODE FND_CURRENCIES.CURRENCY_CODE%TYPE;
    V_FORMAT_MASK VARCHAR2(100) := NULL;
    V_FIELD_LENGTH NUMBER(3) := 14;
    CURSOR CURRENCY_FORMAT_MASK(C_TERRITORY_CODE IN FND_CURRENCIES.ISSUING_TERRITORY_CODE%TYPE) IS
      SELECT
        CURRENCY_CODE
      FROM
        FND_CURRENCIES
      WHERE ISSUING_TERRITORY_CODE = C_TERRITORY_CODE;
  BEGIN
    OPEN CURRENCY_FORMAT_MASK(CF_LEGISLATION_CODE);
    FETCH CURRENCY_FORMAT_MASK
     INTO
       V_CURRENCY_CODE;
    CLOSE CURRENCY_FORMAT_MASK;
    V_FORMAT_MASK := FND_CURRENCY.GET_FORMAT_MASK(V_CURRENCY_CODE
                                                 ,V_FIELD_LENGTH);
    RETURN V_FORMAT_MASK;
  END CF_CURRENCY_FORMAT_MASKFORMULA;

  PROCEDURE SET_CURRENCY_FORMAT_MASK IS
  BEGIN
    NULL;
  END SET_CURRENCY_FORMAT_MASK;

  FUNCTION P_BUSINESS_GROUP_IDVALIDTRIGGE RETURN BOOLEAN IS
  BEGIN
    RETURN (TRUE);
  END P_BUSINESS_GROUP_IDVALIDTRIGGE;

  FUNCTION CF_1FORMULA RETURN NUMBER IS
  BEGIN
    CP_1 := 1;
    RETURN (NULL);
  END CF_1FORMULA;

  FUNCTION CF_ORGFORMULA RETURN CHAR IS
    L_NAME VARCHAR2(80);
  BEGIN
    SELECT
      NAME
    INTO
      L_NAME
    FROM
      HR_ORGANIZATION_UNITS
    WHERE ORGANIZATION_ID = P_ORG_ID;
    RETURN (L_NAME);
  EXCEPTION
    WHEN OTHERS THEN
      RETURN NULL;
  END CF_ORGFORMULA;

  FUNCTION CF_CON_TYPEFORMULA RETURN CHAR IS
    L_TYPE VARCHAR2(80);
  BEGIN
    SELECT
      MEANING
    INTO
      L_TYPE
    FROM
      HR_LOOKUPS
    WHERE LOOKUP_TYPE = 'CONTRACT_TYPE'
      AND LOOKUP_CODE = P_CON_TYPE;
    RETURN (L_TYPE);
  EXCEPTION
    WHEN OTHERS THEN
      RETURN (NULL);
  END CF_CON_TYPEFORMULA;

  FUNCTION CF_DURATION_UNITSFORMULA RETURN CHAR IS
    L_UNIT VARCHAR2(80);
  BEGIN
    SELECT
      MEANING
    INTO
      L_UNIT
    FROM
      HR_LOOKUPS
    WHERE LOOKUP_TYPE = 'QUALIFYING_UNITS'
      AND LOOKUP_CODE = P_EXP_UNITS;
    RETURN (L_UNIT);
  EXCEPTION
    WHEN OTHERS THEN
      RETURN (NULL);
  END CF_DURATION_UNITSFORMULA;

  FUNCTION AFTERPFORM RETURN BOOLEAN IS
    L_PARENT_ID NUMBER;
    L_ERR NUMBER := 0;
  BEGIN
    L_TYPE_CONDITION := ' and hr1.lookup_code = DECODE(:p_con_type,NULL,hr1.lookup_code,:p_con_type) ';
    L_STATUS_CONDITION := ' and hr2.lookup_code = DECODE(:p_emp_status,NULL,hr2.lookup_code,:p_emp_status) ';
    IF P_DATE IS NULL THEN
      LP_DATE := TRUNC(SYSDATE);
    ELSE
      LP_DATE:=to_date(P_DATE,'YYYY/MM/DD HH24:MI:SS');
    END IF;

    --LP_DATE:=to_date(substr(P_DATE,1,10),'DD-MON-YYYY');

    IF P_ORG_STRUCTURE_VERSION_ID IS NOT NULL THEN
      IF P_ORG_ID IS NULL THEN
        BEGIN
          SELECT
            DISTINCT
            POSE.ORGANIZATION_ID_PARENT
          INTO
            L_PARENT_ID
          FROM
            PER_ORG_STRUCTURE_ELEMENTS POSE
          WHERE POSE.ORG_STRUCTURE_VERSION_ID = P_ORG_STRUCTURE_VERSION_ID
            AND POSE.ORGANIZATION_ID_PARENT not in (
            SELECT
              POSE1.ORGANIZATION_ID_CHILD
            FROM
              PER_ORG_STRUCTURE_ELEMENTS POSE1
            WHERE POSE1.ORG_STRUCTURE_VERSION_ID = P_ORG_STRUCTURE_VERSION_ID );
        EXCEPTION
          WHEN OTHERS THEN
            L_ERR := 1;
        END;
      END IF;
      IF L_ERR = 0 THEN
        L_ORG_CONDITION := ' and org.organization_id in ' || '(select to_char(pose.organization_id_child) '
	|| 'from per_org_structure_elements pose ' || 'connect by pose.organization_id_parent = '
	|| 'prior pose.organization_id_child ' || 'and pose.org_structure_version_id = '
	|| TO_CHAR(P_ORG_STRUCTURE_VERSION_ID) || ' start with pose.organization_id_parent = '
	|| TO_CHAR(NVL(P_ORG_ID
                                      ,L_PARENT_ID)) || ' and pose.org_structure_version_id = '
				      || TO_CHAR(P_ORG_STRUCTURE_VERSION_ID) || ' union select '
				      || '''' || TO_CHAR(NVL(P_ORG_ID
                                      ,L_PARENT_ID)) || '''' || ' from sys.dual) ';
      ELSE
        L_ORG_CONDITION := 'and 1 = 2';
      END IF;
    ELSIF P_ORG_ID IS NOT NULL THEN
      L_ORG_CONDITION := ' and org.organization_id in ' || '(select ' || '''' || TO_CHAR(P_ORG_ID) || '''' || ' from sys.dual)';
    ELSE
      L_ORG_CONDITION := 'and 1 = 1';
    END IF;
    RETURN (TRUE);
  END AFTERPFORM;

  FUNCTION CF_EMP_STATUSFORMULA RETURN CHAR IS
    L_STATUS VARCHAR2(80);
  BEGIN
    SELECT
      MEANING
    INTO
      L_STATUS
    FROM
      HR_LOOKUPS
    WHERE LOOKUP_TYPE = 'SA_EMPLOYMENT_STATUS'
      AND LOOKUP_CODE = P_EMP_STATUS;
    RETURN (L_STATUS);
  EXCEPTION
    WHEN OTHERS THEN
      RETURN (NULL);
  END CF_EMP_STATUSFORMULA;

  FUNCTION CF_VERSIONFORMULA RETURN NUMBER IS
    L_NUMBER NUMBER;
  BEGIN
    SELECT
      VERSION_NUMBER
    INTO
      L_NUMBER
    FROM
      PER_ORG_STRUCTURE_VERSIONS
    WHERE ORG_STRUCTURE_VERSION_ID = P_ORG_STRUCTURE_VERSION_ID;
    RETURN (L_NUMBER);
  EXCEPTION
    WHEN OTHERS THEN
      RETURN NULL;
  END CF_VERSIONFORMULA;

  FUNCTION CF_HIERARCHYFORMULA RETURN CHAR IS
    L_NAME VARCHAR2(80);
  BEGIN
    SELECT
      NAME
    INTO
      L_NAME
    FROM
      PER_ORGANIZATION_STRUCTURES
    WHERE ORGANIZATION_STRUCTURE_ID = P_ORG_STRUCTURE_ID;
    RETURN (L_NAME);
  EXCEPTION
    WHEN OTHERS THEN
      RETURN NULL;
  END CF_HIERARCHYFORMULA;

  FUNCTION CP_1_P RETURN NUMBER IS
  BEGIN
    RETURN CP_1;
  END CP_1_P;

END PER_PERSACTR_XMLP_PKG;

/
