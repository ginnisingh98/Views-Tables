--------------------------------------------------------
--  DDL for Package Body PA_PACCGLER_XMLP_PKG
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE PACKAGE BODY "APPS"."PA_PACCGLER_XMLP_PKG" AS
/* $Header: PACCGLERB.pls 120.0 2008/01/02 10:52:22 krreddy noship $ */
  FUNCTION BEFOREREPORT RETURN BOOLEAN IS
  BEGIN
    P_CONC_REQUEST_ID := FND_GLOBAL.CONC_REQUEST_ID;
    /*SRW.USER_EXIT('FND SRWINIT')*/NULL;
    /*SRW.USER_EXIT('FND GETPROFILE
                                       NAME="USER_ID"
                                       FIELD=":P_user_id"
                                       PRINT_ERROR="N"')*/NULL;
    P_DEBUG_MODE := FND_PROFILE.VALUE('PA_DEBUG_MODE');
    SELECT
      ORG_ID,
      SET_OF_BOOKS_ID
    INTO P_ORG_ID,P_SOB_ID
    FROM
      PA_IMPLEMENTATIONS;
    SELECT
      START_DATE,
      END_DATE
    INTO P_FIRST_DATE,P_LAST_DATE
    FROM
      GL_PERIOD_STATUSES
    WHERE APPLICATION_ID = 101
      AND SET_OF_BOOKS_ID = P_SOB_ID
      AND PERIOD_NAME = P_GL_PERIOD;
    GET_COMPANY_NAME;
    IF P_MODE = 'S' THEN
      PA_XLA_SWEEP_TXN_PKG.SWEEP_TXNS(P_ORG_ID => P_ORG_ID
                                     ,P_GL_PERIOD => P_GL_PERIOD
                                     ,P_TRAN_TYPE => P_TRAN_TYPE);
    END IF;
    RETURN (TRUE);
  END BEFOREREPORT;

  FUNCTION AFTERREPORT RETURN BOOLEAN IS
  BEGIN
    /*SRW.USER_EXIT('FND SRWEXIT')*/NULL;
    RETURN (TRUE);
  END AFTERREPORT;

  PROCEDURE GET_COMPANY_NAME IS
    L_NAME GL_SETS_OF_BOOKS.NAME%TYPE;
  BEGIN
    SELECT
      GL.NAME
    INTO L_NAME
    FROM
      GL_SETS_OF_BOOKS GL,
      PA_IMPLEMENTATIONS PI
    WHERE GL.SET_OF_BOOKS_ID = PI.SET_OF_BOOKS_ID;
    C_COMPANY_NAME_HEADER := L_NAME;
  EXCEPTION
    WHEN OTHERS THEN
      NULL;
  END GET_COMPANY_NAME;

  FUNCTION CF_REPORT_DATEFORMULA RETURN DATE IS
  BEGIN
    RETURN (SYSDATE);
  END CF_REPORT_DATEFORMULA;

  FUNCTION CF_TRAN_TYPEFORMULA RETURN CHAR IS
    L_TRAN_TYPE VARCHAR2(20);
  BEGIN
    IF P_TRAN_TYPE IS NOT NULL THEN
      SELECT
        MEANING
      INTO L_TRAN_TYPE
      FROM
        PA_LOOKUPS
      WHERE LOOKUP_TYPE = 'PROJECT PROCESS ENTITIES'
        AND LOOKUP_CODE = P_TRAN_TYPE;
    ELSE
      L_TRAN_TYPE := NULL;
    END IF;
    RETURN (L_TRAN_TYPE);
  END CF_TRAN_TYPEFORMULA;

  FUNCTION C_LEGAL_ENTITYFORMULA RETURN CHAR IS
    L_LEGAL_ENTITY_NAME VARCHAR2(240);
  BEGIN
    SELECT
      NAME
    INTO L_LEGAL_ENTITY_NAME
    FROM
      XLE_ENTITY_PROFILES XEP,
      HR_ORGANIZATION_INFORMATION HRI
    WHERE LEGAL_ENTITY_ID = HRI.ORG_INFORMATION2
      AND ORGANIZATION_ID = P_ORG_ID
      AND ORG_INFORMATION_CONTEXT = 'Operating Unit Information';
    RETURN (L_LEGAL_ENTITY_NAME);
  EXCEPTION
    WHEN OTHERS THEN
      RETURN (NULL);
  END C_LEGAL_ENTITYFORMULA;

  FUNCTION C_CURR_CODEFORMULA RETURN CHAR IS
    L_CURR_CODE VARCHAR2(100);
  BEGIN
    SELECT
      GL.CURRENCY_CODE
    INTO L_CURR_CODE
    FROM
      GL_SETS_OF_BOOKS GL,
      PA_IMPLEMENTATIONS IMP
    WHERE IMP.SET_OF_BOOKS_ID = GL.SET_OF_BOOKS_ID;
    RETURN (L_CURR_CODE);
  EXCEPTION
    WHEN NO_DATA_FOUND THEN
      RETURN (NULL);
  END C_CURR_CODEFORMULA;

  FUNCTION C_COMPANY_NAME_HEADER_P RETURN VARCHAR2 IS
  BEGIN
    RETURN C_COMPANY_NAME_HEADER;
  END C_COMPANY_NAME_HEADER_P;

END PA_PACCGLER_XMLP_PKG;


/
