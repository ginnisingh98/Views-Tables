--------------------------------------------------------
--  DDL for Package Body JTF_TASK_AUDITS_PKG
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE PACKAGE BODY "APPS"."JTF_TASK_AUDITS_PKG" as
/* $Header: jtftktub.pls 115.9 2000/02/28 22:54:23 pkm ship      $ */
procedure INSERT_ROW (
  X_ROWID in out VARCHAR2,
  X_TASK_AUDIT_ID in NUMBER,
  X_NEW_NOTIFICATION_PERIOD in NUMBER,
  X_OLD_NOTIFICATION_PERIOD_UOM in VARCHAR2,
  X_NEW_NOTIFICATION_PERIOD_UOM in VARCHAR2,
  X_OLD_PARENT_TASK_ID in NUMBER,
  X_NEW_PARENT_TASK_ID in NUMBER,
  X_OLD_RECURRENCE_RULE_ID in NUMBER,
  X_NEW_RECURRENCE_RULE_ID in NUMBER,
  X_PALM_CHANGED_FLAG in VARCHAR2,
  X_WINCE_CHANGED_FLAG in VARCHAR2,
  X_LAPTOP_CHANGED_FLAG in VARCHAR2,
  X_DEVICE1_CHANGED_FLAG in VARCHAR2,
  X_DEVICE2_CHANGED_FLAG in VARCHAR2,
  X_DEVICE3_CHANGED_FLAG in VARCHAR2,
  X_OLD_CURRENCY_CODE in VARCHAR2,
  X_NEW_CURRENCY_CODE in VARCHAR2,
  X_OLD_COSTS in NUMBER,
  X_NEW_COSTS in NUMBER,
  X_OLD_ORG_ID in NUMBER,
  X_NEW_ORG_ID in NUMBER,
  X_TASK_ID in NUMBER,
  X_OLD_TASK_TYPE_ID in NUMBER,
  X_NEW_TASK_TYPE_ID in NUMBER,
  X_OLD_TASK_STATUS_ID in NUMBER,
  X_NEW_TASK_STATUS_ID in NUMBER,
  X_OLD_TASK_PRIORITY_ID in NUMBER,
  X_NEW_TASK_PRIORITY_ID in NUMBER,
  X_OLD_OWNER_ID in NUMBER,
  X_NEW_OWNER_ID in NUMBER,
  X_OLD_OWNER_TYPE_CODE in VARCHAR2,
  X_NEW_OWNER_TYPE_CODE in VARCHAR2,
  X_OLD_ASSIGNED_BY_ID in NUMBER,
  X_NEW_ASSIGNED_BY_ID in NUMBER,
  X_OLD_CUST_ACCOUNT_ID in NUMBER,
  X_NEW_CUST_ACCOUNT_ID in NUMBER,
  X_OLD_CUSTOMER_ID in NUMBER,
  X_NEW_CUSTOMER_ID in NUMBER,
  X_OLD_ADDRESS_ID in NUMBER,
  X_NEW_ADDRESS_ID in NUMBER,
  X_OLD_PLANNED_START_DATE in DATE,
  X_NEW_PLANNED_START_DATE in DATE,
  X_OLD_PLANNED_END_DATE in DATE,
  X_NEW_PLANNED_END_DATE in DATE,
  X_OLD_SCHEDULED_START_DATE in DATE,
  X_NEW_SCHEDULED_START_DATE in DATE,
  X_OLD_SCHEDULED_END_DATE in DATE,
  X_NEW_SCHEDULED_END_DATE in DATE,
  X_OLD_ACTUAL_START_DATE in DATE,
  X_NEW_ACTUAL_START_DATE in DATE,
  X_OLD_ACTUAL_END_DATE in DATE,
  X_NEW_ACTUAL_END_DATE in DATE,
  X_OLD_SOURCE_OBJECT_TYPE_CODE in VARCHAR2,
  X_NEW_SOURCE_OBJECT_TYPE_CODE in VARCHAR2,
  X_OLD_TIMEZONE_ID in NUMBER,
  X_NEW_TIMEZONE_ID in NUMBER,
  X_OLD_SOURCE_OBJECT_ID in NUMBER,
  X_NEW_SOURCE_OBJECT_ID in NUMBER,
  X_OLD_SOURCE_OBJECT_NAME in VARCHAR2,
  X_NEW_SOURCE_OBJECT_NAME in VARCHAR2,
  X_OLD_DURATION in NUMBER,
  X_NEW_DURATION in NUMBER,
  X_OLD_DURATION_UOM in VARCHAR2,
  X_NEW_DURATION_UOM in VARCHAR2,
  X_OLD_PLANNED_EFFORT in NUMBER,
  X_NEW_PLANNED_EFFORT in NUMBER,
  X_OLD_PLANNED_EFFORT_UOM in VARCHAR2,
  X_NEW_PLANNED_EFFORT_UOM in VARCHAR2,
  X_OLD_ACTUAL_EFFORT in NUMBER,
  X_NEW_ACTUAL_EFFORT in NUMBER,
  X_OLD_ACTUAL_EFFORT_UOM in VARCHAR2,
  X_NEW_ACTUAL_EFFORT_UOM in VARCHAR2,
  X_OLD_PERCENTAGE_COMPLETE in NUMBER,
  X_NEW_PERCENTAGE_COMPLETE in NUMBER,
  X_OLD_REASON_CODE in VARCHAR2,
  X_NEW_REASON_CODE in VARCHAR2,
  X_PRIVATE_CHANGED_FLAG in VARCHAR2,
  X_PUBLISH_CHANGED_FLAG in VARCHAR2,
  X_RESTRICT_CLOSURE_CHANGE_FLAG in VARCHAR2,
  X_MULTI_BOOKED_CHANGED_FLAG in VARCHAR2,
  X_MILESTONE_CHANGED_FLAG in VARCHAR2,
  X_HOLIDAY_CHANGED_FLAG in VARCHAR2,
  X_BILLABLE_CHANGED_FLAG in VARCHAR2,
  X_OLD_BOUND_MODE_CODE in VARCHAR2,
  X_NEW_BOUND_MODE_CODE in VARCHAR2,
  X_SOFT_BOUND_CHANGED_FLAG in VARCHAR2,
  X_OLD_WORKFLOW_PROCESS_ID in NUMBER,
  X_NEW_WORKFLOW_PROCESS_ID in NUMBER,
  X_NOTIFICATION_CHANGED_FLAG in VARCHAR2,
  X_OLD_NOTIFICATION_PERIOD in NUMBER,
  X_OLD_TASK_NAME in VARCHAR2,
  X_NEW_TASK_NAME in VARCHAR2,
  X_OLD_DESCRIPTION in VARCHAR2,
  X_NEW_DESCRIPTION in VARCHAR2,
  X_CREATION_DATE in DATE,
  X_CREATED_BY in NUMBER,
  X_LAST_UPDATE_DATE in DATE,
  X_LAST_UPDATED_BY in NUMBER,
  X_LAST_UPDATE_LOGIN in NUMBER,
  X_OBJECT_VERSION_NUMBER in NUMBER,
  X_OLD_OWNER_TERRITORY_ID in NUMBER,
  X_NEW_OWNER_TERRITORY_ID in NUMBER,
  X_NEW_ESCALATION_LEVEL in VARCHAR2,
  X_OLD_ESCALATION_LEVEL in VARCHAR2
) is
  cursor C is select ROWID from JTF_TASK_AUDITS_B
    where TASK_AUDIT_ID = X_TASK_AUDIT_ID
    ;
begin
  insert into JTF_TASK_AUDITS_B (
    NEW_NOTIFICATION_PERIOD,
    OLD_NOTIFICATION_PERIOD_UOM,
    NEW_NOTIFICATION_PERIOD_UOM,
    OLD_PARENT_TASK_ID,
    NEW_PARENT_TASK_ID,
    OLD_RECURRENCE_RULE_ID,
    NEW_RECURRENCE_RULE_ID,
    PALM_CHANGED_FLAG,
    WINCE_CHANGED_FLAG,
    LAPTOP_CHANGED_FLAG,
    DEVICE1_CHANGED_FLAG,
    DEVICE2_CHANGED_FLAG,
    DEVICE3_CHANGED_FLAG,
    OLD_CURRENCY_CODE,
    NEW_CURRENCY_CODE,
    OLD_COSTS,
    NEW_COSTS,
    OLD_ORG_ID,
    NEW_ORG_ID,
    TASK_AUDIT_ID,
    TASK_ID,
    OLD_TASK_TYPE_ID,
    NEW_TASK_TYPE_ID,
    OLD_TASK_STATUS_ID,
    NEW_TASK_STATUS_ID,
    OLD_TASK_PRIORITY_ID,
    NEW_TASK_PRIORITY_ID,
    OLD_OWNER_ID,
    NEW_OWNER_ID,
    OLD_OWNER_TYPE_CODE,
    NEW_OWNER_TYPE_CODE,
    OLD_ASSIGNED_BY_ID,
    NEW_ASSIGNED_BY_ID,
    OLD_CUST_ACCOUNT_ID,
    NEW_CUST_ACCOUNT_ID,
    OLD_CUSTOMER_ID,
    NEW_CUSTOMER_ID,
    OLD_ADDRESS_ID,
    NEW_ADDRESS_ID,
    OLD_PLANNED_START_DATE,
    NEW_PLANNED_START_DATE,
    OLD_PLANNED_END_DATE,
    NEW_PLANNED_END_DATE,
    OLD_SCHEDULED_START_DATE,
    NEW_SCHEDULED_START_DATE,
    OLD_SCHEDULED_END_DATE,
    NEW_SCHEDULED_END_DATE,
    OLD_ACTUAL_START_DATE,
    NEW_ACTUAL_START_DATE,
    OLD_ACTUAL_END_DATE,
    NEW_ACTUAL_END_DATE,
    OLD_SOURCE_OBJECT_TYPE_CODE,
    NEW_SOURCE_OBJECT_TYPE_CODE,
    OLD_TIMEZONE_ID,
    NEW_TIMEZONE_ID,
    OLD_SOURCE_OBJECT_ID,
    NEW_SOURCE_OBJECT_ID,
    OLD_SOURCE_OBJECT_NAME,
    NEW_SOURCE_OBJECT_NAME,
    OLD_DURATION,
    NEW_DURATION,
    OLD_DURATION_UOM,
    NEW_DURATION_UOM,
    OLD_PLANNED_EFFORT,
    NEW_PLANNED_EFFORT,
    OLD_PLANNED_EFFORT_UOM,
    NEW_PLANNED_EFFORT_UOM,
    OLD_ACTUAL_EFFORT,
    NEW_ACTUAL_EFFORT,
    OLD_ACTUAL_EFFORT_UOM,
    NEW_ACTUAL_EFFORT_UOM,
    OLD_PERCENTAGE_COMPLETE,
    NEW_PERCENTAGE_COMPLETE,
    OLD_REASON_CODE,
    NEW_REASON_CODE,
    PRIVATE_CHANGED_FLAG,
    PUBLISH_CHANGED_FLAG,
    RESTRICT_CLOSURE_CHANGE_FLAG,
    MULTI_BOOKED_CHANGED_FLAG,
    MILESTONE_CHANGED_FLAG,
    HOLIDAY_CHANGED_FLAG,
    BILLABLE_CHANGED_FLAG,
    OLD_BOUND_MODE_CODE,
    NEW_BOUND_MODE_CODE,
    SOFT_BOUND_CHANGED_FLAG,
    OLD_WORKFLOW_PROCESS_ID,
    NEW_WORKFLOW_PROCESS_ID,
    NOTIFICATION_CHANGED_FLAG,
    OLD_NOTIFICATION_PERIOD,
    CREATION_DATE,
    CREATED_BY,
    LAST_UPDATE_DATE,
    LAST_UPDATED_BY,
    LAST_UPDATE_LOGIN,
    OBJECT_VERSION_NUMBER,
    OLD_OWNER_TERRITORY_ID,
    NEW_OWNER_TERRITORY_ID,
    NEW_ESCALATION_LEVEL,
    OLD_ESCALATION_LEVEL
  ) values (
    X_NEW_NOTIFICATION_PERIOD,
    X_OLD_NOTIFICATION_PERIOD_UOM,
    X_NEW_NOTIFICATION_PERIOD_UOM,
    X_OLD_PARENT_TASK_ID,
    X_NEW_PARENT_TASK_ID,
    X_OLD_RECURRENCE_RULE_ID,
    X_NEW_RECURRENCE_RULE_ID,
    X_PALM_CHANGED_FLAG,
    X_WINCE_CHANGED_FLAG,
    X_LAPTOP_CHANGED_FLAG,
    X_DEVICE1_CHANGED_FLAG,
    X_DEVICE2_CHANGED_FLAG,
    X_DEVICE3_CHANGED_FLAG,
    X_OLD_CURRENCY_CODE,
    X_NEW_CURRENCY_CODE,
    X_OLD_COSTS,
    X_NEW_COSTS,
    X_OLD_ORG_ID,
    X_NEW_ORG_ID,
    X_TASK_AUDIT_ID,
    X_TASK_ID,
    X_OLD_TASK_TYPE_ID,
    X_NEW_TASK_TYPE_ID,
    X_OLD_TASK_STATUS_ID,
    X_NEW_TASK_STATUS_ID,
    X_OLD_TASK_PRIORITY_ID,
    X_NEW_TASK_PRIORITY_ID,
    X_OLD_OWNER_ID,
    X_NEW_OWNER_ID,
    X_OLD_OWNER_TYPE_CODE,
    X_NEW_OWNER_TYPE_CODE,
    X_OLD_ASSIGNED_BY_ID,
    X_NEW_ASSIGNED_BY_ID,
    X_OLD_CUST_ACCOUNT_ID,
    X_NEW_CUST_ACCOUNT_ID,
    X_OLD_CUSTOMER_ID,
    X_NEW_CUSTOMER_ID,
    X_OLD_ADDRESS_ID,
    X_NEW_ADDRESS_ID,
    X_OLD_PLANNED_START_DATE,
    X_NEW_PLANNED_START_DATE,
    X_OLD_PLANNED_END_DATE,
    X_NEW_PLANNED_END_DATE,
    X_OLD_SCHEDULED_START_DATE,
    X_NEW_SCHEDULED_START_DATE,
    X_OLD_SCHEDULED_END_DATE,
    X_NEW_SCHEDULED_END_DATE,
    X_OLD_ACTUAL_START_DATE,
    X_NEW_ACTUAL_START_DATE,
    X_OLD_ACTUAL_END_DATE,
    X_NEW_ACTUAL_END_DATE,
    X_OLD_SOURCE_OBJECT_TYPE_CODE,
    X_NEW_SOURCE_OBJECT_TYPE_CODE,
    X_OLD_TIMEZONE_ID,
    X_NEW_TIMEZONE_ID,
    X_OLD_SOURCE_OBJECT_ID,
    X_NEW_SOURCE_OBJECT_ID,
    X_OLD_SOURCE_OBJECT_NAME,
    X_NEW_SOURCE_OBJECT_NAME,
    X_OLD_DURATION,
    X_NEW_DURATION,
    X_OLD_DURATION_UOM,
    X_NEW_DURATION_UOM,
    X_OLD_PLANNED_EFFORT,
    X_NEW_PLANNED_EFFORT,
    X_OLD_PLANNED_EFFORT_UOM,
    X_NEW_PLANNED_EFFORT_UOM,
    X_OLD_ACTUAL_EFFORT,
    X_NEW_ACTUAL_EFFORT,
    X_OLD_ACTUAL_EFFORT_UOM,
    X_NEW_ACTUAL_EFFORT_UOM,
    X_OLD_PERCENTAGE_COMPLETE,
    X_NEW_PERCENTAGE_COMPLETE,
    X_OLD_REASON_CODE,
    X_NEW_REASON_CODE,
    X_PRIVATE_CHANGED_FLAG,
    X_PUBLISH_CHANGED_FLAG,
    X_RESTRICT_CLOSURE_CHANGE_FLAG,
    X_MULTI_BOOKED_CHANGED_FLAG,
    X_MILESTONE_CHANGED_FLAG,
    X_HOLIDAY_CHANGED_FLAG,
    X_BILLABLE_CHANGED_FLAG,
    X_OLD_BOUND_MODE_CODE,
    X_NEW_BOUND_MODE_CODE,
    X_SOFT_BOUND_CHANGED_FLAG,
    X_OLD_WORKFLOW_PROCESS_ID,
    X_NEW_WORKFLOW_PROCESS_ID,
    X_NOTIFICATION_CHANGED_FLAG,
    X_OLD_NOTIFICATION_PERIOD,
    X_CREATION_DATE,
    X_CREATED_BY,
    X_LAST_UPDATE_DATE,
    X_LAST_UPDATED_BY,
    X_LAST_UPDATE_LOGIN,
    X_OBJECT_VERSION_NUMBER,
    X_OLD_OWNER_TERRITORY_ID,
    X_NEW_OWNER_TERRITORY_ID,
    X_NEW_ESCALATION_LEVEL,
    X_OLD_ESCALATION_LEVEL
  );

  insert into JTF_TASK_AUDITS_TL (
    TASK_AUDIT_ID,
    OLD_TASK_NAME,
    NEW_TASK_NAME,
    OLD_DESCRIPTION,
    NEW_DESCRIPTION,
    CREATED_BY,
    CREATION_DATE,
    LAST_UPDATED_BY,
    LAST_UPDATE_DATE,
    LAST_UPDATE_LOGIN,
    LANGUAGE,
    SOURCE_LANG
  ) select
    X_TASK_AUDIT_ID,
    X_OLD_TASK_NAME,
    X_NEW_TASK_NAME,
    X_OLD_DESCRIPTION,
    X_NEW_DESCRIPTION,
    X_CREATED_BY,
    X_CREATION_DATE,
    X_LAST_UPDATED_BY,
    X_LAST_UPDATE_DATE,
    X_LAST_UPDATE_LOGIN,
    L.LANGUAGE_CODE,
    userenv('LANG')
  from FND_LANGUAGES L
  where L.INSTALLED_FLAG in ('I', 'B')
  and not exists
    (select NULL
    from JTF_TASK_AUDITS_TL T
    where T.TASK_AUDIT_ID = X_TASK_AUDIT_ID
    and T.LANGUAGE = L.LANGUAGE_CODE);

  open c;
  fetch c into X_ROWID;
  if (c%notfound) then
    close c;
    raise no_data_found;
  end if;
  close c;

end INSERT_ROW;

procedure LOCK_ROW (
  X_TASK_AUDIT_ID in NUMBER,
  X_NEW_NOTIFICATION_PERIOD in NUMBER,
  X_OLD_NOTIFICATION_PERIOD_UOM in VARCHAR2,
  X_NEW_NOTIFICATION_PERIOD_UOM in VARCHAR2,
  X_OLD_PARENT_TASK_ID in NUMBER,
  X_NEW_PARENT_TASK_ID in NUMBER,
  X_OLD_RECURRENCE_RULE_ID in NUMBER,
  X_NEW_RECURRENCE_RULE_ID in NUMBER,
  X_PALM_CHANGED_FLAG in VARCHAR2,
  X_WINCE_CHANGED_FLAG in VARCHAR2,
  X_LAPTOP_CHANGED_FLAG in VARCHAR2,
  X_DEVICE1_CHANGED_FLAG in VARCHAR2,
  X_DEVICE2_CHANGED_FLAG in VARCHAR2,
  X_DEVICE3_CHANGED_FLAG in VARCHAR2,
  X_OLD_CURRENCY_CODE in VARCHAR2,
  X_NEW_CURRENCY_CODE in VARCHAR2,
  X_OLD_COSTS in NUMBER,
  X_NEW_COSTS in NUMBER,
  X_OLD_ORG_ID in NUMBER,
  X_NEW_ORG_ID in NUMBER,
  X_TASK_ID in NUMBER,
  X_OLD_TASK_TYPE_ID in NUMBER,
  X_NEW_TASK_TYPE_ID in NUMBER,
  X_OLD_TASK_STATUS_ID in NUMBER,
  X_NEW_TASK_STATUS_ID in NUMBER,
  X_OLD_TASK_PRIORITY_ID in NUMBER,
  X_NEW_TASK_PRIORITY_ID in NUMBER,
  X_OLD_OWNER_ID in NUMBER,
  X_NEW_OWNER_ID in NUMBER,
  X_OLD_OWNER_TYPE_CODE in VARCHAR2,
  X_NEW_OWNER_TYPE_CODE in VARCHAR2,
  X_OLD_ASSIGNED_BY_ID in NUMBER,
  X_NEW_ASSIGNED_BY_ID in NUMBER,
  X_OLD_CUST_ACCOUNT_ID in NUMBER,
  X_NEW_CUST_ACCOUNT_ID in NUMBER,
  X_OLD_CUSTOMER_ID in NUMBER,
  X_NEW_CUSTOMER_ID in NUMBER,
  X_OLD_ADDRESS_ID in NUMBER,
  X_NEW_ADDRESS_ID in NUMBER,
  X_OLD_PLANNED_START_DATE in DATE,
  X_NEW_PLANNED_START_DATE in DATE,
  X_OLD_PLANNED_END_DATE in DATE,
  X_NEW_PLANNED_END_DATE in DATE,
  X_OLD_SCHEDULED_START_DATE in DATE,
  X_NEW_SCHEDULED_START_DATE in DATE,
  X_OLD_SCHEDULED_END_DATE in DATE,
  X_NEW_SCHEDULED_END_DATE in DATE,
  X_OLD_ACTUAL_START_DATE in DATE,
  X_NEW_ACTUAL_START_DATE in DATE,
  X_OLD_ACTUAL_END_DATE in DATE,
  X_NEW_ACTUAL_END_DATE in DATE,
  X_OLD_SOURCE_OBJECT_TYPE_CODE in VARCHAR2,
  X_NEW_SOURCE_OBJECT_TYPE_CODE in VARCHAR2,
  X_OLD_TIMEZONE_ID in NUMBER,
  X_NEW_TIMEZONE_ID in NUMBER,
  X_OLD_SOURCE_OBJECT_ID in NUMBER,
  X_NEW_SOURCE_OBJECT_ID in NUMBER,
  X_OLD_SOURCE_OBJECT_NAME in VARCHAR2,
  X_NEW_SOURCE_OBJECT_NAME in VARCHAR2,
  X_OLD_DURATION in NUMBER,
  X_NEW_DURATION in NUMBER,
  X_OLD_DURATION_UOM in VARCHAR2,
  X_NEW_DURATION_UOM in VARCHAR2,
  X_OLD_PLANNED_EFFORT in NUMBER,
  X_NEW_PLANNED_EFFORT in NUMBER,
  X_OLD_PLANNED_EFFORT_UOM in VARCHAR2,
  X_NEW_PLANNED_EFFORT_UOM in VARCHAR2,
  X_OLD_ACTUAL_EFFORT in NUMBER,
  X_NEW_ACTUAL_EFFORT in NUMBER,
  X_OLD_ACTUAL_EFFORT_UOM in VARCHAR2,
  X_NEW_ACTUAL_EFFORT_UOM in VARCHAR2,
  X_OLD_PERCENTAGE_COMPLETE in NUMBER,
  X_NEW_PERCENTAGE_COMPLETE in NUMBER,
  X_OLD_REASON_CODE in VARCHAR2,
  X_NEW_REASON_CODE in VARCHAR2,
  X_PRIVATE_CHANGED_FLAG in VARCHAR2,
  X_PUBLISH_CHANGED_FLAG in VARCHAR2,
  X_RESTRICT_CLOSURE_CHANGE_FLAG in VARCHAR2,
  X_MULTI_BOOKED_CHANGED_FLAG in VARCHAR2,
  X_MILESTONE_CHANGED_FLAG in VARCHAR2,
  X_HOLIDAY_CHANGED_FLAG in VARCHAR2,
  X_BILLABLE_CHANGED_FLAG in VARCHAR2,
  X_OLD_BOUND_MODE_CODE in VARCHAR2,
  X_NEW_BOUND_MODE_CODE in VARCHAR2,
  X_SOFT_BOUND_CHANGED_FLAG in VARCHAR2,
  X_OLD_WORKFLOW_PROCESS_ID in NUMBER,
  X_NEW_WORKFLOW_PROCESS_ID in NUMBER,
  X_NOTIFICATION_CHANGED_FLAG in VARCHAR2,
  X_OLD_NOTIFICATION_PERIOD in NUMBER,
  X_OLD_TASK_NAME in VARCHAR2,
  X_NEW_TASK_NAME in VARCHAR2,
  X_OLD_DESCRIPTION in VARCHAR2,
  X_NEW_DESCRIPTION in VARCHAR2,
  X_NEW_ESCALATION_LEVEL in VARCHAR2,
  X_OLD_ESCALATION_LEVEL in VARCHAR2
) is
  cursor c is select
      NEW_NOTIFICATION_PERIOD,
      OLD_NOTIFICATION_PERIOD_UOM,
      NEW_NOTIFICATION_PERIOD_UOM,
      OLD_PARENT_TASK_ID,
      NEW_PARENT_TASK_ID,
      OLD_RECURRENCE_RULE_ID,
      NEW_RECURRENCE_RULE_ID,
      PALM_CHANGED_FLAG,
      WINCE_CHANGED_FLAG,
      LAPTOP_CHANGED_FLAG,
      DEVICE1_CHANGED_FLAG,
      DEVICE2_CHANGED_FLAG,
      DEVICE3_CHANGED_FLAG,
      OLD_CURRENCY_CODE,
      NEW_CURRENCY_CODE,
      OLD_COSTS,
      NEW_COSTS,
      OLD_ORG_ID,
      NEW_ORG_ID,
      TASK_ID,
      OLD_TASK_TYPE_ID,
      NEW_TASK_TYPE_ID,
      OLD_TASK_STATUS_ID,
      NEW_TASK_STATUS_ID,
      OLD_TASK_PRIORITY_ID,
      NEW_TASK_PRIORITY_ID,
      OLD_OWNER_ID,
      NEW_OWNER_ID,
      OLD_OWNER_TYPE_CODE,
      NEW_OWNER_TYPE_CODE,
      OLD_ASSIGNED_BY_ID,
      NEW_ASSIGNED_BY_ID,
      OLD_CUST_ACCOUNT_ID,
      NEW_CUST_ACCOUNT_ID,
      OLD_CUSTOMER_ID,
      NEW_CUSTOMER_ID,
      OLD_ADDRESS_ID,
      NEW_ADDRESS_ID,
      OLD_PLANNED_START_DATE,
      NEW_PLANNED_START_DATE,
      OLD_PLANNED_END_DATE,
      NEW_PLANNED_END_DATE,
      OLD_SCHEDULED_START_DATE,
      NEW_SCHEDULED_START_DATE,
      OLD_SCHEDULED_END_DATE,
      NEW_SCHEDULED_END_DATE,
      OLD_ACTUAL_START_DATE,
      NEW_ACTUAL_START_DATE,
      OLD_ACTUAL_END_DATE,
      NEW_ACTUAL_END_DATE,
      OLD_SOURCE_OBJECT_TYPE_CODE,
      NEW_SOURCE_OBJECT_TYPE_CODE,
      OLD_TIMEZONE_ID,
      NEW_TIMEZONE_ID,
      OLD_SOURCE_OBJECT_ID,
      NEW_SOURCE_OBJECT_ID,
      OLD_SOURCE_OBJECT_NAME,
      NEW_SOURCE_OBJECT_NAME,
      OLD_DURATION,
      NEW_DURATION,
      OLD_DURATION_UOM,
      NEW_DURATION_UOM,
      OLD_PLANNED_EFFORT,
      NEW_PLANNED_EFFORT,
      OLD_PLANNED_EFFORT_UOM,
      NEW_PLANNED_EFFORT_UOM,
      OLD_ACTUAL_EFFORT,
      NEW_ACTUAL_EFFORT,
      OLD_ACTUAL_EFFORT_UOM,
      NEW_ACTUAL_EFFORT_UOM,
      OLD_PERCENTAGE_COMPLETE,
      NEW_PERCENTAGE_COMPLETE,
      OLD_REASON_CODE,
      NEW_REASON_CODE,
      PRIVATE_CHANGED_FLAG,
      PUBLISH_CHANGED_FLAG,
      RESTRICT_CLOSURE_CHANGE_FLAG,
      MULTI_BOOKED_CHANGED_FLAG,
      MILESTONE_CHANGED_FLAG,
      HOLIDAY_CHANGED_FLAG,
      BILLABLE_CHANGED_FLAG,
      OLD_BOUND_MODE_CODE,
      NEW_BOUND_MODE_CODE,
      SOFT_BOUND_CHANGED_FLAG,
      OLD_WORKFLOW_PROCESS_ID,
      NEW_WORKFLOW_PROCESS_ID,
      NOTIFICATION_CHANGED_FLAG,
      OLD_NOTIFICATION_PERIOD
    from JTF_TASK_AUDITS_B
    where TASK_AUDIT_ID = X_TASK_AUDIT_ID
    for update of TASK_AUDIT_ID nowait;
  recinfo c%rowtype;

  cursor c1 is select
      OLD_TASK_NAME,
      NEW_TASK_NAME,
      OLD_DESCRIPTION,
      NEW_DESCRIPTION,
      decode(LANGUAGE, userenv('LANG'), 'Y', 'N') BASELANG
    from JTF_TASK_AUDITS_TL
    where TASK_AUDIT_ID = X_TASK_AUDIT_ID
    and userenv('LANG') in (LANGUAGE, SOURCE_LANG)
    for update of TASK_AUDIT_ID nowait;
begin
  open c;
  fetch c into recinfo;
  if (c%notfound) then
    close c;
    fnd_message.set_name('FND', 'FORM_RECORD_DELETED');
    app_exception.raise_exception;
  end if;
  close c;
  if (    ((recinfo.NEW_NOTIFICATION_PERIOD = X_NEW_NOTIFICATION_PERIOD)
           OR ((recinfo.NEW_NOTIFICATION_PERIOD is null) AND (X_NEW_NOTIFICATION_PERIOD is null)))
      AND ((recinfo.OLD_NOTIFICATION_PERIOD_UOM = X_OLD_NOTIFICATION_PERIOD_UOM)
           OR ((recinfo.OLD_NOTIFICATION_PERIOD_UOM is null) AND (X_OLD_NOTIFICATION_PERIOD_UOM is null)))
      AND ((recinfo.NEW_NOTIFICATION_PERIOD_UOM = X_NEW_NOTIFICATION_PERIOD_UOM)
           OR ((recinfo.NEW_NOTIFICATION_PERIOD_UOM is null) AND (X_NEW_NOTIFICATION_PERIOD_UOM is null)))
      AND ((recinfo.OLD_PARENT_TASK_ID = X_OLD_PARENT_TASK_ID)
           OR ((recinfo.OLD_PARENT_TASK_ID is null) AND (X_OLD_PARENT_TASK_ID is null)))
      AND ((recinfo.NEW_PARENT_TASK_ID = X_NEW_PARENT_TASK_ID)
           OR ((recinfo.NEW_PARENT_TASK_ID is null) AND (X_NEW_PARENT_TASK_ID is null)))
      AND ((recinfo.OLD_RECURRENCE_RULE_ID = X_OLD_RECURRENCE_RULE_ID)
           OR ((recinfo.OLD_RECURRENCE_RULE_ID is null) AND (X_OLD_RECURRENCE_RULE_ID is null)))
      AND ((recinfo.NEW_RECURRENCE_RULE_ID = X_NEW_RECURRENCE_RULE_ID)
           OR ((recinfo.NEW_RECURRENCE_RULE_ID is null) AND (X_NEW_RECURRENCE_RULE_ID is null)))
      AND ((recinfo.PALM_CHANGED_FLAG = X_PALM_CHANGED_FLAG)
           OR ((recinfo.PALM_CHANGED_FLAG is null) AND (X_PALM_CHANGED_FLAG is null)))
      AND ((recinfo.WINCE_CHANGED_FLAG = X_WINCE_CHANGED_FLAG)
           OR ((recinfo.WINCE_CHANGED_FLAG is null) AND (X_WINCE_CHANGED_FLAG is null)))
      AND ((recinfo.LAPTOP_CHANGED_FLAG = X_LAPTOP_CHANGED_FLAG)
           OR ((recinfo.LAPTOP_CHANGED_FLAG is null) AND (X_LAPTOP_CHANGED_FLAG is null)))
      AND ((recinfo.DEVICE1_CHANGED_FLAG = X_DEVICE1_CHANGED_FLAG)
           OR ((recinfo.DEVICE1_CHANGED_FLAG is null) AND (X_DEVICE1_CHANGED_FLAG is null)))
      AND ((recinfo.DEVICE2_CHANGED_FLAG = X_DEVICE2_CHANGED_FLAG)
           OR ((recinfo.DEVICE2_CHANGED_FLAG is null) AND (X_DEVICE2_CHANGED_FLAG is null)))
      AND ((recinfo.DEVICE3_CHANGED_FLAG = X_DEVICE3_CHANGED_FLAG)
           OR ((recinfo.DEVICE3_CHANGED_FLAG is null) AND (X_DEVICE3_CHANGED_FLAG is null)))
      AND ((recinfo.OLD_CURRENCY_CODE = X_OLD_CURRENCY_CODE)
           OR ((recinfo.OLD_CURRENCY_CODE is null) AND (X_OLD_CURRENCY_CODE is null)))
      AND ((recinfo.NEW_CURRENCY_CODE = X_NEW_CURRENCY_CODE)
           OR ((recinfo.NEW_CURRENCY_CODE is null) AND (X_NEW_CURRENCY_CODE is null)))
      AND ((recinfo.OLD_COSTS = X_OLD_COSTS)
           OR ((recinfo.OLD_COSTS is null) AND (X_OLD_COSTS is null)))
      AND ((recinfo.NEW_COSTS = X_NEW_COSTS)
           OR ((recinfo.NEW_COSTS is null) AND (X_NEW_COSTS is null)))
      AND ((recinfo.OLD_ORG_ID = X_OLD_ORG_ID)
           OR ((recinfo.OLD_ORG_ID is null) AND (X_OLD_ORG_ID is null)))
      AND ((recinfo.NEW_ORG_ID = X_NEW_ORG_ID)
           OR ((recinfo.NEW_ORG_ID is null) AND (X_NEW_ORG_ID is null)))
      AND (recinfo.TASK_ID = X_TASK_ID)
      AND ((recinfo.OLD_TASK_TYPE_ID = X_OLD_TASK_TYPE_ID)
           OR ((recinfo.OLD_TASK_TYPE_ID is null) AND (X_OLD_TASK_TYPE_ID is null)))
      AND ((recinfo.NEW_TASK_TYPE_ID = X_NEW_TASK_TYPE_ID)
           OR ((recinfo.NEW_TASK_TYPE_ID is null) AND (X_NEW_TASK_TYPE_ID is null)))
      AND ((recinfo.OLD_TASK_STATUS_ID = X_OLD_TASK_STATUS_ID)
           OR ((recinfo.OLD_TASK_STATUS_ID is null) AND (X_OLD_TASK_STATUS_ID is null)))
      AND ((recinfo.NEW_TASK_STATUS_ID = X_NEW_TASK_STATUS_ID)
           OR ((recinfo.NEW_TASK_STATUS_ID is null) AND (X_NEW_TASK_STATUS_ID is null)))
      AND ((recinfo.OLD_TASK_PRIORITY_ID = X_OLD_TASK_PRIORITY_ID)
           OR ((recinfo.OLD_TASK_PRIORITY_ID is null) AND (X_OLD_TASK_PRIORITY_ID is null)))
      AND ((recinfo.NEW_TASK_PRIORITY_ID = X_NEW_TASK_PRIORITY_ID)
           OR ((recinfo.NEW_TASK_PRIORITY_ID is null) AND (X_NEW_TASK_PRIORITY_ID is null)))
      AND ((recinfo.OLD_OWNER_ID = X_OLD_OWNER_ID)
           OR ((recinfo.OLD_OWNER_ID is null) AND (X_OLD_OWNER_ID is null)))
      AND ((recinfo.NEW_OWNER_ID = X_NEW_OWNER_ID)
           OR ((recinfo.NEW_OWNER_ID is null) AND (X_NEW_OWNER_ID is null)))
      AND ((recinfo.OLD_OWNER_TYPE_CODE = X_OLD_OWNER_TYPE_CODE)
           OR ((recinfo.OLD_OWNER_TYPE_CODE is null) AND (X_OLD_OWNER_TYPE_CODE is null)))
      AND ((recinfo.NEW_OWNER_TYPE_CODE = X_NEW_OWNER_TYPE_CODE)
           OR ((recinfo.NEW_OWNER_TYPE_CODE is null) AND (X_NEW_OWNER_TYPE_CODE is null)))
      AND ((recinfo.OLD_ASSIGNED_BY_ID = X_OLD_ASSIGNED_BY_ID)
           OR ((recinfo.OLD_ASSIGNED_BY_ID is null) AND (X_OLD_ASSIGNED_BY_ID is null)))
      AND ((recinfo.NEW_ASSIGNED_BY_ID = X_NEW_ASSIGNED_BY_ID)
           OR ((recinfo.NEW_ASSIGNED_BY_ID is null) AND (X_NEW_ASSIGNED_BY_ID is null)))
      AND ((recinfo.OLD_CUST_ACCOUNT_ID = X_OLD_CUST_ACCOUNT_ID)
           OR ((recinfo.OLD_CUST_ACCOUNT_ID is null) AND (X_OLD_CUST_ACCOUNT_ID is null)))
      AND ((recinfo.NEW_CUST_ACCOUNT_ID = X_NEW_CUST_ACCOUNT_ID)
           OR ((recinfo.NEW_CUST_ACCOUNT_ID is null) AND (X_NEW_CUST_ACCOUNT_ID is null)))
      AND ((recinfo.OLD_CUSTOMER_ID = X_OLD_CUSTOMER_ID)
           OR ((recinfo.OLD_CUSTOMER_ID is null) AND (X_OLD_CUSTOMER_ID is null)))
      AND ((recinfo.NEW_CUSTOMER_ID = X_NEW_CUSTOMER_ID)
           OR ((recinfo.NEW_CUSTOMER_ID is null) AND (X_NEW_CUSTOMER_ID is null)))
      AND ((recinfo.OLD_ADDRESS_ID = X_OLD_ADDRESS_ID)
           OR ((recinfo.OLD_ADDRESS_ID is null) AND (X_OLD_ADDRESS_ID is null)))
      AND ((recinfo.NEW_ADDRESS_ID = X_NEW_ADDRESS_ID)
           OR ((recinfo.NEW_ADDRESS_ID is null) AND (X_NEW_ADDRESS_ID is null)))
      AND ((recinfo.OLD_PLANNED_START_DATE = X_OLD_PLANNED_START_DATE)
           OR ((recinfo.OLD_PLANNED_START_DATE is null) AND (X_OLD_PLANNED_START_DATE is null)))
      AND ((recinfo.NEW_PLANNED_START_DATE = X_NEW_PLANNED_START_DATE)
           OR ((recinfo.NEW_PLANNED_START_DATE is null) AND (X_NEW_PLANNED_START_DATE is null)))
      AND ((recinfo.OLD_PLANNED_END_DATE = X_OLD_PLANNED_END_DATE)
           OR ((recinfo.OLD_PLANNED_END_DATE is null) AND (X_OLD_PLANNED_END_DATE is null)))
      AND ((recinfo.NEW_PLANNED_END_DATE = X_NEW_PLANNED_END_DATE)
           OR ((recinfo.NEW_PLANNED_END_DATE is null) AND (X_NEW_PLANNED_END_DATE is null)))
      AND ((recinfo.OLD_SCHEDULED_START_DATE = X_OLD_SCHEDULED_START_DATE)
           OR ((recinfo.OLD_SCHEDULED_START_DATE is null) AND (X_OLD_SCHEDULED_START_DATE is null)))
      AND ((recinfo.NEW_SCHEDULED_START_DATE = X_NEW_SCHEDULED_START_DATE)
           OR ((recinfo.NEW_SCHEDULED_START_DATE is null) AND (X_NEW_SCHEDULED_START_DATE is null)))
      AND ((recinfo.OLD_SCHEDULED_END_DATE = X_OLD_SCHEDULED_END_DATE)
           OR ((recinfo.OLD_SCHEDULED_END_DATE is null) AND (X_OLD_SCHEDULED_END_DATE is null)))
      AND ((recinfo.NEW_SCHEDULED_END_DATE = X_NEW_SCHEDULED_END_DATE)
           OR ((recinfo.NEW_SCHEDULED_END_DATE is null) AND (X_NEW_SCHEDULED_END_DATE is null)))
      AND ((recinfo.OLD_ACTUAL_START_DATE = X_OLD_ACTUAL_START_DATE)
           OR ((recinfo.OLD_ACTUAL_START_DATE is null) AND (X_OLD_ACTUAL_START_DATE is null)))
      AND ((recinfo.NEW_ACTUAL_START_DATE = X_NEW_ACTUAL_START_DATE)
           OR ((recinfo.NEW_ACTUAL_START_DATE is null) AND (X_NEW_ACTUAL_START_DATE is null)))
      AND ((recinfo.OLD_ACTUAL_END_DATE = X_OLD_ACTUAL_END_DATE)
           OR ((recinfo.OLD_ACTUAL_END_DATE is null) AND (X_OLD_ACTUAL_END_DATE is null)))
      AND ((recinfo.NEW_ACTUAL_END_DATE = X_NEW_ACTUAL_END_DATE)
           OR ((recinfo.NEW_ACTUAL_END_DATE is null) AND (X_NEW_ACTUAL_END_DATE is null)))
      AND ((recinfo.OLD_SOURCE_OBJECT_TYPE_CODE = X_OLD_SOURCE_OBJECT_TYPE_CODE)
           OR ((recinfo.OLD_SOURCE_OBJECT_TYPE_CODE is null) AND (X_OLD_SOURCE_OBJECT_TYPE_CODE is null)))
      AND ((recinfo.NEW_SOURCE_OBJECT_TYPE_CODE = X_NEW_SOURCE_OBJECT_TYPE_CODE)
           OR ((recinfo.NEW_SOURCE_OBJECT_TYPE_CODE is null) AND (X_NEW_SOURCE_OBJECT_TYPE_CODE is null)))
      AND ((recinfo.OLD_TIMEZONE_ID = X_OLD_TIMEZONE_ID)
           OR ((recinfo.OLD_TIMEZONE_ID is null) AND (X_OLD_TIMEZONE_ID is null)))
      AND ((recinfo.NEW_TIMEZONE_ID = X_NEW_TIMEZONE_ID)
           OR ((recinfo.NEW_TIMEZONE_ID is null) AND (X_NEW_TIMEZONE_ID is null)))
      AND ((recinfo.OLD_SOURCE_OBJECT_ID = X_OLD_SOURCE_OBJECT_ID)
           OR ((recinfo.OLD_SOURCE_OBJECT_ID is null) AND (X_OLD_SOURCE_OBJECT_ID is null)))
      AND ((recinfo.NEW_SOURCE_OBJECT_ID = X_NEW_SOURCE_OBJECT_ID)
           OR ((recinfo.NEW_SOURCE_OBJECT_ID is null) AND (X_NEW_SOURCE_OBJECT_ID is null)))
      AND ((recinfo.OLD_SOURCE_OBJECT_NAME = X_OLD_SOURCE_OBJECT_NAME)
           OR ((recinfo.OLD_SOURCE_OBJECT_NAME is null) AND (X_OLD_SOURCE_OBJECT_NAME is null)))
      AND ((recinfo.NEW_SOURCE_OBJECT_NAME = X_NEW_SOURCE_OBJECT_NAME)
           OR ((recinfo.NEW_SOURCE_OBJECT_NAME is null) AND (X_NEW_SOURCE_OBJECT_NAME is null)))
      AND ((recinfo.OLD_DURATION = X_OLD_DURATION)
           OR ((recinfo.OLD_DURATION is null) AND (X_OLD_DURATION is null)))
      AND ((recinfo.NEW_DURATION = X_NEW_DURATION)
           OR ((recinfo.NEW_DURATION is null) AND (X_NEW_DURATION is null)))
      AND ((recinfo.OLD_DURATION_UOM = X_OLD_DURATION_UOM)
           OR ((recinfo.OLD_DURATION_UOM is null) AND (X_OLD_DURATION_UOM is null)))
      AND ((recinfo.NEW_DURATION_UOM = X_NEW_DURATION_UOM)
           OR ((recinfo.NEW_DURATION_UOM is null) AND (X_NEW_DURATION_UOM is null)))
      AND ((recinfo.OLD_PLANNED_EFFORT = X_OLD_PLANNED_EFFORT)
           OR ((recinfo.OLD_PLANNED_EFFORT is null) AND (X_OLD_PLANNED_EFFORT is null)))
      AND ((recinfo.NEW_PLANNED_EFFORT = X_NEW_PLANNED_EFFORT)
           OR ((recinfo.NEW_PLANNED_EFFORT is null) AND (X_NEW_PLANNED_EFFORT is null)))
      AND ((recinfo.OLD_PLANNED_EFFORT_UOM = X_OLD_PLANNED_EFFORT_UOM)
           OR ((recinfo.OLD_PLANNED_EFFORT_UOM is null) AND (X_OLD_PLANNED_EFFORT_UOM is null)))
      AND ((recinfo.NEW_PLANNED_EFFORT_UOM = X_NEW_PLANNED_EFFORT_UOM)
           OR ((recinfo.NEW_PLANNED_EFFORT_UOM is null) AND (X_NEW_PLANNED_EFFORT_UOM is null)))
      AND ((recinfo.OLD_ACTUAL_EFFORT = X_OLD_ACTUAL_EFFORT)
           OR ((recinfo.OLD_ACTUAL_EFFORT is null) AND (X_OLD_ACTUAL_EFFORT is null)))
      AND ((recinfo.NEW_ACTUAL_EFFORT = X_NEW_ACTUAL_EFFORT)
           OR ((recinfo.NEW_ACTUAL_EFFORT is null) AND (X_NEW_ACTUAL_EFFORT is null)))
      AND ((recinfo.OLD_ACTUAL_EFFORT_UOM = X_OLD_ACTUAL_EFFORT_UOM)
           OR ((recinfo.OLD_ACTUAL_EFFORT_UOM is null) AND (X_OLD_ACTUAL_EFFORT_UOM is null)))
      AND ((recinfo.NEW_ACTUAL_EFFORT_UOM = X_NEW_ACTUAL_EFFORT_UOM)
           OR ((recinfo.NEW_ACTUAL_EFFORT_UOM is null) AND (X_NEW_ACTUAL_EFFORT_UOM is null)))
      AND ((recinfo.OLD_PERCENTAGE_COMPLETE = X_OLD_PERCENTAGE_COMPLETE)
           OR ((recinfo.OLD_PERCENTAGE_COMPLETE is null) AND (X_OLD_PERCENTAGE_COMPLETE is null)))
      AND ((recinfo.NEW_PERCENTAGE_COMPLETE = X_NEW_PERCENTAGE_COMPLETE)
           OR ((recinfo.NEW_PERCENTAGE_COMPLETE is null) AND (X_NEW_PERCENTAGE_COMPLETE is null)))
      AND ((recinfo.OLD_REASON_CODE = X_OLD_REASON_CODE)
           OR ((recinfo.OLD_REASON_CODE is null) AND (X_OLD_REASON_CODE is null)))
      AND ((recinfo.NEW_REASON_CODE = X_NEW_REASON_CODE)
           OR ((recinfo.NEW_REASON_CODE is null) AND (X_NEW_REASON_CODE is null)))
      AND ((recinfo.PRIVATE_CHANGED_FLAG = X_PRIVATE_CHANGED_FLAG)
           OR ((recinfo.PRIVATE_CHANGED_FLAG is null) AND (X_PRIVATE_CHANGED_FLAG is null)))
      AND ((recinfo.PUBLISH_CHANGED_FLAG = X_PUBLISH_CHANGED_FLAG)
           OR ((recinfo.PUBLISH_CHANGED_FLAG is null) AND (X_PUBLISH_CHANGED_FLAG is null)))
      AND ((recinfo.RESTRICT_CLOSURE_CHANGE_FLAG = X_RESTRICT_CLOSURE_CHANGE_FLAG)
           OR ((recinfo.RESTRICT_CLOSURE_CHANGE_FLAG is null) AND (X_RESTRICT_CLOSURE_CHANGE_FLAG is null)))
      AND ((recinfo.MULTI_BOOKED_CHANGED_FLAG = X_MULTI_BOOKED_CHANGED_FLAG)
           OR ((recinfo.MULTI_BOOKED_CHANGED_FLAG is null) AND (X_MULTI_BOOKED_CHANGED_FLAG is null)))
      AND ((recinfo.MILESTONE_CHANGED_FLAG = X_MILESTONE_CHANGED_FLAG)
           OR ((recinfo.MILESTONE_CHANGED_FLAG is null) AND (X_MILESTONE_CHANGED_FLAG is null)))
      AND ((recinfo.HOLIDAY_CHANGED_FLAG = X_HOLIDAY_CHANGED_FLAG)
           OR ((recinfo.HOLIDAY_CHANGED_FLAG is null) AND (X_HOLIDAY_CHANGED_FLAG is null)))
      AND ((recinfo.BILLABLE_CHANGED_FLAG = X_BILLABLE_CHANGED_FLAG)
           OR ((recinfo.BILLABLE_CHANGED_FLAG is null) AND (X_BILLABLE_CHANGED_FLAG is null)))
      AND ((recinfo.OLD_BOUND_MODE_CODE = X_OLD_BOUND_MODE_CODE)
           OR ((recinfo.OLD_BOUND_MODE_CODE is null) AND (X_OLD_BOUND_MODE_CODE is null)))
      AND ((recinfo.NEW_BOUND_MODE_CODE = X_NEW_BOUND_MODE_CODE)
           OR ((recinfo.NEW_BOUND_MODE_CODE is null) AND (X_NEW_BOUND_MODE_CODE is null)))
      AND ((recinfo.SOFT_BOUND_CHANGED_FLAG = X_SOFT_BOUND_CHANGED_FLAG)
           OR ((recinfo.SOFT_BOUND_CHANGED_FLAG is null) AND (X_SOFT_BOUND_CHANGED_FLAG is null)))
      AND ((recinfo.OLD_WORKFLOW_PROCESS_ID = X_OLD_WORKFLOW_PROCESS_ID)
           OR ((recinfo.OLD_WORKFLOW_PROCESS_ID is null) AND (X_OLD_WORKFLOW_PROCESS_ID is null)))
      AND ((recinfo.NEW_WORKFLOW_PROCESS_ID = X_NEW_WORKFLOW_PROCESS_ID)
           OR ((recinfo.NEW_WORKFLOW_PROCESS_ID is null) AND (X_NEW_WORKFLOW_PROCESS_ID is null)))
      AND ((recinfo.NOTIFICATION_CHANGED_FLAG = X_NOTIFICATION_CHANGED_FLAG)
           OR ((recinfo.NOTIFICATION_CHANGED_FLAG is null) AND (X_NOTIFICATION_CHANGED_FLAG is null)))
      AND ((recinfo.OLD_NOTIFICATION_PERIOD = X_OLD_NOTIFICATION_PERIOD)
           OR ((recinfo.OLD_NOTIFICATION_PERIOD is null) AND (X_OLD_NOTIFICATION_PERIOD is null)))
  ) then
    null;
  else
    fnd_message.set_name('FND', 'FORM_RECORD_CHANGED');
    app_exception.raise_exception;
  end if;

  for tlinfo in c1 loop
    if (tlinfo.BASELANG = 'Y') then
      if (    (tlinfo.OLD_TASK_NAME = X_OLD_TASK_NAME)
          AND (tlinfo.NEW_TASK_NAME = X_NEW_TASK_NAME)
          AND ((tlinfo.OLD_DESCRIPTION = X_OLD_DESCRIPTION)
               OR ((tlinfo.OLD_DESCRIPTION is null) AND (X_OLD_DESCRIPTION is null)))
          AND ((tlinfo.NEW_DESCRIPTION = X_NEW_DESCRIPTION)
               OR ((tlinfo.NEW_DESCRIPTION is null) AND (X_NEW_DESCRIPTION is null)))
      ) then
        null;
      else
        fnd_message.set_name('FND', 'FORM_RECORD_CHANGED');
        app_exception.raise_exception;
      end if;
    end if;
  end loop;
  return;
end LOCK_ROW;

procedure UPDATE_ROW (
  X_TASK_AUDIT_ID in NUMBER,
  X_NEW_NOTIFICATION_PERIOD in NUMBER,
  X_OLD_NOTIFICATION_PERIOD_UOM in VARCHAR2,
  X_NEW_NOTIFICATION_PERIOD_UOM in VARCHAR2,
  X_OLD_PARENT_TASK_ID in NUMBER,
  X_NEW_PARENT_TASK_ID in NUMBER,
  X_OLD_RECURRENCE_RULE_ID in NUMBER,
  X_NEW_RECURRENCE_RULE_ID in NUMBER,
  X_PALM_CHANGED_FLAG in VARCHAR2,
  X_WINCE_CHANGED_FLAG in VARCHAR2,
  X_LAPTOP_CHANGED_FLAG in VARCHAR2,
  X_DEVICE1_CHANGED_FLAG in VARCHAR2,
  X_DEVICE2_CHANGED_FLAG in VARCHAR2,
  X_DEVICE3_CHANGED_FLAG in VARCHAR2,
  X_OLD_CURRENCY_CODE in VARCHAR2,
  X_NEW_CURRENCY_CODE in VARCHAR2,
  X_OLD_COSTS in NUMBER,
  X_NEW_COSTS in NUMBER,
  X_OLD_ORG_ID in NUMBER,
  X_NEW_ORG_ID in NUMBER,
  X_TASK_ID in NUMBER,
  X_OLD_TASK_TYPE_ID in NUMBER,
  X_NEW_TASK_TYPE_ID in NUMBER,
  X_OLD_TASK_STATUS_ID in NUMBER,
  X_NEW_TASK_STATUS_ID in NUMBER,
  X_OLD_TASK_PRIORITY_ID in NUMBER,
  X_NEW_TASK_PRIORITY_ID in NUMBER,
  X_OLD_OWNER_ID in NUMBER,
  X_NEW_OWNER_ID in NUMBER,
  X_OLD_OWNER_TYPE_CODE in VARCHAR2,
  X_NEW_OWNER_TYPE_CODE in VARCHAR2,
  X_OLD_ASSIGNED_BY_ID in NUMBER,
  X_NEW_ASSIGNED_BY_ID in NUMBER,
  X_OLD_CUST_ACCOUNT_ID in NUMBER,
  X_NEW_CUST_ACCOUNT_ID in NUMBER,
  X_OLD_CUSTOMER_ID in NUMBER,
  X_NEW_CUSTOMER_ID in NUMBER,
  X_OLD_ADDRESS_ID in NUMBER,
  X_NEW_ADDRESS_ID in NUMBER,
  X_OLD_PLANNED_START_DATE in DATE,
  X_NEW_PLANNED_START_DATE in DATE,
  X_OLD_PLANNED_END_DATE in DATE,
  X_NEW_PLANNED_END_DATE in DATE,
  X_OLD_SCHEDULED_START_DATE in DATE,
  X_NEW_SCHEDULED_START_DATE in DATE,
  X_OLD_SCHEDULED_END_DATE in DATE,
  X_NEW_SCHEDULED_END_DATE in DATE,
  X_OLD_ACTUAL_START_DATE in DATE,
  X_NEW_ACTUAL_START_DATE in DATE,
  X_OLD_ACTUAL_END_DATE in DATE,
  X_NEW_ACTUAL_END_DATE in DATE,
  X_OLD_SOURCE_OBJECT_TYPE_CODE in VARCHAR2,
  X_NEW_SOURCE_OBJECT_TYPE_CODE in VARCHAR2,
  X_OLD_TIMEZONE_ID in NUMBER,
  X_NEW_TIMEZONE_ID in NUMBER,
  X_OLD_SOURCE_OBJECT_ID in NUMBER,
  X_NEW_SOURCE_OBJECT_ID in NUMBER,
  X_OLD_SOURCE_OBJECT_NAME in VARCHAR2,
  X_NEW_SOURCE_OBJECT_NAME in VARCHAR2,
  X_OLD_DURATION in NUMBER,
  X_NEW_DURATION in NUMBER,
  X_OLD_DURATION_UOM in VARCHAR2,
  X_NEW_DURATION_UOM in VARCHAR2,
  X_OLD_PLANNED_EFFORT in NUMBER,
  X_NEW_PLANNED_EFFORT in NUMBER,
  X_OLD_PLANNED_EFFORT_UOM in VARCHAR2,
  X_NEW_PLANNED_EFFORT_UOM in VARCHAR2,
  X_OLD_ACTUAL_EFFORT in NUMBER,
  X_NEW_ACTUAL_EFFORT in NUMBER,
  X_OLD_ACTUAL_EFFORT_UOM in VARCHAR2,
  X_NEW_ACTUAL_EFFORT_UOM in VARCHAR2,
  X_OLD_PERCENTAGE_COMPLETE in NUMBER,
  X_NEW_PERCENTAGE_COMPLETE in NUMBER,
  X_OLD_REASON_CODE in VARCHAR2,
  X_NEW_REASON_CODE in VARCHAR2,
  X_PRIVATE_CHANGED_FLAG in VARCHAR2,
  X_PUBLISH_CHANGED_FLAG in VARCHAR2,
  X_RESTRICT_CLOSURE_CHANGE_FLAG in VARCHAR2,
  X_MULTI_BOOKED_CHANGED_FLAG in VARCHAR2,
  X_MILESTONE_CHANGED_FLAG in VARCHAR2,
  X_HOLIDAY_CHANGED_FLAG in VARCHAR2,
  X_BILLABLE_CHANGED_FLAG in VARCHAR2,
  X_OLD_BOUND_MODE_CODE in VARCHAR2,
  X_NEW_BOUND_MODE_CODE in VARCHAR2,
  X_SOFT_BOUND_CHANGED_FLAG in VARCHAR2,
  X_OLD_WORKFLOW_PROCESS_ID in NUMBER,
  X_NEW_WORKFLOW_PROCESS_ID in NUMBER,
  X_NOTIFICATION_CHANGED_FLAG in VARCHAR2,
  X_OLD_NOTIFICATION_PERIOD in NUMBER,
  X_OLD_TASK_NAME in VARCHAR2,
  X_NEW_TASK_NAME in VARCHAR2,
  X_OLD_DESCRIPTION in VARCHAR2,
  X_NEW_DESCRIPTION in VARCHAR2,
  X_LAST_UPDATE_DATE in DATE,
  X_LAST_UPDATED_BY in NUMBER,
  X_LAST_UPDATE_LOGIN in NUMBER,
  X_NEW_ESCALATION_LEVEL in VARCHAR2,
  X_OLD_ESCALATION_LEVEL in VARCHAR2
) is
begin
  update JTF_TASK_AUDITS_B set
    NEW_NOTIFICATION_PERIOD = X_NEW_NOTIFICATION_PERIOD,
    OLD_NOTIFICATION_PERIOD_UOM = X_OLD_NOTIFICATION_PERIOD_UOM,
    NEW_NOTIFICATION_PERIOD_UOM = X_NEW_NOTIFICATION_PERIOD_UOM,
    OLD_PARENT_TASK_ID = X_OLD_PARENT_TASK_ID,
    NEW_PARENT_TASK_ID = X_NEW_PARENT_TASK_ID,
    OLD_RECURRENCE_RULE_ID = X_OLD_RECURRENCE_RULE_ID,
    NEW_RECURRENCE_RULE_ID = X_NEW_RECURRENCE_RULE_ID,
    PALM_CHANGED_FLAG = X_PALM_CHANGED_FLAG,
    WINCE_CHANGED_FLAG = X_WINCE_CHANGED_FLAG,
    LAPTOP_CHANGED_FLAG = X_LAPTOP_CHANGED_FLAG,
    DEVICE1_CHANGED_FLAG = X_DEVICE1_CHANGED_FLAG,
    DEVICE2_CHANGED_FLAG = X_DEVICE2_CHANGED_FLAG,
    DEVICE3_CHANGED_FLAG = X_DEVICE3_CHANGED_FLAG,
    OLD_CURRENCY_CODE = X_OLD_CURRENCY_CODE,
    NEW_CURRENCY_CODE = X_NEW_CURRENCY_CODE,
    OLD_COSTS = X_OLD_COSTS,
    NEW_COSTS = X_NEW_COSTS,
    OLD_ORG_ID = X_OLD_ORG_ID,
    NEW_ORG_ID = X_NEW_ORG_ID,
    TASK_ID = X_TASK_ID,
    OLD_TASK_TYPE_ID = X_OLD_TASK_TYPE_ID,
    NEW_TASK_TYPE_ID = X_NEW_TASK_TYPE_ID,
    OLD_TASK_STATUS_ID = X_OLD_TASK_STATUS_ID,
    NEW_TASK_STATUS_ID = X_NEW_TASK_STATUS_ID,
    OLD_TASK_PRIORITY_ID = X_OLD_TASK_PRIORITY_ID,
    NEW_TASK_PRIORITY_ID = X_NEW_TASK_PRIORITY_ID,
    OLD_OWNER_ID = X_OLD_OWNER_ID,
    NEW_OWNER_ID = X_NEW_OWNER_ID,
    OLD_OWNER_TYPE_CODE = X_OLD_OWNER_TYPE_CODE,
    NEW_OWNER_TYPE_CODE = X_NEW_OWNER_TYPE_CODE,
    OLD_ASSIGNED_BY_ID = X_OLD_ASSIGNED_BY_ID,
    NEW_ASSIGNED_BY_ID = X_NEW_ASSIGNED_BY_ID,
    OLD_CUST_ACCOUNT_ID = X_OLD_CUST_ACCOUNT_ID,
    NEW_CUST_ACCOUNT_ID = X_NEW_CUST_ACCOUNT_ID,
    OLD_CUSTOMER_ID = X_OLD_CUSTOMER_ID,
    NEW_CUSTOMER_ID = X_NEW_CUSTOMER_ID,
    OLD_ADDRESS_ID = X_OLD_ADDRESS_ID,
    NEW_ADDRESS_ID = X_NEW_ADDRESS_ID,
    OLD_PLANNED_START_DATE = X_OLD_PLANNED_START_DATE,
    NEW_PLANNED_START_DATE = X_NEW_PLANNED_START_DATE,
    OLD_PLANNED_END_DATE = X_OLD_PLANNED_END_DATE,
    NEW_PLANNED_END_DATE = X_NEW_PLANNED_END_DATE,
    OLD_SCHEDULED_START_DATE = X_OLD_SCHEDULED_START_DATE,
    NEW_SCHEDULED_START_DATE = X_NEW_SCHEDULED_START_DATE,
    OLD_SCHEDULED_END_DATE = X_OLD_SCHEDULED_END_DATE,
    NEW_SCHEDULED_END_DATE = X_NEW_SCHEDULED_END_DATE,
    OLD_ACTUAL_START_DATE = X_OLD_ACTUAL_START_DATE,
    NEW_ACTUAL_START_DATE = X_NEW_ACTUAL_START_DATE,
    OLD_ACTUAL_END_DATE = X_OLD_ACTUAL_END_DATE,
    NEW_ACTUAL_END_DATE = X_NEW_ACTUAL_END_DATE,
    OLD_SOURCE_OBJECT_TYPE_CODE = X_OLD_SOURCE_OBJECT_TYPE_CODE,
    NEW_SOURCE_OBJECT_TYPE_CODE = X_NEW_SOURCE_OBJECT_TYPE_CODE,
    OLD_TIMEZONE_ID = X_OLD_TIMEZONE_ID,
    NEW_TIMEZONE_ID = X_NEW_TIMEZONE_ID,
    OLD_SOURCE_OBJECT_ID = X_OLD_SOURCE_OBJECT_ID,
    NEW_SOURCE_OBJECT_ID = X_NEW_SOURCE_OBJECT_ID,
    OLD_SOURCE_OBJECT_NAME = X_OLD_SOURCE_OBJECT_NAME,
    NEW_SOURCE_OBJECT_NAME = X_NEW_SOURCE_OBJECT_NAME,
    OLD_DURATION = X_OLD_DURATION,
    NEW_DURATION = X_NEW_DURATION,
    OLD_DURATION_UOM = X_OLD_DURATION_UOM,
    NEW_DURATION_UOM = X_NEW_DURATION_UOM,
    OLD_PLANNED_EFFORT = X_OLD_PLANNED_EFFORT,
    NEW_PLANNED_EFFORT = X_NEW_PLANNED_EFFORT,
    OLD_PLANNED_EFFORT_UOM = X_OLD_PLANNED_EFFORT_UOM,
    NEW_PLANNED_EFFORT_UOM = X_NEW_PLANNED_EFFORT_UOM,
    OLD_ACTUAL_EFFORT = X_OLD_ACTUAL_EFFORT,
    NEW_ACTUAL_EFFORT = X_NEW_ACTUAL_EFFORT,
    OLD_ACTUAL_EFFORT_UOM = X_OLD_ACTUAL_EFFORT_UOM,
    NEW_ACTUAL_EFFORT_UOM = X_NEW_ACTUAL_EFFORT_UOM,
    OLD_PERCENTAGE_COMPLETE = X_OLD_PERCENTAGE_COMPLETE,
    NEW_PERCENTAGE_COMPLETE = X_NEW_PERCENTAGE_COMPLETE,
    OLD_REASON_CODE = X_OLD_REASON_CODE,
    NEW_REASON_CODE = X_NEW_REASON_CODE,
    PRIVATE_CHANGED_FLAG = X_PRIVATE_CHANGED_FLAG,
    PUBLISH_CHANGED_FLAG = X_PUBLISH_CHANGED_FLAG,
    RESTRICT_CLOSURE_CHANGE_FLAG = X_RESTRICT_CLOSURE_CHANGE_FLAG,
    MULTI_BOOKED_CHANGED_FLAG = X_MULTI_BOOKED_CHANGED_FLAG,
    MILESTONE_CHANGED_FLAG = X_MILESTONE_CHANGED_FLAG,
    HOLIDAY_CHANGED_FLAG = X_HOLIDAY_CHANGED_FLAG,
    BILLABLE_CHANGED_FLAG = X_BILLABLE_CHANGED_FLAG,
    OLD_BOUND_MODE_CODE = X_OLD_BOUND_MODE_CODE,
    NEW_BOUND_MODE_CODE = X_NEW_BOUND_MODE_CODE,
    SOFT_BOUND_CHANGED_FLAG = X_SOFT_BOUND_CHANGED_FLAG,
    OLD_WORKFLOW_PROCESS_ID = X_OLD_WORKFLOW_PROCESS_ID,
    NEW_WORKFLOW_PROCESS_ID = X_NEW_WORKFLOW_PROCESS_ID,
    NOTIFICATION_CHANGED_FLAG = X_NOTIFICATION_CHANGED_FLAG,
    OLD_NOTIFICATION_PERIOD = X_OLD_NOTIFICATION_PERIOD,
    LAST_UPDATE_DATE = X_LAST_UPDATE_DATE,
    LAST_UPDATED_BY = X_LAST_UPDATED_BY,
    LAST_UPDATE_LOGIN = X_LAST_UPDATE_LOGIN,
    NEW_ESCALATION_LEVEL = X_NEW_ESCALATION_LEVEL,
    OLD_ESCALATION_LEVEL = X_OLD_ESCALATION_LEVEL
  where TASK_AUDIT_ID = X_TASK_AUDIT_ID;

  if (sql%notfound) then
    raise no_data_found;
  end if;

  update JTF_TASK_AUDITS_TL set
    OLD_TASK_NAME = X_OLD_TASK_NAME,
    NEW_TASK_NAME = X_NEW_TASK_NAME,
    OLD_DESCRIPTION = X_OLD_DESCRIPTION,
    NEW_DESCRIPTION = X_NEW_DESCRIPTION,
    LAST_UPDATE_DATE = X_LAST_UPDATE_DATE,
    LAST_UPDATED_BY = X_LAST_UPDATED_BY,
    LAST_UPDATE_LOGIN = X_LAST_UPDATE_LOGIN,
    SOURCE_LANG = userenv('LANG')
  where TASK_AUDIT_ID = X_TASK_AUDIT_ID
  and userenv('LANG') in (LANGUAGE, SOURCE_LANG);

  if (sql%notfound) then
    raise no_data_found;
  end if;
end UPDATE_ROW;

procedure DELETE_ROW (
  X_TASK_AUDIT_ID in NUMBER
) is
begin
  delete from JTF_TASK_AUDITS_TL
  where TASK_AUDIT_ID = X_TASK_AUDIT_ID;

  if (sql%notfound) then
    raise no_data_found;
  end if;

  delete from JTF_TASK_AUDITS_B
  where TASK_AUDIT_ID = X_TASK_AUDIT_ID;

  if (sql%notfound) then
    raise no_data_found;
  end if;
end DELETE_ROW;

procedure ADD_LANGUAGE
is
begin
  delete from JTF_TASK_AUDITS_TL T
  where not exists
    (select NULL
    from JTF_TASK_AUDITS_B B
    where B.TASK_AUDIT_ID = T.TASK_AUDIT_ID
    );

  update JTF_TASK_AUDITS_TL T set (
      OLD_TASK_NAME,
      NEW_TASK_NAME,
      OLD_DESCRIPTION,
      NEW_DESCRIPTION
    ) = (select
      B.OLD_TASK_NAME,
      B.NEW_TASK_NAME,
      B.OLD_DESCRIPTION,
      B.NEW_DESCRIPTION
    from JTF_TASK_AUDITS_TL B
    where B.TASK_AUDIT_ID = T.TASK_AUDIT_ID
    and B.LANGUAGE = T.SOURCE_LANG)
  where (
      T.TASK_AUDIT_ID,
      T.LANGUAGE
  ) in (select
      SUBT.TASK_AUDIT_ID,
      SUBT.LANGUAGE
    from JTF_TASK_AUDITS_TL SUBB, JTF_TASK_AUDITS_TL SUBT
    where SUBB.TASK_AUDIT_ID = SUBT.TASK_AUDIT_ID
    and SUBB.LANGUAGE = SUBT.SOURCE_LANG
    and (SUBB.OLD_TASK_NAME <> SUBT.OLD_TASK_NAME
      or SUBB.NEW_TASK_NAME <> SUBT.NEW_TASK_NAME
      or SUBB.OLD_DESCRIPTION <> SUBT.OLD_DESCRIPTION
      or (SUBB.OLD_DESCRIPTION is null and SUBT.OLD_DESCRIPTION is not null)
      or (SUBB.OLD_DESCRIPTION is not null and SUBT.OLD_DESCRIPTION is null)
      or SUBB.NEW_DESCRIPTION <> SUBT.NEW_DESCRIPTION
      or (SUBB.NEW_DESCRIPTION is null and SUBT.NEW_DESCRIPTION is not null)
      or (SUBB.NEW_DESCRIPTION is not null and SUBT.NEW_DESCRIPTION is null)
  ));

  insert into JTF_TASK_AUDITS_TL (
    TASK_AUDIT_ID,
    OLD_TASK_NAME,
    NEW_TASK_NAME,
    OLD_DESCRIPTION,
    NEW_DESCRIPTION,
    CREATED_BY,
    CREATION_DATE,
    LAST_UPDATED_BY,
    LAST_UPDATE_DATE,
    LAST_UPDATE_LOGIN,
    LANGUAGE,
    SOURCE_LANG
  ) select
    B.TASK_AUDIT_ID,
    B.OLD_TASK_NAME,
    B.NEW_TASK_NAME,
    B.OLD_DESCRIPTION,
    B.NEW_DESCRIPTION,
    B.CREATED_BY,
    B.CREATION_DATE,
    B.LAST_UPDATED_BY,
    B.LAST_UPDATE_DATE,
    B.LAST_UPDATE_LOGIN,
    L.LANGUAGE_CODE,
    B.SOURCE_LANG
  from JTF_TASK_AUDITS_TL B, FND_LANGUAGES L
  where L.INSTALLED_FLAG in ('I', 'B')
  and B.LANGUAGE = userenv('LANG')
  and not exists
    (select NULL
    from JTF_TASK_AUDITS_TL T
    where T.TASK_AUDIT_ID = B.TASK_AUDIT_ID
    and T.LANGUAGE = L.LANGUAGE_CODE);
end ADD_LANGUAGE;

end JTF_TASK_AUDITS_PKG;

/
