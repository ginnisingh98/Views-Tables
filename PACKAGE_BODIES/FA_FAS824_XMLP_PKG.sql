--------------------------------------------------------
--  DDL for Package Body FA_FAS824_XMLP_PKG
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE PACKAGE BODY "APPS"."FA_FAS824_XMLP_PKG" AS
/* $Header: FAS824B.pls 120.0.12010000.1 2008/07/28 13:15:43 appldev ship $ */
  FUNCTION BOOKFORMULA RETURN VARCHAR2 IS
  BEGIN
    DECLARE
      L_BOOK VARCHAR2(15);
      L_ACCOUNTING_FLEX_STRUCTURE NUMBER(15);
      L_CURRENCY_CODE VARCHAR2(15);
      L_PRECISION NUMBER(15);
    BEGIN
      SELECT
        BC.BOOK_TYPE_CODE,
        BC.ACCOUNTING_FLEX_STRUCTURE,
        SOB.CURRENCY_CODE,
        CUR.PRECISION
      INTO L_BOOK,L_ACCOUNTING_FLEX_STRUCTURE,L_CURRENCY_CODE,L_PRECISION
      FROM
        FA_BOOK_CONTROLS BC,
        GL_SETS_OF_BOOKS SOB,
        FND_CURRENCIES CUR
      WHERE BC.BOOK_TYPE_CODE = P_BOOK
        AND SOB.SET_OF_BOOKS_ID = BC.SET_OF_BOOKS_ID
        AND SOB.CURRENCY_CODE = CUR.CURRENCY_CODE;
      ACCOUNTING_FLEX_STRUCTURE := L_ACCOUNTING_FLEX_STRUCTURE;
      CURRENCY_CODE := L_CURRENCY_CODE;
      P_MIN_PRECISION := L_PRECISION;
      RETURN (L_BOOK);
    END;
    RETURN NULL;
  END BOOKFORMULA;
  FUNCTION REPORT_NAMEFORMULA(COMPANY_NAME IN VARCHAR2
                             ,LAST_MASS_ADDITIONS_POST IN NUMBER) RETURN VARCHAR2 IS
  BEGIN
    DECLARE
      L_REPORT_NAME VARCHAR2(80);
      L_CONC_PROGRAM_ID NUMBER;
    BEGIN
      RP_COMPANY_NAME := COMPANY_NAME;
      RP_REQUEST_ID := LTRIM(TO_CHAR(LAST_MASS_ADDITIONS_POST));
      SELECT
        CR.CONCURRENT_PROGRAM_ID
      INTO L_CONC_PROGRAM_ID
      FROM
        FND_CONCURRENT_REQUESTS CR
      WHERE CR.PROGRAM_APPLICATION_ID = 140
        AND CR.REQUEST_ID = P_CONC_REQUEST_ID;
      SELECT
        CP.USER_CONCURRENT_PROGRAM_NAME
      INTO L_REPORT_NAME
      FROM
        FND_CONCURRENT_PROGRAMS_VL CP
      WHERE CP.CONCURRENT_PROGRAM_ID = L_CONC_PROGRAM_ID
        AND CP.APPLICATION_ID = 140;
	L_REPORT_NAME := substr(L_REPORT_NAME,1,instr(L_REPORT_NAME,' (XML)'));
      RP_REPORT_NAME := L_REPORT_NAME;
      RETURN (L_REPORT_NAME);
    EXCEPTION
      WHEN OTHERS THEN
        RP_REPORT_NAME := 'MASS ADDITIONS POSTING REPORT';
        RETURN ('MASS ADDITIONS POSTING REPORT');
    END;
    RETURN NULL;
  END REPORT_NAMEFORMULA;
  FUNCTION BEFOREREPORT RETURN BOOLEAN IS
  BEGIN
    P_CONC_REQUEST_ID := FND_GLOBAL.CONC_REQUEST_ID;
    /*SRW.USER_EXIT('FND SRWINIT')*/NULL;
    RETURN (TRUE);
  END BEFOREREPORT;
  FUNCTION AFTERREPORT RETURN BOOLEAN IS
  BEGIN
    /*SRW.USER_EXIT('FND SRWEXIT')*/NULL;
    RETURN (TRUE);
  END AFTERREPORT;
  FUNCTION NEW_COSTFORMULA(SUM_UNITS IN VARCHAR2
                          ,COST IN NUMBER
                          ,FIXED_ASSETS_UNITS IN NUMBER
                          ,MASS_ADDITION_ID IN NUMBER) RETURN NUMBER IS
    L_SUM_UNITS NUMBER;
    L_COST NUMBER;
    L_NEW_COST NUMBER;
  BEGIN
    /*SRW.REFERENCE(SUM_UNITS)*/NULL;
    /*SRW.REFERENCE(COST)*/NULL;
    /*SRW.REFERENCE(FIXED_ASSETS_UNITS)*/NULL;
    /*SRW.REFERENCE(MASS_ADDITION_ID)*/NULL;
    IF (SUM_UNITS = 'YES') THEN
      SELECT
        SUM(UNITS)
      INTO L_SUM_UNITS
      FROM
        FA_MASSADD_DISTRIBUTIONS
      WHERE MASS_ADDITION_ID = MASS_ADDITION_ID;
      L_NEW_COST := COST / L_SUM_UNITS;
    ELSE
      L_NEW_COST := COST / FIXED_ASSETS_UNITS;
    END IF;
    L_NEW_COST := ROUND(L_NEW_COST
                       ,2);
    RETURN (L_NEW_COST);
  EXCEPTION
    WHEN OTHERS THEN
      RAISE;
  END NEW_COSTFORMULA;
  FUNCTION ACCOUNTING_FLEX_STRUCTURE_P RETURN NUMBER IS
  BEGIN
    RETURN ACCOUNTING_FLEX_STRUCTURE;
  END ACCOUNTING_FLEX_STRUCTURE_P;
  FUNCTION ACCT_BAL_APROMPT_P RETURN VARCHAR2 IS
  BEGIN
    RETURN ACCT_BAL_APROMPT;
  END ACCT_BAL_APROMPT_P;
  FUNCTION ACCT_CC_APROMPT_P RETURN VARCHAR2 IS
  BEGIN
    RETURN ACCT_CC_APROMPT;
  END ACCT_CC_APROMPT_P;
  FUNCTION CURRENCY_CODE_P RETURN VARCHAR2 IS
  BEGIN
    RETURN CURRENCY_CODE;
  END CURRENCY_CODE_P;
  FUNCTION RP_COMPANY_NAME_P RETURN VARCHAR2 IS
  BEGIN
    RETURN RP_COMPANY_NAME;
  END RP_COMPANY_NAME_P;
  FUNCTION RP_REPORT_NAME_P RETURN VARCHAR2 IS
  BEGIN
    RETURN RP_REPORT_NAME;
  END RP_REPORT_NAME_P;
  FUNCTION RP_REQUEST_ID_P RETURN VARCHAR2 IS
  BEGIN
    RETURN RP_REQUEST_ID;
  END RP_REQUEST_ID_P;
  FUNCTION RP_BAL_APROMPT_P RETURN VARCHAR2 IS
  BEGIN
    RETURN RP_BAL_APROMPT;
  END RP_BAL_APROMPT_P;
  FUNCTION RP_CC_APROMPT_P RETURN VARCHAR2 IS
  BEGIN
    RETURN RP_CC_APROMPT;
  END RP_CC_APROMPT_P;
END FA_FAS824_XMLP_PKG;


/
