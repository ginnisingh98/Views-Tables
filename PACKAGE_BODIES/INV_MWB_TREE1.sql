--------------------------------------------------------
--  DDL for Package Body INV_MWB_TREE1
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE PACKAGE BODY "APPS"."INV_MWB_TREE1" AS
/* $Header: INVMWTRB.pls 120.48.12010000.9 2010/04/07 09:59:17 jianxzhu ship $ */


  -- Controlled: 0 Don't Care, 1 No, 2 Yes
  -- Add organization nodes for the given parameters


  /*procedure trace1( a in varchar2 default null, b in varchar2 default null,c number default null) is
  begin
     IF (length(b||a) < 4000) THEN
        insert into amintemp1 VALUES (b || a);
     END IF;
     COMMIT;
  end; */

  g_pkg_name CONSTANT VARCHAR2(30) := 'INV_MWB_TREE1';

  PROCEDURE add_document_numbers(
    x_node_value          IN OUT NOCOPY NUMBER
  , x_node_tbl            IN OUT NOCOPY fnd_apptree.node_tbl_type
  , x_tbl_index           IN OUT NOCOPY NUMBER)
IS
   select_str varchar2(10000);
   where_str varchar2(10000);

   query_str        VARCHAR2(10000);
   query_hdl        NUMBER;
   rows_processed   NUMBER;
   doc_number       VARCHAR2(100);
   doc_header_id    NUMBER;
   i                NUMBER    := x_tbl_index;
   j                NUMBER    := x_node_value;
   lpn_from_id      wms_license_plate_numbers.lpn_id%TYPE;
   lpn_to_id        wms_license_plate_numbers.lpn_id%TYPE;
   l_procedure_name CONSTANT VARCHAR2(30) := 'ADD_DOCUMENT_NUMBERS';
BEGIN
   inv_mwb_globals.print_msg( g_pkg_name, l_procedure_name, 'Entered' );

   IF inv_mwb_globals.g_tree_doc_type_id = 1   -- Purchase Order
   AND inv_mwb_globals.g_source_org_id IS NULL
   AND inv_mwb_globals.g_internal_order_id IS NULL
   AND inv_mwb_globals.g_shipment_header_id_interorg IS NULL
   AND inv_mwb_globals.g_req_header_id IS NULL THEN
   -- CLM project, bug 9403291

      query_str := ' SELECT distinct pha.segment1, pha.po_header_id
                       FROM  po_headers_trx_v pha
                           , po_lines_trx_v pla
                           , mtl_supply ms
                           , mtl_system_items_kfv msik
                       WHERE pha.po_header_id = ms.po_header_id
                         AND pla.po_line_id = ms.po_line_id
                         AND pha.authorization_status = ''APPROVED''
                         AND ms.destination_type_code = ''INVENTORY''
                         AND ms.item_id = msik.inventory_item_id
                         AND ms.to_organization_id = msik.organization_id
                         AND ms.supply_type_code IN (''PO'')
                         AND pha.segment1 IS NOT NULL';

/*      IF inv_mwb_globals.g_include_po_without_asn = 1 THEN
         query_str := query_str || ' AND ms.supply_type_code IN (''PO'',''SHIPMENT'') ';
      ELSIF inv_mwb_globals.g_include_po_without_asn = 0 THEN
--         query_str := query_str || ' AND ms.supply_type_code = ''SHIPMENT'' ';
         query_str := query_str || ' AND ms.shipment_header_id IS NULL ';
      END IF;
*/
      IF inv_mwb_globals.g_vendor_item IS NOT NULL THEN
         query_str := query_str || ' AND pla.vendor_product_num = :inb_vendor_item ';
      END IF;

      IF inv_mwb_globals.g_lpn_from_id IS NOT NULL
      OR inv_mwb_globals.g_lpn_to_id IS NOT NULL
      OR inv_mwb_globals.g_serial_from IS NOT NULL
      OR inv_mwb_globals.g_serial_to IS NOT NULL
      OR inv_mwb_globals.g_lot_from IS NOT NULL
      OR inv_mwb_globals.g_lot_to IS NOT NULL THEN
         query_str := query_str || ' AND 1 = 2 ';
      END IF;

      inv_mwb_globals.print_msg( g_pkg_name, l_procedure_name, query_str );

      IF inv_mwb_globals.g_cost_group_id IS NOT NULL THEN
         query_str := query_str || ' AND ms.cost_group_id = :inb_cost_group_id ';
      END IF;

      IF (inv_mwb_globals.g_expected_from_date IS NOT NULL AND
         inv_mwb_globals.g_expected_to_date IS NOT NULL AND
         inv_mwb_globals.g_expected_from_date = inv_mwb_globals.g_expected_to_date) THEN
            query_str := query_str || ' AND ms.expected_delivery_date = :inb_from_date';
      END IF;

      IF inv_mwb_globals.g_expected_from_date IS NOT NULL THEN
         query_str := query_str || ' AND ms.expected_delivery_date  >= :inb_from_date';
      END IF;

      IF inv_mwb_globals.g_expected_to_date IS NOT NULL THEN
         query_str := query_str || ' AND ms.expected_delivery_date  <= :inb_to_date';
      END IF;

      inv_mwb_globals.print_msg( g_pkg_name, l_procedure_name, query_str );

      /*
       *  You always add documents under the Organization node,
       *  Always restrict the documents based on the 'Tree Organization Id'
       */
      query_str := query_str || ' AND ms.to_organization_id = :inb_to_org_id ';

      IF inv_mwb_globals.g_inventory_item_id IS NOT NULL THEN
         query_str := query_str || ' AND ms.item_id = :inb_item_id ';
      END IF;

      -- ER(9158529 client)
      IF inv_mwb_globals.g_client_code IS NOT NULL THEN
         query_str := query_str || ' AND ms.item_id in (select DISTINCT inventory_item_id from mtl_system_items_b where wms_deploy.get_client_code(inventory_item_id) = :inb_client_code) ';
      END IF;
      -- ER(9158529 client)

      IF inv_mwb_globals.g_inventory_item_id IS NULL
      AND inv_mwb_globals.g_item_description IS NOT NULL THEN
         query_str := query_str || ' AND msik.description like :inb_item_description ';
      END IF;

      -- ER(9158529)
      IF inv_mwb_globals.g_category_set_id IS NOT NULL THEN
         query_str := query_str || ' AND ms.item_id in '
                                        || ' (select DISTINCT inventory_item_id from mtl_item_categories '
                                        || ' where organization_id = :inb_to_org_id '
                                        || ' and category_set_id = :inb_category_set_id '
                                        || ' and category_id = nvl(:inb_category_id, category_id)) ' ;
      END IF;
      -- ER(9158529)

      IF inv_mwb_globals.g_po_header_id IS NOT NULL THEN
         query_str := query_str || ' AND pha.po_header_id = :inb_po_header_id ';
      END IF;

      IF  inv_mwb_globals.g_po_release_id IS NOT NULL THEN
         query_str := query_str || ' AND ms.po_release_id = :inb_po_release_id ';
      END IF;

      IF inv_mwb_globals.g_vendor_id IS NOT NULL THEN
         query_str := query_str || ' AND pha.vendor_id = :inb_vendor_id ';
         IF inv_mwb_globals.g_vendor_site_id IS NOT NULL THEN
            query_str := query_str || ' AND pha.vendor_site_id = :inb_vendor_site_id ';
         END IF;
      END IF;

      query_str := query_str || ' ORDER BY pha.segment1 ';

      inv_mwb_globals.print_msg( g_pkg_name, l_procedure_name, query_str );

      query_hdl  := DBMS_SQL.open_cursor;
      DBMS_SQL.parse(query_hdl, query_str, DBMS_SQL.native);

      IF inv_mwb_globals.g_vendor_item IS NOT NULL THEN
         DBMS_SQL.bind_variable(query_hdl, 'inb_vendor_item', inv_mwb_globals.g_vendor_item);
      END IF;

      IF inv_mwb_globals.g_cost_group_id IS NOT NULL THEN
         DBMS_SQL.bind_variable(query_hdl, 'inb_cost_group_id', inv_mwb_globals.g_cost_group_id);
      END IF;

      IF (inv_mwb_globals.g_expected_from_date IS NOT NULL
      AND inv_mwb_globals.g_expected_to_date IS NOT NULL
      AND inv_mwb_globals.g_expected_from_date = inv_mwb_globals.g_expected_to_date) THEN
         DBMS_SQL.bind_variable(query_hdl, 'inb_from_date', inv_mwb_globals.g_expected_from_date);
      END IF;

      IF inv_mwb_globals.g_expected_from_date IS NOT NULL THEN
         DBMS_SQL.bind_variable(query_hdl, 'inb_from_date', inv_mwb_globals.g_expected_from_date);
      END IF;

      IF inv_mwb_globals.g_expected_to_date IS NOT NULL THEN
         DBMS_SQL.bind_variable(query_hdl, 'inb_to_date', inv_mwb_globals.g_expected_to_date);
      END IF;

      /*
       *  You always add documents under the Organization node,
       *  Always restrict the documents based on the 'Tree Organization Id'
       */
      DBMS_SQL.bind_variable(query_hdl, 'inb_to_org_id', inv_mwb_globals.g_tree_organization_id);

      IF inv_mwb_globals.g_inventory_item_id IS NOT NULL THEN
         DBMS_SQL.bind_variable(query_hdl, 'inb_item_id', inv_mwb_globals.g_inventory_item_id);
      END IF;

      -- ER(9158529 client)
      IF inv_mwb_globals.g_client_code IS NOT NULL THEN
         DBMS_SQL.bind_variable(query_hdl, 'inb_client_code', inv_mwb_globals.g_client_code);
      END IF;
      -- ER(9158529 client)

      IF inv_mwb_globals.g_inventory_item_id IS NULL
      AND inv_mwb_globals.g_item_description IS NOT NULL THEN
         DBMS_SQL.bind_variable(query_hdl, 'inb_item_description', inv_mwb_globals.g_item_description);
      END IF;

      -- ER(9158529)
      IF inv_mwb_globals.g_category_set_id IS NOT NULL THEN
         DBMS_SQL.bind_variable(query_hdl, 'inb_to_org_id', inv_mwb_globals.g_tree_organization_id);
         DBMS_SQL.bind_variable(query_hdl, 'inb_category_set_id', inv_mwb_globals.g_category_set_id);
         DBMS_SQL.bind_variable(query_hdl, 'inb_category_id', inv_mwb_globals.g_category_id);
      END IF;
      -- ER(9158529)

      IF inv_mwb_globals.g_po_header_id IS NOT NULL THEN
         DBMS_SQL.bind_variable(query_hdl, 'inb_po_header_id', inv_mwb_globals.g_po_header_id);
      END IF;

      IF  inv_mwb_globals.g_po_release_id IS NOT NULL THEN
         DBMS_SQL.bind_variable(query_hdl, 'inb_po_release_id', inv_mwb_globals.g_po_release_id);
      END IF;

      IF inv_mwb_globals.g_vendor_id IS NOT NULL THEN
         DBMS_SQL.bind_variable(query_hdl, 'inb_vendor_id', inv_mwb_globals.g_vendor_id);
         IF inv_mwb_globals.g_vendor_site_id IS NOT NULL THEN
            DBMS_SQL.bind_variable(query_hdl, 'inb_vendor_site_id', inv_mwb_globals.g_vendor_site_id);
         END IF;
      END IF;

      DBMS_SQL.define_column(query_hdl, 1, doc_number, 25);
      DBMS_SQL.define_column(query_hdl, 2, doc_header_id);

      rows_processed  := DBMS_SQL.EXECUTE(query_hdl);

      LOOP
         -- fetch a row
         IF DBMS_SQL.fetch_rows(query_hdl) > 0 THEN
         -- fetch columns from the row
            DBMS_SQL.column_value(query_hdl, 1, doc_number);
            DBMS_SQL.column_value(query_hdl, 2, doc_header_id);

            IF j >= inv_mwb_globals.g_tree_node_low_value
            AND doc_number IS NOT NULL THEN
            x_node_tbl(i).state  := inv_mwb_globals.g_tree_node_state;
            x_node_tbl(i).DEPTH  := 1;
            x_node_tbl(i).label  := doc_number;
            x_node_tbl(i).icon   := 'tree_document';
            x_node_tbl(i).VALUE  := doc_header_id;
            x_node_tbl(i).TYPE   := 'DOCNUM';
            i                    := i + 1;
            END IF;

            EXIT WHEN j >= inv_mwb_globals.g_tree_node_high_value;
            j  := j + 1;
         ELSE
            EXIT;
         END IF;
      END LOOP;

   END IF; -- Purchase Order


   IF inv_mwb_globals.g_tree_doc_type_id = 4   -- ASN
   AND inv_mwb_globals.g_source_org_id IS NULL
   AND inv_mwb_globals.g_internal_order_id IS NULL
   AND inv_mwb_globals.g_shipment_header_id_interorg IS NULL
   AND inv_mwb_globals.g_req_header_id IS NULL
   AND inv_mwb_globals.g_po_header_id IS NULL THEN

   inv_mwb_globals.print_msg( g_pkg_name, l_procedure_name, 'Adding ASN' );
      select_str := ' SELECT distinct rsh.shipment_num, rsh.shipment_header_id FROM mtl_supply ms
                                  , rcv_shipment_lines rsl
                                  , rcv_shipment_headers rsh ';

      where_str := ' WHERE ms.shipment_header_id = rsh.shipment_header_id (+)
                       AND ms.shipment_line_id = rsl.shipment_line_id (+)
                       AND ms.supply_type_code = ''SHIPMENT''
                       AND ms.destination_type_code = ''INVENTORY''
                       AND rsh.asn_type IS NOT NULL ';

      IF inv_mwb_globals.g_lpn_from_id IS NOT NULL
      OR inv_mwb_globals.g_lpn_to_id IS NOT NULL THEN
         select_str := select_str || ' , wms_license_plate_numbers wlpn ';
         where_str := where_str  ||' AND rsl.asn_lpn_id = wlpn.lpn_id ';
      END IF;

      IF inv_mwb_globals.g_vendor_item IS NOT NULL THEN
         where_str := where_str || ' AND rsl.vendor_item_num = :inb_vendor_item ';
      END IF;

      IF inv_mwb_globals.g_cost_group_id IS NOT NULL THEN
         where_str := where_str || ' AND rsl.cost_group_id = :inb_cost_group_id ';
      END IF;

      IF (inv_mwb_globals.g_expected_from_date IS NOT NULL AND
         inv_mwb_globals.g_expected_to_date IS NOT NULL AND
         inv_mwb_globals.g_expected_from_date = inv_mwb_globals.g_expected_to_date) THEN
            where_str := where_str || ' AND ms.expected_delivery_date = :inb_from_date';
      END IF;

      IF inv_mwb_globals.g_expected_from_date IS NOT NULL THEN
         where_str := where_str || ' AND ms.expected_delivery_date  >= :inb_from_date';
      END IF;

      IF inv_mwb_globals.g_expected_to_date IS NOT NULL THEN
         where_str := where_str || ' AND ms.expected_delivery_date  <= :inb_to_date';
      END IF;

      /*
       *  You always add documents under the Organization node,
       *  Always restrict the documents based on the 'Tree Organization Id'
       */
      where_str := where_str || ' AND ms.to_organization_id = :inb_to_org_id ';

      IF inv_mwb_globals.g_inventory_item_id IS NOT NULL THEN
         where_str := where_str || ' AND ms.item_id = :inb_item_id ';
      END IF;

      -- ER(9158529 client)
      IF inv_mwb_globals.g_client_code IS NOT NULL THEN
         where_str := where_str || ' AND ms.item_id in (select DISTINCT inventory_item_id from mtl_system_items_b where wms_deploy.get_client_code(inventory_item_id) = :inb_client_code) ';
      END IF;
      -- ER(9158529 client)

      IF inv_mwb_globals.g_shipment_header_id_asn IS NOT NULL THEN
         where_str := where_str || ' AND rsh.shipment_header_id = :inb_shipment_header_id ';
      END IF;

      IF inv_mwb_globals.g_inventory_item_id IS NULL
      AND inv_mwb_globals.g_item_description IS NOT NULL THEN
         select_str := select_str || ', mtl_system_items_kfv msik ';

         where_str := ' AND ms.item_id = msik.inventory_item_id
                        AND ms.to_organization_id = msik.organization_id
                        AND msik.description like :inb_item_description ';
      END IF;

      -- ER(9158529)
      IF inv_mwb_globals.g_category_set_id IS NOT NULL THEN
         where_str := where_str || ' AND ms.item_id in '
                                            || ' (select DISTINCT inventory_item_id from mtl_item_categories '
                                            || ' where organization_id = :inb_to_org_id '
                                            || ' and category_set_id = :inb_category_set_id '
                                            || ' and category_id = nvl(:inb_category_id, category_id)) ' ;
      END IF;
      -- ER(9158529)

      IF inv_mwb_globals.g_po_header_id IS NOT NULL THEN
         where_str := where_str || ' AND ms.po_header_id = :inb_po_header_id ';
      END IF;

      IF  inv_mwb_globals.g_po_release_id IS NOT NULL THEN
         where_str := where_str || ' AND ms.po_release_id = :inb_po_release_id ';
      END IF;

      IF inv_mwb_globals.g_vendor_id IS NOT NULL THEN
         where_str := where_str || ' AND rsh.vendor_id = :inb_vendor_id ';
         IF inv_mwb_globals.g_vendor_site_id IS NOT NULL THEN
            where_str := where_str || ' AND rsh.vendor_site_id = :inb_vendor_site_id ';
         END IF;
      END IF;

      IF NVL(inv_mwb_globals.g_lpn_from_id,-99) = NVL(inv_mwb_globals.g_lpn_to_id,-999) THEN
         where_str := where_str || ' AND rsl.asn_lpn_id = :inb_lpn_from_id ';
      ELSE
        IF inv_mwb_globals.g_lpn_from_id IS NOT NULL THEN
           where_str := where_str || ' AND wlpn.license_plate_number >= :inb_lpn_from ';
        END IF;

        IF inv_mwb_globals.g_lpn_to_id IS NOT NULL THEN
           where_str := where_str || ' AND wlpn.license_plate_number <= :inb_lpn_to ';
        END IF;
      END IF;

      IF inv_mwb_globals.g_serial_from IS NOT NULL
      OR inv_mwb_globals.g_serial_to IS NOT NULL THEN
         select_str := select_str || ', rcv_serials_supply rss ';
         where_str := where_str || ' AND ms.shipment_line_id = rss.shipment_line_id (+) ';
      END IF;

      IF NVL(inv_mwb_globals.g_serial_from,-99) = NVL(inv_mwb_globals.g_serial_to,-999) THEN
         where_str := where_str || ' AND rss.serial_num = :inb_serial_from ';
      ELSE
        IF inv_mwb_globals.g_serial_from IS NOT NULL THEN
           where_str := where_str || ' AND rss.serial_num >= :inb_serial_from ';
        END IF;

        IF inv_mwb_globals.g_serial_to IS NOT NULL THEN
           where_str := where_str || ' AND rss.serial_num <= :inb_serial_to ';
        END IF;
      END IF;

      IF inv_mwb_globals.g_lot_from IS NOT NULL
      OR inv_mwb_globals.g_lot_to IS NOT NULL THEN
         select_str := select_str || ', rcv_lots_supply rls ';
         where_str := where_str || ' AND ms.shipment_line_id = rls.shipment_line_id (+) ';
      END IF;

      IF NVL(inv_mwb_globals.g_lot_from,-99) = NVL(inv_mwb_globals.g_lot_to,-999) THEN
         where_str := where_str || ' AND rls.lot_num = :inb_lot_from ';
      ELSE
        IF inv_mwb_globals.g_lot_from IS NOT NULL THEN
           where_str := where_str || ' AND rls.lot_num >= :inb_lot_from ';
        END IF;

        IF inv_mwb_globals.g_lot_to IS NOT NULL THEN
           where_str := where_str || ' AND rls.lot_num <= :inb_lot_to ';
        END IF;
      END IF;

/* Bug 8396954, Adding below code for checking supplier_lot_number condition */
      IF inv_mwb_globals.g_supplier_lot_from IS NOT NULL
      OR inv_mwb_globals.g_supplier_lot_to IS NOT NULL THEN
         select_str := select_str || ', mtl_lot_numbers mln1 ';
        IF NOT (inv_mwb_globals.g_lot_from IS NOT NULL
              OR inv_mwb_globals.g_lot_to IS NOT NULL ) THEN
                 select_str := select_str || ', rcv_lots_supply rls ';
                 where_str := where_str || ' AND ms.shipment_line_id = rls.shipment_line_id (+) ';
        END IF;

         where_str := where_str || ' AND rls.lot_num = mln1.lot_number';

        IF (inv_mwb_globals.g_supplier_lot_from IS NOT NULL AND
            inv_mwb_globals.g_supplier_lot_to IS NOT NULL AND
            inv_mwb_globals.g_supplier_lot_from = inv_mwb_globals.g_supplier_lot_to) THEN
            where_str := where_str || ' AND mln1.supplier_lot_number = :inb_supplier_lot_from ';
        END IF;

        IF (inv_mwb_globals.g_supplier_lot_from IS NOT NULL AND
            inv_mwb_globals.g_supplier_lot_from <> NVL(inv_mwb_globals.g_supplier_lot_to, -1) ) THEN
            where_str := where_str || ' AND mln1.supplier_lot_number >= :inb_supplier_lot_from ';
        END IF;

        IF (inv_mwb_globals.g_supplier_lot_to IS NOT NULL AND
            inv_mwb_globals.g_supplier_lot_to <> NVL(inv_mwb_globals.g_supplier_lot_from, -1) ) THEN
            where_str := where_str || ' AND mln1.supplier_lot_number <= :inb_supplier_lot_to ';
        END IF;
      END IF;
/* End of Bug 8396954 */

      query_str := select_str || where_str;

      query_str := query_str || ' ORDER BY rsh.shipment_num ';

      query_hdl  := DBMS_SQL.open_cursor;
      DBMS_SQL.parse(query_hdl, query_str, DBMS_SQL.native);

      IF inv_mwb_globals.g_vendor_item IS NOT NULL THEN
         DBMS_SQL.bind_variable(query_hdl, 'inb_vendor_item', inv_mwb_globals.g_vendor_item);
      END IF;

      IF inv_mwb_globals.g_cost_group_id IS NOT NULL THEN
         DBMS_SQL.bind_variable(query_hdl, 'inb_cost_group_id', inv_mwb_globals.g_cost_group_id);
      END IF;

      IF (inv_mwb_globals.g_expected_from_date IS NOT NULL
      AND inv_mwb_globals.g_expected_to_date IS NOT NULL
      AND inv_mwb_globals.g_expected_from_date = inv_mwb_globals.g_expected_to_date) THEN
         DBMS_SQL.bind_variable(query_hdl, 'inb_from_date', inv_mwb_globals.g_expected_from_date);
      END IF;

      IF inv_mwb_globals.g_expected_from_date IS NOT NULL THEN
         DBMS_SQL.bind_variable(query_hdl, 'inb_from_date', inv_mwb_globals.g_expected_from_date);
      END IF;

      IF inv_mwb_globals.g_expected_to_date IS NOT NULL THEN
         DBMS_SQL.bind_variable(query_hdl, 'inb_to_date', inv_mwb_globals.g_expected_to_date);
      END IF;

      /*
       *  You always add documents under the Organization node,
       *  Always restrict the documents based on the 'Tree Organization Id'
       */
      DBMS_SQL.bind_variable(query_hdl, 'inb_to_org_id', inv_mwb_globals.g_tree_organization_id);

      IF inv_mwb_globals.g_inventory_item_id IS NOT NULL THEN
         DBMS_SQL.bind_variable(query_hdl, 'inb_item_id', inv_mwb_globals.g_inventory_item_id);
      END IF;

      -- ER(9158529 client)
      IF inv_mwb_globals.g_client_code IS NOT NULL THEN
         DBMS_SQL.bind_variable(query_hdl, 'inb_client_code', inv_mwb_globals.g_client_code);
      END IF;
      -- ER(9158529 client)

      IF inv_mwb_globals.g_shipment_header_id_asn IS NOT NULL THEN
         DBMS_SQL.bind_variable(query_hdl, 'inb_shipment_header_id', inv_mwb_globals.g_shipment_header_id_asn);
      END IF;

      IF inv_mwb_globals.g_inventory_item_id IS NULL
      AND inv_mwb_globals.g_item_description IS NOT NULL THEN
         DBMS_SQL.bind_variable(query_hdl, 'inb_item_description', inv_mwb_globals.g_item_description);
      END IF;

      -- ER(9158529)
      IF inv_mwb_globals.g_category_set_id IS NOT NULL THEN
         DBMS_SQL.bind_variable(query_hdl, 'inb_to_org_id', inv_mwb_globals.g_tree_organization_id);
         DBMS_SQL.bind_variable(query_hdl, 'inb_category_set_id', inv_mwb_globals.g_category_set_id);
         DBMS_SQL.bind_variable(query_hdl, 'inb_category_id', inv_mwb_globals.g_category_id);
      END IF;
      -- ER(9158529)

      IF inv_mwb_globals.g_po_header_id IS NOT NULL THEN
         DBMS_SQL.bind_variable(query_hdl, 'inb_po_header_id', inv_mwb_globals.g_po_header_id);
      END IF;

      IF  inv_mwb_globals.g_po_release_id IS NOT NULL THEN
         DBMS_SQL.bind_variable(query_hdl, 'inb_po_release_id', inv_mwb_globals.g_po_release_id);
      END IF;

      IF inv_mwb_globals.g_vendor_id IS NOT NULL THEN
         DBMS_SQL.bind_variable(query_hdl, 'inb_vendor_id', inv_mwb_globals.g_vendor_id);
         IF inv_mwb_globals.g_vendor_site_id IS NOT NULL THEN
            DBMS_SQL.bind_variable(query_hdl, 'inb_vendor_site_id', inv_mwb_globals.g_vendor_site_id);
         END IF;
      END IF;

      IF NVL(inv_mwb_globals.g_lpn_from_id,-99) = NVL(inv_mwb_globals.g_lpn_to_id,-999) THEN
         DBMS_SQL.bind_variable(query_hdl, 'inb_lpn_from_id', inv_mwb_globals.g_lpn_from_id);
      ELSE
        IF inv_mwb_globals.g_lpn_from_id IS NOT NULL THEN
           DBMS_SQL.bind_variable(query_hdl, 'inb_lpn_from', inv_mwb_globals.g_lpn_from);
        END IF;

        IF inv_mwb_globals.g_lpn_to_id IS NOT NULL THEN
           DBMS_SQL.bind_variable(query_hdl, 'inb_lpn_to', inv_mwb_globals.g_lpn_to);
        END IF;
      END IF;


      IF NVL(inv_mwb_globals.g_serial_from,-99) = NVL(inv_mwb_globals.g_serial_to,-999) THEN
         DBMS_SQL.bind_variable(query_hdl, 'inb_serial_from', inv_mwb_globals.g_serial_from);
      ELSE
        IF inv_mwb_globals.g_serial_from IS NOT NULL THEN
           DBMS_SQL.bind_variable(query_hdl, 'inb_serial_from', inv_mwb_globals.g_serial_from);
        END IF;

        IF inv_mwb_globals.g_serial_to IS NOT NULL THEN
           DBMS_SQL.bind_variable(query_hdl, 'inb_serial_to', inv_mwb_globals.g_serial_to);
        END IF;
      END IF;

     IF NVL(inv_mwb_globals.g_lot_from,-99) = NVL(inv_mwb_globals.g_lot_to,-999) THEN
         DBMS_SQL.bind_variable(query_hdl, 'inb_lot_from', inv_mwb_globals.g_lot_from);
      ELSE
        IF inv_mwb_globals.g_lot_from IS NOT NULL THEN
           DBMS_SQL.bind_variable(query_hdl, 'inb_lot_from', inv_mwb_globals.g_lot_from);
        END IF;

        IF inv_mwb_globals.g_lot_to IS NOT NULL THEN
           DBMS_SQL.bind_variable(query_hdl, 'inb_lot_to', inv_mwb_globals.g_lot_to);
        END IF;
      END IF;

/* Bug 8396954, Adding below code for checking supplier_lot_number condition */
      IF inv_mwb_globals.g_supplier_lot_from IS NOT NULL
      OR inv_mwb_globals.g_supplier_lot_to IS NOT NULL THEN

        IF (inv_mwb_globals.g_supplier_lot_from IS NOT NULL AND
            inv_mwb_globals.g_supplier_lot_to IS NOT NULL AND
            inv_mwb_globals.g_supplier_lot_from = inv_mwb_globals.g_supplier_lot_to) THEN
         DBMS_SQL.bind_variable(query_hdl, 'inb_supplier_lot_from', inv_mwb_globals.g_supplier_lot_from);
        END IF;

        IF (inv_mwb_globals.g_supplier_lot_from IS NOT NULL AND
            inv_mwb_globals.g_supplier_lot_from <> NVL(inv_mwb_globals.g_supplier_lot_to, -1) ) THEN
         DBMS_SQL.bind_variable(query_hdl, 'inb_supplier_lot_from', inv_mwb_globals.g_supplier_lot_from);
        END IF;

        IF (inv_mwb_globals.g_supplier_lot_to IS NOT NULL AND
            inv_mwb_globals.g_supplier_lot_to <> NVL(inv_mwb_globals.g_supplier_lot_from, -1) ) THEN
         DBMS_SQL.bind_variable(query_hdl, 'inb_supplier_lot_to', inv_mwb_globals.g_supplier_lot_to);
        END IF;
      END IF;
/* End of Bug 8396954 */

      DBMS_SQL.define_column(query_hdl, 1, doc_number, 25);
      DBMS_SQL.define_column(query_hdl, 2, doc_header_id);

      rows_processed  := DBMS_SQL.EXECUTE(query_hdl);

      LOOP
         -- fetch a row
         IF DBMS_SQL.fetch_rows(query_hdl) > 0 THEN
         -- fetch columns from the row
            DBMS_SQL.column_value(query_hdl, 1, doc_number);
            DBMS_SQL.column_value(query_hdl, 2, doc_header_id);

            IF j >= inv_mwb_globals.g_tree_node_low_value
            AND doc_number IS NOT NULL THEN
            x_node_tbl(i).state  := inv_mwb_globals.g_tree_node_state;
            x_node_tbl(i).DEPTH  := 1;
            x_node_tbl(i).label  := doc_number;
            x_node_tbl(i).icon   := 'tree_document';
            x_node_tbl(i).VALUE  := doc_header_id;
            x_node_tbl(i).TYPE   := 'DOCNUM';
            i                    := i + 1;
            END IF;

            EXIT WHEN j >= inv_mwb_globals.g_tree_node_high_value;
            j  := j + 1;
         ELSE
            EXIT;
         END IF;
      END LOOP;
   inv_mwb_globals.print_msg( g_pkg_name, l_procedure_name, 'Ended Adding ASN' );
   END IF; -- ASN

   IF inv_mwb_globals.g_tree_doc_type_id = 3
   AND inv_mwb_globals.g_po_header_id IS NULL
   AND inv_mwb_globals.g_vendor_id IS NULL
   AND inv_mwb_globals.g_shipment_header_id_asn IS NULL
   AND inv_mwb_globals.g_vendor_item IS NULL THEN

      select_str := ' SELECT distinct rsh.shipment_num, rsh.shipment_header_id FROM mtl_supply ms
                                  , rcv_shipment_lines rsl
                                  , rcv_shipment_headers rsh ';

      where_str := ' WHERE ms.shipment_header_id = rsh.shipment_header_id (+)
                       AND ms.shipment_line_id = rsl.shipment_line_id (+)
                       AND ms.supply_type_code = ''SHIPMENT''
                       AND ms.destination_type_code = ''INVENTORY''
                       AND rsh.asn_type IS NULL
                       AND ms.req_header_id IS NULL ';

      IF inv_mwb_globals.g_lpn_from_id IS NOT NULL
      OR inv_mwb_globals.g_lpn_to_id IS NOT NULL THEN
         select_str := select_str || ' , wms_license_plate_numbers wlpn ';
         where_str := where_str  ||' AND rsl.asn_lpn_id = wlpn.lpn_id ';
      END IF;

      IF inv_mwb_globals.g_vendor_item IS NOT NULL THEN
         where_str := where_str || ' AND rsl.vendor_item_num = :inb_vendor_item ';
      END IF;

      IF inv_mwb_globals.g_cost_group_id IS NOT NULL THEN
         where_str := where_str || ' AND rsl.cost_group_id = :inb_cost_group_id ';
      END IF;

      IF (inv_mwb_globals.g_expected_from_date IS NOT NULL AND
         inv_mwb_globals.g_expected_to_date IS NOT NULL AND
         inv_mwb_globals.g_expected_from_date = inv_mwb_globals.g_expected_to_date) THEN
            where_str := where_str || ' AND ms.expected_delivery_date = :inb_from_date';
      END IF;

      IF inv_mwb_globals.g_expected_from_date IS NOT NULL THEN
         where_str := where_str || ' AND ms.expected_delivery_date  >= :inb_from_date';
      END IF;

      IF inv_mwb_globals.g_expected_to_date IS NOT NULL THEN
         where_str := where_str || ' AND ms.expected_delivery_date  <= :inb_to_date';
      END IF;

      /*
       *  You always add documents under the Organization node,
       *  Always restrict the documents based on the 'Tree Organization Id'
       */
      where_str := where_str || ' AND ms.to_organization_id = :inb_to_org_id ';

      IF inv_mwb_globals.g_source_org_id IS NOT NULL THEN
         where_str := where_str || ' AND ms.from_organization_id = :inb_from_organization_id ';
      END IF;

      IF inv_mwb_globals.g_inventory_item_id IS NOT NULL THEN
         where_str := where_str || ' AND ms.item_id = :inb_item_id ';
      END IF;

      -- ER(9158529 client)
      IF inv_mwb_globals.g_client_code IS NOT NULL THEN
         where_str := where_str || ' AND ms.item_id in (select DISTINCT inventory_item_id from mtl_system_items_b where wms_deploy.get_client_code(inventory_item_id) = :inb_client_code) ';
      END IF;
      -- ER(9158529 client)

      IF inv_mwb_globals.g_shipment_header_id_interorg IS NOT NULL
      OR inv_mwb_globals.g_tree_doc_header_id IS NOT NULL THEN
        where_str := where_str || ' AND rsh.shipment_header_id = :inb_shipment_header_id ';
      END IF;

      IF inv_mwb_globals.g_inventory_item_id IS NULL
      AND inv_mwb_globals.g_item_description IS NOT NULL THEN
         select_str := select_str || ', mtl_system_items_kfv msik ';

         where_str := ' AND ms.item_id = msik.inventory_item_id
                        AND ms.to_organization_id = msik.organization_id
                        AND msik.description like :inb_item_description ';
      END IF;

      -- ER(9158529)
      IF inv_mwb_globals.g_category_set_id IS NOT NULL THEN
         where_str := where_str || ' AND ms.item_id in '
                                             || ' (select DISTINCT inventory_item_id from mtl_item_categories '
                                             || ' where organization_id = :inb_to_org_id '
                                             || ' and category_set_id = :inb_category_set_id '
                                             || ' and category_id = nvl(:inb_category_id, category_id)) ' ;
      END IF;
      -- ER(9158529)

      IF inv_mwb_globals.g_po_header_id IS NOT NULL THEN
         where_str := where_str || ' AND ms.po_header_id = :inb_po_header_id ';
      END IF;

      IF  inv_mwb_globals.g_po_release_id IS NOT NULL THEN
         where_str := where_str || ' AND ms.po_release_id = :inb_po_release_id ';
      END IF;

      IF inv_mwb_globals.g_vendor_id IS NOT NULL THEN
         where_str := where_str || ' AND rsh.vendor_id = :inb_vendor_id ';
         IF inv_mwb_globals.g_vendor_site_id IS NOT NULL THEN
            where_str := where_str || ' AND rsh.vendor_site_id = :inb_vendor_site_id ';
         END IF;
      END IF;

      IF inv_mwb_globals.g_serial_from IS NOT NULL
      OR inv_mwb_globals.g_serial_to IS NOT NULL THEN
         select_str := select_str || ', rcv_serials_supply rss ';
         where_str := where_str || ' AND ms.shipment_line_id = rss.shipment_line_id (+) ';
      END IF;


      IF NVL(inv_mwb_globals.g_serial_from,-99) = NVL(inv_mwb_globals.g_serial_to,-999) THEN
         where_str := where_str || ' AND rss.serial_num = :inb_serial_from ';
      ELSE
        IF inv_mwb_globals.g_serial_from IS NOT NULL THEN
           where_str := where_str || ' AND rss.serial_num >= :inb_serial_from ';
        END IF;

        IF inv_mwb_globals.g_serial_to IS NOT NULL THEN
           where_str := where_str || ' AND rss.serial_num <= :inb_serial_to ';
        END IF;
      END IF;

      IF NVL(inv_mwb_globals.g_lpn_from_id,-99) = NVL(inv_mwb_globals.g_lpn_to_id,-999) THEN
         where_str := where_str || ' AND rsl.asn_lpn_id = :inb_lpn_from_id ';
      ELSE
        IF inv_mwb_globals.g_lpn_from_id IS NOT NULL THEN
           where_str := where_str || ' AND wlpn.license_plate_number >= :inb_lpn_from ';
        END IF;

        IF inv_mwb_globals.g_lpn_to_id IS NOT NULL THEN
           where_str := where_str || ' AND wlpn.license_plate_number <= :inb_lpn_to ';
        END IF;
      END IF;

      IF inv_mwb_globals.g_lot_from IS NOT NULL
      OR inv_mwb_globals.g_lot_to IS NOT NULL THEN
         select_str := select_str || ', rcv_lots_supply rls ';
         where_str := where_str || ' AND ms.shipment_line_id = rls.shipment_line_id (+) ';
      END IF;

      IF NVL(inv_mwb_globals.g_lot_from,-99) = NVL(inv_mwb_globals.g_lot_to,-999) THEN
         where_str := where_str || ' AND rls.lot_num = :inb_lot_from ';
      ELSE
        IF inv_mwb_globals.g_lot_from IS NOT NULL THEN
           where_str := where_str || ' AND rls.lot_num >= :inb_lot_from ';
        END IF;

        IF inv_mwb_globals.g_lot_to IS NOT NULL THEN
           where_str := where_str || ' AND rls.lot_num <= :inb_lot_to ';
        END IF;
      END IF;

/* Bug 8396954, Adding below code for checking supplier_lot_number condition */
      IF inv_mwb_globals.g_supplier_lot_from IS NOT NULL
      OR inv_mwb_globals.g_supplier_lot_to IS NOT NULL THEN
         select_str := select_str || ', mtl_lot_numbers mln1 ';
        IF NOT (inv_mwb_globals.g_lot_from IS NOT NULL
              OR inv_mwb_globals.g_lot_to IS NOT NULL ) THEN
                 select_str := select_str || ', rcv_lots_supply rls ';
                 where_str := where_str || ' AND ms.shipment_line_id = rls.shipment_line_id (+) ';
        END IF;

         where_str := where_str || ' AND rls.lot_num = mln1.lot_number';

        IF (inv_mwb_globals.g_supplier_lot_from IS NOT NULL AND
            inv_mwb_globals.g_supplier_lot_to IS NOT NULL AND
            inv_mwb_globals.g_supplier_lot_from = inv_mwb_globals.g_supplier_lot_to) THEN
            where_str := where_str || ' AND mln1.supplier_lot_number = :inb_supplier_lot_from ';
        END IF;

        IF (inv_mwb_globals.g_supplier_lot_from IS NOT NULL AND
            inv_mwb_globals.g_supplier_lot_from <> NVL(inv_mwb_globals.g_supplier_lot_to, -1) ) THEN
            where_str := where_str || ' AND mln1.supplier_lot_number >= :inb_supplier_lot_from ';
        END IF;

        IF (inv_mwb_globals.g_supplier_lot_to IS NOT NULL AND
            inv_mwb_globals.g_supplier_lot_to <> NVL(inv_mwb_globals.g_supplier_lot_from, -1) ) THEN
            where_str := where_str || ' AND mln1.supplier_lot_number <= :inb_supplier_lot_to ';
        END IF;
      END IF;
/* End of Bug 8396954 */

      query_str := select_str || where_str;

      query_str := query_str || ' ORDER BY rsh.shipment_num ';

/*      delete from rtest2;
      insert into rtest2 values (query_str);
      commit;
*/

      query_hdl  := DBMS_SQL.open_cursor;
      DBMS_SQL.parse(query_hdl, query_str, DBMS_SQL.native);

      IF inv_mwb_globals.g_vendor_item IS NOT NULL THEN
         DBMS_SQL.bind_variable(query_hdl, 'inb_vendor_item', inv_mwb_globals.g_vendor_item);
      END IF;

      IF inv_mwb_globals.g_cost_group_id IS NOT NULL THEN
         DBMS_SQL.bind_variable(query_hdl, 'inb_cost_group_id', inv_mwb_globals.g_cost_group_id);
      END IF;

      IF (inv_mwb_globals.g_expected_from_date IS NOT NULL
      AND inv_mwb_globals.g_expected_to_date IS NOT NULL
      AND inv_mwb_globals.g_expected_from_date = inv_mwb_globals.g_expected_to_date) THEN
         DBMS_SQL.bind_variable(query_hdl, 'inb_from_date', inv_mwb_globals.g_expected_from_date);
      END IF;

      IF inv_mwb_globals.g_expected_from_date IS NOT NULL THEN
         DBMS_SQL.bind_variable(query_hdl, 'inb_from_date', inv_mwb_globals.g_expected_from_date);
      END IF;

      IF inv_mwb_globals.g_expected_to_date IS NOT NULL THEN
         DBMS_SQL.bind_variable(query_hdl, 'inb_to_date', inv_mwb_globals.g_expected_to_date);
      END IF;

      /*
       *  You always add documents under the Organization node,
       *  Always restrict the documents based on the 'Tree Organization Id'
       */
      DBMS_SQL.bind_variable(query_hdl, 'inb_to_org_id', inv_mwb_globals.g_tree_organization_id);

      IF inv_mwb_globals.g_source_org_id IS NOT NULL THEN
         DBMS_SQL.bind_variable(query_hdl, 'inb_from_organization_id', inv_mwb_globals.g_source_org_id);
      END IF;

      IF inv_mwb_globals.g_inventory_item_id IS NOT NULL THEN
         DBMS_SQL.bind_variable(query_hdl, 'inb_item_id', inv_mwb_globals.g_inventory_item_id);
      END IF;

      -- ER(9158529 client)
      IF inv_mwb_globals.g_client_code IS NOT NULL THEN
         DBMS_SQL.bind_variable(query_hdl, 'inb_client_code', inv_mwb_globals.g_client_code);
      END IF;
      -- ER(9158529 client)

      IF inv_mwb_globals.g_shipment_header_id_interorg IS NOT NULL
      OR inv_mwb_globals.g_tree_doc_header_id IS NOT NULL THEN
         DBMS_SQL.bind_variable(query_hdl, 'inb_shipment_header_id', NVL(inv_mwb_globals.g_shipment_header_id_interorg
                                                                       , inv_mwb_globals.g_tree_doc_header_id));
      END IF;

      IF inv_mwb_globals.g_inventory_item_id IS NULL
      AND inv_mwb_globals.g_item_description IS NOT NULL THEN
         DBMS_SQL.bind_variable(query_hdl, 'inb_item_description', inv_mwb_globals.g_item_description);
      END IF;

      -- ER(9158529)
      IF inv_mwb_globals.g_category_set_id IS NOT NULL THEN
         DBMS_SQL.bind_variable(query_hdl, 'inb_to_org_id', inv_mwb_globals.g_tree_organization_id);
         DBMS_SQL.bind_variable(query_hdl, 'inb_category_set_id', inv_mwb_globals.g_category_set_id);
         DBMS_SQL.bind_variable(query_hdl, 'inb_category_id', inv_mwb_globals.g_category_id);
      END IF;
      -- ER(9158529)

      IF inv_mwb_globals.g_po_header_id IS NOT NULL THEN
         DBMS_SQL.bind_variable(query_hdl, 'inb_po_header_id', inv_mwb_globals.g_po_header_id);
      END IF;

      IF  inv_mwb_globals.g_po_release_id IS NOT NULL THEN
         DBMS_SQL.bind_variable(query_hdl, 'inb_po_release_id', inv_mwb_globals.g_po_release_id);
      END IF;

      IF inv_mwb_globals.g_vendor_id IS NOT NULL THEN
         DBMS_SQL.bind_variable(query_hdl, 'inb_vendor_id', inv_mwb_globals.g_vendor_id);
         IF inv_mwb_globals.g_vendor_site_id IS NOT NULL THEN
            DBMS_SQL.bind_variable(query_hdl, 'inb_vendor_site_id', inv_mwb_globals.g_vendor_site_id);
         END IF;
      END IF;


      IF NVL(inv_mwb_globals.g_serial_from,-99) = NVL(inv_mwb_globals.g_serial_to,-999) THEN
         DBMS_SQL.bind_variable(query_hdl, 'inb_serial_from', inv_mwb_globals.g_serial_from);
      ELSE
        IF inv_mwb_globals.g_serial_from IS NOT NULL THEN
           DBMS_SQL.bind_variable(query_hdl, 'inb_serial_from', inv_mwb_globals.g_serial_from);
        END IF;

        IF inv_mwb_globals.g_serial_to IS NOT NULL THEN
           DBMS_SQL.bind_variable(query_hdl, 'inb_serial_to', inv_mwb_globals.g_serial_to);
        END IF;
      END IF;

      IF NVL(inv_mwb_globals.g_lpn_from_id,-99) = NVL(inv_mwb_globals.g_lpn_to_id,-999) THEN
         DBMS_SQL.bind_variable(query_hdl, 'inb_lpn_from_id', inv_mwb_globals.g_lpn_from_id);
      ELSE
        IF inv_mwb_globals.g_lpn_from_id IS NOT NULL THEN
           DBMS_SQL.bind_variable(query_hdl, 'inb_lpn_from', inv_mwb_globals.g_lpn_from);
        END IF;

        IF inv_mwb_globals.g_lpn_to_id IS NOT NULL THEN
           DBMS_SQL.bind_variable(query_hdl, 'inb_lpn_to', inv_mwb_globals.g_lpn_to);
        END IF;
      END IF;

     IF NVL(inv_mwb_globals.g_lot_from,-99) = NVL(inv_mwb_globals.g_lot_to,-999) THEN
         DBMS_SQL.bind_variable(query_hdl, 'inb_lot_from', inv_mwb_globals.g_lot_from);
      ELSE
        IF inv_mwb_globals.g_lot_from IS NOT NULL THEN
           DBMS_SQL.bind_variable(query_hdl, 'inb_lot_from', inv_mwb_globals.g_lot_from);
        END IF;

        IF inv_mwb_globals.g_lot_to IS NOT NULL THEN
           DBMS_SQL.bind_variable(query_hdl, 'inb_lot_to', inv_mwb_globals.g_lot_to);
        END IF;
      END IF;

/* Bug 8396954, Adding below code for checking supplier_lot_number condition */
      IF inv_mwb_globals.g_supplier_lot_from IS NOT NULL
      OR inv_mwb_globals.g_supplier_lot_to IS NOT NULL THEN

        IF (inv_mwb_globals.g_supplier_lot_from IS NOT NULL AND
            inv_mwb_globals.g_supplier_lot_to IS NOT NULL AND
            inv_mwb_globals.g_supplier_lot_from = inv_mwb_globals.g_supplier_lot_to) THEN
         DBMS_SQL.bind_variable(query_hdl, 'inb_supplier_lot_from', inv_mwb_globals.g_supplier_lot_from);
        END IF;

        IF (inv_mwb_globals.g_supplier_lot_from IS NOT NULL AND
            inv_mwb_globals.g_supplier_lot_from <> NVL(inv_mwb_globals.g_supplier_lot_to, -1) ) THEN
         DBMS_SQL.bind_variable(query_hdl, 'inb_supplier_lot_from', inv_mwb_globals.g_supplier_lot_from);
        END IF;

        IF (inv_mwb_globals.g_supplier_lot_to IS NOT NULL AND
            inv_mwb_globals.g_supplier_lot_to <> NVL(inv_mwb_globals.g_supplier_lot_from, -1) ) THEN
         DBMS_SQL.bind_variable(query_hdl, 'inb_supplier_lot_to', inv_mwb_globals.g_supplier_lot_to);
        END IF;
      END IF;
/* End of Bug 8396954 */

      DBMS_SQL.define_column(query_hdl, 1, doc_number, 25);
      DBMS_SQL.define_column(query_hdl, 2, doc_header_id);

      rows_processed  := DBMS_SQL.EXECUTE(query_hdl);

      LOOP
         -- fetch a row
         IF DBMS_SQL.fetch_rows(query_hdl) > 0 THEN
         -- fetch columns from the row
            DBMS_SQL.column_value(query_hdl, 1, doc_number);
            DBMS_SQL.column_value(query_hdl, 2, doc_header_id);

            IF j >= inv_mwb_globals.g_tree_node_low_value
            AND doc_number IS NOT NULL THEN
            x_node_tbl(i).state  := inv_mwb_globals.g_tree_node_state;
            x_node_tbl(i).DEPTH  := 1;
            x_node_tbl(i).label  := doc_number;
            x_node_tbl(i).icon   := 'tree_document';
            x_node_tbl(i).VALUE  := doc_header_id;
            x_node_tbl(i).TYPE   := 'DOCNUM';
            i                    := i + 1;
            END IF;

            EXIT WHEN j >= inv_mwb_globals.g_tree_node_high_value;
            j  := j + 1;
         ELSE
            EXIT;
         END IF;
      END LOOP;

   END IF; -- INTERORG


   IF inv_mwb_globals.g_tree_doc_type_id = 2 -- REQUISITION
   AND inv_mwb_globals.g_po_header_id IS NULL
   AND inv_mwb_globals.g_vendor_id IS NULL
   AND inv_mwb_globals.g_shipment_header_id_asn IS NULL
   AND inv_mwb_globals.g_vendor_item IS NULL THEN

      -- CLM project, bug 9403291
      select_str := ' SELECT distinct prha.segment1, prha.requisition_header_id
                        FROM mtl_supply ms
                           , po_req_headers_trx_v prha
                           , po_req_lines_trx_v prla ';

       where_str := 'WHERE ms.req_header_id = prha.requisition_header_id (+)
                       AND ms.req_line_id = prla.requisition_line_id (+)
                       AND ms.supply_type_code = ''REQ''
                       AND ms.destination_type_code = ''INVENTORY'' ';



      IF inv_mwb_globals.g_cost_group_id IS NOT NULL THEN
         where_str := where_str || ' AND ms.cost_group_id = :inb_cost_group_id ';
      END IF;

      IF inv_mwb_globals.g_lpn_from_id IS NOT NULL
      OR inv_mwb_globals.g_lpn_to_id IS NOT NULL THEN
         where_str := where_str || ' AND 1 = 2 ';
      END IF;


      IF (inv_mwb_globals.g_expected_from_date IS NOT NULL AND
         inv_mwb_globals.g_expected_to_date IS NOT NULL AND
         inv_mwb_globals.g_expected_from_date = inv_mwb_globals.g_expected_to_date) THEN
            where_str := where_str || ' AND ms.expected_delivery_date = :inb_from_date';
      END IF;

      IF inv_mwb_globals.g_expected_from_date IS NOT NULL THEN
         where_str := where_str || ' AND ms.expected_delivery_date  >= :inb_from_date';
      END IF;

      IF inv_mwb_globals.g_expected_to_date IS NOT NULL THEN
         where_str := where_str || ' AND ms.expected_delivery_date  <= :inb_to_date';
      END IF;

      /*
       *  You always add documents under the Organization node,
       *  Always restrict the documents based on the 'Tree Organization Id'
       */
      where_str := where_str || ' AND ms.to_organization_id = :inb_to_org_id ';

      IF inv_mwb_globals.g_source_org_id IS NOT NULL THEN
         where_str := where_str || ' AND ms.from_organization_id = :inb_from_organization_id ';
      END IF;

      IF inv_mwb_globals.g_inventory_item_id IS NOT NULL THEN
         where_str := where_str || ' AND ms.item_id = :inb_item_id ';
      END IF;

      -- ER(9158529 client)
      IF inv_mwb_globals.g_client_code IS NOT NULL THEN
         where_str := where_str || ' AND ms.item_id in (select DISTINCT inventory_item_id from mtl_system_items_b where wms_deploy.get_client_code(inventory_item_id) = :inb_client_code) ';
      END IF;
      -- ER(9158529 client)

      IF inv_mwb_globals.g_req_header_id IS NOT NULL THEN
         where_str := where_str || ' AND ms.req_header_id = :inb_req_header_id ';
      END IF;

      IF inv_mwb_globals.g_inventory_item_id IS NULL
      AND inv_mwb_globals.g_item_description IS NOT NULL THEN
         select_str := select_str || ', mtl_system_items_kfv msik ';

         where_str := where_str || ' AND ms.item_id = msik.inventory_item_id
                                     AND ms.to_organization_id = msik.organization_id
                                     AND msik.description like :inb_item_description ';
      END IF;

      -- ER(9158529)
      IF inv_mwb_globals.g_category_set_id IS NOT NULL THEN
         where_str := where_str || ' AND ms.item_id in '
                                        || ' (select DISTINCT inventory_item_id from mtl_item_categories '
                                        || ' where organization_id = :inb_to_org_id '
                                        || ' and category_set_id = :inb_category_set_id '
                                        || ' and category_id = nvl(:inb_category_id, category_id)) ' ;
      END IF;
      -- ER(9158529)

      IF inv_mwb_globals.g_serial_from IS NOT NULL
      OR inv_mwb_globals.g_serial_to IS NOT NULL THEN
         select_str := select_str || ', rcv_serials_supply rss ';
         where_str := where_str || ' AND ms.shipment_line_id = rss.shipment_line_id (+) ';
      END IF;


      IF NVL(inv_mwb_globals.g_serial_from,-99) = NVL(inv_mwb_globals.g_serial_to,-999) THEN
         where_str := where_str || ' AND rss.serial_num = :inb_serial_from ';
      ELSE
        IF inv_mwb_globals.g_serial_from IS NOT NULL THEN
           where_str := where_str || ' AND rss.serial_num >= :inb_serial_from ';
        END IF;

        IF inv_mwb_globals.g_serial_to IS NOT NULL THEN
           where_str := where_str || ' AND rss.serial_num <= :inb_serial_to ';
        END IF;
      END IF;


      IF inv_mwb_globals.g_lot_from IS NOT NULL
      OR inv_mwb_globals.g_lot_to IS NOT NULL THEN
         select_str := select_str || ', rcv_lots_supply rls ';
         where_str := where_str || ' AND ms.shipment_line_id = rls.shipment_line_id (+) ';
      END IF;

      IF NVL(inv_mwb_globals.g_lot_from,-99) = NVL(inv_mwb_globals.g_lot_to,-999) THEN
         where_str := where_str || ' AND rls.lot_num = :inb_lot_from ';
      ELSE
        IF inv_mwb_globals.g_lot_from IS NOT NULL THEN
           where_str := where_str || ' AND rls.lot_num >= :inb_lot_from ';
        END IF;

        IF inv_mwb_globals.g_lot_to IS NOT NULL THEN
           where_str := where_str || ' AND rls.lot_num <= :inb_lot_to ';
        END IF;
      END IF;

 /* Bug 8396954, Adding below code for checking supplier_lot_number condition */
      IF inv_mwb_globals.g_supplier_lot_from IS NOT NULL
      OR inv_mwb_globals.g_supplier_lot_to IS NOT NULL THEN
         select_str := select_str || ', mtl_lot_numbers mln1 ';
        IF NOT (inv_mwb_globals.g_lot_from IS NOT NULL
              OR inv_mwb_globals.g_lot_to IS NOT NULL ) THEN
                 select_str := select_str || ', rcv_lots_supply rls ';
                 where_str := where_str || ' AND ms.shipment_line_id = rls.shipment_line_id (+) ';
        END IF;

         where_str := where_str || ' AND rls.lot_num = mln1.lot_number';

        IF (inv_mwb_globals.g_supplier_lot_from IS NOT NULL AND
            inv_mwb_globals.g_supplier_lot_to IS NOT NULL AND
            inv_mwb_globals.g_supplier_lot_from = inv_mwb_globals.g_supplier_lot_to) THEN
            where_str := where_str || ' AND mln1.supplier_lot_number = :inb_supplier_lot_from ';
        END IF;

        IF (inv_mwb_globals.g_supplier_lot_from IS NOT NULL AND
            inv_mwb_globals.g_supplier_lot_from <> NVL(inv_mwb_globals.g_supplier_lot_to, -1) ) THEN
            where_str := where_str || ' AND mln1.supplier_lot_number >= :inb_supplier_lot_from ';
        END IF;

        IF (inv_mwb_globals.g_supplier_lot_to IS NOT NULL AND
            inv_mwb_globals.g_supplier_lot_to <> NVL(inv_mwb_globals.g_supplier_lot_from, -1) ) THEN
            where_str := where_str || ' AND mln1.supplier_lot_number <= :inb_supplier_lot_to ';
        END IF;
      END IF;
/* End of Bug 8396954 */

      query_str := select_str || where_str;

      query_str := query_str || ' ORDER BY prha.segment1 ';

/*      delete from rtest2;
      insert into rtest2 values (query_str);
      commit;
*/

      query_hdl  := DBMS_SQL.open_cursor;
      DBMS_SQL.parse(query_hdl, query_str, DBMS_SQL.native);

      IF inv_mwb_globals.g_cost_group_id IS NOT NULL THEN
         DBMS_SQL.bind_variable(query_hdl, 'inb_cost_group_id', inv_mwb_globals.g_cost_group_id);
      END IF;

      IF (inv_mwb_globals.g_expected_from_date IS NOT NULL
      AND inv_mwb_globals.g_expected_to_date IS NOT NULL
      AND inv_mwb_globals.g_expected_from_date = inv_mwb_globals.g_expected_to_date) THEN
         DBMS_SQL.bind_variable(query_hdl, 'inb_from_date', inv_mwb_globals.g_expected_from_date);
      END IF;

      IF inv_mwb_globals.g_expected_from_date IS NOT NULL THEN
         DBMS_SQL.bind_variable(query_hdl, 'inb_from_date', inv_mwb_globals.g_expected_from_date);
      END IF;

      IF inv_mwb_globals.g_expected_to_date IS NOT NULL THEN
         DBMS_SQL.bind_variable(query_hdl, 'inb_to_date', inv_mwb_globals.g_expected_to_date);
      END IF;

      /*
       *  You always add documents under the Organization node,
       *  Always restrict the documents based on the 'Tree Organization Id'
       */
      DBMS_SQL.bind_variable(query_hdl, 'inb_to_org_id', inv_mwb_globals.g_tree_organization_id);

      IF inv_mwb_globals.g_source_org_id IS NOT NULL THEN
         DBMS_SQL.bind_variable(query_hdl, 'inb_from_organization_id', inv_mwb_globals.g_source_org_id);
      END IF;

      IF inv_mwb_globals.g_inventory_item_id IS NOT NULL THEN
         DBMS_SQL.bind_variable(query_hdl, 'inb_item_id', inv_mwb_globals.g_inventory_item_id);
      END IF;

      -- ER(9158529 client)
      IF inv_mwb_globals.g_client_code IS NOT NULL THEN
         DBMS_SQL.bind_variable(query_hdl, 'inb_client_code', inv_mwb_globals.g_client_code);
      END IF;
      -- ER(9158529 client)

      IF inv_mwb_globals.g_req_header_id IS NOT NULL THEN
         DBMS_SQL.bind_variable(query_hdl, 'inb_req_header_id', inv_mwb_globals.g_req_header_id);
      END IF;

      IF inv_mwb_globals.g_inventory_item_id IS NULL
      AND inv_mwb_globals.g_item_description IS NOT NULL THEN
         DBMS_SQL.bind_variable(query_hdl, 'inb_item_description', inv_mwb_globals.g_item_description);
      END IF;

      -- ER(9158529)
      IF inv_mwb_globals.g_category_set_id IS NOT NULL THEN
         DBMS_SQL.bind_variable(query_hdl, 'inb_to_org_id', inv_mwb_globals.g_tree_organization_id);
         DBMS_SQL.bind_variable(query_hdl, 'inb_category_set_id', inv_mwb_globals.g_category_set_id);
         DBMS_SQL.bind_variable(query_hdl, 'inb_category_id', inv_mwb_globals.g_category_id);
      END IF;
      -- ER(9158529)

      IF NVL(inv_mwb_globals.g_serial_from,-99) = NVL(inv_mwb_globals.g_serial_to,-999) THEN
         DBMS_SQL.bind_variable(query_hdl, 'inb_serial_from', inv_mwb_globals.g_serial_from);
      ELSE
        IF inv_mwb_globals.g_serial_from IS NOT NULL THEN
           DBMS_SQL.bind_variable(query_hdl, 'inb_serial_from', inv_mwb_globals.g_serial_from);
        END IF;

        IF inv_mwb_globals.g_serial_to IS NOT NULL THEN
           DBMS_SQL.bind_variable(query_hdl, 'inb_serial_to', inv_mwb_globals.g_serial_to);
        END IF;
      END IF;

     IF NVL(inv_mwb_globals.g_lot_from,-99) = NVL(inv_mwb_globals.g_lot_to,-999) THEN
         DBMS_SQL.bind_variable(query_hdl, 'inb_lot_from', inv_mwb_globals.g_lot_from);
      ELSE
        IF inv_mwb_globals.g_lot_from IS NOT NULL THEN
           DBMS_SQL.bind_variable(query_hdl, 'inb_lot_from', inv_mwb_globals.g_lot_from);
        END IF;

        IF inv_mwb_globals.g_lot_to IS NOT NULL THEN
           DBMS_SQL.bind_variable(query_hdl, 'inb_lot_to', inv_mwb_globals.g_lot_to);
        END IF;
      END IF;

/* Bug 8396954, Adding below code for checking supplier_lot_number condition */
      IF inv_mwb_globals.g_supplier_lot_from IS NOT NULL
      OR inv_mwb_globals.g_supplier_lot_to IS NOT NULL THEN

        IF (inv_mwb_globals.g_supplier_lot_from IS NOT NULL AND
            inv_mwb_globals.g_supplier_lot_to IS NOT NULL AND
            inv_mwb_globals.g_supplier_lot_from = inv_mwb_globals.g_supplier_lot_to) THEN
         DBMS_SQL.bind_variable(query_hdl, 'inb_supplier_lot_from', inv_mwb_globals.g_supplier_lot_from);
        END IF;

        IF (inv_mwb_globals.g_supplier_lot_from IS NOT NULL AND
            inv_mwb_globals.g_supplier_lot_from <> NVL(inv_mwb_globals.g_supplier_lot_to, -1) ) THEN
         DBMS_SQL.bind_variable(query_hdl, 'inb_supplier_lot_from', inv_mwb_globals.g_supplier_lot_from);
        END IF;

        IF (inv_mwb_globals.g_supplier_lot_to IS NOT NULL AND
            inv_mwb_globals.g_supplier_lot_to <> NVL(inv_mwb_globals.g_supplier_lot_from, -1) ) THEN
         DBMS_SQL.bind_variable(query_hdl, 'inb_supplier_lot_to', inv_mwb_globals.g_supplier_lot_to);
        END IF;
      END IF;
/* End of Bug 8396954 */

      DBMS_SQL.define_column(query_hdl, 1, doc_number, 25);
      DBMS_SQL.define_column(query_hdl, 2, doc_header_id);

      rows_processed  := DBMS_SQL.EXECUTE(query_hdl);

      LOOP
         -- fetch a row
         IF DBMS_SQL.fetch_rows(query_hdl) > 0 THEN
         -- fetch columns from the row
            DBMS_SQL.column_value(query_hdl, 1, doc_number);
            DBMS_SQL.column_value(query_hdl, 2, doc_header_id);

            IF j >= inv_mwb_globals.g_tree_node_low_value
            AND doc_number IS NOT NULL THEN
            x_node_tbl(i).state  := inv_mwb_globals.g_tree_node_state;
            x_node_tbl(i).DEPTH  := 1;
            x_node_tbl(i).label  := doc_number;
            x_node_tbl(i).icon   := 'tree_document';
            x_node_tbl(i).VALUE  := doc_header_id;
            x_node_tbl(i).TYPE   := 'DOCNUM';
            i                    := i + 1;
            END IF;

            EXIT WHEN j >= inv_mwb_globals.g_tree_node_high_value;
            j  := j + 1;
         ELSE
            EXIT;
         END IF;
      END LOOP;

   END IF; -- REQUISITION
   inv_mwb_globals.g_last_query := query_str;
   inv_mwb_globals.print_msg( g_pkg_name, l_procedure_name, 'Ended Adding document_numbers' );
EXCEPTION
   WHEN NO_DATA_FOUND THEN
      null;
   WHEN OTHERS THEN
      RAISE;
END add_document_numbers;


   PROCEDURE add_orgs(
     x_node_value          IN OUT NOCOPY NUMBER
   , x_node_tbl            IN OUT NOCOPY fnd_apptree.node_tbl_type
   , x_tbl_index           IN OUT NOCOPY NUMBER
   ) IS
      query_str      VARCHAR2(10000);
      query_hdl      NUMBER;
      rows_processed NUMBER;
      org_id         mtl_onhand_quantities.organization_id%TYPE;
      org_code       mtl_parameters.organization_code%TYPE;
      i              NUMBER                                       := x_tbl_index;
      j              NUMBER                                       := x_node_value;
      table_required VARCHAR2(300);
      is_grade_t     BOOLEAN DEFAULT FALSE ; -- NSRIVAST, INVCONV
      --ER(3338592) Changes
      group_str      VARCHAR2(10000) ;
      having_str     VARCHAR2(10000) := ' HAVING 1=1 ';
      inb_select_clause  VARCHAR2(500) := ' SELECT DISTINCT mp.organization_code , ms.to_organization_id ';
      inb_from_clause  VARCHAR2(10000) := ' FROM ';
      inb_where_clause  VARCHAR2(10000) := 'WHERE 1=1 ' ;
      inb_query_str  VARCHAR2(20000);
      inb_orderby_clause  VARCHAR2(100) := ' ORDER BY organization_code ';
      l_inbound_qty    NUMBER;
      l_onhand_qty     NUMBER;
      l_rcv_qty        NUMBER;
      l_org_exists_flag BOOLEAN DEFAULT FALSE;
      --End of ER Changes
      l_procedure_name CONSTANT VARCHAR2(30)  := 'ADD_ORGS';
      l_default_status_id NUMBER; -- Onhand Material Status Support
   BEGIN
      inv_mwb_globals.print_msg( g_pkg_name, l_procedure_name, 'Entered' );

      -- Onhand Material Status Support
      IF inv_mwb_globals.g_view_by = 'STATUS' THEN
         inv_mwb_globals.g_only_subinventory_status := 1;
      ELSE
         inv_mwb_globals.g_only_subinventory_status := NULL;
      END IF;

      -- Getting the default org status id
      if (inv_mwb_globals.g_organization_id is not null) then
         if (inv_cache.set_org_rec(inv_mwb_globals.g_organization_id)) then
           l_default_status_id :=  inv_cache.org_rec.default_status_id;
         end if;
      elsif (inv_mwb_globals.g_tree_organization_id is not null) then
         if (inv_cache.set_org_rec(inv_mwb_globals.g_tree_organization_id)) then
           l_default_status_id :=  inv_cache.org_rec.default_status_id;
         end if;
      end if;
      -- End Onhand Material Status Support

    -- If attributes relating to contents of an LPN are not specified then
    -- display all the LPNs in that location with the appropriate from
    -- and to LPN criteria

      BEGIN
         SELECT sum(inbound)
               ,sum(onhand)
               ,sum(receiving)
    	    INTO  l_inbound_qty
               ,l_onhand_qty
               ,l_rcv_qty
          FROM mtl_mwb_gtmp;
      EXCEPTION
      WHEN NO_DATA_FOUND THEN
	      null;
      END;

/* Bug 8225619. Uncommented the below if condition */
      IF inv_mwb_globals.g_chk_inbound = 1  THEN
--      AND l_inbound_qty IS NOT NULL THEN
         inb_from_clause := inb_from_clause || ' mtl_supply ms , mtl_parameters mp  ';
         inb_where_clause := inb_where_clause ||' AND ms.to_organization_id = mp.organization_id ';
         inb_where_clause := inb_where_clause ||' AND ms.destination_type_code = ''INVENTORY'' ';

         IF inv_mwb_globals.g_po_header_id IS NOT NULL
         OR inv_mwb_globals.g_vendor_id IS NOT NULL
         OR inv_mwb_globals.g_shipment_header_id_asn IS NOT NULL
         OR inv_mwb_globals.g_vendor_item IS NOT NULL THEN

            -- CLM project, bug 9403291
            inb_from_clause := inb_from_clause || ' , po_headers_trx_v pha ';
            inb_where_clause := inb_where_clause ||' AND pha.po_header_id = ms.po_header_id ';
            inb_where_clause := inb_where_clause ||' AND pha.authorization_status = ''APPROVED'' ';

/*            IF inv_mwb_globals.g_include_po_without_asn = 1 THEN
               inb_where_clause := inb_where_clause ||' AND ms.supply_type_code IN (''PO'',''SHIPMENT'') ';
            ELSIF inv_mwb_globals.g_include_po_without_asn = 0 THEN
               inb_where_clause := inb_where_clause ||' AND ms.supply_type_code = ''SHIPMENT'' ';
            END IF;
*/
            IF inv_mwb_globals.g_vendor_id IS NOT NULL THEN
               inb_where_clause := inb_where_clause ||' AND pha.vendor_id = :inb_vendor_id ';
               IF inv_mwb_globals.g_vendor_site_id IS NOT NULL THEN
                  inb_where_clause := inb_where_clause ||' AND pha.vendor_site_id = :inb_vendor_site_id ';
               END IF;
            END IF;

            IF inv_mwb_globals.g_vendor_item IS NOT NULL THEN
               -- CLM project, bug 9403291
               inb_from_clause := inb_from_clause || ' , po_lines_trx_v pla ';
               inb_where_clause := inb_where_clause ||' AND pla.po_line_id = ms.po_line_id ';
               inb_where_clause := inb_where_clause ||' AND pla.vendor_product_num = :inb_vendor_item ';
            END IF;

            IF inv_mwb_globals.g_po_header_id IS NOT NULL THEN
               inb_where_clause := inb_where_clause ||' AND ms.po_header_id = :inb_po_header_id ';
               inb_where_clause := inb_where_clause ||' AND ms.supply_type_code = ''PO'' ';
            END IF;

            IF  inv_mwb_globals.g_po_release_id IS NOT NULL THEN
               inb_where_clause := inb_where_clause ||' AND ms.po_release_id = :inb_po_release_id ';
            END IF;

            IF inv_mwb_globals.g_shipment_header_id_asn IS NOT NULL THEN
               inb_from_clause := inb_from_clause || ' , rcv_shipment_headers rsh ';
               inb_where_clause := inb_where_clause ||' AND rsh.shipment_header_id(+) = ms.shipment_header_id ';
               inb_where_clause := inb_where_clause ||' AND rsh.shipment_header_id = :inb_shipment_header_id_asn ';
            END IF;

            IF inv_mwb_globals.g_organization_id IS NOT NULL THEN
               inb_where_clause := inb_where_clause ||' AND ms.to_organization_id = :inb_to_organization_id ';
            END IF;

            IF inv_mwb_globals.g_inventory_item_id IS NOT NULL THEN
               inb_where_clause := inb_where_clause ||' AND ms.item_id = :inb_item_id ';
            END IF;

           -- ER(9158529 client)
           IF inv_mwb_globals.g_client_code IS NOT NULL THEN
              inb_where_clause := inb_where_clause || ' AND ms.item_id in (select DISTINCT inventory_item_id from mtl_system_items_b where wms_deploy.get_client_code(inventory_item_id) = :inb_client_code) ';
           END IF;
           -- ER(9158529 client)

            IF inv_mwb_globals.g_revision IS NOT NULL THEN
               inb_where_clause := inb_where_clause ||' AND ms.item_revision = :inb_item_revision ';
            END IF;

            IF inv_mwb_globals.g_cost_group_id IS NOT NULL THEN
               inb_where_clause := inb_where_clause ||' AND ms.cost_group_id = :inb_cost_group_id ';
            END IF;

            -- ER(9158529)
            IF inv_mwb_globals.g_category_set_id IS NOT NULL THEN
               inb_where_clause := inb_where_clause || ' AND ms.item_id in '
                                                        || ' (select DISTINCT inventory_item_id from mtl_item_categories '
                                                        || ' where organization_id = :inb_to_organization_id '
                                                        || ' and category_set_id = :inb_category_set_id '
                                                        || ' and category_id = nvl(:inb_category_id, category_id)) ' ;
            END IF;
            -- ER(9158529)

            IF (inv_mwb_globals.g_expected_from_date IS NOT NULL AND
               inv_mwb_globals.g_expected_to_date IS NOT NULL AND
               inv_mwb_globals.g_expected_from_date = inv_mwb_globals.g_expected_to_date) THEN
               inb_where_clause := inb_where_clause ||' AND ms.expected_delivery_date = :inb_expected_from_date ';
            END IF;

            IF inv_mwb_globals.g_expected_from_date IS NOT NULL THEN
               inb_where_clause := inb_where_clause ||' AND ms.expected_delivery_date >= :inb_expected_from_date ';
            END IF;

            IF inv_mwb_globals.g_expected_to_date IS NOT NULL THEN
               inb_where_clause := inb_where_clause ||' AND ms.expected_delivery_date <= :inb_expected_to_date ';
            END IF;

            IF inv_mwb_globals.g_inventory_item_id IS NULL
            AND inv_mwb_globals.g_item_description IS NOT NULL THEN
                inb_from_clause := inb_from_clause || ' , mtl_system_items_kfv msik ';
                inb_where_clause := inb_where_clause ||' AND ms.item_id = msik.inventory_item_id ';
                inb_where_clause := inb_where_clause ||' AND ms.to_organization_id = msik.organization_id ';
                inb_where_clause := inb_where_clause ||' AND msik.description like :inb_item_description ';
            END IF;

         ELSIF inv_mwb_globals.g_source_org_id IS NOT NULL
         OR inv_mwb_globals.g_req_header_id IS NOT NULL
         OR inv_mwb_globals.g_internal_order_id IS NOT NULL
         OR inv_mwb_globals.g_shipment_header_id_interorg IS NOT NULL THEN

            inb_from_clause := inb_from_clause || ' , rcv_shipment_headers rsh ';
            inb_from_clause := inb_from_clause || ' , rcv_shipment_lines rsl ';
            inb_where_clause := inb_where_clause ||' AND  rsh.shipment_header_id(+) = ms.shipment_header_id ';
            inb_where_clause := inb_where_clause ||' AND  rsl.shipment_line_id(+) = ms.shipment_line_id ';
            inb_where_clause := inb_where_clause ||' AND  ms.supply_type_code IN (''REQ'',''SHIPMENT'') ';
            inb_where_clause := inb_where_clause ||' AND  rsh.asn_type IS NULL ';

            IF inv_mwb_globals.g_shipment_header_id_interorg IS NOT NULL THEN
               inb_where_clause := inb_where_clause ||' AND  rsh.shipment_header_id = :inb_shipment_header_id ';
               inb_where_clause := inb_where_clause ||' AND  ms.supply_type_code = ''SHIPMENT'' ';
            ELSIF inv_mwb_globals.g_req_header_id IS NOT NULL THEN
               inb_where_clause := inb_where_clause ||' AND  ms.req_header_id = :inb_req_header_id ';
               inb_where_clause := inb_where_clause ||' AND  ms.supply_type_code = ''REQ'' ';
            END IF;

            IF inv_mwb_globals.g_source_org_id IS NOT NULL THEN
               inb_where_clause := inb_where_clause ||' AND  ms.from_organization_id = :inb_from_organization_id ';
            END IF;

            IF inv_mwb_globals.g_organization_id IS NOT NULL THEN
               inb_where_clause := inb_where_clause ||' AND ms.to_organization_id = :inb_to_organization_id';
            END IF;

            IF inv_mwb_globals.g_inventory_item_id IS NOT NULL THEN
               inb_where_clause := inb_where_clause ||' AND ms.item_id = :inb_item_id';
            END IF;

            -- ER(9158529 client)
            IF inv_mwb_globals.g_client_code IS NOT NULL THEN
               inb_where_clause := inb_where_clause || ' AND ms.item_id in (select DISTINCT inventory_item_id from mtl_system_items_b where wms_deploy.get_client_code(inventory_item_id) = :inb_client_code) ';
            END IF;
            -- ER(9158529 client)

            IF inv_mwb_globals.g_revision IS NOT NULL THEN
              inb_where_clause := inb_where_clause ||' AND ms.item_revision = :inb_item_revision';
            END IF;

            IF inv_mwb_globals.g_cost_group_id IS NOT NULL THEN
               inb_where_clause := inb_where_clause ||' AND ms.cost_group_id = :inb_cost_group_id';
            END IF;

            -- ER(9158529)
            IF inv_mwb_globals.g_category_set_id IS NOT NULL THEN
               inb_where_clause := inb_where_clause || ' AND ms.item_id in '
                                                        || ' (select DISTINCT inventory_item_id from mtl_item_categories '
                                                        || ' where organization_id = :inb_to_organization_id '
                                                        || ' and category_set_id = :inb_category_set_id '
                                                        || ' and category_id = nvl(:inb_category_id, category_id)) ' ;
            END IF;
            -- ER(9158529)

            IF (inv_mwb_globals.g_expected_from_date IS NOT NULL AND
               inv_mwb_globals.g_expected_to_date IS NOT NULL AND
               inv_mwb_globals.g_expected_from_date = inv_mwb_globals.g_expected_to_date) THEN
               inb_where_clause := inb_where_clause ||' AND ms.expected_delivery_date = :inb_expected_from_date';
            END IF;

            IF inv_mwb_globals.g_expected_from_date IS NOT NULL THEN
               inb_where_clause := inb_where_clause ||' AND ms.expected_delivery_date >= :inb_expected_from_date';
            END IF;

            IF inv_mwb_globals.g_expected_to_date IS NOT NULL THEN
               inb_where_clause := inb_where_clause ||' AND ms.expected_delivery_date <= :inb_expected_to_date';
            END IF;

            IF inv_mwb_globals.g_lpn_from_id IS NOT NULL
            OR inv_mwb_globals.g_lpn_to_id IS NOT NULL THEN
               inb_from_clause := inb_from_clause || ' , wms_license_plate_numbers wlpn ';
               inb_where_clause := inb_where_clause ||' AND rsl.asn_lpn_id = wlpn.lpn_id ';
            END IF;

            IF (inv_mwb_globals.g_lpn_from_id IS NOT NULL AND
            inv_mwb_globals.g_lpn_to_id IS NOT NULL AND
            inv_mwb_globals.g_lpn_from_id = inv_mwb_globals.g_lpn_to_id) THEN
               inb_where_clause := inb_where_clause ||' AND rsl.asn_lpn_id = :inb_lpn_from_id';
            END IF;

            IF (inv_mwb_globals.g_lpn_from_id IS NOT NULL AND
            inv_mwb_globals.g_lpn_from_id <> NVL(inv_mwb_globals.g_lpn_to_id, -1) ) THEN
               inb_where_clause := inb_where_clause ||' AND wlpn.license_plate_number >= :inb_lpn_from';
            END IF;

            IF (inv_mwb_globals.g_lpn_to_id IS NOT NULL AND
            inv_mwb_globals.g_lpn_to_id <> NVL(inv_mwb_globals.g_lpn_from_id, -1) ) THEN
               inb_where_clause := inb_where_clause ||' AND wlpn.license_plate_number <= :inb_lpn_to';
            END IF;

            IF inv_mwb_globals.g_lot_from IS NOT NULL
            OR inv_mwb_globals.g_lot_to IS NOT NULL THEN
               inb_from_clause := inb_from_clause || ' ,  rcv_lots_supply rls ';
               inb_where_clause := inb_where_clause ||' AND rls.shipment_line_id = ms.shipment_line_id ';
               inb_where_clause := inb_where_clause ||' AND rls.supply_type_code = ''SHIPMENT''';
            END IF;

            IF (inv_mwb_globals.g_lot_from IS NOT NULL AND
            inv_mwb_globals.g_lot_to IS NOT NULL AND
            inv_mwb_globals.g_lot_from = inv_mwb_globals.g_lot_to) THEN
               inb_where_clause := inb_where_clause ||' AND rls.lot_num = :inb_lot_from';
            END IF;

            IF (inv_mwb_globals.g_lot_from IS NOT NULL AND
            inv_mwb_globals.g_lot_from <> NVL(inv_mwb_globals.g_lot_to, -1) ) THEN
              inb_where_clause := inb_where_clause ||' AND rls.lot_num >= :inb_lot_from';
            END IF;

            IF (inv_mwb_globals.g_lot_to IS NOT NULL AND
            inv_mwb_globals.g_lot_to <> NVL(inv_mwb_globals.g_lot_from, -1) ) THEN
              inb_where_clause := inb_where_clause ||' AND rls.lot_num <= :inb_lot_to';
            END IF;

/* Bug 8396954, Adding below code for checking supplier_lot_number condition */
      IF inv_mwb_globals.g_supplier_lot_from IS NOT NULL
      OR inv_mwb_globals.g_supplier_lot_to IS NOT NULL THEN
         inb_from_clause := inb_from_clause || ', mtl_lot_numbers mln1 ';
        IF NOT (inv_mwb_globals.g_lot_from IS NOT NULL
              OR inv_mwb_globals.g_lot_to IS NOT NULL ) THEN
               inb_from_clause := inb_from_clause || ' ,  rcv_lots_supply rls ';
               inb_where_clause := inb_where_clause ||' AND rls.shipment_line_id = ms.shipment_line_id ';
               inb_where_clause := inb_where_clause ||' AND rls.supply_type_code = ''SHIPMENT''';
        END IF;

         inb_where_clause := inb_where_clause || ' AND rls.lot_num = mln1.lot_number';

        IF (inv_mwb_globals.g_supplier_lot_from IS NOT NULL AND
            inv_mwb_globals.g_supplier_lot_to IS NOT NULL AND
            inv_mwb_globals.g_supplier_lot_from = inv_mwb_globals.g_supplier_lot_to) THEN
            inb_where_clause := inb_where_clause || ' AND mln1.supplier_lot_number = :inb_supplier_lot_from ';
        END IF;

        IF (inv_mwb_globals.g_supplier_lot_from IS NOT NULL AND
            inv_mwb_globals.g_supplier_lot_from <> NVL(inv_mwb_globals.g_supplier_lot_to, -1) ) THEN
            inb_where_clause := inb_where_clause || ' AND mln1.supplier_lot_number >= :inb_supplier_lot_from ';
        END IF;

        IF (inv_mwb_globals.g_supplier_lot_to IS NOT NULL AND
            inv_mwb_globals.g_supplier_lot_to <> NVL(inv_mwb_globals.g_supplier_lot_from, -1) ) THEN
            inb_where_clause := inb_where_clause || ' AND mln1.supplier_lot_number <= :inb_supplier_lot_to ';
        END IF;
      END IF;
/* End of Bug 8396954 */

            IF inv_mwb_globals.g_serial_from IS NOT NULL
            OR inv_mwb_globals.g_serial_to IS NOT NULL THEN
               inb_from_clause := inb_from_clause || ' ,  rcv_serials_supply rss ';
               inb_where_clause := inb_where_clause ||' AND rss.shipment_line_id = ms.shipment_line_id ';
               inb_where_clause := inb_where_clause ||' AND rss.supply_type_code = ''SHIPMENT''';
            END IF;

            IF (inv_mwb_globals.g_serial_from IS NOT NULL AND
               inv_mwb_globals.g_serial_to IS NOT NULL AND
               inv_mwb_globals.g_serial_from = inv_mwb_globals.g_serial_to) THEN
               inb_where_clause := inb_where_clause ||' AND rss.serial_num = :inb_serial_from';
            END IF;

            IF (inv_mwb_globals.g_serial_from IS NOT NULL AND
               inv_mwb_globals.g_serial_from <> NVL(inv_mwb_globals.g_serial_to, -1) ) THEN
               inb_where_clause := inb_where_clause ||' AND rss.serial_num >= :inb_serial_from';
            END IF;

            IF (inv_mwb_globals.g_serial_to IS NOT NULL AND
               inv_mwb_globals.g_serial_to <> NVL(inv_mwb_globals.g_serial_from, -1) ) THEN
               inb_where_clause := inb_where_clause ||' AND rss.serial_num <= :inb_serial_to';
            END IF;

            IF inv_mwb_globals.g_inventory_item_id IS NULL
            AND inv_mwb_globals.g_item_description IS NOT NULL THEN
               inb_from_clause := inb_from_clause || ' ,  mtl_system_items_kfv msik ';
               inb_where_clause := inb_where_clause ||' AND  ms.item_id = msik.inventory_item_id ';
               inb_where_clause := inb_where_clause ||' AND  ms.to_organization_id = msik.organization_id ';
               inb_where_clause := inb_where_clause ||' AND  msik.description like :inb_item_description ';
            END IF;
         ELSE -- If interorg and supplier tab null

            IF inv_mwb_globals.g_organization_id IS NOT NULL THEN
               inb_where_clause := inb_where_clause ||' AND ms.to_organization_id = :inb_to_organization_id';
            END IF;

            IF inv_mwb_globals.g_inventory_item_id IS NOT NULL THEN
               inb_where_clause := inb_where_clause ||' AND ms.item_id = :inb_item_id';
            END IF;

            -- ER(9158529 client)
            IF inv_mwb_globals.g_client_code IS NOT NULL THEN
               inb_where_clause := inb_where_clause || ' AND ms.item_id in (select DISTINCT inventory_item_id from mtl_system_items_b where wms_deploy.get_client_code(inventory_item_id) = :inb_client_code) ';
            END IF;
            -- ER(9158529 client)

            IF inv_mwb_globals.g_revision IS NOT NULL THEN
              inb_where_clause := inb_where_clause ||' AND ms.item_revision = :inb_item_revision';
            END IF;

            IF inv_mwb_globals.g_cost_group_id IS NOT NULL THEN
               inb_where_clause := inb_where_clause ||' AND ms.cost_group_id = :inb_cost_group_id';
            END IF;

            -- ER(9158529)
            IF inv_mwb_globals.g_category_set_id IS NOT NULL THEN
               inb_where_clause := inb_where_clause || ' AND ms.item_id in '
                                                        || ' (select DISTINCT inventory_item_id from mtl_item_categories '
                                                        || ' where organization_id = :inb_to_organization_id '
                                                        || ' and category_set_id = :inb_category_set_id '
                                                        || ' and category_id = nvl(:inb_category_id, category_id)) ' ;
            END IF;
            -- ER(9158529)

            IF inv_mwb_globals.g_lpn_from_id IS NOT NULL
            OR inv_mwb_globals.g_lpn_to_id IS NOT NULL THEN
               inb_from_clause := inb_from_clause || ' ,  rcv_shipment_lines rsl ';
               inb_where_clause := inb_where_clause ||' AND rsl.shipment_line_id = ms.shipment_line_id';
               inb_from_clause := inb_from_clause || ' , wms_license_plate_numbers wlpn ';
               inb_where_clause := inb_where_clause ||' AND rsl.asn_lpn_id = wlpn.lpn_id ';
            END IF;

            IF (inv_mwb_globals.g_lpn_from_id IS NOT NULL AND
            inv_mwb_globals.g_lpn_to_id IS NOT NULL AND
            inv_mwb_globals.g_lpn_from_id = inv_mwb_globals.g_lpn_to_id) THEN
               inb_where_clause := inb_where_clause ||' AND rsl.asn_lpn_id = :inb_lpn_from_id';
            END IF;

            IF (inv_mwb_globals.g_lpn_from_id IS NOT NULL AND
            inv_mwb_globals.g_lpn_from_id <> NVL(inv_mwb_globals.g_lpn_to_id, -1) ) THEN
               inb_where_clause := inb_where_clause ||' AND wlpn.license_plate_number >= :inb_lpn_from';
            END IF;

            IF (inv_mwb_globals.g_lpn_to_id IS NOT NULL AND
            inv_mwb_globals.g_lpn_to_id <> NVL(inv_mwb_globals.g_lpn_from_id, -1) ) THEN
               inb_where_clause := inb_where_clause ||' AND wlpn.license_plate_number <= :inb_lpn_to';
            END IF;

            IF inv_mwb_globals.g_lot_from IS NOT NULL
            OR inv_mwb_globals.g_lot_to IS NOT NULL THEN
               inb_from_clause := inb_from_clause || ' ,  rcv_lots_supply rls ';
               inb_where_clause := inb_where_clause ||' AND rls.shipment_line_id = ms.shipment_line_id ';
               inb_where_clause := inb_where_clause ||' AND rls.supply_type_code = ''SHIPMENT''';
            END IF;

            IF (inv_mwb_globals.g_lot_from IS NOT NULL AND
            inv_mwb_globals.g_lot_to IS NOT NULL AND
            inv_mwb_globals.g_lot_from = inv_mwb_globals.g_lot_to) THEN
               inb_where_clause := inb_where_clause ||' AND rls.lot_num = :inb_lot_from';
            END IF;

            IF (inv_mwb_globals.g_lot_from IS NOT NULL AND
            inv_mwb_globals.g_lot_from <> NVL(inv_mwb_globals.g_lot_to, -1) ) THEN
              inb_where_clause := inb_where_clause ||' AND rls.lot_num >= :inb_lot_from';
            END IF;

            IF (inv_mwb_globals.g_lot_to IS NOT NULL AND
            inv_mwb_globals.g_lot_to <> NVL(inv_mwb_globals.g_lot_from, -1) ) THEN
              inb_where_clause := inb_where_clause ||' AND rls.lot_num <= :inb_lot_to';
            END IF;

/* Bug 8396954, Adding below code for checking supplier_lot_number condition */
      IF inv_mwb_globals.g_supplier_lot_from IS NOT NULL
      OR inv_mwb_globals.g_supplier_lot_to IS NOT NULL THEN
         inb_from_clause := inb_from_clause || ', mtl_lot_numbers mln1 ';
        IF NOT (inv_mwb_globals.g_lot_from IS NOT NULL
              OR inv_mwb_globals.g_lot_to IS NOT NULL ) THEN
               inb_from_clause := inb_from_clause || ' ,  rcv_lots_supply rls ';
               inb_where_clause := inb_where_clause ||' AND rls.shipment_line_id = ms.shipment_line_id ';
               inb_where_clause := inb_where_clause ||' AND rls.supply_type_code = ''SHIPMENT''';
        END IF;

         inb_where_clause := inb_where_clause || ' AND rls.lot_num = mln1.lot_number';

        IF (inv_mwb_globals.g_supplier_lot_from IS NOT NULL AND
            inv_mwb_globals.g_supplier_lot_to IS NOT NULL AND
            inv_mwb_globals.g_supplier_lot_from = inv_mwb_globals.g_supplier_lot_to) THEN
            inb_where_clause := inb_where_clause || ' AND mln1.supplier_lot_number = :inb_supplier_lot_from ';
        END IF;

        IF (inv_mwb_globals.g_supplier_lot_from IS NOT NULL AND
            inv_mwb_globals.g_supplier_lot_from <> NVL(inv_mwb_globals.g_supplier_lot_to, -1) ) THEN
            inb_where_clause := inb_where_clause || ' AND mln1.supplier_lot_number >= :inb_supplier_lot_from ';
        END IF;

        IF (inv_mwb_globals.g_supplier_lot_to IS NOT NULL AND
            inv_mwb_globals.g_supplier_lot_to <> NVL(inv_mwb_globals.g_supplier_lot_from, -1) ) THEN
            inb_where_clause := inb_where_clause || ' AND mln1.supplier_lot_number <= :inb_supplier_lot_to ';
        END IF;
      END IF;
/* End of Bug 8396954 */

            IF inv_mwb_globals.g_serial_from IS NOT NULL
            OR inv_mwb_globals.g_serial_to IS NOT NULL THEN
               inb_from_clause := inb_from_clause || ' ,  rcv_serials_supply rss ';
               inb_where_clause := inb_where_clause ||' AND rss.shipment_line_id = ms.shipment_line_id ';
               inb_where_clause := inb_where_clause ||' AND rss.supply_type_code = ''SHIPMENT'' ';
            END IF;

            IF (inv_mwb_globals.g_serial_from IS NOT NULL AND
               inv_mwb_globals.g_serial_to IS NOT NULL AND
               inv_mwb_globals.g_serial_from = inv_mwb_globals.g_serial_to) THEN
               inb_where_clause := inb_where_clause ||' AND rss.serial_num = :inb_serial_from';
            END IF;

            IF (inv_mwb_globals.g_serial_from IS NOT NULL AND
               inv_mwb_globals.g_serial_from <> NVL(inv_mwb_globals.g_serial_to, -1) ) THEN
               inb_where_clause := inb_where_clause ||' AND rss.serial_num >= :inb_serial_from';
            END IF;

            IF (inv_mwb_globals.g_serial_to IS NOT NULL AND
               inv_mwb_globals.g_serial_to <> NVL(inv_mwb_globals.g_serial_from, -1) ) THEN
               inb_where_clause := inb_where_clause ||' AND rss.serial_num <= :inb_serial_to';
            END IF;

            IF inv_mwb_globals.g_inventory_item_id IS NULL
            AND inv_mwb_globals.g_item_description IS NOT NULL THEN
               inb_from_clause := inb_from_clause || ' ,  mtl_system_items_kfv msik ';
               inb_where_clause := inb_where_clause ||' AND  ms.item_id = msik.inventory_item_id ';
               inb_where_clause := inb_where_clause ||' AND  ms.to_organization_id = msik.organization_id ';
               inb_where_clause := inb_where_clause ||' AND  msik.description like :inb_item_description ';
            END IF;
         END IF;


    inv_mwb_globals.print_msg( g_pkg_name, l_procedure_name, 'Here1'||inb_from_clause);

         inb_where_clause := inb_where_clause ||' AND  ms.supply_type_code NOT IN (''RECEIVING'') ';
         inb_query_str := inb_select_clause || inb_from_clause || inb_where_clause || inb_orderby_clause;

         inv_mwb_globals.g_last_query := inb_query_str;

/*         delete from rtest2;
         insert into rtest2 values (inb_query_str);
         commit;
*/

         query_hdl := DBMS_SQL.open_cursor;
         DBMS_SQL.parse(query_hdl, inb_query_str, DBMS_SQL.native);

         IF inv_mwb_globals.g_po_header_id IS NOT NULL
         OR inv_mwb_globals.g_vendor_id IS NOT NULL
         OR inv_mwb_globals.g_shipment_header_id_asn IS NOT NULL
         OR inv_mwb_globals.g_vendor_item IS NOT NULL THEN

            IF inv_mwb_globals.g_vendor_id IS NOT NULL THEN
               DBMS_SQL.bind_variable(query_hdl, 'inb_vendor_id', inv_mwb_globals.g_vendor_id);
               IF inv_mwb_globals.g_vendor_site_id IS NOT NULL THEN
                  DBMS_SQL.bind_variable(query_hdl, 'inb_vendor_site_id', inv_mwb_globals.g_vendor_site_id);
               END IF;
            END IF;

            IF inv_mwb_globals.g_vendor_item IS NOT NULL THEN
               DBMS_SQL.bind_variable(query_hdl, 'inb_vendor_item', inv_mwb_globals.g_vendor_item);
            END IF;

            IF inv_mwb_globals.g_po_header_id IS NOT NULL THEN
               DBMS_SQL.bind_variable(query_hdl, 'inb_po_header_id', inv_mwb_globals.g_po_header_id);
            END IF;

            IF inv_mwb_globals.g_po_release_id IS NOT NULL THEN
               DBMS_SQL.bind_variable(query_hdl, 'inb_po_release_id', inv_mwb_globals.g_po_release_id);
            END IF;

            IF inv_mwb_globals.g_shipment_header_id_asn IS NOT NULL THEN
               DBMS_SQL.bind_variable(query_hdl, 'inb_shipment_header_id_asn', inv_mwb_globals.g_shipment_header_id_asn);
            END IF;

            IF inv_mwb_globals.g_organization_id IS NOT NULL THEN
               DBMS_SQL.bind_variable(query_hdl, 'inb_to_organization_id', inv_mwb_globals.g_organization_id);
            END IF;

            IF inv_mwb_globals.g_inventory_item_id IS NOT NULL THEN
               DBMS_SQL.bind_variable(query_hdl, 'inb_item_id', inv_mwb_globals.g_inventory_item_id);
            END IF;

            -- ER(9158529 client)
            IF inv_mwb_globals.g_client_code IS NOT NULL THEN
               DBMS_SQL.bind_variable(query_hdl, 'inb_client_code', inv_mwb_globals.g_client_code);
            END IF;
             -- ER(9158529 client)

            IF inv_mwb_globals.g_revision IS NOT NULL THEN
               DBMS_SQL.bind_variable(query_hdl, 'inb_item_revision', inv_mwb_globals.g_revision);
            END IF;

            IF inv_mwb_globals.g_cost_group_id IS NOT NULL THEN
               DBMS_SQL.bind_variable(query_hdl, 'inb_cost_group_id', inv_mwb_globals.g_cost_group_id);
            END IF;

            -- ER(9158529)
            IF inv_mwb_globals.g_category_set_id IS NOT NULL THEN
               DBMS_SQL.bind_variable(query_hdl, 'inb_to_organization_id', inv_mwb_globals.g_organization_id);
               DBMS_SQL.bind_variable(query_hdl, 'inb_category_set_id', inv_mwb_globals.g_category_set_id);
               DBMS_SQL.bind_variable(query_hdl, 'inb_category_id', inv_mwb_globals.g_category_id);
            END IF;
            -- ER(9158529)

            IF (inv_mwb_globals.g_expected_from_date IS NOT NULL AND
               inv_mwb_globals.g_expected_to_date IS NOT NULL AND
               inv_mwb_globals.g_expected_from_date = inv_mwb_globals.g_expected_to_date) THEN
               DBMS_SQL.bind_variable(query_hdl, 'inb_expected_from_date', inv_mwb_globals.g_expected_from_date);
            END IF;

            IF inv_mwb_globals.g_expected_from_date IS NOT NULL THEN
               DBMS_SQL.bind_variable(query_hdl, 'inb_expected_from_date', inv_mwb_globals.g_expected_from_date);
            END IF;

            IF inv_mwb_globals.g_expected_to_date IS NOT NULL THEN
               DBMS_SQL.bind_variable(query_hdl, 'inb_expected_to_date', inv_mwb_globals.g_expected_to_date);
            END IF;

            IF inv_mwb_globals.g_inventory_item_id IS NULL
            AND inv_mwb_globals.g_item_description IS NOT NULL THEN
               DBMS_SQL.bind_variable(query_hdl, 'inb_item_description', inv_mwb_globals.g_item_description);
            END IF;

         ELSIF inv_mwb_globals.g_source_org_id IS NOT NULL
         OR inv_mwb_globals.g_req_header_id IS NOT NULL
         OR inv_mwb_globals.g_internal_order_id IS NOT NULL
         OR inv_mwb_globals.g_shipment_header_id_interorg IS NOT NULL THEN


            IF inv_mwb_globals.g_shipment_header_id_interorg IS NOT NULL THEN
               DBMS_SQL.bind_variable(query_hdl, 'inb_shipment_header_id', inv_mwb_globals.g_shipment_header_id_interorg);
            ELSIF inv_mwb_globals.g_req_header_id IS NOT NULL THEN
               DBMS_SQL.bind_variable(query_hdl, 'inb_req_header_id', inv_mwb_globals.g_req_header_id);
            END IF;

            IF inv_mwb_globals.g_source_org_id IS NOT NULL THEN
               DBMS_SQL.bind_variable(query_hdl, 'inb_from_organization_id', inv_mwb_globals.g_source_org_id);
            END IF;

            IF inv_mwb_globals.g_organization_id IS NOT NULL THEN
               DBMS_SQL.bind_variable(query_hdl, 'inb_to_organization_id', inv_mwb_globals.g_organization_id);
            END IF;

            IF inv_mwb_globals.g_inventory_item_id IS NOT NULL THEN
               DBMS_SQL.bind_variable(query_hdl, 'inb_item_id', inv_mwb_globals.g_inventory_item_id);
            END IF;

            -- ER(9158529 client)
            IF inv_mwb_globals.g_client_code IS NOT NULL THEN
               DBMS_SQL.bind_variable(query_hdl, 'inb_client_code', inv_mwb_globals.g_client_code);
            END IF;
             -- ER(9158529 client)

            IF inv_mwb_globals.g_revision IS NOT NULL THEN
              DBMS_SQL.bind_variable(query_hdl, 'inb_item_revision', inv_mwb_globals.g_revision);
            END IF;

            IF inv_mwb_globals.g_cost_group_id IS NOT NULL THEN
               DBMS_SQL.bind_variable(query_hdl, 'inb_cost_group_id', inv_mwb_globals.g_cost_group_id);
            END IF;

            -- ER(9158529)
            IF inv_mwb_globals.g_category_set_id IS NOT NULL THEN
               DBMS_SQL.bind_variable(query_hdl, 'inb_to_organization_id', inv_mwb_globals.g_organization_id);
               DBMS_SQL.bind_variable(query_hdl, 'inb_category_set_id', inv_mwb_globals.g_category_set_id);
               DBMS_SQL.bind_variable(query_hdl, 'inb_category_id', inv_mwb_globals.g_category_id);
            END IF;
            -- ER(9158529)

            IF (inv_mwb_globals.g_expected_from_date IS NOT NULL AND
               inv_mwb_globals.g_expected_to_date IS NOT NULL AND
               inv_mwb_globals.g_expected_from_date = inv_mwb_globals.g_expected_to_date) THEN
               DBMS_SQL.bind_variable(query_hdl, 'inb_expected_from_date', inv_mwb_globals.g_expected_from_date);
            END IF;

            IF inv_mwb_globals.g_expected_from_date IS NOT NULL THEN
               DBMS_SQL.bind_variable(query_hdl, 'inb_expected_from_date', inv_mwb_globals.g_expected_from_date);
            END IF;

            IF inv_mwb_globals.g_expected_to_date IS NOT NULL THEN
               DBMS_SQL.bind_variable(query_hdl, 'inb_expected_to_date', inv_mwb_globals.g_expected_to_date);
            END IF;

            IF (inv_mwb_globals.g_lpn_from_id IS NOT NULL AND
            inv_mwb_globals.g_lpn_to_id IS NOT NULL AND
            inv_mwb_globals.g_lpn_from_id = inv_mwb_globals.g_lpn_to_id) THEN
               DBMS_SQL.bind_variable(query_hdl, 'inb_lpn_from_id', inv_mwb_globals.g_lpn_from_id);
            END IF;

            IF (inv_mwb_globals.g_lpn_from_id IS NOT NULL AND
            inv_mwb_globals.g_lpn_from_id <> NVL(inv_mwb_globals.g_lpn_to_id, -1) ) THEN
               DBMS_SQL.bind_variable(query_hdl, 'inb_lpn_from', inv_mwb_globals.g_lpn_from);
            END IF;

            IF (inv_mwb_globals.g_lpn_to_id IS NOT NULL AND
            inv_mwb_globals.g_lpn_to_id <> NVL(inv_mwb_globals.g_lpn_from_id, -1) ) THEN
               DBMS_SQL.bind_variable(query_hdl, 'inb_lpn_to', inv_mwb_globals.g_lpn_to);
            END IF;


            IF (inv_mwb_globals.g_lot_from IS NOT NULL AND
            inv_mwb_globals.g_lot_to IS NOT NULL AND
            inv_mwb_globals.g_lot_from = inv_mwb_globals.g_lot_to) THEN
               DBMS_SQL.bind_variable(query_hdl, 'inb_lot_from', inv_mwb_globals.g_lot_from);
            END IF;

            IF (inv_mwb_globals.g_lot_from IS NOT NULL AND
            inv_mwb_globals.g_lot_from <> NVL(inv_mwb_globals.g_lot_to, -1) ) THEN
              DBMS_SQL.bind_variable(query_hdl, 'inb_lot_from', inv_mwb_globals.g_lot_from);
            END IF;

            IF (inv_mwb_globals.g_lot_to IS NOT NULL AND
            inv_mwb_globals.g_lot_to <> NVL(inv_mwb_globals.g_lot_from, -1) ) THEN
              DBMS_SQL.bind_variable(query_hdl, 'inb_lot_to', inv_mwb_globals.g_lot_to);
            END IF;

/* Bug 8396954, Adding below code for checking supplier_lot_number condition */
            IF inv_mwb_globals.g_supplier_lot_from IS NOT NULL
             OR inv_mwb_globals.g_supplier_lot_to IS NOT NULL THEN

               IF (inv_mwb_globals.g_supplier_lot_from IS NOT NULL AND
                   inv_mwb_globals.g_supplier_lot_to IS NOT NULL AND
                   inv_mwb_globals.g_supplier_lot_from = inv_mwb_globals.g_supplier_lot_to) THEN
                    DBMS_SQL.bind_variable(query_hdl, 'inb_supplier_lot_from', inv_mwb_globals.g_supplier_lot_from);
               END IF;

               IF (inv_mwb_globals.g_supplier_lot_from IS NOT NULL AND
                   inv_mwb_globals.g_supplier_lot_from <> NVL(inv_mwb_globals.g_supplier_lot_to, -1) ) THEN
                    DBMS_SQL.bind_variable(query_hdl, 'inb_supplier_lot_from', inv_mwb_globals.g_supplier_lot_from);
               END IF;

               IF (inv_mwb_globals.g_supplier_lot_to IS NOT NULL AND
                   inv_mwb_globals.g_supplier_lot_to <> NVL(inv_mwb_globals.g_supplier_lot_from, -1) ) THEN
                    DBMS_SQL.bind_variable(query_hdl, 'inb_supplier_lot_to', inv_mwb_globals.g_supplier_lot_to);
               END IF;
            END IF;
/* End of Bug 8396954 */

            IF (inv_mwb_globals.g_serial_from IS NOT NULL AND
               inv_mwb_globals.g_serial_to IS NOT NULL AND
               inv_mwb_globals.g_serial_from = inv_mwb_globals.g_serial_to) THEN
               DBMS_SQL.bind_variable(query_hdl, 'inb_serial_from', inv_mwb_globals.g_serial_from);
            END IF;

            IF (inv_mwb_globals.g_serial_from IS NOT NULL AND
               inv_mwb_globals.g_serial_from <> NVL(inv_mwb_globals.g_serial_to, -1) ) THEN
               DBMS_SQL.bind_variable(query_hdl, 'inb_serial_from', inv_mwb_globals.g_serial_from);
            END IF;

            IF (inv_mwb_globals.g_serial_to IS NOT NULL AND
               inv_mwb_globals.g_serial_to <> NVL(inv_mwb_globals.g_serial_from, -1) ) THEN
               DBMS_SQL.bind_variable(query_hdl, 'inb_serial_to', inv_mwb_globals.g_serial_to);
            END IF;

            IF inv_mwb_globals.g_inventory_item_id IS NULL
            AND inv_mwb_globals.g_item_description IS NOT NULL THEN
               DBMS_SQL.bind_variable(query_hdl, 'inb_item_description', inv_mwb_globals.g_item_description);
            END IF;
         ELSE -- If interorg and supplier tab null
    inv_mwb_globals.print_msg( g_pkg_name, l_procedure_name, 'Here2');
            IF inv_mwb_globals.g_organization_id IS NOT NULL THEN
               DBMS_SQL.bind_variable(query_hdl, 'inb_to_organization_id', inv_mwb_globals.g_organization_id);
            END IF;

            IF inv_mwb_globals.g_inventory_item_id IS NOT NULL THEN
               DBMS_SQL.bind_variable(query_hdl, 'inb_item_id', inv_mwb_globals.g_inventory_item_id);
            END IF;

            -- ER(9158529 client)
            IF inv_mwb_globals.g_client_code IS NOT NULL THEN
               DBMS_SQL.bind_variable(query_hdl, 'inb_client_code', inv_mwb_globals.g_client_code);
            END IF;
             -- ER(9158529 client)

            IF inv_mwb_globals.g_revision IS NOT NULL THEN
              DBMS_SQL.bind_variable(query_hdl, 'inb_item_revision', inv_mwb_globals.g_revision);
            END IF;

            IF inv_mwb_globals.g_cost_group_id IS NOT NULL THEN
               DBMS_SQL.bind_variable(query_hdl, 'inb_cost_group_id', inv_mwb_globals.g_cost_group_id);
            END IF;

            -- ER(9158529)
            IF inv_mwb_globals.g_category_set_id IS NOT NULL THEN
               DBMS_SQL.bind_variable(query_hdl, 'inb_to_organization_id', inv_mwb_globals.g_organization_id);
               DBMS_SQL.bind_variable(query_hdl, 'inb_category_set_id', inv_mwb_globals.g_category_set_id);
               DBMS_SQL.bind_variable(query_hdl, 'inb_category_id', inv_mwb_globals.g_category_id);
            END IF;
            -- ER(9158529)

            IF (inv_mwb_globals.g_lpn_from_id IS NOT NULL AND
            inv_mwb_globals.g_lpn_to_id IS NOT NULL AND
            inv_mwb_globals.g_lpn_from_id = inv_mwb_globals.g_lpn_to_id) THEN
               DBMS_SQL.bind_variable(query_hdl, 'inb_lpn_from_id', inv_mwb_globals.g_lpn_from_id);
            END IF;

            IF (inv_mwb_globals.g_lpn_from_id IS NOT NULL AND
            inv_mwb_globals.g_lpn_from_id <> NVL(inv_mwb_globals.g_lpn_to_id, -1) ) THEN
               DBMS_SQL.bind_variable(query_hdl, 'inb_lpn_from', inv_mwb_globals.g_lpn_from);
            END IF;

            IF (inv_mwb_globals.g_lpn_to_id IS NOT NULL AND
            inv_mwb_globals.g_lpn_to_id <> NVL(inv_mwb_globals.g_lpn_from_id, -1) ) THEN
               DBMS_SQL.bind_variable(query_hdl, 'inb_lpn_to', inv_mwb_globals.g_lpn_to);
            END IF;

            IF (inv_mwb_globals.g_lot_from IS NOT NULL AND
            inv_mwb_globals.g_lot_to IS NOT NULL AND
            inv_mwb_globals.g_lot_from = inv_mwb_globals.g_lot_to) THEN
               DBMS_SQL.bind_variable(query_hdl, 'inb_lot_from', inv_mwb_globals.g_lot_from);
            END IF;

            IF (inv_mwb_globals.g_lot_from IS NOT NULL AND
            inv_mwb_globals.g_lot_from <> NVL(inv_mwb_globals.g_lot_to, -1) ) THEN
              DBMS_SQL.bind_variable(query_hdl, 'inb_lot_from', inv_mwb_globals.g_lot_from);
            END IF;

            IF (inv_mwb_globals.g_lot_to IS NOT NULL AND
            inv_mwb_globals.g_lot_to <> NVL(inv_mwb_globals.g_lot_from, -1) ) THEN
              inb_where_clause := inb_where_clause ||' AND rls.lot_num <= :inb_lot_to';
              DBMS_SQL.bind_variable(query_hdl, 'inb_lot_to', inv_mwb_globals.g_lot_to);
            END IF;

/* Bug 8396954, Adding below code for checking supplier_lot_number condition */
            IF inv_mwb_globals.g_supplier_lot_from IS NOT NULL
             OR inv_mwb_globals.g_supplier_lot_to IS NOT NULL THEN

               IF (inv_mwb_globals.g_supplier_lot_from IS NOT NULL AND
                   inv_mwb_globals.g_supplier_lot_to IS NOT NULL AND
                   inv_mwb_globals.g_supplier_lot_from = inv_mwb_globals.g_supplier_lot_to) THEN
                    DBMS_SQL.bind_variable(query_hdl, 'inb_supplier_lot_from', inv_mwb_globals.g_supplier_lot_from);
               END IF;

               IF (inv_mwb_globals.g_supplier_lot_from IS NOT NULL AND
                   inv_mwb_globals.g_supplier_lot_from <> NVL(inv_mwb_globals.g_supplier_lot_to, -1) ) THEN
                    DBMS_SQL.bind_variable(query_hdl, 'inb_supplier_lot_from', inv_mwb_globals.g_supplier_lot_from);
               END IF;

               IF (inv_mwb_globals.g_supplier_lot_to IS NOT NULL AND
                   inv_mwb_globals.g_supplier_lot_to <> NVL(inv_mwb_globals.g_supplier_lot_from, -1) ) THEN
                    DBMS_SQL.bind_variable(query_hdl, 'inb_supplier_lot_to', inv_mwb_globals.g_supplier_lot_to);
               END IF;
            END IF;
/* End of Bug 8396954 */

            IF (inv_mwb_globals.g_serial_from IS NOT NULL AND
               inv_mwb_globals.g_serial_to IS NOT NULL AND
               inv_mwb_globals.g_serial_from = inv_mwb_globals.g_serial_to) THEN
               DBMS_SQL.bind_variable(query_hdl, 'inb_serial_from', inv_mwb_globals.g_serial_from);
            END IF;

            IF (inv_mwb_globals.g_serial_from IS NOT NULL AND
               inv_mwb_globals.g_serial_from <> NVL(inv_mwb_globals.g_serial_to, -1) ) THEN
               DBMS_SQL.bind_variable(query_hdl, 'inb_serial_from', inv_mwb_globals.g_serial_from);
            END IF;

            IF (inv_mwb_globals.g_serial_to IS NOT NULL AND
               inv_mwb_globals.g_serial_to <> NVL(inv_mwb_globals.g_serial_from, -1) ) THEN
               DBMS_SQL.bind_variable(query_hdl, 'inb_serial_to', inv_mwb_globals.g_serial_to);
            END IF;

            IF inv_mwb_globals.g_inventory_item_id IS NULL
            AND inv_mwb_globals.g_item_description IS NOT NULL THEN
               DBMS_SQL.bind_variable(query_hdl, 'inb_item_description', inv_mwb_globals.g_item_description);
            END IF;
         END IF;

      DBMS_SQL.define_column(query_hdl, 1, org_code, 3);
      DBMS_SQL.define_column(query_hdl, 2, org_id);

      BEGIN
         rows_processed  := DBMS_SQL.EXECUTE(query_hdl);
      EXCEPTION
         WHEN NO_DATA_FOUND THEN
            NULL;
--               RETURN;
         WHEN OTHERS THEN
            RAISE;
      END;

      LOOP
      -- fetch a row
         IF DBMS_SQL.fetch_rows(query_hdl) > 0 THEN
            DBMS_SQL.column_value(query_hdl, 1, org_code);
            DBMS_SQL.column_value(query_hdl, 2, org_id);

            IF j >= inv_mwb_globals.g_tree_node_low_value THEN
               x_node_tbl(i).state  := inv_mwb_globals.g_tree_node_state;
               x_node_tbl(i).DEPTH  := 1;
               x_node_tbl(i).label  := org_code;
               x_node_tbl(i).icon   := 'inv_inor';
               x_node_tbl(i).VALUE  := TO_CHAR(org_id);
               x_node_tbl(i).TYPE   := 'ORG';
               i                    := i + 1;
            END IF;
               EXIT WHEN j >= inv_mwb_globals.g_tree_node_high_value;
               j  := j + 1;
            ELSE
               EXIT;
            END IF;
      END LOOP;

         DBMS_SQL.close_cursor(query_hdl); -- close cursor
         x_node_value    := j;
         x_tbl_index     := i;

   END IF; -- Inbound checkbox selected
/* End of Bug 8225619. Uncommented the above END IF */

--   IF inv_mwb_globals.g_chk_receiving = 1 THEN
      IF  (inv_mwb_globals.g_grade_from_code IS NOT NULL OR inv_mwb_globals.g_tree_grade_code IS NOT NULL OR inv_mwb_globals.g_grade_controlled <> 0) THEN
         is_grade_t     := TRUE ;
      END IF ;
   -- NSRIVAST, INVCONV, End

      IF inv_mwb_globals.g_inventory_item_id IS NULL
      AND inv_mwb_globals.g_client_code IS NULL         -- ER(9158529 client)
      AND inv_mwb_globals.g_revision IS NULL
      AND inv_mwb_globals.g_category_set_id IS NULL     -- ER(9158529)
      AND inv_mwb_globals.g_category_id IS NULL         -- ER(9158529)
      AND inv_mwb_globals.g_parent_lot IS NULL			--BUG 7556505
      AND inv_mwb_globals.g_lot_from IS NULL
      AND inv_mwb_globals.g_lot_to IS NULL
      AND inv_mwb_globals.g_supplier_lot_from IS NULL   -- Bug 8396954
      AND inv_mwb_globals.g_supplier_lot_to IS NULL     -- Bug 8396954
      AND inv_mwb_globals.g_serial_from IS NULL
      AND inv_mwb_globals.g_serial_to IS NULL
      AND inv_mwb_globals.g_serial_controlled = 0   -- Bug #3411938
      AND inv_mwb_globals.g_lot_controlled = 0
      AND inv_mwb_globals.g_cost_group_id IS NULL
      AND inv_mwb_globals.g_status_id IS NULL
      AND inv_mwb_globals.g_tree_lot_attr_query IS NULL
      AND inv_mwb_globals.g_tree_serial_attr_query IS NULL
      AND inv_mwb_globals.g_unit_number IS NULL
      AND inv_mwb_globals.g_project_id IS NULL
      AND inv_mwb_globals.g_task_id IS NULL
      AND inv_mwb_globals.g_planning_org IS NULL
      AND inv_mwb_globals.g_owning_org IS NULL
      AND( nvl(inv_mwb_globals.g_prepacked,1) <> 1
           OR inv_mwb_globals.g_lpn_from IS NOT NULL
           OR inv_mwb_globals.g_lpn_to IS NOT NULL)
      --ER(3338592) Changes
      AND inv_mwb_globals.g_item_description IS NULL
      AND inv_mwb_globals.g_qty_from         IS NULL
      AND inv_mwb_globals.g_qty_to           IS NULL
      THEN
      --End of ER Changes

         query_str  := 'SELECT mp.organization_id, mp.organization_code  ';
         query_str  := query_str || 'from mtl_parameters mp where organization_id in ';
         query_str  := query_str || '(select organization_id ';
         query_str  := query_str || 'FROM wms_license_plate_numbers WHERE 1=1 ';

         IF inv_mwb_globals.g_tree_mat_loc_id = 2
         OR inv_mwb_globals.g_chk_receiving = 1 THEN
            query_str  := query_str || ' AND lpn_context = 3 ';
         ELSIF inv_mwb_globals.g_prepacked IS NULL THEN
            query_str  := query_str || ' AND (lpn_context=1  or lpn_context=9 or lpn_context=11) ';
         ELSIF inv_mwb_globals.g_prepacked = 1 THEN
            query_str  := query_str || ' AND (lpn_context = 1) ';
         ELSIF inv_mwb_globals.g_prepacked <> 1
         AND inv_mwb_globals.g_prepacked <> 999
         AND inv_mwb_globals.g_prepacked IS NOT NULL THEN
            query_str  := query_str || ' AND lpn_context = :prepacked ';
         END IF;

         IF inv_mwb_globals.g_locator_id IS NOT NULL THEN
           query_str  := query_str || ' AND locator_id = :loc_id ';
         END IF;

         -- NSRIVAST, INVCONV, Start
         IF inv_mwb_globals.g_grade_from_code IS NOT NULL THEN
            query_str := query_str || ' AND grade_code = :grade_f ' ;
         END IF ;
         IF inv_mwb_globals.g_tree_grade_code  IS NOT NULL THEN
            query_str := query_str || ' AND grade_code = :grade_c ' ;
         END IF ;
         -- NSRIVAST, INVCONV, End

         IF inv_mwb_globals.g_subinventory_code IS NOT NULL THEN
           query_str  := query_str || ' AND subinventory_code = :sub ';
         END IF;

         IF inv_mwb_globals.g_organization_id IS NOT NULL THEN
           query_str  := query_str || ' AND organization_id = :org_id ';
         END IF;

         --bugfix#3646484
         IF ((inv_mwb_globals.g_lpn_from IS NOT NULL) AND (inv_mwb_globals.g_lpn_to IS NOT NULL) AND (inv_mwb_globals.g_lpn_from = inv_mwb_globals.g_lpn_to))  THEN
         --User is querying for single LPN so converted the range query to equality query
            query_str := query_str || 'and license_plate_number = :lpn_f ';
         ELSE
            IF inv_mwb_globals.g_lpn_from IS NOT NULL THEN
              query_str  := query_str || 'and license_plate_number >= :lpn_f ';
            END IF;

            IF inv_mwb_globals.g_lpn_to IS NOT NULL THEN
              query_str  := query_str || 'and license_plate_number <= :lpn_t ';
            END IF;
         END IF;

         query_str  := query_str || ') ORDER BY organization_code ';
      ELSE
         query_str  := ' SELECT mp.organization_id, mp.organization_code FROM mtl_parameters mp ';
         query_str  := query_str || ' WHERE exists ( ';

         -- Need to use MTL_ONHAND_TOTAL_V
         IF (
             inv_mwb_globals.g_serial_from IS NULL
         AND inv_mwb_globals.g_serial_to IS NULL
         AND inv_mwb_globals.g_unit_number IS NULL
         AND inv_mwb_globals.g_status_id IS NULL
         AND inv_mwb_globals.g_lpn_from IS NULL
         AND inv_mwb_globals.g_lpn_to IS NULL
         AND nvl(inv_mwb_globals.g_prepacked,1) = 1
         AND inv_mwb_globals.g_tree_serial_attr_query IS NULL
         ) THEN

            IF  NVL(inv_mwb_globals.g_chk_receiving,0) = 1 THEN
               table_required  := ' mtl_rcv_mwb_onhand_v v ';
            ELSIF(inv_mwb_globals.g_status_id IS NULL) THEN
               table_required  := ' mtl_onhand_total_mwb_v v ';
               IF is_grade_t = TRUE THEN                       -- NSRIVAST, INVCONV
                  table_required  := ' mtl_onhand_total_v v ';  -- NSRIVAST, INVCONV
               END IF;
            ELSE
               table_required  := ' mtl_onhand_total_v v ';
            END IF;

	 --bug 6633612
	IF (inv_mwb_globals.g_shipment_header_id is not null) THEN
		table_required  := table_required || ' , rcv_transactions rt, mtl_material_transactions mmt ';
	END IF;
	--bug 6633612

            IF inv_mwb_globals.g_tree_lot_attr_query IS NULL AND inv_mwb_globals.g_parent_lot IS NULL
              AND inv_mwb_globals.g_supplier_lot_from IS NULL AND inv_mwb_globals.g_supplier_lot_to IS NULL                 -- Bug 8396954
            THEN
               query_str  := query_str || 'SELECT v.organization_id from ' || table_required;
               query_str  := query_str || 'WHERE 1=1 ';
            ELSE
               query_str  :=
                   query_str
                || ' SELECT v.organization_id from'
                || ' (SELECT lot_number lot_num, parent_lot_number, supplier_lot_number FROM mtl_lot_numbers WHERE 1=1 '		--BUG 7556505  -- Bug 8396954
                || inv_mwb_globals.g_tree_lot_attr_query
                || ' ) mln, '
                || table_required;
               query_str  := query_str || ' WHERE mln.lot_num = v.lot_number ';
	       	--BUG 7556505
	    	   IF inv_mwb_globals.g_parent_lot IS NOT NULL THEN
		       query_str  := query_str || ' AND mln.parent_lot_number = :parent_lot ';
	           END IF;
    		--BUG 7556505
                /* Bug 8396954 added below code for supplier_lot_number */
                IF (inv_mwb_globals.g_supplier_lot_from IS NOT NULL AND
                    inv_mwb_globals.g_supplier_lot_to IS NOT NULL AND
                    inv_mwb_globals.g_supplier_lot_from = inv_mwb_globals.g_supplier_lot_to) THEN
                    query_str  := query_str || ' AND mln.supplier_lot_number = :supplier_lot_f ';
                END IF;

                IF (inv_mwb_globals.g_supplier_lot_from IS NOT NULL AND
	            inv_mwb_globals.g_supplier_lot_from <> NVL(inv_mwb_globals.g_supplier_lot_to, -1) ) THEN
                    query_str  := query_str || ' AND mln.supplier_lot_number >= :supplier_lot_f ';
                END IF;

                IF (inv_mwb_globals.g_supplier_lot_to IS NOT NULL AND
	            inv_mwb_globals.g_supplier_lot_to <> NVL(inv_mwb_globals.g_supplier_lot_from, -1) ) THEN
                    query_str  := query_str || ' AND mln.supplier_lot_number <= :supplier_lot_t ';
                END IF;
                /* End of Bug 8396954 */
              END IF;

            --ER(3338592) Changes (If the user gives the value for the Qty then only
            --Group by clause comes in to effect)

            IF inv_mwb_globals.g_qty_from IS NOT NULL OR inv_mwb_globals.g_qty_to IS NOT NULL THEN
               group_str := ' GROUP BY  v.organization_id  ';
            END IF;

            IF inv_mwb_globals.g_subinventory_code IS NOT NULL THEN
               query_str  := query_str || ' AND v.subinventory_code = :sub ';
               --ER(3338592) Changes
               IF group_str IS NOT NULL THEN
                  group_str := group_str || ' , v.subinventory_code  ' ;
               END IF;
            END IF;

            IF inv_mwb_globals.g_subinventory_code IS NULL AND inv_mwb_globals.g_detailed = 1 THEN   --Bug # 3412002
             --ER(3338592) Changes
               IF group_str IS NOT NULL THEN
                  group_str := group_str || ' , v.subinventory_code  ' ;
               END IF;
            END IF;

            IF inv_mwb_globals.g_locator_id IS NOT NULL THEN
               query_str  := query_str || ' AND v.locator_id = :loc_id ';
               --ER(3338592) Changes
               IF group_str IS NOT NULL THEN
                  group_str := group_str || ' , v.locator_id  ' ;
               END IF;
            END IF;

    	--bug 6633612
	IF (inv_mwb_globals.g_shipment_header_id is not null) THEN
		query_str := query_str || ' AND rt.shipment_header_id = :shipment_header_id '
					 || ' AND rt.transaction_id = mmt.rcv_transaction_id '
					 || ' AND rt.organization_id = mmt.organization_id '
					 || ' AND rt.transaction_type = ''DELIVER'''
					 || ' AND rt.destination_type_code = ''INVENTORY'''
					 || ' AND mmt.transaction_id = v.create_transaction_id '
					 || ' AND mmt.organization_id = v.organization_id ';

	END IF;
	--bug 6633612

            -- NSRIVAST, INVCONV, Start
            IF inv_mwb_globals.g_grade_from_code IS NOT NULL THEN
               query_str := query_str || ' AND v.grade_code = :grade_f ' ;
            END IF ;
            IF inv_mwb_globals.g_tree_grade_code  IS NOT NULL THEN
               query_str := query_str || ' AND v.grade_code = :grade_c ' ;
            END IF ;
            -- NSRIVAST, INVCONV, End

            IF inv_mwb_globals.g_locator_id IS NULL AND inv_mwb_globals.g_detailed = 1 THEN  --Bug # 3412002
            --ER(3338592) Changes
               IF group_str IS NOT NULL THEN
                  group_str := group_str || ' , v.locator_id  ' ;
               END IF;
            END IF;

            IF inv_mwb_globals.g_project_id IS NOT NULL THEN
               query_str  := query_str || ' AND v.project_id = :pr_id ';
              --ER(3338592) Changes
               IF group_str IS NOT NULL THEN
                  group_str := group_str || ' , v.project_id  ' ;
               END IF;
            END IF;

            IF inv_mwb_globals.g_task_id IS NOT NULL THEN
               query_str  := query_str || ' AND v.task_id = :ta_id ';
               --ER(3338592) Changes
               IF group_str IS NOT NULL THEN
                  group_str := group_str || ' , inv_mwb_globals.g_task_id  ' ;
               END IF;
            END IF;

            IF inv_mwb_globals.g_inventory_item_id IS NOT NULL THEN
               query_str  := query_str || ' AND v.inventory_item_id = :item_id ';
            END IF;

            -- ER(9158529 client)
            IF inv_mwb_globals.g_client_code IS NOT NULL THEN
               query_str := query_str || ' AND v.inventory_item_id in (select DISTINCT inventory_item_id from mtl_system_items_b where wms_deploy.get_client_code(inventory_item_id) = :client_code) ';
            END IF;
            -- ER(9158529 client)

        --Bug # 3411938
        IF (inv_mwb_globals.g_qty_from IS NOT NULL OR inv_mwb_globals.g_qty_to IS NOT NULL)
          AND (NVL(inv_mwb_globals.g_view_by,' ') NOT IN ('LOT' , 'SERIAL'))  THEN
           group_str := group_str || ' , v.inventory_item_id, v.item_description, v.item ,v.uom ' ;
        END IF;

        --ER(3338592) Changes
        IF inv_mwb_globals.g_item_description IS NOT NULL THEN
           query_str := query_str || ' AND v.item_description LIKE :item_description ';
        END IF;

        IF inv_mwb_globals.g_revision IS NOT NULL THEN
          query_str  := query_str || ' AND v.revision = :rev ';
          --ER(3338592) Changes
          IF group_str IS NOT NULL THEN
             group_str := group_str || ' , v.revision  ' ;
          END IF;
        END IF;

        IF inv_mwb_globals.g_cost_group_id IS NOT NULL THEN
          query_str  := query_str || ' AND v.cost_group_id = :cg_id ';
          --End of ER Changes
          IF group_str IS NOT NULL THEN
             group_str := group_str || ' , v.cost_group_id  ' ;
          END IF;
        END IF;

        -- ER(9158529)
        IF inv_mwb_globals.g_category_set_id IS NOT NULL THEN
             query_str := query_str || ' AND v.inventory_item_id in '
                                        || ' (select DISTINCT inventory_item_id from mtl_item_categories '
                                        || ' where organization_id = :organization_id '
                                        || ' and category_set_id = :category_set_id '
                                        || ' and category_id = nvl(:category_id, category_id))' ;
        END IF;
        -- ER(9158529)

        IF inv_mwb_globals.g_lot_from IS NOT NULL THEN
          query_str  := query_str || ' AND v.lot_number >= :lot_f ';
        END IF;

        IF inv_mwb_globals.g_lot_to IS NOT NULL THEN
          query_str  := query_str || ' AND v.lot_number <= :lot_t ';
        END IF;

        IF inv_mwb_globals.g_lot_controlled = 2 THEN
          query_str  := query_str ||  ' AND v.lot_number is not null ';
        ELSIF inv_mwb_globals.g_lot_controlled = 1 THEN
          query_str  := query_str || ' AND v.lot_number is null ';
        END IF;

        -- Onhand Material Status Support: If status is tracked at onhand level then check for status
        -- from onhand table (MOQD)
        if (l_default_status_id is not null) then
          IF inv_mwb_globals.g_only_subinventory_status = 1 THEN
             query_str  := query_str || ' AND v.onhand_status_id = :st_id ';
          ELSE
            IF inv_mwb_globals.g_status_id IS NOT NULL THEN
               query_str  := query_str || ' AND v.onhand_status_id = :st_id ';
            END IF;
          END IF;
        else
          IF inv_mwb_globals.g_status_id IS NOT NULL THEN
            query_str  := query_str || ' AND (v.subinventory_status_id = :st_id ';
            query_str  := query_str || ' OR v.locator_status_id = :st_id OR v.lot_status_id = :st_id) ';
          END IF;
        end if;

        IF inv_mwb_globals.g_chk_receiving <> 1 THEN
           IF inv_mwb_globals.g_containerized = 1 THEN
              query_str  := query_str || ' AND (v.containerized_flag is null or v.containerized_flag <> 1) ';
           ELSIF inv_mwb_globals.g_containerized = 2 THEN
              query_str  := query_str || ' AND v.containerized_flag = 1 ';
           END IF;
        END IF;

        IF inv_mwb_globals.g_serial_controlled = 1 THEN
          --query_str  := query_str || 'AND serial_number_control_code not in (2,5) ';
          query_str  := query_str || ' AND v.item_serial_control not in (2,5) ';
        ELSIF inv_mwb_globals.g_serial_controlled = 2 THEN
          --query_str  := query_str || 'AND serial_number_control_code in (2,5) ';
          query_str  := query_str || ' AND v.item_serial_control in (2,5) ';
        END IF;

        IF (inv_mwb_globals.g_planning_query_mode = 4) THEN
          query_str  := query_str || ' AND v.planning_organization_id = :plan_org ';
          query_str  := query_str || ' AND v.planning_tp_type = 2 ';
        ELSIF(inv_mwb_globals.g_planning_query_mode = 3) THEN
          query_str  := query_str || ' AND v.planning_organization_id = :plan_org ';
          query_str  := query_str || ' AND v.planning_tp_type = 1 ';
        ELSIF(inv_mwb_globals.g_planning_query_mode = 2) THEN
          query_str  := query_str || ' AND v.planning_tp_type = 1 ';
        END IF;

        IF (inv_mwb_globals.g_owning_qry_mode = 4) THEN
          query_str  := query_str || ' AND v.owning_organization_id = :own_org ';
          query_str  := query_str || ' AND v.owning_tp_type = 2 ';
        ELSIF(inv_mwb_globals.g_owning_qry_mode = 3) THEN
          query_str  := query_str || ' AND v.owning_organization_id = :own_org ';
          query_str  := query_str || ' AND v.owning_tp_type = 1 ';
        ELSIF(inv_mwb_globals.g_owning_qry_mode = 2) THEN
          query_str  := query_str || ' AND v.owning_tp_type = 1 ';
        END IF;

        --Bug #3411938
        IF inv_mwb_globals.g_qty_from IS NOT NULL OR inv_mwb_globals.g_qty_to IS NOT NULL THEN
           group_str := group_str || ' , v.planning_organization_id, v.planning_tp_type ';
           group_str := group_str || ' , v.owning_organization_id, v.owning_tp_type ';
           group_str := group_str || ' , v.item_lot_control, v.item_serial_control ';
        END IF;

        IF inv_mwb_globals.g_qty_from IS NOT NULL THEN
           having_str := having_str || ' AND sum(on_hand) >= :qty_from ';
        END IF;

        IF inv_mwb_globals.g_qty_to IS NOT NULL THEN
           having_str := having_str || ' AND sum(on_hand) <= :qty_to ';
        END IF;

        IF inv_mwb_globals.g_qty_from IS NOT NULL OR inv_mwb_globals.g_qty_to IS NOT NULL THEN
          query_str := query_str || ' AND v.organization_id = mp.organization_id  ';
          query_str := query_str || group_str || having_str || ' ) ' ;
        ELSE
          query_str := query_str || ' AND v.organization_id = mp.organization_id ) ';
        END IF;

        IF inv_mwb_globals.g_organization_id IS NOT NULL THEN
          query_str  := query_str || 'and mp.organization_id = :org_id  ';
        --Bug #3411938
        ELSE
          query_str  := query_str || ' and EXISTS ( SELECT 1 ' ;
          query_str  := query_str || ' FROM org_access_view oav ' ;
          query_str  := query_str || ' WHERE oav.organization_id = mp.organization_id ' ;
          query_str  := query_str || ' AND oav.responsibility_id   = :responsibility_id ' ;
          query_str  := query_str || ' AND oav.resp_application_id = :resp_application_id ) ' ;
        END IF;

        query_str  := query_str || ' ORDER BY organization_code ';

      --Need to use MTL_ONHAND_SERIAL_V

      ELSIF(
            (
             inv_mwb_globals.g_serial_from IS NOT NULL
             OR inv_mwb_globals.g_serial_from IS NOT NULL
             OR inv_mwb_globals.g_tree_serial_attr_query IS NOT NULL
             OR inv_mwb_globals.g_unit_number IS NOT NULL
            )
            AND inv_mwb_globals.g_lpn_from IS NULL
            AND inv_mwb_globals.g_lpn_to IS NULL
            AND nvl(inv_mwb_globals.g_prepacked,1) = 1
           ) THEN
        IF inv_mwb_globals.g_tree_mat_loc_id = 2
        OR inv_mwb_globals.g_chk_receiving = 1 THEN
          table_required  := ' mtl_rcv_serial_oh_v v ';
        ELSIF(inv_mwb_globals.g_status_id IS NULL) THEN
          table_required  := ' mtl_onhand_serial_mwb_v v ';
            IF is_grade_t = TRUE THEN                       -- NSRIVAST, INVCONV
               table_required  := ' mtl_onhand_serial_v v ';  -- NSRIVAST, INVCONV
            END IF ;
        ELSE
          table_required  := ' mtl_onhand_serial_v v ';
        END IF;

	--bug 6633612
	IF (inv_mwb_globals.g_shipment_header_id is not null) THEN
		table_required  := table_required || ' , rcv_transactions rt, mtl_material_transactions mmt ';
	END IF;
	--bug 6633612

        IF (inv_mwb_globals.g_tree_lot_attr_query IS NULL AND inv_mwb_globals.g_parent_lot IS NULL)		--BUG 7556505
           AND inv_mwb_globals.g_supplier_lot_from IS NULL AND inv_mwb_globals.g_supplier_lot_to IS NULL                 -- Bug 8396954
           AND inv_mwb_globals.g_tree_serial_attr_query IS NULL THEN
          query_str  := query_str || ' SELECT v.organization_id from ' || table_required;
          query_str  := query_str || ' WHERE 1=1 ';
        ELSIF (inv_mwb_globals.g_tree_lot_attr_query IS NULL AND inv_mwb_globals.g_parent_lot IS NULL)		--BUG 7556505
              AND inv_mwb_globals.g_supplier_lot_from IS NULL AND inv_mwb_globals.g_supplier_lot_to IS NULL                 -- Bug 8396954
              AND inv_mwb_globals.g_tree_serial_attr_query IS NOT NULL THEN
          query_str  :=
                query_str
             || ' SELECT v.organization_id from'
             || ' (SELECT serial_number serial_num FROM mtl_serial_numbers WHERE 1=1 '
             || inv_mwb_globals.g_tree_serial_attr_query
             || ') msn, '
             || table_required;
          query_str  := query_str || ' WHERE msn.serial_num = v.serial_number ';
        ELSIF (inv_mwb_globals.g_tree_lot_attr_query IS NOT NULL OR inv_mwb_globals.g_parent_lot IS NOT NULL
              OR inv_mwb_globals.g_supplier_lot_from IS NOT NULL OR inv_mwb_globals.g_supplier_lot_to IS NOT NULL)	        --BUG 7556505 -- Bug 8396954
              AND inv_mwb_globals.g_tree_serial_attr_query IS NULL THEN
          query_str  :=
                query_str
             || ' SELECT v.organization_id from'
             || ' (SELECT lot_number lot_num, parent_lot_number, supplier_lot_number FROM mtl_lot_numbers WHERE 1=1 '		--BUG 7556505 -- Bug 8396954
             || inv_mwb_globals.g_tree_lot_attr_query
             || ' ) mln, '
             || table_required;
          query_str  := query_str || ' WHERE mln.lot_num = v.lot_number ';

	       	--BUG 7556505
		   IF inv_mwb_globals.g_parent_lot IS NOT NULL THEN
		       query_str  := query_str || ' AND mln.parent_lot_number = :parent_lot ';
	           END IF;
		--BUG 7556505
                /* Bug 8396954 added below code for supplier_lot_number */
                IF (inv_mwb_globals.g_supplier_lot_from IS NOT NULL AND
                    inv_mwb_globals.g_supplier_lot_to IS NOT NULL AND
                    inv_mwb_globals.g_supplier_lot_from = inv_mwb_globals.g_supplier_lot_to) THEN
                    query_str  := query_str || ' AND mln.supplier_lot_number = :supplier_lot_f ';
                END IF;

                IF (inv_mwb_globals.g_supplier_lot_from IS NOT NULL AND
	            inv_mwb_globals.g_supplier_lot_from <> NVL(inv_mwb_globals.g_supplier_lot_to, -1) ) THEN
                    query_str  := query_str || ' AND mln.supplier_lot_number >= :supplier_lot_f ';
                END IF;

                IF (inv_mwb_globals.g_supplier_lot_to IS NOT NULL AND
	            inv_mwb_globals.g_supplier_lot_to <> NVL(inv_mwb_globals.g_supplier_lot_from, -1) ) THEN
                    query_str  := query_str || ' AND mln.supplier_lot_number <= :supplier_lot_t ';
                END IF;
                /* End of Bug 8396954 */
	ELSIF (inv_mwb_globals.g_tree_lot_attr_query IS NOT NULL OR inv_mwb_globals.g_parent_lot IS NOT NULL
              OR inv_mwb_globals.g_supplier_lot_from IS NOT NULL OR inv_mwb_globals.g_supplier_lot_to IS NOT NULL)	        --BUG 7556505 -- Bug 8396954
              AND inv_mwb_globals.g_tree_serial_attr_query IS NOT NULL THEN
          query_str  :=
                query_str
             || ' SELECT v.organization_id from'
             || ' (SELECT lot_number lot_num, parent_lot_number, supplier_lot_number FROM mtl_lot_numbers WHERE 1=1 '		--BUG 7556505   -- Bug 8396954
             || inv_mwb_globals.g_tree_lot_attr_query
             || ' ) mln, '
             || ' (SELECT serial_number serial_num FROM mtl_serial_numbers WHERE 1=1 '
             || inv_mwb_globals.g_tree_serial_attr_query
             || ' ) msn, '
             || table_required;
          query_str  := query_str || ' WHERE mln.lot_num = v.lot_number ';
	       	--BUG 7556505
		   IF inv_mwb_globals.g_parent_lot IS NOT NULL THEN
		       query_str  := query_str || ' AND mln.parent_lot_number = :parent_lot ';
	           END IF;
		--BUG 7556505
                /* Bug 8396954 added below code for supplier_lot_number */
                IF (inv_mwb_globals.g_supplier_lot_from IS NOT NULL AND
                    inv_mwb_globals.g_supplier_lot_to IS NOT NULL AND
                    inv_mwb_globals.g_supplier_lot_from = inv_mwb_globals.g_supplier_lot_to) THEN
                    query_str  := query_str || ' AND mln.supplier_lot_number = :supplier_lot_f ';
                END IF;

                IF (inv_mwb_globals.g_supplier_lot_from IS NOT NULL AND
	            inv_mwb_globals.g_supplier_lot_from <> NVL(inv_mwb_globals.g_supplier_lot_to, -1) ) THEN
                    query_str  := query_str || ' AND mln.supplier_lot_number >= :supplier_lot_f ';
                END IF;

                IF (inv_mwb_globals.g_supplier_lot_to IS NOT NULL AND
	            inv_mwb_globals.g_supplier_lot_to <> NVL(inv_mwb_globals.g_supplier_lot_from, -1) ) THEN
                    query_str  := query_str || ' AND mln.supplier_lot_number <= :supplier_lot_t ';
                END IF;
                /* End of Bug 8396954 */
          query_str  := query_str || ' AND msn.serial_num = serial_number ';
        END IF;

        --ER(3338592) Changes (If the user gives the value for the Qty then only
        --Group by clause comes in to effect)

        IF inv_mwb_globals.g_qty_from IS NOT NULL OR inv_mwb_globals.g_qty_to IS NOT NULL THEN
           group_str := ' GROUP BY  v.organization_id ';
        END IF;

        IF inv_mwb_globals.g_subinventory_code IS NOT NULL THEN
          query_str  := query_str || ' AND v.subinventory_code = :sub ';
          --ER(3338592) Changes
          IF group_str IS NOT NULL THEN
             group_str := group_str || ' , v.subinventory_code  ' ;
          END IF;
        END IF;

        IF inv_mwb_globals.g_subinventory_code IS NULL AND inv_mwb_globals.g_detailed = 1 THEN   --Bug # 3412002
          --ER(3338592) Changes
          IF group_str IS NOT NULL THEN
             group_str := group_str || ' , v.subinventory_code  ' ;
          END IF;
        END IF;

        IF inv_mwb_globals.g_locator_id IS NOT NULL THEN
          query_str  := query_str || ' AND v.locator_id = :loc_id ';
          --ER(3338592) Changes
          IF group_str IS NOT NULL THEN
             group_str := group_str || '  , v.locator_id  ' ;
          END IF;
        END IF;

	--bug 6633612
	IF (inv_mwb_globals.g_shipment_header_id is not null) THEN
		query_str := query_str || ' AND rt.shipment_header_id = :shipment_header_id '
					 || ' AND rt.transaction_id = mmt.rcv_transaction_id '
					 || ' AND rt.organization_id = mmt.organization_id '
					 || ' AND rt.transaction_type = ''DELIVER'''
					 || ' AND rt.destination_type_code = ''INVENTORY'''
					 || ' AND mmt.transaction_id = v.last_transaction_id '
					 || ' AND mmt.organization_id = v.organization_id ';

	END IF;
	--bug 6633612

  -- NSRIVAST, INVCONV, Start
      IF inv_mwb_globals.g_grade_from_code IS NOT NULL THEN
         query_str := query_str || ' AND v.grade_code = :grade_f ' ;
      END IF ;
      IF inv_mwb_globals.g_tree_grade_code  IS NOT NULL THEN
         query_str := query_str || ' AND v.grade_code = :grade_c ' ;
      END IF ;
   -- NSRIVAST, INVCONV, End

        IF inv_mwb_globals.g_locator_id IS NULL AND inv_mwb_globals.g_detailed = 1 THEN  --Bug # 3412002
          --ER(3338592) Changes
          IF group_str IS NOT NULL THEN
             group_str := group_str || ' , v.locator_id  ' ;
          END IF;
        END IF;

        IF inv_mwb_globals.g_project_id IS NOT NULL THEN
          query_str  := query_str || ' AND v.project_id = :pr_id ';
          --ER(3338592) Changes
          IF group_str IS NOT NULL THEN
             group_str := group_str || ' , v.project_id  ' ;
          END IF;
        END IF;

        IF inv_mwb_globals.g_task_id IS NOT NULL THEN
          query_str  := query_str || ' AND v.task_id = :ta_id ';
          --ER(3338592) Changes
          IF group_str IS NOT NULL THEN
             group_str := group_str || ' , inv_mwb_globals.g_task_id  ' ;
          END IF;
        END IF;

        IF inv_mwb_globals.g_inventory_item_id IS NOT NULL THEN
          query_str  := query_str || ' AND v.inventory_item_id = :item_id ';
        END IF;

        -- ER(9158529 client)
        IF inv_mwb_globals.g_client_code IS NOT NULL THEN
           query_str := query_str || ' AND v.inventory_item_id in (select DISTINCT inventory_item_id from mtl_system_items_b where wms_deploy.get_client_code(inventory_item_id) = :client_code) ';
        END IF;
        -- ER(9158529 client)

        --Bug # 3411938
        IF (inv_mwb_globals.g_qty_from IS NOT NULL OR inv_mwb_globals.g_qty_to IS NOT NULL)
          AND (NVL(inv_mwb_globals.g_view_by,' ') NOT IN ('LOT' , 'SERIAL'))  THEN
           group_str := group_str || ' , v.inventory_item_id, v.item_description, v.item ,v.uom ' ;
        END IF;

        --ER(3338592) Changes
        IF inv_mwb_globals.g_item_description IS NOT NULL THEN
           query_str := query_str || ' AND v.item_description LIKE :item_description ';
        END IF;

        IF inv_mwb_globals.g_revision IS NOT NULL THEN
          query_str  := query_str || ' AND v.revision = :rev ';
          --ER(3338592) Changes
          IF group_str IS NOT NULL THEN
             group_str := group_str || ' , v.revision  ' ;
          END IF;
        END IF;

        IF inv_mwb_globals.g_cost_group_id IS NOT NULL THEN
          query_str  := query_str || ' AND v.cost_group_id = :cg_id ';
          --ER(3338592) Changes
          IF group_str IS NOT NULL THEN
             group_str := group_str || ' , v.cost_group_id  ' ;
          END IF;
        END IF;

        -- ER(9158529)
        IF inv_mwb_globals.g_category_set_id IS NOT NULL THEN
             query_str := query_str || ' AND v.inventory_item_id in '
                                            || ' (select DISTINCT inventory_item_id from mtl_item_categories '
                                            || ' where organization_id = :organization_id '
                                            || ' and category_set_id = :category_set_id '
                                            || ' and category_id = nvl(:category_id, category_id)) ' ;
        END IF;
        -- ER(9158529)

        IF inv_mwb_globals.g_lot_from IS NOT NULL THEN
          query_str  := query_str || ' AND v.lot_number >= :lot_f ';
        END IF;

        IF inv_mwb_globals.g_lot_to IS NOT NULL THEN
          query_str  := query_str || ' AND v.lot_number <= :lot_t ';
        END IF;

        IF inv_mwb_globals.g_serial_from IS NOT NULL THEN
          query_str  := query_str || ' AND v.serial_number >= :serial_f ';
        END IF;

        IF inv_mwb_globals.g_serial_to IS NOT NULL THEN
          query_str  := query_str || ' AND v.serial_number <= :serial_t ';
        END IF;

        IF inv_mwb_globals.g_unit_number IS NOT NULL THEN
          query_str  := query_str || ' AND v.unit_number=:un_id ';
        END IF;

        -- Onhand Material Status Support: If status is tracked at onhand level then check for status
        -- from serial table (MSN)
        if (l_default_status_id is not null) then
          IF (inv_mwb_globals.g_status_id IS NOT NULL OR inv_mwb_globals.g_only_subinventory_status = 1)
          AND inv_mwb_globals.g_tree_mat_loc_id <> 2
             OR inv_mwb_globals.g_only_subinventory_status = 1 THEN
            query_str  := query_str || 'AND v.serial_status_id = :st_id ';
          END IF;
        else
          IF (inv_mwb_globals.g_status_id IS NOT NULL)
          AND inv_mwb_globals.g_tree_mat_loc_id <> 2
            OR inv_mwb_globals.g_only_subinventory_status = 1 THEN
            query_str  := query_str || ' AND (v.subinventory_status_id = :st_id OR v.locator_status_id = :st_id ';
            query_str  := query_str || ' OR v.lot_status_id = :st_id OR v.serial_status_id = :st_id) ';
          END IF;
        end if;

        IF inv_mwb_globals.g_lot_controlled = 2 THEN
          query_str  := query_str || ' AND v.lot_number is not null ';
        ELSIF inv_mwb_globals.g_lot_controlled = 1 THEN
          query_str  := query_str || ' AND v.lot_number is null ';
        END IF;

        IF inv_mwb_globals.g_chk_receiving <> 1 THEN
  	   IF inv_mwb_globals.g_containerized = 1 THEN
             query_str  := query_str || ' AND (v.containerized_flag is null or v.containerized_flag <> 1) ';
           ELSIF inv_mwb_globals.g_containerized = 2 THEN
             query_str  := query_str || ' AND v.containerized_flag = 1 ';
           END IF;
        END IF;


        /*IF inv_mwb_globals.g_site_id IS NOT NULL THEN
           query_str := query_str || ' AND PLANNING_TP_TYPE = 1 ';
           query_str := query_str || ' AND planning_organization_id = :site_id ' ;
         ELSIF inv_mwb_globals.g_vendor_id is NOT NULL THEN
           query_str := query_str || ' AND  PLANNING_TP_TYPE = 1 ';
           query_str := query_str || ' AND  planning_organization_id in ';
           query_str := query_str || ' (select vendor_site_id from po_vendor_sites_all ';
           query_str := query_str || '  where vendor_id = :vendor_id )';
        END IF;*/

        IF (inv_mwb_globals.g_owning_qry_mode = 4) THEN
          query_str  := query_str || ' AND v.owning_organization_id = :own_org ';
          query_str  := query_str || ' AND v.owning_tp_type = 2 ';
        ELSIF(inv_mwb_globals.g_owning_qry_mode = 3) THEN
          query_str  := query_str || ' AND v.owning_organization_id = :own_org ';
          query_str  := query_str || ' AND v.owning_tp_type = 1 ';
        ELSIF(inv_mwb_globals.g_owning_qry_mode = 2) THEN
          query_str  := query_str || ' AND v.owning_tp_type = 1 ';
        END IF;

        IF (inv_mwb_globals.g_planning_query_mode = 4) THEN
          query_str  := query_str || ' AND v.planning_organization_id = :plan_org ';
          query_str  := query_str || ' AND v.planning_tp_type = 2 ';
        ELSIF(inv_mwb_globals.g_planning_query_mode = 3) THEN
          query_str  := query_str || ' AND v.planning_organization_id = :plan_org ';
          query_str  := query_str || ' AND v.planning_tp_type = 1 ';
        ELSIF(inv_mwb_globals.g_planning_query_mode = 2) THEN
          query_str  := query_str || ' AND v.planning_tp_type = 1 ';
        END IF;

        --Bug #3411938
        IF inv_mwb_globals.g_qty_from IS NOT NULL OR inv_mwb_globals.g_qty_to IS NOT NULL THEN
           group_str := group_str || ' , v.planning_organization_id, v.planning_tp_type ';
           group_str := group_str || ' , v.owning_organization_id, v.owning_tp_type ';
           group_str := group_str || ' , v.item_lot_control, v.item_serial_control ';
        END IF;

        IF inv_mwb_globals.g_qty_from IS NOT NULL THEN
           having_str := having_str || ' AND sum(on_hand) >= :qty_from ';
        END IF;

        IF inv_mwb_globals.g_qty_to IS NOT NULL THEN
           having_str := having_str || ' AND sum(on_hand) <= :qty_to ';
        END IF;

        IF inv_mwb_globals.g_qty_from IS NOT NULL OR inv_mwb_globals.g_qty_to IS NOT NULL THEN
           query_str := query_str || 'AND v.organization_id = mp.organization_id  ';
           query_str := query_str || group_str || having_str || ' ) ' ;
        ELSE
          query_str := query_str || 'AND v.organization_id = mp.organization_id ) ';
        END IF;

        IF inv_mwb_globals.g_organization_id IS NOT NULL THEN
          query_str  := query_str || 'and mp.organization_id = :org_id ';
        -- Bug #3411938
        ELSE
          query_str  := query_str || ' and EXISTS ( SELECT 1 ' ;
          query_str  := query_str || ' FROM org_access_view oav ' ;
          query_str  := query_str || ' WHERE oav.organization_id = mp.organization_id ' ;
          query_str  := query_str || ' AND oav.responsibility_id   = :responsibility_id ' ;
          query_str  := query_str || ' AND oav.resp_application_id = :resp_application_id ) ' ;
        END IF;

        query_str  := query_str || ' ORDER BY organization_code ';

      -- Need to use both MTL_ONHAND_TOTAL_V AND MTL_ONHAND_SERIAL_V
      ELSIF(
            inv_mwb_globals.g_serial_from IS NULL
            AND inv_mwb_globals.g_serial_to IS NULL
            AND inv_mwb_globals.g_unit_number IS NULL
            AND inv_mwb_globals.g_tree_serial_attr_query IS NULL
            AND inv_mwb_globals.g_status_id IS NOT NULL
            AND inv_mwb_globals.g_lpn_from IS NULL
            AND inv_mwb_globals.g_lpn_to IS NULL
            AND nvl(inv_mwb_globals.g_prepacked,1) = 1
           ) THEN
        IF (inv_mwb_globals.g_status_id IS NULL) THEN
          table_required  := ' mtl_onhand_total_mwb_v v ';
--         ELSIF is_grade_t = TRUE THEN                     -- NSRIVAST, INVCONV
--           table_required  := ' mtl_onhand_new_lpn_v ';   -- NSRIVAST, INVCONV
        ELSE
          table_required  := ' mtl_onhand_total_v v ';
        END IF;

	--bug 6633612
	IF (inv_mwb_globals.g_shipment_header_id is not null) THEN
		table_required  := table_required || ' , rcv_transactions rt, mtl_material_transactions mmt ';
	END IF;
	--bug 6633612

        IF inv_mwb_globals.g_tree_lot_attr_query IS NULL AND inv_mwb_globals.g_parent_lot IS NULL
           AND inv_mwb_globals.g_supplier_lot_from IS NULL AND inv_mwb_globals.g_supplier_lot_to IS NULL THEN             -- Bug 8396954
          query_str  := query_str || 'SELECT v.organization_id from ' || table_required;
          query_str  := query_str || 'WHERE 1=1 ';
        ELSE
          query_str  :=
                query_str
             || 'SELECT v.organization_id from'
             || '(SELECT lot_number lot_num, parent_lot_number, supplier_lot_nmumber FROM mtl_lot_numbers WHERE 1=1 '		--BUG 7556505
             || inv_mwb_globals.g_tree_lot_attr_query
             || ') mln, '
             || table_required;
          query_str  := query_str || 'WHERE mln.lot_num = v.lot_number ';
	  --BUG 7556505
	   IF inv_mwb_globals.g_parent_lot IS NOT NULL THEN
	      query_str  := query_str || 'AND mln.parent_lot_number = :parent_lot ';
	   END IF;
          --BUG 7556505
                /* Bug 8396954 added below code for supplier_lot_number */
                IF (inv_mwb_globals.g_supplier_lot_from IS NOT NULL AND
                    inv_mwb_globals.g_supplier_lot_to IS NOT NULL AND
                    inv_mwb_globals.g_supplier_lot_from = inv_mwb_globals.g_supplier_lot_to) THEN
                    query_str  := query_str || ' AND mln.supplier_lot_number = :supplier_lot_f ';
                END IF;

                IF (inv_mwb_globals.g_supplier_lot_from IS NOT NULL AND
	            inv_mwb_globals.g_supplier_lot_from <> NVL(inv_mwb_globals.g_supplier_lot_to, -1) ) THEN
                    query_str  := query_str || ' AND mln.supplier_lot_number >= :supplier_lot_f ';
                END IF;

                IF (inv_mwb_globals.g_supplier_lot_to IS NOT NULL AND
	            inv_mwb_globals.g_supplier_lot_to <> NVL(inv_mwb_globals.g_supplier_lot_from, -1) ) THEN
                    query_str  := query_str || ' AND mln.supplier_lot_number <= :supplier_lot_t ';
                END IF;
                /* End of Bug 8396954 */
        END IF;

        --ER(3338592) Changes (If the user gives the value for the Qty then only
        --Group by clause comes in to effect)

        IF inv_mwb_globals.g_qty_from IS NOT NULL OR inv_mwb_globals.g_qty_to IS NOT NULL THEN
           group_str := ' GROUP BY  v.organization_id ';
        END IF;

        IF inv_mwb_globals.g_subinventory_code IS NOT NULL THEN
          query_str  := query_str || 'AND v.subinventory_code = :sub ';
          --ER(3338592) Changes
          IF group_str IS NOT NULL THEN
             group_str := group_str || ' , v.subinventory_code  ' ;
          END IF;
        END IF;

	--bug 6633612
	IF (inv_mwb_globals.g_shipment_header_id is not null) THEN
		query_str := query_str || ' AND rt.shipment_header_id = :shipment_header_id '
					 || ' AND rt.transaction_id = mmt.rcv_transaction_id '
					 || ' AND rt.organization_id = mmt.organization_id '
					 || ' AND rt.transaction_type = ''DELIVER'''
					 || ' AND rt.destination_type_code = ''INVENTORY'''
					 || ' AND mmt.transaction_id = v.create_transaction_id '
					 || ' AND mmt.organization_id = v.organization_id ';

	END IF;
	--bug 6633612

        IF inv_mwb_globals.g_subinventory_code IS NULL AND inv_mwb_globals.g_detailed = 1 THEN   --Bug # 3412002
          --ER(3338592) Changes
          IF group_str IS NOT NULL THEN
             group_str := group_str || ' , v.subinventory_code  ' ;
          END IF;
        END IF;

        IF inv_mwb_globals.g_locator_id IS NOT NULL THEN
          query_str  := query_str || 'AND v.locator_id = :loc_id ';
          --ER(3338592) Changes
          IF group_str IS NOT NULL THEN
             group_str := group_str || ' , v.locator_id  ' ;
          END IF;
        END IF;

        IF inv_mwb_globals.g_locator_id IS NULL AND inv_mwb_globals.g_detailed = 1 THEN  --Bug # 3412002
          --ER(3338592) Changes
          IF group_str IS NOT NULL THEN
             group_str := group_str || ' , v.locator_id  ' ;
          END IF;
        END IF;

  -- NSRIVAST, INVCONV, Start
      IF inv_mwb_globals.g_grade_from_code IS NOT NULL THEN
         query_str := query_str || ' AND v.grade_code = :grade_f ' ;
      END IF ;
      IF inv_mwb_globals.g_tree_grade_code  IS NOT NULL THEN
         query_str := query_str || ' AND v.grade_code = :grade_c ' ;
      END IF ;
   -- NSRIVAST, INVCONV, End

        IF inv_mwb_globals.g_project_id IS NOT NULL THEN
          query_str  := query_str || ' AND v.project_id = :pr_id ';
          --ER(3338592) Changes
          IF group_str IS NOT NULL THEN
             group_str := group_str || ' , v.project_id  ' ;
          END IF;
        END IF;

        IF inv_mwb_globals.g_task_id IS NOT NULL THEN
          query_str  := query_str || ' AND v.task_id = :ta_id ';
          --ER(3338592) Changes
          IF group_str IS NOT NULL THEN
             group_str := group_str || ' , inv_mwb_globals.g_task_id  ' ;
          END IF;
        END IF;

        IF inv_mwb_globals.g_inventory_item_id IS NOT NULL THEN
          query_str  := query_str || 'AND v.inventory_item_id = :item_id ';
        END IF;

        -- ER(9158529 client)
        IF inv_mwb_globals.g_client_code IS NOT NULL THEN
           query_str := query_str || ' AND v.inventory_item_id in (select DISTINCT inventory_item_id from mtl_system_items_b where wms_deploy.get_client_code(inventory_item_id) = :client_code) ';
        END IF;
        -- ER(9158529 client)

        --Bug # 3411938
        IF (inv_mwb_globals.g_qty_from IS NOT NULL OR inv_mwb_globals.g_qty_to IS NOT NULL)
          AND (NVL(inv_mwb_globals.g_view_by,' ') NOT IN ('LOT' , 'SERIAL'))  THEN
           group_str := group_str || ' , v.inventory_item_id, v.item_description, v.item ,v.uom ' ;
        END IF;

        --ER(3338592) Changes
        IF inv_mwb_globals.g_item_description IS NOT NULL THEN
           query_str := query_str || ' AND v.item_description LIKE :item_description ';
        END IF;

        IF inv_mwb_globals.g_revision IS NOT NULL THEN
          query_str  := query_str || 'AND v.revision = :rev ';
          --ER(3338592) Changes
          IF group_str IS NOT NULL THEN
             group_str := group_str || ' , v.revision  ' ;
          END IF;
        END IF;

        IF inv_mwb_globals.g_cost_group_id IS NOT NULL THEN
          query_str  := query_str || 'AND v.cost_group_id = :cg_id ';
          --ER(3338592) Changes
          IF group_str IS NOT NULL THEN
             group_str := group_str || ' , v.cost_group_id  ' ;
          END IF;
        END IF;

        -- ER(9158529)
        IF inv_mwb_globals.g_category_set_id IS NOT NULL THEN
             query_str := query_str || ' AND v.inventory_item_id in '
                                                || ' (select DISTINCT inventory_item_id from mtl_item_categories '
                                                || ' where organization_id = :organization_id '
                                                || ' and category_set_id = :category_set_id '
                                                || ' and category_id = nvl(:category_id, category_id)) ' ;
        END IF;
        -- ER(9158529)

        IF inv_mwb_globals.g_lot_from IS NOT NULL THEN
          query_str  := query_str || 'AND v.lot_number >= :lot_f ';
        END IF;

        IF inv_mwb_globals.g_lot_to IS NOT NULL THEN
          query_str  := query_str || 'AND v.lot_number <= :lot_t ';
        END IF;

        IF inv_mwb_globals.g_unit_number IS NOT NULL THEN
          query_str  := query_str || ' AND v.unit_number=:un_id ';
        END IF;

        IF inv_mwb_globals.g_lot_controlled = 2 THEN
          query_str  := query_str || 'AND v.lot_number is not null ';
        ELSIF inv_mwb_globals.g_lot_controlled = 1 THEN
          query_str  := query_str || 'AND v.lot_number is null ';
        END IF;

        -- Onhand Material Status Support: If status is tracked at onhand level then check for status
        -- from onhand table (MOQD)
        if (l_default_status_id is not null) then
          IF inv_mwb_globals.g_status_id IS NOT NULL OR inv_mwb_globals.g_only_subinventory_status = 1 THEN
            query_str  := query_str || 'AND v.onhand_status_id = :st_id ';
          END IF;
        else
          IF inv_mwb_globals.g_status_id IS NOT NULL THEN
            query_str  := query_str || 'AND (v.subinventory_status_id = :st_id ';
            query_str  := query_str || 'OR v.locator_status_id = :st_id OR v.lot_status_id = :st_id) ';
          END IF;
        end if;

        IF inv_mwb_globals.g_chk_receiving <> 1 THEN
           IF inv_mwb_globals.g_containerized = 1 THEN
              query_str  := query_str || ' AND (v.containerized_flag is null or v.containerized_flag <> 1) ';
           ELSIF inv_mwb_globals.g_containerized = 2 THEN
              query_str  := query_str || ' AND v.containerized_flag = 1 ';
           END IF;
        END IF;

        IF inv_mwb_globals.g_serial_controlled = 1 THEN
          --query_str  := query_str || 'AND serial_number_control_code not in (2,5) ';
          query_str  := query_str || 'AND v.item_serial_control not in (2,5) ';
        ELSIF inv_mwb_globals.g_serial_controlled = 2 THEN
          --query_str  := query_str || 'AND serial_number_control_code in (2,5) ';
          query_str  := query_str || 'AND v.item_serial_control in (2,5) ';
        END IF;

        /*IF inv_mwb_globals.g_site_id IS NOT NULL THEN
           query_str := query_str || ' AND PLANNING_TP_TYPE = 1 ';
           query_str := query_str || ' AND planning_organization_id = :site_id ' ;
         ELSIF inv_mwb_globals.g_vendor_id is NOT NULL THEN
           query_str := query_str || ' AND  PLANNING_TP_TYPE = 1 ';
           query_str := query_str || ' AND  planning_organization_idanization_id in ';
           query_str := query_str || ' (select vendor_site_id from po_vendor_sites_all ';
           query_str := query_str || '  where vendor_id = :vendor_id )';
        END IF;*/

        IF (inv_mwb_globals.g_owning_qry_mode = 4) THEN
          query_str  := query_str || ' AND v.owning_organization_id = :own_org ';
          query_str  := query_str || ' AND v.owning_tp_type = 2 ';
        ELSIF(inv_mwb_globals.g_owning_qry_mode = 3) THEN
          query_str  := query_str || ' AND v.owning_organization_id = :own_org ';
          query_str  := query_str || ' AND v.owning_tp_type = 1 ';
        ELSIF(inv_mwb_globals.g_owning_qry_mode = 2) THEN
          query_str  := query_str || ' AND v.owning_tp_type = 1 ';
        END IF;

        IF (inv_mwb_globals.g_planning_query_mode = 4) THEN
          query_str  := query_str || ' AND v.planning_organization_id = :plan_org ';
          query_str  := query_str || ' AND v.planning_tp_type = 2 ';
        ELSIF(inv_mwb_globals.g_planning_query_mode = 3) THEN
          query_str  := query_str || ' AND v.planning_organization_id = :plan_org ';
          query_str  := query_str || ' AND v.planning_tp_type = 1 ';
        ELSIF(inv_mwb_globals.g_planning_query_mode = 2) THEN
          query_str  := query_str || ' AND v.planning_tp_type = 1 ';
        END IF;

        --Bug #3411938
        IF inv_mwb_globals.g_qty_from IS NOT NULL OR inv_mwb_globals.g_qty_to IS NOT NULL THEN
           group_str := group_str || ' , v.planning_organization_id, v.planning_tp_type ';
           group_str := group_str || ' , v.owning_organization_id, v.owning_tp_type ';
           group_str := group_str || ' , v.item_lot_control, v.item_serial_control ';
        END IF;

        IF inv_mwb_globals.g_qty_from IS NOT NULL THEN
           having_str := having_str || ' AND sum(on_hand) >= :qty_from ';
        END IF;

        IF inv_mwb_globals.g_qty_to IS NOT NULL THEN
           having_str := having_str || ' AND sum(on_hand) <= :qty_to ';
        END IF;

        IF inv_mwb_globals.g_qty_from IS NOT NULL OR inv_mwb_globals.g_qty_to IS NOT NULL THEN
          query_str := query_str || 'AND v.organization_id = mp.organization_id  ';
          query_str := query_str || group_str || having_str || '  ' ;
        ELSE
          query_str := query_str || 'AND v.organization_id = mp.organization_id  ';
        END IF;

        query_str  := query_str || 'UNION ALL ';

        --Reinitializing the variable
        having_str := ' HAVING 1=1 ' ;

        IF (inv_mwb_globals.g_status_id IS NULL) THEN
          table_required  := ' mtl_onhand_serial_mwb_v v ';
        ELSE
          table_required  := ' mtl_onhand_serial_v v ';
        END IF;

	--bug 6633612
	IF (inv_mwb_globals.g_shipment_header_id is not null) THEN
		table_required  := table_required || ' , rcv_transactions rt, mtl_material_transactions mmt ';
	END IF;
	--bug 6633612

--BUG 7556505
        IF (inv_mwb_globals.g_tree_lot_attr_query IS NULL AND inv_mwb_globals.g_parent_lot IS NULL
           AND inv_mwb_globals.g_supplier_lot_from IS NULL AND inv_mwb_globals.g_supplier_lot_to IS NULL)
           AND inv_mwb_globals.g_tree_serial_attr_query IS NULL THEN
          query_str  := query_str || 'SELECT v.organization_id from ' || table_required;
          query_str  := query_str || 'WHERE 1=1 ';
        ELSIF (inv_mwb_globals.g_tree_lot_attr_query IS NOT NULL OR inv_mwb_globals.g_parent_lot IS NOT NULL
        OR inv_mwb_globals.g_supplier_lot_from IS NOT NULL OR inv_mwb_globals.g_supplier_lot_to IS NOT NULL)
              AND inv_mwb_globals.g_tree_serial_attr_query IS NULL THEN
          query_str  :=
                query_str
             || 'SELECT v.organization_id from'
             || '(SELECT lot_number lot_num, parent_lot_number, supplier_lot_number FROM mtl_lot_numbers WHERE 1=1 '
             || inv_mwb_globals.g_tree_lot_attr_query
             || ') mln, '
             || table_required;
          query_str  := query_str || ' WHERE mln.lot_num = v.lot_number ';
	       	--BUG 7556505
		   IF inv_mwb_globals.g_parent_lot IS NOT NULL THEN
		       query_str  := query_str || ' AND mln.parent_lot_number = :parent_lot ';
	           END IF;
		--BUG 7556505
                /* Bug 8396954 added below code for supplier_lot_number */
                IF (inv_mwb_globals.g_supplier_lot_from IS NOT NULL AND
                    inv_mwb_globals.g_supplier_lot_to IS NOT NULL AND
                    inv_mwb_globals.g_supplier_lot_from = inv_mwb_globals.g_supplier_lot_to) THEN
                    query_str  := query_str || ' AND mln.supplier_lot_number = :supplier_lot_f ';
                END IF;

                IF (inv_mwb_globals.g_supplier_lot_from IS NOT NULL AND
	            inv_mwb_globals.g_supplier_lot_from <> NVL(inv_mwb_globals.g_supplier_lot_to, -1) ) THEN
                    query_str  := query_str || ' AND mln.supplier_lot_number >= :supplier_lot_f ';
                END IF;

                IF (inv_mwb_globals.g_supplier_lot_to IS NOT NULL AND
	            inv_mwb_globals.g_supplier_lot_to <> NVL(inv_mwb_globals.g_supplier_lot_from, -1) ) THEN
                    query_str  := query_str || ' AND mln.supplier_lot_number <= :supplier_lot_t ';
                END IF;
                /* End of Bug 8396954 */
        END IF;

        --ER(3338592) Changes (If the user gives the value for the Qty then only
        --Group by clause comes in to effect)

        IF inv_mwb_globals.g_qty_from IS NOT NULL OR inv_mwb_globals.g_qty_to IS NOT NULL THEN
           group_str := ' GROUP BY  v.organization_id ';
        END IF;

        IF inv_mwb_globals.g_subinventory_code IS NOT NULL THEN
          query_str  := query_str || 'AND v.subinventory_code = :sub ';
          --ER(3338592) Changes
          IF group_str IS NOT NULL THEN
             group_str := group_str || ' , v.subinventory_code  ' ;
          END IF;
        END IF;

	--bug 6633612
	IF (inv_mwb_globals.g_shipment_header_id is not null) THEN
		query_str := query_str || ' AND rt.shipment_header_id = :shipment_header_id '
					 || ' AND rt.transaction_id = mmt.rcv_transaction_id '
					 || ' AND rt.organization_id = mmt.organization_id '
					 || ' AND rt.transaction_type = ''DELIVER'''
					 || ' AND rt.destination_type_code = ''INVENTORY'''
					 || ' AND mmt.transaction_id = v.last_transaction_id '
					 || ' AND mmt.organization_id = v.organization_id ';

	END IF;
	--bug 6633612

        IF inv_mwb_globals.g_subinventory_code IS NULL AND inv_mwb_globals.g_detailed = 1 THEN   --Bug # 3412002
          --ER(3338592) Changes
          IF group_str IS NOT NULL THEN
             group_str := group_str || ' , v.subinventory_code  ' ;
          END IF;
        END IF;

        IF inv_mwb_globals.g_locator_id IS NOT NULL THEN
          query_str  := query_str || 'AND v.locator_id = :loc_id ';
          --ER(3338592) Changes
          IF group_str IS NOT NULL THEN
             group_str := group_str || ' , v.locator_id  ' ;
          END IF;
        END IF;

        IF inv_mwb_globals.g_locator_id IS NULL AND inv_mwb_globals.g_detailed = 1 THEN  --Bug # 3412002
          --ER(3338592) Changes
          IF group_str IS NOT NULL THEN
             group_str := group_str || ' , v.locator_id  ' ;
          END IF;
        END IF;

        IF inv_mwb_globals.g_inventory_item_id IS NOT NULL THEN
          query_str  := query_str || 'AND v.inventory_item_id = :item_id ';
        END IF;

        -- ER(9158529 client)
        IF inv_mwb_globals.g_client_code IS NOT NULL THEN
           query_str := query_str || ' AND v.inventory_item_id in (select DISTINCT inventory_item_id from mtl_system_items_b where wms_deploy.get_client_code(inventory_item_id) = :client_code) ';
        END IF;
        -- ER(9158529 client)

        --Bug # 3411938
        IF (inv_mwb_globals.g_qty_from IS NOT NULL OR inv_mwb_globals.g_qty_to IS NOT NULL)
          AND (NVL(inv_mwb_globals.g_view_by,' ') NOT IN ('LOT' , 'SERIAL'))  THEN
           group_str := group_str || ' , v.inventory_item_id, v.item_description, v.item ,v.uom ' ;
        END IF;

        --ER(3338592) Changes
        IF inv_mwb_globals.g_item_description IS NOT NULL THEN
           query_str := query_str || ' AND v.item_description LIKE :item_description ';
        END IF;

        IF inv_mwb_globals.g_revision IS NOT NULL THEN
          query_str  := query_str || 'AND v.revision = :rev ';
          --ER(3338592) Changes
          IF group_str IS NOT NULL THEN
             group_str := group_str || ' , v.revision  ' ;
          END IF;
        END IF;

        IF inv_mwb_globals.g_cost_group_id IS NOT NULL THEN
          query_str  := query_str || ' AND v.cost_group_id = :cg_id ';
          --ER(3338592) Changes
          IF group_str IS NOT NULL THEN
             group_str := group_str || ' , v.cost_group_id  ' ;
          END IF;
        END IF;

        -- ER(9158529)
        IF inv_mwb_globals.g_category_set_id IS NOT NULL THEN
             query_str := query_str || ' AND v.inventory_item_id in '
                                            || ' (select DISTINCT inventory_item_id from mtl_item_categories '
                                            || ' where organization_id = :organization_id '
                                            || ' and category_set_id = :category_set_id '
                                            || ' and category_id = nvl(:category_id, category_id))' ;
        END IF;
        -- ER(9158529)

        IF inv_mwb_globals.g_lot_from IS NOT NULL THEN
          query_str  := query_str || ' AND v.lot_number >= :lot_f ';
        END IF;

        IF inv_mwb_globals.g_lot_to IS NOT NULL THEN
          query_str  := query_str || ' AND v.lot_number <= :lot_t ';
        END IF;

        IF inv_mwb_globals.g_serial_from IS NOT NULL THEN
          query_str  := query_str || ' AND v.serial_number >= :serial_f ';
        END IF;

        IF inv_mwb_globals.g_serial_to IS NOT NULL THEN
          query_str  := query_str || ' AND v.serial_number <= :serial_t ';
        END IF;

        -- Onhand Material Status Support: If status is tracked at onhand level then check for status
        -- from serial table (MSN)
        if (l_default_status_id is not null) then
          IF inv_mwb_globals.g_status_id IS NOT NULL OR inv_mwb_globals.g_only_subinventory_status = 1 THEN
            query_str  := query_str || 'AND v.serial_status_id = :st_id ';
          END IF;
        else
          IF inv_mwb_globals.g_status_id IS NOT NULL THEN
            query_str  := query_str || 'AND (v.subinventory_status_id = :st_id OR v.locator_status_id = :st_id ';
            query_str  := query_str || 'OR v.lot_status_id = :st_id OR v.serial_status_id = :st_id) ';
          END IF;
        end if;

        IF inv_mwb_globals.g_lot_controlled = 2 THEN
          query_str  := query_str || 'AND v.lot_number is not null ';
        ELSIF inv_mwb_globals.g_lot_controlled = 1 THEN
          query_str  := query_str || 'AND v.lot_number is null ';
        END IF;

        IF inv_mwb_globals.g_chk_receiving <> 1 THEN
           IF inv_mwb_globals.g_containerized = 1 THEN
              query_str  := query_str || ' AND (v.containerized_flag is null or v.containerized_flag <> 1) ';
           ELSIF inv_mwb_globals.g_containerized = 2 THEN
              query_str  := query_str || ' AND v.containerized_flag = 1 ';
           END IF;
        END IF;

        IF inv_mwb_globals.g_qty_from IS NOT NULL OR inv_mwb_globals.g_qty_to IS NOT NULL THEN
           group_str := group_str || ' , v.planning_organization_id, v.planning_tp_type ';
           group_str := group_str || ' , v.owning_organization_id, v.owning_tp_type ';
           group_str := group_str || ' , v.item_lot_control, v.item_serial_control ';
        END IF;

        IF inv_mwb_globals.g_qty_from IS NOT NULL THEN
           having_str := having_str || ' AND sum(on_hand) >= :qty_from ';
        END IF;

        IF inv_mwb_globals.g_qty_to IS NOT NULL THEN
           having_str := having_str || ' AND sum(on_hand) <= :qty_to ';
        END IF;

        IF inv_mwb_globals.g_qty_from IS NOT NULL OR inv_mwb_globals.g_qty_to IS NOT NULL THEN
           query_str := query_str || ' AND v.organization_id = mp.organization_id  ';
           query_str := query_str || group_str || having_str || ' ) ' ;
        ELSE
           query_str := query_str || ' AND v.organization_id = mp.organization_id ) ';
        END IF;

        IF inv_mwb_globals.g_organization_id IS NOT NULL THEN
          query_str  := query_str || ' and mp.organization_id = :org_id ';
        -- Bug # 3411938
        ELSE
          query_str  := query_str || ' and EXISTS ( SELECT 1 ' ;
          query_str  := query_str || ' FROM org_access_view oav ' ;
          query_str  := query_str || ' WHERE oav.organization_id = mp.organization_id ' ;
          query_str  := query_str || ' AND oav.responsibility_id   = :responsibility_id ' ;
          query_str  := query_str || ' AND oav.resp_application_id = :resp_application_id ) ' ;
        END IF;

        query_str  := query_str || ' ORDER BY organization_code ';

      -- Need to use MTL_ONHAND_LPN_V
      ELSIF(inv_mwb_globals.g_lpn_from IS NOT NULL
            OR inv_mwb_globals.g_lpn_to IS NOT NULL
            OR nvl(inv_mwb_globals.g_prepacked,1) <> 1) THEN
        IF inv_mwb_globals.g_tree_mat_loc_id = 2
        OR inv_mwb_globals.g_chk_receiving = 1 THEN
          table_required  := ' mtl_onhand_lpn_mwb_v mol ';
        ELSIF(inv_mwb_globals.g_status_id IS NULL) THEN
          IF (inv_mwb_globals.g_prepacked <> 1) AND (inv_mwb_globals.g_prepacked <> 9) AND (inv_mwb_globals.g_prepacked <> 11) THEN
            table_required  := ' mtl_onhand_lpn_mwb_v mol ';
              IF is_grade_t = TRUE THEN                              -- NSRIVAST, INVCONV
                  table_required  := ' mtl_onhand_new_lpn_v mol ';   -- NSRIVAST, INVCONV
              END IF;
          ELSE
            table_required  := ' mtl_onhand_new_lpn_mwb_v mol ';
          END IF;
        ELSE
          IF (inv_mwb_globals.g_prepacked <> 1) AND (inv_mwb_globals.g_prepacked <> 9) AND (inv_mwb_globals.g_prepacked <> 11) THEN
            table_required  := ' mtl_onhand_lpn_v mol ';
              IF is_grade_t = TRUE THEN                              -- NSRIVAST, INVCONV
                  table_required  := ' mtl_onhand_new_lpn_v mol ';   -- NSRIVAST, INVCONV
              END IF;
          ELSE
            table_required  := ' mtl_onhand_new_lpn_v mol ';
          END IF;
        END IF;

        query_str  := query_str || ' SELECT organization_id from ' || table_required;

        IF inv_mwb_globals.g_lpn_from IS NOT NULL
           OR inv_mwb_globals.g_lpn_to IS NOT NULL THEN
          query_str  := query_str || ', (select outermost_lpn_id from wms_license_plate_numbers wlpn ';
          query_str  := query_str || ' WHERE 1=1 ';

          IF inv_mwb_globals.g_tree_mat_loc_id = 2
	  OR inv_mwb_globals.g_chk_receiving = 1 THEN
            query_str  := query_str || ' AND lpn_context = 3 ';
          ELSIF inv_mwb_globals.g_prepacked IS NULL THEN
            query_str  := query_str || ' AND (lpn_context=1  or lpn_context=9 or lpn_context=11 )';
          ELSIF inv_mwb_globals.g_prepacked = 1 THEN
            query_str  := query_str || ' AND lpn_context = 1 ';
          ELSIF inv_mwb_globals.g_prepacked <> 1
                AND inv_mwb_globals.g_prepacked <> 999
                AND inv_mwb_globals.g_prepacked IS NOT NULL THEN
            query_str  := query_str || ' AND lpn_context = :prepacked ';
          END IF;

          IF inv_mwb_globals.g_locator_id IS NOT NULL THEN
            query_str  := query_str || ' AND wlpn.locator_id = :loc_id ';
          END IF;

          IF inv_mwb_globals.g_subinventory_code IS NOT NULL THEN
            query_str  := query_str || ' AND wlpn.subinventory_code = :sub ';
          END IF;

          IF inv_mwb_globals.g_organization_id IS NOT NULL THEN
            query_str  := query_str || ' AND wlpn.organization_id = :org_id ';
          END IF;

          IF inv_mwb_globals.g_lpn_from IS NOT NULL
             OR inv_mwb_globals.g_lpn_to IS NOT NULL THEN
            IF inv_mwb_globals.g_lpn_from IS NOT NULL
               AND inv_mwb_globals.g_lpn_to IS NULL THEN
              query_str  := query_str || ' and license_plate_number >= :lpn_f ';
            ELSIF inv_mwb_globals.g_lpn_from IS NULL
                  AND inv_mwb_globals.g_lpn_to IS NOT NULL THEN
              query_str  := query_str || ' and license_plate_number <= :lpn_t ';
            ELSIF inv_mwb_globals.g_lpn_from IS NOT NULL
                  AND inv_mwb_globals.g_lpn_to IS NOT NULL THEN
                  --bugfix#3646484
                  IF (inv_mwb_globals.g_lpn_from = inv_mwb_globals.g_lpn_to) THEN
                   --User is querying for single LPN so converted the range query to equality query
                   query_str := query_str || 'and license_plate_number = :lpn_f ';
                  ELSE
                    query_str  := query_str || ' and license_plate_number >= :lpn_f ';
                    query_str  := query_str || ' and license_plate_number <= :lpn_t ';
                  END IF;
            END IF;
          END IF;

          query_str  := query_str || 'group by wlpn.outermost_lpn_id) X ';
        END IF;

--BUG 7556505
        IF(inv_mwb_globals.g_tree_lot_attr_query IS NULL AND inv_mwb_globals.g_parent_lot IS NULL
        AND inv_mwb_globals.g_supplier_lot_from IS NULL AND inv_mwb_globals.g_supplier_lot_to IS NULL)
           AND inv_mwb_globals.g_tree_serial_attr_query IS NULL THEN
          query_str  := query_str || 'WHERE 1=1 ';
        ELSIF (inv_mwb_globals.g_tree_lot_attr_query IS NULL AND inv_mwb_globals.g_parent_lot IS NULL
        AND inv_mwb_globals.g_supplier_lot_from IS NULL AND inv_mwb_globals.g_supplier_lot_to IS NULL)
              AND inv_mwb_globals.g_tree_serial_attr_query IS NOT NULL THEN
          query_str  :=
                     query_str || ', (SELECT serial_number serial_num FROM mtl_serial_numbers WHERE 1=1 ' || inv_mwb_globals.g_tree_serial_attr_query
                     || ') msn ';
          query_str  := query_str || 'WHERE msn.serial_num = serial_number ';
        ELSIF (inv_mwb_globals.g_tree_lot_attr_query IS NOT NULL OR inv_mwb_globals.g_parent_lot IS NOT NULL
              OR inv_mwb_globals.g_supplier_lot_from IS NOT NULL OR inv_mwb_globals.g_supplier_lot_to IS NOT NULL)
              AND inv_mwb_globals.g_tree_serial_attr_query IS NULL THEN
          query_str  := query_str || ', (SELECT lot_number lot_num, parent_lot_number, supplier_lot_number FROM mtl_lot_numbers WHERE 1=1 ' || inv_mwb_globals.g_tree_lot_attr_query || ') mln ';
          query_str  := query_str || 'WHERE mln.lot_num = lot_number ';
	       	--BUG 7556505
		   IF inv_mwb_globals.g_parent_lot IS NOT NULL THEN
		       query_str  := query_str || ' AND mln.parent_lot_number = :parent_lot ';
	           END IF;
		--BUG 7556505
                /* Bug 8396954 added below code for supplier_lot_number */
                IF (inv_mwb_globals.g_supplier_lot_from IS NOT NULL AND
                    inv_mwb_globals.g_supplier_lot_to IS NOT NULL AND
                    inv_mwb_globals.g_supplier_lot_from = inv_mwb_globals.g_supplier_lot_to) THEN
                    query_str  := query_str || ' AND mln.supplier_lot_number = :supplier_lot_f ';
                END IF;

                IF (inv_mwb_globals.g_supplier_lot_from IS NOT NULL AND
	            inv_mwb_globals.g_supplier_lot_from <> NVL(inv_mwb_globals.g_supplier_lot_to, -1) ) THEN
                    query_str  := query_str || ' AND mln.supplier_lot_number >= :supplier_lot_f ';
                END IF;

                IF (inv_mwb_globals.g_supplier_lot_to IS NOT NULL AND
	            inv_mwb_globals.g_supplier_lot_to <> NVL(inv_mwb_globals.g_supplier_lot_from, -1) ) THEN
                    query_str  := query_str || ' AND mln.supplier_lot_number <= :supplier_lot_t ';
                END IF;
                /* End of Bug 8396954 */
        ELSIF (inv_mwb_globals.g_tree_lot_attr_query IS NOT NULL OR inv_mwb_globals.g_parent_lot IS NOT NULL
              OR inv_mwb_globals.g_supplier_lot_from IS NOT NULL OR inv_mwb_globals.g_supplier_lot_to IS NOT NULL)
              AND inv_mwb_globals.g_tree_serial_attr_query IS NOT NULL THEN
          query_str  :=
                query_str
             || ', (SELECT lot_number lot_num, parent_lot_number, supplier_lot_number FROM mtl_lot_numbers WHERE 1=1 '
             || inv_mwb_globals.g_tree_lot_attr_query
             || ') mln '
             || ', (SELECT serial_number serial_num FROM mtl_serial_numbers WHERE 1=1 '
             || inv_mwb_globals.g_tree_serial_attr_query
             || ') msn ';
          query_str  := query_str || 'WHERE mln.lot_num = lot_number ';
	       	--BUG 7556505
		   IF inv_mwb_globals.g_parent_lot IS NOT NULL THEN
		       query_str  := query_str || ' AND mln.parent_lot_number = :parent_lot ';
	           END IF;
		--BUG 7556505
                /* Bug 8396954 added below code for supplier_lot_number */
                IF (inv_mwb_globals.g_supplier_lot_from IS NOT NULL AND
                    inv_mwb_globals.g_supplier_lot_to IS NOT NULL AND
                    inv_mwb_globals.g_supplier_lot_from = inv_mwb_globals.g_supplier_lot_to) THEN
                    query_str  := query_str || ' AND mln.supplier_lot_number = :supplier_lot_f ';
                END IF;

                IF (inv_mwb_globals.g_supplier_lot_from IS NOT NULL AND
	            inv_mwb_globals.g_supplier_lot_from <> NVL(inv_mwb_globals.g_supplier_lot_to, -1) ) THEN
                    query_str  := query_str || ' AND mln.supplier_lot_number >= :supplier_lot_f ';
                END IF;

                IF (inv_mwb_globals.g_supplier_lot_to IS NOT NULL AND
	            inv_mwb_globals.g_supplier_lot_to <> NVL(inv_mwb_globals.g_supplier_lot_from, -1) ) THEN
                    query_str  := query_str || ' AND mln.supplier_lot_number <= :supplier_lot_t ';
                END IF;
                /* End of Bug 8396954 */

          query_str  := query_str || 'AND msn.serial_num = serial_number ';
        END IF;

         --ER(3338592) Changes (If the user gives the value for the Qty then only
         --Group by clause comes in to effect)

         IF inv_mwb_globals.g_qty_from IS NOT NULL OR inv_mwb_globals.g_qty_to IS NOT NULL THEN
            group_str := ' GROUP BY  organization_id  ';
         END IF;

        IF inv_mwb_globals.g_subinventory_code IS NOT NULL THEN
          query_str  := query_str || 'AND subinventory_code = :sub ';
          --ER(3338592) Changes
          IF group_str IS NOT NULL THEN
             group_str := group_str || ' , subinventory_code  ' ;
          END IF;
        END IF;

        IF inv_mwb_globals.g_subinventory_code IS NULL AND inv_mwb_globals.g_detailed = 1 THEN   --Bug # 3412002
          --ER(3338592) Changes
          IF group_str IS NOT NULL THEN
             group_str := group_str || ' , subinventory_code  ' ;
          END IF;
        END IF;

  -- NSRIVAST, INVCONV, Start
      IF inv_mwb_globals.g_grade_from_code IS NOT NULL THEN
         query_str := query_str || ' AND grade_code = :grade_f ' ;
      END IF ;
      IF inv_mwb_globals.g_tree_grade_code  IS NOT NULL THEN
         query_str := query_str || ' AND grade_code = :grade_c ' ;
      END IF ;
   -- NSRIVAST, INVCONV, End

        IF inv_mwb_globals.g_locator_id IS NOT NULL THEN
          query_str  := query_str || 'AND locator_id = :loc_id ';
          --ER(3338592) Changes
          IF group_str IS NOT NULL THEN
             group_str := group_str || ' , locator_id  ' ;
          END IF;
        END IF;

        IF inv_mwb_globals.g_locator_id IS NULL AND inv_mwb_globals.g_detailed = 1 THEN  --Bug # 3412002
          --ER(3338592) Changes
          IF group_str IS NOT NULL THEN
             group_str := group_str || ' , locator_id  ' ;
          END IF;
        END IF;

        IF inv_mwb_globals.g_project_id IS NOT NULL THEN
          query_str  := query_str || ' AND project_id = :pr_id ';
          --ER(3338592) Changes
          IF group_str IS NOT NULL THEN
             group_str := group_str || ' , project_id  ' ;
          END IF;
        END IF;

        IF inv_mwb_globals.g_task_id IS NOT NULL THEN
          query_str  := query_str || ' AND task_id = :ta_id ';
          --ER(3338592) Changes
          IF group_str IS NOT NULL THEN
             group_str := group_str || ' , inv_mwb_globals.g_task_id  ' ;
          END IF;
        END IF;

        IF inv_mwb_globals.g_inventory_item_id IS NOT NULL THEN
          query_str  := query_str || ' AND inventory_item_id = :item_id ';
        END IF;

        -- ER(9158529 client)
        IF inv_mwb_globals.g_client_code IS NOT NULL THEN
           query_str := query_str || ' AND inventory_item_id in (select DISTINCT inventory_item_id from mtl_system_items_b where wms_deploy.get_client_code(inventory_item_id) = :client_code) ';
        END IF;
        -- ER(9158529 client)

        --Bug # 3411938
        IF (inv_mwb_globals.g_qty_from IS NOT NULL OR inv_mwb_globals.g_qty_to IS NOT NULL)
          AND (NVL(inv_mwb_globals.g_view_by,' ') NOT IN ('LOT' , 'SERIAL'))  THEN
           group_str := group_str || ' , inventory_item_id, item_description, item ,uom ' ;
        END IF;

        --ER(3338592) Changes
        IF inv_mwb_globals.g_item_description IS NOT NULL THEN
           query_str := query_str || ' AND item_description LIKE :item_description ';
        END IF;

        IF inv_mwb_globals.g_revision IS NOT NULL THEN
          query_str  := query_str || ' AND revision = :rev ';
          --ER(3338592) Changes
          IF group_str IS NOT NULL THEN
             group_str := group_str || ' , revision  ' ;
          END IF;
        END IF;

        IF inv_mwb_globals.g_cost_group_id IS NOT NULL THEN
          query_str  := query_str || ' AND cost_group_id = :cg_id ';
          --ER(3338592) Changes
          IF group_str IS NOT NULL THEN
             group_str := group_str || ' , cost_group_id  ' ;
          END IF;
        END IF;

        -- ER(9158529)
        IF inv_mwb_globals.g_category_set_id IS NOT NULL THEN
             query_str := query_str || ' AND inventory_item_id in '
                                             || ' (select DISTINCT inventory_item_id from mtl_item_categories '
                                             || ' where organization_id = :organization_id '
                                             || ' and category_set_id = :category_set_id '
                                             || ' and category_id = nvl(:category_id, category_id))' ;
        END IF;
        -- ER(9158529)

        IF inv_mwb_globals.g_lpn_from IS NOT NULL
           OR inv_mwb_globals.g_lpn_to IS NOT NULL THEN
          query_str  := query_str || ' AND MOL.outermost_lpn_id = X.outermost_lpn_id ';
        END IF;

        --ER(3338592) Changes
        IF inv_mwb_globals.g_lpn_from IS NOT NULL OR inv_mwb_globals.g_lpn_to IS NOT NULL THEN
           --ER(3338592) Changes
           IF group_str IS NOT NULL THEN
              group_str := group_str || ' , lpn ' ;
          END IF;
        END IF;

        IF inv_mwb_globals.g_lot_from IS NOT NULL THEN
          query_str  := query_str || ' AND lot_number >= :lot_f ';
        END IF;

        IF inv_mwb_globals.g_lot_to IS NOT NULL THEN
          query_str  := query_str || ' AND lot_number <= :lot_t ';
        END IF;

        IF inv_mwb_globals.g_serial_from IS NOT NULL THEN
          query_str  := query_str || ' AND serial_number >= :serial_f ';
        END IF;

        IF inv_mwb_globals.g_serial_to IS NOT NULL THEN
          query_str  := query_str || ' AND serial_number <= :serial_t ';
        END IF;

        IF inv_mwb_globals.g_unit_number IS NOT NULL THEN
          query_str  := query_str || ' AND unit_number=:un_id ';
        END IF;

	/*LPN Status Project */
	IF (l_default_status_id IS NOT NULL) THEN
          IF inv_mwb_globals.g_status_id IS NOT NULL OR inv_mwb_globals.g_only_subinventory_status = 1 THEN
	    query_str  := query_str || 'AND onhand_status_id = :st_id ';
	  END IF;
	ELSE
	  IF inv_mwb_globals.g_status_id IS NOT NULL THEN
            query_str  := query_str || ' AND (subinventory_status_id = :st_id OR locator_status_id = :st_id ';
            query_str  := query_str || ' OR lot_status_id = :st_id OR serial_status_id = :st_id) ';
          END IF;
        END IF;
        /*End of fix for LPN Status Project */

        IF inv_mwb_globals.g_lot_controlled = 2 THEN
          query_str  := query_str || ' AND lot_number is not null ';
        ELSIF inv_mwb_globals.g_lot_controlled = 1 THEN
          query_str  := query_str || ' AND lot_number is null ';
        END IF;

        IF inv_mwb_globals.g_serial_controlled = 1 THEN
          query_str  := query_str || ' AND serial_number is null ';
        ELSIF inv_mwb_globals.g_serial_controlled = 2 THEN
          query_str  := query_str || ' AND serial_number is not null ';
        END IF;

        IF inv_mwb_globals.g_tree_mat_loc_id = 2
        OR inv_mwb_globals.g_chk_receiving = 1 THEN
          query_str  := query_str || ' AND lpn_context = 3 ';
        ELSIF inv_mwb_globals.g_prepacked IS NULL THEN
          query_str  := query_str || ' AND (lpn_context=1  or lpn_context=9 or lpn_context=11 ) ';
        ELSIF inv_mwb_globals.g_prepacked = 1 THEN
          query_str  := query_str || 'AND lpn_context = 1 ';
        ELSIF inv_mwb_globals.g_prepacked <> 1
              AND inv_mwb_globals.g_prepacked <> 999
              AND inv_mwb_globals.g_prepacked IS NOT NULL THEN
          query_str  := query_str || 'AND lpn_context = :prepacked ';
        END IF;

        /*IF inv_mwb_globals.g_site_id IS NOT NULL THEN
           query_str := query_str || ' AND PLANNING_TP_TYPE = 1 ';
           query_str := query_str || ' AND planning_organization_id = :site_id ' ;
         ELSIF inv_mwb_globals.g_vendor_id is NOT NULL THEN
           query_str := query_str || ' AND  PLANNING_TP_TYPE = 1 ';
           query_str := query_str || ' AND  planning_organization_id in ';
           query_str := query_str || ' (select vendor_site_id from po_vendor_sites_all ';
           query_str := query_str || '  where vendor_id = :vendor_id )';
        END IF;*/

        IF  (inv_mwb_globals.g_owning_qry_mode = 4) THEN
          query_str  := query_str || ' AND owning_organization_id = :own_org ';
          query_str  := query_str || ' AND owning_tp_type = 2 ';
        ELSIF(inv_mwb_globals.g_owning_qry_mode = 3) THEN
          query_str  := query_str || ' AND owning_organization_id = :own_org ';
          query_str  := query_str || ' AND owning_tp_type = 1 ';
        ELSIF(inv_mwb_globals.g_owning_qry_mode = 2) THEN
          query_str  := query_str || ' AND owning_tp_type = 1 ';
        END IF;

        IF (inv_mwb_globals.g_planning_query_mode = 4) THEN
          query_str  := query_str || ' AND planning_organization_id = :plan_org ';
          query_str  := query_str || ' AND planning_tp_type = 2 ';
        ELSIF(inv_mwb_globals.g_planning_query_mode = 3) THEN
          query_str  := query_str || ' AND planning_organization_id = :plan_org ';
          query_str  := query_str || ' AND planning_tp_type = 1 ';
        ELSIF(inv_mwb_globals.g_planning_query_mode = 2) THEN
          query_str  := query_str || ' AND planning_tp_type = 1 ';
        END IF;

        --Bug #3411938
        IF inv_mwb_globals.g_qty_from IS NOT NULL OR inv_mwb_globals.g_qty_to IS NOT NULL THEN
           group_str := group_str || ' , planning_organization_id, planning_tp_type ';
           group_str := group_str || ' , owning_organization_id, owning_tp_type ';
           group_str := group_str || ' , item_lot_control, item_serial_control ';
        END IF;

        IF inv_mwb_globals.g_qty_from IS NOT NULL THEN
           having_str := having_str || ' AND sum(on_hand) >= :qty_from ';
        END IF;

        IF inv_mwb_globals.g_qty_to IS NOT NULL THEN
           having_str := having_str || ' AND sum(on_hand) <= :qty_to ';
        END IF;

        IF inv_mwb_globals.g_qty_from IS NOT NULL OR inv_mwb_globals.g_qty_to IS NOT NULL THEN
          query_str := query_str || 'AND organization_id = mp.organization_id  ';
          query_str := query_str || group_str || having_str || ' ) ' ;
        ELSE
          query_str := query_str || 'AND organization_id = mp.organization_id ) ';
        END IF;

        IF inv_mwb_globals.g_organization_id IS NOT NULL THEN
          query_str  := query_str || 'and mp.organization_id = :org_id ';
        --Bug # 3411938
        ELSE
          query_str  := query_str || ' and EXISTS ( SELECT 1 ' ;
          query_str  := query_str || ' FROM org_access_view oav ' ;
          query_str  := query_str || ' WHERE oav.organization_id = mp.organization_id ' ;
          query_str  := query_str || ' AND oav.responsibility_id   = :responsibility_id ' ;
          query_str  := query_str || ' AND oav.resp_application_id = :resp_application_id ) ' ;
        END IF;

        query_str  := query_str || ' ORDER BY organization_code ';

      END IF;
    END IF;

       --trace1(query_str, 'add_orgs', 9);

    inv_mwb_globals.print_msg( g_pkg_name, l_procedure_name, query_str );

    inv_mwb_globals.g_last_query := query_str;

    query_hdl       := DBMS_SQL.open_cursor;
    DBMS_SQL.parse(query_hdl, query_str, DBMS_SQL.native);


    IF inv_mwb_globals.g_organization_id IS NOT NULL THEN
      DBMS_SQL.bind_variable(query_hdl, 'org_id', inv_mwb_globals.g_organization_id);
    END IF;

    IF inv_mwb_globals.g_subinventory_code IS NOT NULL THEN
      DBMS_SQL.bind_variable(query_hdl, 'sub', inv_mwb_globals.g_subinventory_code);
    END IF;

    IF inv_mwb_globals.g_locator_id IS NOT NULL THEN
      DBMS_SQL.bind_variable(query_hdl, 'loc_id', inv_mwb_globals.g_locator_id);
    END IF;

    IF inv_mwb_globals.g_inventory_item_id IS NOT NULL THEN
      DBMS_SQL.bind_variable(query_hdl, 'item_id', inv_mwb_globals.g_inventory_item_id);
    END IF;

    -- ER(9158529 client)
    IF inv_mwb_globals.g_client_code IS NOT NULL THEN
      DBMS_SQL.bind_variable(query_hdl, 'client_code', inv_mwb_globals.g_client_code);
    END IF;
    -- ER(9158529 client)

    IF inv_mwb_globals.g_revision IS NOT NULL THEN
      DBMS_SQL.bind_variable(query_hdl, 'rev', inv_mwb_globals.g_revision);
    END IF;

    IF inv_mwb_globals.g_cost_group_id IS NOT NULL THEN
      DBMS_SQL.bind_variable(query_hdl, 'cg_id', inv_mwb_globals.g_cost_group_id);
    END IF;

    -- ER(9158529)
    IF inv_mwb_globals.g_category_set_id IS NOT NULL THEN
      DBMS_SQL.bind_variable(query_hdl, 'organization_id', inv_mwb_globals.g_organization_id);
      DBMS_SQL.bind_variable(query_hdl, 'category_set_id', inv_mwb_globals.g_category_set_id);
      DBMS_SQL.bind_variable(query_hdl, 'category_id', inv_mwb_globals.g_category_id);
    END IF;
    -- ER(9158529)

    --BUG 7556505
    IF inv_mwb_globals.g_parent_lot IS NOT NULL THEN
      DBMS_SQL.bind_variable(query_hdl, 'parent_lot', inv_mwb_globals.g_parent_lot);
    END IF;
    --BUG 7556505

    IF inv_mwb_globals.g_lot_from IS NOT NULL THEN
      DBMS_SQL.bind_variable(query_hdl, 'lot_f', inv_mwb_globals.g_lot_from);
    END IF;

    IF inv_mwb_globals.g_lot_to IS NOT NULL THEN
      DBMS_SQL.bind_variable(query_hdl, 'lot_t', inv_mwb_globals.g_lot_to);
    END IF;

    /* Bug 8396954 added below code for supplier_lot_number */
    IF (inv_mwb_globals.g_supplier_lot_from IS NOT NULL AND
    inv_mwb_globals.g_supplier_lot_to IS NOT NULL AND
    inv_mwb_globals.g_supplier_lot_from = inv_mwb_globals.g_supplier_lot_to) THEN
         DBMS_SQL.bind_variable(query_hdl, 'supplier_lot_f', inv_mwb_globals.g_supplier_lot_from);
    END IF;

    IF (inv_mwb_globals.g_supplier_lot_from IS NOT NULL AND
        inv_mwb_globals.g_supplier_lot_from <> NVL(inv_mwb_globals.g_supplier_lot_to, -1) ) THEN
          DBMS_SQL.bind_variable(query_hdl, 'supplier_lot_f', inv_mwb_globals.g_supplier_lot_from);
    END IF;

    IF (inv_mwb_globals.g_supplier_lot_to IS NOT NULL AND
         inv_mwb_globals.g_supplier_lot_to <> NVL(inv_mwb_globals.g_supplier_lot_from, -1) ) THEN
          DBMS_SQL.bind_variable(query_hdl, 'supplier_lot_t', inv_mwb_globals.g_supplier_lot_to);
    END IF;
    /* End of Bug 8396954 */

 -- NSRIVAST, INVCONV, Start
    IF inv_mwb_globals.g_grade_from_code IS NOT NULL THEN
      DBMS_SQL.bind_variable(query_hdl, 'grade_f',inv_mwb_globals.g_grade_from_code );
    END IF;
    IF inv_mwb_globals.g_tree_grade_code IS NOT NULL THEN
      DBMS_SQL.bind_variable(query_hdl, 'grade_c', inv_mwb_globals.g_tree_grade_code);
    END IF;
 -- NSRIVAST, INVCONV, End
    IF inv_mwb_globals.g_serial_from IS NOT NULL THEN
      DBMS_SQL.bind_variable(query_hdl, 'serial_f', inv_mwb_globals.g_serial_from);
    END IF;

    --bug 6633612
    IF inv_mwb_globals.g_shipment_header_id IS NOT NULL THEN
      DBMS_SQL.bind_variable(query_hdl, 'shipment_header_id',inv_mwb_globals.g_shipment_header_id );
    END IF;
    --bug 6633612

    IF inv_mwb_globals.g_serial_to IS NOT NULL THEN
      DBMS_SQL.bind_variable(query_hdl, 'serial_t', inv_mwb_globals.g_serial_to);
    END IF;

      --bugfix#3646484
      IF ((inv_mwb_globals.g_lpn_from IS NOT NULL) AND (inv_mwb_globals.g_lpn_to IS NOT NULL) AND (inv_mwb_globals.g_lpn_from = inv_mwb_globals.g_lpn_to))  THEN
      --User is querying for single LPN so converted the range query to equality query
      --So it is enought to bind the from lpn alone
         dbms_sql.bind_variable(query_hdl, 'lpn_f', inv_mwb_globals.g_lpn_from);
      ELSE
          IF inv_mwb_globals.g_lpn_from IS NOT NULL THEN
            DBMS_SQL.bind_variable(query_hdl, 'lpn_f', inv_mwb_globals.g_lpn_from);
          END IF;

          IF inv_mwb_globals.g_lpn_to IS NOT NULL THEN
            DBMS_SQL.bind_variable(query_hdl, 'lpn_t', inv_mwb_globals.g_lpn_to);
          END IF;
      END IF;

    IF inv_mwb_globals.g_status_id IS NOT NULL THEN
      DBMS_SQL.bind_variable(query_hdl, 'st_id', inv_mwb_globals.g_status_id);
    ELSIF inv_mwb_globals.g_only_subinventory_status = 1 and l_default_status_id is not null THEN -- Onhand Material Status Support
      DBMS_SQL.bind_variable(query_hdl, 'st_id', inv_mwb_globals.g_tree_st_id);
    END IF;

    IF inv_mwb_globals.g_prepacked <> 1
       AND inv_mwb_globals.g_prepacked <> 999
       AND inv_mwb_globals.g_prepacked IS NOT NULL THEN
      DBMS_SQL.bind_variable(query_hdl, 'prepacked', inv_mwb_globals.g_prepacked);
    END IF;

    IF inv_mwb_globals.g_mln_context_code IS NOT NULL THEN
      DBMS_SQL.bind_variable(query_hdl, 'mln_context', inv_mwb_globals.g_mln_context_code);
    END IF;

    IF inv_mwb_globals.g_project_id IS NOT NULL THEN
      DBMS_SQL.bind_variable(query_hdl, 'pr_id', inv_mwb_globals.g_project_id);
    END IF;

    IF inv_mwb_globals.g_task_id IS NOT NULL THEN
      DBMS_SQL.bind_variable(query_hdl, 'ta_id', inv_mwb_globals.g_task_id);
    END IF;

    IF inv_mwb_globals.g_unit_number IS NOT NULL THEN
      DBMS_SQL.bind_variable(query_hdl, 'un_id', inv_mwb_globals.g_unit_number);
    END IF;

    IF (inv_mwb_globals.g_owning_qry_mode = 4)
       OR(inv_mwb_globals.g_owning_qry_mode = 3) THEN
      DBMS_SQL.bind_variable(query_hdl, 'own_org', inv_mwb_globals.g_owning_org);
    END IF;

    IF (inv_mwb_globals.g_planning_query_mode = 4)
       OR(inv_mwb_globals.g_planning_query_mode = 3) THEN
      DBMS_SQL.bind_variable(query_hdl, 'plan_org', inv_mwb_globals.g_planning_org);
    END IF;

    --ER(3338592) Changes
    IF inv_mwb_globals.g_item_description IS NOT NULL THEN
      dbms_sql.bind_variable(query_hdl, 'item_description', inv_mwb_globals.g_item_description);
    END IF;

    IF inv_mwb_globals.g_qty_from IS NOT NULL THEN
      dbms_sql.bind_variable(query_hdl, 'qty_from', inv_mwb_globals.g_qty_from);
    END IF;

    IF inv_mwb_globals.g_qty_to IS NOT NULL THEN
       dbms_sql.bind_variable(query_hdl, 'qty_to', inv_mwb_globals.g_qty_to);
    END IF;
    --End of ER Changes

    --Bug #3411938
    IF inv_mwb_globals.g_organization_id IS NULL THEN
       IF inv_mwb_globals.g_responsibility_id  IS NOT NULL THEN
          dbms_sql.bind_variable(query_hdl, 'responsibility_id', inv_mwb_globals.g_responsibility_id );
       END IF;

       IF inv_mwb_globals.g_resp_application_id  IS NOT NULL THEN
          dbms_sql.bind_variable(query_hdl, 'resp_application_id', inv_mwb_globals.g_resp_application_id );
       END IF;
    END IF;

    DBMS_SQL.define_column(query_hdl, 1, org_id);
    DBMS_SQL.define_column(query_hdl, 2, org_code, 3);

    inv_mwb_globals.print_msg( g_pkg_name, l_procedure_name, 'Org id , Org code '||org_id||','||org_code );

IF inv_mwb_globals.g_organization_id IS NOT NULL THEN
   SELECT   mp.organization_id, mp.organization_code
      INTO  org_id,org_code
       FROM mtl_parameters mp
      WHERE EXISTS (SELECT organization_id
                      FROM mtl_onhand_total_mwb_v
                     WHERE 1 = 1 AND organization_id = mp.organization_id)
        AND mp.organization_id = inv_mwb_globals.g_organization_id
   ORDER BY organization_code;
END IF;
    rows_processed  := DBMS_SQL.EXECUTE(query_hdl);

    LOOP
      -- fetch a row
      IF DBMS_SQL.fetch_rows(query_hdl) > 0 THEN
        -- fetch columns from the row
        DBMS_SQL.column_value(query_hdl, 1, org_id);
        DBMS_SQL.column_value(query_hdl, 2, org_code);
        inv_mwb_globals.print_msg( g_pkg_name, l_procedure_name, 'Coming inside, Org code : '||org_id||org_code );
         FOR j in 1 .. x_node_tbl.COUNT LOOP
            IF x_node_tbl(j).LABEL = org_code THEN
               l_org_exists_flag := TRUE;
            END IF;
         END LOOP;
        inv_mwb_globals.print_msg( g_pkg_name, l_procedure_name, 'after loop');
	   IF j >= inv_mwb_globals.g_tree_node_low_value  AND NOT l_org_exists_flag THEN
	      x_node_tbl(i).state  := inv_mwb_globals.g_tree_node_state;
              x_node_tbl(i).DEPTH  := 1;
	      x_node_tbl(i).label  := org_code;
	      x_node_tbl(i).icon   := 'inv_inor';
	      x_node_tbl(i).VALUE  := TO_CHAR(org_id);
	      x_node_tbl(i).TYPE   := 'ORG';
	      i                    := i + 1;
	   END IF;
        EXIT WHEN j >= inv_mwb_globals.g_tree_node_high_value;
        j  := j + 1;
      ELSE
        EXIT;
      END IF;
    END LOOP;

    DBMS_SQL.close_cursor(query_hdl); -- close cursor
    x_node_value    := j;
    x_tbl_index     := i;

--   END IF; -- Receiving checkbox selected


/*   IF l_onhand_qty IS NOT NULL
      OR l_rcv_qty IS NOT NULL
      OR l_inbound_qty IS NOT NULL
      OR inv_mwb_globals.g_view_by = 'GRADE'  -- Bug : 4680944
      OR inv_mwb_globals.g_view_by = 'STATUS'
   THEN
   */
      IF  (inv_mwb_globals.g_grade_from_code IS NOT NULL OR inv_mwb_globals.g_tree_grade_code IS NOT NULL OR inv_mwb_globals.g_grade_controlled <> 0) THEN
             is_grade_t     := TRUE ;
      END IF ;
   -- NSRIVAST, INVCONV, End

    IF inv_mwb_globals.g_inventory_item_id IS NULL
       AND inv_mwb_globals.g_client_code IS NULL        -- ER(9158529 client)
       AND inv_mwb_globals.g_revision IS NULL
       AND inv_mwb_globals.g_category_set_id IS NULL    -- ER(9158529)
       AND inv_mwb_globals.g_category_id IS NULL        -- ER(9158529)
       AND inv_mwb_globals.g_parent_lot IS NULL			--BUG 7556505
       AND inv_mwb_globals.g_lot_from IS NULL
       AND inv_mwb_globals.g_lot_to IS NULL
       AND inv_mwb_globals.g_supplier_lot_from IS NULL  -- Bug 8396954
       AND inv_mwb_globals.g_supplier_lot_to IS NULL    -- Bug 8396954
       AND inv_mwb_globals.g_serial_from IS NULL
       AND inv_mwb_globals.g_serial_to IS NULL
       AND inv_mwb_globals.g_serial_controlled = 0   -- Bug #3411938
       AND inv_mwb_globals.g_lot_controlled = 0
       AND inv_mwb_globals.g_cost_group_id IS NULL
       AND inv_mwb_globals.g_status_id IS NULL
       AND inv_mwb_globals.g_tree_lot_attr_query IS NULL
       AND inv_mwb_globals.g_tree_serial_attr_query IS NULL
       AND inv_mwb_globals.g_unit_number IS NULL
       AND inv_mwb_globals.g_project_id IS NULL
       AND inv_mwb_globals.g_task_id IS NULL
       AND inv_mwb_globals.g_planning_org IS NULL
       AND inv_mwb_globals.g_owning_org IS NULL
       AND( nvl(inv_mwb_globals.g_prepacked,1) <> 1
           OR inv_mwb_globals.g_lpn_from IS NOT NULL
           OR inv_mwb_globals.g_lpn_to IS NOT NULL)
       --ER(3338592) Changes
       AND inv_mwb_globals.g_item_description IS NULL
       AND inv_mwb_globals.g_qty_from         IS NULL
       AND inv_mwb_globals.g_qty_to           IS NULL THEN
      --End of ER Changes
      query_str  := 'SELECT mp.organization_id, mp.organization_code  ';
      query_str  := query_str || 'from mtl_parameters mp where organization_id in ';
      query_str  := query_str || '(select organization_id ';
      query_str  := query_str || 'FROM wms_license_plate_numbers WHERE 1=1 ';

      IF inv_mwb_globals.g_tree_mat_loc_id = 2
      OR inv_mwb_globals.g_chk_receiving = 1 THEN
        query_str  := query_str || ' AND lpn_context = 3 ';
      ELSIF inv_mwb_globals.g_prepacked IS NULL THEN
        query_str  := query_str || ' AND (lpn_context=1  or lpn_context=9 or lpn_context=11) ';
      ELSIF inv_mwb_globals.g_prepacked = 1 THEN
        query_str  := query_str || ' AND (lpn_context = 1) ';
      ELSIF inv_mwb_globals.g_prepacked <> 1
            AND inv_mwb_globals.g_prepacked <> 999
            AND inv_mwb_globals.g_prepacked IS NOT NULL THEN
         query_str  := query_str || ' AND lpn_context = :prepacked ';
      END IF;

      IF inv_mwb_globals.g_locator_id IS NOT NULL THEN
        query_str  := query_str || ' AND locator_id = :loc_id ';
      END IF;

  -- NSRIVAST, INVCONV, Start
      IF inv_mwb_globals.g_grade_from_code IS NOT NULL THEN
         query_str := query_str || ' AND grade_code = :grade_f ' ;
      END IF ;
      IF inv_mwb_globals.g_tree_grade_code  IS NOT NULL THEN
         query_str := query_str || ' AND grade_code = :grade_c ' ;
      END IF ;
   -- NSRIVAST, INVCONV, End

      IF inv_mwb_globals.g_subinventory_code IS NOT NULL THEN
        query_str  := query_str || ' AND subinventory_code = :sub ';
      END IF;

      IF inv_mwb_globals.g_organization_id IS NOT NULL THEN
        query_str  := query_str || ' AND organization_id = :org_id ';
      END IF;

      --bugfix#3646484
      IF ((inv_mwb_globals.g_lpn_from IS NOT NULL) AND (inv_mwb_globals.g_lpn_to IS NOT NULL) AND (inv_mwb_globals.g_lpn_from = inv_mwb_globals.g_lpn_to))  THEN
      --User is querying for single LPN so converted the range query to equality query
         query_str := query_str || 'and license_plate_number = :lpn_f ';
      ELSE
         IF inv_mwb_globals.g_lpn_from IS NOT NULL THEN
           query_str  := query_str || 'and license_plate_number >= :lpn_f ';
         END IF;

         IF inv_mwb_globals.g_lpn_to IS NOT NULL THEN
           query_str  := query_str || 'and license_plate_number <= :lpn_t ';
         END IF;
      END IF;

      query_str  := query_str || ') ORDER BY organization_code ';
    ELSE
      query_str  := ' SELECT mp.organization_id, mp.organization_code FROM mtl_parameters mp ';
      query_str  := query_str || ' WHERE exists ( ';

      -- Need to use MTL_ONHAND_TOTAL_V
      IF (
          inv_mwb_globals.g_serial_from IS NULL
          AND inv_mwb_globals.g_serial_to IS NULL
          AND inv_mwb_globals.g_unit_number IS NULL
          AND inv_mwb_globals.g_status_id IS NULL
          AND inv_mwb_globals.g_lpn_from IS NULL
          AND inv_mwb_globals.g_lpn_to IS NULL
          AND nvl(inv_mwb_globals.g_prepacked,1) = 1
          AND inv_mwb_globals.g_tree_serial_attr_query IS NULL
         ) THEN
        IF NVL(inv_mwb_globals.g_chk_onhand,0) = 0
	AND NVL(inv_mwb_globals.g_chk_receiving,0) = 1
	AND NVL(inv_mwb_globals.g_chk_inbound,0) = 0 THEN
          table_required  := ' mtl_rcv_mwb_onhand_v v ';
        ELSIF(inv_mwb_globals.g_status_id IS NULL) THEN
          table_required  := ' mtl_onhand_total_mwb_v v ';
             IF is_grade_t = TRUE THEN                       -- NSRIVAST, INVCONV
             table_required  := ' mtl_onhand_total_v v ';  -- NSRIVAST, INVCONV
             END IF;
        ELSE
          table_required  := ' mtl_onhand_total_v v ';
        END IF;

	--bug 6633612
	IF (inv_mwb_globals.g_shipment_header_id is not null) THEN
		table_required  := table_required || ' , rcv_transactions rt, mtl_material_transactions mmt ';
	END IF;
	--bug 6633612

        IF inv_mwb_globals.g_tree_lot_attr_query IS NULL  AND inv_mwb_globals.g_parent_lot IS NULL
          AND inv_mwb_globals.g_supplier_lot_from IS NULL AND inv_mwb_globals.g_supplier_lot_to IS NULL THEN
          query_str  := query_str || 'SELECT v.organization_id from ' || table_required;
          query_str  := query_str || 'WHERE 1=1 ';
        ELSE
          query_str  :=
                query_str
             || ' SELECT v.organization_id from'
             || ' (SELECT lot_number lot_num, parent_lot_number, supplier_lot_number FROM mtl_lot_numbers WHERE 1=1 '
             || inv_mwb_globals.g_tree_lot_attr_query
             || ' ) mln, '
             || table_required;
          query_str  := query_str || ' WHERE mln.lot_num = v.lot_number ';
	       	--BUG 7556505
		   IF inv_mwb_globals.g_parent_lot IS NOT NULL THEN
		       query_str  := query_str || ' AND mln.parent_lot_number = :parent_lot ';
	           END IF;
		--BUG 7556505
                /* Bug 8396954 added below code for supplier_lot_number */
                IF (inv_mwb_globals.g_supplier_lot_from IS NOT NULL AND
                    inv_mwb_globals.g_supplier_lot_to IS NOT NULL AND
                    inv_mwb_globals.g_supplier_lot_from = inv_mwb_globals.g_supplier_lot_to) THEN
                    query_str  := query_str || ' AND mln.supplier_lot_number = :supplier_lot_f ';
                END IF;

                IF (inv_mwb_globals.g_supplier_lot_from IS NOT NULL AND
	            inv_mwb_globals.g_supplier_lot_from <> NVL(inv_mwb_globals.g_supplier_lot_to, -1) ) THEN
                    query_str  := query_str || ' AND mln.supplier_lot_number >= :supplier_lot_f ';
                END IF;

                IF (inv_mwb_globals.g_supplier_lot_to IS NOT NULL AND
	            inv_mwb_globals.g_supplier_lot_to <> NVL(inv_mwb_globals.g_supplier_lot_from, -1) ) THEN
                    query_str  := query_str || ' AND mln.supplier_lot_number <= :supplier_lot_t ';
                END IF;
                /* End of Bug 8396954 */
	END IF;

        --ER(3338592) Changes (If the user gives the value for the Qty then only
        --Group by clause comes in to effect)

        IF inv_mwb_globals.g_qty_from IS NOT NULL OR inv_mwb_globals.g_qty_to IS NOT NULL THEN
           group_str := ' GROUP BY  v.organization_id  ';
        END IF;

        IF inv_mwb_globals.g_subinventory_code IS NOT NULL THEN
          query_str  := query_str || ' AND v.subinventory_code = :sub ';
          --ER(3338592) Changes
          IF group_str IS NOT NULL THEN
             group_str := group_str || ' , v.subinventory_code  ' ;
          END IF;
        END IF;

	--bug 6633612
	IF (inv_mwb_globals.g_shipment_header_id is not null) THEN
		query_str := query_str || ' AND rt.shipment_header_id = :shipment_header_id '
					 || ' AND rt.transaction_id = mmt.rcv_transaction_id '
					 || ' AND rt.organization_id = mmt.organization_id '
					 || ' AND rt.transaction_type = ''DELIVER'''
					 || ' AND rt.destination_type_code = ''INVENTORY'''
					 || ' AND mmt.transaction_id = v.create_transaction_id '
					 || ' AND mmt.organization_id = v.organization_id ';

	END IF;
	--bug 6633612

        IF inv_mwb_globals.g_subinventory_code IS NULL AND inv_mwb_globals.g_detailed = 1 THEN   --Bug # 3412002
          --ER(3338592) Changes
          IF group_str IS NOT NULL THEN
             group_str := group_str || ' , v.subinventory_code  ' ;
          END IF;
        END IF;

        IF inv_mwb_globals.g_locator_id IS NOT NULL THEN
          query_str  := query_str || ' AND v.locator_id = :loc_id ';
          --ER(3338592) Changes
          IF group_str IS NOT NULL THEN
             group_str := group_str || ' , v.locator_id  ' ;
          END IF;
        END IF;

  -- NSRIVAST, INVCONV, Start
      IF inv_mwb_globals.g_grade_from_code IS NOT NULL THEN
         query_str := query_str || ' AND v.grade_code = :grade_f ' ;
      END IF ;
      IF inv_mwb_globals.g_tree_grade_code  IS NOT NULL THEN
         query_str := query_str || ' AND v.grade_code = :grade_c ' ;
      END IF ;
   -- NSRIVAST, INVCONV, End

        IF inv_mwb_globals.g_locator_id IS NULL AND inv_mwb_globals.g_detailed = 1 THEN  --Bug # 3412002
          --ER(3338592) Changes
          IF group_str IS NOT NULL THEN
             group_str := group_str || ' , v.locator_id  ' ;
          END IF;
        END IF;

        IF inv_mwb_globals.g_project_id IS NOT NULL THEN
          query_str  := query_str || ' AND v.project_id = :pr_id ';
           --ER(3338592) Changes
           IF group_str IS NOT NULL THEN
              group_str := group_str || ' , v.project_id  ' ;
           END IF;
        END IF;

        IF inv_mwb_globals.g_task_id IS NOT NULL THEN
          query_str  := query_str || ' AND v.task_id = :ta_id ';
          --ER(3338592) Changes
          IF group_str IS NOT NULL THEN
             group_str := group_str || ' , inv_mwb_globals.g_task_id  ' ;
          END IF;
        END IF;

        IF inv_mwb_globals.g_inventory_item_id IS NOT NULL THEN
          query_str  := query_str || ' AND v.inventory_item_id = :item_id ';
        END IF;

        -- ER(9158529 client)
        IF inv_mwb_globals.g_client_code IS NOT NULL THEN
          query_str := query_str || ' AND v.inventory_item_id in (select DISTINCT inventory_item_id from mtl_system_items_b where wms_deploy.get_client_code(inventory_item_id) = :client_code) ';
        END IF;
        -- ER(9158529 client)

        --Bug # 3411938
        IF (inv_mwb_globals.g_qty_from IS NOT NULL OR inv_mwb_globals.g_qty_to IS NOT NULL)
          AND (NVL(inv_mwb_globals.g_view_by,' ') NOT IN ('LOT' , 'SERIAL'))  THEN
           group_str := group_str || ' , v.inventory_item_id, v.item_description, v.item ,v.uom ' ;
        END IF;

        --ER(3338592) Changes
        IF inv_mwb_globals.g_item_description IS NOT NULL THEN
           query_str := query_str || ' AND v.item_description LIKE :item_description ';
        END IF;

        IF inv_mwb_globals.g_revision IS NOT NULL THEN
          query_str  := query_str || ' AND v.revision = :rev ';
          --ER(3338592) Changes
          IF group_str IS NOT NULL THEN
             group_str := group_str || ' , v.revision  ' ;
          END IF;
        END IF;

        IF inv_mwb_globals.g_cost_group_id IS NOT NULL THEN
          query_str  := query_str || ' AND v.cost_group_id = :cg_id ';
          --End of ER Changes
          IF group_str IS NOT NULL THEN
             group_str := group_str || ' , v.cost_group_id  ' ;
          END IF;
        END IF;

        -- ER(9158529)
        IF inv_mwb_globals.g_category_set_id IS NOT NULL THEN
             query_str := query_str || ' AND v.inventory_item_id in '
                                            || ' (select DISTINCT inventory_item_id from mtl_item_categories '
                                            || ' where organization_id = :organization_id '
                                            || ' and category_set_id = :category_set_id '
                                            || ' and category_id = nvl(:category_id, category_id)) ' ;
        END IF;
        -- ER(9158529)

        IF inv_mwb_globals.g_lot_from IS NOT NULL THEN
          query_str  := query_str || ' AND v.lot_number >= :lot_f ';
        END IF;

        IF inv_mwb_globals.g_lot_to IS NOT NULL THEN
          query_str  := query_str || ' AND v.lot_number <= :lot_t ';
        END IF;

        IF inv_mwb_globals.g_lot_controlled = 2 THEN
          query_str  := query_str ||  ' AND v.lot_number is not null ';
        ELSIF inv_mwb_globals.g_lot_controlled = 1 THEN
          query_str  := query_str || ' AND v.lot_number is null ';
        END IF;

        -- Onhand Material Status Support: If status is tracked at onhand level then check for status
        -- from onhand table (MOQD)
        if (l_default_status_id is not null) then
          IF inv_mwb_globals.g_status_id IS NOT NULL OR inv_mwb_globals.g_only_subinventory_status = 1 THEN
            query_str  := query_str || 'AND v.onhand_status_id = :st_id ';
          END IF;
        else
          IF inv_mwb_globals.g_status_id IS NOT NULL THEN
            query_str  := query_str || ' AND (v.subinventory_status_id = :st_id ';
            query_str  := query_str || ' OR v.locator_status_id = :st_id OR v.lot_status_id = :st_id) ';
          END IF;
        end if;

        IF inv_mwb_globals.g_chk_receiving <> 1 THEN
           IF inv_mwb_globals.g_containerized = 1 THEN
              query_str  := query_str || ' AND (v.containerized_flag is null or v.containerized_flag <> 1) ';
           ELSIF inv_mwb_globals.g_containerized = 2 THEN
              query_str  := query_str || ' AND v.containerized_flag = 1 ';
           END IF;
        END IF;

        IF inv_mwb_globals.g_serial_controlled = 1 THEN
          --query_str  := query_str || 'AND serial_number_control_code not in (2,5) ';
          query_str  := query_str || ' AND v.item_serial_control not in (2,5) ';
        ELSIF inv_mwb_globals.g_serial_controlled = 2 THEN
          --query_str  := query_str || 'AND serial_number_control_code in (2,5) ';
          query_str  := query_str || ' AND v.item_serial_control in (2,5) ';
        END IF;

        IF (inv_mwb_globals.g_planning_query_mode = 4) THEN
          query_str  := query_str || ' AND v.planning_organization_id = :plan_org ';
          query_str  := query_str || ' AND v.planning_tp_type = 2 ';
        ELSIF(inv_mwb_globals.g_planning_query_mode = 3) THEN
          query_str  := query_str || ' AND v.planning_organization_id = :plan_org ';
          query_str  := query_str || ' AND v.planning_tp_type = 1 ';
        ELSIF(inv_mwb_globals.g_planning_query_mode = 2) THEN
          query_str  := query_str || ' AND v.planning_tp_type = 1 ';
        END IF;

        IF (inv_mwb_globals.g_owning_qry_mode = 4) THEN
          query_str  := query_str || ' AND v.owning_organization_id = :own_org ';
          query_str  := query_str || ' AND v.owning_tp_type = 2 ';
        ELSIF(inv_mwb_globals.g_owning_qry_mode = 3) THEN
          query_str  := query_str || ' AND v.owning_organization_id = :own_org ';
          query_str  := query_str || ' AND v.owning_tp_type = 1 ';
        ELSIF(inv_mwb_globals.g_owning_qry_mode = 2) THEN
          query_str  := query_str || ' AND v.owning_tp_type = 1 ';
        END IF;

        --Bug #3411938
        IF inv_mwb_globals.g_qty_from IS NOT NULL OR inv_mwb_globals.g_qty_to IS NOT NULL THEN
           group_str := group_str || ' , v.planning_organization_id, v.planning_tp_type ';
           group_str := group_str || ' , v.owning_organization_id, v.owning_tp_type ';
           group_str := group_str || ' , v.item_lot_control, v.item_serial_control ';
        END IF;

        IF inv_mwb_globals.g_qty_from IS NOT NULL THEN
           having_str := having_str || ' AND sum(on_hand) >= :qty_from ';
        END IF;

        IF inv_mwb_globals.g_qty_to IS NOT NULL THEN
           having_str := having_str || ' AND sum(on_hand) <= :qty_to ';
        END IF;

        IF inv_mwb_globals.g_qty_from IS NOT NULL OR inv_mwb_globals.g_qty_to IS NOT NULL THEN
          query_str := query_str || ' AND v.organization_id = mp.organization_id  ';
          query_str := query_str || group_str || having_str || ' ) ' ;
        ELSE
          query_str := query_str || ' AND v.organization_id = mp.organization_id ) ';
        END IF;

        IF inv_mwb_globals.g_organization_id IS NOT NULL THEN
          query_str  := query_str || 'and mp.organization_id = :org_id  ';
        --Bug #3411938
        ELSE
          query_str  := query_str || ' and EXISTS ( SELECT 1 ' ;
          query_str  := query_str || ' FROM org_access_view oav ' ;
          query_str  := query_str || ' WHERE oav.organization_id = mp.organization_id ' ;
          query_str  := query_str || ' AND oav.responsibility_id   = :responsibility_id ' ;
          query_str  := query_str || ' AND oav.resp_application_id = :resp_application_id ) ' ;
        END IF;

        query_str  := query_str || ' ORDER BY organization_code ';

      --Need to use MTL_ONHAND_SERIAL_V

      ELSIF(
            (
             inv_mwb_globals.g_serial_from IS NOT NULL
             OR inv_mwb_globals.g_serial_from IS NOT NULL
             OR inv_mwb_globals.g_tree_serial_attr_query IS NOT NULL
             OR inv_mwb_globals.g_unit_number IS NOT NULL
            )
            AND inv_mwb_globals.g_lpn_from IS NULL
            AND inv_mwb_globals.g_lpn_to IS NULL
            AND nvl(inv_mwb_globals.g_prepacked,1) = 1
           ) THEN
        IF inv_mwb_globals.g_tree_mat_loc_id = 2
        OR inv_mwb_globals.g_chk_receiving = 1 THEN
          table_required  := ' mtl_rcv_serial_oh_v v ';
        ELSIF(inv_mwb_globals.g_status_id IS NULL) THEN
          table_required  := ' mtl_onhand_serial_mwb_v v ';
            IF is_grade_t = TRUE THEN                       -- NSRIVAST, INVCONV
               table_required  := ' mtl_onhand_serial_v v ';  -- NSRIVAST, INVCONV
            END IF ;
        ELSE
          table_required  := ' mtl_onhand_serial_v v ';
        END IF;

	--bug 6633612
	IF (inv_mwb_globals.g_shipment_header_id is not null) THEN
		table_required  := table_required || ' , rcv_transactions rt, mtl_material_transactions mmt ';
	END IF;
	--bug 6633612

        IF (inv_mwb_globals.g_tree_lot_attr_query IS NULL AND inv_mwb_globals.g_parent_lot IS NULL
        AND inv_mwb_globals.g_supplier_lot_from IS NULL AND inv_mwb_globals.g_supplier_lot_to IS NULL)		--BUG 7556505
           AND inv_mwb_globals.g_tree_serial_attr_query IS NULL THEN
          query_str  := query_str || ' SELECT v.organization_id from ' || table_required;
          query_str  := query_str || ' WHERE 1=1 ';
        ELSIF (inv_mwb_globals.g_tree_lot_attr_query IS NULL AND inv_mwb_globals.g_parent_lot IS NULL
        AND inv_mwb_globals.g_supplier_lot_from IS NULL AND inv_mwb_globals.g_supplier_lot_to IS NULL)		--BUG 7556505
              AND inv_mwb_globals.g_tree_serial_attr_query IS NOT NULL THEN
          query_str  :=
                query_str
             || ' SELECT v.organization_id from'
             || ' (SELECT serial_number serial_num FROM mtl_serial_numbers WHERE 1=1 '
             || inv_mwb_globals.g_tree_serial_attr_query
             || ') msn, '
             || table_required;
          query_str  := query_str || ' WHERE msn.serial_num = v.serial_number ';
        ELSIF (inv_mwb_globals.g_tree_lot_attr_query IS NOT NULL OR inv_mwb_globals.g_parent_lot IS NOT NULL
              OR inv_mwb_globals.g_supplier_lot_from IS NOT NULL OR inv_mwb_globals.g_supplier_lot_to IS NOT NULL)	--BUG 7556505
              AND inv_mwb_globals.g_tree_serial_attr_query IS NULL THEN
          query_str  :=
                query_str
             || ' SELECT v.organization_id from'
             || ' (SELECT lot_number lot_num, parent_lot_number, supplier_lot_number FROM mtl_lot_numbers WHERE 1=1 '		--BUG 7556505
             || inv_mwb_globals.g_tree_lot_attr_query
             || ' ) mln, '
             || table_required;
          query_str  := query_str || ' WHERE mln.lot_num = v.lot_number ';
	       	--BUG 7556505
		   IF inv_mwb_globals.g_parent_lot IS NOT NULL THEN
		       query_str  := query_str || ' AND mln.parent_lot_number = :parent_lot ';
	           END IF;
		--BUG 7556505
                /* Bug 8396954 added below code for supplier_lot_number */
                IF (inv_mwb_globals.g_supplier_lot_from IS NOT NULL AND
                    inv_mwb_globals.g_supplier_lot_to IS NOT NULL AND
                    inv_mwb_globals.g_supplier_lot_from = inv_mwb_globals.g_supplier_lot_to) THEN
                    query_str  := query_str || ' AND mln.supplier_lot_number = :supplier_lot_f ';
                END IF;

                IF (inv_mwb_globals.g_supplier_lot_from IS NOT NULL AND
	            inv_mwb_globals.g_supplier_lot_from <> NVL(inv_mwb_globals.g_supplier_lot_to, -1) ) THEN
                    query_str  := query_str || ' AND mln.supplier_lot_number >= :supplier_lot_f ';
                END IF;

                IF (inv_mwb_globals.g_supplier_lot_to IS NOT NULL AND
	            inv_mwb_globals.g_supplier_lot_to <> NVL(inv_mwb_globals.g_supplier_lot_from, -1) ) THEN
                    query_str  := query_str || ' AND mln.supplier_lot_number <= :supplier_lot_t ';
                END IF;
                /* End of Bug 8396954 */
	ELSIF (inv_mwb_globals.g_tree_lot_attr_query IS NOT NULL OR inv_mwb_globals.g_parent_lot IS NOT NULL
            OR inv_mwb_globals.g_supplier_lot_from IS NOT NULL OR inv_mwb_globals.g_supplier_lot_to IS NOT NULL)	--BUG 7556505
            AND inv_mwb_globals.g_tree_serial_attr_query IS NOT NULL THEN
          query_str  :=
                query_str
             || ' SELECT v.organization_id from'
             || ' (SELECT lot_number lot_num, parent_lot_number, supplier_lot_number FROM mtl_lot_numbers WHERE 1=1 '		--BUG 7556505
             || inv_mwb_globals.g_tree_lot_attr_query
             || ' ) mln, '
             || ' (SELECT serial_number serial_num FROM mtl_serial_numbers WHERE 1=1 '
             || inv_mwb_globals.g_tree_serial_attr_query
             || ' ) msn, '
             || table_required;
          query_str  := query_str || ' WHERE mln.lot_num = v.lot_number ';
	       	--BUG 7556505
		   IF inv_mwb_globals.g_parent_lot IS NOT NULL THEN
		       query_str  := query_str || ' AND mln.parent_lot_number = :parent_lot ';
	           END IF;
		--BUG 7556505
                /* Bug 8396954 added below code for supplier_lot_number */
                IF (inv_mwb_globals.g_supplier_lot_from IS NOT NULL AND
                    inv_mwb_globals.g_supplier_lot_to IS NOT NULL AND
                    inv_mwb_globals.g_supplier_lot_from = inv_mwb_globals.g_supplier_lot_to) THEN
                    query_str  := query_str || ' AND mln.supplier_lot_number = :supplier_lot_f ';
                END IF;

                IF (inv_mwb_globals.g_supplier_lot_from IS NOT NULL AND
	            inv_mwb_globals.g_supplier_lot_from <> NVL(inv_mwb_globals.g_supplier_lot_to, -1) ) THEN
                    query_str  := query_str || ' AND mln.supplier_lot_number >= :supplier_lot_f ';
                END IF;

                IF (inv_mwb_globals.g_supplier_lot_to IS NOT NULL AND
	            inv_mwb_globals.g_supplier_lot_to <> NVL(inv_mwb_globals.g_supplier_lot_from, -1) ) THEN
                    query_str  := query_str || ' AND mln.supplier_lot_number <= :supplier_lot_t ';
                END IF;
                /* End of Bug 8396954 */
          query_str  := query_str || ' AND msn.serial_num = v.serial_number ';
        END IF;

        --ER(3338592) Changes (If the user gives the value for the Qty then only
        --Group by clause comes in to effect)

        IF inv_mwb_globals.g_qty_from IS NOT NULL OR inv_mwb_globals.g_qty_to IS NOT NULL THEN
           group_str := ' GROUP BY  v.organization_id ';
        END IF;

        IF inv_mwb_globals.g_subinventory_code IS NOT NULL THEN
          query_str  := query_str || ' AND v.subinventory_code = :sub ';
          --ER(3338592) Changes
          IF group_str IS NOT NULL THEN
             group_str := group_str || ' , v.subinventory_code  ' ;
          END IF;
        END IF;

	--bug 6633612
	IF (inv_mwb_globals.g_shipment_header_id is not null) THEN
		query_str := query_str || ' AND rt.shipment_header_id = :shipment_header_id '
					 || ' AND rt.transaction_id = mmt.rcv_transaction_id '
					 || ' AND rt.organization_id = mmt.organization_id '
					 || ' AND rt.transaction_type = ''DELIVER'''
					 || ' AND rt.destination_type_code = ''INVENTORY'''
					 || ' AND mmt.transaction_id = v.last_transaction_id '
					 || ' AND mmt.organization_id = v.organization_id ';

	END IF;
	--bug 6633612

        IF inv_mwb_globals.g_subinventory_code IS NULL AND inv_mwb_globals.g_detailed = 1 THEN   --Bug # 3412002
          --ER(3338592) Changes
          IF group_str IS NOT NULL THEN
             group_str := group_str || ' , v.subinventory_code  ' ;
          END IF;
        END IF;

        IF inv_mwb_globals.g_locator_id IS NOT NULL THEN
          query_str  := query_str || ' AND v.locator_id = :loc_id ';
          --ER(3338592) Changes
          IF group_str IS NOT NULL THEN
             group_str := group_str || '  , v.locator_id  ' ;
          END IF;
        END IF;

  -- NSRIVAST, INVCONV, Start
      IF inv_mwb_globals.g_grade_from_code IS NOT NULL THEN
         query_str := query_str || ' AND v.grade_code = :grade_f ' ;
      END IF ;
      IF inv_mwb_globals.g_tree_grade_code  IS NOT NULL THEN
         query_str := query_str || ' AND v.grade_code = :grade_c ' ;
      END IF ;
   -- NSRIVAST, INVCONV, End

        IF inv_mwb_globals.g_locator_id IS NULL AND inv_mwb_globals.g_detailed = 1 THEN  --Bug # 3412002
          --ER(3338592) Changes
          IF group_str IS NOT NULL THEN
             group_str := group_str || ' , v.locator_id  ' ;
          END IF;
        END IF;

        IF inv_mwb_globals.g_project_id IS NOT NULL THEN
          query_str  := query_str || ' AND v.project_id = :pr_id ';
          --ER(3338592) Changes
          IF group_str IS NOT NULL THEN
             group_str := group_str || ' , v.project_id  ' ;
          END IF;
        END IF;

        IF inv_mwb_globals.g_task_id IS NOT NULL THEN
          query_str  := query_str || ' AND v.task_id = :ta_id ';
          --ER(3338592) Changes
          IF group_str IS NOT NULL THEN
             group_str := group_str || ' , inv_mwb_globals.g_task_id  ' ;
          END IF;
        END IF;

        IF inv_mwb_globals.g_inventory_item_id IS NOT NULL THEN
          query_str  := query_str || ' AND v.inventory_item_id = :item_id ';
        END IF;

        -- ER(9158529 client)
        IF inv_mwb_globals.g_client_code IS NOT NULL THEN
          query_str := query_str || ' AND v.inventory_item_id in (select DISTINCT inventory_item_id from mtl_system_items_b where wms_deploy.get_client_code(inventory_item_id) = :client_code) ';
        END IF;
        -- ER(9158529 client)

        --Bug # 3411938
        IF (inv_mwb_globals.g_qty_from IS NOT NULL OR inv_mwb_globals.g_qty_to IS NOT NULL)
          AND (NVL(inv_mwb_globals.g_view_by,' ') NOT IN ('LOT' , 'SERIAL'))  THEN
           group_str := group_str || ' , v.inventory_item_id, v.item_description, v.item ,v.uom ' ;
        END IF;

        --ER(3338592) Changes
        IF inv_mwb_globals.g_item_description IS NOT NULL THEN
           query_str := query_str || ' AND v.item_description LIKE :item_description ';
        END IF;

        IF inv_mwb_globals.g_revision IS NOT NULL THEN
          query_str  := query_str || ' AND v.revision = :rev ';
          --ER(3338592) Changes
          IF group_str IS NOT NULL THEN
             group_str := group_str || ' , v.revision  ' ;
          END IF;
        END IF;

        IF inv_mwb_globals.g_cost_group_id IS NOT NULL THEN
          query_str  := query_str || ' AND v.cost_group_id = :cg_id ';
          --ER(3338592) Changes
          IF group_str IS NOT NULL THEN
             group_str := group_str || ' , v.cost_group_id  ' ;
          END IF;
        END IF;

        -- ER(9158529)
        IF inv_mwb_globals.g_category_set_id IS NOT NULL THEN
             query_str := query_str || ' AND v.inventory_item_id in '
                                            || ' (select DISTINCT inventory_item_id from mtl_item_categories '
                                            || ' where organization_id = :organization_id '
                                            || ' and category_set_id = :category_set_id '
                                            || ' and category_id = nvl(:category_id, category_id)) ' ;
        END IF;
        -- ER(9158529)

        IF inv_mwb_globals.g_lot_from IS NOT NULL THEN
          query_str  := query_str || ' AND v.lot_number >= :lot_f ';
        END IF;

        IF inv_mwb_globals.g_lot_to IS NOT NULL THEN
          query_str  := query_str || ' AND v.lot_number <= :lot_t ';
        END IF;

        IF inv_mwb_globals.g_serial_from IS NOT NULL THEN
          query_str  := query_str || ' AND v.serial_number >= :serial_f ';
        END IF;

        IF inv_mwb_globals.g_serial_to IS NOT NULL THEN
          query_str  := query_str || ' AND v.serial_number <= :serial_t ';
        END IF;

        IF inv_mwb_globals.g_unit_number IS NOT NULL THEN
          query_str  := query_str || ' AND v.unit_number=:un_id ';
        END IF;

        -- Onhand Material Status Support: If status is tracked at onhand level then check for status
        -- from serial table (MSN)
        if (l_default_status_id is not null) then
          IF (inv_mwb_globals.g_status_id IS NOT NULL OR inv_mwb_globals.g_only_subinventory_status = 1)
          AND inv_mwb_globals.g_tree_mat_loc_id <> 2
             OR inv_mwb_globals.g_only_subinventory_status = 1 THEN
             query_str  := query_str || 'AND v.serial_status_id = :st_id ';
          END IF;
        else
          IF (inv_mwb_globals.g_status_id IS NOT NULL)
             AND inv_mwb_globals.g_tree_mat_loc_id <> 2 THEN
             query_str  := query_str || ' AND (v.subinventory_status_id = :st_id OR v.locator_status_id = :st_id ';
             query_str  := query_str || ' OR v.lot_status_id = :st_id OR v.serial_status_id = :st_id) ';
          END IF;
        end if;

        IF inv_mwb_globals.g_lot_controlled = 2 THEN
          query_str  := query_str || ' AND v.lot_number is not null ';
        ELSIF inv_mwb_globals.g_lot_controlled = 1 THEN
          query_str  := query_str || ' AND v.lot_number is null ';
        END IF;

        IF inv_mwb_globals.g_chk_receiving <> 1 THEN
  	   IF inv_mwb_globals.g_containerized = 1 THEN
             query_str  := query_str || ' AND (v.containerized_flag is null or v.containerized_flag <> 1) ';
           ELSIF inv_mwb_globals.g_containerized = 2 THEN
             query_str  := query_str || ' AND v.containerized_flag = 1 ';
           END IF;
        END IF;


        /*IF inv_mwb_globals.g_site_id IS NOT NULL THEN
           query_str := query_str || ' AND PLANNING_TP_TYPE = 1 ';
           query_str := query_str || ' AND planning_organization_id = :site_id ' ;
         ELSIF inv_mwb_globals.g_vendor_id is NOT NULL THEN
           query_str := query_str || ' AND  PLANNING_TP_TYPE = 1 ';
           query_str := query_str || ' AND  planning_organization_id in ';
           query_str := query_str || ' (select vendor_site_id from po_vendor_sites_all ';
           query_str := query_str || '  where vendor_id = :vendor_id )';
        END IF;*/

        IF (inv_mwb_globals.g_owning_qry_mode = 4) THEN
          query_str  := query_str || ' AND v.owning_organization_id = :own_org ';
          query_str  := query_str || ' AND v.owning_tp_type = 2 ';
        ELSIF(inv_mwb_globals.g_owning_qry_mode = 3) THEN
          query_str  := query_str || ' AND v.owning_organization_id = :own_org ';
          query_str  := query_str || ' AND v.owning_tp_type = 1 ';
        ELSIF(inv_mwb_globals.g_owning_qry_mode = 2) THEN
          query_str  := query_str || ' AND v.owning_tp_type = 1 ';
        END IF;

        IF (inv_mwb_globals.g_planning_query_mode = 4) THEN
          query_str  := query_str || ' AND v.planning_organization_id = :plan_org ';
          query_str  := query_str || ' AND v.planning_tp_type = 2 ';
        ELSIF(inv_mwb_globals.g_planning_query_mode = 3) THEN
          query_str  := query_str || ' AND v.planning_organization_id = :plan_org ';
          query_str  := query_str || ' AND v.planning_tp_type = 1 ';
        ELSIF(inv_mwb_globals.g_planning_query_mode = 2) THEN
          query_str  := query_str || ' AND v.planning_tp_type = 1 ';
        END IF;

        --Bug #3411938
        IF inv_mwb_globals.g_qty_from IS NOT NULL OR inv_mwb_globals.g_qty_to IS NOT NULL THEN
           group_str := group_str || ' , v.planning_organization_id, v.planning_tp_type ';
           group_str := group_str || ' , v.owning_organization_id, v.owning_tp_type ';
           group_str := group_str || ' , v.item_lot_control, v.item_serial_control ';
        END IF;

        IF inv_mwb_globals.g_qty_from IS NOT NULL THEN
           having_str := having_str || ' AND sum(on_hand) >= :qty_from ';
        END IF;

        IF inv_mwb_globals.g_qty_to IS NOT NULL THEN
           having_str := having_str || ' AND sum(on_hand) <= :qty_to ';
        END IF;

        IF inv_mwb_globals.g_qty_from IS NOT NULL OR inv_mwb_globals.g_qty_to IS NOT NULL THEN
           query_str := query_str || 'AND v.organization_id = mp.organization_id  ';
           query_str := query_str || group_str || having_str || ' ) ' ;
        ELSE
          query_str := query_str || 'AND v.organization_id = mp.organization_id ) ';
        END IF;

        IF inv_mwb_globals.g_organization_id IS NOT NULL THEN
          query_str  := query_str || 'and mp.organization_id = :org_id ';
        -- Bug #3411938
        ELSE
          query_str  := query_str || ' and EXISTS ( SELECT 1 ' ;
          query_str  := query_str || ' FROM org_access_view oav ' ;
          query_str  := query_str || ' WHERE oav.organization_id = mp.organization_id ' ;
          query_str  := query_str || ' AND oav.responsibility_id   = :responsibility_id ' ;
          query_str  := query_str || ' AND oav.resp_application_id = :resp_application_id ) ' ;
        END IF;

        query_str  := query_str || ' ORDER BY organization_code ';

      -- Need to use both MTL_ONHAND_TOTAL_V AND MTL_ONHAND_SERIAL_V
      ELSIF(
            inv_mwb_globals.g_serial_from IS NULL
            AND inv_mwb_globals.g_serial_to IS NULL
            AND inv_mwb_globals.g_unit_number IS NULL
            AND inv_mwb_globals.g_tree_serial_attr_query IS NULL
            AND inv_mwb_globals.g_status_id IS NOT NULL
            AND inv_mwb_globals.g_lpn_from IS NULL
            AND inv_mwb_globals.g_lpn_to IS NULL
            AND nvl(inv_mwb_globals.g_prepacked,1) = 1
           ) THEN
        IF (inv_mwb_globals.g_status_id IS NULL) THEN
          table_required  := ' mtl_onhand_total_mwb_v v ';
--         ELSIF is_grade_t = TRUE THEN                     -- NSRIVAST, INVCONV
--           table_required  := ' mtl_onhand_new_lpn_v ';   -- NSRIVAST, INVCONV
        ELSE
          table_required  := ' mtl_onhand_total_v v ';
        END IF;

	--bug 6633612
	IF (inv_mwb_globals.g_shipment_header_id is not null) THEN
		table_required  := table_required || ' , rcv_transactions rt, mtl_material_transactions mmt ';
	END IF;
	--bug 6633612

          IF inv_mwb_globals.g_tree_lot_attr_query IS NULL AND inv_mwb_globals.g_parent_lot IS NULL
          AND inv_mwb_globals.g_supplier_lot_from IS NULL AND inv_mwb_globals.g_supplier_lot_to IS NULL THEN
               query_str  := query_str || 'SELECT v.organization_id from ' || table_required;
               query_str  := query_str || 'WHERE 1=1 ';
          ELSE
               query_str  :=
                   query_str
                || ' SELECT v.organization_id from'
                || ' (SELECT lot_number lot_num, parent_lot_number, supplier_lot_number FROM mtl_lot_numbers WHERE 1=1 '		--BUG 7556505
                || inv_mwb_globals.g_tree_lot_attr_query
                || ' ) mln, '
                || table_required;
               query_str  := query_str || ' WHERE mln.lot_num = v.lot_number ';
	       	--BUG 7556505
		   IF inv_mwb_globals.g_parent_lot IS NOT NULL THEN
		       query_str  := query_str || ' AND mln.parent_lot_number = :parent_lot ';
	           END IF;
		--BUG 7556505
                /* Bug 8396954 added below code for supplier_lot_number */
                IF (inv_mwb_globals.g_supplier_lot_from IS NOT NULL AND
                    inv_mwb_globals.g_supplier_lot_to IS NOT NULL AND
                    inv_mwb_globals.g_supplier_lot_from = inv_mwb_globals.g_supplier_lot_to) THEN
                    query_str  := query_str || ' AND mln.supplier_lot_number = :supplier_lot_f ';
                END IF;

                IF (inv_mwb_globals.g_supplier_lot_from IS NOT NULL AND
	            inv_mwb_globals.g_supplier_lot_from <> NVL(inv_mwb_globals.g_supplier_lot_to, -1) ) THEN
                    query_str  := query_str || ' AND mln.supplier_lot_number >= :supplier_lot_f ';
                END IF;

                IF (inv_mwb_globals.g_supplier_lot_to IS NOT NULL AND
	            inv_mwb_globals.g_supplier_lot_to <> NVL(inv_mwb_globals.g_supplier_lot_from, -1) ) THEN
                    query_str  := query_str || ' AND mln.supplier_lot_number <= :supplier_lot_t ';
                END IF;
                /* End of Bug 8396954 */
          END IF;

        --ER(3338592) Changes (If the user gives the value for the Qty then only
        --Group by clause comes in to effect)

        IF inv_mwb_globals.g_qty_from IS NOT NULL OR inv_mwb_globals.g_qty_to IS NOT NULL THEN
           group_str := ' GROUP BY  v.organization_id ';
        END IF;

	--bug 6633612
	IF (inv_mwb_globals.g_shipment_header_id is not null) THEN
		query_str := query_str || ' AND rt.shipment_header_id = :shipment_header_id '
					 || ' AND rt.transaction_id = mmt.rcv_transaction_id '
					 || ' AND rt.organization_id = mmt.organization_id '
					 || ' AND rt.transaction_type = ''DELIVER'''
					 || ' AND rt.destination_type_code = ''INVENTORY'''
					 || ' AND mmt.transaction_id = v.create_transaction_id '
					 || ' AND mmt.organization_id = v.organization_id ';

	END IF;
	--bug 6633612

        IF inv_mwb_globals.g_subinventory_code IS NOT NULL THEN
          query_str  := query_str || 'AND v.subinventory_code = :sub ';
          --ER(3338592) Changes
          IF group_str IS NOT NULL THEN
             group_str := group_str || ' , v.subinventory_code  ' ;
          END IF;
        END IF;

        IF inv_mwb_globals.g_subinventory_code IS NULL AND inv_mwb_globals.g_detailed = 1 THEN   --Bug # 3412002
          --ER(3338592) Changes
          IF group_str IS NOT NULL THEN
             group_str := group_str || ' , v.subinventory_code  ' ;
          END IF;
        END IF;

        IF inv_mwb_globals.g_locator_id IS NOT NULL THEN
          query_str  := query_str || 'AND v.locator_id = :loc_id ';
          --ER(3338592) Changes
          IF group_str IS NOT NULL THEN
             group_str := group_str || ' , v.locator_id  ' ;
          END IF;
        END IF;

        IF inv_mwb_globals.g_locator_id IS NULL AND inv_mwb_globals.g_detailed = 1 THEN  --Bug # 3412002
          --ER(3338592) Changes
          IF group_str IS NOT NULL THEN
             group_str := group_str || ' , v.locator_id  ' ;
          END IF;
        END IF;

  -- NSRIVAST, INVCONV, Start
      IF inv_mwb_globals.g_grade_from_code IS NOT NULL THEN
         query_str := query_str || ' AND v.grade_code = :grade_f ' ;
      END IF ;
      IF inv_mwb_globals.g_tree_grade_code  IS NOT NULL THEN
         query_str := query_str || ' AND v.grade_code = :grade_c ' ;
      END IF ;
   -- NSRIVAST, INVCONV, End

        IF inv_mwb_globals.g_project_id IS NOT NULL THEN
          query_str  := query_str || ' AND v.project_id = :pr_id ';
          --ER(3338592) Changes
          IF group_str IS NOT NULL THEN
             group_str := group_str || ' , v.project_id  ' ;
          END IF;
        END IF;

        IF inv_mwb_globals.g_task_id IS NOT NULL THEN
          query_str  := query_str || ' AND v.task_id = :ta_id ';
          --ER(3338592) Changes
          IF group_str IS NOT NULL THEN
             group_str := group_str || ' , inv_mwb_globals.g_task_id  ' ;
          END IF;
        END IF;

        IF inv_mwb_globals.g_inventory_item_id IS NOT NULL THEN
          query_str  := query_str || 'AND v.inventory_item_id = :item_id ';
        END IF;

        -- ER(9158529 client)
        IF inv_mwb_globals.g_client_code IS NOT NULL THEN
          query_str := query_str || ' AND v.inventory_item_id in (select DISTINCT inventory_item_id from mtl_system_items_b where wms_deploy.get_client_code(inventory_item_id) = :client_code) ';
        END IF;
        -- ER(9158529 client)

        --Bug # 3411938
        IF (inv_mwb_globals.g_qty_from IS NOT NULL OR inv_mwb_globals.g_qty_to IS NOT NULL)
          AND (NVL(inv_mwb_globals.g_view_by,' ') NOT IN ('LOT' , 'SERIAL'))  THEN
           group_str := group_str || ' , v.inventory_item_id, v.item_description, v.item ,v.uom ' ;
        END IF;

        --ER(3338592) Changes
        IF inv_mwb_globals.g_item_description IS NOT NULL THEN
           query_str := query_str || ' AND v.item_description LIKE :item_description ';
        END IF;

        IF inv_mwb_globals.g_revision IS NOT NULL THEN
          query_str  := query_str || 'AND v.revision = :rev ';
          --ER(3338592) Changes
          IF group_str IS NOT NULL THEN
             group_str := group_str || ' , v.revision  ' ;
          END IF;
        END IF;

        IF inv_mwb_globals.g_cost_group_id IS NOT NULL THEN
          query_str  := query_str || 'AND v.cost_group_id = :cg_id ';
          --ER(3338592) Changes
          IF group_str IS NOT NULL THEN
             group_str := group_str || ' , v.cost_group_id  ' ;
          END IF;
        END IF;

        -- ER(9158529)
        IF inv_mwb_globals.g_category_set_id IS NOT NULL THEN
             query_str := query_str || ' AND v.inventory_item_id in '
                                         || ' (select DISTINCT inventory_item_id from mtl_item_categories '
                                         || ' where organization_id = :organization_id '
                                         || ' and category_set_id = :category_set_id '
                                         || '  and category_id = nvl(:category_id, category_id)) ' ;
        END IF;
        -- ER(9158529)

        IF inv_mwb_globals.g_lot_from IS NOT NULL THEN
          query_str  := query_str || 'AND v.lot_number >= :lot_f ';
        END IF;

        IF inv_mwb_globals.g_lot_to IS NOT NULL THEN
          query_str  := query_str || 'AND v.lot_number <= :lot_t ';
        END IF;

        IF inv_mwb_globals.g_unit_number IS NOT NULL THEN
          query_str  := query_str || ' AND v.unit_number=:un_id ';
        END IF;

        IF inv_mwb_globals.g_lot_controlled = 2 THEN
          query_str  := query_str || 'AND v.lot_number is not null ';
        ELSIF inv_mwb_globals.g_lot_controlled = 1 THEN
          query_str  := query_str || 'AND v.lot_number is null ';
        END IF;

        -- Onhand Material Status Support: If status is tracked at onhand level then check for status
        -- from onhand table (MOQD)
        if (l_default_status_id is not null) then
          IF inv_mwb_globals.g_status_id IS NOT NULL OR inv_mwb_globals.g_only_subinventory_status = 1 THEN
             query_str  := query_str || 'AND v.onhand_status_id = :st_id ';
          END IF;
        else
          IF inv_mwb_globals.g_status_id IS NOT NULL THEN
            query_str  := query_str || 'AND (v.subinventory_status_id = :st_id ';
            query_str  := query_str || 'OR v.locator_status_id = :st_id OR v.lot_status_id = :st_id) ';
          END IF;
        end if;

        IF inv_mwb_globals.g_chk_receiving <> 1 THEN
           IF inv_mwb_globals.g_containerized = 1 THEN
              query_str  := query_str || ' AND (v.containerized_flag is null or v.containerized_flag <> 1) ';
           ELSIF inv_mwb_globals.g_containerized = 2 THEN
              query_str  := query_str || ' AND v.containerized_flag = 1 ';
           END IF;
        END IF;

        IF inv_mwb_globals.g_serial_controlled = 1 THEN
          --query_str  := query_str || 'AND serial_number_control_code not in (2,5) ';
          query_str  := query_str || 'AND v.item_serial_control not in (2,5) ';
        ELSIF inv_mwb_globals.g_serial_controlled = 2 THEN
          --query_str  := query_str || 'AND serial_number_control_code in (2,5) ';
          query_str  := query_str || 'AND v.item_serial_control in (2,5) ';
        END IF;

        /*IF inv_mwb_globals.g_site_id IS NOT NULL THEN
           query_str := query_str || ' AND PLANNING_TP_TYPE = 1 ';
           query_str := query_str || ' AND planning_organization_id = :site_id ' ;
         ELSIF inv_mwb_globals.g_vendor_id is NOT NULL THEN
           query_str := query_str || ' AND  PLANNING_TP_TYPE = 1 ';
           query_str := query_str || ' AND  planning_organization_idanization_id in ';
           query_str := query_str || ' (select vendor_site_id from po_vendor_sites_all ';
           query_str := query_str || '  where vendor_id = :vendor_id )';
        END IF;*/

        IF (inv_mwb_globals.g_owning_qry_mode = 4) THEN
          query_str  := query_str || ' AND v.owning_organization_id = :own_org ';
          query_str  := query_str || ' AND v.owning_tp_type = 2 ';
        ELSIF(inv_mwb_globals.g_owning_qry_mode = 3) THEN
          query_str  := query_str || ' AND v.owning_organization_id = :own_org ';
          query_str  := query_str || ' AND v.owning_tp_type = 1 ';
        ELSIF(inv_mwb_globals.g_owning_qry_mode = 2) THEN
          query_str  := query_str || ' AND v.owning_tp_type = 1 ';
        END IF;

        IF (inv_mwb_globals.g_planning_query_mode = 4) THEN
          query_str  := query_str || ' AND v.planning_organization_id = :plan_org ';
          query_str  := query_str || ' AND v.planning_tp_type = 2 ';
        ELSIF(inv_mwb_globals.g_planning_query_mode = 3) THEN
          query_str  := query_str || ' AND v.planning_organization_id = :plan_org ';
          query_str  := query_str || ' AND v.planning_tp_type = 1 ';
        ELSIF(inv_mwb_globals.g_planning_query_mode = 2) THEN
          query_str  := query_str || ' AND v.planning_tp_type = 1 ';
        END IF;

        --Bug #3411938
        IF inv_mwb_globals.g_qty_from IS NOT NULL OR inv_mwb_globals.g_qty_to IS NOT NULL THEN
           group_str := group_str || ' , v.planning_organization_id, v.planning_tp_type ';
           group_str := group_str || ' , v.owning_organization_id, v.owning_tp_type ';
           group_str := group_str || ' , v.item_lot_control, v.item_serial_control ';
        END IF;

        IF inv_mwb_globals.g_qty_from IS NOT NULL THEN
           having_str := having_str || ' AND sum(on_hand) >= :qty_from ';
        END IF;

        IF inv_mwb_globals.g_qty_to IS NOT NULL THEN
           having_str := having_str || ' AND sum(on_hand) <= :qty_to ';
        END IF;

        IF inv_mwb_globals.g_qty_from IS NOT NULL OR inv_mwb_globals.g_qty_to IS NOT NULL THEN
          query_str := query_str || 'AND v.organization_id = mp.organization_id  ';
          query_str := query_str || group_str || having_str || '  ' ;
        ELSE
          query_str := query_str || 'AND v.organization_id = mp.organization_id  ';
        END IF;

        query_str  := query_str || 'UNION ALL ';

        --Reinitializing the variable
        having_str := ' HAVING 1=1 ' ;

        IF (inv_mwb_globals.g_status_id IS NULL) THEN
          table_required  := ' mtl_onhand_serial_mwb_v v ';
        ELSE
          table_required  := ' mtl_onhand_serial_v v ';
        END IF;

	--bug 6633612
	IF (inv_mwb_globals.g_shipment_header_id is not null) THEN
		table_required  := table_required || ' , rcv_transactions rt, mtl_material_transactions mmt ';
	END IF;
	--bug 6633612

        IF (inv_mwb_globals.g_tree_lot_attr_query IS NULL AND inv_mwb_globals.g_parent_lot IS NULL
            AND inv_mwb_globals.g_supplier_lot_from IS NULL AND inv_mwb_globals.g_supplier_lot_to IS NULL)
           AND inv_mwb_globals.g_tree_serial_attr_query IS NULL THEN
          query_str  := query_str || 'SELECT v.organization_id from ' || table_required;
          query_str  := query_str || 'WHERE 1=1 ';
        ELSIF (inv_mwb_globals.g_tree_lot_attr_query IS NOT NULL OR inv_mwb_globals.g_parent_lot IS NOT NULL
              OR inv_mwb_globals.g_supplier_lot_from IS NOT NULL OR inv_mwb_globals.g_supplier_lot_to IS NOT NULL)
              AND inv_mwb_globals.g_tree_serial_attr_query IS NULL THEN
          query_str  :=
                query_str
             || 'SELECT v.organization_id from'
             || '(SELECT lot_number lot_num, parent_lot_number, supplier_lot_number FROM mtl_lot_numbers WHERE 1=1 '
             || inv_mwb_globals.g_tree_lot_attr_query
             || ') mln, '
             || table_required;
          query_str  := query_str || ' WHERE mln.lot_num = v.lot_number ';
	       	--BUG 7556505
		   IF inv_mwb_globals.g_parent_lot IS NOT NULL THEN
		       query_str  := query_str || ' AND mln.parent_lot_number = :parent_lot ';
	           END IF;
		--BUG 7556505
                /* Bug 8396954 added below code for supplier_lot_number */
                IF (inv_mwb_globals.g_supplier_lot_from IS NOT NULL AND
                    inv_mwb_globals.g_supplier_lot_to IS NOT NULL AND
                    inv_mwb_globals.g_supplier_lot_from = inv_mwb_globals.g_supplier_lot_to) THEN
                    query_str  := query_str || ' AND mln.supplier_lot_number = :supplier_lot_f ';
                END IF;

                IF (inv_mwb_globals.g_supplier_lot_from IS NOT NULL AND
	            inv_mwb_globals.g_supplier_lot_from <> NVL(inv_mwb_globals.g_supplier_lot_to, -1) ) THEN
                    query_str  := query_str || ' AND mln.supplier_lot_number >= :supplier_lot_f ';
                END IF;

                IF (inv_mwb_globals.g_supplier_lot_to IS NOT NULL AND
	            inv_mwb_globals.g_supplier_lot_to <> NVL(inv_mwb_globals.g_supplier_lot_from, -1) ) THEN
                    query_str  := query_str || ' AND mln.supplier_lot_number <= :supplier_lot_t ';
                END IF;
                /* End of Bug 8396954 */
        END IF;

        --ER(3338592) Changes (If the user gives the value for the Qty then only
        --Group by clause comes in to effect)

        IF inv_mwb_globals.g_qty_from IS NOT NULL OR inv_mwb_globals.g_qty_to IS NOT NULL THEN
           group_str := ' GROUP BY  v.organization_id ';
        END IF;

        IF inv_mwb_globals.g_subinventory_code IS NOT NULL THEN
          query_str  := query_str || 'AND v.subinventory_code = :sub ';
          --ER(3338592) Changes
          IF group_str IS NOT NULL THEN
             group_str := group_str || ' , v.subinventory_code  ' ;
          END IF;
        END IF;

	--bug 6633612
	IF (inv_mwb_globals.g_shipment_header_id is not null) THEN
		query_str := query_str || ' AND rt.shipment_header_id = :shipment_header_id '
					 || ' AND rt.transaction_id = mmt.rcv_transaction_id '
					 || ' AND rt.organization_id = mmt.organization_id '
					 || ' AND rt.transaction_type = ''DELIVER'''
					 || ' AND rt.destination_type_code = ''INVENTORY'''
					 || ' AND mmt.transaction_id = v.last_transaction_id '
					 || ' AND mmt.organization_id = v.organization_id ';

	END IF;
	--bug 6633612

        IF inv_mwb_globals.g_subinventory_code IS NULL AND inv_mwb_globals.g_detailed = 1 THEN   --Bug # 3412002
          --ER(3338592) Changes
          IF group_str IS NOT NULL THEN
             group_str := group_str || ' , v.subinventory_code  ' ;
          END IF;
        END IF;

        IF inv_mwb_globals.g_locator_id IS NOT NULL THEN
          query_str  := query_str || 'AND v.locator_id = :loc_id ';
          --ER(3338592) Changes
          IF group_str IS NOT NULL THEN
             group_str := group_str || ' , v.locator_id  ' ;
          END IF;
        END IF;

        IF inv_mwb_globals.g_locator_id IS NULL AND inv_mwb_globals.g_detailed = 1 THEN  --Bug # 3412002
          --ER(3338592) Changes
          IF group_str IS NOT NULL THEN
             group_str := group_str || ' , v.locator_id  ' ;
          END IF;
        END IF;

        IF inv_mwb_globals.g_inventory_item_id IS NOT NULL THEN
          query_str  := query_str || 'AND v.inventory_item_id = :item_id ';
        END IF;

        -- ER(9158529 client)
        IF inv_mwb_globals.g_client_code IS NOT NULL THEN
          query_str := query_str || ' AND v.inventory_item_id in (select DISTINCT inventory_item_id from mtl_system_items_b where wms_deploy.get_client_code(inventory_item_id) = :client_code) ';
        END IF;
        -- ER(9158529 client)

        --Bug # 3411938
        IF (inv_mwb_globals.g_qty_from IS NOT NULL OR inv_mwb_globals.g_qty_to IS NOT NULL)
          AND (NVL(inv_mwb_globals.g_view_by,' ') NOT IN ('LOT' , 'SERIAL'))  THEN
           group_str := group_str || ' , v.inventory_item_id, v.item_description, v.item ,v.uom ' ;
        END IF;

        --ER(3338592) Changes
        IF inv_mwb_globals.g_item_description IS NOT NULL THEN
           query_str := query_str || ' AND v.item_description LIKE :item_description ';
        END IF;

        IF inv_mwb_globals.g_revision IS NOT NULL THEN
          query_str  := query_str || 'AND v.revision = :rev ';
          --ER(3338592) Changes
          IF group_str IS NOT NULL THEN
             group_str := group_str || ' , v.revision  ' ;
          END IF;
        END IF;

        IF inv_mwb_globals.g_cost_group_id IS NOT NULL THEN
          query_str  := query_str || ' AND v.cost_group_id = :cg_id ';
          --ER(3338592) Changes
          IF group_str IS NOT NULL THEN
             group_str := group_str || ' , v.cost_group_id  ' ;
          END IF;
        END IF;

        -- ER(9158529)
        IF inv_mwb_globals.g_category_set_id IS NOT NULL THEN
             query_str := query_str || ' AND v.inventory_item_id in '
                                        || ' (select DISTINCT inventory_item_id from mtl_item_categories '
                                        || ' where organization_id = :organization_id '
                                        || ' and category_set_id = :category_set_id '
                                        || ' and category_id = nvl(:category_id, category_id)) ' ;
        END IF;
        -- ER(9158529)

        IF inv_mwb_globals.g_lot_from IS NOT NULL THEN
          query_str  := query_str || ' AND v.lot_number >= :lot_f ';
        END IF;

        IF inv_mwb_globals.g_lot_to IS NOT NULL THEN
          query_str  := query_str || ' AND v.lot_number <= :lot_t ';
        END IF;

        IF inv_mwb_globals.g_serial_from IS NOT NULL THEN
          query_str  := query_str || ' AND v.serial_number >= :serial_f ';
        END IF;

        IF inv_mwb_globals.g_serial_to IS NOT NULL THEN
          query_str  := query_str || ' AND v.serial_number <= :serial_t ';
        END IF;

        -- Onhand Material Status Support: If status is tracked at onhand level then check for status
        -- from serial table (MSN)
        if (l_default_status_id is not null) then
          IF inv_mwb_globals.g_status_id IS NOT NULL OR inv_mwb_globals.g_only_subinventory_status = 1 THEN
             query_str  := query_str || 'AND v.serial_status_id = :st_id ';
          END IF;
        else
          IF inv_mwb_globals.g_status_id IS NOT NULL THEN
            query_str  := query_str || 'AND (v.subinventory_status_id = :st_id OR v.locator_status_id = :st_id ';
            query_str  := query_str || 'OR v.lot_status_id = :st_id OR v.serial_status_id = :st_id) ';
          END IF;
        end if;

        IF inv_mwb_globals.g_lot_controlled = 2 THEN
          query_str  := query_str || 'AND v.lot_number is not null ';
        ELSIF inv_mwb_globals.g_lot_controlled = 1 THEN
          query_str  := query_str || 'AND v.lot_number is null ';
        END IF;

        IF inv_mwb_globals.g_chk_receiving <> 1 THEN
           IF inv_mwb_globals.g_containerized = 1 THEN
              query_str  := query_str || ' AND (v.containerized_flag is null or v.containerized_flag <> 1) ';
           ELSIF inv_mwb_globals.g_containerized = 2 THEN
              query_str  := query_str || ' AND v.containerized_flag = 1 ';
           END IF;
        END IF;

        IF inv_mwb_globals.g_qty_from IS NOT NULL OR inv_mwb_globals.g_qty_to IS NOT NULL THEN
           group_str := group_str || ' , v.planning_organization_id, v.planning_tp_type ';
           group_str := group_str || ' , v.owning_organization_id, v.owning_tp_type ';
           group_str := group_str || ' , v.item_lot_control, v.item_serial_control ';
        END IF;

        IF inv_mwb_globals.g_qty_from IS NOT NULL THEN
           having_str := having_str || ' AND sum(on_hand) >= :qty_from ';
        END IF;

        IF inv_mwb_globals.g_qty_to IS NOT NULL THEN
           having_str := having_str || ' AND sum(on_hand) <= :qty_to ';
        END IF;

        IF inv_mwb_globals.g_qty_from IS NOT NULL OR inv_mwb_globals.g_qty_to IS NOT NULL THEN
           query_str := query_str || ' AND v.organization_id = mp.organization_id  ';
           query_str := query_str || group_str || having_str || ' ) ' ;
        ELSE
           query_str := query_str || ' AND v.organization_id = mp.organization_id ) ';
        END IF;

        IF inv_mwb_globals.g_organization_id IS NOT NULL THEN
          query_str  := query_str || ' and mp.organization_id = :org_id ';
        -- Bug # 3411938
        ELSE
          query_str  := query_str || ' and EXISTS ( SELECT 1 ' ;
          query_str  := query_str || ' FROM org_access_view oav ' ;
          query_str  := query_str || ' WHERE oav.organization_id = mp.organization_id ' ;
          query_str  := query_str || ' AND oav.responsibility_id   = :responsibility_id ' ;
          query_str  := query_str || ' AND oav.resp_application_id = :resp_application_id ) ' ;
        END IF;

        query_str  := query_str || ' ORDER BY organization_code ';

      -- Need to use MTL_ONHAND_LPN_V
      ELSIF(inv_mwb_globals.g_lpn_from IS NOT NULL
            OR inv_mwb_globals.g_lpn_to IS NOT NULL
            OR nvl(inv_mwb_globals.g_prepacked,1) <> 1) THEN
        IF inv_mwb_globals.g_tree_mat_loc_id = 2
        OR inv_mwb_globals.g_chk_receiving = 1 THEN
          table_required  := ' mtl_onhand_lpn_mwb_v mol ';
        ELSIF(inv_mwb_globals.g_status_id IS NULL) THEN
          IF (inv_mwb_globals.g_prepacked <> 1) AND (inv_mwb_globals.g_prepacked <> 9) AND (inv_mwb_globals.g_prepacked <> 11) THEN
            table_required  := ' mtl_onhand_lpn_mwb_v mol ';
              IF is_grade_t = TRUE THEN                              -- NSRIVAST, INVCONV
                  table_required  := ' mtl_onhand_new_lpn_v mol ';   -- NSRIVAST, INVCONV
              END IF;
          ELSE
            table_required  := ' mtl_onhand_new_lpn_mwb_v mol ';
          END IF;
        ELSE
          IF (inv_mwb_globals.g_prepacked <> 1) AND (inv_mwb_globals.g_prepacked <> 9) AND (inv_mwb_globals.g_prepacked <> 11) THEN
            table_required  := ' mtl_onhand_lpn_v mol ';
              IF is_grade_t = TRUE THEN                              -- NSRIVAST, INVCONV
                  table_required  := ' mtl_onhand_new_lpn_v mol ';   -- NSRIVAST, INVCONV
              END IF;
          ELSE
            table_required  := ' mtl_onhand_new_lpn_v mol ';
          END IF;
        END IF;

        query_str  := query_str || ' SELECT organization_id from ' || table_required;

        IF inv_mwb_globals.g_lpn_from IS NOT NULL
           OR inv_mwb_globals.g_lpn_to IS NOT NULL THEN
          query_str  := query_str || ', (select outermost_lpn_id from wms_license_plate_numbers wlpn ';
          query_str  := query_str || ' WHERE 1=1 ';

          IF inv_mwb_globals.g_tree_mat_loc_id = 2
	  OR inv_mwb_globals.g_chk_receiving = 1 THEN
            query_str  := query_str || ' AND lpn_context = 3 ';
          ELSIF inv_mwb_globals.g_prepacked IS NULL THEN
            query_str  := query_str || ' AND (lpn_context=1  or lpn_context=9 or lpn_context=11 )';
          ELSIF inv_mwb_globals.g_prepacked = 1 THEN
            query_str  := query_str || ' AND lpn_context = 1 ';
          ELSIF inv_mwb_globals.g_prepacked <> 1
                AND inv_mwb_globals.g_prepacked <> 999
                AND inv_mwb_globals.g_prepacked IS NOT NULL THEN
            query_str  := query_str || ' AND lpn_context = :prepacked ';
          END IF;

          IF inv_mwb_globals.g_locator_id IS NOT NULL THEN
            query_str  := query_str || ' AND wlpn.locator_id = :loc_id ';
          END IF;

          IF inv_mwb_globals.g_subinventory_code IS NOT NULL THEN
            query_str  := query_str || ' AND wlpn.subinventory_code = :sub ';
          END IF;

          IF inv_mwb_globals.g_organization_id IS NOT NULL THEN
            query_str  := query_str || ' AND wlpn.organization_id = :org_id ';
          END IF;

          IF inv_mwb_globals.g_lpn_from IS NOT NULL
             OR inv_mwb_globals.g_lpn_to IS NOT NULL THEN
            IF inv_mwb_globals.g_lpn_from IS NOT NULL
               AND inv_mwb_globals.g_lpn_to IS NULL THEN
              query_str  := query_str || ' and license_plate_number >= :lpn_f ';
            ELSIF inv_mwb_globals.g_lpn_from IS NULL
                  AND inv_mwb_globals.g_lpn_to IS NOT NULL THEN
              query_str  := query_str || ' and license_plate_number <= :lpn_t ';
            ELSIF inv_mwb_globals.g_lpn_from IS NOT NULL
                  AND inv_mwb_globals.g_lpn_to IS NOT NULL THEN
                  --bugfix#3646484
                  IF (inv_mwb_globals.g_lpn_from = inv_mwb_globals.g_lpn_to) THEN
                   --User is querying for single LPN so converted the range query to equality query
                   query_str := query_str || 'and license_plate_number = :lpn_f ';
                  ELSE
                    query_str  := query_str || ' and license_plate_number >= :lpn_f ';
                    query_str  := query_str || ' and license_plate_number <= :lpn_t ';
                  END IF;
            END IF;
          END IF;

          query_str  := query_str || 'group by wlpn.outermost_lpn_id) X ';
        END IF;

        IF (inv_mwb_globals.g_tree_lot_attr_query IS NULL AND inv_mwb_globals.g_parent_lot IS NULL
            AND inv_mwb_globals.g_supplier_lot_from IS NULL AND inv_mwb_globals.g_supplier_lot_to IS NULL)
            AND inv_mwb_globals.g_tree_serial_attr_query IS NULL THEN
          query_str  := query_str || 'WHERE 1=1 ';
        ELSIF (inv_mwb_globals.g_tree_lot_attr_query IS NULL AND inv_mwb_globals.g_parent_lot IS NULL
            AND inv_mwb_globals.g_supplier_lot_from IS NULL AND inv_mwb_globals.g_supplier_lot_to IS NULL)
              AND inv_mwb_globals.g_tree_serial_attr_query IS NOT NULL THEN
          query_str  :=
                     query_str || ', (SELECT serial_number serial_num FROM mtl_serial_numbers WHERE 1=1 ' || inv_mwb_globals.g_tree_serial_attr_query
                     || ') msn ';
          query_str  := query_str || 'WHERE msn.serial_num = serial_number ';
        ELSIF (inv_mwb_globals.g_tree_lot_attr_query IS NOT NULL OR inv_mwb_globals.g_parent_lot IS NOT NULL
                OR inv_mwb_globals.g_supplier_lot_from IS NOT NULL OR inv_mwb_globals.g_supplier_lot_to IS NOT NULL)
              AND inv_mwb_globals.g_tree_serial_attr_query IS NULL THEN
          query_str  := query_str || ', (SELECT lot_number lot_num, parent_lot_number, supplier_lot_number FROM mtl_lot_numbers WHERE 1=1 ' || inv_mwb_globals.g_tree_lot_attr_query || ') mln ';
          query_str  := query_str || 'WHERE mln.lot_num = lot_number ';
 		--BUG 7556505
		   IF inv_mwb_globals.g_parent_lot IS NOT NULL THEN
		       query_str  := query_str || ' AND mln.parent_lot_number = :parent_lot ';
	           END IF;
		--BUG 7556505
                /* Bug 8396954 added below code for supplier_lot_number */
                IF (inv_mwb_globals.g_supplier_lot_from IS NOT NULL AND
                    inv_mwb_globals.g_supplier_lot_to IS NOT NULL AND
                    inv_mwb_globals.g_supplier_lot_from = inv_mwb_globals.g_supplier_lot_to) THEN
                    query_str  := query_str || ' AND mln.supplier_lot_number = :supplier_lot_f ';
                END IF;

                IF (inv_mwb_globals.g_supplier_lot_from IS NOT NULL AND
	            inv_mwb_globals.g_supplier_lot_from <> NVL(inv_mwb_globals.g_supplier_lot_to, -1) ) THEN
                    query_str  := query_str || ' AND mln.supplier_lot_number >= :supplier_lot_f ';
                END IF;

                IF (inv_mwb_globals.g_supplier_lot_to IS NOT NULL AND
	            inv_mwb_globals.g_supplier_lot_to <> NVL(inv_mwb_globals.g_supplier_lot_from, -1) ) THEN
                    query_str  := query_str || ' AND mln.supplier_lot_number <= :supplier_lot_t ';
                END IF;
                /* End of Bug 8396954 */
        ELSIF (inv_mwb_globals.g_tree_lot_attr_query IS NOT NULL OR inv_mwb_globals.g_parent_lot IS NOT NULL
                OR inv_mwb_globals.g_supplier_lot_from IS NOT NULL OR inv_mwb_globals.g_supplier_lot_to IS NOT NULL)
              AND inv_mwb_globals.g_tree_serial_attr_query IS NOT NULL THEN
          query_str  :=
                query_str
             || ', (SELECT lot_number lot_num, parent_lot_number, supplier_lot_number FROM mtl_lot_numbers WHERE 1=1 '
             || inv_mwb_globals.g_tree_lot_attr_query
             || ') mln '
             || ', (SELECT serial_number serial_num FROM mtl_serial_numbers WHERE 1=1 '
             || inv_mwb_globals.g_tree_serial_attr_query
             || ') msn ';
          query_str  := query_str || 'WHERE mln.lot_num = lot_number ';
 		--BUG 7556505
		   IF inv_mwb_globals.g_parent_lot IS NOT NULL THEN
		       query_str  := query_str || ' AND mln.parent_lot_number = :parent_lot ';
	           END IF;
		--BUG 7556505
                /* Bug 8396954 added below code for supplier_lot_number */
                IF (inv_mwb_globals.g_supplier_lot_from IS NOT NULL AND
                    inv_mwb_globals.g_supplier_lot_to IS NOT NULL AND
                    inv_mwb_globals.g_supplier_lot_from = inv_mwb_globals.g_supplier_lot_to) THEN
                    query_str  := query_str || ' AND mln.supplier_lot_number = :supplier_lot_f ';
                END IF;

                IF (inv_mwb_globals.g_supplier_lot_from IS NOT NULL AND
	            inv_mwb_globals.g_supplier_lot_from <> NVL(inv_mwb_globals.g_supplier_lot_to, -1) ) THEN
                    query_str  := query_str || ' AND mln.supplier_lot_number >= :supplier_lot_f ';
                END IF;

                IF (inv_mwb_globals.g_supplier_lot_to IS NOT NULL AND
	            inv_mwb_globals.g_supplier_lot_to <> NVL(inv_mwb_globals.g_supplier_lot_from, -1) ) THEN
                    query_str  := query_str || ' AND mln.supplier_lot_number <= :supplier_lot_t ';
                END IF;
                /* End of Bug 8396954 */
          query_str  := query_str || 'AND msn.serial_num = serial_number ';
        END IF;

         --ER(3338592) Changes (If the user gives the value for the Qty then only
         --Group by clause comes in to effect)

         IF inv_mwb_globals.g_qty_from IS NOT NULL OR inv_mwb_globals.g_qty_to IS NOT NULL THEN
            group_str := ' GROUP BY  organization_id  ';
         END IF;

        IF inv_mwb_globals.g_subinventory_code IS NOT NULL THEN
          query_str  := query_str || 'AND subinventory_code = :sub ';
          --ER(3338592) Changes
          IF group_str IS NOT NULL THEN
             group_str := group_str || ' , subinventory_code  ' ;
          END IF;
        END IF;

        IF inv_mwb_globals.g_subinventory_code IS NULL AND inv_mwb_globals.g_detailed = 1 THEN   --Bug # 3412002
          --ER(3338592) Changes
          IF group_str IS NOT NULL THEN
             group_str := group_str || ' , subinventory_code  ' ;
          END IF;
        END IF;

  -- NSRIVAST, INVCONV, Start
      IF inv_mwb_globals.g_grade_from_code IS NOT NULL THEN
         query_str := query_str || ' AND grade_code = :grade_f ' ;
      END IF ;
      IF inv_mwb_globals.g_tree_grade_code  IS NOT NULL THEN
         query_str := query_str || ' AND grade_code = :grade_c ' ;
      END IF ;
   -- NSRIVAST, INVCONV, End

        IF inv_mwb_globals.g_locator_id IS NOT NULL THEN
          query_str  := query_str || 'AND locator_id = :loc_id ';
          --ER(3338592) Changes
          IF group_str IS NOT NULL THEN
             group_str := group_str || ' , locator_id  ' ;
          END IF;
        END IF;

        IF inv_mwb_globals.g_locator_id IS NULL AND inv_mwb_globals.g_detailed = 1 THEN  --Bug # 3412002
          --ER(3338592) Changes
          IF group_str IS NOT NULL THEN
             group_str := group_str || ' , locator_id  ' ;
          END IF;
        END IF;

        IF inv_mwb_globals.g_project_id IS NOT NULL THEN
          query_str  := query_str || ' AND project_id = :pr_id ';
          --ER(3338592) Changes
          IF group_str IS NOT NULL THEN
             group_str := group_str || ' , project_id  ' ;
          END IF;
        END IF;

        IF inv_mwb_globals.g_task_id IS NOT NULL THEN
          query_str  := query_str || ' AND task_id = :ta_id ';
          --ER(3338592) Changes
          IF group_str IS NOT NULL THEN
             group_str := group_str || ' , inv_mwb_globals.g_task_id  ' ;
          END IF;
        END IF;

        IF inv_mwb_globals.g_inventory_item_id IS NOT NULL THEN
          query_str  := query_str || ' AND inventory_item_id = :item_id ';
        END IF;

        -- ER(9158529 client)
        IF inv_mwb_globals.g_client_code IS NOT NULL THEN
          query_str := query_str || ' AND inventory_item_id in (select DISTINCT inventory_item_id from mtl_system_items_b where wms_deploy.get_client_code(inventory_item_id) = :client_code) ';
        END IF;
        -- ER(9158529 client)

        --Bug # 3411938
        IF (inv_mwb_globals.g_qty_from IS NOT NULL OR inv_mwb_globals.g_qty_to IS NOT NULL)
          AND (NVL(inv_mwb_globals.g_view_by,' ') NOT IN ('LOT' , 'SERIAL'))  THEN
           group_str := group_str || ' , inventory_item_id, item_description, item ,uom ' ;
        END IF;

        --ER(3338592) Changes
        IF inv_mwb_globals.g_item_description IS NOT NULL THEN
           query_str := query_str || ' AND item_description LIKE :item_description ';
        END IF;

        IF inv_mwb_globals.g_revision IS NOT NULL THEN
          query_str  := query_str || ' AND revision = :rev ';
          --ER(3338592) Changes
          IF group_str IS NOT NULL THEN
             group_str := group_str || ' , revision  ' ;
          END IF;
        END IF;

        IF inv_mwb_globals.g_cost_group_id IS NOT NULL THEN
          query_str  := query_str || ' AND cost_group_id = :cg_id ';
          --ER(3338592) Changes
          IF group_str IS NOT NULL THEN
             group_str := group_str || ' , cost_group_id  ' ;
          END IF;
        END IF;

        -- ER(9158529)
        IF inv_mwb_globals.g_category_set_id IS NOT NULL THEN
             query_str := query_str || ' AND inventory_item_id in '
                                         || ' (select DISTINCT inventory_item_id from mtl_item_categories '
                                         || ' where organization_id = :organization_id '
                                         || ' and category_set_id = :category_set_id '
                                         || ' and category_id = nvl(:category_id, category_id)) ' ;
        END IF;
        -- ER(9158529)

        IF inv_mwb_globals.g_lpn_from IS NOT NULL
           OR inv_mwb_globals.g_lpn_to IS NOT NULL THEN
          query_str  := query_str || ' AND MOL.outermost_lpn_id = X.outermost_lpn_id ';
        END IF;

        --ER(3338592) Changes
        IF inv_mwb_globals.g_lpn_from IS NOT NULL OR inv_mwb_globals.g_lpn_to IS NOT NULL THEN
           --ER(3338592) Changes
           IF group_str IS NOT NULL THEN
              group_str := group_str || ' , lpn ' ;
          END IF;
        END IF;

        IF inv_mwb_globals.g_lot_from IS NOT NULL THEN
          query_str  := query_str || ' AND lot_number >= :lot_f ';
        END IF;

        IF inv_mwb_globals.g_lot_to IS NOT NULL THEN
          query_str  := query_str || ' AND lot_number <= :lot_t ';
        END IF;

        IF inv_mwb_globals.g_serial_from IS NOT NULL THEN
          query_str  := query_str || ' AND serial_number >= :serial_f ';
        END IF;

        IF inv_mwb_globals.g_serial_to IS NOT NULL THEN
          query_str  := query_str || ' AND serial_number <= :serial_t ';
        END IF;

        IF inv_mwb_globals.g_unit_number IS NOT NULL THEN
          query_str  := query_str || ' AND unit_number=:un_id ';
        END IF;

	/*LPN Status Project */
	IF (l_default_status_id IS NOT NULL) THEN
          IF inv_mwb_globals.g_status_id IS NOT NULL OR inv_mwb_globals.g_only_subinventory_status = 1 THEN
	    query_str  := query_str || 'AND onhand_status_id = :st_id ';
	  END IF;
	ELSE
          IF inv_mwb_globals.g_status_id IS NOT NULL THEN
            query_str  := query_str || ' AND (subinventory_status_id = :st_id OR locator_status_id = :st_id ';
            query_str  := query_str || ' OR lot_status_id = :st_id OR serial_status_id = :st_id) ';
          END IF;
        END IF;
       /*End of fix for LPN Status Project */

        IF inv_mwb_globals.g_lot_controlled = 2 THEN
          query_str  := query_str || ' AND lot_number is not null ';
        ELSIF inv_mwb_globals.g_lot_controlled = 1 THEN
          query_str  := query_str || ' AND lot_number is null ';
        END IF;

        IF inv_mwb_globals.g_serial_controlled = 1 THEN
          query_str  := query_str || ' AND serial_number is null ';
        ELSIF inv_mwb_globals.g_serial_controlled = 2 THEN
          query_str  := query_str || ' AND serial_number is not null ';
        END IF;

        IF inv_mwb_globals.g_tree_mat_loc_id = 2
        OR inv_mwb_globals.g_chk_receiving = 1 THEN
          query_str  := query_str || ' AND lpn_context = 3 ';
        ELSIF inv_mwb_globals.g_prepacked IS NULL THEN
          query_str  := query_str || ' AND (lpn_context=1  or lpn_context=9 or lpn_context=11 ) ';
        ELSIF inv_mwb_globals.g_prepacked = 1 THEN
          query_str  := query_str || 'AND lpn_context = 1 ';
        ELSIF inv_mwb_globals.g_prepacked <> 1
              AND inv_mwb_globals.g_prepacked <> 999
              AND inv_mwb_globals.g_prepacked IS NOT NULL THEN
          query_str  := query_str || 'AND lpn_context = :prepacked ';
        END IF;

        /*IF inv_mwb_globals.g_site_id IS NOT NULL THEN
           query_str := query_str || ' AND PLANNING_TP_TYPE = 1 ';
           query_str := query_str || ' AND planning_organization_id = :site_id ' ;
         ELSIF inv_mwb_globals.g_vendor_id is NOT NULL THEN
           query_str := query_str || ' AND  PLANNING_TP_TYPE = 1 ';
           query_str := query_str || ' AND  planning_organization_id in ';
           query_str := query_str || ' (select vendor_site_id from po_vendor_sites_all ';
           query_str := query_str || '  where vendor_id = :vendor_id )';
        END IF;*/

        IF  (inv_mwb_globals.g_owning_qry_mode = 4) THEN
          query_str  := query_str || ' AND owning_organization_id = :own_org ';
          query_str  := query_str || ' AND owning_tp_type = 2 ';
        ELSIF(inv_mwb_globals.g_owning_qry_mode = 3) THEN
          query_str  := query_str || ' AND owning_organization_id = :own_org ';
          query_str  := query_str || ' AND owning_tp_type = 1 ';
        ELSIF(inv_mwb_globals.g_owning_qry_mode = 2) THEN
          query_str  := query_str || ' AND owning_tp_type = 1 ';
        END IF;

        IF (inv_mwb_globals.g_planning_query_mode = 4) THEN
          query_str  := query_str || ' AND planning_organization_id = :plan_org ';
          query_str  := query_str || ' AND planning_tp_type = 2 ';
        ELSIF(inv_mwb_globals.g_planning_query_mode = 3) THEN
          query_str  := query_str || ' AND planning_organization_id = :plan_org ';
          query_str  := query_str || ' AND planning_tp_type = 1 ';
        ELSIF(inv_mwb_globals.g_planning_query_mode = 2) THEN
          query_str  := query_str || ' AND planning_tp_type = 1 ';
        END IF;

        --Bug #3411938
        IF inv_mwb_globals.g_qty_from IS NOT NULL OR inv_mwb_globals.g_qty_to IS NOT NULL THEN
           group_str := group_str || ' , planning_organization_id, planning_tp_type ';
           group_str := group_str || ' , owning_organization_id, owning_tp_type ';
           group_str := group_str || ' , item_lot_control, item_serial_control ';
        END IF;

        IF inv_mwb_globals.g_qty_from IS NOT NULL THEN
           having_str := having_str || ' AND sum(on_hand) >= :qty_from ';
        END IF;

        IF inv_mwb_globals.g_qty_to IS NOT NULL THEN
           having_str := having_str || ' AND sum(on_hand) <= :qty_to ';
        END IF;

        IF inv_mwb_globals.g_qty_from IS NOT NULL OR inv_mwb_globals.g_qty_to IS NOT NULL THEN
          query_str := query_str || 'AND organization_id = mp.organization_id  ';
          query_str := query_str || group_str || having_str || ' ) ' ;
        ELSE
          query_str := query_str || 'AND organization_id = mp.organization_id ) ';
        END IF;

        IF inv_mwb_globals.g_organization_id IS NOT NULL THEN
          query_str  := query_str || 'and mp.organization_id = :org_id ';
        --Bug # 3411938
        ELSE
          query_str  := query_str || ' and EXISTS ( SELECT 1 ' ;
          query_str  := query_str || ' FROM org_access_view oav ' ;
          query_str  := query_str || ' WHERE oav.organization_id = mp.organization_id ' ;
          query_str  := query_str || ' AND oav.responsibility_id   = :responsibility_id ' ;
          query_str  := query_str || ' AND oav.resp_application_id = :resp_application_id ) ' ;
        END IF;

        query_str  := query_str || ' ORDER BY organization_code ';

      END IF;
    END IF;

       --trace1(query_str, 'add_orgs', 9);

    inv_mwb_globals.print_msg( g_pkg_name, l_procedure_name, query_str );

    inv_mwb_globals.g_last_query := query_str;

    query_hdl       := DBMS_SQL.open_cursor;
    DBMS_SQL.parse(query_hdl, query_str, DBMS_SQL.native);


    IF inv_mwb_globals.g_organization_id IS NOT NULL THEN
      DBMS_SQL.bind_variable(query_hdl, 'org_id', inv_mwb_globals.g_organization_id);
    END IF;

    IF inv_mwb_globals.g_subinventory_code IS NOT NULL THEN
      DBMS_SQL.bind_variable(query_hdl, 'sub', inv_mwb_globals.g_subinventory_code);
    END IF;

    IF inv_mwb_globals.g_locator_id IS NOT NULL THEN
      DBMS_SQL.bind_variable(query_hdl, 'loc_id', inv_mwb_globals.g_locator_id);
    END IF;

    IF inv_mwb_globals.g_inventory_item_id IS NOT NULL THEN
      DBMS_SQL.bind_variable(query_hdl, 'item_id', inv_mwb_globals.g_inventory_item_id);
    END IF;

    -- ER(9158529 client)
    IF inv_mwb_globals.g_client_code IS NOT NULL THEN
      DBMS_SQL.bind_variable(query_hdl, 'client_code', inv_mwb_globals.g_client_code);
    END IF;
    -- ER(9158529 client)

    IF inv_mwb_globals.g_revision IS NOT NULL THEN
      DBMS_SQL.bind_variable(query_hdl, 'rev', inv_mwb_globals.g_revision);
    END IF;

    --bug 6633612
    IF inv_mwb_globals.g_shipment_header_id IS NOT NULL THEN
      DBMS_SQL.bind_variable(query_hdl, 'shipment_header_id',inv_mwb_globals.g_shipment_header_id );
    END IF;
    --bug 6633612

    IF inv_mwb_globals.g_cost_group_id IS NOT NULL THEN
      DBMS_SQL.bind_variable(query_hdl, 'cg_id', inv_mwb_globals.g_cost_group_id);
    END IF;

    -- ER(9158529)
    IF inv_mwb_globals.g_category_set_id IS NOT NULL THEN
      DBMS_SQL.bind_variable(query_hdl, 'organization_id', inv_mwb_globals.g_organization_id);
      DBMS_SQL.bind_variable(query_hdl, 'category_set_id', inv_mwb_globals.g_category_set_id);
      DBMS_SQL.bind_variable(query_hdl, 'category_id', inv_mwb_globals.g_category_id);
    END IF;
    -- ER(9158529)

    --BUG 7556505
    IF inv_mwb_globals.g_parent_lot IS NOT NULL THEN
      DBMS_SQL.bind_variable(query_hdl, 'parent_lot', inv_mwb_globals.g_parent_lot);
    END IF;
    --BUG 7556505

    IF inv_mwb_globals.g_lot_from IS NOT NULL THEN
      DBMS_SQL.bind_variable(query_hdl, 'lot_f', inv_mwb_globals.g_lot_from);
    END IF;

    IF inv_mwb_globals.g_lot_to IS NOT NULL THEN
      DBMS_SQL.bind_variable(query_hdl, 'lot_t', inv_mwb_globals.g_lot_to);
    END IF;

    /* Bug 8396954 added below code for supplier_lot_number */
    IF (inv_mwb_globals.g_supplier_lot_from IS NOT NULL AND
    inv_mwb_globals.g_supplier_lot_to IS NOT NULL AND
    inv_mwb_globals.g_supplier_lot_from = inv_mwb_globals.g_supplier_lot_to) THEN
         DBMS_SQL.bind_variable(query_hdl, 'supplier_lot_f', inv_mwb_globals.g_supplier_lot_from);
    END IF;

    IF (inv_mwb_globals.g_supplier_lot_from IS NOT NULL AND
        inv_mwb_globals.g_supplier_lot_from <> NVL(inv_mwb_globals.g_supplier_lot_to, -1) ) THEN
          DBMS_SQL.bind_variable(query_hdl, 'supplier_lot_f', inv_mwb_globals.g_supplier_lot_from);
    END IF;

    IF (inv_mwb_globals.g_supplier_lot_to IS NOT NULL AND
         inv_mwb_globals.g_supplier_lot_to <> NVL(inv_mwb_globals.g_supplier_lot_from, -1) ) THEN
          DBMS_SQL.bind_variable(query_hdl, 'supplier_lot_t', inv_mwb_globals.g_supplier_lot_to);
    END IF;
    /* End of Bug 8396954 */

 -- NSRIVAST, INVCONV, Start
    IF inv_mwb_globals.g_grade_from_code IS NOT NULL THEN
      DBMS_SQL.bind_variable(query_hdl, 'grade_f',inv_mwb_globals.g_grade_from_code );
    END IF;
    IF inv_mwb_globals.g_tree_grade_code IS NOT NULL THEN
      DBMS_SQL.bind_variable(query_hdl, 'grade_c', inv_mwb_globals.g_tree_grade_code);
    END IF;
 -- NSRIVAST, INVCONV, End
    IF inv_mwb_globals.g_serial_from IS NOT NULL THEN
      DBMS_SQL.bind_variable(query_hdl, 'serial_f', inv_mwb_globals.g_serial_from);
    END IF;

    IF inv_mwb_globals.g_serial_to IS NOT NULL THEN
      DBMS_SQL.bind_variable(query_hdl, 'serial_t', inv_mwb_globals.g_serial_to);
    END IF;

      --bugfix#3646484
      IF ((inv_mwb_globals.g_lpn_from IS NOT NULL) AND (inv_mwb_globals.g_lpn_to IS NOT NULL) AND (inv_mwb_globals.g_lpn_from = inv_mwb_globals.g_lpn_to))  THEN
      --User is querying for single LPN so converted the range query to equality query
      --So it is enought to bind the from lpn alone
         dbms_sql.bind_variable(query_hdl, 'lpn_f', inv_mwb_globals.g_lpn_from);
      ELSE
          IF inv_mwb_globals.g_lpn_from IS NOT NULL THEN
            DBMS_SQL.bind_variable(query_hdl, 'lpn_f', inv_mwb_globals.g_lpn_from);
          END IF;

          IF inv_mwb_globals.g_lpn_to IS NOT NULL THEN
            DBMS_SQL.bind_variable(query_hdl, 'lpn_t', inv_mwb_globals.g_lpn_to);
          END IF;
      END IF;

    IF inv_mwb_globals.g_status_id IS NOT NULL THEN
      DBMS_SQL.bind_variable(query_hdl, 'st_id', inv_mwb_globals.g_status_id);
    ELSIF inv_mwb_globals.g_only_subinventory_status = 1 AND l_default_status_id is not null THEN -- Onhand Material Status Support
      DBMS_SQL.bind_variable(query_hdl, 'st_id', inv_mwb_globals.g_tree_st_id);
    END IF;

    IF inv_mwb_globals.g_prepacked <> 1
       AND inv_mwb_globals.g_prepacked <> 999
       AND inv_mwb_globals.g_prepacked IS NOT NULL THEN
      DBMS_SQL.bind_variable(query_hdl, 'prepacked', inv_mwb_globals.g_prepacked);
    END IF;

    IF inv_mwb_globals.g_mln_context_code IS NOT NULL THEN
      DBMS_SQL.bind_variable(query_hdl, 'mln_context', inv_mwb_globals.g_mln_context_code);
    END IF;

    IF inv_mwb_globals.g_project_id IS NOT NULL THEN
      DBMS_SQL.bind_variable(query_hdl, 'pr_id', inv_mwb_globals.g_project_id);
    END IF;

    IF inv_mwb_globals.g_task_id IS NOT NULL THEN
      DBMS_SQL.bind_variable(query_hdl, 'ta_id', inv_mwb_globals.g_task_id);
    END IF;

    IF inv_mwb_globals.g_unit_number IS NOT NULL THEN
      DBMS_SQL.bind_variable(query_hdl, 'un_id', inv_mwb_globals.g_unit_number);
    END IF;

    IF (inv_mwb_globals.g_owning_qry_mode = 4)
       OR(inv_mwb_globals.g_owning_qry_mode = 3) THEN
      DBMS_SQL.bind_variable(query_hdl, 'own_org', inv_mwb_globals.g_owning_org);
    END IF;

    IF (inv_mwb_globals.g_planning_query_mode = 4)
       OR(inv_mwb_globals.g_planning_query_mode = 3) THEN
      DBMS_SQL.bind_variable(query_hdl, 'plan_org', inv_mwb_globals.g_planning_org);
    END IF;

    --ER(3338592) Changes
    IF inv_mwb_globals.g_item_description IS NOT NULL THEN
      dbms_sql.bind_variable(query_hdl, 'item_description', inv_mwb_globals.g_item_description);
    END IF;

    IF inv_mwb_globals.g_qty_from IS NOT NULL THEN
      dbms_sql.bind_variable(query_hdl, 'qty_from', inv_mwb_globals.g_qty_from);
    END IF;

    IF inv_mwb_globals.g_qty_to IS NOT NULL THEN
       dbms_sql.bind_variable(query_hdl, 'qty_to', inv_mwb_globals.g_qty_to);
    END IF;
    --End of ER Changes

    --Bug #3411938
    IF inv_mwb_globals.g_organization_id IS NULL THEN
       IF inv_mwb_globals.g_responsibility_id  IS NOT NULL THEN
          dbms_sql.bind_variable(query_hdl, 'responsibility_id', inv_mwb_globals.g_responsibility_id );
       END IF;

       IF inv_mwb_globals.g_resp_application_id  IS NOT NULL THEN
          dbms_sql.bind_variable(query_hdl, 'resp_application_id', inv_mwb_globals.g_resp_application_id );
       END IF;
    END IF;

    DBMS_SQL.define_column(query_hdl, 1, org_id);
    DBMS_SQL.define_column(query_hdl, 2, org_code, 3);

    inv_mwb_globals.print_msg( g_pkg_name, l_procedure_name, 'Org id , Org code '||org_id||','||org_code );

IF inv_mwb_globals.g_organization_id IS NOT NULL THEN
   SELECT   mp.organization_id, mp.organization_code
      INTO  org_id,org_code
       FROM mtl_parameters mp
      WHERE EXISTS (SELECT organization_id
                      FROM mtl_onhand_total_mwb_v
                     WHERE 1 = 1 AND organization_id = mp.organization_id)
        AND mp.organization_id = inv_mwb_globals.g_organization_id
   ORDER BY organization_code;
END IF;
    rows_processed  := DBMS_SQL.EXECUTE(query_hdl);

    LOOP
      -- fetch a row
      IF DBMS_SQL.fetch_rows(query_hdl) > 0 THEN
        -- fetch columns from the row

        DBMS_SQL.column_value(query_hdl, 1, org_id);
        DBMS_SQL.column_value(query_hdl, 2, org_code);
        inv_mwb_globals.print_msg( g_pkg_name, l_procedure_name, 'Coming inside, Org code : '||org_id||org_code );
	FOR j in 1 .. x_node_tbl.COUNT LOOP
           IF x_node_tbl(j).LABEL = org_code THEN
              inv_mwb_globals.print_msg( g_pkg_name, l_procedure_name, 'In loop: '||x_node_tbl(j).LABEL );
	      inv_mwb_globals.print_msg( g_pkg_name, l_procedure_name, x_node_tbl(j).VALUE);
	      RETURN;
	   END IF;
	END LOOP;
        inv_mwb_globals.print_msg( g_pkg_name, l_procedure_name, 'after loop');
	   IF j >= inv_mwb_globals.g_tree_node_low_value THEN
	      x_node_tbl(i).state  := inv_mwb_globals.g_tree_node_state;
              x_node_tbl(i).DEPTH  := 1;
	      x_node_tbl(i).label  := org_code;
	      x_node_tbl(i).icon   := 'inv_inor';
	      x_node_tbl(i).VALUE  := TO_CHAR(org_id);
	      x_node_tbl(i).TYPE   := 'ORG';
	      i                    := i + 1;
	   END IF;
        EXIT WHEN j >= inv_mwb_globals.g_tree_node_high_value;
        j  := j + 1;
      ELSE
        EXIT;
      END IF;
    END LOOP;

    DBMS_SQL.close_cursor(query_hdl); -- close cursor
    x_node_value    := j;
    x_tbl_index     := i;

--   END IF; -- in onhand > 0
  EXCEPTION
    WHEN NO_DATA_FOUND THEN
      NULL;
    WHEN OTHERS THEN
      RAISE;
  END add_orgs;

  -- Add status nodes for the given parameters
  PROCEDURE add_statuses(
    x_node_value          IN OUT NOCOPY NUMBER
  , x_node_tbl            IN OUT NOCOPY fnd_apptree.node_tbl_type
  , x_tbl_index           IN OUT NOCOPY NUMBER
    ) IS
    query_str      VARCHAR2(10000);
    query_hdl      NUMBER;
    rows_processed NUMBER;
    status_id      mtl_material_statuses_vl.status_id%TYPE;
    status_code    mtl_material_statuses_vl.status_code%TYPE;
    i              NUMBER                                      := x_tbl_index;
    j              NUMBER                                      := x_node_value;
    serial_control NUMBER;
    table_required VARCHAR2(300);

    is_grade_t     BOOLEAN DEFAULT FALSE ; -- NSRIVAST, INVCONV

    --ER(3338592) Changes
    group_str      VARCHAR2(10000) ;
    having_str     VARCHAR2(10000) := ' HAVING 1=1 ';
    --End of ER Changes

    l_procedure_name CONSTANT VARCHAR2(30)  := 'ADD_STATUSES';
    l_default_status_id NUMBER; -- Onhand Material Status Support
   BEGIN
      inv_mwb_globals.print_msg( g_pkg_name, l_procedure_name, 'Entered' );

      -- Onhand Material Status Support
      if (inv_mwb_globals.g_organization_id is not null) then
         if (inv_cache.set_org_rec(inv_mwb_globals.g_organization_id)) then
           l_default_status_id :=  inv_cache.org_rec.default_status_id;
         end if;
      elsif (inv_mwb_globals.g_tree_organization_id is not null) then
         if (inv_cache.set_org_rec(inv_mwb_globals.g_tree_organization_id)) then
           l_default_status_id :=  inv_cache.org_rec.default_status_id;
         end if;
      end if;

   -- NSRIVAST, INVCONV, Start
     IF  (inv_mwb_globals.g_grade_from_code IS NOT NULL OR  inv_mwb_globals.g_tree_grade_code IS NOT NULL OR inv_mwb_globals.g_grade_controlled <> 0) THEN
             is_grade_t     := TRUE ;
     END IF ;
   -- NSRIVAST, INVCONV, End

    query_str       := 'SELECT mms.status_id, mms.status_code ';
    query_str       := query_str || 'FROM mtl_material_statuses_vl mms ';
    query_str       := query_str || ' WHERE exists (';

    IF inv_mwb_globals.g_organization_id IS NOT NULL
       AND inv_mwb_globals.g_inventory_item_id IS NOT NULL THEN
      SELECT serial_number_control_code
        INTO serial_control
        FROM mtl_system_items
       WHERE organization_id = inv_mwb_globals.g_organization_id
         AND inventory_item_id = inv_mwb_globals.g_inventory_item_id;
    END IF;

    IF (serial_control IN(2, 5)
        OR inv_mwb_globals.g_serial_from IS NOT NULL
        OR inv_mwb_globals.g_serial_to IS NOT NULL
        OR inv_mwb_globals.g_tree_serial_attr_query IS NOT NULL)
       AND inv_mwb_globals.g_lpn_from IS NULL
       AND inv_mwb_globals.g_lpn_to IS NULL THEN
      IF (inv_mwb_globals.g_tree_lot_attr_query IS NULL AND inv_mwb_globals.g_parent_lot IS NULL
         AND inv_mwb_globals.g_supplier_lot_from IS NULL AND inv_mwb_globals.g_supplier_lot_to IS NULL)
         AND inv_mwb_globals.g_tree_serial_attr_query IS NULL THEN
        query_str  := query_str || 'SELECT v.organization_id from mtl_onhand_serial_v v ';
	--bug 6633612
	IF (inv_mwb_globals.g_shipment_header_id is not null) THEN
		query_str  := query_str || ' , rcv_transactions rt, mtl_material_transactions mmt ';
	END IF;
	--bug 6633612
        query_str  := query_str || 'WHERE 1=1 ';
      ELSIF (inv_mwb_globals.g_tree_lot_attr_query IS NULL AND inv_mwb_globals.g_parent_lot IS NULL
            AND inv_mwb_globals.g_supplier_lot_from IS NULL AND inv_mwb_globals.g_supplier_lot_to IS NULL)
            AND inv_mwb_globals.g_tree_serial_attr_query IS NOT NULL THEN
        query_str  :=
              query_str
           || 'SELECT v.organization_id from'
           || '(SELECT serial_number serial_num FROM mtl_serial_numbers WHERE 1=1 '
           || inv_mwb_globals.g_tree_serial_attr_query
           || ') msn, mtl_onhand_serial_v v ';
	--bug 6633612
	IF (inv_mwb_globals.g_shipment_header_id is not null) THEN
		query_str  := query_str || ' , rcv_transactions rt, mtl_material_transactions mmt ';
	END IF;
	--bug 6633612
        query_str  := query_str || 'WHERE msn.serial_num = v.serial_number ';
      ELSIF (inv_mwb_globals.g_tree_lot_attr_query IS NOT NULL OR inv_mwb_globals.g_parent_lot IS NOT NULL
            OR inv_mwb_globals.g_supplier_lot_from IS NOT NULL OR inv_mwb_globals.g_supplier_lot_to IS NOT NULL)
            AND inv_mwb_globals.g_tree_serial_attr_query IS NULL THEN
        query_str  :=
              query_str
           || 'SELECT v.organization_id from'
           || '(SELECT lot_number lot_num, parent_lot_number, supplier_lot_number FROM mtl_lot_numbers WHERE 1=1 '
           || inv_mwb_globals.g_tree_lot_attr_query
           || ') mln, mtl_onhand_serial_v v ';
   	--bug 6633612
	IF (inv_mwb_globals.g_shipment_header_id is not null) THEN
		query_str  := query_str || ' , rcv_transactions rt, mtl_material_transactions mmt ';
	END IF;
	--bug 6633612
        query_str  := query_str || 'WHERE mln.lot_num = v.lot_number ';
 		--BUG 7556505
		   IF inv_mwb_globals.g_parent_lot IS NOT NULL THEN
		       query_str  := query_str || ' AND mln.parent_lot_number = :parent_lot ';
	           END IF;
		--BUG 7556505
                /* Bug 8396954 added below code for supplier_lot_number */
                IF (inv_mwb_globals.g_supplier_lot_from IS NOT NULL AND
                    inv_mwb_globals.g_supplier_lot_to IS NOT NULL AND
                    inv_mwb_globals.g_supplier_lot_from = inv_mwb_globals.g_supplier_lot_to) THEN
                    query_str  := query_str || ' AND mln.supplier_lot_number = :supplier_lot_f ';
                END IF;

                IF (inv_mwb_globals.g_supplier_lot_from IS NOT NULL AND
	            inv_mwb_globals.g_supplier_lot_from <> NVL(inv_mwb_globals.g_supplier_lot_to, -1) ) THEN
                    query_str  := query_str || ' AND mln.supplier_lot_number >= :supplier_lot_f ';
                END IF;

                IF (inv_mwb_globals.g_supplier_lot_to IS NOT NULL AND
	            inv_mwb_globals.g_supplier_lot_to <> NVL(inv_mwb_globals.g_supplier_lot_from, -1) ) THEN
                    query_str  := query_str || ' AND mln.supplier_lot_number <= :supplier_lot_t ';
                END IF;
                /* End of Bug 8396954 */
      ELSIF (inv_mwb_globals.g_tree_lot_attr_query IS NOT NULL OR inv_mwb_globals.g_parent_lot IS NOT NULL
            OR inv_mwb_globals.g_supplier_lot_from IS NOT NULL OR inv_mwb_globals.g_supplier_lot_to IS NOT NULL)
            AND inv_mwb_globals.g_tree_serial_attr_query IS NOT NULL THEN
        query_str  :=
              query_str
           || 'SELECT v.organization_id from'
           || '(SELECT lot_number lot_num, parent_lot_number, supplier_lot_number FROM mtl_lot_numbers WHERE 1=1 '
           || inv_mwb_globals.g_tree_lot_attr_query
           || ') mln, '
           || '(SELECT serial_number serial_num FROM mtl_serial_numbers WHERE 1=1 '
           || inv_mwb_globals.g_tree_serial_attr_query
           || ') msn, mtl_onhand_serial_v v ';
   	--bug 6633612
	IF (inv_mwb_globals.g_shipment_header_id is not null) THEN
		query_str  := query_str || ' , rcv_transactions rt, mtl_material_transactions mmt ';
	END IF;
	--bug 6633612
        query_str  := query_str || 'WHERE mln.lot_num = v.lot_number ';
 		--BUG 7556505
		   IF inv_mwb_globals.g_parent_lot IS NOT NULL THEN
		       query_str  := query_str || ' AND mln.parent_lot_number = :parent_lot ';
	           END IF;
		--BUG 7556505
                /* Bug 8396954 added below code for supplier_lot_number */
                IF (inv_mwb_globals.g_supplier_lot_from IS NOT NULL AND
                    inv_mwb_globals.g_supplier_lot_to IS NOT NULL AND
                    inv_mwb_globals.g_supplier_lot_from = inv_mwb_globals.g_supplier_lot_to) THEN
                    query_str  := query_str || ' AND mln.supplier_lot_number = :supplier_lot_f ';
                END IF;

                IF (inv_mwb_globals.g_supplier_lot_from IS NOT NULL AND
	            inv_mwb_globals.g_supplier_lot_from <> NVL(inv_mwb_globals.g_supplier_lot_to, -1) ) THEN
                    query_str  := query_str || ' AND mln.supplier_lot_number >= :supplier_lot_f ';
                END IF;

                IF (inv_mwb_globals.g_supplier_lot_to IS NOT NULL AND
	            inv_mwb_globals.g_supplier_lot_to <> NVL(inv_mwb_globals.g_supplier_lot_from, -1) ) THEN
                    query_str  := query_str || ' AND mln.supplier_lot_number <= :supplier_lot_t ';
                END IF;
                /* End of Bug 8396954 */
        query_str  := query_str || 'AND msn.serial_num = v.serial_number ';
      END IF;

      --ER(3338592) Changes (If the user gives the value for the Qty then only
      --Group by clause comes in to effect)

      IF inv_mwb_globals.g_qty_from IS NOT NULL OR inv_mwb_globals.g_qty_to IS NOT NULL THEN
         group_str := ' GROUP BY  v.organization_id  ';
      END IF;

      IF inv_mwb_globals.g_organization_id IS NOT NULL THEN
        query_str  := query_str || 'AND v.organization_id = :org_id ';
      END IF;

      IF inv_mwb_globals.g_subinventory_code IS NOT NULL THEN
        query_str  := query_str || 'AND v.subinventory_code <= :sub ';
        --ER(3338592) Changes
        IF group_str IS NOT NULL THEN
           group_str := group_str || ' , v.subinventory_code  ' ;
        END IF;
      END IF;
	--bug 6633612
	IF (inv_mwb_globals.g_shipment_header_id is not null) THEN
		query_str := query_str || ' AND rt.shipment_header_id = :shipment_header_id '
					 || ' AND rt.transaction_id = mmt.rcv_transaction_id '
					 || ' AND rt.organization_id = mmt.organization_id '
					 || ' AND rt.transaction_type = ''DELIVER'''
					 || ' AND rt.destination_type_code = ''INVENTORY'''
					 || ' AND mmt.transaction_id = v.last_transaction_id '
					 || ' AND mmt.organization_id = v.organization_id ';

	END IF;
	--bug 6633612

  -- NSRIVAST, INVCONV, Start
      IF inv_mwb_globals.g_grade_from_code IS NOT NULL THEN
         query_str := query_str || ' AND v.grade_code = :grade_f ' ;
      END IF ;
      IF inv_mwb_globals.g_tree_grade_code  IS NOT NULL THEN
         query_str := query_str || ' AND v.grade_code = :grade_c ' ;
      END IF ;
   -- NSRIVAST, INVCONV, End

      IF inv_mwb_globals.g_locator_id IS NOT NULL THEN
        query_str  := query_str || 'AND v.locator_id = :loc_id ';
        --ER(3338592) Changes
        IF group_str IS NOT NULL THEN
           group_str := group_str || ' , v.locator_id  ' ;
        END IF;
      END IF;

      IF inv_mwb_globals.g_project_id IS NOT NULL THEN
        query_str  := query_str || ' AND v.project_id = :pr_id ';
        --ER(3338592) Changes
        IF group_str IS NOT NULL THEN
           group_str := group_str || ' , v.project_id  ' ;
        END IF;
      END IF;

      IF inv_mwb_globals.g_task_id IS NOT NULL THEN
        query_str  := query_str || ' AND v.task_id = :ta_id ';
        --ER(3338592) Changes
        IF group_str IS NOT NULL THEN
           group_str := group_str || ' , inv_mwb_globals.g_task_id  ' ;
        END IF;
      END IF;

      IF inv_mwb_globals.g_inventory_item_id IS NOT NULL THEN
         query_str  := query_str || 'AND v.inventory_item_id = :item_id ';
      END IF;

      -- ER(9158529 client)
      IF inv_mwb_globals.g_client_code IS NOT NULL THEN
         query_str := query_str || ' AND v.inventory_item_id in (select DISTINCT inventory_item_id from mtl_system_items_b where wms_deploy.get_client_code(inventory_item_id) = :client_code) ';
      END IF;
      -- ER(9158529 client)

      --Bug # 3411938
      IF inv_mwb_globals.g_qty_from IS NOT NULL OR inv_mwb_globals.g_qty_to IS NOT NULL THEN
         group_str := group_str || ' , v.inventory_item_id, v.item_description, v.item ,v.uom ' ;
      END IF;

      --ER(3338592) Changes
      IF inv_mwb_globals.g_item_description IS NOT NULL THEN
         query_str := query_str || ' AND v.item_description LIKE :item_description ';
      END IF;

      IF inv_mwb_globals.g_revision IS NOT NULL THEN
        query_str  := query_str || 'AND v.revision <= :rev ';
        --ER(3338592) Changes
        IF group_str IS NOT NULL THEN
           group_str := group_str || ' , v.revision  ' ;
        END IF;
      END IF;

      IF inv_mwb_globals.g_cost_group_id IS NOT NULL THEN
        query_str  := query_str || 'AND v.cost_group_id = :cg_id  ';
        --ER(3338592) Changes
        IF group_str IS NOT NULL THEN
           group_str := group_str || ' , v.cost_group_id  ' ;
        END IF;
      END IF;

      -- ER(9158529)
      IF inv_mwb_globals.g_category_set_id IS NOT NULL THEN
        query_str := query_str || ' AND v.inventory_item_id in '
                                    || ' (select DISTINCT inventory_item_id from mtl_item_categories '
                                    || ' where organization_id = :organization_id '
                                    || ' and category_set_id = :category_set_id '
                                    || ' and category_id = nvl(:category_id, category_id)) ' ;
      END IF;
      -- ER(9158529)

      IF inv_mwb_globals.g_lot_from IS NOT NULL THEN
        query_str  := query_str || 'AND v.lot_number >= :lot_f ';
      END IF;

      IF inv_mwb_globals.g_lot_to IS NOT NULL THEN
        query_str  := query_str || 'AND v.lot_number <= :lot_t ';
      END IF;

      IF inv_mwb_globals.g_serial_from IS NOT NULL THEN
        query_str  := query_str || 'AND v.serial_number >= :serial_f ';
      END IF;

      IF inv_mwb_globals.g_serial_to IS NOT NULL THEN
        query_str  := query_str || 'AND v.serial_number <= :serial_t ';
      END IF;

      IF inv_mwb_globals.g_unit_number IS NOT NULL THEN
        query_str  := query_str || ' AND v.unit_number=:un_id ';
      END IF;

      /*IF inv_mwb_globals.g_site_id IS NOT NULL THEN
         query_str := query_str || ' AND PLANNING_TP_TYPE = 1 ';
         query_str := query_str || ' AND planning_organization_id = :site_id ' ;
       ELSIF inv_mwb_globals.g_vendor_id is NOT NULL THEN
         query_str := query_str || ' AND  PLANNING_TP_TYPE = 1 ';
         query_str := query_str || ' AND  planning_organization_id in ';
         query_str := query_str || ' (select vendor_site_id from po_vendor_sites_all ';
         query_str := query_str || '  where vendor_id = :vendor_id )';
      END IF;*/

      IF (inv_mwb_globals.g_planning_query_mode = 4) THEN
        query_str  := query_str || ' AND v.planning_organization_id = :plan_org ';
        query_str  := query_str || ' AND v.planning_tp_type = 2 ';
      ELSIF(inv_mwb_globals.g_planning_query_mode = 3) THEN
        query_str  := query_str || ' AND v.planning_organization_id = :plan_org ';
        query_str  := query_str || ' AND v.planning_tp_type = 1 ';
      ELSIF(inv_mwb_globals.g_planning_query_mode = 2) THEN
        query_str  := query_str || ' AND v.planning_tp_type = 1 ';
      END IF;

      IF (inv_mwb_globals.g_owning_qry_mode = 4) THEN
        query_str  := query_str || ' AND v.owning_organization_id = :own_org ';
        query_str  := query_str || ' AND v.owning_tp_type = 2 ';
      ELSIF(inv_mwb_globals.g_owning_qry_mode = 3) THEN
        query_str  := query_str || ' AND v.owning_organization_id = :own_org ';
        query_str  := query_str || ' AND v.owning_tp_type = 1 ';
      ELSIF(inv_mwb_globals.g_owning_qry_mode = 2) THEN
        query_str  := query_str || ' AND v.owning_tp_type = 1 ';
      END IF;

      --Bug #3411938
      IF inv_mwb_globals.g_qty_from IS NOT NULL OR inv_mwb_globals.g_qty_to IS NOT NULL THEN
         group_str := group_str || ' , v.planning_organization_id, v.planning_tp_type ';
         group_str := group_str || ' , v.owning_organization_id, v.owning_tp_type ';
         group_str := group_str || ' , v.item_lot_control, v.item_serial_control ';
      END IF;

      -- Onhand Material Status Support
      if (l_default_status_id is not null) then
         query_str  := query_str || ' AND v.serial_status_id = mms.status_id ';
      else
         query_str  := query_str || ' AND (v.subinventory_status_id = mms.status_id ';
         query_str  := query_str || ' or v.locator_status_id = mms.status_id or ';
         query_str  := query_str || ' v.lot_status_id = mms.status_id or v.serial_status_id = mms.status_id) ';
      end if;

      IF inv_mwb_globals.g_qty_from IS NOT NULL THEN
         having_str := having_str || ' AND sum(on_hand) >= :qty_from ';
      END IF;

      IF inv_mwb_globals.g_qty_to IS NOT NULL THEN
         having_str := having_str || ' AND sum(on_hand) <= :qty_to ';
      END IF;

      IF inv_mwb_globals.g_organization_id IS NOT NULL THEN
        query_str  := query_str || 'AND v.organization_id = :org_id ';
      ELSE
        query_str  := query_str || ' AND  EXISTS ( SELECT 1 ' ;
        query_str  := query_str || ' FROM org_access_view oav ' ;
        query_str  := query_str || ' WHERE oav.organization_id   = v.organization_id ' ;
        query_str  := query_str || ' AND oav.responsibility_id   = :responsibility_id ' ;
        query_str  := query_str || ' AND oav.resp_application_id = :resp_application_id ) ' ;
      END IF;

      IF inv_mwb_globals.g_qty_from IS NOT NULL OR inv_mwb_globals.g_qty_to IS NOT NULL THEN
         query_str := query_str || group_str || having_str || '  ' ;
      END IF;

      query_str  := query_str || ') ';

      IF inv_mwb_globals.g_status_id IS NOT NULL THEN
        query_str  := query_str || 'and mms.status_id = :st_id ';
      END IF;

      query_str  := query_str || ' ORDER BY status_code ';

    ELSIF inv_mwb_globals.g_lpn_from IS NULL
          AND inv_mwb_globals.g_lpn_to IS NULL THEN
      IF inv_mwb_globals.g_tree_lot_attr_query IS NULL AND inv_mwb_globals.g_parent_lot IS NULL
          AND inv_mwb_globals.g_supplier_lot_from IS NULL AND inv_mwb_globals.g_supplier_lot_to IS NULL THEN
        query_str  := query_str || 'SELECT v.organization_id from mtl_onhand_total_v v ';
        query_str  := query_str || 'WHERE 1=1 ';
      ELSE
        query_str  :=
              query_str
           || 'SELECT v.organization_id from'
           || '(SELECT lot_number lot_num, parent_lot_number, supplier_lot_number FROM mtl_lot_numbers WHERE 1=1 '
           || inv_mwb_globals.g_tree_lot_attr_query
           || ') mln, mtl_onhand_total_v v ';
	--bug 6633612
	IF (inv_mwb_globals.g_shipment_header_id is not null) THEN
		query_str  := query_str || ' , rcv_transactions rt, mtl_material_transactions mmt ';
	END IF;
	--bug 6633612
        query_str  := query_str || 'WHERE mln.lot_num = v.lot_number ';
 		--BUG 7556505
		   IF inv_mwb_globals.g_parent_lot IS NOT NULL THEN
		       query_str  := query_str || ' AND mln.parent_lot_number = :parent_lot ';
	           END IF;
		--BUG 7556505
                /* Bug 8396954 added below code for supplier_lot_number */
                IF (inv_mwb_globals.g_supplier_lot_from IS NOT NULL AND
                    inv_mwb_globals.g_supplier_lot_to IS NOT NULL AND
                    inv_mwb_globals.g_supplier_lot_from = inv_mwb_globals.g_supplier_lot_to) THEN
                    query_str  := query_str || ' AND mln.supplier_lot_number = :supplier_lot_f ';
                END IF;

                IF (inv_mwb_globals.g_supplier_lot_from IS NOT NULL AND
	            inv_mwb_globals.g_supplier_lot_from <> NVL(inv_mwb_globals.g_supplier_lot_to, -1) ) THEN
                    query_str  := query_str || ' AND mln.supplier_lot_number >= :supplier_lot_f ';
                END IF;

                IF (inv_mwb_globals.g_supplier_lot_to IS NOT NULL AND
	            inv_mwb_globals.g_supplier_lot_to <> NVL(inv_mwb_globals.g_supplier_lot_from, -1) ) THEN
                    query_str  := query_str || ' AND mln.supplier_lot_number <= :supplier_lot_t ';
                END IF;
                /* End of Bug 8396954 */
      END IF;

      --ER(3338592) Changes (If the user gives the value for the Qty then only
      --Group by clause comes in to effect)
	--bug 6633612
	IF (inv_mwb_globals.g_shipment_header_id is not null) THEN
		query_str := query_str || ' AND rt.shipment_header_id = :shipment_header_id '
					 || ' AND rt.transaction_id = mmt.rcv_transaction_id '
					 || ' AND rt.organization_id = mmt.organization_id '
					 || ' AND rt.transaction_type = ''DELIVER'''
					 || ' AND rt.destination_type_code = ''INVENTORY'''
					 || ' AND mmt.transaction_id = v.create_transaction_id '
					 || ' AND mmt.organization_id = v.organization_id ';

	END IF;
	--bug 6633612

      IF inv_mwb_globals.g_qty_from IS NOT NULL OR inv_mwb_globals.g_qty_to IS NOT NULL THEN
         group_str := ' GROUP BY  v.organization_id  ';
      END IF;

      IF inv_mwb_globals.g_organization_id IS NOT NULL THEN
        query_str  := query_str || 'AND v.organization_id = :org_id ';
      END IF;

      IF inv_mwb_globals.g_subinventory_code IS NOT NULL THEN
        query_str  := query_str || 'AND v.subinventory_code = :sub ';
        --ER(3338592) Changes
        IF group_str IS NOT NULL THEN
           group_str := group_str || ' , v.subinventory_code  ' ;
        END IF;
      END IF;

  -- NSRIVAST, INVCONV, Start
      IF inv_mwb_globals.g_grade_from_code IS NOT NULL THEN
         query_str := query_str || ' AND v.grade_code = :grade_f ' ;
      END IF ;
      IF inv_mwb_globals.g_tree_grade_code  IS NOT NULL THEN
         query_str := query_str || ' AND v.grade_code = :grade_c ' ;
      END IF ;
   -- NSRIVAST, INVCONV, End

      IF inv_mwb_globals.g_locator_id IS NOT NULL THEN
        query_str  := query_str || 'AND v.locator_id = :loc_id ';
        --ER(3338592) Changes
        IF group_str IS NOT NULL THEN
           group_str := group_str || ' , v.locator_id  ' ;
        END IF;
      END IF;

      IF inv_mwb_globals.g_project_id IS NOT NULL THEN
        query_str  := query_str || ' AND v.project_id = :pr_id ';
        --ER(3338592) Changes
        IF group_str IS NOT NULL THEN
           group_str := group_str || ' , v.project_id  ' ;
        END IF;
      END IF;

      IF inv_mwb_globals.g_task_id IS NOT NULL THEN
        query_str  := query_str || ' AND v.task_id = :ta_id ';
        --ER(3338592) Changes
        IF group_str IS NOT NULL THEN
           group_str := group_str || ' , inv_mwb_globals.g_task_id  ' ;
        END IF;
      END IF;

      IF inv_mwb_globals.g_inventory_item_id IS NOT NULL THEN
         query_str  := query_str || 'AND v.inventory_item_id = :item_id ';
      END IF;

      -- ER(9158529 client)
      IF inv_mwb_globals.g_client_code IS NOT NULL THEN
         query_str := query_str || ' AND v.inventory_item_id in (select DISTINCT inventory_item_id from mtl_system_items_b where wms_deploy.get_client_code(inventory_item_id) = :client_code) ';
      END IF;
      -- ER(9158529 client)

      --Bug # 3411938
      IF inv_mwb_globals.g_qty_from IS NOT NULL OR inv_mwb_globals.g_qty_to IS NOT NULL THEN
         group_str := group_str || ' , v.inventory_item_id, v.item_description, v.item ,v.uom ' ;
      END IF;

      --ER(3338592) Changes
      IF inv_mwb_globals.g_item_description IS NOT NULL THEN
         query_str := query_str || ' AND v.item_description LIKE :item_description ';
      END IF;

      IF inv_mwb_globals.g_revision IS NOT NULL THEN
        query_str  := query_str || 'AND v.revision = :rev ';
        --ER(3338592) Changes
        IF group_str IS NOT NULL THEN
           group_str := group_str || ' , v.revision  ' ;
        END IF;
      END IF;

      IF inv_mwb_globals.g_cost_group_id IS NOT NULL THEN
        query_str  := query_str || 'AND v.cost_group_id = :cg_id ';
        --ER(3338592) Changes
        IF group_str IS NOT NULL THEN
           group_str := group_str || ' , v.cost_group_id  ' ;
        END IF;
      END IF;

      -- ER(9158529)
      IF inv_mwb_globals.g_category_set_id IS NOT NULL THEN
        query_str := query_str || ' AND v.inventory_item_id in '
                                    || ' (select DISTINCT inventory_item_id from mtl_item_categories '
                                    || ' where organization_id = :organization_id '
                                    || ' and category_set_id = :category_set_id '
                                    || ' and category_id = nvl(:category_id, category_id)) ' ;
      END IF;
      -- ER(9158529)

      IF inv_mwb_globals.g_lot_from IS NOT NULL THEN
        query_str  := query_str || 'AND v.lot_number >= :lot_f ';
      END IF;

      IF inv_mwb_globals.g_lot_to IS NOT NULL THEN
        query_str  := query_str || 'AND v.lot_number <= :lot_t ';
      END IF;

      IF inv_mwb_globals.g_unit_number IS NOT NULL THEN
        query_str  := query_str || ' AND v.unit_number=:un_id ';
      END IF;

      /*IF inv_mwb_globals.g_site_id IS NOT NULL THEN
         query_str := query_str || ' AND PLANNING_TP_TYPE = 1 ';
         query_str := query_str || ' AND planning_organization_id = :site_id ' ;
       ELSIF inv_mwb_globals.g_vendor_id is NOT NULL THEN
         query_str := query_str || ' AND  PLANNING_TP_TYPE = 1 ';
         query_str := query_str || ' AND  planning_organization_id in ';
         query_str := query_str || ' (select vendor_site_id from po_vendor_sites_all ';
         query_str := query_str || '  where vendor_id = :vendor_id )';
      END IF;*/

      IF (inv_mwb_globals.g_planning_query_mode = 4) THEN
        query_str  := query_str || ' AND v.planning_organization_id = :plan_org ';
        query_str  := query_str || ' AND v.planning_tp_type = 2 ';
        --ER(3338592) Changes
        IF group_str IS NOT NULL THEN
           group_str := group_str || ' , v.planning_organization_id , v.planning_tp_type ' ;
        END IF;
      ELSIF(inv_mwb_globals.g_planning_query_mode = 3) THEN
        query_str  := query_str || ' AND v.planning_organization_id = :plan_org ';
        query_str  := query_str || ' AND v.planning_tp_type = 1 ';
        --ER(3338592) Changes
        IF group_str IS NOT NULL THEN
           group_str := group_str || ' , v.planning_organization_id , v.planning_tp_type ' ;
        END IF;
      ELSIF(inv_mwb_globals.g_planning_query_mode = 2) THEN
        query_str  := query_str || ' AND v.planning_tp_type = 1 ';
        --ER(3338592) Changes
        IF group_str IS NOT NULL THEN
           group_str := group_str || ' , v.planning_tp_type ' ;
        END IF;
      END IF;

      IF (inv_mwb_globals.g_owning_qry_mode = 4) THEN
        query_str  := query_str || ' AND v.owning_organization_id = :own_org ';
        query_str  := query_str || ' AND v.owning_tp_type = 2 ';
        --ER(3338592) Changes
        IF group_str IS NOT NULL THEN
           group_str := group_str || ' , v.owning_organization_id , v.owning_tp_type ' ;
        END IF;
      ELSIF(inv_mwb_globals.g_owning_qry_mode = 3) THEN
        query_str  := query_str || ' AND v.owning_organization_id = :own_org ';
        query_str  := query_str || ' AND v.owning_tp_type = 1 ';
        --ER(3338592) Changes
        IF group_str IS NOT NULL THEN
           group_str := group_str || ' , v.owning_organization_id , v.owning_tp_type ' ;
        END IF;
      ELSIF(inv_mwb_globals.g_owning_qry_mode = 2) THEN
        query_str  := query_str || ' AND v.owning_tp_type = 1 ';
        --ER(3338592) Changes
        IF group_str IS NOT NULL THEN
           group_str := group_str || ' , v.owning_tp_type ' ;
        END IF;
      END IF;

      --Bug #3411938
      IF inv_mwb_globals.g_qty_from IS NOT NULL OR inv_mwb_globals.g_qty_to IS NOT NULL THEN
         group_str := group_str || ' , v.planning_organization_id, v.planning_tp_type ';
         group_str := group_str || ' , v.owning_organization_id, v.owning_tp_type ';
         group_str := group_str || ' , v.item_lot_control, v.item_serial_control ';
      END IF;

      -- Onhand Material Status Support
      if (l_default_status_id is not null) then
         query_str  := query_str || ' AND v.onhand_status_id = mms.status_id ';
      else
         query_str  := query_str || 'AND (v.subinventory_status_id = mms.status_id ';
         query_str  := query_str || 'or v.locator_status_id = mms.status_id or ';
         query_str  := query_str || 'v.lot_status_id = mms.status_id) ';
      end if;

      IF inv_mwb_globals.g_qty_from IS NOT NULL THEN
         having_str := having_str || ' AND sum(on_hand) >= :qty_from ';
      END IF;

      IF inv_mwb_globals.g_qty_to IS NOT NULL THEN
         having_str := having_str || ' AND sum(on_hand) <= :qty_to ';
      END IF;

      IF inv_mwb_globals.g_organization_id IS NOT NULL THEN
        query_str  := query_str || 'AND v.organization_id = :org_id ';
      ELSE
        query_str  := query_str || ' AND  EXISTS ( SELECT 1 ' ;
        query_str  := query_str || ' FROM org_access_view oav ' ;
        query_str  := query_str || ' WHERE oav.organization_id   = v.organization_id ' ;
        query_str  := query_str || ' AND oav.responsibility_id   = :responsibility_id ' ;
        query_str  := query_str || ' AND oav.resp_application_id = :resp_application_id ) ' ;
      END IF;

      IF inv_mwb_globals.g_qty_from IS NOT NULL OR inv_mwb_globals.g_qty_to IS NOT NULL THEN
         query_str := query_str || group_str || having_str || '  ' ;
      END IF;

      --Reinitializing
      having_str := ' HAVING 1=1 ' ;

      query_str  := query_str || 'UNION ';

      IF (inv_mwb_globals.g_tree_lot_attr_query IS NULL AND inv_mwb_globals.g_parent_lot IS NULL
           AND inv_mwb_globals.g_supplier_lot_from IS NULL AND inv_mwb_globals.g_supplier_lot_to IS NULL)
         AND inv_mwb_globals.g_tree_serial_attr_query IS NULL THEN
        query_str  := query_str || 'SELECT v.organization_id from mtl_onhand_serial_v v ';
        query_str  := query_str || 'WHERE 1=1 ';
      ELSIF (inv_mwb_globals.g_tree_lot_attr_query IS NOT NULL OR inv_mwb_globals.g_parent_lot IS NOT NULL
            OR inv_mwb_globals.g_supplier_lot_from IS NOT NULL OR inv_mwb_globals.g_supplier_lot_to IS NOT NULL)
            AND inv_mwb_globals.g_tree_serial_attr_query IS NULL THEN
        query_str  :=
              query_str
           || 'SELECT v.organization_id from'
           || '(SELECT lot_number lot_num, parent_lot_number, supplier_lot_number FROM mtl_lot_numbers WHERE 1=1 '
           || inv_mwb_globals.g_tree_lot_attr_query
           || ') mln, mtl_onhand_serial_v v  ';

	--bug 6633612
	IF (inv_mwb_globals.g_shipment_header_id is not null) THEN
		query_str  := query_str || ' , rcv_transactions rt, mtl_material_transactions mmt ';
	END IF;
	--bug 6633612

        query_str  := query_str || 'WHERE mln.lot_num = v.lot_number ';
 		--BUG 7556505
		   IF inv_mwb_globals.g_parent_lot IS NOT NULL THEN
		       query_str  := query_str || ' AND mln.parent_lot_number = :parent_lot ';
	           END IF;
		--BUG 7556505
                /* Bug 8396954 added below code for supplier_lot_number */
                IF (inv_mwb_globals.g_supplier_lot_from IS NOT NULL AND
                    inv_mwb_globals.g_supplier_lot_to IS NOT NULL AND
                    inv_mwb_globals.g_supplier_lot_from = inv_mwb_globals.g_supplier_lot_to) THEN
                    query_str  := query_str || ' AND mln.supplier_lot_number = :supplier_lot_f ';
                END IF;

                IF (inv_mwb_globals.g_supplier_lot_from IS NOT NULL AND
	            inv_mwb_globals.g_supplier_lot_from <> NVL(inv_mwb_globals.g_supplier_lot_to, -1) ) THEN
                    query_str  := query_str || ' AND mln.supplier_lot_number >= :supplier_lot_f ';
                END IF;

                IF (inv_mwb_globals.g_supplier_lot_to IS NOT NULL AND
	            inv_mwb_globals.g_supplier_lot_to <> NVL(inv_mwb_globals.g_supplier_lot_from, -1) ) THEN
                    query_str  := query_str || ' AND mln.supplier_lot_number <= :supplier_lot_t ';
                END IF;
                /* End of Bug 8396954 */
      END IF;

      --ER(3338592) Changes (If the user gives the value for the Qty then only
      --Group by clause comes in to effect)

      IF inv_mwb_globals.g_qty_from IS NOT NULL OR inv_mwb_globals.g_qty_to IS NOT NULL THEN
         group_str := ' GROUP BY  v.organization_id ';
      END IF;

      IF inv_mwb_globals.g_organization_id IS NOT NULL THEN
        query_str  := query_str || 'AND v.organization_id = :org_id ';
      END IF;

      --bug 6633612
	IF (inv_mwb_globals.g_shipment_header_id is not null) THEN
		query_str := query_str || ' AND rt.shipment_header_id = :shipment_header_id '
					 || ' AND rt.transaction_id = mmt.rcv_transaction_id '
					 || ' AND rt.organization_id = mmt.organization_id '
					 || ' AND rt.transaction_type = ''DELIVER'''
					 || ' AND rt.destination_type_code = ''INVENTORY'''
					 || ' AND mmt.transaction_id = v.last_transaction_id '
					 || ' AND mmt.organization_id = v.organization_id ';

	END IF;
	--bug 6633612

      IF inv_mwb_globals.g_subinventory_code IS NOT NULL THEN
        query_str  := query_str || 'AND v.subinventory_code = :sub ';
        --ER(3338592) Changes
        IF group_str IS NOT NULL THEN
           group_str := group_str || ' , v.subinventory_code  ' ;
        END IF;
      END IF;

      IF inv_mwb_globals.g_locator_id IS NOT NULL THEN
        query_str  := query_str || 'AND v.locator_id = :loc_id ';
        --ER(3338592) Changes
        IF group_str IS NOT NULL THEN
           group_str := group_str || ' , v.locator_id  ' ;
        END IF;
      END IF;

      IF inv_mwb_globals.g_project_id IS NOT NULL THEN
        query_str  := query_str || ' AND v.project_id = :pr_id ';
        --ER(3338592) Changes
        IF group_str IS NOT NULL THEN
           group_str := group_str || ' , v.project_id  ' ;
        END IF;
      END IF;

      IF inv_mwb_globals.g_task_id IS NOT NULL THEN
        query_str  := query_str || ' AND v.task_id = :ta_id ';
        --ER(3338592) Changes
        IF group_str IS NOT NULL THEN
           group_str := group_str || ' , inv_mwb_globals.g_task_id  ' ;
        END IF;
      END IF;

      IF inv_mwb_globals.g_inventory_item_id IS NOT NULL THEN
         query_str  := query_str || 'AND v.inventory_item_id = :item_id ';
      END IF;

      -- ER(9158529 client)
      IF inv_mwb_globals.g_client_code IS NOT NULL THEN
         query_str := query_str || ' AND v.inventory_item_id in (select DISTINCT inventory_item_id from mtl_system_items_b where wms_deploy.get_client_code(inventory_item_id) = :client_code) ';
      END IF;
      -- ER(9158529 client)

      --Bug # 3411938
      IF inv_mwb_globals.g_qty_from IS NOT NULL OR inv_mwb_globals.g_qty_to IS NOT NULL THEN
         group_str := group_str || ' , v.inventory_item_id, v.item_description, v.item ,v.uom ' ;
      END IF;

      --ER(3338592) Changes
      IF inv_mwb_globals.g_item_description IS NOT NULL THEN
         query_str := query_str || ' AND v.item_description LIKE :item_description ';
      END IF;

      IF inv_mwb_globals.g_revision IS NOT NULL THEN
        query_str  := query_str || 'AND v.revision = :rev ';
        --ER(3338592) Changes
        IF group_str IS NOT NULL THEN
           group_str := group_str || ' , v.revision  ' ;
        END IF;
      END IF;

      IF inv_mwb_globals.g_cost_group_id IS NOT NULL THEN
        query_str  := query_str || 'AND v.cost_group_id = :cg_id ';
        --ER(3338592) Changes
        IF group_str IS NOT NULL THEN
           group_str := group_str || ' , v.cost_group_id  ' ;
        END IF;
      END IF;

      -- ER(9158529)
      IF inv_mwb_globals.g_category_set_id IS NOT NULL THEN
        query_str := query_str || ' AND v.inventory_item_id in '
                                    || ' (select DISTINCT inventory_item_id from mtl_item_categories '
                                    || ' where organization_id = :organization_id '
                                    || ' and category_set_id = :category_set_id '
                                    || ' and category_id = nvl(:category_id, category_id)) ' ;
      END IF;
      -- ER(9158529)

      IF inv_mwb_globals.g_lot_from IS NOT NULL THEN
        query_str  := query_str || 'AND v.lot_number >= :lot_f ';
      END IF;

      IF inv_mwb_globals.g_lot_to IS NOT NULL THEN
        query_str  := query_str || 'AND v.lot_number <= :lot_t ';
      END IF;

      IF inv_mwb_globals.g_serial_from IS NOT NULL THEN
        query_str  := query_str || 'AND v.serial_number >= :serial_f ';
      END IF;

      IF inv_mwb_globals.g_serial_to IS NOT NULL THEN
        query_str  := query_str || 'AND v.serial_number <= :serial_t ';
      END IF;

      IF inv_mwb_globals.g_unit_number IS NOT NULL THEN
        query_str  := query_str || ' AND v.unit_number=:un_id ';
      END IF;

      /*IF inv_mwb_globals.g_site_id IS NOT NULL THEN
         query_str := query_str || ' AND PLANNING_TP_TYPE = 1 ';
         query_str := query_str || ' AND planning_organization_id = :site_id ' ;
       ELSIF inv_mwb_globals.g_vendor_id is NOT NULL THEN
         query_str := query_str || ' AND  PLANNING_TP_TYPE = 1 ';
         query_str := query_str || ' AND  planning_organization_id in ';
         query_str := query_str || ' (select vendor_site_id from po_vendor_sites_all ';
         query_str := query_str || '  where vendor_id = :vendor_id )';
      END IF;*/

      IF (inv_mwb_globals.g_planning_query_mode = 4) THEN
        query_str  := query_str || ' AND v.planning_organization_id = :plan_org ';
        query_str  := query_str || ' AND v.planning_tp_type = 2 ';
      ELSIF(inv_mwb_globals.g_planning_query_mode = 3) THEN
        query_str  := query_str || ' AND v.planning_organization_id = :plan_org ';
        query_str  := query_str || ' AND v.planning_tp_type = 1 ';
      ELSIF(inv_mwb_globals.g_planning_query_mode = 2) THEN
        query_str  := query_str || ' AND v.planning_tp_type = 1 ';
      END IF;

      IF (inv_mwb_globals.g_owning_qry_mode = 4) THEN
        query_str  := query_str || ' AND v.owning_organization_id = :own_org ';
        query_str  := query_str || ' AND v.owning_tp_type = 2 ';
      ELSIF(inv_mwb_globals.g_owning_qry_mode = 3) THEN
        query_str  := query_str || ' AND v.owning_organization_id = :own_org ';
        query_str  := query_str || ' AND v.owning_tp_type = 1 ';
      ELSIF(inv_mwb_globals.g_owning_qry_mode = 2) THEN
        query_str  := query_str || ' AND v.owning_tp_type = 1 ';
      END IF;

      --Bug #3411938
      IF inv_mwb_globals.g_qty_from IS NOT NULL OR inv_mwb_globals.g_qty_to IS NOT NULL THEN
         group_str := group_str || ' , v.planning_organization_id, v.planning_tp_type ';
         group_str := group_str || ' , v.owning_organization_id, v.owning_tp_type ';
         group_str := group_str || ' , v.item_lot_control, v.item_serial_control ';
      END IF;

      -- Onhand Material Status Support
      if (l_default_status_id is not null) then
         query_str  := query_str || ' AND v.serial_status_id = mms.status_id ';
      else
         query_str  := query_str || 'AND (v.subinventory_status_id = mms.status_id ';
         query_str  := query_str || 'or v.locator_status_id = mms.status_id or ';
         query_str  := query_str || 'v.lot_status_id = mms.status_id or v.serial_status_id = mms.status_id) ';
      end if;

      IF inv_mwb_globals.g_qty_from IS NOT NULL THEN
         having_str := having_str || ' AND sum(on_hand) >= :qty_from ';
      END IF;

      IF inv_mwb_globals.g_qty_to IS NOT NULL THEN
         having_str := having_str || ' AND sum(on_hand) <= :qty_to ';
      END IF;

      IF inv_mwb_globals.g_organization_id IS NOT NULL THEN
        query_str  := query_str || 'AND v.organization_id = :org_id ';
      ELSE
        query_str  := query_str || ' and EXISTS ( SELECT 1 ' ;
        query_str  := query_str || ' FROM org_access_view oav ' ;
        query_str  := query_str || ' WHERE oav.organization_id = v.organization_id ' ;
        query_str  := query_str || ' AND oav.responsibility_id   = :responsibility_id ' ;
        query_str  := query_str || ' AND oav.resp_application_id = :resp_application_id ) ' ;
      END IF;

      IF inv_mwb_globals.g_qty_from IS NOT NULL OR inv_mwb_globals.g_qty_to IS NOT NULL THEN
         query_str := query_str || group_str || having_str || '  ' ;
      END IF;

      query_str  := query_str || ') ';

      IF inv_mwb_globals.g_status_id IS NOT NULL THEN
        query_str  := query_str || 'and mms.status_id = :st_id ';
      END IF;

      query_str  := query_str || ' ORDER BY status_code ';

    ELSIF inv_mwb_globals.g_lpn_from IS NOT NULL
          AND inv_mwb_globals.g_lpn_to IS NOT NULL THEN
          IF is_grade_t = TRUE THEN                           -- NSRIVAST, INVCONV
               table_required  := ' mtl_onhand_new_lpn_v ';   -- NSRIVAST, INVCONV
          ELSE
             table_required  := ' MTL_ONHAND_NEW_LPN_V mol ';
          END IF;
      query_str       := query_str || 'SELECT organization_id from ' || table_required;

      IF (inv_mwb_globals.g_lpn_from IS NOT NULL
          OR inv_mwb_globals.g_lpn_to IS NOT NULL) THEN
        query_str  := query_str || ', (select outermost_lpn_id from wms_license_plate_numbers wlpn ';
        query_str  := query_str || ' WHERE 1=1 ';

        IF inv_mwb_globals.g_locator_id IS NOT NULL THEN
          query_str  := query_str || 'AND wlpn.locator_id = :loc_id ';
        END IF;

        IF inv_mwb_globals.g_subinventory_code IS NOT NULL THEN
          query_str  := query_str || 'AND wlpn.subinventory_code = :sub ';
        END IF;

        IF inv_mwb_globals.g_organization_id IS NOT NULL THEN
          query_str  := query_str || 'AND wlpn.organization_id = :org_id ';
        END IF;

        IF inv_mwb_globals.g_lpn_from IS NOT NULL
           OR inv_mwb_globals.g_lpn_to IS NOT NULL THEN
          IF inv_mwb_globals.g_lpn_from IS NOT NULL
             AND inv_mwb_globals.g_lpn_to IS NULL THEN
            query_str  := query_str || ' and license_plate_number >= :lpn_f ';
          ELSIF inv_mwb_globals.g_lpn_from IS NULL
                AND inv_mwb_globals.g_lpn_to IS NOT NULL THEN
            query_str  := query_str || ' and license_plate_number <= :lpn_t ';
          ELSIF inv_mwb_globals.g_lpn_from IS NOT NULL
                AND inv_mwb_globals.g_lpn_to IS NOT NULL THEN
                  --bugfix#3646484
                  IF (inv_mwb_globals.g_lpn_from = inv_mwb_globals.g_lpn_to) THEN
                     --User is querying for single LPN so converted the range query to equality query
                     query_str := query_str || 'and license_plate_number = :lpn_f ';
                  ELSE
                     query_str  := query_str || ' and license_plate_number >= :lpn_f ';
                     query_str  := query_str || ' and license_plate_number <= :lpn_t ';
                  END IF;
          END IF;
        END IF;

        query_str  := query_str || 'group by wlpn.outermost_lpn_id) X ';
      END IF;

      IF (inv_mwb_globals.g_tree_lot_attr_query IS NULL AND inv_mwb_globals.g_parent_lot IS NULL
            AND inv_mwb_globals.g_supplier_lot_from IS NULL AND inv_mwb_globals.g_supplier_lot_to IS NULL)
         AND inv_mwb_globals.g_tree_serial_attr_query IS NULL THEN
        query_str  := query_str || 'WHERE 1=1 ';
      ELSIF (inv_mwb_globals.g_tree_lot_attr_query IS NULL AND inv_mwb_globals.g_parent_lot IS NULL
            AND inv_mwb_globals.g_supplier_lot_from IS NULL AND inv_mwb_globals.g_supplier_lot_to IS NULL)
            AND inv_mwb_globals.g_tree_serial_attr_query IS NOT NULL THEN
        query_str  :=
                     query_str || ', (SELECT serial_number serial_num FROM mtl_serial_numbers WHERE 1=1 ' || inv_mwb_globals.g_tree_serial_attr_query
                     || ') msn ';
        query_str  := query_str || 'WHERE msn.serial_num = serial_number ';
      ELSIF (inv_mwb_globals.g_tree_lot_attr_query IS NOT NULL OR inv_mwb_globals.g_parent_lot IS NOT NULL
            OR inv_mwb_globals.g_supplier_lot_from IS NOT NULL OR inv_mwb_globals.g_supplier_lot_to IS NOT NULL)
            AND inv_mwb_globals.g_tree_serial_attr_query IS NULL THEN
        query_str  := query_str || ', (SELECT lot_number lot_num, parent_lot_number, supplier_lot_number FROM mtl_lot_numbers WHERE 1=1 ' || inv_mwb_globals.g_tree_lot_attr_query || ') mln ';
        query_str  := query_str || 'WHERE mln.lot_num = lot_number ';
 		--BUG 7556505
		   IF inv_mwb_globals.g_parent_lot IS NOT NULL THEN
		       query_str  := query_str || ' AND mln.parent_lot_number = :parent_lot ';
	           END IF;
		--BUG 7556505
                /* Bug 8396954 added below code for supplier_lot_number */
                IF (inv_mwb_globals.g_supplier_lot_from IS NOT NULL AND
                    inv_mwb_globals.g_supplier_lot_to IS NOT NULL AND
                    inv_mwb_globals.g_supplier_lot_from = inv_mwb_globals.g_supplier_lot_to) THEN
                    query_str  := query_str || ' AND mln.supplier_lot_number = :supplier_lot_f ';
                END IF;

                IF (inv_mwb_globals.g_supplier_lot_from IS NOT NULL AND
	            inv_mwb_globals.g_supplier_lot_from <> NVL(inv_mwb_globals.g_supplier_lot_to, -1) ) THEN
                    query_str  := query_str || ' AND mln.supplier_lot_number >= :supplier_lot_f ';
                END IF;

                IF (inv_mwb_globals.g_supplier_lot_to IS NOT NULL AND
	            inv_mwb_globals.g_supplier_lot_to <> NVL(inv_mwb_globals.g_supplier_lot_from, -1) ) THEN
                    query_str  := query_str || ' AND mln.supplier_lot_number <= :supplier_lot_t ';
                END IF;
                /* End of Bug 8396954 */
      ELSIF (inv_mwb_globals.g_tree_lot_attr_query IS NOT NULL OR inv_mwb_globals.g_parent_lot IS NOT NULL
            OR inv_mwb_globals.g_supplier_lot_from IS NOT NULL OR inv_mwb_globals.g_supplier_lot_to IS NOT NULL)
            AND inv_mwb_globals.g_tree_serial_attr_query IS NOT NULL THEN
        query_str  :=
              query_str
           || ', (SELECT lot_number lot_num, parent_lot_number, supplier_lot_number FROM mtl_lot_numbers WHERE 1=1 '
           || inv_mwb_globals.g_tree_lot_attr_query
           || ') mln '
           || ', (SELECT serial_number serial_num FROM mtl_serial_numbers WHERE 1=1 '
           || inv_mwb_globals.g_tree_serial_attr_query
           || ') msn ';
        query_str  := query_str || 'WHERE mln.lot_num = lot_number ';
 		--BUG 7556505
		   IF inv_mwb_globals.g_parent_lot IS NOT NULL THEN
		       query_str  := query_str || ' AND mln.parent_lot_number = :parent_lot ';
	           END IF;
		--BUG 7556505
                /* Bug 8396954 added below code for supplier_lot_number */
                IF (inv_mwb_globals.g_supplier_lot_from IS NOT NULL AND
                    inv_mwb_globals.g_supplier_lot_to IS NOT NULL AND
                    inv_mwb_globals.g_supplier_lot_from = inv_mwb_globals.g_supplier_lot_to) THEN
                    query_str  := query_str || ' AND mln.supplier_lot_number = :supplier_lot_f ';
                END IF;

                IF (inv_mwb_globals.g_supplier_lot_from IS NOT NULL AND
	            inv_mwb_globals.g_supplier_lot_from <> NVL(inv_mwb_globals.g_supplier_lot_to, -1) ) THEN
                    query_str  := query_str || ' AND mln.supplier_lot_number >= :supplier_lot_f ';
                END IF;

                IF (inv_mwb_globals.g_supplier_lot_to IS NOT NULL AND
	            inv_mwb_globals.g_supplier_lot_to <> NVL(inv_mwb_globals.g_supplier_lot_from, -1) ) THEN
                    query_str  := query_str || ' AND mln.supplier_lot_number <= :supplier_lot_t ';
                END IF;
                /* End of Bug 8396954 */
        query_str  := query_str || 'AND msn.serial_num = serial_number ';
      END IF;

      --ER(3338592) Changes (If the user gives the value for the Qty then only
      --Group by clause comes in to effect)

      IF inv_mwb_globals.g_qty_from IS NOT NULL OR inv_mwb_globals.g_qty_to IS NOT NULL THEN
         group_str := ' GROUP BY  organization_id ';
      END IF;

      IF inv_mwb_globals.g_subinventory_code IS NOT NULL THEN
        query_str  := query_str || 'AND subinventory_code = :sub ';
        --ER(3338592) Changes
        IF group_str IS NOT NULL THEN
           group_str := group_str || ' , subinventory_code  ' ;
        END IF;
      END IF;

      IF inv_mwb_globals.g_locator_id IS NOT NULL THEN
        query_str  := query_str || 'AND locator_id = :loc_id ';
        --ER(3338592) Changes
        IF group_str IS NOT NULL THEN
           group_str := group_str || ' , locator_id  ' ;
        END IF;
      END IF;

      IF inv_mwb_globals.g_project_id IS NOT NULL THEN
        query_str  := query_str || ' AND project_id = :pr_id ';
        --ER(3338592) Changes
        IF group_str IS NOT NULL THEN
           group_str := group_str || ' , project_id  ' ;
        END IF;
      END IF;

      IF inv_mwb_globals.g_task_id IS NOT NULL THEN
        query_str  := query_str || ' AND task_id = :ta_id ';
        --ER(3338592) Changes
        IF group_str IS NOT NULL THEN
           group_str := group_str || ' , inv_mwb_globals.g_task_id  ' ;
        END IF;
      END IF;

      IF inv_mwb_globals.g_inventory_item_id IS NOT NULL THEN
         query_str  := query_str || 'AND inventory_item_id = :item_id ';
      END IF;

      -- ER(9158529 client)
      IF inv_mwb_globals.g_client_code IS NOT NULL THEN
         query_str := query_str || ' AND inventory_item_id in (select DISTINCT inventory_item_id from mtl_system_items_b where wms_deploy.get_client_code(inventory_item_id) = :client_code) ';
      END IF;
      -- ER(9158529 client)

      --Bug # 3411938
      IF inv_mwb_globals.g_qty_from IS NOT NULL OR inv_mwb_globals.g_qty_to IS NOT NULL THEN
         group_str := group_str || ' , inventory_item_id, item_description, item ,uom ' ;
      END IF;

      --ER(3338592) Changes
      IF inv_mwb_globals.g_item_description IS NOT NULL THEN
         query_str := query_str || ' AND item_description LIKE :item_description ';
      END IF;

      IF inv_mwb_globals.g_revision IS NOT NULL THEN
        query_str  := query_str || 'AND revision = :rev ';
        --ER(3338592) Changes
        IF group_str IS NOT NULL THEN
           group_str := group_str || ' , revision  ' ;
        END IF;
      END IF;

      IF inv_mwb_globals.g_cost_group_id IS NOT NULL THEN
        query_str  := query_str || 'AND cost_group_id = :cg_id ';
        --ER(3338592) Changes
        IF group_str IS NOT NULL THEN
           group_str := group_str || ' , cost_group_id  ' ;
        END IF;
      END IF;

      -- ER(9158529)
      IF inv_mwb_globals.g_category_set_id IS NOT NULL THEN
        query_str := query_str || ' AND inventory_item_id in '
                                    || ' (select DISTINCT inventory_item_id from mtl_item_categories '
                                    || ' where organization_id = :organization_id '
                                    || ' and category_set_id = :category_set_id '
                                    || ' and category_id = nvl(:category_id, category_id)) ' ;
      END IF;
      -- ER(9158529)

      IF inv_mwb_globals.g_lpn_from IS NOT NULL
         OR inv_mwb_globals.g_lpn_to IS NOT NULL THEN
        query_str  := query_str || ' AND mol.outermost_lpn_id = x.outermost_lpn_id ';
         --ER(3338592) Changes
         IF group_str IS NOT NULL THEN
            group_str := group_str || ' , lpn ' ;
         END IF;
      END IF;

      IF inv_mwb_globals.g_lot_from IS NOT NULL THEN
        query_str  := query_str || 'AND lot_number >= :lot_f ';
      END IF;

      IF inv_mwb_globals.g_lot_to IS NOT NULL THEN
        query_str  := query_str || 'AND lot_number <= :lot_t ';
      END IF;

      IF inv_mwb_globals.g_serial_from IS NOT NULL THEN
        query_str  := query_str || 'AND serial_number >= :serial_f ';
      END IF;

      IF inv_mwb_globals.g_serial_to IS NOT NULL THEN
        query_str  := query_str || 'AND serial_number <= :serial_t ';
      END IF;

      IF inv_mwb_globals.g_unit_number IS NOT NULL THEN
        query_str  := query_str || ' AND unit_number=:un_id ';
      END IF;

      /*IF inv_mwb_globals.g_site_id IS NOT NULL THEN
         query_str := query_str || ' AND PLANNING_TP_TYPE = 1 ';
         query_str := query_str || ' AND planning_organization_id = :site_id ' ;
       ELSIF inv_mwb_globals.g_vendor_id is NOT NULL THEN
         query_str := query_str || ' AND  PLANNING_TP_TYPE = 1 ';
         query_str := query_str || ' AND  planning_organization_id in ';
         query_str := query_str || ' (select vendor_site_id from po_vendor_sites_all ';
         query_str := query_str || '  where vendor_id = :vendor_id )';
      END IF;*/

      IF (inv_mwb_globals.g_planning_query_mode = 4) THEN
        query_str  := query_str || ' AND planning_organization_id = :plan_org ';
        query_str  := query_str || ' AND planning_tp_type = 2 ';
      ELSIF(inv_mwb_globals.g_planning_query_mode = 3) THEN
        query_str  := query_str || ' AND planning_organization_id = :plan_org ';
        query_str  := query_str || ' AND planning_tp_type = 1 ';
      ELSIF(inv_mwb_globals.g_planning_query_mode = 2) THEN
        query_str  := query_str || ' AND planning_tp_type = 1 ';
      END IF;

      IF (inv_mwb_globals.g_owning_qry_mode = 4) THEN
        query_str  := query_str || ' AND owning_organization_id = :own_org ';
        query_str  := query_str || ' AND owning_tp_type = 2 ';
      ELSIF(inv_mwb_globals.g_owning_qry_mode = 3) THEN
        query_str  := query_str || ' AND owning_organization_id = :own_org ';
        query_str  := query_str || ' AND owning_tp_type = 1 ';
      ELSIF(inv_mwb_globals.g_owning_qry_mode = 2) THEN
        query_str  := query_str || ' AND owning_tp_type = 1 ';
      END IF;

      --Bug #3411938
      IF inv_mwb_globals.g_qty_from IS NOT NULL OR inv_mwb_globals.g_qty_to IS NOT NULL THEN
         group_str := group_str || ' , planning_organization_id, planning_tp_type ';
         group_str := group_str || ' , owning_organization_id, owning_tp_type ';
         group_str := group_str || ' , item_lot_control, item_serial_control ';
      END IF;

      /* LPN Status Project */
      IF (l_default_status_id is not null) THEN
	query_str  := query_str || ' AND onhand_status_id = mms.status_id ';
      ELSE
        query_str       := query_str || 'AND (subinventory_status_id = mms.status_id ';
	query_str       := query_str || 'or locator_status_id = mms.status_id or ';
	query_str       := query_str || 'lot_status_id = mms.status_id or serial_status_id = mms.status_id) ';
      END IF;
      /* End of fix for LPN Status Project */

      IF inv_mwb_globals.g_qty_from IS NOT NULL THEN
         having_str := having_str || ' AND sum(on_hand) >= :qty_from ';
      END IF;

      IF inv_mwb_globals.g_qty_to IS NOT NULL THEN
         having_str := having_str || ' AND sum(on_hand) <= :qty_to ';
      END IF;

      IF inv_mwb_globals.g_organization_id IS NOT NULL THEN
        query_str  := query_str || 'AND organization_id = :org_id ';
      ELSE
        query_str  := query_str || ' and EXISTS ( SELECT 1 ' ;
        query_str  := query_str || ' FROM org_access_view oav ' ;
        query_str  := query_str || ' WHERE oav.organization_id = mol.organization_id ' ;
        query_str  := query_str || ' AND oav.responsibility_id   = :responsibility_id ' ;
        query_str  := query_str || ' AND oav.resp_application_id = :resp_application_id ) ' ;
      END IF;

      IF inv_mwb_globals.g_qty_from IS NOT NULL OR inv_mwb_globals.g_qty_to IS NOT NULL THEN
         query_str := query_str || group_str || having_str || '  ' ;
      END IF;

      query_str       := query_str || ') ';

      IF inv_mwb_globals.g_status_id IS NOT NULL THEN
        query_str  := query_str || 'and mms.status_id = :st_id ';
      END IF;

      query_str       := query_str || ' ORDER BY status_code ';

    END IF;

       -- Enable this during debugging
       inv_trx_util_pub.trace(query_str, 'Add-Status Material Workbench', 9);
       --trace1('Add_Statuses - ' || query_str);
    inv_mwb_globals.print_msg( g_pkg_name, l_procedure_name, query_str );

    inv_mwb_globals.g_last_query := query_str;

    query_hdl       := DBMS_SQL.open_cursor;
    DBMS_SQL.parse(query_hdl, query_str, DBMS_SQL.native);


    IF inv_mwb_globals.g_organization_id IS NOT NULL THEN
      DBMS_SQL.bind_variable(query_hdl, 'org_id', inv_mwb_globals.g_organization_id);
    END IF;

    IF inv_mwb_globals.g_subinventory_code IS NOT NULL THEN
      DBMS_SQL.bind_variable(query_hdl, 'sub', inv_mwb_globals.g_subinventory_code);
    END IF;

    IF inv_mwb_globals.g_locator_id IS NOT NULL THEN
      DBMS_SQL.bind_variable(query_hdl, 'loc_id', inv_mwb_globals.g_locator_id);
    END IF;

    IF inv_mwb_globals.g_inventory_item_id IS NOT NULL THEN
      DBMS_SQL.bind_variable(query_hdl, 'item_id', inv_mwb_globals.g_inventory_item_id);
    END IF;

    -- ER(9158529 client)
    IF inv_mwb_globals.g_client_code IS NOT NULL THEN
      DBMS_SQL.bind_variable(query_hdl, 'client_code', inv_mwb_globals.g_client_code);
    END IF;
    -- ER(9158529 client)

    IF inv_mwb_globals.g_revision IS NOT NULL THEN
      DBMS_SQL.bind_variable(query_hdl, 'rev', inv_mwb_globals.g_revision);
    END IF;

    IF inv_mwb_globals.g_cost_group_id IS NOT NULL THEN
      DBMS_SQL.bind_variable(query_hdl, 'cg_id', inv_mwb_globals.g_cost_group_id);
    END IF;

    -- ER(9158529)
    IF inv_mwb_globals.g_category_set_id IS NOT NULL THEN
      DBMS_SQL.bind_variable(query_hdl, 'organization_id', inv_mwb_globals.g_organization_id);
      DBMS_SQL.bind_variable(query_hdl, 'category_set_id', inv_mwb_globals.g_category_set_id);
      DBMS_SQL.bind_variable(query_hdl, 'category_id', inv_mwb_globals.g_category_id);
    END IF;
    -- ER(9158529)

    --BUG 7556505
    IF inv_mwb_globals.g_parent_lot IS NOT NULL THEN
      DBMS_SQL.bind_variable(query_hdl, 'parent_lot', inv_mwb_globals.g_parent_lot);
    END IF;
    --BUG 7556505

    IF inv_mwb_globals.g_lot_from IS NOT NULL THEN
      DBMS_SQL.bind_variable(query_hdl, 'lot_f', inv_mwb_globals.g_lot_from);
    END IF;

    IF inv_mwb_globals.g_lot_to IS NOT NULL THEN
      DBMS_SQL.bind_variable(query_hdl, 'lot_t', inv_mwb_globals.g_lot_to);
    END IF;

    /* Bug 8396954 added below code for supplier_lot_number */
    IF (inv_mwb_globals.g_supplier_lot_from IS NOT NULL AND
    inv_mwb_globals.g_supplier_lot_to IS NOT NULL AND
    inv_mwb_globals.g_supplier_lot_from = inv_mwb_globals.g_supplier_lot_to) THEN
         DBMS_SQL.bind_variable(query_hdl, 'supplier_lot_f', inv_mwb_globals.g_supplier_lot_from);
    END IF;

    IF (inv_mwb_globals.g_supplier_lot_from IS NOT NULL AND
        inv_mwb_globals.g_supplier_lot_from <> NVL(inv_mwb_globals.g_supplier_lot_to, -1) ) THEN
          DBMS_SQL.bind_variable(query_hdl, 'supplier_lot_f', inv_mwb_globals.g_supplier_lot_from);
    END IF;

    IF (inv_mwb_globals.g_supplier_lot_to IS NOT NULL AND
         inv_mwb_globals.g_supplier_lot_to <> NVL(inv_mwb_globals.g_supplier_lot_from, -1) ) THEN
          DBMS_SQL.bind_variable(query_hdl, 'supplier_lot_t', inv_mwb_globals.g_supplier_lot_to);
    END IF;
    /* End of Bug 8396954 */

-- NSRIVAST, INVCONV, Start
    IF inv_mwb_globals.g_grade_from_code IS NOT NULL THEN
      DBMS_SQL.bind_variable(query_hdl, 'grade_f',inv_mwb_globals.g_grade_from_code );
    END IF;
    IF inv_mwb_globals.g_tree_grade_code IS NOT NULL THEN
      DBMS_SQL.bind_variable(query_hdl, 'grade_c', inv_mwb_globals.g_tree_grade_code);
    END IF;
-- NSRIVAST, INVCONV, End

    IF inv_mwb_globals.g_serial_from IS NOT NULL THEN
      DBMS_SQL.bind_variable(query_hdl, 'serial_f', inv_mwb_globals.g_serial_from);
    END IF;

    --bug 6633612
    IF inv_mwb_globals.g_shipment_header_id IS NOT NULL THEN
      DBMS_SQL.bind_variable(query_hdl, 'shipment_header_id',inv_mwb_globals.g_shipment_header_id );
    END IF;
    --bug 6633612

    IF inv_mwb_globals.g_serial_to IS NOT NULL THEN
      DBMS_SQL.bind_variable(query_hdl, 'serial_t', inv_mwb_globals.g_serial_to);
    END IF;

      --bugfix#3646484
      IF ((inv_mwb_globals.g_lpn_from IS NOT NULL) AND (inv_mwb_globals.g_lpn_to IS NOT NULL) AND (inv_mwb_globals.g_lpn_from = inv_mwb_globals.g_lpn_to))  THEN
      --User is querying for single LPN so converted the range query to equality query
      --So it is enought to bind the from lpn alone
         dbms_sql.bind_variable(query_hdl, 'lpn_f', inv_mwb_globals.g_lpn_from);
      ELSE
          IF inv_mwb_globals.g_lpn_from IS NOT NULL THEN
            DBMS_SQL.bind_variable(query_hdl, 'lpn_f', inv_mwb_globals.g_lpn_from);
          END IF;

          IF inv_mwb_globals.g_lpn_to IS NOT NULL THEN
            DBMS_SQL.bind_variable(query_hdl, 'lpn_t', inv_mwb_globals.g_lpn_to);
          END IF;
      END IF;

    IF inv_mwb_globals.g_status_id IS NOT NULL THEN
      DBMS_SQL.bind_variable(query_hdl, 'st_id', inv_mwb_globals.g_status_id);
    END IF;

    IF inv_mwb_globals.g_mln_context_code IS NOT NULL THEN
      DBMS_SQL.bind_variable(query_hdl, 'mln_context', inv_mwb_globals.g_mln_context_code);
    END IF;

    IF inv_mwb_globals.g_project_id IS NOT NULL THEN
      DBMS_SQL.bind_variable(query_hdl, 'pr_id', inv_mwb_globals.g_project_id);
    END IF;

    IF inv_mwb_globals.g_task_id IS NOT NULL THEN
      DBMS_SQL.bind_variable(query_hdl, 'ta_id', inv_mwb_globals.g_task_id);
    END IF;

    IF inv_mwb_globals.g_unit_number IS NOT NULL THEN
      DBMS_SQL.bind_variable(query_hdl, 'un_id', inv_mwb_globals.g_unit_number);
    END IF;

    /*IF inv_mwb_globals.g_site_id IS NOT NULL THEN
       dbms_sql.bind_variable(query_hdl,'site_id', inv_mwb_globals.g_site_id);
     ELSIF inv_mwb_globals.g_vendor_id is NOT NULL THEN
       dbms_sql.bind_variable(query_hdl,'vendor_id', inv_mwb_globals.g_vendor_id);
    END IF;*/
    IF (inv_mwb_globals.g_owning_qry_mode = 4)
       OR(inv_mwb_globals.g_owning_qry_mode = 3) THEN
      DBMS_SQL.bind_variable(query_hdl, 'own_org', inv_mwb_globals.g_owning_org);
    END IF;

    IF (inv_mwb_globals.g_planning_query_mode = 4)
       OR(inv_mwb_globals.g_planning_query_mode = 3) THEN
      DBMS_SQL.bind_variable(query_hdl, 'plan_org', inv_mwb_globals.g_planning_org);
    END IF;

    --ER(3338592) Changes
    IF inv_mwb_globals.g_item_description IS NOT NULL THEN
       dbms_sql.bind_variable(query_hdl, 'item_description', inv_mwb_globals.g_item_description);
    END IF;

    IF inv_mwb_globals.g_qty_from IS NOT NULL THEN
       dbms_sql.bind_variable(query_hdl, 'qty_from', inv_mwb_globals.g_qty_from);
    END IF;

    IF inv_mwb_globals.g_qty_to IS NOT NULL THEN
       dbms_sql.bind_variable(query_hdl, 'qty_to', inv_mwb_globals.g_qty_to);
    END IF;
    --End of ER Changes

    -- Bug # 3411938
    IF inv_mwb_globals.g_organization_id IS NULL THEN
      IF inv_mwb_globals.g_responsibility_id  IS NOT NULL THEN
         dbms_sql.bind_variable(query_hdl, 'responsibility_id', inv_mwb_globals.g_responsibility_id );
      END IF;

      IF inv_mwb_globals.g_resp_application_id  IS NOT NULL THEN
         dbms_sql.bind_variable(query_hdl, 'resp_application_id', inv_mwb_globals.g_resp_application_id );
      END IF;
    END IF;

    DBMS_SQL.define_column(query_hdl, 1, status_id);
    DBMS_SQL.define_column(query_hdl, 2, status_code, 80);
    rows_processed  := DBMS_SQL.EXECUTE(query_hdl);

    LOOP
      -- fetch a row
      IF DBMS_SQL.fetch_rows(query_hdl) > 0 THEN
        -- fetch columns from the row
        DBMS_SQL.column_value(query_hdl, 1, status_id);
        DBMS_SQL.column_value(query_hdl, 2, status_code);

        IF j >= inv_mwb_globals.g_tree_node_low_value THEN
          x_node_tbl(i).state  := inv_mwb_globals.g_tree_node_state;
          x_node_tbl(i).DEPTH  := 1;
          x_node_tbl(i).label  := status_code;
          x_node_tbl(i).icon   := 'inv_stat';
          x_node_tbl(i).VALUE  := TO_CHAR(status_id);
          x_node_tbl(i).TYPE   := 'STATUS';
          i                    := i + 1;
        END IF;

        EXIT WHEN j >= inv_mwb_globals.g_tree_node_high_value;
        j  := j + 1;
      ELSE
        EXIT;
      END IF;
    END LOOP;

    DBMS_SQL.close_cursor(query_hdl); -- close cursor
    x_node_value    := j;
    x_tbl_index     := i;
  EXCEPTION
    WHEN NO_DATA_FOUND THEN
      NULL;
    WHEN OTHERS THEN
      RAISE;
  END add_statuses;

  PROCEDURE add_subs(
    x_node_value               IN OUT NOCOPY NUMBER
  , x_node_tbl                 IN OUT NOCOPY fnd_apptree.node_tbl_type
  , x_tbl_index                IN OUT NOCOPY NUMBER
  ) IS
    query_str      VARCHAR2(10000);
    query_hdl      NUMBER;
    rows_processed NUMBER;
    sub_code       mtl_onhand_quantities.subinventory_code%TYPE;
    i              NUMBER                                         := x_tbl_index;
    j              NUMBER                                         := x_node_value;
    table_required VARCHAR2(300);
    is_grade_t     BOOLEAN DEFAULT FALSE ; -- NSRIVAST, INVCONV

    l_procedure_name CONSTANT VARCHAR2(30) := 'ADD SUBS';
    l_default_status_id NUMBER; -- Onhand Material Status Support
   BEGIN
      inv_mwb_globals.print_msg( g_pkg_name, l_procedure_name, 'Entered' );

      IF inv_mwb_globals.g_view_by = 'STATUS' THEN
         inv_mwb_globals.g_only_subinventory_status := 1;
      ELSE
         inv_mwb_globals.g_only_subinventory_status := NULL;
      END IF;

      -- Onhand Material Status Support
      if (inv_mwb_globals.g_organization_id is not null) then
         if (inv_cache.set_org_rec(inv_mwb_globals.g_organization_id)) then
           l_default_status_id :=  inv_cache.org_rec.default_status_id;
         end if;
      elsif (inv_mwb_globals.g_tree_organization_id is not null) then
         if (inv_cache.set_org_rec(inv_mwb_globals.g_tree_organization_id)) then
           l_default_status_id :=  inv_cache.org_rec.default_status_id;
         end if;
      end if;

 -- NSRIVAST, INVCONV, Start
     IF  (inv_mwb_globals.g_grade_from_code IS NOT NULL OR  inv_mwb_globals.g_tree_grade_code IS NOT NULL OR inv_mwb_globals.g_grade_controlled <> 0) THEN
             is_grade_t     := TRUE ;
     END IF ;
-- NSRIVAST, INVCONV, End
    -- display all the LPNs in that location with the appropriate from
    -- and to LPN criteria, so include the subs that have them
    IF inv_mwb_globals.g_inventory_item_id IS NULL
       AND inv_mwb_globals.g_client_code IS NULL            -- ER(9158529 client)
       AND inv_mwb_globals.g_revision IS NULL
       AND inv_mwb_globals.g_category_set_id IS NULL        -- ER(9158529)
       AND inv_mwb_globals.g_category_id IS NULL            -- ER(9158529)
       AND inv_mwb_globals.g_parent_lot IS NULL				--BUG 7556505
       AND inv_mwb_globals.g_lot_from IS NULL
       AND inv_mwb_globals.g_lot_to IS NULL
       AND inv_mwb_globals.g_supplier_lot_from IS NULL      -- Bug 8396954
       AND inv_mwb_globals.g_supplier_lot_to IS NULL        -- Bug 8396954
       AND inv_mwb_globals.g_serial_from IS NULL
       AND inv_mwb_globals.g_serial_to IS NULL
       AND inv_mwb_globals.g_cost_group_id IS NULL
       AND inv_mwb_globals.g_status_id IS NULL
       AND inv_mwb_globals.g_tree_lot_attr_query IS NULL
       AND inv_mwb_globals.g_tree_serial_attr_query IS NULL
       AND inv_mwb_globals.g_unit_number IS NULL
       AND inv_mwb_globals.g_project_id IS NULL
       AND inv_mwb_globals.g_task_id IS NULL
       AND inv_mwb_globals.g_planning_org IS NULL
       AND inv_mwb_globals.g_owning_org IS NULL
       AND(inv_mwb_globals.g_lpn_from IS NOT NULL
           OR inv_mwb_globals.g_lpn_to IS NOT NULL)
       --ER(3338592) Changes
       AND inv_mwb_globals.g_item_description  IS NULL THEN
       --End of ER Changes
      query_str  := 'select wlpn.subinventory_code ';
      query_str  := query_str || 'FROM wms_license_plate_numbers wlpn, mtl_secondary_inventories msi WHERE 1=1 and msi.secondary_inventory_name = wlpn.subinventory_code and wlpn.organization_id = msi.organization_id ';

      --     query_str := query_str || 'AND (lpn_context = 1 or lpn_context=11 ');

      IF inv_mwb_globals.g_tree_mat_loc_id = 2 THEN
        query_str  := query_str || ' AND wlpn.lpn_context = 3 ';
      ELSIF inv_mwb_globals.g_tree_mat_loc_id = 1 THEN
        query_str  := query_str || ' AND (wlpn.lpn_context = 1 or wlpn.lpn_context=9 or wlpn.lpn_context=11 ) ';
      END IF;

      IF inv_mwb_globals.g_locator_id IS NOT NULL THEN
        query_str  := query_str || 'AND wlpn.locator_id = :loc_id ';
      END IF;

  -- NSRIVAST, INVCONV, Start
      IF inv_mwb_globals.g_grade_from_code IS NOT NULL THEN
         query_str := query_str || ' AND wlpn.grade_code = :grade_f ' ;
      END IF ;
      IF inv_mwb_globals.g_tree_grade_code  IS NOT NULL THEN
         query_str := query_str || ' AND wlpn.grade_code = :grade_c ' ;
      END IF ;
   -- NSRIVAST, INVCONV, End

      IF inv_mwb_globals.g_subinventory_code IS NOT NULL THEN
        query_str  := query_str || 'AND wlpn.subinventory_code = :sub ';
      END IF;

      IF inv_mwb_globals.g_only_subinventory_status = 1 THEN
        query_str  := query_str || 'AND msi.status_id = :st_id ';
      END IF;


      IF inv_mwb_globals.g_organization_id IS NOT NULL
      OR inv_mwb_globals.g_tree_organization_id IS NOT NULL THEN
        query_str  := query_str || 'AND wlpn.organization_id = :org_id ';
      END IF;

      --bugfix#3646484
      IF ((inv_mwb_globals.g_lpn_from IS NOT NULL) AND (inv_mwb_globals.g_lpn_to IS NOT NULL) AND (inv_mwb_globals.g_lpn_from = inv_mwb_globals.g_lpn_to))  THEN
      --User is querying for single LPN so converted the range query to equality query
         query_str := query_str || 'and license_plate_number = :lpn_f ';
      ELSE
         IF inv_mwb_globals.g_lpn_from IS NOT NULL THEN
           query_str  := query_str || 'and license_plate_number >= :lpn_f ';
         END IF;

         IF inv_mwb_globals.g_lpn_to IS NOT NULL THEN
           query_str  := query_str || 'and license_plate_number <= :lpn_t ';
         END IF;
      END IF;

      query_str  := query_str || ' GROUP BY subinventory_code ';
      query_str  := query_str || ' ORDER BY subinventory_code ';
    ELSE
      query_str  := 'SELECT msi.secondary_inventory_name subinventory_code FROM mtl_secondary_inventories msi ';
      query_str  := query_str || ' WHERE msi.secondary_inventory_name in ( ';

      -- Need to use MTL_ONHAND_TOTAL_V
      IF (
          inv_mwb_globals.g_serial_from IS NULL
          AND inv_mwb_globals.g_serial_to IS NULL
          AND inv_mwb_globals.g_unit_number IS NULL
          AND inv_mwb_globals.g_status_id IS NULL
          AND inv_mwb_globals.g_lpn_from IS NULL
          AND inv_mwb_globals.g_lpn_to IS NULL
          AND inv_mwb_globals.g_tree_serial_attr_query IS NULL
         ) THEN
        IF inv_mwb_globals.g_tree_mat_loc_id = 2 THEN
          table_required  := ' mtl_rcv_mwb_onhand_v v ';
        ELSIF(inv_mwb_globals.g_status_id IS NULL) THEN
          table_required  := ' mtl_onhand_total_mwb_v v ';
             IF is_grade_t = TRUE THEN                       -- NSRIVAST, INVCONV
             table_required  := ' mtl_onhand_total_v v ';  -- NSRIVAST, INVCONV
             END IF;
        ELSE
          table_required  := ' mtl_onhand_total_v v ';
        END IF;
		--bug 6633612
		IF (inv_mwb_globals.g_shipment_header_id is not null) THEN
			table_required  := table_required || ' , rcv_transactions rt, mtl_material_transactions mmt ';
		END IF;
		--bug 6633612

        IF inv_mwb_globals.g_tree_lot_attr_query IS NULL AND inv_mwb_globals.g_parent_lot IS NULL
            AND inv_mwb_globals.g_supplier_lot_from IS NULL AND inv_mwb_globals.g_supplier_lot_to IS NULL THEN
          query_str  := query_str || ' SELECT v.subinventory_code from ' || table_required;
          query_str  := query_str || ' WHERE 1=1 ';
        ELSE
          query_str  :=
                query_str
             || ' SELECT v.subinventory_code from '
             || '(SELECT lot_number lot_num, parent_lot_number, supplier_lot_number FROM mtl_lot_numbers WHERE 1=1 '
             || inv_mwb_globals.g_tree_lot_attr_query
             || ') mln, '
             || table_required;
	query_str  := query_str || 'WHERE mln.lot_num = v.lot_number ';
 		--BUG 7556505
		   IF inv_mwb_globals.g_parent_lot IS NOT NULL THEN
		       query_str  := query_str || ' AND mln.parent_lot_number = :parent_lot ';
	           END IF;
		--BUG 7556505
                /* Bug 8396954 added below code for supplier_lot_number */
                IF (inv_mwb_globals.g_supplier_lot_from IS NOT NULL AND
                    inv_mwb_globals.g_supplier_lot_to IS NOT NULL AND
                    inv_mwb_globals.g_supplier_lot_from = inv_mwb_globals.g_supplier_lot_to) THEN
                    query_str  := query_str || ' AND mln.supplier_lot_number = :supplier_lot_f ';
                END IF;

                IF (inv_mwb_globals.g_supplier_lot_from IS NOT NULL AND
	            inv_mwb_globals.g_supplier_lot_from <> NVL(inv_mwb_globals.g_supplier_lot_to, -1) ) THEN
                    query_str  := query_str || ' AND mln.supplier_lot_number >= :supplier_lot_f ';
                END IF;

                IF (inv_mwb_globals.g_supplier_lot_to IS NOT NULL AND
	            inv_mwb_globals.g_supplier_lot_to <> NVL(inv_mwb_globals.g_supplier_lot_from, -1) ) THEN
                    query_str  := query_str || ' AND mln.supplier_lot_number <= :supplier_lot_t ';
                END IF;
                /* End of Bug 8396954 */
        END IF;

        -- Select Only subinventory status if only subbinventory status is not 1
        /*
        IF inv_mwb_globals.g_status_id IS NOT NULL THEN
          IF inv_mwb_globals.g_only_subinventory_status = 1 THEN
            query_str  := query_str || ' AND (subinventory_status_id = :st_id or locator_status_id = :st_id ';
            query_str  := query_str || ' OR lot_status_id = :st_id or serial_status_id = :st_id) ';
          ELSE
            query_str  := query_str || ' AND subinventory_status_id = :st_id ';
          END IF;
        END IF;
         */


  -- NSRIVAST, INVCONV, Start
      IF inv_mwb_globals.g_grade_from_code IS NOT NULL THEN
         query_str := query_str || ' AND v.grade_code = :grade_f ' ;
      END IF ;
      IF inv_mwb_globals.g_tree_grade_code  IS NOT NULL THEN
         query_str := query_str || ' AND v.grade_code = :grade_c ' ;
      END IF ;
   -- NSRIVAST, INVCONV, End

	--bug 6633612
	IF (inv_mwb_globals.g_shipment_header_id is not null) THEN
		query_str := query_str || ' AND rt.shipment_header_id = :shipment_header_id '
					 || ' AND rt.transaction_id = mmt.rcv_transaction_id '
					 || ' AND rt.organization_id = mmt.organization_id '
					 || ' AND rt.transaction_type = ''DELIVER'''
					 || ' AND rt.destination_type_code = ''INVENTORY'''
					 || ' AND mmt.transaction_id = v.create_transaction_id '
					 || ' AND mmt.organization_id = v.organization_id ';

	END IF;
	--bug 6633612


        IF inv_mwb_globals.g_project_id IS NOT NULL THEN
          query_str  := query_str || ' AND v.project_id = :pr_id ';
        END IF;

        IF inv_mwb_globals.g_task_id IS NOT NULL THEN
          query_str  := query_str || ' AND v.task_id = :ta_id ';
        END IF;

        /*IF inv_mwb_globals.g_site_id IS NOT NULL THEN
           query_str := query_str || ' AND PLANNING_TP_TYPE = 1 ';
           query_str := query_str || ' AND planning_organization_id = :site_id ' ;
         ELSIF inv_mwb_globals.g_vendor_id is NOT NULL THEN
           query_str := query_str || ' AND  PLANNING_TP_TYPE = 1 ';
           query_str := query_str || ' AND  planning_organization_id in ';
           query_str := query_str || ' (select vendor_site_id from po_vendor_sites_all ';
           query_str := query_str || '  where vendor_id = :vendor_id )';
        END IF;*/
        IF (inv_mwb_globals.g_owning_qry_mode = 4) THEN
          query_str  := query_str || ' AND v.owning_organization_id = :own_org ';
          query_str  := query_str || ' AND v.owning_tp_type = 2 ';
        ELSIF(inv_mwb_globals.g_owning_qry_mode = 3) THEN
          query_str  := query_str || ' AND v.owning_organization_id = :own_org ';
          query_str  := query_str || ' AND v.owning_tp_type = 1 ';
        ELSIF(inv_mwb_globals.g_owning_qry_mode = 2) THEN
          query_str  := query_str || ' AND v.owning_tp_type = 1 ';
        END IF;

        IF (inv_mwb_globals.g_planning_query_mode = 4) THEN
          query_str  := query_str || ' AND v.planning_organization_id = :plan_org ';
          query_str  := query_str || ' AND v.planning_tp_type = 2 ';
        ELSIF(inv_mwb_globals.g_planning_query_mode = 3) THEN
          query_str  := query_str || ' AND v.planning_organization_id = :plan_org ';
          query_str  := query_str || ' AND v.planning_tp_type = 1 ';
        ELSIF(inv_mwb_globals.g_planning_query_mode = 2) THEN
          query_str  := query_str || ' AND v.planning_tp_type = 1 ';
        END IF;

        IF inv_mwb_globals.g_lot_from IS NOT NULL THEN
          query_str  := query_str || 'AND v.lot_number >= :lot_f ';
        END IF;

        IF inv_mwb_globals.g_lot_to IS NOT NULL THEN
          query_str  := query_str || 'AND v.lot_number <= :lot_t ';
        END IF;

        IF inv_mwb_globals.g_cost_group_id IS NOT NULL THEN
          query_str  := query_str || 'AND v.cost_group_id = :cg_id ';
        END IF;

        IF inv_mwb_globals.g_revision IS NOT NULL THEN
          query_str  := query_str || 'AND v.revision = :rev ';
        END IF;

        IF inv_mwb_globals.g_inventory_item_id IS NOT NULL THEN
          query_str  := query_str || 'AND v.inventory_item_id = :item_id ';
        END IF;

        -- ER(9158529 client)
        IF inv_mwb_globals.g_client_code IS NOT NULL THEN
          query_str := query_str || ' AND v.inventory_item_id in (select DISTINCT inventory_item_id from mtl_system_items_b where wms_deploy.get_client_code(inventory_item_id) = :client_code) ';
        END IF;
        -- ER(9158529 client)

        -- ER(9158529)
        IF inv_mwb_globals.g_category_set_id IS NOT NULL THEN
          query_str := query_str || ' AND v.inventory_item_id in '
                                      || ' (select DISTINCT inventory_item_id from mtl_item_categories '
                                      || ' where organization_id = :organization_id '
                                      || ' and category_set_id = :category_set_id '
                                      || ' and category_id = nvl(:category_id, category_id)) ' ;
        END IF;
        -- ER(9158529)

        IF inv_mwb_globals.g_locator_id IS NOT NULL THEN
          query_str  := query_str || 'AND v.locator_id = :loc_id ';
        END IF;

        --ER(3338592) Changes
        IF inv_mwb_globals.g_item_description IS NOT NULL THEN
           query_str := query_str || ' AND v.item_description LIKE :item_description ';
        END IF;
        --End of ER Changes

        query_str  := query_str || 'AND v.subinventory_code = msi.secondary_inventory_name ';

        IF inv_mwb_globals.g_organization_id IS NOT NULL
        OR inv_mwb_globals.g_tree_organization_id IS NOT NULL THEN
          query_str  := query_str || 'AND v.organization_id = :org_id ';
        END IF;

        -- Onhand Material Status Support : If the status is tracked at the onhand level check
        -- for the status from the onhand table (MOQD).
        IF l_default_status_id IS NOT NULL THEN
           IF inv_mwb_globals.g_only_subinventory_status = 1
              OR inv_mwb_globals.g_status_id IS NOT NULL THEN
              query_str  := query_str || ' AND v.onhand_status_id = :st_id ';
           END IF;
        END IF;

        query_str  := query_str || ') ';

        IF inv_mwb_globals.g_subinventory_code IS NOT NULL THEN
          query_str  := query_str || 'and msi.secondary_inventory_name = :sub ';
        END IF;

        IF inv_mwb_globals.g_organization_id IS NOT NULL
        OR inv_mwb_globals.g_tree_organization_id IS NOT NULL THEN
          query_str  := query_str || ' and msi.organization_id = :org_id ';
        END IF;

         /*
          *  IF g_only_subinventory_status = 1, it means we are doing a view by 'STATUS'
          *  in this case restrict the subinventories by tree_status_id not Query find status
          *
          */
        -- Onhand Material Status Support : Add the following where clause only if the status
        -- not tracked at onhand level.
        if (l_default_status_id is null) then
           IF inv_mwb_globals.g_only_subinventory_status = 1 THEN
               query_str  := query_str || ' AND msi.status_id = :st_id ';
           ELSE
              IF inv_mwb_globals.g_status_id IS NOT NULL THEN
                 query_str  := query_str || ' AND msi.status_id = :st_id ';
              END IF;
           END IF;
        end if;

        IF inv_mwb_globals.g_tree_mat_loc_id = 2 THEN
          query_str  := query_str || ' AND msi.subinventory_type = 2 ';
        END IF;

        query_str  := query_str || ' ORDER BY subinventory_code ';
      -- Need to use MTL_ONHAND_SERIAL_V
      ELSIF(
            (
             inv_mwb_globals.g_serial_from IS NOT NULL
             OR inv_mwb_globals.g_serial_to IS NOT NULL
             OR inv_mwb_globals.g_tree_serial_attr_query IS NOT NULL
             OR inv_mwb_globals.g_unit_number IS NOT NULL
            )
            AND inv_mwb_globals.g_lpn_from IS NULL
            AND inv_mwb_globals.g_lpn_to IS NULL
           ) THEN
        IF inv_mwb_globals.g_tree_mat_loc_id = 2 THEN
          table_required  := ' mtl_rcv_serial_oh_v v ';
        ELSIF(inv_mwb_globals.g_status_id IS NULL) THEN
          table_required  := ' mtl_onhand_serial_mwb_v v ';
           IF is_grade_t = TRUE THEN                        -- NSRIVAST, INVCONV
              table_required  := ' mtl_onhand_serial_v v ';   -- NSRIVAST, INVCONV
           END IF;
        ELSE
          table_required  := ' mtl_onhand_serial_v v ';
        END IF;

		 --bug 6633612
		IF (inv_mwb_globals.g_shipment_header_id is not null) THEN
			table_required  := table_required || ' , rcv_transactions rt, mtl_material_transactions mmt ';
		END IF;
		--bug 6633612

        IF (inv_mwb_globals.g_tree_lot_attr_query IS NULL AND inv_mwb_globals.g_parent_lot IS NULL
           AND inv_mwb_globals.g_supplier_lot_from IS NULL AND inv_mwb_globals.g_supplier_lot_to IS NULL)
           AND inv_mwb_globals.g_tree_serial_attr_query IS NULL THEN
          query_str  := query_str || 'SELECT v.subinventory_code from ' || table_required;
          query_str  := query_str || 'WHERE 1=1 ';
        ELSIF (inv_mwb_globals.g_tree_lot_attr_query IS NULL AND inv_mwb_globals.g_parent_lot IS NULL
                AND inv_mwb_globals.g_supplier_lot_from IS NULL AND inv_mwb_globals.g_supplier_lot_to IS NULL)
              AND inv_mwb_globals.g_tree_serial_attr_query IS NOT NULL THEN
          query_str  :=
                query_str
             || 'SELECT v.subinventory_code from'
             || '(SELECT serial_number serial_num FROM mtl_serial_numbers WHERE 1=1 '
             || inv_mwb_globals.g_tree_serial_attr_query
             || ') msn, '
             || table_required;
          query_str  := query_str || 'WHERE msn.serial_num = v.serial_number ';
        ELSIF (inv_mwb_globals.g_tree_lot_attr_query IS NOT NULL OR inv_mwb_globals.g_parent_lot IS NOT NULL
                OR inv_mwb_globals.g_supplier_lot_from IS NOT NULL OR inv_mwb_globals.g_supplier_lot_to IS NOT NULL)
              AND inv_mwb_globals.g_tree_serial_attr_query IS NULL THEN
          query_str  :=
                query_str
             || 'SELECT v.subinventory_code from'
             || '(SELECT lot_number lot_num, parent_lot_number, supplier_lot_number FROM mtl_lot_numbers WHERE 1=1 '
             || inv_mwb_globals.g_tree_lot_attr_query
             || ') mln, '
             || table_required;
          query_str  := query_str || 'WHERE mln.lot_num = v.lot_number ';
 		--BUG 7556505
		   IF inv_mwb_globals.g_parent_lot IS NOT NULL THEN
		       query_str  := query_str || ' AND mln.parent_lot_number = :parent_lot ';
	           END IF;
		--BUG 7556505
                /* Bug 8396954 added below code for supplier_lot_number */
                IF (inv_mwb_globals.g_supplier_lot_from IS NOT NULL AND
                    inv_mwb_globals.g_supplier_lot_to IS NOT NULL AND
                    inv_mwb_globals.g_supplier_lot_from = inv_mwb_globals.g_supplier_lot_to) THEN
                    query_str  := query_str || ' AND mln.supplier_lot_number = :supplier_lot_f ';
                END IF;

                IF (inv_mwb_globals.g_supplier_lot_from IS NOT NULL AND
	            inv_mwb_globals.g_supplier_lot_from <> NVL(inv_mwb_globals.g_supplier_lot_to, -1) ) THEN
                    query_str  := query_str || ' AND mln.supplier_lot_number >= :supplier_lot_f ';
                END IF;

                IF (inv_mwb_globals.g_supplier_lot_to IS NOT NULL AND
	            inv_mwb_globals.g_supplier_lot_to <> NVL(inv_mwb_globals.g_supplier_lot_from, -1) ) THEN
                    query_str  := query_str || ' AND mln.supplier_lot_number <= :supplier_lot_t ';
                END IF;
                /* End of Bug 8396954 */
    	ELSIF (inv_mwb_globals.g_tree_lot_attr_query IS NOT NULL OR inv_mwb_globals.g_parent_lot IS NOT NULL
                 OR inv_mwb_globals.g_supplier_lot_from IS NOT NULL OR inv_mwb_globals.g_supplier_lot_to IS NOT NULL)
              AND inv_mwb_globals.g_tree_serial_attr_query IS NOT NULL THEN
          query_str  :=
                query_str
             || 'SELECT v.subinventory_code from'
             || '(SELECT lot_number lot_num, parent_lot_number, supplier_lot_number FROM mtl_lot_numbers WHERE 1=1 '
             || inv_mwb_globals.g_tree_lot_attr_query
             || ') mln, '
             || '(SELECT serial_number serial_num FROM mtl_serial_numbers WHERE 1=1 '
             || inv_mwb_globals.g_tree_serial_attr_query
             || ') msn, '
             || table_required;
          query_str  := query_str || 'WHERE mln.lot_num = v.lot_number ';
 		--BUG 7556505
		   IF inv_mwb_globals.g_parent_lot IS NOT NULL THEN
		       query_str  := query_str || ' AND mln.parent_lot_number = :parent_lot ';
	           END IF;
		--BUG 7556505
                /* Bug 8396954 added below code for supplier_lot_number */
                IF (inv_mwb_globals.g_supplier_lot_from IS NOT NULL AND
                    inv_mwb_globals.g_supplier_lot_to IS NOT NULL AND
                    inv_mwb_globals.g_supplier_lot_from = inv_mwb_globals.g_supplier_lot_to) THEN
                    query_str  := query_str || ' AND mln.supplier_lot_number = :supplier_lot_f ';
                END IF;

                IF (inv_mwb_globals.g_supplier_lot_from IS NOT NULL AND
	            inv_mwb_globals.g_supplier_lot_from <> NVL(inv_mwb_globals.g_supplier_lot_to, -1) ) THEN
                    query_str  := query_str || ' AND mln.supplier_lot_number >= :supplier_lot_f ';
                END IF;

                IF (inv_mwb_globals.g_supplier_lot_to IS NOT NULL AND
	            inv_mwb_globals.g_supplier_lot_to <> NVL(inv_mwb_globals.g_supplier_lot_from, -1) ) THEN
                    query_str  := query_str || ' AND mln.supplier_lot_number <= :supplier_lot_t ';
                END IF;
                /* End of Bug 8396954 */
          query_str  := query_str || 'AND msn.serial_num = v.serial_number ';
        END IF;


	--bug 6633612
	IF (inv_mwb_globals.g_shipment_header_id is not null) THEN
		query_str := query_str || ' AND rt.shipment_header_id = :shipment_header_id '
					 || ' AND rt.transaction_id = mmt.rcv_transaction_id '
					 || ' AND rt.organization_id = mmt.organization_id '
					 || ' AND rt.transaction_type = ''DELIVER'''
					 || ' AND rt.destination_type_code = ''INVENTORY'''
					 || ' AND mmt.transaction_id = v.last_transaction_id '
					 || ' AND mmt.organization_id = v.organization_id ';

	END IF;
	--bug 6633612



        IF inv_mwb_globals.g_project_id IS NOT NULL THEN
          query_str  := query_str || ' AND v.project_id = :pr_id ';
        END IF;

        IF inv_mwb_globals.g_task_id IS NOT NULL THEN
          query_str  := query_str || ' AND v.task_id = :ta_id ';
        END IF;

        IF inv_mwb_globals.g_unit_number IS NOT NULL THEN
          query_str  := query_str || ' AND v.unit_number=:un_id ';
        END IF;

        /*IF inv_mwb_globals.g_site_id IS NOT NULL THEN
           query_str := query_str || ' AND PLANNING_TP_TYPE = 1 ';
           query_str := query_str || ' AND planning_organization_id = :site_id ' ;
         ELSIF inv_mwb_globals.g_vendor_id is NOT NULL THEN
           query_str := query_str || ' AND  PLANNING_TP_TYPE = 1 ';
           query_str := query_str || ' AND  planning_organization_id in ';
           query_str := query_str || ' (select vendor_site_id from po_vendor_sites_all ';
           query_str := query_str || '  where vendor_id = :vendor_id )';
        END IF;*/
        IF (inv_mwb_globals.g_owning_qry_mode = 4) THEN
          query_str  := query_str || ' AND v.owning_organization_id = :own_org ';
          query_str  := query_str || ' AND v.owning_tp_type = 2 ';
        ELSIF(inv_mwb_globals.g_owning_qry_mode = 3) THEN
          query_str  := query_str || ' AND v.owning_organization_id = :own_org ';
          query_str  := query_str || ' AND v.owning_tp_type = 1 ';
        ELSIF(inv_mwb_globals.g_owning_qry_mode = 2) THEN
          query_str  := query_str || ' AND v.owning_tp_type = 1 ';
        END IF;

        IF (inv_mwb_globals.g_planning_query_mode = 4) THEN
          query_str  := query_str || ' AND v.planning_organization_id = :plan_org ';
          query_str  := query_str || ' AND v.planning_tp_type = 2 ';
        ELSIF(inv_mwb_globals.g_planning_query_mode = 3) THEN
          query_str  := query_str || ' AND v.planning_organization_id = :plan_org ';
          query_str  := query_str || ' AND v.planning_tp_type = 1 ';
        ELSIF(inv_mwb_globals.g_planning_query_mode = 2) THEN
          query_str  := query_str || ' AND v.planning_tp_type = 1 ';
        END IF;

        /*
        IF inv_mwb_globals.g_status_id IS NOT NULL
           AND inv_mwb_globals.g_tree_mat_loc_id <> 2 THEN
          IF inv_mwb_globals.g_only_subinventory_status = 1 THEN
            query_str  := query_str || 'AND (subinventory_status_id = :st_id or locator_status_id = :st_id ';
            query_str  := query_str || 'OR lot_status_id = :st_id or serial_status_id = :st_id) ';
          ELSE
            query_str  := query_str || ' and subinventory_status_id = :st_id ';
          END IF;
        END IF;
        */

        IF inv_mwb_globals.g_lot_from IS NOT NULL THEN
          query_str  := query_str || 'AND v.lot_number >= :lot_f ';
        END IF;

        IF inv_mwb_globals.g_lot_to IS NOT NULL THEN
          query_str  := query_str || 'AND v.lot_number <= :lot_t ';
        END IF;

        IF inv_mwb_globals.g_cost_group_id IS NOT NULL THEN
          query_str  := query_str || 'AND v.cost_group_id = :cg_id ';
        END IF;

        IF inv_mwb_globals.g_revision IS NOT NULL THEN
          query_str  := query_str || 'AND v.revision = :rev ';
        END IF;

        IF inv_mwb_globals.g_serial_from IS NOT NULL THEN
          query_str  := query_str || 'AND v.serial_number >= :serial_f ';
        END IF;

        IF inv_mwb_globals.g_serial_to IS NOT NULL THEN
          query_str  := query_str || 'AND v.serial_number <= :serial_t ';
        END IF;

        IF inv_mwb_globals.g_inventory_item_id IS NOT NULL THEN
          query_str  := query_str || 'AND v.inventory_item_id = :item_id ';
        END IF;

        -- ER(9158529 client)
        IF inv_mwb_globals.g_client_code IS NOT NULL THEN
          query_str := query_str || ' AND v.inventory_item_id in (select DISTINCT inventory_item_id from mtl_system_items_b where wms_deploy.get_client_code(inventory_item_id) = :client_code) ';
        END IF;
        -- ER(9158529 client)

        -- ER(9158529)
        IF inv_mwb_globals.g_category_set_id IS NOT NULL THEN
          query_str := query_str || ' AND v.inventory_item_id in '
                                      || ' (select DISTINCT inventory_item_id from mtl_item_categories '
                                      || ' where organization_id = :organization_id '
                                      || ' and category_set_id = :category_set_id '
                                      || ' and category_id = nvl(:category_id, category_id)) ' ;
        END IF;
        -- ER(9158529)

  -- NSRIVAST, INVCONV, Start
      IF inv_mwb_globals.g_grade_from_code IS NOT NULL THEN
         query_str := query_str || ' AND v.grade_code = :grade_f ' ;
      END IF ;
      IF inv_mwb_globals.g_tree_grade_code  IS NOT NULL THEN
         query_str := query_str || ' AND v.grade_code = :grade_c ' ;
      END IF ;
   -- NSRIVAST, INVCONV, End

        IF inv_mwb_globals.g_locator_id IS NOT NULL THEN
          query_str  := query_str || 'AND v.locator_id = :loc_id ';
        END IF;

        --ER(3338592) Changes
        IF inv_mwb_globals.g_item_description IS NOT NULL THEN
           query_str := query_str || ' AND v.item_description LIKE :item_description ';
        END IF;
        --End of ER Changes

        query_str  := query_str || 'AND v.subinventory_code = msi.secondary_inventory_name ';

        IF inv_mwb_globals.g_organization_id IS NOT NULL
        OR inv_mwb_globals.g_tree_organization_id IS NOT NULL THEN
          query_str  := query_str || 'AND v.organization_id = :org_id ';
        END IF;

        -- Onhand Material Status Support : If the status is tracked at the onhand level check
        -- for the status from the serial table (MSN).
        IF l_default_status_id IS NOT NULL THEN
           IF inv_mwb_globals.g_only_subinventory_status = 1 THEN
              query_str  := query_str || ' AND v.serial_status_id = :st_id ';
           ELSE
              IF inv_mwb_globals.g_status_id IS NOT NULL AND inv_mwb_globals.g_tree_mat_loc_id <> 2 THEN
                 query_str  := query_str || ' AND v.serial_status_id = :st_id ';
              END IF;
           END IF;
        END IF;

        query_str  := query_str || ') ';

        IF inv_mwb_globals.g_subinventory_code IS NOT NULL THEN
          query_str  := query_str || 'and msi.secondary_inventory_name = :sub ';
        END IF;

        IF inv_mwb_globals.g_organization_id IS NOT NULL
        OR inv_mwb_globals.g_tree_organization_id IS NOT NULL THEN
          query_str  := query_str || ' and msi.organization_id = :org_id ';
        END IF;

         /*
          *  IF g_only_subinventory_status = 1, it means we are doing a view by 'STATUS'
          *  in this case restrict the subinventories by tree_status_id not Query find status
          *
          */
        -- Onhand Material Status Support : Add the following where clause only if the status
        -- not tracked at onhand level.
        if (l_default_status_id is null) then
           IF inv_mwb_globals.g_only_subinventory_status = 1 THEN
               query_str  := query_str || ' AND msi.status_id = :st_id ';
           ELSE
              IF inv_mwb_globals.g_status_id IS NOT NULL AND inv_mwb_globals.g_tree_mat_loc_id <> 2 THEN
                 query_str  := query_str || ' AND msi.status_id = :st_id ';
              END IF;
           END IF;
        end if;

        query_str  := query_str || ' ORDER BY subinventory_code ';
      -- Need to use both MTL_ONHAND_TOTAL_V and MTL_ONHAND_SERIAL_V
      ELSIF(
            inv_mwb_globals.g_serial_from IS NULL
            AND inv_mwb_globals.g_serial_to IS NULL
            AND inv_mwb_globals.g_unit_number IS NULL
            AND inv_mwb_globals.g_status_id IS NOT NULL
            AND inv_mwb_globals.g_lpn_from IS NULL
            AND inv_mwb_globals.g_lpn_to IS NULL
           ) THEN
        IF (inv_mwb_globals.g_status_id IS NULL) THEN
          table_required  := ' mtl_onhand_total_mwb_v v ';
--          IF is_grade_t = TRUE THEN                         -- NSRIVAST, INVCONV
--             table_required  := ' mtl_onhand_new_lpn_v ';   -- NSRIVAST, INVCONV
--           END IF;
        ELSE
          table_required  := ' mtl_onhand_total_v v ';
        END IF;

	    --bug 6633612
		IF (inv_mwb_globals.g_shipment_header_id is not null) THEN
			table_required  := table_required || ' , rcv_transactions rt, mtl_material_transactions mmt ';
		END IF;
	--bug 6633612

        IF inv_mwb_globals.g_tree_lot_attr_query IS NULL AND inv_mwb_globals.g_parent_lot IS NULL
            AND inv_mwb_globals.g_supplier_lot_from IS NULL AND inv_mwb_globals.g_supplier_lot_to IS NULL THEN
          query_str  := query_str || 'SELECT v.subinventory_code from ' || table_required;
          query_str  := query_str || 'WHERE 1=1 ';
        ELSE
          query_str  :=
                query_str
             || 'SELECT v.subinventory_code from'
             || '(SELECT lot_number lot_num, parent_lot_number, supplier_lot_number FROM mtl_lot_numbers WHERE 1=1 '
             || inv_mwb_globals.g_tree_lot_attr_query
             || ') mln, '
             || table_required;
          query_str  := query_str || 'WHERE mln.lot_num = v.lot_number ';
	   	--BUG 7556505
		   IF inv_mwb_globals.g_parent_lot IS NOT NULL THEN
		       query_str  := query_str || ' AND mln.parent_lot_number = :parent_lot ';
	           END IF;
		--BUG 7556505
                /* Bug 8396954 added below code for supplier_lot_number */
                IF (inv_mwb_globals.g_supplier_lot_from IS NOT NULL AND
                    inv_mwb_globals.g_supplier_lot_to IS NOT NULL AND
                    inv_mwb_globals.g_supplier_lot_from = inv_mwb_globals.g_supplier_lot_to) THEN
                    query_str  := query_str || ' AND mln.supplier_lot_number = :supplier_lot_f ';
                END IF;

                IF (inv_mwb_globals.g_supplier_lot_from IS NOT NULL AND
	            inv_mwb_globals.g_supplier_lot_from <> NVL(inv_mwb_globals.g_supplier_lot_to, -1) ) THEN
                    query_str  := query_str || ' AND mln.supplier_lot_number >= :supplier_lot_f ';
                END IF;

                IF (inv_mwb_globals.g_supplier_lot_to IS NOT NULL AND
	            inv_mwb_globals.g_supplier_lot_to <> NVL(inv_mwb_globals.g_supplier_lot_from, -1) ) THEN
                    query_str  := query_str || ' AND mln.supplier_lot_number <= :supplier_lot_t ';
                END IF;
                /* End of Bug 8396954 */
        END IF;

	--bug 6633612
	IF (inv_mwb_globals.g_shipment_header_id is not null) THEN
		query_str := query_str || ' AND rt.shipment_header_id = :shipment_header_id '
					 || ' AND rt.transaction_id = mmt.rcv_transaction_id '
					 || ' AND rt.organization_id = mmt.organization_id '
					 || ' AND rt.transaction_type = ''DELIVER'''
					 || ' AND rt.destination_type_code = ''INVENTORY'''
					 || ' AND mmt.transaction_id = v.create_transaction_id '
					 || ' AND mmt.organization_id = v.organization_id ';

	END IF;
	--bug 6633612

        IF inv_mwb_globals.g_project_id IS NOT NULL THEN
          query_str  := query_str || ' AND v.project_id = :pr_id ';
        END IF;

        IF inv_mwb_globals.g_task_id IS NOT NULL THEN
          query_str  := query_str || ' AND v.task_id = :ta_id ';
        END IF;

        /*IF inv_mwb_globals.g_site_id IS NOT NULL THEN
           query_str := query_str || ' AND PLANNING_TP_TYPE = 1 ';
           query_str := query_str || ' AND planning_organization_id = :site_id ' ;
         ELSIF inv_mwb_globals.g_vendor_id is NOT NULL THEN
           query_str := query_str || ' AND  PLANNING_TP_TYPE = 1 ';
           query_str := query_str || ' AND  planning_organization_id in ';
           query_str := query_str || ' (select vendor_site_id from po_vendor_sites_all ';
           query_str := query_str || '  where vendor_id = :vendor_id )';
        END IF;*/
        IF (inv_mwb_globals.g_owning_qry_mode = 4) THEN
          query_str  := query_str || ' AND v.owning_organization_id = :own_org ';
          query_str  := query_str || ' AND v.owning_tp_type = 2 ';
        ELSIF(inv_mwb_globals.g_owning_qry_mode = 3) THEN
          query_str  := query_str || ' AND v.owning_organization_id = :own_org ';
          query_str  := query_str || ' AND v.owning_tp_type = 1 ';
        ELSIF(inv_mwb_globals.g_owning_qry_mode = 2) THEN
          query_str  := query_str || ' AND v.owning_tp_type = 1 ';
        END IF;

        IF (inv_mwb_globals.g_planning_query_mode = 4) THEN
          query_str  := query_str || ' AND v.planning_organization_id = :plan_org ';
          query_str  := query_str || ' AND v.planning_tp_type = 2 ';
        ELSIF(inv_mwb_globals.g_planning_query_mode = 3) THEN
          query_str  := query_str || ' AND v.planning_organization_id = :plan_org ';
          query_str  := query_str || ' AND v.planning_tp_type = 1 ';
        ELSIF(inv_mwb_globals.g_planning_query_mode = 2) THEN
          query_str  := query_str || ' AND v.planning_tp_type = 1 ';
        END IF;

        -- Select Only subinventory status if status is not 1
        /*
        IF inv_mwb_globals.g_status_id IS NOT NULL THEN
          IF inv_mwb_globals.g_only_subinventory_status = 1 THEN
            query_str  := query_str || 'AND (subinventory_status_id = :st_id or locator_status_id = :st_id ';
            query_str  := query_str || 'OR lot_status_id = :st_id or serial_status_id = :st_id) ';
          ELSE
            query_str  := query_str || ' and subinventory_status_id = :st_id ';
          END IF;
        END IF;
        */

        IF inv_mwb_globals.g_lot_from IS NOT NULL THEN
          query_str  := query_str || 'AND v.lot_number >= :lot_f ';
        END IF;

        IF inv_mwb_globals.g_lot_to IS NOT NULL THEN
          query_str  := query_str || 'AND v.lot_number <= :lot_t ';
        END IF;

        IF inv_mwb_globals.g_cost_group_id IS NOT NULL THEN
          query_str  := query_str || 'AND v.cost_group_id = :cg_id ';
        END IF;

        IF inv_mwb_globals.g_revision IS NOT NULL THEN
          query_str  := query_str || 'AND v.revision = :rev ';
        END IF;

        IF inv_mwb_globals.g_inventory_item_id IS NOT NULL THEN
          query_str  := query_str || 'AND v.inventory_item_id = :item_id ';
        END IF;

        -- ER(9158529 client)
        IF inv_mwb_globals.g_client_code IS NOT NULL THEN
          query_str := query_str || ' AND v.inventory_item_id in (select DISTINCT inventory_item_id from mtl_system_items_b where wms_deploy.get_client_code(inventory_item_id) = :client_code) ';
        END IF;
        -- ER(9158529 client)

        -- ER(9158529)
        IF inv_mwb_globals.g_category_set_id IS NOT NULL THEN
          query_str := query_str || ' AND v.inventory_item_id in '
                                      || ' (select DISTINCT inventory_item_id from mtl_item_categories '
                                      || ' where organization_id = :organization_id '
                                      || ' and category_set_id = :category_set_id '
                                      || ' and category_id = nvl(:category_id, category_id)) ' ;
        END IF;
        -- ER(9158529)

     -- NSRIVAST, INVCONV, Start
        IF inv_mwb_globals.g_grade_from_code IS NOT NULL THEN
         query_str := query_str || ' AND v.grade_code = :grade_f ' ;
        END IF ;
        IF inv_mwb_globals.g_tree_grade_code  IS NOT NULL THEN
         query_str := query_str || ' AND v.grade_code = :grade_c ' ;
        END IF ;
     -- NSRIVAST, INVCONV, End

        IF inv_mwb_globals.g_locator_id IS NOT NULL THEN
          query_str  := query_str || 'AND v.locator_id = :loc_id ';
        END IF;

        --ER(3338592) Changes
        IF inv_mwb_globals.g_item_description IS NOT NULL THEN
           query_str := query_str || ' AND v.item_description LIKE :item_description ';
        END IF;
        --ER(3338592) Changes

        query_str  := query_str || 'AND v.subinventory_code = msi.secondary_inventory_name ';

        IF inv_mwb_globals.g_organization_id IS NOT NULL
        OR inv_mwb_globals.g_tree_organization_id IS NOT NULL THEN
          query_str  := query_str || 'AND v.organization_id = :org_id ';
        END IF;

        -- Onhand Material Status Support : If the status is tracked at the onhand level check
        -- for the status from the onhand table (MOQD).
        IF l_default_status_id IS NOT NULL THEN
           IF inv_mwb_globals.g_only_subinventory_status = 1 THEN
              query_str  := query_str || ' AND v.onhand_status_id = :st_id ';
           ELSE
              IF inv_mwb_globals.g_status_id IS NOT NULL AND inv_mwb_globals.g_tree_mat_loc_id <> 2 THEN
                 query_str  := query_str || ' AND v.onhand_status_id = :st_id ';
              END IF;
           END IF;
        else
           -- Bug 6060233
           IF inv_mwb_globals.g_only_subinventory_status = 1 THEN
               query_str  := query_str || ' and v.subinventory_status_id = :st_id ';
           ELSE
               IF inv_mwb_globals.g_status_id IS NOT NULL THEN
                  query_str  := query_str || 'AND (v.subinventory_status_id = :st_id or v.locator_status_id = :st_id ';
                  query_str  := query_str || 'OR v.lot_status_id = :st_id) ';
               END IF;
           END IF;
        END IF;

        query_str  := query_str || 'UNION ALL ';

        IF (inv_mwb_globals.g_status_id IS NULL) THEN
          table_required  := ' mtl_onhand_serial_mwb_v v ';
        ELSE
          table_required  := ' mtl_onhand_serial_v v ';
        END IF;

		--bug 6633612
		IF (inv_mwb_globals.g_shipment_header_id is not null) THEN
			table_required  := table_required || ' , rcv_transactions rt, mtl_material_transactions mmt ';
		END IF;
		--bug 6633612

        IF (inv_mwb_globals.g_tree_lot_attr_query IS NULL AND inv_mwb_globals.g_parent_lot IS NULL
            AND inv_mwb_globals.g_supplier_lot_from IS NULL AND inv_mwb_globals.g_supplier_lot_to IS NULL)
           AND inv_mwb_globals.g_tree_serial_attr_query IS NULL THEN
          query_str  := query_str || 'SELECT v.subinventory_code from ' || table_required;
          query_str  := query_str || 'WHERE 1=1 ';
        ELSIF (inv_mwb_globals.g_tree_lot_attr_query IS NOT NULL OR inv_mwb_globals.g_parent_lot IS NOT NULL
                OR inv_mwb_globals.g_supplier_lot_from IS NOT NULL OR inv_mwb_globals.g_supplier_lot_to IS NOT NULL)
              AND inv_mwb_globals.g_tree_serial_attr_query IS NULL THEN
          query_str  :=
                query_str
             || 'SELECT v.subinventory_code from'
             || '(SELECT lot_number lot_num, parent_lot_number, supplier_lot_number FROM mtl_lot_numbers WHERE 1=1 '
             || inv_mwb_globals.g_tree_lot_attr_query
             || ') mln, '
             || table_required;
          query_str  := query_str || 'WHERE mln.lot_num = v.lot_number ';
 		--BUG 7556505
		   IF inv_mwb_globals.g_parent_lot IS NOT NULL THEN
		       query_str  := query_str || ' AND mln.parent_lot_number = :parent_lot ';
	           END IF;
		--BUG 7556505
                /* Bug 8396954 added below code for supplier_lot_number */
                IF (inv_mwb_globals.g_supplier_lot_from IS NOT NULL AND
                    inv_mwb_globals.g_supplier_lot_to IS NOT NULL AND
                    inv_mwb_globals.g_supplier_lot_from = inv_mwb_globals.g_supplier_lot_to) THEN
                    query_str  := query_str || ' AND mln.supplier_lot_number = :supplier_lot_f ';
                END IF;

                IF (inv_mwb_globals.g_supplier_lot_from IS NOT NULL AND
	            inv_mwb_globals.g_supplier_lot_from <> NVL(inv_mwb_globals.g_supplier_lot_to, -1) ) THEN
                    query_str  := query_str || ' AND mln.supplier_lot_number >= :supplier_lot_f ';
                END IF;

                IF (inv_mwb_globals.g_supplier_lot_to IS NOT NULL AND
	            inv_mwb_globals.g_supplier_lot_to <> NVL(inv_mwb_globals.g_supplier_lot_from, -1) ) THEN
                    query_str  := query_str || ' AND mln.supplier_lot_number <= :supplier_lot_t ';
                END IF;
                /* End of Bug 8396954 */
	END IF;

        -- Select Only subinventory status if status is not 1
        /*
        IF inv_mwb_globals.g_status_id IS NOT NULL THEN
          IF inv_mwb_globals.g_only_subinventory_status = 1 THEN
            query_str  := query_str || 'AND (subinventory_status_id = :st_id or locator_status_id = :st_id ';
            query_str  := query_str || 'OR lot_status_id = :st_id or serial_status_id = :st_id) ';
          ELSE
            query_str  := query_str || ' and subinventory_status_id = :st_id ';
          END IF;
        END IF;
        */
	--bug 6633612
	IF (inv_mwb_globals.g_shipment_header_id is not null) THEN
		query_str := query_str || ' AND rt.shipment_header_id = :shipment_header_id '
					 || ' AND rt.transaction_id = mmt.rcv_transaction_id '
					 || ' AND rt.organization_id = mmt.organization_id '
					 || ' AND rt.transaction_type = ''DELIVER'''
					 || ' AND rt.destination_type_code = ''INVENTORY'''
					 || ' AND mmt.transaction_id = v.last_transaction_id '
					 || ' AND mmt.organization_id = v.organization_id ';

	END IF;
	--bug 6633612

        IF inv_mwb_globals.g_lot_from IS NOT NULL THEN
          query_str  := query_str || 'AND v.lot_number >= :lot_f ';
        END IF;

        IF inv_mwb_globals.g_lot_to IS NOT NULL THEN
          query_str  := query_str || 'AND v.lot_number <= :lot_t ';
        END IF;

        IF inv_mwb_globals.g_cost_group_id IS NOT NULL THEN
          query_str  := query_str || 'AND v.cost_group_id = :cg_id ';
        END IF;

        IF inv_mwb_globals.g_revision IS NOT NULL THEN
          query_str  := query_str || 'AND v.revision = :rev ';
        END IF;

        IF inv_mwb_globals.g_serial_from IS NOT NULL THEN
          query_str  := query_str || 'AND v.serial_number >= :serial_f ';
        END IF;

        IF inv_mwb_globals.g_serial_to IS NOT NULL THEN
          query_str  := query_str || 'AND v.serial_number <= :serial_t ';
        END IF;

        IF inv_mwb_globals.g_inventory_item_id IS NOT NULL THEN
          query_str  := query_str || 'AND v.inventory_item_id = :item_id ';
        END IF;

        -- ER(9158529 client)
        IF inv_mwb_globals.g_client_code IS NOT NULL THEN
          query_str := query_str || ' AND v.inventory_item_id in (select DISTINCT inventory_item_id from mtl_system_items_b where wms_deploy.get_client_code(inventory_item_id) = :client_code) ';
        END IF;
        -- ER(9158529 client)

        -- ER(9158529)
        IF inv_mwb_globals.g_category_set_id IS NOT NULL THEN
          query_str := query_str || ' AND v.inventory_item_id in '
                                      || ' (select DISTINCT inventory_item_id from mtl_item_categories '
                                      || ' where organization_id = :organization_id '
                                      || ' and category_set_id = :category_set_id '
                                      || ' and category_id = nvl(:category_id, category_id)) ' ;
        END IF;
        -- ER(9158529)

        IF inv_mwb_globals.g_locator_id IS NOT NULL THEN
          query_str  := query_str || 'AND v.locator_id = :loc_id ';
        END IF;

        --ER(3338592) Changes
        IF inv_mwb_globals.g_item_description IS NOT NULL THEN
           query_str := query_str || ' AND v.item_description LIKE :item_description ';
        END IF;
        --ER(3338592) Changes

        query_str  := query_str || 'AND v.subinventory_code = msi.secondary_inventory_name ';

        IF inv_mwb_globals.g_organization_id IS NOT NULL
        OR inv_mwb_globals.g_tree_organization_id IS NOT NULL THEN
          query_str  := query_str || 'AND v.organization_id = :org_id ';
        END IF;

        -- Onhand Material Status Support : If the status is tracked at the onhand level check
        -- for the status from the serial table (MSN).
        IF l_default_status_id IS NOT NULL THEN
           IF inv_mwb_globals.g_only_subinventory_status = 1 THEN
              query_str  := query_str || ' AND v.serial_status_id = :st_id ';
           ELSE
              IF inv_mwb_globals.g_status_id IS NOT NULL AND inv_mwb_globals.g_tree_mat_loc_id <> 2 THEN
                 query_str  := query_str || ' AND v.serial_status_id = :st_id ';
              END IF;
           END IF;
        else
           -- Bug 6060233
           IF inv_mwb_globals.g_only_subinventory_status = 1 THEN
               query_str  := query_str || ' and v.subinventory_status_id = :st_id ';
           ELSE
               IF inv_mwb_globals.g_status_id IS NOT NULL THEN
                  query_str  := query_str || 'AND (v.subinventory_status_id = :st_id or v.locator_status_id = :st_id ';
                  query_str  := query_str || 'OR v.lot_status_id = :st_id or v.serial_status_id = :st_id) ';
               END IF;
           END IF;
        END IF;

        query_str  := query_str || ') ';

        IF inv_mwb_globals.g_subinventory_code IS NOT NULL THEN
          query_str  := query_str || 'and msi.secondary_inventory_name = :sub ';
        END IF;

        IF inv_mwb_globals.g_organization_id IS NOT NULL
        OR inv_mwb_globals.g_tree_organization_id IS NOT NULL THEN
          query_str  := query_str || ' and msi.organization_id = :org_id ';
        END IF;

         /*
          *  IF g_only_subinventory_status = 1, it means we are doing a view by 'STATUS'
          *  in this case restrict the subinventories by tree_status_id not Query find status
          *
          */

        -- Onhand Material Status Support : Add the following where clause only if the status
        -- not tracked at onhand level.
        -- Bug 6060233: Commenting the following code as the status restriction has been added
        -- in the subqueries
        /*
        if (l_default_status_id is null) then
           IF inv_mwb_globals.g_only_subinventory_status = 1 THEN
               query_str  := query_str || ' AND msi.status_id = :st_id ';
           ELSE
              IF inv_mwb_globals.g_status_id IS NOT NULL THEN
                 query_str  := query_str || ' AND msi.status_id = :st_id ';
              END IF;
           END IF;
        end if;
        */

        query_str  := query_str || ' ORDER BY subinventory_code ';
      -- Need to use MTL_ONHAND_LPN_V
      ELSIF(inv_mwb_globals.g_lpn_from IS NOT NULL
            OR inv_mwb_globals.g_lpn_to IS NOT NULL) THEN
        IF inv_mwb_globals.g_tree_mat_loc_id = 2 THEN
          table_required  := ' mtl_onhand_lpn_mwb_v mol ';
        ELSIF(inv_mwb_globals.g_status_id IS NULL) THEN
          table_required  := ' mtl_onhand_new_lpn_mwb_v mol ';
           IF is_grade_t = TRUE THEN                         -- NSRIVAST, INVCONV
             table_required  := ' mtl_onhand_new_lpn_v ';    -- NSRIVAST, INVCONV
           END IF;                                           -- NSRIVAST, INVCONV
        ELSE
          table_required  := ' mtl_onhand_new_lpn_v mol ';
        END IF;

        query_str  := query_str || 'SELECT subinventory_code from ' || table_required;

        IF inv_mwb_globals.g_lpn_from IS NOT NULL
           OR inv_mwb_globals.g_lpn_to IS NOT NULL THEN
          query_str  := query_str || ', (select outermost_lpn_id from wms_license_plate_numbers wlpn ';
          query_str  := query_str || ' WHERE 1=1 ';

          IF inv_mwb_globals.g_locator_id IS NOT NULL THEN
            query_str  := query_str || 'AND wlpn.locator_id = :loc_id ';
          END IF;

--rsagar
          IF inv_mwb_globals.g_tree_mat_loc_id  = 1 THEN
            query_str  := query_str || 'AND wlpn.lpn_context IN (1,9,11) ';
          ELSIF inv_mwb_globals.g_tree_mat_loc_id  = 2 THEN
            query_str  := query_str || 'AND wlpn.lpn_context = 3 ';
          END IF;
--rsagar
     -- NSRIVAST, INVCONV, Start
        IF inv_mwb_globals.g_grade_from_code IS NOT NULL THEN
         query_str := query_str || ' AND grade_code = :grade_f ' ;
        END IF ;
        IF inv_mwb_globals.g_tree_grade_code  IS NOT NULL THEN
         query_str := query_str || ' AND grade_code = :grade_c ' ;
        END IF ;
     -- NSRIVAST, INVCONV, End

          IF inv_mwb_globals.g_subinventory_code IS NOT NULL THEN
            query_str  := query_str || 'AND wlpn.subinventory_code = :sub ';
          END IF;

        IF inv_mwb_globals.g_organization_id IS NOT NULL
        OR inv_mwb_globals.g_tree_organization_id IS NOT NULL THEN
            query_str  := query_str || 'AND wlpn.organization_id = :org_id ';
          END IF;

          IF inv_mwb_globals.g_lpn_from IS NOT NULL
             OR inv_mwb_globals.g_lpn_to IS NOT NULL THEN
            IF inv_mwb_globals.g_lpn_from IS NOT NULL
               AND inv_mwb_globals.g_lpn_to IS NULL THEN
              query_str  := query_str || ' and license_plate_number >= :lpn_f ';
            ELSIF inv_mwb_globals.g_lpn_from IS NULL
                  AND inv_mwb_globals.g_lpn_to IS NOT NULL THEN
              query_str  := query_str || ' and license_plate_number <= :lpn_t ';
            ELSIF inv_mwb_globals.g_lpn_from IS NOT NULL
                  AND inv_mwb_globals.g_lpn_to IS NOT NULL THEN
               --bugfix#3646484
               IF (inv_mwb_globals.g_lpn_from = inv_mwb_globals.g_lpn_to) THEN
               --User is querying for single LPN so converted the range query to equality query
                  query_str := query_str || 'and license_plate_number = :lpn_f ';
               ELSE
                 query_str  := query_str || ' and license_plate_number >= :lpn_f ';
                 query_str  := query_str || ' and license_plate_number <= :lpn_t ';
               END IF;
            END IF;
          END IF;

          query_str  := query_str || 'group by wlpn.outermost_lpn_id) X ';
        END IF;

        IF (inv_mwb_globals.g_tree_lot_attr_query IS NULL AND inv_mwb_globals.g_parent_lot IS NULL
            AND inv_mwb_globals.g_supplier_lot_from IS NULL AND inv_mwb_globals.g_supplier_lot_to IS NULL)
           AND inv_mwb_globals.g_tree_serial_attr_query IS NULL THEN
          query_str  := query_str || 'WHERE 1=1 ';
        ELSIF (inv_mwb_globals.g_tree_lot_attr_query IS NULL AND inv_mwb_globals.g_parent_lot IS NULL
                AND inv_mwb_globals.g_supplier_lot_from IS NULL AND inv_mwb_globals.g_supplier_lot_to IS NULL)
              AND inv_mwb_globals.g_tree_serial_attr_query IS NOT NULL THEN
          query_str  :=
                     query_str || ', (SELECT serial_number serial_num FROM mtl_serial_numbers WHERE 1=1 ' || inv_mwb_globals.g_tree_serial_attr_query
                     || ') msn ';
          query_str  := query_str || 'WHERE msn.serial_num = serial_number ';
        ELSIF (inv_mwb_globals.g_tree_lot_attr_query IS NOT NULL OR inv_mwb_globals.g_parent_lot IS NOT NULL
                OR inv_mwb_globals.g_supplier_lot_from IS NOT NULL OR inv_mwb_globals.g_supplier_lot_to IS NOT NULL)
              AND inv_mwb_globals.g_tree_serial_attr_query IS NULL THEN
          query_str  := query_str || ', (SELECT lot_number lot_num, parent_lot_number, supplier_lot_number FROM mtl_lot_numbers WHERE 1=1 ' || inv_mwb_globals.g_tree_lot_attr_query || ') mln ';
          query_str  := query_str || 'WHERE mln.lot_num = lot_number ';
 		--BUG 7556505
		   IF inv_mwb_globals.g_parent_lot IS NOT NULL THEN
		       query_str  := query_str || ' AND mln.parent_lot_number = :parent_lot ';
	           END IF;
		--BUG 7556505
                /* Bug 8396954 added below code for supplier_lot_number */
                IF (inv_mwb_globals.g_supplier_lot_from IS NOT NULL AND
                    inv_mwb_globals.g_supplier_lot_to IS NOT NULL AND
                    inv_mwb_globals.g_supplier_lot_from = inv_mwb_globals.g_supplier_lot_to) THEN
                    query_str  := query_str || ' AND mln.supplier_lot_number = :supplier_lot_f ';
                END IF;

                IF (inv_mwb_globals.g_supplier_lot_from IS NOT NULL AND
	            inv_mwb_globals.g_supplier_lot_from <> NVL(inv_mwb_globals.g_supplier_lot_to, -1) ) THEN
                    query_str  := query_str || ' AND mln.supplier_lot_number >= :supplier_lot_f ';
                END IF;

                IF (inv_mwb_globals.g_supplier_lot_to IS NOT NULL AND
	            inv_mwb_globals.g_supplier_lot_to <> NVL(inv_mwb_globals.g_supplier_lot_from, -1) ) THEN
                    query_str  := query_str || ' AND mln.supplier_lot_number <= :supplier_lot_t ';
                END IF;
                /* End of Bug 8396954 */
	ELSIF (inv_mwb_globals.g_tree_lot_attr_query IS NOT NULL OR inv_mwb_globals.g_parent_lot IS NOT NULL
                OR inv_mwb_globals.g_supplier_lot_from IS NOT NULL OR inv_mwb_globals.g_supplier_lot_to IS NOT NULL)
              AND inv_mwb_globals.g_tree_serial_attr_query IS NOT NULL THEN
          query_str  :=
                query_str
             || ', (SELECT lot_number lot_num, parent_lot_number, supplier_lot_number FROM mtl_lot_numbers WHERE 1=1 '
             || inv_mwb_globals.g_tree_lot_attr_query
             || ') mln '
             || ', (SELECT serial_number serial_num FROM mtl_serial_numbers WHERE 1=1 '
             || inv_mwb_globals.g_tree_serial_attr_query
             || ') msn ';
          query_str  := query_str || 'WHERE mln.lot_num = lot_number ';
 		--BUG 7556505
		   IF inv_mwb_globals.g_parent_lot IS NOT NULL THEN
		       query_str  := query_str || ' AND mln.parent_lot_number = :parent_lot ';
	           END IF;
		--BUG 7556505
                /* Bug 8396954 added below code for supplier_lot_number */
                IF (inv_mwb_globals.g_supplier_lot_from IS NOT NULL AND
                    inv_mwb_globals.g_supplier_lot_to IS NOT NULL AND
                    inv_mwb_globals.g_supplier_lot_from = inv_mwb_globals.g_supplier_lot_to) THEN
                    query_str  := query_str || ' AND mln.supplier_lot_number = :supplier_lot_f ';
                END IF;

                IF (inv_mwb_globals.g_supplier_lot_from IS NOT NULL AND
	            inv_mwb_globals.g_supplier_lot_from <> NVL(inv_mwb_globals.g_supplier_lot_to, -1) ) THEN
                    query_str  := query_str || ' AND mln.supplier_lot_number >= :supplier_lot_f ';
                END IF;

                IF (inv_mwb_globals.g_supplier_lot_to IS NOT NULL AND
	            inv_mwb_globals.g_supplier_lot_to <> NVL(inv_mwb_globals.g_supplier_lot_from, -1) ) THEN
                    query_str  := query_str || ' AND mln.supplier_lot_number <= :supplier_lot_t ';
                END IF;
                /* End of Bug 8396954 */
          query_str  := query_str || 'AND msn.serial_num = serial_number ';
        END IF;

        IF inv_mwb_globals.g_project_id IS NOT NULL THEN
          query_str  := query_str || ' AND project_id = :pr_id ';
        END IF;

        IF inv_mwb_globals.g_task_id IS NOT NULL THEN
          query_str  := query_str || ' AND task_id = :ta_id ';
        END IF;

        IF inv_mwb_globals.g_unit_number IS NOT NULL THEN
          query_str  := query_str || ' AND unit_number=:un_id ';
        END IF;

        /*IF inv_mwb_globals.g_site_id IS NOT NULL THEN
           query_str := query_str || ' AND PLANNING_TP_TYPE = 1 ';
           query_str := query_str || ' AND planning_organization_id = :site_id ' ;
         ELSIF inv_mwb_globals.g_vendor_id is NOT NULL THEN
           query_str := query_str || ' AND  PLANNING_TP_TYPE = 1 ';
           query_str := query_str || ' AND  planning_organization_id in ';
           query_str := query_str || ' (select vendor_site_id from po_vendor_sites_all ';
           query_str := query_str || '  where vendor_id = :vendor_id )';
        END IF;*/
        IF (inv_mwb_globals.g_owning_qry_mode = 4) THEN
          query_str  := query_str || ' AND owning_organization_id = :own_org ';
          query_str  := query_str || ' AND owning_tp_type = 2 ';
        ELSIF(inv_mwb_globals.g_owning_qry_mode = 3) THEN
          query_str  := query_str || ' AND owning_organization_id = :own_org ';
          query_str  := query_str || ' AND owning_tp_type = 1 ';
        ELSIF(inv_mwb_globals.g_owning_qry_mode = 2) THEN
          query_str  := query_str || ' AND owning_tp_type = 1 ';
        END IF;

        IF (inv_mwb_globals.g_planning_query_mode = 4) THEN
          query_str  := query_str || ' AND planning_organization_id = :plan_org ';
          query_str  := query_str || ' AND planning_tp_type = 2 ';
        ELSIF(inv_mwb_globals.g_planning_query_mode = 3) THEN
          query_str  := query_str || ' AND planning_organization_id = :plan_org ';
          query_str  := query_str || ' AND planning_tp_type = 1 ';
        ELSIF(inv_mwb_globals.g_planning_query_mode = 2) THEN
          query_str  := query_str || ' AND planning_tp_type = 1 ';
        END IF;

        /*
        IF inv_mwb_globals.g_status_id IS NOT NULL THEN
          IF inv_mwb_globals.g_only_subinventory_status = 1 THEN
            query_str  := query_str || 'AND (subinventory_status_id = :st_id or locator_status_id = :st_id ';
            query_str  := query_str || 'OR lot_status_id = :st_id or serial_status_id = :st_id) ';
          ELSE
            query_str  := query_str || 'AND subinventory_status_id = :st_id ';
          END IF;
        END IF;
        */

        IF inv_mwb_globals.g_lot_from IS NOT NULL THEN
          query_str  := query_str || 'AND lot_number >= :lot_f ';
        END IF;

        IF inv_mwb_globals.g_lot_to IS NOT NULL THEN
          query_str  := query_str || 'AND lot_number <= :lot_t ';
        END IF;

        IF inv_mwb_globals.g_cost_group_id IS NOT NULL THEN
          query_str  := query_str || 'AND cost_group_id = :cg_id ';
        END IF;

        IF inv_mwb_globals.g_revision IS NOT NULL THEN
          query_str  := query_str || 'AND revision = :rev ';
        END IF;

        IF inv_mwb_globals.g_serial_from IS NOT NULL THEN
          query_str  := query_str || 'AND serial_number >= :serial_f ';
        END IF;

        IF inv_mwb_globals.g_serial_to IS NOT NULL THEN
          query_str  := query_str || 'AND serial_number <= :serial_t ';
        END IF;

        IF inv_mwb_globals.g_lpn_from IS NOT NULL
           OR inv_mwb_globals.g_lpn_to IS NOT NULL THEN
          query_str  := query_str || 'AND MOL.outermost_lpn_id = X.outermost_lpn_id ';
        END IF;

        IF inv_mwb_globals.g_inventory_item_id IS NOT NULL THEN
          query_str  := query_str || 'AND inventory_item_id = :item_id ';
        END IF;

        -- ER(9158529 client)
        IF inv_mwb_globals.g_client_code IS NOT NULL THEN
          query_str := query_str || ' AND inventory_item_id in (select DISTINCT inventory_item_id from mtl_system_items_b where wms_deploy.get_client_code(inventory_item_id) = :client_code) ';
        END IF;
        -- ER(9158529 client)

        -- ER(9158529)
        IF inv_mwb_globals.g_category_set_id IS NOT NULL THEN
          query_str := query_str || ' AND inventory_item_id in '
                                      || ' (select DISTINCT inventory_item_id from mtl_item_categories '
                                      || ' where organization_id = :organization_id '
                                      || ' and category_set_id = :category_set_id '
                                      || ' and category_id = nvl(:category_id, category_id)) ' ;
        END IF;
        -- ER(9158529)

        IF inv_mwb_globals.g_locator_id IS NOT NULL THEN
          query_str  := query_str || 'AND locator_id = :loc_id ';
        END IF;

        --ER(3338592) Changes
        IF inv_mwb_globals.g_item_description IS NOT NULL THEN
           query_str := query_str || ' AND item_description LIKE :item_description ';
        END IF;
        --ER(3338592) Changes

        query_str  := query_str || 'AND subinventory_code = msi.secondary_inventory_name ';

        IF inv_mwb_globals.g_organization_id IS NOT NULL
        OR inv_mwb_globals.g_tree_organization_id IS NOT NULL THEN
          query_str  := query_str || 'AND organization_id = :org_id ';
        END IF;

	/* LPN Status Project If the status is tracked at the onhand level check
        -- for the status from the onhand table (MOQD).*/
	IF l_default_status_id IS NOT NULL THEN
	  IF inv_mwb_globals.g_only_subinventory_status = 1
              OR inv_mwb_globals.g_status_id IS NOT NULL THEN
	    query_str  := query_str || ' AND onhand_status_id = :st_id ';
	  END IF;
        END IF;
	/* End of fix for LPN Status Project */

        query_str  := query_str || ') ';

        IF inv_mwb_globals.g_subinventory_code IS NOT NULL THEN
          query_str  := query_str || 'and msi.secondary_inventory_name = :sub ';
        END IF;

        IF inv_mwb_globals.g_organization_id IS NOT NULL
        OR inv_mwb_globals.g_tree_organization_id IS NOT NULL THEN
          query_str  := query_str || ' and msi.organization_id = :org_id ';
        END IF;

         /*
          *  IF g_only_subinventory_status = 1, it means we are doing a view by 'STATUS'
          *  in this case restrict the subinventories by tree_status_id not Query find status
          *
          */

	/* LPN Stauts Project : Add the following where clause only if the status
           not tracked at onhand level. */
        IF (l_default_status_id IS NULL) THEN
          IF inv_mwb_globals.g_only_subinventory_status = 1 THEN
              query_str  := query_str || ' AND msi.status_id = :st_id ';
          ELSE
             IF inv_mwb_globals.g_status_id IS NOT NULL THEN
                query_str  := query_str || ' AND msi.status_id = :st_id ';
             END IF;
          END IF;
        END IF ;
	/* End of fix for LPN Status Project */

        query_str  := query_str || ' ORDER BY subinventory_code ';
      END IF;
    END IF;
--    inv_trx_util_pub.trace( query_str, 'Add_subs Material Workbench', 9);
       --trace1(query_str, 'add_subs', 9);

    inv_mwb_globals.print_msg( g_pkg_name, l_procedure_name, query_str );

    inv_mwb_globals.g_last_query := query_str;

    query_hdl       := DBMS_SQL.open_cursor;
--    inv_mwb_globals.print_msg( g_pkg_name, l_procedure_name, query_str );
    DBMS_SQL.parse(query_hdl, query_str, DBMS_SQL.native);


    IF inv_mwb_globals.g_tree_organization_id IS NOT NULL THEN
      DBMS_SQL.bind_variable(query_hdl, 'org_id', inv_mwb_globals.g_tree_organization_id);
    ELSIF inv_mwb_globals.g_organization_id IS NOT NULL THEN
      DBMS_SQL.bind_variable(query_hdl, 'org_id', inv_mwb_globals.g_organization_id);
    END IF;

    IF inv_mwb_globals.g_subinventory_code IS NOT NULL THEN
      DBMS_SQL.bind_variable(query_hdl, 'sub', inv_mwb_globals.g_subinventory_code);
    END IF;

    IF inv_mwb_globals.g_locator_id IS NOT NULL THEN
      DBMS_SQL.bind_variable(query_hdl, 'loc_id', inv_mwb_globals.g_locator_id);
    END IF;

    IF inv_mwb_globals.g_inventory_item_id IS NOT NULL THEN
      DBMS_SQL.bind_variable(query_hdl, 'item_id', inv_mwb_globals.g_inventory_item_id);
    END IF;

    -- ER(9158529 client)
    IF inv_mwb_globals.g_client_code IS NOT NULL THEN
      DBMS_SQL.bind_variable(query_hdl, 'client_code', inv_mwb_globals.g_client_code);
    END IF;
    -- ER(9158529 client)

    IF inv_mwb_globals.g_revision IS NOT NULL THEN
      DBMS_SQL.bind_variable(query_hdl, 'rev', inv_mwb_globals.g_revision);
    END IF;

    IF inv_mwb_globals.g_cost_group_id IS NOT NULL THEN
      DBMS_SQL.bind_variable(query_hdl, 'cg_id', inv_mwb_globals.g_cost_group_id);
    END IF;

    -- ER(9158529)
    IF inv_mwb_globals.g_category_set_id IS NOT NULL THEN
      DBMS_SQL.bind_variable(query_hdl, 'organization_id', NVL(inv_mwb_globals.g_organization_id, inv_mwb_globals.g_tree_organization_id));
      DBMS_SQL.bind_variable(query_hdl, 'category_set_id', inv_mwb_globals.g_category_set_id);
      DBMS_SQL.bind_variable(query_hdl, 'category_id', inv_mwb_globals.g_category_id);
    END IF;
    -- ER(9158529)

 --BUG 7556505
    IF inv_mwb_globals.g_parent_lot IS NOT NULL THEN
      DBMS_SQL.bind_variable(query_hdl, 'parent_lot', inv_mwb_globals.g_parent_lot);
    END IF;
 --BUG 7556505

    IF inv_mwb_globals.g_lot_from IS NOT NULL THEN
      DBMS_SQL.bind_variable(query_hdl, 'lot_f', inv_mwb_globals.g_lot_from);
    END IF;

    IF inv_mwb_globals.g_lot_to IS NOT NULL THEN
      DBMS_SQL.bind_variable(query_hdl, 'lot_t', inv_mwb_globals.g_lot_to);
    END IF;

    /* Bug 8396954 added below code for supplier_lot_number */
    IF (inv_mwb_globals.g_supplier_lot_from IS NOT NULL AND
    inv_mwb_globals.g_supplier_lot_to IS NOT NULL AND
    inv_mwb_globals.g_supplier_lot_from = inv_mwb_globals.g_supplier_lot_to) THEN
         DBMS_SQL.bind_variable(query_hdl, 'supplier_lot_f', inv_mwb_globals.g_supplier_lot_from);
    END IF;

    IF (inv_mwb_globals.g_supplier_lot_from IS NOT NULL AND
        inv_mwb_globals.g_supplier_lot_from <> NVL(inv_mwb_globals.g_supplier_lot_to, -1) ) THEN
          DBMS_SQL.bind_variable(query_hdl, 'supplier_lot_f', inv_mwb_globals.g_supplier_lot_from);
    END IF;

    IF (inv_mwb_globals.g_supplier_lot_to IS NOT NULL AND
         inv_mwb_globals.g_supplier_lot_to <> NVL(inv_mwb_globals.g_supplier_lot_from, -1) ) THEN
          DBMS_SQL.bind_variable(query_hdl, 'supplier_lot_t', inv_mwb_globals.g_supplier_lot_to);
    END IF;
    /* End of Bug 8396954 */

-- NSRIVAST, INVCONV, Start
    IF inv_mwb_globals.g_grade_from_code IS NOT NULL THEN
      DBMS_SQL.bind_variable(query_hdl, 'grade_f',inv_mwb_globals.g_grade_from_code );
    END IF;
    IF inv_mwb_globals.g_tree_grade_code IS NOT NULL THEN
      DBMS_SQL.bind_variable(query_hdl, 'grade_c', inv_mwb_globals.g_tree_grade_code);
    END IF;
-- NSRIVAST, INVCONV, End
    --bug 6633612
    IF inv_mwb_globals.g_shipment_header_id IS NOT NULL THEN
      DBMS_SQL.bind_variable(query_hdl, 'shipment_header_id',inv_mwb_globals.g_shipment_header_id );
    END IF;
    --bug 6633612

    IF inv_mwb_globals.g_serial_from IS NOT NULL THEN
      DBMS_SQL.bind_variable(query_hdl, 'serial_f', inv_mwb_globals.g_serial_from);
    END IF;

    IF inv_mwb_globals.g_serial_to IS NOT NULL THEN
      DBMS_SQL.bind_variable(query_hdl, 'serial_t', inv_mwb_globals.g_serial_to);
    END IF;

      --bugfix#3646484
      IF ((inv_mwb_globals.g_lpn_from IS NOT NULL) AND (inv_mwb_globals.g_lpn_to IS NOT NULL) AND (inv_mwb_globals.g_lpn_from = inv_mwb_globals.g_lpn_to))  THEN
      --User is querying for single LPN so converted the range query to equality query
      --So it is enought to bind the from lpn alone
         dbms_sql.bind_variable(query_hdl, 'lpn_f', inv_mwb_globals.g_lpn_from);
      ELSE
          IF inv_mwb_globals.g_lpn_from IS NOT NULL THEN
            DBMS_SQL.bind_variable(query_hdl, 'lpn_f', inv_mwb_globals.g_lpn_from);
          END IF;

          IF inv_mwb_globals.g_lpn_to IS NOT NULL THEN
            DBMS_SQL.bind_variable(query_hdl, 'lpn_t', inv_mwb_globals.g_lpn_to);
          END IF;
      END IF;

         /*
          *  IF g_only_subinventory_status = 1, it means we are doing a view by 'STATUS'
          *  in this case restrict the subinventories by tree_status_id not Query find status
          *
          */
        IF inv_mwb_globals.g_only_subinventory_status = 1 THEN
           DBMS_SQL.bind_variable(query_hdl, 'st_id', inv_mwb_globals.g_tree_st_id);
        ELSE
           IF inv_mwb_globals.g_status_id IS NOT NULL THEN
              DBMS_SQL.bind_variable(query_hdl, 'st_id', inv_mwb_globals.g_status_id);
           END IF;
        END IF;

    IF inv_mwb_globals.g_mln_context_code IS NOT NULL THEN
      DBMS_SQL.bind_variable(query_hdl, 'mln_context', inv_mwb_globals.g_mln_context_code);
    END IF;

    IF inv_mwb_globals.g_project_id IS NOT NULL THEN
      DBMS_SQL.bind_variable(query_hdl, 'pr_id', inv_mwb_globals.g_project_id);
    END IF;

    IF inv_mwb_globals.g_task_id IS NOT NULL THEN
      DBMS_SQL.bind_variable(query_hdl, 'ta_id', inv_mwb_globals.g_task_id);
    END IF;

    IF inv_mwb_globals.g_unit_number IS NOT NULL THEN
      DBMS_SQL.bind_variable(query_hdl, 'un_id', inv_mwb_globals.g_unit_number);
    END IF;

    /*IF inv_mwb_globals.g_site_id IS NOT NULL THEN
       dbms_sql.bind_variable(query_hdl,'site_id', inv_mwb_globals.g_site_id);
     ELSIF inv_mwb_globals.g_vendor_id is NOT NULL THEN
       dbms_sql.bind_variable(query_hdl,'vendor_id', inv_mwb_globals.g_vendor_id);
    END IF;*/
    IF (inv_mwb_globals.g_owning_qry_mode = 4)
       OR(inv_mwb_globals.g_owning_qry_mode = 3) THEN
      DBMS_SQL.bind_variable(query_hdl, 'own_org', inv_mwb_globals.g_owning_org);
    END IF;

    IF (inv_mwb_globals.g_planning_query_mode = 4)
       OR(inv_mwb_globals.g_planning_query_mode = 3) THEN
      DBMS_SQL.bind_variable(query_hdl, 'plan_org', inv_mwb_globals.g_planning_org);
    END IF;

    --ER(3338592) Changes
    IF inv_mwb_globals.g_item_description IS NOT NULL THEN
       dbms_sql.bind_variable(query_hdl, 'item_description', inv_mwb_globals.g_item_description);
    END IF;

    DBMS_SQL.define_column(query_hdl, 1, sub_code, 10);
    rows_processed  := DBMS_SQL.EXECUTE(query_hdl);

    LOOP
      -- fetch a row
      IF DBMS_SQL.fetch_rows(query_hdl) > 0 THEN
        -- fetch columns from the row
        DBMS_SQL.column_value(query_hdl, 1, sub_code);

        IF j >= inv_mwb_globals.g_tree_node_low_value
           AND sub_code IS NOT NULL THEN
          x_node_tbl(i).state  := inv_mwb_globals.g_tree_node_state;
          x_node_tbl(i).DEPTH  := 1;
          x_node_tbl(i).label  := sub_code;
          x_node_tbl(i).icon   := 'inv_sbin';
          x_node_tbl(i).VALUE  := sub_code;
          x_node_tbl(i).TYPE   := 'SUB';
          i                    := i + 1;
        END IF;

        EXIT WHEN j >= inv_mwb_globals.g_tree_node_high_value;
        j  := j + 1;
      ELSE
        EXIT;
      END IF;
    END LOOP;

    DBMS_SQL.close_cursor(query_hdl); -- close cursor
    x_node_value    := j;
    x_tbl_index     := i;
  EXCEPTION
    WHEN NO_DATA_FOUND THEN
      NULL;
    WHEN OTHERS THEN
      RAISE;
  END add_subs;

  PROCEDURE add_locs(
    x_node_value          IN OUT NOCOPY NUMBER
  , x_node_tbl            IN OUT NOCOPY fnd_apptree.node_tbl_type
  , x_tbl_index           IN OUT NOCOPY NUMBER
  ) IS
    query_str      VARCHAR2(10000);
    query_hdl      NUMBER;
    rows_processed NUMBER;
    loc_id         mtl_item_locations_kfv.inventory_location_id%TYPE;
    loc_code       mtl_item_locations_kfv.concatenated_segments%TYPE;
    stock_loc_code mtl_parameters.stock_locator_control_code%TYPE;
    loc_type       NUMBER;
    i              NUMBER                                              := x_tbl_index;
    j              NUMBER                                              := x_node_value;
    table_required VARCHAR2(300);
    is_grade_t     BOOLEAN DEFAULT FALSE ; -- NSRIVAST, INVCONV
    l_procedure_name CONSTANT VARCHAR2(30) := 'ADD_LOCS';
    l_default_status_id NUMBER; -- Onhand Material Status Support
   BEGIN
      inv_mwb_globals.print_msg( g_pkg_name, l_procedure_name, 'Entered' );

      IF inv_mwb_globals.g_view_by = 'STATUS' THEN
         inv_mwb_globals.g_only_subinventory_status := 1;
      ELSE
         inv_mwb_globals.g_only_subinventory_status := NULL;
      END IF;

      -- Onhand Material Status Support
      if (inv_mwb_globals.g_organization_id is not null) then
         if (inv_cache.set_org_rec(inv_mwb_globals.g_organization_id)) then
           l_default_status_id :=  inv_cache.org_rec.default_status_id;
         end if;
      elsif (inv_mwb_globals.g_tree_organization_id is not null) then
         if (inv_cache.set_org_rec(inv_mwb_globals.g_tree_organization_id)) then
           l_default_status_id :=  inv_cache.org_rec.default_status_id;
         end if;
      end if;

  -- NSRIVAST, INVCONV, Start
     IF  (inv_mwb_globals.g_grade_from_code IS NOT NULL OR inv_mwb_globals.g_tree_grade_code IS NOT NULL OR inv_mwb_globals.g_grade_controlled <> 0) THEN
             is_grade_t     := TRUE ;
     END IF ;
-- NSRIVAST, INVCONV, End

    /* 1625119 Should check at the Org parameters first for Locator control */
     IF inv_mwb_globals.g_organization_id IS NOT NULL
     OR inv_mwb_globals.g_tree_organization_id IS NOT NULL THEN
      SELECT stock_locator_control_code
        INTO stock_loc_code
        FROM mtl_parameters
       WHERE organization_id = NVL(inv_mwb_globals.g_tree_organization_id ,
                                   inv_mwb_globals.g_organization_id);

      IF stock_loc_code = 1 THEN
        RETURN;
      ELSIF stock_loc_code = 4 THEN  /* check in Subinventory  bug 1625119 */
        -- Exit out of the procedure if the subinventory is not locator controlled
     IF (inv_mwb_globals.g_organization_id IS NOT NULL
     OR inv_mwb_globals.g_tree_organization_id IS NOT NULL)
     AND (inv_mwb_globals.g_subinventory_code IS NOT NULL
          OR inv_mwb_globals.g_tree_subinventory_code IS NOT NULL) THEN
          SELECT locator_type
            INTO loc_type
            FROM mtl_secondary_inventories
           WHERE secondary_inventory_name = NVL(inv_mwb_globals.g_tree_subinventory_code,
                                                inv_mwb_globals.g_subinventory_code)
             AND organization_id = NVL(inv_mwb_globals.g_tree_organization_id,
                                       inv_mwb_globals.g_organization_id);

          IF loc_type = 1 THEN
            RETURN;
          END IF;
        END IF;
      END IF;
    END IF;

    -- display all the LPNs in that location with the appropriate from
    -- and to LPN criteria, so include the locs which have them
    IF inv_mwb_globals.g_inventory_item_id IS NULL
       AND inv_mwb_globals.g_client_code IS NULL        -- ER(9158529)
       AND inv_mwb_globals.g_revision IS NULL
       AND inv_mwb_globals.g_category_set_id IS NULL    -- ER(9158529)
       AND inv_mwb_globals.g_category_id IS NULL        -- ER(9158529)
       AND inv_mwb_globals.g_parent_lot IS NULL			--BUG 7556505
       AND inv_mwb_globals.g_lot_from IS NULL
       AND inv_mwb_globals.g_lot_to IS NULL
       AND inv_mwb_globals.g_supplier_lot_from IS NULL  -- Bug 8396954
       AND inv_mwb_globals.g_supplier_lot_to IS NULL    -- Bug 8396954
       AND inv_mwb_globals.g_serial_from IS NULL
       AND inv_mwb_globals.g_serial_to IS NULL
       AND inv_mwb_globals.g_cost_group_id IS NULL
       AND inv_mwb_globals.g_status_id IS NULL
       AND inv_mwb_globals.g_tree_lot_attr_query IS NULL
       AND inv_mwb_globals.g_tree_serial_attr_query IS NULL
       AND inv_mwb_globals.g_unit_number IS NULL
       AND inv_mwb_globals.g_project_id IS NULL
       AND inv_mwb_globals.g_task_id IS NULL
       AND(inv_mwb_globals.g_lpn_from IS NOT NULL
           OR inv_mwb_globals.g_lpn_to IS NOT NULL)
       --ER(3338592) Changes
       AND inv_mwb_globals.g_item_description   IS NULL  THEN
       --ER(3338592) Changes
      query_str  := 'SELECT wlpn.locator_id, mil.concatenated_segments ';
      query_str  := query_str || 'FROM mtl_item_locations_kfv mil, wms_license_plate_numbers wlpn WHERE 1=1 ';
      query_str  := query_str || 'AND mil.inventory_location_id = wlpn.locator_id ';
      query_str  := query_str || 'AND mil.organization_id = wlpn.organization_id ';

      IF inv_mwb_globals.g_tree_mat_loc_id = 2 THEN
        query_str  := query_str || 'AND lpn_context = 3 ';
      ELSE
        query_str  := query_str || ' AND (lpn_context = 1 or lpn_context=9 or lpn_context=11 ) ';
      END IF;

      IF inv_mwb_globals.g_locator_id IS NOT NULL THEN
        query_str  := query_str || 'AND wlpn.locator_id = :loc_id ';
      END IF;

  -- NSRIVAST, INVCONV, Start
      IF inv_mwb_globals.g_grade_from_code IS NOT NULL THEN
         query_str := query_str || ' AND grade_code = :grade_f ' ;
      END IF ;
      IF inv_mwb_globals.g_tree_grade_code  IS NOT NULL THEN
         query_str := query_str || ' AND grade_code = :grade_c ' ;
      END IF ;
   -- NSRIVAST, INVCONV, End

        IF inv_mwb_globals.g_only_subinventory_status = 1 THEN
            query_str  := query_str || 'AND mil.status_id = :st_id ';
        ELSE
           IF inv_mwb_globals.g_status_id IS NOT NULL THEN
              query_str  := query_str || 'AND mil.status_id = :st_id ';
           END IF;
        END IF;

     IF (inv_mwb_globals.g_subinventory_code IS NOT NULL
     OR inv_mwb_globals.g_tree_subinventory_code IS NOT NULL) THEN
        query_str  := query_str || 'AND wlpn.subinventory_code = :sub ';
      END IF;

     IF (inv_mwb_globals.g_organization_id IS NOT NULL
     OR inv_mwb_globals.g_tree_organization_id IS NOT NULL) THEN
        query_str  := query_str || 'AND wlpn.organization_id = :org_id ';
     END IF;

      --bugfix#3646484
      IF ((inv_mwb_globals.g_lpn_from IS NOT NULL) AND (inv_mwb_globals.g_lpn_to IS NOT NULL) AND (inv_mwb_globals.g_lpn_from = inv_mwb_globals.g_lpn_to))  THEN
      --User is querying for single LPN so converted the range query to equality query
         query_str := query_str || 'and wlpn.license_plate_number = :lpn_f ';
      ELSE
         IF inv_mwb_globals.g_lpn_from IS NOT NULL THEN
           query_str  := query_str || 'and wlpn.license_plate_number >= :lpn_f ';
         END IF;

         IF inv_mwb_globals.g_lpn_to IS NOT NULL THEN
           query_str  := query_str || 'and wlpn.license_plate_number <= :lpn_t ';
         END IF;
      END IF;

      query_str  := query_str || ' GROUP BY locator_id, concatenated_segments ';
      query_str  := query_str || ' ORDER BY concatenated_segments ';
    ELSE
      IF (
          inv_mwb_globals.g_serial_from IS NULL
          AND inv_mwb_globals.g_serial_to IS NULL
          AND inv_mwb_globals.g_unit_number IS NULL
          AND inv_mwb_globals.g_status_id IS NULL
          AND inv_mwb_globals.g_lpn_from IS NULL
          AND inv_mwb_globals.g_lpn_to IS NULL
          AND inv_mwb_globals.g_tree_serial_attr_query IS NULL
         ) THEN
        IF inv_mwb_globals.g_tree_mat_loc_id = 2 THEN
          table_required  := ' mtl_rcv_mwb_onhand_v v ';
        ELSIF(inv_mwb_globals.g_status_id IS NULL AND inv_mwb_globals.g_only_subinventory_status IS NULL) THEN
          table_required  := ' mtl_onhand_total_mwb_v v ';
             IF is_grade_t = TRUE THEN                       -- NSRIVAST, INVCONV
             table_required  := ' mtl_onhand_total_v v ';  -- NSRIVAST, INVCONV
             END IF;
        ELSE
          table_required  := ' mtl_onhand_total_v v ';
        END IF;

	--bug 6633612
		IF (inv_mwb_globals.g_shipment_header_id is not null) THEN
			table_required  := table_required || ' , rcv_transactions rt, mtl_material_transactions mmt ';
		END IF;
	--bug 6633612

        IF inv_mwb_globals.g_tree_lot_attr_query IS NULL AND inv_mwb_globals.g_parent_lot IS NULL
            AND inv_mwb_globals.g_supplier_lot_from IS NULL AND inv_mwb_globals.g_supplier_lot_to IS NULL THEN
          query_str  := query_str || 'SELECT v.locator_id, v.locator from ' || table_required;
          query_str  := query_str || 'WHERE 1=1 ';
        ELSE
          query_str  :=
                query_str
             || 'SELECT v.locator_id, v.locator from'
             || '(SELECT lot_number lot_num, parent_lot_number, supplier_lot_number FROM mtl_lot_numbers WHERE 1=1 '
             || inv_mwb_globals.g_tree_lot_attr_query
             || ') mln, '
             || table_required;
          query_str  := query_str || 'WHERE mln.lot_num = v.lot_number ';
 		--BUG 7556505
		   IF inv_mwb_globals.g_parent_lot IS NOT NULL THEN
		       query_str  := query_str || ' AND mln.parent_lot_number = :parent_lot ';
	           END IF;
		--BUG 7556505
                /* Bug 8396954 added below code for supplier_lot_number */
                IF (inv_mwb_globals.g_supplier_lot_from IS NOT NULL AND
                    inv_mwb_globals.g_supplier_lot_to IS NOT NULL AND
                    inv_mwb_globals.g_supplier_lot_from = inv_mwb_globals.g_supplier_lot_to) THEN
                    query_str  := query_str || ' AND mln.supplier_lot_number = :supplier_lot_f ';
                END IF;

                IF (inv_mwb_globals.g_supplier_lot_from IS NOT NULL AND
	            inv_mwb_globals.g_supplier_lot_from <> NVL(inv_mwb_globals.g_supplier_lot_to, -1) ) THEN
                    query_str  := query_str || ' AND mln.supplier_lot_number >= :supplier_lot_f ';
                END IF;

                IF (inv_mwb_globals.g_supplier_lot_to IS NOT NULL AND
	            inv_mwb_globals.g_supplier_lot_to <> NVL(inv_mwb_globals.g_supplier_lot_from, -1) ) THEN
                    query_str  := query_str || ' AND mln.supplier_lot_number <= :supplier_lot_t ';
                END IF;
                /* End of Bug 8396954 */
        END IF;

	--bug 6633612
	IF (inv_mwb_globals.g_shipment_header_id is not null) THEN
		query_str := query_str || ' AND rt.shipment_header_id = :shipment_header_id '
					 || ' AND rt.transaction_id = mmt.rcv_transaction_id '
					 || ' AND rt.organization_id = mmt.organization_id '
					 || ' AND rt.transaction_type = ''DELIVER'''
					 || ' AND rt.destination_type_code = ''INVENTORY'''
					 || ' AND mmt.transaction_id = v.create_transaction_id '
					 || ' AND mmt.organization_id = v.organization_id ';

	END IF;
	--bug 6633612
        IF inv_mwb_globals.g_project_id IS NOT NULL THEN
          query_str  := query_str || ' AND v.project_id = :pr_id ';
        END IF;

        IF inv_mwb_globals.g_task_id IS NOT NULL THEN
          query_str  := query_str || ' AND v.task_id = :ta_id ';
        END IF;

        IF inv_mwb_globals.g_unit_number IS NOT NULL THEN
          query_str  := query_str || ' AND v.unit_number=:un_id ';
        END IF;

        /*IF inv_mwb_globals.g_site_id IS NOT NULL THEN
           query_str := query_str || ' AND PLANNING_TP_TYPE = 1 ';
           query_str := query_str || ' AND planning_organization_id = :site_id ' ;
         ELSIF inv_mwb_globals.g_vendor_id is NOT NULL THEN
           query_str := query_str || ' AND  PLANNING_TP_TYPE = 1 ';
           query_str := query_str || ' AND  planning_organization_id in ';
           query_str := query_str || ' (select vendor_site_id from po_vendor_sites_all ';
           query_str := query_str || '  where vendor_id = :vendor_id )';
        END IF;*/
        IF (inv_mwb_globals.g_owning_qry_mode = 4) THEN
          query_str  := query_str || ' AND v.owning_organization_id = :own_org ';
          query_str  := query_str || ' AND v.owning_tp_type = 2 ';
        ELSIF(inv_mwb_globals.g_owning_qry_mode = 3) THEN
          query_str  := query_str || ' AND v.owning_organization_id = :own_org ';
          query_str  := query_str || ' AND v.owning_tp_type = 1 ';
        ELSIF(inv_mwb_globals.g_owning_qry_mode = 2) THEN
          query_str  := query_str || ' AND v.owning_tp_type = 1 ';
        END IF;

        IF (inv_mwb_globals.g_planning_query_mode = 4) THEN
          query_str  := query_str || ' AND v.planning_organization_id = :plan_org ';
          query_str  := query_str || ' AND v.planning_tp_type = 2 ';
        ELSIF(inv_mwb_globals.g_planning_query_mode = 3) THEN
          query_str  := query_str || ' AND v.planning_organization_id = :plan_org ';
          query_str  := query_str || ' AND v.planning_tp_type = 1 ';
        ELSIF(inv_mwb_globals.g_planning_query_mode = 2) THEN
          query_str  := query_str || ' AND v.planning_tp_type = 1 ';
        END IF;

/*
        IF inv_mwb_globals.g_status_id IS NOT NULL THEN
          IF inv_mwb_globals.g_only_locator_status = 1 THEN
            query_str  := query_str || 'AND (subinventory_status_id = :st_id or ';
            query_str  := query_str || 'locator_status_id = :st_id or lot_status_id = :st_id) ';
          ELSE
            query_str  := query_str || 'AND locator_status_id = :st_id ';
          END IF;
        END IF;
*/
        -- Onhand Material Status Support: If status is tracked at onhand level then check for status
        -- from onhand table (MOQD)
        if (l_default_status_id is not null) then -- Status at onhand level
           IF inv_mwb_globals.g_only_subinventory_status = 1 THEN
               query_str  := query_str || 'AND v.onhand_status_id = :st_id ';
           ELSE
              IF inv_mwb_globals.g_status_id IS NOT NULL THEN
                 query_str  := query_str || 'AND v.onhand_status_id = :st_id ';
              END IF;
           END IF;
        else
           IF inv_mwb_globals.g_only_subinventory_status = 1 THEN
               query_str  := query_str || 'AND v.locator_status_id = :st_id ';
           ELSE
              IF inv_mwb_globals.g_status_id IS NOT NULL THEN
                 query_str  := query_str || 'AND v.locator_status_id = :st_id ';
              END IF;
           END IF;
        end if;

        IF inv_mwb_globals.g_lot_from IS NOT NULL THEN
          query_str  := query_str || 'AND v.lot_number >= :lot_f ';
        END IF;

        IF inv_mwb_globals.g_lot_to IS NOT NULL THEN
          query_str  := query_str || 'AND v.lot_number <= :lot_t ';
        END IF;

        IF inv_mwb_globals.g_cost_group_id IS NOT NULL THEN
          query_str  := query_str || 'AND v.cost_group_id = :cg_id ';
        END IF;

        IF inv_mwb_globals.g_revision IS NOT NULL THEN
          query_str  := query_str || 'AND v.revision = :rev ';
        END IF;

        IF inv_mwb_globals.g_inventory_item_id IS NOT NULL THEN
          query_str  := query_str || 'AND v.inventory_item_id = :item_id ';
        END IF;

        -- ER(9158529 client)
        IF inv_mwb_globals.g_client_code IS NOT NULL THEN
          query_str := query_str || ' AND v.inventory_item_id in (select DISTINCT inventory_item_id from mtl_system_items_b where wms_deploy.get_client_code(inventory_item_id) = :client_code) ';
        END IF;
        -- ER(9158529 client)

        -- ER(9158529)
        IF inv_mwb_globals.g_category_set_id IS NOT NULL THEN
          query_str := query_str || ' AND v.inventory_item_id in '
                                        || ' (select DISTINCT inventory_item_id from mtl_item_categories '
                                        || ' where organization_id = :organization_id '
                                        || ' and category_set_id = :category_set_id '
                                        || ' and category_id = nvl(:category_id, category_id)) ' ;
        END IF;
        -- ER(9158529)

        query_str  := query_str || 'AND v.locator_id is not null ';

        IF inv_mwb_globals.g_locator_id IS NOT NULL THEN
          query_str  := query_str || 'AND v.locator_id = :loc_id ';
        END IF;

  -- NSRIVAST, INVCONV, Start
      IF inv_mwb_globals.g_grade_from_code IS NOT NULL THEN
         query_str := query_str || ' AND v.grade_code = :grade_f ' ;
      END IF ;
      IF inv_mwb_globals.g_tree_grade_code  IS NOT NULL THEN
         query_str := query_str || ' AND v.grade_code = :grade_c ' ;
      END IF ;
   -- NSRIVAST, INVCONV, End

        IF inv_mwb_globals.g_subinventory_code IS NOT NULL
        OR inv_mwb_globals.g_tree_subinventory_code IS NOT NULL THEN
          query_str  := query_str || 'AND v.subinventory_code = :sub ';
        END IF;

        --ER(3338592) Changes
        IF inv_mwb_globals.g_item_description IS NOT NULL THEN
           query_str := query_str || ' AND v.item_description LIKE :item_description ';
        END IF;
        --ER(3338592) Changes

        IF inv_mwb_globals.g_organization_id IS NOT NULL
        OR inv_mwb_globals.g_tree_organization_id IS NOT NULL THEN
          query_str  := query_str || 'AND v.organization_id = :org_id ';
        END IF;

        query_str  := query_str || 'GROUP BY v.locator_id, v.locator ';
        query_str  := query_str || 'ORDER BY v.locator ';
      ELSIF(
            (
             inv_mwb_globals.g_serial_from IS NOT NULL
             OR inv_mwb_globals.g_serial_to IS NOT NULL
             OR inv_mwb_globals.g_tree_serial_attr_query IS NOT NULL
             OR inv_mwb_globals.g_unit_number IS NOT NULL
            )
            AND inv_mwb_globals.g_lpn_from IS NULL
            AND inv_mwb_globals.g_lpn_to IS NULL
           ) THEN
        IF inv_mwb_globals.g_tree_mat_loc_id = 2 THEN
          table_required  := ' mtl_rcv_serial_oh_v v ';
        ELSIF(inv_mwb_globals.g_status_id IS NULL AND inv_mwb_globals.g_only_subinventory_status IS NULL) THEN
          table_required  := ' mtl_onhand_serial_mwb_v v ';
           IF is_grade_t = TRUE THEN                       -- NSRIVAST, INVCONV
             table_required  := ' mtl_onhand_serial_v v ';   -- NSRIVAST, INVCONV
          END IF;                                          -- NSRIVAST, INVCONV
        ELSE
          table_required  := ' mtl_onhand_serial_v v ';
        END IF;
		--bug 6633612
		IF (inv_mwb_globals.g_shipment_header_id is not null) THEN
			table_required  := table_required || ' , rcv_transactions rt, mtl_material_transactions mmt ';
		END IF;
		--bug 6633612

        IF (inv_mwb_globals.g_tree_lot_attr_query IS NULL AND inv_mwb_globals.g_parent_lot IS NULL
            AND inv_mwb_globals.g_supplier_lot_from IS NULL AND inv_mwb_globals.g_supplier_lot_to IS NULL)
           AND inv_mwb_globals.g_tree_serial_attr_query IS NULL THEN
          query_str  := query_str || 'SELECT v.locator_id, v.locator from ' || table_required;
          query_str  := query_str || 'WHERE 1=1 ';
        ELSIF (inv_mwb_globals.g_tree_lot_attr_query IS NULL AND inv_mwb_globals.g_parent_lot IS NULL
                AND inv_mwb_globals.g_supplier_lot_from IS NULL AND inv_mwb_globals.g_supplier_lot_to IS NULL)
              AND inv_mwb_globals.g_tree_serial_attr_query IS NOT NULL THEN
          query_str  :=
                query_str
             || 'SELECT v.locator_id, v.locator from'
             || '(SELECT serial_number serial_num FROM mtl_serial_numbers WHERE 1=1 '
             || inv_mwb_globals.g_tree_serial_attr_query
             || ') msn, '
             || table_required;
          query_str  := query_str || 'WHERE msn.serial_num = v.serial_number ';
        ELSIF (inv_mwb_globals.g_tree_lot_attr_query IS NOT NULL OR inv_mwb_globals.g_parent_lot IS NOT NULL
                OR inv_mwb_globals.g_supplier_lot_from IS NOT NULL OR inv_mwb_globals.g_supplier_lot_to IS NOT NULL)
              AND inv_mwb_globals.g_tree_serial_attr_query IS NULL THEN
          query_str  :=
                query_str
             || 'SELECT v.locator_id, v.locator from'
             || '(SELECT lot_number lot_num, parent_lot_number, supplier_lot_number FROM mtl_lot_numbers WHERE 1=1 '
             || inv_mwb_globals.g_tree_lot_attr_query
             || ') mln, '
             || table_required;
          query_str  := query_str || 'WHERE mln.lot_num = v.lot_number ';
 		--BUG 7556505
		   IF inv_mwb_globals.g_parent_lot IS NOT NULL THEN
		       query_str  := query_str || ' AND mln.parent_lot_number = :parent_lot ';
	           END IF;
		--BUG 7556505
                /* Bug 8396954 added below code for supplier_lot_number */
                IF (inv_mwb_globals.g_supplier_lot_from IS NOT NULL AND
                    inv_mwb_globals.g_supplier_lot_to IS NOT NULL AND
                    inv_mwb_globals.g_supplier_lot_from = inv_mwb_globals.g_supplier_lot_to) THEN
                    query_str  := query_str || ' AND mln.supplier_lot_number = :supplier_lot_f ';
                END IF;

                IF (inv_mwb_globals.g_supplier_lot_from IS NOT NULL AND
	            inv_mwb_globals.g_supplier_lot_from <> NVL(inv_mwb_globals.g_supplier_lot_to, -1) ) THEN
                    query_str  := query_str || ' AND mln.supplier_lot_number >= :supplier_lot_f ';
                END IF;

                IF (inv_mwb_globals.g_supplier_lot_to IS NOT NULL AND
	            inv_mwb_globals.g_supplier_lot_to <> NVL(inv_mwb_globals.g_supplier_lot_from, -1) ) THEN
                    query_str  := query_str || ' AND mln.supplier_lot_number <= :supplier_lot_t ';
                END IF;
                /* End of Bug 8396954 */
        ELSIF (inv_mwb_globals.g_tree_lot_attr_query IS NOT NULL OR inv_mwb_globals.g_parent_lot IS NOT NULL
                 OR inv_mwb_globals.g_supplier_lot_from IS NOT NULL OR inv_mwb_globals.g_supplier_lot_to IS NOT NULL)
              AND inv_mwb_globals.g_tree_serial_attr_query IS NOT NULL THEN
          query_str  :=
                query_str
             || 'SELECT v.locator_id, v.locator from'
             || '(SELECT lot_number lot_num, parent_lot_number, supplier_lot_number FROM mtl_lot_numbers WHERE 1=1 '
             || inv_mwb_globals.g_tree_lot_attr_query
             || ') mln, '
             || '(SELECT serial_number serial_num FROM mtl_serial_numbers WHERE 1=1 '
             || inv_mwb_globals.g_tree_serial_attr_query
             || ') msn, '
             || table_required;
          query_str  := query_str || 'WHERE mln.lot_num = v.lot_number ';
 		--BUG 7556505
		   IF inv_mwb_globals.g_parent_lot IS NOT NULL THEN
		       query_str  := query_str || ' AND mln.parent_lot_number = :parent_lot ';
	           END IF;
		--BUG 7556505
                /* Bug 8396954 added below code for supplier_lot_number */
                IF (inv_mwb_globals.g_supplier_lot_from IS NOT NULL AND
                    inv_mwb_globals.g_supplier_lot_to IS NOT NULL AND
                    inv_mwb_globals.g_supplier_lot_from = inv_mwb_globals.g_supplier_lot_to) THEN
                    query_str  := query_str || ' AND mln.supplier_lot_number = :supplier_lot_f ';
                END IF;

                IF (inv_mwb_globals.g_supplier_lot_from IS NOT NULL AND
	            inv_mwb_globals.g_supplier_lot_from <> NVL(inv_mwb_globals.g_supplier_lot_to, -1) ) THEN
                    query_str  := query_str || ' AND mln.supplier_lot_number >= :supplier_lot_f ';
                END IF;

                IF (inv_mwb_globals.g_supplier_lot_to IS NOT NULL AND
	            inv_mwb_globals.g_supplier_lot_to <> NVL(inv_mwb_globals.g_supplier_lot_from, -1) ) THEN
                    query_str  := query_str || ' AND mln.supplier_lot_number <= :supplier_lot_t ';
                END IF;
                /* End of Bug 8396954 */
          query_str  := query_str || 'AND msn.serial_num = v.serial_number ';
        END IF;

	--bug 6633612
	IF (inv_mwb_globals.g_shipment_header_id is not null) THEN
		query_str := query_str || ' AND rt.shipment_header_id = :shipment_header_id '
					 || ' AND rt.transaction_id = mmt.rcv_transaction_id '
					 || ' AND rt.organization_id = mmt.organization_id '
					 || ' AND rt.transaction_type = ''DELIVER'''
					 || ' AND rt.destination_type_code = ''INVENTORY'''
					 || ' AND mmt.transaction_id = v.last_transaction_id '
					 || ' AND mmt.organization_id = v.organization_id ';

	END IF;
	--bug 6633612

        IF inv_mwb_globals.g_project_id IS NOT NULL THEN
          query_str  := query_str || ' AND v.project_id = :pr_id ';
        END IF;

  -- NSRIVAST, INVCONV, Start
      IF inv_mwb_globals.g_grade_from_code IS NOT NULL THEN
         query_str := query_str || ' AND v.grade_code = :grade_f ' ;
      END IF ;
      IF inv_mwb_globals.g_tree_grade_code  IS NOT NULL THEN
         query_str := query_str || ' AND v.grade_code = :grade_c ' ;
      END IF ;
   -- NSRIVAST, INVCONV, End

        IF inv_mwb_globals.g_task_id IS NOT NULL THEN
          query_str  := query_str || ' AND v.task_id = :ta_id ';
        END IF;

        IF inv_mwb_globals.g_unit_number IS NOT NULL THEN
          query_str  := query_str || ' AND v.unit_number=:un_id ';
        END IF;

        -- Onhand Material Status Support: If status is tracked at onhand level then check for status
        -- from onhand table (MOQD)
        if (l_default_status_id is not null) then -- Status at onhand level
           IF inv_mwb_globals.g_only_subinventory_status = 1 THEN
               query_str  := query_str || 'AND v.serial_status_id = :st_id ';
           ELSE
              IF inv_mwb_globals.g_status_id IS NOT NULL THEN
                 query_str  := query_str || 'AND v.serial_status_id = :st_id ';
              END IF;
           END IF;
        else
           IF inv_mwb_globals.g_only_subinventory_status = 1 THEN
               query_str  := query_str || 'AND v.locator_status_id = :st_id ';
           ELSE
              IF inv_mwb_globals.g_status_id IS NOT NULL THEN
                 query_str  := query_str || 'AND v.locator_status_id = :st_id ';
              END IF;
           END IF;
        end if;

/*
        IF inv_mwb_globals.g_status_id IS NOT NULL THEN
          IF inv_mwb_globals.g_only_locator_status = 1 THEN
            query_str  := query_str || 'AND (subinventory_status_id = :st_id or locator_status_id = :st_id or ';
            query_str  := query_str || 'lot_status_id = :st_id or serial_status_id = :st_id) ';
          ELSE
            query_str  := query_str || 'AND locator_status_id = :st_id ';
          END IF;
        END IF;
*/
        IF inv_mwb_globals.g_lot_from IS NOT NULL THEN
          query_str  := query_str || 'AND v.lot_number >= :lot_f ';
        END IF;

        IF inv_mwb_globals.g_lot_to IS NOT NULL THEN
          query_str  := query_str || 'AND v.lot_number <= :lot_t ';
        END IF;

        IF inv_mwb_globals.g_cost_group_id IS NOT NULL THEN
          query_str  := query_str || 'AND v.cost_group_id = :cg_id ';
        END IF;

        IF inv_mwb_globals.g_revision IS NOT NULL THEN
          query_str  := query_str || 'AND v.revision = :rev ';
        END IF;

        IF inv_mwb_globals.g_serial_from IS NOT NULL THEN
          query_str  := query_str || 'AND v.serial_number >= :serial_f ';
        END IF;

        IF inv_mwb_globals.g_serial_to IS NOT NULL THEN
          query_str  := query_str || 'AND v.serial_number <= :serial_t ';
        END IF;

        IF inv_mwb_globals.g_inventory_item_id IS NOT NULL THEN
          query_str  := query_str || 'AND v.inventory_item_id = :item_id ';
        END IF;

        -- ER(9158529 client)
        IF inv_mwb_globals.g_client_code IS NOT NULL THEN
          query_str := query_str || ' AND v.inventory_item_id in (select DISTINCT inventory_item_id from mtl_system_items_b where wms_deploy.get_client_code(inventory_item_id) = :client_code) ';
        END IF;
        -- ER(9158529 client)

        -- ER(9158529)
        IF inv_mwb_globals.g_category_set_id IS NOT NULL THEN
          query_str := query_str || ' AND v.inventory_item_id in '
                                        || ' (select DISTINCT inventory_item_id from mtl_item_categories '
                                        || ' where organization_id = :organization_id '
                                        || ' and category_set_id = :category_set_id '
                                        || ' and category_id = nvl(:category_id, category_id)) ' ;
        END IF;
        -- ER(9158529)

        query_str  := query_str || 'AND v.locator_id is not null ';

        IF inv_mwb_globals.g_locator_id IS NOT NULL THEN
          query_str  := query_str || 'AND v.locator_id = :loc_id ';
        END IF;

        IF inv_mwb_globals.g_subinventory_code IS NOT NULL
        OR inv_mwb_globals.g_tree_subinventory_code IS NOT NULL THEN
          query_str  := query_str || 'AND v.subinventory_code = :sub ';
        END IF;

         --ER(3338592) Changes
         IF inv_mwb_globals.g_item_description IS NOT NULL THEN
            query_str := query_str || ' AND v.item_description LIKE :item_description ';
         END IF;
         --ER(3338592) Changes

        IF inv_mwb_globals.g_organization_id IS NOT NULL
        OR inv_mwb_globals.g_tree_organization_id IS NOT NULL THEN
          query_str  := query_str || 'AND v.organization_id = :org_id ';
        END IF;

        query_str  := query_str || 'GROUP BY v.locator_id, v.locator ';
        query_str  := query_str || 'ORDER BY v.locator ';
      -- Need to use both mtl_onhand_total_v and mtl_onhand_serial_v
      ELSIF(
            inv_mwb_globals.g_serial_from IS NULL
            AND inv_mwb_globals.g_serial_to IS NULL
            AND inv_mwb_globals.g_unit_number IS NULL
            AND inv_mwb_globals.g_status_id IS NOT NULL
            AND inv_mwb_globals.g_lpn_from IS NULL
            AND inv_mwb_globals.g_lpn_to IS NULL
           ) THEN
        IF (inv_mwb_globals.g_status_id IS NULL AND inv_mwb_globals.g_only_subinventory_status IS NULL) THEN
          table_required  := ' mtl_onhand_total_mwb_v v ';
--        ELSIF is_grade_t = TRUE THEN                       -- NSRIVAST, INVCONV
--            table_required  := ' mtl_onhand_new_lpn_v ';   -- NSRIVAST, INVCONV
        ELSE
          table_required  := ' mtl_onhand_total_v v ';
        END IF;

		--bug 6633612
		IF (inv_mwb_globals.g_shipment_header_id is not null) THEN
			table_required  := table_required || ' , rcv_transactions rt, mtl_material_transactions mmt ';
		END IF;
		--bug 6633612

        query_str  := 'SELECT locator_id, locator from (';

        IF inv_mwb_globals.g_tree_lot_attr_query IS NULL AND inv_mwb_globals.g_parent_lot IS NULL
            AND inv_mwb_globals.g_supplier_lot_from IS NULL AND inv_mwb_globals.g_supplier_lot_to IS NULL THEN
          query_str  := query_str || 'SELECT v.locator_id locator_id, v.locator locator from ' || table_required;
          query_str  := query_str || 'WHERE 1=1 ';
        ELSE
          query_str  :=
                query_str
             || 'SELECT v.locator_id locator_id, v.locator locator from'
             || '(SELECT lot_number lot_num, parent_lot_number, supplier_lot_number FROM mtl_lot_numbers WHERE 1=1 '
             || inv_mwb_globals.g_tree_lot_attr_query
             || ') mln, '
             || table_required;
          query_str  := query_str || 'WHERE mln.lot_num = v.lot_number ';
 		--BUG 7556505
		   IF inv_mwb_globals.g_parent_lot IS NOT NULL THEN
		       query_str  := query_str || ' AND mln.parent_lot_number = :parent_lot ';
	           END IF;
		--BUG 7556505
                /* Bug 8396954 added below code for supplier_lot_number */
                IF (inv_mwb_globals.g_supplier_lot_from IS NOT NULL AND
                    inv_mwb_globals.g_supplier_lot_to IS NOT NULL AND
                    inv_mwb_globals.g_supplier_lot_from = inv_mwb_globals.g_supplier_lot_to) THEN
                    query_str  := query_str || ' AND mln.supplier_lot_number = :supplier_lot_f ';
                END IF;

                IF (inv_mwb_globals.g_supplier_lot_from IS NOT NULL AND
	            inv_mwb_globals.g_supplier_lot_from <> NVL(inv_mwb_globals.g_supplier_lot_to, -1) ) THEN
                    query_str  := query_str || ' AND mln.supplier_lot_number >= :supplier_lot_f ';
                END IF;

                IF (inv_mwb_globals.g_supplier_lot_to IS NOT NULL AND
	            inv_mwb_globals.g_supplier_lot_to <> NVL(inv_mwb_globals.g_supplier_lot_from, -1) ) THEN
                    query_str  := query_str || ' AND mln.supplier_lot_number <= :supplier_lot_t ';
                END IF;
                /* End of Bug 8396954 */
        END IF;

	--bug 6633612
	IF (inv_mwb_globals.g_shipment_header_id is not null) THEN
		query_str := query_str || ' AND rt.shipment_header_id = :shipment_header_id '
					 || ' AND rt.transaction_id = mmt.rcv_transaction_id '
					 || ' AND rt.organization_id = mmt.organization_id '
					 || ' AND rt.transaction_type = ''DELIVER'''
					 || ' AND rt.destination_type_code = ''INVENTORY'''
					 || ' AND mmt.transaction_id = v.create_transaction_id '
					 || ' AND mmt.organization_id = v.organization_id ';

	END IF;
	--bug 6633612

        IF inv_mwb_globals.g_project_id IS NOT NULL THEN
          query_str  := query_str || ' AND v.project_id = :pr_id ';
        END IF;

        IF inv_mwb_globals.g_task_id IS NOT NULL THEN
          query_str  := query_str || ' AND v.task_id = :ta_id ';
        END IF;

        /*IF inv_mwb_globals.g_site_id IS NOT NULL THEN
           query_str := query_str || ' AND PLANNING_TP_TYPE = 1 ';
           query_str := query_str || ' AND planning_organization_id = :site_id ' ;
         ELSIF inv_mwb_globals.g_vendor_id is NOT NULL THEN
           query_str := query_str || ' AND  PLANNING_TP_TYPE = 1 ';
           query_str := query_str || ' AND  planning_organization_id in ';
           query_str := query_str || ' (select vendor_site_id from po_vendor_sites_all ';
           query_str := query_str || '  where vendor_id = :vendor_id )';
        END IF;*/
        IF (inv_mwb_globals.g_owning_qry_mode = 4) THEN
          query_str  := query_str || ' AND v.owning_organization_id = :own_org ';
          query_str  := query_str || ' AND v.owning_tp_type = 2 ';
        ELSIF(inv_mwb_globals.g_owning_qry_mode = 3) THEN
          query_str  := query_str || ' AND v.owning_organization_id = :own_org ';
          query_str  := query_str || ' AND v.owning_tp_type = 1 ';
        ELSIF(inv_mwb_globals.g_owning_qry_mode = 2) THEN
          query_str  := query_str || ' AND v.owning_tp_type = 1 ';
        END IF;

        IF (inv_mwb_globals.g_planning_query_mode = 4) THEN
          query_str  := query_str || ' AND v.planning_organization_id = :plan_org ';
          query_str  := query_str || ' AND v.planning_tp_type = 2 ';
        ELSIF(inv_mwb_globals.g_planning_query_mode = 3) THEN
          query_str  := query_str || ' AND v.planning_organization_id = :plan_org ';
          query_str  := query_str || ' AND v.planning_tp_type = 1 ';
        ELSIF(inv_mwb_globals.g_planning_query_mode = 2) THEN
          query_str  := query_str || ' AND v.planning_tp_type = 1 ';
        END IF;

        -- Onhand Material Status Support: If status is tracked at onhand level then check for status
        -- from onhand table (MOQD)
        if (l_default_status_id is not null) then -- Status at onhand level
           IF inv_mwb_globals.g_only_subinventory_status = 1 THEN
               query_str  := query_str || 'AND v.onhand_status_id = :st_id ';
           ELSE
              IF inv_mwb_globals.g_status_id IS NOT NULL THEN
                 query_str  := query_str || 'AND v.onhand_status_id = :st_id ';
              END IF;
           END IF;
        else
           IF inv_mwb_globals.g_only_subinventory_status = 1 THEN
               query_str  := query_str || 'AND v.locator_status_id = :st_id ';
           ELSE
              IF inv_mwb_globals.g_status_id IS NOT NULL THEN -- Bug 6060233
                 query_str  := query_str || 'AND (v.subinventory_status_id = :st_id or v.locator_status_id = :st_id ';
                 query_str  := query_str || 'OR v.lot_status_id = :st_id) ';
              END IF;
           END IF;
        end if;

/*
        IF inv_mwb_globals.g_status_id IS NOT NULL THEN
          IF inv_mwb_globals.g_only_locator_status = 1 THEN
            query_str  := query_str || 'AND (subinventory_status_id = :st_id or ';
            query_str  := query_str || 'locator_status_id = :st_id or lot_status_id = :st_id) ';
          ELSE
            query_str  := query_str || 'AND locator_status_id = :st_id ';
          END IF;
        END IF;
*/
        IF inv_mwb_globals.g_lot_from IS NOT NULL THEN
          query_str  := query_str || 'AND v.lot_number >= :lot_f ';
        END IF;

        IF inv_mwb_globals.g_lot_to IS NOT NULL THEN
          query_str  := query_str || 'AND v.lot_number <= :lot_t ';
        END IF;

  -- NSRIVAST, INVCONV, Start
      IF inv_mwb_globals.g_grade_from_code IS NOT NULL THEN
         query_str := query_str || ' AND v.grade_code = :grade_f ' ;
      END IF ;
      IF inv_mwb_globals.g_tree_grade_code  IS NOT NULL THEN
         query_str := query_str || ' AND v.grade_code = :grade_c ' ;
      END IF ;
   -- NSRIVAST, INVCONV, End

        IF inv_mwb_globals.g_cost_group_id IS NOT NULL THEN
          query_str  := query_str || 'AND v.cost_group_id = :cg_id ';
        END IF;

        IF inv_mwb_globals.g_revision IS NOT NULL THEN
          query_str  := query_str || 'AND v.revision = :rev ';
        END IF;

        --query_str  := query_str || 'AND serial_number_control_code in (1,6) ';
        query_str := query_str || 'AND v.item_serial_control in (1,6) ';

        IF inv_mwb_globals.g_inventory_item_id IS NOT NULL THEN
          query_str  := query_str || 'AND v.inventory_item_id = :item_id ';
        END IF;

        -- ER(9158529 client)
        IF inv_mwb_globals.g_client_code IS NOT NULL THEN
          query_str := query_str || ' AND v.inventory_item_id in (select DISTINCT inventory_item_id from mtl_system_items_b where wms_deploy.get_client_code(inventory_item_id) = :client_code) ';
        END IF;
        -- ER(9158529 client)

        -- ER(9158529)
        IF inv_mwb_globals.g_category_set_id IS NOT NULL THEN
          query_str := query_str || ' AND v.inventory_item_id in '
                                      || ' (select DISTINCT inventory_item_id from mtl_item_categories '
                                      || ' where organization_id = :organization_id '
                                      || ' and category_set_id = :category_set_id '
                                      || ' and category_id = nvl(:category_id, category_id)) ' ;
        END IF;
        -- ER(9158529)

        query_str  := query_str || 'AND v.locator_id is not null ';

        IF inv_mwb_globals.g_locator_id IS NOT NULL THEN
          query_str  := query_str || 'AND v.locator_id = :loc_id ';
        END IF;

         --ER(3338592) Changes
         IF inv_mwb_globals.g_item_description IS NOT NULL THEN
            query_str := query_str || ' AND v.item_description LIKE :item_description ';
         END IF;
         --ER(3338592) Changes

        IF inv_mwb_globals.g_subinventory_code IS NOT NULL
        OR inv_mwb_globals.g_subinventory_code IS NOT NULL THEN
          query_str  := query_str || 'AND v.subinventory_code = :sub ';
        END IF;

        IF inv_mwb_globals.g_organization_id IS NOT NULL
        OR inv_mwb_globals.g_organization_id IS NOT NULL THEN
          query_str  := query_str || 'AND v.organization_id = :org_id ';
        END IF;

        query_str  := query_str || 'UNION ';

        IF (inv_mwb_globals.g_status_id IS NULL AND inv_mwb_globals.g_only_subinventory_status IS NULL) THEN
          table_required  := ' mtl_onhand_serial_mwb_v v ';
        ELSE
          table_required  := ' mtl_onhand_serial_v v ' ;
        END IF;

		--bug 6633612
		IF (inv_mwb_globals.g_shipment_header_id is not null) THEN
			table_required  := table_required || ' , rcv_transactions rt, mtl_material_transactions mmt ';
		END IF;
		--bug 6633612

        IF (inv_mwb_globals.g_tree_lot_attr_query IS NULL AND inv_mwb_globals.g_parent_lot IS NULL
            AND inv_mwb_globals.g_supplier_lot_from IS NULL AND inv_mwb_globals.g_supplier_lot_to IS NULL)
           AND inv_mwb_globals.g_tree_serial_attr_query IS NULL THEN
          query_str  := query_str || 'SELECT v.locator_id locator_id , v.locator locator from ' || table_required;
          query_str  := query_str || 'WHERE 1=1 ';
        ELSIF (inv_mwb_globals.g_tree_lot_attr_query IS NOT NULL OR inv_mwb_globals.g_parent_lot IS NOT NULL
                OR inv_mwb_globals.g_supplier_lot_from IS NOT NULL OR inv_mwb_globals.g_supplier_lot_to IS NOT NULL)
              AND inv_mwb_globals.g_tree_serial_attr_query IS NULL THEN
          query_str  :=
                query_str
             || 'SELECT v.locator_id locator_id, v.locator locator from'
             || '(SELECT lot_number lot_num, parent_lot_number, supplier_lot_number FROM mtl_lot_numbers WHERE 1=1 '
             || inv_mwb_globals.g_tree_lot_attr_query
             || ') mln, '
             || table_required;
          query_str  := query_str || 'WHERE mln.lot_num = v.lot_number ';
 		--BUG 7556505
		   IF inv_mwb_globals.g_parent_lot IS NOT NULL THEN
		       query_str  := query_str || ' AND mln.parent_lot_number = :parent_lot ';
	           END IF;
		--BUG 7556505
                /* Bug 8396954 added below code for supplier_lot_number */
                IF (inv_mwb_globals.g_supplier_lot_from IS NOT NULL AND
                    inv_mwb_globals.g_supplier_lot_to IS NOT NULL AND
                    inv_mwb_globals.g_supplier_lot_from = inv_mwb_globals.g_supplier_lot_to) THEN
                    query_str  := query_str || ' AND mln.supplier_lot_number = :supplier_lot_f ';
                END IF;

                IF (inv_mwb_globals.g_supplier_lot_from IS NOT NULL AND
	            inv_mwb_globals.g_supplier_lot_from <> NVL(inv_mwb_globals.g_supplier_lot_to, -1) ) THEN
                    query_str  := query_str || ' AND mln.supplier_lot_number >= :supplier_lot_f ';
                END IF;

                IF (inv_mwb_globals.g_supplier_lot_to IS NOT NULL AND
	            inv_mwb_globals.g_supplier_lot_to <> NVL(inv_mwb_globals.g_supplier_lot_from, -1) ) THEN
                    query_str  := query_str || ' AND mln.supplier_lot_number <= :supplier_lot_t ';
                END IF;
                /* End of Bug 8396954 */
        END IF;

	--bug 6633612
	IF (inv_mwb_globals.g_shipment_header_id is not null) THEN
		query_str := query_str || ' AND rt.shipment_header_id = :shipment_header_id '
					 || ' AND rt.transaction_id = mmt.rcv_transaction_id '
					 || ' AND rt.organization_id = mmt.organization_id '
					 || ' AND rt.transaction_type = ''DELIVER'''
					 || ' AND rt.destination_type_code = ''INVENTORY'''
					 || ' AND mmt.transaction_id = v.last_transaction_id '
					 || ' AND mmt.organization_id = v.organization_id ';

	END IF;
	--bug 6633612

        -- Onhand Material Status Support: If status is tracked at onhand level then check for status
        -- from onhand table (MOQD)
        if (l_default_status_id is not null) then -- Status at onhand level
           IF inv_mwb_globals.g_only_subinventory_status = 1 THEN
               query_str  := query_str || 'AND v.serial_status_id = :st_id ';
           ELSE
              IF inv_mwb_globals.g_status_id IS NOT NULL THEN
                 query_str  := query_str || 'AND v.serial_status_id = :st_id ';
              END IF;
           END IF;
        else
           IF inv_mwb_globals.g_only_subinventory_status = 1 THEN
               query_str  := query_str || 'AND v.locator_status_id = :st_id ';
           ELSE
              IF inv_mwb_globals.g_status_id IS NOT NULL THEN -- Bug 6060233
                 query_str  := query_str || 'AND (v.subinventory_status_id = :st_id or v.locator_status_id = :st_id ';
                 query_str  := query_str || 'OR v.lot_status_id = :st_id or v.serial_status_id = :st_id) ';
              END IF;
           END IF;
        end if;

/*
        IF inv_mwb_globals.g_status_id IS NOT NULL THEN
          IF inv_mwb_globals.g_only_locator_status = 1 THEN
            query_str  := query_str || 'AND (subinventory_status_id = :st_id or locator_status_id = :st_id or ';
            query_str  := query_str || 'lot_status_id = :st_id or serial_status_id = :st_id) ';
          ELSE
            query_str  := query_str || 'AND locator_status_id = :st_id ';
          END IF;
        END IF;
*/
        IF inv_mwb_globals.g_lot_from IS NOT NULL THEN
          query_str  := query_str || 'AND v.lot_number >= :lot_f ';
        END IF;

        IF inv_mwb_globals.g_lot_to IS NOT NULL THEN
          query_str  := query_str || 'AND v.lot_number <= :lot_t ';
        END IF;

        IF inv_mwb_globals.g_cost_group_id IS NOT NULL THEN
          query_str  := query_str || 'AND v.cost_group_id = :cg_id ';
        END IF;

        IF inv_mwb_globals.g_revision IS NOT NULL THEN
          query_str  := query_str || 'AND v.revision = :rev ';
        END IF;

        IF inv_mwb_globals.g_serial_from IS NOT NULL THEN
          query_str  := query_str || 'AND v.serial_number >= :serial_f ';
        END IF;

        IF inv_mwb_globals.g_serial_to IS NOT NULL THEN
          query_str  := query_str || 'AND v.serial_number <= :serial_t ';
        END IF;

        IF inv_mwb_globals.g_inventory_item_id IS NOT NULL THEN
          query_str  := query_str || 'AND v.inventory_item_id = :item_id ';
        END IF;

        -- ER(9158529 client)
        IF inv_mwb_globals.g_client_code IS NOT NULL THEN
          query_str := query_str || ' AND v.inventory_item_id in (select DISTINCT inventory_item_id from mtl_system_items_b where wms_deploy.get_client_code(inventory_item_id) = :client_code) ';
        END IF;
        -- ER(9158529 client)

        -- ER(9158529)
        IF inv_mwb_globals.g_category_set_id IS NOT NULL THEN
          query_str := query_str || ' AND v.inventory_item_id in '
                                      || ' (select DISTINCT inventory_item_id from mtl_item_categories '
                                      || ' where organization_id = :organization_id '
                                      || ' and category_set_id = :category_set_id '
                                      || ' and category_id = nvl(:category_id, category_id)) ' ;
        END IF;
        -- ER(9158529)

        query_str  := query_str || 'AND v.locator_id is not null ';

        IF inv_mwb_globals.g_locator_id IS NOT NULL THEN
          query_str  := query_str || 'AND v.locator_id = :loc_id ';
        END IF;

        --ER(3338592) Changes
        IF inv_mwb_globals.g_item_description IS NOT NULL THEN
           query_str := query_str || ' AND v.item_description LIKE :item_description ';
        END IF;
        --ER(3338592) Changes

       IF inv_mwb_globals.g_subinventory_code IS NOT NULL
       OR inv_mwb_globals.g_tree_subinventory_code IS NOT NULL THEN
          query_str  := query_str || 'AND v.subinventory_code = :sub ';
       END IF;

       IF inv_mwb_globals.g_organization_id IS NOT NULL
       OR inv_mwb_globals.g_tree_organization_id IS NOT NULL THEN
          query_str  := query_str || 'AND v.organization_id = :org_id ';
       END IF;

        query_str  := query_str || ') GROUP BY locator_id, locator ';
        query_str  := query_str || 'ORDER BY locator ';
      -- Need to use mtl_onhand_lpn_v
      ELSIF(inv_mwb_globals.g_lpn_from IS NOT NULL
            OR inv_mwb_globals.g_lpn_to IS NOT NULL) THEN
        IF inv_mwb_globals.g_tree_mat_loc_id = 2 THEN
          table_required  := ' mtl_onhand_lpn_mwb_v mol ';
        ELSIF(inv_mwb_globals.g_status_id IS NULL AND inv_mwb_globals.g_only_subinventory_status IS NULL) THEN
          table_required  := ' mtl_onhand_new_lpn_mwb_v mol ';
            IF is_grade_t = TRUE THEN                            -- NSRIVAST, INVCONV
              table_required  := ' mtl_onhand_new_lpn_v mol ';   -- NSRIVAST, INVCONV
            END IF;                                              -- NSRIVAST, INVCONV
        ELSE
          table_required  := ' mtl_onhand_new_lpn_v mol ';
        END IF;

        query_str  := 'SELECT locator_id, locator from ' || table_required;

        IF inv_mwb_globals.g_lpn_from IS NOT NULL
           OR inv_mwb_globals.g_lpn_to IS NOT NULL THEN
          query_str  := query_str || ', (select outermost_lpn_id from wms_license_plate_numbers wlpn ';
          query_str  := query_str || ' WHERE 1=1 ';

          IF inv_mwb_globals.g_locator_id IS NOT NULL THEN
            query_str  := query_str || 'AND wlpn.locator_id = :loc_id ';
          END IF;

  -- NSRIVAST, INVCONV, Start
      IF inv_mwb_globals.g_grade_from_code IS NOT NULL THEN
         query_str := query_str || ' AND grade_code = :grade_f ' ;
      END IF ;
      IF inv_mwb_globals.g_tree_grade_code  IS NOT NULL THEN
         query_str := query_str || ' AND grade_code = :grade_c ' ;
      END IF ;
   -- NSRIVAST, INVCONV, End

          IF inv_mwb_globals.g_subinventory_code IS NOT NULL
          OR inv_mwb_globals.g_tree_subinventory_code IS NOT NULL THEN
            query_str  := query_str || 'AND wlpn.subinventory_code = :sub ';
          END IF;

          IF inv_mwb_globals.g_organization_id IS NOT NULL
          OR inv_mwb_globals.g_tree_organization_id IS NOT NULL THEN
            query_str  := query_str || 'AND wlpn.organization_id = :org_id ';
          END IF;

          IF inv_mwb_globals.g_lpn_from IS NOT NULL
             OR inv_mwb_globals.g_lpn_to IS NOT NULL THEN
            IF inv_mwb_globals.g_lpn_from IS NOT NULL
               AND inv_mwb_globals.g_lpn_to IS NULL THEN
              query_str  := query_str || ' and license_plate_number >= :lpn_f ';
            ELSIF inv_mwb_globals.g_lpn_from IS NULL
                  AND inv_mwb_globals.g_lpn_to IS NOT NULL THEN
              query_str  := query_str || ' and license_plate_number <= :lpn_t ';
            ELSIF inv_mwb_globals.g_lpn_from IS NOT NULL
                  AND inv_mwb_globals.g_lpn_to IS NOT NULL THEN
                --bugfix#3646484
                IF (inv_mwb_globals.g_lpn_from = inv_mwb_globals.g_lpn_to)  THEN
                --User is querying for single LPN so converted the range query to equality query
                   query_str := query_str || 'and license_plate_number = :lpn_f ';
                ELSE
                 query_str  := query_str || ' and license_plate_number >= :lpn_f ';
                 query_str  := query_str || ' and license_plate_number <= :lpn_t ';
                END IF;
            END IF;
          END IF;

          query_str  := query_str || 'group by wlpn.outermost_lpn_id) X ';
        END IF;

        IF (inv_mwb_globals.g_tree_lot_attr_query IS NULL AND inv_mwb_globals.g_parent_lot IS NULL
            AND inv_mwb_globals.g_supplier_lot_from IS NULL AND inv_mwb_globals.g_supplier_lot_to IS NULL)
           AND inv_mwb_globals.g_tree_serial_attr_query IS NULL THEN
          query_str  := query_str || 'WHERE 1=1 ';
        ELSIF (inv_mwb_globals.g_tree_lot_attr_query IS NULL AND inv_mwb_globals.g_parent_lot IS NULL
                AND inv_mwb_globals.g_supplier_lot_from IS NULL AND inv_mwb_globals.g_supplier_lot_to IS NULL)
              AND inv_mwb_globals.g_tree_serial_attr_query IS NOT NULL THEN
          query_str  :=
                     query_str || ', (SELECT serial_number serial_num FROM mtl_serial_numbers WHERE 1=1 ' || inv_mwb_globals.g_tree_serial_attr_query
                     || ') msn ';
          query_str  := query_str || 'WHERE msn.serial_num = serial_number ';
        ELSIF (inv_mwb_globals.g_tree_lot_attr_query IS NOT NULL OR inv_mwb_globals.g_parent_lot IS NOT NULL
                OR inv_mwb_globals.g_supplier_lot_from IS NOT NULL OR inv_mwb_globals.g_supplier_lot_to IS NOT NULL)
              AND inv_mwb_globals.g_tree_serial_attr_query IS NULL THEN
          query_str  := query_str || ', (SELECT lot_number lot_num, parent_lot_number, supplier_lot_number FROM mtl_lot_numbers WHERE 1=1 ' || inv_mwb_globals.g_tree_lot_attr_query || ') mln ';
          query_str  := query_str || 'WHERE mln.lot_num = lot_number ';
 		--BUG 7556505
		   IF inv_mwb_globals.g_parent_lot IS NOT NULL THEN
		       query_str  := query_str || ' AND mln.parent_lot_number = :parent_lot ';
	           END IF;
		--BUG 7556505
                /* Bug 8396954 added below code for supplier_lot_number */
                IF (inv_mwb_globals.g_supplier_lot_from IS NOT NULL AND
                    inv_mwb_globals.g_supplier_lot_to IS NOT NULL AND
                    inv_mwb_globals.g_supplier_lot_from = inv_mwb_globals.g_supplier_lot_to) THEN
                    query_str  := query_str || ' AND mln.supplier_lot_number = :supplier_lot_f ';
                END IF;

                IF (inv_mwb_globals.g_supplier_lot_from IS NOT NULL AND
	            inv_mwb_globals.g_supplier_lot_from <> NVL(inv_mwb_globals.g_supplier_lot_to, -1) ) THEN
                    query_str  := query_str || ' AND mln.supplier_lot_number >= :supplier_lot_f ';
                END IF;

                IF (inv_mwb_globals.g_supplier_lot_to IS NOT NULL AND
	            inv_mwb_globals.g_supplier_lot_to <> NVL(inv_mwb_globals.g_supplier_lot_from, -1) ) THEN
                    query_str  := query_str || ' AND mln.supplier_lot_number <= :supplier_lot_t ';
                END IF;
                /* End of Bug 8396954 */
        ELSIF (inv_mwb_globals.g_tree_lot_attr_query IS NOT NULL OR inv_mwb_globals.g_parent_lot IS NOT NULL
                OR inv_mwb_globals.g_supplier_lot_from IS NOT NULL OR inv_mwb_globals.g_supplier_lot_to IS NOT NULL)
              AND inv_mwb_globals.g_tree_serial_attr_query IS NOT NULL THEN
          query_str  :=
                query_str
             || ', (SELECT lot_number lot_num, parent_lot_number, supplier_lot_number FROM mtl_lot_numbers WHERE 1=1 '
             || inv_mwb_globals.g_tree_lot_attr_query
             || ') mln '
             || ', (SELECT serial_number serial_num FROM mtl_serial_numbers WHERE 1=1 '
             || inv_mwb_globals.g_tree_serial_attr_query
             || ') msn ';
          query_str  := query_str || 'WHERE mln.lot_num = lot_number ';
 		--BUG 7556505
		   IF inv_mwb_globals.g_parent_lot IS NOT NULL THEN
		       query_str  := query_str || ' AND mln.parent_lot_number = :parent_lot ';
	           END IF;
		--BUG 7556505
                /* Bug 8396954 added below code for supplier_lot_number */
                IF (inv_mwb_globals.g_supplier_lot_from IS NOT NULL AND
                    inv_mwb_globals.g_supplier_lot_to IS NOT NULL AND
                    inv_mwb_globals.g_supplier_lot_from = inv_mwb_globals.g_supplier_lot_to) THEN
                    query_str  := query_str || ' AND mln.supplier_lot_number = :supplier_lot_f ';
                END IF;

                IF (inv_mwb_globals.g_supplier_lot_from IS NOT NULL AND
	            inv_mwb_globals.g_supplier_lot_from <> NVL(inv_mwb_globals.g_supplier_lot_to, -1) ) THEN
                    query_str  := query_str || ' AND mln.supplier_lot_number >= :supplier_lot_f ';
                END IF;

                IF (inv_mwb_globals.g_supplier_lot_to IS NOT NULL AND
	            inv_mwb_globals.g_supplier_lot_to <> NVL(inv_mwb_globals.g_supplier_lot_from, -1) ) THEN
                    query_str  := query_str || ' AND mln.supplier_lot_number <= :supplier_lot_t ';
                END IF;
                /* End of Bug 8396954 */
          query_str  := query_str || 'AND msn.serial_num = serial_number ';
        END IF;

        IF inv_mwb_globals.g_project_id IS NOT NULL THEN
          query_str  := query_str || ' AND project_id = :pr_id ';
        END IF;

        IF inv_mwb_globals.g_task_id IS NOT NULL THEN
          query_str  := query_str || ' AND task_id = :ta_id ';
        END IF;

        IF inv_mwb_globals.g_unit_number IS NOT NULL THEN
          query_str  := query_str || ' AND unit_number=:un_id ';
        END IF;

        /*IF inv_mwb_globals.g_site_id IS NOT NULL THEN
           query_str := query_str || ' AND PLANNING_TP_TYPE = 1 ';
           query_str := query_str || ' AND planning_organization_id = :site_id ' ;
         ELSIF inv_mwb_globals.g_vendor_id is NOT NULL THEN
           query_str := query_str || ' AND  PLANNING_TP_TYPE = 1 ';
           query_str := query_str || ' AND  planning_organization_id in ';
           query_str := query_str || ' (select vendor_site_id from po_vendor_sites_all ';
           query_str := query_str || '  where vendor_id = :vendor_id )';
        END IF;*/
        IF (inv_mwb_globals.g_owning_qry_mode = 4) THEN
          query_str  := query_str || ' AND owning_organization_id = :own_org ';
          query_str  := query_str || ' AND owning_tp_type = 2 ';
        ELSIF(inv_mwb_globals.g_owning_qry_mode = 3) THEN
          query_str  := query_str || ' AND owning_organization_id = :own_org ';
          query_str  := query_str || ' AND owning_tp_type = 1 ';
        ELSIF(inv_mwb_globals.g_owning_qry_mode = 2) THEN
          query_str  := query_str || ' AND owning_tp_type = 1 ';
        END IF;

        IF (inv_mwb_globals.g_planning_query_mode = 4) THEN
          query_str  := query_str || ' AND planning_organization_id = :plan_org ';
          query_str  := query_str || ' AND planning_tp_type = 2 ';
        ELSIF(inv_mwb_globals.g_planning_query_mode = 3) THEN
          query_str  := query_str || ' AND planning_organization_id = :plan_org ';
          query_str  := query_str || ' AND planning_tp_type = 1 ';
        ELSIF(inv_mwb_globals.g_planning_query_mode = 2) THEN
          query_str  := query_str || ' AND planning_tp_type = 1 ';
        END IF;

	/*LPN Status Project */
	IF (l_default_status_id IS NOT NULL) THEN -- Status at onhand level
          IF inv_mwb_globals.g_only_subinventory_status = 1 THEN
	    query_str  := query_str || 'AND onhand_status_id = :st_id ';
	  ELSE
	    IF inv_mwb_globals.g_status_id IS NOT NULL THEN
	      query_str  := query_str || 'AND onhand_status_id = :st_id ';
            END IF;
	  END IF;
	ELSE
	  IF inv_mwb_globals.g_only_subinventory_status = 1 THEN
              query_str  := query_str || 'AND locator_status_id = :st_id ';
          ELSE
            IF inv_mwb_globals.g_status_id IS NOT NULL THEN
              query_str  := query_str || 'AND locator_status_id = :st_id ';
            END IF;
	  END IF;
        END IF;
        /*End of fix for LPN Status Project */

/*
        IF inv_mwb_globals.g_status_id IS NOT NULL THEN
          IF inv_mwb_globals.g_only_locator_status = 1 THEN
            query_str  := query_str || 'AND (subinventory_status_id = :st_id or locator_status_id = :st_id or ';
            query_str  := query_str || 'lot_status_id = :st_id or serial_status_id = :st_id) ';
          ELSE
            query_str  := query_str || 'AND locator_status_id = :st_id ';
          END IF;
        END IF;
*/

        IF inv_mwb_globals.g_lot_from IS NOT NULL THEN
          query_str  := query_str || 'AND lot_number >= :lot_f ';
        END IF;

        IF inv_mwb_globals.g_lot_to IS NOT NULL THEN
          query_str  := query_str || 'AND lot_number <= :lot_t ';
        END IF;

        IF inv_mwb_globals.g_cost_group_id IS NOT NULL THEN
          query_str  := query_str || 'AND cost_group_id = :cg_id ';
        END IF;

        IF inv_mwb_globals.g_revision IS NOT NULL THEN
          query_str  := query_str || 'AND revision = :rev ';
        END IF;

        IF inv_mwb_globals.g_serial_from IS NOT NULL THEN
          query_str  := query_str || 'AND serial_number >= :serial_f ';
        END IF;

        IF inv_mwb_globals.g_serial_to IS NOT NULL THEN
          query_str  := query_str || 'AND serial_number <= :serial_t ';
        END IF;

        IF inv_mwb_globals.g_lpn_from IS NOT NULL
           OR inv_mwb_globals.g_lpn_to IS NOT NULL THEN
          query_str  := query_str || 'AND mol.outermost_lpn_id = X.outermost_lpn_id ';
        END IF;

        IF inv_mwb_globals.g_inventory_item_id IS NOT NULL THEN
          query_str  := query_str || 'AND inventory_item_id = :item_id ';
        END IF;

        -- ER(9158529 client)
        IF inv_mwb_globals.g_client_code IS NOT NULL THEN
          query_str := query_str || ' AND inventory_item_id in (select DISTINCT inventory_item_id from mtl_system_items_b where wms_deploy.get_client_code(inventory_item_id) = :client_code) ';
        END IF;
        -- ER(9158529 client)

        -- ER(9158529)
        IF inv_mwb_globals.g_category_set_id IS NOT NULL THEN
          query_str := query_str || ' AND inventory_item_id in '
                                        || ' (select DISTINCT inventory_item_id from mtl_item_categories '
                                        || ' where organization_id = :organization_id '
                                        || ' and category_set_id = :category_set_id '
                                        || ' and category_id = nvl(:category_id, category_id)) ' ;
        END IF;
        -- ER(9158529)

        query_str  := query_str || 'AND locator_id is not null ';

        IF inv_mwb_globals.g_locator_id IS NOT NULL THEN
          query_str  := query_str || 'AND locator_id = :loc_id ';
        END IF;

        --ER(3338592) Changes
        IF inv_mwb_globals.g_item_description IS NOT NULL THEN
           query_str := query_str || ' AND item_description LIKE :item_description ';
        END IF;
        --ER(3338592) Changes

        IF inv_mwb_globals.g_subinventory_code IS NOT NULL
        OR inv_mwb_globals.g_tree_subinventory_code IS NOT NULL THEN
          query_str  := query_str || 'AND subinventory_code = :sub ';
        END IF;

        IF inv_mwb_globals.g_organization_id IS NOT NULL
        OR inv_mwb_globals.g_tree_organization_id IS NOT NULL THEN
          query_str  := query_str || 'AND organization_id = :org_id ';
        END IF;

        query_str  := query_str || 'GROUP BY locator_id, locator ';
        query_str  := query_str || 'ORDER BY locator ';
      END IF;
    END IF;

        inv_trx_util_pub.trace(query_str, 'Add Loc :- Material Workbench', 9);
       --trace1(query_str, 'add_locs', 9);
    inv_mwb_globals.print_msg( g_pkg_name, l_procedure_name, query_str );

    inv_mwb_globals.g_last_query := query_str;

    query_hdl       := DBMS_SQL.open_cursor;
    DBMS_SQL.parse(query_hdl, query_str, DBMS_SQL.native);


    IF inv_mwb_globals.g_tree_organization_id IS NOT NULL THEN
      DBMS_SQL.bind_variable(query_hdl, 'org_id', inv_mwb_globals.g_tree_organization_id);
    ELSIF inv_mwb_globals.g_organization_id IS NOT NULL THEN
      DBMS_SQL.bind_variable(query_hdl, 'org_id', inv_mwb_globals.g_organization_id);
    END IF;

    IF inv_mwb_globals.g_tree_subinventory_code IS NOT NULL THEN
      DBMS_SQL.bind_variable(query_hdl, 'sub', inv_mwb_globals.g_tree_subinventory_code);
    ELSIF inv_mwb_globals.g_subinventory_code IS NOT NULL THEN
      DBMS_SQL.bind_variable(query_hdl, 'sub', inv_mwb_globals.g_subinventory_code);
    END IF;

    IF inv_mwb_globals.g_locator_id IS NOT NULL THEN
      DBMS_SQL.bind_variable(query_hdl, 'loc_id', inv_mwb_globals.g_locator_id);
    END IF;

    IF inv_mwb_globals.g_inventory_item_id IS NOT NULL THEN
      DBMS_SQL.bind_variable(query_hdl, 'item_id', inv_mwb_globals.g_inventory_item_id);
    END IF;

    -- ER(9158529 client)
    IF inv_mwb_globals.g_client_code IS NOT NULL THEN
      DBMS_SQL.bind_variable(query_hdl, 'client_code', inv_mwb_globals.g_client_code);
    END IF;
    -- ER(9158529 client)

    IF inv_mwb_globals.g_revision IS NOT NULL THEN
      DBMS_SQL.bind_variable(query_hdl, 'rev', inv_mwb_globals.g_revision);
    END IF;

    IF inv_mwb_globals.g_cost_group_id IS NOT NULL THEN
      DBMS_SQL.bind_variable(query_hdl, 'cg_id', inv_mwb_globals.g_cost_group_id);
    END IF;

    -- ER(9158529)
    IF inv_mwb_globals.g_category_set_id IS NOT NULL THEN
      DBMS_SQL.bind_variable(query_hdl, 'organization_id', NVL(inv_mwb_globals.g_organization_id, inv_mwb_globals.g_tree_organization_id));
      DBMS_SQL.bind_variable(query_hdl, 'category_set_id', inv_mwb_globals.g_category_set_id);
      DBMS_SQL.bind_variable(query_hdl, 'category_id', inv_mwb_globals.g_category_id);
    END IF;
    -- ER(9158529)

    --BUG 7556505
    IF inv_mwb_globals.g_parent_lot IS NOT NULL THEN
      DBMS_SQL.bind_variable(query_hdl, 'parent_lot', inv_mwb_globals.g_parent_lot);
    END IF;
    --BUG 7556505

    IF inv_mwb_globals.g_lot_from IS NOT NULL THEN
      DBMS_SQL.bind_variable(query_hdl, 'lot_f', inv_mwb_globals.g_lot_from);
    END IF;

    IF inv_mwb_globals.g_lot_to IS NOT NULL THEN
      DBMS_SQL.bind_variable(query_hdl, 'lot_t', inv_mwb_globals.g_lot_to);
    END IF;

    /* Bug 8396954 added below code for supplier_lot_number */
    IF (inv_mwb_globals.g_supplier_lot_from IS NOT NULL AND
    inv_mwb_globals.g_supplier_lot_to IS NOT NULL AND
    inv_mwb_globals.g_supplier_lot_from = inv_mwb_globals.g_supplier_lot_to) THEN
         DBMS_SQL.bind_variable(query_hdl, 'supplier_lot_f', inv_mwb_globals.g_supplier_lot_from);
    END IF;

    IF (inv_mwb_globals.g_supplier_lot_from IS NOT NULL AND
        inv_mwb_globals.g_supplier_lot_from <> NVL(inv_mwb_globals.g_supplier_lot_to, -1) ) THEN
          DBMS_SQL.bind_variable(query_hdl, 'supplier_lot_f', inv_mwb_globals.g_supplier_lot_from);
    END IF;

    IF (inv_mwb_globals.g_supplier_lot_to IS NOT NULL AND
         inv_mwb_globals.g_supplier_lot_to <> NVL(inv_mwb_globals.g_supplier_lot_from, -1) ) THEN
          DBMS_SQL.bind_variable(query_hdl, 'supplier_lot_t', inv_mwb_globals.g_supplier_lot_to);
    END IF;
    /* End of Bug 8396954 */

    --bug 6633612
    IF inv_mwb_globals.g_shipment_header_id IS NOT NULL THEN
      DBMS_SQL.bind_variable(query_hdl, 'shipment_header_id',inv_mwb_globals.g_shipment_header_id );
    END IF;
    --bug 6633612

-- NSRIVAST, INVCONV, Start
    IF inv_mwb_globals.g_grade_from_code IS NOT NULL THEN
      DBMS_SQL.bind_variable(query_hdl, 'grade_f',inv_mwb_globals.g_grade_from_code );
    END IF;
    IF inv_mwb_globals.g_tree_grade_code IS NOT NULL THEN
      DBMS_SQL.bind_variable(query_hdl, 'grade_c', inv_mwb_globals.g_tree_grade_code);
    END IF;
-- NSRIVAST, INVCONV, End

    IF inv_mwb_globals.g_serial_from IS NOT NULL THEN
      DBMS_SQL.bind_variable(query_hdl, 'serial_f', inv_mwb_globals.g_serial_from);
    END IF;

    IF inv_mwb_globals.g_serial_to IS NOT NULL THEN
      DBMS_SQL.bind_variable(query_hdl, 'serial_t', inv_mwb_globals.g_serial_to);
    END IF;

      --bugfix#3646484
      IF ((inv_mwb_globals.g_lpn_from IS NOT NULL) AND (inv_mwb_globals.g_lpn_to IS NOT NULL) AND (inv_mwb_globals.g_lpn_from = inv_mwb_globals.g_lpn_to))  THEN
      --User is querying for single LPN so converted the range query to equality query
      --So it is enought to bind the from lpn alone
         dbms_sql.bind_variable(query_hdl, 'lpn_f', inv_mwb_globals.g_lpn_from);
      ELSE
          IF inv_mwb_globals.g_lpn_from IS NOT NULL THEN
            DBMS_SQL.bind_variable(query_hdl, 'lpn_f', inv_mwb_globals.g_lpn_from);
          END IF;

          IF inv_mwb_globals.g_lpn_to IS NOT NULL THEN
            DBMS_SQL.bind_variable(query_hdl, 'lpn_t', inv_mwb_globals.g_lpn_to);
          END IF;
      END IF;

        IF inv_mwb_globals.g_only_subinventory_status = 1 THEN
            DBMS_SQL.bind_variable(query_hdl, 'st_id', inv_mwb_globals.g_tree_st_id);
        ELSE
           IF inv_mwb_globals.g_status_id IS NOT NULL THEN
              DBMS_SQL.bind_variable(query_hdl, 'st_id', inv_mwb_globals.g_status_id);
           END IF;
        END IF;
/*
    IF inv_mwb_globals.g_status_id IS NOT NULL THEN
      DBMS_SQL.bind_variable(query_hdl, 'st_id', inv_mwb_globals.g_status_id);
    END IF;
*/

    IF inv_mwb_globals.g_project_id IS NOT NULL THEN
      DBMS_SQL.bind_variable(query_hdl, 'pr_id', inv_mwb_globals.g_project_id);
    END IF;

    IF inv_mwb_globals.g_task_id IS NOT NULL THEN
      DBMS_SQL.bind_variable(query_hdl, 'ta_id', inv_mwb_globals.g_task_id);
    END IF;

    IF inv_mwb_globals.g_unit_number IS NOT NULL THEN
      DBMS_SQL.bind_variable(query_hdl, 'un_id', inv_mwb_globals.g_unit_number);
    END IF;

    /*IF inv_mwb_globals.g_site_id IS NOT NULL THEN
       dbms_sql.bind_variable(query_hdl,'site_id', inv_mwb_globals.g_site_id);
     ELSIF inv_mwb_globals.g_vendor_id is NOT NULL THEN
       dbms_sql.bind_variable(query_hdl,'vendor_id', inv_mwb_globals.g_vendor_id);
    END IF;*/
    IF (inv_mwb_globals.g_owning_qry_mode = 4)
       OR(inv_mwb_globals.g_owning_qry_mode = 3) THEN
      DBMS_SQL.bind_variable(query_hdl, 'own_org', inv_mwb_globals.g_owning_org);
    END IF;

    IF (inv_mwb_globals.g_planning_query_mode = 4)
       OR(inv_mwb_globals.g_planning_query_mode = 3) THEN
      DBMS_SQL.bind_variable(query_hdl, 'plan_org', inv_mwb_globals.g_planning_org);
    END IF;

    IF inv_mwb_globals.g_mln_context_code IS NOT NULL THEN
      DBMS_SQL.bind_variable(query_hdl, 'mln_context', inv_mwb_globals.g_mln_context_code);
    END IF;

    --ER(3338592) Changes
    IF inv_mwb_globals.g_item_description IS NOT NULL THEN
       dbms_sql.bind_variable(query_hdl, 'item_description', inv_mwb_globals.g_item_description);
    END IF;

    DBMS_SQL.define_column(query_hdl, 1, loc_id);
    DBMS_SQL.define_column(query_hdl, 2, loc_code, 204);
    rows_processed  := DBMS_SQL.EXECUTE(query_hdl);

    LOOP
      -- fetch a row
      IF DBMS_SQL.fetch_rows(query_hdl) > 0 THEN
        -- fetch columns from the row
        DBMS_SQL.column_value(query_hdl, 1, loc_id);
        DBMS_SQL.column_value(query_hdl, 2, loc_code);
        IF j >= inv_mwb_globals.g_tree_node_low_value
           AND loc_code IS NOT NULL THEN
          x_node_tbl(i).state  := inv_mwb_globals.g_tree_node_state;
          x_node_tbl(i).DEPTH  := 1;
          x_node_tbl(i).label  := substr(inv_project.get_locator(loc_id, inv_mwb_globals.g_tree_organization_id), 1, 80); -- Bug 6513399: truncating the locator to 80 chars
          x_node_tbl(i).icon   := 'inv_stlo';
          x_node_tbl(i).VALUE  := TO_CHAR(loc_id);
          x_node_tbl(i).TYPE   := 'LOC';
          i                    := i + 1;
        END IF;

        EXIT WHEN j >= inv_mwb_globals.g_tree_node_high_value;
        j  := j + 1;
      ELSE
        EXIT;
      END IF;
    END LOOP;

    DBMS_SQL.close_cursor(query_hdl); -- close cursor
    x_node_value    := j;
    x_tbl_index     := i;
  EXCEPTION
    WHEN NO_DATA_FOUND THEN
      NULL;
    WHEN OTHERS THEN
      RAISE;
  END add_locs;

  PROCEDURE add_cgs(
    x_node_value          IN OUT NOCOPY NUMBER
  , x_node_tbl            IN OUT NOCOPY fnd_apptree.node_tbl_type
  , x_tbl_index           IN OUT NOCOPY NUMBER
  ) IS
    query_str      VARCHAR2(10000);
    query_hdl      NUMBER;
    rows_processed NUMBER;
    cg_id          cst_cost_groups.cost_group_id%TYPE;
    cg             cst_cost_groups.cost_group%TYPE;
    i              NUMBER                               := x_tbl_index;
    j              NUMBER                               := x_node_value;
    table_required VARCHAR2(300);
    --ER(3338592) Changes
    group_str      VARCHAR2(10000) ;
    having_str     VARCHAR2(10000) := ' HAVING 1=1 ';
    --ER(3338592) Changes
    is_grade_t     BOOLEAN DEFAULT FALSE ; -- NSRIVAST, INVCONV

    l_procedure_name CONSTANT VARCHAR2(30) := 'ADD CGS';
    l_default_status_id NUMBER; -- Onhand Material Status Support
   BEGIN
      inv_mwb_globals.print_msg( g_pkg_name, l_procedure_name, 'Entered' );

      -- Onhand Material Status Support
      if (inv_mwb_globals.g_organization_id is not null) then
         if (inv_cache.set_org_rec(inv_mwb_globals.g_organization_id)) then
           l_default_status_id :=  inv_cache.org_rec.default_status_id;
         end if;
      elsif (inv_mwb_globals.g_tree_organization_id is not null) then
         if (inv_cache.set_org_rec(inv_mwb_globals.g_tree_organization_id)) then
           l_default_status_id :=  inv_cache.org_rec.default_status_id;
         end if;
      end if;

-- NSRIVAST, INVCONV, Start
     IF  (inv_mwb_globals.g_grade_from_code IS NOT NULL OR  inv_mwb_globals.g_tree_grade_code IS NOT NULL OR inv_mwb_globals.g_grade_controlled <> 0) THEN
             is_grade_t     := TRUE ;
     END IF ;
-- NSRIVAST, INVCONV, End

    IF (
        inv_mwb_globals.g_serial_from IS NULL
        AND inv_mwb_globals.g_serial_to IS NULL
        AND inv_mwb_globals.g_tree_serial_attr_query IS NULL
        AND inv_mwb_globals.g_unit_number IS NULL
        AND inv_mwb_globals.g_status_id IS NULL
        AND inv_mwb_globals.g_lpn_from IS NULL
        AND inv_mwb_globals.g_lpn_to IS NULL
        AND inv_mwb_globals.g_tree_serial_attr_query IS NULL
       ) THEN
      IF (inv_mwb_globals.g_status_id IS NULL) THEN
        table_required  := ' mtl_onhand_total_mwb_v v ';
            IF is_grade_t = TRUE THEN                       -- NSRIVAST, INVCONV
               table_required  := ' mtl_onhand_total_v  v ';  -- NSRIVAST, INVCONV
            END IF;
      ELSE
        table_required  := ' mtl_onhand_total_v v ';
      END IF;

       --bug 6633612
	IF (inv_mwb_globals.g_shipment_header_id is not null) THEN
		table_required  := table_required || ' , rcv_transactions rt, mtl_material_transactions mmt ';
	END IF;
	--bug 6633612

      IF inv_mwb_globals.g_tree_lot_attr_query IS NULL AND inv_mwb_globals.g_parent_lot IS NULL
        AND inv_mwb_globals.g_supplier_lot_from IS NULL AND inv_mwb_globals.g_supplier_lot_to IS NULL THEN
        query_str  := 'SELECT DISTINCT v.cost_group_id , ccg.cost_group ';
        query_str  := query_str || 'FROM cst_cost_groups ccg, ' || table_required;
        query_str  := query_str || 'WHERE ccg.cost_group_id = v.cost_group_id ';
      ELSE
        query_str  :=
              query_str
           || 'SELECT v.cost_group_id , ccg.cost_group from'
           || '(SELECT lot_number lot_num, parent_lot_number, supplier_lot_number FROM mtl_lot_numbers WHERE 1=1 '
           || inv_mwb_globals.g_tree_lot_attr_query
           || ') mln, cst_cost_groups ccg, '
           || table_required;
        query_str  := query_str || 'WHERE ccg.cost_group_id = v.cost_group_id ';
        query_str  := query_str || 'AND mln.lot_num = v.lot_number ';
 		--BUG 7556505
		   IF inv_mwb_globals.g_parent_lot IS NOT NULL THEN
		       query_str  := query_str || ' AND mln.parent_lot_number = :parent_lot ';
	           END IF;
		--BUG 7556505
                /* Bug 8396954 added below code for supplier_lot_number */
                IF (inv_mwb_globals.g_supplier_lot_from IS NOT NULL AND
                    inv_mwb_globals.g_supplier_lot_to IS NOT NULL AND
                    inv_mwb_globals.g_supplier_lot_from = inv_mwb_globals.g_supplier_lot_to) THEN
                    query_str  := query_str || ' AND mln.supplier_lot_number = :supplier_lot_f ';
                END IF;

                IF (inv_mwb_globals.g_supplier_lot_from IS NOT NULL AND
	            inv_mwb_globals.g_supplier_lot_from <> NVL(inv_mwb_globals.g_supplier_lot_to, -1) ) THEN
                    query_str  := query_str || ' AND mln.supplier_lot_number >= :supplier_lot_f ';
                END IF;

                IF (inv_mwb_globals.g_supplier_lot_to IS NOT NULL AND
	            inv_mwb_globals.g_supplier_lot_to <> NVL(inv_mwb_globals.g_supplier_lot_from, -1) ) THEN
                    query_str  := query_str || ' AND mln.supplier_lot_number <= :supplier_lot_t ';
                END IF;
                /* End of Bug 8396954 */
      END IF;

      query_str  := query_str || 'AND ccg.cost_group_id = v.cost_group_id ';

	--bug 6633612
	IF (inv_mwb_globals.g_shipment_header_id is not null) THEN
		query_str := query_str || ' AND rt.shipment_header_id = :shipment_header_id '
					 || ' AND rt.transaction_id = mmt.rcv_transaction_id '
					 || ' AND rt.organization_id = mmt.organization_id '
					 || ' AND rt.transaction_type = ''DELIVER'''
					 || ' AND rt.destination_type_code = ''INVENTORY'''
					 || ' AND mmt.transaction_id = v.create_transaction_id '
					 || ' AND mmt.organization_id = v.organization_id ';

	END IF;
	--bug 6633612

      --ER(3338592) Changes (If the user gives the value for the Qty then only
      --Group by clause comes in to effect)

      IF inv_mwb_globals.g_qty_from IS NOT NULL OR inv_mwb_globals.g_qty_to IS NOT NULL THEN
         group_str := ' GROUP BY  v.organization_id ';
      END IF;

      IF inv_mwb_globals.g_subinventory_code IS NOT NULL THEN
        query_str  := query_str || 'AND v.subinventory_code = :sub ';
        --ER(3338592) Changes
        IF group_str IS NOT NULL THEN
           group_str := group_str || ' , v.subinventory_code  ' ;
        END IF;
      END IF;

  -- NSRIVAST, INVCONV, Start
      IF inv_mwb_globals.g_grade_from_code IS NOT NULL THEN
         query_str := query_str || ' AND v.grade_code = :grade_f ' ;
      END IF ;
      IF inv_mwb_globals.g_tree_grade_code  IS NOT NULL THEN
         query_str := query_str || ' AND v.grade_code = :grade_c ' ;
      END IF ;
   -- NSRIVAST, INVCONV, End

      IF inv_mwb_globals.g_locator_id IS NOT NULL THEN
        query_str  := query_str || 'AND v.locator_id = :loc_id ';
        --ER(3338592) Changes
        IF group_str IS NOT NULL THEN
           group_str := group_str || ' , v.locator_id  ' ;
        END IF;
      END IF;

      IF inv_mwb_globals.g_project_id IS NOT NULL THEN
        query_str  := query_str || ' AND v.project_id = :pr_id ';
        --ER(3338592) Changes
        IF group_str IS NOT NULL THEN
           group_str := group_str || ' , v.project_id  ' ;
        END IF;
      END IF;

      IF inv_mwb_globals.g_task_id IS NOT NULL THEN
        query_str  := query_str || ' AND v.task_id = :ta_id ';
        --ER(3338592) Changes
        IF group_str IS NOT NULL THEN
           group_str := group_str || ' , inv_mwb_globals.g_task_id  ' ;
        END IF;
      END IF;

      IF inv_mwb_globals.g_inventory_item_id IS NOT NULL THEN
         query_str  := query_str || 'AND v.inventory_item_id = :item_id ';
      END IF;

      -- ER(9158529 client)
      IF inv_mwb_globals.g_client_code IS NOT NULL THEN
         query_str := query_str || ' AND v.inventory_item_id in (select DISTINCT inventory_item_id from mtl_system_items_b where wms_deploy.get_client_code(inventory_item_id) = :client_code) ';
      END IF;
      -- ER(9158529 client)

      -- ER(9158529)
      IF inv_mwb_globals.g_category_set_id IS NOT NULL THEN
         query_str := query_str || ' AND v.inventory_item_id in '
                                     || ' (select DISTINCT inventory_item_id from mtl_item_categories '
                                     || ' where organization_id = :organization_id '
                                     || ' and category_set_id = :category_set_id '
                                     || ' and category_id = nvl(:category_id, category_id)) ' ;
      END IF;
      -- ER(9158529)

      --Bug # 3411938
      IF inv_mwb_globals.g_qty_from IS NOT NULL OR inv_mwb_globals.g_qty_to IS NOT NULL THEN
         group_str := group_str || ' , v.inventory_item_id, v.item_description, v.item ,v.uom ' ;
      END IF;

      --ER(3338592) Changes
      IF inv_mwb_globals.g_item_description IS NOT NULL THEN
         query_str := query_str || ' AND v.item_description LIKE :item_description ';
      END IF;

      IF inv_mwb_globals.g_revision IS NOT NULL THEN
        query_str  := query_str || 'AND v.revision = :rev ';
        --ER(3338592) Changes
        IF group_str IS NOT NULL THEN
           group_str := group_str || ' , v.revision  ' ;
        END IF;
      END IF;

      IF inv_mwb_globals.g_cost_group_id IS NOT NULL THEN
        query_str  := query_str || 'AND v.cost_group_id = :cg_id ';
      END IF;

      --Bug #3405473
      IF inv_mwb_globals.g_qty_from IS NOT NULL OR inv_mwb_globals.g_qty_to IS NOT NULL THEN
         group_str := group_str || ' , v.cost_group_id, ccg.cost_group ' ;
      END IF;

      IF inv_mwb_globals.g_lot_from IS NOT NULL THEN
        query_str  := query_str || 'AND v.lot_number >= :lot_f ';
      END IF;

      IF inv_mwb_globals.g_lot_to IS NOT NULL THEN
        query_str  := query_str || 'AND v.lot_number <= :lot_t ';
      END IF;

      -- Onhand Material Status Support: If status is tracked at onhand level then check for status
      -- from onhand table (MOQD)
      if (l_default_status_id is not null) then
         IF inv_mwb_globals.g_status_id IS NOT NULL THEN
           query_str  := query_str || 'AND v.onhand_status_id = :st_id ';
         END IF;
      else
         IF inv_mwb_globals.g_status_id IS NOT NULL THEN
           query_str  := query_str || 'AND (v.subinventory_status_id = :st_id or ';
           query_str  := query_str || 'v.locator_status_id = :st_id or v.lot_status_id = :st_id) ';
         END IF;
      end if;

      /*IF inv_mwb_globals.g_site_id IS NOT NULL THEN
         query_str := query_str || ' AND PLANNING_TP_TYPE = 1 ';
         query_str := query_str || ' AND planning_organization_id = :site_id ' ;
       ELSIF inv_mwb_globals.g_vendor_id is NOT NULL THEN
         query_str := query_str || ' AND  PLANNING_TP_TYPE = 1 ';
         query_str := query_str || ' AND  planning_organization_id in ';
         query_str := query_str || ' (select vendor_site_id from po_vendor_sites_all ';
         query_str := query_str || '  where vendor_id = :vendor_id )';
      END IF;*/

      IF (inv_mwb_globals.g_planning_query_mode = 4) THEN
        query_str  := query_str || ' AND v.planning_organization_id = :plan_org ';
        query_str  := query_str || ' AND v.planning_tp_type = 2 ';
      ELSIF(inv_mwb_globals.g_planning_query_mode = 3) THEN
        query_str  := query_str || ' AND v.planning_organization_id = :plan_org ';
        query_str  := query_str || ' AND v.planning_tp_type = 1 ';
      ELSIF(inv_mwb_globals.g_planning_query_mode = 2) THEN
        query_str  := query_str || ' AND v.planning_tp_type = 1 ';
      END IF;

      IF (inv_mwb_globals.g_owning_qry_mode = 4) THEN
        query_str  := query_str || ' AND v.owning_organization_id = :own_org ';
        query_str  := query_str || ' AND v.owning_tp_type = 2 ';
      ELSIF(inv_mwb_globals.g_owning_qry_mode = 3) THEN
        query_str  := query_str || ' AND v.owning_organization_id = :own_org ';
        query_str  := query_str || ' AND v.owning_tp_type = 1 ';
      ELSIF(inv_mwb_globals.g_owning_qry_mode = 2) THEN
        query_str  := query_str || ' AND v.owning_tp_type = 1 ';
      END IF;

      --Bug #3411938
      IF inv_mwb_globals.g_qty_from IS NOT NULL OR inv_mwb_globals.g_qty_to IS NOT NULL THEN
         group_str := group_str || ' , v.planning_organization_id, v.planning_tp_type ';
         group_str := group_str || ' , v.owning_organization_id, v.owning_tp_type ';
         group_str := group_str || ' , v.item_lot_control, v.item_serial_control ';
      END IF;

      IF inv_mwb_globals.g_organization_id IS NOT NULL THEN
        query_str  := query_str || 'AND v.organization_id = :org_id ';
      ELSE
        query_str  := query_str || ' and EXISTS ( SELECT 1 ' ;
        query_str  := query_str || ' FROM org_access_view oav ' ;
        query_str  := query_str || ' WHERE oav.organization_id   = v.organization_id ' ;
        query_str  := query_str || ' AND oav.responsibility_id   = :responsibility_id ' ;
        query_str  := query_str || ' AND oav.resp_application_id = :resp_application_id ) ' ;
      END IF;

      IF inv_mwb_globals.g_qty_from IS NOT NULL THEN
         having_str := having_str || ' AND sum(on_hand) >= :qty_from ';
      END IF;

      IF inv_mwb_globals.g_qty_to IS NOT NULL THEN
         having_str := having_str || ' AND sum(on_hand) <= :qty_to ';
      END IF;

      IF inv_mwb_globals.g_qty_from IS NOT NULL OR inv_mwb_globals.g_qty_to IS NOT NULL THEN
         query_str := query_str || group_str || having_str || '  ' ;
      --Bug #3405473
      ELSE
        query_str := query_str || ' GROUP BY  v.cost_group_id, ccg.cost_group ' ;
      END IF;

      query_str  := query_str || 'ORDER BY ccg.cost_group ';

    ELSIF(
          (
           inv_mwb_globals.g_serial_from IS NOT NULL
           OR inv_mwb_globals.g_serial_from IS NOT NULL
           OR inv_mwb_globals.g_unit_number IS NOT NULL
           OR inv_mwb_globals.g_tree_serial_attr_query IS NOT NULL
          )
          AND inv_mwb_globals.g_lpn_from IS NULL
          AND inv_mwb_globals.g_lpn_to IS NULL
         ) THEN
      IF (inv_mwb_globals.g_status_id IS NULL) THEN
        table_required  := ' mtl_onhand_serial_mwb_v v ';
         IF is_grade_t = TRUE THEN                            -- NSRIVAST, INVCONV
            table_required  := ' mtl_onhand_serial_v v ';   -- NSRIVAST, INVCONV
         END IF  ;                                             -- NSRIVAST, INVCONV
      ELSE
        table_required  := ' mtl_onhand_serial_v v ';
      END IF;

       --bug 6633612
	IF (inv_mwb_globals.g_shipment_header_id is not null) THEN
		table_required  := table_required || ' , rcv_transactions rt, mtl_material_transactions mmt ';
	END IF;
	--bug 6633612

      IF (inv_mwb_globals.g_tree_lot_attr_query IS NULL AND inv_mwb_globals.g_parent_lot IS NULL
            AND inv_mwb_globals.g_supplier_lot_from IS NULL AND inv_mwb_globals.g_supplier_lot_to IS NULL)
         AND inv_mwb_globals.g_tree_serial_attr_query IS NULL THEN
        query_str  := 'SELECT DISTINCT v.cost_group_id, ccg.cost_group ';
        query_str  := query_str || 'FROM cst_cost_groups ccg, ' || table_required;
        query_str  := query_str || 'WHERE ccg.cost_group_id = mos.cost_group_id ';
      ELSIF (inv_mwb_globals.g_tree_lot_attr_query IS NULL AND inv_mwb_globals.g_parent_lot IS NULL
            AND inv_mwb_globals.g_supplier_lot_from IS NULL AND inv_mwb_globals.g_supplier_lot_to IS NULL)
            AND inv_mwb_globals.g_tree_serial_attr_query IS NOT NULL THEN
        query_str  :=
              query_str
           || 'SELECT DISTINCT v.cost_group_id, ccg.cost_group from'
           || '(SELECT serial_number serial_num FROM mtl_serial_numbers WHERE 1=1 '
           || inv_mwb_globals.g_tree_serial_attr_query
           || ') msn, cst_cost_groups ccg, '
           || table_required;
        query_str  := query_str || 'WHERE ccg.cost_group_id = v.cost_group_id ';
        query_str  := query_str || 'AND msn.serial_num = v.serial_number ';
      ELSIF (inv_mwb_globals.g_tree_lot_attr_query IS NOT NULL OR inv_mwb_globals.g_parent_lot IS NOT NULL
            OR inv_mwb_globals.g_supplier_lot_from IS NOT NULL OR inv_mwb_globals.g_supplier_lot_to IS NOT NULL)
            AND inv_mwb_globals.g_tree_serial_attr_query IS NULL THEN
        query_str  :=
              query_str
           || 'SELECT DISTINCT v.cost_group_id, ccg.cost_group from'
           || '(SELECT lot_number lot_num, parent_lot_number, supplier_lot_number FROM mtl_lot_numbers WHERE 1=1 '
           || inv_mwb_globals.g_tree_lot_attr_query
           || ') mln, cst_cost_groups ccg, '
           || table_required;
        query_str  := query_str || 'WHERE ccg.cost_group_id = v.cost_group_id ';
        query_str  := query_str || 'AND mln.lot_num = v.lot_number ';
 		--BUG 7556505
		   IF inv_mwb_globals.g_parent_lot IS NOT NULL THEN
		       query_str  := query_str || ' AND mln.parent_lot_number = :parent_lot ';
	           END IF;
		--BUG 7556505
                /* Bug 8396954 added below code for supplier_lot_number */
                IF (inv_mwb_globals.g_supplier_lot_from IS NOT NULL AND
                    inv_mwb_globals.g_supplier_lot_to IS NOT NULL AND
                    inv_mwb_globals.g_supplier_lot_from = inv_mwb_globals.g_supplier_lot_to) THEN
                    query_str  := query_str || ' AND mln.supplier_lot_number = :supplier_lot_f ';
                END IF;

                IF (inv_mwb_globals.g_supplier_lot_from IS NOT NULL AND
	            inv_mwb_globals.g_supplier_lot_from <> NVL(inv_mwb_globals.g_supplier_lot_to, -1) ) THEN
                    query_str  := query_str || ' AND mln.supplier_lot_number >= :supplier_lot_f ';
                END IF;

                IF (inv_mwb_globals.g_supplier_lot_to IS NOT NULL AND
	            inv_mwb_globals.g_supplier_lot_to <> NVL(inv_mwb_globals.g_supplier_lot_from, -1) ) THEN
                    query_str  := query_str || ' AND mln.supplier_lot_number <= :supplier_lot_t ';
                END IF;
                /* End of Bug 8396954 */
      ELSIF (inv_mwb_globals.g_tree_lot_attr_query IS NOT NULL OR inv_mwb_globals.g_parent_lot IS NOT NULL
            OR inv_mwb_globals.g_supplier_lot_from IS NOT NULL OR inv_mwb_globals.g_supplier_lot_to IS NOT NULL)
            AND inv_mwb_globals.g_tree_serial_attr_query IS NOT NULL THEN
        query_str  :=
              query_str
           || 'SELECT DISTINCT v.cost_group_id, ccg.cost_group from'
           || '(SELECT lot_number lot_num, parent_lot_number, supplier_lot_number FROM mtl_lot_numbers WHERE 1=1 '
           || inv_mwb_globals.g_tree_lot_attr_query
           || ') mln, '
           || '(SELECT serial_number serial_num FROM mtl_serial_numbers WHERE 1=1 '
           || inv_mwb_globals.g_tree_serial_attr_query
           || ') msn, cst_cost_groups ccg, '
           || table_required;
        query_str  := query_str || 'WHERE ccg.cost_group_id = v.cost_group_id ';
        query_str  := query_str || 'AND mln.lot_num = v.lot_number ';
 		--BUG 7556505
		   IF inv_mwb_globals.g_parent_lot IS NOT NULL THEN
		       query_str  := query_str || ' AND mln.parent_lot_number = :parent_lot ';
	           END IF;
		--BUG 7556505
                /* Bug 8396954 added below code for supplier_lot_number */
                IF (inv_mwb_globals.g_supplier_lot_from IS NOT NULL AND
                    inv_mwb_globals.g_supplier_lot_to IS NOT NULL AND
                    inv_mwb_globals.g_supplier_lot_from = inv_mwb_globals.g_supplier_lot_to) THEN
                    query_str  := query_str || ' AND mln.supplier_lot_number = :supplier_lot_f ';
                END IF;

                IF (inv_mwb_globals.g_supplier_lot_from IS NOT NULL AND
	            inv_mwb_globals.g_supplier_lot_from <> NVL(inv_mwb_globals.g_supplier_lot_to, -1) ) THEN
                    query_str  := query_str || ' AND mln.supplier_lot_number >= :supplier_lot_f ';
                END IF;

                IF (inv_mwb_globals.g_supplier_lot_to IS NOT NULL AND
	            inv_mwb_globals.g_supplier_lot_to <> NVL(inv_mwb_globals.g_supplier_lot_from, -1) ) THEN
                    query_str  := query_str || ' AND mln.supplier_lot_number <= :supplier_lot_t ';
                END IF;
                /* End of Bug 8396954 */
        query_str  := query_str || 'AND msn.serial_num = v.serial_number ';
      END IF;

      --ER(3338592) Changes (If the user gives the value for the Qty then only
      --Group by clause comes in to effect)

      IF inv_mwb_globals.g_qty_from IS NOT NULL OR inv_mwb_globals.g_qty_to IS NOT NULL THEN
         group_str := ' GROUP BY  v.organization_id  ';
      END IF;

     IF inv_mwb_globals.g_subinventory_code IS NOT NULL THEN
       query_str  := query_str || 'AND v.subinventory_code = :sub ';
        --ER(3338592) Changes
        IF group_str IS NOT NULL THEN
           group_str := group_str || ' , v.subinventory_code  ' ;
        END IF;
     END IF;

     --bug 6633612
	IF (inv_mwb_globals.g_shipment_header_id is not null) THEN
		query_str := query_str || ' AND rt.shipment_header_id = :shipment_header_id '
					 || ' AND rt.transaction_id = mmt.rcv_transaction_id '
					 || ' AND rt.organization_id = mmt.organization_id '
					 || ' AND rt.transaction_type = ''DELIVER'''
					 || ' AND rt.destination_type_code = ''INVENTORY'''
					 || ' AND mmt.transaction_id = v.last_transaction_id '
					 || ' AND mmt.organization_id = v.organization_id ';

	END IF;
	--bug 6633612

  -- NSRIVAST, INVCONV, Start
      IF inv_mwb_globals.g_grade_from_code IS NOT NULL THEN
         query_str := query_str || ' AND v.grade_code = :grade_f ' ;
      END IF ;
      IF inv_mwb_globals.g_tree_grade_code  IS NOT NULL THEN
         query_str := query_str || ' AND v.grade_code = :grade_c ' ;
      END IF ;
   -- NSRIVAST, INVCONV, End

     IF inv_mwb_globals.g_locator_id IS NOT NULL THEN
       query_str  := query_str || 'AND v.locator_id = :loc_id ';
       --ER(3338592) Changes
       IF group_str IS NOT NULL THEN
          group_str := group_str || ' , v.locator_id  ' ;
       END IF;
     END IF;

     IF inv_mwb_globals.g_project_id IS NOT NULL THEN
       query_str  := query_str || ' AND v.project_id = :pr_id ';
       --ER(3338592) Changes
       IF group_str IS NOT NULL THEN
          group_str := group_str || ' , v.project_id  ' ;
       END IF;
     END IF;

     IF inv_mwb_globals.g_task_id IS NOT NULL THEN
       query_str  := query_str || ' AND v.task_id = :ta_id ';
       --ER(3338592) Changes
       IF group_str IS NOT NULL THEN
          group_str := group_str || ' , inv_mwb_globals.g_task_id  ' ;
       END IF;
     END IF;

      IF inv_mwb_globals.g_inventory_item_id IS NOT NULL THEN
         query_str  := query_str || 'AND v.inventory_item_id = :item_id ';
      END IF;

      -- ER(9158529 client)
      IF inv_mwb_globals.g_client_code IS NOT NULL THEN
         query_str := query_str || ' AND v.inventory_item_id in (select DISTINCT inventory_item_id from mtl_system_items_b where wms_deploy.get_client_code(inventory_item_id) = :client_code) ';
      END IF;
      -- ER(9158529 client)

      -- ER(9158529)
      IF inv_mwb_globals.g_category_set_id IS NOT NULL THEN
         query_str := query_str || ' AND v.inventory_item_id in '
                                     || ' (select DISTINCT inventory_item_id from mtl_item_categories '
                                     || ' where organization_id = :organization_id '
                                     || ' and category_set_id = :category_set_id '
                                     || ' and category_id = nvl(:category_id, category_id)) ' ;
      END IF;
      -- ER(9158529)

      --Bug # 3411938
      IF inv_mwb_globals.g_qty_from IS NOT NULL OR inv_mwb_globals.g_qty_to IS NOT NULL THEN
         group_str := group_str || ' , v.inventory_item_id, v.item_description, v.item ,v.uom ' ;
      END IF;

      --ER(3338592) Changes
      IF inv_mwb_globals.g_item_description IS NOT NULL THEN
         query_str := query_str || ' AND v.item_description LIKE :item_description ';
      END IF;

      IF inv_mwb_globals.g_revision IS NOT NULL THEN
        query_str  := query_str || 'AND v.revision = :rev ';
        --ER(3338592) Changes
        IF group_str IS NOT NULL THEN
           group_str := group_str || ' , v.revision  ' ;
        END IF;
      END IF;

      IF inv_mwb_globals.g_cost_group_id IS NOT NULL THEN
        query_str  := query_str || 'AND v.cost_group_id = :cg_id ';
      END IF;

     --Bug #3405473
     IF inv_mwb_globals.g_qty_from IS NOT NULL OR inv_mwb_globals.g_qty_to IS NOT NULL THEN
        group_str := group_str || ' , v.cost_group_id, ccg.cost_group ' ;
     END IF;

      IF inv_mwb_globals.g_lot_from IS NOT NULL THEN
        query_str  := query_str || 'AND v.lot_number >= :lot_f ';
      END IF;

      IF inv_mwb_globals.g_lot_to IS NOT NULL THEN
        query_str  := query_str || 'AND v.lot_number <= :lot_t ';
      END IF;

      IF inv_mwb_globals.g_serial_from IS NOT NULL THEN
        query_str  := query_str || 'AND v.serial_number >= :serial_f ';
      END IF;

      IF inv_mwb_globals.g_serial_to IS NOT NULL THEN
        query_str  := query_str || 'AND v.serial_number <= :serial_t ';
      END IF;

     IF inv_mwb_globals.g_unit_number IS NOT NULL THEN
       query_str  := query_str || ' AND v.unit_number=:un_id ';
     END IF;

     -- Onhand Material Status Support: If status is tracked at onhand level then check for status
     -- from serial table (MSN)
     if (l_default_status_id is not null) then
        IF inv_mwb_globals.g_status_id IS NOT NULL THEN
          query_str  := query_str || 'AND v.serial_status_id = :st_id ';
        END IF;
     else
        IF inv_mwb_globals.g_status_id IS NOT NULL THEN
          query_str  := query_str || 'AND (v.subinventory_status_id = :st_id or v.locator_status_id = :st_id or ';
          query_str  := query_str || 'v.lot_status_id = :st_id or v.serial_status_id = :st_id) ';
        END IF;
     end if;

     /*IF inv_mwb_globals.g_site_id IS NOT NULL THEN
        query_str := query_str || ' AND PLANNING_TP_TYPE = 1 ';
        query_str := query_str || ' AND planning_organization_id = :site_id ' ;
      ELSIF inv_mwb_globals.g_vendor_id is NOT NULL THEN
        query_str := query_str || ' AND  PLANNING_TP_TYPE = 1 ';
        query_str := query_str || ' AND  planning_organization_id in ';
        query_str := query_str || ' (select vendor_site_id from po_vendor_sites_all ';
        query_str := query_str || '  where vendor_id = :vendor_id )';
     END IF;*/

      IF (inv_mwb_globals.g_planning_query_mode = 4) THEN
        query_str  := query_str || ' AND v.planning_organization_id = :plan_org ';
        query_str  := query_str || ' AND v.planning_tp_type = 2 ';
      ELSIF(inv_mwb_globals.g_planning_query_mode = 3) THEN
        query_str  := query_str || ' AND v.planning_organization_id = :plan_org ';
        query_str  := query_str || ' AND v.planning_tp_type = 1 ';
      ELSIF(inv_mwb_globals.g_planning_query_mode = 2) THEN
        query_str  := query_str || ' AND v.planning_tp_type = 1 ';
      END IF;

      IF (inv_mwb_globals.g_owning_qry_mode = 4) THEN
        query_str  := query_str || ' AND v.owning_organization_id = :own_org ';
        query_str  := query_str || ' AND v.owning_tp_type = 2 ';
      ELSIF(inv_mwb_globals.g_owning_qry_mode = 3) THEN
        query_str  := query_str || ' AND v.owning_organization_id = :own_org ';
        query_str  := query_str || ' AND v.owning_tp_type = 1 ';
      ELSIF(inv_mwb_globals.g_owning_qry_mode = 2) THEN
        query_str  := query_str || ' AND v.owning_tp_type = 1 ';
      END IF;

      --Bug #3411938
      IF inv_mwb_globals.g_qty_from IS NOT NULL OR inv_mwb_globals.g_qty_to IS NOT NULL THEN
         group_str := group_str || ' , v.planning_organization_id, v.planning_tp_type ';
         group_str := group_str || ' , v.owning_organization_id, v.owning_tp_type ';
         group_str := group_str || ' , v.item_lot_control, v.item_serial_control ';
      END IF;

     IF inv_mwb_globals.g_organization_id IS NOT NULL THEN
        query_str  := query_str || 'AND v.organization_id = :org_id ';
     ELSE
        query_str  := query_str || ' and EXISTS ( SELECT 1 ' ;
        query_str  := query_str || ' FROM org_access_view oav ' ;
        query_str  := query_str || ' WHERE oav.organization_id = v.organization_id ' ;
        query_str  := query_str || ' AND oav.responsibility_id   = :responsibility_id ' ;
        query_str  := query_str || ' AND oav.resp_application_id = :resp_application_id ) ' ;
     END IF;

     IF inv_mwb_globals.g_qty_from IS NOT NULL THEN
        having_str := having_str || ' AND sum(on_hand) >= :qty_from ';
     END IF;

     IF inv_mwb_globals.g_qty_to IS NOT NULL THEN
        having_str := having_str || ' AND sum(on_hand) <= :qty_to ';
     END IF;

     IF inv_mwb_globals.g_qty_from IS NOT NULL OR inv_mwb_globals.g_qty_to IS NOT NULL THEN
        query_str := query_str || group_str || having_str || '  ' ;
     --Bug #3405473
     ELSE
       query_str := query_str || ' GROUP BY  v.cost_group_id, ccg.cost_group ' ;
     END IF;

     query_str  := query_str || 'ORDER BY ccg.cost_group ';

    -- Need to use both mtl_onhand_total_v and mtl_onhand_serial_v
    ELSIF(
          inv_mwb_globals.g_serial_from IS NULL
          AND inv_mwb_globals.g_serial_to IS NULL
          AND inv_mwb_globals.g_unit_number IS NULL
          AND inv_mwb_globals.g_status_id IS NOT NULL
          AND inv_mwb_globals.g_lpn_from IS NULL
          AND inv_mwb_globals.g_lpn_to IS NULL
         ) THEN
      IF (inv_mwb_globals.g_status_id IS NULL) THEN
        table_required  := ' mtl_onhand_total_mwb_v v ';
--      ELSIF is_grade_t = TRUE THEN                       -- NSRIVAST, INVCONV
--          table_required  := ' mtl_onhand_new_lpn_v  ';   -- NSRIVAST, INVCONV
      ELSE
        table_required  := ' mtl_onhand_total_v v ';
      END IF;

       --bug 6633612
	IF (inv_mwb_globals.g_shipment_header_id is not null) THEN
		table_required  := table_required || ' , rcv_transactions rt, mtl_material_transactions mmt ';
	END IF;
	--bug 6633612

      query_str  := 'SELECT DISTINCT cost_group_id, cost_group from (';

      IF inv_mwb_globals.g_tree_lot_attr_query IS NULL AND inv_mwb_globals.g_parent_lot IS NULL
        AND inv_mwb_globals.g_supplier_lot_from IS NULL AND inv_mwb_globals.g_supplier_lot_to IS NULL THEN
        query_str  := query_str || 'SELECT v.cost_group_id cost_group_id, ccg.cost_group cost_group ';
        query_str  := query_str || 'FROM cst_cost_groups ccg, ' || table_required;
        query_str  := query_str || 'WHERE ccg.cost_group_id = v.cost_group_id ';
      ELSE
        query_str  :=
              query_str
           || 'SELECT v.cost_group_id cost_group_id, ccg.cost_group cost_group FROM '
           || '(SELECT lot_number lot_num, parent_lot_number, supplier_lot_number FROM mtl_lot_numbers WHERE 1=1 '
           || inv_mwb_globals.g_tree_lot_attr_query
           || ') mln, cst_cost_groups ccg, '
           || table_required;
        query_str  := query_str || 'WHERE ccg.cost_group_id = v.cost_group_id ';
        query_str  := query_str || 'AND mln.lot_num = v.lot_number ';
 		--BUG 7556505
		   IF inv_mwb_globals.g_parent_lot IS NOT NULL THEN
		       query_str  := query_str || ' AND mln.parent_lot_number = :parent_lot ';
	           END IF;
		--BUG 7556505
                /* Bug 8396954 added below code for supplier_lot_number */
                IF (inv_mwb_globals.g_supplier_lot_from IS NOT NULL AND
                    inv_mwb_globals.g_supplier_lot_to IS NOT NULL AND
                    inv_mwb_globals.g_supplier_lot_from = inv_mwb_globals.g_supplier_lot_to) THEN
                    query_str  := query_str || ' AND mln.supplier_lot_number = :supplier_lot_f ';
                END IF;

                IF (inv_mwb_globals.g_supplier_lot_from IS NOT NULL AND
	            inv_mwb_globals.g_supplier_lot_from <> NVL(inv_mwb_globals.g_supplier_lot_to, -1) ) THEN
                    query_str  := query_str || ' AND mln.supplier_lot_number >= :supplier_lot_f ';
                END IF;

                IF (inv_mwb_globals.g_supplier_lot_to IS NOT NULL AND
	            inv_mwb_globals.g_supplier_lot_to <> NVL(inv_mwb_globals.g_supplier_lot_from, -1) ) THEN
                    query_str  := query_str || ' AND mln.supplier_lot_number <= :supplier_lot_t ';
                END IF;
                /* End of Bug 8396954 */
      END IF;

      --ER(3338592) Changes (If the user gives the value for the Qty then only
      --Group by clause comes in to effect)

      IF inv_mwb_globals.g_qty_from IS NOT NULL OR inv_mwb_globals.g_qty_to IS NOT NULL THEN
         group_str := ' GROUP BY  v.organization_id ';
      END IF;

      IF inv_mwb_globals.g_subinventory_code IS NOT NULL THEN
        query_str  := query_str || 'AND v.subinventory_code = :sub ';
        --ER(3338592) Changes
        IF group_str IS NOT NULL THEN
           group_str := group_str || ' , v.subinventory_code  ' ;
        END IF;
      END IF;

  -- NSRIVAST, INVCONV, Start
      IF inv_mwb_globals.g_grade_from_code IS NOT NULL THEN
         query_str := query_str || ' AND v.grade_code = :grade_f ' ;
      END IF ;
      IF inv_mwb_globals.g_tree_grade_code  IS NOT NULL THEN
         query_str := query_str || ' AND v.grade_code = :grade_c ' ;
      END IF ;
   -- NSRIVAST, INVCONV, End

      IF inv_mwb_globals.g_locator_id IS NOT NULL THEN
        query_str  := query_str || 'AND v.locator_id = :loc_id ';
        --ER(3338592) Changes
        IF group_str IS NOT NULL THEN
           group_str := group_str || ' , v.locator_id  ' ;
        END IF;
      END IF;

      IF inv_mwb_globals.g_project_id IS NOT NULL THEN
        query_str  := query_str || ' AND v.project_id = :pr_id ';
        --ER(3338592) Changes
        IF group_str IS NOT NULL THEN
           group_str := group_str || ' , v.project_id  ' ;
        END IF;
      END IF;

      IF inv_mwb_globals.g_task_id IS NOT NULL THEN
        query_str  := query_str || ' AND v.task_id = :ta_id ';
        --ER(3338592) Changes
        IF group_str IS NOT NULL THEN
           group_str := group_str || ' , inv_mwb_globals.g_task_id  ' ;
        END IF;
      END IF;

      IF inv_mwb_globals.g_inventory_item_id IS NOT NULL THEN
         query_str  := query_str || 'AND v.inventory_item_id = :item_id ';
      END IF;

      -- ER(9158529 client)
      IF inv_mwb_globals.g_client_code IS NOT NULL THEN
         query_str := query_str || ' AND v.inventory_item_id in (select DISTINCT inventory_item_id from mtl_system_items_b where wms_deploy.get_client_code(inventory_item_id) = :client_code) ';
      END IF;
      -- ER(9158529 client)

      -- ER(9158529)
      IF inv_mwb_globals.g_category_set_id IS NOT NULL THEN
         query_str := query_str || ' AND v.inventory_item_id in '
                                     || ' (select DISTINCT inventory_item_id from mtl_item_categories '
                                     || ' where organization_id = :organization_id '
                                     || ' and category_set_id = :category_set_id '
                                     || ' and category_id = nvl(:category_id, category_id)) ' ;
      END IF;
      -- ER(9158529)

      --Bug # 3411938
      IF inv_mwb_globals.g_qty_from IS NOT NULL OR inv_mwb_globals.g_qty_to IS NOT NULL THEN
         group_str := group_str || ' , v.inventory_item_id, v.item_description, v.item ,v.uom ' ;
      END IF;

      --ER(3338592) Changes
      IF inv_mwb_globals.g_item_description IS NOT NULL THEN
         query_str := query_str || ' AND v.item_description LIKE :item_description ';
      END IF;

      IF inv_mwb_globals.g_revision IS NOT NULL THEN
        query_str  := query_str || 'AND v.revision = :rev ';
        --ER(3338592) Changes
        IF group_str IS NOT NULL THEN
           group_str := group_str || ' , v.revision  ' ;
        END IF;
      END IF;

      IF inv_mwb_globals.g_cost_group_id IS NOT NULL THEN
        query_str  := query_str || 'AND v.cost_group_id = :cg_id ';
      END IF;

      --Bug #3405473
      IF inv_mwb_globals.g_qty_from IS NOT NULL OR inv_mwb_globals.g_qty_to IS NOT NULL THEN
         group_str := group_str || ' , v.cost_group_id, ccg.cost_group ' ;
      END IF;

      --bug 6633612
	IF (inv_mwb_globals.g_shipment_header_id is not null) THEN
		query_str := query_str || ' AND rt.shipment_header_id = :shipment_header_id '
					 || ' AND rt.transaction_id = mmt.rcv_transaction_id '
					 || ' AND rt.organization_id = mmt.organization_id '
					 || ' AND rt.transaction_type = ''DELIVER'''
					 || ' AND rt.destination_type_code = ''INVENTORY'''
					 || ' AND mmt.transaction_id = v.create_transaction_id '
					 || ' AND mmt.organization_id = v.organization_id ';

	END IF;
	--bug 6633612

      IF inv_mwb_globals.g_lot_from IS NOT NULL THEN
        query_str  := query_str || 'AND v.lot_number >= :lot_f ';
      END IF;

      IF inv_mwb_globals.g_lot_to IS NOT NULL THEN
        query_str  := query_str || 'AND v.lot_number <= :lot_t ';
      END IF;

      IF inv_mwb_globals.g_unit_number IS NOT NULL THEN
        query_str  := query_str || ' AND v.unit_number=:un_id ';
      END IF;

      -- Onhand Material Status Support: If status is tracked at onhand level then check for status
      -- from onhand table (MOQD)
      if (l_default_status_id is not null) then
         IF inv_mwb_globals.g_status_id IS NOT NULL THEN
           query_str  := query_str || 'AND v.onhand_status_id = :st_id ';
         END IF;
      else
         IF inv_mwb_globals.g_status_id IS NOT NULL THEN
           query_str  := query_str || 'AND (v.subinventory_status_id = :st_id or ';
           query_str  := query_str || 'v.locator_status_id = :st_id or v.lot_status_id = :st_id) ';
         END IF;
      end if;

      /*IF inv_mwb_globals.g_site_id IS NOT NULL THEN
         query_str := query_str || ' AND PLANNING_TP_TYPE = 1 ';
         query_str := query_str || ' AND planning_organization_id = :site_id ' ;
       ELSIF inv_mwb_globals.g_vendor_id is NOT NULL THEN
         query_str := query_str || ' AND  PLANNING_TP_TYPE = 1 ';
         query_str := query_str || ' AND  planning_organization_id in ';
         query_str := query_str || ' (select vendor_site_id from po_vendor_sites_all ';
         query_str := query_str || '  where vendor_id = :vendor_id )';
      END IF;*/

      IF (inv_mwb_globals.g_planning_query_mode = 4) THEN
        query_str  := query_str || ' AND v.planning_organization_id = :plan_org ';
        query_str  := query_str || ' AND v.planning_tp_type = 2 ';
      ELSIF(inv_mwb_globals.g_planning_query_mode = 3) THEN
        query_str  := query_str || ' AND v.planning_organization_id = :plan_org ';
        query_str  := query_str || ' AND v.planning_tp_type = 1 ';
      ELSIF(inv_mwb_globals.g_planning_query_mode = 2) THEN
        query_str  := query_str || ' AND v.planning_tp_type = 1 ';
      END IF;

      IF (inv_mwb_globals.g_owning_qry_mode = 4) THEN
        query_str  := query_str || ' AND v.owning_organization_id = :own_org ';
        query_str  := query_str || ' AND v.owning_tp_type = 2 ';
      ELSIF(inv_mwb_globals.g_owning_qry_mode = 3) THEN
        query_str  := query_str || ' AND v.owning_organization_id = :own_org ';
        query_str  := query_str || ' AND v.owning_tp_type = 1 ';
      ELSIF(inv_mwb_globals.g_owning_qry_mode = 2) THEN
        query_str  := query_str || ' AND v.owning_tp_type = 1 ';
      END IF;

      --Bug #3411938
      IF inv_mwb_globals.g_qty_from IS NOT NULL OR inv_mwb_globals.g_qty_to IS NOT NULL THEN
         group_str := group_str || ' , v.planning_organization_id, v.planning_tp_type ';
         group_str := group_str || ' , v.owning_organization_id, v.owning_tp_type ';
         group_str := group_str || ' , v.item_lot_control, v.item_serial_control ';
      END IF;

      --query_str  := query_str || 'AND mot.serial_number_control_code in (1,6) ';
      query_str := query_str || 'AND v.item_serial_control in (1,6) ';

      IF inv_mwb_globals.g_qty_from IS NOT NULL THEN
         having_str := having_str || ' AND sum(on_hand) >= :qty_from ';
      END IF;

      IF inv_mwb_globals.g_qty_to IS NOT NULL THEN
         having_str := having_str || ' AND sum(on_hand) <= :qty_to ';
      END IF;

      IF inv_mwb_globals.g_qty_from IS NOT NULL OR inv_mwb_globals.g_qty_to IS NOT NULL THEN
         query_str := query_str || group_str || having_str || ' ' ;
      --Bug #3405473
      ELSE
         query_str := query_str || ' GROUP BY  v.cost_group_id, ccg.cost_group ' ;
      END IF;

      query_str  := query_str || 'UNION ';

      --Reinitializing the variable
      having_str := ' HAVING 1=1 ' ;
      IF (inv_mwb_globals.g_tree_lot_attr_query IS NULL AND inv_mwb_globals.g_parent_lot IS NULL
            AND inv_mwb_globals.g_supplier_lot_from IS NULL AND inv_mwb_globals.g_supplier_lot_to IS NULL)
         AND inv_mwb_globals.g_tree_serial_attr_query IS NULL THEN
        query_str  := query_str || 'SELECT v.cost_group_id, ccg.cost_group ';
        query_str  := query_str || 'FROM cst_cost_groups ccg, mtl_onhand_serial_v v ';
        query_str  := query_str || 'WHERE ccg.cost_group_id = v.cost_group_id ';
      ELSIF (inv_mwb_globals.g_tree_lot_attr_query IS NOT NULL OR inv_mwb_globals.g_parent_lot IS NOT NULL
            OR inv_mwb_globals.g_supplier_lot_from IS NOT NULL OR inv_mwb_globals.g_supplier_lot_to IS NOT NULL)
            AND inv_mwb_globals.g_tree_serial_attr_query IS NULL THEN
        query_str  :=
              query_str
           || 'SELECT v.cost_group_id, ccg.cost_group from'
           || '(SELECT lot_number lot_num, parent_lot_number, supplier_lot_number FROM mtl_lot_numbers WHERE 1=1 '
           || inv_mwb_globals.g_tree_lot_attr_query
           || ') mln, cst_cost_groups ccg, mtl_onhand_serial_v v ';
	--bug 6633612
	IF (inv_mwb_globals.g_shipment_header_id is not null) THEN
		query_str  := query_str || ' , rcv_transactions rt, mtl_material_transactions mmt ';
	END IF;
	--bug 6633612
        query_str  := query_str || 'WHERE ccg.cost_group_id = mos.cost_group_id ';
        query_str  := query_str || 'AND mln.lot_num = v.lot_number ';
 		--BUG 7556505
		   IF inv_mwb_globals.g_parent_lot IS NOT NULL THEN
		       query_str  := query_str || ' AND mln.parent_lot_number = :parent_lot ';
	           END IF;
		--BUG 7556505
                /* Bug 8396954 added below code for supplier_lot_number */
                IF (inv_mwb_globals.g_supplier_lot_from IS NOT NULL AND
                    inv_mwb_globals.g_supplier_lot_to IS NOT NULL AND
                    inv_mwb_globals.g_supplier_lot_from = inv_mwb_globals.g_supplier_lot_to) THEN
                    query_str  := query_str || ' AND mln.supplier_lot_number = :supplier_lot_f ';
                END IF;

                IF (inv_mwb_globals.g_supplier_lot_from IS NOT NULL AND
	            inv_mwb_globals.g_supplier_lot_from <> NVL(inv_mwb_globals.g_supplier_lot_to, -1) ) THEN
                    query_str  := query_str || ' AND mln.supplier_lot_number >= :supplier_lot_f ';
                END IF;

                IF (inv_mwb_globals.g_supplier_lot_to IS NOT NULL AND
	            inv_mwb_globals.g_supplier_lot_to <> NVL(inv_mwb_globals.g_supplier_lot_from, -1) ) THEN
                    query_str  := query_str || ' AND mln.supplier_lot_number <= :supplier_lot_t ';
                END IF;
                /* End of Bug 8396954 */
      END IF;

      --ER(3338592) Changes (If the user gives the value for the Qty then only
      --Group by clause comes in to effect)

      IF inv_mwb_globals.g_qty_from IS NOT NULL OR inv_mwb_globals.g_qty_to IS NOT NULL THEN
         group_str := ' GROUP BY  v.organization_id ';
      END IF;

      --bug 6633612
	IF (inv_mwb_globals.g_shipment_header_id is not null) THEN
		query_str := query_str || ' AND rt.shipment_header_id = :shipment_header_id '
					 || ' AND rt.transaction_id = mmt.rcv_transaction_id '
					 || ' AND rt.organization_id = mmt.organization_id '
					 || ' AND rt.transaction_type = ''DELIVER'''
					 || ' AND rt.destination_type_code = ''INVENTORY'''
					 || ' AND mmt.transaction_id = v.last_transaction_id '
					 || ' AND mmt.organization_id = v.organization_id ';

	END IF;
	--bug 6633612

      IF inv_mwb_globals.g_subinventory_code IS NOT NULL THEN
        query_str  := query_str || 'AND v.subinventory_code = :sub ';
        --ER(3338592) Changes
        IF group_str IS NOT NULL THEN
           group_str := group_str || ' , v.subinventory_code  ' ;
        END IF;
      END IF;

      IF inv_mwb_globals.g_locator_id IS NOT NULL THEN
        query_str  := query_str || 'AND v.locator_id = :loc_id ';
        --ER(3338592) Changes
        IF group_str IS NOT NULL THEN
           group_str := group_str || ' , v.locator_id  ' ;
        END IF;
      END IF;

      IF inv_mwb_globals.g_inventory_item_id IS NOT NULL THEN
         query_str  := query_str || 'AND v.inventory_item_id = :item_id ';
      END IF;

      -- ER(9158529 client)
      IF inv_mwb_globals.g_client_code IS NOT NULL THEN
         query_str := query_str || ' AND v.inventory_item_id in (select DISTINCT inventory_item_id from mtl_system_items_b where wms_deploy.get_client_code(inventory_item_id) = :client_code) ';
      END IF;
      -- ER(9158529 client)

      -- ER(9158529)
      IF inv_mwb_globals.g_category_set_id IS NOT NULL THEN
         query_str := query_str || ' AND v.inventory_item_id in '
                                     || ' (select DISTINCT inventory_item_id from mtl_item_categories '
                                     || ' where organization_id = :organization_id '
                                     || ' and category_set_id = :category_set_id '
                                     || ' and category_id = nvl(:category_id, category_id)) ' ;
      END IF;
      -- ER(9158529)

      --Bug # 3411938
      IF inv_mwb_globals.g_qty_from IS NOT NULL OR inv_mwb_globals.g_qty_to IS NOT NULL THEN
         group_str := group_str || ' , v.inventory_item_id, v.item_description, v.item ,v.uom ' ;
      END IF;

      --ER(3338592) Changes
      IF inv_mwb_globals.g_item_description IS NOT NULL THEN
         query_str := query_str || ' AND v.item_description LIKE :item_description ';
      END IF;

      IF inv_mwb_globals.g_revision IS NOT NULL THEN
        query_str  := query_str || 'AND v.revision = :rev ';
        --ER(3338592) Changes
        IF group_str IS NOT NULL THEN
           group_str := group_str || ' , v.revision  ' ;
        END IF;
      END IF;

      IF inv_mwb_globals.g_cost_group_id IS NOT NULL THEN
        query_str  := query_str || 'AND v.cost_group_id = :cg_id ';
      END IF;

      --Bug #3405473
      IF inv_mwb_globals.g_qty_from IS NOT NULL OR inv_mwb_globals.g_qty_to IS NOT NULL THEN
         group_str := group_str || ' , v.cost_group_id, ccg.cost_group ' ;
      END IF;

      IF inv_mwb_globals.g_lot_from IS NOT NULL THEN
        query_str  := query_str || 'AND v.lot_number >= :lot_f ';
      END IF;

      IF inv_mwb_globals.g_lot_to IS NOT NULL THEN
        query_str  := query_str || 'AND v.lot_number <= :lot_t ';
      END IF;

      IF inv_mwb_globals.g_serial_from IS NOT NULL THEN
        query_str  := query_str || 'AND v.serial_number >= :serial_f ';
      END IF;

      IF inv_mwb_globals.g_serial_to IS NOT NULL THEN
        query_str  := query_str || 'AND v.serial_number <= :serial_t ';
      END IF;

      IF inv_mwb_globals.g_organization_id IS NOT NULL THEN
        query_str  := query_str || 'AND v.organization_id = :org_id ';
      ELSE
        query_str  := query_str || ' and EXISTS ( SELECT 1 ' ;
        query_str  := query_str || ' FROM org_access_view oav ' ;
        query_str  := query_str || ' WHERE oav.organization_id = v.organization_id ' ;
        query_str  := query_str || ' AND oav.responsibility_id   = :responsibility_id ' ;
        query_str  := query_str || ' AND oav.resp_application_id = :resp_application_id ) ' ;
      END IF;

      -- Onhand Material Status Support: If status is tracked at onhand level then check for status
      -- from serial table (MSN)
      if (l_default_status_id is not null) then
         IF inv_mwb_globals.g_status_id IS NOT NULL THEN
           query_str  := query_str || 'AND v.serial_status_id = :st_id ';
         END IF;
      else
         IF inv_mwb_globals.g_status_id IS NOT NULL THEN
           query_str  := query_str || 'AND (v.subinventory_status_id = :st_id or v.locator_status_id = :st_id or ';
           query_str  := query_str || 'v.lot_status_id = :st_id or v.serial_status_id = :st_id) ';
         END IF;
      end if;

      IF inv_mwb_globals.g_qty_from IS NOT NULL THEN
         having_str := having_str || ' AND sum(on_hand) >= :qty_from ';
      END IF;

      IF inv_mwb_globals.g_qty_to IS NOT NULL THEN
         having_str := having_str || ' AND sum(on_hand) <= :qty_to ';
      END IF;

      IF inv_mwb_globals.g_qty_from IS NOT NULL OR inv_mwb_globals.g_qty_to IS NOT NULL THEN
         query_str := query_str || group_str || having_str || '  ' ;
      --Bug #3405473
      ELSE
        query_str := query_str || ' GROUP BY  v.cost_group_id, ccg.cost_group ' ;
      END IF;
      --End of ER(3338592) Changes

      query_str  := query_str || ') GROUP BY cost_group_id, cost_group ';  -- line was commented earlier, NSRIVAST
      query_str  := query_str || 'ORDER BY cost_group ';

   ELSIF(inv_mwb_globals.g_lpn_from IS NOT NULL
          OR inv_mwb_globals.g_lpn_to IS NOT NULL) THEN
      IF (inv_mwb_globals.g_status_id IS NULL) THEN
        table_required  := ' mtl_onhand_new_lpn_mwb_v mol ';
          IF is_grade_t = TRUE THEN                             -- NSRIVAST, INVCONV
             table_required  := ' mtl_onhand_new_lpn_v mol ';   -- NSRIVAST, INVCONV
          END IF;                                               -- NSRIVAST, INVCONV
      ELSE
        table_required  := ' mtl_onhand_new_lpn_v mol ';
      END IF;

      query_str  := 'SELECT DISTINCT mol.cost_group_id, ccg.cost_group ';
      query_str  := query_str || 'FROM cst_cost_groups ccg, ' || table_required;

      IF (inv_mwb_globals.g_lpn_from IS NOT NULL
          OR inv_mwb_globals.g_lpn_to IS NOT NULL) THEN
        query_str  := query_str || ', (select outermost_lpn_id from wms_license_plate_numbers wlpn ';
        query_str  := query_str || ' WHERE 1=1 ';

        IF inv_mwb_globals.g_locator_id IS NOT NULL THEN
          query_str  := query_str || 'AND wlpn.locator_id = :loc_id ';
        END IF;

  -- NSRIVAST, INVCONV, Start
      IF inv_mwb_globals.g_grade_from_code IS NOT NULL THEN
         query_str := query_str || ' AND grade_code = :grade_f ' ;
      END IF ;
      IF inv_mwb_globals.g_tree_grade_code  IS NOT NULL THEN
         query_str := query_str || ' AND grade_code = :grade_c ' ;
      END IF ;
   -- NSRIVAST, INVCONV, End

        IF inv_mwb_globals.g_subinventory_code IS NOT NULL THEN
          query_str  := query_str || 'AND wlpn.subinventory_code = :sub ';
        END IF;

        IF inv_mwb_globals.g_organization_id IS NOT NULL THEN
          query_str  := query_str || 'AND wlpn.organization_id = :org_id ';
        END IF;

        IF inv_mwb_globals.g_lpn_from IS NOT NULL
           OR inv_mwb_globals.g_lpn_to IS NOT NULL THEN
          IF inv_mwb_globals.g_lpn_from IS NOT NULL
             AND inv_mwb_globals.g_lpn_to IS NULL THEN
            query_str  := query_str || ' and license_plate_number >= :lpn_f ';
          ELSIF inv_mwb_globals.g_lpn_from IS NULL
                AND inv_mwb_globals.g_lpn_to IS NOT NULL THEN
            query_str  := query_str || ' and license_plate_number <= :lpn_t ';
          ELSIF inv_mwb_globals.g_lpn_from IS NOT NULL
                AND inv_mwb_globals.g_lpn_to IS NOT NULL THEN
             --bugfix#3646484
             IF (inv_mwb_globals.g_lpn_from = inv_mwb_globals.g_lpn_to)  THEN
             --User is querying for single LPN so converted the range query to equality query
                query_str := query_str || 'and license_plate_number = :lpn_f ';
             ELSE
               query_str  := query_str || ' and license_plate_number >= :lpn_f ';
               query_str  := query_str || ' and license_plate_number <= :lpn_t ';
             END IF;
          END IF;
        END IF;

        query_str  := query_str || 'group by wlpn.outermost_lpn_id) X ';
      END IF;

      IF (inv_mwb_globals.g_tree_lot_attr_query IS NULL AND inv_mwb_globals.g_parent_lot IS NULL
            AND inv_mwb_globals.g_supplier_lot_from IS NULL AND inv_mwb_globals.g_supplier_lot_to IS NULL)
         AND inv_mwb_globals.g_tree_serial_attr_query IS NULL THEN
        query_str  := query_str || 'WHERE 1=1 ';
      ELSIF (inv_mwb_globals.g_tree_lot_attr_query IS NULL AND inv_mwb_globals.g_parent_lot IS NULL
            AND inv_mwb_globals.g_supplier_lot_from IS NULL AND inv_mwb_globals.g_supplier_lot_to IS NULL)
            AND inv_mwb_globals.g_tree_serial_attr_query IS NOT NULL THEN
        query_str  :=
                     query_str || ', (SELECT serial_number serial_num FROM mtl_serial_numbers WHERE 1=1 ' || inv_mwb_globals.g_tree_serial_attr_query
                     || ') msn ';
        query_str  := query_str || 'WHERE msn.serial_num = serial_number ';
      ELSIF (inv_mwb_globals.g_tree_lot_attr_query IS NOT NULL OR inv_mwb_globals.g_parent_lot IS NOT NULL
            OR inv_mwb_globals.g_supplier_lot_from IS NOT NULL OR inv_mwb_globals.g_supplier_lot_to IS NOT NULL)
            AND inv_mwb_globals.g_tree_serial_attr_query IS NULL THEN
        query_str  := query_str || ', (SELECT lot_number lot_num, parent_lot_number, supplier_lot_number FROM mtl_lot_numbers WHERE 1=1 ' || inv_mwb_globals.g_tree_lot_attr_query || ') mln ';
        query_str  := query_str || 'WHERE mln.lot_num = lot_number ';
 		--BUG 7556505
		   IF inv_mwb_globals.g_parent_lot IS NOT NULL THEN
		       query_str  := query_str || ' AND mln.parent_lot_number = :parent_lot ';
	           END IF;
		--BUG 7556505
                /* Bug 8396954 added below code for supplier_lot_number */
                IF (inv_mwb_globals.g_supplier_lot_from IS NOT NULL AND
                    inv_mwb_globals.g_supplier_lot_to IS NOT NULL AND
                    inv_mwb_globals.g_supplier_lot_from = inv_mwb_globals.g_supplier_lot_to) THEN
                    query_str  := query_str || ' AND mln.supplier_lot_number = :supplier_lot_f ';
                END IF;

                IF (inv_mwb_globals.g_supplier_lot_from IS NOT NULL AND
	            inv_mwb_globals.g_supplier_lot_from <> NVL(inv_mwb_globals.g_supplier_lot_to, -1) ) THEN
                    query_str  := query_str || ' AND mln.supplier_lot_number >= :supplier_lot_f ';
                END IF;

                IF (inv_mwb_globals.g_supplier_lot_to IS NOT NULL AND
	            inv_mwb_globals.g_supplier_lot_to <> NVL(inv_mwb_globals.g_supplier_lot_from, -1) ) THEN
                    query_str  := query_str || ' AND mln.supplier_lot_number <= :supplier_lot_t ';
                END IF;
                /* End of Bug 8396954 */
      ELSIF (inv_mwb_globals.g_tree_lot_attr_query IS NOT NULL OR inv_mwb_globals.g_parent_lot IS NOT NULL
             OR inv_mwb_globals.g_supplier_lot_from IS NOT NULL OR inv_mwb_globals.g_supplier_lot_to IS NOT NULL)
            AND inv_mwb_globals.g_tree_serial_attr_query IS NOT NULL THEN
        query_str  :=
              query_str
           || ', (SELECT lot_number lot_num, parent_lot_number, supplier_lot_number FROM mtl_lot_numbers WHERE 1=1 '
           || inv_mwb_globals.g_tree_lot_attr_query
           || ') mln '
           || ', (SELECT serial_number serial_num FROM mtl_serial_numbers WHERE 1=1 '
           || inv_mwb_globals.g_tree_serial_attr_query
           || ') msn ';
        query_str  := query_str || 'WHERE mln.lot_num = lot_number ';
 		--BUG 7556505
		   IF inv_mwb_globals.g_parent_lot IS NOT NULL THEN
		       query_str  := query_str || ' AND mln.parent_lot_number = :parent_lot ';
	           END IF;
		--BUG 7556505
                /* Bug 8396954 added below code for supplier_lot_number */
                IF (inv_mwb_globals.g_supplier_lot_from IS NOT NULL AND
                    inv_mwb_globals.g_supplier_lot_to IS NOT NULL AND
                    inv_mwb_globals.g_supplier_lot_from = inv_mwb_globals.g_supplier_lot_to) THEN
                    query_str  := query_str || ' AND mln.supplier_lot_number = :supplier_lot_f ';
                END IF;

                IF (inv_mwb_globals.g_supplier_lot_from IS NOT NULL AND
	            inv_mwb_globals.g_supplier_lot_from <> NVL(inv_mwb_globals.g_supplier_lot_to, -1) ) THEN
                    query_str  := query_str || ' AND mln.supplier_lot_number >= :supplier_lot_f ';
                END IF;

                IF (inv_mwb_globals.g_supplier_lot_to IS NOT NULL AND
	            inv_mwb_globals.g_supplier_lot_to <> NVL(inv_mwb_globals.g_supplier_lot_from, -1) ) THEN
                    query_str  := query_str || ' AND mln.supplier_lot_number <= :supplier_lot_t ';
                END IF;
                /* End of Bug 8396954 */
        query_str  := query_str || 'AND msn.serial_num = serial_number ';
      END IF;

      query_str  := query_str || 'AND ccg.cost_group_id = mol.cost_group_id ';

       --ER(3338592) Changes (If the user gives the value for the Qty then only
       --Group by clause comes in to effect)

       IF inv_mwb_globals.g_qty_from IS NOT NULL OR inv_mwb_globals.g_qty_to IS NOT NULL THEN
          group_str := ' GROUP BY  mol.organization_id ';
       END IF;

      IF inv_mwb_globals.g_subinventory_code IS NOT NULL THEN
        query_str  := query_str || 'AND subinventory_code = :sub ';
        --ER(3338592) Changes
        IF group_str IS NOT NULL THEN
           group_str := group_str || ' , subinventory_code  ' ;
        END IF;
      END IF;

      IF inv_mwb_globals.g_locator_id IS NOT NULL THEN
        query_str  := query_str || 'AND locator_id = :loc_id ';
        --ER(3338592) Changes
        IF group_str IS NOT NULL THEN
           group_str := group_str || ' , locator_id  ' ;
        END IF;
      END IF;

      IF inv_mwb_globals.g_project_id IS NOT NULL THEN
        query_str  := query_str || ' AND project_id = :pr_id ';
        --ER(3338592) Changes
        IF group_str IS NOT NULL THEN
           group_str := group_str || ' , project_id  ' ;
        END IF;
      END IF;

      IF inv_mwb_globals.g_task_id IS NOT NULL THEN
        query_str  := query_str || ' AND task_id = :ta_id ';
        --ER(3338592) Changes
        IF group_str IS NOT NULL THEN
           group_str := group_str || ' , inv_mwb_globals.g_task_id  ' ;
        END IF;
      END IF;

      IF inv_mwb_globals.g_inventory_item_id IS NOT NULL THEN
         query_str  := query_str || 'AND inventory_item_id = :item_id ';
      END IF;

      -- ER(9158529 client)
      IF inv_mwb_globals.g_client_code IS NOT NULL THEN
         query_str := query_str || ' AND inventory_item_id in (select DISTINCT inventory_item_id from mtl_system_items_b where wms_deploy.get_client_code(inventory_item_id) = :client_code) ';
      END IF;
      -- ER(9158529 client)

      -- ER(9158529)
      IF inv_mwb_globals.g_category_set_id IS NOT NULL THEN
         query_str := query_str || ' AND inventory_item_id in '
                                     || ' (select DISTINCT inventory_item_id from mtl_item_categories '
                                     || ' where organization_id = :organization_id '
                                     || ' and category_set_id = :category_set_id '
                                     || ' and category_id = nvl(:category_id, category_id)) ' ;
      END IF;
      -- ER(9158529)

      --Bug # 3411938
      IF inv_mwb_globals.g_qty_from IS NOT NULL OR inv_mwb_globals.g_qty_to IS NOT NULL THEN
         group_str := group_str || ' , inventory_item_id, item_description, item ,uom ' ;
      END IF;

      --ER(3338592) Changes
      IF inv_mwb_globals.g_item_description IS NOT NULL THEN
         query_str := query_str || ' AND item_description LIKE :item_description ';
      END IF;

      IF inv_mwb_globals.g_revision IS NOT NULL THEN
        query_str  := query_str || 'AND revision = :rev ';
        --ER(3338592) Changes
        IF group_str IS NOT NULL THEN
          group_str := group_str || ' , revision  ' ;
        END IF;
      END IF;

      IF inv_mwb_globals.g_cost_group_id IS NOT NULL THEN
        query_str  := query_str || 'AND mol.cost_group_id = :cg_id ';
      END IF;

      --Bug #3405473
      IF inv_mwb_globals.g_qty_from IS NOT NULL OR inv_mwb_globals.g_qty_to IS NOT NULL THEN
         group_str := group_str ||' , mol.cost_group_id, ccg.cost_group ';
      END IF;

      IF inv_mwb_globals.g_lpn_from IS NOT NULL
         OR inv_mwb_globals.g_lpn_to IS NOT NULL THEN
        query_str  := query_str || ' AND mol.outermost_lpn_id = x.outermost_lpn_id ';
      END IF;

      --ER(3338592) Changes
      IF inv_mwb_globals.g_lpn_from IS NOT NULL OR inv_mwb_globals.g_lpn_to IS NOT NULL THEN
         IF group_str IS NOT NULL THEN
            group_str := group_str || ' , lpn ' ;
         END IF;
      END IF;

      IF inv_mwb_globals.g_lot_from IS NOT NULL THEN
        query_str  := query_str || 'AND lot_number >= :lot_f ';
      END IF;

      IF inv_mwb_globals.g_lot_to IS NOT NULL THEN
        query_str  := query_str || 'AND lot_number <= :lot_t ';
      END IF;

      IF inv_mwb_globals.g_serial_from IS NOT NULL THEN
        query_str  := query_str || 'AND serial_number >= :serial_f ';
      END IF;

      IF inv_mwb_globals.g_serial_to IS NOT NULL THEN
        query_str  := query_str || 'AND serial_number <= :serial_t ';
      END IF;

      IF inv_mwb_globals.g_unit_number IS NOT NULL THEN
        query_str  := query_str || ' AND unit_number=:un_id ';
      END IF;

      /*LPN Status Project */
      IF (l_default_status_id IS NOT NULL) THEN
         IF inv_mwb_globals.g_status_id IS NOT NULL THEN
           query_str  := query_str || 'AND onhand_status_id = :st_id ';
         END IF;
      ELSE
        IF inv_mwb_globals.g_status_id IS NOT NULL THEN
          query_str  := query_str || 'AND (mol.subinventory_status_id = :st_id or mol.locator_status_id = :st_id or ';
          query_str  := query_str || 'mol.lot_status_id = :st_id or mol.serial_status_id = :st_id) ';
        END IF;
      END IF;
      /*End of fix for LPN Status Project */

      /*IF inv_mwb_globals.g_site_id IS NOT NULL THEN
         query_str := query_str || ' AND PLANNING_TP_TYPE = 1 ';
         query_str := query_str || ' AND planning_organization_id = :site_id ' ;
       ELSIF inv_mwb_globals.g_vendor_id is NOT NULL THEN
         query_str := query_str || ' AND  PLANNING_TP_TYPE = 1 ';
         query_str := query_str || ' AND  planning_organization_id in ';
         query_str := query_str || ' (select vendor_site_id from po_vendor_sites_all ';
         query_str := query_str || '  where vendor_id = :vendor_id )';
      END IF;*/

      IF (inv_mwb_globals.g_planning_query_mode = 4) THEN
        query_str  := query_str || ' AND planning_organization_id = :plan_org ';
        query_str  := query_str || ' AND planning_tp_type = 2 ';
      ELSIF(inv_mwb_globals.g_planning_query_mode = 3) THEN
        query_str  := query_str || ' AND planning_organization_id = :plan_org ';
        query_str  := query_str || ' AND planning_tp_type = 1 ';
      ELSIF(inv_mwb_globals.g_planning_query_mode = 2) THEN
        query_str  := query_str || ' AND planning_tp_type = 1 ';
      END IF;

      IF (inv_mwb_globals.g_owning_qry_mode = 4) THEN
        query_str  := query_str || ' AND owning_organization_id = :own_org ';
        query_str  := query_str || ' AND owning_tp_type = 2 ';
      ELSIF(inv_mwb_globals.g_owning_qry_mode = 3) THEN
        query_str  := query_str || ' AND owning_organization_id = :own_org ';
        query_str  := query_str || ' AND owning_tp_type = 1 ';
      ELSIF(inv_mwb_globals.g_owning_qry_mode = 2) THEN
        query_str  := query_str || ' AND owning_tp_type = 1 ';
      END IF;

      --Bug #3411938
      IF inv_mwb_globals.g_qty_from IS NOT NULL OR inv_mwb_globals.g_qty_to IS NOT NULL THEN
         group_str := group_str || ' , planning_organization_id, planning_tp_type ';
         group_str := group_str || ' , owning_organization_id, owning_tp_type ';
         group_str := group_str || ' , item_lot_control, item_serial_control ';
      END IF;

      IF inv_mwb_globals.g_qty_from IS NOT NULL THEN
         having_str := having_str || ' AND sum(on_hand) >= :qty_from ';
      END IF;

      IF inv_mwb_globals.g_qty_to IS NOT NULL THEN
         having_str := having_str || ' AND sum(on_hand) <= :qty_to ';
      END IF;

      IF inv_mwb_globals.g_qty_from IS NOT NULL OR inv_mwb_globals.g_qty_to IS NOT NULL THEN
         query_str := query_str || group_str || having_str || ' ' ;
      --Bug #3405473
      ELSE
        query_str := query_str || ' GROUP BY  mol.cost_group_id, ccg.cost_group ' ;
      END IF;

      --query_str  := query_str || 'GROUP BY mol.cost_group_id, ccg.cost_group ';
      query_str  := query_str || 'ORDER BY ccg.cost_group ';

    END IF;

       -- Enable this during debugging
        inv_trx_util_pub.trace(query_str, 'Add- Cgs Material Workbench', 9);
        --trace1(query_str, 'add_cgs', 9);

 --RS
    inv_mwb_globals.print_msg( g_pkg_name, l_procedure_name, query_str );

    inv_mwb_globals.g_last_query := query_str;

    query_hdl       := DBMS_SQL.open_cursor;
    DBMS_SQL.parse(query_hdl, query_str, DBMS_SQL.native);


    IF inv_mwb_globals.g_organization_id IS NOT NULL THEN
      DBMS_SQL.bind_variable(query_hdl, 'org_id', inv_mwb_globals.g_organization_id);
    END IF;

    IF inv_mwb_globals.g_subinventory_code IS NOT NULL THEN
      DBMS_SQL.bind_variable(query_hdl, 'sub', inv_mwb_globals.g_subinventory_code);
    END IF;

    IF inv_mwb_globals.g_locator_id IS NOT NULL THEN
      DBMS_SQL.bind_variable(query_hdl, 'loc_id', inv_mwb_globals.g_locator_id);
    END IF;

    IF inv_mwb_globals.g_inventory_item_id IS NOT NULL THEN
      DBMS_SQL.bind_variable(query_hdl, 'item_id', inv_mwb_globals.g_inventory_item_id);
    END IF;

    -- ER(9158529 client)
    IF inv_mwb_globals.g_client_code IS NOT NULL THEN
      DBMS_SQL.bind_variable(query_hdl, 'client_code', inv_mwb_globals.g_client_code);
    END IF;
    -- ER(9158529 client)

    -- ER(9158529)
    IF inv_mwb_globals.g_category_set_id IS NOT NULL THEN
      DBMS_SQL.bind_variable(query_hdl, 'organization_id', inv_mwb_globals.g_organization_id);
      DBMS_SQL.bind_variable(query_hdl, 'category_set_id', inv_mwb_globals.g_category_set_id);
      DBMS_SQL.bind_variable(query_hdl, 'category_id', inv_mwb_globals.g_category_id);
    END IF;
    -- ER(9158529)

    IF inv_mwb_globals.g_revision IS NOT NULL THEN
      DBMS_SQL.bind_variable(query_hdl, 'rev', inv_mwb_globals.g_revision);
    END IF;

    IF inv_mwb_globals.g_cost_group_id IS NOT NULL THEN
      DBMS_SQL.bind_variable(query_hdl, 'cg_id', inv_mwb_globals.g_cost_group_id);
    END IF;

    --BUG 7556505
    IF inv_mwb_globals.g_parent_lot IS NOT NULL THEN
      DBMS_SQL.bind_variable(query_hdl, 'parent_lot', inv_mwb_globals.g_parent_lot);
    END IF;
    --BUG 7556505

    IF inv_mwb_globals.g_lot_from IS NOT NULL THEN
      DBMS_SQL.bind_variable(query_hdl, 'lot_f', inv_mwb_globals.g_lot_from);
    END IF;

    IF inv_mwb_globals.g_lot_to IS NOT NULL THEN
      DBMS_SQL.bind_variable(query_hdl, 'lot_t', inv_mwb_globals.g_lot_to);
    END IF;

    /* Bug 8396954 added below code for supplier_lot_number */
    IF (inv_mwb_globals.g_supplier_lot_from IS NOT NULL AND
    inv_mwb_globals.g_supplier_lot_to IS NOT NULL AND
    inv_mwb_globals.g_supplier_lot_from = inv_mwb_globals.g_supplier_lot_to) THEN
         DBMS_SQL.bind_variable(query_hdl, 'supplier_lot_f', inv_mwb_globals.g_supplier_lot_from);
    END IF;

    IF (inv_mwb_globals.g_supplier_lot_from IS NOT NULL AND
        inv_mwb_globals.g_supplier_lot_from <> NVL(inv_mwb_globals.g_supplier_lot_to, -1) ) THEN
          DBMS_SQL.bind_variable(query_hdl, 'supplier_lot_f', inv_mwb_globals.g_supplier_lot_from);
    END IF;

    IF (inv_mwb_globals.g_supplier_lot_to IS NOT NULL AND
         inv_mwb_globals.g_supplier_lot_to <> NVL(inv_mwb_globals.g_supplier_lot_from, -1) ) THEN
          DBMS_SQL.bind_variable(query_hdl, 'supplier_lot_t', inv_mwb_globals.g_supplier_lot_to);
    END IF;
    /* End of Bug 8396954 */

    --bug 6633612
    IF inv_mwb_globals.g_shipment_header_id IS NOT NULL THEN
      DBMS_SQL.bind_variable(query_hdl, 'shipment_header_id',inv_mwb_globals.g_shipment_header_id );
    END IF;
    --bug 6633612

 -- NSRIVAST, INVCONV, Start
    IF inv_mwb_globals.g_grade_from_code IS NOT NULL THEN
      DBMS_SQL.bind_variable(query_hdl, 'grade_f',inv_mwb_globals.g_grade_from_code );
    END IF;
    IF inv_mwb_globals.g_tree_grade_code IS NOT NULL THEN
      DBMS_SQL.bind_variable(query_hdl, 'grade_c', inv_mwb_globals.g_tree_grade_code);
    END IF;
 -- NSRIVAST, INVCONV, End

    IF inv_mwb_globals.g_serial_from IS NOT NULL THEN
      DBMS_SQL.bind_variable(query_hdl, 'serial_f', inv_mwb_globals.g_serial_from);
    END IF;

    IF inv_mwb_globals.g_serial_to IS NOT NULL THEN
      DBMS_SQL.bind_variable(query_hdl, 'serial_t', inv_mwb_globals.g_serial_to);
    END IF;

      --bugfix#3646484
      IF ((inv_mwb_globals.g_lpn_from IS NOT NULL) AND (inv_mwb_globals.g_lpn_to IS NOT NULL) AND (inv_mwb_globals.g_lpn_from = inv_mwb_globals.g_lpn_to))  THEN
      --User is querying for single LPN so converted the range query to equality query
      --So it is enought to bind the from lpn alone
         dbms_sql.bind_variable(query_hdl, 'lpn_f', inv_mwb_globals.g_lpn_from);
      ELSE
          IF inv_mwb_globals.g_lpn_from IS NOT NULL THEN
            DBMS_SQL.bind_variable(query_hdl, 'lpn_f', inv_mwb_globals.g_lpn_from);
          END IF;

          IF inv_mwb_globals.g_lpn_to IS NOT NULL THEN
            DBMS_SQL.bind_variable(query_hdl, 'lpn_t', inv_mwb_globals.g_lpn_to);
          END IF;
      END IF;

    IF inv_mwb_globals.g_status_id IS NOT NULL THEN
      DBMS_SQL.bind_variable(query_hdl, 'st_id', inv_mwb_globals.g_status_id);
    END IF;

    IF inv_mwb_globals.g_mln_context_code IS NOT NULL THEN
      DBMS_SQL.bind_variable(query_hdl, 'mln_context', inv_mwb_globals.g_mln_context_code);
    END IF;

    IF inv_mwb_globals.g_project_id IS NOT NULL THEN
      DBMS_SQL.bind_variable(query_hdl, 'pr_id', inv_mwb_globals.g_project_id);
    END IF;

    IF inv_mwb_globals.g_task_id IS NOT NULL THEN
      DBMS_SQL.bind_variable(query_hdl, 'ta_id', inv_mwb_globals.g_task_id);
    END IF;

    IF inv_mwb_globals.g_unit_number IS NOT NULL THEN
      DBMS_SQL.bind_variable(query_hdl, 'un_id', inv_mwb_globals.g_unit_number);
    END IF;

    /*IF inv_mwb_globals.g_site_id IS NOT NULL THEN
       dbms_sql.bind_variable(query_hdl,'site_id', inv_mwb_globals.g_site_id);
     ELSIF inv_mwb_globals.g_vendor_id is NOT NULL THEN
       dbms_sql.bind_variable(query_hdl,'vendor_id', inv_mwb_globals.g_vendor_id);
    END IF;*/
    IF (inv_mwb_globals.g_owning_qry_mode = 4)
       OR(inv_mwb_globals.g_owning_qry_mode = 3) THEN
      DBMS_SQL.bind_variable(query_hdl, 'own_org', inv_mwb_globals.g_owning_org);
    END IF;

    IF (inv_mwb_globals.g_planning_query_mode = 4)
       OR(inv_mwb_globals.g_planning_query_mode = 3) THEN
      DBMS_SQL.bind_variable(query_hdl, 'plan_org', inv_mwb_globals.g_planning_org);
    END IF;

   --ER(3338592) Changes
   IF inv_mwb_globals.g_item_description IS NOT NULL THEN
      dbms_sql.bind_variable(query_hdl, 'item_description', inv_mwb_globals.g_item_description);
   END IF;

   IF inv_mwb_globals.g_qty_from IS NOT NULL THEN
      dbms_sql.bind_variable(query_hdl, 'qty_from', inv_mwb_globals.g_qty_from);
   END IF;

   IF inv_mwb_globals.g_qty_to IS NOT NULL THEN
      dbms_sql.bind_variable(query_hdl, 'qty_to', inv_mwb_globals.g_qty_to);
   END IF;
   --End of ER(3338592) Changes

   --Bug #3411938
   IF inv_mwb_globals.g_organization_id IS NULL THEN
      IF inv_mwb_globals.g_responsibility_id  IS NOT NULL THEN
         dbms_sql.bind_variable(query_hdl, 'responsibility_id', inv_mwb_globals.g_responsibility_id );
      END IF;

      IF inv_mwb_globals.g_resp_application_id  IS NOT NULL THEN
         dbms_sql.bind_variable(query_hdl, 'resp_application_id', inv_mwb_globals.g_resp_application_id );
      END IF;
   END IF;


    DBMS_SQL.define_column(query_hdl, 1, cg_id);
    DBMS_SQL.define_column(query_hdl, 2, cg, 10);
    rows_processed  := DBMS_SQL.EXECUTE(query_hdl);

    LOOP
      -- fetch a row
      IF DBMS_SQL.fetch_rows(query_hdl) > 0 THEN
        -- fetch columns from the row
        DBMS_SQL.column_value(query_hdl, 1, cg_id);
        DBMS_SQL.column_value(query_hdl, 2, cg);

        IF j >= inv_mwb_globals.g_tree_node_low_value THEN
          x_node_tbl(i).state  := inv_mwb_globals.g_tree_node_state;
          x_node_tbl(i).DEPTH  := 1;
          x_node_tbl(i).label  := cg;
          x_node_tbl(i).icon   := 'inv_cgrp';
          x_node_tbl(i).VALUE  := TO_CHAR(cg_id);
          x_node_tbl(i).TYPE   := 'COST_GROUP';
          i                    := i + 1;
        END IF;

        EXIT WHEN j >= inv_mwb_globals.g_tree_node_high_value;
        j  := j + 1;
      ELSE
        EXIT;
      END IF;
    END LOOP;

    DBMS_SQL.close_cursor(query_hdl); -- close cursor
    x_node_value    := j;
    x_tbl_index     := i;
  EXCEPTION
    WHEN NO_DATA_FOUND THEN
      NULL;
    WHEN OTHERS THEN
      RAISE;
  END add_cgs;

  PROCEDURE add_lpns(
/*  , inv_mwb_globals.g_inserted_under_org  IN            VARCHAR2 DEFAULT 'N'*/
    x_node_value          IN OUT NOCOPY NUMBER
  , x_node_tbl            IN OUT NOCOPY fnd_apptree.node_tbl_type
  , x_tbl_index           IN OUT NOCOPY NUMBER
  ) IS
    query_str        VARCHAR2(8000);
    query_hdl        NUMBER;
    rows_processed   NUMBER;
    lpn              wms_license_plate_numbers.license_plate_number%TYPE;
    lpn_id           wms_license_plate_numbers.lpn_id%TYPE;
    item_id          wms_license_plate_numbers.inventory_item_id%TYPE;
    item             mtl_system_items_kfv.concatenated_segments%TYPE;
    select_from_str  VARCHAR2(4000);
    where_str        VARCHAR2(4000);
    i                NUMBER                                                := x_tbl_index;
    j                NUMBER                                                := x_node_value;
    is_bind_required BOOLEAN                                               := TRUE;
    table_required   VARCHAR2(200);
    is_grade_t     BOOLEAN DEFAULT FALSE; -- NSRIVAST, INVCONV
    receipt_source_code VARCHAR2(30);
    lpn_from_id     wms_license_plate_numbers.lpn_id%TYPE;
    lpn_to_id       wms_license_plate_numbers.lpn_id%TYPE;

      l_procedure_name CONSTANT VARCHAR2(30) := 'ADD_LPNS';

    l_default_status_id NUMBER; -- LPN Status Project

   BEGIN
      inv_mwb_globals.print_msg( g_pkg_name, l_procedure_name, 'Entered' );
      inv_mwb_globals.print_msg( g_pkg_name, l_procedure_name, 'Entered'||inv_mwb_globals.g_inserted_under_org);

      /* LPN Status Project */
      IF (inv_mwb_globals.g_organization_id IS NOT NULL) THEN
         IF (inv_cache.set_org_rec(inv_mwb_globals.g_organization_id)) THEN
           l_default_status_id :=  inv_cache.org_rec.default_status_id;
         END IF;
      ELSIF (inv_mwb_globals.g_tree_organization_id IS NOT NULL) THEN
         IF (inv_cache.set_org_rec(inv_mwb_globals.g_tree_organization_id)) THEN
           l_default_status_id :=  inv_cache.org_rec.default_status_id;
         END IF;
      END IF;

  IF inv_mwb_globals.g_tree_doc_type_id IS NOT NULL THEN -- If add_lpn called from node_expanded of document number.

     IF inv_mwb_globals.g_tree_doc_type_id = 1 THEN
       return;
     END IF;

      select_from_str :=
         ' SELECT DISTINCT wlpn.license_plate_number
                , wlpn.lpn_id
             FROM rcv_shipment_lines rsl
                , mtl_system_items_kfv msik
                , wms_license_plate_numbers wlpn ';

      where_str :=
         ' WHERE 1 = 1
             AND rsl.item_id = msik.inventory_item_id
             AND msik.organization_id = rsl.to_organization_id
             AND wlpn.lpn_id = rsl.asn_lpn_id
             AND rsl.to_organization_id = :to_org_id
             AND rsl.shipment_header_id = :shipment_header_id ';


      IF inv_mwb_globals.g_serial_from IS NOT NULL
      OR inv_mwb_globals.g_serial_to IS NOT NULL THEN
         select_from_str := select_from_str || ' , rcv_serials_supply rss ';
         where_str := where_str || ' AND rss.shipment_line_id = rsl.shipment_line_id  ';
      END IF;

      IF (inv_mwb_globals.g_lot_from is NOT NULL
      OR inv_mwb_globals.g_lot_to is NOT NULL) THEN
      -- for bug 8420783
      -- for bug 8414727
      --AND (inv_mwb_globals.g_serial_from IS NULL
      --OR inv_mwb_globals.g_serial_to IS NULL) THEN
      -- end of bug 8414727
      -- end of bug 8420783
         select_from_str := select_from_str || ' , rcv_lots_supply rls ';
         where_str := where_str || ' AND rls.shipment_line_id = rsl.shipment_line_id  ';
      END IF;

      IF inv_mwb_globals.g_inventory_item_id IS NOT NULL THEN
         where_str := where_str || ' AND msik.inventory_item_id  = :item_id ';
      END IF;

      -- ER(9158529 client)
      IF inv_mwb_globals.g_client_code IS NOT NULL THEN
         where_str := where_str || ' AND msik.inventory_item_id in (select DISTINCT inventory_item_id from mtl_system_items_b where wms_deploy.get_client_code(inventory_item_id) = :client_code) ';
      END IF;
      -- ER(9158529 client)

      -- ER(9158529)
      IF inv_mwb_globals.g_category_set_id IS NOT NULL THEN
         where_str := where_str || ' AND msik.inventory_item_id in '
                                        || ' (select DISTINCT inventory_item_id from mtl_item_categories '
                                        || ' where organization_id = :organization_id '
                                        || ' and category_set_id = :category_set_id '
                                        || ' and category_id = nvl(:category_id, category_id)) ' ;
      END IF;
      -- ER(9158529)

      IF inv_mwb_globals.g_tree_parent_lpn_id IS NOT NULL THEN
         where_str := where_str || ' AND rsl.asn_lpn_id  = :tree_lpn_id ';
      END IF;

      IF (inv_mwb_globals.g_lpn_from_id IS NOT NULL AND
      inv_mwb_globals.g_lpn_to_id IS NOT NULL AND
      inv_mwb_globals.g_lpn_from_id = inv_mwb_globals.g_lpn_to_id) THEN
         where_str := where_str ||' AND rsl.asn_lpn_id = :inb_lpn_from_id';
      END IF;

      IF (inv_mwb_globals.g_lpn_from_id IS NOT NULL AND
      inv_mwb_globals.g_lpn_from_id <> NVL(inv_mwb_globals.g_lpn_to_id, -1) ) THEN
         where_str := where_str ||' AND wlpn.license_plate_number >= :inb_lpn_from';
      END IF;

      IF (inv_mwb_globals.g_lpn_to_id IS NOT NULL AND
      inv_mwb_globals.g_lpn_to_id <> NVL(inv_mwb_globals.g_lpn_from_id, -1) ) THEN
         where_str := where_str ||' AND wlpn.license_plate_number <= :inb_lpn_to';
      END IF;

      IF inv_mwb_globals.g_lot_from IS NOT NULL
      AND inv_mwb_globals.g_lot_to IS NOT NULL
      AND inv_mwb_globals.g_lot_to = inv_mwb_globals.g_lot_from THEN
         where_str := where_str || ' AND rls.lot_num  = :lot_from ';
      END IF;

      IF inv_mwb_globals.g_lot_from IS NOT NULL
      AND inv_mwb_globals.g_lot_to <> inv_mwb_globals.g_lot_from THEN
         where_str := where_str || ' AND rls.lot_num  >= :lot_from ';
      END IF;

      IF inv_mwb_globals.g_lot_to IS NOT NULL
      AND inv_mwb_globals.g_lot_to <> inv_mwb_globals.g_lot_from THEN
         where_str := where_str || ' AND rls.lot_num  >= :lot_to ';
      END IF;

      IF inv_mwb_globals.g_serial_from IS NOT NULL
      AND inv_mwb_globals.g_serial_to IS NOT NULL
      AND inv_mwb_globals.g_serial_to = inv_mwb_globals.g_serial_from THEN
         where_str := where_str || ' AND rss.serial_num  = :serial_from ';
      END IF;

/* Bug 8396954, Adding below code for checking supplier_lot_number condition */
      IF inv_mwb_globals.g_supplier_lot_from IS NOT NULL
      OR inv_mwb_globals.g_supplier_lot_to IS NOT NULL THEN
         select_from_str := select_from_str || ', mtl_lot_numbers mln1 ';
        IF NOT ((inv_mwb_globals.g_lot_from IS NOT NULL
              OR inv_mwb_globals.g_lot_to IS NOT NULL )
              AND (inv_mwb_globals.g_serial_from IS NULL
              OR inv_mwb_globals.g_serial_to IS NULL)) THEN
         select_from_str := select_from_str || ' , rcv_lots_supply rls ';
         where_str := where_str || ' AND rls.shipment_line_id = rsl.shipment_line_id  ';
        END IF;

         where_str := where_str || ' AND rls.lot_num = mln1.lot_number';

                /* Bug 8396954 added below code for supplier_lot_number */
                IF (inv_mwb_globals.g_supplier_lot_from IS NOT NULL AND
                    inv_mwb_globals.g_supplier_lot_to IS NOT NULL AND
                    inv_mwb_globals.g_supplier_lot_from = inv_mwb_globals.g_supplier_lot_to) THEN
                    where_str := where_str || ' AND mln1.supplier_lot_number = :supplier_lot_from ';
                END IF;

                IF (inv_mwb_globals.g_supplier_lot_from IS NOT NULL AND
	            inv_mwb_globals.g_supplier_lot_from <> NVL(inv_mwb_globals.g_supplier_lot_to, -1) ) THEN
                    where_str := where_str || ' AND mln1.supplier_lot_number >= :supplier_lot_from ';
                END IF;

                IF (inv_mwb_globals.g_supplier_lot_to IS NOT NULL AND
	            inv_mwb_globals.g_supplier_lot_to <> NVL(inv_mwb_globals.g_supplier_lot_from, -1) ) THEN
                    where_str := where_str || ' AND mln1.supplier_lot_number <= :supplier_lot_to ';
                END IF;
                /* End of Bug 8396954 */
      END IF;
/* End of Bug 8396954 */

      IF inv_mwb_globals.g_serial_from IS NOT NULL
      AND inv_mwb_globals.g_serial_to <> inv_mwb_globals.g_serial_from THEN
         where_str := where_str || ' AND rss.serial_num  >= :serial_from ';
      END IF;

      IF inv_mwb_globals.g_serial_to IS NOT NULL
      AND inv_mwb_globals.g_serial_to <> inv_mwb_globals.g_serial_from THEN
         where_str := where_str || ' AND rss.serial_num  <= :serial_to ';
      END IF;

      IF inv_mwb_globals.g_revision IS NOT NULL THEN
         where_str := where_str || ' AND rsl.item_revision  = :item_revision ';
      END IF;

      IF inv_mwb_globals.g_inventory_item_id IS NULL
      AND inv_mwb_globals.g_item_description IS NOT NULL THEN
         where_str := where_str || ' AND msik.description like :item_description ';
      END IF;


      query_str := select_from_str || where_str;

      inv_mwb_globals.print_msg( g_pkg_name, l_procedure_name, query_str );
      inv_mwb_globals.g_last_query := query_str;

      query_hdl  := DBMS_SQL.open_cursor;
      DBMS_SQL.parse(query_hdl, query_str, DBMS_SQL.native);

      DBMS_SQL.bind_variable(query_hdl, 'to_org_id', NVL(inv_mwb_globals.g_organization_id
                                                       , inv_mwb_globals.g_tree_organization_id));
      DBMS_SQL.bind_variable(query_hdl, 'shipment_header_id', inv_mwb_globals.g_tree_doc_header_id);

      IF inv_mwb_globals.g_inventory_item_id IS NOT NULL THEN
         DBMS_SQL.bind_variable(query_hdl, 'item_id', inv_mwb_globals.g_inventory_item_id);
      END IF;

      -- ER(9158529 client)
      IF inv_mwb_globals.g_client_code IS NOT NULL THEN
         DBMS_SQL.bind_variable(query_hdl, 'client_code', inv_mwb_globals.g_client_code);
      END IF;
      -- ER(9158529 client)

      -- ER(9158529)
      IF inv_mwb_globals.g_category_set_id IS NOT NULL THEN
        DBMS_SQL.bind_variable(query_hdl, 'organization_id', NVL(inv_mwb_globals.g_organization_id, inv_mwb_globals.g_tree_organization_id));
        DBMS_SQL.bind_variable(query_hdl, 'category_set_id', inv_mwb_globals.g_category_set_id);
        DBMS_SQL.bind_variable(query_hdl, 'category_id', inv_mwb_globals.g_category_id);
      END IF;
      -- ER(9158529)

      IF inv_mwb_globals.g_tree_parent_lpn_id IS NOT NULL THEN
         DBMS_SQL.bind_variable(query_hdl, 'tree_lpn_id', inv_mwb_globals.g_tree_parent_lpn_id);
      END IF;

      IF (inv_mwb_globals.g_lpn_from_id IS NOT NULL AND
      inv_mwb_globals.g_lpn_to_id IS NOT NULL AND
      inv_mwb_globals.g_lpn_from_id = inv_mwb_globals.g_lpn_to_id) THEN
         DBMS_SQL.bind_variable(query_hdl, 'inb_lpn_from_id', inv_mwb_globals.g_lpn_from_id);
      END IF;

      IF (inv_mwb_globals.g_lpn_from_id IS NOT NULL AND
      inv_mwb_globals.g_lpn_from_id <> NVL(inv_mwb_globals.g_lpn_to_id, -1) ) THEN
         DBMS_SQL.bind_variable(query_hdl, 'inb_lpn_from', inv_mwb_globals.g_lpn_from);
      END IF;

      IF (inv_mwb_globals.g_lpn_to_id IS NOT NULL AND
      inv_mwb_globals.g_lpn_to_id <> NVL(inv_mwb_globals.g_lpn_from_id, -1) ) THEN
         DBMS_SQL.bind_variable(query_hdl, 'inb_lpn_to', inv_mwb_globals.g_lpn_to);
      END IF;

      IF inv_mwb_globals.g_lot_from IS NOT NULL
      AND inv_mwb_globals.g_lot_to IS NOT NULL
      AND inv_mwb_globals.g_lot_to = inv_mwb_globals.g_lot_from THEN
         DBMS_SQL.bind_variable(query_hdl, 'lot_from', inv_mwb_globals.g_lot_from);
      END IF;

      IF inv_mwb_globals.g_lot_from IS NOT NULL
      AND inv_mwb_globals.g_lot_to <> inv_mwb_globals.g_lot_from THEN
         DBMS_SQL.bind_variable(query_hdl, 'lot_from', inv_mwb_globals.g_lot_from);
      END IF;

      IF inv_mwb_globals.g_lot_to IS NOT NULL
      AND inv_mwb_globals.g_lot_to <> inv_mwb_globals.g_lot_from THEN
         DBMS_SQL.bind_variable(query_hdl, 'lot_to', inv_mwb_globals.g_lot_to);
      END IF;

    /* Bug 8396954 added below code for supplier_lot_number */
      IF inv_mwb_globals.g_supplier_lot_from IS NOT NULL
      OR inv_mwb_globals.g_supplier_lot_to IS NOT NULL THEN
        IF (inv_mwb_globals.g_supplier_lot_from IS NOT NULL AND
        inv_mwb_globals.g_supplier_lot_to IS NOT NULL AND
        inv_mwb_globals.g_supplier_lot_from = inv_mwb_globals.g_supplier_lot_to) THEN
             DBMS_SQL.bind_variable(query_hdl, 'supplier_lot_from', inv_mwb_globals.g_supplier_lot_from);
        END IF;

        IF (inv_mwb_globals.g_supplier_lot_from IS NOT NULL AND
            inv_mwb_globals.g_supplier_lot_from <> NVL(inv_mwb_globals.g_supplier_lot_to, -1) ) THEN
                 DBMS_SQL.bind_variable(query_hdl, 'supplier_lot_from', inv_mwb_globals.g_supplier_lot_from);
        END IF;

        IF (inv_mwb_globals.g_supplier_lot_to IS NOT NULL AND
             inv_mwb_globals.g_supplier_lot_to <> NVL(inv_mwb_globals.g_supplier_lot_from, -1) ) THEN
                 DBMS_SQL.bind_variable(query_hdl, 'supplier_lot_to', inv_mwb_globals.g_supplier_lot_to);
        END IF;
    END IF;
    /* End of Bug 8396954 */

      IF inv_mwb_globals.g_serial_from IS NOT NULL
      AND inv_mwb_globals.g_serial_to IS NOT NULL
      AND inv_mwb_globals.g_serial_to = inv_mwb_globals.g_serial_from THEN
         DBMS_SQL.bind_variable(query_hdl, 'serial_from', inv_mwb_globals.g_serial_from);
      END IF;

      IF inv_mwb_globals.g_serial_from IS NOT NULL
      AND inv_mwb_globals.g_serial_to <> inv_mwb_globals.g_serial_from THEN
         DBMS_SQL.bind_variable(query_hdl, 'serial_from', inv_mwb_globals.g_serial_from);
      END IF;

      IF inv_mwb_globals.g_serial_to IS NOT NULL
      AND inv_mwb_globals.g_serial_to <> inv_mwb_globals.g_serial_from THEN
         DBMS_SQL.bind_variable(query_hdl, 'serial_to', inv_mwb_globals.g_serial_from);
      END IF;

      IF inv_mwb_globals.g_revision IS NOT NULL THEN
         DBMS_SQL.bind_variable(query_hdl, 'item_revision', inv_mwb_globals.g_revision);
      END IF;

      IF inv_mwb_globals.g_inventory_item_id IS NULL
      AND inv_mwb_globals.g_item_description IS NOT NULL THEN
         DBMS_SQL.bind_variable(query_hdl, 'item_description', inv_mwb_globals.g_item_description);
      END IF;


    DBMS_SQL.define_column(query_hdl, 1, lpn, 30);
    DBMS_SQL.define_column(query_hdl, 2, lpn_id);

    BEGIN
      rows_processed  := DBMS_SQL.EXECUTE(query_hdl);
    EXCEPTION
    WHEN NO_DATA_FOUND THEN
      NULL;
      RETURN;
    END;

    LOOP
      -- fetch a row
      IF DBMS_SQL.fetch_rows(query_hdl) > 0 THEN
        -- fetch columns from the row
        DBMS_SQL.column_value(query_hdl, 1, lpn);
        DBMS_SQL.column_value(query_hdl, 2, lpn_id);

	IF (inv_mwb_globals.g_tree_node_type = 'LPN'
	    and inv_mwb_globals.g_tree_node_value = lpn_id) then
	   return;
	END IF;

        IF j >= inv_mwb_globals.g_tree_node_low_value THEN
          x_node_tbl(i).state  := inv_mwb_globals.g_tree_node_state;
          x_node_tbl(i).DEPTH  := 1;
          x_node_tbl(i).label  := lpn;
          x_node_tbl(i).icon   := 'inv_licn';
          x_node_tbl(i).VALUE  := TO_CHAR(lpn_id);
          x_node_tbl(i).TYPE   := 'LPN';
          i                    := i + 1;
        END IF;

        EXIT WHEN j >= inv_mwb_globals.g_tree_node_high_value;
        j  := j + 1;
      ELSE
        EXIT;
      END IF;
    END LOOP;

    DBMS_SQL.close_cursor(query_hdl); -- close cursor
    x_node_value    := j;
    x_tbl_index     := i;

    RETURN;
  END IF;






  -- NSRIVAST, INVCONV, Start
     IF  (inv_mwb_globals.g_grade_from_code IS NOT NULL OR  inv_mwb_globals.g_tree_grade_code IS NOT NULL OR inv_mwb_globals.g_grade_controlled <> 0) THEN
         is_grade_t     := TRUE ;
     END IF ;
-- NSRIVAST, INVCONV, End

    -- If attributes relating to contents of an LPN are not specified then
    -- display all the LPNs in that location with the appropriate from
    -- and to LPN criteria
    IF inv_mwb_globals.g_inventory_item_id IS NULL
       AND inv_mwb_globals.g_client_code IS NULL            -- ER(9158529 client)
       AND inv_mwb_globals.g_revision IS NULL
       AND inv_mwb_globals.g_category_set_id IS NULL        -- ER(9158529)
       AND inv_mwb_globals.g_category_id IS NULL            -- ER(9158529)
       AND inv_mwb_globals.g_parent_lot IS NULL		--BUG 7556505
       AND inv_mwb_globals.g_lot_from IS NULL
       AND inv_mwb_globals.g_lot_to IS NULL
       AND inv_mwb_globals.g_supplier_lot_from IS NULL      -- Bug 8396954
       AND inv_mwb_globals.g_supplier_lot_to IS NULL        -- Bug 8396954
       AND inv_mwb_globals.g_serial_from IS NULL
       AND inv_mwb_globals.g_serial_to IS NULL
       AND inv_mwb_globals.g_cost_group_id IS NULL
       AND inv_mwb_globals.g_status_id IS NULL
       AND inv_mwb_globals.g_tree_lot_attr_query IS NULL
       AND inv_mwb_globals.g_tree_serial_attr_query IS NULL
       AND inv_mwb_globals.g_unit_number IS NULL
       AND inv_mwb_globals.g_project_id IS NULL
       AND inv_mwb_globals.g_task_id IS NULL
       AND inv_mwb_globals.g_planning_org IS NULL
       AND inv_mwb_globals.g_owning_org IS NULL
       AND(inv_mwb_globals.g_planning_query_mode IS NULL
           OR inv_mwb_globals.g_planning_query_mode = 1)
       AND(inv_mwb_globals.g_owning_qry_mode IS NULL
           OR inv_mwb_globals.g_owning_qry_mode = 1)
       --ER(3338592) Changes
       AND inv_mwb_globals.g_item_description   IS NULL THEN
       --ER(3338592) Changes

      IF inv_mwb_globals.g_tree_parent_lpn_id IS NULL THEN
        query_str  := 'SELECT license_plate_number lpn, lpn_id, inventory_item_id ';
        query_str  := query_str || ' from wms_license_plate_numbers wln where lpn_id in ';
        query_str  := query_str || ' (select outermost_lpn_id ';
        query_str  := query_str || ' FROM wms_license_plate_numbers mol WHERE 1=1 ';

        IF inv_mwb_globals.g_tree_mat_loc_id = 2 THEN
          --Bug#3191526 add the LPNs which don't have any sub/loc association directly after org
          IF inv_mwb_globals.g_inserted_under_org = 'Y' OR inv_mwb_globals.g_inserted_under_org = 'y' THEN
            query_str  := query_str || ' AND mol.subinventory_code is null AND mol.locator_id is null ';
          END IF;
          --Bug#3191526
          query_str  := query_str || ' AND lpn_context = 3 ';
        ELSIF inv_mwb_globals.g_prepacked IS NULL THEN
          query_str  := query_str || ' AND (mol.lpn_context=1  OR mol.lpn_context=9 OR mol.lpn_context=11 ) ';
        ELSIF inv_mwb_globals.g_prepacked = 1 THEN
          query_str  := query_str || 'AND mol.lpn_context = 1 ';
        ELSIF inv_mwb_globals.g_prepacked <> 1
              AND inv_mwb_globals.g_prepacked <> 999 THEN
          query_str  := query_str || 'AND mol.lpn_context = :prepacked ';
        END IF;

        IF inv_mwb_globals.g_locator_controlled = 2 THEN
          --Bug#3191526 add the LPNs which don't have any sub/loc association directly after org
          IF inv_mwb_globals.g_inserted_under_org = 'Y' OR inv_mwb_globals.g_inserted_under_org = 'y' THEN
            --don't add the below locator id not null check
            NULL;
          ELSE
            query_str  := query_str || 'AND mol.locator_id IS NOT NULL ';
          END IF;
        ELSIF inv_mwb_globals.g_locator_controlled = 1 THEN
          query_str  := query_str || 'AND mol.locator_id IS NULL ';
        END IF;


  -- NSRIVAST, INVCONV, Start
        IF inv_mwb_globals.g_grade_from_code IS NOT NULL THEN
          query_str := query_str || ' AND grade_code = :grade_f ' ;
        END IF ;
        IF inv_mwb_globals.g_tree_grade_code  IS NOT NULL THEN
          query_str := query_str || ' AND grade_code = :grade_c ' ;
        END IF ;
   -- NSRIVAST, INVCONV, End

        IF inv_mwb_globals.g_locator_id IS NOT NULL
        OR inv_mwb_globals.g_tree_loc_id IS NOT NULL THEN
          query_str  := query_str || 'AND mol.locator_id = :loc_id ';
        END IF;

        IF inv_mwb_globals.g_subinventory_code IS NOT NULL
        OR inv_mwb_globals.g_tree_subinventory_code IS NOT NULL THEN
          query_str  := query_str || 'AND mol.subinventory_code = :sub ';
        END IF;

        IF inv_mwb_globals.g_organization_id IS NOT NULL
        OR inv_mwb_globals.g_tree_organization_id IS NOT NULL THEN
          query_str  := query_str || 'AND mol.organization_id = :org_id ';
        END IF;

        IF inv_mwb_globals.g_tree_parent_lpn_id IS NOT NULL THEN
          --bugfix#3646484 help CBO to pick the index on parent_lpn_id
          query_str := query_str || 'and mol.parent_lpn_id is not null ';
          query_str  := query_str || 'and mol.parent_lpn_id = :plpn_id ';
        END IF;

        IF inv_mwb_globals.g_lpn_from IS NOT NULL
           OR inv_mwb_globals.g_lpn_to IS NOT NULL THEN
             -- AND inv_mwb_globals.g_tree_parent_lpn_id IS NULL THEN
          IF inv_mwb_globals.g_lpn_from IS NOT NULL
             AND inv_mwb_globals.g_lpn_to IS NULL THEN
            query_str  := query_str || 'and mol.license_plate_number >= :lpn_f ';
          ELSIF inv_mwb_globals.g_lpn_from IS NULL
                AND inv_mwb_globals.g_lpn_to IS NOT NULL THEN
            query_str  := query_str || 'and mol.license_plate_number <= :lpn_t ';
          ELSIF inv_mwb_globals.g_lpn_from IS NOT NULL
                AND inv_mwb_globals.g_lpn_to IS NOT NULL THEN
              --bugfix#3646484
              IF (inv_mwb_globals.g_lpn_from = inv_mwb_globals.g_lpn_to)  THEN
              --User is querying for single LPN so converted the range query to equality query
                 query_str := query_str || 'and mol.license_plate_number = :lpn_f ';
              ELSE
               query_str  := query_str || 'and mol.license_plate_number >= :lpn_f ';
               query_str  := query_str || 'and mol.license_plate_number <= :lpn_t ';
              END IF;
          END IF;
        END IF;

        query_str  := query_str || ') GROUP BY wln.license_plate_number, wln.lpn_id, wln.inventory_item_id ';
        query_str  := query_str || 'ORDER BY wln.license_plate_number ';
      ELSE -- PARENT LPN ID IS NOT NULL -- ELSE FOR IF inv_mwb_globals.g_tree_parent_lpn_id IS NULL THEN
        query_str  := 'SELECT license_plate_number lpn, lpn_id, inventory_item_id ';
        query_str  := query_str || 'from wms_license_plate_numbers mol where 1=1 ';

        IF inv_mwb_globals.g_tree_mat_loc_id = 2 THEN
          --Bug#3191526 add the LPNs which don't have any sub/loc association directly after org
          IF inv_mwb_globals.g_inserted_under_org = 'Y'  OR inv_mwb_globals.g_inserted_under_org = 'y' THEN
            query_str  := query_str || ' AND mol.subinventory_code is null AND mol.locator_id is null ';
          END IF;
          --Bug#3191526
          query_str  := query_str || ' AND lpn_context = 3 ';
        ELSIF inv_mwb_globals.g_prepacked IS NULL THEN
          query_str  := query_str || ' AND (mol.lpn_context=1  OR mol.lpn_context=9 OR mol.lpn_context=11 ) ';
        ELSIF inv_mwb_globals.g_prepacked = 1 THEN
          query_str  := query_str || ' AND mol.lpn_context = 1 ';
        ELSIF inv_mwb_globals.g_prepacked <> 1
              AND inv_mwb_globals.g_prepacked <> 999 THEN
          query_str  := query_str || ' AND mol.lpn_context = :prepacked ';
        END IF;

        IF inv_mwb_globals.g_locator_controlled = 2 THEN
          --Bug#3191526 add the LPNs which don't have any sub/loc association directly after org
          IF inv_mwb_globals.g_inserted_under_org = 'Y' OR inv_mwb_globals.g_inserted_under_org = 'y' THEN
            --don't add the below locator id not null check
            NULL;
          ELSE
            query_str  := query_str || 'AND mol.locator_id IS NOT NULL ';
          END IF;
        ELSIF inv_mwb_globals.g_locator_controlled = 1 THEN
          query_str  := query_str || 'AND mol.locator_id IS NULL ';
        END IF;

        IF inv_mwb_globals.g_locator_id IS NOT NULL
        OR inv_mwb_globals.g_tree_loc_id IS NOT NULL THEN
          query_str  := query_str || 'AND mol.locator_id = :loc_id ';
        END IF;

  -- NSRIVAST, INVCONV, Start
        IF inv_mwb_globals.g_grade_from_code IS NOT NULL THEN
          query_str := query_str || ' AND grade_code = :grade_f ' ;
        END IF ;
        IF inv_mwb_globals.g_tree_grade_code  IS NOT NULL THEN
          query_str := query_str || ' AND grade_code = :grade_c ' ;
        END IF ;
   -- NSRIVAST, INVCONV, End

        IF inv_mwb_globals.g_subinventory_code IS NOT NULL
        OR inv_mwb_globals.g_tree_subinventory_code IS NOT NULL THEN
          query_str  := query_str || 'AND mol.subinventory_code = :sub ';
        END IF;

        IF inv_mwb_globals.g_organization_id IS NOT NULL
        OR inv_mwb_globals.g_tree_organization_id IS NOT NULL THEN
          query_str  := query_str || 'AND mol.organization_id = :org_id ';
        END IF;

        IF inv_mwb_globals.g_tree_parent_lpn_id IS NOT NULL THEN
          --bugfix#3646484 help CBO to pick the index on parent_lpn_id
          query_str := query_str || 'and mol.parent_lpn_id is not null ';
          query_str  := query_str || 'and mol.parent_lpn_id = :plpn_id ';
        END IF;

        inv_mwb_globals.print_msg(g_pkg_name, l_procedure_name, 'parent lpn id : ' ||inv_mwb_globals.g_tree_parent_lpn_id);

        IF (inv_mwb_globals.g_lpn_from IS NOT NULL
           OR inv_mwb_globals.g_lpn_to IS NOT NULL)
              AND inv_mwb_globals.g_tree_parent_lpn_id IS NULL THEN
          IF inv_mwb_globals.g_lpn_from IS NOT NULL
             AND inv_mwb_globals.g_lpn_to IS NULL THEN
            query_str  := query_str || ' and mol.license_plate_number >= :lpn_f ';
          ELSIF inv_mwb_globals.g_lpn_from IS NULL
                AND inv_mwb_globals.g_lpn_to IS NOT NULL THEN
            query_str  := query_str || ' and mol.license_plate_number <= :lpn_t ';
          ELSIF inv_mwb_globals.g_lpn_from IS NOT NULL
                AND inv_mwb_globals.g_lpn_to IS NOT NULL THEN
             --bugfix#3646484
             IF (inv_mwb_globals.g_lpn_from = inv_mwb_globals.g_lpn_to)  THEN
             --User is querying for single LPN so converted the range query to equality query
                query_str := query_str || 'and mol.license_plate_number = :lpn_f ';
             ELSE
               query_str  := query_str || ' and mol.license_plate_number >= :lpn_f ';
               query_str  := query_str || 'and mol.license_plate_number <= :lpn_t ';
             END IF;
          END IF;
        END IF;

        query_str  := query_str || ' GROUP BY mol.license_plate_number, mol.lpn_id, mol.inventory_item_id ';
        query_str  := query_str || ' ORDER BY mol.license_plate_number ';
      END IF; -- FOR  IF inv_mwb_globals.g_tree_parent_lpn_id IS NULL THEN
    ELSE -- some of the query criteria like item etc are not null. Else For IF inv_mwb_globals.g_inventory_item_id IS NULL AND  inv_mwb_globals.g_revision IS NULL AND ETC.
      IF inv_mwb_globals.g_tree_parent_lpn_id IS NULL THEN
        IF inv_mwb_globals.g_tree_mat_loc_id = 2 THEN
          table_required  := ' mtl_onhand_lpn_mwb_v mol ';
        ELSIF(inv_mwb_globals.g_status_id IS NULL) THEN
          IF (inv_mwb_globals.g_prepacked <> 1) AND
             (inv_mwb_globals.g_prepacked <> 9) AND
             (inv_mwb_globals.g_prepacked <> 11) THEN
            table_required  := ' mtl_onhand_lpn_mwb_v mol ';
               IF is_grade_t = TRUE THEN                          -- NSRIVAST, INVCONV
                   table_required  := ' mtl_onhand_new_lpn_v mol ';   -- NSRIVAST, INVCONV
               END IF;                                            -- NSRIVAST, INVCONV
          ELSE
            table_required  := ' mtl_onhand_new_lpn_mwb_v mol ';
            IF is_grade_t = TRUE THEN                          -- NSRIVAST, INVCONV
               table_required  := ' mtl_onhand_new_lpn_v mol ';   -- NSRIVAST, INVCONV
            END IF;                                            -- NSRIVAST, INVCONV
          END IF;
        ELSE
          IF (inv_mwb_globals.g_prepacked <> 1) AND
             (inv_mwb_globals.g_prepacked <> 9) AND
             (inv_mwb_globals.g_prepacked <> 11) THEN
            table_required  := ' mtl_onhand_lpn_v mol ';
               IF is_grade_t = TRUE THEN                          -- NSRIVAST, INVCONV
                   table_required  := ' mtl_onhand_new_lpn_v mol ';   -- NSRIVAST, INVCONV
               END IF;                                            -- NSRIVAST, INVCONV
          ELSE
            table_required  := ' mtl_onhand_new_lpn_v mol ';
             IF is_grade_t = TRUE THEN                          -- NSRIVAST, INVCONV
                table_required  := ' mtl_onhand_new_lpn_v mol ';   -- NSRIVAST, INVCONV
             END IF;                                            -- NSRIVAST, INVCONV
          END IF;
        END IF;

        query_str  := 'SELECT license_plate_number lpn, lpn_id, inventory_item_id ';
        query_str  := query_str || ' from wms_license_plate_numbers where lpn_id in ';
        query_str  := query_str || ' (select MOL.outermost_lpn_id ';
        query_str  := query_str || ' FROM ' || table_required;

        IF inv_mwb_globals.g_lpn_from IS NOT NULL
           OR inv_mwb_globals.g_lpn_to IS NOT NULL THEN
          query_str  := query_str || ', (select outermost_lpn_id from wms_license_plate_numbers wlpn ';
          query_str  := query_str || ' WHERE 1=1 ';

          IF inv_mwb_globals.g_tree_mat_loc_id = 2 THEN
            --Bug#3191526 add the LPNs which don't have any sub/loc association directly after org
            IF inv_mwb_globals.g_inserted_under_org = 'Y' OR inv_mwb_globals.g_inserted_under_org = 'y' THEN
              query_str  := query_str || ' AND wlpn.subinventory_code is null AND wlpn.locator_id is null ';
            END IF;
            --Bug#3191526
            query_str  := query_str || ' AND lpn_context = 3 ';
          ELSIF inv_mwb_globals.g_prepacked IS NULL THEN
            query_str  := query_str || ' AND (lpn_context=1  or lpn_context=9 or lpn_context=11 )';
          ELSIF inv_mwb_globals.g_prepacked = 1 THEN
            query_str  := query_str || 'AND lpn_context = 1 ';
          ELSIF inv_mwb_globals.g_prepacked <> 1
                AND inv_mwb_globals.g_prepacked <> 999 THEN
            query_str  := query_str || 'AND lpn_context = :prepacked ';
          END IF;

          IF inv_mwb_globals.g_locator_controlled = 2 THEN
            --Bug#3191526 add the LPNs which don't have any sub/loc association directly after org
            IF inv_mwb_globals.g_inserted_under_org = 'Y' OR inv_mwb_globals.g_inserted_under_org = 'y' THEN
              --don't add the below locator id not null check
              NULL;
            ELSE
              query_str  := query_str || 'AND wlpn.locator_id IS NOT NULL ';
            END IF;
          ELSIF inv_mwb_globals.g_locator_controlled = 1 THEN
            query_str  := query_str || 'AND wlpn.locator_id IS NULL ';
          END IF;

        IF inv_mwb_globals.g_locator_id IS NOT NULL
        OR inv_mwb_globals.g_tree_loc_id IS NOT NULL THEN
            query_str  := query_str || 'AND wlpn.locator_id = :loc_id ';
          END IF;

  -- NSRIVAST, INVCONV, Start
        IF inv_mwb_globals.g_grade_from_code IS NOT NULL THEN
          query_str := query_str || ' AND grade_code = :grade_f ' ;
        END IF ;
        IF inv_mwb_globals.g_tree_grade_code  IS NOT NULL THEN
          query_str := query_str || ' AND grade_code = :grade_c ' ;
        END IF ;
   -- NSRIVAST, INVCONV, End

        IF inv_mwb_globals.g_subinventory_code IS NOT NULL
        OR inv_mwb_globals.g_tree_subinventory_code IS NOT NULL THEN
            query_str  := query_str || 'AND wlpn.subinventory_code = :sub ';
        END IF;

        IF inv_mwb_globals.g_organization_id IS NOT NULL
        OR inv_mwb_globals.g_tree_organization_id IS NOT NULL THEN
            query_str  := query_str || 'AND wlpn.organization_id = :org_id ';
          END IF;

          IF inv_mwb_globals.g_lpn_from IS NOT NULL
             OR inv_mwb_globals.g_lpn_to IS NOT NULL THEN
            IF inv_mwb_globals.g_lpn_from IS NOT NULL
               AND inv_mwb_globals.g_lpn_to IS NULL THEN
              query_str  := query_str || ' and license_plate_number >= :lpn_f ';
            ELSIF inv_mwb_globals.g_lpn_from IS NULL
                  AND inv_mwb_globals.g_lpn_to IS NOT NULL THEN
              query_str  := query_str || ' and license_plate_number <= :lpn_t ';
            ELSIF inv_mwb_globals.g_lpn_from IS NOT NULL
                  AND inv_mwb_globals.g_lpn_to IS NOT NULL THEN
                --bugfix#3646484
                IF (inv_mwb_globals.g_lpn_from = inv_mwb_globals.g_lpn_to)  THEN
                --User is querying for single LPN so converted the range query to equality query
                   query_str := query_str || 'and license_plate_number = :lpn_f ';
                ELSE
                 query_str  := query_str || ' and license_plate_number >= :lpn_f ';
                 query_str  := query_str || ' and license_plate_number <= :lpn_t ';
                END IF;
            END IF;
          END IF;

          query_str  := query_str || 'group by wlpn.outermost_lpn_id) X ';
        END IF;

        IF (inv_mwb_globals.g_tree_lot_attr_query IS NULL AND inv_mwb_globals.g_parent_lot IS NULL
            AND inv_mwb_globals.g_supplier_lot_from IS NULL AND inv_mwb_globals.g_supplier_lot_to IS NULL)
           AND inv_mwb_globals.g_tree_serial_attr_query IS NULL THEN
          query_str  := query_str || 'WHERE 1=1 ';
        ELSIF (inv_mwb_globals.g_tree_lot_attr_query IS NULL AND inv_mwb_globals.g_parent_lot IS NULL
                AND inv_mwb_globals.g_supplier_lot_from IS NULL AND inv_mwb_globals.g_supplier_lot_to IS NULL)
              AND inv_mwb_globals.g_tree_serial_attr_query IS NOT NULL THEN
          query_str  :=
                     query_str || ', (SELECT serial_number serial_num FROM mtl_serial_numbers WHERE 1=1 ' || inv_mwb_globals.g_tree_serial_attr_query
                     || ') msn ';
          query_str  := query_str || 'WHERE msn.serial_num = serial_number ';
        ELSIF (inv_mwb_globals.g_tree_lot_attr_query IS NOT NULL OR inv_mwb_globals.g_parent_lot IS NOT NULL
                OR inv_mwb_globals.g_supplier_lot_from IS NOT NULL OR inv_mwb_globals.g_supplier_lot_to IS NOT NULL)
              AND inv_mwb_globals.g_tree_serial_attr_query IS NULL THEN
          query_str  := query_str || ', (SELECT lot_number lot_num, parent_lot_number, supplier_lot_number FROM mtl_lot_numbers WHERE 1=1 ' || inv_mwb_globals.g_tree_lot_attr_query || ') mln ';
          query_str  := query_str || 'WHERE mln.lot_num = lot_number ';
 		--BUG 7556505
		   IF inv_mwb_globals.g_parent_lot IS NOT NULL THEN
		       query_str  := query_str || ' AND mln.parent_lot_number = :parent_lot ';
	           END IF;
		--BUG 7556505
                /* Bug 8396954 added below code for supplier_lot_number */
                IF (inv_mwb_globals.g_supplier_lot_from IS NOT NULL AND
                    inv_mwb_globals.g_supplier_lot_to IS NOT NULL AND
                    inv_mwb_globals.g_supplier_lot_from = inv_mwb_globals.g_supplier_lot_to) THEN
                    query_str  := query_str || ' AND mln.supplier_lot_number = :supplier_lot_f ';
                END IF;

                IF (inv_mwb_globals.g_supplier_lot_from IS NOT NULL AND
	            inv_mwb_globals.g_supplier_lot_from <> NVL(inv_mwb_globals.g_supplier_lot_to, -1) ) THEN
                    query_str  := query_str || ' AND mln.supplier_lot_number >= :supplier_lot_f ';
                END IF;

                IF (inv_mwb_globals.g_supplier_lot_to IS NOT NULL AND
	            inv_mwb_globals.g_supplier_lot_to <> NVL(inv_mwb_globals.g_supplier_lot_from, -1) ) THEN
                    query_str  := query_str || ' AND mln.supplier_lot_number <= :supplier_lot_t ';
                END IF;
                /* End of Bug 8396954 */
        ELSIF (inv_mwb_globals.g_tree_lot_attr_query IS NOT NULL OR inv_mwb_globals.g_parent_lot IS NOT NULL
                OR inv_mwb_globals.g_supplier_lot_from IS NOT NULL OR inv_mwb_globals.g_supplier_lot_to IS NOT NULL)
              AND inv_mwb_globals.g_tree_serial_attr_query IS NOT NULL THEN
          query_str  :=
                query_str
             || ', (SELECT lot_number lot_num, parent_lot_number, supplier_lot_number FROM mtl_lot_numbers WHERE 1=1 '
             || inv_mwb_globals.g_tree_lot_attr_query
             || ') mln '
             || ', (SELECT serial_number serial_num FROM mtl_serial_numbers WHERE 1=1 '
             || inv_mwb_globals.g_tree_serial_attr_query
             || ') msn ';
          query_str  := query_str || 'WHERE mln.lot_num = lot_number ';
 		--BUG 7556505
		   IF inv_mwb_globals.g_parent_lot IS NOT NULL THEN
		       query_str  := query_str || ' AND mln.parent_lot_number = :parent_lot ';
	           END IF;
		--BUG 7556505
                /* Bug 8396954 added below code for supplier_lot_number */
                IF (inv_mwb_globals.g_supplier_lot_from IS NOT NULL AND
                    inv_mwb_globals.g_supplier_lot_to IS NOT NULL AND
                    inv_mwb_globals.g_supplier_lot_from = inv_mwb_globals.g_supplier_lot_to) THEN
                    query_str  := query_str || ' AND mln.supplier_lot_number = :supplier_lot_f ';
                END IF;

                IF (inv_mwb_globals.g_supplier_lot_from IS NOT NULL AND
	            inv_mwb_globals.g_supplier_lot_from <> NVL(inv_mwb_globals.g_supplier_lot_to, -1) ) THEN
                    query_str  := query_str || ' AND mln.supplier_lot_number >= :supplier_lot_f ';
                END IF;

                IF (inv_mwb_globals.g_supplier_lot_to IS NOT NULL AND
	            inv_mwb_globals.g_supplier_lot_to <> NVL(inv_mwb_globals.g_supplier_lot_from, -1) ) THEN
                    query_str  := query_str || ' AND mln.supplier_lot_number <= :supplier_lot_t ';
                END IF;
                /* End of Bug 8396954 */
          query_str  := query_str || 'AND msn.serial_num = serial_number ';
        END IF;

        IF inv_mwb_globals.g_project_id IS NOT NULL THEN
          query_str  := query_str || ' AND project_id = :pr_id ';
        END IF;

        IF inv_mwb_globals.g_task_id IS NOT NULL THEN
          query_str  := query_str || ' AND task_id = :ta_id ';
        END IF;

        IF inv_mwb_globals.g_unit_number IS NOT NULL THEN
          query_str  := query_str || ' AND unit_number=:un_id ';
        END IF;

        /*IF inv_mwb_globals.g_site_id IS NOT NULL THEN
           query_str := query_str || ' AND PLANNING_TP_TYPE = 1 ';
           query_str := query_str || ' AND planning_organization_id = :site_id ' ;
         ELSIF inv_mwb_globals.g_vendor_id is NOT NULL THEN
           query_str := query_str || ' AND  PLANNING_TP_TYPE = 1 ';
           query_str := query_str || ' AND  planning_organization_id in ';
           query_str := query_str || ' (select vendor_site_id from po_vendor_sites_all ';
           query_str := query_str || '  where vendor_id = :vendor_id )';
        END IF;*/
        IF (inv_mwb_globals.g_owning_qry_mode = 4) THEN
          query_str  := query_str || ' AND owning_organization_id = :own_org ';
          query_str  := query_str || ' AND owning_tp_type = 2 ';
        ELSIF(inv_mwb_globals.g_owning_qry_mode = 3) THEN
          query_str  := query_str || ' AND owning_organization_id = :own_org ';
          query_str  := query_str || ' AND owning_tp_type = 1 ';
        ELSIF(inv_mwb_globals.g_owning_qry_mode = 2) THEN
          query_str  := query_str || ' AND owning_tp_type = 1 ';
        END IF;

        IF (inv_mwb_globals.g_planning_query_mode = 4) THEN
          query_str  := query_str || ' AND planning_organization_id = :plan_org ';
          query_str  := query_str || ' AND planning_tp_type = 2 ';
        ELSIF(inv_mwb_globals.g_planning_query_mode = 3) THEN
          query_str  := query_str || ' AND planning_organization_id = :plan_org ';
          query_str  := query_str || ' AND planning_tp_type = 1 ';
        ELSIF(inv_mwb_globals.g_planning_query_mode = 2) THEN
          query_str  := query_str || ' AND planning_tp_type = 1 ';
        END IF;

        IF inv_mwb_globals.g_locator_id IS NOT NULL
        OR inv_mwb_globals.g_tree_loc_id IS NOT NULL THEN
          query_str  := query_str || 'AND mol.locator_id = :loc_id ';
        END IF;

        IF inv_mwb_globals.g_subinventory_code IS NOT NULL
        OR inv_mwb_globals.g_tree_subinventory_code IS NOT NULL THEN
            query_str  := query_str || 'AND mol.subinventory_code = :sub ';
        END IF;

        IF inv_mwb_globals.g_organization_id IS NOT NULL
        OR inv_mwb_globals.g_tree_organization_id IS NOT NULL THEN
          query_str  := query_str || 'AND mol.organization_id = :org_id ';
        END IF;

        /*LPN Status Project */
	IF (l_default_status_id is not null) THEN
          IF inv_mwb_globals.g_status_id IS NOT NULL THEN
 	    query_str  := query_str || 'AND onhand_status_id = :st_id ';
	  END IF;
	ELSE
          IF inv_mwb_globals.g_status_id IS NOT NULL THEN
            query_str  := query_str || 'AND (subinventory_status_id = :st_id or locator_status_id = :st_id or ';
            query_str  := query_str || 'lot_status_id = :st_id or serial_status_id = :st_id) ';
          END IF;
	END IF;
	/*End of fix for LPN Status Project */

        IF inv_mwb_globals.g_lot_from IS NOT NULL THEN
          query_str  := query_str || 'AND lot_number >= :lot_f ';
        END IF;

        IF inv_mwb_globals.g_lot_to IS NOT NULL THEN
          query_str  := query_str || 'AND lot_number <= :lot_t ';
        END IF;

        -- NSRIVAST, INVCONV, Start
        IF inv_mwb_globals.g_grade_from_code IS NOT NULL THEN
                query_str := query_str || ' AND grade_code = :grade_f ' ;
        END IF ;
        IF inv_mwb_globals.g_tree_grade_code  IS NOT NULL THEN
                  query_str := query_str || ' AND grade_code = :grade_c ' ;
        END IF ;
        -- NSRIVAST, INVCONV, End

        IF inv_mwb_globals.g_cost_group_id IS NOT NULL THEN
          query_str  := query_str || 'AND cost_group_id = :cg_id ';
        END IF;

        IF inv_mwb_globals.g_revision IS NOT NULL THEN
          query_str  := query_str || 'AND revision = :rev ';
        END IF;

        IF inv_mwb_globals.g_serial_from IS NOT NULL THEN
          query_str  := query_str || 'AND serial_number >= :serial_f ';
        END IF;

        IF inv_mwb_globals.g_serial_to IS NOT NULL THEN
          query_str  := query_str || 'AND serial_number <= :serial_t ';
        END IF;

        IF inv_mwb_globals.g_tree_mat_loc_id = 2 THEN
          --Bug#3191526 add the LPNs which don't have any sub/loc association directly after org
          IF inv_mwb_globals.g_inserted_under_org = 'Y' OR inv_mwb_globals.g_inserted_under_org = 'y' THEN
                query_str  := query_str || ' AND subinventory_code is null AND locator_id is null ';
          END IF;
          --Bug#3191526
          query_str  := query_str || ' AND lpn_context = 3 ';
        ELSIF inv_mwb_globals.g_prepacked IS NULL THEN
          query_str  := query_str || ' AND (lpn_context=1  or lpn_context=9 or lpn_context=11 ) ';
        ELSIF inv_mwb_globals.g_prepacked = 1 THEN
          query_str  := query_str || 'AND lpn_context = 1 ';
        ELSIF inv_mwb_globals.g_prepacked <> 1
              AND inv_mwb_globals.g_prepacked <> 999 THEN
          query_str  := query_str || 'AND lpn_context = :prepacked ';
        END IF;

        IF inv_mwb_globals.g_lpn_from IS NOT NULL
           OR inv_mwb_globals.g_lpn_to IS NOT NULL THEN
          query_str  := query_str || 'AND MOL.outermost_lpn_id= X.outermost_lpn_id ';
        END IF;

        IF inv_mwb_globals.g_inventory_item_id IS NOT NULL THEN
          query_str  := query_str || 'AND mol.inventory_item_id = :item_id ';
        END IF;

        -- ER(9158529 client)
        IF inv_mwb_globals.g_client_code IS NOT NULL THEN
          query_str := query_str || ' AND mol.inventory_item_id in (select DISTINCT inventory_item_id from mtl_system_items_b where wms_deploy.get_client_code(inventory_item_id) = :client_code) ';
        END IF;
        -- ER(9158529 client)

        -- ER(9158529)
        IF inv_mwb_globals.g_category_set_id IS NOT NULL THEN
          query_str := query_str || ' AND mol.inventory_item_id in '
                                        || ' (select DISTINCT inventory_item_id from mtl_item_categories '
                                        || ' where organization_id = :organization_id '
                                        || ' and category_set_id = :category_set_id '
                                        || ' and category_id = nvl(:category_id, category_id)) ' ;
        END IF;
        -- ER(9158529)

        IF inv_mwb_globals.g_locator_controlled = 2 THEN
          --Bug#3191526 add the LPNs which don't have any sub/loc association directly after org
          IF inv_mwb_globals.g_inserted_under_org = 'Y' OR inv_mwb_globals.g_inserted_under_org = 'y' THEN
            --don't add the below locator id not null check
            NULL;
          ELSE
            query_str  := query_str || 'AND locator_id IS NOT NULL ';
          END IF;
        ELSIF inv_mwb_globals.g_locator_controlled = 1 THEN
          query_str  := query_str || 'AND locator_id IS NULL ';
        END IF;

        IF inv_mwb_globals.g_locator_id IS NOT NULL
        OR inv_mwb_globals.g_tree_loc_id IS NOT NULL THEN
          query_str  := query_str || 'AND locator_id = :loc_id ';
        END IF;

        --ER(3338592) Changes
        IF inv_mwb_globals.g_item_description IS NOT NULL THEN
           query_str := query_str || ' AND item_description LIKE :item_description ';
        END IF;
        --ER(3338592) Changes

        IF inv_mwb_globals.g_subinventory_code IS NOT NULL
        OR inv_mwb_globals.g_tree_subinventory_code IS NOT NULL THEN
          query_str  := query_str || 'AND subinventory_code = :sub ';
        END IF;

        IF inv_mwb_globals.g_organization_id IS NOT NULL
        OR inv_mwb_globals.g_tree_organization_id IS NOT NULL THEN
          query_str  := query_str || 'AND organization_id = :org_id ';
        END IF;

        IF inv_mwb_globals.g_tree_parent_lpn_id IS NULL THEN
          query_str  := query_str || ') GROUP BY license_plate_number, lpn_id, inventory_item_id ';
          query_str  := query_str || 'ORDER BY license_plate_number ';
        ELSE
          query_str  := query_str || 'GROUP BY lpn, MOL.lpn_id, X.inventory_item_id ';
          query_str  := query_str || 'ORDER BY lpn ';
        END IF;
      ELSE   -- comes here if query criteria contains item serial and parent lpn is there.
           -- connect by is delibarately removed from here as it is affecting performance.
           -- For details see Material workbech performance hld doc
        query_str         := query_str || ' select license_plate_number lpn, lpn_id, inventory_item_id from wms_license_plate_numbers ';
        query_str         := query_str || ' WHERE parent_lpn_id = :plpn_id ';

        IF inv_mwb_globals.g_tree_mat_loc_id = 2 THEN
          --Bug#3191526 add the LPNs which don't have any sub/loc association directly after org
          IF inv_mwb_globals.g_inserted_under_org = 'Y' OR inv_mwb_globals.g_inserted_under_org = 'y' THEN
             query_str  := query_str || ' AND subinventory_code is null AND locator_id is null ';
          END IF;
          --Bug#3191526
          query_str  := query_str || ' AND lpn_context = 3 ';
        ELSIF inv_mwb_globals.g_prepacked IS NULL THEN
          query_str  := query_str || ' AND (lpn_context=1 or lpn_context=9 or lpn_context=11 ) ';
        ELSIF inv_mwb_globals.g_prepacked = 1 THEN
          query_str  := query_str || 'AND lpn_context = 1 ';
        ELSIF inv_mwb_globals.g_prepacked <> 1
              AND inv_mwb_globals.g_prepacked <> 999 THEN
          query_str  := query_str || 'AND lpn_context = :prepacked ';
        END IF;

        inv_trx_util_pub.trace(query_str, 'Material Workbench :- ADD LPNs', 9);
        --trace1('QUERY STR ' || query_str, 'add_lpns', 9);
        inv_mwb_globals.print_msg( g_pkg_name, l_procedure_name, query_str );
        inv_mwb_globals.g_last_query := query_str;
        query_hdl         := DBMS_SQL.open_cursor;
        DBMS_SQL.parse(query_hdl, query_str, DBMS_SQL.native);
        DBMS_SQL.bind_variable(query_hdl, 'plpn_id', inv_mwb_globals.g_tree_parent_lpn_id);

        IF inv_mwb_globals.g_prepacked <> 1
           AND inv_mwb_globals.g_prepacked <> 999
           AND inv_mwb_globals.g_prepacked IS NOT NULL THEN
          DBMS_SQL.bind_variable(query_hdl, 'prepacked', inv_mwb_globals.g_prepacked);
        END IF;

        is_bind_required  := FALSE;
      END IF;
    END IF;

    IF (is_bind_required = TRUE) THEN
            -- Enable this during debugging
--        inv_trx_util_pub.trace(query_str, 'ADD LPNs Material Workbench :', 9);
             --trace1(query_str, 'add_lpns', 9);

      inv_mwb_globals.print_msg( g_pkg_name, l_procedure_name, query_str );
      inv_mwb_globals.g_last_query := query_str;
      query_hdl  := DBMS_SQL.open_cursor;
      DBMS_SQL.parse(query_hdl, query_str, DBMS_SQL.native);


      IF inv_mwb_globals.g_tree_organization_id IS NOT NULL THEN
        DBMS_SQL.bind_variable(query_hdl, 'org_id', inv_mwb_globals.g_tree_organization_id);
      ELSIF inv_mwb_globals.g_organization_id IS NOT NULL THEN
        DBMS_SQL.bind_variable(query_hdl, 'org_id', inv_mwb_globals.g_organization_id);
      END IF;

      IF inv_mwb_globals.g_tree_subinventory_code IS NOT NULL THEN
        DBMS_SQL.bind_variable(query_hdl, 'sub', inv_mwb_globals.g_tree_subinventory_code);
      ELSIF inv_mwb_globals.g_subinventory_code IS NOT NULL THEN
        DBMS_SQL.bind_variable(query_hdl, 'sub', inv_mwb_globals.g_subinventory_code);
      END IF;

      IF inv_mwb_globals.g_tree_loc_id IS NOT NULL THEN
        DBMS_SQL.bind_variable(query_hdl, 'loc_id', inv_mwb_globals.g_tree_loc_id);
      ELSIF inv_mwb_globals.g_locator_id IS NOT NULL THEN
        DBMS_SQL.bind_variable(query_hdl, 'loc_id', inv_mwb_globals.g_locator_id);
      END IF;

      IF inv_mwb_globals.g_inventory_item_id IS NOT NULL THEN
        DBMS_SQL.bind_variable(query_hdl, 'item_id', inv_mwb_globals.g_inventory_item_id);
      END IF;

      -- ER(9158529 client)
      IF inv_mwb_globals.g_client_code IS NOT NULL THEN
        DBMS_SQL.bind_variable(query_hdl, 'client_code', inv_mwb_globals.g_client_code);
      END IF;
      -- ER(9158529 client)

      -- ER(9158529)
      IF inv_mwb_globals.g_category_set_id IS NOT NULL THEN
        DBMS_SQL.bind_variable(query_hdl, 'organization_id', NVL(inv_mwb_globals.g_organization_id, inv_mwb_globals.g_tree_organization_id));
        DBMS_SQL.bind_variable(query_hdl, 'category_set_id', inv_mwb_globals.g_category_set_id);
        DBMS_SQL.bind_variable(query_hdl, 'category_id', inv_mwb_globals.g_category_id);
      END IF;
      -- ER(9158529)

      IF inv_mwb_globals.g_revision IS NOT NULL THEN
        DBMS_SQL.bind_variable(query_hdl, 'rev', inv_mwb_globals.g_revision);
      END IF;

      IF inv_mwb_globals.g_cost_group_id IS NOT NULL THEN
        DBMS_SQL.bind_variable(query_hdl, 'cg_id', inv_mwb_globals.g_cost_group_id);
      END IF;

    --BUG 7556505
    IF inv_mwb_globals.g_parent_lot IS NOT NULL THEN
      DBMS_SQL.bind_variable(query_hdl, 'parent_lot', inv_mwb_globals.g_parent_lot);
    END IF;
    --BUG 7556505

      IF inv_mwb_globals.g_lot_from IS NOT NULL THEN
        DBMS_SQL.bind_variable(query_hdl, 'lot_f', inv_mwb_globals.g_lot_from);
      END IF;

      IF inv_mwb_globals.g_lot_to IS NOT NULL THEN
        DBMS_SQL.bind_variable(query_hdl, 'lot_t', inv_mwb_globals.g_lot_to);
      END IF;

    /* Bug 8396954 added below code for supplier_lot_number */
    IF (inv_mwb_globals.g_supplier_lot_from IS NOT NULL AND
    inv_mwb_globals.g_supplier_lot_to IS NOT NULL AND
    inv_mwb_globals.g_supplier_lot_from = inv_mwb_globals.g_supplier_lot_to) THEN
         DBMS_SQL.bind_variable(query_hdl, 'supplier_lot_f', inv_mwb_globals.g_supplier_lot_from);
    END IF;

    IF (inv_mwb_globals.g_supplier_lot_from IS NOT NULL AND
        inv_mwb_globals.g_supplier_lot_from <> NVL(inv_mwb_globals.g_supplier_lot_to, -1) ) THEN
          DBMS_SQL.bind_variable(query_hdl, 'supplier_lot_f', inv_mwb_globals.g_supplier_lot_from);
    END IF;

    IF (inv_mwb_globals.g_supplier_lot_to IS NOT NULL AND
         inv_mwb_globals.g_supplier_lot_to <> NVL(inv_mwb_globals.g_supplier_lot_from, -1) ) THEN
          DBMS_SQL.bind_variable(query_hdl, 'supplier_lot_t', inv_mwb_globals.g_supplier_lot_to);
    END IF;
    /* End of Bug 8396954 */

   -- NSRIVAST, INVCONV, Start
      IF inv_mwb_globals.g_grade_from_code IS NOT NULL THEN
        DBMS_SQL.bind_variable(query_hdl, 'grade_f',inv_mwb_globals.g_grade_from_code );
      END IF;
      IF inv_mwb_globals.g_tree_grade_code IS NOT NULL THEN
        DBMS_SQL.bind_variable(query_hdl, 'grade_c', inv_mwb_globals.g_tree_grade_code);
      END IF;
  -- NSRIVAST, INVCONV, End

      IF inv_mwb_globals.g_serial_from IS NOT NULL THEN
        DBMS_SQL.bind_variable(query_hdl, 'serial_f', inv_mwb_globals.g_serial_from);
      END IF;

      IF inv_mwb_globals.g_serial_to IS NOT NULL THEN
        DBMS_SQL.bind_variable(query_hdl, 'serial_t', inv_mwb_globals.g_serial_to);
      END IF;

      IF inv_mwb_globals.g_tree_parent_lpn_id IS NOT NULL THEN
        DBMS_SQL.bind_variable(query_hdl, 'plpn_id', inv_mwb_globals.g_tree_parent_lpn_id);
      END IF;

      --bugfix#3646484
      IF ((inv_mwb_globals.g_lpn_from IS NOT NULL) AND (inv_mwb_globals.g_lpn_to IS NOT NULL)
           AND (inv_mwb_globals.g_lpn_from = inv_mwb_globals.g_lpn_to))
           AND inv_mwb_globals.g_tree_parent_lpn_id IS NULL THEN
      --User is querying for single LPN so converted the range query to equality query
      --So it is enought to bind the from lpn alone
         dbms_sql.bind_variable(query_hdl, 'lpn_f', inv_mwb_globals.g_lpn_from);
      ELSE
         IF inv_mwb_globals.g_lpn_from IS NOT NULL
         AND inv_mwb_globals.g_tree_parent_lpn_id IS NULL THEN
           DBMS_SQL.bind_variable(query_hdl, 'lpn_f', inv_mwb_globals.g_lpn_from);
         END IF;

         IF inv_mwb_globals.g_lpn_to IS NOT NULL
         AND inv_mwb_globals.g_tree_parent_lpn_id IS NULL THEN
           DBMS_SQL.bind_variable(query_hdl, 'lpn_t', inv_mwb_globals.g_lpn_to);
         END IF;
      END IF;

      IF inv_mwb_globals.g_status_id IS NOT NULL THEN
        DBMS_SQL.bind_variable(query_hdl, 'st_id', inv_mwb_globals.g_status_id);
      END IF;

      IF inv_mwb_globals.g_prepacked <> 1
         AND inv_mwb_globals.g_prepacked <> 999
         AND inv_mwb_globals.g_prepacked IS NOT NULL THEN
        DBMS_SQL.bind_variable(query_hdl, 'prepacked', inv_mwb_globals.g_prepacked);
      END IF;

      IF inv_mwb_globals.g_mln_context_code IS NOT NULL THEN
        DBMS_SQL.bind_variable(query_hdl, 'mln_context', inv_mwb_globals.g_mln_context_code);
      END IF;

      IF inv_mwb_globals.g_project_id IS NOT NULL THEN
        DBMS_SQL.bind_variable(query_hdl, 'pr_id', inv_mwb_globals.g_project_id);
      END IF;

      IF inv_mwb_globals.g_task_id IS NOT NULL THEN
        DBMS_SQL.bind_variable(query_hdl, 'ta_id', inv_mwb_globals.g_task_id);
      END IF;

      IF inv_mwb_globals.g_unit_number IS NOT NULL THEN
        DBMS_SQL.bind_variable(query_hdl, 'un_id', inv_mwb_globals.g_unit_number);
      END IF;

      /*IF inv_mwb_globals.g_site_id IS NOT NULL THEN
         dbms_sql.bind_variable(query_hdl,'site_id', inv_mwb_globals.g_site_id);
       ELSIF inv_mwb_globals.g_vendor_id is NOT NULL THEN
         dbms_sql.bind_variable(query_hdl,'vendor_id', inv_mwb_globals.g_vendor_id);
      END IF;*/
      IF (inv_mwb_globals.g_owning_qry_mode = 4)
         OR(inv_mwb_globals.g_owning_qry_mode = 3) THEN
        DBMS_SQL.bind_variable(query_hdl, 'own_org', inv_mwb_globals.g_owning_org);
      END IF;

      IF (inv_mwb_globals.g_planning_query_mode = 4)
         OR(inv_mwb_globals.g_planning_query_mode = 3) THEN
        DBMS_SQL.bind_variable(query_hdl, 'plan_org', inv_mwb_globals.g_planning_org);
      END IF;

      --ER(3338592) Changes
      IF inv_mwb_globals.g_item_description IS NOT NULL THEN
         dbms_sql.bind_variable(query_hdl, 'item_description', inv_mwb_globals.g_item_description);
      END IF;

      IF receipt_source_code IS NOT NULL THEN
         dbms_sql.bind_variable(query_hdl, 'receipt_source_code', receipt_source_code);
      END IF;

    END IF;

    DBMS_SQL.define_column(query_hdl, 1, lpn, 30);
    DBMS_SQL.define_column(query_hdl, 2, lpn_id);
    DBMS_SQL.define_column(query_hdl, 3, item_id);
    rows_processed  := DBMS_SQL.EXECUTE(query_hdl);

    LOOP
      -- fetch a row
      IF DBMS_SQL.fetch_rows(query_hdl) > 0 THEN
        -- fetch columns from the row
        DBMS_SQL.column_value(query_hdl, 1, lpn);
        DBMS_SQL.column_value(query_hdl, 2, lpn_id);
        DBMS_SQL.column_value(query_hdl, 3, item_id);
        inv_mwb_globals.print_msg( g_pkg_name, l_procedure_name, 'outside if loop to add lpns before query' );
		IF item_id IS NOT NULL
		   AND item_id <> 0 THEN
		  item  := ' (' || inv_mwb_tree1.GET_ITEM(item_id, NVL(inv_mwb_globals.g_tree_organization_id, inv_mwb_globals.g_organization_id ))|| ')';		-- Bug 6350236
		ELSE
		  item  := '';
		END IF;
        inv_mwb_globals.print_msg( g_pkg_name, l_procedure_name, 'outside if loop to add lpns' );
        IF j >= inv_mwb_globals.g_tree_node_low_value THEN
        inv_mwb_globals.print_msg( g_pkg_name, l_procedure_name, 'inside if loop to add lpns' );
        inv_mwb_globals.print_msg( g_pkg_name, l_procedure_name, 'lpn:'||lpn );
          x_node_tbl(i).state  := inv_mwb_globals.g_tree_node_state;
          x_node_tbl(i).DEPTH  := 1;
          x_node_tbl(i).label  := lpn || item;
          x_node_tbl(i).icon   := 'inv_licn';
          x_node_tbl(i).VALUE  := TO_CHAR(lpn_id);
          x_node_tbl(i).TYPE   := 'LPN';
          i                    := i + 1;
        END IF;

        EXIT WHEN j >= inv_mwb_globals.g_tree_node_high_value;
        j  := j + 1;
      ELSE
        EXIT;
      END IF;
    END LOOP;

    DBMS_SQL.close_cursor(query_hdl); -- close cursor
    x_node_value    := j;
    x_tbl_index     := i;
  EXCEPTION
    WHEN NO_DATA_FOUND THEN
      NULL;
    WHEN OTHERS THEN
      RAISE;
  END add_lpns;

  PROCEDURE add_items(
  /*, inv_mwb_globals.g_inserted_under_org  IN            VARCHAR2 DEFAULT 'N'*/
    x_node_value          IN OUT NOCOPY NUMBER
  , x_node_tbl            IN OUT NOCOPY fnd_apptree.node_tbl_type
  , x_tbl_index           IN OUT NOCOPY NUMBER
  ) IS
    query_str      VARCHAR2(10000);
    subquery_str   varchar2(3000);
    query_hdl      NUMBER;
    rows_processed NUMBER;
    item_id        mtl_system_items_kfv.inventory_item_id%TYPE;
    item           mtl_system_items_kfv.concatenated_segments%TYPE;
    i              NUMBER                                            := x_tbl_index;
    j              NUMBER                                            := x_node_value;
    table_required VARCHAR2(300);
    receipt_source_code VARCHAR2(30);

    group_str      VARCHAR2(10000) ;
    having_str     VARCHAR2(10000) := ' HAVING 1=1 ';

    select_str     VARCHAR2(10000) ;
    where_str      VARCHAR2(10000) ;

    is_grade_t     BOOLEAN DEFAULT FALSE ; -- NSRIVAST, INVCONV
    lpn_from_id     wms_license_plate_numbers.lpn_id%TYPE;
    lpn_to_id       wms_license_plate_numbers.lpn_id%TYPE;

    l_procedure_name CONSTANT VARCHAR2(30) := 'ADD_ITEMS';

    l_default_status_id NUMBER; -- Onhand Material Status Support

   BEGIN

      IF inv_mwb_globals.g_view_by IN ('SERIAL','LOT') THEN
         inv_mwb_globals.g_containerized := NULL;
      END IF;

      -- Onhand Material Status Support
      if (inv_mwb_globals.g_organization_id is not null) then
         if (inv_cache.set_org_rec(inv_mwb_globals.g_organization_id)) then
           l_default_status_id :=  inv_cache.org_rec.default_status_id;
         end if;
      elsif (inv_mwb_globals.g_tree_organization_id is not null) then
         if (inv_cache.set_org_rec(inv_mwb_globals.g_tree_organization_id)) then
           l_default_status_id :=  inv_cache.org_rec.default_status_id;
         end if;
      end if;

      inv_mwb_globals.print_msg( g_pkg_name, l_procedure_name, 'Entered with node type : '||inv_mwb_globals.g_tree_node_type );
/*
      IF inv_mwb_globals.g_tree_mat_loc_id = 2 THEN
         inv_mwb_globals.g_prepacked := NULL;
         inv_mwb_globals.g_inserted_under_org := 1;
         inv_mwb_globals.g_containerized := 1;
         IF inv_mwb_globals.g_tree_loc_id IS NOT NULL THEN
            inv_mwb_globals.g_locator_controlled := 2;
         ELSE
            inv_mwb_globals.g_locator_controlled := 1;
         END IF;
      END IF;


      IF inv_mwb_globals.g_tree_node_type = 'SUB'
      AND inv_mwb_globals.g_tree_mat_loc_id = 1 THEN
            inv_mwb_globals.g_locator_controlled := 1;
      ELSE
            inv_mwb_globals.g_locator_controlled := 2;
      END IF;
*/
      inv_mwb_globals.print_msg( g_pkg_name, l_procedure_name, 'Entered' );

   IF inv_mwb_globals.g_tree_doc_type_id IS NOT NULL THEN
      IF inv_mwb_globals.g_tree_doc_type_id = 1   -- Purchase Order
      AND inv_mwb_globals.g_source_org_id IS NULL
      AND inv_mwb_globals.g_internal_order_id IS NULL
      AND inv_mwb_globals.g_shipment_header_id_interorg IS NULL
      AND inv_mwb_globals.g_req_header_id IS NULL THEN

         -- CLM project, bug 9403291
         query_str := ' SELECT distinct msik.concatenated_segments
                             , msik.inventory_item_id
                          FROM po_headers_trx_v pha
                             , po_lines_trx_v pla
                             , mtl_supply ms
                             , mtl_system_items_kfv msik
                         WHERE pha.po_header_id(+) = ms.po_header_id
                           AND pla.po_line_id(+) = ms.po_line_id
                           AND ms.destination_type_code = ''INVENTORY''
                           AND ms.item_id = msik.inventory_item_id
                           AND ms.to_organization_id = msik.organization_id
                           AND ms.supply_type_code IN (''PO'',''SHIPMENT'')
                           AND pha.segment1 IS NOT NULL';


         IF inv_mwb_globals.g_vendor_item IS NOT NULL THEN
            query_str := query_str || ' AND pla.vendor_product_num = :inb_vendor_item ';
         END IF;

         inv_mwb_globals.print_msg( g_pkg_name, l_procedure_name, query_str );

         IF inv_mwb_globals.g_cost_group_id IS NOT NULL THEN
            query_str := query_str || ' AND ms.cost_group_id = :inb_cost_group_id ';
         END IF;

         IF (inv_mwb_globals.g_expected_from_date IS NOT NULL AND
            inv_mwb_globals.g_expected_to_date IS NOT NULL AND
            inv_mwb_globals.g_expected_from_date = inv_mwb_globals.g_expected_to_date) THEN
               query_str := query_str || ' AND ms.expected_delivery_date = :inb_from_date';
         END IF;

         IF inv_mwb_globals.g_expected_from_date IS NOT NULL THEN
            query_str := query_str || ' AND ms.expected_delivery_date  >= :inb_from_date';
         END IF;

         IF inv_mwb_globals.g_expected_to_date IS NOT NULL THEN
            query_str := query_str || ' AND ms.expected_delivery_date  <= :inb_to_date';
         END IF;

         inv_mwb_globals.print_msg( g_pkg_name, l_procedure_name, query_str );

         IF inv_mwb_globals.g_organization_id IS NOT NULL THEN
            query_str := query_str || ' AND ms.to_organization_id = :inb_to_org_id ';
         END IF;

         IF inv_mwb_globals.g_inventory_item_id IS NOT NULL THEN
            query_str := query_str || ' AND ms.item_id = :inb_item_id ';
         END IF;

        -- ER(9158529 client)
        IF inv_mwb_globals.g_client_code IS NOT NULL THEN
           query_str := query_str || ' AND ms.item_id in (select DISTINCT inventory_item_id from mtl_system_items_b where wms_deploy.get_client_code(inventory_item_id) = :inb_client_code) ';
        END IF;
        -- ER(9158529 client)

         -- ER(9158529)
         IF inv_mwb_globals.g_category_set_id IS NOT NULL THEN
            query_str := query_str || ' AND ms.item_id in '
                                        || ' (select DISTINCT inventory_item_id from mtl_item_categories '
                                        || ' where organization_id = :inb_to_organization_id '
                                        || ' and category_set_id = :inb_category_set_id '
                                        || ' and category_id = nvl(:inb_category_id, category_id)) ' ;
         END IF;
         -- ER(9158529)

         IF inv_mwb_globals.g_inventory_item_id IS NULL
         AND inv_mwb_globals.g_item_description IS NOT NULL THEN
            query_str := query_str || ' AND msik.description like :inb_item_description ';
         END IF;

         IF inv_mwb_globals.g_po_header_id IS NOT NULL THEN
            query_str := query_str || ' AND pha.po_header_id = :inb_po_header_id ';
         END IF;

         IF inv_mwb_globals.g_tree_doc_header_id IS NOT NULL THEN
            query_str := query_str || ' AND pha.po_header_id = :inb_doc_header_id ';
         END IF;

         inv_mwb_globals.print_msg( g_pkg_name, l_procedure_name, query_str );

         IF  inv_mwb_globals.g_po_release_id IS NOT NULL THEN
            query_str := query_str || ' AND ms.po_release_id = :inb_po_release_id ';
         END IF;

         IF inv_mwb_globals.g_vendor_id IS NOT NULL THEN
            query_str := query_str || ' AND pha.vendor_id = :inb_vendor_id ';
            IF inv_mwb_globals.g_vendor_site_id IS NOT NULL THEN
               query_str := query_str || ' AND pha.vendor_site_id = :inb_vendor_site_id ';
            END IF;
         END IF;

         query_str := query_str || ' ORDER BY msik.concatenated_segments ';

         inv_mwb_globals.print_msg( g_pkg_name, l_procedure_name, query_str );

         query_hdl  := DBMS_SQL.open_cursor;
         DBMS_SQL.parse(query_hdl, query_str, DBMS_SQL.native);

         IF inv_mwb_globals.g_vendor_item IS NOT NULL THEN
            DBMS_SQL.bind_variable(query_hdl, 'inb_vendor_item', inv_mwb_globals.g_vendor_item);
         END IF;

         IF inv_mwb_globals.g_cost_group_id IS NOT NULL THEN
            DBMS_SQL.bind_variable(query_hdl, 'inb_cost_group_id', inv_mwb_globals.g_cost_group_id);
         END IF;

         IF (inv_mwb_globals.g_expected_from_date IS NOT NULL
         AND inv_mwb_globals.g_expected_to_date IS NOT NULL
         AND inv_mwb_globals.g_expected_from_date = inv_mwb_globals.g_expected_to_date) THEN
            DBMS_SQL.bind_variable(query_hdl, 'inb_from_date', inv_mwb_globals.g_expected_from_date);
         END IF;

         IF inv_mwb_globals.g_expected_from_date IS NOT NULL THEN
            DBMS_SQL.bind_variable(query_hdl, 'inb_from_date', inv_mwb_globals.g_expected_from_date);
         END IF;

         IF inv_mwb_globals.g_expected_to_date IS NOT NULL THEN
            DBMS_SQL.bind_variable(query_hdl, 'inb_to_date', inv_mwb_globals.g_expected_to_date);
         END IF;

         IF (inv_mwb_globals.g_organization_id IS NOT NULL) THEN
            DBMS_SQL.bind_variable(query_hdl, 'inb_to_org_id', inv_mwb_globals.g_organization_id);
         END IF;

         IF inv_mwb_globals.g_inventory_item_id IS NOT NULL THEN
            DBMS_SQL.bind_variable(query_hdl, 'inb_item_id', inv_mwb_globals.g_inventory_item_id);
         END IF;

        -- ER(9158529 client)
        IF inv_mwb_globals.g_client_code IS NOT NULL THEN
           DBMS_SQL.bind_variable(query_hdl, 'inb_client_code', inv_mwb_globals.g_client_code);
        END IF;
        -- ER(9158529 client)

         -- ER(9158529)
         IF inv_mwb_globals.g_category_set_id IS NOT NULL THEN
            DBMS_SQL.bind_variable(query_hdl, 'inb_to_organization_id', inv_mwb_globals.g_organization_id);
            DBMS_SQL.bind_variable(query_hdl, 'inb_category_set_id', inv_mwb_globals.g_category_set_id);
            DBMS_SQL.bind_variable(query_hdl, 'inb_category_id', inv_mwb_globals.g_category_id);
         END IF;
         -- ER(9158529)

         IF inv_mwb_globals.g_inventory_item_id IS NULL
         AND inv_mwb_globals.g_item_description IS NOT NULL THEN
            DBMS_SQL.bind_variable(query_hdl, 'inb_item_description', inv_mwb_globals.g_item_description);
         END IF;

         IF inv_mwb_globals.g_po_header_id IS NOT NULL THEN
            DBMS_SQL.bind_variable(query_hdl, 'inb_po_header_id', inv_mwb_globals.g_po_header_id);
         END IF;

         IF inv_mwb_globals.g_tree_doc_header_id IS NOT NULL THEN
            DBMS_SQL.bind_variable(query_hdl, 'inb_doc_header_id', inv_mwb_globals.g_tree_doc_header_id);
         END IF;

         IF  inv_mwb_globals.g_po_release_id IS NOT NULL THEN
            DBMS_SQL.bind_variable(query_hdl, 'inb_po_release_id', inv_mwb_globals.g_po_release_id);
         END IF;

         IF inv_mwb_globals.g_vendor_id IS NOT NULL THEN
            DBMS_SQL.bind_variable(query_hdl, 'inb_vendor_id', inv_mwb_globals.g_vendor_id);
            IF inv_mwb_globals.g_vendor_site_id IS NOT NULL THEN
               DBMS_SQL.bind_variable(query_hdl, 'inb_vendor_site_id', inv_mwb_globals.g_vendor_site_id);
            END IF;
         END IF;

         DBMS_SQL.define_column(query_hdl, 1, item, 30);
         DBMS_SQL.define_column(query_hdl, 2, item_id);

         rows_processed  := DBMS_SQL.EXECUTE(query_hdl);

         LOOP
            -- fetch a row
            IF DBMS_SQL.fetch_rows(query_hdl) > 0 THEN
            -- fetch columns from the row
               DBMS_SQL.column_value(query_hdl, 1, item);
               DBMS_SQL.column_value(query_hdl, 2, item_id);

               IF j >= inv_mwb_globals.g_tree_node_low_value THEN
                  x_node_tbl(i).state  := inv_mwb_globals.g_tree_node_state;
                  x_node_tbl(i).DEPTH  := 1;
                  x_node_tbl(i).label  := inv_mwb_tree1.GET_ITEM(item_id, NVL(inv_mwb_globals.g_tree_organization_id, inv_mwb_globals.g_organization_id ));	-- Bug 6350236
                  x_node_tbl(i).icon   := 'inv_item';
                  x_node_tbl(i).VALUE  := TO_CHAR(item_id);
                  x_node_tbl(i).TYPE   := 'ITEM';
                  i                    := i + 1;
               END IF;

            EXIT WHEN j >= inv_mwb_globals.g_tree_node_high_value;
               j  := j + 1;
            ELSE
               EXIT;
            END IF;
         END LOOP;

      END IF; -- Purchase Order


      IF inv_mwb_globals.g_tree_doc_type_id = 4 THEN  -- ASN

         select_str := ' SELECT distinct msik.concatenated_segments
                              , msik.inventory_item_id
                           FROM mtl_supply ms
                              , rcv_shipment_lines rsl
                              , rcv_shipment_headers rsh
                              , mtl_system_items_kfv msik ';


          where_str := ' WHERE ms.shipment_header_id = rsh.shipment_header_id
                          AND ms.shipment_line_id = rsl.shipment_line_id
                          AND ms.supply_type_code = ''SHIPMENT''
                          AND ms.destination_type_code = ''INVENTORY''
                          AND rsh.asn_type IS NOT NULL
                          AND ms.item_id = msik.inventory_item_id
                          AND ms.to_organization_id = msik.organization_id ';

         IF inv_mwb_globals.g_vendor_item IS NOT NULL THEN
            where_str := where_str || ' AND rsl.vendor_item_num = :inb_vendor_item ';
         END IF;

         IF inv_mwb_globals.g_cost_group_id IS NOT NULL THEN
            where_str := where_str || ' AND ms.cost_group_id = :inb_cost_group_id ';
         END IF;

         IF (inv_mwb_globals.g_expected_from_date IS NOT NULL AND
            inv_mwb_globals.g_expected_to_date IS NOT NULL AND
            inv_mwb_globals.g_expected_from_date = inv_mwb_globals.g_expected_to_date) THEN
               where_str := where_str || ' AND ms.expected_delivery_date = :inb_from_date';
         END IF;

         IF inv_mwb_globals.g_expected_from_date IS NOT NULL THEN
            where_str := where_str || ' AND ms.expected_delivery_date  >= :inb_from_date';
         END IF;

         IF inv_mwb_globals.g_expected_to_date IS NOT NULL THEN
            where_str := where_str || ' AND ms.expected_delivery_date  <= :inb_to_date';
         END IF;

         IF inv_mwb_globals.g_organization_id IS NOT NULL THEN
            where_str := where_str || ' AND ms.to_organization_id = :inb_to_org_id ';
         END IF;

         IF inv_mwb_globals.g_inventory_item_id IS NOT NULL THEN
            where_str := where_str || ' AND ms.item_id = :inb_item_id ';
         END IF;

         -- ER(9158529 client)
         IF inv_mwb_globals.g_client_code IS NOT NULL THEN
            where_str := where_str || ' AND ms.item_id in (select DISTINCT inventory_item_id from mtl_system_items_b where wms_deploy.get_client_code(inventory_item_id) = :inb_client_code) ';
         END IF;
         -- ER(9158529 client)

         -- ER(9158529)
         IF inv_mwb_globals.g_category_set_id IS NOT NULL THEN
            where_str := where_str || ' AND ms.item_id in '
                                        || ' (select DISTINCT inventory_item_id from mtl_item_categories '
                                        || ' where organization_id = :inb_to_organization_id '
                                        || ' and category_set_id = :inb_category_set_id '
                                        || ' and category_id = nvl(:inb_category_id, category_id)) ' ;
         END IF;
         -- ER(9158529)

         IF inv_mwb_globals.g_tree_doc_header_id IS NOT NULL THEN
            where_str := where_str || ' AND rsh.shipment_header_id = :inb_shipment_header_id ';
         END IF;

         IF inv_mwb_globals.g_inventory_item_id IS NULL
         AND inv_mwb_globals.g_item_description IS NOT NULL THEN
            where_str := where_str || ' AND msik.description like :inb_item_description ';
         END IF;

         IF inv_mwb_globals.g_vendor_id IS NOT NULL THEN
            where_str := where_str || ' AND rsh.vendor_id = :inb_vendor_id ';
            IF inv_mwb_globals.g_vendor_site_id IS NOT NULL THEN
               where_str := where_str || ' AND rsh.vendor_site_id = :inb_vendor_site_id ';
            END IF;
         END IF;

         IF NVL(inv_mwb_globals.g_lpn_from_id,-99) = NVL(inv_mwb_globals.g_lpn_to_id,-999) THEN
            where_str := where_str || ' AND rsl.asn_lpn_id = :inb_lpn_from_id ';
         ELSE
           IF inv_mwb_globals.g_lpn_from_id IS NOT NULL THEN
              where_str := where_str || ' AND rsl.asn_lpn_id >= :inb_lpn_from_id ';
           END IF;

           IF inv_mwb_globals.g_lpn_to_id IS NOT NULL THEN
              where_str := where_str || ' AND rsl.asn_lpn_id <= :inb_lpn_to_id ';
           END IF;
         END IF;

         IF inv_mwb_globals.g_tree_node_type = 'DOCNUM' THEN
            where_str := where_str || ' AND rsl.asn_lpn_id IS NULL ';
         END IF;

         IF inv_mwb_globals.g_tree_parent_lpn_id IS NOT NULL THEN
            where_str := where_str || ' AND rsl.asn_lpn_id = :inb_tree_lpn_id ';
         END IF;


         IF inv_mwb_globals.g_serial_from IS NOT NULL
         OR inv_mwb_globals.g_serial_to IS NOT NULL THEN
            select_str := select_str || ', rcv_serials_supply rss ';
            where_str := where_str || ' AND ms.shipment_line_id = rss.shipment_line_id ';
         END IF;

         IF NVL(inv_mwb_globals.g_serial_from,-99) = NVL(inv_mwb_globals.g_serial_to,-999) THEN
            where_str := where_str || ' AND rss.serial_num = :inb_serial_from ';
         ELSE
           IF inv_mwb_globals.g_serial_from IS NOT NULL THEN
              where_str := where_str || ' AND rss.serial_num >= :inb_serial_from ';
           END IF;

           IF inv_mwb_globals.g_serial_to IS NOT NULL THEN
              where_str := where_str || ' AND rss.serial_num <= :inb_serial_to ';
           END IF;
         END IF;

         IF (inv_mwb_globals.g_lot_from IS NOT NULL
         OR inv_mwb_globals.g_lot_to IS NOT NULL)
         AND (inv_mwb_globals.g_serial_from IS NULL
         AND inv_mwb_globals.g_serial_to IS NULL) THEN
            select_str := select_str || ', rcv_lots_supply rss ';
            where_str := where_str || ' AND ms.shipment_line_id = rss.shipment_line_id ';
         END IF;

         IF NVL(inv_mwb_globals.g_lot_from,-99) = NVL(inv_mwb_globals.g_lot_to,-999) THEN
            where_str := where_str || ' AND rss.lot_num = :inb_lot_from ';
         ELSE
           IF inv_mwb_globals.g_lot_from IS NOT NULL THEN
              where_str := where_str || ' AND rss.lot_num >= :inb_lot_from ';
           END IF;

           IF inv_mwb_globals.g_lot_to IS NOT NULL THEN
              where_str := where_str || ' AND rss.lot_num <= :inb_lot_to ';
           END IF;
         END IF;

/* Bug 8396954, Adding below code for checking supplier_lot_number condition */
      IF inv_mwb_globals.g_supplier_lot_from IS NOT NULL
      OR inv_mwb_globals.g_supplier_lot_to IS NOT NULL THEN
         select_str := select_str || ', mtl_lot_numbers mln1 ';
         select_str := select_str || ' , rcv_lots_supply rls1 ';
         where_str := where_str || ' AND rls1.shipment_line_id = rsl.shipment_line_id  ';

         where_str := where_str || ' AND rls1.lot_num = mln1.lot_number';

                IF (inv_mwb_globals.g_supplier_lot_from IS NOT NULL AND
                    inv_mwb_globals.g_supplier_lot_to IS NOT NULL AND
                    inv_mwb_globals.g_supplier_lot_from = inv_mwb_globals.g_supplier_lot_to) THEN
                    where_str := where_str || ' AND mln1.supplier_lot_number = :inb_supplier_lot_from ';
                END IF;

                IF (inv_mwb_globals.g_supplier_lot_from IS NOT NULL AND
	            inv_mwb_globals.g_supplier_lot_from <> NVL(inv_mwb_globals.g_supplier_lot_to, -1) ) THEN
                    where_str := where_str || ' AND mln1.supplier_lot_number >= :inb_supplier_lot_from ';
                END IF;

                IF (inv_mwb_globals.g_supplier_lot_to IS NOT NULL AND
	            inv_mwb_globals.g_supplier_lot_to <> NVL(inv_mwb_globals.g_supplier_lot_from, -1) ) THEN
                    where_str := where_str || ' AND mln1.supplier_lot_number <= :inb_supplier_lot_to ';
                END IF;
      END IF;
/* End of Bug 8396954 */

         where_str := where_str || ' ORDER BY  msik.concatenated_segments ';

         query_str := select_str || where_str;


/*         delete from rtest2;
         insert into rtest2 values (query_str);
         commit;
*/
         query_hdl  := DBMS_SQL.open_cursor;
         DBMS_SQL.parse(query_hdl, query_str, DBMS_SQL.native);

         IF inv_mwb_globals.g_vendor_item IS NOT NULL THEN
            DBMS_SQL.bind_variable(query_hdl, 'inb_vendor_item', inv_mwb_globals.g_vendor_item);
         END IF;

         IF inv_mwb_globals.g_cost_group_id IS NOT NULL THEN
            DBMS_SQL.bind_variable(query_hdl, 'inb_cost_group_id', inv_mwb_globals.g_cost_group_id);
         END IF;

         IF (inv_mwb_globals.g_expected_from_date IS NOT NULL
         AND inv_mwb_globals.g_expected_to_date IS NOT NULL
         AND inv_mwb_globals.g_expected_from_date = inv_mwb_globals.g_expected_to_date) THEN
            DBMS_SQL.bind_variable(query_hdl, 'inb_from_date', inv_mwb_globals.g_expected_from_date);
         END IF;

         IF inv_mwb_globals.g_expected_from_date IS NOT NULL THEN
            DBMS_SQL.bind_variable(query_hdl, 'inb_from_date', inv_mwb_globals.g_expected_from_date);
         END IF;

         IF inv_mwb_globals.g_expected_to_date IS NOT NULL THEN
            DBMS_SQL.bind_variable(query_hdl, 'inb_to_date', inv_mwb_globals.g_expected_to_date);
         END IF;

         IF (inv_mwb_globals.g_organization_id IS NOT NULL) THEN
            DBMS_SQL.bind_variable(query_hdl, 'inb_to_org_id', inv_mwb_globals.g_organization_id);
         END IF;

         IF inv_mwb_globals.g_inventory_item_id IS NOT NULL THEN
            DBMS_SQL.bind_variable(query_hdl, 'inb_item_id', inv_mwb_globals.g_inventory_item_id);
         END IF;

         -- ER(9158529 client)
         IF inv_mwb_globals.g_client_code IS NOT NULL THEN
            DBMS_SQL.bind_variable(query_hdl, 'inb_client_code', inv_mwb_globals.g_client_code);
         END IF;
         -- ER(9158529 client)

         -- ER(9158529)
         IF inv_mwb_globals.g_category_set_id IS NOT NULL THEN
            DBMS_SQL.bind_variable(query_hdl, 'inb_to_organization_id', inv_mwb_globals.g_organization_id);
            DBMS_SQL.bind_variable(query_hdl, 'inb_category_set_id', inv_mwb_globals.g_category_set_id);
            DBMS_SQL.bind_variable(query_hdl, 'inb_category_id', inv_mwb_globals.g_category_id);
         END IF;
         -- ER(9158529)

         IF inv_mwb_globals.g_tree_doc_header_id IS NOT NULL THEN
            DBMS_SQL.bind_variable(query_hdl, 'inb_shipment_header_id', inv_mwb_globals.g_tree_doc_header_id);
         END IF;

         IF inv_mwb_globals.g_inventory_item_id IS NULL
         AND inv_mwb_globals.g_item_description IS NOT NULL THEN
            DBMS_SQL.bind_variable(query_hdl, 'inb_item_description', inv_mwb_globals.g_item_description);
         END IF;

         IF inv_mwb_globals.g_vendor_id IS NOT NULL THEN
            DBMS_SQL.bind_variable(query_hdl, 'inb_vendor_id', inv_mwb_globals.g_vendor_id);
            IF inv_mwb_globals.g_vendor_site_id IS NOT NULL THEN
               DBMS_SQL.bind_variable(query_hdl, 'inb_vendor_site_id', inv_mwb_globals.g_vendor_site_id);
            END IF;
         END IF;

         IF NVL(inv_mwb_globals.g_lpn_from_id,-99) = NVL(inv_mwb_globals.g_lpn_to_id,-999) THEN
            DBMS_SQL.bind_variable(query_hdl, 'inb_lpn_from_id', inv_mwb_globals.g_lpn_from_id);
         ELSE
           IF inv_mwb_globals.g_lpn_from_id IS NOT NULL THEN
              DBMS_SQL.bind_variable(query_hdl, 'inb_lpn_from_id', inv_mwb_globals.g_lpn_from_id);
           END IF;

           IF inv_mwb_globals.g_lpn_to_id IS NOT NULL THEN
              DBMS_SQL.bind_variable(query_hdl, 'inb_lpn_to_id', inv_mwb_globals.g_lpn_to_id);
           END IF;
         END IF;

         IF inv_mwb_globals.g_tree_parent_lpn_id IS NOT NULL THEN
            DBMS_SQL.bind_variable(query_hdl, 'inb_tree_lpn_id', inv_mwb_globals.g_tree_parent_lpn_id);
         END IF;

         IF NVL(inv_mwb_globals.g_serial_from,-99) = NVL(inv_mwb_globals.g_serial_to,-999) THEN
            DBMS_SQL.bind_variable(query_hdl, 'inb_serial_from', inv_mwb_globals.g_serial_from);
         ELSE
           IF inv_mwb_globals.g_serial_from IS NOT NULL THEN
              DBMS_SQL.bind_variable(query_hdl, 'inb_serial_from', inv_mwb_globals.g_serial_from);
           END IF;

           IF inv_mwb_globals.g_serial_to IS NOT NULL THEN
              DBMS_SQL.bind_variable(query_hdl, 'inb_serial_to', inv_mwb_globals.g_serial_to);
           END IF;
         END IF;

        IF NVL(inv_mwb_globals.g_lot_from,-99) = NVL(inv_mwb_globals.g_lot_to,-999) THEN
            DBMS_SQL.bind_variable(query_hdl, 'inb_lot_from', inv_mwb_globals.g_lot_from);
         ELSE
           IF inv_mwb_globals.g_lot_from IS NOT NULL THEN
              DBMS_SQL.bind_variable(query_hdl, 'inb_lot_from', inv_mwb_globals.g_lot_from);
           END IF;

           IF inv_mwb_globals.g_lot_to IS NOT NULL THEN
              DBMS_SQL.bind_variable(query_hdl, 'inb_lot_to', inv_mwb_globals.g_lot_to);
           END IF;
         END IF;

    /* Bug 8396954 added below code for supplier_lot_number */
      IF inv_mwb_globals.g_supplier_lot_from IS NOT NULL
      OR inv_mwb_globals.g_supplier_lot_to IS NOT NULL THEN
        IF (inv_mwb_globals.g_supplier_lot_from IS NOT NULL AND
        inv_mwb_globals.g_supplier_lot_to IS NOT NULL AND
        inv_mwb_globals.g_supplier_lot_from = inv_mwb_globals.g_supplier_lot_to) THEN
             DBMS_SQL.bind_variable(query_hdl, 'inb_supplier_lot_from', inv_mwb_globals.g_supplier_lot_from);
        END IF;

        IF (inv_mwb_globals.g_supplier_lot_from IS NOT NULL AND
            inv_mwb_globals.g_supplier_lot_from <> NVL(inv_mwb_globals.g_supplier_lot_to, -1) ) THEN
                 DBMS_SQL.bind_variable(query_hdl, 'inb_supplier_lot_from', inv_mwb_globals.g_supplier_lot_from);
        END IF;

        IF (inv_mwb_globals.g_supplier_lot_to IS NOT NULL AND
             inv_mwb_globals.g_supplier_lot_to <> NVL(inv_mwb_globals.g_supplier_lot_from, -1) ) THEN
                 DBMS_SQL.bind_variable(query_hdl, 'inb_supplier_lot_to', inv_mwb_globals.g_supplier_lot_to);
        END IF;
      END IF;
    /* End of Bug 8396954 */

         DBMS_SQL.define_column(query_hdl, 1, item, 30);
         DBMS_SQL.define_column(query_hdl, 2, item_id);

         rows_processed  := DBMS_SQL.EXECUTE(query_hdl);

         LOOP
            -- fetch a row
            IF DBMS_SQL.fetch_rows(query_hdl) > 0 THEN
            -- fetch columns from the row
               DBMS_SQL.column_value(query_hdl, 1, item);
               DBMS_SQL.column_value(query_hdl, 2, item_id);


               IF j >= inv_mwb_globals.g_tree_node_low_value THEN
                  x_node_tbl(i).state  := inv_mwb_globals.g_tree_node_state;
                  x_node_tbl(i).DEPTH  := 1;
                  x_node_tbl(i).label  := inv_mwb_tree1.GET_ITEM(item_id, NVL(inv_mwb_globals.g_tree_organization_id, inv_mwb_globals.g_organization_id ));	-- Bug 6350236
                  x_node_tbl(i).icon   := 'inv_item';
                  x_node_tbl(i).VALUE  := TO_CHAR(item_id);
                  x_node_tbl(i).TYPE   := 'ITEM';
                  i                    := i + 1;
               END IF;

            EXIT WHEN j >= inv_mwb_globals.g_tree_node_high_value;
               j  := j + 1;
            ELSE
               EXIT;
            END IF;
         END LOOP;

      END IF; -- ASN

      IF inv_mwb_globals.g_tree_doc_type_id = 3 THEN  -- INTERORG

         select_str := ' SELECT distinct msik.concatenated_segments
                              , msik.inventory_item_id
                           FROM mtl_supply ms
                              , rcv_shipment_lines rsl
                              , rcv_shipment_headers rsh
                              , mtl_system_items_kfv msik ';

         where_str := ' WHERE ms.shipment_header_id = rsh.shipment_header_id (+)
                          AND ms.shipment_line_id = rsl.shipment_line_id (+)
                          AND ms.supply_type_code = ''SHIPMENT''
                          AND ms.destination_type_code = ''INVENTORY''
                          AND rsh.asn_type IS NULL
                          AND ms.item_id = msik.inventory_item_id
                          AND ms.to_organization_id = msik.organization_id ';


         IF inv_mwb_globals.g_vendor_item IS NOT NULL THEN
            where_str := where_str || ' AND rsl.vendor_item_num = :inb_vendor_item ';
         END IF;

         IF inv_mwb_globals.g_cost_group_id IS NOT NULL THEN
            where_str := where_str || ' AND rsl.cost_group_id = :inb_cost_group_id ';
         END IF;

         IF (inv_mwb_globals.g_expected_from_date IS NOT NULL AND
            inv_mwb_globals.g_expected_to_date IS NOT NULL AND
            inv_mwb_globals.g_expected_from_date = inv_mwb_globals.g_expected_to_date) THEN
               where_str := where_str || ' AND ms.expected_delivery_date = :inb_from_date';
         END IF;

         IF inv_mwb_globals.g_expected_from_date IS NOT NULL THEN
            where_str := where_str || ' AND ms.expected_delivery_date  >= :inb_from_date';
         END IF;

         IF inv_mwb_globals.g_expected_to_date IS NOT NULL THEN
            where_str := where_str || ' AND ms.expected_delivery_date  <= :inb_to_date';
         END IF;

         IF inv_mwb_globals.g_organization_id IS NOT NULL THEN
            where_str := where_str || ' AND ms.to_organization_id = :inb_to_org_id ';
         END IF;

         IF inv_mwb_globals.g_source_org_id IS NOT NULL THEN
            where_str := where_str || ' AND ms.from_organization_id = :inb_from_organization_id ';
         END IF;

         IF inv_mwb_globals.g_inventory_item_id IS NOT NULL THEN
            where_str := where_str || ' AND ms.item_id = :inb_item_id ';
         END IF;

         -- ER(9158529 client)
         IF inv_mwb_globals.g_client_code IS NOT NULL THEN
            where_str := where_str || ' AND ms.item_id in (select DISTINCT inventory_item_id from mtl_system_items_b where wms_deploy.get_client_code(inventory_item_id) = :inb_client_code) ';
         END IF;
         -- ER(9158529 client)

         -- ER(9158529)
         IF inv_mwb_globals.g_category_set_id IS NOT NULL THEN
            where_str := where_str || ' AND ms.item_id in '
                                        || ' (select DISTINCT inventory_item_id from mtl_item_categories '
                                        || ' where organization_id = :inb_to_organization_id '
                                        || ' and category_set_id = :inb_category_set_id '
                                        || ' and category_id = nvl(:inb_category_id, category_id)) ' ;
         END IF;
         -- ER(9158529)

         IF inv_mwb_globals.g_shipment_header_id_interorg IS NOT NULL
         OR inv_mwb_globals.g_tree_doc_header_id IS NOT NULL THEN
            where_str := where_str || ' AND rsh.shipment_header_id = :inb_shipment_header_id ';
         END IF;

         IF inv_mwb_globals.g_inventory_item_id IS NULL
         AND inv_mwb_globals.g_item_description IS NOT NULL THEN
            where_str := ' AND msik.description like :inb_item_description ';
         END IF;

         IF inv_mwb_globals.g_po_header_id IS NOT NULL THEN
            where_str := where_str || ' AND ms.po_header_id = :inb_po_header_id ';
         END IF;

         IF  inv_mwb_globals.g_po_release_id IS NOT NULL THEN
            where_str := where_str || ' AND ms.po_release_id = :inb_po_release_id ';
         END IF;

         IF inv_mwb_globals.g_vendor_id IS NOT NULL THEN
            where_str := where_str || ' AND rsh.vendor_id = :inb_vendor_id ';
            IF inv_mwb_globals.g_vendor_site_id IS NOT NULL THEN
               where_str := where_str || ' AND rsh.vendor_site_id = :inb_vendor_site_id ';
            END IF;
         END IF;

         IF inv_mwb_globals.g_serial_from IS NOT NULL
         OR inv_mwb_globals.g_serial_to IS NOT NULL THEN
            select_str := select_str || ', rcv_serials_supply rss ';
            where_str := where_str || ' AND ms.shipment_line_id = rss.shipment_line_id (+) ';
         END IF;


         IF NVL(inv_mwb_globals.g_serial_from,-99) = NVL(inv_mwb_globals.g_serial_to,-999) THEN
            where_str := where_str || ' AND rss.serial_num = :inb_serial_from ';
         ELSE
           IF inv_mwb_globals.g_serial_from IS NOT NULL THEN
              where_str := where_str || ' AND rss.serial_num >= :inb_serial_from ';
           END IF;

           IF inv_mwb_globals.g_serial_to IS NOT NULL THEN
              where_str := where_str || ' AND rss.serial_num <= :inb_serial_to ';
           END IF;
         END IF;

         IF NVL(inv_mwb_globals.g_lpn_from_id,-99) = NVL(inv_mwb_globals.g_lpn_to_id,-999) THEN
            where_str := where_str || ' AND rsl.asn_lpn_id = :inb_lpn_from_id ';
         ELSE
           IF inv_mwb_globals.g_lpn_from_id IS NOT NULL THEN
              where_str := where_str || ' AND rsl.asn_lpn_id >= :inb_lpn_from_id ';
           END IF;

           IF inv_mwb_globals.g_lpn_to_id IS NOT NULL THEN
              where_str := where_str || ' AND rsl.asn_lpn_id <= :inb_lpn_to_id ';
           END IF;
         END IF;

         IF inv_mwb_globals.g_tree_node_type = 'DOCNUM' THEN
            where_str := where_str || ' AND rsl.asn_lpn_id IS NULL ';
         END IF;

         IF inv_mwb_globals.g_tree_parent_lpn_id IS NOT NULL THEN
            where_str := where_str || ' AND rsl.asn_lpn_id = :inb_tree_lpn_id ';
         END IF;

         IF inv_mwb_globals.g_lot_from IS NOT NULL
         OR inv_mwb_globals.g_lot_to IS NOT NULL THEN
            select_str := select_str || ', rcv_lots_supply rls ';
            where_str := where_str || ' AND ms.shipment_line_id = rls.shipment_line_id (+) ';
         END IF;

         IF NVL(inv_mwb_globals.g_lot_from,-99) = NVL(inv_mwb_globals.g_lot_to,-999) THEN
            where_str := where_str || ' AND rls.lot_num = :inb_lot_from ';
         ELSE
           IF inv_mwb_globals.g_lot_from IS NOT NULL THEN
              where_str := where_str || ' AND rls.lot_num >= :inb_lot_from ';
           END IF;

           IF inv_mwb_globals.g_lot_to IS NOT NULL THEN
              where_str := where_str || ' AND rls.lot_num <= :inb_lot_to ';
           END IF;
         END IF;

/* Bug 8396954, Adding below code for checking supplier_lot_number condition */
      IF inv_mwb_globals.g_supplier_lot_from IS NOT NULL
      OR inv_mwb_globals.g_supplier_lot_to IS NOT NULL THEN
         select_str := select_str || ', mtl_lot_numbers mln1 ';
        IF NOT (inv_mwb_globals.g_lot_from IS NOT NULL
              OR inv_mwb_globals.g_lot_to IS NOT NULL ) THEN
         select_str := select_str || ' , rcv_lots_supply rls ';
         where_str := where_str || ' AND rls.shipment_line_id = ms.shipment_line_id  ';
        END IF;

         where_str := where_str || ' AND rls.lot_num = mln1.lot_number';

                IF (inv_mwb_globals.g_supplier_lot_from IS NOT NULL AND
                    inv_mwb_globals.g_supplier_lot_to IS NOT NULL AND
                    inv_mwb_globals.g_supplier_lot_from = inv_mwb_globals.g_supplier_lot_to) THEN
                    where_str := where_str || ' AND mln1.supplier_lot_number = :inb_supplier_lot_from ';
                END IF;

                IF (inv_mwb_globals.g_supplier_lot_from IS NOT NULL AND
	            inv_mwb_globals.g_supplier_lot_from <> NVL(inv_mwb_globals.g_supplier_lot_to, -1) ) THEN
                    where_str := where_str || ' AND mln1.supplier_lot_number >= :inb_supplier_lot_from ';
                END IF;

                IF (inv_mwb_globals.g_supplier_lot_to IS NOT NULL AND
	            inv_mwb_globals.g_supplier_lot_to <> NVL(inv_mwb_globals.g_supplier_lot_from, -1) ) THEN
                    where_str := where_str || ' AND mln1.supplier_lot_number <= :inb_supplier_lot_to ';
                END IF;
      END IF;
/* End of Bug 8396954 */

         where_str := where_str || ' ORDER BY msik.concatenated_segments ';

         query_str := select_str || where_str;

/*         delete from rtest2;
         insert into rtest2 values (query_str);
         commit;
*/
         query_hdl  := DBMS_SQL.open_cursor;
         DBMS_SQL.parse(query_hdl, query_str, DBMS_SQL.native);

         IF inv_mwb_globals.g_vendor_item IS NOT NULL THEN
            DBMS_SQL.bind_variable(query_hdl, 'inb_vendor_item', inv_mwb_globals.g_vendor_item);
         END IF;

         IF inv_mwb_globals.g_cost_group_id IS NOT NULL THEN
            DBMS_SQL.bind_variable(query_hdl, 'inb_cost_group_id', inv_mwb_globals.g_cost_group_id);
         END IF;

         IF (inv_mwb_globals.g_expected_from_date IS NOT NULL
         AND inv_mwb_globals.g_expected_to_date IS NOT NULL
         AND inv_mwb_globals.g_expected_from_date = inv_mwb_globals.g_expected_to_date) THEN
            DBMS_SQL.bind_variable(query_hdl, 'inb_from_date', inv_mwb_globals.g_expected_from_date);
         END IF;

         IF inv_mwb_globals.g_expected_from_date IS NOT NULL THEN
            DBMS_SQL.bind_variable(query_hdl, 'inb_from_date', inv_mwb_globals.g_expected_from_date);
         END IF;

         IF inv_mwb_globals.g_expected_to_date IS NOT NULL THEN
            DBMS_SQL.bind_variable(query_hdl, 'inb_to_date', inv_mwb_globals.g_expected_to_date);
         END IF;

         IF (inv_mwb_globals.g_organization_id IS NOT NULL) THEN
            DBMS_SQL.bind_variable(query_hdl, 'inb_to_org_id', inv_mwb_globals.g_organization_id);
         END IF;

         IF inv_mwb_globals.g_source_org_id IS NOT NULL THEN
            DBMS_SQL.bind_variable(query_hdl, 'inb_from_organization_id', inv_mwb_globals.g_source_org_id);
         END IF;

         IF inv_mwb_globals.g_inventory_item_id IS NOT NULL THEN
            DBMS_SQL.bind_variable(query_hdl, 'inb_item_id', inv_mwb_globals.g_inventory_item_id);
         END IF;

         -- ER(9158529 client)
         IF inv_mwb_globals.g_client_code IS NOT NULL THEN
            DBMS_SQL.bind_variable(query_hdl, 'inb_client_code', inv_mwb_globals.g_client_code);
         END IF;
         -- ER(9158529 client)

         -- ER(9158529)
         IF inv_mwb_globals.g_category_set_id IS NOT NULL THEN
            DBMS_SQL.bind_variable(query_hdl, 'inb_to_organization_id', inv_mwb_globals.g_organization_id);
            DBMS_SQL.bind_variable(query_hdl, 'inb_category_set_id', inv_mwb_globals.g_category_set_id);
            DBMS_SQL.bind_variable(query_hdl, 'inb_category_id', inv_mwb_globals.g_category_id);
         END IF;
         -- ER(9158529)

         IF inv_mwb_globals.g_shipment_header_id_interorg IS NOT NULL
         OR inv_mwb_globals.g_tree_doc_header_id IS NOT NULL THEN
            DBMS_SQL.bind_variable(query_hdl, 'inb_shipment_header_id', NVL(inv_mwb_globals.g_shipment_header_id_interorg
                                                                           ,inv_mwb_globals.g_tree_doc_header_id));
         END IF;

         IF inv_mwb_globals.g_inventory_item_id IS NULL
         AND inv_mwb_globals.g_item_description IS NOT NULL THEN
            DBMS_SQL.bind_variable(query_hdl, 'inb_item_description', inv_mwb_globals.g_item_description);
         END IF;

         IF inv_mwb_globals.g_po_header_id IS NOT NULL THEN
            DBMS_SQL.bind_variable(query_hdl, 'inb_po_header_id', inv_mwb_globals.g_po_header_id);
         END IF;

         IF  inv_mwb_globals.g_po_release_id IS NOT NULL THEN
            DBMS_SQL.bind_variable(query_hdl, 'inb_po_release_id', inv_mwb_globals.g_po_release_id);
         END IF;

         IF inv_mwb_globals.g_vendor_id IS NOT NULL THEN
            DBMS_SQL.bind_variable(query_hdl, 'inb_vendor_id', inv_mwb_globals.g_vendor_id);
            IF inv_mwb_globals.g_vendor_site_id IS NOT NULL THEN
               DBMS_SQL.bind_variable(query_hdl, 'inb_vendor_site_id', inv_mwb_globals.g_vendor_site_id);
            END IF;
         END IF;


         IF NVL(inv_mwb_globals.g_serial_from,-99) = NVL(inv_mwb_globals.g_serial_to,-999) THEN
            DBMS_SQL.bind_variable(query_hdl, 'inb_serial_from', inv_mwb_globals.g_serial_from);
         ELSE
           IF inv_mwb_globals.g_serial_from IS NOT NULL THEN
              DBMS_SQL.bind_variable(query_hdl, 'inb_serial_from', inv_mwb_globals.g_serial_from);
           END IF;

           IF inv_mwb_globals.g_serial_to IS NOT NULL THEN
              DBMS_SQL.bind_variable(query_hdl, 'inb_serial_to', inv_mwb_globals.g_serial_to);
           END IF;
         END IF;

         IF NVL(inv_mwb_globals.g_lpn_from_id,-99) = NVL(inv_mwb_globals.g_lpn_to_id,-999) THEN
            DBMS_SQL.bind_variable(query_hdl, 'inb_lpn_from_id', inv_mwb_globals.g_lpn_from_id);
         ELSE
           IF inv_mwb_globals.g_lpn_from_id IS NOT NULL THEN
              DBMS_SQL.bind_variable(query_hdl, 'inb_lpn_from_id', inv_mwb_globals.g_lpn_from_id);
           END IF;

           IF inv_mwb_globals.g_lpn_to_id IS NOT NULL THEN
              DBMS_SQL.bind_variable(query_hdl, 'inb_lpn_to_id', inv_mwb_globals.g_lpn_to_id);
           END IF;
         END IF;

         IF inv_mwb_globals.g_tree_parent_lpn_id IS NOT NULL THEN
            DBMS_SQL.bind_variable(query_hdl, 'inb_tree_lpn_id', inv_mwb_globals.g_tree_parent_lpn_id);
         END IF;

        IF NVL(inv_mwb_globals.g_lot_from,-99) = NVL(inv_mwb_globals.g_lot_to,-999) THEN
            DBMS_SQL.bind_variable(query_hdl, 'inb_lot_from', inv_mwb_globals.g_lot_from);
         ELSE
           IF inv_mwb_globals.g_lot_from IS NOT NULL THEN
              DBMS_SQL.bind_variable(query_hdl, 'inb_lot_from', inv_mwb_globals.g_lot_from);
           END IF;

           IF inv_mwb_globals.g_lot_to IS NOT NULL THEN
              DBMS_SQL.bind_variable(query_hdl, 'inb_lot_to', inv_mwb_globals.g_lot_to);
           END IF;
         END IF;

        /* Bug 8396954 added below code for supplier_lot_number */
        IF inv_mwb_globals.g_supplier_lot_from IS NOT NULL
        OR inv_mwb_globals.g_supplier_lot_to IS NOT NULL THEN
        IF (inv_mwb_globals.g_supplier_lot_from IS NOT NULL AND
        inv_mwb_globals.g_supplier_lot_to IS NOT NULL AND
        inv_mwb_globals.g_supplier_lot_from = inv_mwb_globals.g_supplier_lot_to) THEN
             DBMS_SQL.bind_variable(query_hdl, 'inb_supplier_lot_from', inv_mwb_globals.g_supplier_lot_from);
        END IF;

        IF (inv_mwb_globals.g_supplier_lot_from IS NOT NULL AND
            inv_mwb_globals.g_supplier_lot_from <> NVL(inv_mwb_globals.g_supplier_lot_to, -1) ) THEN
                 DBMS_SQL.bind_variable(query_hdl, 'inb_supplier_lot_from', inv_mwb_globals.g_supplier_lot_from);
        END IF;

        IF (inv_mwb_globals.g_supplier_lot_to IS NOT NULL AND
             inv_mwb_globals.g_supplier_lot_to <> NVL(inv_mwb_globals.g_supplier_lot_from, -1) ) THEN
                 DBMS_SQL.bind_variable(query_hdl, 'inb_supplier_lot_to', inv_mwb_globals.g_supplier_lot_to);
        END IF;
        END IF;
        /* End of Bug 8396954 */

         DBMS_SQL.define_column(query_hdl, 1, item, 30);
         DBMS_SQL.define_column(query_hdl, 2, item_id);

         rows_processed  := DBMS_SQL.EXECUTE(query_hdl);

         LOOP
            -- fetch a row
            IF DBMS_SQL.fetch_rows(query_hdl) > 0 THEN
            -- fetch columns from the row
               DBMS_SQL.column_value(query_hdl, 1, item);
               DBMS_SQL.column_value(query_hdl, 2, item_id);

               IF j >= inv_mwb_globals.g_tree_node_low_value THEN
                  x_node_tbl(i).state  := inv_mwb_globals.g_tree_node_state;
                  x_node_tbl(i).DEPTH  := 1;
                  x_node_tbl(i).label  := inv_mwb_tree1.GET_ITEM(item_id, NVL(inv_mwb_globals.g_tree_organization_id, inv_mwb_globals.g_organization_id ));	-- Bug 6350236
                  x_node_tbl(i).icon   := 'inv_item';
                  x_node_tbl(i).VALUE  := TO_CHAR(item_id);
                  x_node_tbl(i).TYPE   := 'ITEM';
                  i                    := i + 1;
               END IF;

            EXIT WHEN j >= inv_mwb_globals.g_tree_node_high_value;
               j  := j + 1;
            ELSE
               EXIT;
            END IF;
         END LOOP;

      END IF; -- INTERORG


      IF inv_mwb_globals.g_tree_doc_type_id = 2 THEN  -- REQUISITION

      inv_mwb_globals.print_msg( g_pkg_name, l_procedure_name, 'Inside req.code');
         -- CLM project, bug 9403291
         select_str := ' SELECT distinct msik.concatenated_segments
                              , msik.inventory_item_id
                           FROM mtl_supply ms
                              , po_req_headers_trx_v prha
                              , po_req_lines_trx_v prla
                              , mtl_system_items_kfv msik ';

          where_str := 'WHERE ms.req_header_id = prha.requisition_header_id (+)
                          AND ms.req_line_id = prla.requisition_line_id (+)
                          AND ms.supply_type_code = ''REQ''
                          AND ms.destination_type_code = ''INVENTORY''
                          AND ms.item_id = msik.inventory_item_id
                          AND ms.to_organization_id = msik.organization_id ';




         IF inv_mwb_globals.g_cost_group_id IS NOT NULL THEN
            where_str := where_str || ' AND ms.cost_group_id = :inb_cost_group_id ';
         END IF;

         IF (inv_mwb_globals.g_expected_from_date IS NOT NULL AND
            inv_mwb_globals.g_expected_to_date IS NOT NULL AND
            inv_mwb_globals.g_expected_from_date = inv_mwb_globals.g_expected_to_date) THEN
               where_str := where_str || ' AND ms.expected_delivery_date = :inb_from_date';
         END IF;

         IF inv_mwb_globals.g_expected_from_date IS NOT NULL THEN
            where_str := where_str || ' AND ms.expected_delivery_date  >= :inb_from_date';
         END IF;

         IF inv_mwb_globals.g_expected_to_date IS NOT NULL THEN
            where_str := where_str || ' AND ms.expected_delivery_date  <= :inb_to_date';
         END IF;

         IF inv_mwb_globals.g_organization_id IS NOT NULL THEN
            where_str := where_str || ' AND ms.to_organization_id = :inb_to_org_id ';
         END IF;

         IF inv_mwb_globals.g_source_org_id IS NOT NULL THEN
            where_str := where_str || ' AND ms.from_organization_id = :inb_from_organization_id ';
         END IF;

         IF inv_mwb_globals.g_inventory_item_id IS NOT NULL THEN
            where_str := where_str || ' AND ms.item_id = :inb_item_id ';
         END IF;

         -- ER(9158529 client)
         IF inv_mwb_globals.g_client_code IS NOT NULL THEN
            where_str := where_str || ' AND ms.item_id in (select DISTINCT inventory_item_id from mtl_system_items_b where wms_deploy.get_client_code(inventory_item_id) = :inb_client_code) ';
         END IF;
         -- ER(9158529 client)

         -- ER(9158529)
         IF inv_mwb_globals.g_category_set_id IS NOT NULL THEN
            where_str := where_str || ' AND ms.item_id in '
                                        || ' (select DISTINCT inventory_item_id from mtl_item_categories '
                                        || ' where organization_id = :inb_to_organization_id '
                                        || ' and category_set_id = :inb_category_set_id '
                                        || ' and category_id = nvl(:inb_category_id, category_id)) ' ;
         END IF;
         -- ER(9158529)

         IF inv_mwb_globals.g_req_header_id IS NOT NULL
         OR (inv_mwb_globals.g_tree_node_type = 'DOCNUM'
         AND inv_mwb_globals.g_tree_doc_type_id = 2
         AND inv_mwb_globals.g_tree_node_value IS NOT NULL) THEN
            where_str := where_str || ' AND ms.req_header_id = :inb_req_header_id ';
         END IF;

         IF inv_mwb_globals.g_inventory_item_id IS NULL
         AND inv_mwb_globals.g_item_description IS NOT NULL THEN
            where_str := where_str || ' AND msik.description like :inb_item_description ';
         END IF;

         IF inv_mwb_globals.g_serial_from IS NOT NULL
         OR inv_mwb_globals.g_serial_to IS NOT NULL THEN
            select_str := select_str || ', rcv_serials_supply rss ';
            where_str := where_str || ' AND ms.shipment_line_id = rss.shipment_line_id ';
         END IF;


         IF NVL(inv_mwb_globals.g_serial_from,-99) = NVL(inv_mwb_globals.g_serial_to,-999) THEN
            where_str := where_str || ' AND rss.serial_num = :inb_serial_from ';
         ELSE
           IF inv_mwb_globals.g_serial_from IS NOT NULL THEN
              where_str := where_str || ' AND rss.serial_num >= :inb_serial_from ';
           END IF;

           IF inv_mwb_globals.g_serial_to IS NOT NULL THEN
              where_str := where_str || ' AND rss.serial_num <= :inb_serial_to ';
           END IF;
         END IF;


         IF inv_mwb_globals.g_lot_from IS NOT NULL
         OR inv_mwb_globals.g_lot_to IS NOT NULL THEN
            select_str := select_str || ', rcv_lots_supply rls ';
            where_str := where_str || ' AND ms.shipment_line_id = rls.shipment_line_id (+) ';
         END IF;

         IF NVL(inv_mwb_globals.g_lot_from,-99) = NVL(inv_mwb_globals.g_lot_to,-999) THEN
            where_str := where_str || ' AND rls.lot_num = :inb_lot_from ';
         ELSE
           IF inv_mwb_globals.g_lot_from IS NOT NULL THEN
              where_str := where_str || ' AND rls.lot_num >= :inb_lot_from ';
           END IF;

           IF inv_mwb_globals.g_lot_to IS NOT NULL THEN
              where_str := where_str || ' AND rls.lot_num <= :inb_lot_to ';
           END IF;
         END IF;

/* Bug 8396954, Adding below code for checking supplier_lot_number condition */
      IF inv_mwb_globals.g_supplier_lot_from IS NOT NULL
      OR inv_mwb_globals.g_supplier_lot_to IS NOT NULL THEN
         select_str := select_str || ', mtl_lot_numbers mln1 ';
        IF NOT (inv_mwb_globals.g_lot_from IS NOT NULL
              OR inv_mwb_globals.g_lot_to IS NOT NULL ) THEN
         select_str := select_str || ' , rcv_lots_supply rls ';
            where_str := where_str || ' AND ms.shipment_line_id = rls.shipment_line_id (+) ';
        END IF;

         where_str := where_str || ' AND rls.lot_num = mln1.lot_number';

                IF (inv_mwb_globals.g_supplier_lot_from IS NOT NULL AND
                    inv_mwb_globals.g_supplier_lot_to IS NOT NULL AND
                    inv_mwb_globals.g_supplier_lot_from = inv_mwb_globals.g_supplier_lot_to) THEN
                    where_str := where_str || ' AND mln1.supplier_lot_number = :inb_supplier_lot_from ';
                END IF;

                IF (inv_mwb_globals.g_supplier_lot_from IS NOT NULL AND
	            inv_mwb_globals.g_supplier_lot_from <> NVL(inv_mwb_globals.g_supplier_lot_to, -1) ) THEN
                    where_str := where_str || ' AND mln1.supplier_lot_number >= :inb_supplier_lot_from ';
                END IF;

                IF (inv_mwb_globals.g_supplier_lot_to IS NOT NULL AND
	            inv_mwb_globals.g_supplier_lot_to <> NVL(inv_mwb_globals.g_supplier_lot_from, -1) ) THEN
                    where_str := where_str || ' AND mln1.supplier_lot_number <= :inb_supplier_lot_to ';
                END IF;
        END IF;
/* End of Bug 8396954 */

         where_str := where_str || ' ORDER BY msik.concatenated_segments ';

         query_str := select_str || where_str;


/*         delete from rtest2;
         insert into rtest2 values (query_str);
         commit;
*/
         query_hdl  := DBMS_SQL.open_cursor;
         DBMS_SQL.parse(query_hdl, query_str, DBMS_SQL.native);

         IF inv_mwb_globals.g_cost_group_id IS NOT NULL THEN
            DBMS_SQL.bind_variable(query_hdl, 'inb_cost_group_id', inv_mwb_globals.g_cost_group_id);
         END IF;

         IF (inv_mwb_globals.g_expected_from_date IS NOT NULL
         AND inv_mwb_globals.g_expected_to_date IS NOT NULL
         AND inv_mwb_globals.g_expected_from_date = inv_mwb_globals.g_expected_to_date) THEN
            DBMS_SQL.bind_variable(query_hdl, 'inb_from_date', inv_mwb_globals.g_expected_from_date);
         END IF;

         IF inv_mwb_globals.g_expected_from_date IS NOT NULL THEN
            DBMS_SQL.bind_variable(query_hdl, 'inb_from_date', inv_mwb_globals.g_expected_from_date);
         END IF;

         IF inv_mwb_globals.g_expected_to_date IS NOT NULL THEN
            DBMS_SQL.bind_variable(query_hdl, 'inb_to_date', inv_mwb_globals.g_expected_to_date);
         END IF;

         IF (inv_mwb_globals.g_organization_id IS NOT NULL) THEN
            DBMS_SQL.bind_variable(query_hdl, 'inb_to_org_id', inv_mwb_globals.g_organization_id);
         END IF;

         IF inv_mwb_globals.g_source_org_id IS NOT NULL THEN
            DBMS_SQL.bind_variable(query_hdl, 'inb_from_organization_id', inv_mwb_globals.g_source_org_id);
         END IF;

         IF inv_mwb_globals.g_inventory_item_id IS NOT NULL THEN
            DBMS_SQL.bind_variable(query_hdl, 'inb_item_id', inv_mwb_globals.g_inventory_item_id);
         END IF;

         -- ER(9158529 client)
         IF inv_mwb_globals.g_client_code IS NOT NULL THEN
            DBMS_SQL.bind_variable(query_hdl, 'inb_client_code', inv_mwb_globals.g_client_code);
         END IF;
         -- ER(9158529 client)

         -- ER(9158529)
         IF inv_mwb_globals.g_category_set_id IS NOT NULL THEN
            DBMS_SQL.bind_variable(query_hdl, 'inb_to_organization_id', inv_mwb_globals.g_organization_id);
            DBMS_SQL.bind_variable(query_hdl, 'inb_category_set_id', inv_mwb_globals.g_category_set_id);
            DBMS_SQL.bind_variable(query_hdl, 'inb_category_id', inv_mwb_globals.g_category_id);
         END IF;
         -- ER(9158529)

         IF inv_mwb_globals.g_req_header_id IS NOT NULL
         OR (inv_mwb_globals.g_tree_node_type = 'DOCNUM'
         AND inv_mwb_globals.g_tree_doc_type_id = 2
         AND inv_mwb_globals.g_tree_node_value IS NOT NULL) THEN
            DBMS_SQL.bind_variable(query_hdl, 'inb_req_header_id', NVL(inv_mwb_globals.g_req_header_id, inv_mwb_globals.g_tree_node_value));
         END IF;


         IF inv_mwb_globals.g_inventory_item_id IS NULL
         AND inv_mwb_globals.g_item_description IS NOT NULL THEN
            DBMS_SQL.bind_variable(query_hdl, 'inb_item_description', inv_mwb_globals.g_item_description);
         END IF;

         IF NVL(inv_mwb_globals.g_serial_from,-99) = NVL(inv_mwb_globals.g_serial_to,-999) THEN
            DBMS_SQL.bind_variable(query_hdl, 'inb_serial_from', inv_mwb_globals.g_serial_from);
         ELSE
           IF inv_mwb_globals.g_serial_from IS NOT NULL THEN
              DBMS_SQL.bind_variable(query_hdl, 'inb_serial_from', inv_mwb_globals.g_serial_from);
           END IF;

           IF inv_mwb_globals.g_serial_to IS NOT NULL THEN
              DBMS_SQL.bind_variable(query_hdl, 'inb_serial_to', inv_mwb_globals.g_serial_to);
           END IF;
         END IF;

        IF NVL(inv_mwb_globals.g_lot_from,-99) = NVL(inv_mwb_globals.g_lot_to,-999) THEN
            DBMS_SQL.bind_variable(query_hdl, 'inb_lot_from', inv_mwb_globals.g_lot_from);
         ELSE
           IF inv_mwb_globals.g_lot_from IS NOT NULL THEN
              DBMS_SQL.bind_variable(query_hdl, 'inb_lot_from', inv_mwb_globals.g_lot_from);
           END IF;

           IF inv_mwb_globals.g_lot_to IS NOT NULL THEN
              DBMS_SQL.bind_variable(query_hdl, 'inb_lot_to', inv_mwb_globals.g_lot_to);
           END IF;
         END IF;

        /* Bug 8396954 added below code for supplier_lot_number */
        IF inv_mwb_globals.g_supplier_lot_from IS NOT NULL
        OR inv_mwb_globals.g_supplier_lot_to IS NOT NULL THEN
        IF (inv_mwb_globals.g_supplier_lot_from IS NOT NULL AND
        inv_mwb_globals.g_supplier_lot_to IS NOT NULL AND
        inv_mwb_globals.g_supplier_lot_from = inv_mwb_globals.g_supplier_lot_to) THEN
             DBMS_SQL.bind_variable(query_hdl, 'inb_supplier_lot_from', inv_mwb_globals.g_supplier_lot_from);
        END IF;

        IF (inv_mwb_globals.g_supplier_lot_from IS NOT NULL AND
            inv_mwb_globals.g_supplier_lot_from <> NVL(inv_mwb_globals.g_supplier_lot_to, -1) ) THEN
                 DBMS_SQL.bind_variable(query_hdl, 'inb_supplier_lot_from', inv_mwb_globals.g_supplier_lot_from);
        END IF;

        IF (inv_mwb_globals.g_supplier_lot_to IS NOT NULL AND
             inv_mwb_globals.g_supplier_lot_to <> NVL(inv_mwb_globals.g_supplier_lot_from, -1) ) THEN
                 DBMS_SQL.bind_variable(query_hdl, 'inb_supplier_lot_to', inv_mwb_globals.g_supplier_lot_to);
        END IF;
        END IF;
        /* End of Bug 8396954 */

         DBMS_SQL.define_column(query_hdl, 1, item, 30);
         DBMS_SQL.define_column(query_hdl, 2, item_id);

         rows_processed  := DBMS_SQL.EXECUTE(query_hdl);

         LOOP
            -- fetch a row
            IF DBMS_SQL.fetch_rows(query_hdl) > 0 THEN
            -- fetch columns from the row
               DBMS_SQL.column_value(query_hdl, 1, item);
               DBMS_SQL.column_value(query_hdl, 2, item_id);

	       IF j >= inv_mwb_globals.g_tree_node_low_value THEN
                  x_node_tbl(i).state  := inv_mwb_globals.g_tree_node_state;
                  x_node_tbl(i).DEPTH  := 1;
                  x_node_tbl(i).label  := inv_mwb_tree1.GET_ITEM(item_id, NVL(inv_mwb_globals.g_tree_organization_id, inv_mwb_globals.g_organization_id ));	-- Bug 6350236
                  x_node_tbl(i).icon   := 'inv_item';
                  x_node_tbl(i).VALUE  := TO_CHAR(item_id);
                  x_node_tbl(i).TYPE   := 'ITEM';
                  i                    := i + 1;
               END IF;

            EXIT WHEN j >= inv_mwb_globals.g_tree_node_high_value;
               j  := j + 1;
            ELSE
               EXIT;
            END IF;
         END LOOP;

      END IF; -- REQUISITION

      DBMS_SQL.close_cursor(query_hdl); -- close cursor
      x_node_value    := j;
      x_tbl_index     := i;
      RETURN;
   END IF; -- g_tree_doc_type_id is not null





-- NSRIVAST, INVCONV, Start
    IF  (inv_mwb_globals.g_grade_from_code IS NOT NULL OR  inv_mwb_globals.g_tree_grade_code IS NOT NULL OR inv_mwb_globals.g_grade_controlled <> 0) THEN
             is_grade_t     := TRUE ;
    END IF ;
-- NSRIVAST, INVCONV, End
    IF (
        inv_mwb_globals.g_serial_from IS NULL
        AND inv_mwb_globals.g_serial_to IS NULL
        AND inv_mwb_globals.g_tree_serial_number IS NULL
        AND inv_mwb_globals.g_unit_number IS NULL
        AND inv_mwb_globals.g_status_id IS NULL
        AND inv_mwb_globals.g_lpn_from IS NULL
        AND inv_mwb_globals.g_lpn_to IS NULL
        AND inv_mwb_globals.g_tree_parent_lpn_id IS NULL
        AND(NVL(inv_mwb_globals.g_prepacked, 1) = 1)
        AND inv_mwb_globals.g_tree_serial_attr_query IS NULL
       ) THEN
      IF inv_mwb_globals.g_tree_mat_loc_id = 2 THEN
        table_required  := ' mtl_rcv_mwb_onhand_v v ';
      ELSIF(inv_mwb_globals.g_status_id IS NULL) THEN
        table_required  := ' mtl_onhand_total_mwb_v v ';
          IF is_grade_t = TRUE THEN                           -- NSRIVAST, INVCONV
            table_required  := ' mtl_onhand_total_v v ';   -- NSRIVAST, INVCONV
          END IF;                                             -- NSRIVAST, INVCONV
      ELSE
        table_required  := ' mtl_onhand_total_v v ';
      END IF;

	       --bug 6633612
		IF (inv_mwb_globals.g_shipment_header_id is not null) THEN
			table_required  := table_required || ' , rcv_transactions rt, mtl_material_transactions mmt ';
		END IF;
		--bug 6633612

      IF inv_mwb_globals.g_tree_lot_attr_query IS NULL AND inv_mwb_globals.g_parent_lot IS NULL
        AND inv_mwb_globals.g_supplier_lot_from IS NULL AND inv_mwb_globals.g_supplier_lot_to IS NULL THEN
        query_str  := query_str || 'SELECT DISTINCT v.inventory_item_id, v.item from ' || table_required;
        query_str  := query_str || 'WHERE 1=1 ';
      ELSE
        query_str  :=
              query_str
           || 'SELECT DISTINCT v.inventory_item_id, v.item from'
           || '(SELECT lot_number lot_num, parent_lot_number, supplier_lot_number FROM mtl_lot_numbers WHERE 1=1 '
           || inv_mwb_globals.g_tree_lot_attr_query
           || ') mln, '
           || table_required;
        query_str  := query_str || 'WHERE mln.lot_num = v.lot_number ';
 		--BUG 7556505
		   IF inv_mwb_globals.g_parent_lot IS NOT NULL THEN
		       query_str  := query_str || ' AND mln.parent_lot_number = :parent_lot ';
	           END IF;
		--BUG 7556505
                        /* Bug 8396954 added below code for supplier_lot_number */
                IF (inv_mwb_globals.g_supplier_lot_from IS NOT NULL AND
                    inv_mwb_globals.g_supplier_lot_to IS NOT NULL AND
                    inv_mwb_globals.g_supplier_lot_from = inv_mwb_globals.g_supplier_lot_to) THEN
                    query_str  := query_str || ' AND mln.supplier_lot_number = :supplier_lot_f ';
                END IF;

                IF (inv_mwb_globals.g_supplier_lot_from IS NOT NULL AND
	            inv_mwb_globals.g_supplier_lot_from <> NVL(inv_mwb_globals.g_supplier_lot_to, -1) ) THEN
                    query_str  := query_str || ' AND mln.supplier_lot_number >= :supplier_lot_f ';
                END IF;

                IF (inv_mwb_globals.g_supplier_lot_to IS NOT NULL AND
	            inv_mwb_globals.g_supplier_lot_to <> NVL(inv_mwb_globals.g_supplier_lot_from, -1) ) THEN
                    query_str  := query_str || ' AND mln.supplier_lot_number <= :supplier_lot_t ';
                END IF;
                /* End of Bug 8396954 */
      END IF;

      --Bug # 3539766 (Group by and having clause have been added)
      IF inv_mwb_globals.g_qty_from IS NOT NULL OR inv_mwb_globals.g_qty_to IS NOT NULL THEN
        group_str := ' GROUP BY  v.organization_id  ';
      END IF;

      IF inv_mwb_globals.g_tree_subinventory_code IS NOT NULL
      OR inv_mwb_globals.g_subinventory_code IS NOT NULL THEN
        query_str  := query_str || ' AND v.subinventory_code = :sub ';
        IF group_str IS NOT NULL THEN
           group_str := group_str || ' , v.subinventory_code  ' ;
        END IF;
      END IF;

      IF inv_mwb_globals.g_tree_loc_id IS NOT NULL
      OR inv_mwb_globals.g_locator_id IS NOT NULL THEN
        query_str  := query_str || ' AND v.locator_id = :loc_id ';
        IF group_str IS NOT NULL THEN
           group_str := group_str || ' , v.locator_id  ' ;
        END IF;
      END IF;

       --bug 6633612
	IF (inv_mwb_globals.g_shipment_header_id is not null) THEN
		query_str := query_str || ' AND rt.shipment_header_id = :shipment_header_id '
					 || ' AND rt.transaction_id = mmt.rcv_transaction_id '
					 || ' AND rt.organization_id = mmt.organization_id '
					 || ' AND rt.transaction_type = ''DELIVER'''
					 || ' AND rt.destination_type_code = ''INVENTORY'''
					 || ' AND mmt.transaction_id = v.create_transaction_id '
					 || ' AND mmt.organization_id = v.organization_id ';

	END IF;
	--bug 6633612

  -- NSRIVAST, INVCONV, Start
      IF inv_mwb_globals.g_grade_from_code IS NOT NULL THEN
         query_str := query_str || ' AND v.grade_code = :grade_f ' ;
      END IF ;
      IF inv_mwb_globals.g_tree_grade_code  IS NOT NULL THEN
         query_str := query_str || ' AND v.grade_code = :grade_c ' ;
      END IF ;
   -- NSRIVAST, INVCONV, End

      IF inv_mwb_globals.g_project_id IS NOT NULL THEN
        query_str  := query_str || ' AND v.project_id = :pr_id ';
        IF group_str IS NOT NULL THEN
           group_str := group_str || ' , v.project_id  ' ;
        END IF;
      END IF;

      IF inv_mwb_globals.g_task_id IS NOT NULL THEN
        query_str  := query_str || ' AND v.task_id = :ta_id ';
        IF group_str IS NOT NULL THEN
           group_str := group_str || ' , inv_mwb_globals.g_task_id  ' ;
        END IF;
      END IF;

      IF inv_mwb_globals.g_inventory_item_id IS NOT NULL THEN
         query_str  := query_str || 'AND v.inventory_item_id = :item_id ';
      END IF;

      -- ER(9158529 client)
      IF inv_mwb_globals.g_client_code IS NOT NULL THEN
         query_str := query_str || ' AND v.inventory_item_id in (select DISTINCT inventory_item_id from mtl_system_items_b where wms_deploy.get_client_code(inventory_item_id) = :client_code) ';
      END IF;
      -- ER(9158529 client)

      -- ER(9158529)
      IF inv_mwb_globals.g_category_set_id IS NOT NULL THEN
         query_str := query_str || ' AND v.inventory_item_id in '
                                        || ' (select DISTINCT inventory_item_id from mtl_item_categories '
                                        || ' where organization_id = :organization_id '
                                        || ' and category_set_id = :category_set_id '
                                        || ' and category_id = nvl(:category_id, category_id)) ' ;
      END IF;
      -- ER(9158529)

      IF inv_mwb_globals.g_qty_from IS NOT NULL OR inv_mwb_globals.g_qty_to IS NOT NULL THEN
         group_str := group_str || ' , v.inventory_item_id, v.item_description, v.item ,v.uom ' ;
      END IF;

      --ER(3338592) Changes
      IF inv_mwb_globals.g_item_description IS NOT NULL THEN
         query_str := query_str || ' AND v.item_description LIKE :item_description ';
      END IF;

      IF inv_mwb_globals.g_revision IS NOT NULL THEN
        query_str  := query_str || 'AND v.revision = :rev ';
        IF group_str IS NOT NULL THEN
          group_str := group_str || ' , v.revision  ' ;
        END IF;
       END IF;

      IF inv_mwb_globals.g_cost_group_id IS NOT NULL THEN
        query_str  := query_str || 'AND v.cost_group_id = :cg_id ';
        IF group_str IS NOT NULL THEN
          group_str := group_str || ' , v.cost_group_id  ' ;
        END IF;
      END IF;

      IF inv_mwb_globals.g_tree_lot_number IS NOT NULL THEN
        query_str  := query_str || 'AND v.lot_number = :lot_n ';
        IF group_str IS NOT NULL THEN
           group_str := group_str || ' , v.lot_number  ' ;
         END IF;
      END IF;

      IF inv_mwb_globals.g_lot_from IS NOT NULL THEN
        query_str  := query_str || 'AND v.lot_number >= :lot_f ';
      END IF;

      IF inv_mwb_globals.g_lot_to IS NOT NULL THEN
       query_str  := query_str || 'AND v.lot_number <= :lot_t ';
      END IF;

      -- Onhand Material Status Support: If status is tracked at onhand level then check for status
      -- from onhand table (MOQD)
      if (l_default_status_id is not null) then
         IF inv_mwb_globals.g_status_id IS NOT NULL THEN
           query_str  := query_str || 'AND v.onhand_status_id = :st_id ';
         END IF;
      else
         IF inv_mwb_globals.g_status_id IS NOT NULL THEN
           query_str  := query_str || 'AND (v.subinventory_status_id = :st_id or v.locator_status_id = :st_id or ';
           query_str  := query_str || 'v.lot_status_id = :st_id) ';
         END IF;
      end if;

      IF inv_mwb_globals.g_containerized = 1 THEN
        query_str  := query_str || ' AND (v.containerized_flag is null or v.containerized_flag <> 1) ';
      ELSIF inv_mwb_globals.g_containerized = 2 THEN
        query_str  := query_str || 'AND v.containerized_flag = 1 ';
      END IF;


/*      IF inv_mwb_globals.g_view_by NOT IN ('SERIAL','LOT') THEN
         IF (inv_mwb_globals.g_lpn_from IS NULL
             AND inv_mwb_globals.g_lpn_to IS NULL)
         OR inv_mwb_globals.g_tree_parent_lpn_id IS NULL THEN
           query_str  := query_str || ' AND (containerized_flag is null or containerized_flag <> 1) ';
         ELSE
           query_str  := query_str || 'AND containerized_flag = 1 ';
         END IF;
      END IF;
*/


      /*IF inv_mwb_globals.g_site_id IS NOT NULL THEN
         query_str := query_str || ' AND PLANNING_TP_TYPE = 1 ';
         query_str := query_str || ' AND planning_organization_id = :site_id ' ;
       ELSIF inv_mwb_globals.g_vendor_id is NOT NULL THEN
         query_str := query_str || ' AND  PLANNING_TP_TYPE = 1 ';
         query_str := query_str || ' AND  planning_organization_id in ';
         query_str := query_str || ' (select vendor_site_id from po_vendor_sites_all ';
         query_str := query_str || '  where vendor_id = :vendor_id )';
      END IF;*/

      IF (inv_mwb_globals.g_planning_query_mode = 4) THEN
        query_str  := query_str || ' AND v.planning_organization_id = :plan_org ';
        query_str  := query_str || ' AND v.planning_tp_type = 2 ';
      ELSIF(inv_mwb_globals.g_planning_query_mode = 3) THEN
        query_str  := query_str || ' AND v.planning_organization_id = :plan_org ';
        query_str  := query_str || ' AND v.planning_tp_type = 1 ';
      ELSIF(inv_mwb_globals.g_planning_query_mode = 2) THEN
        query_str  := query_str || ' AND v.planning_tp_type = 1 ';
      END IF;

      IF (inv_mwb_globals.g_owning_qry_mode = 4) THEN
        query_str  := query_str || ' AND v.owning_organization_id = :own_org ';
        query_str  := query_str || ' AND v.owning_tp_type = 2 ';
      ELSIF(inv_mwb_globals.g_owning_qry_mode = 3) THEN
        query_str  := query_str || ' AND v.owning_organization_id = :own_org ';
        query_str  := query_str || ' AND v.owning_tp_type = 1 ';
      ELSIF(inv_mwb_globals.g_owning_qry_mode = 2) THEN
        query_str  := query_str || ' AND v.owning_tp_type = 1 ';
      END IF;

      IF inv_mwb_globals.g_qty_from IS NOT NULL OR inv_mwb_globals.g_qty_to IS NOT NULL THEN
         group_str := group_str || ' , v.planning_organization_id, v.planning_tp_type ';
         group_str := group_str || ' , v.owning_organization_id, v.owning_tp_type ';
         group_str := group_str || ' , v.item_lot_control, v.item_serial_control ';
      END IF;

      IF (inv_mwb_globals.g_locator_controlled = 2) THEN
        --Bug#3191526 add the LPNs which don't have any sub/loc association directly after org
        IF inv_mwb_globals.g_inserted_under_org = 'Y' OR inv_mwb_globals.g_inserted_under_org = 'y' THEN
          --don't add the below locator id not null check
          NULL;
        ELSE
          query_str  := query_str || 'AND v.locator_id IS not NULL ';
        END IF;
      ELSIF(inv_mwb_globals.g_locator_controlled = 1) THEN
        query_str  := query_str || 'AND v.locator_id IS NULL ';
      END IF;


      IF inv_mwb_globals.g_tree_mat_loc_id = 2 THEN
        --Bug#3191526 add the LPNs which don't have any sub/loc association directly after org
        IF inv_mwb_globals.g_inserted_under_org = 'Y' OR inv_mwb_globals.g_inserted_under_org = 'y' THEN
            query_str  := query_str || ' AND v.subinventory_code is null AND v.locator_id is null ';
        END IF;
        --Bug#3191526
      END IF;

      IF inv_mwb_globals.g_organization_id IS NOT NULL
      OR inv_mwb_globals.g_tree_organization_id IS NOT NULL THEN
        query_str  := query_str || 'AND v.organization_id = :org_id ';
      --Bug # 3411938
      ELSE
        query_str  := query_str || ' and EXISTS ( SELECT 1 ' ;
        query_str  := query_str || ' FROM org_access_view oav ' ;
        query_str  := query_str || ' WHERE oav.organization_id   = v.organization_id ' ;
        query_str  := query_str || ' AND oav.responsibility_id   = :responsibility_id ' ;
        query_str  := query_str || ' AND oav.resp_application_id = :resp_application_id ) ' ;
      END IF;

      IF inv_mwb_globals.g_qty_from IS NOT NULL THEN
         having_str := having_str || ' AND sum(on_hand) >= :qty_from ';
      END IF;

      IF inv_mwb_globals.g_qty_to IS NOT NULL THEN
         having_str := having_str || ' AND sum(on_hand) <= :qty_to ';
      END IF;

      IF inv_mwb_globals.g_qty_from IS NOT NULL OR inv_mwb_globals.g_qty_to IS NOT NULL THEN
        query_str := query_str || group_str || having_str ;
      ELSE
        query_str  := query_str || 'GROUP BY v.inventory_item_id, v.item ';
      END IF;

      query_str  := query_str || 'ORDER BY v.item ';

    ELSIF(
          (
           inv_mwb_globals.g_serial_from IS NOT NULL
           OR inv_mwb_globals.g_serial_to IS NOT NULL
           OR inv_mwb_globals.g_tree_serial_number IS NOT NULL
           OR inv_mwb_globals.g_unit_number IS NOT NULL
           OR inv_mwb_globals.g_tree_serial_attr_query IS NOT NULL
          )
          AND inv_mwb_globals.g_lpn_from IS NULL
          AND inv_mwb_globals.g_lpn_to IS NULL
          AND inv_mwb_globals.g_tree_parent_lpn_id IS NULL
          AND(NVL(inv_mwb_globals.g_prepacked, 1) = 1)
         ) THEN
      IF inv_mwb_globals.g_tree_mat_loc_id = 2 THEN
        table_required  := ' mtl_rcv_serial_oh_v v ';
      ELSIF(inv_mwb_globals.g_status_id IS NULL) THEN
        table_required  := ' mtl_onhand_serial_mwb_v v ';
        IF is_grade_t = TRUE THEN                           -- NSRIVAST, INVCONV
          table_required  := ' mtl_onhand_serial_v v ';   -- NSRIVAST, INVCONV
        END IF;                                             -- NSRIVAST, INVCONV
      ELSE
        table_required  := ' mtl_onhand_serial_v v ';
      END IF;

	--bug 6633612
	IF (inv_mwb_globals.g_shipment_header_id is not null) THEN
		table_required  := table_required || ' , rcv_transactions rt, mtl_material_transactions mmt ';
	END IF;
	--bug 6633612

      IF (inv_mwb_globals.g_tree_lot_attr_query IS NULL AND inv_mwb_globals.g_parent_lot IS NULL
            AND inv_mwb_globals.g_supplier_lot_from IS NULL AND inv_mwb_globals.g_supplier_lot_to IS NULL)
         AND inv_mwb_globals.g_tree_serial_attr_query IS NULL THEN
        query_str  := query_str || 'SELECT DISTINCT v.inventory_item_id, v.item from ' || table_required;
        query_str  := query_str || 'WHERE 1=1 ';
      ELSIF (inv_mwb_globals.g_tree_lot_attr_query IS NULL AND inv_mwb_globals.g_parent_lot IS NULL
            AND inv_mwb_globals.g_supplier_lot_from IS NULL AND inv_mwb_globals.g_supplier_lot_to IS NULL)
            AND inv_mwb_globals.g_tree_serial_attr_query IS NOT NULL THEN
        query_str  :=
              query_str
           || 'SELECT DISTINCT v.inventory_item_id, v.item from'
           || '(SELECT serial_number serial_num FROM mtl_serial_numbers WHERE 1=1 '
           || inv_mwb_globals.g_tree_serial_attr_query
           || ') msn, '
           || table_required;
        query_str  := query_str || 'WHERE msn.serial_num = v.serial_number ';
      ELSIF (inv_mwb_globals.g_tree_lot_attr_query IS NOT NULL OR inv_mwb_globals.g_parent_lot IS NOT NULL
            OR inv_mwb_globals.g_supplier_lot_from IS NOT NULL OR inv_mwb_globals.g_supplier_lot_to IS NOT NULL)
            AND inv_mwb_globals.g_tree_serial_attr_query IS NULL THEN
        query_str  :=
              query_str
           || 'SELECT DISTINCT v.inventory_item_id, v.item from'
           || '(SELECT lot_number lot_num, parent_lot_number, supplier_lot_number FROM mtl_lot_numbers WHERE 1=1 '
           || inv_mwb_globals.g_tree_lot_attr_query
           || ') mln, '
           || table_required;
        query_str  := query_str || 'WHERE mln.lot_num = v.lot_number ';
 		--BUG 7556505
		   IF inv_mwb_globals.g_parent_lot IS NOT NULL THEN
		       query_str  := query_str || ' AND mln.parent_lot_number = :parent_lot ';
	           END IF;
		--BUG 7556505
                /* Bug 8396954 added below code for supplier_lot_number */
                IF (inv_mwb_globals.g_supplier_lot_from IS NOT NULL AND
                    inv_mwb_globals.g_supplier_lot_to IS NOT NULL AND
                    inv_mwb_globals.g_supplier_lot_from = inv_mwb_globals.g_supplier_lot_to) THEN
                    query_str  := query_str || ' AND mln.supplier_lot_number = :supplier_lot_f ';
                END IF;

                IF (inv_mwb_globals.g_supplier_lot_from IS NOT NULL AND
	            inv_mwb_globals.g_supplier_lot_from <> NVL(inv_mwb_globals.g_supplier_lot_to, -1) ) THEN
                    query_str  := query_str || ' AND mln.supplier_lot_number >= :supplier_lot_f ';
                END IF;

                IF (inv_mwb_globals.g_supplier_lot_to IS NOT NULL AND
	            inv_mwb_globals.g_supplier_lot_to <> NVL(inv_mwb_globals.g_supplier_lot_from, -1) ) THEN
                    query_str  := query_str || ' AND mln.supplier_lot_number <= :supplier_lot_t ';
                END IF;
                /* End of Bug 8396954 */
      ELSIF (inv_mwb_globals.g_tree_lot_attr_query IS NOT NULL OR inv_mwb_globals.g_parent_lot IS NOT NULL
            OR inv_mwb_globals.g_supplier_lot_from IS NOT NULL OR inv_mwb_globals.g_supplier_lot_to IS NOT NULL)
            AND inv_mwb_globals.g_tree_serial_attr_query IS NOT NULL THEN
        query_str  :=
              query_str
           || 'SELECT DISTINCT v.inventory_item_id, v.item from'
           || '(SELECT lot_number lot_num, parent_lot_number, supplier_lot_number FROM mtl_lot_numbers WHERE 1=1 '
           || inv_mwb_globals.g_tree_lot_attr_query
           || ') mln, '
           || '(SELECT serial_number serial_num FROM mtl_serial_numbers WHERE 1=1 '
           || inv_mwb_globals.g_tree_serial_attr_query
           || ') msn, '
           || table_required;
        query_str  := query_str || 'WHERE mln.lot_num = v.lot_number ';
 		--BUG 7556505
		   IF inv_mwb_globals.g_parent_lot IS NOT NULL THEN
		       query_str  := query_str || ' AND mln.parent_lot_number = :parent_lot ';
	           END IF;
		--BUG 7556505
                /* Bug 8396954 added below code for supplier_lot_number */
                IF (inv_mwb_globals.g_supplier_lot_from IS NOT NULL AND
                    inv_mwb_globals.g_supplier_lot_to IS NOT NULL AND
                    inv_mwb_globals.g_supplier_lot_from = inv_mwb_globals.g_supplier_lot_to) THEN
                    query_str  := query_str || ' AND mln.supplier_lot_number = :supplier_lot_f ';
                END IF;

                IF (inv_mwb_globals.g_supplier_lot_from IS NOT NULL AND
	            inv_mwb_globals.g_supplier_lot_from <> NVL(inv_mwb_globals.g_supplier_lot_to, -1) ) THEN
                    query_str  := query_str || ' AND mln.supplier_lot_number >= :supplier_lot_f ';
                END IF;

                IF (inv_mwb_globals.g_supplier_lot_to IS NOT NULL AND
	            inv_mwb_globals.g_supplier_lot_to <> NVL(inv_mwb_globals.g_supplier_lot_from, -1) ) THEN
                    query_str  := query_str || ' AND mln.supplier_lot_number <= :supplier_lot_t ';
                END IF;
                /* End of Bug 8396954 */
        query_str  := query_str || 'AND msn.serial_num = v.serial_number ';
      END IF;

      --Bug # 3539766 (Group By and Having clause have been added)
      IF inv_mwb_globals.g_qty_from IS NOT NULL OR inv_mwb_globals.g_qty_to IS NOT NULL THEN
        group_str := ' GROUP BY  v.organization_id  ';
      END IF;

      IF inv_mwb_globals.g_tree_subinventory_code IS NOT NULL
      OR inv_mwb_globals.g_subinventory_code IS NOT NULL THEN
        query_str  := query_str || 'AND v.subinventory_code = :sub ';
        IF group_str IS NOT NULL THEN
           group_str := group_str || ' , v.subinventory_code  ' ;
        END IF;
      END IF;

      IF inv_mwb_globals.g_tree_loc_id IS NOT NULL
      OR inv_mwb_globals.g_locator_id IS NOT NULL THEN
        query_str  := query_str || 'AND v.locator_id = :loc_id ';
        IF group_str IS NOT NULL THEN
           group_str := group_str || ' , v.locator_id  ' ;
        END IF;
      END IF;
      --bug 6633612
	IF (inv_mwb_globals.g_shipment_header_id is not null) THEN
		query_str := query_str || ' AND rt.shipment_header_id = :shipment_header_id '
					 || ' AND rt.transaction_id = mmt.rcv_transaction_id '
					 || ' AND rt.organization_id = mmt.organization_id '
					 || ' AND rt.transaction_type = ''DELIVER'''
					 || ' AND rt.destination_type_code = ''INVENTORY'''
					 || ' AND mmt.transaction_id = v.last_transaction_id '
					 || ' AND mmt.organization_id = v.organization_id ';

	END IF;
	--bug 6633612

  -- NSRIVAST, INVCONV, Start
      IF inv_mwb_globals.g_grade_from_code IS NOT NULL THEN
         query_str := query_str || ' AND v.grade_code = :grade_f ' ;
      END IF ;
      IF inv_mwb_globals.g_tree_grade_code  IS NOT NULL THEN
         query_str := query_str || ' AND v.grade_code = :grade_c ' ;
      END IF ;
   -- NSRIVAST, INVCONV, End

      IF inv_mwb_globals.g_project_id IS NOT NULL THEN
        query_str  := query_str || ' AND v.project_id = :pr_id ';
        IF group_str IS NOT NULL THEN
           group_str := group_str || ' , v.project_id  ' ;
        END IF;
      END IF;

      IF inv_mwb_globals.g_task_id IS NOT NULL THEN
        query_str  := query_str || ' AND v.task_id = :ta_id ';
        IF group_str IS NOT NULL THEN
           group_str := group_str || ' , inv_mwb_globals.g_task_id  ' ;
        END IF;
      END IF;

      IF inv_mwb_globals.g_inventory_item_id IS NOT NULL THEN
         query_str  := query_str || 'AND v.inventory_item_id = :item_id ';
      END IF;

      -- ER(9158529 client)
      IF inv_mwb_globals.g_client_code IS NOT NULL THEN
         query_str := query_str || ' AND v.inventory_item_id in (select DISTINCT inventory_item_id from mtl_system_items_b where wms_deploy.get_client_code(inventory_item_id) = :client_code) ';
      END IF;
      -- ER(9158529 client)

      -- ER(9158529)
      IF inv_mwb_globals.g_category_set_id IS NOT NULL THEN
         query_str := query_str || ' AND v.inventory_item_id in '
                                     || ' (select DISTINCT inventory_item_id from mtl_item_categories '
                                     || ' where organization_id = :organization_id '
                                     || ' and category_set_id = :category_set_id '
                                     || ' and category_id = nvl(:category_id, category_id)) ' ;
      END IF;
      -- ER(9158529)

      IF inv_mwb_globals.g_qty_from IS NOT NULL OR inv_mwb_globals.g_qty_to IS NOT NULL THEN
         group_str := group_str || ' , v.inventory_item_id, v.item_description, v.item ,v.uom ' ;
      END IF;

      --ER(3338592) Changes
      IF inv_mwb_globals.g_item_description IS NOT NULL THEN
         query_str := query_str || ' AND v.item_description LIKE :item_description ';
      END IF;

      IF inv_mwb_globals.g_revision IS NOT NULL THEN
        query_str  := query_str || ' AND v.revision = :rev ';
        IF group_str IS NOT NULL THEN
           group_str := group_str || ' , v.revision  ' ;
        END IF;
      END IF;

      IF inv_mwb_globals.g_cost_group_id IS NOT NULL THEN
        query_str  := query_str || ' AND v.cost_group_id = :cg_id ';
        IF group_str IS NOT NULL THEN
           group_str := group_str || ' , v.cost_group_id  ' ;
        END IF;
      END IF;

      IF inv_mwb_globals.g_tree_lot_number IS NOT NULL THEN
        query_str  := query_str || ' AND v.lot_number = :lot_n ';
         IF group_str IS NOT NULL THEN
            group_str := group_str || ' , v.lot_number  ' ;
         END IF;
      END IF;

      IF inv_mwb_globals.g_lot_from IS NOT NULL THEN
        query_str  := query_str || ' AND v.lot_number >= :lot_f ';
      END IF;

      IF inv_mwb_globals.g_lot_to IS NOT NULL THEN
        query_str  := query_str || ' AND v.lot_number <= :lot_t ';
      END IF;

      IF inv_mwb_globals.g_tree_serial_number IS NOT NULL THEN
        query_str  := query_str || ' AND v.serial_number = :serial_n ';
         IF group_str IS NOT NULL THEN
            group_str := group_str || ' , v.serial_number  ' ;
         END IF;
      END IF;

      IF inv_mwb_globals.g_serial_from IS NOT NULL THEN
        query_str  := query_str || ' AND v.serial_number >= :serial_f ';
      END IF;

      IF inv_mwb_globals.g_serial_to IS NOT NULL THEN
        query_str  := query_str || ' AND v.serial_number <= :serial_t ';
      END IF;

      IF inv_mwb_globals.g_unit_number IS NOT NULL THEN
        query_str  := query_str || ' AND v.unit_number = :un_id ';
         IF group_str IS NOT NULL THEN
            group_str := group_str || ' , v.unit_number  ' ;
         END IF;
      END IF;

      -- Onhand Material Status Support: If status is tracked at onhand level then check for status
      -- from serial table (MSN)
      if (l_default_status_id is not null) then
         IF inv_mwb_globals.g_status_id IS NOT NULL THEN
           query_str  := query_str || 'AND v.serial_status_id = :st_id ';
         END IF;
      else
         IF inv_mwb_globals.g_status_id IS NOT NULL THEN
           query_str  := query_str || ' AND (v.subinventory_status_id = :st_id or v.locator_status_id = :st_id or ';
           query_str  := query_str || ' v.lot_status_id = :st_id or v.serial_status_id = :st_id) ';
         END IF;
      end if;

         IF inv_mwb_globals.g_containerized = 1 THEN
           query_str  := query_str || 'AND v.lpn_id IS NULL ';
         ELSIF inv_mwb_globals.g_containerized = 2 THEN
           query_str  := query_str || 'AND v.lpn_id IS NOT NULL ';
         END IF;


      /*IF inv_mwb_globals.g_site_id IS NOT NULL THEN
         query_str := query_str || ' AND PLANNING_TP_TYPE = 1 ';
         query_str := query_str || ' AND planning_organization_id = :site_id ' ;
       ELSIF inv_mwb_globals.g_vendor_id is NOT NULL THEN
         query_str := query_str || ' AND  PLANNING_TP_TYPE = 1 ';
         query_str := query_str || ' AND  planning_organization_id in ';
         query_str := query_str || ' (select vendor_site_id from po_vendor_sites_all ';
         query_str := query_str || '  where vendor_id = :vendor_id )';
      END IF;*/

      IF (inv_mwb_globals.g_planning_query_mode = 4) THEN
        query_str  := query_str || ' AND v.planning_organization_id = :plan_org ';
        query_str  := query_str || ' AND v.planning_tp_type = 2 ';
      ELSIF(inv_mwb_globals.g_planning_query_mode = 3) THEN
        query_str  := query_str || ' AND v.planning_organization_id = :plan_org ';
        query_str  := query_str || ' AND v.planning_tp_type = 1 ';
      ELSIF(inv_mwb_globals.g_planning_query_mode = 2) THEN
        query_str  := query_str || ' AND v.planning_tp_type = 1 ';
      END IF;

      IF (inv_mwb_globals.g_owning_qry_mode = 4) THEN
        query_str  := query_str || ' AND v.owning_organization_id = :own_org ';
        query_str  := query_str || ' AND v.owning_tp_type = 2 ';
      ELSIF(inv_mwb_globals.g_owning_qry_mode = 3) THEN
        query_str  := query_str || ' AND v.owning_organization_id = :own_org ';
        query_str  := query_str || ' AND v.owning_tp_type = 1 ';
      ELSIF(inv_mwb_globals.g_owning_qry_mode = 2) THEN
        query_str  := query_str || ' AND v.owning_tp_type = 1 ';
      END IF;

      IF inv_mwb_globals.g_qty_from IS NOT NULL OR inv_mwb_globals.g_qty_to IS NOT NULL THEN
         group_str := group_str || ' , v.planning_organization_id, v.planning_tp_type ';
         group_str := group_str || ' , v.owning_organization_id, v.owning_tp_type ';
         group_str := group_str || ' , v.item_lot_control, v.item_serial_control ';
      END IF;

      IF (inv_mwb_globals.g_locator_controlled = 2) THEN
        --Bug#3191526 add the LPNs which don't have any sub/loc association directly after org
        IF inv_mwb_globals.g_inserted_under_org = 'Y' OR inv_mwb_globals.g_inserted_under_org = 'y' THEN
          --don't add the below locator id not null check
          NULL;
        ELSE
          query_str  := query_str || 'AND v.locator_id IS not NULL ';
        END IF;
      ELSIF(inv_mwb_globals.g_locator_controlled = 1) THEN
        query_str  := query_str || 'AND v.locator_id IS NULL ';
      END IF;

      IF inv_mwb_globals.g_tree_mat_loc_id = 2 THEN
         --Bug#3191526 add the LPNs which don't have any sub/loc association directly after org
         IF inv_mwb_globals.g_inserted_under_org = 'Y' OR inv_mwb_globals.g_inserted_under_org = 'y' THEN
            query_str  := query_str || ' AND v.subinventory_code is null AND v.locator_id is null ';
     	   END IF;
         --Bug#3191526
      END IF;

      IF inv_mwb_globals.g_organization_id IS NOT NULL
      OR inv_mwb_globals.g_tree_organization_id IS NOT NULL THEN
        query_str  := query_str || 'AND v.organization_id = :org_id ';
      --Bug # 3411938
      ELSE
        query_str  := query_str || ' and EXISTS ( SELECT 1 ' ;
        query_str  := query_str || ' FROM org_access_view oav ' ;
        query_str  := query_str || ' WHERE oav.organization_id   = v.organization_id ' ;
        query_str  := query_str || ' AND oav.responsibility_id   = :responsibility_id ' ;
        query_str  := query_str || ' AND oav.resp_application_id = :resp_application_id ) ' ;
      END IF;

      IF inv_mwb_globals.g_qty_from IS NOT NULL THEN
         having_str := having_str || ' AND sum(on_hand) >= :qty_from ';
      END IF;

      IF inv_mwb_globals.g_qty_to IS NOT NULL THEN
         having_str := having_str || ' AND sum(on_hand) <= :qty_to ';
      END IF;

      IF inv_mwb_globals.g_qty_from IS NOT NULL OR inv_mwb_globals.g_qty_to IS NOT NULL THEN
        query_str := query_str || group_str || having_str ;
      ELSE
        query_str  := query_str || 'GROUP BY v.inventory_item_id, v.item ';
      END IF;

      query_str  := query_str || 'ORDER BY v.item ';

    -- Need to use both mtl_onhand_total_v and mtl_onhand_serial_v
    ELSIF(
          inv_mwb_globals.g_serial_from IS NULL
          AND inv_mwb_globals.g_serial_to IS NULL
          AND inv_mwb_globals.g_tree_serial_number IS NULL
          AND inv_mwb_globals.g_status_id IS NOT NULL
          AND inv_mwb_globals.g_unit_number IS NULL
          AND inv_mwb_globals.g_lpn_from IS NULL
          AND inv_mwb_globals.g_lpn_to IS NULL
          AND inv_mwb_globals.g_tree_parent_lpn_id IS NULL
          AND(NVL(inv_mwb_globals.g_prepacked, 1) = 1)
         ) THEN
      query_str  := 'SELECT DISTINCT inventory_item_id, item from( ';

      IF (inv_mwb_globals.g_status_id IS NULL) THEN
        table_required  := ' mtl_onhand_total_mwb_v v ';
--      ELSIF is_grade_t = TRUE THEN                           -- NSRIVAST, INVCONV
--          table_required  := ' mtl_onhand_new_lpn_v mot ';   -- NSRIVAST, INVCONV
      ELSE
        table_required  := ' mtl_onhand_total_v v ';
      END IF;
	--bug 6633612
		IF (inv_mwb_globals.g_shipment_header_id is not null) THEN
			table_required  := table_required || ' , rcv_transactions rt, mtl_material_transactions mmt ';
		END IF;
	--bug 6633612

      IF inv_mwb_globals.g_tree_lot_attr_query IS NULL AND inv_mwb_globals.g_parent_lot IS NULL
        AND inv_mwb_globals.g_supplier_lot_from IS NULL AND inv_mwb_globals.g_supplier_lot_to IS NULL THEN
        query_str  := query_str || 'SELECT v.inventory_item_id inventory_item_id, v.item item from ' || table_required;
        query_str  := query_str || 'WHERE 1=1 ';
      ELSE
        query_str  :=
              query_str
           || 'SELECT v.inventory_item_id inventory_item_id, v.item item from'
           || '(SELECT lot_number lot_num, parent_lot_number, supplier_lot_number FROM mtl_lot_numbers WHERE 1=1 '
           || inv_mwb_globals.g_tree_lot_attr_query
           || ') mln, mtl_onhand_total_v v ';
        query_str  := query_str || 'WHERE mln.lot_num = v.lot_number ';
 		--BUG 7556505
		   IF inv_mwb_globals.g_parent_lot IS NOT NULL THEN
		       query_str  := query_str || ' AND mln.parent_lot_number = :parent_lot ';
	           END IF;
		--BUG 7556505
                /* Bug 8396954 added below code for supplier_lot_number */
                IF (inv_mwb_globals.g_supplier_lot_from IS NOT NULL AND
                    inv_mwb_globals.g_supplier_lot_to IS NOT NULL AND
                    inv_mwb_globals.g_supplier_lot_from = inv_mwb_globals.g_supplier_lot_to) THEN
                    query_str  := query_str || ' AND mln.supplier_lot_number = :supplier_lot_f ';
                END IF;

                IF (inv_mwb_globals.g_supplier_lot_from IS NOT NULL AND
	            inv_mwb_globals.g_supplier_lot_from <> NVL(inv_mwb_globals.g_supplier_lot_to, -1) ) THEN
                    query_str  := query_str || ' AND mln.supplier_lot_number >= :supplier_lot_f ';
                END IF;

                IF (inv_mwb_globals.g_supplier_lot_to IS NOT NULL AND
	            inv_mwb_globals.g_supplier_lot_to <> NVL(inv_mwb_globals.g_supplier_lot_from, -1) ) THEN
                    query_str  := query_str || ' AND mln.supplier_lot_number <= :supplier_lot_t ';
                END IF;
                /* End of Bug 8396954 */
      END IF;

      -- Bug #3539766 (Group By and Having Clause have been added)
      IF inv_mwb_globals.g_qty_from IS NOT NULL OR inv_mwb_globals.g_qty_to IS NOT NULL THEN
        group_str := ' GROUP BY  v.organization_id  ';
      END IF;

      IF inv_mwb_globals.g_tree_subinventory_code IS NOT NULL
      OR inv_mwb_globals.g_subinventory_code IS NOT NULL THEN
        query_str  := query_str || 'AND v.subinventory_code = :sub ';
        IF group_str IS NOT NULL THEN
           group_str := group_str || ' , v.subinventory_code  ' ;
        END IF;
      END IF;

      IF inv_mwb_globals.g_tree_loc_id IS NOT NULL
      OR inv_mwb_globals.g_locator_id IS NOT NULL THEN
        query_str  := query_str || 'AND v.locator_id = :loc_id ';
        IF group_str IS NOT NULL THEN
           group_str := group_str || ' , v.locator_id  ' ;
        END IF;
      END IF;

      --bug 6633612
	IF (inv_mwb_globals.g_shipment_header_id is not null) THEN
		query_str := query_str || ' AND rt.shipment_header_id = :shipment_header_id '
					 || ' AND rt.transaction_id = mmt.rcv_transaction_id '
					 || ' AND rt.organization_id = mmt.organization_id '
					 || ' AND rt.transaction_type = ''DELIVER'''
					 || ' AND rt.destination_type_code = ''INVENTORY'''
					 || ' AND mmt.transaction_id = v.create_transaction_id '
					 || ' AND mmt.organization_id = v.organization_id ';

	END IF;
	--bug 6633612

  -- NSRIVAST, INVCONV, Start
      IF inv_mwb_globals.g_grade_from_code IS NOT NULL THEN
         query_str := query_str || ' AND v.grade_code = :grade_f ' ;
      END IF ;
      IF inv_mwb_globals.g_tree_grade_code  IS NOT NULL THEN
         query_str := query_str || ' AND v.grade_code = :grade_c ' ;
      END IF ;
   -- NSRIVAST, INVCONV, End

      IF inv_mwb_globals.g_project_id IS NOT NULL THEN
        query_str  := query_str || ' AND v.project_id = :pr_id ';
        IF group_str IS NOT NULL THEN
           group_str := group_str || ' , v.project_id  ' ;
        END IF;
      END IF;

      IF inv_mwb_globals.g_task_id IS NOT NULL THEN
        query_str  := query_str || ' AND v.task_id = :ta_id ';
        IF group_str IS NOT NULL THEN
           group_str := group_str || ' , inv_mwb_globals.g_task_id  ' ;
        END IF;
      END IF;

      IF inv_mwb_globals.g_inventory_item_id IS NOT NULL THEN
         query_str  := query_str || 'AND v.inventory_item_id = :item_id ';
      END IF;

      -- ER(9158529 client)
      IF inv_mwb_globals.g_client_code IS NOT NULL THEN
         query_str := query_str || ' AND v.inventory_item_id in (select DISTINCT inventory_item_id from mtl_system_items_b where wms_deploy.get_client_code(inventory_item_id) = :client_code) ';
      END IF;
      -- ER(9158529 client)

      -- ER(9158529)
      IF inv_mwb_globals.g_category_set_id IS NOT NULL THEN
         query_str := query_str || ' AND v.inventory_item_id in '
                                     || ' (select DISTINCT inventory_item_id from mtl_item_categories '
                                     || ' where organization_id = :organization_id '
                                     || ' and category_set_id = :category_set_id '
                                     || ' and category_id = nvl(:category_id, category_id)) ' ;
      END IF;
      -- ER(9158529)

      IF inv_mwb_globals.g_qty_from IS NOT NULL OR inv_mwb_globals.g_qty_to IS NOT NULL THEN
         group_str := group_str || ' ,v.inventory_item_id, v.item_description, v.item ,v.uom ' ;
      END IF;

      --ER(3335892) Changes
      IF inv_mwb_globals.g_item_description IS NOT NULL THEN
         query_str := query_str || ' AND v.item_description LIKE :item_description ';
      END IF;

      IF inv_mwb_globals.g_revision IS NOT NULL THEN
        query_str  := query_str || 'AND v.revision = :rev ';
        IF group_str IS NOT NULL THEN
           group_str := group_str || ' , v.revision  ' ;
        END IF;
      END IF;

      IF inv_mwb_globals.g_cost_group_id IS NOT NULL THEN
        query_str  := query_str || 'AND v.cost_group_id = :cg_id ';
        IF group_str IS NOT NULL THEN
           group_str := group_str || ' , v.cost_group_id  ' ;
        END IF;
      END IF;

      IF inv_mwb_globals.g_tree_lot_number IS NOT NULL THEN
        query_str  := query_str || 'AND v.lot_number = :lot_n ';
         IF group_str IS NOT NULL THEN
            group_str := group_str || ' , v.lot_number  ' ;
          END IF;
      END IF;

      IF inv_mwb_globals.g_lot_from IS NOT NULL THEN
        query_str  := query_str || 'AND v.lot_number >= :lot_f ';
      END IF;

      IF inv_mwb_globals.g_lot_to IS NOT NULL THEN
        query_str  := query_str || 'AND v.lot_number <= :lot_t ';
      END IF;

      -- Onhand Material Status Support: Status needs to be checked from the onhand table
      if (l_default_status_id is not null) then
         IF inv_mwb_globals.g_status_id IS NOT NULL THEN
           query_str  := query_str || 'AND v.onhand_status_id = :st_id ';
         END IF;
      else
         IF inv_mwb_globals.g_status_id IS NOT NULL THEN
           query_str  := query_str || 'AND (v.subinventory_status_id = :st_id or ';
           query_str  := query_str || 'v.locator_status_id = :st_id or v.lot_status_id = :st_id) ';
         END IF;
      end if;

      IF inv_mwb_globals.g_containerized = 1 THEN
        query_str  := query_str || 'AND v.lpn_id IS NOT NULL ';
      ELSIF inv_mwb_globals.g_containerized = 2 THEN
        query_str  := query_str || 'AND v.lpn_id IS NULL ';
      END IF;

      /*query_str := query_str || ' AND eixsts ';
              || ' ( select null from mtl_system_items msi WHERE ';
              || ' moq.organization_id = msi.organization_id and ';
              || ' moq.inventory_item_id =  msi.inventory_item_id) and ';
              || ' serial_number_control_code in (1,6) ) ';*/

      --query_str  := query_str || 'AND serial_number_control_code in (1,6) ';
      query_str  := query_str || 'AND v.item_serial_control in (1,6) ';

      /*IF inv_mwb_globals.g_site_id IS NOT NULL THEN
         query_str := query_str || ' AND PLANNING_TP_TYPE = 1 ';
         query_str := query_str || ' AND planning_organization_id = :site_id ' ;
       ELSIF inv_mwb_globals.g_vendor_id is NOT NULL THEN
         query_str := query_str || ' AND  PLANNING_TP_TYPE = 1 ';
         query_str := query_str || ' AND  planning_organization_id in ';
         query_str := query_str || ' (select vendor_site_id from po_vendor_sites_all ';
         query_str := query_str || '  where vendor_id = :vendor_id )';
      END IF;*/

      IF (inv_mwb_globals.g_planning_query_mode = 4) THEN
        query_str  := query_str || ' AND v.planning_organization_id = :plan_org ';
        query_str  := query_str || ' AND v.planning_tp_type = 2 ';
      ELSIF(inv_mwb_globals.g_planning_query_mode = 3) THEN
        query_str  := query_str || ' AND v.planning_organization_id = :plan_org ';
        query_str  := query_str || ' AND v.planning_tp_type = 1 ';
      ELSIF(inv_mwb_globals.g_planning_query_mode = 2) THEN
        query_str  := query_str || ' AND v.planning_tp_type = 1 ';
      END IF;

      IF (inv_mwb_globals.g_owning_qry_mode = 4) THEN
        query_str  := query_str || ' AND v.owning_organization_id = :own_org ';
        query_str  := query_str || ' AND v.owning_tp_type = 2 ';
      ELSIF(inv_mwb_globals.g_owning_qry_mode = 3) THEN
        query_str  := query_str || ' AND v.owning_organization_id = :own_org ';
        query_str  := query_str || ' AND v.owning_tp_type = 1 ';
      ELSIF(inv_mwb_globals.g_owning_qry_mode = 2) THEN
        query_str  := query_str || ' AND v.owning_tp_type = 1 ';
      END IF;

      IF inv_mwb_globals.g_qty_from IS NOT NULL OR inv_mwb_globals.g_qty_to IS NOT NULL THEN
         group_str := group_str || ' , v.planning_organization_id, v.planning_tp_type ';
         group_str := group_str || ' , v.owning_organization_id, v.owning_tp_type ';
         group_str := group_str || ' , v.item_lot_control, v.item_serial_control ';
      END IF;

      IF (inv_mwb_globals.g_locator_controlled = 2) THEN
        --Bug#3191526 add the LPNs which don't have any sub/loc association directly after org
        IF inv_mwb_globals.g_inserted_under_org = 'Y' OR inv_mwb_globals.g_inserted_under_org = 'y' THEN
          --don't add the below locator id not null check
          NULL;
        ELSE
          query_str  := query_str || 'AND v.locator_id IS not NULL ';
        END IF;
      ELSIF(inv_mwb_globals.g_locator_controlled = 1) THEN
        query_str  := query_str || 'AND v.locator_id IS NULL ';
      END IF;

      IF inv_mwb_globals.g_organization_id IS NOT NULL
      OR inv_mwb_globals.g_tree_organization_id IS NOT NULL THEN
        query_str  := query_str || 'AND v.organization_id = :org_id ';
      ELSE
        query_str  := query_str || ' and EXISTS ( SELECT 1 ' ;
        query_str  := query_str || ' FROM org_access_view oav ' ;
        query_str  := query_str || ' WHERE oav.organization_id   = v.organization_id ' ;
        query_str  := query_str || ' AND oav.responsibility_id   = :responsibility_id ' ;
        query_str  := query_str || ' AND oav.resp_application_id = :resp_application_id ) ' ;
      END IF;

      IF inv_mwb_globals.g_qty_from IS NOT NULL THEN
         having_str := having_str || ' AND sum(on_hand) >= :qty_from ';
      END IF;

      IF inv_mwb_globals.g_qty_to IS NOT NULL THEN
         having_str := having_str || ' AND sum(on_hand) <= :qty_to ';
      END IF;

      IF inv_mwb_globals.g_qty_from IS NOT NULL OR inv_mwb_globals.g_qty_to IS NOT NULL THEN
        query_str := query_str || group_str || having_str ;
      ELSE
        query_str  := query_str || 'GROUP BY v.inventory_item_id, v.item ';
      END IF;

      query_str  := query_str || 'UNION ';

      --Reinitializing the variable
      having_str := ' HAVING 1=1 ' ;

      IF (inv_mwb_globals.g_tree_lot_attr_query IS NULL AND inv_mwb_globals.g_parent_lot IS NULL
            AND inv_mwb_globals.g_supplier_lot_from IS NULL AND inv_mwb_globals.g_supplier_lot_to IS NULL)
         AND inv_mwb_globals.g_tree_serial_attr_query IS NULL THEN
        query_str  := query_str || 'SELECT v.inventory_item_id inventory_item_id, v.item item from mtl_onhand_serial_v v ';
        query_str  := query_str || 'WHERE 1=1 ';
      ELSIF (inv_mwb_globals.g_tree_lot_attr_query IS NOT NULL OR inv_mwb_globals.g_parent_lot IS NOT NULL
            OR inv_mwb_globals.g_supplier_lot_from IS NOT NULL OR inv_mwb_globals.g_supplier_lot_to IS NOT NULL)
            AND inv_mwb_globals.g_tree_serial_attr_query IS NULL THEN
        query_str  :=
              query_str
           || 'SELECT v.inventory_item_id inventory_item_id, v.item item from'
           || '(SELECT lot_number lot_num, parent_lot_number, supplier_lot_number FROM mtl_lot_numbers WHERE 1=1 '
           || inv_mwb_globals.g_tree_lot_attr_query
           || ') mln, mtl_onhand_serial_v v ';
        query_str  := query_str || 'WHERE mln.lot_num = v.lot_number ';
 		--BUG 7556505
		   IF inv_mwb_globals.g_parent_lot IS NOT NULL THEN
		       query_str  := query_str || ' AND mln.parent_lot_number = :parent_lot ';
	           END IF;
		--BUG 7556505
                /* Bug 8396954 added below code for supplier_lot_number */
                IF (inv_mwb_globals.g_supplier_lot_from IS NOT NULL AND
                    inv_mwb_globals.g_supplier_lot_to IS NOT NULL AND
                    inv_mwb_globals.g_supplier_lot_from = inv_mwb_globals.g_supplier_lot_to) THEN
                    query_str  := query_str || ' AND mln.supplier_lot_number = :supplier_lot_f ';
                END IF;

                IF (inv_mwb_globals.g_supplier_lot_from IS NOT NULL AND
	            inv_mwb_globals.g_supplier_lot_from <> NVL(inv_mwb_globals.g_supplier_lot_to, -1) ) THEN
                    query_str  := query_str || ' AND mln.supplier_lot_number >= :supplier_lot_f ';
                END IF;

                IF (inv_mwb_globals.g_supplier_lot_to IS NOT NULL AND
	            inv_mwb_globals.g_supplier_lot_to <> NVL(inv_mwb_globals.g_supplier_lot_from, -1) ) THEN
                    query_str  := query_str || ' AND mln.supplier_lot_number <= :supplier_lot_t ';
                END IF;
                /* End of Bug 8396954 */
      END IF;

      --Bug #3539766 (Group By and Having clause have been added)
      IF inv_mwb_globals.g_qty_from IS NOT NULL OR inv_mwb_globals.g_qty_to IS NOT NULL THEN
        group_str := ' GROUP BY  v.organization_id  ';
      END IF;

      IF inv_mwb_globals.g_tree_subinventory_code IS NOT NULL
      OR inv_mwb_globals.g_subinventory_code IS NOT NULL THEN
        query_str  := query_str || 'AND v.subinventory_code = :sub ';
        IF group_str IS NOT NULL THEN
           group_str := group_str || ' , v.subinventory_code  ' ;
        END IF;
      END IF;

      IF inv_mwb_globals.g_tree_loc_id IS NOT NULL
      OR inv_mwb_globals.g_locator_id IS NOT NULL THEN
        query_str  := query_str || 'AND v.locator_id = :loc_id ';
        IF group_str IS NOT NULL THEN
           group_str := group_str || ' , v.locator_id  ' ;
        END IF;
      END IF;

      --bug 6633612
	IF (inv_mwb_globals.g_shipment_header_id is not null) THEN
		query_str := query_str || ' AND rt.shipment_header_id = :shipment_header_id '
					 || ' AND rt.transaction_id = mmt.rcv_transaction_id '
					 || ' AND rt.organization_id = mmt.organization_id '
					 || ' AND rt.transaction_type = ''DELIVER'''
					 || ' AND rt.destination_type_code = ''INVENTORY'''
					 || ' AND mmt.transaction_id = v.last_transaction_id '
					 || ' AND mmt.organization_id = v.organization_id ';

	END IF;
	--bug 6633612

      IF inv_mwb_globals.g_project_id IS NOT NULL THEN
        query_str  := query_str || ' AND v.project_id = :pr_id ';
        IF group_str IS NOT NULL THEN
           group_str := group_str || ' , v.project_id  ' ;
        END IF;
      END IF;

      IF inv_mwb_globals.g_task_id IS NOT NULL THEN
        query_str  := query_str || ' AND v.task_id = :ta_id ';
        IF group_str IS NOT NULL THEN
           group_str := group_str || ' , inv_mwb_globals.g_task_id  ' ;
        END IF;
      END IF;

      IF inv_mwb_globals.g_inventory_item_id IS NOT NULL THEN
         query_str  := query_str || 'AND v.inventory_item_id = :item_id ';
      END IF;

      -- ER(9158529 client)
      IF inv_mwb_globals.g_client_code IS NOT NULL THEN
         query_str := query_str || ' AND v.inventory_item_id in (select DISTINCT inventory_item_id from mtl_system_items_b where wms_deploy.get_client_code(inventory_item_id) = :client_code) ';
      END IF;
      -- ER(9158529 client)

      -- ER(9158529)
      IF inv_mwb_globals.g_category_set_id IS NOT NULL THEN
         query_str := query_str || ' AND v.inventory_item_id in '
                                     || ' (select DISTINCT inventory_item_id from mtl_item_categories '
                                     || ' where organization_id = :organization_id '
                                     || ' and category_set_id = :category_set_id '
                                     || ' and category_id = nvl(:category_id, category_id)) ' ;
      END IF;
      -- ER(9158529)

      IF inv_mwb_globals.g_qty_from IS NOT NULL OR inv_mwb_globals.g_qty_to IS NOT NULL THEN
         group_str := group_str || ' , v.inventory_item_id, v.item_description, v.item ,v.uom ' ;
      END IF;

      --ER(3338592) Changes
      IF inv_mwb_globals.g_item_description IS NOT NULL THEN
         query_str := query_str || ' AND v.item_description LIKE :item_description ';
      END IF;

      IF inv_mwb_globals.g_revision IS NOT NULL THEN
        query_str  := query_str || 'AND v.revision = :rev ';
        IF group_str IS NOT NULL THEN
           group_str := group_str || ' , v.revision  ' ;
        END IF;
      END IF;

      IF inv_mwb_globals.g_cost_group_id IS NOT NULL THEN
        query_str  := query_str || 'AND v.cost_group_id = :cg_id ';
        IF group_str IS NOT NULL THEN
           group_str := group_str || ' , v.cost_group_id  ' ;
        END IF;
      END IF;

      IF inv_mwb_globals.g_tree_lot_number IS NOT NULL THEN
        query_str  := query_str || 'AND v.lot_number = :lot_n ';
        IF group_str IS NOT NULL THEN
           group_str := group_str || ' , v.lot_number  ' ;
        END IF;
      END IF;

      IF inv_mwb_globals.g_lot_from IS NOT NULL THEN
        query_str  := query_str || 'AND v.lot_number >= :lot_f ';
      END IF;

      IF inv_mwb_globals.g_lot_to IS NOT NULL THEN
        query_str  := query_str || 'AND v.lot_number <= :lot_t ';
      END IF;

      IF inv_mwb_globals.g_serial_from IS NOT NULL THEN
        query_str  := query_str || 'AND v.serial_number >= :serial_f ';
      END IF;

      IF inv_mwb_globals.g_serial_to IS NOT NULL THEN
        query_str  := query_str || 'AND v.serial_number <= :serial_t ';
      END IF;

      -- Onhand Material Status Support: Status needs to be checked from the serial table (MSN)
      if (l_default_status_id is not null) then
         IF inv_mwb_globals.g_status_id IS NOT NULL THEN
           query_str  := query_str || 'AND v.serial_status_id = :st_id ';
         END IF;
      else
         IF inv_mwb_globals.g_status_id IS NOT NULL THEN
           query_str  := query_str || 'AND (v.subinventory_status_id = :st_id or v.locator_status_id = :st_id or ';
           query_str  := query_str || 'v.lot_status_id = :st_id or v.serial_status_id = :st_id) ';
         END IF;
      end if;

      /*IF(inv_mwb_globals.g_vendor_id IS NULL AND inv_mwb_globals.g_site_id IS NULL) THEN
        IF inv_mwb_globals.g_containerized = 1 THEN
          query_str := query_str || ' AND (containerized_flag is null or containerized_flag <> 1) ';
        ELSIF inv_mwb_globals.g_containerized = 2 THEN
          query_str := query_str || 'AND containerized_flag = 1 ';
        END IF;
      END IF;*/

      IF (inv_mwb_globals.g_planning_query_mode = 4) THEN
        query_str  := query_str || ' AND v.planning_organization_id = :plan_org ';
        query_str  := query_str || ' AND v.planning_tp_type = 2 ';
      ELSIF(inv_mwb_globals.g_planning_query_mode = 3) THEN
        query_str  := query_str || ' AND v.planning_organization_id = :plan_org ';
        query_str  := query_str || ' AND v.planning_tp_type = 1 ';
      ELSIF(inv_mwb_globals.g_planning_query_mode = 2) THEN
        query_str  := query_str || ' AND v.planning_tp_type = 1 ';
      END IF;

      IF (inv_mwb_globals.g_owning_qry_mode = 4) THEN
        query_str  := query_str || ' AND v.owning_organization_id = :own_org ';
        query_str  := query_str || ' AND v.owning_tp_type = 2 ';
      ELSIF(inv_mwb_globals.g_owning_qry_mode = 3) THEN
        query_str  := query_str || ' AND v.owning_organization_id = :own_org ';
        query_str  := query_str || ' AND v.owning_tp_type = 1 ';
      ELSIF(inv_mwb_globals.g_owning_qry_mode = 2) THEN
        query_str  := query_str || ' AND v.owning_tp_type = 1 ';
      END IF;

      IF (inv_mwb_globals.g_locator_controlled = 2) THEN
        --Bug#3191526 add the LPNs which don't have any sub/loc association directly after org
        IF inv_mwb_globals.g_inserted_under_org = 'Y' OR inv_mwb_globals.g_inserted_under_org = 'y' THEN
          --don't add the below locator id not null check
          NULL;
        ELSE
          query_str  := query_str || 'AND v.locator_id IS not NULL ';
        END IF;
      ELSIF(inv_mwb_globals.g_locator_controlled = 1) THEN
        query_str  := query_str || 'AND v.locator_id IS NULL ';
      END IF;

      IF inv_mwb_globals.g_qty_from IS NOT NULL OR inv_mwb_globals.g_qty_to IS NOT NULL THEN
         group_str := group_str || ' , v.planning_organization_id, v.planning_tp_type ';
         group_str := group_str || ' , v.owning_organization_id, v.owning_tp_type ';
         group_str := group_str || ' , v.item_lot_control, v.item_serial_control ';
      END IF;

      IF inv_mwb_globals.g_organization_id IS NOT NULL
      OR inv_mwb_globals.g_tree_organization_id IS NOT NULL THEN
        query_str  := query_str || 'AND v.organization_id = :org_id ';
      --Bug # 3411938
      ELSE
        query_str  := query_str || ' and EXISTS ( SELECT 1 ' ;
        query_str  := query_str || ' FROM org_access_view oav ' ;
        query_str  := query_str || ' WHERE oav.organization_id   = v.organization_id ' ;
        query_str  := query_str || ' AND oav.responsibility_id   = :responsibility_id ' ;
        query_str  := query_str || ' AND oav.resp_application_id = :resp_application_id ) ' ;
      END IF;

      IF inv_mwb_globals.g_qty_from IS NOT NULL THEN
         having_str := having_str || ' AND sum(on_hand) >= :qty_from ';
      END IF;

      IF inv_mwb_globals.g_qty_to IS NOT NULL THEN
         having_str := having_str || ' AND sum(on_hand) <= :qty_to ';
      END IF;

      IF inv_mwb_globals.g_qty_from IS NOT NULL OR inv_mwb_globals.g_qty_to IS NOT NULL THEN
        query_str := query_str || group_str || having_str ;
      ELSE
        query_str  := query_str || ' GROUP BY v.inventory_item_id, v.item ';
      END IF;

      query_str  := query_str || ') GROUP BY inventory_item_id, item ';
      query_str  := query_str || ' ORDER BY item ';

    ELSIF(inv_mwb_globals.g_lpn_from IS NOT NULL
          OR inv_mwb_globals.g_lpn_to IS NOT NULL
          OR inv_mwb_globals.g_tree_parent_lpn_id IS NOT NULL
          OR(NVL(inv_mwb_globals.g_prepacked, 1) <> 1)) THEN
      IF (inv_mwb_globals.g_status_id IS NULL) THEN
        IF inv_mwb_globals.g_tree_mat_loc_id = 2 THEN
          table_required  := ' mtl_onhand_lpn_mwb_v mol ';
        ELSIF (inv_mwb_globals.g_prepacked <> 1) AND (inv_mwb_globals.g_prepacked <> 9) AND (inv_mwb_globals.g_prepacked <> 11) THEN
          table_required  := ' mtl_onhand_lpn_mwb_v mol ';
          IF is_grade_t = TRUE THEN                        -- NSRIVAST, INVCONV
            table_required  := ' mtl_onhand_new_lpn_v mol ';   -- NSRIVAST, INVCONV
          END IF;                                          -- NSRIVAST, INVCONV
        ELSE
          table_required  := ' mtl_onhand_new_lpn_mwb_v mol ';
          IF is_grade_t = TRUE THEN                        -- %NSRIVAST, INVCONV
            table_required  := ' mtl_onhand_new_lpn_v mol ';   -- %NSRIVAST, INVCONV
          END IF;
        END IF;
      ELSE
        IF (inv_mwb_globals.g_prepacked <> 1) AND (inv_mwb_globals.g_prepacked <> 9) AND (inv_mwb_globals.g_prepacked <> 11) THEN
          table_required  := ' mtl_onhand_lpn_v mol ';
          IF is_grade_t = TRUE THEN                        -- NSRIVAST, INVCONV
            table_required  := ' mtl_onhand_new_lpn_v mol ';   -- NSRIVAST, INVCONV
          END IF;                                          -- NSRIVAST, INVCONV
        ELSE
          table_required  := ' mtl_onhand_new_lpn_v mol ';
        END IF;
      END IF;

      query_str  := 'SELECT DISTINCT inventory_item_id, item ';
      query_str  := query_str || 'FROM ' || table_required;

      IF (inv_mwb_globals.g_lpn_from IS NOT NULL
          OR inv_mwb_globals.g_lpn_to IS NOT NULL)
         AND inv_mwb_globals.g_tree_parent_lpn_id IS NULL THEN
        query_str  := query_str || ', (select outermost_lpn_id from wms_license_plate_numbers wlpn ';
        query_str  := query_str || ' WHERE 1=1 ';

        IF inv_mwb_globals.g_tree_mat_loc_id = 2 THEN
          --Bug#3191526 add the LPNs which don't have any sub/loc association directly after org
          IF inv_mwb_globals.g_inserted_under_org = 'Y' OR inv_mwb_globals.g_inserted_under_org = 'y' THEN
            query_str  := query_str || ' AND wlpn.subinventory_code is null AND wlpn.locator_id is null ';
          END IF;
          --Bug#3191526
          query_str  := query_str || ' AND lpn_context = 3 ';
        ELSIF inv_mwb_globals.g_prepacked IS NULL THEN
          query_str  := query_str || ' AND (lpn_context=1 or lpn_context=9 or lpn_context=11 )';
        ELSIF inv_mwb_globals.g_prepacked = 1 THEN
          query_str  := query_str || 'AND lpn_context = 1 ';
        ELSIF inv_mwb_globals.g_prepacked <> 1
              AND inv_mwb_globals.g_prepacked <> 999 THEN
          query_str  := query_str || 'AND lpn_context = :prepacked ';
        END IF;

      IF inv_mwb_globals.g_tree_loc_id IS NOT NULL
      OR inv_mwb_globals.g_locator_id IS NOT NULL THEN
          query_str  := query_str || 'AND wlpn.locator_id = :loc_id ';
       END IF;

    -- NSRIVAST, INVCONV, Start
      IF inv_mwb_globals.g_grade_from_code IS NOT NULL THEN
         query_str := query_str || ' AND grade_code = :grade_f ' ;
      END IF ;
      IF inv_mwb_globals.g_tree_grade_code  IS NOT NULL THEN
         query_str := query_str || ' AND grade_code = :grade_c ' ;
      END IF ;
   -- NSRIVAST, INVCONV, End

      IF inv_mwb_globals.g_tree_subinventory_code IS NOT NULL
      OR inv_mwb_globals.g_subinventory_code IS NOT NULL THEN
          query_str  := query_str || 'AND wlpn.subinventory_code = :sub ';
        END IF;

      IF inv_mwb_globals.g_organization_id IS NOT NULL
      OR inv_mwb_globals.g_tree_organization_id IS NOT NULL THEN
          query_str  := query_str || 'AND wlpn.organization_id = :org_id ';
      END IF;



      IF inv_mwb_globals.g_lpn_from = inv_mwb_globals.g_lpn_to THEN
         query_str  := query_str || ' and license_plate_number = :lpn_f ';
      ELSE
	IF inv_mwb_globals.g_lpn_from IS NOT NULL THEN
            query_str  := query_str || ' and license_plate_number >= :lpn_f ';
	END IF;
	IF inv_mwb_globals.g_lpn_to IS NOT NULL THEN
           query_str  := query_str || ' and license_plate_number >= :lpn_t ';
	END IF;
      END IF;


        query_str  := query_str || 'group by wlpn.outermost_lpn_id) X ';
      END IF;

      IF (inv_mwb_globals.g_tree_lot_attr_query IS NULL AND inv_mwb_globals.g_parent_lot IS NULL
            AND inv_mwb_globals.g_supplier_lot_from IS NULL AND inv_mwb_globals.g_supplier_lot_to IS NULL)
         AND inv_mwb_globals.g_tree_serial_attr_query IS NULL THEN
        query_str  := query_str || 'WHERE 1=1 ';
      ELSIF (inv_mwb_globals.g_tree_lot_attr_query IS NULL AND inv_mwb_globals.g_parent_lot IS NULL
            AND inv_mwb_globals.g_supplier_lot_from IS NULL AND inv_mwb_globals.g_supplier_lot_to IS NULL)
            AND inv_mwb_globals.g_tree_serial_attr_query IS NOT NULL THEN
        query_str  :=
                     query_str || ', (SELECT serial_number serial_num FROM mtl_serial_numbers WHERE 1=1 ' || inv_mwb_globals.g_tree_serial_attr_query
                     || ') msn ';
        query_str  := query_str || 'WHERE msn.serial_num = serial_number ';
      ELSIF (inv_mwb_globals.g_tree_lot_attr_query IS NOT NULL OR inv_mwb_globals.g_parent_lot IS NOT NULL
            OR inv_mwb_globals.g_supplier_lot_from IS NOT NULL OR inv_mwb_globals.g_supplier_lot_to IS NOT NULL)
            AND inv_mwb_globals.g_tree_serial_attr_query IS NULL THEN
        query_str  := query_str || ', (SELECT lot_number lot_num, parent_lot_number, supplier_lot_number FROM mtl_lot_numbers WHERE 1=1 ' || inv_mwb_globals.g_tree_lot_attr_query || ') mln ';
        query_str  := query_str || 'WHERE mln.lot_num = lot_number ';
 		--BUG 7556505
		   IF inv_mwb_globals.g_parent_lot IS NOT NULL THEN
		       query_str  := query_str || ' AND mln.parent_lot_number = :parent_lot ';
	           END IF;
		--BUG 7556505
                /* Bug 8396954 added below code for supplier_lot_number */
                IF (inv_mwb_globals.g_supplier_lot_from IS NOT NULL AND
                    inv_mwb_globals.g_supplier_lot_to IS NOT NULL AND
                    inv_mwb_globals.g_supplier_lot_from = inv_mwb_globals.g_supplier_lot_to) THEN
                    query_str  := query_str || ' AND mln.supplier_lot_number = :supplier_lot_f ';
                END IF;

                IF (inv_mwb_globals.g_supplier_lot_from IS NOT NULL AND
	            inv_mwb_globals.g_supplier_lot_from <> NVL(inv_mwb_globals.g_supplier_lot_to, -1) ) THEN
                    query_str  := query_str || ' AND mln.supplier_lot_number >= :supplier_lot_f ';
                END IF;

                IF (inv_mwb_globals.g_supplier_lot_to IS NOT NULL AND
	            inv_mwb_globals.g_supplier_lot_to <> NVL(inv_mwb_globals.g_supplier_lot_from, -1) ) THEN
                    query_str  := query_str || ' AND mln.supplier_lot_number <= :supplier_lot_t ';
                END IF;
                /* End of Bug 8396954 */
      ELSIF (inv_mwb_globals.g_tree_lot_attr_query IS NOT NULL OR inv_mwb_globals.g_parent_lot IS NOT NULL
              OR inv_mwb_globals.g_supplier_lot_from IS NOT NULL OR inv_mwb_globals.g_supplier_lot_to IS NOT NULL)
            AND inv_mwb_globals.g_tree_serial_attr_query IS NOT NULL THEN
        query_str  :=
              query_str
           || ', (SELECT lot_number lot_num, parent_lot_number, supplier_lot_number FROM mtl_lot_numbers WHERE 1=1 '
           || inv_mwb_globals.g_tree_lot_attr_query
           || ') mln '
           || ', (SELECT serial_number serial_num FROM mtl_serial_numbers WHERE 1=1 '
           || inv_mwb_globals.g_tree_serial_attr_query
           || ') msn ';
        query_str  := query_str || 'WHERE mln.lot_num = lot_number ';
 		--BUG 7556505
		   IF inv_mwb_globals.g_parent_lot IS NOT NULL THEN
		       query_str  := query_str || ' AND mln.parent_lot_number = :parent_lot ';
	           END IF;
		--BUG 7556505
                /* Bug 8396954 added below code for supplier_lot_number */
                IF (inv_mwb_globals.g_supplier_lot_from IS NOT NULL AND
                    inv_mwb_globals.g_supplier_lot_to IS NOT NULL AND
                    inv_mwb_globals.g_supplier_lot_from = inv_mwb_globals.g_supplier_lot_to) THEN
                    query_str  := query_str || ' AND mln.supplier_lot_number = :supplier_lot_f ';
                END IF;

                IF (inv_mwb_globals.g_supplier_lot_from IS NOT NULL AND
	            inv_mwb_globals.g_supplier_lot_from <> NVL(inv_mwb_globals.g_supplier_lot_to, -1) ) THEN
                    query_str  := query_str || ' AND mln.supplier_lot_number >= :supplier_lot_f ';
                END IF;

                IF (inv_mwb_globals.g_supplier_lot_to IS NOT NULL AND
	            inv_mwb_globals.g_supplier_lot_to <> NVL(inv_mwb_globals.g_supplier_lot_from, -1) ) THEN
                    query_str  := query_str || ' AND mln.supplier_lot_number <= :supplier_lot_t ';
                END IF;
                /* End of Bug 8396954 */
	query_str  := query_str || 'AND msn.serial_num = serial_number ';
      END IF;

      --Bug # 3411938 (Group By and Having clause have been added)
      IF inv_mwb_globals.g_qty_from IS NOT NULL OR inv_mwb_globals.g_qty_to IS NOT NULL THEN
        group_str := ' GROUP BY  organization_id  ';
      END IF;

      IF inv_mwb_globals.g_tree_subinventory_code IS NOT NULL
      OR inv_mwb_globals.g_subinventory_code IS NOT NULL THEN
        query_str  := query_str || 'AND subinventory_code = :sub ';
        IF group_str IS NOT NULL THEN
           group_str := group_str || ' , subinventory_code  ' ;
        END IF;
      END IF;

      IF inv_mwb_globals.g_tree_loc_id IS NOT NULL
      OR inv_mwb_globals.g_locator_id IS NOT NULL THEN
        query_str  := query_str || 'AND locator_id = :loc_id ';
        IF group_str IS NOT NULL THEN
           group_str := group_str || ' , locator_id  ' ;
        END IF;
      END IF;

      IF inv_mwb_globals.g_project_id IS NOT NULL THEN
        query_str  := query_str || ' AND project_id = :pr_id ';
        IF group_str IS NOT NULL THEN
           group_str := group_str || ' , project_id  ' ;
        END IF;
      END IF;

      IF inv_mwb_globals.g_task_id IS NOT NULL THEN
        query_str  := query_str || ' AND task_id = :ta_id ';
        IF group_str IS NOT NULL THEN
           group_str := group_str || ' , inv_mwb_globals.g_task_id  ' ;
        END IF;
      END IF;

      IF inv_mwb_globals.g_inventory_item_id IS NOT NULL THEN
         query_str  := query_str || 'AND inventory_item_id = :item_id ';
      END IF;

      -- ER(9158529 client)
      IF inv_mwb_globals.g_client_code IS NOT NULL THEN
         query_str := query_str || ' AND inventory_item_id in (select DISTINCT inventory_item_id from mtl_system_items_b where wms_deploy.get_client_code(inventory_item_id) = :client_code) ';
      END IF;
      -- ER(9158529 client)

      -- ER(9158529)
      IF inv_mwb_globals.g_category_set_id IS NOT NULL THEN
         query_str := query_str || ' AND inventory_item_id in '
                                     || ' (select DISTINCT inventory_item_id from mtl_item_categories '
                                     || ' where organization_id = :organization_id '
                                     || ' and category_set_id = :category_set_id '
                                     || ' and category_id = nvl(:category_id, category_id)) ' ;
      END IF;
      -- ER(9158529)

      IF inv_mwb_globals.g_qty_from IS NOT NULL OR inv_mwb_globals.g_qty_to IS NOT NULL THEN
         group_str := group_str || ' , inventory_item_id, item_description, item ,uom ' ;
      END IF;

      --ER(3338592) Changes
      IF inv_mwb_globals.g_item_description IS NOT NULL THEN
         query_str := query_str || ' AND item_description LIKE :item_description ';
      END IF;

    -- %NSRIVAST, INVCONV, Start
      IF inv_mwb_globals.g_grade_from_code IS NOT NULL THEN
         query_str := query_str || ' AND grade_code = :grade_f ' ;
      END IF ;
     IF inv_mwb_globals.g_tree_grade_code  IS NOT NULL THEN
         query_str := query_str || ' AND grade_code = :grade_c ' ;
      END IF ;
   -- %NSRIVAST, INVCONV, End

      IF inv_mwb_globals.g_revision IS NOT NULL THEN
        query_str  := query_str || 'AND revision = :rev ';
        IF group_str IS NOT NULL THEN
           group_str := group_str || ' , revision  ' ;
        END IF;
      END IF;

      IF inv_mwb_globals.g_cost_group_id IS NOT NULL THEN
        query_str  := query_str || 'AND cost_group_id = :cg_id ';
        IF group_str IS NOT NULL THEN
           group_str := group_str || ' , cost_group_id  ' ;
        END IF;
      END IF;

      IF inv_mwb_globals.g_tree_lot_number IS NOT NULL THEN
        query_str  := query_str || 'AND lot_number = :lot_n ';
        IF group_str IS NOT NULL THEN
           group_str := group_str || ' , lot_number  ' ;
        END IF;
      END IF;

      IF inv_mwb_globals.g_lot_from IS NOT NULL THEN
        query_str  := query_str || 'AND lot_number >= :lot_f ';
      END IF;

      IF inv_mwb_globals.g_lot_to IS NOT NULL THEN
        query_str  := query_str || 'AND lot_number <= :lot_t ';
      END IF;

      IF inv_mwb_globals.g_tree_serial_number IS NOT NULL THEN
        query_str  := query_str || 'AND serial_number = :serial_n ';
         IF group_str IS NOT NULL THEN
            group_str := group_str || ' , serial_number  ' ;
          END IF;
      END IF;

      IF inv_mwb_globals.g_serial_from IS NOT NULL THEN
        query_str  := query_str || 'AND serial_number >= :serial_f ';
      END IF;

      IF inv_mwb_globals.g_serial_to IS NOT NULL THEN
        query_str  := query_str || 'AND serial_number <= :serial_t ';
      END IF;

      IF inv_mwb_globals.g_unit_number IS NOT NULL THEN
        query_str  := query_str || ' AND unit_number = :un_id ';
         IF group_str IS NOT NULL THEN
            group_str := group_str || ' , unit_number  ' ;
          END IF;
      END IF;

      IF inv_mwb_globals.g_tree_parent_lpn_id IS NOT NULL THEN
        query_str  := query_str || 'AND MOL.lpn_id = :plpn_id ';
         IF group_str IS NOT NULL THEN
            group_str := group_str || ' , MOL.lpn_id ' ;
          END IF;
      END IF;

      IF inv_mwb_globals.g_tree_mat_loc_id = 2 THEN
        --Bug#3191526 add the LPNs which don't have any sub/loc association directly after org
        IF inv_mwb_globals.g_inserted_under_org = 'Y' OR inv_mwb_globals.g_inserted_under_org = 'y' THEN
          query_str  := query_str || ' AND mol.subinventory_code is null AND mol.locator_id is null ';
        END IF;
        --Bug#3191526
        query_str  := query_str || ' AND lpn_context = 3 ';
      ELSIF inv_mwb_globals.g_prepacked IS NULL THEN
        query_str  := query_str || ' AND (lpn_context=1  or lpn_context=9 or lpn_context=11 ) ';
      ELSIF inv_mwb_globals.g_prepacked = 1 THEN
        query_str  := query_str || 'AND lpn_context = 1 ';
      ELSIF inv_mwb_globals.g_prepacked <> 1
            AND inv_mwb_globals.g_prepacked <> 999 THEN
        query_str  := query_str || 'AND lpn_context = :prepacked ';
      END IF;

/*
     IF inv_mwb_globals.g_lpn_from IS NOT NULL
     OR inv_mwb_globals.g_lpn_to IS NOT NULL THEN
        query_str  := query_str || 'AND MOL.outermost_lpn_id = X.outermost_lpn_id ';
      END IF;
*/
      /*LPN Status Project */
      IF l_default_status_id IS NOT NULL THEN
        IF inv_mwb_globals.g_status_id IS NOT NULL THEN
	  query_str  := query_str || ' AND onhand_status_id = :st_id ';
        END IF;
      ELSE
        IF inv_mwb_globals.g_status_id IS NOT NULL THEN
          query_str  := query_str || 'AND (subinventory_status_id = :st_id or locator_status_id = :st_id or ';
          query_str  := query_str || 'lot_status_id = :st_id or serial_status_id = :st_id OR :st_id IS NULL) ';
        END IF;
      END IF;
      /* End of fix for LPN Status Project */

      /*IF inv_mwb_globals.g_site_id IS NOT NULL THEN
         query_str := query_str || ' AND PLANNING_TP_TYPE = 1 ';
         query_str := query_str || ' AND planning_organization_id = :site_id ' ;
       ELSIF inv_mwb_globals.g_vendor_id is NOT NULL THEN
         query_str := query_str || ' AND  PLANNING_TP_TYPE = 1 ';
         query_str := query_str || ' AND  planning_organization_id in ';
         query_str := query_str || ' (select vendor_site_id from po_vendor_sites_all ';
         query_str := query_str || '  where vendor_id = :vendor_id )';
      END IF;*/

      IF (inv_mwb_globals.g_planning_query_mode = 4) THEN
        query_str  := query_str || ' AND planning_organization_id = :plan_org ';
        query_str  := query_str || ' AND planning_tp_type = 2 ';
      ELSIF(inv_mwb_globals.g_planning_query_mode = 3) THEN
        query_str  := query_str || ' AND planning_organization_id = :plan_org ';
        query_str  := query_str || ' AND planning_tp_type = 1 ';
      ELSIF(inv_mwb_globals.g_planning_query_mode = 2) THEN
        query_str  := query_str || ' AND planning_tp_type = 1 ';
      END IF;

      IF (inv_mwb_globals.g_owning_qry_mode = 4) THEN
        query_str  := query_str || ' AND owning_organization_id = :own_org ';
        query_str  := query_str || ' AND owning_tp_type = 2 ';
      ELSIF(inv_mwb_globals.g_owning_qry_mode = 3) THEN
        query_str  := query_str || ' AND owning_organization_id = :own_org ';
        query_str  := query_str || ' AND owning_tp_type = 1 ';
      ELSIF(inv_mwb_globals.g_owning_qry_mode = 2) THEN
        query_str  := query_str || ' AND owning_tp_type = 1 ';
      END IF;

      IF inv_mwb_globals.g_qty_from IS NOT NULL OR inv_mwb_globals.g_qty_to IS NOT NULL THEN
         group_str := group_str || ' , planning_organization_id, planning_tp_type ';
         group_str := group_str || ' , owning_organization_id, owning_tp_type ';
         group_str := group_str || ' , item_lot_control, item_serial_control ';
      END IF;

      IF (inv_mwb_globals.g_locator_controlled = 2) THEN
        --Bug#3191526 add the LPNs which don't have any sub/loc association directly after org
        IF inv_mwb_globals.g_inserted_under_org = 'Y' OR inv_mwb_globals.g_inserted_under_org = 'y' THEN
          --don't add the below locator id not null check
          NULL;
        ELSE
          query_str  := query_str || 'AND locator_id IS not NULL ';
        END IF;
      ELSIF(inv_mwb_globals.g_locator_controlled = 1) THEN
        query_str  := query_str || 'AND locator_id IS NULL ';
      END IF;


      IF inv_mwb_globals.g_organization_id IS NOT NULL
      OR inv_mwb_globals.g_tree_organization_id IS NOT NULL THEN
        query_str  := query_str || 'AND organization_id = :org_id ';
      ELSE
        query_str  := query_str || ' and EXISTS ( SELECT 1 ' ;
        query_str  := query_str || ' FROM org_access_view oav ' ;
        query_str  := query_str || ' WHERE oav.organization_id   = mol.organization_id ' ;
        query_str  := query_str || ' AND oav.responsibility_id   = :responsibility_id ' ;
        query_str  := query_str || ' AND oav.resp_application_id = :resp_application_id ) ' ;
      END IF;

      IF inv_mwb_globals.g_qty_from IS NOT NULL THEN
         having_str := having_str || ' AND sum(on_hand) >= :qty_from ';
      END IF;

      IF inv_mwb_globals.g_qty_to IS NOT NULL THEN
         having_str := having_str || ' AND sum(on_hand) <= :qty_to ';
      END IF;

      IF inv_mwb_globals.g_qty_from IS NOT NULL OR inv_mwb_globals.g_qty_to IS NOT NULL THEN
        query_str := query_str || group_str || having_str ;
      ELSE
        query_str  := query_str || ' GROUP BY inventory_item_id, item ';
      END IF;

      query_str  := query_str || ' ORDER BY item ';

    END IF;


    -- Enable this during debugging
    inv_trx_util_pub.trace(query_str, 'Material Workbench - Add Items : ', 9);
    --trace1(query_str, 'add_items', 9);
    inv_mwb_globals.print_msg( g_pkg_name, l_procedure_name, query_str );
    inv_mwb_globals.g_last_query := query_str;
    query_hdl       := DBMS_SQL.open_cursor;
    DBMS_SQL.parse(query_hdl, query_str, DBMS_SQL.native);


   IF inv_mwb_globals.g_tree_organization_id IS NOT NULL THEN
    inv_mwb_globals.print_msg( g_pkg_name, l_procedure_name, ' -1 ');
      DBMS_SQL.bind_variable(query_hdl, 'org_id', inv_mwb_globals.g_tree_organization_id);
   ELSIF inv_mwb_globals.g_organization_id IS NOT NULL THEN
    inv_mwb_globals.print_msg( g_pkg_name, l_procedure_name, ' -2 ');
      DBMS_SQL.bind_variable(query_hdl, 'org_id', inv_mwb_globals.g_organization_id);
   END IF;
    inv_mwb_globals.print_msg( g_pkg_name, l_procedure_name, ' After -1 ');
    IF inv_mwb_globals.g_tree_subinventory_code IS NOT NULL THEN
    inv_mwb_globals.print_msg( g_pkg_name, l_procedure_name, ' -3 ');
      DBMS_SQL.bind_variable(query_hdl, 'sub', inv_mwb_globals.g_tree_subinventory_code);
    ELSIF inv_mwb_globals.g_subinventory_code IS NOT NULL THEN
    inv_mwb_globals.print_msg( g_pkg_name, l_procedure_name, ' -4 ');
      DBMS_SQL.bind_variable(query_hdl, 'sub', inv_mwb_globals.g_subinventory_code);
    END IF;

    IF inv_mwb_globals.g_tree_loc_id IS NOT NULL THEN
    inv_mwb_globals.print_msg( g_pkg_name, l_procedure_name, ' -5 ');
      DBMS_SQL.bind_variable(query_hdl, 'loc_id', inv_mwb_globals.g_tree_loc_id);
    ELSIF inv_mwb_globals.g_locator_id IS NOT NULL THEN
    inv_mwb_globals.print_msg( g_pkg_name, l_procedure_name, ' -6 ');
      DBMS_SQL.bind_variable(query_hdl, 'loc_id', inv_mwb_globals.g_locator_id);
    END IF;

    IF inv_mwb_globals.g_inventory_item_id IS NOT NULL THEN
    inv_mwb_globals.print_msg( g_pkg_name, l_procedure_name, ' -7 ');
      DBMS_SQL.bind_variable(query_hdl, 'item_id', inv_mwb_globals.g_inventory_item_id);
    END IF;

    -- ER(9158529 client)
    IF inv_mwb_globals.g_client_code IS NOT NULL THEN
        inv_mwb_globals.print_msg( g_pkg_name, l_procedure_name, ' -7.2 ');
      DBMS_SQL.bind_variable(query_hdl, 'client_code', inv_mwb_globals.g_client_code);
    END IF;
    -- ER(9158529 client)

    -- ER(9158529)
    IF inv_mwb_globals.g_category_set_id IS NOT NULL THEN
    inv_mwb_globals.print_msg( g_pkg_name, l_procedure_name, ' -7.1 ');
      DBMS_SQL.bind_variable(query_hdl, 'organization_id', NVL(inv_mwb_globals.g_organization_id, inv_mwb_globals.g_tree_organization_id));
      DBMS_SQL.bind_variable(query_hdl, 'category_set_id', inv_mwb_globals.g_category_set_id);
      DBMS_SQL.bind_variable(query_hdl, 'category_id', inv_mwb_globals.g_category_id);
    END IF;
    -- ER(9158529)

    IF inv_mwb_globals.g_revision IS NOT NULL THEN
    inv_mwb_globals.print_msg( g_pkg_name, l_procedure_name, ' -8 ');
      DBMS_SQL.bind_variable(query_hdl, 'rev', inv_mwb_globals.g_revision);
    END IF;

    IF inv_mwb_globals.g_cost_group_id IS NOT NULL THEN
    inv_mwb_globals.print_msg( g_pkg_name, l_procedure_name, ' -10 ');
      DBMS_SQL.bind_variable(query_hdl, 'cg_id', inv_mwb_globals.g_cost_group_id);
    END IF;

    --BUG 7556505
    IF inv_mwb_globals.g_parent_lot IS NOT NULL THEN
    inv_mwb_globals.print_msg( g_pkg_name, l_procedure_name, ' -11.11 ');
      DBMS_SQL.bind_variable(query_hdl, 'parent_lot', inv_mwb_globals.g_parent_lot);
    END IF;
    --BUG 7556505

    IF inv_mwb_globals.g_lot_from IS NOT NULL THEN
    inv_mwb_globals.print_msg( g_pkg_name, l_procedure_name, ' -11 ');
      DBMS_SQL.bind_variable(query_hdl, 'lot_f', inv_mwb_globals.g_lot_from);
    END IF;

    IF inv_mwb_globals.g_lot_to IS NOT NULL THEN
    inv_mwb_globals.print_msg( g_pkg_name, l_procedure_name, ' -12 ');
      DBMS_SQL.bind_variable(query_hdl, 'lot_t', inv_mwb_globals.g_lot_to);
    END IF;

    /* Bug 8396954 added below code for supplier_lot_number */
    IF (inv_mwb_globals.g_supplier_lot_from IS NOT NULL AND
    inv_mwb_globals.g_supplier_lot_to IS NOT NULL AND
    inv_mwb_globals.g_supplier_lot_from = inv_mwb_globals.g_supplier_lot_to) THEN
        inv_mwb_globals.print_msg( g_pkg_name, l_procedure_name, ' -13.1 ');
        DBMS_SQL.bind_variable(query_hdl, 'supplier_lot_f', inv_mwb_globals.g_supplier_lot_from);
    END IF;

    IF (inv_mwb_globals.g_supplier_lot_from IS NOT NULL AND
        inv_mwb_globals.g_supplier_lot_from <> NVL(inv_mwb_globals.g_supplier_lot_to, -1) ) THEN
            inv_mwb_globals.print_msg( g_pkg_name, l_procedure_name, ' -13.2 ');
            DBMS_SQL.bind_variable(query_hdl, 'supplier_lot_f', inv_mwb_globals.g_supplier_lot_from);
    END IF;

    IF (inv_mwb_globals.g_supplier_lot_to IS NOT NULL AND
         inv_mwb_globals.g_supplier_lot_to <> NVL(inv_mwb_globals.g_supplier_lot_from, -1) ) THEN
            inv_mwb_globals.print_msg( g_pkg_name, l_procedure_name, ' -13.3 ');
            DBMS_SQL.bind_variable(query_hdl, 'supplier_lot_t', inv_mwb_globals.g_supplier_lot_to);
    END IF;
    /* End of Bug 8396954 */

    IF inv_mwb_globals.g_tree_lot_number IS NOT NULL THEN
    inv_mwb_globals.print_msg( g_pkg_name, l_procedure_name, ' -13 ');
      DBMS_SQL.bind_variable(query_hdl, 'lot_n', inv_mwb_globals.g_tree_lot_number);
    END IF;

-- NSRIVAST, INVCONV, Start
    IF inv_mwb_globals.g_grade_from_code IS NOT NULL THEN
    inv_mwb_globals.print_msg( g_pkg_name, l_procedure_name, ' -14');
      DBMS_SQL.bind_variable(query_hdl, 'grade_f',inv_mwb_globals.g_grade_from_code );
    END IF;
    IF inv_mwb_globals.g_tree_grade_code IS NOT NULL THEN
    inv_mwb_globals.print_msg( g_pkg_name, l_procedure_name, ' -15 ');
      DBMS_SQL.bind_variable(query_hdl, 'grade_c', inv_mwb_globals.g_tree_grade_code);
    END IF;
-- NSRIVAST, INVCONV, End

    IF inv_mwb_globals.g_serial_from IS NOT NULL THEN
    inv_mwb_globals.print_msg( g_pkg_name, l_procedure_name, ' -16 ');
      DBMS_SQL.bind_variable(query_hdl, 'serial_f', inv_mwb_globals.g_serial_from);
    END IF;

    IF inv_mwb_globals.g_serial_to IS NOT NULL THEN
    inv_mwb_globals.print_msg( g_pkg_name, l_procedure_name, ' -17');
      DBMS_SQL.bind_variable(query_hdl, 'serial_t', inv_mwb_globals.g_serial_to);
    END IF;

    IF inv_mwb_globals.g_tree_serial_number IS NOT NULL THEN
    inv_mwb_globals.print_msg( g_pkg_name, l_procedure_name, ' -18 ');
      DBMS_SQL.bind_variable(query_hdl, 'serial_n', inv_mwb_globals.g_tree_serial_number);
    END IF;

    IF inv_mwb_globals.g_tree_parent_lpn_id IS NULL THEN
       IF inv_mwb_globals.g_lpn_from = inv_mwb_globals.g_lpn_to THEN
       inv_mwb_globals.print_msg( g_pkg_name, l_procedure_name, ' -19 ');
          dbms_sql.bind_variable(query_hdl, 'lpn_f', inv_mwb_globals.g_lpn_from);
       ELSE
         IF inv_mwb_globals.g_lpn_from IS NOT NULL THEN
       inv_mwb_globals.print_msg( g_pkg_name, l_procedure_name, ' -20 ');
        dbms_sql.bind_variable(query_hdl, 'lpn_f', inv_mwb_globals.g_lpn_from);
         END IF;
         IF inv_mwb_globals.g_lpn_to IS NOT NULL THEN
       inv_mwb_globals.print_msg( g_pkg_name, l_procedure_name, ' -21 ');
          dbms_sql.bind_variable(query_hdl, 'lpn_t', inv_mwb_globals.g_lpn_to);
         END IF;
       END IF;
    END IF;
    IF inv_mwb_globals.g_tree_parent_lpn_id IS NOT NULL THEN
    inv_mwb_globals.print_msg( g_pkg_name, l_procedure_name, ' -22');
      DBMS_SQL.bind_variable(query_hdl, 'plpn_id', inv_mwb_globals.g_tree_parent_lpn_id);
    END IF;

    IF inv_mwb_globals.g_status_id IS NOT NULL THEN
    inv_mwb_globals.print_msg( g_pkg_name, l_procedure_name, ' -23 ');
      DBMS_SQL.bind_variable(query_hdl, 'st_id', inv_mwb_globals.g_status_id);
    END IF;

    IF inv_mwb_globals.g_prepacked <> 1
       AND inv_mwb_globals.g_prepacked <> 999
       AND inv_mwb_globals.g_prepacked IS NOT NULL THEN
    inv_mwb_globals.print_msg( g_pkg_name, l_procedure_name, ' -24 ');
      DBMS_SQL.bind_variable(query_hdl, 'prepacked', inv_mwb_globals.g_prepacked);
    END IF;

    IF inv_mwb_globals.g_mln_context_code IS NOT NULL THEN
      DBMS_SQL.bind_variable(query_hdl, 'mln_context', inv_mwb_globals.g_mln_context_code);
    END IF;

    IF inv_mwb_globals.g_project_id IS NOT NULL THEN
      DBMS_SQL.bind_variable(query_hdl, 'pr_id', inv_mwb_globals.g_project_id);
    END IF;

    IF inv_mwb_globals.g_task_id IS NOT NULL THEN
      DBMS_SQL.bind_variable(query_hdl, 'ta_id', inv_mwb_globals.g_task_id);
    END IF;

    IF inv_mwb_globals.g_unit_number IS NOT NULL THEN
      DBMS_SQL.bind_variable(query_hdl, 'un_id', inv_mwb_globals.g_unit_number);
    END IF;

    /*IF inv_mwb_globals.g_site_id IS NOT NULL THEN
       dbms_sql.bind_variable(query_hdl,'site_id', inv_mwb_globals.g_site_id);
     ELSIF inv_mwb_globals.g_vendor_id is NOT NULL THEN
       dbms_sql.bind_variable(query_hdl,'vendor_id', inv_mwb_globals.g_vendor_id);
    END IF;*/
    IF (inv_mwb_globals.g_owning_qry_mode = 4)
       OR(inv_mwb_globals.g_owning_qry_mode = 3) THEN
      DBMS_SQL.bind_variable(query_hdl, 'own_org', inv_mwb_globals.g_owning_org);
    END IF;

    IF (inv_mwb_globals.g_planning_query_mode = 4)
       OR(inv_mwb_globals.g_planning_query_mode = 3) THEN
      DBMS_SQL.bind_variable(query_hdl, 'plan_org', inv_mwb_globals.g_planning_org);
    END IF;

    --bug 6633612
    IF inv_mwb_globals.g_shipment_header_id IS NOT NULL THEN
      DBMS_SQL.bind_variable(query_hdl, 'shipment_header_id',inv_mwb_globals.g_shipment_header_id );
    END IF;
    --bug 6633612

    --ER(3338592) Changes
    IF inv_mwb_globals.g_item_description IS NOT NULL THEN
    inv_mwb_globals.print_msg( g_pkg_name, l_procedure_name, ' -25 ');
      dbms_sql.bind_variable(query_hdl, 'item_description', inv_mwb_globals.g_item_description);
    END IF;

    --Bug #3411938
    IF inv_mwb_globals.g_organization_id IS NULL
    AND inv_mwb_globals.g_tree_organization_id IS NULL THEN
       IF inv_mwb_globals.g_responsibility_id  IS NOT NULL THEN
          dbms_sql.bind_variable(query_hdl, 'responsibility_id', inv_mwb_globals.g_responsibility_id );
       END IF;

       IF inv_mwb_globals.g_resp_application_id  IS NOT NULL THEN
          dbms_sql.bind_variable(query_hdl, 'resp_application_id', inv_mwb_globals.g_resp_application_id );
       END IF;
    END IF;


   --Bug # 3539766
   IF inv_mwb_globals.g_qty_from IS NOT NULL THEN
     dbms_sql.bind_variable(query_hdl, 'qty_from', inv_mwb_globals.g_qty_from);
   END IF;

   IF inv_mwb_globals.g_qty_to IS NOT NULL THEN
      dbms_sql.bind_variable(query_hdl, 'qty_to', inv_mwb_globals.g_qty_to);
   END IF;


    DBMS_SQL.define_column(query_hdl, 1, item_id);
    DBMS_SQL.define_column(query_hdl, 2, item, 40);
    rows_processed  := DBMS_SQL.EXECUTE(query_hdl);

    LOOP
      -- fetch a row
      IF DBMS_SQL.fetch_rows(query_hdl) > 0 THEN
        -- fetch columns from the row
        DBMS_SQL.column_value(query_hdl, 1, item_id);
        DBMS_SQL.column_value(query_hdl, 2, item);

        IF j >= inv_mwb_globals.g_tree_node_low_value THEN
          x_node_tbl(i).state  := inv_mwb_globals.g_tree_node_state;
          x_node_tbl(i).DEPTH  := 1;
          x_node_tbl(i).label  := inv_mwb_tree1.GET_ITEM(item_id, NVL(inv_mwb_globals.g_tree_organization_id, inv_mwb_globals.g_organization_id ));	-- Bug 6350236
          x_node_tbl(i).icon   := 'inv_item';
          x_node_tbl(i).VALUE  := TO_CHAR(item_id);
          x_node_tbl(i).TYPE   := 'ITEM';
          i                    := i + 1;
        END IF;

        EXIT WHEN j >= inv_mwb_globals.g_tree_node_high_value;
        j  := j + 1;
      ELSE
        EXIT;
      END IF;
    END LOOP;

    DBMS_SQL.close_cursor(query_hdl); -- close cursor
    x_node_value    := j;
    x_tbl_index     := i;
  EXCEPTION
    WHEN NO_DATA_FOUND THEN
      NULL;
    WHEN OTHERS THEN
      RAISE;
  END add_items;

  PROCEDURE add_revs(
    x_node_value           IN OUT NOCOPY  NUMBER
  , x_node_tbl             IN OUT NOCOPY  fnd_apptree.node_tbl_type
  , x_tbl_index            IN OUT NOCOPY  NUMBER
  ) IS
       query_str           VARCHAR2(10000);
       query_hdl           NUMBER;
       rows_processed      NUMBER;
       item                mtl_system_items_kfv.concatenated_segments%TYPE;
       rev                 mtl_onhand_quantities.revision%TYPE;
       rev_control         NUMBER;
       i                   NUMBER   := x_tbl_index;
       j                   NUMBER   := x_node_value;
       table_required      VARCHAR2(300);
       is_grade_t          BOOLEAN DEFAULT FALSE ; -- NSRIVAST, INVCONV
       select_from_str     VARCHAR2(1000);
       from_str            VARCHAR2(1000);
       where_str           VARCHAR2(3000);
       lpn_from_id         wms_license_plate_numbers.lpn_id%type;
       lpn_to_id           wms_license_plate_numbers.lpn_id%type;
       l_item_id           mtl_system_items_kfv.inventory_item_id%TYPE;			-- Bug 6350236

       l_procedure_name CONSTANT VARCHAR2(30) := 'ADD_REVS';
       l_default_status_id NUMBER; -- Onhand Material Status Support
   BEGIN
      inv_mwb_globals.print_msg( g_pkg_name, l_procedure_name, 'Entered' );

      -- Onhand Material Status Support
      if (inv_mwb_globals.g_organization_id is not null) then
         if (inv_cache.set_org_rec(inv_mwb_globals.g_organization_id)) then
           l_default_status_id :=  inv_cache.org_rec.default_status_id;
         end if;
      elsif (inv_mwb_globals.g_tree_organization_id is not null) then
         if (inv_cache.set_org_rec(inv_mwb_globals.g_tree_organization_id)) then
           l_default_status_id :=  inv_cache.org_rec.default_status_id;
         end if;
      end if;

      IF inv_mwb_globals.g_tree_doc_type_id IS NOT NULL THEN -- If add_item called from node_expanded of inbound lpn number.

         IF (inv_mwb_globals.g_organization_id IS NOT NULL
         OR inv_mwb_globals.g_organization_id IS NOT NULL)
         AND (inv_mwb_globals.g_inventory_item_id IS NOT NULL
         OR inv_mwb_globals.g_tree_item_id IS NOT NULL) THEN
            SELECT revision_qty_control_code
              INTO rev_control
              FROM mtl_system_items
             WHERE organization_id = NVL(inv_mwb_globals.g_tree_organization_id
                                       , inv_mwb_globals.g_organization_id)
               AND inventory_item_id = NVL(inv_mwb_globals.g_tree_item_id
                                         , inv_mwb_globals.g_inventory_item_id);

         IF rev_control = 1 THEN
            inv_mwb_globals.print_msg( g_pkg_name, l_procedure_name, 'Not revision controlled, returning' );
            RETURN;
         END IF;
      END IF;


      select_from_str :=
         ' SELECT DISTINCT rsl.item_revision
                , msik.concatenated_segments
		, msik.inventory_item_id				-- Bug 6350236
             FROM rcv_shipment_lines rsl
                , mtl_system_items_kfv msik ';


      where_str :=
         ' WHERE 1 = 1
             AND rsl.item_id = msik.inventory_item_id
             AND msik.organization_id = rsl.to_organization_id
             AND rsl.to_organization_id = :to_org_id
             AND rsl.shipment_header_id = :shipment_header_id
             AND rsl.item_id = :item_id ';

      -- ER(9158529 client)
      IF inv_mwb_globals.g_client_code IS NOT NULL THEN
         where_str := where_str || ' AND rsl.item_id in (select DISTINCT inventory_item_id from mtl_system_items_b where wms_deploy.get_client_code(inventory_item_id) = :client_code) ';
      END IF;
      -- ER(9158529 client)

      -- ER(9158529)
      IF inv_mwb_globals.g_category_set_id IS NOT NULL THEN
         where_str := where_str || ' AND rsl.item_id in '
                                    || ' (select DISTINCT inventory_item_id from mtl_item_categories '
                                    || ' where organization_id = :organization_id '
                                    || ' and category_set_id = :category_set_id '
                                    || ' and category_id = nvl(:category_id, category_id)) ' ;
      END IF;
      -- ER(9158529)

      IF inv_mwb_globals.g_serial_from IS NOT NULL
      OR inv_mwb_globals.g_serial_to IS NOT NULL THEN
         select_from_str := select_from_str || ' , rcv_serials_supply rss ';
         where_str := where_str || ' AND rss.shipment_line_id = rsl.shipment_line_id  ';
      END IF;

      IF (inv_mwb_globals.g_lot_from is NOT NULL
      OR inv_mwb_globals.g_lot_to is NOT NULL)
      AND (inv_mwb_globals.g_serial_from IS NULL
      OR inv_mwb_globals.g_serial_to IS NULL) THEN
         select_from_str := select_from_str || ' , rcv_lots_supply rls ';
         where_str := where_str || ' AND rls.shipment_line_id = rsl.shipment_line_id  ';
      END IF;

      IF inv_mwb_globals.g_tree_parent_lpn_id IS NOT NULL THEN
         where_str := where_str || ' AND rsl.asn_lpn_id  = :lpn_from_id ';
      END IF;

      IF inv_mwb_globals.g_lot_from IS NOT NULL
      AND inv_mwb_globals.g_lot_to IS NOT NULL
      AND inv_mwb_globals.g_lot_to = inv_mwb_globals.g_lot_from THEN
         where_str := where_str || ' AND rls.lot_num  = :lot_from ';
      END IF;

      IF inv_mwb_globals.g_lot_from IS NOT NULL
      AND inv_mwb_globals.g_lot_to <> inv_mwb_globals.g_lot_from THEN
         where_str := where_str || ' AND rls.lot_num  >= :lot_from ';
      END IF;

      IF inv_mwb_globals.g_lot_to IS NOT NULL
      AND inv_mwb_globals.g_lot_to <> inv_mwb_globals.g_lot_from THEN
         where_str := where_str || ' AND rls.lot_num  >= :lot_to ';
      END IF;

/* Bug 8396954, Adding below code for checking supplier_lot_number condition */
      IF inv_mwb_globals.g_supplier_lot_from IS NOT NULL
      OR inv_mwb_globals.g_supplier_lot_to IS NOT NULL THEN
         select_from_str := select_from_str || ', mtl_lot_numbers mln1 ';
         select_from_str := select_from_str || ' , rcv_lots_supply rls1 ';
         where_str := where_str || ' AND rls1.shipment_line_id = rsl.shipment_line_id  ';

         where_str := where_str || ' AND rls1.lot_num = mln1.lot_number';

                IF (inv_mwb_globals.g_supplier_lot_from IS NOT NULL AND
                    inv_mwb_globals.g_supplier_lot_to IS NOT NULL AND
                    inv_mwb_globals.g_supplier_lot_from = inv_mwb_globals.g_supplier_lot_to) THEN
                    where_str := where_str || ' AND mln1.supplier_lot_number = :supplier_lot_from ';
                END IF;

                IF (inv_mwb_globals.g_supplier_lot_from IS NOT NULL AND
	            inv_mwb_globals.g_supplier_lot_from <> NVL(inv_mwb_globals.g_supplier_lot_to, -1) ) THEN
                    where_str := where_str || ' AND mln1.supplier_lot_number >= :supplier_lot_from ';
                END IF;

                IF (inv_mwb_globals.g_supplier_lot_to IS NOT NULL AND
	            inv_mwb_globals.g_supplier_lot_to <> NVL(inv_mwb_globals.g_supplier_lot_from, -1) ) THEN
                    where_str := where_str || ' AND mln1.supplier_lot_number <= :supplier_lot_to ';
                END IF;
      END IF;
/* End of Bug 8396954 */

      IF inv_mwb_globals.g_serial_from IS NOT NULL
      AND inv_mwb_globals.g_serial_to IS NOT NULL
      AND inv_mwb_globals.g_serial_to = inv_mwb_globals.g_serial_from THEN
         where_str := where_str || ' AND rss.serial_num  = :serial_from ';
      END IF;

      IF inv_mwb_globals.g_serial_from IS NOT NULL
      AND inv_mwb_globals.g_serial_to <> inv_mwb_globals.g_serial_from THEN
         where_str := where_str || ' AND rss.serial_num  >= :serial_from ';
      END IF;

      IF inv_mwb_globals.g_serial_to IS NOT NULL
      AND inv_mwb_globals.g_serial_to <> inv_mwb_globals.g_serial_from THEN
         where_str := where_str || ' AND rss.serial_num  <= :serial_to ';
      END IF;

      IF inv_mwb_globals.g_revision IS NOT NULL THEN
         where_str := where_str || ' AND rsl.item_revision  = :item_revision ';
      END IF;


      query_str := select_from_str || where_str;

      inv_mwb_globals.print_msg( g_pkg_name, l_procedure_name, query_str );
      inv_mwb_globals.g_last_query := query_str;

      query_hdl  := DBMS_SQL.open_cursor;
      DBMS_SQL.parse(query_hdl, query_str, DBMS_SQL.native);

      DBMS_SQL.bind_variable(query_hdl, 'to_org_id', NVL(inv_mwb_globals.g_organization_id
                                                       , inv_mwb_globals.g_tree_organization_id));
      DBMS_SQL.bind_variable(query_hdl, 'shipment_header_id', inv_mwb_globals.g_tree_doc_header_id);
      DBMS_SQL.bind_variable(query_hdl, 'item_id', inv_mwb_globals.g_tree_item_id);

      -- ER(9158529 client)
      IF inv_mwb_globals.g_client_code IS NOT NULL THEN
         DBMS_SQL.bind_variable(query_hdl, 'client_code', inv_mwb_globals.g_client_code);
      END IF;
      -- ER(9158529 client)

      -- ER(9158529)
      IF inv_mwb_globals.g_category_set_id IS NOT NULL THEN
         DBMS_SQL.bind_variable(query_hdl, 'organization_id', NVL(inv_mwb_globals.g_organization_id, inv_mwb_globals.g_tree_organization_id));
         DBMS_SQL.bind_variable(query_hdl, 'category_set_id', inv_mwb_globals.g_category_set_id);
         DBMS_SQL.bind_variable(query_hdl, 'category_id', inv_mwb_globals.g_category_id);
      END IF;
      -- ER(9158529)

      IF inv_mwb_globals.g_tree_parent_lpn_id IS NOT NULL THEN
         DBMS_SQL.bind_variable(query_hdl, 'lpn_from_id', inv_mwb_globals.g_tree_parent_lpn_id);
      END IF;

      IF inv_mwb_globals.g_lot_from IS NOT NULL
      AND inv_mwb_globals.g_lot_to IS NOT NULL
      AND inv_mwb_globals.g_lot_to = inv_mwb_globals.g_lot_from THEN
         DBMS_SQL.bind_variable(query_hdl, 'lot_from', inv_mwb_globals.g_lot_from);
      END IF;

      IF inv_mwb_globals.g_lot_from IS NOT NULL
      AND inv_mwb_globals.g_lot_to <> inv_mwb_globals.g_lot_from THEN
         DBMS_SQL.bind_variable(query_hdl, 'lot_from', inv_mwb_globals.g_lot_from);
      END IF;

      IF inv_mwb_globals.g_lot_to IS NOT NULL
      AND inv_mwb_globals.g_lot_to <> inv_mwb_globals.g_lot_from THEN
         DBMS_SQL.bind_variable(query_hdl, 'lot_to', inv_mwb_globals.g_lot_to);
      END IF;

        /* Bug 8396954 added below code for supplier_lot_number */
      IF inv_mwb_globals.g_supplier_lot_from IS NOT NULL
      OR inv_mwb_globals.g_supplier_lot_to IS NOT NULL THEN
        IF (inv_mwb_globals.g_supplier_lot_from IS NOT NULL AND
        inv_mwb_globals.g_supplier_lot_to IS NOT NULL AND
        inv_mwb_globals.g_supplier_lot_from = inv_mwb_globals.g_supplier_lot_to) THEN
             DBMS_SQL.bind_variable(query_hdl, 'supplier_lot_from', inv_mwb_globals.g_supplier_lot_from);
        END IF;

        IF (inv_mwb_globals.g_supplier_lot_from IS NOT NULL AND
            inv_mwb_globals.g_supplier_lot_from <> NVL(inv_mwb_globals.g_supplier_lot_to, -1) ) THEN
                 DBMS_SQL.bind_variable(query_hdl, 'supplier_lot_from', inv_mwb_globals.g_supplier_lot_from);
        END IF;

        IF (inv_mwb_globals.g_supplier_lot_to IS NOT NULL AND
             inv_mwb_globals.g_supplier_lot_to <> NVL(inv_mwb_globals.g_supplier_lot_from, -1) ) THEN
                 DBMS_SQL.bind_variable(query_hdl, 'supplier_lot_to', inv_mwb_globals.g_supplier_lot_to);
        END IF;
      END IF;
    /* End of Bug 8396954 */

      IF inv_mwb_globals.g_serial_from IS NOT NULL
      AND inv_mwb_globals.g_serial_to IS NOT NULL
      AND inv_mwb_globals.g_serial_to = inv_mwb_globals.g_serial_from THEN
         DBMS_SQL.bind_variable(query_hdl, 'serial_from', inv_mwb_globals.g_serial_from);
      END IF;

      IF inv_mwb_globals.g_serial_from IS NOT NULL
      AND inv_mwb_globals.g_serial_to <> inv_mwb_globals.g_serial_from THEN
         DBMS_SQL.bind_variable(query_hdl, 'serial_from', inv_mwb_globals.g_serial_from);
      END IF;

      IF inv_mwb_globals.g_serial_to IS NOT NULL
      AND inv_mwb_globals.g_serial_to <> inv_mwb_globals.g_serial_from THEN
         DBMS_SQL.bind_variable(query_hdl, 'serial_to', inv_mwb_globals.g_serial_from);
      END IF;

      IF inv_mwb_globals.g_revision IS NOT NULL THEN
         DBMS_SQL.bind_variable(query_hdl, 'item_revision', inv_mwb_globals.g_revision);
      END IF;

      DBMS_SQL.define_column(query_hdl, 1, rev, 100);
      DBMS_SQL.define_column(query_hdl, 2, item, 240);
      DBMS_SQL.define_column(query_hdl, 3, l_item_id);				-- Bug 6350236

      BEGIN
         rows_processed  := DBMS_SQL.EXECUTE(query_hdl);
      EXCEPTION
         WHEN NO_DATA_FOUND THEN
         NULL;
         RETURN;
      WHEN OTHERS THEN
         RAISE;
      END;


      LOOP
         -- fetch a row
         IF DBMS_SQL.fetch_rows(query_hdl) > 0 THEN
         -- fetch columns from the row
            DBMS_SQL.column_value(query_hdl, 1, rev);
            DBMS_SQL.column_value(query_hdl, 2, item);
	    DBMS_SQL.column_value(query_hdl, 3, l_item_id);			-- Bug 6350236

            IF j >= inv_mwb_globals.g_tree_node_low_value AND
            rev IS NOT NULL THEN
               x_node_tbl(i).state  := inv_mwb_globals.g_tree_node_state;
               x_node_tbl(i).DEPTH  := 1;
               x_node_tbl(i).label  := inv_mwb_tree1.GET_ITEM(l_item_id, NVL(inv_mwb_globals.g_tree_organization_id, inv_mwb_globals.g_organization_id )) || '-' || rev;			-- Bug 6350236
               x_node_tbl(i).icon   := 'inv_revi';
               x_node_tbl(i).VALUE  := rev;
               x_node_tbl(i).TYPE   := 'REV';
               i                    := i + 1;
            END IF;

            EXIT WHEN j >= inv_mwb_globals.g_tree_node_high_value;
            j  := j + 1;
         ELSE
            EXIT;
         END IF;
      END LOOP;


      DBMS_SQL.close_cursor(query_hdl); -- close cursor
      x_node_value    := j;
      x_tbl_index     := i;

      RETURN;
   END IF;

-- For the receiving and onhand
-- NSRIVAST, INVCONV, Start


     IF  (inv_mwb_globals.g_grade_from_code IS NOT NULL OR inv_mwb_globals.g_tree_grade_code IS NOT NULL OR inv_mwb_globals.g_grade_controlled <> 0) THEN
          is_grade_t     := TRUE ;
     END IF ;
-- NSRIVAST, INVCONV, End
    -- Exit out of the procedure if the item is not revision controlled
    IF (inv_mwb_globals.g_organization_id IS NOT NULL
       OR inv_mwb_globals.g_tree_organization_id IS NOT NULL)
       AND (inv_mwb_globals.g_inventory_item_id IS NOT NULL
            OR inv_mwb_globals.g_tree_item_id IS NOT NULL) THEN

      SELECT revision_qty_control_code
        INTO rev_control
        FROM mtl_system_items
       WHERE organization_id = inv_mwb_globals.g_tree_organization_id
         AND inventory_item_id = inv_mwb_globals.g_tree_item_id;

      IF rev_control = 1 THEN
        RETURN;
      END IF;
    END IF;

    IF (
        inv_mwb_globals.g_serial_from IS NULL
        AND inv_mwb_globals.g_serial_to IS NULL
        AND inv_mwb_globals.g_tree_serial_number IS NULL
        AND inv_mwb_globals.g_status_id IS NULL
        AND inv_mwb_globals.g_lpn_from IS NULL
        AND inv_mwb_globals.g_lpn_to IS NULL
        AND inv_mwb_globals.g_tree_parent_lpn_id IS NULL
        AND(NVL(inv_mwb_globals.g_prepacked, 1) = 1)
        AND inv_mwb_globals.g_tree_serial_attr_query IS NULL
       ) THEN
      IF inv_mwb_globals.g_tree_mat_loc_id = 2 THEN
        table_required  := ' mtl_rcv_mwb_onhand_v v ';
      ELSIF(inv_mwb_globals.g_status_id IS NULL) THEN
        table_required  := ' mtl_onhand_total_mwb_v v ';
           IF is_grade_t = TRUE THEN                       -- NSRIVAST, INVCONV
              table_required  := ' mtl_onhand_total_v v ';  -- NSRIVAST, INVCONV
           END IF;
      ELSE
        table_required  := ' mtl_onhand_total_v v ';
      END IF;
       --bug 6633612
	IF (inv_mwb_globals.g_shipment_header_id is not null) THEN
		table_required  := table_required || ' , rcv_transactions rt, mtl_material_transactions mmt ';
	END IF;
	--bug 6633612

      IF inv_mwb_globals.g_tree_lot_attr_query IS NULL AND inv_mwb_globals.g_parent_lot IS NULL
        AND inv_mwb_globals.g_supplier_lot_from IS NULL AND inv_mwb_globals.g_supplier_lot_to IS NULL THEN
        query_str  := query_str || 'SELECT v.item, v.inventory_item_id, v.revision from ' || table_required;		-- Bug 6350236
        query_str  := query_str || 'WHERE 1=1 ';
      ELSE
        query_str  :=
              query_str
           || 'SELECT v.item, v.inventory_item_id, v.revision from'							-- Bug 6350236
           || '(SELECT lot_number lot_num, parent_lot_number FROM mtl_lot_numbers WHERE 1=1 '
           || inv_mwb_globals.g_tree_lot_attr_query
           || ') mln, '
           || table_required;
        query_str  := query_str || 'WHERE mln.lot_num = v.lot_number ';
 		--BUG 7556505
		   IF inv_mwb_globals.g_parent_lot IS NOT NULL THEN
		       query_str  := query_str || ' AND mln.parent_lot_number = :parent_lot ';
	           END IF;
		--BUG 7556505
                /* Bug 8396954 added below code for supplier_lot_number */
                IF (inv_mwb_globals.g_supplier_lot_from IS NOT NULL AND
                    inv_mwb_globals.g_supplier_lot_to IS NOT NULL AND
                    inv_mwb_globals.g_supplier_lot_from = inv_mwb_globals.g_supplier_lot_to) THEN
                    query_str  := query_str || ' AND mln.supplier_lot_number = :supplier_lot_f ';
                END IF;

                IF (inv_mwb_globals.g_supplier_lot_from IS NOT NULL AND
	            inv_mwb_globals.g_supplier_lot_from <> NVL(inv_mwb_globals.g_supplier_lot_to, -1) ) THEN
                    query_str  := query_str || ' AND mln.supplier_lot_number >= :supplier_lot_f ';
                END IF;

                IF (inv_mwb_globals.g_supplier_lot_to IS NOT NULL AND
	            inv_mwb_globals.g_supplier_lot_to <> NVL(inv_mwb_globals.g_supplier_lot_from, -1) ) THEN
                    query_str  := query_str || ' AND mln.supplier_lot_number <= :supplier_lot_t ';
                END IF;
                /* End of Bug 8396954 */
      END IF;

      -- Onhand Material Status Support: If status is tracked at onhand level then check for status
      -- from onhand table (MOQD)
      if (l_default_status_id is not null) then
         IF inv_mwb_globals.g_status_id IS NOT NULL THEN
           query_str  := query_str || 'AND v.onhand_status_id = :st_id ';
         END IF;
      else
         IF inv_mwb_globals.g_status_id IS NOT NULL THEN
           query_str  := query_str || 'AND (v.subinventory_status_id = :st_id OR ';
           query_str  := query_str || 'v.locator_status_id = :st_id or v.lot_status_id = :st_id) ';
         END IF;
      end if;

      --bug 6633612
	IF (inv_mwb_globals.g_shipment_header_id is not null) THEN
		query_str := query_str || ' AND rt.shipment_header_id = :shipment_header_id '
					 || ' AND rt.transaction_id = mmt.rcv_transaction_id '
					 || ' AND rt.organization_id = mmt.organization_id '
					 || ' AND rt.transaction_type = ''DELIVER'''
					 || ' AND rt.destination_type_code = ''INVENTORY'''
					 || ' AND mmt.transaction_id = v.create_transaction_id '
					 || ' AND mmt.organization_id = v.organization_id ';

	END IF;
	--bug 6633612

      IF inv_mwb_globals.g_tree_lot_number IS NOT NULL THEN
        query_str  := query_str || 'AND v.lot_number = :lot_n ';
      END IF;

      IF inv_mwb_globals.g_lot_from IS NOT NULL THEN
        query_str  := query_str || 'AND v.lot_number >= :lot_f ';
      END IF;

      IF inv_mwb_globals.g_lot_to IS NOT NULL THEN
        query_str  := query_str || 'AND v.lot_number <= :lot_t ';
      END IF;

   -- NSRIVAST, INVCONV, Start
      IF inv_mwb_globals.g_grade_from_code IS NOT NULL THEN
         query_str := query_str || ' AND v.grade_code = :grade_f ' ;
      END IF ;
      IF inv_mwb_globals.g_tree_grade_code  IS NOT NULL THEN
         query_str := query_str || ' AND v.grade_code = :grade_c ' ;
      END IF ;
   -- NSRIVAST, INVCONV, End

      IF inv_mwb_globals.g_cost_group_id IS NOT NULL THEN
        query_str  := query_str || 'AND v.cost_group_id = :cg_id ';
      END IF;

      IF inv_mwb_globals.g_revision IS NOT NULL THEN
        query_str  := query_str || 'AND v.revision = :rev ';
      END IF;

      IF inv_mwb_globals.g_containerized = 1 THEN
        query_str  := query_str || ' AND (v.containerized_flag is null or v.containerized_flag <> 1) ';
      ELSIF inv_mwb_globals.g_containerized = 2 THEN
        query_str  := query_str || 'AND v.containerized_flag = 1 ';
      END IF;

      IF inv_mwb_globals.g_inventory_item_id IS NOT NULL
      OR inv_mwb_globals.g_tree_item_id IS NOT NULL THEN
        query_str  := query_str || 'AND v.inventory_item_id = :item_id ';
      END IF;

      -- ER(9158529 client)
      IF inv_mwb_globals.g_client_code IS NOT NULL THEN
        query_str := query_str || ' AND v.inventory_item_id in (select DISTINCT inventory_item_id from mtl_system_items_b where wms_deploy.get_client_code(inventory_item_id) = :client_code) ';
      END IF;
      -- ER(9158529 client)

      -- ER(9158529)
      IF inv_mwb_globals.g_category_set_id IS NOT NULL THEN
         query_str := query_str || ' AND v.inventory_item_id in '
                                        || ' (select DISTINCT inventory_item_id from mtl_item_categories '
                                        || ' where organization_id = :organization_id '
                                        || ' and category_set_id = :category_set_id '
                                        || ' and category_id = nvl(:category_id, category_id)) ' ;
      END IF;
      -- ER(9158529)

      IF inv_mwb_globals.g_locator_controlled = 1 THEN
        query_str  := query_str || 'AND v.locator_id IS NULL ';
      ELSIF inv_mwb_globals.g_locator_controlled = 2 THEN
        query_str  := query_str || 'AND v.locator_id IS NOT NULL ';
      END IF;

      IF inv_mwb_globals.g_tree_loc_id IS NOT NULL
      OR inv_mwb_globals.g_locator_id IS NOT NULL THEN
        query_str  := query_str || 'AND v.locator_id = :loc_id ';
      END IF;

      --ER(3338592) Changes
      IF inv_mwb_globals.g_item_description IS NOT NULL THEN
         query_str := query_str || ' AND v.item_description LIKE :item_description ';
      END IF;
      --ER(3338592) Changes

      IF inv_mwb_globals.g_tree_subinventory_code IS NOT NULL
      OR inv_mwb_globals.g_subinventory_code IS NOT NULL THEN
        query_str  := query_str || 'AND v.subinventory_code = :sub ';
      END IF;

      IF inv_mwb_globals.g_organization_id IS NOT NULL
      OR inv_mwb_globals.g_tree_organization_id IS NOT NULL THEN
        query_str  := query_str || 'AND v.organization_id = :org_id ';
      END IF;

      IF inv_mwb_globals.g_project_id IS NOT NULL THEN
        query_str  := query_str || ' AND v.project_id = :pr_id ';
      END IF;

      IF inv_mwb_globals.g_task_id IS NOT NULL THEN
        query_str  := query_str || ' AND v.task_id = :ta_id ';
      END IF;

      IF inv_mwb_globals.g_unit_number IS NOT NULL THEN
        query_str  := query_str || ' AND v.unit_number=:un_id ';
      END IF;

      /*IF inv_mwb_globals.g_site_id IS NOT NULL THEN
         query_str := query_str || ' AND PLANNING_TP_TYPE = 1 ';
         query_str := query_str || ' AND planning_organization_id = :site_id ' ;
       ELSIF inv_mwb_globals.g_vendor_id is NOT NULL THEN
         query_str := query_str || ' AND  PLANNING_TP_TYPE = 1 ';
         query_str := query_str || ' AND  planning_organization_id in ';
         query_str := query_str || ' (select vendor_site_id from po_vendor_sites_all ';
         query_str := query_str || '  where vendor_id = :vendor_id )';
      END IF;*/
      IF (inv_mwb_globals.g_owning_qry_mode = 4) THEN
        query_str  := query_str || ' AND v.owning_organization_id = :own_org ';
        query_str  := query_str || ' AND v.owning_tp_type = 2 ';
      ELSIF(inv_mwb_globals.g_owning_qry_mode = 3) THEN
        query_str  := query_str || ' AND v.owning_organization_id = :own_org ';
        query_str  := query_str || ' AND v.owning_tp_type = 1 ';
      ELSIF(inv_mwb_globals.g_owning_qry_mode = 2) THEN
        query_str  := query_str || ' AND v.owning_tp_type = 1 ';
      END IF;

      IF (inv_mwb_globals.g_planning_query_mode = 4) THEN
        query_str  := query_str || ' AND v.planning_organization_id = :plan_org ';
        query_str  := query_str || ' AND v.planning_tp_type = 2 ';
      ELSIF(inv_mwb_globals.g_planning_query_mode = 3) THEN
        query_str  := query_str || ' AND v.planning_organization_id = :plan_org ';
        query_str  := query_str || ' AND v.planning_tp_type = 1 ';
      ELSIF(inv_mwb_globals.g_planning_query_mode = 2) THEN
        query_str  := query_str || ' AND v.planning_tp_type = 1 ';
      END IF;

      query_str  := query_str || 'GROUP BY v.item, v.inventory_item_id, v.revision ';			-- Bug 6350236
      query_str  := query_str || 'ORDER BY v.revision ';
    ELSIF(
          (
           inv_mwb_globals.g_serial_from IS NOT NULL
           OR inv_mwb_globals.g_serial_from IS NOT NULL
           OR inv_mwb_globals.g_tree_serial_number IS NOT NULL
           OR inv_mwb_globals.g_tree_serial_attr_query IS NOT NULL
          )
          AND inv_mwb_globals.g_lpn_from IS NULL
          AND inv_mwb_globals.g_lpn_to IS NULL
          AND inv_mwb_globals.g_tree_parent_lpn_id IS NULL
          AND(NVL(inv_mwb_globals.g_prepacked, 1) = 1)
         ) THEN
      IF inv_mwb_globals.g_tree_mat_loc_id = 2 THEN
        table_required  := ' mtl_rcv_serial_oh_v v ';
      ELSIF(inv_mwb_globals.g_status_id IS NULL) THEN
        table_required  := ' mtl_onhand_serial_mwb_v v ';
        IF is_grade_t = TRUE THEN                       -- NSRIVAST, INVCONV
          table_required  := ' mtl_onhand_serial_v v ';   -- NSRIVAST, INVCONV
        END IF;                                         -- NSRIVAST, INVCONV
      ELSE
        table_required  := ' mtl_onhand_serial_v v ';
      END IF;

        --bug 6633612
	IF (inv_mwb_globals.g_shipment_header_id is not null) THEN
		table_required  := table_required || ' , rcv_transactions rt, mtl_material_transactions mmt ';
	END IF;
	--bug 6633612

      IF (inv_mwb_globals.g_tree_lot_attr_query IS NULL AND inv_mwb_globals.g_parent_lot IS NULL
            AND inv_mwb_globals.g_supplier_lot_from IS NULL AND inv_mwb_globals.g_supplier_lot_to IS NULL)
         AND inv_mwb_globals.g_tree_serial_attr_query IS NULL THEN
        query_str  := query_str || 'SELECT v.item, v.inventory_item_id, v.revision from ' || table_required;  -- Bug 6350236
        query_str  := query_str || 'WHERE 1=1 ';
      ELSIF (inv_mwb_globals.g_tree_lot_attr_query IS NULL AND inv_mwb_globals.g_parent_lot IS NULL
            AND inv_mwb_globals.g_supplier_lot_from IS NULL AND inv_mwb_globals.g_supplier_lot_to IS NULL)
            AND inv_mwb_globals.g_tree_serial_attr_query IS NOT NULL THEN
        query_str  :=
              query_str
           || 'SELECT v.item, v.inventory_item_id, v.revision from'							-- Bug 6350236
           || '(SELECT serial_number serial_num FROM mtl_serial_numbers WHERE 1=1 '
           || inv_mwb_globals.g_tree_serial_attr_query
           || ') msn, '
	   || table_required;
        query_str  := query_str || 'WHERE msn.serial_num = v.serial_number ';
      ELSIF (inv_mwb_globals.g_tree_lot_attr_query IS NOT NULL OR inv_mwb_globals.g_parent_lot IS NOT NULL
            OR inv_mwb_globals.g_supplier_lot_from IS NOT NULL OR inv_mwb_globals.g_supplier_lot_to IS NOT NULL)
            AND inv_mwb_globals.g_tree_serial_attr_query IS NULL THEN
        query_str  :=
              query_str
           || 'SELECT v.item, v.inventory_item_id, v.revision from'							-- Bug 6350236
           || '(SELECT lot_number lot_num, parent_lot_number, supplier_lot_number FROM mtl_lot_numbers WHERE 1=1 '
           || inv_mwb_globals.g_tree_lot_attr_query
           || ') mln, '
	   || table_required;
        query_str  := query_str || 'WHERE mln.lot_num = v.lot_number ';
 		--BUG 7556505
		   IF inv_mwb_globals.g_parent_lot IS NOT NULL THEN
		       query_str  := query_str || ' AND mln.parent_lot_number = :parent_lot ';
	           END IF;
		--BUG 7556505
                /* Bug 8396954 added below code for supplier_lot_number */
                IF (inv_mwb_globals.g_supplier_lot_from IS NOT NULL AND
                    inv_mwb_globals.g_supplier_lot_to IS NOT NULL AND
                    inv_mwb_globals.g_supplier_lot_from = inv_mwb_globals.g_supplier_lot_to) THEN
                    query_str  := query_str || ' AND mln.supplier_lot_number = :supplier_lot_f ';
                END IF;

                IF (inv_mwb_globals.g_supplier_lot_from IS NOT NULL AND
	            inv_mwb_globals.g_supplier_lot_from <> NVL(inv_mwb_globals.g_supplier_lot_to, -1) ) THEN
                    query_str  := query_str || ' AND mln.supplier_lot_number >= :supplier_lot_f ';
                END IF;

                IF (inv_mwb_globals.g_supplier_lot_to IS NOT NULL AND
	            inv_mwb_globals.g_supplier_lot_to <> NVL(inv_mwb_globals.g_supplier_lot_from, -1) ) THEN
                    query_str  := query_str || ' AND mln.supplier_lot_number <= :supplier_lot_t ';
                END IF;
                /* End of Bug 8396954 */
      ELSIF (inv_mwb_globals.g_tree_lot_attr_query IS NOT NULL OR inv_mwb_globals.g_parent_lot IS NOT NULL
              OR inv_mwb_globals.g_supplier_lot_from IS NOT NULL OR inv_mwb_globals.g_supplier_lot_to IS NOT NULL)
            AND inv_mwb_globals.g_tree_serial_attr_query IS NOT NULL THEN
        query_str  :=
              query_str
           || 'SELECT v.item, v.inventory_item_id, v.revision from'							-- Bug 6350236
           || '(SELECT lot_number lot_num, parent_lot_number, supplier_lot_number FROM mtl_lot_numbers WHERE 1=1 '
           || inv_mwb_globals.g_tree_lot_attr_query
           || ') mln, '
           || '(SELECT serial_number serial_num FROM mtl_serial_numbers WHERE 1=1 '
           || inv_mwb_globals.g_tree_serial_attr_query
           || ') msn, '
	   || table_required;
        query_str  := query_str || 'WHERE mln.lot_num = v.lot_number ';
 		--BUG 7556505
		   IF inv_mwb_globals.g_parent_lot IS NOT NULL THEN
		       query_str  := query_str || ' AND mln.parent_lot_number = :parent_lot ';
	           END IF;
		--BUG 7556505
                /* Bug 8396954 added below code for supplier_lot_number */
                IF (inv_mwb_globals.g_supplier_lot_from IS NOT NULL AND
                    inv_mwb_globals.g_supplier_lot_to IS NOT NULL AND
                    inv_mwb_globals.g_supplier_lot_from = inv_mwb_globals.g_supplier_lot_to) THEN
                    query_str  := query_str || ' AND mln.supplier_lot_number = :supplier_lot_f ';
                END IF;

                IF (inv_mwb_globals.g_supplier_lot_from IS NOT NULL AND
	            inv_mwb_globals.g_supplier_lot_from <> NVL(inv_mwb_globals.g_supplier_lot_to, -1) ) THEN
                    query_str  := query_str || ' AND mln.supplier_lot_number >= :supplier_lot_f ';
                END IF;

                IF (inv_mwb_globals.g_supplier_lot_to IS NOT NULL AND
	            inv_mwb_globals.g_supplier_lot_to <> NVL(inv_mwb_globals.g_supplier_lot_from, -1) ) THEN
                    query_str  := query_str || ' AND mln.supplier_lot_number <= :supplier_lot_t ';
                END IF;
                /* End of Bug 8396954 */
	query_str  := query_str || 'AND msn.serial_num = v.serial_number ';
      END IF;

      -- Onhand Material Status Support: If status is tracked at onhand level then check for status
      -- from serial table (MSN)
      if (l_default_status_id is not null) then
         IF inv_mwb_globals.g_status_id IS NOT NULL THEN
           query_str  := query_str || 'AND v.serial_status_id = :st_id ';
         END IF;
      else
        IF inv_mwb_globals.g_status_id IS NOT NULL THEN
           query_str  := query_str || 'AND (v.subinventory_status_id = :st_id or v.locator_status_id = :st_id or ';
           query_str  := query_str || 'v.lot_status_id = :st_id or v.serial_status_id = :st_id) ';
        END IF;
      end if;

      IF inv_mwb_globals.g_tree_lot_number IS NOT NULL THEN
        query_str  := query_str || 'AND v.lot_number = :lot_n ';
      END IF;

      --bug 6633612
	IF (inv_mwb_globals.g_shipment_header_id is not null) THEN
		query_str := query_str || ' AND rt.shipment_header_id = :shipment_header_id '
					 || ' AND rt.transaction_id = mmt.rcv_transaction_id '
					 || ' AND rt.organization_id = mmt.organization_id '
					 || ' AND rt.transaction_type = ''DELIVER'''
					 || ' AND rt.destination_type_code = ''INVENTORY'''
					 || ' AND mmt.transaction_id = v.last_transaction_id '
					 || ' AND mmt.organization_id = v.organization_id ';

	END IF;
	--bug 6633612

      IF inv_mwb_globals.g_lot_from IS NOT NULL THEN
        query_str  := query_str || 'AND v.lot_number >= :lot_f ';
      END IF;

      IF inv_mwb_globals.g_lot_to IS NOT NULL THEN
        query_str  := query_str || 'AND v.lot_number <= :lot_t ';
      END IF;

      IF inv_mwb_globals.g_cost_group_id IS NOT NULL THEN
        query_str  := query_str || 'AND v.cost_group_id = :cg_id ';
      END IF;

  -- NSRIVAST, INVCONV, Start
      IF inv_mwb_globals.g_grade_from_code IS NOT NULL THEN
         query_str := query_str || ' AND v.grade_code = :grade_f ' ;
      END IF ;
      IF inv_mwb_globals.g_tree_grade_code  IS NOT NULL THEN
         query_str := query_str || ' AND v.grade_code = :grade_c ' ;
      END IF ;
   -- NSRIVAST, INVCONV, End

      IF inv_mwb_globals.g_revision IS NOT NULL THEN
        query_str  := query_str || 'AND v.revision = :rev ';
      END IF;

      IF inv_mwb_globals.g_tree_serial_number IS NOT NULL THEN
        query_str  := query_str || 'AND (v.serial_number = :serial_n) ';
      END IF;

      IF inv_mwb_globals.g_serial_from IS NOT NULL THEN
        query_str  := query_str || 'AND v.serial_number >= :serial_f ';
      END IF;

      IF inv_mwb_globals.g_serial_to IS NOT NULL THEN
        query_str  := query_str || 'AND v.serial_number <= :serial_t ';
      END IF;

      /*IF(inv_mwb_globals.g_vendor_id IS NULL AND inv_mwb_globals.g_site_id IS NULL) THEN
        IF inv_mwb_globals.g_containerized = 1 THEN
          query_str := query_str || ' AND (containerized_flag is null or containerized_flag <> 1) ';
        ELSIF inv_mwb_globals.g_containerized = 2 THEN
          query_str := query_str || 'AND containerized_flag = 1 ';
        END IF;
      END IF;*/
      IF (inv_mwb_globals.g_owning_qry_mode = 4) THEN
        query_str  := query_str || ' AND v.owning_organization_id = :own_org ';
        query_str  := query_str || ' AND v.owning_tp_type = 2 ';
      ELSIF(inv_mwb_globals.g_owning_qry_mode = 3) THEN
        query_str  := query_str || ' AND v.owning_organization_id = :own_org ';
        query_str  := query_str || ' AND v.owning_tp_type = 1 ';
      ELSIF(inv_mwb_globals.g_owning_qry_mode = 2) THEN
        query_str  := query_str || ' AND v.owning_tp_type = 1 ';
      END IF;

      IF (inv_mwb_globals.g_planning_query_mode = 4) THEN
        query_str  := query_str || ' AND v.planning_organization_id = :plan_org ';
        query_str  := query_str || ' AND v.planning_tp_type = 2 ';
      ELSIF(inv_mwb_globals.g_planning_query_mode = 3) THEN
        query_str  := query_str || ' AND v.planning_organization_id = :plan_org ';
        query_str  := query_str || ' AND v.planning_tp_type = 1 ';
      ELSIF(inv_mwb_globals.g_planning_query_mode = 2) THEN
        query_str  := query_str || ' AND v.planning_tp_type = 1 ';
      END IF;

      IF inv_mwb_globals.g_inventory_item_id IS NOT NULL
      OR inv_mwb_globals.g_tree_item_id IS NOT NULL THEN
        query_str  := query_str || 'AND v.inventory_item_id = :item_id ';
      END IF;

      -- ER(9158529 client)
      IF inv_mwb_globals.g_client_code IS NOT NULL THEN
        query_str := query_str || ' AND v.inventory_item_id in (select DISTINCT inventory_item_id from mtl_system_items_b where wms_deploy.get_client_code(inventory_item_id) = :client_code) ';
      END IF;
      -- ER(9158529 client)

      -- ER(9158529)
      IF inv_mwb_globals.g_category_set_id IS NOT NULL THEN
        query_str := query_str || ' AND v.inventory_item_id in '
                                    || ' (select DISTINCT inventory_item_id from mtl_item_categories '
                                    || ' where organization_id = :organization_id '
                                    || ' and category_set_id = :category_set_id '
                                    || ' and category_id = nvl(:category_id, category_id)) ' ;
      END IF;
      -- ER(9158529)

      IF inv_mwb_globals.g_locator_controlled = 1 THEN
        query_str  := query_str || 'AND v.locator_id IS NULL ';
      ELSIF inv_mwb_globals.g_locator_controlled = 2 THEN
        query_str  := query_str || 'AND v.locator_id IS NOT NULL ';
      END IF;

      IF inv_mwb_globals.g_tree_loc_id IS NOT NULL
      OR inv_mwb_globals.g_locator_id IS NOT NULL THEN
        query_str  := query_str || 'AND v.locator_id = :loc_id ';
      END IF;

      --ER(3338592) Changes
      IF inv_mwb_globals.g_item_description IS NOT NULL THEN
         query_str := query_str || ' AND v.item_description LIKE :item_description ';
      END IF;
      --ER(3338592) Changes

      IF inv_mwb_globals.g_tree_subinventory_code IS NOT NULL
      OR inv_mwb_globals.g_subinventory_code IS NOT NULL THEN
        query_str  := query_str || 'AND v.subinventory_code = :sub ';
      END IF;

      IF inv_mwb_globals.g_organization_id IS NOT NULL
      OR inv_mwb_globals.g_tree_organization_id IS NOT NULL THEN
        query_str  := query_str || 'AND v.organization_id = :org_id ';
      END IF;

      IF inv_mwb_globals.g_project_id IS NOT NULL THEN
        query_str  := query_str || ' AND v.project_id = :pr_id ';
      END IF;

      IF inv_mwb_globals.g_task_id IS NOT NULL THEN
        query_str  := query_str || ' AND v.task_id = :ta_id ';
      END IF;

      IF inv_mwb_globals.g_unit_number IS NOT NULL THEN
        query_str  := query_str || ' AND v.unit_number=:un_id ';
      END IF;

      /*IF inv_mwb_globals.g_site_id IS NOT NULL THEN
         query_str := query_str || ' AND PLANNING_TP_TYPE = 1 ';
         query_str := query_str || ' AND planning_organization_id = :site_id ' ;
       ELSIF inv_mwb_globals.g_vendor_id is NOT NULL THEN
         query_str := query_str || ' AND  PLANNING_TP_TYPE = 1 ';
         query_str := query_str || ' AND  planning_organization_id in ';
         query_str := query_str || ' (select vendor_site_id from po_vendor_sites_all ';
         query_str := query_str || '  where vendor_id = :vendor_id )';
      END IF;*/
      IF (inv_mwb_globals.g_owning_qry_mode = 4) THEN
        query_str  := query_str || ' AND v.owning_organization_id = :own_org ';
        query_str  := query_str || ' AND v.owning_tp_type = 2 ';
      ELSIF(inv_mwb_globals.g_owning_qry_mode = 3) THEN
        query_str  := query_str || ' AND v.owning_organization_id = :own_org ';
        query_str  := query_str || ' AND v.owning_tp_type = 1 ';
      ELSIF(inv_mwb_globals.g_owning_qry_mode = 2) THEN
        query_str  := query_str || ' AND v.owning_tp_type = 1 ';
      END IF;

      IF (inv_mwb_globals.g_planning_query_mode = 4) THEN
        query_str  := query_str || ' AND v.planning_organization_id = :plan_org ';
        query_str  := query_str || ' AND v.planning_tp_type = 2 ';
      ELSIF(inv_mwb_globals.g_planning_query_mode = 3) THEN
        query_str  := query_str || ' AND v.planning_organization_id = :plan_org ';
        query_str  := query_str || ' AND v.planning_tp_type = 1 ';
      ELSIF(inv_mwb_globals.g_planning_query_mode = 2) THEN
        query_str  := query_str || ' AND v.planning_tp_type = 1 ';
      END IF;

      query_str  := query_str || 'GROUP BY v.item, v.inventory_item_id, v.revision ';				-- Bug 6350236
      query_str  := query_str || 'ORDER BY v.revision ';
    -- Need to query both mtl_onhand_total_v and mtl_onhand_serial_v
    ELSIF(
          inv_mwb_globals.g_serial_from IS NULL
          AND inv_mwb_globals.g_serial_to IS NULL
          AND inv_mwb_globals.g_tree_serial_number IS NULL
          AND inv_mwb_globals.g_status_id IS NOT NULL
          AND inv_mwb_globals.g_lpn_from IS NULL
          AND inv_mwb_globals.g_lpn_to IS NULL
          AND inv_mwb_globals.g_tree_parent_lpn_id IS NULL
          AND(NVL(inv_mwb_globals.g_prepacked, 1) = 1)
         ) THEN
      IF (inv_mwb_globals.g_status_id IS NULL) THEN
        table_required  := ' mtl_onhand_total_mwb_v v ';
--      ELSIF is_grade_t = TRUE THEN                       -- NSRIVAST, INVCONV
--          table_required  := ' mtl_onhand_new_lpn_v ';   -- NSRIVAST, INVCONV
      ELSE
        table_required  := ' mtl_onhand_total_v v ';
      END IF;

      --bug 6633612
	IF (inv_mwb_globals.g_shipment_header_id is not null) THEN
		table_required  := table_required || ' , rcv_transactions rt, mtl_material_transactions mmt ';
	END IF;
	--bug 6633612

      query_str  := 'SELECT item, inventory_item_id, revision from( ';					-- Bug 6350236

      IF inv_mwb_globals.g_tree_lot_attr_query IS NULL AND inv_mwb_globals.g_parent_lot IS NULL
        AND inv_mwb_globals.g_supplier_lot_from IS NULL AND inv_mwb_globals.g_supplier_lot_to IS NULL THEN
        query_str  := query_str || 'SELECT v.item item, v.inventory_item_id inventory_item_id, v.revision revision from ' || table_required;	-- Bug 6350236
        query_str  := query_str || 'WHERE 1=1 ';
      ELSE
        query_str  :=
              query_str
           || 'SELECT v.item item, v.inventory_item_id inventory_item_id, v.revision revision from'						-- Bug 6350236
           || '(SELECT lot_number lot_num, parent_lot_number, supplier_lot_number FROM mtl_lot_numbers WHERE 1=1 '
           || inv_mwb_globals.g_tree_lot_attr_query
           || ') mln, '
           || table_required;
        query_str  := query_str || 'WHERE mln.lot_num = v.lot_number ';
 		--BUG 7556505
		   IF inv_mwb_globals.g_parent_lot IS NOT NULL THEN
		       query_str  := query_str || ' AND mln.parent_lot_number = :parent_lot ';
	           END IF;
		--BUG 7556505
                /* Bug 8396954 added below code for supplier_lot_number */
                IF (inv_mwb_globals.g_supplier_lot_from IS NOT NULL AND
                    inv_mwb_globals.g_supplier_lot_to IS NOT NULL AND
                    inv_mwb_globals.g_supplier_lot_from = inv_mwb_globals.g_supplier_lot_to) THEN
                    query_str  := query_str || ' AND mln.supplier_lot_number = :supplier_lot_f ';
                END IF;

                IF (inv_mwb_globals.g_supplier_lot_from IS NOT NULL AND
	            inv_mwb_globals.g_supplier_lot_from <> NVL(inv_mwb_globals.g_supplier_lot_to, -1) ) THEN
                    query_str  := query_str || ' AND mln.supplier_lot_number >= :supplier_lot_f ';
                END IF;

                IF (inv_mwb_globals.g_supplier_lot_to IS NOT NULL AND
	            inv_mwb_globals.g_supplier_lot_to <> NVL(inv_mwb_globals.g_supplier_lot_from, -1) ) THEN
                    query_str  := query_str || ' AND mln.supplier_lot_number <= :supplier_lot_t ';
                END IF;
                /* End of Bug 8396954 */
      END IF;

      -- Onhand Material Status Support: If status is tracked at onhand level then check for status
      -- from onhand table (MOQD)
      if (l_default_status_id is not null) then
         IF inv_mwb_globals.g_status_id IS NOT NULL THEN
           query_str  := query_str || 'AND v.onhand_status_id = :st_id ';
         END IF;
      else
        IF inv_mwb_globals.g_status_id IS NOT NULL THEN
           query_str  := query_str || 'AND (v.subinventory_status_id = :st_id OR ';
           query_str  := query_str || 'v.locator_status_id = :st_id or v.lot_status_id = :st_id) ';
        END IF;
      end if;

      IF inv_mwb_globals.g_tree_lot_number IS NOT NULL THEN
        query_str  := query_str || 'AND v.lot_number = :lot_n ';
      END IF;

      --bug 6633612
	IF (inv_mwb_globals.g_shipment_header_id is not null) THEN
		query_str := query_str || ' AND rt.shipment_header_id = :shipment_header_id '
					 || ' AND rt.transaction_id = mmt.rcv_transaction_id '
					 || ' AND rt.organization_id = mmt.organization_id '
					 || ' AND rt.transaction_type = ''DELIVER'''
					 || ' AND rt.destination_type_code = ''INVENTORY'''
					 || ' AND mmt.transaction_id = v.create_transaction_id '
					 || ' AND mmt.organization_id = v.organization_id ';

	END IF;
	--bug 6633612

      IF inv_mwb_globals.g_lot_from IS NOT NULL THEN
        query_str  := query_str || 'AND v.lot_number >= :lot_f ';
      END IF;

      IF inv_mwb_globals.g_lot_to IS NOT NULL THEN
        query_str  := query_str || 'AND v.lot_number <= :lot_t ';
      END IF;

      IF inv_mwb_globals.g_cost_group_id IS NOT NULL THEN
        query_str  := query_str || 'AND v.cost_group_id = :cg_id ';
      END IF;

  -- NSRIVAST, INVCONV, Start
      IF inv_mwb_globals.g_grade_from_code IS NOT NULL THEN
         query_str := query_str || ' AND v.grade_code = :grade_f ' ;
      END IF ;
      IF inv_mwb_globals.g_tree_grade_code  IS NOT NULL THEN
         query_str := query_str || ' AND v.grade_code = :grade_c ' ;
      END IF ;
   -- NSRIVAST, INVCONV, End

      IF inv_mwb_globals.g_revision IS NOT NULL THEN
        query_str  := query_str || 'AND v.revision = :rev ';
      END IF;

      IF inv_mwb_globals.g_containerized = 1 THEN
        query_str  := query_str || ' AND (v.containerized_flag is null or containerized_flag <> 1) ';
      ELSIF inv_mwb_globals.g_containerized = 2 THEN
        query_str  := query_str || 'AND v.containerized_flag = 1 ';
      END IF;

      --query_str  := query_str || 'AND serial_number_control_code in (1,6) ';
      query_str := query_str || 'AND v.item_serial_control in (1,6) ';

      IF inv_mwb_globals.g_inventory_item_id IS NOT NULL
      OR inv_mwb_globals.g_tree_item_id IS NOT NULL THEN
        query_str  := query_str || 'AND v.inventory_item_id = :item_id ';
      END IF;

      -- ER(9158529 client)
      IF inv_mwb_globals.g_client_code IS NOT NULL THEN
        query_str := query_str || ' AND v.inventory_item_id in (select DISTINCT inventory_item_id from mtl_system_items_b where wms_deploy.get_client_code(inventory_item_id) = :client_code) ';
      END IF;
      -- ER(9158529 client)

      -- ER(9158529)
      IF inv_mwb_globals.g_category_set_id IS NOT NULL THEN
        query_str := query_str || ' AND v.inventory_item_id in '
                                        || ' (select DISTINCT inventory_item_id from mtl_item_categories '
                                        || ' where organization_id = :organization_id '
                                        || ' and category_set_id = :category_set_id '
                                        || ' and category_id = nvl(:category_id, category_id)) ' ;
      END IF;
      -- ER(9158529)

      IF inv_mwb_globals.g_locator_controlled = 1 THEN
        query_str  := query_str || 'AND v.locator_id IS NULL ';
      ELSIF inv_mwb_globals.g_locator_controlled = 2 THEN
        query_str  := query_str || 'AND v.locator_id IS NOT NULL ';
      END IF;

      IF inv_mwb_globals.g_tree_loc_id IS NOT NULL
      OR inv_mwb_globals.g_locator_id IS NOT NULL THEN
        query_str  := query_str || 'AND v.locator_id = :loc_id ';
      END IF;

      --ER(3338592) Changes
      IF inv_mwb_globals.g_item_description IS NOT NULL THEN
         query_str := query_str || ' AND v.item_description LIKE :item_description ';
      END IF;
      --ER(3338592) Changes

      IF inv_mwb_globals.g_tree_subinventory_code IS NOT NULL
      OR inv_mwb_globals.g_subinventory_code IS NOT NULL THEN
        query_str  := query_str || 'AND v.subinventory_code = :sub ';
      END IF;

      IF inv_mwb_globals.g_organization_id IS NOT NULL
      OR inv_mwb_globals.g_tree_organization_id IS NOT NULL THEN
        query_str  := query_str || 'AND v.organization_id = :org_id ';
      END IF;

      IF inv_mwb_globals.g_project_id IS NOT NULL THEN
        query_str  := query_str || ' AND v.project_id = :pr_id ';
      END IF;

      IF inv_mwb_globals.g_task_id IS NOT NULL THEN
        query_str  := query_str || ' AND v.task_id = :ta_id ';
      END IF;

      IF inv_mwb_globals.g_unit_number IS NOT NULL THEN
        query_str  := query_str || ' AND v.unit_number=:un_id ';
      END IF;

      /*IF inv_mwb_globals.g_site_id IS NOT NULL THEN
         query_str := query_str || ' AND PLANNING_TP_TYPE = 1 ';
         query_str := query_str || ' AND planning_organization_id = :site_id ' ;
       ELSIF inv_mwb_globals.g_vendor_id is NOT NULL THEN
         query_str := query_str || ' AND  PLANNING_TP_TYPE = 1 ';
         query_str := query_str || ' AND  planning_organization_id in ';
         query_str := query_str || ' (select vendor_site_id from po_vendor_sites_all ';
         query_str := query_str || '  where vendor_id = :vendor_id )';
      END IF;*/
      IF (inv_mwb_globals.g_owning_qry_mode = 4) THEN
        query_str  := query_str || ' AND v.owning_organization_id = :own_org ';
        query_str  := query_str || ' AND v.owning_tp_type = 2 ';
      ELSIF(inv_mwb_globals.g_owning_qry_mode = 3) THEN
        query_str  := query_str || ' AND v.owning_organization_id = :own_org ';
        query_str  := query_str || ' AND v.owning_tp_type = 1 ';
      ELSIF(inv_mwb_globals.g_owning_qry_mode = 2) THEN
        query_str  := query_str || ' AND v.owning_tp_type = 1 ';
      END IF;

      IF (inv_mwb_globals.g_planning_query_mode = 4) THEN
        query_str  := query_str || ' AND v.planning_organization_id = :plan_org ';
        query_str  := query_str || ' AND v.planning_tp_type = 2 ';
      ELSIF(inv_mwb_globals.g_planning_query_mode = 3) THEN
        query_str  := query_str || ' AND v.planning_organization_id = :plan_org ';
        query_str  := query_str || ' AND v.planning_tp_type = 1 ';
      ELSIF(inv_mwb_globals.g_planning_query_mode = 2) THEN
        query_str  := query_str || ' AND v.planning_tp_type = 1 ';
      END IF;

      query_str  := query_str || 'UNION ';

      IF (inv_mwb_globals.g_status_id IS NULL) THEN
        table_required  := ' mtl_onhand_serial_mwb_v v ';
      ELSE
        table_required  := ' mtl_onhand_serial_v v ';
      END IF;

	 --bug 6633612
	IF (inv_mwb_globals.g_shipment_header_id is not null) THEN
		table_required  := table_required || ' , rcv_transactions rt, mtl_material_transactions mmt ';
	END IF;
	--bug 6633612

      IF (inv_mwb_globals.g_tree_lot_attr_query IS NULL AND inv_mwb_globals.g_parent_lot IS NULL
            AND inv_mwb_globals.g_supplier_lot_from IS NULL AND inv_mwb_globals.g_supplier_lot_to IS NULL)
         AND inv_mwb_globals.g_tree_serial_attr_query IS NULL THEN
        query_str  := query_str || 'SELECT v.item item, v.inventory_item_id inventory_item_id, v.revision revision from ' || table_required;		-- Bug 6350236
        query_str  := query_str || 'WHERE 1=1 ';
      ELSIF (inv_mwb_globals.g_tree_lot_attr_query IS NOT NULL OR inv_mwb_globals.g_parent_lot IS NOT NULL
            OR inv_mwb_globals.g_supplier_lot_from IS NOT NULL OR inv_mwb_globals.g_supplier_lot_to IS NOT NULL)
            AND inv_mwb_globals.g_tree_serial_attr_query IS NULL THEN
        query_str  :=
              query_str
           || 'SELECT v.item item, v.inventory_item_id inventory_item_id, v.revision revision from'							-- Bug 6350236
           || '(SELECT lot_number lot_num, parent_lot_number, supplier_lot_number FROM mtl_lot_numbers WHERE 1=1 '
           || inv_mwb_globals.g_tree_lot_attr_query
           || ') mln, '
	   || table_required;
        query_str  := query_str || 'WHERE mln.lot_num = v.lot_number ';
 		--BUG 7556505
		   IF inv_mwb_globals.g_parent_lot IS NOT NULL THEN
		       query_str  := query_str || ' AND mln.parent_lot_number = :parent_lot ';
	           END IF;
		--BUG 7556505
                /* Bug 8396954 added below code for supplier_lot_number */
                IF (inv_mwb_globals.g_supplier_lot_from IS NOT NULL AND
                    inv_mwb_globals.g_supplier_lot_to IS NOT NULL AND
                    inv_mwb_globals.g_supplier_lot_from = inv_mwb_globals.g_supplier_lot_to) THEN
                    query_str  := query_str || ' AND mln.supplier_lot_number = :supplier_lot_f ';
                END IF;

                IF (inv_mwb_globals.g_supplier_lot_from IS NOT NULL AND
	            inv_mwb_globals.g_supplier_lot_from <> NVL(inv_mwb_globals.g_supplier_lot_to, -1) ) THEN
                    query_str  := query_str || ' AND mln.supplier_lot_number >= :supplier_lot_f ';
                END IF;

                IF (inv_mwb_globals.g_supplier_lot_to IS NOT NULL AND
	            inv_mwb_globals.g_supplier_lot_to <> NVL(inv_mwb_globals.g_supplier_lot_from, -1) ) THEN
                    query_str  := query_str || ' AND mln.supplier_lot_number <= :supplier_lot_t ';
                END IF;
                /* End of Bug 8396954 */
      END IF;

      -- Onhand Material Status Support: If status is tracked at onhand level then check for status
      -- from serial table (MSN)
      if (l_default_status_id is not null) then
         IF inv_mwb_globals.g_status_id IS NOT NULL THEN
           query_str  := query_str || 'AND v.serial_status_id = :st_id ';
         END IF;
      else
         IF inv_mwb_globals.g_status_id IS NOT NULL THEN
           query_str  := query_str || 'AND (v.subinventory_status_id = :st_id or v.locator_status_id = :st_id or ';
           query_str  := query_str || 'v.lot_status_id = :st_id or v.serial_status_id = :st_id) ';
         END IF;
      end if;

      IF inv_mwb_globals.g_tree_lot_number IS NOT NULL THEN
        query_str  := query_str || 'AND v.lot_number = :lot_n ';
      END IF;

      --bug 6633612
	IF (inv_mwb_globals.g_shipment_header_id is not null) THEN
		query_str := query_str || ' AND rt.shipment_header_id = :shipment_header_id '
					 || ' AND rt.transaction_id = mmt.rcv_transaction_id '
					 || ' AND rt.organization_id = mmt.organization_id '
					 || ' AND rt.transaction_type = ''DELIVER'''
					 || ' AND rt.destination_type_code = ''INVENTORY'''
					 || ' AND mmt.transaction_id = v.last_transaction_id '
					 || ' AND mmt.organization_id = v.organization_id ';

	END IF;
	--bug 6633612

      IF inv_mwb_globals.g_lot_from IS NOT NULL THEN
        query_str  := query_str || 'AND v.lot_number >= :lot_f ';
      END IF;

      IF inv_mwb_globals.g_lot_to IS NOT NULL THEN
        query_str  := query_str || 'AND v.lot_number <= :lot_t ';
      END IF;

      IF inv_mwb_globals.g_cost_group_id IS NOT NULL THEN
        query_str  := query_str || 'AND v.cost_group_id = :cg_id ';
      END IF;

      IF inv_mwb_globals.g_revision IS NOT NULL THEN
        query_str  := query_str || 'AND v.revision = :rev ';
      END IF;

      IF inv_mwb_globals.g_tree_serial_number IS NOT NULL THEN
        query_str  := query_str || 'AND (v.serial_number = :serial_n) ';
      END IF;

      IF inv_mwb_globals.g_serial_from IS NOT NULL THEN
        query_str  := query_str || 'AND v.serial_number >= :serial_f ';
      END IF;

      IF inv_mwb_globals.g_serial_to IS NOT NULL THEN
        query_str  := query_str || 'AND v.serial_number <= :serial_t ';
      END IF;

      IF inv_mwb_globals.g_containerized = 1 THEN
        query_str  := query_str || ' AND (v.containerized_flag is null or v.containerized_flag <> 1) ';
      ELSIF inv_mwb_globals.g_containerized = 2 THEN
        query_str  := query_str || 'AND v.containerized_flag = 1 ';
      END IF;

      IF inv_mwb_globals.g_inventory_item_id IS NOT NULL
      OR inv_mwb_globals.g_tree_item_id IS NOT NULL THEN
        query_str  := query_str || 'AND v.inventory_item_id = :item_id ';
      END IF;

      -- ER(9158529 client)
      IF inv_mwb_globals.g_client_code IS NOT NULL THEN
        query_str := query_str || ' AND v.inventory_item_id in (select DISTINCT inventory_item_id from mtl_system_items_b where wms_deploy.get_client_code(inventory_item_id) = :client_code) ';
      END IF;
      -- ER(9158529 client)

      -- ER(9158529)
      IF inv_mwb_globals.g_category_set_id IS NOT NULL THEN
        query_str := query_str || ' AND v.inventory_item_id in '
                                    || ' (select DISTINCT inventory_item_id from mtl_item_categories '
                                    || ' where organization_id = :organization_id '
                                    || ' and category_set_id = :category_set_id '
                                    || ' and category_id = nvl(:category_id, category_id)) ' ;
      END IF;
      -- ER(9158529)

      IF inv_mwb_globals.g_locator_controlled = 1 THEN
        query_str  := query_str || 'AND v.locator_id IS NULL ';
      ELSIF inv_mwb_globals.g_locator_controlled = 2 THEN
        query_str  := query_str || 'AND v.locator_id IS NOT NULL ';
      END IF;

      IF inv_mwb_globals.g_tree_loc_id IS NOT NULL
      OR inv_mwb_globals.g_locator_id IS NOT NULL THEN
        query_str  := query_str || 'AND v.locator_id = :loc_id ';
      END IF;

      IF inv_mwb_globals.g_tree_subinventory_code IS NOT NULL
      OR inv_mwb_globals.g_subinventory_code IS NOT NULL THEN
        query_str  := query_str || 'AND v.subinventory_code = :sub ';
      END IF;

      --ER(3338592) Changes
      IF inv_mwb_globals.g_item_description IS NOT NULL THEN
         query_str := query_str || ' AND v.item_description LIKE :item_description ';
      END IF;
      --ER(3338592) Changes

      IF inv_mwb_globals.g_organization_id IS NOT NULL
      OR inv_mwb_globals.g_tree_organization_id IS NOT NULL THEN
        query_str  := query_str || 'AND v.organization_id = :org_id ';
      END IF;

      IF inv_mwb_globals.g_project_id IS NOT NULL THEN
        query_str  := query_str || ' AND v.project_id = :pr_id ';
      END IF;

      IF inv_mwb_globals.g_task_id IS NOT NULL THEN
        query_str  := query_str || ' AND v.task_id = :ta_id ';
      END IF;

      IF inv_mwb_globals.g_unit_number IS NOT NULL THEN
        query_str  := query_str || ' AND v.unit_number=:un_id ';
      END IF;

      /*IF inv_mwb_globals.g_site_id IS NOT NULL THEN
         query_str := query_str || ' AND PLANNING_TP_TYPE = 1 ';
         query_str := query_str || ' AND planning_organization_id = :site_id ' ;
       ELSIF inv_mwb_globals.g_vendor_id is NOT NULL THEN
         query_str := query_str || ' AND  PLANNING_TP_TYPE = 1 ';
         query_str := query_str || ' AND  planning_organization_id in ';
         query_str := query_str || ' (select vendor_site_id from po_vendor_sites_all ';
         query_str := query_str || '  where vendor_id = :vendor_id )';
      END IF;*/
      IF (inv_mwb_globals.g_owning_qry_mode = 4) THEN
        query_str  := query_str || ' AND v.owning_organization_id = :own_org ';
        query_str  := query_str || ' AND v.owning_tp_type = 2 ';
      ELSIF(inv_mwb_globals.g_owning_qry_mode = 3) THEN
        query_str  := query_str || ' AND v.owning_organization_id = :own_org ';
        query_str  := query_str || ' AND v.owning_tp_type = 1 ';
      ELSIF(inv_mwb_globals.g_owning_qry_mode = 2) THEN
        query_str  := query_str || ' AND v.owning_tp_type = 1 ';
      END IF;

      IF (inv_mwb_globals.g_planning_query_mode = 4) THEN
        query_str  := query_str || ' AND v.planning_organization_id = :plan_org ';
        query_str  := query_str || ' AND v.planning_tp_type = 2 ';
      ELSIF(inv_mwb_globals.g_planning_query_mode = 3) THEN
        query_str  := query_str || ' AND v.planning_organization_id = :plan_org ';
        query_str  := query_str || ' AND v.planning_tp_type = 1 ';
      ELSIF(inv_mwb_globals.g_planning_query_mode = 2) THEN
        query_str  := query_str || ' AND v.planning_tp_type = 1 ';
      END IF;

      query_str  := query_str || ') GROUP BY item, inventory_item_id, revision ';			-- Bug 6350236
      query_str  := query_str || 'ORDER BY revision ';
    ELSIF(inv_mwb_globals.g_lpn_from IS NOT NULL
          OR inv_mwb_globals.g_lpn_to IS NOT NULL
          OR inv_mwb_globals.g_tree_parent_lpn_id IS NOT NULL
          OR(NVL(inv_mwb_globals.g_prepacked, 1) <> 1)) THEN
      IF inv_mwb_globals.g_tree_mat_loc_id = 2 THEN
        table_required  := ' mtl_onhand_lpn_mwb_v mol ';
      ELSIF(inv_mwb_globals.g_status_id IS NULL) THEN
        IF (inv_mwb_globals.g_prepacked <> 1) AND (inv_mwb_globals.g_prepacked <> 9) AND (inv_mwb_globals.g_prepacked <> 11) THEN
          table_required  := ' mtl_onhand_lpn_mwb_v mol ';
          IF is_grade_t = TRUE THEN                        -- NSRIVAST, INVCONV
            table_required  := ' mtl_onhand_new_lpn_v mol ';   -- NSRIVAST, INVCONV
          END IF;                                          -- NSRIVAST, INVCONV
        ELSE
          table_required  := ' mtl_onhand_new_lpn_mwb_v mol ';
        END IF;
      ELSE
        IF (inv_mwb_globals.g_prepacked <> 1) AND (inv_mwb_globals.g_prepacked <> 9) AND (inv_mwb_globals.g_prepacked <> 11) THEN
          table_required  := ' mtl_onhand_lpn_v mol  ';
          IF is_grade_t = TRUE THEN                        -- NSRIVAST, INVCONV
            table_required  := ' mtl_onhand_new_lpn_v mol ';   -- NSRIVAST, INVCONV
          END IF;                                          -- NSRIVAST, INVCONV
        ELSE
          table_required  := ' mtl_onhand_new_lpn_v mol ';
        END IF;
      END IF;

      query_str  := 'SELECT item, inventory_item_id, revision ';				-- Bug 6350236
      query_str  := query_str || 'FROM ' || table_required;

      IF (inv_mwb_globals.g_lpn_from IS NOT NULL
          OR inv_mwb_globals.g_lpn_to IS NOT NULL)
         AND inv_mwb_globals.g_tree_parent_lpn_id IS NULL THEN
        query_str  := query_str || ', (select outermost_lpn_id from wms_license_plate_numbers wlpn ';
        query_str  := query_str || ' WHERE 1=1 ';

        IF inv_mwb_globals.g_tree_mat_loc_id = 2 THEN
          query_str  := query_str || ' AND lpn_context = 3 ';
        ELSIF inv_mwb_globals.g_prepacked IS NULL THEN
          query_str  := query_str || ' AND (lpn_context=1 or lpn_context=9 or lpn_context=11 )';
        ELSIF inv_mwb_globals.g_prepacked = 1 THEN
          query_str  := query_str || 'AND lpn_context = 1 ';
        ELSIF inv_mwb_globals.g_prepacked <> 1
              AND inv_mwb_globals.g_prepacked <> 999 THEN
          query_str  := query_str || 'AND lpn_context = :prepacked ';
        END IF;

      IF inv_mwb_globals.g_tree_loc_id IS NOT NULL
      OR inv_mwb_globals.g_locator_id IS NOT NULL THEN
          query_str  := query_str || 'AND wlpn.locator_id = :loc_id ';
        END IF;

   -- NSRIVAST, INVCONV, Start
      IF inv_mwb_globals.g_grade_from_code IS NOT NULL THEN
         query_str := query_str || ' AND grade_code = :grade_f ' ;
      END IF ;
      IF inv_mwb_globals.g_tree_grade_code  IS NOT NULL THEN
         query_str := query_str || ' AND grade_code = :grade_c ' ;
      END IF ;
   -- NSRIVAST, INVCONV, End

      IF inv_mwb_globals.g_tree_subinventory_code IS NOT NULL
      OR inv_mwb_globals.g_subinventory_code IS NOT NULL THEN
          query_str  := query_str || 'AND wlpn.subinventory_code = :sub ';
        END IF;

      IF inv_mwb_globals.g_organization_id IS NOT NULL
      OR inv_mwb_globals.g_tree_organization_id IS NOT NULL THEN
          query_str  := query_str || 'AND wlpn.organization_id = :org_id ';
      END IF;

     IF inv_mwb_globals.g_tree_parent_lpn_id IS NULL THEN
        IF inv_mwb_globals.g_lpn_from = inv_mwb_globals.g_lpn_to THEN
           query_str  := query_str || ' and license_plate_number = :lpn_f ';
        ELSE
           IF inv_mwb_globals.g_lpn_from IS NOT NULL THEN
              query_str  := query_str || ' and license_plate_number >= :lpn_f ';
           END IF;
           IF inv_mwb_globals.g_lpn_to IS NOT NULL THEN
              query_str  := query_str || ' and license_plate_number >= :lpn_t ';
     	   END IF;
        END IF;
     END IF;

        query_str  := query_str || 'group by wlpn.outermost_lpn_id) X ';
      END IF;

      IF (inv_mwb_globals.g_tree_lot_attr_query IS NULL AND inv_mwb_globals.g_parent_lot IS NULL
            AND inv_mwb_globals.g_supplier_lot_from IS NULL AND inv_mwb_globals.g_supplier_lot_to IS NULL)
         AND inv_mwb_globals.g_tree_serial_attr_query IS NULL THEN
        query_str  := query_str || 'WHERE 1=1 ';
      ELSIF (inv_mwb_globals.g_tree_lot_attr_query IS NULL AND inv_mwb_globals.g_parent_lot IS NULL
            AND inv_mwb_globals.g_supplier_lot_from IS NULL AND inv_mwb_globals.g_supplier_lot_to IS NULL)
            AND inv_mwb_globals.g_tree_serial_attr_query IS NOT NULL THEN
        query_str  :=
                     query_str || ', (SELECT serial_number serial_num FROM mtl_serial_numbers WHERE 1=1 ' || inv_mwb_globals.g_tree_serial_attr_query
                     || ') msn ';
        query_str  := query_str || 'WHERE msn.serial_num = serial_number ';
      ELSIF (inv_mwb_globals.g_tree_lot_attr_query IS NOT NULL OR inv_mwb_globals.g_parent_lot IS NOT NULL
            OR inv_mwb_globals.g_supplier_lot_from IS NOT NULL OR inv_mwb_globals.g_supplier_lot_to IS NOT NULL)
            AND inv_mwb_globals.g_tree_serial_attr_query IS NULL THEN
        query_str  := query_str || ', (SELECT lot_number lot_num, parent_lot_number, supplier_lot_number FROM mtl_lot_numbers WHERE 1=1 ' || inv_mwb_globals.g_tree_lot_attr_query || ') mln ';
        query_str  := query_str || 'WHERE mln.lot_num = lot_number ';
 		--BUG 7556505
		   IF inv_mwb_globals.g_parent_lot IS NOT NULL THEN
		       query_str  := query_str || ' AND mln.parent_lot_number = :parent_lot ';
	           END IF;
		--BUG 7556505
                /* Bug 8396954 added below code for supplier_lot_number */
                IF (inv_mwb_globals.g_supplier_lot_from IS NOT NULL AND
                    inv_mwb_globals.g_supplier_lot_to IS NOT NULL AND
                    inv_mwb_globals.g_supplier_lot_from = inv_mwb_globals.g_supplier_lot_to) THEN
                    query_str  := query_str || ' AND mln.supplier_lot_number = :supplier_lot_f ';
                END IF;

                IF (inv_mwb_globals.g_supplier_lot_from IS NOT NULL AND
	            inv_mwb_globals.g_supplier_lot_from <> NVL(inv_mwb_globals.g_supplier_lot_to, -1) ) THEN
                    query_str  := query_str || ' AND mln.supplier_lot_number >= :supplier_lot_f ';
                END IF;

                IF (inv_mwb_globals.g_supplier_lot_to IS NOT NULL AND
	            inv_mwb_globals.g_supplier_lot_to <> NVL(inv_mwb_globals.g_supplier_lot_from, -1) ) THEN
                    query_str  := query_str || ' AND mln.supplier_lot_number <= :supplier_lot_t ';
                END IF;
                /* End of Bug 8396954 */
      ELSIF (inv_mwb_globals.g_tree_lot_attr_query IS NOT NULL OR inv_mwb_globals.g_parent_lot IS NOT NULL
            OR inv_mwb_globals.g_supplier_lot_from IS NOT NULL OR inv_mwb_globals.g_supplier_lot_to IS NOT NULL)
            AND inv_mwb_globals.g_tree_serial_attr_query IS NOT NULL THEN
        query_str  :=
              query_str
           || ', (SELECT lot_number lot_num, parent_lot_number, supplier_lot_number FROM mtl_lot_numbers WHERE 1=1 '
           || inv_mwb_globals.g_tree_lot_attr_query
           || ') mln '
           || ', (SELECT serial_number serial_num FROM mtl_serial_numbers WHERE 1=1 '
           || inv_mwb_globals.g_tree_serial_attr_query
           || ') msn ';
        query_str  := query_str || 'WHERE mln.lot_num = lot_number ';
 		--BUG 7556505
		   IF inv_mwb_globals.g_parent_lot IS NOT NULL THEN
		       query_str  := query_str || ' AND mln.parent_lot_number = :parent_lot ';
	           END IF;
		--BUG 7556505
                /* Bug 8396954 added below code for supplier_lot_number */
                IF (inv_mwb_globals.g_supplier_lot_from IS NOT NULL AND
                    inv_mwb_globals.g_supplier_lot_to IS NOT NULL AND
                    inv_mwb_globals.g_supplier_lot_from = inv_mwb_globals.g_supplier_lot_to) THEN
                    query_str  := query_str || ' AND mln.supplier_lot_number = :supplier_lot_f ';
                END IF;

                IF (inv_mwb_globals.g_supplier_lot_from IS NOT NULL AND
	            inv_mwb_globals.g_supplier_lot_from <> NVL(inv_mwb_globals.g_supplier_lot_to, -1) ) THEN
                    query_str  := query_str || ' AND mln.supplier_lot_number >= :supplier_lot_f ';
                END IF;

                IF (inv_mwb_globals.g_supplier_lot_to IS NOT NULL AND
	            inv_mwb_globals.g_supplier_lot_to <> NVL(inv_mwb_globals.g_supplier_lot_from, -1) ) THEN
                    query_str  := query_str || ' AND mln.supplier_lot_number <= :supplier_lot_t ';
                END IF;
                /* End of Bug 8396954 */
        query_str  := query_str || 'AND msn.serial_num = serial_number ';
      END IF;

      IF inv_mwb_globals.g_project_id IS NOT NULL THEN
        query_str  := query_str || ' AND project_id = :pr_id ';
      END IF;

      IF inv_mwb_globals.g_task_id IS NOT NULL THEN
        query_str  := query_str || ' AND task_id = :ta_id ';
      END IF;

      IF inv_mwb_globals.g_unit_number IS NOT NULL THEN
        query_str  := query_str || ' AND unit_number=:un_id ';
      END IF;

  -- NSRIVAST, INVCONV, Start
      IF inv_mwb_globals.g_grade_from_code IS NOT NULL THEN
         query_str := query_str || ' AND grade_code = :grade_f ' ;
      END IF ;
      IF inv_mwb_globals.g_tree_grade_code  IS NOT NULL THEN
         query_str := query_str || ' AND grade_code = :grade_c ' ;
      END IF ;
   -- NSRIVAST, INVCONV, End

      /*IF inv_mwb_globals.g_site_id IS NOT NULL THEN
         query_str := query_str || ' AND PLANNING_TP_TYPE = 1 ';
         query_str := query_str || ' AND planning_organization_id = :site_id ' ;
       ELSIF inv_mwb_globals.g_vendor_id is NOT NULL THEN
         query_str := query_str || ' AND  PLANNING_TP_TYPE = 1 ';
         query_str := query_str || ' AND  planning_organization_id in ';
         query_str := query_str || ' (select vendor_site_id from po_vendor_sites_all ';
         query_str := query_str || '  where vendor_id = :vendor_id )';
      END IF;*/
      IF (inv_mwb_globals.g_owning_qry_mode = 4) THEN
        query_str  := query_str || ' AND owning_organization_id = :own_org ';
        query_str  := query_str || ' AND owning_tp_type = 2 ';
      ELSIF(inv_mwb_globals.g_owning_qry_mode = 3) THEN
        query_str  := query_str || ' AND owning_organization_id = :own_org ';
        query_str  := query_str || ' AND owning_tp_type = 1 ';
      ELSIF(inv_mwb_globals.g_owning_qry_mode = 2) THEN
        query_str  := query_str || ' AND owning_tp_type = 1 ';
      END IF;

      IF (inv_mwb_globals.g_planning_query_mode = 4) THEN
        query_str  := query_str || ' AND planning_organization_id = :plan_org ';
        query_str  := query_str || ' AND planning_tp_type = 2 ';
      ELSIF(inv_mwb_globals.g_planning_query_mode = 3) THEN
        query_str  := query_str || ' AND planning_organization_id = :plan_org ';
        query_str  := query_str || ' AND planning_tp_type = 1 ';
      ELSIF(inv_mwb_globals.g_planning_query_mode = 2) THEN
        query_str  := query_str || ' AND planning_tp_type = 1 ';
      END IF;

      /*LPN Status Project */
      IF (l_default_status_id IS NOT NULL) THEN
         IF inv_mwb_globals.g_status_id IS NOT NULL THEN
           query_str  := query_str || 'AND onhand_status_id = :st_id ';
         END IF;
      ELSE
         IF inv_mwb_globals.g_status_id IS NOT NULL THEN
           query_str  := query_str || 'AND (subinventory_status_id = :st_id or locator_status_id = :st_id or ';
           query_str  := query_str || 'lot_status_id = :st_id or serial_status_id = :st_id OR :st_id IS NULL) ';
         END IF;
      END IF;
      /*End of fix for LPN Status Project */

      IF inv_mwb_globals.g_tree_lot_number IS NOT NULL THEN
        query_str  := query_str || 'AND lot_number = :lot_n ';
      END IF;

      IF inv_mwb_globals.g_lot_from IS NOT NULL THEN
        query_str  := query_str || 'AND lot_number >= :lot_f ';
      END IF;

      IF inv_mwb_globals.g_lot_to IS NOT NULL THEN
        query_str  := query_str || 'AND lot_number <= :lot_t ';
      END IF;

      IF inv_mwb_globals.g_cost_group_id IS NOT NULL THEN
        query_str  := query_str || 'AND cost_group_id = :cg_id ';
      END IF;

      IF inv_mwb_globals.g_revision IS NOT NULL THEN
        query_str  := query_str || 'AND revision = :rev ';
      END IF;

      IF inv_mwb_globals.g_tree_serial_number IS NOT NULL THEN
        query_str  := query_str || 'AND serial_number = :serial_n ';
      END IF;

      IF inv_mwb_globals.g_serial_from IS NOT NULL THEN
        query_str  := query_str || 'AND serial_number >= :serial_f ';
      END IF;

      IF inv_mwb_globals.g_serial_to IS NOT NULL THEN
        query_str  := query_str || 'AND serial_number <= :serial_t ';
      END IF;

      IF inv_mwb_globals.g_tree_mat_loc_id = 2 THEN
        query_str  := query_str || ' AND lpn_context = 3 ';
      ELSIF inv_mwb_globals.g_prepacked IS NULL THEN
        query_str  := query_str || ' AND (lpn_context=1  OR lpn_context=9 OR lpn_context=11 ) ';
      ELSIF inv_mwb_globals.g_prepacked = 1 THEN
        query_str  := query_str || 'AND lpn_context = 1 ';
      ELSIF inv_mwb_globals.g_prepacked <> 1
            AND inv_mwb_globals.g_prepacked <> 999 THEN
        query_str  := query_str || 'AND lpn_context = :prepacked ';
      END IF;

      IF inv_mwb_globals.g_tree_parent_lpn_id IS NOT NULL THEN
        query_str  := query_str || 'AND MOL.lpn_id = :plpn_id ';
      END IF;

/*      IF inv_mwb_globals.g_lpn_from IS NOT NULL
         OR inv_mwb_globals.g_lpn_to IS NOT NULL THEN
        query_str  := query_str || 'AND MOL.outermost_lpn_id = X.outermost_lpn_id ';
      END IF;
*/

      IF inv_mwb_globals.g_inventory_item_id IS NOT NULL
      OR inv_mwb_globals.g_tree_item_id IS NOT NULL THEN
        query_str  := query_str || 'AND inventory_item_id = :item_id ';
      END IF;

      -- ER(9158529 client)
      IF inv_mwb_globals.g_client_code IS NOT NULL THEN
        query_str := query_str || ' AND inventory_item_id in (select DISTINCT inventory_item_id from mtl_system_items_b where wms_deploy.get_client_code(inventory_item_id) = :client_code) ';
      END IF;
      -- ER(9158529 client)

      -- ER(9158529)
      IF inv_mwb_globals.g_category_set_id IS NOT NULL THEN
         query_str := query_str || ' AND inventory_item_id in '
                                    || ' (select DISTINCT inventory_item_id from mtl_item_categories '
                                    || ' where organization_id = :organization_id '
                                    || ' and category_set_id = :category_set_id '
                                    || ' and category_id = nvl(:category_id, category_id)) ' ;
      END IF;
      -- ER(9158529)

      IF (inv_mwb_globals.g_locator_controlled = 2) THEN
        query_str  := query_str || 'AND locator_id IS not NULL ';
      ELSIF(inv_mwb_globals.g_locator_controlled = 1) THEN
        query_str  := query_str || 'AND locator_id IS NULL ';
      END IF;

      IF inv_mwb_globals.g_tree_loc_id IS NOT NULL
      OR inv_mwb_globals.g_locator_id IS NOT NULL THEN
        query_str  := query_str || 'AND locator_id = :loc_id ';
      END IF;

      --ER(3338592) Changes
      IF inv_mwb_globals.g_item_description IS NOT NULL THEN
         query_str := query_str || ' AND item_description LIKE :item_description ';
      END IF;
      --ER(3338592) Changes

      IF inv_mwb_globals.g_tree_subinventory_code IS NOT NULL
      OR inv_mwb_globals.g_subinventory_code IS NOT NULL THEN
        query_str  := query_str || 'AND subinventory_code = :sub ';
      END IF;

      IF inv_mwb_globals.g_organization_id IS NOT NULL
      OR inv_mwb_globals.g_tree_organization_id IS NOT NULL THEN
        query_str  := query_str || 'AND organization_id = :org_id ';
      END IF;

      query_str  := query_str || 'GROUP BY item, inventory_item_id, revision ';				-- Bug 6350236
      query_str  := query_str || 'ORDER BY revision ';
    END IF;

     --trace1(query_str, 'add_revs', 9);
    inv_mwb_globals.print_msg( g_pkg_name, l_procedure_name, query_str );
    inv_mwb_globals.g_last_query := query_str;
    query_hdl       := DBMS_SQL.open_cursor;
    DBMS_SQL.parse(query_hdl, query_str, DBMS_SQL.native);


   IF inv_mwb_globals.g_tree_organization_id IS NOT NULL THEN
      DBMS_SQL.bind_variable(query_hdl, 'org_id', inv_mwb_globals.g_tree_organization_id);
   ELSIF inv_mwb_globals.g_organization_id IS NOT NULL THEN
      DBMS_SQL.bind_variable(query_hdl, 'org_id', inv_mwb_globals.g_organization_id);
   END IF;

    IF inv_mwb_globals.g_tree_subinventory_code IS NOT NULL THEN
      DBMS_SQL.bind_variable(query_hdl, 'sub', inv_mwb_globals.g_tree_subinventory_code);
    ELSIF inv_mwb_globals.g_subinventory_code IS NOT NULL THEN
      DBMS_SQL.bind_variable(query_hdl, 'sub', inv_mwb_globals.g_subinventory_code);
    END IF;

    IF inv_mwb_globals.g_tree_loc_id IS NOT NULL THEN
      DBMS_SQL.bind_variable(query_hdl, 'loc_id', inv_mwb_globals.g_tree_loc_id);
    ELSIF inv_mwb_globals.g_locator_id IS NOT NULL THEN
      DBMS_SQL.bind_variable(query_hdl, 'loc_id', inv_mwb_globals.g_locator_id);
    END IF;

    IF inv_mwb_globals.g_tree_item_id IS NOT NULL THEN
      DBMS_SQL.bind_variable(query_hdl, 'item_id', inv_mwb_globals.g_tree_item_id);
    ELSIF inv_mwb_globals.g_inventory_item_id IS NOT NULL THEN
      DBMS_SQL.bind_variable(query_hdl, 'item_id', inv_mwb_globals.g_inventory_item_id);
    END IF;

    -- ER(9158529 client)
    IF inv_mwb_globals.g_client_code IS NOT NULL THEN
      DBMS_SQL.bind_variable(query_hdl, 'client_code', inv_mwb_globals.g_client_code);
    END IF;
    -- ER(9158529 client)

    -- ER(9158529)
    IF inv_mwb_globals.g_category_set_id IS NOT NULL THEN
      DBMS_SQL.bind_variable(query_hdl, 'organization_id', NVL(inv_mwb_globals.g_organization_id, inv_mwb_globals.g_tree_organization_id));
      DBMS_SQL.bind_variable(query_hdl, 'category_set_id', inv_mwb_globals.g_category_set_id);
      DBMS_SQL.bind_variable(query_hdl, 'category_id', inv_mwb_globals.g_category_id);
    END IF;
    -- ER(9158529)

    IF inv_mwb_globals.g_revision IS NOT NULL THEN
      DBMS_SQL.bind_variable(query_hdl, 'rev', inv_mwb_globals.g_revision);
    END IF;

    IF inv_mwb_globals.g_cost_group_id IS NOT NULL THEN
      DBMS_SQL.bind_variable(query_hdl, 'cg_id', inv_mwb_globals.g_cost_group_id);
    END IF;

    --BUG 7556505
    IF inv_mwb_globals.g_parent_lot IS NOT NULL THEN
      DBMS_SQL.bind_variable(query_hdl, 'parent_lot', inv_mwb_globals.g_parent_lot);
    END IF;
    --BUG 7556505

    IF inv_mwb_globals.g_lot_from IS NOT NULL THEN
      DBMS_SQL.bind_variable(query_hdl, 'lot_f', inv_mwb_globals.g_lot_from);
    END IF;

    IF inv_mwb_globals.g_lot_to IS NOT NULL THEN
      DBMS_SQL.bind_variable(query_hdl, 'lot_t', inv_mwb_globals.g_lot_to);
    END IF;

    /* Bug 8396954 added below code for supplier_lot_number */
    IF (inv_mwb_globals.g_supplier_lot_from IS NOT NULL AND
    inv_mwb_globals.g_supplier_lot_to IS NOT NULL AND
    inv_mwb_globals.g_supplier_lot_from = inv_mwb_globals.g_supplier_lot_to) THEN
         DBMS_SQL.bind_variable(query_hdl, 'supplier_lot_f', inv_mwb_globals.g_supplier_lot_from);
    END IF;

    IF (inv_mwb_globals.g_supplier_lot_from IS NOT NULL AND
        inv_mwb_globals.g_supplier_lot_from <> NVL(inv_mwb_globals.g_supplier_lot_to, -1) ) THEN
          DBMS_SQL.bind_variable(query_hdl, 'supplier_lot_f', inv_mwb_globals.g_supplier_lot_from);
    END IF;

    IF (inv_mwb_globals.g_supplier_lot_to IS NOT NULL AND
         inv_mwb_globals.g_supplier_lot_to <> NVL(inv_mwb_globals.g_supplier_lot_from, -1) ) THEN
          DBMS_SQL.bind_variable(query_hdl, 'supplier_lot_t', inv_mwb_globals.g_supplier_lot_to);
    END IF;
    /* End of Bug 8396954 */

    --bug 6633612
    IF inv_mwb_globals.g_shipment_header_id IS NOT NULL THEN
      DBMS_SQL.bind_variable(query_hdl, 'shipment_header_id',inv_mwb_globals.g_shipment_header_id );
    END IF;
    --bug 6633612

      inv_mwb_globals.print_msg( g_pkg_name, l_procedure_name, 'Entered  200' );
-- NSRIVAST, INVCONV, Start
    IF inv_mwb_globals.g_grade_from_code IS NOT NULL THEN
      DBMS_SQL.bind_variable(query_hdl, 'grade_f',inv_mwb_globals.g_grade_from_code );
    END IF;
    IF inv_mwb_globals.g_tree_grade_code IS NOT NULL THEN
      DBMS_SQL.bind_variable(query_hdl, 'grade_c', inv_mwb_globals.g_tree_grade_code);
    END IF;
-- NSRIVAST, INVCONV, End

    IF inv_mwb_globals.g_tree_lot_number IS NOT NULL THEN
      DBMS_SQL.bind_variable(query_hdl, 'lot_n', inv_mwb_globals.g_tree_lot_number);
    END IF;

    IF inv_mwb_globals.g_serial_from IS NOT NULL THEN
      DBMS_SQL.bind_variable(query_hdl, 'serial_f', inv_mwb_globals.g_serial_from);
    END IF;

    IF inv_mwb_globals.g_serial_to IS NOT NULL THEN
      DBMS_SQL.bind_variable(query_hdl, 'serial_t', inv_mwb_globals.g_serial_to);
    END IF;

    IF inv_mwb_globals.g_tree_serial_number IS NOT NULL THEN
      DBMS_SQL.bind_variable(query_hdl, 'serial_n', inv_mwb_globals.g_tree_serial_number);
    END IF;

    IF inv_mwb_globals.g_tree_parent_lpn_id IS NULL THEN
       IF inv_mwb_globals.g_lpn_from = inv_mwb_globals.g_lpn_to THEN
          dbms_sql.bind_variable(query_hdl, 'lpn_f', inv_mwb_globals.g_lpn_from);
       ELSE
          IF inv_mwb_globals.g_lpn_from IS NOT NULL THEN
             dbms_sql.bind_variable(query_hdl, 'lpn_f', inv_mwb_globals.g_lpn_from);
          END IF;
 	  IF inv_mwb_globals.g_lpn_to IS NOT NULL THEN
             dbms_sql.bind_variable(query_hdl, 'lpn_t', inv_mwb_globals.g_lpn_to);
   	  END IF;
       END IF;
    END IF;

    IF inv_mwb_globals.g_tree_parent_lpn_id IS NOT NULL THEN
      DBMS_SQL.bind_variable(query_hdl, 'plpn_id', inv_mwb_globals.g_tree_parent_lpn_id);
    END IF;

      inv_mwb_globals.print_msg( g_pkg_name, l_procedure_name, 'Entered  300' );
    IF inv_mwb_globals.g_status_id IS NOT NULL THEN
      DBMS_SQL.bind_variable(query_hdl, 'st_id', inv_mwb_globals.g_status_id);
    END IF;

    IF inv_mwb_globals.g_prepacked <> 1
       AND inv_mwb_globals.g_prepacked <> 999
       AND inv_mwb_globals.g_prepacked IS NOT NULL THEN
      DBMS_SQL.bind_variable(query_hdl, 'prepacked', inv_mwb_globals.g_prepacked);
    END IF;

    IF inv_mwb_globals.g_mln_context_code IS NOT NULL THEN
      DBMS_SQL.bind_variable(query_hdl, 'mln_context', inv_mwb_globals.g_mln_context_code);
    END IF;

    IF inv_mwb_globals.g_project_id IS NOT NULL THEN
      DBMS_SQL.bind_variable(query_hdl, 'pr_id', inv_mwb_globals.g_project_id);
    END IF;

    IF inv_mwb_globals.g_task_id IS NOT NULL THEN
      DBMS_SQL.bind_variable(query_hdl, 'ta_id', inv_mwb_globals.g_task_id);
    END IF;

    IF inv_mwb_globals.g_unit_number IS NOT NULL THEN
      DBMS_SQL.bind_variable(query_hdl, 'un_id', inv_mwb_globals.g_unit_number);
    END IF;

    /*IF inv_mwb_globals.g_site_id IS NOT NULL THEN
       dbms_sql.bind_variable(query_hdl,'site_id', inv_mwb_globals.g_site_id);
     ELSIF inv_mwb_globals.g_vendor_id is NOT NULL THEN
       dbms_sql.bind_variable(query_hdl,'vendor_id', inv_mwb_globals.g_vendor_id);
    END IF;*/
      inv_mwb_globals.print_msg( g_pkg_name, l_procedure_name, 'Entered  400' );

    IF (inv_mwb_globals.g_owning_qry_mode = 4)
       OR(inv_mwb_globals.g_owning_qry_mode = 3) THEN
      DBMS_SQL.bind_variable(query_hdl, 'own_org', inv_mwb_globals.g_owning_org);
    END IF;

    IF (inv_mwb_globals.g_planning_query_mode = 4)
       OR(inv_mwb_globals.g_planning_query_mode = 3) THEN
      DBMS_SQL.bind_variable(query_hdl, 'plan_org', inv_mwb_globals.g_planning_org);
    END IF;

      inv_mwb_globals.print_msg( g_pkg_name, l_procedure_name, 'Entered  500' );

    --ER(3338592) Changes
    IF inv_mwb_globals.g_item_description IS NOT NULL THEN
      /* Fix for bug #3457285
         Following line has been removed.
         query_str := query_str || ' AND item_description LIKE :item_description ';
         Added the following line to bind the item_description value to WHERE clause the query*/
      DBMS_SQL.bind_variable(query_hdl,'item_description',inv_mwb_globals.g_item_description);
     /*End of fix 3457285 */

    END IF;
    --ER(3338592) Changes

    DBMS_SQL.define_column(query_hdl, 1, item, 40);
    DBMS_SQL.define_column(query_hdl, 2, l_item_id);			-- Bug 6350236
    DBMS_SQL.define_column(query_hdl, 3, rev, 3);			-- Bug 6350236
    rows_processed  := DBMS_SQL.EXECUTE(query_hdl);

    LOOP
      -- fetch a row
      IF DBMS_SQL.fetch_rows(query_hdl) > 0 THEN
        -- fetch columns from the row
        DBMS_SQL.column_value(query_hdl, 1, item);
	DBMS_SQL.column_value(query_hdl, 2, l_item_id);			-- Bug 6350236
        DBMS_SQL.column_value(query_hdl, 3, rev);			-- Bug 6350236

        IF j >= inv_mwb_globals.g_tree_node_low_value AND
           rev IS NOT NULL THEN
          x_node_tbl(i).state  := inv_mwb_globals.g_tree_node_state;
          x_node_tbl(i).DEPTH  := 1;
          x_node_tbl(i).label  := inv_mwb_tree1.GET_ITEM(l_item_id, NVL(inv_mwb_globals.g_tree_organization_id, inv_mwb_globals.g_organization_id )) || '-' || rev;	-- Bug 6350236
          x_node_tbl(i).icon   := 'inv_revi';
          x_node_tbl(i).VALUE  := rev;
          x_node_tbl(i).TYPE   := 'REV';
          i                    := i + 1;
        END IF;

        EXIT WHEN j >= inv_mwb_globals.g_tree_node_high_value;
        j  := j + 1;
      ELSE
        EXIT;
      END IF;
    END LOOP;

    DBMS_SQL.close_cursor(query_hdl); -- close cursor
    x_node_value    := j;
    x_tbl_index     := i;
  EXCEPTION
    WHEN NO_DATA_FOUND THEN
      NULL;
    WHEN OTHERS THEN
      RAISE;
  END add_revs;

  PROCEDURE add_lots(
    x_node_value           IN OUT NOCOPY  NUMBER
  , x_node_tbl             IN OUT NOCOPY  fnd_apptree.node_tbl_type
  , x_tbl_index            IN OUT NOCOPY  NUMBER
  ) IS
    query_str      VARCHAR2(10000);
    query_hdl      NUMBER;
    rows_processed NUMBER;
    lot            mtl_onhand_quantities.lot_number%TYPE;
    lot_control    NUMBER;
    serial_control NUMBER;
    i              NUMBER                                  := x_tbl_index;
    j              NUMBER                                  := x_node_value;
    table_required VARCHAR2(300);
    is_grade_t     BOOLEAN DEFAULT FALSE ; -- NSRIVAST, INVCONV
    select_from_str VARCHAR2(2000);
    where_str VARCHAR2(2000);
    lpn_from_id wms_license_plate_numbers.lpn_id%type;
    lpn_to_id   wms_license_plate_numbers.lpn_id%type;
    l_procedure_name CONSTANT VARCHAR2(30) := 'ADD_LOTS';
    l_default_status_id NUMBER; -- Onhand Material Status Support
   BEGIN
      inv_mwb_globals.print_msg( g_pkg_name, l_procedure_name, 'Entered' );
      IF inv_mwb_globals.g_tree_parent_lpn_id IS NULL THEN
        inv_mwb_globals.g_containerized := 1;
      ELSE
        inv_mwb_globals.g_containerized := 2;
      END IF;

      IF inv_mwb_globals.g_view_by IN ('SERIAL','LOT','ITEM') THEN
         inv_mwb_globals.g_containerized := NULL;
      END IF;

      IF inv_mwb_globals.g_view_by = 'STATUS' THEN
         inv_mwb_globals.g_only_subinventory_status := 1;
      ELSE
         inv_mwb_globals.g_only_subinventory_status := NULL;
      END IF;

      -- Onhand Material Status Support
      if (inv_mwb_globals.g_organization_id is not null) then
         if (inv_cache.set_org_rec(inv_mwb_globals.g_organization_id)) then
           l_default_status_id :=  inv_cache.org_rec.default_status_id;
         end if;
      elsif (inv_mwb_globals.g_tree_organization_id is not null) then
         if (inv_cache.set_org_rec(inv_mwb_globals.g_tree_organization_id)) then
           l_default_status_id :=  inv_cache.org_rec.default_status_id;
         end if;
      end if;

      -- If add_item called from node_expanded of inbound lpn number.
      IF inv_mwb_globals.g_tree_doc_type_id IS NOT NULL THEN

         IF (inv_mwb_globals.g_organization_id IS NOT NULL
         OR inv_mwb_globals.g_tree_organization_id IS NOT NULL)
         AND (inv_mwb_globals.g_tree_item_id IS NOT NULL
         OR inv_mwb_globals.g_inventory_item_id IS NOT NULL)  THEN

            SELECT lot_control_code
                 , serial_number_control_code
              INTO lot_control
                 , serial_control
              FROM mtl_system_items
             WHERE organization_id = NVL(inv_mwb_globals.g_tree_organization_id
                                       , inv_mwb_globals.g_organization_id)
               AND inventory_item_id = NVL(inv_mwb_globals.g_inventory_item_id
                                         , inv_mwb_globals.g_tree_item_id);

            IF lot_control = 1 THEN
               RETURN;
            END IF;
      END IF;


      select_from_str :=
         ' SELECT DISTINCT rls.lot_num
             FROM rcv_shipment_lines rsl
                , mtl_supply ms ';

      where_str :=
         ' WHERE 1 = 1
             AND ms.shipment_line_id = rsl.shipment_line_id
             AND ms.supply_type_code <> ''RECEIVING''
             AND ms.shipment_header_id IS NOT NULL
             AND rsl.to_organization_id = :to_org_id
             AND rsl.shipment_header_id = :shipment_header_id
             AND rsl.item_id = :item_id ';

      -- ER(9158529 client)
      IF inv_mwb_globals.g_client_code IS NOT NULL THEN
         where_str := where_str || ' AND rsl.item_id in (select DISTINCT inventory_item_id from mtl_system_items_b where wms_deploy.get_client_code(inventory_item_id) = :client_code) ';
      END IF;
      -- ER(9158529 client)

      -- ER(9158529)
      IF inv_mwb_globals.g_category_set_id IS NOT NULL THEN
         where_str := where_str || ' AND rsl.item_id in '
                                        || ' (select DISTINCT inventory_item_id from mtl_item_categories '
                                        || ' where organization_id = :organization_id '
                                        || ' and category_set_id = :category_set_id '
                                        || ' and category_id = nvl(:category_id, category_id)) ' ;
      END IF;
      -- ER(9158529)

      IF inv_mwb_globals.g_serial_from IS NOT NULL
      OR inv_mwb_globals.g_serial_to IS NOT NULL
      OR serial_control = 2 THEN
         select_from_str := select_from_str || ' , rcv_serials_supply rls ';
         where_str := where_str || ' AND rls.shipment_line_id = ms.shipment_line_id  ';
      ELSE
         select_from_str := select_from_str || ' , rcv_lots_supply rls ';
         where_str := where_str || ' AND rls.shipment_line_id = ms.shipment_line_id  ';
      END IF;

      IF inv_mwb_globals.g_tree_parent_lpn_id IS NOT NULL THEN
         where_str := where_str || ' AND rsl.asn_lpn_id  = :lpn_from_id ';
      END IF;

      IF inv_mwb_globals.g_lot_from IS NOT NULL
      AND inv_mwb_globals.g_lot_to IS NOT NULL
      AND inv_mwb_globals.g_lot_to = inv_mwb_globals.g_lot_from THEN
         where_str := where_str || ' AND rls.lot_num  = :lot_from ';
      END IF;

      IF inv_mwb_globals.g_lot_from IS NOT NULL
      AND inv_mwb_globals.g_lot_to <> inv_mwb_globals.g_lot_from THEN
         where_str := where_str || ' AND rls.lot_num  >= :lot_from ';
      END IF;

      IF inv_mwb_globals.g_lot_to IS NOT NULL
      AND inv_mwb_globals.g_lot_to <> inv_mwb_globals.g_lot_from THEN
         -- for bug 8420731
         where_str := where_str || ' AND rls.lot_num  <= :lot_to ';
         -- end of bug 8420731
      END IF;

/* Bug 8396954, Adding below code for checking supplier_lot_number condition */
      IF inv_mwb_globals.g_supplier_lot_from IS NOT NULL
      OR inv_mwb_globals.g_supplier_lot_to IS NOT NULL THEN
         select_from_str := select_from_str || ', mtl_lot_numbers mln1 ';
         select_from_str := select_from_str || ' , rcv_lots_supply rls1 ';

         where_str := where_str || ' AND rls1.lot_num = mln1.lot_number';

                IF (inv_mwb_globals.g_supplier_lot_from IS NOT NULL AND
                    inv_mwb_globals.g_supplier_lot_to IS NOT NULL AND
                    inv_mwb_globals.g_supplier_lot_from = inv_mwb_globals.g_supplier_lot_to) THEN
                    where_str := where_str || ' AND mln1.supplier_lot_number = :supplier_lot_from ';
                END IF;

                IF (inv_mwb_globals.g_supplier_lot_from IS NOT NULL AND
	            inv_mwb_globals.g_supplier_lot_from <> NVL(inv_mwb_globals.g_supplier_lot_to, -1) ) THEN
                    where_str := where_str || ' AND mln1.supplier_lot_number >= :supplier_lot_from ';
                END IF;

                IF (inv_mwb_globals.g_supplier_lot_to IS NOT NULL AND
	            inv_mwb_globals.g_supplier_lot_to <> NVL(inv_mwb_globals.g_supplier_lot_from, -1) ) THEN
                    where_str := where_str || ' AND mln1.supplier_lot_number <= :supplier_lot_to ';
                END IF;
      END IF;
/* End of Bug 8396954 */

        -- kmotupal LOT-EXP
      IF inv_mwb_globals.g_expired_lots = 'Y'
      AND inv_mwb_globals.g_serial_from IS NULL
      AND inv_mwb_globals.g_serial_to IS NULL
      AND serial_control <> 2 THEN
         where_str := where_str || ' AND rls.expiration_date  = :expiration_date ';
      END IF;


      IF inv_mwb_globals.g_serial_from IS NOT NULL
      AND inv_mwb_globals.g_serial_to IS NOT NULL
      AND inv_mwb_globals.g_serial_to = inv_mwb_globals.g_serial_from THEN
         where_str := where_str || ' AND rls.serial_num  = :serial_from ';
      END IF;

      IF inv_mwb_globals.g_serial_from IS NOT NULL
      AND inv_mwb_globals.g_serial_to <> inv_mwb_globals.g_serial_from THEN
         where_str := where_str || ' AND rls.serial_num  >= :serial_from ';
      END IF;

      IF inv_mwb_globals.g_serial_to IS NOT NULL
      AND inv_mwb_globals.g_serial_to <> inv_mwb_globals.g_serial_from THEN
         where_str := where_str || ' AND rls.serial_num  <= :serial_to ';
      END IF;

      IF inv_mwb_globals.g_tree_rev IS NOT NULL THEN
         where_str := where_str || ' AND rsl.item_revision  = :item_revision ';
      END IF;

      where_str := where_str || ' ORDER BY rls.lot_num ';

      query_str := select_from_str || where_str;

      inv_mwb_globals.print_msg( g_pkg_name, l_procedure_name, query_str );
      inv_mwb_globals.g_last_query := query_str;

      query_hdl  := DBMS_SQL.open_cursor;
      DBMS_SQL.parse(query_hdl, query_str, DBMS_SQL.native);

      IF inv_mwb_globals.g_tree_organization_id IS NOT NULL THEN
         DBMS_SQL.bind_variable(query_hdl, 'to_org_id', inv_mwb_globals.g_tree_organization_id);
      END IF;

      DBMS_SQL.bind_variable(query_hdl, 'shipment_header_id', inv_mwb_globals.g_tree_doc_header_id);
      DBMS_SQL.bind_variable(query_hdl, 'item_id', inv_mwb_globals.g_tree_item_id);

      -- ER(9158529 client)
      IF inv_mwb_globals.g_client_code IS NOT NULL THEN
         DBMS_SQL.bind_variable(query_hdl, 'client_code', inv_mwb_globals.g_client_code);
      END IF;
      -- ER(9158529 client)

      -- ER(9158529)
      IF inv_mwb_globals.g_category_set_id IS NOT NULL THEN
         DBMS_SQL.bind_variable(query_hdl, 'organization_id', NVL(inv_mwb_globals.g_organization_id, inv_mwb_globals.g_tree_organization_id));
         DBMS_SQL.bind_variable(query_hdl, 'category_set_id', inv_mwb_globals.g_category_set_id);
         DBMS_SQL.bind_variable(query_hdl, 'category_id', inv_mwb_globals.g_category_id);
      END IF;
      -- ER(9158529)

      IF inv_mwb_globals.g_tree_parent_lpn_id IS NOT NULL THEN
         DBMS_SQL.bind_variable(query_hdl, 'lpn_from_id', inv_mwb_globals.g_tree_parent_lpn_id);
      END IF;

      IF inv_mwb_globals.g_lot_from IS NOT NULL
      AND inv_mwb_globals.g_lot_to IS NOT NULL
      AND inv_mwb_globals.g_lot_to = inv_mwb_globals.g_lot_from THEN
         DBMS_SQL.bind_variable(query_hdl, 'lot_from', inv_mwb_globals.g_lot_from);
      END IF;

      IF inv_mwb_globals.g_lot_from IS NOT NULL
      AND inv_mwb_globals.g_lot_to <> inv_mwb_globals.g_lot_from THEN
         DBMS_SQL.bind_variable(query_hdl, 'lot_from', inv_mwb_globals.g_lot_from);
      END IF;

      IF inv_mwb_globals.g_lot_to IS NOT NULL
      AND inv_mwb_globals.g_lot_to <> inv_mwb_globals.g_lot_from THEN
         DBMS_SQL.bind_variable(query_hdl, 'lot_to', inv_mwb_globals.g_lot_to);
      END IF;

        /* Bug 8396954 added below code for supplier_lot_number */
      IF inv_mwb_globals.g_supplier_lot_from IS NOT NULL
      OR inv_mwb_globals.g_supplier_lot_to IS NOT NULL THEN
        IF (inv_mwb_globals.g_supplier_lot_from IS NOT NULL AND
        inv_mwb_globals.g_supplier_lot_to IS NOT NULL AND
        inv_mwb_globals.g_supplier_lot_from = inv_mwb_globals.g_supplier_lot_to) THEN
             DBMS_SQL.bind_variable(query_hdl, 'supplier_lot_from', inv_mwb_globals.g_supplier_lot_from);
        END IF;

        IF (inv_mwb_globals.g_supplier_lot_from IS NOT NULL AND
            inv_mwb_globals.g_supplier_lot_from <> NVL(inv_mwb_globals.g_supplier_lot_to, -1) ) THEN
                 DBMS_SQL.bind_variable(query_hdl, 'supplier_lot_from', inv_mwb_globals.g_supplier_lot_from);
        END IF;

        IF (inv_mwb_globals.g_supplier_lot_to IS NOT NULL AND
             inv_mwb_globals.g_supplier_lot_to <> NVL(inv_mwb_globals.g_supplier_lot_from, -1) ) THEN
                 DBMS_SQL.bind_variable(query_hdl, 'supplier_lot_to', inv_mwb_globals.g_supplier_lot_to);
        END IF;
      END IF;
    /* End of Bug 8396954 */

      -- kmotupal LOT-EXP
      IF inv_mwb_globals.g_expired_lots ='Y'  THEN
        DBMS_SQL.bind_variable(query_hdl,'expiration_date', inv_mwb_globals.g_expiration_date);
      END IF;

      IF inv_mwb_globals.g_serial_from IS NOT NULL
      AND inv_mwb_globals.g_serial_to IS NOT NULL
      AND inv_mwb_globals.g_serial_to = inv_mwb_globals.g_serial_from THEN
         DBMS_SQL.bind_variable(query_hdl, 'serial_from', inv_mwb_globals.g_serial_from);
      END IF;

      IF inv_mwb_globals.g_serial_from IS NOT NULL
      AND inv_mwb_globals.g_serial_to <> inv_mwb_globals.g_serial_from THEN
         DBMS_SQL.bind_variable(query_hdl, 'serial_from', inv_mwb_globals.g_serial_from);
      END IF;

      IF inv_mwb_globals.g_serial_to IS NOT NULL
      AND inv_mwb_globals.g_serial_to <> inv_mwb_globals.g_serial_from THEN
         DBMS_SQL.bind_variable(query_hdl, 'serial_to', inv_mwb_globals.g_serial_from);
      END IF;

      IF inv_mwb_globals.g_tree_rev IS NOT NULL THEN
         DBMS_SQL.bind_variable(query_hdl, 'item_revision', inv_mwb_globals.g_tree_rev);
      END IF;

      BEGIN
         DBMS_SQL.define_column(query_hdl, 1, lot, 80);
         rows_processed  := DBMS_SQL.EXECUTE(query_hdl);
      EXCEPTION
         WHEN NO_DATA_FOUND THEN
         NULL;
         RETURN;
      WHEN OTHERS THEN
         RAISE;
      END;

      LOOP
      -- fetch a row
      IF DBMS_SQL.fetch_rows(query_hdl) > 0 THEN
         -- fetch columns from the row
         DBMS_SQL.column_value(query_hdl, 1, lot);
         IF j >= inv_mwb_globals.g_tree_node_low_value THEN
            x_node_tbl(i).state  := inv_mwb_globals.g_tree_node_state;
            x_node_tbl(i).DEPTH  := 1;
            x_node_tbl(i).label  := lot;
            x_node_tbl(i).icon   := 'inv_lott';
            x_node_tbl(i).VALUE  := lot;
            x_node_tbl(i).TYPE   := 'LOT';
            i                    := i + 1;
         END IF;

         EXIT WHEN j >= inv_mwb_globals.g_tree_node_high_value;
         j  := j + 1;
         ELSE
         EXIT;
      END IF;
      END LOOP;


      DBMS_SQL.close_cursor(query_hdl); -- close cursor
      x_node_value    := j;
      x_tbl_index     := i;

      RETURN;
  END IF;


-- For ONHAND and RECEVING
-- NSRIVAST, INVCONV, Start
   IF  (inv_mwb_globals.g_grade_from_code IS NOT NULL OR  inv_mwb_globals.g_tree_grade_code IS NOT NULL OR inv_mwb_globals.g_grade_controlled <> 0) THEN
          is_grade_t     := TRUE ;
   END IF ;
-- NSRIVAST, INVCONV, End
    -- Exit out of the procedure if the item is not lot controlled
    IF (inv_mwb_globals.g_organization_id IS NOT NULL
        OR inv_mwb_globals.g_tree_organization_id IS NOT NULL)
       AND (inv_mwb_globals.g_inventory_item_id IS NOT NULL
            OR inv_mwb_globals.g_tree_item_id IS NOT NULL) THEN
      SELECT lot_control_code
        INTO lot_control
        FROM mtl_system_items
       WHERE organization_id = NVL(inv_mwb_globals.g_tree_organization_id,
				   inv_mwb_globals.g_organization_id)
         AND inventory_item_id = NVL(inv_mwb_globals.g_tree_item_id,
				     inv_mwb_globals.g_inventory_item_id);

      IF lot_control = 1 THEN
        RETURN;
      END IF;
    END IF;

    IF (
        inv_mwb_globals.g_serial_from IS NULL
        AND inv_mwb_globals.g_serial_to IS NULL
        AND inv_mwb_globals.g_tree_serial_number IS NULL
        AND inv_mwb_globals.g_unit_number IS NULL
        AND inv_mwb_globals.g_status_id IS NULL
        AND inv_mwb_globals.g_lpn_from IS NULL
        AND inv_mwb_globals.g_lpn_to IS NULL
        AND inv_mwb_globals.g_tree_parent_lpn_id IS NULL
        AND NVL(inv_mwb_globals.g_prepacked,1) = 1
        AND inv_mwb_globals.g_tree_serial_attr_query IS NULL
       ) THEN
      IF inv_mwb_globals.g_tree_mat_loc_id = 2 THEN
        table_required  := ' mtl_rcv_mwb_onhand_v v ';
      ELSIF(inv_mwb_globals.g_status_id IS NULL AND inv_mwb_globals.g_only_subinventory_status IS NULL) THEN
        table_required  := ' mtl_onhand_total_mwb_v v ';
          IF is_grade_t = TRUE THEN                       -- NSRIVAST, INVCONV
            table_required  := ' mtl_onhand_total_v v ';   -- NSRIVAST, INVCONV
         END IF;                                         -- NSRIVAST, INVCONV
      ELSE
        table_required  := ' mtl_onhand_total_v v ';
      END IF;

	--bug 6633612
	IF (inv_mwb_globals.g_shipment_header_id is not null) THEN
		table_required  := table_required || ' , rcv_transactions rt, mtl_material_transactions mmt ';
	END IF;
	--bug 6633612

      IF inv_mwb_globals.g_tree_lot_attr_query IS NULL AND inv_mwb_globals.g_parent_lot IS NULL
        AND inv_mwb_globals.g_supplier_lot_from IS NULL AND inv_mwb_globals.g_supplier_lot_to IS NULL THEN
        query_str  := query_str || 'SELECT v.lot_number from ' || table_required;
        query_str  := query_str || 'WHERE 1=1 ';
      ELSE
        query_str  :=
              query_str
           || 'SELECT v.lot_number from'
           || '(SELECT lot_number lot_num, parent_lot_number, supplier_lot_number FROM mtl_lot_numbers WHERE 1=1 '
           || inv_mwb_globals.g_tree_lot_attr_query
           || ') mln, '
           || table_required;
        query_str  := query_str || 'WHERE mln.lot_num = v.lot_number ';
 		--BUG 7556505
		   IF inv_mwb_globals.g_parent_lot IS NOT NULL THEN
		       query_str  := query_str || ' AND mln.parent_lot_number = :parent_lot ';
	           END IF;
		--BUG 7556505
                /* Bug 8396954 added below code for supplier_lot_number */
                IF (inv_mwb_globals.g_supplier_lot_from IS NOT NULL AND
                    inv_mwb_globals.g_supplier_lot_to IS NOT NULL AND
                    inv_mwb_globals.g_supplier_lot_from = inv_mwb_globals.g_supplier_lot_to) THEN
                    query_str  := query_str || ' AND mln.supplier_lot_number = :supplier_lot_f ';
                END IF;

                IF (inv_mwb_globals.g_supplier_lot_from IS NOT NULL AND
	            inv_mwb_globals.g_supplier_lot_from <> NVL(inv_mwb_globals.g_supplier_lot_to, -1) ) THEN
                    query_str  := query_str || ' AND mln.supplier_lot_number >= :supplier_lot_f ';
                END IF;

                IF (inv_mwb_globals.g_supplier_lot_to IS NOT NULL AND
	            inv_mwb_globals.g_supplier_lot_to <> NVL(inv_mwb_globals.g_supplier_lot_from, -1) ) THEN
                    query_str  := query_str || ' AND mln.supplier_lot_number <= :supplier_lot_t ';
                END IF;
                /* End of Bug 8396954 */
      END IF;

      IF inv_mwb_globals.g_project_id IS NOT NULL THEN
        query_str  := query_str || ' AND v.project_id = :pr_id ';
      END IF;

      --bug 6633612
	IF (inv_mwb_globals.g_shipment_header_id is not null) THEN
		query_str := query_str || ' AND rt.shipment_header_id = :shipment_header_id '
					 || ' AND rt.transaction_id = mmt.rcv_transaction_id '
					 || ' AND rt.organization_id = mmt.organization_id '
					 || ' AND rt.transaction_type = ''DELIVER'''
					 || ' AND rt.destination_type_code = ''INVENTORY'''
					 || ' AND mmt.transaction_id = v.create_transaction_id '
					 || ' AND mmt.organization_id = v.organization_id ';

	END IF;
	--bug 6633612

      IF inv_mwb_globals.g_task_id IS NOT NULL THEN
        query_str  := query_str || ' AND v.task_id = :ta_id ';
      END IF;

  -- NSRIVAST, INVCONV, Start
      IF inv_mwb_globals.g_grade_from_code IS NOT NULL THEN
         query_str := query_str || ' AND v.grade_code = :grade_f ' ;
      END IF ;
      IF inv_mwb_globals.g_tree_grade_code  IS NOT NULL THEN
         query_str := query_str || ' AND v.grade_code = :grade_c ' ;
      END IF ;
   -- NSRIVAST, INVCONV, End

      /*IF inv_mwb_globals.g_site_id IS NOT NULL THEN
         query_str := query_str || ' AND PLANNING_TP_TYPE = 1 ';
         query_str := query_str || ' AND planning_organization_id = :site_id ' ;
       ELSIF inv_mwb_globals.g_vendor_id is NOT NULL THEN
         query_str := query_str || ' AND  PLANNING_TP_TYPE = 1 ';
         query_str := query_str || ' AND  planning_organization_id in ';
         query_str := query_str || ' (select vendor_site_id from po_vendor_sites_all ';
         query_str := query_str || '  where vendor_id = :vendor_id )';
      END IF;*/
      IF (inv_mwb_globals.g_owning_qry_mode = 4) THEN
        query_str  := query_str || ' AND v.owning_organization_id = :own_org ';
        query_str  := query_str || ' AND v.owning_tp_type = 2 ';
      ELSIF(inv_mwb_globals.g_owning_qry_mode = 3) THEN
        query_str  := query_str || ' AND v.owning_organization_id = :own_org ';
        query_str  := query_str || ' AND v.owning_tp_type = 1 ';
      ELSIF(inv_mwb_globals.g_owning_qry_mode = 2) THEN
        query_str  := query_str || ' AND v.owning_tp_type = 1 ';
      END IF;

      IF (inv_mwb_globals.g_planning_query_mode = 4) THEN
        query_str  := query_str || ' AND v.planning_organization_id = :plan_org ';
        query_str  := query_str || ' AND v.planning_tp_type = 2 ';
      ELSIF(inv_mwb_globals.g_planning_query_mode = 3) THEN
        query_str  := query_str || ' AND v.planning_organization_id = :plan_org ';
        query_str  := query_str || ' AND v.planning_tp_type = 1 ';
      ELSIF(inv_mwb_globals.g_planning_query_mode = 2) THEN
        query_str  := query_str || ' AND v.planning_tp_type = 1 ';
      END IF;

/*
      IF inv_mwb_globals.g_status_id IS NOT NULL THEN
        IF inv_mwb_globals.g_only_lot_status = 1 THEN
          query_str  := query_str || 'AND (subinventory_status_id = :st_id or ';
          query_str  := query_str || 'locator_status_id = :st_id or lot_status_id = :st_id) ';
        ELSE
          query_str  := query_str || 'AND lot_status_id = :st_id ';
        END IF;
      END IF;
*/
      -- Onhand Material Status Support: If status is tracked at onhand level then check for status
      -- from onhand table (MOQD)
      if (l_default_status_id is not null) then -- Status at onhand level
         IF inv_mwb_globals.g_only_subinventory_status = 1 THEN
             query_str  := query_str || 'AND v.onhand_status_id = :st_id ';
         ELSE
            IF inv_mwb_globals.g_status_id IS NOT NULL THEN
               query_str  := query_str || 'AND v.onhand_status_id = :st_id ';
            END IF;
         END IF;
      else
         IF inv_mwb_globals.g_only_subinventory_status = 1 THEN
            query_str  := query_str || 'AND v.lot_status_id = :st_id ';
         ELSE
            IF inv_mwb_globals.g_status_id IS NOT NULL THEN
               query_str  := query_str || 'AND v.lot_status_id = :st_id ';
            END IF;
         END IF;
      end if;

      IF inv_mwb_globals.g_lot_from IS NOT NULL THEN
        query_str  := query_str || 'AND v.lot_number >= :lot_f ';
      END IF;

      IF inv_mwb_globals.g_lot_to IS NOT NULL THEN
        query_str  := query_str || 'AND v.lot_number <= :lot_t ';
      END IF;

    --KMOTUPAL ME # 3922793
      IF inv_mwb_globals.g_expired_lots = 'Y' THEN
        query_str := query_str || ' AND v.expiration_date  <= :expiration_date ';
      END IF;
    --KMOTUPAL ME # 3922793

      IF inv_mwb_globals.g_cost_group_id IS NOT NULL THEN
        query_str  := query_str || 'AND v.cost_group_id = :cg_id ';
      END IF;

      IF inv_mwb_globals.g_revision_controlled = 1 THEN
        query_str  := query_str || 'AND v.revision IS NULL ';
      ELSIF inv_mwb_globals.g_revision_controlled = 2 THEN
        query_str  := query_str || 'AND v.revision IS NOT NULL ';
      END IF;

      IF inv_mwb_globals.g_revision IS NOT NULL
      OR inv_mwb_globals.g_tree_rev IS NOT NULL THEN
        query_str  := query_str || 'AND v.revision = :rev ';
      END IF;

      IF inv_mwb_globals.g_serial_controlled = 1 THEN
        --query_str  := query_str || 'AND serial_number_control_code in (1,6) ';
        query_str  := query_str || 'AND v.item_serial_control in (1,6) ';
      ELSIF inv_mwb_globals.g_serial_controlled = 2 THEN
        --query_str  := query_str || 'AND serial_number_control_code in (2,5) ';
        query_str := query_str || 'AND v.item_serial_control in (2,5) ';
      END IF;

      IF inv_mwb_globals.g_containerized = 1 THEN
        query_str  := query_str || ' AND (v.containerized_flag is null or v.containerized_flag <> 1) ';
      ELSIF inv_mwb_globals.g_containerized = 2 THEN
        query_str  := query_str || 'AND v.containerized_flag = 1 ';
      END IF;

      IF inv_mwb_globals.g_inventory_item_id IS NOT NULL
      OR inv_mwb_globals.g_tree_item_id IS NOT NULL THEN
        query_str  := query_str || 'AND v.inventory_item_id = :item_id ';
      END IF;

      -- ER(9158529 client)
      IF inv_mwb_globals.g_client_code IS NOT NULL THEN
         query_str := query_str || ' AND v.inventory_item_id in (select DISTINCT inventory_item_id from mtl_system_items_b where wms_deploy.get_client_code(inventory_item_id) = :client_code) ';
      END IF;
      -- ER(9158529 client)

      -- ER(9158529)
      IF inv_mwb_globals.g_category_set_id IS NOT NULL THEN
        query_str := query_str || ' AND v.inventory_item_id in '
                                        || ' (select DISTINCT inventory_item_id from mtl_item_categories '
                                        || ' where organization_id = :organization_id '
                                        || ' and category_set_id = :category_set_id '
                                        || ' and category_id = nvl(:category_id, category_id)) ' ;
      END IF;
      -- ER(9158529)

      IF inv_mwb_globals.g_locator_controlled = 1 THEN
        query_str  := query_str || 'AND v.locator_id IS NULL ';
      ELSIF inv_mwb_globals.g_locator_controlled = 2 THEN
        query_str  := query_str || 'AND v.locator_id IS NOT NULL ';
      END IF;

      IF inv_mwb_globals.g_tree_loc_id IS NOT NULL
      OR inv_mwb_globals.g_locator_id IS NOT NULL THEN
        query_str  := query_str || 'AND v.locator_id = :loc_id ';
      END IF;

      --ER(3338592) Changes
      IF inv_mwb_globals.g_item_description IS NOT NULL THEN
         query_str := query_str || ' AND v.item_description LIKE :item_description ';
      END IF;
      --ER(3338592) Changes

      IF inv_mwb_globals.g_tree_subinventory_code IS NOT NULL
      OR inv_mwb_globals.g_subinventory_code IS NOT NULL THEN
        query_str  := query_str || 'AND v.subinventory_code = :sub ';
      END IF;

      IF inv_mwb_globals.g_organization_id IS NOT NULL
      OR inv_mwb_globals.g_tree_organization_id IS NOT NULL THEN
        query_str  := query_str || 'AND v.organization_id = :org_id ';
      END IF;

      query_str := query_str || ' AND v.lot_number is not null ';

      query_str  := query_str || 'GROUP BY v.lot_number ';
      query_str  := query_str || 'ORDER BY v.lot_number ';
    ELSIF(
          (
           inv_mwb_globals.g_serial_from IS NOT NULL
           OR inv_mwb_globals.g_serial_from IS NOT NULL
           OR inv_mwb_globals.g_tree_serial_number IS NOT NULL
           OR inv_mwb_globals.g_serial_controlled = 2
           OR inv_mwb_globals.g_tree_serial_attr_query IS NOT NULL
           OR inv_mwb_globals.g_unit_number IS NOT NULL
          )
          AND inv_mwb_globals.g_lpn_from IS NULL
          AND inv_mwb_globals.g_lpn_to IS NULL
          AND inv_mwb_globals.g_tree_parent_lpn_id IS NULL
          AND nvl(inv_mwb_globals.g_prepacked,1) = 1
         ) THEN
      IF inv_mwb_globals.g_tree_mat_loc_id = 2 THEN
        table_required  := ' mtl_rcv_serial_oh_v v ';
      ELSIF(inv_mwb_globals.g_status_id IS NULL AND inv_mwb_globals.g_only_subinventory_status IS NULL) THEN
        table_required  := ' mtl_onhand_serial_mwb_v v ';
         IF is_grade_t = TRUE THEN                       -- NSRIVAST, INVCONV
          table_required  := ' mtl_onhand_serial_v v ';   -- NSRIVAST, INVCONV
        END IF;                                         -- NSRIVAST, INVCONV
      ELSE
        table_required  := ' mtl_onhand_serial_v v ';
      END IF;

        --bug 6633612
	IF (inv_mwb_globals.g_shipment_header_id is not null) THEN
		table_required  := table_required || ' , rcv_transactions rt, mtl_material_transactions mmt ';
	END IF;
	--bug 6633612

      IF (inv_mwb_globals.g_tree_lot_attr_query IS NULL AND inv_mwb_globals.g_parent_lot IS NULL
            AND inv_mwb_globals.g_supplier_lot_from IS NULL AND inv_mwb_globals.g_supplier_lot_to IS NULL)
         AND inv_mwb_globals.g_tree_serial_attr_query IS NULL THEN
        query_str  := query_str || 'SELECT v.lot_number from ' || table_required;
        query_str  := query_str || 'WHERE 1=1 ';
      ELSIF (inv_mwb_globals.g_tree_lot_attr_query IS NULL AND inv_mwb_globals.g_parent_lot IS NULL
            AND inv_mwb_globals.g_supplier_lot_from IS NULL AND inv_mwb_globals.g_supplier_lot_to IS NULL)
            AND inv_mwb_globals.g_tree_serial_attr_query IS NOT NULL THEN
        query_str  :=
              query_str
           || 'SELECT v.lot_number from'
           || '(SELECT serial_number serial_num FROM mtl_serial_numbers WHERE 1=1 '
           || inv_mwb_globals.g_tree_serial_attr_query
           || ') msn, '
           || table_required;
        query_str  := query_str || 'WHERE msn.serial_num = v.serial_number ';
      ELSIF (inv_mwb_globals.g_tree_lot_attr_query IS NOT NULL OR inv_mwb_globals.g_parent_lot IS NOT NULL
            OR inv_mwb_globals.g_supplier_lot_from IS NOT NULL OR inv_mwb_globals.g_supplier_lot_to IS NOT NULL)
            AND inv_mwb_globals.g_tree_serial_attr_query IS NULL THEN
        query_str  :=
              query_str
           || 'SELECT v.lot_number from'
           || '(SELECT lot_number lot_num, parent_lot_number, supplier_lot_number FROM mtl_lot_numbers WHERE 1=1 '
           || inv_mwb_globals.g_tree_lot_attr_query
           || ') mln, '
           || table_required;
        query_str  := query_str || 'WHERE mln.lot_num = v.lot_number ';
 		--BUG 7556505
		   IF inv_mwb_globals.g_parent_lot IS NOT NULL THEN
		       query_str  := query_str || ' AND mln.parent_lot_number = :parent_lot ';
	           END IF;
		--BUG 7556505
                /* Bug 8396954 added below code for supplier_lot_number */
                IF (inv_mwb_globals.g_supplier_lot_from IS NOT NULL AND
                    inv_mwb_globals.g_supplier_lot_to IS NOT NULL AND
                    inv_mwb_globals.g_supplier_lot_from = inv_mwb_globals.g_supplier_lot_to) THEN
                    query_str  := query_str || ' AND mln.supplier_lot_number = :supplier_lot_f ';
                END IF;

                IF (inv_mwb_globals.g_supplier_lot_from IS NOT NULL AND
	            inv_mwb_globals.g_supplier_lot_from <> NVL(inv_mwb_globals.g_supplier_lot_to, -1) ) THEN
                    query_str  := query_str || ' AND mln.supplier_lot_number >= :supplier_lot_f ';
                END IF;

                IF (inv_mwb_globals.g_supplier_lot_to IS NOT NULL AND
	            inv_mwb_globals.g_supplier_lot_to <> NVL(inv_mwb_globals.g_supplier_lot_from, -1) ) THEN
                    query_str  := query_str || ' AND mln.supplier_lot_number <= :supplier_lot_t ';
                END IF;
                /* End of Bug 8396954 */
      ELSIF (inv_mwb_globals.g_tree_lot_attr_query IS NOT NULL OR inv_mwb_globals.g_parent_lot IS NOT NULL
            OR inv_mwb_globals.g_supplier_lot_from IS NOT NULL OR inv_mwb_globals.g_supplier_lot_to IS NOT NULL)
            AND inv_mwb_globals.g_tree_serial_attr_query IS NOT NULL THEN
        query_str  :=
              query_str
           || 'SELECT v.lot_number from'
           || '(SELECT lot_number lot_num, parent_lot_number, supplier_lot_number FROM mtl_lot_numbers WHERE 1=1 '
           || inv_mwb_globals.g_tree_lot_attr_query
           || ') mln, '
           || '(SELECT serial_number serial_num FROM mtl_serial_numbers WHERE 1=1 '
           || inv_mwb_globals.g_tree_serial_attr_query
           || ') msn, '
           || table_required;
        query_str  := query_str || 'WHERE mln.lot_num = v.lot_number ';
 		--BUG 7556505
		   IF inv_mwb_globals.g_parent_lot IS NOT NULL THEN
		       query_str  := query_str || ' AND mln.parent_lot_number = :parent_lot ';
	           END IF;
		--BUG 7556505
                /* Bug 8396954 added below code for supplier_lot_number */
                IF (inv_mwb_globals.g_supplier_lot_from IS NOT NULL AND
                    inv_mwb_globals.g_supplier_lot_to IS NOT NULL AND
                    inv_mwb_globals.g_supplier_lot_from = inv_mwb_globals.g_supplier_lot_to) THEN
                    query_str  := query_str || ' AND mln.supplier_lot_number = :supplier_lot_f ';
                END IF;

                IF (inv_mwb_globals.g_supplier_lot_from IS NOT NULL AND
	            inv_mwb_globals.g_supplier_lot_from <> NVL(inv_mwb_globals.g_supplier_lot_to, -1) ) THEN
                    query_str  := query_str || ' AND mln.supplier_lot_number >= :supplier_lot_f ';
                END IF;

                IF (inv_mwb_globals.g_supplier_lot_to IS NOT NULL AND
	            inv_mwb_globals.g_supplier_lot_to <> NVL(inv_mwb_globals.g_supplier_lot_from, -1) ) THEN
                    query_str  := query_str || ' AND mln.supplier_lot_number <= :supplier_lot_t ';
                END IF;
                /* End of Bug 8396954 */
	query_str  := query_str || 'AND msn.serial_num = v.serial_number ';
      END IF;

      IF inv_mwb_globals.g_project_id IS NOT NULL THEN
        query_str  := query_str || ' AND v.project_id = :pr_id ';
      END IF;

      IF inv_mwb_globals.g_task_id IS NOT NULL THEN
        query_str  := query_str || ' AND v.task_id = :ta_id ';
      END IF;
      --bug 6633612
	IF (inv_mwb_globals.g_shipment_header_id is not null) THEN
		query_str := query_str || ' AND rt.shipment_header_id = :shipment_header_id '
					 || ' AND rt.transaction_id = mmt.rcv_transaction_id '
					 || ' AND rt.organization_id = mmt.organization_id '
					 || ' AND rt.transaction_type = ''DELIVER'''
					 || ' AND rt.destination_type_code = ''INVENTORY'''
					 || ' AND mmt.transaction_id = v.last_transaction_id '
					 || ' AND mmt.organization_id = v.organization_id ';

	END IF;
	--bug 6633612

      IF inv_mwb_globals.g_unit_number IS NOT NULL THEN
        query_str  := query_str || ' AND v.unit_number=:un_id ';
      END IF;

  -- NSRIVAST, INVCONV, Start
      IF inv_mwb_globals.g_grade_from_code IS NOT NULL THEN
         query_str := query_str || ' AND v.grade_code = :grade_f ' ;
      END IF ;
      IF inv_mwb_globals.g_tree_grade_code  IS NOT NULL THEN
         query_str := query_str || ' AND v.grade_code = :grade_c ' ;
      END IF ;
   -- NSRIVAST, INVCONV, End

      /*IF inv_mwb_globals.g_site_id IS NOT NULL THEN
         query_str := query_str || ' AND PLANNING_TP_TYPE = 1 ';
         query_str := query_str || ' AND planning_organization_id = :site_id ' ;
       ELSIF inv_mwb_globals.g_vendor_id is NOT NULL THEN
         query_str := query_str || ' AND  PLANNING_TP_TYPE = 1 ';
         query_str := query_str || ' AND  planning_organization_id in ';
         query_str := query_str || ' (select vendor_site_id from po_vendor_sites_all ';
         query_str := query_str || '  where vendor_id = :vendor_id )';
      END IF;*/
      IF (inv_mwb_globals.g_owning_qry_mode = 4) THEN
        query_str  := query_str || ' AND v.owning_organization_id = :own_org ';
        query_str  := query_str || ' AND v.owning_tp_type = 2 ';
      ELSIF(inv_mwb_globals.g_owning_qry_mode = 3) THEN
        query_str  := query_str || ' AND v.owning_organization_id = :own_org ';
        query_str  := query_str || ' AND v.owning_tp_type = 1 ';
      ELSIF(inv_mwb_globals.g_owning_qry_mode = 2) THEN
        query_str  := query_str || ' AND v.owning_tp_type = 1 ';
      END IF;

      IF (inv_mwb_globals.g_planning_query_mode = 4) THEN
        query_str  := query_str || ' AND v.planning_organization_id = :plan_org ';
        query_str  := query_str || ' AND v.planning_tp_type = 2 ';
      ELSIF(inv_mwb_globals.g_planning_query_mode = 3) THEN
        query_str  := query_str || ' AND v.planning_organization_id = :plan_org ';
        query_str  := query_str || ' AND v.planning_tp_type = 1 ';
      ELSIF(inv_mwb_globals.g_planning_query_mode = 2) THEN
        query_str  := query_str || ' AND v.planning_tp_type = 1 ';
      END IF;

      -- Onhand Material Status Support: If status is tracked at onhand level then check for status
      -- from serial table (MSN)
      if (l_default_status_id is not null) then -- Status at onhand level
         IF inv_mwb_globals.g_only_subinventory_status = 1 THEN
             query_str  := query_str || 'AND v.serial_status_id = :st_id ';
         ELSE
            IF inv_mwb_globals.g_status_id IS NOT NULL THEN
               query_str  := query_str || 'AND v.serial_status_id = :st_id ';
            END IF;
         END IF;
      else
         IF inv_mwb_globals.g_only_subinventory_status = 1 THEN
            query_str  := query_str || 'AND v.lot_status_id = :st_id ';
         ELSE
            IF inv_mwb_globals.g_status_id IS NOT NULL THEN
               query_str  := query_str || 'AND v.lot_status_id = :st_id ';
            END IF;
         END IF;
      end if;

/*
      IF inv_mwb_globals.g_status_id IS NOT NULL THEN
        IF inv_mwb_globals.g_only_lot_status = 1 THEN
          query_str  := query_str || ' AND (subinventory_status_id = :st_id or locator_status_id = :st_id or ';
          query_str  := query_str || ' lot_status_id = :st_id or serial_status_id = :st_id) ';
        ELSE
          query_str  := query_str || ' AND (lot_status_id = :st_id or :st_id IS NULL) ';
        END IF;
      END IF;
*/

      IF inv_mwb_globals.g_lot_from IS NOT NULL THEN
        query_str  := query_str || 'AND v.lot_number >= :lot_f ';
      END IF;

      IF inv_mwb_globals.g_lot_to IS NOT NULL THEN
        query_str  := query_str || 'AND v.lot_number <= :lot_t ';
      END IF;

    --KMOTUPAL ME # 3922793
      IF inv_mwb_globals.g_expired_lots = 'Y' THEN
        query_str := query_str || ' AND v.expiration_date  <= :expiration_date ';
      END IF;
    --KMOTUPAL ME # 3922793

      IF inv_mwb_globals.g_cost_group_id IS NOT NULL THEN
        query_str  := query_str || 'AND v.cost_group_id = :cg_id ';
      END IF;

      IF inv_mwb_globals.g_revision_controlled = 1 THEN
        query_str  := query_str || 'AND v.revision IS NULL ';
      ELSIF inv_mwb_globals.g_revision_controlled = 2 THEN
        query_str  := query_str || 'AND v.revision IS NOT NULL ';
      END IF;

      IF inv_mwb_globals.g_revision IS NOT NULL
      OR inv_mwb_globals.g_tree_rev IS NOT NULL THEN
        query_str  := query_str || 'AND v.revision = :rev ';
      END IF;

      IF inv_mwb_globals.g_tree_serial_number IS NOT NULL THEN
        query_str  := query_str || 'AND (v.serial_number = :serial_n) ';
      END IF;

      IF inv_mwb_globals.g_serial_from IS NOT NULL THEN
        query_str  := query_str || 'AND v.serial_number >= :serial_f ';
      END IF;

      IF inv_mwb_globals.g_serial_to IS NOT NULL THEN
        query_str  := query_str || 'AND v.serial_number <= :serial_t ';
      END IF;

      IF inv_mwb_globals.g_containerized = 1 THEN
        query_str  := query_str || ' AND (v.containerized_flag is null or v.containerized_flag <> 1) ';
      ELSIF inv_mwb_globals.g_containerized = 2 THEN
        query_str  := query_str || 'AND v.containerized_flag = 1 ';
      END IF;

      IF inv_mwb_globals.g_inventory_item_id IS NOT NULL
      OR inv_mwb_globals.g_tree_item_id IS NOT NULL THEN
	query_str  := query_str || 'AND v.inventory_item_id = :item_id ';
      END IF;

      -- ER(9158529 client)
      IF inv_mwb_globals.g_client_code IS NOT NULL THEN
         query_str := query_str || ' AND v.inventory_item_id in (select DISTINCT inventory_item_id from mtl_system_items_b where wms_deploy.get_client_code(inventory_item_id) = :client_code) ';
      END IF;
      -- ER(9158529 client)

      -- ER(9158529)
      IF inv_mwb_globals.g_category_set_id IS NOT NULL THEN
        query_str := query_str || ' AND v.inventory_item_id in '
                                    || ' (select DISTINCT inventory_item_id from mtl_item_categories '
                                    || ' where organization_id = :organization_id '
                                    || ' and category_set_id = :category_set_id '
                                    || ' and category_id = nvl(:category_id, category_id)) ' ;
      END IF;
      -- ER(9158529)

      IF inv_mwb_globals.g_locator_controlled = 1 THEN
        query_str  := query_str || 'AND v.locator_id IS NULL ';
      ELSIF inv_mwb_globals.g_locator_controlled = 2 THEN
        query_str  := query_str || 'AND v.locator_id IS NOT NULL ';
      END IF;

      IF inv_mwb_globals.g_tree_loc_id IS NOT NULL
      OR inv_mwb_globals.g_locator_id IS NOT NULL THEN
        query_str  := query_str || 'AND v.locator_id = :loc_id ';
      END IF;

      --ER(3338592) Changes
      IF inv_mwb_globals.g_item_description IS NOT NULL THEN
         query_str := query_str || ' AND v.item_description LIKE :item_description ';
      END IF;
      --ER(3338592) Changes

      IF inv_mwb_globals.g_tree_subinventory_code IS NOT NULL
      OR inv_mwb_globals.g_subinventory_code IS NOT NULL THEN
        query_str  := query_str || 'AND v.subinventory_code = :sub ';
      END IF;

      IF inv_mwb_globals.g_organization_id IS NOT NULL
      OR inv_mwb_globals.g_tree_organization_id IS NOT NULL THEN
        query_str  := query_str || 'AND v.organization_id = :org_id ';
      END IF;

      query_str := query_str || ' AND v.lot_number is not null ';

      query_str  := query_str || 'GROUP BY v.lot_number ';
      query_str  := query_str || 'ORDER BY v.lot_number ';
    --Need to query both mtl_onhand_total_v and mtl_onhand_serial_v
    ELSIF(
          inv_mwb_globals.g_serial_from IS NULL
          AND inv_mwb_globals.g_serial_to IS NULL
          AND inv_mwb_globals.g_tree_serial_number IS NULL
          AND inv_mwb_globals.g_tree_serial_attr_query IS NULL
          AND inv_mwb_globals.g_unit_number IS NULL
          AND inv_mwb_globals.g_status_id IS NOT NULL
          AND inv_mwb_globals.g_lpn_from IS NULL
          AND inv_mwb_globals.g_lpn_to IS NULL
          AND inv_mwb_globals.g_tree_parent_lpn_id IS NULL
          AND nvl(inv_mwb_globals.g_prepacked,1) = 1
         ) THEN
      IF (inv_mwb_globals.g_status_id IS NULL AND inv_mwb_globals.g_only_subinventory_status IS NULL) THEN
        table_required  := ' mtl_onhand_total_mwb_v v ';
--      ELSIF is_grade_t = TRUE THEN                            -- NSRIVAST, INVCONV
--          table_required  := ' mtl_onhand_new_lpn_v moq ';    -- NSRIVAST, INVCONV
      ELSE
        table_required  := ' mtl_onhand_total_v v ';
      END IF;

      --bug 6633612
	IF (inv_mwb_globals.g_shipment_header_id is not null) THEN
		table_required  := table_required || ' , rcv_transactions rt, mtl_material_transactions mmt ';
	END IF;
	--bug 6633612

      query_str  := 'SELECT lot_number from( ';

      IF inv_mwb_globals.g_tree_lot_attr_query IS NULL AND inv_mwb_globals.g_parent_lot IS NULL
         AND inv_mwb_globals.g_supplier_lot_from IS NULL AND inv_mwb_globals.g_supplier_lot_to IS NULL THEN
        query_str  := query_str || 'SELECT v.lot_number lot_number from ' || table_required;
        query_str  := query_str || 'WHERE 1=1 ';
      ELSE
        query_str  :=
              query_str
           || 'SELECT v.lot_number lot_number from'
           || '(SELECT lot_number lot_num, parent_lot_number, supplier_lot_number FROM mtl_lot_numbers WHERE 1=1 '
           || inv_mwb_globals.g_tree_lot_attr_query
           || ') mln, '
           || table_required;
        query_str  := query_str || 'WHERE mln.lot_num = v.lot_number ';
 		--BUG 7556505
		   IF inv_mwb_globals.g_parent_lot IS NOT NULL THEN
		       query_str  := query_str || ' AND mln.parent_lot_number = :parent_lot ';
	           END IF;
		--BUG 7556505
                /* Bug 8396954 added below code for supplier_lot_number */
                IF (inv_mwb_globals.g_supplier_lot_from IS NOT NULL AND
                    inv_mwb_globals.g_supplier_lot_to IS NOT NULL AND
                    inv_mwb_globals.g_supplier_lot_from = inv_mwb_globals.g_supplier_lot_to) THEN
                    query_str  := query_str || ' AND mln.supplier_lot_number = :supplier_lot_f ';
                END IF;

                IF (inv_mwb_globals.g_supplier_lot_from IS NOT NULL AND
	            inv_mwb_globals.g_supplier_lot_from <> NVL(inv_mwb_globals.g_supplier_lot_to, -1) ) THEN
                    query_str  := query_str || ' AND mln.supplier_lot_number >= :supplier_lot_f ';
                END IF;

                IF (inv_mwb_globals.g_supplier_lot_to IS NOT NULL AND
	            inv_mwb_globals.g_supplier_lot_to <> NVL(inv_mwb_globals.g_supplier_lot_from, -1) ) THEN
                    query_str  := query_str || ' AND mln.supplier_lot_number <= :supplier_lot_t ';
                END IF;
                /* End of Bug 8396954 */
      END IF;

      IF inv_mwb_globals.g_project_id IS NOT NULL THEN
        query_str  := query_str || ' AND v.project_id = :pr_id ';
      END IF;

      IF inv_mwb_globals.g_task_id IS NOT NULL THEN
        query_str  := query_str || ' AND v.task_id = :ta_id ';
      END IF;

      --bug 6633612
	IF (inv_mwb_globals.g_shipment_header_id is not null) THEN
		query_str := query_str || ' AND rt.shipment_header_id = :shipment_header_id '
					 || ' AND rt.transaction_id = mmt.rcv_transaction_id '
					 || ' AND rt.organization_id = mmt.organization_id '
					 || ' AND rt.transaction_type = ''DELIVER'''
					 || ' AND rt.destination_type_code = ''INVENTORY'''
					 || ' AND mmt.transaction_id = v.create_transaction_id '
					 || ' AND mmt.organization_id = v.organization_id ';

	END IF;
	--bug 6633612

  -- NSRIVAST, INVCONV, Start
      IF inv_mwb_globals.g_grade_from_code IS NOT NULL THEN
         query_str := query_str || ' AND v.grade_code = :grade_f ' ;
      END IF ;
      IF inv_mwb_globals.g_tree_grade_code  IS NOT NULL THEN
         query_str := query_str || ' AND v.grade_code = :grade_c ' ;
      END IF ;
   -- NSRIVAST, INVCONV, End

      /*IF inv_mwb_globals.g_site_id IS NOT NULL THEN
         query_str := query_str || ' AND PLANNING_TP_TYPE = 1 ';
         query_str := query_str || ' AND planning_organization_id = :site_id ' ;
       ELSIF inv_mwb_globals.g_vendor_id is NOT NULL THEN
         query_str := query_str || ' AND  PLANNING_TP_TYPE = 1 ';
         query_str := query_str || ' AND  planning_organization_id in ';
         query_str := query_str || ' (select vendor_site_id from po_vendor_sites_all ';
         query_str := query_str || '  where vendor_id = :vendor_id )';
      END IF;*/
      IF (inv_mwb_globals.g_owning_qry_mode = 4) THEN
        query_str  := query_str || ' AND v.owning_organization_id = :own_org ';
        query_str  := query_str || ' AND v.owning_tp_type = 2 ';
      ELSIF(inv_mwb_globals.g_owning_qry_mode = 3) THEN
        query_str  := query_str || ' AND v.owning_organization_id = :own_org ';
        query_str  := query_str || ' AND owning_tp_type = 1 ';
      ELSIF(inv_mwb_globals.g_owning_qry_mode = 2) THEN
        query_str  := query_str || ' AND v.owning_tp_type = 1 ';
      END IF;

      IF (inv_mwb_globals.g_planning_query_mode = 4) THEN
        query_str  := query_str || ' AND v.planning_organization_id = :plan_org ';
        query_str  := query_str || ' AND v.planning_tp_type = 2 ';
      ELSIF(inv_mwb_globals.g_planning_query_mode = 3) THEN
        query_str  := query_str || ' AND v.planning_organization_id = :plan_org ';
        query_str  := query_str || ' AND v.planning_tp_type = 1 ';
      ELSIF(inv_mwb_globals.g_planning_query_mode = 2) THEN
        query_str  := query_str || ' AND v.planning_tp_type = 1 ';
      END IF;

      -- Onhand Material Status Support: If status is tracked at onhand level then check for status
      -- from onhand table (MOQD)
      if (l_default_status_id is not null) then -- Status at onhand level
         IF inv_mwb_globals.g_only_subinventory_status = 1 THEN
             query_str  := query_str || 'AND v.onhand_status_id = :st_id ';
         ELSE
            IF inv_mwb_globals.g_status_id IS NOT NULL THEN
               query_str  := query_str || 'AND v.onhand_status_id = :st_id ';
            END IF;
         END IF;
      else
         IF inv_mwb_globals.g_only_subinventory_status = 1 THEN
            query_str  := query_str || 'AND v.lot_status_id = :st_id ';
         ELSE
            IF inv_mwb_globals.g_status_id IS NOT NULL THEN -- Bug 6060233
               query_str  := query_str || 'AND (v.subinventory_status_id = :st_id or v.locator_status_id = :st_id ';
               query_str  := query_str || 'OR v.lot_status_id = :st_id) ';
            END IF;
         END IF;
      end if;

/*
      IF inv_mwb_globals.g_status_id IS NOT NULL THEN
        IF inv_mwb_globals.g_only_lot_status = 1 THEN
          query_str  := query_str || 'AND (subinventory_status_id = :st_id or ';
          query_str  := query_str || 'locator_status_id = :st_id or lot_status_id = :st_id) ';
        ELSE
          query_str  := query_str || 'AND lot_status_id = :st_id ';
        END IF;
      END IF;
*/
      IF inv_mwb_globals.g_lot_from IS NOT NULL THEN
        query_str  := query_str || 'AND v.lot_number >= :lot_f ';
      END IF;

      IF inv_mwb_globals.g_lot_to IS NOT NULL THEN
        query_str  := query_str || 'AND v.lot_number <= :lot_t ';
      END IF;

    --KMOTUPAL ME # 3922793
      IF inv_mwb_globals.g_expired_lots = 'Y' THEN
        query_str := query_str || ' AND v.expiration_date  <= :expiration_date ';
      END IF;
    --KMOTUPAL ME # 3922793

      IF inv_mwb_globals.g_cost_group_id IS NOT NULL THEN
        query_str  := query_str || 'AND v.cost_group_id = :cg_id ';
      END IF;

      IF inv_mwb_globals.g_revision_controlled = 1 THEN
        query_str  := query_str || 'AND v.revision IS NULL ';
      ELSIF inv_mwb_globals.g_revision_controlled = 2 THEN
        query_str  := query_str || 'AND revision IS NOT NULL ';
      END IF;

      IF inv_mwb_globals.g_revision IS NOT NULL
      OR inv_mwb_globals.g_tree_rev IS NOT NULL THEN
        query_str  := query_str || 'AND v.revision = :rev ';
      END IF;

      IF inv_mwb_globals.g_containerized = 1 THEN
        query_str  := query_str || ' AND (v.containerized_flag is null or v.containerized_flag <> 1) ';
      ELSIF inv_mwb_globals.g_containerized = 2 THEN
        query_str  := query_str || 'AND v.containerized_flag = 1 ';
      END IF;

      -- query_str := query_str || 'AND serial_number_control_code in (1,6) ';
      query_str  :=
            query_str
         || ' AND exists '
         || ' ( select null from mtl_system_items msi WHERE '
         || ' v.organization_id = msi.organization_id and '
         || ' v.inventory_item_id =  msi.inventory_item_id and '
         || ' item_serial_control in (1,6) ) ';

      IF inv_mwb_globals.g_inventory_item_id IS NOT NULL
      OR inv_mwb_globals.g_tree_item_id IS NOT NULL THEN
        query_str  := query_str || 'AND v.inventory_item_id = :item_id ';
      END IF;

      -- ER(9158529 client)
      IF inv_mwb_globals.g_client_code IS NOT NULL THEN
         query_str := query_str || ' AND v.inventory_item_id in (select DISTINCT inventory_item_id from mtl_system_items_b where wms_deploy.get_client_code(inventory_item_id) = :client_code) ';
      END IF;
      -- ER(9158529 client)

      -- ER(9158529)
      IF inv_mwb_globals.g_category_set_id IS NOT NULL THEN
        query_str := query_str || ' AND v.inventory_item_id in '
                                    || ' (select DISTINCT inventory_item_id from mtl_item_categories '
                                    || ' where organization_id = :organization_id '
                                    || ' and category_set_id = :category_set_id '
                                    || ' and category_id = nvl(:category_id, category_id)) ' ;
      END IF;
      -- ER(9158529)

      IF inv_mwb_globals.g_locator_controlled = 1 THEN
        query_str  := query_str || 'AND v.locator_id IS NULL ';
      ELSIF inv_mwb_globals.g_locator_controlled = 2 THEN
        query_str  := query_str || 'AND v.locator_id IS NOT NULL ';
      END IF;

      IF inv_mwb_globals.g_tree_loc_id IS NOT NULL
      OR inv_mwb_globals.g_locator_id IS NOT NULL THEN
        query_str  := query_str || 'AND v.locator_id = :loc_id ';
      END IF;

      --ER(3338592) Changes
      IF inv_mwb_globals.g_item_description IS NOT NULL THEN
         query_str := query_str || ' AND v.item_description LIKE :item_description ';
      END IF;
      --ER(3338592) Changes

      IF inv_mwb_globals.g_tree_subinventory_code IS NOT NULL
      OR inv_mwb_globals.g_subinventory_code IS NOT NULL THEN
        query_str  := query_str || 'AND v.subinventory_code = :sub ';
      END IF;

      IF inv_mwb_globals.g_organization_id IS NOT NULL
      OR inv_mwb_globals.g_tree_organization_id IS NOT NULL THEN
         query_str  := query_str || 'AND v.organization_id = :org_id ';
      END IF;

      query_str  := query_str || 'UNION ';

      IF (inv_mwb_globals.g_status_id IS NULL AND inv_mwb_globals.g_only_subinventory_status IS NULL) THEN
        table_required  := ' mtl_onhand_serial_mwb_v v ';
      ELSE
        table_required  := ' mtl_onhand_serial_v v ';
      END IF;

       --bug 6633612
	IF (inv_mwb_globals.g_shipment_header_id is not null) THEN
		table_required  := table_required || ' , rcv_transactions rt, mtl_material_transactions mmt ';
	END IF;
	--bug 6633612

      IF (inv_mwb_globals.g_tree_lot_attr_query IS NULL AND inv_mwb_globals.g_parent_lot IS NULL
            AND inv_mwb_globals.g_supplier_lot_from IS NULL AND inv_mwb_globals.g_supplier_lot_to IS NULL)
         AND inv_mwb_globals.g_tree_serial_attr_query IS NULL THEN
        query_str  := query_str || 'SELECT v.lot_number from ' || table_required;
        query_str  := query_str || 'WHERE 1=1 ';
      ELSIF (inv_mwb_globals.g_tree_lot_attr_query IS NOT NULL OR inv_mwb_globals.g_parent_lot IS NOT NULL
            OR inv_mwb_globals.g_supplier_lot_from IS NOT NULL OR inv_mwb_globals.g_supplier_lot_to IS NOT NULL)
            AND inv_mwb_globals.g_tree_serial_attr_query IS NULL THEN
        query_str  :=
              query_str
           || 'SELECT v.lot_number from'
           || '(SELECT lot_number lot_num, parent_lot_number, supplier_lot_number FROM mtl_lot_numbers WHERE 1=1 '
           || inv_mwb_globals.g_tree_lot_attr_query
           || ') mln, '
           || table_required;
        query_str  := query_str || 'WHERE mln.lot_num = v.lot_number ';
 		--BUG 7556505
		   IF inv_mwb_globals.g_parent_lot IS NOT NULL THEN
		       query_str  := query_str || ' AND mln.parent_lot_number = :parent_lot ';
	           END IF;
		--BUG 7556505
                /* Bug 8396954 added below code for supplier_lot_number */
                IF (inv_mwb_globals.g_supplier_lot_from IS NOT NULL AND
                    inv_mwb_globals.g_supplier_lot_to IS NOT NULL AND
                    inv_mwb_globals.g_supplier_lot_from = inv_mwb_globals.g_supplier_lot_to) THEN
                    query_str  := query_str || ' AND mln.supplier_lot_number = :supplier_lot_f ';
                END IF;

                IF (inv_mwb_globals.g_supplier_lot_from IS NOT NULL AND
	            inv_mwb_globals.g_supplier_lot_from <> NVL(inv_mwb_globals.g_supplier_lot_to, -1) ) THEN
                    query_str  := query_str || ' AND mln.supplier_lot_number >= :supplier_lot_f ';
                END IF;

                IF (inv_mwb_globals.g_supplier_lot_to IS NOT NULL AND
	            inv_mwb_globals.g_supplier_lot_to <> NVL(inv_mwb_globals.g_supplier_lot_from, -1) ) THEN
                    query_str  := query_str || ' AND mln.supplier_lot_number <= :supplier_lot_t ';
                END IF;
                /* End of Bug 8396954 */
      END IF;

      -- Onhand Material Status Support: If status is tracked at onhand level then check for status
      -- from serial table (MSN)
      if (l_default_status_id is not null) then -- Status at onhand level
         IF inv_mwb_globals.g_only_subinventory_status = 1 THEN
             query_str  := query_str || 'AND v.serial_status_id = :st_id ';
         ELSE
            IF inv_mwb_globals.g_status_id IS NOT NULL THEN
               query_str  := query_str || 'AND v.serial_status_id = :st_id ';
            END IF;
         END IF;
      else
         IF inv_mwb_globals.g_only_subinventory_status = 1 THEN
            query_str  := query_str || 'AND v.lot_status_id = :st_id ';
         ELSE
            IF inv_mwb_globals.g_status_id IS NOT NULL THEN -- Bug 6060233
               query_str  := query_str || 'AND (v.subinventory_status_id = :st_id or v.locator_status_id = :st_id ';
               query_str  := query_str || 'OR v.lot_status_id = :st_id OR v.serial_status_id = :st_id) ';
            END IF;
         END IF;
      end if;

/*
      IF inv_mwb_globals.g_status_id IS NOT NULL THEN
        IF inv_mwb_globals.g_only_lot_status = 1 THEN
          query_str  := query_str || 'AND (subinventory_status_id = :st_id or locator_status_id = :st_id or ';
          query_str  := query_str || 'lot_status_id = :st_id or serial_status_id = :st_id) ';
        ELSE
          query_str  := query_str || 'AND (lot_status_id = :st_id or :st_id IS NULL) ';
        END IF;
      END IF;
*/

      IF inv_mwb_globals.g_lot_from IS NOT NULL THEN
        query_str  := query_str || 'AND v.lot_number >= :lot_f ';
      END IF;

      IF inv_mwb_globals.g_lot_to IS NOT NULL THEN
        query_str  := query_str || 'AND v.lot_number <= :lot_t ';
      END IF;

      --bug 6633612
	IF (inv_mwb_globals.g_shipment_header_id is not null) THEN
		query_str := query_str || ' AND rt.shipment_header_id = :shipment_header_id '
					 || ' AND rt.transaction_id = mmt.rcv_transaction_id '
					 || ' AND rt.organization_id = mmt.organization_id '
					 || ' AND rt.transaction_type = ''DELIVER'''
					 || ' AND rt.destination_type_code = ''INVENTORY'''
					 || ' AND mmt.transaction_id = v.last_transaction_id '
					 || ' AND mmt.organization_id = v.organization_id ';

	END IF;
	--bug 6633612

    --KMOTUPAL ME # 3922793
      IF inv_mwb_globals.g_expired_lots = 'Y' THEN
        query_str := query_str || ' AND v.expiration_date  <= :expiration_date ';
      END IF;
    --KMOTUPAL ME # 3922793

      IF inv_mwb_globals.g_cost_group_id IS NOT NULL THEN
        query_str  := query_str || 'AND v.cost_group_id = :cg_id ';
      END IF;

      IF inv_mwb_globals.g_revision_controlled = 1 THEN
        query_str  := query_str || 'AND v.revision IS NULL ';
      ELSIF inv_mwb_globals.g_revision_controlled = 2 THEN
        query_str  := query_str || 'AND v.revision IS NOT NULL ';
      END IF;

      IF inv_mwb_globals.g_revision IS NOT NULL
      OR inv_mwb_globals.g_tree_rev IS NOT NULL THEN
        query_str  := query_str || 'AND v.revision = :rev ';
      END IF;

      IF inv_mwb_globals.g_containerized = 1 THEN
        query_str  := query_str || ' AND (v.containerized_flag is null or v.containerized_flag <> 1) ';
      ELSIF inv_mwb_globals.g_containerized = 2 THEN
        query_str  := query_str || 'AND v.containerized_flag = 1 ';
      END IF;

      IF inv_mwb_globals.g_serial_from IS NOT NULL THEN
        query_str  := query_str || 'AND v.serial_number >= :serial_f ';
      END IF;

      IF inv_mwb_globals.g_serial_to IS NOT NULL THEN
        query_str  := query_str || 'AND v.serial_number <= :serial_t ';
      END IF;

      IF inv_mwb_globals.g_inventory_item_id IS NOT NULL
      OR inv_mwb_globals.g_tree_item_id IS NOT NULL THEN
        query_str  := query_str || 'AND v.inventory_item_id = :item_id ';
      END IF;

      -- ER(9158529 client)
      IF inv_mwb_globals.g_client_code IS NOT NULL THEN
         query_str := query_str || ' AND v.inventory_item_id in (select DISTINCT inventory_item_id from mtl_system_items_b where wms_deploy.get_client_code(inventory_item_id) = :client_code) ';
      END IF;
      -- ER(9158529 client)

      -- ER(9158529)
      IF inv_mwb_globals.g_category_set_id IS NOT NULL THEN
         query_str := query_str || ' AND v.inventory_item_id in '
                                     || ' (select DISTINCT inventory_item_id from mtl_item_categories '
                                     || ' where organization_id = :organization_id '
                                     || ' and category_set_id = :category_set_id '
                                     || ' and category_id = nvl(:category_id, category_id)) ' ;
      END IF;
      -- ER(9158529)

      IF inv_mwb_globals.g_locator_controlled = 1 THEN
        query_str  := query_str || 'AND v.locator_id IS NULL ';
      ELSIF inv_mwb_globals.g_locator_controlled = 2 THEN
        query_str  := query_str || 'AND v.locator_id IS NOT NULL ';
      END IF;

      IF inv_mwb_globals.g_tree_loc_id IS NOT NULL
      OR inv_mwb_globals.g_locator_id IS NOT NULL THEN
        query_str  := query_str || 'AND v.locator_id = :loc_id ';
      END IF;

      --ER(3338592) Changes
      IF inv_mwb_globals.g_item_description IS NOT NULL THEN
         query_str := query_str || ' AND v.item_description LIKE :item_description ';
      END IF;
      --ER(3338592) Changes

      IF inv_mwb_globals.g_tree_subinventory_code IS NOT NULL
      OR inv_mwb_globals.g_subinventory_code IS NOT NULL THEN
        query_str  := query_str || 'AND v.subinventory_code = :sub ';
      END IF;

      IF inv_mwb_globals.g_organization_id IS NOT NULL
      OR inv_mwb_globals.g_tree_organization_id IS NOT NULL THEN
        query_str  := query_str || 'AND v.organization_id = :org_id ';
      END IF;

      query_str  := query_str || ') GROUP BY lot_number ';
      query_str  := query_str || 'ORDER BY lot_number ';
    ELSIF(inv_mwb_globals.g_lpn_from IS NOT NULL
          OR inv_mwb_globals.g_lpn_to IS NOT NULL
          OR inv_mwb_globals.g_tree_parent_lpn_id IS NOT NULL
          OR inv_mwb_globals.g_prepacked <> 1) THEN
      IF inv_mwb_globals.g_tree_mat_loc_id = 2 THEN
        table_required  := ' mtl_onhand_lpn_mwb_v mol ';
      ELSIF(inv_mwb_globals.g_status_id IS NULL AND inv_mwb_globals.g_only_subinventory_status IS NULL) THEN
        IF (inv_mwb_globals.g_prepacked <> 1) AND (inv_mwb_globals.g_prepacked <> 9) AND (inv_mwb_globals.g_prepacked <> 11) THEN
          table_required  := ' mtl_onhand_lpn_mwb_v mol ';
          IF is_grade_t = TRUE THEN                        -- NSRIVAST, INVCONV
            table_required  := ' mtl_onhand_new_lpn_v ';   -- NSRIVAST, INVCONV
          END IF;                                          -- NSRIVAST, INVCONV
        ELSE
          table_required  := ' mtl_onhand_new_lpn_mwb_v mol ';
          IF is_grade_t = TRUE THEN                        -- %%NSRIVAST, INVCONV
            table_required  := ' mtl_onhand_new_lpn_v mol ';   -- %%NSRIVAST, INVCONV
          END IF;
        END IF;
      ELSE
        IF (inv_mwb_globals.g_prepacked <> 1) AND (inv_mwb_globals.g_prepacked <> 9) AND (inv_mwb_globals.g_prepacked <> 11) THEN
          table_required  := ' mtl_onhand_lpn_v mol  ';
          IF is_grade_t = TRUE THEN                        -- NSRIVAST, INVCONV
            table_required  := ' mtl_onhand_new_lpn_v ';   -- NSRIVAST, INVCONV
          END IF;                                          -- NSRIVAST, INVCONV
        ELSE
          table_required  := ' mtl_onhand_new_lpn_v mol ';
        END IF;
      END IF;

      query_str  := 'SELECT lot_number  ';
      query_str  := query_str || 'FROM ' || table_required;

      IF (inv_mwb_globals.g_lpn_from IS NOT NULL
          OR inv_mwb_globals.g_lpn_to IS NOT NULL)
         AND inv_mwb_globals.g_tree_parent_lpn_id IS NULL THEN
        query_str  := query_str || ', (select outermost_lpn_id from wms_license_plate_numbers wlpn ';
        query_str  := query_str || ' WHERE 1=1 ';

        IF inv_mwb_globals.g_tree_mat_loc_id = 2 THEN
          query_str  := query_str || ' AND lpn_context = 3 ';
        ELSIF inv_mwb_globals.g_prepacked IS NULL THEN
          query_str  := query_str || ' AND (lpn_context=1  or lpn_context=9 or lpn_context=11 )';
        ELSIF inv_mwb_globals.g_prepacked = 1 THEN
          query_str  := query_str || 'AND lpn_context = 1 ';
        ELSIF inv_mwb_globals.g_prepacked <> 1
              AND inv_mwb_globals.g_prepacked <> 999
              AND inv_mwb_globals.g_prepacked IS NOT NULL THEN
          query_str  := query_str || 'AND lpn_context = :prepacked ';
        END IF;

      IF inv_mwb_globals.g_tree_loc_id IS NOT NULL
      OR inv_mwb_globals.g_locator_id IS NOT NULL THEN
          query_str  := query_str || 'AND wlpn.locator_id = :loc_id ';
      END IF;

  -- NSRIVAST, INVCONV, Start
      IF inv_mwb_globals.g_grade_from_code IS NOT NULL THEN
         query_str := query_str || ' AND grade_code = :grade_f ' ;
      END IF ;
      IF inv_mwb_globals.g_tree_grade_code  IS NOT NULL THEN
         query_str := query_str || ' AND grade_code = :grade_c ' ;
      END IF ;
   -- NSRIVAST, INVCONV, End

      IF inv_mwb_globals.g_tree_subinventory_code IS NOT NULL
      OR inv_mwb_globals.g_subinventory_code IS NOT NULL THEN
          query_str  := query_str || 'AND wlpn.subinventory_code = :sub ';
        END IF;

      IF inv_mwb_globals.g_organization_id IS NOT NULL
      OR inv_mwb_globals.g_tree_organization_id IS NOT NULL THEN
          query_str  := query_str || 'AND wlpn.organization_id = :org_id ';
      END IF;

      IF inv_mwb_globals.g_tree_parent_lpn_id IS NULL THEN
         IF inv_mwb_globals.g_lpn_from = inv_mwb_globals.g_lpn_to THEN
            query_str  := query_str || ' and license_plate_number = :lpn_f ';
         ELSE
   	    IF inv_mwb_globals.g_lpn_from IS NOT NULL THEN
               query_str  := query_str || ' and license_plate_number >= :lpn_f ';
    	    END IF;
 	    IF inv_mwb_globals.g_lpn_to IS NOT NULL THEN
               query_str  := query_str || ' and license_plate_number <= :lpn_t ';
   	    END IF;
         END IF;
      END IF;

        query_str  := query_str || 'group by wlpn.outermost_lpn_id) X ';
      END IF;

      IF (inv_mwb_globals.g_tree_lot_attr_query IS NULL AND inv_mwb_globals.g_parent_lot IS NULL
            AND inv_mwb_globals.g_supplier_lot_from IS NULL AND inv_mwb_globals.g_supplier_lot_to IS NULL)
         AND inv_mwb_globals.g_tree_serial_attr_query IS NULL THEN
        query_str  := query_str || 'WHERE 1=1 ';
      ELSIF (inv_mwb_globals.g_tree_lot_attr_query IS NULL AND inv_mwb_globals.g_parent_lot IS NULL
            AND inv_mwb_globals.g_supplier_lot_from IS NULL AND inv_mwb_globals.g_supplier_lot_to IS NULL)
            AND inv_mwb_globals.g_tree_serial_attr_query IS NOT NULL THEN
        query_str  :=
                     query_str || ', (SELECT serial_number serial_num FROM mtl_serial_numbers WHERE 1=1 ' || inv_mwb_globals.g_tree_serial_attr_query
                     || ') msn ';
        query_str  := query_str || 'WHERE msn.serial_num = serial_number ';
      ELSIF (inv_mwb_globals.g_tree_lot_attr_query IS NOT NULL OR inv_mwb_globals.g_parent_lot IS NOT NULL
            OR inv_mwb_globals.g_supplier_lot_from IS NOT NULL OR inv_mwb_globals.g_supplier_lot_to IS NOT NULL)
            AND inv_mwb_globals.g_tree_serial_attr_query IS NULL THEN
        query_str  := query_str || ', (SELECT lot_number lot_num, parent_lot_number, supplier_lot_number FROM mtl_lot_numbers WHERE 1=1 ' || inv_mwb_globals.g_tree_lot_attr_query || ') mln ';
        query_str  := query_str || 'WHERE mln.lot_num = lot_number ';
 		--BUG 7556505
		   IF inv_mwb_globals.g_parent_lot IS NOT NULL THEN
		       query_str  := query_str || ' AND mln.parent_lot_number = :parent_lot ';
	           END IF;
		--BUG 7556505
                /* Bug 8396954 added below code for supplier_lot_number */
                IF (inv_mwb_globals.g_supplier_lot_from IS NOT NULL AND
                    inv_mwb_globals.g_supplier_lot_to IS NOT NULL AND
                    inv_mwb_globals.g_supplier_lot_from = inv_mwb_globals.g_supplier_lot_to) THEN
                    query_str  := query_str || ' AND mln.supplier_lot_number = :supplier_lot_f ';
                END IF;

                IF (inv_mwb_globals.g_supplier_lot_from IS NOT NULL AND
	            inv_mwb_globals.g_supplier_lot_from <> NVL(inv_mwb_globals.g_supplier_lot_to, -1) ) THEN
                    query_str  := query_str || ' AND mln.supplier_lot_number >= :supplier_lot_f ';
                END IF;

                IF (inv_mwb_globals.g_supplier_lot_to IS NOT NULL AND
	            inv_mwb_globals.g_supplier_lot_to <> NVL(inv_mwb_globals.g_supplier_lot_from, -1) ) THEN
                    query_str  := query_str || ' AND mln.supplier_lot_number <= :supplier_lot_t ';
                END IF;
                /* End of Bug 8396954 */
      ELSIF (inv_mwb_globals.g_tree_lot_attr_query IS NOT NULL OR inv_mwb_globals.g_parent_lot IS NOT NULL
              OR inv_mwb_globals.g_supplier_lot_from IS NOT NULL OR inv_mwb_globals.g_supplier_lot_to IS NOT NULL)
            AND inv_mwb_globals.g_tree_serial_attr_query IS NOT NULL THEN
        query_str  :=
              query_str
           || ', (SELECT lot_number lot_num, parent_lot_number, supplier_lot_number FROM mtl_lot_numbers WHERE 1=1 '
           || inv_mwb_globals.g_tree_lot_attr_query
           || ') mln '
           || ', (SELECT serial_number serial_num FROM mtl_serial_numbers WHERE 1=1 '
           || inv_mwb_globals.g_tree_serial_attr_query
           || ') msn ';
        query_str  := query_str || 'WHERE mln.lot_num = lot_number ';
 		--BUG 7556505
		   IF inv_mwb_globals.g_parent_lot IS NOT NULL THEN
		       query_str  := query_str || ' AND mln.parent_lot_number = :parent_lot ';
	           END IF;
		--BUG 7556505
                /* Bug 8396954 added below code for supplier_lot_number */
                IF (inv_mwb_globals.g_supplier_lot_from IS NOT NULL AND
                    inv_mwb_globals.g_supplier_lot_to IS NOT NULL AND
                    inv_mwb_globals.g_supplier_lot_from = inv_mwb_globals.g_supplier_lot_to) THEN
                    query_str  := query_str || ' AND mln.supplier_lot_number = :supplier_lot_f ';
                END IF;

                IF (inv_mwb_globals.g_supplier_lot_from IS NOT NULL AND
	            inv_mwb_globals.g_supplier_lot_from <> NVL(inv_mwb_globals.g_supplier_lot_to, -1) ) THEN
                    query_str  := query_str || ' AND mln.supplier_lot_number >= :supplier_lot_f ';
                END IF;

                IF (inv_mwb_globals.g_supplier_lot_to IS NOT NULL AND
	            inv_mwb_globals.g_supplier_lot_to <> NVL(inv_mwb_globals.g_supplier_lot_from, -1) ) THEN
                    query_str  := query_str || ' AND mln.supplier_lot_number <= :supplier_lot_t ';
                END IF;
                /* End of Bug 8396954 */
        query_str  := query_str || 'AND msn.serial_num = serial_number ';
      END IF;

      /*LPN Status Project*/
      IF (l_default_status_id IS NOT NULL) THEN -- Status at onhand level
         IF inv_mwb_globals.g_only_subinventory_status = 1 THEN
             query_str  := query_str || 'AND onhand_status_id = :st_id ';
         ELSE
            IF inv_mwb_globals.g_status_id IS NOT NULL THEN
               query_str  := query_str || 'AND onhand_status_id = :st_id ';
            END IF;
         END IF;
      ELSE
        IF inv_mwb_globals.g_only_subinventory_status = 1 THEN
          query_str  := query_str || 'AND lot_status_id = :st_id ';
        ELSE
          IF inv_mwb_globals.g_status_id IS NOT NULL THEN
            query_str  := query_str || 'AND lot_status_id = :st_id ';
          END IF;
        END IF;
      END IF;
      /* End of fix for LPN Status Project */
/*
      IF inv_mwb_globals.g_status_id IS NOT NULL THEN
        IF inv_mwb_globals.g_only_lot_status = 1 THEN
          query_str  := query_str || 'AND (subinventory_status_id = :st_id or locator_status_id = :st_id or ';
          query_str  := query_str || 'lot_status_id = :st_id or serial_status_id = :st_id) ';
        ELSE
          query_str  := query_str || 'AND lot_status_id = :st_id ';
        END IF;
      END IF;
*/
      IF inv_mwb_globals.g_project_id IS NOT NULL THEN
        query_str  := query_str || ' AND project_id = :pr_id ';
      END IF;

  -- NSRIVAST, INVCONV, Start
      IF inv_mwb_globals.g_grade_from_code IS NOT NULL THEN
         query_str := query_str || ' AND grade_code = :grade_f ' ;
      END IF ;
      IF inv_mwb_globals.g_tree_grade_code  IS NOT NULL THEN
         query_str := query_str || ' AND grade_code = :grade_c ' ;
      END IF ;
   -- NSRIVAST, INVCONV, End

      IF inv_mwb_globals.g_task_id IS NOT NULL THEN
        query_str  := query_str || ' AND task_id = :ta_id ';
      END IF;

      IF inv_mwb_globals.g_unit_number IS NOT NULL THEN
        query_str  := query_str || ' AND unit_number=:un_id ';
      END IF;

      /*IF inv_mwb_globals.g_site_id IS NOT NULL THEN
         query_str := query_str || ' AND PLANNING_TP_TYPE = 1 ';
         query_str := query_str || ' AND planning_organization_id = :site_id ' ;
       ELSIF inv_mwb_globals.g_vendor_id is NOT NULL THEN
         query_str := query_str || ' AND  PLANNING_TP_TYPE = 1 ';
         query_str := query_str || ' AND  planning_organization_id in ';
         query_str := query_str || ' (select vendor_site_id from po_vendor_sites_all ';
         query_str := query_str || '  where vendor_id = :vendor_id )';
      END IF;*/

      IF (inv_mwb_globals.g_owning_qry_mode = 4) THEN
        query_str  := query_str || ' AND owning_organization_id = :own_org ';
        query_str  := query_str || ' AND owning_tp_type = 2 ';
      ELSIF(inv_mwb_globals.g_owning_qry_mode = 3) THEN
        query_str  := query_str || ' AND owning_organization_id = :own_org ';
        query_str  := query_str || ' AND owning_tp_type = 1 ';
      ELSIF(inv_mwb_globals.g_owning_qry_mode = 2) THEN
        query_str  := query_str || ' AND owning_tp_type = 1 ';
      END IF;

      IF (inv_mwb_globals.g_planning_query_mode = 4) THEN
        query_str  := query_str || ' AND planning_organization_id = :plan_org ';
        query_str  := query_str || ' AND planning_tp_type = 2 ';
      ELSIF(inv_mwb_globals.g_planning_query_mode = 3) THEN
        query_str  := query_str || ' AND planning_organization_id = :plan_org ';
        query_str  := query_str || ' AND planning_tp_type = 1 ';
      ELSIF(inv_mwb_globals.g_planning_query_mode = 2) THEN
        query_str  := query_str || ' AND planning_tp_type = 1 ';
      END IF;

      IF inv_mwb_globals.g_lot_from IS NOT NULL THEN
        query_str  := query_str || 'AND lot_number >= :lot_f ';
      END IF;

      IF inv_mwb_globals.g_lot_to IS NOT NULL THEN
        query_str  := query_str || 'AND lot_number <= :lot_t ';
      END IF;

    --KMOTUPAL ME # 3922793
      IF inv_mwb_globals.g_expired_lots = 'Y' THEN
        query_str := query_str || ' AND expiration_date  <= :expiration_date ';
      END IF;
    --KMOTUPAL ME # 3922793

      IF inv_mwb_globals.g_cost_group_id IS NOT NULL THEN
        query_str  := query_str || 'AND cost_group_id = :cg_id ';
      END IF;

      IF inv_mwb_globals.g_revision_controlled = 1 THEN
        query_str  := query_str || 'AND revision IS NULL ';
      ELSIF inv_mwb_globals.g_revision_controlled = 2 THEN
        query_str  := query_str || 'AND revision IS NOT NULL ';
      END IF;

      IF inv_mwb_globals.g_revision IS NOT NULL
      OR inv_mwb_globals.g_tree_rev IS NOT NULL THEN
        query_str  := query_str || 'AND revision = :rev ';
      END IF;

      IF inv_mwb_globals.g_tree_serial_number IS NOT NULL THEN
        query_str  := query_str || 'AND (serial_number = :serial_n) ';
      END IF;

      IF inv_mwb_globals.g_serial_from IS NOT NULL THEN
        query_str  := query_str || 'AND serial_number >= :serial_f ';
      END IF;

      IF inv_mwb_globals.g_serial_to IS NOT NULL THEN
        query_str  := query_str || 'AND serial_number <= :serial_t ';
      END IF;

      IF inv_mwb_globals.g_serial_controlled = 1 THEN
        query_str  :=
              query_str
           || ' AND exists '
           || ' ( select null from mtl_system_items msi WHERE '
           || ' mol.organization_id = msi.organization_id and '
           || ' mol.inventory_item_id =  msi.inventory_item_id and '
           || ' item_serial_control in (1,6) ) ';
      ELSIF inv_mwb_globals.g_serial_controlled = 2 THEN
        query_str  :=
              query_str
           || ' AND exists '
           || ' ( select null from mtl_system_items msi WHERE '
           || ' mol.organization_id = msi.organization_id and '
           || ' mol.inventory_item_id =  msi.inventory_item_id and '
           || ' item_serial_control in (2,5) ) ';
      END IF;

      IF inv_mwb_globals.g_tree_mat_loc_id = 2 THEN
        query_str  := query_str || ' AND lpn_context = 3 ';
      ELSIF inv_mwb_globals.g_prepacked = 1 THEN
        query_str  := query_str || 'AND lpn_context = 1 ';
      ELSIF inv_mwb_globals.g_prepacked <> 1
            AND inv_mwb_globals.g_prepacked <> 999
            AND inv_mwb_globals.g_prepacked IS NOT NULL THEN
        query_str  := query_str || 'AND lpn_context = :prepacked ';
      END IF;

      IF inv_mwb_globals.g_tree_parent_lpn_id IS NOT NULL THEN
        query_str  := query_str || 'AND MOL.lpn_id = :plpn_id ';
      ELSIF inv_mwb_globals.g_lpn_from IS NOT NULL
            OR inv_mwb_globals.g_lpn_to IS NOT NULL THEN
        query_str  := query_str || 'AND MOL.outermost_lpn_id = X.outermost_lpn_id ';
      END IF;

      IF inv_mwb_globals.g_inventory_item_id IS NOT NULL
      OR inv_mwb_globals.g_tree_item_id IS NOT NULL THEN
        query_str  := query_str || 'AND inventory_item_id = :item_id ';
      END IF;

      -- ER(9158529 client)
      IF inv_mwb_globals.g_client_code IS NOT NULL THEN
         query_str := query_str || ' AND inventory_item_id in (select DISTINCT inventory_item_id from mtl_system_items_b where wms_deploy.get_client_code(inventory_item_id) = :client_code) ';
      END IF;
      -- ER(9158529 client)

      -- ER(9158529)
      IF inv_mwb_globals.g_category_set_id IS NOT NULL THEN
        query_str := query_str || ' AND inventory_item_id in '
                                    || ' (select DISTINCT inventory_item_id from mtl_item_categories '
                                    || ' where organization_id = :organization_id '
                                    || ' and category_set_id = :category_set_id '
                                    || ' and category_id = nvl(:category_id, category_id)) ' ;
      END IF;
      -- ER(9158529)

      IF inv_mwb_globals.g_locator_controlled = 1 THEN
        query_str  := query_str || 'AND locator_id IS NULL ';
      ELSIF inv_mwb_globals.g_locator_controlled = 2 THEN
        query_str  := query_str || 'AND locator_id IS NOT NULL ';
      END IF;

      IF inv_mwb_globals.g_tree_loc_id IS NOT NULL
      OR inv_mwb_globals.g_locator_id IS NOT NULL THEN
        query_str  := query_str || 'AND locator_id = :loc_id ';
      END IF;

      --ER(3338592) Changes
      IF inv_mwb_globals.g_item_description IS NOT NULL THEN
         query_str := query_str || ' AND item_description LIKE :item_description ';
      END IF;
      --ER(3338592) Changes

      IF inv_mwb_globals.g_tree_subinventory_code IS NOT NULL
      OR inv_mwb_globals.g_subinventory_code IS NOT NULL THEN
        query_str  := query_str || 'AND subinventory_code = :sub ';
      END IF;

      IF inv_mwb_globals.g_organization_id IS NOT NULL
      OR inv_mwb_globals.g_tree_organization_id IS NOT NULL THEN
        query_str  := query_str || 'AND organization_id = :org_id ';
      END IF;

      query_str  := query_str || 'GROUP BY lot_number  ';
      query_str  := query_str || 'ORDER BY lot_number ';
    END IF;

    -- Enable this during debugging
     inv_trx_util_pub.trace(query_str, 'Add_lot :- Material Workbench', 9);
    --trace1(query_str, 'add_lots', 9);
    inv_mwb_globals.print_msg( g_pkg_name, l_procedure_name, query_str );
    inv_mwb_globals.g_last_query := query_str;
    query_hdl       := DBMS_SQL.open_cursor;
    DBMS_SQL.parse(query_hdl, query_str, DBMS_SQL.native);


   IF inv_mwb_globals.g_tree_organization_id IS NOT NULL THEN
    inv_mwb_globals.print_msg( g_pkg_name, l_procedure_name, 'tree_org' ); --rs
      DBMS_SQL.bind_variable(query_hdl, 'org_id', inv_mwb_globals.g_tree_organization_id);
   ELSIF inv_mwb_globals.g_organization_id IS NOT NULL THEN
      DBMS_SQL.bind_variable(query_hdl, 'org_id', inv_mwb_globals.g_organization_id);
   END IF;

    IF inv_mwb_globals.g_tree_subinventory_code IS NOT NULL THEN
    inv_mwb_globals.print_msg( g_pkg_name, l_procedure_name, 'tree_sub' ); --rs
      DBMS_SQL.bind_variable(query_hdl, 'sub', inv_mwb_globals.g_tree_subinventory_code);
    ELSIF inv_mwb_globals.g_subinventory_code IS NOT NULL THEN
      DBMS_SQL.bind_variable(query_hdl, 'sub', inv_mwb_globals.g_subinventory_code);
    END IF;

    IF inv_mwb_globals.g_tree_loc_id IS NOT NULL THEN
    inv_mwb_globals.print_msg( g_pkg_name, l_procedure_name, 'tree_loc' ); --rs
      DBMS_SQL.bind_variable(query_hdl, 'loc_id', inv_mwb_globals.g_tree_loc_id);
    ELSIF inv_mwb_globals.g_locator_id IS NOT NULL THEN
      DBMS_SQL.bind_variable(query_hdl, 'loc_id', inv_mwb_globals.g_locator_id);
    END IF;

   IF inv_mwb_globals.g_tree_item_id IS NOT NULL THEN
    inv_mwb_globals.print_msg( g_pkg_name, l_procedure_name, 'tree_item' ); --rs
      DBMS_SQL.bind_variable(query_hdl, 'item_id', inv_mwb_globals.g_tree_item_id);
    ELSIF inv_mwb_globals.g_inventory_item_id IS NOT NULL THEN
      DBMS_SQL.bind_variable(query_hdl, 'item_id', inv_mwb_globals.g_inventory_item_id);
    END IF;

    -- ER(9158529 client)
    IF inv_mwb_globals.g_client_code IS NOT NULL THEN
      DBMS_SQL.bind_variable(query_hdl, 'client_code', inv_mwb_globals.g_client_code);
    END IF;
    -- ER(9158529 client)

    -- ER(9158529)
    IF inv_mwb_globals.g_category_set_id IS NOT NULL THEN
      inv_mwb_globals.print_msg( g_pkg_name, l_procedure_name, 'tree_item_category' ); --rs
      DBMS_SQL.bind_variable(query_hdl, 'organization_id', NVL(inv_mwb_globals.g_organization_id, inv_mwb_globals.g_tree_organization_id));
      DBMS_SQL.bind_variable(query_hdl, 'category_set_id', inv_mwb_globals.g_category_set_id);
      DBMS_SQL.bind_variable(query_hdl, 'category_id', inv_mwb_globals.g_category_id);
    END IF;
    -- ER(9158529)

    IF inv_mwb_globals.g_tree_rev IS NOT NULL THEN
    inv_mwb_globals.print_msg( g_pkg_name, l_procedure_name, 'tree_rev' ); --rs
      DBMS_SQL.bind_variable(query_hdl, 'rev', inv_mwb_globals.g_tree_rev);
    ELSIF inv_mwb_globals.g_revision IS NOT NULL THEN
      DBMS_SQL.bind_variable(query_hdl, 'rev', inv_mwb_globals.g_revision);
    END IF;

    IF inv_mwb_globals.g_cost_group_id IS NOT NULL THEN
    inv_mwb_globals.print_msg( g_pkg_name, l_procedure_name, 'tree_cg' ); --rs
      DBMS_SQL.bind_variable(query_hdl, 'cg_id', inv_mwb_globals.g_cost_group_id);
    END IF;

    --BUG 7556505
    IF inv_mwb_globals.g_parent_lot IS NOT NULL THEN
    inv_mwb_globals.print_msg( g_pkg_name, l_procedure_name, ' parent_lot ');
      DBMS_SQL.bind_variable(query_hdl, 'parent_lot', inv_mwb_globals.g_parent_lot);
    END IF;
    --BUG 7556505

    IF inv_mwb_globals.g_lot_from IS NOT NULL THEN
    inv_mwb_globals.print_msg( g_pkg_name, l_procedure_name, 'lot_f' ); --rs
      DBMS_SQL.bind_variable(query_hdl, 'lot_f', inv_mwb_globals.g_lot_from);
    END IF;

    IF inv_mwb_globals.g_lot_to IS NOT NULL THEN
    inv_mwb_globals.print_msg( g_pkg_name, l_procedure_name, 'lot_to' ); --rs
      DBMS_SQL.bind_variable(query_hdl, 'lot_t', inv_mwb_globals.g_lot_to);
    END IF;

    /* Bug 8396954 added below code for supplier_lot_number */
    IF (inv_mwb_globals.g_supplier_lot_from IS NOT NULL AND
    inv_mwb_globals.g_supplier_lot_to IS NOT NULL AND
    inv_mwb_globals.g_supplier_lot_from = inv_mwb_globals.g_supplier_lot_to) THEN
         DBMS_SQL.bind_variable(query_hdl, 'supplier_lot_f', inv_mwb_globals.g_supplier_lot_from);
    END IF;

    IF (inv_mwb_globals.g_supplier_lot_from IS NOT NULL AND
        inv_mwb_globals.g_supplier_lot_from <> NVL(inv_mwb_globals.g_supplier_lot_to, -1) ) THEN
          DBMS_SQL.bind_variable(query_hdl, 'supplier_lot_f', inv_mwb_globals.g_supplier_lot_from);
    END IF;

    IF (inv_mwb_globals.g_supplier_lot_to IS NOT NULL AND
         inv_mwb_globals.g_supplier_lot_to <> NVL(inv_mwb_globals.g_supplier_lot_from, -1) ) THEN
          DBMS_SQL.bind_variable(query_hdl, 'supplier_lot_t', inv_mwb_globals.g_supplier_lot_to);
    END IF;
    /* End of Bug 8396954 */

    --KMOTUPAL ME # 3922793
    IF inv_mwb_globals.g_expired_lots = 'Y' THEN
      DBMS_SQL.bind_variable(query_hdl,'expiration_date', inv_mwb_globals.g_expiration_date);
    END IF;
    --KMOTUPAL ME # 3922793

 -- NSRIVAST, INVCONV, Start
    IF inv_mwb_globals.g_grade_from_code IS NOT NULL THEN
      DBMS_SQL.bind_variable(query_hdl, 'grade_f',inv_mwb_globals.g_grade_from_code );
    END IF;
    IF inv_mwb_globals.g_tree_grade_code IS NOT NULL THEN
      DBMS_SQL.bind_variable(query_hdl, 'grade_c', inv_mwb_globals.g_tree_grade_code);
    END IF;
 -- NSRIVAST, INVCONV, End

    IF inv_mwb_globals.g_serial_from IS NOT NULL THEN
      DBMS_SQL.bind_variable(query_hdl, 'serial_f', inv_mwb_globals.g_serial_from);
    END IF;

    IF inv_mwb_globals.g_serial_to IS NOT NULL THEN
      DBMS_SQL.bind_variable(query_hdl, 'serial_t', inv_mwb_globals.g_serial_to);
    END IF;

    IF inv_mwb_globals.g_tree_serial_number IS NOT NULL THEN
      DBMS_SQL.bind_variable(query_hdl, 'serial_n', inv_mwb_globals.g_tree_serial_number);
    END IF;

    IF inv_mwb_globals.g_tree_parent_lpn_id IS NULL THEN
       IF inv_mwb_globals.g_lpn_from = inv_mwb_globals.g_lpn_to THEN
           inv_mwb_globals.print_msg( g_pkg_name, l_procedure_name, 'lpn1_f' ); --rs
          dbms_sql.bind_variable(query_hdl, 'lpn_f', inv_mwb_globals.g_lpn_from);
       ELSE
          IF inv_mwb_globals.g_lpn_from IS NOT NULL THEN
    inv_mwb_globals.print_msg( g_pkg_name, l_procedure_name, 'lpn_f' ); --rs
             dbms_sql.bind_variable(query_hdl, 'lpn_f', inv_mwb_globals.g_lpn_from);
    	  END IF;
 	  IF inv_mwb_globals.g_lpn_to IS NOT NULL THEN
    inv_mwb_globals.print_msg( g_pkg_name, l_procedure_name, 'lpn_t' ); --rs
             DBMS_SQL.bind_variable(query_hdl, 'lpn_t', inv_mwb_globals.g_lpn_to);
   	  END IF;
       END IF;
    END IF;

    IF inv_mwb_globals.g_tree_parent_lpn_id IS NOT NULL THEN
    inv_mwb_globals.print_msg( g_pkg_name, l_procedure_name, 'tree_lpn' ); --rs
      DBMS_SQL.bind_variable(query_hdl, 'plpn_id', inv_mwb_globals.g_tree_parent_lpn_id);
    inv_mwb_globals.print_msg( g_pkg_name, l_procedure_name, 'tree_lpn after' ); --rs
    END IF;

      IF inv_mwb_globals.g_only_subinventory_status = 1 THEN
         DBMS_SQL.bind_variable(query_hdl, 'st_id', inv_mwb_globals.g_tree_st_id);
      ELSE
         IF inv_mwb_globals.g_status_id IS NOT NULL THEN
            DBMS_SQL.bind_variable(query_hdl, 'st_id', inv_mwb_globals.g_status_id);
         END IF;
      END IF;

    IF inv_mwb_globals.g_prepacked <> 1
       AND inv_mwb_globals.g_prepacked <> 999
       AND inv_mwb_globals.g_prepacked IS NOT NULL THEN
    inv_mwb_globals.print_msg( g_pkg_name, l_procedure_name, 'prapacked' ); --rs
      DBMS_SQL.bind_variable(query_hdl, 'prepacked', inv_mwb_globals.g_prepacked);
    END IF;

    IF inv_mwb_globals.g_mln_context_code IS NOT NULL THEN
      DBMS_SQL.bind_variable(query_hdl, 'mln_context', inv_mwb_globals.g_mln_context_code);
    END IF;

    IF inv_mwb_globals.g_project_id IS NOT NULL THEN
      DBMS_SQL.bind_variable(query_hdl, 'pr_id', inv_mwb_globals.g_project_id);
    END IF;

    IF inv_mwb_globals.g_task_id IS NOT NULL THEN
      DBMS_SQL.bind_variable(query_hdl, 'ta_id', inv_mwb_globals.g_task_id);
    END IF;

    --bug 6633612
    IF inv_mwb_globals.g_shipment_header_id IS NOT NULL THEN
      DBMS_SQL.bind_variable(query_hdl, 'shipment_header_id',inv_mwb_globals.g_shipment_header_id );
    END IF;
    --bug 6633612

    IF inv_mwb_globals.g_unit_number IS NOT NULL THEN
      DBMS_SQL.bind_variable(query_hdl, 'un_id', inv_mwb_globals.g_unit_number);
    END IF;

    /*IF inv_mwb_globals.g_site_id IS NOT NULL THEN
       dbms_sql.bind_variable(query_hdl,'site_id', inv_mwb_globals.g_site_id);
     ELSIF inv_mwb_globals.g_vendor_id is NOT NULL THEN
       dbms_sql.bind_variable(query_hdl,'vendor_id', inv_mwb_globals.g_vendor_id);
    END IF;*/
    IF (inv_mwb_globals.g_owning_qry_mode = 4)
       OR(inv_mwb_globals.g_owning_qry_mode = 3) THEN
      DBMS_SQL.bind_variable(query_hdl, 'own_org', inv_mwb_globals.g_owning_org);
    END IF;

    IF (inv_mwb_globals.g_planning_query_mode = 4)
       OR(inv_mwb_globals.g_planning_query_mode = 3) THEN
      DBMS_SQL.bind_variable(query_hdl, 'plan_org', inv_mwb_globals.g_planning_org);
    END IF;

    --ER(3338592) Changes
    IF inv_mwb_globals.g_item_description IS NOT NULL THEN
    inv_mwb_globals.print_msg( g_pkg_name, l_procedure_name, 'item_desc' ); --rs
       dbms_sql.bind_variable(query_hdl, 'item_description', inv_mwb_globals.g_item_description);
    END IF;


    DBMS_SQL.define_column(query_hdl, 1, lot, 80);
    rows_processed  := DBMS_SQL.EXECUTE(query_hdl);

    LOOP
      -- fetch a row
      IF DBMS_SQL.fetch_rows(query_hdl) > 0 THEN
        -- fetch columns from the row
        DBMS_SQL.column_value(query_hdl, 1, lot);

        IF j >= inv_mwb_globals.g_tree_node_low_value THEN
          x_node_tbl(i).state  := inv_mwb_globals.g_tree_node_state;
          x_node_tbl(i).DEPTH  := 1;
          x_node_tbl(i).label  := lot;
          x_node_tbl(i).icon   := 'inv_lott';
          x_node_tbl(i).VALUE  := lot;
          x_node_tbl(i).TYPE   := 'LOT';
          i                    := i + 1;
        END IF;

        EXIT WHEN j >= inv_mwb_globals.g_tree_node_high_value;
        j  := j + 1;
      ELSE
        EXIT;
      END IF;
    END LOOP;

    DBMS_SQL.close_cursor(query_hdl); -- close cursor
    x_node_value    := j;
    x_tbl_index     := i;
  EXCEPTION
    WHEN NO_DATA_FOUND THEN
      NULL;
    WHEN OTHERS THEN
      RAISE;
  END add_lots;

  PROCEDURE add_serials(
    x_node_value           IN OUT NOCOPY  NUMBER
  , x_node_tbl             IN OUT NOCOPY  fnd_apptree.node_tbl_type
  , x_tbl_index            IN OUT NOCOPY  NUMBER
  ) IS
    query_str      VARCHAR2(10000);
    query_hdl      NUMBER;
    rows_processed NUMBER;
    serial         mtl_serial_numbers.serial_number%TYPE;
    serial_control NUMBER;
    i              NUMBER                                  := x_tbl_index;
    j              NUMBER                                  := x_node_value;
    table_required VARCHAR2(300);
    is_grade_t     BOOLEAN DEFAULT FALSE ; -- NSRIVAST, INVCONV
    select_from_str VARCHAR2(2000);
    where_str VARCHAR2(2000);
    lpn_from_id wms_license_plate_numbers.lpn_id%type;
    lpn_to_id   wms_license_plate_numbers.lpn_id%type;
    l_default_status_id NUMBER; -- Onhand Material Status Support

        l_procedure_name CONSTANT VARCHAR2(30) := 'ADD_SERIAL';
   BEGIN

      inv_mwb_globals.print_msg( g_pkg_name, l_procedure_name, 'Entered' );

      IF inv_mwb_globals.g_view_by = 'STATUS' THEN
         inv_mwb_globals.g_only_subinventory_status := 1;
      ELSE
         inv_mwb_globals.g_only_subinventory_status := NULL;
      END IF;

      IF inv_mwb_globals.g_tree_parent_lpn_id IS NULL THEN
        inv_mwb_globals.g_containerized := 1;
      ELSE
        inv_mwb_globals.g_containerized := 2;
      END IF;

      IF inv_mwb_globals.g_view_by IN ('SERIAL','LOT','ITEM') THEN
         inv_mwb_globals.g_containerized := NULL;
      END IF;

      -- Onhand Material Status Support
      if (inv_mwb_globals.g_organization_id is not null) then
         if (inv_cache.set_org_rec(inv_mwb_globals.g_organization_id)) then
           l_default_status_id :=  inv_cache.org_rec.default_status_id;
         end if;
      elsif (inv_mwb_globals.g_tree_organization_id is not null) then
         if (inv_cache.set_org_rec(inv_mwb_globals.g_tree_organization_id)) then
           l_default_status_id :=  inv_cache.org_rec.default_status_id;
         end if;
      end if;


  IF inv_mwb_globals.g_tree_doc_type_id IS NOT NULL
  AND inv_mwb_globals.g_tree_doc_type_id <> 1 THEN -- If add_item called from node_expanded of inbound lpn number.


    -- Exit out of the procedure if the item is not serial controlled
    IF (inv_mwb_globals.g_organization_id IS NOT NULL
	OR inv_mwb_globals.g_tree_organization_id IS NOT NULL)
       AND (inv_mwb_globals.g_tree_item_id IS NOT NULL
	    OR inv_mwb_globals.g_inventory_item_id IS NOT NULL)	THEN
      SELECT serial_number_control_code
        INTO serial_control
        FROM mtl_system_items
       WHERE organization_id = NVL(inv_mwb_globals.g_tree_organization_id,
				   inv_mwb_globals.g_organization_id)
         AND inventory_item_id = NVL(inv_mwb_globals.g_inventory_item_id,
				     inv_mwb_globals.g_tree_item_id);

      inv_mwb_globals.print_msg( g_pkg_name, l_procedure_name, 'Coming here after query : '|| serial_control );
      -- for bug 8420760
      IF (serial_control <> 2 and serial_control <>5)  THEN
        RETURN;
      END IF;
      -- end of  bug 8420760
    END IF;


      select_from_str :=
         ' SELECT DISTINCT rss.serial_num
             FROM rcv_shipment_lines rsl
                , mtl_supply ms
                , rcv_serials_supply rss';

      where_str :=
         ' WHERE 1 = 1
             AND ms.supply_type_code <> ''RECEIVING''
             AND ms.shipment_header_id IS NOT NULL
             AND ms.shipment_line_id = rsl.shipment_line_id
             AND ms.to_organization_id = :to_org_id
             AND rsl.shipment_header_id = :shipment_header_id
             AND rsl.item_id = :item_id
             AND rss.shipment_line_id = ms.shipment_line_id ';

      -- ER(9158529 client)
      IF inv_mwb_globals.g_client_code IS NOT NULL THEN
         where_str := where_str || ' AND rsl.item_id in (select DISTINCT inventory_item_id from mtl_system_items_b where wms_deploy.get_client_code(inventory_item_id) = :client_code) ';
      END IF;
      -- ER(9158529 client)

      -- ER(9158529)
      IF inv_mwb_globals.g_category_set_id IS NOT NULL THEN
         where_str := where_str || ' AND rsl.item_id in '
                                        || ' (select DISTINCT inventory_item_id from mtl_item_categories '
                                        || ' where organization_id = :organization_id '
                                        || ' and category_set_id = :category_set_id '
                                        || ' and category_id = nvl(:category_id, category_id)) ' ;
      END IF;
      -- ER(9158529)

      IF inv_mwb_globals.g_tree_parent_lpn_id IS NOT NULL THEN
         where_str := where_str || ' AND rsl.asn_lpn_id  = :lpn_from_id ';
      END IF;

      IF inv_mwb_globals.g_lot_from IS NOT NULL
      AND inv_mwb_globals.g_lot_to IS NOT NULL
      AND inv_mwb_globals.g_lot_to = inv_mwb_globals.g_lot_from THEN
         where_str := where_str || ' AND rss.lot_num  = :lot_from ';
      END IF;

      IF inv_mwb_globals.g_lot_from IS NOT NULL
      AND inv_mwb_globals.g_lot_to <> inv_mwb_globals.g_lot_from THEN
         where_str := where_str || ' AND rss.lot_num  >= :lot_from ';
      END IF;

      IF inv_mwb_globals.g_lot_to IS NOT NULL
      AND inv_mwb_globals.g_lot_to <> inv_mwb_globals.g_lot_from THEN
         where_str := where_str || ' AND rss.lot_num  >= :lot_to ';
      END IF;

/* Bug 8396954, Adding below code for checking supplier_lot_number condition */
      IF inv_mwb_globals.g_supplier_lot_from IS NOT NULL
      OR inv_mwb_globals.g_supplier_lot_to IS NOT NULL THEN
         select_from_str := select_from_str || ', mtl_lot_numbers mln1 ';

         where_str := where_str || ' AND rss.lot_num = mln1.lot_number';

                IF (inv_mwb_globals.g_supplier_lot_from IS NOT NULL AND
                    inv_mwb_globals.g_supplier_lot_to IS NOT NULL AND
                    inv_mwb_globals.g_supplier_lot_from = inv_mwb_globals.g_supplier_lot_to) THEN
                    where_str := where_str || ' AND mln1.supplier_lot_number = :supplier_lot_from ';
                END IF;

                IF (inv_mwb_globals.g_supplier_lot_from IS NOT NULL AND
	            inv_mwb_globals.g_supplier_lot_from <> NVL(inv_mwb_globals.g_supplier_lot_to, -1) ) THEN
                    where_str := where_str || ' AND mln1.supplier_lot_number >= :supplier_lot_from ';
                END IF;

                IF (inv_mwb_globals.g_supplier_lot_to IS NOT NULL AND
	            inv_mwb_globals.g_supplier_lot_to <> NVL(inv_mwb_globals.g_supplier_lot_from, -1) ) THEN
                    where_str := where_str || ' AND mln1.supplier_lot_number <= :supplier_lot_to ';
                END IF;
      END IF;
/* End of Bug 8396954 */

      IF inv_mwb_globals.g_tree_lot_number IS NOT NULL THEN
         where_str := where_str || ' AND rss.lot_num  = :tree_lot_number ';
      END IF;

      IF inv_mwb_globals.g_serial_from IS NOT NULL
      AND inv_mwb_globals.g_serial_to IS NOT NULL
      AND inv_mwb_globals.g_serial_to = inv_mwb_globals.g_serial_from THEN
         where_str := where_str || ' AND rss.serial_num  = :serial_from ';
      END IF;

      IF inv_mwb_globals.g_serial_from IS NOT NULL
      AND inv_mwb_globals.g_serial_to <> inv_mwb_globals.g_serial_from THEN
         where_str := where_str || ' AND rss.serial_num  >= :serial_from ';
      END IF;

      IF inv_mwb_globals.g_serial_to IS NOT NULL
      AND inv_mwb_globals.g_serial_to <> inv_mwb_globals.g_serial_from THEN
         where_str := where_str || ' AND rss.serial_num  <= :serial_to ';
      END IF;

      IF inv_mwb_globals.g_tree_rev IS NOT NULL THEN
         where_str := where_str || ' AND rsl.item_revision  = :item_revision ';
      END IF;

      where_str := where_str || ' ORDER BY rss.serial_num ';

      query_str := select_from_str || where_str;

      inv_mwb_globals.print_msg( g_pkg_name, l_procedure_name, query_str );
      inv_mwb_globals.g_last_query := query_str;

      query_hdl  := DBMS_SQL.open_cursor;
      DBMS_SQL.parse(query_hdl, query_str, DBMS_SQL.native);

      DBMS_SQL.bind_variable(query_hdl, 'to_org_id', NVL(inv_mwb_globals.g_organization_id
                                                       , inv_mwb_globals.g_tree_organization_id));
      DBMS_SQL.bind_variable(query_hdl, 'shipment_header_id', inv_mwb_globals.g_tree_doc_header_id);
      DBMS_SQL.bind_variable(query_hdl, 'item_id', inv_mwb_globals.g_tree_item_id);

      -- ER(9158529 client)
      IF inv_mwb_globals.g_client_code IS NOT NULL THEN
         DBMS_SQL.bind_variable(query_hdl, 'client_code', inv_mwb_globals.g_client_code);
      END IF;
      -- ER(9158529 client)

      -- ER(9158529)
      IF inv_mwb_globals.g_category_set_id IS NOT NULL THEN
         DBMS_SQL.bind_variable(query_hdl, 'organization_id', NVL(inv_mwb_globals.g_organization_id, inv_mwb_globals.g_tree_organization_id));
         DBMS_SQL.bind_variable(query_hdl, 'category_set_id', inv_mwb_globals.g_category_set_id);
         DBMS_SQL.bind_variable(query_hdl, 'category_id', inv_mwb_globals.g_category_id);
      END IF;
      -- ER(9158529)

      IF inv_mwb_globals.g_tree_parent_lpn_id IS NOT NULL THEN
         DBMS_SQL.bind_variable(query_hdl, 'lpn_from_id', inv_mwb_globals.g_tree_parent_lpn_id);
      END IF;

      IF inv_mwb_globals.g_lot_from IS NOT NULL
      AND inv_mwb_globals.g_lot_to IS NOT NULL
      AND inv_mwb_globals.g_lot_to = inv_mwb_globals.g_lot_from THEN
         DBMS_SQL.bind_variable(query_hdl, 'lot_from', inv_mwb_globals.g_lot_from);
      END IF;

      IF inv_mwb_globals.g_lot_from IS NOT NULL
      AND inv_mwb_globals.g_lot_to <> inv_mwb_globals.g_lot_from THEN
         DBMS_SQL.bind_variable(query_hdl, 'lot_from', inv_mwb_globals.g_lot_from);
      END IF;

      IF inv_mwb_globals.g_lot_to IS NOT NULL
      AND inv_mwb_globals.g_lot_to <> inv_mwb_globals.g_lot_from THEN
         DBMS_SQL.bind_variable(query_hdl, 'lot_to', inv_mwb_globals.g_lot_to);
      END IF;

        /* Bug 8396954 added below code for supplier_lot_number */
      IF inv_mwb_globals.g_supplier_lot_from IS NOT NULL
      OR inv_mwb_globals.g_supplier_lot_to IS NOT NULL THEN
        IF (inv_mwb_globals.g_supplier_lot_from IS NOT NULL AND
        inv_mwb_globals.g_supplier_lot_to IS NOT NULL AND
        inv_mwb_globals.g_supplier_lot_from = inv_mwb_globals.g_supplier_lot_to) THEN
             DBMS_SQL.bind_variable(query_hdl, 'supplier_lot_from', inv_mwb_globals.g_supplier_lot_from);
        END IF;

        IF (inv_mwb_globals.g_supplier_lot_from IS NOT NULL AND
            inv_mwb_globals.g_supplier_lot_from <> NVL(inv_mwb_globals.g_supplier_lot_to, -1) ) THEN
                 DBMS_SQL.bind_variable(query_hdl, 'supplier_lot_from', inv_mwb_globals.g_supplier_lot_from);
        END IF;

        IF (inv_mwb_globals.g_supplier_lot_to IS NOT NULL AND
             inv_mwb_globals.g_supplier_lot_to <> NVL(inv_mwb_globals.g_supplier_lot_from, -1) ) THEN
                 DBMS_SQL.bind_variable(query_hdl, 'supplier_lot_to', inv_mwb_globals.g_supplier_lot_to);
        END IF;
      END IF;
    /* End of Bug 8396954 */

      IF inv_mwb_globals.g_tree_lot_number IS NOT NULL THEN
         DBMS_SQL.bind_variable(query_hdl, 'tree_lot_number', inv_mwb_globals.g_tree_lot_number);
      END IF;

      IF inv_mwb_globals.g_serial_from IS NOT NULL
      AND inv_mwb_globals.g_serial_to IS NOT NULL
      AND inv_mwb_globals.g_serial_to = inv_mwb_globals.g_serial_from THEN
         DBMS_SQL.bind_variable(query_hdl, 'serial_from', inv_mwb_globals.g_serial_from);
      END IF;

      IF inv_mwb_globals.g_serial_from IS NOT NULL
      AND inv_mwb_globals.g_serial_to <> inv_mwb_globals.g_serial_from THEN
         DBMS_SQL.bind_variable(query_hdl, 'serial_from', inv_mwb_globals.g_serial_from);
      END IF;

      IF inv_mwb_globals.g_serial_to IS NOT NULL
      AND inv_mwb_globals.g_serial_to <> inv_mwb_globals.g_serial_from THEN
         -- for bug 8420783
         -- for bug 8414727
         DBMS_SQL.bind_variable(query_hdl, 'serial_to', inv_mwb_globals.g_serial_to);
         -- end of bug 8414727
         -- end of bug 8420783
      END IF;

      IF inv_mwb_globals.g_tree_rev IS NOT NULL THEN
         DBMS_SQL.bind_variable(query_hdl, 'item_revision', inv_mwb_globals.g_tree_rev);
      END IF;

    BEGIN
    DBMS_SQL.define_column(query_hdl, 1, serial, 30);
    rows_processed  := DBMS_SQL.EXECUTE(query_hdl);
    EXCEPTION
    WHEN NO_DATA_FOUND THEN
      NULL;
      RETURN;
    WHEN OTHERS THEN
      RAISE;
    END;


    LOOP
      -- fetch a row
      IF DBMS_SQL.fetch_rows(query_hdl) > 0 THEN
        -- fetch columns from the row
        DBMS_SQL.column_value(query_hdl, 1, serial);

        IF j >= inv_mwb_globals.g_tree_node_low_value THEN
          x_node_tbl(i).state  := inv_mwb_globals.g_tree_node_state;
          x_node_tbl(i).DEPTH  := 1;
          x_node_tbl(i).label  := serial;
          x_node_tbl(i).icon   := 'inv_seri';
          x_node_tbl(i).VALUE  := serial;
          x_node_tbl(i).TYPE   := 'SERIAL';
          i                    := i + 1;
        END IF;

        EXIT WHEN j >= inv_mwb_globals.g_tree_node_high_value;
        j  := j + 1;
      ELSE
        EXIT;
      END IF;
    END LOOP;


    DBMS_SQL.close_cursor(query_hdl); -- close cursor
    x_node_value    := j;
    x_tbl_index     := i;

    RETURN;
  END IF;

-- NSRIVAST, INVCONV, Start
   IF  (inv_mwb_globals.g_grade_from_code IS NOT NULL OR  inv_mwb_globals.g_tree_grade_code IS NOT NULL OR inv_mwb_globals.g_grade_controlled <> 0) THEN
         is_grade_t     := TRUE ;
   END IF ;
-- NSRIVAST, INVCONV, End

    -- Exit out of the procedure if the item is not serial controlled
    IF (inv_mwb_globals.g_organization_id IS NOT NULL
	OR inv_mwb_globals.g_tree_organization_id IS NOT NULL)
       AND (inv_mwb_globals.g_tree_item_id IS NOT NULL
	    OR inv_mwb_globals.g_inventory_item_id IS NOT NULL)	THEN
      SELECT serial_number_control_code
        INTO serial_control
        FROM mtl_system_items
       WHERE organization_id = NVL(inv_mwb_globals.g_tree_organization_id,
				   inv_mwb_globals.g_organization_id)
         AND inventory_item_id = NVL(inv_mwb_globals.g_inventory_item_id,
				     inv_mwb_globals.g_tree_item_id);

      IF serial_control IN(1, 6) THEN
        RETURN;
      END IF;
    END IF;

    IF (inv_mwb_globals.g_lpn_from IS NULL
        AND inv_mwb_globals.g_lpn_to IS NULL
        AND inv_mwb_globals.g_tree_parent_lpn_id IS NULL
        AND nvl(inv_mwb_globals.g_prepacked,1) = 1) THEN
      IF inv_mwb_globals.g_tree_mat_loc_id = 2 THEN
        table_required  := ' mtl_rcv_serial_oh_v v ';
      ELSIF(inv_mwb_globals.g_status_id IS NULL AND inv_mwb_globals.g_only_subinventory_status IS NULL) THEN
        table_required  := ' mtl_onhand_serial_mwb_v v ';
         IF is_grade_t = TRUE THEN                       -- NSRIVAST, INVCONV
            table_required  := ' mtl_onhand_serial_v v ';   -- NSRIVAST, INVCONV
         END IF;                                         -- NSRIVAST, INVCONV
      ELSE
        table_required  := ' mtl_onhand_serial_v v ';
      END IF;

       --bug 6633612
	IF (inv_mwb_globals.g_shipment_header_id is not null) THEN
		table_required  := table_required || ' , rcv_transactions rt, mtl_material_transactions mmt ';
	END IF;
	--bug 6633612

      IF (inv_mwb_globals.g_tree_lot_attr_query IS NULL AND inv_mwb_globals.g_parent_lot IS NULL
            AND inv_mwb_globals.g_supplier_lot_from IS NULL AND inv_mwb_globals.g_supplier_lot_to IS NULL)
         AND inv_mwb_globals.g_tree_serial_attr_query IS NULL THEN
        query_str  := query_str || 'SELECT v.serial_number serial_number from ' || table_required;
        query_str  := query_str || ' WHERE 1=1 ';
      ELSIF (inv_mwb_globals.g_tree_lot_attr_query IS NULL AND inv_mwb_globals.g_parent_lot IS NULL
            AND inv_mwb_globals.g_supplier_lot_from IS NULL AND inv_mwb_globals.g_supplier_lot_to IS NULL)
            AND inv_mwb_globals.g_tree_serial_attr_query IS NOT NULL THEN
        query_str  :=
              query_str
           || 'SELECT v.serial_number serial_number from'
           || '(SELECT serial_number serial_num FROM mtl_serial_numbers WHERE 1=1 '
           || inv_mwb_globals.g_tree_serial_attr_query
           || ') msn, '
           || table_required;
        query_str  := query_str || 'WHERE msn.serial_num = v.serial_number ';
      ELSIF (inv_mwb_globals.g_tree_lot_attr_query IS NOT NULL OR inv_mwb_globals.g_parent_lot IS NOT NULL
            OR inv_mwb_globals.g_supplier_lot_from IS NOT NULL OR inv_mwb_globals.g_supplier_lot_to IS NOT NULL)
            AND inv_mwb_globals.g_tree_serial_attr_query IS NULL THEN
        query_str  :=
              query_str
           || 'SELECT v.serial_number serial_number from'
           || '(SELECT lot_number lot_num, parent_lot_number, supplier_lot_number FROM mtl_lot_numbers WHERE 1=1 '
           || inv_mwb_globals.g_tree_lot_attr_query
           || ') mln, '
	   || table_required;
        query_str  := query_str || 'WHERE mln.lot_num = v.lot_number ';
 		--BUG 7556505
		   IF inv_mwb_globals.g_parent_lot IS NOT NULL THEN
		       query_str  := query_str || ' AND mln.parent_lot_number = :parent_lot ';
	           END IF;
		--BUG 7556505
                /* Bug 8396954 added below code for supplier_lot_number */
                IF (inv_mwb_globals.g_supplier_lot_from IS NOT NULL AND
                    inv_mwb_globals.g_supplier_lot_to IS NOT NULL AND
                    inv_mwb_globals.g_supplier_lot_from = inv_mwb_globals.g_supplier_lot_to) THEN
                    query_str  := query_str || ' AND mln.supplier_lot_number = :supplier_lot_f ';
                END IF;

                IF (inv_mwb_globals.g_supplier_lot_from IS NOT NULL AND
	            inv_mwb_globals.g_supplier_lot_from <> NVL(inv_mwb_globals.g_supplier_lot_to, -1) ) THEN
                    query_str  := query_str || ' AND mln.supplier_lot_number >= :supplier_lot_f ';
                END IF;

                IF (inv_mwb_globals.g_supplier_lot_to IS NOT NULL AND
	            inv_mwb_globals.g_supplier_lot_to <> NVL(inv_mwb_globals.g_supplier_lot_from, -1) ) THEN
                    query_str  := query_str || ' AND mln.supplier_lot_number <= :supplier_lot_t ';
                END IF;
                /* End of Bug 8396954 */
      ELSIF (inv_mwb_globals.g_tree_lot_attr_query IS NOT NULL OR inv_mwb_globals.g_parent_lot IS NOT NULL
            OR inv_mwb_globals.g_supplier_lot_from IS NOT NULL OR inv_mwb_globals.g_supplier_lot_to IS NOT NULL)
            AND inv_mwb_globals.g_tree_serial_attr_query IS NOT NULL THEN
        query_str  :=
              query_str
           || 'SELECT v.serial_number serial_number from'
           || '(SELECT lot_number lot_num, parent_lot_number, supplier_lot_number FROM mtl_lot_numbers WHERE 1=1 '
           || inv_mwb_globals.g_tree_lot_attr_query
           || ') mln, '
           || '(SELECT serial_number serial_num FROM mtl_serial_numbers WHERE 1=1 '
           || inv_mwb_globals.g_tree_serial_attr_query
           || ') msn, '
	   || table_required;
        query_str  := query_str || 'WHERE mln.lot_num = v.lot_number ';
 		--BUG 7556505
		   IF inv_mwb_globals.g_parent_lot IS NOT NULL THEN
		       query_str  := query_str || ' AND mln.parent_lot_number = :parent_lot ';
	           END IF;
		--BUG 7556505
                /* Bug 8396954 added below code for supplier_lot_number */
                IF (inv_mwb_globals.g_supplier_lot_from IS NOT NULL AND
                    inv_mwb_globals.g_supplier_lot_to IS NOT NULL AND
                    inv_mwb_globals.g_supplier_lot_from = inv_mwb_globals.g_supplier_lot_to) THEN
                    query_str  := query_str || ' AND mln.supplier_lot_number = :supplier_lot_f ';
                END IF;

                IF (inv_mwb_globals.g_supplier_lot_from IS NOT NULL AND
	            inv_mwb_globals.g_supplier_lot_from <> NVL(inv_mwb_globals.g_supplier_lot_to, -1) ) THEN
                    query_str  := query_str || ' AND mln.supplier_lot_number >= :supplier_lot_f ';
                END IF;

                IF (inv_mwb_globals.g_supplier_lot_to IS NOT NULL AND
	            inv_mwb_globals.g_supplier_lot_to <> NVL(inv_mwb_globals.g_supplier_lot_from, -1) ) THEN
                    query_str  := query_str || ' AND mln.supplier_lot_number <= :supplier_lot_t ';
                END IF;
                /* End of Bug 8396954 */
	query_str  := query_str || 'AND msn.serial_num = v.serial_number ';
      END IF;

      -- Onhand Material Status Support: If status is tracked at onhand level then check for status
      -- from serial table (MSN)
      if (l_default_status_id is not null) then -- Status at onhand level

         inv_mwb_globals.print_msg( g_pkg_name, l_procedure_name, 'Came here 1' );

         IF inv_mwb_globals.g_only_subinventory_status = 1 THEN
             query_str  := query_str || 'AND v.serial_status_id = :st_id ';
         ELSE
            IF inv_mwb_globals.g_status_id IS NOT NULL THEN
               query_str  := query_str || 'AND v.serial_status_id = :st_id ';
            END IF;
         END IF;
      else
         IF inv_mwb_globals.g_only_subinventory_status = 1 THEN
            query_str  := query_str || 'AND v.serial_status_id = :st_id ';
         ELSE
            IF inv_mwb_globals.g_status_id IS NOT NULL THEN -- Bug 606233
               query_str  := query_str || 'AND (v.subinventory_status_id = :st_id or v.locator_status_id = :st_id ';
               query_str  := query_str || 'OR v.lot_status_id = :st_id OR v.serial_status_id = :st_id) ';
            END IF;
         END IF;
      end if;

/*
      IF inv_mwb_globals.g_status_id IS NOT NULL THEN
        IF inv_mwb_globals.g_only_serial_status = 1 THEN
          query_str  := query_str || 'AND (subinventory_status_id = :st_id or locator_status_id = :st_id or ';
          query_str  := query_str || 'lot_status_id = :st_id or serial_status_id = :st_id) ';
        ELSE
          query_str  := query_str || 'AND serial_status_id = :st_id ';
        END IF;
      END IF;
*/

      IF inv_mwb_globals.g_lot_controlled = 1 THEN
        query_str  := query_str || 'AND v.lot_number IS NULL ';
      ELSIF inv_mwb_globals.g_lot_controlled = 2 THEN
        query_str  := query_str || 'AND v.lot_number IS NOT NULL ';
      END IF;

	--bug 6633612
	IF (inv_mwb_globals.g_shipment_header_id is not null) THEN
		query_str := query_str || ' AND rt.shipment_header_id = :shipment_header_id '
					 || ' AND rt.transaction_id = mmt.rcv_transaction_id '
					 || ' AND rt.organization_id = mmt.organization_id '
					 || ' AND rt.transaction_type = ''DELIVER'''
					 || ' AND rt.destination_type_code = ''INVENTORY'''
					 || ' AND mmt.transaction_id = v.last_transaction_id '
					 || ' AND mmt.organization_id = v.organization_id ';

	END IF;
	--bug 6633612

      IF inv_mwb_globals.g_tree_lot_number IS NOT NULL THEN
        query_str  := query_str || 'AND v.lot_number = :lot_n ';
      END IF;

      IF inv_mwb_globals.g_lot_from IS NOT NULL THEN
        query_str  := query_str || 'AND v.lot_number >= :lot_f ';
      END IF;

      IF inv_mwb_globals.g_lot_to IS NOT NULL THEN
        query_str  := query_str || 'AND v.lot_number <= :lot_t ';
      END IF;

      IF inv_mwb_globals.g_cost_group_id IS NOT NULL THEN
        query_str  := query_str || 'AND v.cost_group_id = :cg_id ';
      END IF;

  -- NSRIVAST, INVCONV, Start
      IF inv_mwb_globals.g_grade_from_code IS NOT NULL THEN
         query_str := query_str || ' AND v.grade_code = :grade_f ' ;
      END IF ;
      IF inv_mwb_globals.g_tree_grade_code  IS NOT NULL THEN
         query_str := query_str || ' AND v.grade_code = :grade_c ' ;
      END IF ;
   -- NSRIVAST, INVCONV, End

      IF inv_mwb_globals.g_revision_controlled = 1 THEN
        query_str  := query_str || 'AND v.revision IS NULL ';
      ELSIF inv_mwb_globals.g_revision_controlled = 2 THEN
        query_str  := query_str || 'AND v.revision IS NOT NULL ';
      END IF;

      IF inv_mwb_globals.g_revision IS NOT NULL
      OR inv_mwb_globals.g_tree_rev IS NOT NULL THEN
        query_str  := query_str || 'AND v.revision = :rev ';
      END IF;

      IF inv_mwb_globals.g_containerized = 1 THEN
        query_str  := query_str || ' AND (v.containerized_flag is null or v.containerized_flag <> 1) ';
      ELSIF inv_mwb_globals.g_containerized = 2 THEN
        query_str  := query_str || 'AND v.containerized_flag = 1 ';
      END IF;

      IF inv_mwb_globals.g_serial_from IS NOT NULL THEN
        query_str  := query_str || 'AND v.serial_number >= :serial_f ';
      END IF;

      IF inv_mwb_globals.g_serial_to IS NOT NULL THEN
        query_str  := query_str || 'AND v.serial_number <= :serial_t ';
      END IF;

      IF inv_mwb_globals.g_inventory_item_id IS NOT NULL
      OR inv_mwb_globals.g_tree_item_id IS NOT NULL THEN
        query_str  := query_str || 'AND v.inventory_item_id = :item_id ';
      END IF;

      -- ER(9158529 client)
      IF inv_mwb_globals.g_client_code IS NOT NULL THEN
         query_str := query_str || ' AND v.inventory_item_id in (select DISTINCT inventory_item_id from mtl_system_items_b where wms_deploy.get_client_code(inventory_item_id) = :client_code) ';
      END IF;
      -- ER(9158529 client)

      -- ER(9158529)
      IF inv_mwb_globals.g_category_set_id IS NOT NULL THEN
         query_str := query_str || ' AND v.inventory_item_id in '
                                        || ' (select DISTINCT inventory_item_id from mtl_item_categories '
                                        || ' where organization_id = :organization_id '
                                        || ' and category_set_id = :category_set_id '
                                        || ' and category_id = nvl(:category_id, category_id)) ' ;
      END IF;
      -- ER(9158529)

      IF inv_mwb_globals.g_locator_controlled = 1 THEN
        query_str  := query_str || 'AND v.locator_id IS NULL ';
       /* part of bug fix 2424304 */
      --  ELSE
      ELSIF inv_mwb_globals.g_locator_controlled = 2 THEN
        /* end of bug fix 2424304 */
        query_str  := query_str || 'AND v.locator_id IS NOT NULL ';
      END IF;

      IF inv_mwb_globals.g_tree_loc_id IS NOT NULL
      OR inv_mwb_globals.g_locator_id IS NOT NULL THEN
        query_str  := query_str || 'AND v.locator_id = :loc_id ';
      END IF;

      --ER(3338592) Changes
      IF inv_mwb_globals.g_item_description IS NOT NULL THEN
         query_str := query_str || ' AND v.item_description LIKE :item_description ';
      END IF;
      --ER(3338592) Changes

      IF inv_mwb_globals.g_tree_subinventory_code IS NOT NULL
      OR inv_mwb_globals.g_subinventory_code IS NOT NULL THEN
        query_str  := query_str || 'AND v.subinventory_code = :sub ';
      END IF;

      IF inv_mwb_globals.g_organization_id IS NOT NULL
      OR inv_mwb_globals.g_tree_organization_id IS NOT NULL THEN
        query_str  := query_str || 'AND v.organization_id = :org_id ';
      END IF;

      IF inv_mwb_globals.g_project_id IS NOT NULL THEN
        query_str  := query_str || ' AND v.project_id = :pr_id ';
      END IF;

      IF inv_mwb_globals.g_task_id IS NOT NULL THEN
        query_str  := query_str || ' AND v.task_id = :ta_id ';
      END IF;

      IF inv_mwb_globals.g_unit_number IS NOT NULL THEN
        query_str  := query_str || ' AND v.unit_number=:un_id ';
      END IF;

      /*IF inv_mwb_globals.g_site_id IS NOT NULL THEN
         query_str := query_str || ' AND PLANNING_TP_TYPE = 1 ';
         query_str := query_str || ' AND planning_organization_id = :site_id ' ;
       ELSIF inv_mwb_globals.g_vendor_id is NOT NULL THEN
         query_str := query_str || ' AND  PLANNING_TP_TYPE = 1 ';
         query_str := query_str || ' AND  planning_organization_id in ';
         query_str := query_str || ' (select vendor_site_id from po_vendor_sites_all ';
         query_str := query_str || '  where vendor_id = :vendor_id )';
      END IF;*/

/* RS     IF (inv_mwb_globals.g_owning_qry_mode = 4) THEN
        query_str  := query_str || ' AND owning_organization_id = :own_org ';
        query_str  := query_str || ' AND owning_tp_type = 2 ';
      ELSIF(inv_mwb_globals.g_owning_qry_mode = 3) THEN
        query_str  := query_str || ' AND owning_organization_id = :own_org ';
        query_str  := query_str || ' AND owning_tp_type = 1 ';
      ELSIF(inv_mwb_globals.g_owning_qry_mode = 2) THEN
        query_str  := query_str || ' AND owning_tp_type = 1 ';
      END IF;

      IF (inv_mwb_globals.g_planning_query_mode = 4) THEN
        query_str  := query_str || ' AND planning_organization_id = :plan_org ';
        query_str  := query_str || ' AND planning_tp_type = 2 ';
      ELSIF(inv_mwb_globals.g_planning_query_mode = 3) THEN
        query_str  := query_str || ' AND planning_organization_id = :plan_org ';
        query_str  := query_str || ' AND planning_tp_type = 1 ';
      ELSIF(inv_mwb_globals.g_planning_query_mode = 2) THEN
        query_str  := query_str || ' AND planning_tp_type = 1 ';
      END IF;
*/

      IF  inv_mwb_globals.g_owning_qry_mode = 2 THEN
         query_str := query_str || ' AND v.owning_tp_type = 1 ';
      ELSIF inv_mwb_globals.g_owning_qry_mode = 3 THEN
       query_str := query_str || ' AND v.owning_tp_type = 1 ';
       IF inv_mwb_globals.g_owning_org IS NOT NULL THEN
          query_str := query_str || ' AND v.owning_organization_id = :own_org';
       END IF;
      END IF;

      IF  inv_mwb_globals.g_planning_query_mode = 2 THEN
       query_str := query_str || ' AND v.planning_tp_type = 1 ';
      ELSIF inv_mwb_globals.g_planning_query_mode = 3 THEN
       query_str := query_str || ' AND v.planning_tp_type = 1 ';
       IF inv_mwb_globals.g_planning_org IS NOT NULL THEN
          query_str := query_str || ' AND v.planning_organization_id = :plan_org';
       END IF;
      END IF;


      query_str  := query_str || ' AND v.serial_number is NOT NULL ';
      query_str  := query_str || 'GROUP BY serial_number ';
      query_str  := query_str || 'ORDER BY serial_number ';
    ELSIF(inv_mwb_globals.g_lpn_from IS NOT NULL
          OR inv_mwb_globals.g_lpn_to IS NOT NULL
          OR inv_mwb_globals.g_tree_parent_lpn_id IS NOT NULL
          OR inv_mwb_globals.g_prepacked <> 1) THEN
      IF inv_mwb_globals.g_tree_mat_loc_id = 2 THEN
        table_required  := ' mtl_onhand_lpn_mwb_v mol ';
      ELSIF(inv_mwb_globals.g_status_id IS NULL AND inv_mwb_globals.g_only_subinventory_status IS NULL) THEN
        IF (inv_mwb_globals.g_prepacked <> 1) AND (inv_mwb_globals.g_prepacked <> 9) AND (inv_mwb_globals.g_prepacked <> 11) THEN
          table_required  := ' mtl_onhand_lpn_mwb_v mol ';
          IF is_grade_t = TRUE THEN                        -- NSRIVAST, INVCONV
            table_required  := ' mtl_onhand_new_lpn_v ';   -- NSRIVAST, INVCONV
          END IF;                                          -- NSRIVAST, INVCONV
        ELSE
          table_required  := ' mtl_onhand_new_lpn_mwb_v mol ';
        END IF;
      ELSE
        IF (inv_mwb_globals.g_prepacked <> 1) AND (inv_mwb_globals.g_prepacked <> 9) AND (inv_mwb_globals.g_prepacked <> 11) THEN
          table_required  := ' mtl_onhand_lpn_v mol  ';
          IF is_grade_t = TRUE THEN                        -- NSRIVAST, INVCONV
            table_required  := ' mtl_onhand_new_lpn_v ';   -- NSRIVAST, INVCONV
          END IF;                                          -- NSRIVAST, INVCONV
        ELSE
          table_required  := ' mtl_onhand_new_lpn_v mol ';
        END IF;
      END IF;

      query_str  := 'SELECT serial_number  ';
      query_str  := query_str || 'FROM ' || table_required;

      IF (inv_mwb_globals.g_lpn_from IS NOT NULL
          OR inv_mwb_globals.g_lpn_to IS NOT NULL)
         AND inv_mwb_globals.g_tree_parent_lpn_id IS NULL THEN
        query_str  := query_str || ', (select outermost_lpn_id from wms_license_plate_numbers wlpn ';
        query_str  := query_str || ' WHERE 1=1 ';

        IF inv_mwb_globals.g_tree_mat_loc_id = 2 THEN
          query_str  := query_str || ' AND lpn_context = 3 ';
        ELSIF inv_mwb_globals.g_prepacked IS NULL THEN
          query_str  := query_str || ' AND (lpn_context=1 or lpn_context=9 or lpn_context=11 )';
        ELSIF nvl(inv_mwb_globals.g_prepacked,1) = 1 THEN
          query_str  := query_str || 'AND lpn_context = 1 ';
        ELSIF inv_mwb_globals.g_prepacked <> 1
              AND inv_mwb_globals.g_prepacked <> 999
              AND inv_mwb_globals.g_prepacked IS NOT NULL THEN
          query_str  := query_str || 'AND lpn_context = :prepacked ';
        END IF;

      IF inv_mwb_globals.g_tree_loc_id IS NOT NULL
      OR inv_mwb_globals.g_locator_id IS NOT NULL THEN
          query_str  := query_str || 'AND wlpn.locator_id = :loc_id ';
        END IF;

  -- NSRIVAST, INVCONV, Start
      IF inv_mwb_globals.g_grade_from_code IS NOT NULL THEN
         query_str := query_str || ' AND grade_code = :grade_f ' ;
      END IF ;
      IF inv_mwb_globals.g_tree_grade_code  IS NOT NULL THEN
         query_str := query_str || ' AND grade_code = :grade_c ' ;
      END IF ;
   -- NSRIVAST, INVCONV, End

      IF inv_mwb_globals.g_tree_subinventory_code IS NOT NULL
      OR inv_mwb_globals.g_subinventory_code IS NOT NULL THEN
          query_str  := query_str || 'AND wlpn.subinventory_code = :sub ';
        END IF;

      IF inv_mwb_globals.g_organization_id IS NOT NULL
      OR inv_mwb_globals.g_tree_organization_id IS NOT NULL THEN
          query_str  := query_str || 'AND wlpn.organization_id = :org_id ';
      END IF;

      IF inv_mwb_globals.g_tree_parent_lpn_id IS NULL THEN
         IF inv_mwb_globals.g_lpn_from = inv_mwb_globals.g_lpn_to THEN
            query_str  := query_str || ' and license_plate_number = :lpn_f ';
         ELSE
            IF inv_mwb_globals.g_lpn_from IS NOT NULL THEN
               query_str  := query_str || ' and license_plate_number >= :lpn_f ';
            END IF;
            IF inv_mwb_globals.g_lpn_to IS NOT NULL THEN
               query_str  := query_str || ' and license_plate_number <= :lpn_t ';
     	    END IF;
         END IF;
      END IF;

        query_str  := query_str || 'group by wlpn.outermost_lpn_id) X ';
      END IF;

      IF (inv_mwb_globals.g_tree_lot_attr_query IS NULL AND inv_mwb_globals.g_parent_lot IS NULL
            AND inv_mwb_globals.g_supplier_lot_from IS NULL AND inv_mwb_globals.g_supplier_lot_to IS NULL)
         AND inv_mwb_globals.g_tree_serial_attr_query IS NULL THEN
        query_str  := query_str || 'WHERE 1=1 ';
      ELSIF (inv_mwb_globals.g_tree_lot_attr_query IS NULL AND inv_mwb_globals.g_parent_lot IS NULL
            AND inv_mwb_globals.g_supplier_lot_from IS NULL AND inv_mwb_globals.g_supplier_lot_to IS NULL)
            AND inv_mwb_globals.g_tree_serial_attr_query IS NOT NULL THEN
        query_str  :=
                     query_str || ', (SELECT serial_number serial_num FROM mtl_serial_numbers WHERE 1=1 ' || inv_mwb_globals.g_tree_serial_attr_query
                     || ') msn ';
        query_str  := query_str || 'WHERE msn.serial_num = serial_number ';
      ELSIF (inv_mwb_globals.g_tree_lot_attr_query IS NOT NULL OR inv_mwb_globals.g_parent_lot IS NOT NULL
            OR inv_mwb_globals.g_supplier_lot_from IS NOT NULL OR inv_mwb_globals.g_supplier_lot_to IS NOT NULL)
            AND inv_mwb_globals.g_tree_serial_attr_query IS NULL THEN
        query_str  := query_str || ', (SELECT lot_number lot_num, parent_lot_number, supplier_lot_number FROM mtl_lot_numbers WHERE 1=1 ' || inv_mwb_globals.g_tree_lot_attr_query || ') mln ';
        query_str  := query_str || 'WHERE mln.lot_num = lot_number ';
 		--BUG 7556505
		   IF inv_mwb_globals.g_parent_lot IS NOT NULL THEN
		       query_str  := query_str || ' AND mln.parent_lot_number = :parent_lot ';
	           END IF;
		--BUG 7556505
                /* Bug 8396954 added below code for supplier_lot_number */
                IF (inv_mwb_globals.g_supplier_lot_from IS NOT NULL AND
                    inv_mwb_globals.g_supplier_lot_to IS NOT NULL AND
                    inv_mwb_globals.g_supplier_lot_from = inv_mwb_globals.g_supplier_lot_to) THEN
                    query_str  := query_str || ' AND mln.supplier_lot_number = :supplier_lot_f ';
                END IF;

                IF (inv_mwb_globals.g_supplier_lot_from IS NOT NULL AND
	            inv_mwb_globals.g_supplier_lot_from <> NVL(inv_mwb_globals.g_supplier_lot_to, -1) ) THEN
                    query_str  := query_str || ' AND mln.supplier_lot_number >= :supplier_lot_f ';
                END IF;

                IF (inv_mwb_globals.g_supplier_lot_to IS NOT NULL AND
	            inv_mwb_globals.g_supplier_lot_to <> NVL(inv_mwb_globals.g_supplier_lot_from, -1) ) THEN
                    query_str  := query_str || ' AND mln.supplier_lot_number <= :supplier_lot_t ';
                END IF;
                /* End of Bug 8396954 */
      ELSIF (inv_mwb_globals.g_tree_lot_attr_query IS NOT NULL OR inv_mwb_globals.g_parent_lot IS NOT NULL
             OR inv_mwb_globals.g_supplier_lot_from IS NOT NULL OR inv_mwb_globals.g_supplier_lot_to IS NOT NULL)
            AND inv_mwb_globals.g_tree_serial_attr_query IS NOT NULL THEN
        query_str  :=
              query_str
           || ', (SELECT lot_number lot_num, parent_lot_number, supplier_lot_number FROM mtl_lot_numbers WHERE 1=1 '
           || inv_mwb_globals.g_tree_lot_attr_query
           || ') mln '
           || ', (SELECT serial_number serial_num FROM mtl_serial_numbers WHERE 1=1 '
           || inv_mwb_globals.g_tree_serial_attr_query
           || ') msn ';
        query_str  := query_str || 'WHERE mln.lot_num = lot_number ';
 		--BUG 7556505
		   IF inv_mwb_globals.g_parent_lot IS NOT NULL THEN
		       query_str  := query_str || ' AND mln.parent_lot_number = :parent_lot ';
	           END IF;
		--BUG 7556505
                /* Bug 8396954 added below code for supplier_lot_number */
                IF (inv_mwb_globals.g_supplier_lot_from IS NOT NULL AND
                    inv_mwb_globals.g_supplier_lot_to IS NOT NULL AND
                    inv_mwb_globals.g_supplier_lot_from = inv_mwb_globals.g_supplier_lot_to) THEN
                    query_str  := query_str || ' AND mln.supplier_lot_number = :supplier_lot_f ';
                END IF;

                IF (inv_mwb_globals.g_supplier_lot_from IS NOT NULL AND
	            inv_mwb_globals.g_supplier_lot_from <> NVL(inv_mwb_globals.g_supplier_lot_to, -1) ) THEN
                    query_str  := query_str || ' AND mln.supplier_lot_number >= :supplier_lot_f ';
                END IF;

                IF (inv_mwb_globals.g_supplier_lot_to IS NOT NULL AND
	            inv_mwb_globals.g_supplier_lot_to <> NVL(inv_mwb_globals.g_supplier_lot_from, -1) ) THEN
                    query_str  := query_str || ' AND mln.supplier_lot_number <= :supplier_lot_t ';
                END IF;
                /* End of Bug 8396954 */
        query_str  := query_str || 'AND msn.serial_num = serial_number ';
      END IF;

      IF inv_mwb_globals.g_only_subinventory_status = 1 THEN
         query_str  := query_str || 'AND serial_status_id = :st_id ';
         query_str := query_str || ' AND mol.lpn_id = x.outermost_lpn_id ';
      ELSE
         IF inv_mwb_globals.g_status_id IS NOT NULL THEN
            query_str  := query_str || 'AND serial_status_id = :st_id ';
            query_str := query_str || ' AND mol.lpn_id = x.outermost_lpn_id ';
         END IF;
      END IF;
/*
      IF inv_mwb_globals.g_status_id IS NOT NULL THEN
        IF inv_mwb_globals.g_only_serial_status = 1 THEN
          query_str  := query_str || ' AND (subinventory_status_id = :st_id or locator_status_id = :st_id or ';
          query_str  := query_str || ' lot_status_id = :st_id or serial_status_id = :st_id) ';
        ELSE
          query_str  := query_str || 'AND serial_status_id = :st_id ';
        END IF;
      END IF;
-- */

      IF inv_mwb_globals.g_lot_controlled = 1 THEN
        query_str  := query_str || 'AND lot_number IS NULL ';
      ELSIF inv_mwb_globals.g_lot_controlled = 2 THEN
        query_str  := query_str || 'AND lot_number IS NOT NULL ';
      END IF;

      IF inv_mwb_globals.g_tree_lot_number IS NOT NULL THEN
        query_str  := query_str || 'AND lot_number = :lot_n ';
      END IF;

      IF inv_mwb_globals.g_lot_from IS NOT NULL THEN
        query_str  := query_str || 'AND lot_number >= :lot_f ';
      END IF;

      IF inv_mwb_globals.g_lot_to IS NOT NULL THEN
        query_str  := query_str || 'AND lot_number <= :lot_t ';
      END IF;

      IF inv_mwb_globals.g_cost_group_id IS NOT NULL THEN
        query_str  := query_str || 'AND cost_group_id = :cg_id ';
      END IF;

      IF inv_mwb_globals.g_revision_controlled = 1 THEN
        query_str  := query_str || 'AND revision IS NULL ';
      ELSIF inv_mwb_globals.g_revision_controlled = 2 THEN
        query_str  := query_str || 'AND revision IS NOT NULL ';
      END IF;

      IF inv_mwb_globals.g_revision IS NOT NULL
      OR inv_mwb_globals.g_tree_rev IS NOT NULL THEN
        query_str  := query_str || 'AND revision = :rev ';
      END IF;

      IF inv_mwb_globals.g_serial_from IS NOT NULL THEN
        query_str  := query_str || 'AND serial_number >= :serial_f ';
      END IF;

      IF inv_mwb_globals.g_serial_to IS NOT NULL THEN
        query_str  := query_str || 'AND serial_number <= :serial_t ';
      END IF;

      IF inv_mwb_globals.g_tree_mat_loc_id = 2 THEN
        query_str  := query_str || ' AND lpn_context = 3 ';
      ELSIF inv_mwb_globals.g_prepacked IS NULL THEN
         query_str := query_str || ' AND (lpn_context = 1 or lpn_context = 9 or lpn_context = 11) ';
      ELSIF inv_mwb_globals.g_prepacked = 1 THEN
        query_str  := query_str || 'AND lpn_context = 1 ';
      ELSIF inv_mwb_globals.g_prepacked <> 1
            AND inv_mwb_globals.g_prepacked <> 999
            AND inv_mwb_globals.g_prepacked IS NOT NULL THEN
        query_str  := query_str || 'AND lpn_context = :prepacked ';
      END IF;

      IF inv_mwb_globals.g_tree_parent_lpn_id IS NOT NULL THEN
        query_str  := query_str || 'AND MOL.lpn_id = :plpn_id ';
      END IF;

/*      IF inv_mwb_globals.g_lpn_from IS NOT NULL
         OR inv_mwb_globals.g_lpn_to IS NOT NULL THEN
        query_str  := query_str || ' AND mol.outermost_lpn_id = x.outermost_lpn_id ';
      END IF;
*/

      IF inv_mwb_globals.g_inventory_item_id IS NOT NULL
      OR inv_mwb_globals.g_tree_item_id IS NOT NULL THEN
	query_str  := query_str || 'AND inventory_item_id = :item_id ';
      END IF;

      -- ER(9158529 client)
      IF inv_mwb_globals.g_client_code IS NOT NULL THEN
         query_str := query_str || ' AND inventory_item_id in (select DISTINCT inventory_item_id from mtl_system_items_b where wms_deploy.get_client_code(inventory_item_id) = :client_code) ';
      END IF;
      -- ER(9158529 client)

      -- ER(9158529)
      IF inv_mwb_globals.g_category_set_id IS NOT NULL THEN
        query_str := query_str || ' AND inventory_item_id in '
                                    || ' (select DISTINCT inventory_item_id from mtl_item_categories '
                                    || ' where organization_id = :organization_id '
                                    || ' and category_set_id = :category_set_id '
                                    || ' and category_id = nvl(:category_id, category_id)) ' ;
      END IF;
      -- ER(9158529)

      IF inv_mwb_globals.g_locator_controlled = 1 THEN
        query_str  := query_str || 'AND locator_id IS NULL ';
      ELSIF inv_mwb_globals.g_locator_controlled = 2 THEN
        query_str  := query_str || 'AND locator_id IS NOT NULL ';
      END IF;

      IF inv_mwb_globals.g_tree_loc_id IS NOT NULL
      OR inv_mwb_globals.g_locator_id IS NOT NULL THEN
        query_str  := query_str || 'AND locator_id = :loc_id ';
      END IF;

      --ER(3338592) Changes
      IF inv_mwb_globals.g_item_description IS NOT NULL THEN
         query_str := query_str || ' AND item_description LIKE :item_description ';
      END IF;
      --ER(3338592) Changes

      IF inv_mwb_globals.g_tree_subinventory_code IS NOT NULL
      OR inv_mwb_globals.g_subinventory_code IS NOT NULL THEN
        query_str  := query_str || 'AND subinventory_code = :sub ';
      END IF;

      IF inv_mwb_globals.g_organization_id IS NOT NULL
      OR inv_mwb_globals.g_tree_organization_id IS NOT NULL THEN
        query_str  := query_str || 'AND organization_id = :org_id ';
      END IF;

      IF inv_mwb_globals.g_project_id IS NOT NULL THEN
        query_str  := query_str || ' AND project_id = :pr_id ';
      END IF;

      IF inv_mwb_globals.g_task_id IS NOT NULL THEN
        query_str  := query_str || ' AND task_id = :ta_id ';
      END IF;

      IF inv_mwb_globals.g_unit_number IS NOT NULL THEN
        query_str  := query_str || ' AND unit_number=:un_id ';
      END IF;

      /*IF inv_mwb_globals.g_site_id IS NOT NULL THEN
         query_str := query_str || ' AND PLANNING_TP_TYPE = 1 ';
         query_str := query_str || ' AND planning_organization_id = :site_id ' ;
       ELSIF inv_mwb_globals.g_vendor_id is NOT NULL THEN
         query_str := query_str || ' AND  PLANNING_TP_TYPE = 1 ';
         query_str := query_str || ' AND  planning_organization_id in ';
         query_str := query_str || ' (select vendor_site_id from po_vendor_sites_all ';
         query_str := query_str || '  where vendor_id = :vendor_id )';
      END IF;*/
/*      IF (inv_mwb_globals.g_owning_qry_mode = 4) THEN
        query_str  := query_str || ' AND owning_organization_id = :own_org ';
        query_str  := query_str || ' AND owning_tp_type = 2 ';
      ELSIF(inv_mwb_globals.g_owning_qry_mode = 3) THEN
        query_str  := query_str || ' AND owning_organization_id = :own_org ';
        query_str  := query_str || ' AND owning_tp_type = 1 ';
      ELSIF(inv_mwb_globals.g_owning_qry_mode = 2) THEN
        query_str  := query_str || ' AND owning_tp_type = 1 ';
      END IF;

      IF (inv_mwb_globals.g_planning_query_mode = 4) THEN
        query_str  := query_str || ' AND planning_organization_id = :plan_org ';
        query_str  := query_str || ' AND planning_tp_type = 2 ';
      ELSIF(inv_mwb_globals.g_planning_query_mode = 3) THEN
        query_str  := query_str || ' AND planning_organization_id = :plan_org ';
        query_str  := query_str || ' AND planning_tp_type = 1 ';
      ELSIF(inv_mwb_globals.g_planning_query_mode = 2) THEN
        query_str  := query_str || ' AND planning_tp_type = 1 ';
      END IF;
*/
      IF  inv_mwb_globals.g_owning_qry_mode = 2 THEN
         query_str := query_str || ' AND owning_tp_type = 1 ';
      ELSIF inv_mwb_globals.g_owning_qry_mode = 3 THEN
       query_str := query_str || ' AND owning_tp_type = 1 ';
       IF inv_mwb_globals.g_owning_org IS NOT NULL THEN
          query_str := query_str || ' AND owning_organization_id = :own_org';
       END IF;
      END IF;

      IF  inv_mwb_globals.g_planning_query_mode = 2 THEN
       query_str := query_str || ' AND planning_tp_type = 1 ';
      ELSIF inv_mwb_globals.g_planning_query_mode = 3 THEN
       query_str := query_str || ' AND planning_tp_type = 1 ';
       IF inv_mwb_globals.g_planning_org IS NOT NULL THEN
          query_str := query_str || ' AND planning_organization_id = :plan_org';
       END IF;
      END IF;

      query_str  := query_str || 'GROUP BY serial_number  ';
      query_str  := query_str || 'ORDER BY serial_number ';
    END IF;

    inv_trx_util_pub.trace(query_str, 'Add Serails :- Material Workbench', 9);
    --trace1(query_str, 'add_serials', 9);

    inv_mwb_globals.print_msg( g_pkg_name, l_procedure_name, query_str );

    inv_mwb_globals.g_last_query := query_str;
    query_hdl       := DBMS_SQL.open_cursor;
    DBMS_SQL.parse(query_hdl, query_str, DBMS_SQL.native);


    IF inv_mwb_globals.g_tree_organization_id IS NOT NULL THEN
      DBMS_SQL.bind_variable(query_hdl, 'org_id', inv_mwb_globals.g_tree_organization_id);
    ELSIF inv_mwb_globals.g_organization_id IS NOT NULL THEN
      DBMS_SQL.bind_variable(query_hdl, 'org_id', inv_mwb_globals.g_organization_id);
    END IF;

    IF inv_mwb_globals.g_tree_subinventory_code IS NOT NULL THEN
      DBMS_SQL.bind_variable(query_hdl, 'sub', inv_mwb_globals.g_tree_subinventory_code);
    ELSIF inv_mwb_globals.g_subinventory_code IS NOT NULL THEN
      DBMS_SQL.bind_variable(query_hdl, 'sub', inv_mwb_globals.g_subinventory_code);
    END IF;

    IF inv_mwb_globals.g_tree_loc_id IS NOT NULL THEN
      DBMS_SQL.bind_variable(query_hdl, 'loc_id', inv_mwb_globals.g_tree_loc_id);
    ELSIF inv_mwb_globals.g_locator_id IS NOT NULL THEN
      DBMS_SQL.bind_variable(query_hdl, 'loc_id', inv_mwb_globals.g_locator_id);
    END IF;

    IF inv_mwb_globals.g_tree_item_id IS NOT NULL THEN
      DBMS_SQL.bind_variable(query_hdl, 'item_id', inv_mwb_globals.g_tree_item_id);
    ELSIF inv_mwb_globals.g_inventory_item_id IS NOT NULL THEN
      DBMS_SQL.bind_variable(query_hdl, 'item_id', inv_mwb_globals.g_inventory_item_id);
    END IF;

    -- ER(9158529 client)
    IF inv_mwb_globals.g_client_code IS NOT NULL THEN
      DBMS_SQL.bind_variable(query_hdl, 'client_code', inv_mwb_globals.g_client_code);
    END IF;
    -- ER(9158529 client)

    -- ER(9158529)
    IF inv_mwb_globals.g_category_set_id IS NOT NULL THEN
      DBMS_SQL.bind_variable(query_hdl, 'organization_id', NVL(inv_mwb_globals.g_organization_id, inv_mwb_globals.g_tree_organization_id));
      DBMS_SQL.bind_variable(query_hdl, 'category_set_id', inv_mwb_globals.g_category_set_id);
      DBMS_SQL.bind_variable(query_hdl, 'category_id', inv_mwb_globals.g_category_id);
    END IF;
    -- ER(9158529)

    IF inv_mwb_globals.g_tree_rev IS NOT NULL THEN
      DBMS_SQL.bind_variable(query_hdl, 'rev', inv_mwb_globals.g_tree_rev);
    ELSIF inv_mwb_globals.g_revision IS NOT NULL THEN
      DBMS_SQL.bind_variable(query_hdl, 'rev', inv_mwb_globals.g_revision);
    END IF;

    IF inv_mwb_globals.g_cost_group_id IS NOT NULL THEN
      DBMS_SQL.bind_variable(query_hdl, 'cg_id', inv_mwb_globals.g_cost_group_id);
    END IF;

    --BUG 7556505
    IF inv_mwb_globals.g_parent_lot IS NOT NULL THEN
      DBMS_SQL.bind_variable(query_hdl, 'parent_lot', inv_mwb_globals.g_parent_lot);
    END IF;
    --BUG 7556505

    IF inv_mwb_globals.g_lot_from IS NOT NULL THEN
      DBMS_SQL.bind_variable(query_hdl, 'lot_f', inv_mwb_globals.g_lot_from);
    END IF;

    IF inv_mwb_globals.g_lot_to IS NOT NULL THEN
      DBMS_SQL.bind_variable(query_hdl, 'lot_t', inv_mwb_globals.g_lot_to);
    END IF;

    /* Bug 8396954 added below code for supplier_lot_number */
    IF (inv_mwb_globals.g_supplier_lot_from IS NOT NULL AND
    inv_mwb_globals.g_supplier_lot_to IS NOT NULL AND
    inv_mwb_globals.g_supplier_lot_from = inv_mwb_globals.g_supplier_lot_to) THEN
         DBMS_SQL.bind_variable(query_hdl, 'supplier_lot_f', inv_mwb_globals.g_supplier_lot_from);
    END IF;

    IF (inv_mwb_globals.g_supplier_lot_from IS NOT NULL AND
        inv_mwb_globals.g_supplier_lot_from <> NVL(inv_mwb_globals.g_supplier_lot_to, -1) ) THEN
          DBMS_SQL.bind_variable(query_hdl, 'supplier_lot_f', inv_mwb_globals.g_supplier_lot_from);
    END IF;

    IF (inv_mwb_globals.g_supplier_lot_to IS NOT NULL AND
         inv_mwb_globals.g_supplier_lot_to <> NVL(inv_mwb_globals.g_supplier_lot_from, -1) ) THEN
          DBMS_SQL.bind_variable(query_hdl, 'supplier_lot_t', inv_mwb_globals.g_supplier_lot_to);
    END IF;
    /* End of Bug 8396954 */

    IF inv_mwb_globals.g_tree_lot_number IS NOT NULL THEN
      DBMS_SQL.bind_variable(query_hdl, 'lot_n', inv_mwb_globals.g_tree_lot_number);
    END IF;

    --bug 6633612
    IF inv_mwb_globals.g_shipment_header_id IS NOT NULL THEN
      DBMS_SQL.bind_variable(query_hdl, 'shipment_header_id',inv_mwb_globals.g_shipment_header_id );
    END IF;
    --bug 6633612

 -- NSRIVAST, INVCONV, Start
    IF inv_mwb_globals.g_grade_from_code IS NOT NULL THEN
      DBMS_SQL.bind_variable(query_hdl, 'grade_f',inv_mwb_globals.g_grade_from_code );
    END IF;
    IF inv_mwb_globals.g_tree_grade_code IS NOT NULL THEN
      DBMS_SQL.bind_variable(query_hdl, 'grade_c', inv_mwb_globals.g_tree_grade_code);
    END IF;
 -- NSRIVAST, INVCONV, End

    IF inv_mwb_globals.g_serial_from IS NOT NULL THEN
      DBMS_SQL.bind_variable(query_hdl, 'serial_f', inv_mwb_globals.g_serial_from);
    END IF;

    IF inv_mwb_globals.g_serial_to IS NOT NULL THEN
      DBMS_SQL.bind_variable(query_hdl, 'serial_t', inv_mwb_globals.g_serial_to);
    END IF;

    IF inv_mwb_globals.g_tree_parent_lpn_id IS NULL THEN
       IF inv_mwb_globals.g_lpn_from = inv_mwb_globals.g_lpn_to THEN
          dbms_sql.bind_variable(query_hdl, 'lpn_f', inv_mwb_globals.g_lpn_from);
       ELSE
          IF inv_mwb_globals.g_lpn_from IS NOT NULL THEN
             dbms_sql.bind_variable(query_hdl, 'lpn_f', inv_mwb_globals.g_lpn_from);
          END IF;
 	  IF inv_mwb_globals.g_lpn_to IS NOT NULL THEN
             dbms_sql.bind_variable(query_hdl, 'lpn_t', inv_mwb_globals.g_lpn_to);
   	  END IF;
       END IF;
    END IF;

    IF inv_mwb_globals.g_tree_parent_lpn_id IS NOT NULL THEN
      DBMS_SQL.bind_variable(query_hdl, 'plpn_id', inv_mwb_globals.g_tree_parent_lpn_id);
    END IF;

      IF inv_mwb_globals.g_only_subinventory_status = 1 THEN
         DBMS_SQL.bind_variable(query_hdl, 'st_id', inv_mwb_globals.g_tree_st_id);
      ELSE
         IF inv_mwb_globals.g_status_id IS NOT NULL THEN
            DBMS_SQL.bind_variable(query_hdl, 'st_id', inv_mwb_globals.g_status_id);
         END IF;
      END IF;

    IF inv_mwb_globals.g_prepacked <> 1
       AND inv_mwb_globals.g_prepacked <> 999
       AND inv_mwb_globals.g_prepacked IS NOT NULL THEN
      DBMS_SQL.bind_variable(query_hdl, 'prepacked', inv_mwb_globals.g_prepacked);
    END IF;

    IF inv_mwb_globals.g_mln_context_code IS NOT NULL THEN
      DBMS_SQL.bind_variable(query_hdl, 'mln_context', inv_mwb_globals.g_mln_context_code);
    END IF;

    IF inv_mwb_globals.g_project_id IS NOT NULL THEN
      DBMS_SQL.bind_variable(query_hdl, 'pr_id', inv_mwb_globals.g_project_id);
    END IF;

    IF inv_mwb_globals.g_task_id IS NOT NULL THEN
      DBMS_SQL.bind_variable(query_hdl, 'ta_id', inv_mwb_globals.g_task_id);
    END IF;

    IF inv_mwb_globals.g_unit_number IS NOT NULL THEN
      DBMS_SQL.bind_variable(query_hdl, 'un_id', inv_mwb_globals.g_unit_number);
    END IF;

    /*IF inv_mwb_globals.g_site_id IS NOT NULL THEN
       dbms_sql.bind_variable(query_hdl,'site_id', inv_mwb_globals.g_site_id);
     ELSIF inv_mwb_globals.g_vendor_id is NOT NULL THEN
       dbms_sql.bind_variable(query_hdl,'vendor_id', inv_mwb_globals.g_vendor_id);
    END IF;*/
/*    IF (inv_mwb_globals.g_owning_qry_mode = 4)
       OR(inv_mwb_globals.g_owning_qry_mode = 3) THEN
      DBMS_SQL.bind_variable(query_hdl, 'own_org', inv_mwb_globals.g_owning_org);
    END IF;

    IF (inv_mwb_globals.g_planning_query_mode = 4)
       OR(inv_mwb_globals.g_planning_query_mode = 3) THEN
      DBMS_SQL.bind_variable(query_hdl, 'plan_org', inv_mwb_globals.g_planning_org);
    END IF;
*/

      IF inv_mwb_globals.g_owning_qry_mode = 3
      AND inv_mwb_globals.g_owning_org IS NOT NULL THEN
         DBMS_SQL.bind_variable(query_hdl, 'own_org', inv_mwb_globals.g_owning_org);
      END IF;

      IF inv_mwb_globals.g_planning_query_mode = 3
      AND inv_mwb_globals.g_planning_org IS NOT NULL THEN
         DBMS_SQL.bind_variable(query_hdl, 'plan_org', inv_mwb_globals.g_planning_org);
      END IF;

   --ER(3338592) Changes
   IF inv_mwb_globals.g_item_description IS NOT NULL THEN
      dbms_sql.bind_variable(query_hdl, 'item_description', inv_mwb_globals.g_item_description);
   END IF;

    DBMS_SQL.define_column(query_hdl, 1, serial, 30);
    rows_processed  := DBMS_SQL.EXECUTE(query_hdl);

    LOOP
      -- fetch a row
      IF DBMS_SQL.fetch_rows(query_hdl) > 0 THEN
        -- fetch columns from the row
        DBMS_SQL.column_value(query_hdl, 1, serial);

        IF j >= inv_mwb_globals.g_tree_node_low_value THEN
          x_node_tbl(i).state  := inv_mwb_globals.g_tree_node_state;
          x_node_tbl(i).DEPTH  := 1;
          x_node_tbl(i).label  := serial;
          x_node_tbl(i).icon   := 'inv_seri';
          x_node_tbl(i).VALUE  := serial;
          x_node_tbl(i).TYPE   := 'SERIAL';
          i                    := i + 1;
        END IF;

        EXIT WHEN j >= inv_mwb_globals.g_tree_node_high_value;
        j  := j + 1;
      ELSE
        EXIT;
      END IF;
    END LOOP;

    DBMS_SQL.close_cursor(query_hdl); -- close cursor
    x_node_value    := j;
    x_tbl_index     := i;
  EXCEPTION
    WHEN NO_DATA_FOUND THEN
      NULL;
    WHEN OTHERS THEN
      RAISE;
  END add_serials;


-- NSRIVAST, INVCONV, Start
-- Procedure to give grade nodes for view by Grade
 PROCEDURE add_grades  (
    x_node_value                IN OUT NOCOPY  NUMBER
  , x_node_tbl                  IN OUT NOCOPY  fnd_apptree.node_tbl_type
  , x_tbl_index                 IN OUT NOCOPY  NUMBER
  ) IS

    query_str      VARCHAR2(10000);
    query_hdl      NUMBER;
    rows_processed NUMBER;
    org_id         mtl_onhand_quantities.organization_id%TYPE;
    org_code       mtl_parameters.organization_code%TYPE;
    i              NUMBER                                       := x_tbl_index;
    j              NUMBER                                       := x_node_value;
    grade_control    mtl_system_items.GRADE_CONTROL_FLAG%TYPE  ;
    table_required VARCHAR2(300);
    --ER(3338592) Changes
    group_str      VARCHAR2(10000) ;
    having_str     VARCHAR2(10000) := ' HAVING 1=1 ';
    --End of ER Changes

    grade          mtl_grades.grade_code%TYPE ;

         l_procedure_name CONSTANT VARCHAR2(30) := 'ADD_GRADES';
   BEGIN
      inv_mwb_globals.print_msg( g_pkg_name, l_procedure_name, 'Entered' );


     -- Exit out of the procedure if the item is not grade controlled
    IF (inv_mwb_globals.g_organization_id IS NOT NULL
	OR inv_mwb_globals.g_tree_organization_id IS NOT NULL)
       AND (inv_mwb_globals.g_tree_item_id IS NOT NULL
	    OR inv_mwb_globals.g_inventory_item_id IS NOT NULL)	THEN

      SELECT DISTINCT grade_control_flag
        INTO grade_control
        FROM mtl_system_items
       WHERE inventory_item_id = NVL(inv_mwb_globals.g_tree_item_id,
				     inv_mwb_globals.g_inventory_item_id)
         AND organization_id = NVL(inv_mwb_globals.g_tree_organization_id,
	                           inv_mwb_globals.g_organization_id);

      IF ( grade_control IN ('N','n') )  THEN
        RETURN;
      END IF;
    END IF;

--       query_str  := query_str || ' SELECT grade_code from  mtl_grades ';
--       query_str  := query_str || ' WHERE 1=1 ';

   -- Check the parameters on Find window, and build the query accordingly
     IF inv_mwb_globals.g_serial_from IS NULL
      AND inv_mwb_globals.g_serial_to IS NULL
      AND inv_mwb_globals.g_tree_serial_number IS NULL
      AND inv_mwb_globals.g_lpn_from IS NULL
      AND inv_mwb_globals.g_lpn_to IS NULL THEN

         table_required := ' MTL_ONHAND_TOTAL_V v ' ;

	--bug 6633612
	IF (inv_mwb_globals.g_shipment_header_id is not null) THEN
		table_required  := table_required || ' , rcv_transactions rt, mtl_material_transactions mmt ';
	END IF;
	--bug 6633612

       query_str  := query_str || ' SELECT v.grade_code grade_code from ' || table_required;
       query_str  := query_str || ' WHERE 1=1 ';

      IF inv_mwb_globals.g_tree_item_id IS NOT NULL
      OR inv_mwb_globals.g_inventory_item_id IS NOT NULL THEN
        query_str  := query_str || ' AND v.inventory_item_id = :item_id ';
      END IF;

      -- ER(9158529 client)
      IF inv_mwb_globals.g_client_code IS NOT NULL THEN
         query_str := query_str || ' AND v.inventory_item_id in (select DISTINCT inventory_item_id from mtl_system_items_b where wms_deploy.get_client_code(inventory_item_id) = :client_code) ';
      END IF;
      -- ER(9158529 client)

      -- ER(9158529)
      IF inv_mwb_globals.g_category_set_id IS NOT NULL THEN
         query_str := query_str || ' AND v.inventory_item_id in '
                                     || ' (select DISTINCT inventory_item_id from mtl_item_categories '
                                     || ' where organization_id = :organization_id '
                                     || ' and category_set_id = :category_set_id '
                                     || ' and category_id = nvl(:category_id, category_id)) ' ;
      END IF;
      -- ER(9158529)

      IF inv_mwb_globals.g_project_id IS NOT NULL THEN
        query_str  := query_str || ' AND v.project_id = :pr_id ';
      END IF;
      IF inv_mwb_globals.g_task_id IS NOT NULL THEN
        query_str  := query_str || ' AND v.task_id = :ta_id ';
      END IF;

      --bug 6633612
	IF (inv_mwb_globals.g_shipment_header_id is not null) THEN
		query_str := query_str || ' AND rt.shipment_header_id = :shipment_header_id '
					 || ' AND rt.transaction_id = mmt.rcv_transaction_id '
					 || ' AND rt.organization_id = mmt.organization_id '
					 || ' AND rt.transaction_type = ''DELIVER'''
					 || ' AND rt.destination_type_code = ''INVENTORY'''
					 || ' AND mmt.transaction_id = v.create_transaction_id '
					 || ' AND mmt.organization_id = v.organization_id ';

	END IF;
	--bug 6633612

     IF (inv_mwb_globals.g_owning_qry_mode = 4) THEN
        query_str  := query_str || ' AND v.owning_organization_id = :own_org ';
        query_str  := query_str || ' AND v.owning_tp_type = 2 ';
      ELSIF(inv_mwb_globals.g_owning_qry_mode = 3) THEN
        query_str  := query_str || ' AND v.owning_organization_id = :own_org ';
        query_str  := query_str || ' AND v.owning_tp_type = 1 ';
      ELSIF(inv_mwb_globals.g_owning_qry_mode = 2) THEN
        query_str  := query_str || ' AND v.owning_tp_type = 1 ';
      END IF;
      IF (inv_mwb_globals.g_planning_query_mode = 4) THEN
        query_str  := query_str || ' AND v.planning_organization_id = :plan_org ';
        query_str  := query_str || ' AND v.planning_tp_type = 2 ';
      ELSIF(inv_mwb_globals.g_planning_query_mode = 3) THEN
        query_str  := query_str || ' AND v.planning_organization_id = :plan_org ';
        query_str  := query_str || ' AND v.planning_tp_type = 1 ';
      ELSIF(inv_mwb_globals.g_planning_query_mode = 2) THEN
        query_str  := query_str || ' AND v.planning_tp_type = 1 ';
      END IF;
      IF inv_mwb_globals.g_cost_group_id IS NOT NULL THEN
        query_str  := query_str || ' AND v.cost_group_id = :cg_id ';
      END IF;
      IF inv_mwb_globals.g_revision_controlled = 1 THEN
        query_str  := query_str || ' AND v.revision IS NULL ';
      ELSIF inv_mwb_globals.g_revision_controlled = 2 THEN
        query_str  := query_str || ' AND v.revision IS NOT NULL ';
      END IF;

      IF inv_mwb_globals.g_revision IS NOT NULL
      OR inv_mwb_globals.g_tree_rev IS NOT NULL THEN
        query_str  := query_str || ' AND v.revision = :rev ';
      END IF;

      IF inv_mwb_globals.g_containerized = 1 THEN
        query_str  := query_str || ' AND (v.containerized_flag is null or v.containerized_flag <> 1) ';
      ELSIF inv_mwb_globals.g_containerized = 2 THEN
        query_str  := query_str || ' AND v.containerized_flag = 1 ';
      END IF;
      IF inv_mwb_globals.g_tree_loc_id IS NOT NULL
      OR inv_mwb_globals.g_locator_id IS NOT NULL THEN
        query_str  := query_str || ' AND v.locator_id = :loc_id ';
      END IF;
      --ER(3338592) Changes
      IF inv_mwb_globals.g_item_description IS NOT NULL THEN
         query_str := query_str || ' AND v.item_description LIKE :item_description ';
      END IF;
      --ER(3338592) Changes
      IF inv_mwb_globals.g_tree_subinventory_code IS NOT NULL
      OR inv_mwb_globals.g_subinventory_code IS NOT NULL THEN
        query_str  := query_str || ' AND v.subinventory_code = :sub ';
      END IF;
      IF inv_mwb_globals.g_serial_controlled = 1 THEN
            query_str  := query_str || ' AND v.item_serial_control in (1,6) ';
      ELSIF inv_mwb_globals.g_serial_controlled = 2 THEN
        query_str := query_str || ' AND v.item_serial_control in (2,5) ';
      END IF;

      IF inv_mwb_globals.g_grade_from_code IS NOT NULL THEN
         query_str := query_str || ' and v.grade_code = :grade_f ' ;
      END IF ;

      IF inv_mwb_globals.g_tree_grade_code  IS NOT NULL THEN
         query_str := query_str || ' and grade_code = :grade_c ' ;
      END IF ;

      query_str := query_str || ' AND v.grade_code is not null ';

      IF inv_mwb_globals.g_tree_organization_id IS NOT NULL
      OR inv_mwb_globals.g_organization_id IS NOT NULL THEN
        query_str  := query_str || ' AND v.organization_id = :org_id ';
      ELSE
        query_str  := query_str || ' and EXISTS ( SELECT 1 ' ;
        query_str  := query_str || ' FROM org_access_view oav ' ;
        query_str  := query_str || ' WHERE oav.organization_id   = v.organization_id ' ;
        query_str  := query_str || ' AND oav.responsibility_id   = :responsibility_id ' ;
        query_str  := query_str || ' AND oav.resp_application_id = :resp_application_id ) ' ;
      END IF;

      query_str  := query_str || ' GROUP BY grade_code ';
 --      query_str := query_str ||  ' ) ' ;  -- new

    ELSIF ((inv_mwb_globals.g_serial_from IS NOT NULL OR inv_mwb_globals.g_serial_to IS NOT NULL
         OR inv_mwb_globals.g_tree_serial_number IS NOT NULL ) AND ( inv_mwb_globals.g_lpn_from IS NULL AND inv_mwb_globals.g_lpn_to IS NULL )) THEN

	 table_required := ' MTL_ONHAND_SERIAL_V v ' ;

	 --bug 6633612
	IF (inv_mwb_globals.g_shipment_header_id is not null) THEN
		table_required  := table_required || ' , rcv_transactions rt, mtl_material_transactions mmt ';
	END IF;
	--bug 6633612

      query_str  := query_str || ' SELECT v.grade_code grade_code from ' || table_required;
      query_str  := query_str || ' WHERE 1=1 ';

      IF inv_mwb_globals.g_tree_serial_number IS NOT NULL THEN
        query_str  := query_str || ' AND (v.serial_number = :serial_n) ';
      END IF;
      IF inv_mwb_globals.g_serial_from IS NOT NULL THEN
        query_str  := query_str || ' AND v.serial_number >= :serial_f ';
      END IF;
      IF inv_mwb_globals.g_serial_to IS NOT NULL THEN
        query_str  := query_str || ' AND v.serial_number <= :serial_t ';
      END IF;
      IF inv_mwb_globals.g_inventory_item_id IS NOT NULL
      OR inv_mwb_globals.g_tree_item_id IS NOT NULL THEN
        query_str  := query_str || ' AND v.inventory_item_id = :item_id ';
      END IF;

      -- ER(9158529 client)
      IF inv_mwb_globals.g_client_code IS NOT NULL THEN
         query_str := query_str || ' AND v.inventory_item_id in (select DISTINCT inventory_item_id from mtl_system_items_b where wms_deploy.get_client_code(inventory_item_id) = :client_code) ';
      END IF;
      -- ER(9158529 client)

      -- ER(9158529)
      IF inv_mwb_globals.g_category_set_id IS NOT NULL THEN
         query_str := query_str || ' AND v.inventory_item_id in '
                                     || ' (select DISTINCT inventory_item_id from mtl_item_categories '
                                     || ' where organization_id = :organization_id '
                                     || ' and category_set_id = :category_set_id '
                                     || ' and category_id = nvl(:category_id, category_id)) ' ;
      END IF;
      -- ER(9158529)

      	--bug 6633612
	IF (inv_mwb_globals.g_shipment_header_id is not null) THEN
		query_str := query_str || ' AND rt.shipment_header_id = :shipment_header_id '
					 || ' AND rt.transaction_id = mmt.rcv_transaction_id '
					 || ' AND rt.organization_id = mmt.organization_id '
					 || ' AND rt.transaction_type = ''DELIVER'''
					 || ' AND rt.destination_type_code = ''INVENTORY'''
					 || ' AND mmt.transaction_id = v.last_transaction_id '
					 || ' AND mmt.organization_id = v.organization_id ';

	END IF;
	--bug 6633612

      IF inv_mwb_globals.g_project_id IS NOT NULL THEN
        query_str  := query_str || ' AND v.project_id = :pr_id ';
      END IF;
      IF inv_mwb_globals.g_task_id IS NOT NULL THEN
        query_str  := query_str || ' AND v.task_id = :ta_id ';
      END IF;
      IF (inv_mwb_globals.g_owning_qry_mode = 4) THEN
        query_str  := query_str || ' AND v.owning_organization_id = :own_org ';
        query_str  := query_str || ' AND v.owning_tp_type = 2 ';
      ELSIF(inv_mwb_globals.g_owning_qry_mode = 3) THEN
        query_str  := query_str || ' AND v.owning_organization_id = :own_org ';
        query_str  := query_str || ' AND v.owning_tp_type = 1 ';
      ELSIF(inv_mwb_globals.g_owning_qry_mode = 2) THEN
        query_str  := query_str || ' AND v.owning_tp_type = 1 ';
      END IF;
      IF (inv_mwb_globals.g_planning_query_mode = 4) THEN
        query_str  := query_str || ' AND v.planning_organization_id = :plan_org ';
        query_str  := query_str || ' AND v.planning_tp_type = 2 ';
      ELSIF(inv_mwb_globals.g_planning_query_mode = 3) THEN
        query_str  := query_str || ' AND v.planning_organization_id = :plan_org ';
        query_str  := query_str || ' AND v.planning_tp_type = 1 ';
      ELSIF(inv_mwb_globals.g_planning_query_mode = 2) THEN
        query_str  := query_str || ' AND v.planning_tp_type = 1 ';
      END IF;
      IF inv_mwb_globals.g_cost_group_id IS NOT NULL THEN
        query_str  := query_str || ' AND v.cost_group_id = :cg_id ';
      END IF;
      IF inv_mwb_globals.g_revision_controlled = 1 THEN
        query_str  := query_str || ' AND v.revision IS NULL ';
      ELSIF inv_mwb_globals.g_revision_controlled = 2 THEN
        query_str  := query_str || ' AND v.revision IS NOT NULL ';
      END IF;

      IF inv_mwb_globals.g_revision IS NOT NULL
      OR inv_mwb_globals.g_tree_rev IS NOT NULL THEN
        query_str  := query_str || ' AND v.revision = :rev ';
      END IF;
      IF inv_mwb_globals.g_containerized = 1 THEN
        query_str  := query_str || ' AND (v.containerized_flag is null or v.containerized_flag <> 1) ';
      ELSIF inv_mwb_globals.g_containerized = 2 THEN
        query_str  := query_str || ' AND v.containerized_flag = 1 ';
      END IF;

      IF inv_mwb_globals.g_tree_loc_id IS NOT NULL
      OR inv_mwb_globals.g_locator_id IS NOT NULL THEN
        query_str  := query_str || ' AND v.locator_id = :loc_id ';
      END IF;
      --ER(3338592) Changes
      IF inv_mwb_globals.g_item_description IS NOT NULL THEN
         query_str := query_str || ' AND v.item_description LIKE :item_description ';
      END IF;
      --ER(3338592) Changes
      IF inv_mwb_globals.g_tree_subinventory_code IS NOT NULL
      OR inv_mwb_globals.g_subinventory_code IS NOT NULL THEN
        query_str  := query_str || ' AND v.subinventory_code = :sub ';
      END IF;
      IF inv_mwb_globals.g_serial_controlled = 1 THEN
            query_str  := query_str || 'AND item_serial_control in (1,6) ';
      ELSIF inv_mwb_globals.g_serial_controlled = 2 THEN
        query_str := query_str || ' AND v.item_serial_control in (2,5) ';
      END IF;

      IF inv_mwb_globals.g_grade_from_code IS NOT NULL THEN
         query_str := query_str || ' AND v.grade_code = :grade_f ' ;
      END IF ;

      IF inv_mwb_globals.g_tree_grade_code  IS NOT NULL THEN
         query_str := query_str || ' AND v.grade_code = :grade_c ' ;
      END IF ;

      query_str := query_str || ' AND v.grade_code is not null ';

      IF inv_mwb_globals.g_tree_organization_id IS NOT NULL
      OR inv_mwb_globals.g_organization_id IS NOT NULL THEN
        query_str  := query_str || ' AND v.organization_id = :org_id ';
      ELSE
        query_str  := query_str || ' and EXISTS ( SELECT 1 ' ;
        query_str  := query_str || ' FROM org_access_view oav ' ;
        query_str  := query_str || ' WHERE oav.organization_id   = v.organization_id ' ;
        query_str  := query_str || ' AND oav.responsibility_id   = :responsibility_id ' ;
        query_str  := query_str || ' AND oav.resp_application_id = :resp_application_id ) ' ;
      END IF;

 --       query_str := query_str ||  ' ) ' ;  -- new

      query_str  := query_str || ' GROUP BY grade_code ';

    ELSIF ((inv_mwb_globals.g_serial_from IS NULL AND inv_mwb_globals.g_serial_to IS NULL AND inv_mwb_globals.g_tree_serial_number IS NULL )
            AND ( inv_mwb_globals.g_lpn_from IS NOT NULL OR inv_mwb_globals.g_lpn_to IS NOT NULL ) ) THEN

       IF inv_mwb_globals.g_tree_mat_loc_id = 2
       OR inv_mwb_globals.g_chk_receiving = 1 THEN

         table_required := ' MTL_ONHAND_LPN_MWB_V ml ' ;
       ELSE
         table_required := ' MTL_ONHAND_NEW_LPN_MWB_V ml ' ;
       END IF ;

      query_str  := query_str || ' SELECT grade_code from ' || table_required;
      query_str  := query_str || ' WHERE 1=1 ';

      IF inv_mwb_globals.g_inventory_item_id IS NOT NULL
      OR inv_mwb_globals.g_tree_item_id IS NOT NULL THEN
        query_str  := query_str || 'AND inventory_item_id = :item_id ';
      END IF;

      -- ER(9158529 client)
      IF inv_mwb_globals.g_client_code IS NOT NULL THEN
         query_str := query_str || ' AND inventory_item_id in (select DISTINCT inventory_item_id from mtl_system_items_b where wms_deploy.get_client_code(inventory_item_id) = :client_code) ';
      END IF;
      -- ER(9158529 client)

      -- ER(9158529)
      IF inv_mwb_globals.g_category_set_id IS NOT NULL THEN
         query_str := query_str || ' AND inventory_item_id in '
                                    || ' (select DISTINCT inventory_item_id from mtl_item_categories '
                                    || ' where organization_id = :organization_id '
                                    || ' and category_set_id = :category_set_id '
                                    || ' and category_id = nvl(:category_id, category_id)) ' ;
      END IF;
      -- ER(9158529)

      IF inv_mwb_globals.g_project_id IS NOT NULL THEN
        query_str  := query_str || ' AND project_id = :pr_id ';
      END IF;
      IF inv_mwb_globals.g_task_id IS NOT NULL THEN
        query_str  := query_str || ' AND task_id = :ta_id ';
      END IF;
     IF (inv_mwb_globals.g_owning_qry_mode = 4) THEN
        query_str  := query_str || ' AND owning_organization_id = :own_org ';
        query_str  := query_str || ' AND owning_tp_type = 2 ';
      ELSIF(inv_mwb_globals.g_owning_qry_mode = 3) THEN
        query_str  := query_str || ' AND owning_organization_id = :own_org ';
        query_str  := query_str || ' AND owning_tp_type = 1 ';
      ELSIF(inv_mwb_globals.g_owning_qry_mode = 2) THEN
        query_str  := query_str || ' AND owning_tp_type = 1 ';
      END IF;
      IF (inv_mwb_globals.g_planning_query_mode = 4) THEN
        query_str  := query_str || ' AND planning_organization_id = :plan_org ';
        query_str  := query_str || ' AND planning_tp_type = 2 ';
      ELSIF(inv_mwb_globals.g_planning_query_mode = 3) THEN
        query_str  := query_str || ' AND planning_organization_id = :plan_org ';
        query_str  := query_str || ' AND planning_tp_type = 1 ';
      ELSIF(inv_mwb_globals.g_planning_query_mode = 2) THEN
        query_str  := query_str || ' AND planning_tp_type = 1 ';
      END IF;
      IF inv_mwb_globals.g_cost_group_id IS NOT NULL THEN
        query_str  := query_str || ' AND cost_group_id = :cg_id ';
      END IF;
      IF inv_mwb_globals.g_revision_controlled = 1 THEN
        query_str  := query_str || ' AND revision IS NULL ';
      ELSIF inv_mwb_globals.g_revision_controlled = 2 THEN
        query_str  := query_str || ' AND revision IS NOT NULL ';
      END IF;

      IF inv_mwb_globals.g_revision IS NOT NULL
      OR inv_mwb_globals.g_tree_rev IS NOT NULL THEN
        query_str  := query_str || ' AND revision = :rev ';
      END IF;

      IF inv_mwb_globals.g_containerized = 1 THEN
        query_str  := query_str || ' AND (containerized_flag is null or containerized_flag <> 1) ';
      ELSIF inv_mwb_globals.g_containerized = 2 THEN
        query_str  := query_str || 'AND containerized_flag = 1 ';
      END IF;

      IF inv_mwb_globals.g_tree_loc_id IS NOT NULL
      OR inv_mwb_globals.g_locator_id IS NOT NULL THEN
        query_str  := query_str || ' AND locator_id = :loc_id ';
      END IF;

      --ER(3338592) Changes
      IF inv_mwb_globals.g_item_description IS NOT NULL THEN
         query_str := query_str || ' AND item_description LIKE :item_description ';
      END IF;
      --ER(3338592) Changes
      IF inv_mwb_globals.g_tree_subinventory_code IS NOT NULL
      OR inv_mwb_globals.g_subinventory_code IS NOT NULL THEN
        query_str  := query_str || ' AND subinventory_code = :sub ';
      END IF;
      IF inv_mwb_globals.g_serial_controlled = 1 THEN
            query_str  := query_str || ' AND item_serial_control in (1,6) ';
      ELSIF inv_mwb_globals.g_serial_controlled = 2 THEN
        query_str := query_str || ' AND item_serial_control in (2,5) ';
      END IF;
      IF inv_mwb_globals.g_lpn_from IS NOT NULL OR inv_mwb_globals.g_lpn_to IS NOT NULL THEN
         IF inv_mwb_globals.g_lpn_from IS NOT NULL AND inv_mwb_globals.g_lpn_to IS NULL THEN
            query_str  := query_str || ' AND license_plate_number >= :lpn_f ';
          ELSIF inv_mwb_globals.g_lpn_from IS NULL AND inv_mwb_globals.g_lpn_to IS NOT NULL THEN
            query_str  := query_str || ' AND license_plate_number <= :lpn_t ';
          ELSIF inv_mwb_globals.g_lpn_from IS NOT NULL  AND inv_mwb_globals.g_lpn_to IS NOT NULL THEN
            query_str  := query_str || ' AND license_plate_number >= :lpn_f ';
            query_str  := query_str || ' AND license_plate_number <= :lpn_t ';
          END IF;
      END IF;

      IF inv_mwb_globals.g_grade_from_code IS NOT NULL THEN
         query_str := query_str || ' AND grade_code = :grade_f ' ;
      END IF ;

      IF inv_mwb_globals.g_tree_grade_code  IS NOT NULL THEN
         query_str := query_str || ' AND grade_code = :grade_c ' ;
      END IF ;

      query_str := query_str || ' AND grade_code is not NULL ';

      IF inv_mwb_globals.g_tree_organization_id IS NOT NULL
      OR inv_mwb_globals.g_organization_id IS NOT NULL THEN
        query_str  := query_str || ' AND organization_id = :org_id ';
      ELSE
        query_str  := query_str || ' and EXISTS ( SELECT 1 ' ;
        query_str  := query_str || ' FROM org_access_view oav ' ;
        query_str  := query_str || ' WHERE oav.organization_id   = ml.organization_id ' ;
        query_str  := query_str || ' AND oav.responsibility_id   = :responsibility_id ' ;
        query_str  := query_str || ' AND oav.resp_application_id = :resp_application_id ) ' ;
      END IF;

--        query_str := query_str ||  ' ) ' ;  -- new

      query_str  := query_str || ' GROUP BY grade_code ';

   END IF ;

   inv_trx_util_pub.trace( query_str, 'Add-Grades Material Workbench', 9);
   -- execute the query and populate the node table
    inv_mwb_globals.print_msg( g_pkg_name, l_procedure_name, query_str );
    inv_mwb_globals.g_last_query := query_str;
    query_hdl       := DBMS_SQL.open_cursor;
    DBMS_SQL.parse(query_hdl, query_str, DBMS_SQL.native);


   IF inv_mwb_globals.g_grade_from_code IS NOT NULL THEN
      DBMS_SQL.bind_variable(query_hdl, 'grade_f',inv_mwb_globals.g_grade_from_code );
   END IF;

   IF inv_mwb_globals.g_tree_grade_code IS NOT NULL THEN
      DBMS_SQL.bind_variable(query_hdl, 'grade_c', inv_mwb_globals.g_tree_grade_code);
   END IF;

   IF inv_mwb_globals.g_tree_organization_id IS NOT NULL THEN
      DBMS_SQL.bind_variable(query_hdl, 'org_id', inv_mwb_globals.g_tree_organization_id);
   ELSIF inv_mwb_globals.g_organization_id IS NOT NULL THEN
      DBMS_SQL.bind_variable(query_hdl, 'org_id', inv_mwb_globals.g_organization_id);
   END IF;

   IF inv_mwb_globals.g_organization_id IS NULL THEN
      IF inv_mwb_globals.g_responsibility_id  IS NOT NULL THEN
         dbms_sql.bind_variable(query_hdl, 'responsibility_id', inv_mwb_globals.g_responsibility_id );
      END IF;
      IF inv_mwb_globals.g_resp_application_id  IS NOT NULL THEN
         dbms_sql.bind_variable(query_hdl, 'resp_application_id', inv_mwb_globals.g_resp_application_id );
      END IF;
    END IF;

    IF inv_mwb_globals.g_tree_subinventory_code IS NOT NULL THEN
      DBMS_SQL.bind_variable(query_hdl, 'sub', inv_mwb_globals.g_tree_subinventory_code);
    ELSIF inv_mwb_globals.g_subinventory_code IS NOT NULL THEN
      DBMS_SQL.bind_variable(query_hdl, 'sub', inv_mwb_globals.g_subinventory_code);
    END IF;

    IF inv_mwb_globals.g_tree_loc_id IS NOT NULL THEN
      DBMS_SQL.bind_variable(query_hdl, 'loc_id', inv_mwb_globals.g_tree_loc_id);
    ELSIF inv_mwb_globals.g_locator_id IS NOT NULL THEN
      DBMS_SQL.bind_variable(query_hdl, 'loc_id', inv_mwb_globals.g_locator_id);
    END IF;


    IF inv_mwb_globals.g_tree_rev IS NOT NULL THEN
		DBMS_SQL.bind_variable(query_hdl, 'rev', inv_mwb_globals.g_tree_rev);
	 ELSIF inv_mwb_globals.g_revision IS NOT NULL THEN
		DBMS_SQL.bind_variable(query_hdl, 'rev', inv_mwb_globals.g_revision);
	 END IF;

    IF inv_mwb_globals.g_cost_group_id IS NOT NULL THEN
      DBMS_SQL.bind_variable(query_hdl, 'cg_id', inv_mwb_globals.g_cost_group_id);
    END IF;
  --  IF inv_mwb_globals.g_lot_from IS NOT NULL THEN
  --      DBMS_SQL.bind_variable(query_hdl, 'lot_f', inv_mwb_globals.g_lot_from);
  --  END IF;
  --  IF inv_mwb_globals.g_lot_to IS NOT NULL THEN
  --    DBMS_SQL.bind_variable(query_hdl, 'lot_t', inv_mwb_globals.g_lot_to);
  --  END IF;
    IF inv_mwb_globals.g_serial_from IS NOT NULL THEN
      DBMS_SQL.bind_variable(query_hdl, 'serial_f', inv_mwb_globals.g_serial_from);
    END IF;
    IF inv_mwb_globals.g_serial_to IS NOT NULL THEN
      DBMS_SQL.bind_variable(query_hdl, 'serial_t', inv_mwb_globals.g_serial_to);
    END IF;

    --bug 6633612
    IF inv_mwb_globals.g_shipment_header_id IS NOT NULL THEN
      DBMS_SQL.bind_variable(query_hdl, 'shipment_header_id',inv_mwb_globals.g_shipment_header_id );
    END IF;
    --bug 6633612

    IF inv_mwb_globals.g_tree_serial_number IS NOT NULL THEN
      DBMS_SQL.bind_variable(query_hdl, 'serial_n', inv_mwb_globals.g_tree_serial_number);
    END IF;
    IF inv_mwb_globals.g_lpn_from IS NOT NULL THEN
      DBMS_SQL.bind_variable(query_hdl, 'lpn_f', inv_mwb_globals.g_lpn_from);
    END IF;
    IF inv_mwb_globals.g_lpn_to IS NOT NULL THEN
      DBMS_SQL.bind_variable(query_hdl, 'lpn_t', inv_mwb_globals.g_lpn_to);
    END IF;
  --  IF inv_mwb_globals.g_tree_parent_lpn_id IS NOT NULL THEN
  --    DBMS_SQL.bind_variable(query_hdl, 'plpn_id', inv_mwb_globals.g_tree_parent_lpn_id);
  --  END IF;
--    IF inv_mwb_globals.g_status_id IS NOT NULL THEN
--      DBMS_SQL.bind_variable(query_hdl, 'st_id', inv_mwb_globals.g_status_id);
--    END IF;
--    IF inv_mwb_globals.g_prepacked <> 1
--       AND inv_mwb_globals.g_prepacked <> 999 THEN
--      DBMS_SQL.bind_variable(query_hdl, 'prepacked', inv_mwb_globals.g_prepacked);
--    END IF;
--  IF inv_mwb_globals.g_mln_context_code IS NOT NULL THEN
--      DBMS_SQL.bind_variable(query_hdl, 'mln_context', inv_mwb_globals.g_mln_context_code);
--    END IF;
    IF inv_mwb_globals.g_project_id IS NOT NULL THEN
      DBMS_SQL.bind_variable(query_hdl, 'pr_id', inv_mwb_globals.g_project_id);
    END IF;
    IF inv_mwb_globals.g_task_id IS NOT NULL THEN
      DBMS_SQL.bind_variable(query_hdl, 'ta_id', inv_mwb_globals.g_task_id);
    END IF;
--    IF inv_mwb_globals.g_unit_number IS NOT NULL THEN
--      DBMS_SQL.bind_variable(query_hdl, 'un_id', inv_mwb_globals.g_unit_number);
--    END IF;
     IF (inv_mwb_globals.g_owning_qry_mode = 4)
       OR(inv_mwb_globals.g_owning_qry_mode = 3) THEN
      DBMS_SQL.bind_variable(query_hdl, 'own_org', inv_mwb_globals.g_owning_org);
    END IF;
    IF (inv_mwb_globals.g_planning_query_mode = 4)
       OR(inv_mwb_globals.g_planning_query_mode = 3) THEN
      DBMS_SQL.bind_variable(query_hdl, 'plan_org', inv_mwb_globals.g_planning_org);
    END IF;
    --ER(3338592) Changes
    IF inv_mwb_globals.g_item_description IS NOT NULL THEN
       dbms_sql.bind_variable(query_hdl, 'item_description', inv_mwb_globals.g_item_description);
    END IF;
    IF inv_mwb_globals.g_tree_item_id IS NOT NULL THEN
       dbms_sql.bind_variable(query_hdl, 'item_id', inv_mwb_globals.g_tree_item_id);
    ELSIF inv_mwb_globals.g_inventory_item_id IS NOT NULL THEN
       dbms_sql.bind_variable(query_hdl, 'item_id', inv_mwb_globals.g_inventory_item_id);
    END IF;

    -- ER(9158529 client)
    IF inv_mwb_globals.g_client_code IS NOT NULL THEN
      DBMS_SQL.bind_variable(query_hdl, 'client_code', inv_mwb_globals.g_client_code);
    END IF;
    -- ER(9158529 client)

    -- ER(9158529)
    IF inv_mwb_globals.g_category_set_id IS NOT NULL THEN
      DBMS_SQL.bind_variable(query_hdl, 'organization_id', NVL(inv_mwb_globals.g_organization_id, inv_mwb_globals.g_tree_organization_id));
      DBMS_SQL.bind_variable(query_hdl, 'category_set_id', inv_mwb_globals.g_category_set_id);
      DBMS_SQL.bind_variable(query_hdl, 'category_id', inv_mwb_globals.g_category_id);
    END IF;
    -- ER(9158529)

    DBMS_SQL.define_column(query_hdl, 1, grade, 150);
    rows_processed  := DBMS_SQL.EXECUTE(query_hdl);

    --inv_trx_util_pub.trace( 'Material Workbench rows processed  ' || rows_processed, 'Material Workbench', 9);

    LOOP
      -- fetch a row
      IF DBMS_SQL.fetch_rows(query_hdl) > 0 THEN
        -- fetch columns from the row
        DBMS_SQL.column_value(query_hdl, 1, grade);
        IF j >= inv_mwb_globals.g_tree_node_low_value THEN
          x_node_tbl(i).state  := inv_mwb_globals.g_tree_node_state;
          x_node_tbl(i).DEPTH  := 1;
          x_node_tbl(i).label  := substr(grade,1,80);
          x_node_tbl(i).icon   := 'grades_cctitle' ;
          x_node_tbl(i).VALUE  := grade;
          x_node_tbl(i).TYPE   := 'GRADE';
          i                    := i + 1;
        END IF;
        EXIT WHEN j >= inv_mwb_globals.g_tree_node_high_value;
        j  := j + 1;
      ELSE
        EXIT;
      END IF;
    END LOOP;
    DBMS_SQL.close_cursor(query_hdl); -- close cursor
    x_node_value    := j;
    x_tbl_index     := i;
  EXCEPTION
    WHEN NO_DATA_FOUND THEN
      NULL;
    WHEN OTHERS THEN
      RAISE;
  END add_grades ;
  -- NSRIVAST, INVCONV, End

  -- Procedure to get the flexfield structure of mtl_lot_numbers flexfield.
  -- This procedure appends the entries to a table that has
  -- already been populated
  PROCEDURE get_mln_attributes_structure(
    x_attributes       IN OUT NOCOPY inv_lot_sel_attr.lot_sel_attributes_tbl_type
  , x_attributes_count OUT NOCOPY    NUMBER
  , x_return_status    OUT NOCOPY    VARCHAR2
  , x_msg_count        OUT NOCOPY    NUMBER
  , x_msg_data         OUT NOCOPY    NUMBER
 -- , p_mln_context_code IN            VARCHAR2
  ) IS
    -- Cursor to get the segments that are enabled in the given context and
    -- IN the global context
    CURSOR mln_structure IS
      SELECT   fdfcu.form_left_prompt
             , fdfcu.application_column_name
          FROM fnd_descr_flex_col_usage_vl fdfcu, fnd_application_vl fa
         WHERE fdfcu.application_id = fa.application_id
           AND fa.application_short_name = 'INV'
           AND fdfcu.descriptive_flexfield_name = 'MTL_LOT_NUMBERS'
           AND(
               fdfcu.descriptive_flex_context_code IN(
                 SELECT fdfc.descriptive_flex_context_code
                   FROM fnd_descr_flex_contexts_vl fdfc
                  WHERE fdfc.global_flag = 'Y'
                    AND fdfc.descriptive_flexfield_name = 'MTL_LOT_NUMBERS'
                    AND fdfc.application_id = fa.application_id)
               OR fdfcu.descriptive_flex_context_code = inv_mwb_globals.g_mln_context_code
              )
           AND fdfcu.enabled_flag = 'Y'
      ORDER BY fdfcu.column_seq_num;
      l_procedure_name CONSTANT VARCHAR2(30) := 'GET_MLN_ATTRIBUTES_STRUCTURE';
   BEGIN
    inv_mwb_globals.print_msg( g_pkg_name, l_procedure_name, 'Entered' );

    x_return_status     := fnd_api.g_ret_sts_unexp_error;
    x_attributes_count  := x_attributes.COUNT;

    FOR mln_structure_rec IN mln_structure LOOP
      x_attributes_count                            := x_attributes_count + 1;
      x_attributes(x_attributes_count).prompt       := mln_structure_rec.form_left_prompt;
      x_attributes(x_attributes_count).column_type  := 'VARCHAR2';
      x_attributes(x_attributes_count).column_name  := mln_structure_rec.application_column_name;
    END LOOP;

    x_return_status     := fnd_api.g_ret_sts_success;
  END get_mln_attributes_structure;

  -- Procedure to get the values populated in MTL_LOT_NUMBERS of the enabled segments
  -- This procedure appends the entries to a table that has
  -- already been populated
  PROCEDURE get_mln_attributes(
    x_attribute_values  IN OUT NOCOPY inv_lot_sel_attr.lot_sel_attributes_tbl_type
  , x_attribute_prompts IN OUT NOCOPY inv_lot_sel_attr.lot_sel_attributes_tbl_type
  , x_attributes_count  OUT NOCOPY    NUMBER
  , x_return_status     OUT NOCOPY    VARCHAR2
  , x_msg_count         OUT NOCOPY    NUMBER
  , x_msg_data          OUT NOCOPY    NUMBER
/*  , inv_mwb_globals.g_organization_id   IN            NUMBER
  , inv_mwb_globals.g_inventory_item_id IN            NUMBER
  , inv_mwb_globals.g_tree_lot_number        IN            VARCHAR2*/
  ) IS
    -- Cursor to get the segments that are enabled in the given context and
    -- IN the global context
    CURSOR mln_dff_structure/*(inv_mwb_globals.g_mln_context_code VARCHAR2)*/ IS
      SELECT   fdfcu.form_left_prompt
             , fdfcu.application_column_name
          FROM fnd_descr_flex_col_usage_vl fdfcu, fnd_application_vl fa
         WHERE fdfcu.application_id = fa.application_id
           AND fa.application_short_name = 'INV'
           AND fdfcu.descriptive_flexfield_name = 'MTL_LOT_NUMBERS'
           AND(
               fdfcu.descriptive_flex_context_code IN(
                 SELECT fdfc.descriptive_flex_context_code
                   FROM fnd_descr_flex_contexts_vl fdfc
                  WHERE fdfc.global_flag = 'Y'
                    AND fdfc.descriptive_flexfield_name = 'MTL_LOT_NUMBERS'
                    AND fdfc.application_id = fa.application_id)
               OR fdfcu.descriptive_flex_context_code = inv_mwb_globals.g_mln_context_code
              )
           AND fdfcu.enabled_flag = 'Y'
      ORDER BY fdfcu.column_seq_num;

    TYPE l_attribute_type IS TABLE OF mtl_lot_numbers.attribute1%TYPE
      INDEX BY BINARY_INTEGER;

    l_attribute        l_attribute_type;
    l_mln_context_code mtl_lot_numbers.attribute_category%TYPE;
    l_procedure_name CONSTANT VARCHAR2(30) := 'GET_MLN_ATTRIBUTES';
   BEGIN
      inv_mwb_globals.print_msg( g_pkg_name, l_procedure_name, 'Entered' );

    x_return_status     := fnd_api.g_ret_sts_unexp_error;

    SELECT attribute1
         , attribute2
         , attribute3
         , attribute4
         , attribute5
         , attribute6
         , attribute7
         , attribute8
         , attribute9
         , attribute10
         , attribute11
         , attribute12
         , attribute13
         , attribute14
         , attribute15
         , attribute_category
      INTO l_attribute(1)
         , l_attribute(2)
         , l_attribute(3)
         , l_attribute(4)
         , l_attribute(5)
         , l_attribute(6)
         , l_attribute(7)
         , l_attribute(8)
         , l_attribute(9)
         , l_attribute(10)
         , l_attribute(11)
         , l_attribute(12)
         , l_attribute(13)
         , l_attribute(14)
         , l_attribute(15)
         , l_mln_context_code
      FROM mtl_lot_numbers
     WHERE inventory_item_id = inv_mwb_globals.g_inventory_item_id
       AND organization_id = inv_mwb_globals.g_organization_id
       AND lot_number = inv_mwb_globals.g_tree_lot_number;

    x_attributes_count  := x_attribute_values.COUNT;

    FOR mln_dff_structure_rec IN mln_dff_structure /*(l_mln_context_code)*/ LOOP
      x_attributes_count                                   := x_attributes_count + 1;
      x_attribute_prompts(x_attributes_count).prompt       := mln_dff_structure_rec.form_left_prompt;
      x_attribute_prompts(x_attributes_count).column_name  := mln_dff_structure_rec.application_column_name;
      x_attribute_values(x_attributes_count).column_name   := mln_dff_structure_rec.application_column_name;
      x_attribute_values(x_attributes_count).column_value  :=
                                                       l_attribute(TO_NUMBER(SUBSTR(mln_dff_structure_rec.application_column_name, 10, 2)));
    END LOOP;

    x_return_status     := fnd_api.g_ret_sts_success;
  END get_mln_attributes;

  -- Procedure to get the flexfield structure of mtl_lot_numbers flexfield.
  -- This procedure appends the entries to a table that has
  -- already been populated
  PROCEDURE get_msn_attributes_structure(
    x_attributes       IN OUT NOCOPY inv_lot_sel_attr.lot_sel_attributes_tbl_type
  , x_attributes_count OUT NOCOPY    NUMBER
  , x_return_status    OUT NOCOPY    VARCHAR2
  , x_msg_count        OUT NOCOPY    NUMBER
  , x_msg_data         OUT NOCOPY    NUMBER
 -- , inv_mwb_globals.g_msn_context_code IN            VARCHAR2
  ) IS
    -- Cursor to get the segments that are enabled in the given context and
    -- IN the global context
    CURSOR msn_structure IS
      SELECT   fdfcu.form_left_prompt
             , fdfcu.application_column_name
          FROM fnd_descr_flex_col_usage_vl fdfcu, fnd_application_vl fa
         WHERE fdfcu.application_id = fa.application_id
           AND fa.application_short_name = 'INV'
           AND fdfcu.descriptive_flexfield_name = 'MTL_SERIAL_NUMBERS'
           AND(
               fdfcu.descriptive_flex_context_code IN(
                 SELECT fdfc.descriptive_flex_context_code
                   FROM fnd_descr_flex_contexts_vl fdfc
                  WHERE fdfc.global_flag = 'Y'
                    AND fdfc.descriptive_flexfield_name = 'MTL_SERIAL_NUMBERS'
                    AND fdfc.application_id = fa.application_id)
               OR fdfcu.descriptive_flex_context_code = inv_mwb_globals.g_msn_context_code
              )
           AND fdfcu.enabled_flag = 'Y'
      ORDER BY fdfcu.column_seq_num;
        l_procedure_name CONSTANT VARCHAR2(30)  := 'GET_MSN_ATTRIBUTS_STRUCTURE';
   BEGIN
      inv_mwb_globals.print_msg( g_pkg_name, l_procedure_name, 'Entered' );

    x_return_status     := fnd_api.g_ret_sts_unexp_error;
    x_attributes_count  := x_attributes.COUNT;

    FOR msn_structure_rec IN msn_structure LOOP
      x_attributes_count                            := x_attributes_count + 1;
      x_attributes(x_attributes_count).prompt       := msn_structure_rec.form_left_prompt;
      x_attributes(x_attributes_count).column_type  := 'VARCHAR2';
      x_attributes(x_attributes_count).column_name  := msn_structure_rec.application_column_name;
    END LOOP;

    x_return_status     := fnd_api.g_ret_sts_success;
  END get_msn_attributes_structure;

  -- Procedure to get the values populated in MTL_SERIAL_NUMBERS of the enabled segments
  -- This procedure appends the entries to a table that has
  -- already been populated
  PROCEDURE get_msn_attributes(
    x_attribute_values  IN OUT NOCOPY inv_lot_sel_attr.lot_sel_attributes_tbl_type
  , x_attribute_prompts IN OUT NOCOPY inv_lot_sel_attr.lot_sel_attributes_tbl_type
  , x_attributes_count  OUT NOCOPY    NUMBER
  , x_return_status     OUT NOCOPY    VARCHAR2
  , x_msg_count         OUT NOCOPY    NUMBER
  , x_msg_data          OUT NOCOPY    NUMBER
  /*, inv_mwb_globals.g_organization_id   IN            NUMBER
  , inv_mwb_globals.g_inventory_item_id IN            NUMBER
  , inv_mwb_globals.g_tree_serial_number     IN            VARCHAR2*/
  ) IS
    -- Cursor to get the segments that are enabled in the given context and
    -- IN the global context
    CURSOR msn_dff_structure/*(inv_mwb_globals.g_msn_context_code VARCHAR2)*/ IS
      SELECT   fdfcu.form_left_prompt
             , fdfcu.application_column_name
          FROM fnd_descr_flex_col_usage_vl fdfcu, fnd_application_vl fa
         WHERE fdfcu.application_id = fa.application_id
           AND fa.application_short_name = 'INV'
           AND fdfcu.descriptive_flexfield_name = 'MTL_SERIAL_NUMBERS'
           AND(
               fdfcu.descriptive_flex_context_code IN(
                 SELECT fdfc.descriptive_flex_context_code
                   FROM fnd_descr_flex_contexts_vl fdfc
                  WHERE fdfc.global_flag = 'Y'
                    AND fdfc.descriptive_flexfield_name = 'MTL_SERIAL_NUMBERS'
                    AND fdfc.application_id = fa.application_id)
               OR fdfcu.descriptive_flex_context_code = inv_mwb_globals.g_msn_context_code
              )
           AND fdfcu.enabled_flag = 'Y'
      ORDER BY fdfcu.column_seq_num;

    TYPE l_attribute_type IS TABLE OF mtl_serial_numbers.attribute1%TYPE
      INDEX BY BINARY_INTEGER;

    l_attribute        l_attribute_type;
    l_msn_context_code mtl_serial_numbers.attribute_category%TYPE;
        l_procedure_name CONSTANT VARCHAR2(30) := 'GET_MSN_ATTRIBUTE';
   BEGIN
      inv_mwb_globals.print_msg( g_pkg_name, l_procedure_name, 'Entered' );

    x_return_status     := fnd_api.g_ret_sts_unexp_error;

    SELECT attribute1
         , attribute2
         , attribute3
         , attribute4
         , attribute5
         , attribute6
         , attribute7
         , attribute8
         , attribute9
         , attribute10
         , attribute11
         , attribute12
         , attribute13
         , attribute14
         , attribute15
         , attribute_category
      INTO l_attribute(1)
         , l_attribute(2)
         , l_attribute(3)
         , l_attribute(4)
         , l_attribute(5)
         , l_attribute(6)
         , l_attribute(7)
         , l_attribute(8)
         , l_attribute(9)
         , l_attribute(10)
         , l_attribute(11)
         , l_attribute(12)
         , l_attribute(13)
         , l_attribute(14)
         , l_attribute(15)
         , l_msn_context_code
      FROM mtl_serial_numbers
     WHERE inventory_item_id = inv_mwb_globals.g_inventory_item_id
       AND current_organization_id = inv_mwb_globals.g_organization_id
       AND serial_number = inv_mwb_globals.g_tree_serial_number;

    x_attributes_count  := x_attribute_values.COUNT;

    FOR msn_dff_structure_rec IN msn_dff_structure /*(l_msn_context_code)*/ LOOP
      x_attributes_count                                   := x_attributes_count + 1;
      x_attribute_prompts(x_attributes_count).prompt       := msn_dff_structure_rec.form_left_prompt;
      x_attribute_prompts(x_attributes_count).column_name  := msn_dff_structure_rec.application_column_name;
      x_attribute_values(x_attributes_count).column_name   := msn_dff_structure_rec.application_column_name;
      x_attribute_values(x_attributes_count).column_value  :=
                                                       l_attribute(TO_NUMBER(SUBSTR(msn_dff_structure_rec.application_column_name, 10, 2)));
    END LOOP;

    x_return_status     := fnd_api.g_ret_sts_success;
  END get_msn_attributes;

  FUNCTION GET_ITEM(P_ITEM_ID IN NUMBER, P_ORG_ID IN NUMBER) RETURN VARCHAR2 IS		-- Bug 6350236 Starting
       I_CC_ID_RET  BOOLEAN;
       l_org_id	 NUMBER;
       l_item_name	 VARCHAR2(1000) := NULL;
  BEGIN
	IF p_item_id is NULL then
		RETURN NULL;
	END IF;

	IF p_org_id is NULL then
	   BEGIN
		SELECT	organization_id into l_org_id
		FROM	mtl_system_items
		WHERE	inventory_item_id = p_item_id
		AND	rownum = 1;
	   EXCEPTION
	      WHEN NO_DATA_FOUND THEN
		RETURN NULL;
	   END;
	ELSE
		l_org_id := p_org_id;
	END IF;

	I_CC_ID_RET := FND_FLEX_KEYVAL.VALIDATE_CCID(
                               APPL_SHORT_NAME       => 'INV',
                               KEY_FLEX_CODE         => 'MSTK',
                               STRUCTURE_NUMBER      => 101,
                               COMBINATION_ID        => p_item_id,
                               DATA_SET              => l_org_id,
			       RESP_APPL_ID          => 401);
	IF I_CC_ID_RET THEN
		l_item_name := FND_FLEX_KEYVAL.CONCATENATED_VALUES;
	END IF;

        return l_item_name;
  EXCEPTION
      WHEN OTHERS THEN
         RETURN NULL;
  END GET_ITEM;										-- Bug 6350236 Ending

END inv_mwb_tree1;

/
