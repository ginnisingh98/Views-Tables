--------------------------------------------------------
--  DDL for Package Body WMS_CROSSDOCK_CRITERIA_PKG
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE PACKAGE BODY "APPS"."WMS_CROSSDOCK_CRITERIA_PKG" as
/* $Header: WMSXDCRB.pls 120.0 2005/05/25 09:01:34 appldev noship $ */
procedure INSERT_ROW (
  X_ROWID in out nocopy VARCHAR2,
  X_CRITERION_ID in NUMBER,
  X_CRITERION_TYPE in NUMBER,
  X_WINDOW_INTERVAL in NUMBER,
  X_WINDOW_UOM in VARCHAR2,
  X_BUFFER_INTERVAL in NUMBER,
  X_BUFFER_UOM in VARCHAR2,
  X_PROCESSING_INTERVAL in NUMBER,
  X_PROCESSING_UOM in VARCHAR2,
  X_PAST_DUE_INTERVAL in NUMBER,
  X_PAST_DUE_UOM in VARCHAR2,
  X_CROSSDOCK_GOAL in NUMBER,
  X_PRIORITIZE_DOCUMENTS_FLAG in NUMBER,
  X_UOM_INTEGRITY_FLAG in NUMBER,
  X_ALLOW_DEMAND_RESCHEDULE_FLAG in NUMBER,
  X_ALLOW_SUPPLY_RESCHEDULE_FLAG in NUMBER,
  X_DEMAND_SCHEDULE_METHOD in NUMBER,
  X_SUPPLY_SCHEDULE_METHOD in NUMBER,
  X_CRITERION_NAME in VARCHAR2,
  X_DESCRIPTION in VARCHAR2,
  X_CREATION_DATE in DATE,
  X_CREATED_BY in NUMBER,
  X_LAST_UPDATE_DATE in DATE,
  X_LAST_UPDATED_BY in NUMBER,
  X_LAST_UPDATE_LOGIN in NUMBER
) is
  cursor C is select ROWID from WMS_CROSSDOCK_CRITERIA_B
    where CRITERION_ID = X_CRITERION_ID
    ;
begin
  insert into WMS_CROSSDOCK_CRITERIA_B (
    CRITERION_ID,
    CRITERION_TYPE,
    WINDOW_INTERVAL,
    WINDOW_UOM,
    BUFFER_INTERVAL,
    BUFFER_UOM,
    PROCESSING_INTERVAL,
    PROCESSING_UOM,
    PAST_DUE_INTERVAL,
    PAST_DUE_UOM,
    CROSSDOCK_GOAL,
    PRIORITIZE_DOCUMENTS_FLAG,
    UOM_INTEGRITY_FLAG,
    ALLOW_DEMAND_RESCHEDULE_FLAG,
    ALLOW_SUPPLY_RESCHEDULE_FLAG,
    DEMAND_SCHEDULE_METHOD,
    SUPPLY_SCHEDULE_METHOD,
    CREATION_DATE,
    CREATED_BY,
    LAST_UPDATE_DATE,
    LAST_UPDATED_BY,
    LAST_UPDATE_LOGIN
  ) values (
    X_CRITERION_ID,
    X_CRITERION_TYPE,
    X_WINDOW_INTERVAL,
    X_WINDOW_UOM,
    X_BUFFER_INTERVAL,
    X_BUFFER_UOM,
    X_PROCESSING_INTERVAL,
    X_PROCESSING_UOM,
    X_PAST_DUE_INTERVAL,
    X_PAST_DUE_UOM,
    X_CROSSDOCK_GOAL,
    X_PRIORITIZE_DOCUMENTS_FLAG,
    X_UOM_INTEGRITY_FLAG,
    X_ALLOW_DEMAND_RESCHEDULE_FLAG,
    X_ALLOW_SUPPLY_RESCHEDULE_FLAG,
    X_DEMAND_SCHEDULE_METHOD,
    X_SUPPLY_SCHEDULE_METHOD,
    X_CREATION_DATE,
    X_CREATED_BY,
    X_LAST_UPDATE_DATE,
    X_LAST_UPDATED_BY,
    X_LAST_UPDATE_LOGIN
  );

  insert into WMS_CROSSDOCK_CRITERIA_TL (
    CRITERION_ID,
    LAST_UPDATED_BY,
    LAST_UPDATE_DATE,
    CREATED_BY,
    CREATION_DATE,
    LAST_UPDATE_LOGIN,
    CRITERION_NAME,
    DESCRIPTION,
    LANGUAGE,
    SOURCE_LANG
  ) select
    X_CRITERION_ID,
    X_LAST_UPDATED_BY,
    X_LAST_UPDATE_DATE,
    X_CREATED_BY,
    X_CREATION_DATE,
    X_LAST_UPDATE_LOGIN,
    X_CRITERION_NAME,
    X_DESCRIPTION,
    L.LANGUAGE_CODE,
    userenv('LANG')
  from FND_LANGUAGES L
  where L.INSTALLED_FLAG in ('I', 'B')
  and not exists
    (select NULL
    from WMS_CROSSDOCK_CRITERIA_TL T
    where T.CRITERION_ID = X_CRITERION_ID
    and T.LANGUAGE = L.LANGUAGE_CODE);

  open c;
  fetch c into X_ROWID;
  if (c%notfound) then
    close c;
    raise no_data_found;
  end if;
  close c;

end INSERT_ROW;

procedure LOCK_ROW (
  X_CRITERION_ID in NUMBER,
  X_CRITERION_TYPE in NUMBER,
  X_WINDOW_INTERVAL in NUMBER,
  X_WINDOW_UOM in VARCHAR2,
  X_BUFFER_INTERVAL in NUMBER,
  X_BUFFER_UOM in VARCHAR2,
  X_PROCESSING_INTERVAL in NUMBER,
  X_PROCESSING_UOM in VARCHAR2,
  X_PAST_DUE_INTERVAL in NUMBER,
  X_PAST_DUE_UOM in VARCHAR2,
  X_CROSSDOCK_GOAL in NUMBER,
  X_PRIORITIZE_DOCUMENTS_FLAG in NUMBER,
  X_UOM_INTEGRITY_FLAG in NUMBER,
  X_ALLOW_DEMAND_RESCHEDULE_FLAG in NUMBER,
  X_ALLOW_SUPPLY_RESCHEDULE_FLAG in NUMBER,
  X_DEMAND_SCHEDULE_METHOD in NUMBER,
  X_SUPPLY_SCHEDULE_METHOD in NUMBER,
  X_CRITERION_NAME in VARCHAR2,
  X_DESCRIPTION in VARCHAR2
) is
  cursor c is select
      CRITERION_TYPE,
      WINDOW_INTERVAL,
      WINDOW_UOM,
      BUFFER_INTERVAL,
      BUFFER_UOM,
      PROCESSING_INTERVAL,
      PROCESSING_UOM,
      PAST_DUE_INTERVAL,
      PAST_DUE_UOM,
      CROSSDOCK_GOAL,
      PRIORITIZE_DOCUMENTS_FLAG,
      UOM_INTEGRITY_FLAG,
      ALLOW_DEMAND_RESCHEDULE_FLAG,
      ALLOW_SUPPLY_RESCHEDULE_FLAG,
      DEMAND_SCHEDULE_METHOD,
      SUPPLY_SCHEDULE_METHOD
    from WMS_CROSSDOCK_CRITERIA_B
    where CRITERION_ID = X_CRITERION_ID
    for update of CRITERION_ID nowait;
  recinfo c%rowtype;

  cursor c1 is select
      CRITERION_NAME,
      DESCRIPTION,
      decode(LANGUAGE, userenv('LANG'), 'Y', 'N') BASELANG
    from WMS_CROSSDOCK_CRITERIA_TL
    where CRITERION_ID = X_CRITERION_ID
    and userenv('LANG') in (LANGUAGE, SOURCE_LANG)
    for update of CRITERION_ID nowait;
begin
  open c;
  fetch c into recinfo;
  if (c%notfound) then
    close c;
    fnd_message.set_name('FND', 'FORM_RECORD_DELETED');
    app_exception.raise_exception;
  end if;
  close c;
  if (    (recinfo.CRITERION_TYPE = X_CRITERION_TYPE)
      AND (recinfo.WINDOW_INTERVAL = X_WINDOW_INTERVAL)
      AND (recinfo.WINDOW_UOM = X_WINDOW_UOM)
      AND ((recinfo.BUFFER_INTERVAL = X_BUFFER_INTERVAL)
           OR ((recinfo.BUFFER_INTERVAL is null) AND (X_BUFFER_INTERVAL is null)))
      AND ((recinfo.BUFFER_UOM = X_BUFFER_UOM)
           OR ((recinfo.BUFFER_UOM is null) AND (X_BUFFER_UOM is null)))
      AND ((recinfo.PROCESSING_INTERVAL = X_PROCESSING_INTERVAL)
           OR ((recinfo.PROCESSING_INTERVAL is null) AND (X_PROCESSING_INTERVAL is null)))
      AND ((recinfo.PROCESSING_UOM = X_PROCESSING_UOM)
           OR ((recinfo.PROCESSING_UOM is null) AND (X_PROCESSING_UOM is null)))
      AND ((recinfo.PAST_DUE_INTERVAL = X_PAST_DUE_INTERVAL)
           OR ((recinfo.PAST_DUE_INTERVAL is null) AND (X_PAST_DUE_INTERVAL is null)))
      AND ((recinfo.PAST_DUE_UOM = X_PAST_DUE_UOM)
           OR ((recinfo.PAST_DUE_UOM is null) AND (X_PAST_DUE_UOM is null)))
      AND (recinfo.CROSSDOCK_GOAL = X_CROSSDOCK_GOAL)
      AND (recinfo.PRIORITIZE_DOCUMENTS_FLAG = X_PRIORITIZE_DOCUMENTS_FLAG)
      AND (recinfo.UOM_INTEGRITY_FLAG = X_UOM_INTEGRITY_FLAG)
      AND (recinfo.ALLOW_DEMAND_RESCHEDULE_FLAG = X_ALLOW_DEMAND_RESCHEDULE_FLAG)
      AND (recinfo.ALLOW_SUPPLY_RESCHEDULE_FLAG = X_ALLOW_SUPPLY_RESCHEDULE_FLAG)
      AND (recinfo.DEMAND_SCHEDULE_METHOD = X_DEMAND_SCHEDULE_METHOD)
      AND (recinfo.SUPPLY_SCHEDULE_METHOD = X_SUPPLY_SCHEDULE_METHOD)
  ) then
    null;
  else
    fnd_message.set_name('FND', 'FORM_RECORD_CHANGED');
    app_exception.raise_exception;
  end if;

  for tlinfo in c1 loop
    if (tlinfo.BASELANG = 'Y') then
      if (    (tlinfo.CRITERION_NAME = X_CRITERION_NAME)
          AND ((tlinfo.DESCRIPTION = X_DESCRIPTION)
               OR ((tlinfo.DESCRIPTION is null) AND (X_DESCRIPTION is null)))
      ) then
        null;
      else
        fnd_message.set_name('FND', 'FORM_RECORD_CHANGED');
        app_exception.raise_exception;
      end if;
    end if;
  end loop;
  return;
end LOCK_ROW;

procedure UPDATE_ROW (
  X_CRITERION_ID in NUMBER,
  X_CRITERION_TYPE in NUMBER,
  X_WINDOW_INTERVAL in NUMBER,
  X_WINDOW_UOM in VARCHAR2,
  X_BUFFER_INTERVAL in NUMBER,
  X_BUFFER_UOM in VARCHAR2,
  X_PROCESSING_INTERVAL in NUMBER,
  X_PROCESSING_UOM in VARCHAR2,
  X_PAST_DUE_INTERVAL in NUMBER,
  X_PAST_DUE_UOM in VARCHAR2,
  X_CROSSDOCK_GOAL in NUMBER,
  X_PRIORITIZE_DOCUMENTS_FLAG in NUMBER,
  X_UOM_INTEGRITY_FLAG in NUMBER,
  X_ALLOW_DEMAND_RESCHEDULE_FLAG in NUMBER,
  X_ALLOW_SUPPLY_RESCHEDULE_FLAG in NUMBER,
  X_DEMAND_SCHEDULE_METHOD in NUMBER,
  X_SUPPLY_SCHEDULE_METHOD in NUMBER,
  X_CRITERION_NAME in VARCHAR2,
  X_DESCRIPTION in VARCHAR2,
  X_LAST_UPDATE_DATE in DATE,
  X_LAST_UPDATED_BY in NUMBER,
  X_LAST_UPDATE_LOGIN in NUMBER
) is
begin
  update WMS_CROSSDOCK_CRITERIA_B set
    CRITERION_TYPE = X_CRITERION_TYPE,
    WINDOW_INTERVAL = X_WINDOW_INTERVAL,
    WINDOW_UOM = X_WINDOW_UOM,
    BUFFER_INTERVAL = X_BUFFER_INTERVAL,
    BUFFER_UOM = X_BUFFER_UOM,
    PROCESSING_INTERVAL = X_PROCESSING_INTERVAL,
    PROCESSING_UOM = X_PROCESSING_UOM,
    PAST_DUE_INTERVAL = X_PAST_DUE_INTERVAL,
    PAST_DUE_UOM = X_PAST_DUE_UOM,
    CROSSDOCK_GOAL = X_CROSSDOCK_GOAL,
    PRIORITIZE_DOCUMENTS_FLAG = X_PRIORITIZE_DOCUMENTS_FLAG,
    UOM_INTEGRITY_FLAG = X_UOM_INTEGRITY_FLAG,
    ALLOW_DEMAND_RESCHEDULE_FLAG = X_ALLOW_DEMAND_RESCHEDULE_FLAG,
    ALLOW_SUPPLY_RESCHEDULE_FLAG = X_ALLOW_SUPPLY_RESCHEDULE_FLAG,
    DEMAND_SCHEDULE_METHOD = X_DEMAND_SCHEDULE_METHOD,
    SUPPLY_SCHEDULE_METHOD = X_SUPPLY_SCHEDULE_METHOD,
    LAST_UPDATE_DATE = X_LAST_UPDATE_DATE,
    LAST_UPDATED_BY = X_LAST_UPDATED_BY,
    LAST_UPDATE_LOGIN = X_LAST_UPDATE_LOGIN
  where CRITERION_ID = X_CRITERION_ID;

  if (sql%notfound) then
    raise no_data_found;
  end if;

  update WMS_CROSSDOCK_CRITERIA_TL set
    CRITERION_NAME = X_CRITERION_NAME,
    DESCRIPTION = X_DESCRIPTION,
    LAST_UPDATE_DATE = X_LAST_UPDATE_DATE,
    LAST_UPDATED_BY = X_LAST_UPDATED_BY,
    LAST_UPDATE_LOGIN = X_LAST_UPDATE_LOGIN,
    SOURCE_LANG = userenv('LANG')
  where CRITERION_ID = X_CRITERION_ID
  and userenv('LANG') in (LANGUAGE, SOURCE_LANG);

  if (sql%notfound) then
    raise no_data_found;
  end if;
end UPDATE_ROW;

procedure DELETE_ROW (
  X_CRITERION_ID in NUMBER
) is
begin
  delete from WMS_CROSSDOCK_CRITERIA_TL
  where CRITERION_ID = X_CRITERION_ID;

  if (sql%notfound) then
    raise no_data_found;
  end if;

  delete from WMS_CROSSDOCK_CRITERIA_B
  where CRITERION_ID = X_CRITERION_ID;

  if (sql%notfound) then
    raise no_data_found;
  end if;
end DELETE_ROW;

procedure ADD_LANGUAGE
is
begin
  delete from WMS_CROSSDOCK_CRITERIA_TL T
  where not exists
    (select NULL
    from WMS_CROSSDOCK_CRITERIA_B B
    where B.CRITERION_ID = T.CRITERION_ID
    );

  update WMS_CROSSDOCK_CRITERIA_TL T set (
      CRITERION_NAME,
      DESCRIPTION
    ) = (select
      B.CRITERION_NAME,
      B.DESCRIPTION
    from WMS_CROSSDOCK_CRITERIA_TL B
    where B.CRITERION_ID = T.CRITERION_ID
    and B.LANGUAGE = T.SOURCE_LANG)
  where (
      T.CRITERION_ID,
      T.LANGUAGE
  ) in (select
      SUBT.CRITERION_ID,
      SUBT.LANGUAGE
    from WMS_CROSSDOCK_CRITERIA_TL SUBB, WMS_CROSSDOCK_CRITERIA_TL SUBT
    where SUBB.CRITERION_ID = SUBT.CRITERION_ID
    and SUBB.LANGUAGE = SUBT.SOURCE_LANG
    and (SUBB.CRITERION_NAME <> SUBT.CRITERION_NAME
      or SUBB.DESCRIPTION <> SUBT.DESCRIPTION
      or (SUBB.DESCRIPTION is null and SUBT.DESCRIPTION is not null)
      or (SUBB.DESCRIPTION is not null and SUBT.DESCRIPTION is null)
  ));

  insert into WMS_CROSSDOCK_CRITERIA_TL (
    CRITERION_ID,
    LAST_UPDATED_BY,
    LAST_UPDATE_DATE,
    CREATED_BY,
    CREATION_DATE,
    LAST_UPDATE_LOGIN,
    CRITERION_NAME,
    DESCRIPTION,
    LANGUAGE,
    SOURCE_LANG
  ) select /*+ ORDERED */
    B.CRITERION_ID,
    B.LAST_UPDATED_BY,
    B.LAST_UPDATE_DATE,
    B.CREATED_BY,
    B.CREATION_DATE,
    B.LAST_UPDATE_LOGIN,
    B.CRITERION_NAME,
    B.DESCRIPTION,
    L.LANGUAGE_CODE,
    B.SOURCE_LANG
  from WMS_CROSSDOCK_CRITERIA_TL B, FND_LANGUAGES L
  where L.INSTALLED_FLAG in ('I', 'B')
  and B.LANGUAGE = userenv('LANG')
  and not exists
    (select NULL
    from WMS_CROSSDOCK_CRITERIA_TL T
    where T.CRITERION_ID = B.CRITERION_ID
    and T.LANGUAGE = L.LANGUAGE_CODE);
end ADD_LANGUAGE;

end WMS_CROSSDOCK_CRITERIA_PKG;

/
