--------------------------------------------------------
--  DDL for Package Body QP_QUALIFIER_PVT
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE PACKAGE BODY "APPS"."QP_QUALIFIER_PVT" as
/* $Header: QPXVQFRB.pls 115.0 99/10/14 18:54:42 porting ship   $ */

PROCEDURE Insert_Row(
  X_QUALIFIER_ID            IN OUT NUMBER
, X_CREATION_DATE                  DATE
, X_CREATED_BY                     NUMBER
, X_LAST_UPDATE_DATE               DATE
, X_LAST_UPDATED_BY                NUMBER
, X_LAST_UPDATE_LOGIN              NUMBER
, X_PROGRAM_APPLICATION_ID         NUMBER
, X_PROGRAM_ID                     NUMBER
, X_PROGRAM_UPDATE_DATE            DATE
, X_REQUEST_ID                     NUMBER
, X_EXCLUDER_FLAG                  VARCHAR2
, X_COMPARISON_OPERATOR_CODE       VARCHAR2
, X_QUALIFIER_CONTEXT              VARCHAR2
, X_QUALIFIER_ATTRIBUTE            VARCHAR2
, X_QUALIFIER_RULE_ID              NUMBER
, X_QUALIFIER_GROUPING_NO          NUMBER
, X_QUALIFIER_ATTR_VALUE           VARCHAR2
, X_LIST_HEADER_ID                 NUMBER
, X_LIST_LINE_ID                   NUMBER
, X_CREATED_FROM_RULE_ID           NUMBER
, X_START_DATE_ACTIVE              DATE
, X_END_DATE_ACTIVE                DATE
, X_CONTEXT                        VARCHAR2
, X_ATTRIBUTE1                     VARCHAR2
, X_ATTRIBUTE2                     VARCHAR2
, X_ATTRIBUTE3                     VARCHAR2
, X_ATTRIBUTE4                     VARCHAR2
, X_ATTRIBUTE5                     VARCHAR2
, X_ATTRIBUTE6                     VARCHAR2
, X_ATTRIBUTE7                     VARCHAR2
, X_ATTRIBUTE8                     VARCHAR2
, X_ATTRIBUTE9                     VARCHAR2
, X_ATTRIBUTE10                    VARCHAR2
, X_ATTRIBUTE11                    VARCHAR2
, X_ATTRIBUTE12                    VARCHAR2
, X_ATTRIBUTE13                    VARCHAR2
, X_ATTRIBUTE14                    VARCHAR2
, X_ATTRIBUTE15                    VARCHAR2
) IS

cursor C is select QUALIFIER_ID from QP_QUALIFIERS
		where QUALIFIER_ID = X_QUALIFIER_ID;



BEGIN


insert into QP_QUALIFIERS
(
  QUALIFIER_ID
, CREATION_DATE
, CREATED_BY
, LAST_UPDATE_DATE
, LAST_UPDATED_BY
, LAST_UPDATE_LOGIN
, PROGRAM_APPLICATION_ID
, PROGRAM_ID
, PROGRAM_UPDATE_DATE
, REQUEST_ID
, EXCLUDER_FLAG
, COMPARISON_OPERATOR_CODE
, QUALIFIER_CONTEXT
, QUALIFIER_ATTRIBUTE
, QUALIFIER_RULE_ID
, QUALIFIER_GROUPING_NO
, QUALIFIER_ATTR_VALUE
, LIST_HEADER_ID
, LIST_LINE_ID
, CREATED_FROM_RULE_ID
, START_DATE_ACTIVE
, END_DATE_ACTIVE
, CONTEXT
, ATTRIBUTE1
, ATTRIBUTE2
, ATTRIBUTE3
, ATTRIBUTE4
, ATTRIBUTE5
, ATTRIBUTE6
, ATTRIBUTE7
, ATTRIBUTE8
, ATTRIBUTE9
, ATTRIBUTE10
, ATTRIBUTE11
, ATTRIBUTE12
, ATTRIBUTE13
, ATTRIBUTE14
, ATTRIBUTE15
)
values
(
  X_QUALIFIER_ID
, X_CREATION_DATE
, X_CREATED_BY
, X_LAST_UPDATE_DATE
, X_LAST_UPDATED_BY
, X_LAST_UPDATE_LOGIN
, X_PROGRAM_APPLICATION_ID
, X_PROGRAM_ID
, X_PROGRAM_UPDATE_DATE
, X_REQUEST_ID
, X_EXCLUDER_FLAG
, X_COMPARISON_OPERATOR_CODE
, X_QUALIFIER_CONTEXT
, X_QUALIFIER_ATTRIBUTE
, X_QUALIFIER_RULE_ID
, X_QUALIFIER_GROUPING_NO
, X_QUALIFIER_ATTR_VALUE
, X_LIST_HEADER_ID
, X_LIST_LINE_ID
, X_CREATED_FROM_RULE_ID
, X_START_DATE_ACTIVE
, X_END_DATE_ACTIVE
, X_CONTEXT
, X_ATTRIBUTE1
, X_ATTRIBUTE2
, X_ATTRIBUTE3
, X_ATTRIBUTE4
, X_ATTRIBUTE5
, X_ATTRIBUTE6
, X_ATTRIBUTE7
, X_ATTRIBUTE8
, X_ATTRIBUTE9
, X_ATTRIBUTE10
, X_ATTRIBUTE11
, X_ATTRIBUTE12
, X_ATTRIBUTE13
, X_ATTRIBUTE14
, X_ATTRIBUTE15
);

open C;

fetch C into X_QUALIFIER_ID;
if (C%notfound) then
close C;
raise NO_DATA_FOUND;
end if;
close C;
end Insert_Row;

PROCEDURE Lock_Row(
  X_QUALIFIER_ID            IN OUT NUMBER
, X_CREATION_DATE                  DATE
, X_CREATED_BY                     NUMBER
, X_LAST_UPDATE_DATE               DATE
, X_LAST_UPDATED_BY                NUMBER
, X_LAST_UPDATE_LOGIN              NUMBER
, X_PROGRAM_APPLICATION_ID         NUMBER
, X_PROGRAM_ID                     NUMBER
, X_PROGRAM_UPDATE_DATE            DATE
, X_REQUEST_ID                     NUMBER
, X_EXCLUDER_FLAG                  VARCHAR2
, X_COMPARISON_OPERATOR_CODE       VARCHAR2
, X_QUALIFIER_CONTEXT              VARCHAR2
, X_QUALIFIER_ATTRIBUTE            VARCHAR2
, X_QUALIFIER_RULE_ID              NUMBER
, X_QUALIFIER_GROUPING_NO          NUMBER
, X_QUALIFIER_ATTR_VALUE           VARCHAR2
, X_LIST_HEADER_ID                 NUMBER
, X_LIST_LINE_ID                   NUMBER
, X_CREATED_FROM_RULE_ID           NUMBER
, X_START_DATE_ACTIVE              DATE
, X_END_DATE_ACTIVE                DATE
, X_CONTEXT                        VARCHAR2
, X_ATTRIBUTE1                     VARCHAR2
, X_ATTRIBUTE2                     VARCHAR2
, X_ATTRIBUTE3                     VARCHAR2
, X_ATTRIBUTE4                     VARCHAR2
, X_ATTRIBUTE5                     VARCHAR2
, X_ATTRIBUTE6                     VARCHAR2
, X_ATTRIBUTE7                     VARCHAR2
, X_ATTRIBUTE8                     VARCHAR2
, X_ATTRIBUTE9                     VARCHAR2
, X_ATTRIBUTE10                    VARCHAR2
, X_ATTRIBUTE11                    VARCHAR2
, X_ATTRIBUTE12                    VARCHAR2
, X_ATTRIBUTE13                    VARCHAR2
, X_ATTRIBUTE14                    VARCHAR2
, X_ATTRIBUTE15                    VARCHAR2
) IS


cursor C is select * from QP_QUALIFIERS
	where QUALIFIER_ID = X_QUALIFIER_ID
	for update of QUALIFIER_ID nowait;
Recinfo C%ROWTYPE;


BEGIN

open C;

fetch C into Recinfo;

if (C%notfound) then

close C;
FND_MESSAGE.Set_Name('FND','FORM_RECORD_DELETED');
APP_EXCEPTION.Raise_Exception;

end if;

close C;

if (
( Recinfo.QUALIFIER_ID =  X_QUALIFIER_ID )
AND ( Recinfo.LIST_HEADER_ID =  X_LIST_HEADER_ID )

AND (   ( Recinfo.CREATION_DATE = X_CREATION_DATE )
	OR ( (Recinfo.CREATION_DATE IS NULL)
	AND (X_CREATION_DATE IS NULL)))

AND (   ( Recinfo.CREATED_BY = X_CREATED_BY)
	OR ( (Recinfo.CREATED_BY IS NULL)
	AND (X_CREATED_BY IS NULL)))

AND (   ( Recinfo.LAST_UPDATE_DATE = X_LAST_UPDATE_DATE)
	OR ( (Recinfo.LAST_UPDATE_DATE IS NULL)
	AND (X_LAST_UPDATE_DATE IS NULL)))

AND (   ( Recinfo.LAST_UPDATED_BY = X_LAST_UPDATED_BY)
	OR ( (Recinfo.LAST_UPDATED_BY IS NULL)
	AND (X_LAST_UPDATED_BY IS NULL)))

AND (   ( Recinfo.LAST_UPDATE_LOGIN = X_LAST_UPDATE_LOGIN)
	OR ( (Recinfo.LAST_UPDATE_LOGIN IS NULL)
	AND (X_LAST_UPDATE_LOGIN IS NULL)))

AND (   ( Recinfo.PROGRAM_APPLICATION_ID = X_PROGRAM_APPLICATION_ID)
	OR ( (Recinfo.PROGRAM_APPLICATION_ID IS NULL)
		AND (X_PROGRAM_APPLICATION_ID IS NULL)))

AND (   ( Recinfo.PROGRAM_ID = X_PROGRAM_ID)
	OR ( (Recinfo.PROGRAM_ID IS NULL)
		AND (X_PROGRAM_ID IS NULL)))

AND (   ( Recinfo.PROGRAM_UPDATE_DATE = X_PROGRAM_UPDATE_DATE)
	OR ( (Recinfo.PROGRAM_UPDATE_DATE IS NULL)
		AND (X_PROGRAM_UPDATE_DATE IS NULL)))

AND (   ( Recinfo.REQUEST_ID = X_REQUEST_ID )
	OR ( (Recinfo.REQUEST_ID IS NULL)
		AND (X_REQUEST_ID IS NULL)))

AND (   ( Recinfo.EXCLUDER_FLAG = X_EXCLUDER_FLAG)
	OR ( (Recinfo.EXCLUDER_FLAG IS NULL)
		AND (X_EXCLUDER_FLAG IS NULL)))

AND (   ( Recinfo.COMPARISON_OPERATOR_CODE = X_COMPARISON_OPERATOR_CODE )
	OR ( (Recinfo.COMPARISON_OPERATOR_CODE IS NULL)
		AND (X_COMPARISON_OPERATOR_CODE IS NULL)))

AND (   ( Recinfo.QUALIFIER_CONTEXT = X_QUALIFIER_CONTEXT )
	OR ( (Recinfo.QUALIFIER_CONTEXT IS NULL)
		AND (X_QUALIFIER_CONTEXT IS NULL)))

AND (   ( Recinfo.QUALIFIER_ATTRIBUTE = X_QUALIFIER_ATTRIBUTE )
	OR ( (Recinfo.QUALIFIER_ATTRIBUTE IS NULL)
		AND (X_QUALIFIER_ATTRIBUTE IS NULL)))

AND (   ( Recinfo.QUALIFIER_RULE_ID = X_QUALIFIER_RULE_ID )
	OR ( (Recinfo.QUALIFIER_RULE_ID IS NULL)
		AND (X_QUALIFIER_RULE_ID IS NULL)))

AND (   ( Recinfo.QUALIFIER_GROUPING_NO = X_QUALIFIER_GROUPING_NO )
	OR ( (Recinfo.QUALIFIER_GROUPING_NO IS NULL)
		AND (X_QUALIFIER_GROUPING_NO IS NULL)))

AND (   ( Recinfo.QUALIFIER_ATTR_VALUE = X_QUALIFIER_ATTR_VALUE )
	OR ( (Recinfo.QUALIFIER_ATTR_VALUE IS NULL)
		AND (X_QUALIFIER_ATTR_VALUE IS NULL)))

AND (   ( Recinfo.LIST_LINE_ID = X_LIST_LINE_ID )
	OR ( (Recinfo.LIST_LINE_ID IS NULL)
		AND (X_LIST_LINE_ID IS NULL)))

AND (   ( Recinfo.CREATED_FROM_RULE_ID = X_CREATED_FROM_RULE_ID )
	OR ( (Recinfo.CREATED_FROM_RULE_ID IS NULL)
		AND (X_CREATED_FROM_RULE_ID IS NULL)))

AND (   ( Recinfo.START_DATE_ACTIVE = X_START_DATE_ACTIVE )
	OR ( (Recinfo.START_DATE_ACTIVE IS NULL)
		AND (X_START_DATE_ACTIVE IS NULL)))

AND (   ( Recinfo.END_DATE_ACTIVE = X_END_DATE_ACTIVE )
	OR ( (Recinfo.END_DATE_ACTIVE IS NULL)
		AND (X_END_DATE_ACTIVE IS NULL)))

AND (   ( Recinfo.CONTEXT = X_CONTEXT )
	OR ( (Recinfo.CONTEXT IS NULL)
		AND (X_CONTEXT IS NULL)))

AND (   ( Recinfo.ATTRIBUTE1 = X_ATTRIBUTE1 )
	OR ( (Recinfo.ATTRIBUTE1 IS NULL)
		AND (X_ATTRIBUTE1 IS NULL)))

AND (   ( Recinfo.ATTRIBUTE2 = X_ATTRIBUTE2 )
	OR ( (Recinfo.ATTRIBUTE2 IS NULL)
		AND (X_ATTRIBUTE2 IS NULL)))

AND (   ( Recinfo.ATTRIBUTE3 = X_ATTRIBUTE3 )
	OR ( (Recinfo.ATTRIBUTE3 IS NULL)
		AND (X_ATTRIBUTE3 IS NULL)))

AND (   ( Recinfo.ATTRIBUTE4 = X_ATTRIBUTE4 )
	OR ( (Recinfo.ATTRIBUTE4 IS NULL)
		AND (X_ATTRIBUTE4 IS NULL)))

AND (   ( Recinfo.ATTRIBUTE5 = X_ATTRIBUTE5 )
	OR ( (Recinfo.ATTRIBUTE5 IS NULL)
		AND (X_ATTRIBUTE5 IS NULL)))

AND (   ( Recinfo.ATTRIBUTE6 = X_ATTRIBUTE6 )
	OR ( (Recinfo.ATTRIBUTE6 IS NULL)
		AND (X_ATTRIBUTE6 IS NULL)))

AND (   ( Recinfo.ATTRIBUTE7 = X_ATTRIBUTE7 )
	OR ( (Recinfo.ATTRIBUTE7 IS NULL)
		AND (X_ATTRIBUTE7 IS NULL)))

AND (   ( Recinfo.ATTRIBUTE8 = X_ATTRIBUTE8 )
	OR ( (Recinfo.ATTRIBUTE8 IS NULL)
		AND (X_ATTRIBUTE8 IS NULL)))

AND (   ( Recinfo.ATTRIBUTE9 = X_ATTRIBUTE9 )
	OR ( (Recinfo.ATTRIBUTE9 IS NULL)
		AND (X_ATTRIBUTE9 IS NULL)))

AND (   ( Recinfo.ATTRIBUTE10 = X_ATTRIBUTE10 )
	OR ( (Recinfo.ATTRIBUTE10 IS NULL)
		AND (X_ATTRIBUTE10 IS NULL)))

AND (   ( Recinfo.ATTRIBUTE11 = X_ATTRIBUTE11 )
	OR ( (Recinfo.ATTRIBUTE11 IS NULL)
		AND (X_ATTRIBUTE11 IS NULL)))

AND (   ( Recinfo.ATTRIBUTE12 = X_ATTRIBUTE12 )
	OR ( (Recinfo.ATTRIBUTE12 IS NULL)
		AND (X_ATTRIBUTE12 IS NULL)))

AND (   ( Recinfo.ATTRIBUTE13 = X_ATTRIBUTE13 )
	OR ( (Recinfo.ATTRIBUTE13 IS NULL)
		AND (X_ATTRIBUTE13 IS NULL)))

AND (   ( Recinfo.ATTRIBUTE14 = X_ATTRIBUTE14 )
	OR ( (Recinfo.ATTRIBUTE14 IS NULL)
		AND (X_ATTRIBUTE14 IS NULL)))

AND (   ( Recinfo.ATTRIBUTE15 = X_ATTRIBUTE15 )
	OR ( (Recinfo.ATTRIBUTE15 IS NULL)
		AND (X_ATTRIBUTE15 IS NULL)))

) then

return;

else

FND_MESSAGE.Set_Name('FND','FORM_RECORD_CHANGED');
APP_EXCEPTION.Raise_Exception;

end if;

end Lock_Row;


PROCEDURE Update_Row(
  X_QUALIFIER_ID            IN OUT NUMBER
, X_CREATION_DATE                  DATE
, X_CREATED_BY                     NUMBER
, X_LAST_UPDATE_DATE               DATE
, X_LAST_UPDATED_BY                NUMBER
, X_LAST_UPDATE_LOGIN              NUMBER
, X_PROGRAM_APPLICATION_ID         NUMBER
, X_PROGRAM_ID                     NUMBER
, X_PROGRAM_UPDATE_DATE            DATE
, X_REQUEST_ID                     NUMBER
, X_EXCLUDER_FLAG                  VARCHAR2
, X_COMPARISON_OPERATOR_CODE       VARCHAR2
, X_QUALIFIER_CONTEXT              VARCHAR2
, X_QUALIFIER_ATTRIBUTE            VARCHAR2
, X_QUALIFIER_RULE_ID              NUMBER
, X_QUALIFIER_GROUPING_NO          NUMBER
, X_QUALIFIER_ATTR_VALUE           VARCHAR2
, X_LIST_HEADER_ID                 NUMBER
, X_LIST_LINE_ID                   NUMBER
, X_CREATED_FROM_RULE_ID           NUMBER
, X_START_DATE_ACTIVE              DATE
, X_END_DATE_ACTIVE                DATE
, X_CONTEXT                        VARCHAR2
, X_ATTRIBUTE1                     VARCHAR2
, X_ATTRIBUTE2                     VARCHAR2
, X_ATTRIBUTE3                     VARCHAR2
, X_ATTRIBUTE4                     VARCHAR2
, X_ATTRIBUTE5                     VARCHAR2
, X_ATTRIBUTE6                     VARCHAR2
, X_ATTRIBUTE7                     VARCHAR2
, X_ATTRIBUTE8                     VARCHAR2
, X_ATTRIBUTE9                     VARCHAR2
, X_ATTRIBUTE10                    VARCHAR2
, X_ATTRIBUTE11                    VARCHAR2
, X_ATTRIBUTE12                    VARCHAR2
, X_ATTRIBUTE13                    VARCHAR2
, X_ATTRIBUTE14                    VARCHAR2
, X_ATTRIBUTE15                    VARCHAR2
) IS

begin

UPDATE QP_QUALIFIERS
SET
  QUALIFIER_ID				=	X_QUALIFIER_ID
, CREATION_DATE			=	X_CREATION_DATE
, CREATED_BY				=	X_CREATED_BY
, LAST_UPDATE_DATE			=	X_LAST_UPDATE_DATE
, LAST_UPDATED_BY			=	X_LAST_UPDATED_BY
, LAST_UPDATE_LOGIN			=	X_LAST_UPDATE_LOGIN
, PROGRAM_APPLICATION_ID		=	X_PROGRAM_APPLICATION_ID
, PROGRAM_ID				=	X_PROGRAM_ID
, PROGRAM_UPDATE_DATE		=	X_PROGRAM_UPDATE_DATE
, REQUEST_ID				=	X_REQUEST_ID
, EXCLUDER_FLAG			=	X_EXCLUDER_FLAG
, COMPARISON_OPERATOR_CODE	=	X_COMPARISON_OPERATOR_CODE
, QUALIFIER_CONTEXT			=	X_QUALIFIER_CONTEXT
, QUALIFIER_ATTRIBUTE		=	X_QUALIFIER_ATTRIBUTE
, QUALIFIER_RULE_ID			=	X_QUALIFIER_RULE_ID
, QUALIFIER_GROUPING_NO		=	X_QUALIFIER_GROUPING_NO
, QUALIFIER_ATTR_VALUE		=	X_QUALIFIER_ATTR_VALUE
, LIST_HEADER_ID			=	X_LIST_HEADER_ID
, LIST_LINE_ID				=	X_LIST_LINE_ID
, CREATED_FROM_RULE_ID		=	X_CREATED_FROM_RULE_ID
, START_DATE_ACTIVE			=	X_START_DATE_ACTIVE
, END_DATE_ACTIVE			=	X_END_DATE_ACTIVE
, CONTEXT					=	X_CONTEXT
, ATTRIBUTE1				=	X_ATTRIBUTE1
, ATTRIBUTE2				=	X_ATTRIBUTE2
, ATTRIBUTE3				=	X_ATTRIBUTE3
, ATTRIBUTE4				=	X_ATTRIBUTE4
, ATTRIBUTE5				=	X_ATTRIBUTE5
, ATTRIBUTE6				=	X_ATTRIBUTE6
, ATTRIBUTE7				=	X_ATTRIBUTE7
, ATTRIBUTE8				=	X_ATTRIBUTE8
, ATTRIBUTE9				=	X_ATTRIBUTE9
, ATTRIBUTE10				=	X_ATTRIBUTE10
, ATTRIBUTE11				=	X_ATTRIBUTE11
, ATTRIBUTE12				=	X_ATTRIBUTE12
, ATTRIBUTE13				=	X_ATTRIBUTE13
, ATTRIBUTE14				=	X_ATTRIBUTE14
, ATTRIBUTE15				=	X_ATTRIBUTE15
WHERE QUALIFIER_ID = X_QUALIFIER_ID;

if (sql%notfound) then
raise no_data_found;
end if;

END Update_Row;




PROCEDURE Delete_Row(
  X_ID	NUMBER
, X_HEADER_LINE_FLAG	VARCHAR2
) IS
begin

if (X_HEADER_LINE_FLAG = 'H') then
delete from QP_QUALIFIERS
where LIST_HEADER_ID = X_ID;
else
delete from QP_QUALIFIERS
where LIST_LINE_ID = X_ID;
end if;

if (SQL%NOTFOUND) then
	Raise NO_DATA_FOUND;
end if;


END Delete_Row;




END QP_QUALIFIER_PVT;

/
