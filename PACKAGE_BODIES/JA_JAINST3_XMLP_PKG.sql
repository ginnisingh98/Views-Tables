--------------------------------------------------------
--  DDL for Package Body JA_JAINST3_XMLP_PKG
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE PACKAGE BODY "APPS"."JA_JAINST3_XMLP_PKG" AS
/* $Header: JAINST3B.pls 120.1 2007/12/25 16:29:08 dwkrishn noship $ */
  FUNCTION CF_REALISED_AMOUNTFORMULA(TAX_AMOUNT IN NUMBER
                                    ,RECOVERED_AMOUNT IN NUMBER
                                    ,CHARGED_BILLED IN NUMBER) RETURN NUMBER IS
  BEGIN
    IF TAX_AMOUNT <> 0 THEN
      RETURN ROUND(((RECOVERED_AMOUNT * CHARGED_BILLED) / NVL(TAX_AMOUNT
                      ,1))
                  ,3);
    ELSE
      RETURN NULL;
    END IF;
  END CF_REALISED_AMOUNTFORMULA;
  FUNCTION CF_1FORMULA RETURN CHAR IS
  BEGIN
    IF TO_CHAR(PRM_FROMDT
           ,'MON') in ('APR','MAY','JUN','JUL','AUG','SEP') THEN
      RETURN '*';
    ELSE
      RETURN '';
    END IF;
  END CF_1FORMULA;
  FUNCTION CF_2FORMULA RETURN CHAR IS
  BEGIN
    IF TO_CHAR(PRM_FROMDT
           ,'MON') in ('OCT','NOV','DEC','JAN','FEB','MAR') THEN
      RETURN '*';
    ELSE
      RETURN '';
    END IF;
  END CF_2FORMULA;
  FUNCTION CF_SERVICEFORMULA(MONTH IN VARCHAR2
                            ,YEAR IN VARCHAR2) RETURN NUMBER IS
    LV_MON_YEAR VARCHAR2(8);
    CURSOR C_SERVICE IS
      SELECT
        SUM(DECODE(TAX_TYPE
                  ,'SERVICE_EDUCATION_CESS'
                  ,TRXRECS.CREDIT_AMOUNT
                  ,0)) SERVICE_CESS_AMOUNT,
        SUM(DECODE(TAX_TYPE
                  ,'Service'
                  ,TRXRECS.CREDIT_AMOUNT
                  ,0)) SERVICE_AMOUNT
      FROM
        JAI_RGM_TRX_RECORDS TRXRECS
      WHERE TRXRECS.SOURCE in ( 'AP' , 'MANUAL' )
        AND TRXRECS.SOURCE_TRX_TYPE = 'PAYMENT'
        AND TRXRECS.REGIME_CODE = 'SERVICE'
        AND TRUNC(TRXRECS.TRANSACTION_DATE) between PRM_FROMDT
        AND PRM_TODT
        AND TRXRECS.ORGANIZATION_ID = NVL(PRM_ORG_ID
         ,TRXRECS.ORGANIZATION_ID)
        AND TRXRECS.REGIME_PRIMARY_REGNO = PRM_RGM_PRIM_REGNO
        AND TO_CHAR(TRXRECS.TRANSACTION_DATE
             ,'MON-YYYY') = LV_MON_YEAR
        AND SERVICE_TYPE_CODE = NVL(PRM_SERVICE_TYPE
         ,SERVICE_TYPE_CODE);
    LN_SERVICE_AMOUNT JAI_RGM_TRX_RECORDS.CREDIT_AMOUNT%TYPE;
  BEGIN
    LV_MON_YEAR := MONTH || '-' || YEAR;
    OPEN C_SERVICE;
    FETCH C_SERVICE
     INTO CP_SERVICE_CESS_AMOUNT,LN_SERVICE_AMOUNT;
    CLOSE C_SERVICE;
    RETURN LN_SERVICE_AMOUNT;
  END CF_SERVICEFORMULA;
  FUNCTION CF_INVOICE_NUMFORMULA(MONTH IN VARCHAR2
                                ,YEAR IN VARCHAR2) RETURN VARCHAR2 IS
    LV_MON_YEAR VARCHAR2(8);
    CURSOR C_INVOICE IS
      SELECT
        INVC.INVOICE_NUM INVOICE_NUM,
        INVC.INVOICE_DATE INVOICE_DATE
      FROM
        AP_INVOICE_PAYMENTS_ALL INVCPAY,
        AP_INVOICES_ALL INVC,
        PO_VENDOR_SITES_ALL VENDSITES,
        PO_VENDORS VENDS
      WHERE INVCPAY.INVOICE_ID = INVC.INVOICE_ID
        AND INVC.VENDOR_ID = VENDSITES.VENDOR_ID
        AND VENDSITES.VENDOR_ID = VENDS.VENDOR_ID
        AND INVCPAY.CREATION_DATE BETWEEN PRM_FROMDT
        AND PRM_TODT
        AND VENDSITES.ORG_ID = NVL(PRM_ORG_ID
         ,VENDSITES.ORG_ID)
        AND VENDS.VENDOR_TYPE_LOOKUP_CODE = 'Service Tax Authorities'
        AND TO_CHAR(INVCPAY.CREATION_DATE
             ,'MON-YYYY') = LV_MON_YEAR
        AND ROWNUM = 1;
    LV_INVOICE_NUM AP_INVOICES_ALL.INVOICE_NUM%TYPE;
  BEGIN
    LV_MON_YEAR := MONTH || '-' || YEAR;
    OPEN C_INVOICE;
    FETCH C_INVOICE
     INTO LV_INVOICE_NUM,CP_INVOICE_DATE;
    CLOSE C_INVOICE;
    RETURN LV_INVOICE_NUM;
  END CF_INVOICE_NUMFORMULA;
  FUNCTION CF_ST_SERVICE_AMOUNTFORMULA(MONTH IN VARCHAR2
                                      ,YEAR IN VARCHAR2) RETURN NUMBER IS
    LV_MON_YEAR VARCHAR2(8);
    CURSOR C_ST_SERVICE IS
      SELECT
        SUM(DECODE(TAX_TYPE
                  ,'SERVICE_EDUCATION_CESS'
                  ,TRXRECS.CREDIT_AMOUNT
                  ,0)) SERVICE_CESS_ST_AMOUNT,
        SUM(DECODE(TAX_TYPE
                  ,'Service'
                  ,TRXRECS.CREDIT_AMOUNT
                  ,0)) SERVICE_ST_AMOUNT
      FROM
        JAI_RGM_TRX_RECORDS TRXRECS
      WHERE ( TRXRECS.SOURCE in ( 'AP' , 'SERVICE_DISTRIBUTE_IN' )
      OR TRXRECS.SOURCE in ( 'MANUAL' )
        AND TRXRECS.SOURCE_TRX_TYPE in ( 'ADJUSTMENT-RECOVERY' , 'RECOVERY' ) )
        AND TRXRECS.REGIME_CODE = 'SERVICE'
        AND TRUNC(TRXRECS.TRANSACTION_DATE) between TRUNC(PRM_FROMDT)
        AND TRUNC(PRM_TODT)
        AND TRXRECS.ORGANIZATION_ID = NVL(PRM_ORG_ID
         ,TRXRECS.ORGANIZATION_ID)
        AND TRXRECS.REGIME_PRIMARY_REGNO = PRM_RGM_PRIM_REGNO
        AND TO_CHAR(TRXRECS.TRANSACTION_DATE
             ,'MON-YYYY') = LV_MON_YEAR
        AND SERVICE_TYPE_CODE = NVL(PRM_SERVICE_TYPE
         ,SERVICE_TYPE_CODE);
    LN_SERVICE_ST_AMOUNT JAI_RGM_TRX_RECORDS.CREDIT_AMOUNT%TYPE;
  BEGIN
    LV_MON_YEAR := MONTH || '-' || YEAR;
    OPEN C_ST_SERVICE;
    FETCH C_ST_SERVICE
     INTO CP_ST_SERVICE_CESS_AMOUNT,LN_SERVICE_ST_AMOUNT;
    CLOSE C_ST_SERVICE;
    RETURN LN_SERVICE_ST_AMOUNT;
  END CF_ST_SERVICE_AMOUNTFORMULA;
  FUNCTION CF_RETURN_NULL RETURN CHAR IS
  BEGIN
    RETURN ' ';
  END CF_RETURN_NULL;
  FUNCTION CF_OPENING_BALANCEFORMULA(MONTH1 IN VARCHAR2
                                    ,YEAR1 IN VARCHAR2) RETURN NUMBER IS
    LV_DATE VARCHAR2(11);
    CURSOR CUR_INVOICE_OPEN_BAL IS
      SELECT
        SUM(RECOVERED_AMOUNT)
      FROM
        JAI_RGM_TRX_REFS
      WHERE SOURCE = 'AP'
        AND TAX_TYPE in ( 'Service' )
        AND TRUNC(CREATION_DATE) < LV_DATE
        AND JAI_TRX_REPO_EXTRACT_PKG.GET_SERVICE_TYPE_FROM_REF(REFERENCE_ID) = PRM_SERVICE_TYPE
        AND ORGANIZATION_ID in (
        SELECT
          DISTINCT
          ORGANIZATION_ID
        FROM
          JAI_RGM_ORG_REGNS_V
        WHERE REGIME_CODE = 'SERVICE'
          AND REGISTRATION_TYPE = 'OTHERS'
          AND ATTRIBUTE_TYPE_CODE = 'PRIMARY'
          AND ATTRIBUTE_CODE = 'SERVICE_TAX_REGISTRATION_NO'
          AND ATTRIBUTE_VALUE = PRM_RGM_PRIM_REGNO );
    CURSOR CUR_DIST_IN IS
      SELECT
        SUM(CREDIT_AMOUNT)
      FROM
        JAI_RGM_TRX_RECORDS
      WHERE SOURCE = 'SERVICE_DISTRIBUTE_IN'
        AND REGIME_CODE = 'SERVICE'
        AND TAX_TYPE IN ( 'Service' )
        AND REGIME_PRIMARY_REGNO = PRM_RGM_PRIM_REGNO
        AND ( NVL(TRUNC(CREATION_DATE)
         ,TRUNC(SYSDATE)) ) < LV_DATE
        AND ORGANIZATION_ID = NVL(PRM_ORG_ID
         ,ORGANIZATION_ID)
        AND SERVICE_TYPE_CODE = NVL(PRM_SERVICE_TYPE
         ,SERVICE_TYPE_CODE);
    CURSOR CUR_MANUAL_IN IS
      SELECT
        SUM(CREDIT_AMOUNT)
      FROM
        JAI_RGM_TRX_RECORDS
      WHERE SOURCE = 'MANUAL'
        AND REGIME_CODE = 'SERVICE'
        AND TAX_TYPE IN ( 'Service' )
        AND SOURCE_TRX_TYPE IN ( 'ADJUSTMENT-RECOVERY' , 'RECOVERY' )
        AND REGIME_PRIMARY_REGNO = PRM_RGM_PRIM_REGNO
        AND ( NVL(TRUNC(CREATION_DATE)
         ,TRUNC(SYSDATE)) ) < LV_DATE
        AND ORGANIZATION_ID = NVL(PRM_ORG_ID
         ,ORGANIZATION_ID)
        AND SERVICE_TYPE_CODE = NVL(PRM_SERVICE_TYPE
         ,SERVICE_TYPE_CODE);
    CURSOR CUR_AR_UTIL_CREDIT IS
      SELECT
        SUM(RECOVERED_AMOUNT)
      FROM
        JAI_RGM_TRX_REFS
      WHERE SOURCE = 'AR'
        AND TAX_TYPE in ( 'Service' )
        AND TRUNC(CREATION_DATE) < LV_DATE
        AND JAI_TRX_REPO_EXTRACT_PKG.GET_SERVICE_TYPE_FROM_REF(REFERENCE_ID) = PRM_SERVICE_TYPE
        AND ORGANIZATION_ID IN (
        SELECT
          DISTINCT
          ORGANIZATION_ID
        FROM
          JAI_RGM_ORG_REGNS_V
        WHERE REGIME_CODE = 'SERVICE'
          AND REGISTRATION_TYPE = 'OTHERS'
          AND ATTRIBUTE_TYPE_CODE = 'PRIMARY'
          AND ATTRIBUTE_CODE = 'SERVICE_TAX_REGISTRATION_NO'
          AND ATTRIBUTE_VALUE = PRM_RGM_PRIM_REGNO );
    CURSOR CUR_AR_SER_DIST_OUT_DEBIT IS
      SELECT
        NVL(SUM(DEBIT_AMOUNT)
           ,0)
      FROM
        JAI_RGM_TRX_RECORDS
      WHERE SOURCE = 'SERVICE_DISTRIBUTE_OUT'
        AND REGIME_CODE = 'SERVICE'
        AND TAX_TYPE IN ( 'Service' )
        AND REGIME_PRIMARY_REGNO = PRM_RGM_PRIM_REGNO
        AND ( NVL(TRUNC(CREATION_DATE)
         ,TRUNC(SYSDATE)) ) < LV_DATE
        AND ORGANIZATION_ID = NVL(PRM_ORG_ID
         ,ORGANIZATION_ID)
        AND SERVICE_TYPE_CODE = NVL(PRM_SERVICE_TYPE
         ,SERVICE_TYPE_CODE);
    CURSOR CUR_MANUAL_DEBIT IS
      SELECT
        NVL(SUM(DEBIT_AMOUNT)
           ,0)
      FROM
        JAI_RGM_TRX_RECORDS
      WHERE SOURCE = 'MANUAL'
        AND REGIME_CODE = 'SERVICE'
        AND TAX_TYPE IN ( 'Service' )
        AND SOURCE_TRX_TYPE IN ( 'ADJUSTMENT-LIABILITY' , 'LIABILITY' )
        AND REGIME_PRIMARY_REGNO = PRM_RGM_PRIM_REGNO
        AND ( NVL(TRUNC(CREATION_DATE)
         ,TRUNC(SYSDATE)) ) < LV_DATE
        AND ORGANIZATION_ID = NVL(PRM_ORG_ID
         ,ORGANIZATION_ID)
        AND SERVICE_TYPE_CODE = NVL(PRM_SERVICE_TYPE
         ,SERVICE_TYPE_CODE);
    CURSOR CUR_PAYMENT IS
      SELECT
        NVL(SUM(DEBIT_AMOUNT)
           ,0)
      FROM
        JAI_RGM_TRX_RECORDS
      WHERE SOURCE = 'MANUAL'
        AND REGIME_CODE = 'SERVICE'
        AND TAX_TYPE IN ( 'Service' )
        AND SOURCE_TRX_TYPE = 'PAYMENT'
        AND REGIME_PRIMARY_REGNO = PRM_RGM_PRIM_REGNO
        AND ( NVL(TRUNC(CREATION_DATE)
         ,TRUNC(SYSDATE)) ) < LV_DATE
        AND ORGANIZATION_ID = NVL(PRM_ORG_ID
         ,ORGANIZATION_ID)
        AND SERVICE_TYPE_CODE = NVL(PRM_SERVICE_TYPE
         ,SERVICE_TYPE_CODE);
    LV_INV_OPEN_BAL NUMBER := 0;
    LV_OPEN_DIST_BAL NUMBER := 0;
    LV_AR_UTIL_CREDIT NUMBER := 0;
    LV_AR_SER_DIST_OUT_DEBIT NUMBER := 0;
    LV_MANUAL_BAL NUMBER := 0;
    LV_MANUAL_DEBIT_BAL NUMBER := 0;
    LV_MANUAL_PAYMENT NUMBER := 0;
  BEGIN
    LV_DATE := '01' || '-' || MONTH1 || '-' || YEAR1;
    OPEN CUR_INVOICE_OPEN_BAL;
    FETCH CUR_INVOICE_OPEN_BAL
     INTO LV_INV_OPEN_BAL;
    CLOSE CUR_INVOICE_OPEN_BAL;
    OPEN CUR_DIST_IN;
    FETCH CUR_DIST_IN
     INTO LV_OPEN_DIST_BAL;
    CLOSE CUR_DIST_IN;
    OPEN CUR_MANUAL_IN;
    FETCH CUR_MANUAL_IN
     INTO LV_MANUAL_BAL;
    CLOSE CUR_MANUAL_IN;
    OPEN CUR_MANUAL_DEBIT;
    FETCH CUR_MANUAL_DEBIT
     INTO LV_MANUAL_DEBIT_BAL;
    CLOSE CUR_MANUAL_DEBIT;
    OPEN CUR_AR_UTIL_CREDIT;
    FETCH CUR_AR_UTIL_CREDIT
     INTO LV_AR_UTIL_CREDIT;
    CLOSE CUR_AR_UTIL_CREDIT;
    OPEN CUR_AR_SER_DIST_OUT_DEBIT;
    FETCH CUR_AR_SER_DIST_OUT_DEBIT
     INTO LV_AR_SER_DIST_OUT_DEBIT;
    CLOSE CUR_AR_SER_DIST_OUT_DEBIT;
    OPEN CUR_PAYMENT;
    FETCH CUR_PAYMENT
     INTO LV_MANUAL_PAYMENT;
    CLOSE CUR_PAYMENT;
    RETURN (NVL(LV_OPEN_DIST_BAL
              ,0) + NVL(LV_INV_OPEN_BAL
              ,0) + NVL(LV_MANUAL_BAL
              ,0) - NVL(LV_AR_UTIL_CREDIT
              ,0) - NVL(LV_AR_SER_DIST_OUT_DEBIT
              ,0) - NVL(LV_MANUAL_DEBIT_BAL
              ,0) + NVL(LV_MANUAL_PAYMENT
              ,0));
  END CF_OPENING_BALANCEFORMULA;
  FUNCTION CF_CREDIT_AVAILEDFORMULA(MONTH1 IN VARCHAR2
                                   ,YEAR1 IN VARCHAR2) RETURN NUMBER IS
    LV_DATE VARCHAR2(8);
    CURSOR C_SERV_CREDIT(CPV_ITEM_CLASS IN VARCHAR2) IS
      SELECT
        SUM(TRXRECS.CREDIT_AMOUNT) SERVICE_CREDIT
      FROM
        JAI_RGM_TRX_RECORDS TRXRECS,
        JAI_RGM_TRX_REFS TRXREFS,
        AP_INVOICES_ALL APA,
        JAI_CMN_VENDOR_SITES JPVS,
        PO_VENDOR_SITES_ALL PVSA,
        JAI_INV_ITM_SETUPS JMSI
      WHERE TRXREFS.REFERENCE_ID = TRXRECS.REFERENCE_ID
        AND APA.CANCELLED_DATE IS NULL
        AND APA.CANCELLED_BY IS NULL
        AND APA.CANCELLED_AMOUNT IS NULL
        AND JPVS.VENDOR_ID = APA.VENDOR_ID
        AND JPVS.VENDOR_SITE_ID = APA.VENDOR_SITE_ID
        AND APA.VENDOR_ID = PVSA.VENDOR_ID
        AND APA.VENDOR_SITE_ID = PVSA.VENDOR_SITE_ID
        AND APA.INVOICE_ID = TRXREFS.INVOICE_ID
        AND TRXREFS.ORGANIZATION_ID = JMSI.ORGANIZATION_ID
        AND TRXREFS.ITEM_ID = JMSI.INVENTORY_ITEM_ID
        AND JMSI.ITEM_CLASS = CPV_ITEM_CLASS
        AND TRXRECS.SOURCE in ( 'AP' )
        AND TRXRECS.REGIME_PRIMARY_REGNO = PRM_RGM_PRIM_REGNO
        AND TRXRECS.REGIME_CODE = 'SERVICE'
        AND TRUNC(TRXRECS.TRANSACTION_DATE) between TRUNC(PRM_FROMDT)
        AND TRUNC(PRM_TODT)
        AND TO_CHAR(TRXRECS.TRANSACTION_DATE
             ,'MON-YYYY') = LV_DATE
        AND TRXRECS.SERVICE_TYPE_CODE = NVL(PRM_SERVICE_TYPE
         ,TRXRECS.SERVICE_TYPE_CODE)
        AND TRXRECS.ORGANIZATION_ID = NVL(PRM_ORG_ID
         ,TRXRECS.ORGANIZATION_ID)
        AND TRXREFS.TAX_TYPE = 'Service';
    CURSOR C_SERV_CREDIT_1(CPV_ITEM_CLASS IN VARCHAR2) IS
      SELECT
        SUM(JRTR.CREDIT_AMOUNT) SERVICE_CREDIT
      FROM
        JAI_RGM_TRX_RECORDS JRTR,
        JAI_RGM_MANUAL_TRXS JMT,
        PO_VENDOR_SITES_ALL PVSA
      WHERE JRTR.SOURCE = 'MANUAL'
        AND JRTR.REGIME_CODE = 'SERVICE'
        AND JRTR.SOURCE_DOCUMENT_ID = JMT.TRANSACTION_NUMBER
        AND PVSA.VENDOR_ID = JMT.PARTY_ID
        AND PVSA.VENDOR_SITE_ID = JMT.PARTY_SITE_ID
        AND JMT.ITEM_CLASS = CPV_ITEM_CLASS
        AND JRTR.SOURCE_TRX_TYPE IN ( 'ADJUSTMENT-RECOVERY' , 'RECOVERY' )
        AND JRTR.REGIME_PRIMARY_REGNO = PRM_RGM_PRIM_REGNO
        AND TRUNC(JRTR.TRANSACTION_DATE) BETWEEN TRUNC(PRM_FROMDT)
        AND TRUNC(PRM_TODT)
        AND TO_CHAR(JRTR.TRANSACTION_DATE
             ,'MON-YYYY') = LV_DATE
        AND JRTR.SERVICE_TYPE_CODE = NVL(PRM_SERVICE_TYPE
         ,JRTR.SERVICE_TYPE_CODE)
        AND JRTR.ORGANIZATION_ID = NVL(PRM_ORG_ID
         ,JRTR.ORGANIZATION_ID)
        AND JRTR.TAX_TYPE = 'Service';
    LN_SERV_CREDIT_RMIN JAI_RGM_TRX_RECORDS.CREDIT_AMOUNT%TYPE;
    LN_SERV_CREDIT_RM JAI_RGM_TRX_RECORDS.CREDIT_AMOUNT%TYPE;
    LN_SERV_CREDIT_CGIN JAI_RGM_TRX_RECORDS.CREDIT_AMOUNT%TYPE;
    LN_SERV_CREDIT_FG JAI_RGM_TRX_RECORDS.CREDIT_AMOUNT%TYPE;
  BEGIN
    LV_DATE := MONTH1 || '-' || YEAR1;
    OPEN C_SERV_CREDIT('RMIN');
    FETCH C_SERV_CREDIT
     INTO LN_SERV_CREDIT_RMIN;
    CLOSE C_SERV_CREDIT;
    OPEN C_SERV_CREDIT_1('RM');
    FETCH C_SERV_CREDIT_1
     INTO LN_SERV_CREDIT_RM;
    CLOSE C_SERV_CREDIT_1;
    OPEN C_SERV_CREDIT('CGIN');
    FETCH C_SERV_CREDIT
     INTO LN_SERV_CREDIT_CGIN;
    CLOSE C_SERV_CREDIT;
    OPEN C_SERV_CREDIT_1('CG');
    FETCH C_SERV_CREDIT_1
     INTO LN_SERV_CREDIT_FG;
    CLOSE C_SERV_CREDIT_1;
    CP_CREDIT_AVAILED := NVL(LN_SERV_CREDIT_CGIN
                            ,0) + NVL(LN_SERV_CREDIT_FG
                            ,0);
    RETURN NVL(LN_SERV_CREDIT_RMIN
              ,0) + NVL(LN_SERV_CREDIT_RM
              ,0);
  END CF_CREDIT_AVAILEDFORMULA;
  FUNCTION CF_CREDIT_RECEIVEDFORMULA(MONTH1 IN VARCHAR2
                                    ,YEAR1 IN VARCHAR2) RETURN NUMBER IS
    LV_DATE VARCHAR2(8);
    CURSOR C_CREDIT_RECEIVED IS
      SELECT
        SUM(JRTR.CREDIT_AMOUNT) SERVICE_CREDIT
      FROM
        JAI_RGM_TRX_RECORDS JRTR
      WHERE JRTR.SOURCE = 'SERVICE_DISTRIBUTE_IN'
        AND JRTR.REGIME_CODE = 'SERVICE'
        AND JRTR.REGIME_PRIMARY_REGNO = PRM_RGM_PRIM_REGNO
        AND TRUNC(JRTR.TRANSACTION_DATE) BETWEEN TRUNC(PRM_FROMDT)
        AND TRUNC(PRM_TODT)
        AND TO_CHAR(JRTR.TRANSACTION_DATE
             ,'MON-YYYY') = LV_DATE
        AND JRTR.SERVICE_TYPE_CODE = NVL(PRM_SERVICE_TYPE
         ,JRTR.SERVICE_TYPE_CODE)
        AND JRTR.ORGANIZATION_ID = NVL(PRM_ORG_ID
         ,JRTR.ORGANIZATION_ID)
        AND JRTR.TAX_TYPE = 'Service';
    LN_SERV_CREDIT JAI_RGM_TRX_RECORDS.CREDIT_AMOUNT%TYPE;
  BEGIN
    LV_DATE := MONTH1 || '-' || YEAR1;
    OPEN C_CREDIT_RECEIVED;
    FETCH C_CREDIT_RECEIVED
     INTO LN_SERV_CREDIT;
    CLOSE C_CREDIT_RECEIVED;
    RETURN NVL(LN_SERV_CREDIT
              ,0);
  END CF_CREDIT_RECEIVEDFORMULA;
  FUNCTION CF_CREDIT_UTILIZEDFORMULA(MONTH1 IN VARCHAR2
                                    ,YEAR1 IN VARCHAR2) RETURN NUMBER IS
    LV_DATE VARCHAR2(8);
    CURSOR CUR_AR_UTIL_CREDIT IS
      SELECT
        SUM(RECOVERED_AMOUNT)
      FROM
        JAI_RGM_TRX_REFS TRXREFS
      WHERE SOURCE = 'AR'
        AND TAX_TYPE in ( 'Service' , 'SERVICE_EDUCATION_CESS' )
        AND ORGANIZATION_ID IN (
        SELECT
          DISTINCT
          ORGANIZATION_ID
        FROM
          JAI_RGM_ORG_REGNS_V
        WHERE REGIME_CODE = 'SERVICE'
          AND REGISTRATION_TYPE = 'OTHERS'
          AND ATTRIBUTE_TYPE_CODE = 'PRIMARY'
          AND ATTRIBUTE_CODE = 'SERVICE_TAX_REGISTRATION_NO'
          AND ATTRIBUTE_VALUE = PRM_RGM_PRIM_REGNO )
        AND ( NVL(TRUNC(CREATION_DATE)
         ,SYSDATE) ) BETWEEN ( NVL(PRM_FROMDT
         ,SYSDATE) )
        AND ( NVL(PRM_TODT
         ,SYSDATE) )
        AND TO_CHAR(TRXREFS.CREATION_DATE
             ,'MON-YYYY') = LV_DATE
        AND JAI_TRX_REPO_EXTRACT_PKG.GET_SERVICE_TYPE_FROM_REF(REFERENCE_ID) = PRM_SERVICE_TYPE;
    CURSOR CUR_AR_SER_DIST_OUT_DEBIT IS
      SELECT
        NVL(SUM(DEBIT_AMOUNT)
           ,0)
      FROM
        JAI_RGM_TRX_RECORDS TRXRECS
      WHERE SOURCE = 'SERVICE_DISTRIBUTE_OUT'
        AND REGIME_CODE = 'SERVICE'
        AND TAX_TYPE IN ( 'Service' , 'SERVICE_EDUCATION_CESS' )
        AND REGIME_PRIMARY_REGNO = PRM_RGM_PRIM_REGNO
        AND ( NVL(TRUNC(CREATION_DATE)
         ,SYSDATE) ) BETWEEN ( NVL(PRM_FROMDT
         ,SYSDATE) )
        AND ( NVL(PRM_TODT
         ,SYSDATE) )
        AND TO_CHAR(TRXRECS.TRANSACTION_DATE
             ,'MON-YYYY') = LV_DATE
        AND TRXRECS.ORGANIZATION_ID = NVL(PRM_ORG_ID
         ,TRXRECS.ORGANIZATION_ID)
        AND TRXRECS.SERVICE_TYPE_CODE = NVL(PRM_SERVICE_TYPE
         ,TRXRECS.SERVICE_TYPE_CODE);
    CURSOR CUR_MANUAL_DEBIT IS
      SELECT
        NVL(SUM(DEBIT_AMOUNT)
           ,0)
      FROM
        JAI_RGM_TRX_RECORDS TRXRECS
      WHERE SOURCE = 'MANUAL'
        AND REGIME_CODE = 'SERVICE'
        AND TAX_TYPE IN ( 'Service' , 'SERVICE_EDUCATION_CESS' )
        AND SOURCE_TRX_TYPE IN ( 'ADJUSTMENT-LIABILITY' , 'LIABILITY' )
        AND REGIME_PRIMARY_REGNO = PRM_RGM_PRIM_REGNO
        AND ( NVL(TRUNC(CREATION_DATE)
         ,SYSDATE) ) BETWEEN ( NVL(PRM_FROMDT
         ,SYSDATE) )
        AND ( NVL(PRM_TODT
         ,SYSDATE) )
        AND TO_CHAR(TRXRECS.TRANSACTION_DATE
             ,'MON-YYYY') = LV_DATE
        AND TRXRECS.ORGANIZATION_ID = NVL(PRM_ORG_ID
         ,TRXRECS.ORGANIZATION_ID)
        AND TRXRECS.SERVICE_TYPE_CODE = NVL(PRM_SERVICE_TYPE
         ,TRXRECS.SERVICE_TYPE_CODE);
    CURSOR CUR_PAYMENT IS
      SELECT
        NVL(SUM(DEBIT_AMOUNT)
           ,0)
      FROM
        JAI_RGM_TRX_RECORDS TRXRECS
      WHERE SOURCE = 'MANUAL'
        AND REGIME_CODE = 'SERVICE'
        AND TAX_TYPE IN ( 'Service' , 'SERVICE_EDUCATION_CESS' )
        AND SOURCE_TRX_TYPE = 'PAYMENT'
        AND REGIME_PRIMARY_REGNO = PRM_RGM_PRIM_REGNO
        AND ( NVL(TRUNC(CREATION_DATE)
         ,SYSDATE) ) BETWEEN ( NVL(PRM_FROMDT
         ,SYSDATE) )
        AND ( NVL(PRM_TODT
         ,SYSDATE) )
        AND TO_CHAR(TRXRECS.TRANSACTION_DATE
             ,'MON-YYYY') = LV_DATE
        AND TRXRECS.ORGANIZATION_ID = NVL(PRM_ORG_ID
         ,TRXRECS.ORGANIZATION_ID)
        AND TRXRECS.SERVICE_TYPE_CODE = NVL(PRM_SERVICE_TYPE
         ,TRXRECS.SERVICE_TYPE_CODE);
    LN_AR_UTIL_CREDIT NUMBER := 0;
    LN_AR_SER_DIST_OUT_DEBIT NUMBER := 0;
    LV_MANUAL_DEBIT NUMBER := 0;
    LV_PAYMENT NUMBER := 0;
  BEGIN
    LV_DATE := MONTH1 || '-' || YEAR1;
    OPEN CUR_AR_UTIL_CREDIT;
    FETCH CUR_AR_UTIL_CREDIT
     INTO LN_AR_UTIL_CREDIT;
    CLOSE CUR_AR_UTIL_CREDIT;
    OPEN CUR_AR_SER_DIST_OUT_DEBIT;
    FETCH CUR_AR_SER_DIST_OUT_DEBIT
     INTO LN_AR_SER_DIST_OUT_DEBIT;
    CLOSE CUR_AR_SER_DIST_OUT_DEBIT;
    OPEN CUR_MANUAL_DEBIT;
    FETCH CUR_MANUAL_DEBIT
     INTO LV_MANUAL_DEBIT;
    CLOSE CUR_MANUAL_DEBIT;
    OPEN CUR_PAYMENT;
    FETCH CUR_PAYMENT
     INTO LV_PAYMENT;
    CLOSE CUR_PAYMENT;
    RETURN (NVL(LN_AR_UTIL_CREDIT
              ,0) + NVL(LN_AR_SER_DIST_OUT_DEBIT
              ,0) + NVL(LV_MANUAL_DEBIT
              ,0) - NVL(LV_PAYMENT
              ,0));
  END CF_CREDIT_UTILIZEDFORMULA;
  FUNCTION CF_CREDIT_INPUT_SERVICESFORMUL(MONTH1 IN VARCHAR2
                                         ,YEAR1 IN VARCHAR2) RETURN NUMBER IS
    LV_DATE VARCHAR2(8);
    CURSOR C_SERV_CREDIT IS
      SELECT
        SUM(TRXRECS.CREDIT_AMOUNT) SERVICE_CREDIT
      FROM
        JAI_RGM_TRX_RECORDS TRXRECS,
        JAI_RGM_TRX_REFS TRXREFS,
        AP_INVOICES_ALL APA,
        JAI_CMN_VENDOR_SITES JPVS,
        PO_VENDOR_SITES_ALL PVSA,
        JAI_INV_ITM_SETUPS JMSI
      WHERE TRXREFS.REFERENCE_ID = TRXRECS.REFERENCE_ID
        AND APA.CANCELLED_DATE IS NULL
        AND APA.CANCELLED_BY IS NULL
        AND APA.CANCELLED_AMOUNT IS NULL
        AND JPVS.VENDOR_ID = APA.VENDOR_ID
        AND JPVS.VENDOR_SITE_ID = APA.VENDOR_SITE_ID
        AND APA.VENDOR_ID = PVSA.VENDOR_ID
        AND APA.VENDOR_SITE_ID = PVSA.VENDOR_SITE_ID
        AND APA.INVOICE_ID = TRXREFS.INVOICE_ID
        AND TRXREFS.ORGANIZATION_ID = JMSI.ORGANIZATION_ID
        AND TRXREFS.ITEM_ID IS NULL
        AND TRXRECS.SOURCE in ( 'AP' )
        AND TRXRECS.REGIME_PRIMARY_REGNO = PRM_RGM_PRIM_REGNO
        AND TRXRECS.REGIME_CODE = 'SERVICE'
        AND TRUNC(TRXRECS.TRANSACTION_DATE) between TRUNC(PRM_FROMDT)
        AND TRUNC(PRM_TODT)
        AND TO_CHAR(TRXRECS.TRANSACTION_DATE
             ,'MON-YYYY') = LV_DATE
        AND TRXRECS.SERVICE_TYPE_CODE = NVL(PRM_SERVICE_TYPE
         ,TRXRECS.SERVICE_TYPE_CODE)
        AND TRXRECS.ORGANIZATION_ID = NVL(PRM_ORG_ID
         ,TRXRECS.ORGANIZATION_ID)
        AND TRXREFS.TAX_TYPE = 'Service';
    CURSOR C_SERV_CREDIT_1 IS
      SELECT
        SUM(JRTR.CREDIT_AMOUNT) SERVICE_CREDIT
      FROM
        JAI_RGM_TRX_RECORDS JRTR,
        JAI_RGM_MANUAL_TRXS JMT,
        PO_VENDOR_SITES_ALL PVSA
      WHERE JRTR.SOURCE = 'MANUAL'
        AND JRTR.REGIME_CODE = 'SERVICE'
        AND JRTR.SOURCE_DOCUMENT_ID = JMT.TRANSACTION_NUMBER
        AND PVSA.VENDOR_ID = JMT.PARTY_ID
        AND PVSA.VENDOR_SITE_ID = JMT.PARTY_SITE_ID
        AND JRTR.SOURCE_TRX_TYPE IN ( 'ADJUSTMENT-RECOVERY' , 'RECOVERY' )
        AND JRTR.REGIME_PRIMARY_REGNO = PRM_RGM_PRIM_REGNO
        AND TRUNC(JRTR.TRANSACTION_DATE) BETWEEN TRUNC(PRM_FROMDT)
        AND TRUNC(PRM_TODT)
        AND TO_CHAR(JRTR.TRANSACTION_DATE
             ,'MON-YYYY') = LV_DATE
        AND JRTR.SERVICE_TYPE_CODE = NVL(PRM_SERVICE_TYPE
         ,JRTR.SERVICE_TYPE_CODE)
        AND JRTR.ORGANIZATION_ID = NVL(PRM_ORG_ID
         ,JRTR.ORGANIZATION_ID)
        AND JRTR.TAX_TYPE = 'Service';
    CURSOR C_TAX_AMOUNT IS
      SELECT
        SUM(JRTR.CREDIT_AMOUNT) TAX_AMOUNT
      FROM
        JAI_RGM_TRX_RECORDS JRTR
      WHERE JRTR.SOURCE = 'SERVICE_DISTRIBUTE_IN'
        AND JRTR.REGIME_CODE = 'SERVICE'
        AND JRTR.REGIME_PRIMARY_REGNO = PRM_RGM_PRIM_REGNO
        AND TRUNC(JRTR.TRANSACTION_DATE) BETWEEN TRUNC(PRM_FROMDT)
        AND TRUNC(PRM_TODT)
        AND TO_CHAR(JRTR.TRANSACTION_DATE
             ,'MON-YYYY') = LV_DATE
        AND JRTR.SERVICE_TYPE_CODE = NVL(PRM_SERVICE_TYPE
         ,JRTR.SERVICE_TYPE_CODE)
        AND JRTR.ORGANIZATION_ID = NVL(PRM_ORG_ID
         ,JRTR.ORGANIZATION_ID);
    LN_SERV_CREDIT JAI_RGM_TRX_RECORDS.CREDIT_AMOUNT%TYPE;
    LN_SERV_CREDIT1 JAI_RGM_TRX_RECORDS.CREDIT_AMOUNT%TYPE;
    LN_TAX_AMOUNT JAI_RGM_TRX_RECORDS.CREDIT_AMOUNT%TYPE;
  BEGIN
    LV_DATE := MONTH1 || '-' || YEAR1;
    OPEN C_SERV_CREDIT;
    FETCH C_SERV_CREDIT
     INTO LN_SERV_CREDIT;
    CLOSE C_SERV_CREDIT;
    OPEN C_SERV_CREDIT_1;
    FETCH C_SERV_CREDIT_1
     INTO LN_SERV_CREDIT1;
    CLOSE C_SERV_CREDIT_1;
    OPEN C_TAX_AMOUNT;
    FETCH C_TAX_AMOUNT
     INTO LN_TAX_AMOUNT;
    CLOSE C_TAX_AMOUNT;
    RETURN NVL(LN_SERV_CREDIT
              ,0) + NVL(LN_SERV_CREDIT1
              ,0) + NVL(LN_TAX_AMOUNT
              ,0);
  END CF_CREDIT_INPUT_SERVICESFORMUL;
  FUNCTION CF_TOTAL_CREDITFORMULA(CF_CREDIT_AVAILED IN NUMBER
                                 ,CF_CREDIT_RECEIVED IN NUMBER) RETURN NUMBER IS
  BEGIN
    RETURN CF_CREDIT_AVAILED + CP_CREDIT_AVAILED + CF_CREDIT_RECEIVED;
  END CF_TOTAL_CREDITFORMULA;
  FUNCTION CF_CLOSING_BALANCEFORMULA(CF_OPENING_BALANCE IN NUMBER
                                    ,CF_TOTAL_CREDIT IN NUMBER
                                    ,CF_CREDIT_UTILIZED IN NUMBER) RETURN NUMBER IS
  BEGIN
    RETURN CF_OPENING_BALANCE + CF_TOTAL_CREDIT - CF_CREDIT_UTILIZED;
  END CF_CLOSING_BALANCEFORMULA;
  FUNCTION CF_EDUCESS_OPENING_BALANCEFORM(MONTH1 IN VARCHAR2
                                         ,YEAR1 IN VARCHAR2) RETURN NUMBER IS
    LV_DATE VARCHAR2(11);
    CURSOR CUR_INVOICE_OPEN_BAL IS
      SELECT
        SUM(RECOVERED_AMOUNT)
      FROM
        JAI_RGM_TRX_REFS
      WHERE SOURCE = 'AP'
        AND TAX_TYPE in ( 'SERVICE_EDUCATION_CESS' )
        AND TRUNC(CREATION_DATE) < LV_DATE
        AND JAI_TRX_REPO_EXTRACT_PKG.GET_SERVICE_TYPE_FROM_REF(REFERENCE_ID) = PRM_SERVICE_TYPE
        AND ORGANIZATION_ID in (
        SELECT
          DISTINCT
          ORGANIZATION_ID
        FROM
          JAI_RGM_ORG_REGNS_V
        WHERE REGIME_CODE = 'SERVICE'
          AND REGISTRATION_TYPE = 'OTHERS'
          AND ATTRIBUTE_TYPE_CODE = 'PRIMARY'
          AND ATTRIBUTE_CODE = 'SERVICE_TAX_REGISTRATION_NO'
          AND ATTRIBUTE_VALUE = PRM_RGM_PRIM_REGNO );
    CURSOR CUR_DIST_IN IS
      SELECT
        SUM(CREDIT_AMOUNT)
      FROM
        JAI_RGM_TRX_RECORDS
      WHERE SOURCE = 'SERVICE_DISTRIBUTE_IN'
        AND REGIME_CODE = 'SERVICE'
        AND TAX_TYPE IN ( 'SERVICE_EDUCATION_CESS' )
        AND REGIME_PRIMARY_REGNO = PRM_RGM_PRIM_REGNO
        AND ( NVL(TRUNC(CREATION_DATE)
         ,TRUNC(SYSDATE)) ) < LV_DATE
        AND ORGANIZATION_ID = NVL(PRM_ORG_ID
         ,ORGANIZATION_ID)
        AND SERVICE_TYPE_CODE = NVL(PRM_SERVICE_TYPE
         ,SERVICE_TYPE_CODE);
    CURSOR CUR_MANUAL_IN IS
      SELECT
        SUM(CREDIT_AMOUNT)
      FROM
        JAI_RGM_TRX_RECORDS
      WHERE SOURCE = 'MANUAL'
        AND REGIME_CODE = 'SERVICE'
        AND TAX_TYPE IN ( 'SERVICE_EDUCATION_CESS' )
        AND SOURCE_TRX_TYPE IN ( 'ADJUSTMENT-RECOVERY' , 'RECOVERY' )
        AND REGIME_PRIMARY_REGNO = PRM_RGM_PRIM_REGNO
        AND ( NVL(TRUNC(CREATION_DATE)
         ,TRUNC(SYSDATE)) ) < LV_DATE
        AND ORGANIZATION_ID = NVL(PRM_ORG_ID
         ,ORGANIZATION_ID)
        AND SERVICE_TYPE_CODE = NVL(PRM_SERVICE_TYPE
         ,SERVICE_TYPE_CODE);
    CURSOR CUR_AR_UTIL_CREDIT IS
      SELECT
        SUM(RECOVERED_AMOUNT)
      FROM
        JAI_RGM_TRX_REFS
      WHERE SOURCE = 'AR'
        AND TAX_TYPE in ( 'SERVICE_EDUCATION_CESS' )
        AND TRUNC(CREATION_DATE) < LV_DATE
        AND JAI_TRX_REPO_EXTRACT_PKG.GET_SERVICE_TYPE_FROM_REF(REFERENCE_ID) = PRM_SERVICE_TYPE
        AND ORGANIZATION_ID IN (
        SELECT
          DISTINCT
          ORGANIZATION_ID
        FROM
          JAI_RGM_ORG_REGNS_V
        WHERE REGIME_CODE = 'SERVICE'
          AND REGISTRATION_TYPE = 'OTHERS'
          AND ATTRIBUTE_TYPE_CODE = 'PRIMARY'
          AND ATTRIBUTE_CODE = 'SERVICE_TAX_REGISTRATION_NO'
          AND ATTRIBUTE_VALUE = PRM_RGM_PRIM_REGNO );
    CURSOR CUR_AR_SER_DIST_OUT_DEBIT IS
      SELECT
        NVL(SUM(DEBIT_AMOUNT)
           ,0)
      FROM
        JAI_RGM_TRX_RECORDS
      WHERE SOURCE = 'SERVICE_DISTRIBUTE_OUT'
        AND REGIME_CODE = 'SERVICE'
        AND TAX_TYPE IN ( 'SERVICE_EDUCATION_CESS' )
        AND REGIME_PRIMARY_REGNO = PRM_RGM_PRIM_REGNO
        AND ( NVL(TRUNC(CREATION_DATE)
         ,TRUNC(SYSDATE)) ) < LV_DATE
        AND ORGANIZATION_ID = NVL(PRM_ORG_ID
         ,ORGANIZATION_ID)
        AND SERVICE_TYPE_CODE = NVL(PRM_SERVICE_TYPE
         ,SERVICE_TYPE_CODE);
    CURSOR CUR_MANUAL_DEBIT IS
      SELECT
        NVL(SUM(DEBIT_AMOUNT)
           ,0)
      FROM
        JAI_RGM_TRX_RECORDS
      WHERE SOURCE = 'MANUAL'
        AND REGIME_CODE = 'SERVICE'
        AND TAX_TYPE IN ( 'SERVICE_EDUCATION_CESS' )
        AND SOURCE_TRX_TYPE IN ( 'ADJUSTMENT-LIABILITY' , 'LIABILITY' )
        AND REGIME_PRIMARY_REGNO = PRM_RGM_PRIM_REGNO
        AND ( NVL(TRUNC(CREATION_DATE)
         ,TRUNC(SYSDATE)) ) < LV_DATE
        AND ORGANIZATION_ID = NVL(PRM_ORG_ID
         ,ORGANIZATION_ID)
        AND SERVICE_TYPE_CODE = NVL(PRM_SERVICE_TYPE
         ,SERVICE_TYPE_CODE);
    CURSOR CUR_PAYMENT IS
      SELECT
        NVL(SUM(DEBIT_AMOUNT)
           ,0)
      FROM
        JAI_RGM_TRX_RECORDS
      WHERE SOURCE = 'MANUAL'
        AND REGIME_CODE = 'SERVICE'
        AND TAX_TYPE IN ( 'SERVICE_EDUCATION_CESS' )
        AND SOURCE_TRX_TYPE = 'PAYMENT'
        AND REGIME_PRIMARY_REGNO = PRM_RGM_PRIM_REGNO
        AND ( NVL(TRUNC(CREATION_DATE)
         ,TRUNC(SYSDATE)) ) < LV_DATE
        AND ORGANIZATION_ID = NVL(PRM_ORG_ID
         ,ORGANIZATION_ID)
        AND SERVICE_TYPE_CODE = NVL(PRM_SERVICE_TYPE
         ,SERVICE_TYPE_CODE);
    LV_INV_OPEN_BAL NUMBER := 0;
    LV_OPEN_DIST_BAL NUMBER := 0;
    LV_AR_UTIL_CREDIT NUMBER := 0;
    LV_AR_SER_DIST_OUT_DEBIT NUMBER := 0;
    LV_MANUAL_BAL NUMBER := 0;
    LV_MANUAL_DEBIT_BAL NUMBER := 0;
    LV_MANUAL_PAYMENT NUMBER := 0;
  BEGIN
    LV_DATE := '01' || '-' || MONTH1 || '-' || YEAR1;
    OPEN CUR_INVOICE_OPEN_BAL;
    FETCH CUR_INVOICE_OPEN_BAL
     INTO LV_INV_OPEN_BAL;
    CLOSE CUR_INVOICE_OPEN_BAL;
    OPEN CUR_DIST_IN;
    FETCH CUR_DIST_IN
     INTO LV_OPEN_DIST_BAL;
    CLOSE CUR_DIST_IN;
    OPEN CUR_MANUAL_IN;
    FETCH CUR_MANUAL_IN
     INTO LV_MANUAL_BAL;
    CLOSE CUR_MANUAL_IN;
    OPEN CUR_MANUAL_DEBIT;
    FETCH CUR_MANUAL_DEBIT
     INTO LV_MANUAL_DEBIT_BAL;
    CLOSE CUR_MANUAL_DEBIT;
    OPEN CUR_AR_UTIL_CREDIT;
    FETCH CUR_AR_UTIL_CREDIT
     INTO LV_AR_UTIL_CREDIT;
    CLOSE CUR_AR_UTIL_CREDIT;
    OPEN CUR_AR_SER_DIST_OUT_DEBIT;
    FETCH CUR_AR_SER_DIST_OUT_DEBIT
     INTO LV_AR_SER_DIST_OUT_DEBIT;
    CLOSE CUR_AR_SER_DIST_OUT_DEBIT;
    OPEN CUR_PAYMENT;
    FETCH CUR_PAYMENT
     INTO LV_MANUAL_PAYMENT;
    CLOSE CUR_PAYMENT;
    RETURN (NVL(LV_OPEN_DIST_BAL
              ,0) + NVL(LV_INV_OPEN_BAL
              ,0) + NVL(LV_MANUAL_BAL
              ,0) - NVL(LV_AR_UTIL_CREDIT
              ,0) - NVL(LV_AR_SER_DIST_OUT_DEBIT
              ,0) - NVL(LV_MANUAL_DEBIT_BAL
              ,0) + NVL(LV_MANUAL_PAYMENT
              ,0));
  END CF_EDUCESS_OPENING_BALANCEFORM;
  FUNCTION CF_EDUCESS_CREDIT_AVAILEDFORMU(MONTH1 IN VARCHAR2
                                         ,YEAR1 IN VARCHAR2) RETURN NUMBER IS
    LV_DATE VARCHAR2(8);
    CURSOR C_SERV_CREDIT(CPV_ITEM_CLASS IN VARCHAR2) IS
      SELECT
        SUM(TRXRECS.CREDIT_AMOUNT) EDU_CESS_CREDIT
      FROM
        JAI_RGM_TRX_RECORDS TRXRECS,
        JAI_RGM_TRX_REFS TRXREFS,
        AP_INVOICES_ALL APA,
        JAI_CMN_VENDOR_SITES JPVS,
        PO_VENDOR_SITES_ALL PVSA,
        JAI_INV_ITM_SETUPS JMSI
      WHERE TRXREFS.REFERENCE_ID = TRXRECS.REFERENCE_ID
        AND APA.CANCELLED_DATE IS NULL
        AND APA.CANCELLED_BY IS NULL
        AND APA.CANCELLED_AMOUNT IS NULL
        AND JPVS.VENDOR_ID = APA.VENDOR_ID
        AND JPVS.VENDOR_SITE_ID = APA.VENDOR_SITE_ID
        AND APA.VENDOR_ID = PVSA.VENDOR_ID
        AND APA.VENDOR_SITE_ID = PVSA.VENDOR_SITE_ID
        AND APA.INVOICE_ID = TRXREFS.INVOICE_ID
        AND TRXREFS.ORGANIZATION_ID = JMSI.ORGANIZATION_ID
        AND TRXREFS.ITEM_ID = JMSI.INVENTORY_ITEM_ID
        AND JMSI.ITEM_CLASS = CPV_ITEM_CLASS
        AND TRXRECS.SOURCE in ( 'AP' )
        AND TRXRECS.REGIME_PRIMARY_REGNO = PRM_RGM_PRIM_REGNO
        AND TRXRECS.REGIME_CODE = 'SERVICE'
        AND TRUNC(TRXRECS.TRANSACTION_DATE) between TRUNC(PRM_FROMDT)
        AND TRUNC(PRM_TODT)
        AND TO_CHAR(TRXRECS.TRANSACTION_DATE
             ,'MON-YYYY') = LV_DATE
        AND TRXRECS.ORGANIZATION_ID = NVL(PRM_ORG_ID
         ,TRXRECS.ORGANIZATION_ID)
        AND TRXRECS.SERVICE_TYPE_CODE = NVL(PRM_SERVICE_TYPE
         ,TRXRECS.SERVICE_TYPE_CODE)
        AND TRXREFS.TAX_TYPE = 'SERVICE_EDUCATION_CESS';
    CURSOR C_SERV_CREDIT_1(CPV_ITEM_CLASS IN VARCHAR2) IS
      SELECT
        SUM(JRTR.CREDIT_AMOUNT) EDU_CESS_CREDIT
      FROM
        JAI_RGM_TRX_RECORDS JRTR,
        JAI_RGM_MANUAL_TRXS JMT,
        PO_VENDOR_SITES_ALL PVSA
      WHERE JRTR.SOURCE = 'MANUAL'
        AND JRTR.REGIME_CODE = 'SERVICE'
        AND JRTR.SOURCE_DOCUMENT_ID = JMT.TRANSACTION_NUMBER
        AND PVSA.VENDOR_ID = JMT.PARTY_ID
        AND PVSA.VENDOR_SITE_ID = JMT.PARTY_SITE_ID
        AND JMT.ITEM_CLASS = CPV_ITEM_CLASS
        AND JRTR.SOURCE_TRX_TYPE IN ( 'ADJUSTMENT-RECOVERY' , 'RECOVERY' )
        AND JRTR.REGIME_PRIMARY_REGNO = PRM_RGM_PRIM_REGNO
        AND TRUNC(JRTR.TRANSACTION_DATE) BETWEEN TRUNC(PRM_FROMDT)
        AND TRUNC(PRM_TODT)
        AND TO_CHAR(JRTR.TRANSACTION_DATE
             ,'MON-YYYY') = LV_DATE
        AND JRTR.ORGANIZATION_ID = NVL(PRM_ORG_ID
         ,JRTR.ORGANIZATION_ID)
        AND JRTR.SERVICE_TYPE_CODE = NVL(PRM_SERVICE_TYPE
         ,JRTR.SERVICE_TYPE_CODE)
        AND JRTR.TAX_TYPE = 'SERVICE_EDUCATION_CESS';
    LN_SERV_CREDIT_RMIN JAI_RGM_TRX_RECORDS.CREDIT_AMOUNT%TYPE;
    LN_SERV_CREDIT_RM JAI_RGM_TRX_RECORDS.CREDIT_AMOUNT%TYPE;
    LN_SERV_CREDIT_CGIN JAI_RGM_TRX_RECORDS.CREDIT_AMOUNT%TYPE;
    LN_SERV_CREDIT_FG JAI_RGM_TRX_RECORDS.CREDIT_AMOUNT%TYPE;
  BEGIN
    LV_DATE := MONTH1 || '-' || YEAR1;
    OPEN C_SERV_CREDIT('RMIN');
    FETCH C_SERV_CREDIT
     INTO LN_SERV_CREDIT_RMIN;
    CLOSE C_SERV_CREDIT;
    OPEN C_SERV_CREDIT_1('RM');
    FETCH C_SERV_CREDIT_1
     INTO LN_SERV_CREDIT_RM;
    CLOSE C_SERV_CREDIT_1;
    OPEN C_SERV_CREDIT('CGIN');
    FETCH C_SERV_CREDIT
     INTO LN_SERV_CREDIT_CGIN;
    CLOSE C_SERV_CREDIT;
    OPEN C_SERV_CREDIT_1('CG');
    FETCH C_SERV_CREDIT_1
     INTO LN_SERV_CREDIT_FG;
    CLOSE C_SERV_CREDIT_1;
    RETURN NVL(LN_SERV_CREDIT_RMIN
              ,0) + NVL(LN_SERV_CREDIT_RM
              ,0) + NVL(LN_SERV_CREDIT_CGIN
              ,0) + NVL(LN_SERV_CREDIT_FG
              ,0);
  END CF_EDUCESS_CREDIT_AVAILEDFORMU;
  FUNCTION CF_EDUCESS_CLOSING_BALANCEFORM(CF_EDUCESS_OPENING_BALANCE IN NUMBER
                                         ,CF_CREDIT_UTILIZED IN NUMBER) RETURN NUMBER IS
  BEGIN
    RETURN NVL(CF_EDUCESS_OPENING_BALANCE
              ,0) + NVL(CP_EDUCESS_CREDIT_AVAILED
              ,0) - NVL(CF_CREDIT_UTILIZED
              ,0);
  END CF_EDUCESS_CLOSING_BALANCEFORM;
  FUNCTION CF_CCRD_ST_DISTRIBUTEDFORMULA(MONTH1 IN VARCHAR2
                                        ,YEAR1 IN VARCHAR2) RETURN NUMBER IS
    LV_DATE VARCHAR2(8);
    CURSOR CUR_AR_SER_DIST_OUT_DEBIT IS
      SELECT
        NVL(SUM(DEBIT_AMOUNT)
           ,0) DEBIT
      FROM
        JAI_RGM_TRX_RECORDS
      WHERE SOURCE = 'SERVICE_DISTRIBUTE_OUT'
        AND REGIME_CODE = 'SERVICE'
        AND TAX_TYPE = 'Service'
        AND REGIME_PRIMARY_REGNO = PRM_RGM_PRIM_REGNO
        AND ( NVL(TRUNC(CREATION_DATE)
         ,SYSDATE) ) BETWEEN ( NVL(PRM_FROMDT
         ,SYSDATE) )
        AND ( NVL(PRM_TODT
         ,SYSDATE) )
        AND SERVICE_TYPE_CODE = NVL(PRM_SERVICE_TYPE
         ,SERVICE_TYPE_CODE)
        AND TO_CHAR(CREATION_DATE
             ,'MON-YYYY') = LV_DATE
        AND ORGANIZATION_ID = NVL(PRM_ORG_ID
         ,ORGANIZATION_ID);
    LN_DEBIT_AMOUNT JAI_RGM_TRX_RECORDS.DEBIT_AMOUNT%TYPE;
  BEGIN
    LV_DATE := MONTH1 || '-' || YEAR1;
    OPEN CUR_AR_SER_DIST_OUT_DEBIT;
    FETCH CUR_AR_SER_DIST_OUT_DEBIT
     INTO LN_DEBIT_AMOUNT;
    CLOSE CUR_AR_SER_DIST_OUT_DEBIT;
    RETURN LN_DEBIT_AMOUNT;
  END CF_CCRD_ST_DISTRIBUTEDFORMULA;
  FUNCTION CF_CCRD_CLOSING_BALANCEFORMULA(CF_OPENING_BALANCE IN NUMBER
                                         ,CF_TOTAL_CREDIT IN NUMBER
                                         ,CF_CCRD_ST_DISTRIBUTED IN NUMBER) RETURN NUMBER IS
  BEGIN
    RETURN CF_OPENING_BALANCE + CF_TOTAL_CREDIT - CF_CCRD_ST_DISTRIBUTED;
  END CF_CCRD_CLOSING_BALANCEFORMULA;
  FUNCTION CF_ECRD_EC_DISTRIBUTEDFORMULA(MONTH1 IN VARCHAR2
                                        ,YEAR1 IN VARCHAR2) RETURN NUMBER IS
    LV_DATE VARCHAR2(8);
    CURSOR CUR_AR_SER_DIST_OUT_DEBIT IS
      SELECT
        NVL(SUM(DEBIT_AMOUNT)
           ,0) DEBIT
      FROM
        JAI_RGM_TRX_RECORDS
      WHERE SOURCE = 'SERVICE_DISTRIBUTE_OUT'
        AND REGIME_CODE = 'SERVICE'
        AND TAX_TYPE = 'SERVICE_EDUCATION_CESS'
        AND REGIME_PRIMARY_REGNO = PRM_RGM_PRIM_REGNO
        AND ( NVL(TRUNC(CREATION_DATE)
         ,SYSDATE) ) BETWEEN ( NVL(PRM_FROMDT
         ,SYSDATE) )
        AND ( NVL(PRM_TODT
         ,SYSDATE) )
        AND TO_CHAR(CREATION_DATE
             ,'MON-YYYY') = LV_DATE
        AND SERVICE_TYPE_CODE = NVL(PRM_SERVICE_TYPE
         ,SERVICE_TYPE_CODE)
        AND ORGANIZATION_ID = NVL(PRM_ORG_ID
         ,ORGANIZATION_ID);
    LN_DEBIT_AMOUNT JAI_RGM_TRX_RECORDS.DEBIT_AMOUNT%TYPE;
  BEGIN
    LV_DATE := MONTH1 || '-' || YEAR1;
    /*SRW.MESSAGE(1275
               ,LV_DATE)*/NULL;
    OPEN CUR_AR_SER_DIST_OUT_DEBIT;
    FETCH CUR_AR_SER_DIST_OUT_DEBIT
     INTO LN_DEBIT_AMOUNT;
    CLOSE CUR_AR_SER_DIST_OUT_DEBIT;
    RETURN LN_DEBIT_AMOUNT;
  END CF_ECRD_EC_DISTRIBUTEDFORMULA;
  FUNCTION CF_ECRD_EC_RECEIVEDFORMULA(CF_EDUCESS_CREDIT_AVAILED IN NUMBER) RETURN NUMBER IS
  BEGIN
    RETURN CF_EDUCESS_CREDIT_AVAILED;
  END CF_ECRD_EC_RECEIVEDFORMULA;
  FUNCTION CF_ECRD_CLOSING_BALANCEFORMULA(CF_EDUCESS_OPENING_BALANCE IN NUMBER
                                         ,CF_ECRD_EC_RECEIVED IN NUMBER
                                         ,CF_ECRD_EC_DISTRIBUTED IN NUMBER) RETURN NUMBER IS
  BEGIN
    RETURN CF_EDUCESS_OPENING_BALANCE + CF_ECRD_EC_RECEIVED - CF_ECRD_EC_DISTRIBUTED;
  END CF_ECRD_CLOSING_BALANCEFORMULA;
  FUNCTION CF_GET_SERVICE_TYPE(LPN_REFERENCE_ID IN NUMBER) RETURN VARCHAR2 IS
    LV_SERVICE_TYPE VARCHAR2(30);
    LV_ORG NUMBER;
    LV_LOC NUMBER;
    LV_PROCESS_FLG VARCHAR2(30);
    LV_PROCESS_MSG VARCHAR2(40);
  BEGIN
    RETURN LV_SERVICE_TYPE;
  END CF_GET_SERVICE_TYPE;
  FUNCTION BEFOREREPORT RETURN BOOLEAN IS
    CURSOR C_PROGRAM_ID(P_REQUEST_ID IN NUMBER) IS
      SELECT
        CONCURRENT_PROGRAM_ID,
        NVL(ENABLE_TRACE
           ,'N')
      FROM
        FND_CONCURRENT_REQUESTS
      WHERE REQUEST_ID = P_REQUEST_ID;
    CURSOR GET_AUDSID IS
      SELECT
        A.SID,
        A.SERIAL#,
        B.SPID
      FROM
        V$SESSION A,
        V$PROCESS B
      WHERE AUDSID = USERENV('SESSIONID')
        AND A.PADDR = B.ADDR;
    CURSOR GET_DBNAME IS
      SELECT
        NAME
      FROM
        V$DATABASE;
    V_ENABLE_TRACE FND_CONCURRENT_PROGRAMS.ENABLE_TRACE%TYPE;
    V_PROGRAM_ID FND_CONCURRENT_PROGRAMS.CONCURRENT_PROGRAM_ID%TYPE;
    AUDSID NUMBER := USERENV('SESSIONID');
    SID NUMBER;
    SERIAL NUMBER;
    SPID VARCHAR2(9);
    NAME1 VARCHAR2(25);
  BEGIN
    /*SRW.MESSAGE(1275
               ,'Report Version is 120.1 last modified date is 02/05/2007')*/NULL;
    BEGIN
    PRM_FROMDT1 := to_char(PRM_FROMDT,'dd-mm-yyyy');
	PRM_TODT1 := to_char(PRM_TODT,'dd-mm-yyyy');
      OPEN C_PROGRAM_ID(P_CONC_REQUEST_ID);
      FETCH C_PROGRAM_ID
       INTO V_PROGRAM_ID,V_ENABLE_TRACE;
      CLOSE C_PROGRAM_ID;
      /*SRW.MESSAGE(1275
                 ,'v_program_id -> ' || V_PROGRAM_ID || ', v_enable_trace -> ' || V_ENABLE_TRACE || ', request_id -> ' || P_CONC_REQUEST_ID)*/NULL;
      IF V_ENABLE_TRACE = 'Y' THEN
        OPEN GET_AUDSID;
        FETCH GET_AUDSID
         INTO SID,SERIAL,SPID;
        CLOSE GET_AUDSID;
        OPEN GET_DBNAME;
        FETCH GET_DBNAME
         INTO NAME1;
        CLOSE GET_DBNAME;
        /*SRW.MESSAGE(1275
                   ,'TraceFile Name = ' || LOWER(NAME1) || '_ora_' || SPID || '.trc')*/NULL;
        EXECUTE IMMEDIATE
          'ALTER SESSION SET EVENTS ''10046 trace name context forever, level 4''';
      END IF;
    EXCEPTION
      WHEN OTHERS THEN
        /*SRW.MESSAGE(1275
                   ,'Error during enabling the trace. ErrCode -> ' || SQLCODE || ', ErrMesg -> ' || SQLERRM)*/NULL;
    END;
    RETURN (TRUE);
  END BEFOREREPORT;
  FUNCTION CF_COUNTFORMULA(CS_COUNT IN NUMBER) RETURN NUMBER IS
  BEGIN
    RETURN CS_COUNT + 1;
  END CF_COUNTFORMULA;
  FUNCTION CF_COUNT_RECORDSFORMULA(CS_COUNT_RECORDS IN NUMBER) RETURN NUMBER IS
  BEGIN
    RETURN CS_COUNT_RECORDS + 1;
  END CF_COUNT_RECORDSFORMULA;
  FUNCTION CF_EDUCESS_SERVICESFORMULA RETURN CHAR IS
  BEGIN
    RETURN ' ';
  END CF_EDUCESS_SERVICESFORMULA;
  FUNCTION CF_CCRD_ELIGIBLEFORMULA RETURN CHAR IS
  BEGIN
    RETURN ' ';
  END CF_CCRD_ELIGIBLEFORMULA;
  FUNCTION CF_ECRD_ELIGIBLEFORMULA RETURN CHAR IS
  BEGIN
    RETURN ' ';
  END CF_ECRD_ELIGIBLEFORMULA;
  FUNCTION CF_1FORMULA0012(CS_1 IN NUMBER) RETURN NUMBER IS
  BEGIN
    RETURN CS_1 + 2;
  END CF_1FORMULA0012;
  FUNCTION CF_SERVICE_TYPE_DESCFORMULA(SERVICE_TYPE_CODE IN VARCHAR2) RETURN CHAR IS
    DESCRIPTION JA_LOOKUPS.DESCRIPTION%TYPE;
  BEGIN
    SELECT
      DESCRIPTION
    INTO DESCRIPTION
    FROM
      JA_LOOKUPS
    WHERE LOOKUP_TYPE = 'JAI_SERVICE_TYPE'
      AND LOOKUP_CODE = SERVICE_TYPE_CODE;
    RETURN DESCRIPTION;
  END CF_SERVICE_TYPE_DESCFORMULA;
  FUNCTION CP_SERVICE_CESS_AMOUNT_P RETURN NUMBER IS
  BEGIN
    RETURN CP_SERVICE_CESS_AMOUNT;
  END CP_SERVICE_CESS_AMOUNT_P;
  FUNCTION CP_INVOICE_DATE_P RETURN DATE IS
  BEGIN
    RETURN CP_INVOICE_DATE;
  END CP_INVOICE_DATE_P;
  FUNCTION CP_ST_SERVICE_CESS_AMOUNT_P RETURN NUMBER IS
  BEGIN
    RETURN CP_ST_SERVICE_CESS_AMOUNT;
  END CP_ST_SERVICE_CESS_AMOUNT_P;
  FUNCTION CP_CREDIT_AVAILED_P RETURN NUMBER IS
  BEGIN
    RETURN CP_CREDIT_AVAILED;
  END CP_CREDIT_AVAILED_P;
  FUNCTION CP_EDUCESS_CREDIT_AVAILED_P RETURN NUMBER IS
  BEGIN
    RETURN CP_EDUCESS_CREDIT_AVAILED;
  END CP_EDUCESS_CREDIT_AVAILED_P;
END JA_JAINST3_XMLP_PKG;



/
