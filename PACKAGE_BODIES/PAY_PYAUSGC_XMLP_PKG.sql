--------------------------------------------------------
--  DDL for Package Body PAY_PYAUSGC_XMLP_PKG
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE PACKAGE BODY "APPS"."PAY_PYAUSGC_XMLP_PKG" AS
/* $Header: PYAUSGCB.pls 120.0 2007/12/13 12:16:36 amakrish noship $ */
  FUNCTION AFTERREPORT RETURN BOOLEAN IS
  BEGIN
    RETURN (TRUE);
  END AFTERREPORT;

  FUNCTION CF_BUSINESS_GROUPFORMULA RETURN VARCHAR2 IS
    V_BUSINESS_GROUP HR_ALL_ORGANIZATION_UNITS.NAME%TYPE;
  BEGIN
    V_BUSINESS_GROUP := HR_REPORTS.GET_BUSINESS_GROUP(P_BUSINESS_GROUP_ID);
    RETURN V_BUSINESS_GROUP;
  END CF_BUSINESS_GROUPFORMULA;

  FUNCTION BEFOREREPORT RETURN BOOLEAN IS
  BEGIN
  declare
l_date_format varchar2(30) := 'DD-MON-YYYY';
  begin
    P_START_DATE := TO_DATE('01-' || TO_CHAR(P_DATE
                                   ,'MON-YYYY')
                           ,'DD-MON-YYYY');
    SELECT
      LAST_DAY(P_DATE)
    INTO
      P_END_DATE
    FROM
      DUAL;
    SELECT
      'For' || '  ' || TO_CHAR(P_DATE
             ,'MON-YYYY')
    INTO
      P_MON_YYYY
    FROM
      DUAL;
    CP_SGC_RATE := P_SGC_RATE || ' ' || '%';
    PAY_AU_SGC_PKG.GLOBAL_SUPER_VALUES(P_START_DATE
                                      ,'AU');
    P_CONC_REQUEST_ID := FND_GLOBAL.CONC_REQUEST_ID;

    P_DATE1 := TO_DATE(P_DATE,l_date_format);
    RETURN (TRUE);
    end;
  END BEFOREREPORT;

  FUNCTION CF_LEGISLATION_CODEFORMULA RETURN VARCHAR2 IS
    V_LEGISLATION_CODE HR_ORGANIZATION_INFORMATION.ORG_INFORMATION9%TYPE := NULL;
    CURSOR LEGISLATION_CODE(C_BUSINESS_GROUP_ID IN HR_ORGANIZATION_INFORMATION.ORGANIZATION_ID%TYPE) IS
      SELECT
        ORG_INFORMATION9
      FROM
        HR_ORGANIZATION_INFORMATION
      WHERE ORGANIZATION_ID = C_BUSINESS_GROUP_ID
        AND ORG_INFORMATION9 is not null;
  BEGIN
    OPEN LEGISLATION_CODE(P_BUSINESS_GROUP_ID);
    FETCH LEGISLATION_CODE
     INTO
       V_LEGISLATION_CODE;
    CLOSE LEGISLATION_CODE;
    RETURN V_LEGISLATION_CODE;
  END CF_LEGISLATION_CODEFORMULA;

  FUNCTION CF_CURRENCY_FORMAT_MASKFORMULA(CF_LEGISLATION_CODE IN VARCHAR2) RETURN VARCHAR2 IS
    V_CURRENCY_CODE FND_CURRENCIES.CURRENCY_CODE%TYPE;
    V_FORMAT_MASK VARCHAR2(100) := NULL;
    V_FIELD_LENGTH NUMBER(3) := 15;
    CURSOR CURRENCY_FORMAT_MASK(C_TERRITORY_CODE IN FND_CURRENCIES.ISSUING_TERRITORY_CODE%TYPE) IS
      SELECT
        CURRENCY_CODE
      FROM
        FND_CURRENCIES
      WHERE ISSUING_TERRITORY_CODE = C_TERRITORY_CODE;
  BEGIN
    OPEN CURRENCY_FORMAT_MASK(CF_LEGISLATION_CODE);
    FETCH CURRENCY_FORMAT_MASK
     INTO
       V_CURRENCY_CODE;
    CLOSE CURRENCY_FORMAT_MASK;
    CP_CURRENCY_CODE := '(' || V_CURRENCY_CODE || ')';
    V_FORMAT_MASK := FND_CURRENCY.GET_FORMAT_MASK(V_CURRENCY_CODE
                                                 ,V_FIELD_LENGTH);
    RETURN V_FORMAT_MASK;
  END CF_CURRENCY_FORMAT_MASKFORMULA;

  FUNCTION CF_PAYAUSGC_PKBFORMULA(ASSIGNMENT_ID IN NUMBER
                                 ,AGE IN NUMBER) RETURN NUMBER IS
  BEGIN
    PAY_AU_SGC_PKG.EMPLOYEE_SUPER_DETAILS(ASSIGNMENT_ID
                                         ,P_REGISTERED_EMPLOYER
                                         ,AGE
                                         ,P_END_DATE
                                         ,P_SGC_RATE
                                         ,P_BUSINESS_GROUP_ID
                                         ,'AU'
                                         ,CP_SUPER_SAL
                                         ,CP_SGC_CONTR
                                         ,CP_COMPLIANCE_MESG
                                         ,CP_WARNING_MESG);
    RETURN NULL;
  END CF_PAYAUSGC_PKBFORMULA;

  FUNCTION CF_END_OF_REPORTFORMULA(CS_CNT_ASG_ID IN NUMBER) RETURN CHAR IS
    END_OF_REPORT VARCHAR2(40) := '*****  End Of Report  *****';
    NO_DATA_FOUND VARCHAR2(40) := '*****  No Data Found  *****';
  BEGIN
    IF CS_CNT_ASG_ID > 0 THEN
      RETURN (END_OF_REPORT);
    ELSIF CS_CNT_ASG_ID = 0 THEN
      RETURN (NO_DATA_FOUND);
    END IF;
  END CF_END_OF_REPORTFORMULA;

  FUNCTION CF_SGC_RATEFORMULA RETURN CHAR IS
  BEGIN
    CP_SGC_RATE_1 := P_SGC_RATE || '  ' || '%';
    RETURN (CP_SGC_RATE_1);
  END CF_SGC_RATEFORMULA;

  FUNCTION CF_COST_CENTREFORMULA RETURN VARCHAR2 IS
    CURSOR C_COST_CENTRE IS
      SELECT
        CONCATENATED_SEGMENTS
      FROM
        PAY_COST_ALLOCATION_KEYFLEX
      WHERE COST_ALLOCATION_KEYFLEX_ID = P_COST_CENTRE;
    L_CONCATENATED_SEGMENTS PAY_COST_ALLOCATION_KEYFLEX.CONCATENATED_SEGMENTS%TYPE := NULL;
  BEGIN
    IF P_COST_CENTRE IS NOT NULL THEN
      OPEN C_COST_CENTRE;
      FETCH C_COST_CENTRE
       INTO
         L_CONCATENATED_SEGMENTS;
      IF SQL%NOTFOUND THEN
        RAISE NO_DATA_FOUND;
      END IF;
      CLOSE C_COST_CENTRE;
    END IF;
    RETURN (L_CONCATENATED_SEGMENTS);
  EXCEPTION
    WHEN OTHERS THEN
      NULL;
  END CF_COST_CENTREFORMULA;

  FUNCTION CF_ALL_EXCEPFORMULA RETURN CHAR IS
    L_ALL_EXCEP HR_LOOKUPS.MEANING%TYPE;
    CURSOR ALL_EXCEP IS
      SELECT
        MEANING
      FROM
        HR_LOOKUPS
      WHERE LOOKUP_CODE = P_ALL_EXCEPTION
        AND LOOKUP_TYPE = 'AU_SGC_COMPLIANCE'
        AND ENABLED_FLAG = 'Y';
  BEGIN
    OPEN ALL_EXCEP;
    FETCH ALL_EXCEP
     INTO
       L_ALL_EXCEP;
    IF ALL_EXCEP%NOTFOUND THEN
      RAISE NO_DATA_FOUND;
    END IF;
    CLOSE ALL_EXCEP;
    RETURN (L_ALL_EXCEP);
  EXCEPTION
    WHEN OTHERS THEN
      NULL;
  END CF_ALL_EXCEPFORMULA;

  FUNCTION CP_SGC_RATE_1_P RETURN VARCHAR2 IS
  BEGIN
    RETURN CP_SGC_RATE_1;
  END CP_SGC_RATE_1_P;

  FUNCTION CP_START_DATE_P RETURN DATE IS
  BEGIN
    RETURN CP_START_DATE;
  END CP_START_DATE_P;

  FUNCTION CP_END_DATE_P RETURN DATE IS
  BEGIN
    RETURN CP_END_DATE;
  END CP_END_DATE_P;

  FUNCTION CP_SUPER_SAL_P RETURN NUMBER IS
  BEGIN
    RETURN CP_SUPER_SAL;
  END CP_SUPER_SAL_P;

  FUNCTION CP_COMPLIANCE_MESG_P RETURN VARCHAR2 IS
  BEGIN
    RETURN CP_COMPLIANCE_MESG;
  END CP_COMPLIANCE_MESG_P;

  FUNCTION CP_WARNING_MESG_P RETURN VARCHAR2 IS
  BEGIN
    RETURN CP_WARNING_MESG;
  END CP_WARNING_MESG_P;

  FUNCTION CP_SGC_CONTR_P RETURN NUMBER IS
  BEGIN
    RETURN CP_SGC_CONTR;
  END CP_SGC_CONTR_P;

  FUNCTION CP_CURRENCY_CODE_P RETURN VARCHAR2 IS
  BEGIN
    RETURN CP_CURRENCY_CODE;
  END CP_CURRENCY_CODE_P;

  FUNCTION CP_SGC_RATE_P RETURN VARCHAR2 IS
  BEGIN
    RETURN CP_SGC_RATE;
  END CP_SGC_RATE_P;

END PAY_PYAUSGC_XMLP_PKG;

/
