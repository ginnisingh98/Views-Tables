--------------------------------------------------------
--  DDL for Package Body IBY_SYS_PMT_PROFILES_PKG
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE PACKAGE BODY "APPS"."IBY_SYS_PMT_PROFILES_PKG" as
/* $Header: ibysyppb.pls 120.4 2005/11/05 01:46:10 syidner noship $ */
procedure INSERT_ROW (
  X_ROWID in out NOCOPY VARCHAR2,
  X_SYSTEM_PROFILE_CODE in VARCHAR2,
  X_PAYMENT_TEXT_MESSAGE2 in VARCHAR2,
  X_INACTIVE_DATE in DATE,
  X_ACK_TRANSMIT_PROTOCOL_CODE in VARCHAR2,
  X_ACK_SECURITY_PROTOCOL_CODE in VARCHAR2,
  X_SEND_TO_FILE_FLAG in VARCHAR2,
  X_PI_REGISTER_FORMAT in VARCHAR2,
  X_ATTRIBUTE_CATEGORY in VARCHAR2,
  X_ATTRIBUTE1 in VARCHAR2,
  X_ATTRIBUTE2 in VARCHAR2,
  X_ATTRIBUTE3 in VARCHAR2,
  X_ATTRIBUTE4 in VARCHAR2,
  X_ATTRIBUTE5 in VARCHAR2,
  X_ATTRIBUTE6 in VARCHAR2,
  X_ATTRIBUTE7 in VARCHAR2,
  X_ATTRIBUTE8 in VARCHAR2,
  X_ATTRIBUTE9 in VARCHAR2,
  X_ATTRIBUTE10 in VARCHAR2,
  X_ATTRIBUTE11 in VARCHAR2,
  X_ATTRIBUTE12 in VARCHAR2,
  X_ATTRIBUTE13 in VARCHAR2,
  X_ATTRIBUTE14 in VARCHAR2,
  X_ATTRIBUTE15 in VARCHAR2,
  X_PERIODIC_SEQUENCE_NAME_2 in VARCHAR2,
  X_PERIODIC_SEQUENCE_NAME_3 in VARCHAR2,
  X_PROCESSING_TYPE in VARCHAR2,
  X_MARK_COMPLETE_EVENT in VARCHAR2,
  X_MANUAL_MARK_COMPLETE_FLAG in VARCHAR2,
  X_POSITIVE_PAY_DELIVERY_FLAG in VARCHAR2,
  X_TRANSMIT_INSTR_IMMED_FLAG in VARCHAR2,
  X_SEEDED_FLAG in VARCHAR2,
  X_AUTOMATIC_PI_REG_SUBMIT in VARCHAR2,
  X_OBJECT_VERSION_NUMBER in NUMBER,
  X_DECLARATION_OPTION in VARCHAR2,
  X_DCL_ONLY_FOREIGN_CURR_PMT_FL in VARCHAR2,
  X_DECLARATION_REPORT_FORMAT_CO in VARCHAR2,
  X_DECLARATION_CURR_FX_RATE_TYP in VARCHAR2,
  X_DECLARATION_CURRENCY_CODE in VARCHAR2,
  X_DECLARATION_THRESHOLD_AMOUNT in NUMBER,
  X_BANK_INSTRUCTION1_CODE in VARCHAR2,
  X_BANK_INSTRUCTION2_CODE in VARCHAR2,
  X_BANK_INSTRUCTION_DETAILS in VARCHAR2,
  X_PAYMENT_TEXT_MESSAGE1 in VARCHAR2,
  X_PRINT_INSTRUCTION_IMMED_FLAG in VARCHAR2,
  X_DEFAULT_PRINTER in VARCHAR2,
  X_DEFAULT_PAYMENT_DOCUMENT_ID in NUMBER,
  X_PERIODIC_SEQUENCE_NAME_1 in VARCHAR2,
  X_TRANSMIT_PROTOCOL_CODE in VARCHAR2,
  X_PAYMENT_FORMAT_CODE in VARCHAR2,
  X_POSITIVE_PAY_FORMAT_CODE in VARCHAR2,
  X_PAY_FILE_LETTER_FORMAT_CODE in VARCHAR2,
  X_BEPID in NUMBER,
  X_SECURITY_PROTOCOL_CODE in VARCHAR2,
  X_SYSTEM_PROFILE_NAME in VARCHAR2,
  X_SYSTEM_PROFILE_DESCRIPTION in VARCHAR2,
  X_CREATION_DATE in DATE,
  X_CREATED_BY in NUMBER,
  X_LAST_UPDATE_DATE in DATE,
  X_LAST_UPDATED_BY in NUMBER,
  X_LAST_UPDATE_LOGIN in NUMBER
) is
  cursor C is select ROWID from IBY_SYS_PMT_PROFILES_B
    where SYSTEM_PROFILE_CODE = X_SYSTEM_PROFILE_CODE
    ;
begin
  insert into IBY_SYS_PMT_PROFILES_B (
    PAYMENT_TEXT_MESSAGE2,
    INACTIVE_DATE,
    ACK_TRANSMIT_PROTOCOL_CODE,
    ACK_SECURITY_PROTOCOL_CODE,
    SEND_TO_FILE_FLAG,
    PI_REGISTER_FORMAT,
    ATTRIBUTE_CATEGORY,
    ATTRIBUTE1,
    ATTRIBUTE2,
    ATTRIBUTE3,
    ATTRIBUTE4,
    ATTRIBUTE5,
    ATTRIBUTE6,
    ATTRIBUTE7,
    ATTRIBUTE8,
    ATTRIBUTE9,
    ATTRIBUTE10,
    ATTRIBUTE11,
    ATTRIBUTE12,
    ATTRIBUTE13,
    ATTRIBUTE14,
    ATTRIBUTE15,
    PERIODIC_SEQUENCE_NAME_2,
    PERIODIC_SEQUENCE_NAME_3,
    PROCESSING_TYPE,
    MARK_COMPLETE_EVENT,
    MANUAL_MARK_COMPLETE_FLAG,
    POSITIVE_PAY_DELIVERY_FLAG,
    TRANSMIT_INSTR_IMMED_FLAG,
    SEEDED_FLAG,
    AUTOMATIC_PI_REG_SUBMIT,
    OBJECT_VERSION_NUMBER,
    DECLARATION_OPTION,
    DCL_ONLY_FOREIGN_CURR_PMT_FLAG,
    DECLARATION_REPORT_FORMAT_CODE,
    DECLARATION_CURR_FX_RATE_TYPE,
    DECLARATION_CURRENCY_CODE,
    DECLARATION_THRESHOLD_AMOUNT,
    BANK_INSTRUCTION1_CODE,
    BANK_INSTRUCTION2_CODE,
    BANK_INSTRUCTION_DETAILS,
    PAYMENT_TEXT_MESSAGE1,
    PRINT_INSTRUCTION_IMMED_FLAG,
    DEFAULT_PRINTER,
    DEFAULT_PAYMENT_DOCUMENT_ID,
    PERIODIC_SEQUENCE_NAME_1,
    TRANSMIT_PROTOCOL_CODE,
    PAYMENT_FORMAT_CODE,
    POSITIVE_PAY_FORMAT_CODE,
    PAY_FILE_LETTER_FORMAT_CODE,
    SYSTEM_PROFILE_CODE,
    BEPID,
    SECURITY_PROTOCOL_CODE,
    CREATION_DATE,
    CREATED_BY,
    LAST_UPDATE_DATE,
    LAST_UPDATED_BY,
    LAST_UPDATE_LOGIN
  ) values (
    X_PAYMENT_TEXT_MESSAGE2,
    X_INACTIVE_DATE,
    X_ACK_TRANSMIT_PROTOCOL_CODE,
    X_ACK_SECURITY_PROTOCOL_CODE,
    X_SEND_TO_FILE_FLAG,
    X_PI_REGISTER_FORMAT,
    X_ATTRIBUTE_CATEGORY,
    X_ATTRIBUTE1,
    X_ATTRIBUTE2,
    X_ATTRIBUTE3,
    X_ATTRIBUTE4,
    X_ATTRIBUTE5,
    X_ATTRIBUTE6,
    X_ATTRIBUTE7,
    X_ATTRIBUTE8,
    X_ATTRIBUTE9,
    X_ATTRIBUTE10,
    X_ATTRIBUTE11,
    X_ATTRIBUTE12,
    X_ATTRIBUTE13,
    X_ATTRIBUTE14,
    X_ATTRIBUTE15,
    X_PERIODIC_SEQUENCE_NAME_2,
    X_PERIODIC_SEQUENCE_NAME_3,
    X_PROCESSING_TYPE,
    X_MARK_COMPLETE_EVENT,
    X_MANUAL_MARK_COMPLETE_FLAG,
    X_POSITIVE_PAY_DELIVERY_FLAG,
    X_TRANSMIT_INSTR_IMMED_FLAG,
    X_SEEDED_FLAG,
    X_AUTOMATIC_PI_REG_SUBMIT,
    X_OBJECT_VERSION_NUMBER,
    X_DECLARATION_OPTION,
    X_DCL_ONLY_FOREIGN_CURR_PMT_FL,
    X_DECLARATION_REPORT_FORMAT_CO,
    X_DECLARATION_CURR_FX_RATE_TYP,
    X_DECLARATION_CURRENCY_CODE,
    X_DECLARATION_THRESHOLD_AMOUNT,
    X_BANK_INSTRUCTION1_CODE,
    X_BANK_INSTRUCTION2_CODE,
    X_BANK_INSTRUCTION_DETAILS,
    X_PAYMENT_TEXT_MESSAGE1,
    X_PRINT_INSTRUCTION_IMMED_FLAG,
    X_DEFAULT_PRINTER,
    X_DEFAULT_PAYMENT_DOCUMENT_ID,
    X_PERIODIC_SEQUENCE_NAME_1,
    X_TRANSMIT_PROTOCOL_CODE,
    X_PAYMENT_FORMAT_CODE,
    X_POSITIVE_PAY_FORMAT_CODE,
    X_PAY_FILE_LETTER_FORMAT_CODE,
    X_SYSTEM_PROFILE_CODE,
    X_BEPID,
    X_SECURITY_PROTOCOL_CODE,
    X_CREATION_DATE,
    X_CREATED_BY,
    X_LAST_UPDATE_DATE,
    X_LAST_UPDATED_BY,
    X_LAST_UPDATE_LOGIN
  );

  insert into IBY_SYS_PMT_PROFILES_TL (
    LAST_UPDATE_DATE,
    LAST_UPDATE_LOGIN,
    OBJECT_VERSION_NUMBER,
    SYSTEM_PROFILE_DESCRIPTION,
    LAST_UPDATED_BY,
    CREATION_DATE,
    CREATED_BY,
    SYSTEM_PROFILE_CODE,
    SYSTEM_PROFILE_NAME,
    LANGUAGE,
    SOURCE_LANG
  ) select
    X_LAST_UPDATE_DATE,
    X_LAST_UPDATE_LOGIN,
    X_OBJECT_VERSION_NUMBER,
    X_SYSTEM_PROFILE_DESCRIPTION,
    X_LAST_UPDATED_BY,
    X_CREATION_DATE,
    X_CREATED_BY,
    X_SYSTEM_PROFILE_CODE,
    X_SYSTEM_PROFILE_NAME,
    L.LANGUAGE_CODE,
    userenv('LANG')
  from FND_LANGUAGES L
  where L.INSTALLED_FLAG in ('I', 'B')
  and not exists
    (select NULL
    from IBY_SYS_PMT_PROFILES_TL T
    where T.SYSTEM_PROFILE_CODE = X_SYSTEM_PROFILE_CODE
    and T.LANGUAGE = L.LANGUAGE_CODE);

  open c;
  fetch c into X_ROWID;
  if (c%notfound) then
    close c;
    raise no_data_found;
  end if;
  close c;

end INSERT_ROW;

procedure LOCK_ROW (
  X_SYSTEM_PROFILE_CODE in VARCHAR2,
  X_PAYMENT_TEXT_MESSAGE2 in VARCHAR2,
  X_INACTIVE_DATE in DATE,
  X_ACK_TRANSMIT_PROTOCOL_CODE in VARCHAR2,
  X_ACK_SECURITY_PROTOCOL_CODE in VARCHAR2,
  X_SEND_TO_FILE_FLAG in VARCHAR2,
  X_PI_REGISTER_FORMAT in VARCHAR2,
  X_ATTRIBUTE_CATEGORY in VARCHAR2,
  X_ATTRIBUTE1 in VARCHAR2,
  X_ATTRIBUTE2 in VARCHAR2,
  X_ATTRIBUTE3 in VARCHAR2,
  X_ATTRIBUTE4 in VARCHAR2,
  X_ATTRIBUTE5 in VARCHAR2,
  X_ATTRIBUTE6 in VARCHAR2,
  X_ATTRIBUTE7 in VARCHAR2,
  X_ATTRIBUTE8 in VARCHAR2,
  X_ATTRIBUTE9 in VARCHAR2,
  X_ATTRIBUTE10 in VARCHAR2,
  X_ATTRIBUTE11 in VARCHAR2,
  X_ATTRIBUTE12 in VARCHAR2,
  X_ATTRIBUTE13 in VARCHAR2,
  X_ATTRIBUTE14 in VARCHAR2,
  X_ATTRIBUTE15 in VARCHAR2,
  X_PERIODIC_SEQUENCE_NAME_2 in VARCHAR2,
  X_PERIODIC_SEQUENCE_NAME_3 in VARCHAR2,
  X_PROCESSING_TYPE in VARCHAR2,
  X_MARK_COMPLETE_EVENT in VARCHAR2,
  X_MANUAL_MARK_COMPLETE_FLAG in VARCHAR2,
  X_POSITIVE_PAY_DELIVERY_FLAG in VARCHAR2,
  X_TRANSMIT_INSTR_IMMED_FLAG in VARCHAR2,
  X_SEEDED_FLAG in VARCHAR2,
  X_AUTOMATIC_PI_REG_SUBMIT in VARCHAR2,
  X_OBJECT_VERSION_NUMBER in NUMBER,
  X_DECLARATION_OPTION in VARCHAR2,
  X_DCL_ONLY_FOREIGN_CURR_PMT_FL in VARCHAR2,
  X_DECLARATION_REPORT_FORMAT_CO in VARCHAR2,
  X_DECLARATION_CURR_FX_RATE_TYP in VARCHAR2,
  X_DECLARATION_CURRENCY_CODE in VARCHAR2,
  X_DECLARATION_THRESHOLD_AMOUNT in NUMBER,
  X_BANK_INSTRUCTION1_CODE in VARCHAR2,
  X_BANK_INSTRUCTION2_CODE in VARCHAR2,
  X_BANK_INSTRUCTION_DETAILS in VARCHAR2,
  X_PAYMENT_TEXT_MESSAGE1 in VARCHAR2,
  X_PRINT_INSTRUCTION_IMMED_FLAG in VARCHAR2,
  X_DEFAULT_PRINTER in VARCHAR2,
  X_DEFAULT_PAYMENT_DOCUMENT_ID in NUMBER,
  X_PERIODIC_SEQUENCE_NAME_1 in VARCHAR2,
  X_TRANSMIT_PROTOCOL_CODE in VARCHAR2,
  X_PAYMENT_FORMAT_CODE in VARCHAR2,
  X_POSITIVE_PAY_FORMAT_CODE in VARCHAR2,
  X_PAY_FILE_LETTER_FORMAT_CODE in VARCHAR2,
  X_BEPID in NUMBER,
  X_SECURITY_PROTOCOL_CODE in VARCHAR2,
  X_SYSTEM_PROFILE_NAME in VARCHAR2,
  X_SYSTEM_PROFILE_DESCRIPTION in VARCHAR2
) is
  cursor c is select
      PAYMENT_TEXT_MESSAGE2,
      INACTIVE_DATE,
      ACK_TRANSMIT_PROTOCOL_CODE,
      ACK_SECURITY_PROTOCOL_CODE,
      SEND_TO_FILE_FLAG,
      PI_REGISTER_FORMAT,
      ATTRIBUTE_CATEGORY,
      ATTRIBUTE1,
      ATTRIBUTE2,
      ATTRIBUTE3,
      ATTRIBUTE4,
      ATTRIBUTE5,
      ATTRIBUTE6,
      ATTRIBUTE7,
      ATTRIBUTE8,
      ATTRIBUTE9,
      ATTRIBUTE10,
      ATTRIBUTE11,
      ATTRIBUTE12,
      ATTRIBUTE13,
      ATTRIBUTE14,
      ATTRIBUTE15,
      PERIODIC_SEQUENCE_NAME_2,
      PERIODIC_SEQUENCE_NAME_3,
      PROCESSING_TYPE,
      MARK_COMPLETE_EVENT,
      MANUAL_MARK_COMPLETE_FLAG,
      POSITIVE_PAY_DELIVERY_FLAG,
      TRANSMIT_INSTR_IMMED_FLAG,
      SEEDED_FLAG,
      AUTOMATIC_PI_REG_SUBMIT,
      OBJECT_VERSION_NUMBER,
      DECLARATION_OPTION,
      DCL_ONLY_FOREIGN_CURR_PMT_FLAG,
      DECLARATION_REPORT_FORMAT_CODE,
      DECLARATION_CURR_FX_RATE_TYPE,
      DECLARATION_CURRENCY_CODE,
      DECLARATION_THRESHOLD_AMOUNT,
      BANK_INSTRUCTION1_CODE,
      BANK_INSTRUCTION2_CODE,
      BANK_INSTRUCTION_DETAILS,
      PAYMENT_TEXT_MESSAGE1,
      PRINT_INSTRUCTION_IMMED_FLAG,
      DEFAULT_PRINTER,
      DEFAULT_PAYMENT_DOCUMENT_ID,
      PERIODIC_SEQUENCE_NAME_1,
      TRANSMIT_PROTOCOL_CODE,
      PAYMENT_FORMAT_CODE,
      POSITIVE_PAY_FORMAT_CODE,
      PAY_FILE_LETTER_FORMAT_CODE,
      BEPID,
      SECURITY_PROTOCOL_CODE
    from IBY_SYS_PMT_PROFILES_B
    where SYSTEM_PROFILE_CODE = X_SYSTEM_PROFILE_CODE
    for update of SYSTEM_PROFILE_CODE nowait;
  recinfo c%rowtype;

  cursor c1 is select
      SYSTEM_PROFILE_NAME,
      SYSTEM_PROFILE_DESCRIPTION,
      decode(LANGUAGE, userenv('LANG'), 'Y', 'N') BASELANG
    from IBY_SYS_PMT_PROFILES_TL
    where SYSTEM_PROFILE_CODE = X_SYSTEM_PROFILE_CODE
    and userenv('LANG') in (LANGUAGE, SOURCE_LANG)
    for update of SYSTEM_PROFILE_CODE nowait;
begin
  open c;
  fetch c into recinfo;
  if (c%notfound) then
    close c;
    fnd_message.set_name('FND', 'FORM_RECORD_DELETED');
    app_exception.raise_exception;
  end if;
  close c;
  if (    ((recinfo.PAYMENT_TEXT_MESSAGE2 = X_PAYMENT_TEXT_MESSAGE2)
           OR ((recinfo.PAYMENT_TEXT_MESSAGE2 is null) AND (X_PAYMENT_TEXT_MESSAGE2 is null)))
      AND ((recinfo.INACTIVE_DATE = X_INACTIVE_DATE)
           OR ((recinfo.INACTIVE_DATE is null) AND (X_INACTIVE_DATE is null)))
      AND ((recinfo.ACK_TRANSMIT_PROTOCOL_CODE = X_ACK_TRANSMIT_PROTOCOL_CODE)
           OR ((recinfo.ACK_TRANSMIT_PROTOCOL_CODE is null) AND (X_ACK_TRANSMIT_PROTOCOL_CODE is null)))
      AND ((recinfo.ACK_SECURITY_PROTOCOL_CODE = X_ACK_SECURITY_PROTOCOL_CODE)
           OR ((recinfo.ACK_SECURITY_PROTOCOL_CODE is null) AND (X_ACK_SECURITY_PROTOCOL_CODE is null)))
      AND (recinfo.SEND_TO_FILE_FLAG = X_SEND_TO_FILE_FLAG)
      AND ((recinfo.PI_REGISTER_FORMAT = X_PI_REGISTER_FORMAT)
           OR ((recinfo.PI_REGISTER_FORMAT is null) AND (X_PI_REGISTER_FORMAT is null)))
      AND ((recinfo.ATTRIBUTE_CATEGORY = X_ATTRIBUTE_CATEGORY)
           OR ((recinfo.ATTRIBUTE_CATEGORY is null) AND (X_ATTRIBUTE_CATEGORY is null)))
      AND ((recinfo.ATTRIBUTE1 = X_ATTRIBUTE1)
           OR ((recinfo.ATTRIBUTE1 is null) AND (X_ATTRIBUTE1 is null)))
      AND ((recinfo.ATTRIBUTE2 = X_ATTRIBUTE2)
           OR ((recinfo.ATTRIBUTE2 is null) AND (X_ATTRIBUTE2 is null)))
      AND ((recinfo.ATTRIBUTE3 = X_ATTRIBUTE3)
           OR ((recinfo.ATTRIBUTE3 is null) AND (X_ATTRIBUTE3 is null)))
      AND ((recinfo.ATTRIBUTE4 = X_ATTRIBUTE4)
           OR ((recinfo.ATTRIBUTE4 is null) AND (X_ATTRIBUTE4 is null)))
      AND ((recinfo.ATTRIBUTE5 = X_ATTRIBUTE5)
           OR ((recinfo.ATTRIBUTE5 is null) AND (X_ATTRIBUTE5 is null)))
      AND ((recinfo.ATTRIBUTE6 = X_ATTRIBUTE6)
           OR ((recinfo.ATTRIBUTE6 is null) AND (X_ATTRIBUTE6 is null)))
      AND ((recinfo.ATTRIBUTE7 = X_ATTRIBUTE7)
           OR ((recinfo.ATTRIBUTE7 is null) AND (X_ATTRIBUTE7 is null)))
      AND ((recinfo.ATTRIBUTE8 = X_ATTRIBUTE8)
           OR ((recinfo.ATTRIBUTE8 is null) AND (X_ATTRIBUTE8 is null)))
      AND ((recinfo.ATTRIBUTE9 = X_ATTRIBUTE9)
           OR ((recinfo.ATTRIBUTE9 is null) AND (X_ATTRIBUTE9 is null)))
      AND ((recinfo.ATTRIBUTE10 = X_ATTRIBUTE10)
           OR ((recinfo.ATTRIBUTE10 is null) AND (X_ATTRIBUTE10 is null)))
      AND ((recinfo.ATTRIBUTE11 = X_ATTRIBUTE11)
           OR ((recinfo.ATTRIBUTE11 is null) AND (X_ATTRIBUTE11 is null)))
      AND ((recinfo.ATTRIBUTE12 = X_ATTRIBUTE12)
           OR ((recinfo.ATTRIBUTE12 is null) AND (X_ATTRIBUTE12 is null)))
      AND ((recinfo.ATTRIBUTE13 = X_ATTRIBUTE13)
           OR ((recinfo.ATTRIBUTE13 is null) AND (X_ATTRIBUTE13 is null)))
      AND ((recinfo.ATTRIBUTE14 = X_ATTRIBUTE14)
           OR ((recinfo.ATTRIBUTE14 is null) AND (X_ATTRIBUTE14 is null)))
      AND ((recinfo.ATTRIBUTE15 = X_ATTRIBUTE15)
           OR ((recinfo.ATTRIBUTE15 is null) AND (X_ATTRIBUTE15 is null)))
      AND ((recinfo.PERIODIC_SEQUENCE_NAME_2 = X_PERIODIC_SEQUENCE_NAME_2)
           OR ((recinfo.PERIODIC_SEQUENCE_NAME_2 is null) AND (X_PERIODIC_SEQUENCE_NAME_2 is null)))
      AND ((recinfo.PERIODIC_SEQUENCE_NAME_3 = X_PERIODIC_SEQUENCE_NAME_3)
           OR ((recinfo.PERIODIC_SEQUENCE_NAME_3 is null) AND (X_PERIODIC_SEQUENCE_NAME_3 is null)))
      AND (recinfo.PROCESSING_TYPE = X_PROCESSING_TYPE)
      AND (recinfo.MARK_COMPLETE_EVENT = X_MARK_COMPLETE_EVENT)
      AND (recinfo.MANUAL_MARK_COMPLETE_FLAG = X_MANUAL_MARK_COMPLETE_FLAG)
      AND (recinfo.POSITIVE_PAY_DELIVERY_FLAG = X_POSITIVE_PAY_DELIVERY_FLAG)
      AND (recinfo.TRANSMIT_INSTR_IMMED_FLAG = X_TRANSMIT_INSTR_IMMED_FLAG)
      AND ((recinfo.SEEDED_FLAG = X_SEEDED_FLAG)
           OR ((recinfo.SEEDED_FLAG is null) AND (X_SEEDED_FLAG is null)))
      AND (recinfo.AUTOMATIC_PI_REG_SUBMIT = X_AUTOMATIC_PI_REG_SUBMIT)
      AND (recinfo.OBJECT_VERSION_NUMBER = X_OBJECT_VERSION_NUMBER)
      AND ((recinfo.DECLARATION_OPTION = X_DECLARATION_OPTION)
           OR ((recinfo.DECLARATION_OPTION is null) AND (X_DECLARATION_OPTION is null)))
      AND ((recinfo.DCL_ONLY_FOREIGN_CURR_PMT_FLAG = X_DCL_ONLY_FOREIGN_CURR_PMT_FL)
           OR ((recinfo.DCL_ONLY_FOREIGN_CURR_PMT_FLAG is null) AND (X_DCL_ONLY_FOREIGN_CURR_PMT_FL is null)))
      AND ((recinfo.DECLARATION_REPORT_FORMAT_CODE = X_DECLARATION_REPORT_FORMAT_CO)
           OR ((recinfo.DECLARATION_REPORT_FORMAT_CODE is null) AND (X_DECLARATION_REPORT_FORMAT_CO is null)))
      AND ((recinfo.DECLARATION_CURR_FX_RATE_TYPE = X_DECLARATION_CURR_FX_RATE_TYP)
           OR ((recinfo.DECLARATION_CURR_FX_RATE_TYPE is null) AND (X_DECLARATION_CURR_FX_RATE_TYP is null)))
      AND ((recinfo.DECLARATION_CURRENCY_CODE = X_DECLARATION_CURRENCY_CODE)
           OR ((recinfo.DECLARATION_CURRENCY_CODE is null) AND (X_DECLARATION_CURRENCY_CODE is null)))
      AND ((recinfo.DECLARATION_THRESHOLD_AMOUNT = X_DECLARATION_THRESHOLD_AMOUNT)
           OR ((recinfo.DECLARATION_THRESHOLD_AMOUNT is null) AND (X_DECLARATION_THRESHOLD_AMOUNT is null)))
      AND ((recinfo.BANK_INSTRUCTION1_CODE = X_BANK_INSTRUCTION1_CODE)
           OR ((recinfo.BANK_INSTRUCTION1_CODE is null) AND (X_BANK_INSTRUCTION1_CODE is null)))
      AND ((recinfo.BANK_INSTRUCTION2_CODE = X_BANK_INSTRUCTION2_CODE)
           OR ((recinfo.BANK_INSTRUCTION2_CODE is null) AND (X_BANK_INSTRUCTION2_CODE is null)))
      AND ((recinfo.BANK_INSTRUCTION_DETAILS = X_BANK_INSTRUCTION_DETAILS)
           OR ((recinfo.BANK_INSTRUCTION_DETAILS is null) AND (X_BANK_INSTRUCTION_DETAILS is null)))
      AND ((recinfo.PAYMENT_TEXT_MESSAGE1 = X_PAYMENT_TEXT_MESSAGE1)
           OR ((recinfo.PAYMENT_TEXT_MESSAGE1 is null) AND (X_PAYMENT_TEXT_MESSAGE1 is null)))
      AND (recinfo.PRINT_INSTRUCTION_IMMED_FLAG = X_PRINT_INSTRUCTION_IMMED_FLAG)
      AND ((recinfo.DEFAULT_PRINTER = X_DEFAULT_PRINTER)
           OR ((recinfo.DEFAULT_PRINTER is null) AND (X_DEFAULT_PRINTER is null)))
      AND ((recinfo.DEFAULT_PAYMENT_DOCUMENT_ID = X_DEFAULT_PAYMENT_DOCUMENT_ID)
           OR ((recinfo.DEFAULT_PAYMENT_DOCUMENT_ID is null) AND (X_DEFAULT_PAYMENT_DOCUMENT_ID is null)))
      AND ((recinfo.PERIODIC_SEQUENCE_NAME_1 = X_PERIODIC_SEQUENCE_NAME_1)
           OR ((recinfo.PERIODIC_SEQUENCE_NAME_1 is null) AND (X_PERIODIC_SEQUENCE_NAME_1 is null)))
      AND ((recinfo.TRANSMIT_PROTOCOL_CODE = X_TRANSMIT_PROTOCOL_CODE)
           OR ((recinfo.TRANSMIT_PROTOCOL_CODE is null) AND (X_TRANSMIT_PROTOCOL_CODE is null)))
      AND (recinfo.PAYMENT_FORMAT_CODE = X_PAYMENT_FORMAT_CODE)
      AND ((recinfo.POSITIVE_PAY_FORMAT_CODE = X_POSITIVE_PAY_FORMAT_CODE)
           OR ((recinfo.POSITIVE_PAY_FORMAT_CODE is null) AND (X_POSITIVE_PAY_FORMAT_CODE is null)))
      AND ((recinfo.PAY_FILE_LETTER_FORMAT_CODE = X_PAY_FILE_LETTER_FORMAT_CODE)
           OR ((recinfo.PAY_FILE_LETTER_FORMAT_CODE is null) AND (X_PAY_FILE_LETTER_FORMAT_CODE is null)))
      AND ((recinfo.BEPID = X_BEPID)
           OR ((recinfo.BEPID is null) AND (X_BEPID is null)))
      AND ((recinfo.SECURITY_PROTOCOL_CODE = X_SECURITY_PROTOCOL_CODE)
           OR ((recinfo.SECURITY_PROTOCOL_CODE is null) AND (X_SECURITY_PROTOCOL_CODE is null)))
  ) then
    null;
  else
    fnd_message.set_name('FND', 'FORM_RECORD_CHANGED');
    app_exception.raise_exception;
  end if;

  for tlinfo in c1 loop
    if (tlinfo.BASELANG = 'Y') then
      if (    (tlinfo.SYSTEM_PROFILE_NAME = X_SYSTEM_PROFILE_NAME)
          AND ((tlinfo.SYSTEM_PROFILE_DESCRIPTION = X_SYSTEM_PROFILE_DESCRIPTION)
               OR ((tlinfo.SYSTEM_PROFILE_DESCRIPTION is null) AND (X_SYSTEM_PROFILE_DESCRIPTION is null)))
      ) then
        null;
      else
        fnd_message.set_name('FND', 'FORM_RECORD_CHANGED');
        app_exception.raise_exception;
      end if;
    end if;
  end loop;
  return;
end LOCK_ROW;

procedure UPDATE_ROW (
  X_SYSTEM_PROFILE_CODE in VARCHAR2,
  X_PAYMENT_TEXT_MESSAGE2 in VARCHAR2,
  X_INACTIVE_DATE in DATE,
  X_ACK_TRANSMIT_PROTOCOL_CODE in VARCHAR2,
  X_ACK_SECURITY_PROTOCOL_CODE in VARCHAR2,
  X_SEND_TO_FILE_FLAG in VARCHAR2,
  X_PI_REGISTER_FORMAT in VARCHAR2,
  X_ATTRIBUTE_CATEGORY in VARCHAR2,
  X_ATTRIBUTE1 in VARCHAR2,
  X_ATTRIBUTE2 in VARCHAR2,
  X_ATTRIBUTE3 in VARCHAR2,
  X_ATTRIBUTE4 in VARCHAR2,
  X_ATTRIBUTE5 in VARCHAR2,
  X_ATTRIBUTE6 in VARCHAR2,
  X_ATTRIBUTE7 in VARCHAR2,
  X_ATTRIBUTE8 in VARCHAR2,
  X_ATTRIBUTE9 in VARCHAR2,
  X_ATTRIBUTE10 in VARCHAR2,
  X_ATTRIBUTE11 in VARCHAR2,
  X_ATTRIBUTE12 in VARCHAR2,
  X_ATTRIBUTE13 in VARCHAR2,
  X_ATTRIBUTE14 in VARCHAR2,
  X_ATTRIBUTE15 in VARCHAR2,
  X_PERIODIC_SEQUENCE_NAME_2 in VARCHAR2,
  X_PERIODIC_SEQUENCE_NAME_3 in VARCHAR2,
  X_PROCESSING_TYPE in VARCHAR2,
  X_MARK_COMPLETE_EVENT in VARCHAR2,
  X_MANUAL_MARK_COMPLETE_FLAG in VARCHAR2,
  X_POSITIVE_PAY_DELIVERY_FLAG in VARCHAR2,
  X_TRANSMIT_INSTR_IMMED_FLAG in VARCHAR2,
  X_SEEDED_FLAG in VARCHAR2,
  X_AUTOMATIC_PI_REG_SUBMIT in VARCHAR2,
  X_OBJECT_VERSION_NUMBER in NUMBER,
  X_DECLARATION_OPTION in VARCHAR2,
  X_DCL_ONLY_FOREIGN_CURR_PMT_FL in VARCHAR2,
  X_DECLARATION_REPORT_FORMAT_CO in VARCHAR2,
  X_DECLARATION_CURR_FX_RATE_TYP in VARCHAR2,
  X_DECLARATION_CURRENCY_CODE in VARCHAR2,
  X_DECLARATION_THRESHOLD_AMOUNT in NUMBER,
  X_BANK_INSTRUCTION1_CODE in VARCHAR2,
  X_BANK_INSTRUCTION2_CODE in VARCHAR2,
  X_BANK_INSTRUCTION_DETAILS in VARCHAR2,
  X_PAYMENT_TEXT_MESSAGE1 in VARCHAR2,
  X_PRINT_INSTRUCTION_IMMED_FLAG in VARCHAR2,
  X_DEFAULT_PRINTER in VARCHAR2,
  X_DEFAULT_PAYMENT_DOCUMENT_ID in NUMBER,
  X_PERIODIC_SEQUENCE_NAME_1 in VARCHAR2,
  X_TRANSMIT_PROTOCOL_CODE in VARCHAR2,
  X_PAYMENT_FORMAT_CODE in VARCHAR2,
  X_POSITIVE_PAY_FORMAT_CODE in VARCHAR2,
  X_PAY_FILE_LETTER_FORMAT_CODE in VARCHAR2,
  X_BEPID in NUMBER,
  X_SECURITY_PROTOCOL_CODE in VARCHAR2,
  X_SYSTEM_PROFILE_NAME in VARCHAR2,
  X_SYSTEM_PROFILE_DESCRIPTION in VARCHAR2,
  X_LAST_UPDATE_DATE in DATE,
  X_LAST_UPDATED_BY in NUMBER,
  X_LAST_UPDATE_LOGIN in NUMBER
) is
begin
  update IBY_SYS_PMT_PROFILES_B set
    PAYMENT_TEXT_MESSAGE2 = X_PAYMENT_TEXT_MESSAGE2,
    INACTIVE_DATE = X_INACTIVE_DATE,
    ACK_TRANSMIT_PROTOCOL_CODE = X_ACK_TRANSMIT_PROTOCOL_CODE,
    ACK_SECURITY_PROTOCOL_CODE = X_ACK_SECURITY_PROTOCOL_CODE,
    SEND_TO_FILE_FLAG = X_SEND_TO_FILE_FLAG,
    PI_REGISTER_FORMAT = X_PI_REGISTER_FORMAT,
    ATTRIBUTE_CATEGORY = X_ATTRIBUTE_CATEGORY,
    ATTRIBUTE1 = X_ATTRIBUTE1,
    ATTRIBUTE2 = X_ATTRIBUTE2,
    ATTRIBUTE3 = X_ATTRIBUTE3,
    ATTRIBUTE4 = X_ATTRIBUTE4,
    ATTRIBUTE5 = X_ATTRIBUTE5,
    ATTRIBUTE6 = X_ATTRIBUTE6,
    ATTRIBUTE7 = X_ATTRIBUTE7,
    ATTRIBUTE8 = X_ATTRIBUTE8,
    ATTRIBUTE9 = X_ATTRIBUTE9,
    ATTRIBUTE10 = X_ATTRIBUTE10,
    ATTRIBUTE11 = X_ATTRIBUTE11,
    ATTRIBUTE12 = X_ATTRIBUTE12,
    ATTRIBUTE13 = X_ATTRIBUTE13,
    ATTRIBUTE14 = X_ATTRIBUTE14,
    ATTRIBUTE15 = X_ATTRIBUTE15,
    PERIODIC_SEQUENCE_NAME_2 = X_PERIODIC_SEQUENCE_NAME_2,
    PERIODIC_SEQUENCE_NAME_3 = X_PERIODIC_SEQUENCE_NAME_3,
    PROCESSING_TYPE = X_PROCESSING_TYPE,
    MARK_COMPLETE_EVENT = X_MARK_COMPLETE_EVENT,
    MANUAL_MARK_COMPLETE_FLAG = X_MANUAL_MARK_COMPLETE_FLAG,
    POSITIVE_PAY_DELIVERY_FLAG = X_POSITIVE_PAY_DELIVERY_FLAG,
    TRANSMIT_INSTR_IMMED_FLAG = X_TRANSMIT_INSTR_IMMED_FLAG,
    SEEDED_FLAG = X_SEEDED_FLAG,
    AUTOMATIC_PI_REG_SUBMIT = X_AUTOMATIC_PI_REG_SUBMIT,
    OBJECT_VERSION_NUMBER = X_OBJECT_VERSION_NUMBER,
    DECLARATION_OPTION = X_DECLARATION_OPTION,
    DCL_ONLY_FOREIGN_CURR_PMT_FLAG = X_DCL_ONLY_FOREIGN_CURR_PMT_FL,
    DECLARATION_REPORT_FORMAT_CODE = X_DECLARATION_REPORT_FORMAT_CO,
    DECLARATION_CURR_FX_RATE_TYPE = X_DECLARATION_CURR_FX_RATE_TYP,
    DECLARATION_CURRENCY_CODE = X_DECLARATION_CURRENCY_CODE,
    DECLARATION_THRESHOLD_AMOUNT = X_DECLARATION_THRESHOLD_AMOUNT,
    BANK_INSTRUCTION1_CODE = X_BANK_INSTRUCTION1_CODE,
    BANK_INSTRUCTION2_CODE = X_BANK_INSTRUCTION2_CODE,
    BANK_INSTRUCTION_DETAILS = X_BANK_INSTRUCTION_DETAILS,
    PAYMENT_TEXT_MESSAGE1 = X_PAYMENT_TEXT_MESSAGE1,
    PRINT_INSTRUCTION_IMMED_FLAG = X_PRINT_INSTRUCTION_IMMED_FLAG,
    DEFAULT_PRINTER = X_DEFAULT_PRINTER,
    DEFAULT_PAYMENT_DOCUMENT_ID = X_DEFAULT_PAYMENT_DOCUMENT_ID,
    PERIODIC_SEQUENCE_NAME_1 = X_PERIODIC_SEQUENCE_NAME_1,
    TRANSMIT_PROTOCOL_CODE = X_TRANSMIT_PROTOCOL_CODE,
    PAYMENT_FORMAT_CODE = X_PAYMENT_FORMAT_CODE,
    POSITIVE_PAY_FORMAT_CODE = X_POSITIVE_PAY_FORMAT_CODE,
    PAY_FILE_LETTER_FORMAT_CODE = X_PAY_FILE_LETTER_FORMAT_CODE,
    BEPID = X_BEPID,
    SECURITY_PROTOCOL_CODE = X_SECURITY_PROTOCOL_CODE,
    LAST_UPDATE_DATE = X_LAST_UPDATE_DATE,
    LAST_UPDATED_BY = X_LAST_UPDATED_BY,
    LAST_UPDATE_LOGIN = X_LAST_UPDATE_LOGIN
  where SYSTEM_PROFILE_CODE = X_SYSTEM_PROFILE_CODE;

  if (sql%notfound) then
    raise no_data_found;
  end if;

  update IBY_SYS_PMT_PROFILES_TL set
    SYSTEM_PROFILE_NAME = X_SYSTEM_PROFILE_NAME,
    SYSTEM_PROFILE_DESCRIPTION = X_SYSTEM_PROFILE_DESCRIPTION,
    LAST_UPDATE_DATE = X_LAST_UPDATE_DATE,
    LAST_UPDATED_BY = X_LAST_UPDATED_BY,
    LAST_UPDATE_LOGIN = X_LAST_UPDATE_LOGIN,
    SOURCE_LANG = userenv('LANG')
  where SYSTEM_PROFILE_CODE = X_SYSTEM_PROFILE_CODE
  and userenv('LANG') in (LANGUAGE, SOURCE_LANG);

  if (sql%notfound) then
    raise no_data_found;
  end if;
end UPDATE_ROW;

procedure DELETE_ROW (
  X_SYSTEM_PROFILE_CODE in VARCHAR2
) is
begin
  delete from IBY_SYS_PMT_PROFILES_TL
  where SYSTEM_PROFILE_CODE = X_SYSTEM_PROFILE_CODE;

  if (sql%notfound) then
    raise no_data_found;
  end if;

  delete from IBY_SYS_PMT_PROFILES_B
  where SYSTEM_PROFILE_CODE = X_SYSTEM_PROFILE_CODE;

  if (sql%notfound) then
    raise no_data_found;
  end if;
end DELETE_ROW;

procedure ADD_LANGUAGE
is
begin
  delete from IBY_SYS_PMT_PROFILES_TL T
  where not exists
    (select NULL
    from IBY_SYS_PMT_PROFILES_B B
    where B.SYSTEM_PROFILE_CODE = T.SYSTEM_PROFILE_CODE
    );

  update IBY_SYS_PMT_PROFILES_TL T set (
      SYSTEM_PROFILE_NAME,
      SYSTEM_PROFILE_DESCRIPTION
    ) = (select
      B.SYSTEM_PROFILE_NAME,
      B.SYSTEM_PROFILE_DESCRIPTION
    from IBY_SYS_PMT_PROFILES_TL B
    where B.SYSTEM_PROFILE_CODE = T.SYSTEM_PROFILE_CODE
    and B.LANGUAGE = T.SOURCE_LANG)
  where (
      T.SYSTEM_PROFILE_CODE,
      T.LANGUAGE
  ) in (select
      SUBT.SYSTEM_PROFILE_CODE,
      SUBT.LANGUAGE
    from IBY_SYS_PMT_PROFILES_TL SUBB, IBY_SYS_PMT_PROFILES_TL SUBT
    where SUBB.SYSTEM_PROFILE_CODE = SUBT.SYSTEM_PROFILE_CODE
    and SUBB.LANGUAGE = SUBT.SOURCE_LANG
    and (SUBB.SYSTEM_PROFILE_NAME <> SUBT.SYSTEM_PROFILE_NAME
      or SUBB.SYSTEM_PROFILE_DESCRIPTION <> SUBT.SYSTEM_PROFILE_DESCRIPTION
      or (SUBB.SYSTEM_PROFILE_DESCRIPTION is null and SUBT.SYSTEM_PROFILE_DESCRIPTION is not null)
      or (SUBB.SYSTEM_PROFILE_DESCRIPTION is not null and SUBT.SYSTEM_PROFILE_DESCRIPTION is null)
  ));

  insert into IBY_SYS_PMT_PROFILES_TL (
    LAST_UPDATE_DATE,
    LAST_UPDATE_LOGIN,
    OBJECT_VERSION_NUMBER,
    SYSTEM_PROFILE_DESCRIPTION,
    LAST_UPDATED_BY,
    CREATION_DATE,
    CREATED_BY,
    SYSTEM_PROFILE_CODE,
    SYSTEM_PROFILE_NAME,
    LANGUAGE,
    SOURCE_LANG
  ) select /*+ ORDERED */
    B.LAST_UPDATE_DATE,
    B.LAST_UPDATE_LOGIN,
    B.OBJECT_VERSION_NUMBER,
    B.SYSTEM_PROFILE_DESCRIPTION,
    B.LAST_UPDATED_BY,
    B.CREATION_DATE,
    B.CREATED_BY,
    B.SYSTEM_PROFILE_CODE,
    B.SYSTEM_PROFILE_NAME,
    L.LANGUAGE_CODE,
    B.SOURCE_LANG
  from IBY_SYS_PMT_PROFILES_TL B, FND_LANGUAGES L
  where L.INSTALLED_FLAG in ('I', 'B')
  and B.LANGUAGE = userenv('LANG')
  and not exists
    (select NULL
    from IBY_SYS_PMT_PROFILES_TL T
    where T.SYSTEM_PROFILE_CODE = B.SYSTEM_PROFILE_CODE
    and T.LANGUAGE = L.LANGUAGE_CODE);
end ADD_LANGUAGE;

end IBY_SYS_PMT_PROFILES_PKG;

/
