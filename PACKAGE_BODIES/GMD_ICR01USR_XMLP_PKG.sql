--------------------------------------------------------
--  DDL for Package Body GMD_ICR01USR_XMLP_PKG
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE PACKAGE BODY "APPS"."GMD_ICR01USR_XMLP_PKG" AS
/* $Header: ICR01USRB.pls 120.0 2007/12/24 13:04:31 krreddy noship $ */
/* FUNCTION INDENT1FORMULA RETURN NUMBER IS
    INDENTCF NUMBER(20) := 2;
  BEGIN
    INDENTCF := INDENTCF + 2;
    RETURN (LPAD(' '
               ,INDENTCF));
  END INDENT1FORMULA;*/

  FUNCTION LINE_NOCFFORMULA(LINE_TYPE IN NUMBER
                           ,ITEM_ID IN NUMBER
                           ,FORMULA_ID IN NUMBER) RETURN NUMBER IS
    P_LINE_NO NUMBER := 0;
  BEGIN
    IF LINE_TYPE = 1 THEN
      BEGIN
        SELECT
          LINE_NO
        INTO P_LINE_NO
        FROM
          FM_MATL_DTL
        WHERE INVENTORY_ITEM_ID = LINE_NOCFFORMULA.ITEM_ID
          AND LINE_TYPE = 1
          AND FORMULA_ID = LINE_NOCFFORMULA.FORMULA_ID;
      EXCEPTION
        WHEN TOO_MANY_ROWS THEN
          P_LINE_NO := 0;
       END;
    ELSE
      P_LINE_NO := 0;
    END IF;
    RETURN (P_LINE_NO);
  END LINE_NOCFFORMULA;

  FUNCTION LEVEL_NOCFFORMULA(LINE_NOCF IN NUMBER
                            ,LEVEL_NUM IN NUMBER) RETURN NUMBER IS
  BEGIN
    IF LINE_NOCF = 1 THEN
      RETURN (0);
    END IF;
    IF LEVEL_NUM > NVL(P_LEVEL
       ,0) THEN
      P_LEVEL := LEVEL_NUM;
      RETURN (1);
    ELSE
      P_LEVEL := LEVEL_NUM;
      RETURN (0);
    END IF;
  --  RETURN NULL;
  END LEVEL_NOCFFORMULA;

  FUNCTION BATCH_QTYCFFORMULA(EXPLODE_SEQ IN VARCHAR2) RETURN NUMBER IS
    BATCHQTY NUMBER;
  BEGIN
    SELECT
      SCALE_QTY
    INTO BATCHQTY
    FROM
      FM_IBOM_DTL
    WHERE TOP_FORMULA_ID = P_FORMULA_ID
      AND EXPLODE_SEQ = SUBSTR(BATCH_QTYCFFORMULA.EXPLODE_SEQ
          ,1
          ,LENGTH(BATCH_QTYCFFORMULA.EXPLODE_SEQ) - 3) || '001';
    RETURN (BATCHQTY);
    RETURN NULL;
  EXCEPTION
    WHEN NO_DATA_FOUND THEN
      RETURN (NULL);
  END BATCH_QTYCFFORMULA;

  FUNCTION FORM_QTYCFFORMULA(EXPLODE_SEQ IN VARCHAR2) RETURN NUMBER IS
    FORMQTY NUMBER;
  BEGIN
    SELECT
      FORMULA_QTY
    INTO FORMQTY
    FROM
      FM_IBOM_DTL
    WHERE TOP_FORMULA_ID = P_FORMULA_ID
      AND EXPLODE_SEQ = SUBSTR(FORM_QTYCFFORMULA.EXPLODE_SEQ
          ,1
          ,LENGTH(FORM_QTYCFFORMULA.EXPLODE_SEQ) - 3) || '001';
    RETURN (FORMQTY);
    RETURN NULL;
  EXCEPTION
    WHEN NO_DATA_FOUND THEN
      RETURN (NULL);
  END FORM_QTYCFFORMULA;

  FUNCTION STANDARD_QTYFORMULA(FORMULA_ID IN NUMBER
                              ,LEVEL_NUM IN NUMBER) RETURN NUMBER IS
    STANDARDQTY NUMBER;
  BEGIN
    SELECT
      DISTINCT
      STD_QTY
    INTO STANDARDQTY
    FROM
      FM_IBOM_DTL
    WHERE LINE_TYPE = 1
      AND TOP_FORMULA_ID = P_FORMULA_ID
      AND FORMULA_ID = STANDARD_QTYFORMULA.FORMULA_ID
      AND LEVEL_NUM = STANDARD_QTYFORMULA.LEVEL_NUM
      AND FM_IBOM_DTL.INVENTORY_ITEM_ID = (
      SELECT
        FM_MATL_DTL.INVENTORY_ITEM_ID
      FROM
        FM_MATL_DTL
      WHERE FORMULA_ID = STANDARD_QTYFORMULA.FORMULA_ID
        AND LINE_TYPE = 1
        AND LINE_NO = 1 )
      AND LINE_NO = 1;
    RETURN (STANDARDQTY);
    RETURN NULL;
  EXCEPTION
    WHEN NO_DATA_FOUND THEN
      RETURN (NULL);
  END STANDARD_QTYFORMULA;

  FUNCTION UOMCFFORMULA(EXPLODE_SEQ IN VARCHAR2) RETURN VARCHAR2 IS
    UOM1 VARCHAR2(4);
  BEGIN
    SELECT
      I_QTY_UOM
    INTO UOM1
    FROM
      FM_IBOM_DTL
    WHERE TOP_FORMULA_ID = P_FORMULA_ID
      AND EXPLODE_SEQ = SUBSTR(UOMCFFORMULA.EXPLODE_SEQ
          ,1
          ,LENGTH(UOMCFFORMULA.EXPLODE_SEQ) - 3) || '001';
    RETURN (UOM1);
    RETURN NULL;
  EXCEPTION
    WHEN NO_DATA_FOUND THEN
      RETURN (NULL);
  END UOMCFFORMULA;

  FUNCTION BEFOREREPORT RETURN BOOLEAN IS
  BEGIN
    P_CONC_REQUEST_ID := FND_GLOBAL.CONC_REQUEST_ID;
    RETURN (TRUE);
  END BEFOREREPORT;

  PROCEDURE GMD_ICR01USR_XMLP_PKG_HEADER IS
  BEGIN
    NULL;
  END GMD_ICR01USR_XMLP_PKG_HEADER;

  FUNCTION AFTERREPORT RETURN BOOLEAN IS
  BEGIN
    RETURN (TRUE);
  END AFTERREPORT;

  FUNCTION CF_1FORMULA(STATUS IN VARCHAR2) RETURN CHAR IS
    X VARCHAR2(80);
  BEGIN
    IF STATUS IS NOT NULL THEN
      RETURN STATUS;
    ELSE
      X := APPS.FND_MESSAGE.GET_STRING('GMD'
                                      ,'GMD_IBOM_EXPLODE_ALL_LEVELS');
      RETURN X;
    END IF;
  END CF_1FORMULA;

 FUNCTION M_HDR_GRPFRFORMATTRIGGER RETURN NUMBER
 IS
 P_COUNT NUMBER;
 BEGIN
 SELECT Count(1)
 INTO	 P_Count
 FROM   FM_IBOM_HDR  ;

 RETURN(P_COUNT);
 END;
END GMD_ICR01USR_XMLP_PKG;


/
