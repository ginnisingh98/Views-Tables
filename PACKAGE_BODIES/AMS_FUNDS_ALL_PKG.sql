--------------------------------------------------------
--  DDL for Package Body AMS_FUNDS_ALL_PKG
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE PACKAGE BODY "APPS"."AMS_FUNDS_ALL_PKG" as
/* $Header: amslfunb.pls 115.1 2002/07/15 22:11:55 mpande noship $ */
procedure INSERT_ROW (
  X_ROWID in out VARCHAR2,
  X_FUND_ID in NUMBER,
  X_CREATED_FROM in VARCHAR2,
  X_REQUEST_ID in NUMBER,
  X_FUND_NUMBER in VARCHAR2,
  X_PARENT_FUND_ID in NUMBER,
  X_CATEGORY_ID in NUMBER,
  X_FUND_TYPE in VARCHAR2,
  X_FUND_USAGE in VARCHAR2,
  X_STATUS_CODE in VARCHAR2,
  X_STATUS_DATE in DATE,
  X_ACCRUED_LIABLE_ACCOUNT in NUMBER,
  X_DED_ADJUSTMENT_ACCOUNT in NUMBER,
  X_LIABILITY_FLAG in VARCHAR2,
  X_SET_OF_BOOKS_ID in NUMBER,
  X_START_PERIOD_ID in NUMBER,
  X_END_PERIOD_ID in NUMBER,
  X_START_DATE_ACTIVE in DATE,
  X_END_DATE_ACTIVE in DATE,
  X_BUDGET_AMOUNT_TC in NUMBER,
  X_BUDGET_AMOUNT_FC in NUMBER,
  X_AVAILABLE_AMOUNT in NUMBER,
  X_DISTRIBUTED_AMOUNT in NUMBER,
  X_CURRENCY_CODE_TC in VARCHAR2,
  X_CURRENCY_CODE_FC in VARCHAR2,
  X_EXCHANGE_RATE_TYPE in VARCHAR2,
  X_EXCHANGE_RATE_DATE in DATE,
  X_EXCHANGE_RATE in NUMBER,
  X_DEPARTMENT_ID in NUMBER,
  X_COSTCENTRE_ID in NUMBER,
  X_OWNER in NUMBER,
  X_ACCRUAL_METHOD in VARCHAR2,
  X_ACCRUAL_OPERAND in VARCHAR2,
  X_ACCRUAL_RATE in NUMBER,
  X_ACCRUAL_BASIS in VARCHAR2,
  X_HIERARCHY in VARCHAR2,
  X_HIERARCHY_LEVEL in VARCHAR2,
  X_BUDGET_FLAG in VARCHAR2,
  X_EARNED_FLAG in VARCHAR2,
  X_APPLY_ACCRUAL_ON in VARCHAR2,
  X_ACCRUAL_PHASE in VARCHAR2,
  X_ACCRUAL_CAP in NUMBER,
  X_ACCRUAL_UOM in VARCHAR2,
  X_OBJECT_VERSION_NUMBER in NUMBER,
  X_ATTRIBUTE_CATEGORY in VARCHAR2,
  X_ATTRIBUTE1 in VARCHAR2,
  X_ATTRIBUTE2 in VARCHAR2,
  X_ATTRIBUTE3 in VARCHAR2,
  X_ATTRIBUTE4 in VARCHAR2,
  X_ATTRIBUTE5 in VARCHAR2,
  X_ATTRIBUTE6 in VARCHAR2,
  X_ATTRIBUTE7 in VARCHAR2,
  X_ATTRIBUTE8 in VARCHAR2,
  X_ATTRIBUTE9 in VARCHAR2,
  X_ATTRIBUTE10 in VARCHAR2,
  X_ATTRIBUTE11 in VARCHAR2,
  X_ATTRIBUTE12 in VARCHAR2,
  X_ATTRIBUTE13 in VARCHAR2,
  X_ATTRIBUTE14 in VARCHAR2,
  X_ATTRIBUTE15 in VARCHAR2,
  X_SHORT_NAME in VARCHAR2,
  X_DESCRIPTION in VARCHAR2,
  X_CREATION_DATE in DATE,
  X_CREATED_BY in NUMBER,
  X_LAST_UPDATE_DATE in DATE,
  X_LAST_UPDATED_BY in NUMBER,
  X_LAST_UPDATE_LOGIN in NUMBER,
  X_HIERARCHY_ID in NUMBER,
  X_PARENT_NODE_ID in NUMBER,
  X_NODE_ID in NUMBER,
  X_ORIGINAL_BUDGET in NUMBER,
  X_TRANSFERED_IN_AMT in NUMBER,
  X_TRANSFERED_OUT_AMT in NUMBER,
  X_HOLDBACK_AMT in NUMBER,
  X_PLANNED_AMT in NUMBER,
  X_COMMITTED_AMT in NUMBER,
  X_EARNED_AMT in NUMBER,
  X_PAID_AMT in NUMBER,
  X_PLAN_TYPE in VARCHAR2,
  X_PLAN_ID in NUMBER,
  X_LIABLE_ACCNT_SEGMENTS in VARCHAR2,
  X_ADJUSTMENT_ACCNT_SEGMENTS in VARCHAR2
) is
  cursor C is select ROWID from OZF_FUNDS_ALL_B
    where FUND_ID = X_FUND_ID
    ;
begin
  insert into OZF_FUNDS_ALL_B (
    FUND_ID,
    CREATED_FROM,
    REQUEST_ID,
    FUND_NUMBER,
    PARENT_FUND_ID,
    CATEGORY_ID,
    FUND_TYPE,
    FUND_USAGE,
    STATUS_CODE,
    STATUS_DATE,
    ACCRUED_LIABLE_ACCOUNT,
    DED_ADJUSTMENT_ACCOUNT,
    LIABILITY_FLAG,
    SET_OF_BOOKS_ID,
    START_PERIOD_ID,
    END_PERIOD_ID,
    START_DATE_ACTIVE,
    END_DATE_ACTIVE,
    BUDGET_AMOUNT_TC,
    BUDGET_AMOUNT_FC,
    AVAILABLE_AMOUNT,
    DISTRIBUTED_AMOUNT,
    CURRENCY_CODE_TC,
    CURRENCY_CODE_FC,
    EXCHANGE_RATE_TYPE,
    EXCHANGE_RATE_DATE,
    EXCHANGE_RATE,
    DEPARTMENT_ID,
    COSTCENTRE_ID,
    OWNER,
    ACCRUAL_METHOD,
    ACCRUAL_OPERAND,
    ACCRUAL_RATE,
    ACCRUAL_BASIS,
    HIERARCHY,
    HIERARCHY_LEVEL,
    BUDGET_FLAG,
    EARNED_FLAG,
    APPLY_ACCRUAL_ON,
    ACCRUAL_PHASE,
    ACCRUAL_CAP,
    ACCRUAL_UOM,
    OBJECT_VERSION_NUMBER,
    ATTRIBUTE_CATEGORY,
    ATTRIBUTE1,
    ATTRIBUTE2,
    ATTRIBUTE3,
    ATTRIBUTE4,
    ATTRIBUTE5,
    ATTRIBUTE6,
    ATTRIBUTE7,
    ATTRIBUTE8,
    ATTRIBUTE9,
    ATTRIBUTE10,
    ATTRIBUTE11,
    ATTRIBUTE12,
    ATTRIBUTE13,
    ATTRIBUTE14,
    ATTRIBUTE15,
    CREATION_DATE,
    CREATED_BY,
    LAST_UPDATE_DATE,
    LAST_UPDATED_BY,
    LAST_UPDATE_LOGIN,
    HIERARCHY_ID,
    PARENT_NODE_ID ,
    NODE_ID ,
    ORIGINAL_BUDGET,
    TRANSFERED_IN_AMT,
    TRANSFERED_OUT_AMT,
    HOLDBACK_AMT,
    PLANNED_AMT,
    COMMITTED_AMT,
    EARNED_AMT,
    PAID_AMT,
    PLAN_TYPE,
    PLAN_ID,
    LIABLE_ACCNT_SEGMENTS,
    ADJUSTMENT_ACCNT_SEGMENTS
  ) values (
    X_FUND_ID,
    X_CREATED_FROM,
    X_REQUEST_ID,
    X_FUND_NUMBER,
    X_PARENT_FUND_ID,
    X_CATEGORY_ID,
    X_FUND_TYPE,
    X_FUND_USAGE,
    X_STATUS_CODE,
    X_STATUS_DATE,
    X_ACCRUED_LIABLE_ACCOUNT,
    X_DED_ADJUSTMENT_ACCOUNT,
    X_LIABILITY_FLAG,
    X_SET_OF_BOOKS_ID,
    X_START_PERIOD_ID,
    X_END_PERIOD_ID,
    X_START_DATE_ACTIVE,
    X_END_DATE_ACTIVE,
    X_BUDGET_AMOUNT_TC,
    X_BUDGET_AMOUNT_FC,
    X_AVAILABLE_AMOUNT,
    X_DISTRIBUTED_AMOUNT,
    X_CURRENCY_CODE_TC,
    X_CURRENCY_CODE_FC,
    X_EXCHANGE_RATE_TYPE,
    X_EXCHANGE_RATE_DATE,
    X_EXCHANGE_RATE,
    X_DEPARTMENT_ID,
    X_COSTCENTRE_ID,
    X_OWNER,
    X_ACCRUAL_METHOD,
    X_ACCRUAL_OPERAND,
    X_ACCRUAL_RATE,
    X_ACCRUAL_BASIS,
    X_HIERARCHY,
    X_HIERARCHY_LEVEL,
    X_BUDGET_FLAG,
    X_EARNED_FLAG,
    X_APPLY_ACCRUAL_ON,
    X_ACCRUAL_PHASE,
    X_ACCRUAL_CAP,
    X_ACCRUAL_UOM,
    X_OBJECT_VERSION_NUMBER,
    X_ATTRIBUTE_CATEGORY,
    X_ATTRIBUTE1,
    X_ATTRIBUTE2,
    X_ATTRIBUTE3,
    X_ATTRIBUTE4,
    X_ATTRIBUTE5,
    X_ATTRIBUTE6,
    X_ATTRIBUTE7,
    X_ATTRIBUTE8,
    X_ATTRIBUTE9,
    X_ATTRIBUTE10,
    X_ATTRIBUTE11,
    X_ATTRIBUTE12,
    X_ATTRIBUTE13,
    X_ATTRIBUTE14,
    X_ATTRIBUTE15,
    X_CREATION_DATE,
    X_CREATED_BY,
    X_LAST_UPDATE_DATE,
    X_LAST_UPDATED_BY,
    X_LAST_UPDATE_LOGIN,
    X_HIERARCHY_ID,
    X_PARENT_NODE_ID,
    X_NODE_ID,
    X_ORIGINAL_BUDGET,
    X_TRANSFERED_IN_AMT,
    X_TRANSFERED_OUT_AMT,
    X_HOLDBACK_AMT,
    X_PLANNED_AMT,
    X_COMMITTED_AMT,
    X_EARNED_AMT,
    X_PAID_AMT,
    X_PLAN_TYPE,
    X_PLAN_ID,
    X_LIABLE_ACCNT_SEGMENTS,
    X_ADJUSTMENT_ACCNT_SEGMENTS
  );

  insert into OZF_FUNDS_ALL_TL (
    FUND_ID,
    LAST_UPDATE_DATE,
    LAST_UPDATED_BY,
    LAST_UPDATE_LOGIN,
    CREATION_DATE,
    CREATED_BY,
    CREATED_FROM,
    REQUEST_ID,
    SHORT_NAME,
    DESCRIPTION,
    LANGUAGE,
    SOURCE_LANG
  ) select
    X_FUND_ID,
    X_LAST_UPDATE_DATE,
    X_LAST_UPDATED_BY,
    X_LAST_UPDATE_LOGIN,
    X_CREATION_DATE,
    X_CREATED_BY,
    X_CREATED_FROM,
    X_REQUEST_ID,
    X_SHORT_NAME,
    X_DESCRIPTION,
    L.LANGUAGE_CODE,
    userenv('LANG')
  from FND_LANGUAGES L
  where L.INSTALLED_FLAG in ('I', 'B')
  and not exists
    (select NULL
    from OZF_FUNDS_ALL_TL T
    where T.FUND_ID = X_FUND_ID
    and T.LANGUAGE = L.LANGUAGE_CODE);

  open c;
  fetch c into X_ROWID;
  if (c%notfound) then
    close c;
    raise no_data_found;
  end if;
  close c;

end INSERT_ROW;

procedure LOCK_ROW (
  X_FUND_ID in NUMBER,
  X_CREATED_FROM in VARCHAR2,
  X_REQUEST_ID in NUMBER,
  X_FUND_NUMBER in VARCHAR2,
  X_PARENT_FUND_ID in NUMBER,
  X_CATEGORY_ID in NUMBER,
  X_FUND_TYPE in VARCHAR2,
  X_FUND_USAGE in VARCHAR2,
  X_STATUS_CODE in VARCHAR2,
  X_STATUS_DATE in DATE,
  X_ACCRUED_LIABLE_ACCOUNT in NUMBER,
  X_DED_ADJUSTMENT_ACCOUNT in NUMBER,
  X_LIABILITY_FLAG in VARCHAR2,
  X_SET_OF_BOOKS_ID in NUMBER,
  X_START_PERIOD_ID in NUMBER,
  X_END_PERIOD_ID in NUMBER,
  X_START_DATE_ACTIVE in DATE,
  X_END_DATE_ACTIVE in DATE,
  X_BUDGET_AMOUNT_TC in NUMBER,
  X_BUDGET_AMOUNT_FC in NUMBER,
  X_AVAILABLE_AMOUNT in NUMBER,
  X_DISTRIBUTED_AMOUNT in NUMBER,
  X_CURRENCY_CODE_TC in VARCHAR2,
  X_CURRENCY_CODE_FC in VARCHAR2,
  X_EXCHANGE_RATE_TYPE in VARCHAR2,
  X_EXCHANGE_RATE_DATE in DATE,
  X_EXCHANGE_RATE in NUMBER,
  X_DEPARTMENT_ID in NUMBER,
  X_COSTCENTRE_ID in NUMBER,
  X_OWNER in NUMBER,
  X_ACCRUAL_METHOD in VARCHAR2,
  X_ACCRUAL_OPERAND in VARCHAR2,
  X_ACCRUAL_RATE in NUMBER,
  X_ACCRUAL_BASIS in VARCHAR2,
  X_HIERARCHY in VARCHAR2,
  X_HIERARCHY_LEVEL in VARCHAR2,
  X_BUDGET_FLAG in VARCHAR2,
  X_EARNED_FLAG in VARCHAR2,
  X_APPLY_ACCRUAL_ON in VARCHAR2,
  X_ACCRUAL_PHASE in VARCHAR2,
  X_ACCRUAL_CAP in NUMBER,
  X_ACCRUAL_UOM in VARCHAR2,
  X_OBJECT_VERSION_NUMBER in NUMBER,
  X_ATTRIBUTE_CATEGORY in VARCHAR2,
  X_ATTRIBUTE1 in VARCHAR2,
  X_ATTRIBUTE2 in VARCHAR2,
  X_ATTRIBUTE3 in VARCHAR2,
  X_ATTRIBUTE4 in VARCHAR2,
  X_ATTRIBUTE5 in VARCHAR2,
  X_ATTRIBUTE6 in VARCHAR2,
  X_ATTRIBUTE7 in VARCHAR2,
  X_ATTRIBUTE8 in VARCHAR2,
  X_ATTRIBUTE9 in VARCHAR2,
  X_ATTRIBUTE10 in VARCHAR2,
  X_ATTRIBUTE11 in VARCHAR2,
  X_ATTRIBUTE12 in VARCHAR2,
  X_ATTRIBUTE13 in VARCHAR2,
  X_ATTRIBUTE14 in VARCHAR2,
  X_ATTRIBUTE15 in VARCHAR2,
  X_SHORT_NAME in VARCHAR2,
  X_DESCRIPTION in VARCHAR2,
  X_HIERARCHY_ID in NUMBER,
  X_PARENT_NODE_ID in NUMBER,
  X_NODE_ID in NUMBER,
  X_ORIGINAL_BUDGET in NUMBER,
  X_TRANSFERED_IN_AMT in NUMBER,
  X_TRANSFERED_OUT_AMT in NUMBER,
  X_HOLDBACK_AMT in NUMBER,
  X_PLANNED_AMT in NUMBER,
  X_COMMITTED_AMT in NUMBER,
  X_EARNED_AMT in NUMBER,
  X_PAID_AMT in NUMBER,
  X_PLAN_TYPE in VARCHAR2,
  X_PLAN_ID in NUMBER,
  X_LIABLE_ACCNT_SEGMENTS in VARCHAR2,
  X_ADJUSTMENT_ACCNT_SEGMENTS in VARCHAR2
) is
  cursor c is select
      CREATED_FROM,
      REQUEST_ID,
      FUND_NUMBER,
      PARENT_FUND_ID,
      CATEGORY_ID,
      FUND_TYPE,
      FUND_USAGE,
      STATUS_CODE,
      STATUS_DATE,
      ACCRUED_LIABLE_ACCOUNT,
      DED_ADJUSTMENT_ACCOUNT,
      LIABILITY_FLAG,
      SET_OF_BOOKS_ID,
      START_PERIOD_ID,
      END_PERIOD_ID,
      START_DATE_ACTIVE,
      END_DATE_ACTIVE,
      BUDGET_AMOUNT_TC,
      BUDGET_AMOUNT_FC,
      AVAILABLE_AMOUNT,
      DISTRIBUTED_AMOUNT,
      CURRENCY_CODE_TC,
      CURRENCY_CODE_FC,
      EXCHANGE_RATE_TYPE,
      EXCHANGE_RATE_DATE,
      EXCHANGE_RATE,
      DEPARTMENT_ID,
      COSTCENTRE_ID,
      OWNER,
      ACCRUAL_METHOD,
      ACCRUAL_OPERAND,
      ACCRUAL_RATE,
      ACCRUAL_BASIS,
      HIERARCHY,
      HIERARCHY_LEVEL,
      BUDGET_FLAG,
      EARNED_FLAG,
      APPLY_ACCRUAL_ON,
      ACCRUAL_PHASE,
      ACCRUAL_CAP,
      ACCRUAL_UOM,
      OBJECT_VERSION_NUMBER,
      ATTRIBUTE_CATEGORY,
      ATTRIBUTE1,
      ATTRIBUTE2,
      ATTRIBUTE3,
      ATTRIBUTE4,
      ATTRIBUTE5,
      ATTRIBUTE6,
      ATTRIBUTE7,
      ATTRIBUTE8,
      ATTRIBUTE9,
      ATTRIBUTE10,
      ATTRIBUTE11,
      ATTRIBUTE12,
      ATTRIBUTE13,
      ATTRIBUTE14,
      ATTRIBUTE15,
      HIERARCHY_ID,
      PARENT_NODE_ID ,
      NODE_ID ,
      ORIGINAL_BUDGET,
      TRANSFERED_IN_AMT,
      TRANSFERED_OUT_AMT,
      HOLDBACK_AMT,
      PLANNED_AMT,
      COMMITTED_AMT,
      EARNED_AMT,
      PAID_AMT,
      PLAN_TYPE,
      PLAN_ID,
      LIABLE_ACCNT_SEGMENTS,
      ADJUSTMENT_ACCNT_SEGMENTS
    from OZF_FUNDS_ALL_B
    where FUND_ID = X_FUND_ID
    for update of FUND_ID nowait;
  recinfo c%rowtype;

  cursor c1 is select
      SHORT_NAME,
      DESCRIPTION,
      decode(LANGUAGE, userenv('LANG'), 'Y', 'N') BASELANG
    from OZF_FUNDS_ALL_TL
    where FUND_ID = X_FUND_ID
    and userenv('LANG') in (LANGUAGE, SOURCE_LANG)
    for update of FUND_ID nowait;
begin
  open c;
  fetch c into recinfo;
  if (c%notfound) then
    close c;
    fnd_message.set_name('FND', 'FORM_RECORD_DELETED');
    app_exception.raise_exception;
  end if;
  close c;
  if (    ((recinfo.CREATED_FROM = X_CREATED_FROM)
           OR ((recinfo.CREATED_FROM is null) AND (X_CREATED_FROM is null)))
      AND ((recinfo.REQUEST_ID = X_REQUEST_ID)
           OR ((recinfo.REQUEST_ID is null) AND (X_REQUEST_ID is null)))
      AND (recinfo.FUND_NUMBER = X_FUND_NUMBER)
      AND ((recinfo.PARENT_FUND_ID = X_PARENT_FUND_ID)
           OR ((recinfo.PARENT_FUND_ID is null) AND (X_PARENT_FUND_ID is null)))
      AND ((recinfo.CATEGORY_ID = X_CATEGORY_ID)
           OR ((recinfo.CATEGORY_ID is null) AND (X_CATEGORY_ID is null)))
      AND ((recinfo.FUND_TYPE = X_FUND_TYPE)
           OR ((recinfo.FUND_TYPE is null) AND (X_FUND_TYPE is null)))
      AND ((recinfo.FUND_USAGE = X_FUND_USAGE)
           OR ((recinfo.FUND_USAGE is null) AND (X_FUND_USAGE is null)))
      AND (recinfo.STATUS_CODE = X_STATUS_CODE)
      AND (recinfo.STATUS_DATE = X_STATUS_DATE)
      AND ((recinfo.ACCRUED_LIABLE_ACCOUNT = X_ACCRUED_LIABLE_ACCOUNT)
           OR ((recinfo.ACCRUED_LIABLE_ACCOUNT is null) AND (X_ACCRUED_LIABLE_ACCOUNT is null)))
      AND ((recinfo.DED_ADJUSTMENT_ACCOUNT = X_DED_ADJUSTMENT_ACCOUNT)
           OR ((recinfo.DED_ADJUSTMENT_ACCOUNT is null) AND (X_DED_ADJUSTMENT_ACCOUNT is null)))
      AND (recinfo.LIABILITY_FLAG = X_LIABILITY_FLAG)
      AND ((recinfo.SET_OF_BOOKS_ID = X_SET_OF_BOOKS_ID)
           OR ((recinfo.SET_OF_BOOKS_ID is null) AND (X_SET_OF_BOOKS_ID is null)))
      AND ((recinfo.START_PERIOD_ID = X_START_PERIOD_ID)
           OR ((recinfo.START_PERIOD_ID is null) AND (X_START_PERIOD_ID is null)))
      AND ((recinfo.END_PERIOD_ID = X_END_PERIOD_ID)
           OR ((recinfo.END_PERIOD_ID is null) AND (X_END_PERIOD_ID is null)))
      AND ((recinfo.START_DATE_ACTIVE = X_START_DATE_ACTIVE)
           OR ((recinfo.START_DATE_ACTIVE is null) AND (X_START_DATE_ACTIVE is null)))
      AND ((recinfo.END_DATE_ACTIVE = X_END_DATE_ACTIVE)
           OR ((recinfo.END_DATE_ACTIVE is null) AND (X_END_DATE_ACTIVE is null)))
      AND ((recinfo.BUDGET_AMOUNT_TC = X_BUDGET_AMOUNT_TC)
           OR ((recinfo.BUDGET_AMOUNT_TC is null) AND (X_BUDGET_AMOUNT_TC is null)))
      AND ((recinfo.BUDGET_AMOUNT_FC = X_BUDGET_AMOUNT_FC)
           OR ((recinfo.BUDGET_AMOUNT_FC is null) AND (X_BUDGET_AMOUNT_FC is null)))
      AND ((recinfo.AVAILABLE_AMOUNT = X_AVAILABLE_AMOUNT)
           OR ((recinfo.AVAILABLE_AMOUNT is null) AND (X_AVAILABLE_AMOUNT is null)))
      AND ((recinfo.DISTRIBUTED_AMOUNT = X_DISTRIBUTED_AMOUNT)
           OR ((recinfo.DISTRIBUTED_AMOUNT is null) AND (X_DISTRIBUTED_AMOUNT is null)))
      AND ((recinfo.CURRENCY_CODE_TC = X_CURRENCY_CODE_TC)
           OR ((recinfo.CURRENCY_CODE_TC is null) AND (X_CURRENCY_CODE_TC is null)))
      AND ((recinfo.CURRENCY_CODE_FC = X_CURRENCY_CODE_FC)
           OR ((recinfo.CURRENCY_CODE_FC is null) AND (X_CURRENCY_CODE_FC is null)))
      AND ((recinfo.EXCHANGE_RATE_TYPE = X_EXCHANGE_RATE_TYPE)
           OR ((recinfo.EXCHANGE_RATE_TYPE is null) AND (X_EXCHANGE_RATE_TYPE is null)))
      AND ((recinfo.EXCHANGE_RATE_DATE = X_EXCHANGE_RATE_DATE)
           OR ((recinfo.EXCHANGE_RATE_DATE is null) AND (X_EXCHANGE_RATE_DATE is null)))
      AND ((recinfo.EXCHANGE_RATE = X_EXCHANGE_RATE)
           OR ((recinfo.EXCHANGE_RATE is null) AND (X_EXCHANGE_RATE is null)))
      AND ((recinfo.DEPARTMENT_ID = X_DEPARTMENT_ID)
           OR ((recinfo.DEPARTMENT_ID is null) AND (X_DEPARTMENT_ID is null)))
      AND ((recinfo.COSTCENTRE_ID = X_COSTCENTRE_ID)
           OR ((recinfo.COSTCENTRE_ID is null) AND (X_COSTCENTRE_ID is null)))
      AND (recinfo.OWNER = X_OWNER)
      AND ((recinfo.ACCRUAL_METHOD = X_ACCRUAL_METHOD)
           OR ((recinfo.ACCRUAL_METHOD is null) AND (X_ACCRUAL_METHOD is null)))
      AND ((recinfo.ACCRUAL_OPERAND = X_ACCRUAL_OPERAND)
           OR ((recinfo.ACCRUAL_OPERAND is null) AND (X_ACCRUAL_OPERAND is null)))
      AND ((recinfo.ACCRUAL_RATE = X_ACCRUAL_RATE)
           OR ((recinfo.ACCRUAL_RATE is null) AND (X_ACCRUAL_RATE is null)))
      AND ((recinfo.ACCRUAL_BASIS = X_ACCRUAL_BASIS)
           OR ((recinfo.ACCRUAL_BASIS is null) AND (X_ACCRUAL_BASIS is null)))
      AND ((recinfo.HIERARCHY = X_HIERARCHY)
           OR ((recinfo.HIERARCHY is null) AND (X_HIERARCHY is null)))
      AND ((recinfo.HIERARCHY_LEVEL = X_HIERARCHY_LEVEL)
           OR ((recinfo.HIERARCHY_LEVEL is null) AND (X_HIERARCHY_LEVEL is null)))
      AND ((recinfo.BUDGET_FLAG = X_BUDGET_FLAG)
           OR ((recinfo.BUDGET_FLAG is null) AND (X_BUDGET_FLAG is null)))
      AND ((recinfo.EARNED_FLAG = X_EARNED_FLAG)
           OR ((recinfo.EARNED_FLAG is null) AND (X_EARNED_FLAG is null)))
      AND ((recinfo.APPLY_ACCRUAL_ON = X_APPLY_ACCRUAL_ON)
           OR ((recinfo.APPLY_ACCRUAL_ON is null) AND (X_APPLY_ACCRUAL_ON is null)))
      AND ((recinfo.ACCRUAL_PHASE = X_ACCRUAL_PHASE)
           OR ((recinfo.ACCRUAL_PHASE is null) AND (X_ACCRUAL_PHASE is null)))
      AND ((recinfo.ACCRUAL_CAP = X_ACCRUAL_CAP)
           OR ((recinfo.ACCRUAL_CAP is null) AND (X_ACCRUAL_CAP is null)))
      AND ((recinfo.ACCRUAL_UOM = X_ACCRUAL_UOM)
           OR ((recinfo.ACCRUAL_UOM is null) AND (X_ACCRUAL_UOM is null)))
      AND ((recinfo.OBJECT_VERSION_NUMBER = X_OBJECT_VERSION_NUMBER)
           OR ((recinfo.OBJECT_VERSION_NUMBER is null) AND (X_OBJECT_VERSION_NUMBER is null)))
      AND ((recinfo.ATTRIBUTE_CATEGORY = X_ATTRIBUTE_CATEGORY)
           OR ((recinfo.ATTRIBUTE_CATEGORY is null) AND (X_ATTRIBUTE_CATEGORY is null)))
      AND ((recinfo.ATTRIBUTE1 = X_ATTRIBUTE1)
           OR ((recinfo.ATTRIBUTE1 is null) AND (X_ATTRIBUTE1 is null)))
      AND ((recinfo.ATTRIBUTE2 = X_ATTRIBUTE2)
           OR ((recinfo.ATTRIBUTE2 is null) AND (X_ATTRIBUTE2 is null)))
      AND ((recinfo.ATTRIBUTE3 = X_ATTRIBUTE3)
           OR ((recinfo.ATTRIBUTE3 is null) AND (X_ATTRIBUTE3 is null)))
      AND ((recinfo.ATTRIBUTE4 = X_ATTRIBUTE4)
           OR ((recinfo.ATTRIBUTE4 is null) AND (X_ATTRIBUTE4 is null)))
      AND ((recinfo.ATTRIBUTE5 = X_ATTRIBUTE5)
           OR ((recinfo.ATTRIBUTE5 is null) AND (X_ATTRIBUTE5 is null)))
      AND ((recinfo.ATTRIBUTE6 = X_ATTRIBUTE6)
           OR ((recinfo.ATTRIBUTE6 is null) AND (X_ATTRIBUTE6 is null)))
      AND ((recinfo.ATTRIBUTE7 = X_ATTRIBUTE7)
           OR ((recinfo.ATTRIBUTE7 is null) AND (X_ATTRIBUTE7 is null)))
      AND ((recinfo.ATTRIBUTE8 = X_ATTRIBUTE8)
           OR ((recinfo.ATTRIBUTE8 is null) AND (X_ATTRIBUTE8 is null)))
      AND ((recinfo.ATTRIBUTE9 = X_ATTRIBUTE9)
           OR ((recinfo.ATTRIBUTE9 is null) AND (X_ATTRIBUTE9 is null)))
      AND ((recinfo.ATTRIBUTE10 = X_ATTRIBUTE10)
           OR ((recinfo.ATTRIBUTE10 is null) AND (X_ATTRIBUTE10 is null)))
      AND ((recinfo.ATTRIBUTE11 = X_ATTRIBUTE11)
           OR ((recinfo.ATTRIBUTE11 is null) AND (X_ATTRIBUTE11 is null)))
      AND ((recinfo.ATTRIBUTE12 = X_ATTRIBUTE12)
           OR ((recinfo.ATTRIBUTE12 is null) AND (X_ATTRIBUTE12 is null)))
      AND ((recinfo.ATTRIBUTE13 = X_ATTRIBUTE13)
           OR ((recinfo.ATTRIBUTE13 is null) AND (X_ATTRIBUTE13 is null)))
      AND ((recinfo.ATTRIBUTE14 = X_ATTRIBUTE14)
           OR ((recinfo.ATTRIBUTE14 is null) AND (X_ATTRIBUTE14 is null)))
      AND ((recinfo.ATTRIBUTE15 = X_ATTRIBUTE15)
           OR ((recinfo.ATTRIBUTE15 is null) AND (X_ATTRIBUTE15 is null)))
      AND ((recinfo.HIERARCHY_ID = X_HIERARCHY_ID)
           OR ((recinfo.HIERARCHY_ID is null) AND (X_HIERARCHY_ID is null)))
      AND ((recinfo.PARENT_NODE_ID  = X_PARENT_NODE_ID )
           OR ((recinfo.PARENT_NODE_ID  is null) AND (X_PARENT_NODE_ID  is null)))
      AND ((recinfo.NODE_ID = X_NODE_ID)
           OR ((recinfo.NODE_ID is null) AND (X_NODE_ID is null)))
      AND ((recinfo.ORIGINAL_BUDGET = X_ORIGINAL_BUDGET)
           OR ((recinfo.ORIGINAL_BUDGET is null) AND (X_ORIGINAL_BUDGET is null)))
      AND ((recinfo.TRANSFERED_IN_AMT = X_TRANSFERED_IN_AMT)
           OR ((recinfo.TRANSFERED_IN_AMT is null) AND (X_TRANSFERED_IN_AMT is null)))
      AND ((recinfo.TRANSFERED_OUT_AMT = X_TRANSFERED_OUT_AMT)
           OR ((recinfo.TRANSFERED_OUT_AMT is null) AND (X_TRANSFERED_OUT_AMT is null)))
      AND ((recinfo.HOLDBACK_AMT = X_HOLDBACK_AMT)
           OR ((recinfo.HOLDBACK_AMT is null) AND (X_HOLDBACK_AMT is null)))
      AND ((recinfo.PLANNED_AMT = X_PLANNED_AMT)
           OR ((recinfo.PLANNED_AMT is null) AND (X_PLANNED_AMT is null)))
      AND ((recinfo.COMMITTED_AMT = X_COMMITTED_AMT)
           OR ((recinfo.COMMITTED_AMT is null) AND (X_COMMITTED_AMT is null)))
      AND ((recinfo.EARNED_AMT = X_EARNED_AMT)
           OR ((recinfo.EARNED_AMT is null) AND (X_EARNED_AMT is null)))
      AND ((recinfo.PAID_AMT = X_PAID_AMT)
           OR ((recinfo.PAID_AMT is null) AND (X_PAID_AMT is null)))
      AND ((recinfo.PLAN_TYPE = X_PLAN_TYPE)
           OR ((recinfo.PLAN_TYPE is null) AND (X_PLAN_TYPE is null)))
      AND ((recinfo.PLAN_ID = X_PLAN_ID)
           OR ((recinfo.PLAN_ID is null) AND (X_PLAN_ID is null)))
      AND ((recinfo.LIABLE_ACCNT_SEGMENTS = X_LIABLE_ACCNT_SEGMENTS)
           OR ((recinfo.LIABLE_ACCNT_SEGMENTS is null) AND (X_LIABLE_ACCNT_SEGMENTS is null)))
      AND ((recinfo.ADJUSTMENT_ACCNT_SEGMENTS = X_ADJUSTMENT_ACCNT_SEGMENTS)
           OR ((recinfo.ADJUSTMENT_ACCNT_SEGMENTS is null) AND (X_ADJUSTMENT_ACCNT_SEGMENTS is null)))
  ) then
    null;
  else
    fnd_message.set_name('FND', 'FORM_RECORD_CHANGED');
    app_exception.raise_exception;
  end if;

  for tlinfo in c1 loop
    if (tlinfo.BASELANG = 'Y') then
      if (    (tlinfo.SHORT_NAME = X_SHORT_NAME)
          AND ((tlinfo.DESCRIPTION = X_DESCRIPTION)
               OR ((tlinfo.DESCRIPTION is null) AND (X_DESCRIPTION is null)))
      ) then
        null;
      else
        fnd_message.set_name('FND', 'FORM_RECORD_CHANGED');
        app_exception.raise_exception;
      end if;
    end if;
  end loop;
  return;
end LOCK_ROW;

procedure UPDATE_ROW (
  X_FUND_ID in NUMBER,
  X_CREATED_FROM in VARCHAR2,
  X_REQUEST_ID in NUMBER,
  X_FUND_NUMBER in VARCHAR2,
  X_PARENT_FUND_ID in NUMBER,
  X_CATEGORY_ID in NUMBER,
  X_FUND_TYPE in VARCHAR2,
  X_FUND_USAGE in VARCHAR2,
  X_STATUS_CODE in VARCHAR2,
  X_STATUS_DATE in DATE,
  X_ACCRUED_LIABLE_ACCOUNT in NUMBER,
  X_DED_ADJUSTMENT_ACCOUNT in NUMBER,
  X_LIABILITY_FLAG in VARCHAR2,
  X_SET_OF_BOOKS_ID in NUMBER,
  X_START_PERIOD_ID in NUMBER,
  X_END_PERIOD_ID in NUMBER,
  X_START_DATE_ACTIVE in DATE,
  X_END_DATE_ACTIVE in DATE,
  X_BUDGET_AMOUNT_TC in NUMBER,
  X_BUDGET_AMOUNT_FC in NUMBER,
  X_AVAILABLE_AMOUNT in NUMBER,
  X_DISTRIBUTED_AMOUNT in NUMBER,
  X_CURRENCY_CODE_TC in VARCHAR2,
  X_CURRENCY_CODE_FC in VARCHAR2,
  X_EXCHANGE_RATE_TYPE in VARCHAR2,
  X_EXCHANGE_RATE_DATE in DATE,
  X_EXCHANGE_RATE in NUMBER,
  X_DEPARTMENT_ID in NUMBER,
  X_COSTCENTRE_ID in NUMBER,
  X_OWNER in NUMBER,
  X_ACCRUAL_METHOD in VARCHAR2,
  X_ACCRUAL_OPERAND in VARCHAR2,
  X_ACCRUAL_RATE in NUMBER,
  X_ACCRUAL_BASIS in VARCHAR2,
  X_HIERARCHY in VARCHAR2,
  X_HIERARCHY_LEVEL in VARCHAR2,
  X_BUDGET_FLAG in VARCHAR2,
  X_EARNED_FLAG in VARCHAR2,
  X_APPLY_ACCRUAL_ON in VARCHAR2,
  X_ACCRUAL_PHASE in VARCHAR2,
  X_ACCRUAL_CAP in NUMBER,
  X_ACCRUAL_UOM in VARCHAR2,
  X_OBJECT_VERSION_NUMBER in NUMBER,
  X_ATTRIBUTE_CATEGORY in VARCHAR2,
  X_ATTRIBUTE1 in VARCHAR2,
  X_ATTRIBUTE2 in VARCHAR2,
  X_ATTRIBUTE3 in VARCHAR2,
  X_ATTRIBUTE4 in VARCHAR2,
  X_ATTRIBUTE5 in VARCHAR2,
  X_ATTRIBUTE6 in VARCHAR2,
  X_ATTRIBUTE7 in VARCHAR2,
  X_ATTRIBUTE8 in VARCHAR2,
  X_ATTRIBUTE9 in VARCHAR2,
  X_ATTRIBUTE10 in VARCHAR2,
  X_ATTRIBUTE11 in VARCHAR2,
  X_ATTRIBUTE12 in VARCHAR2,
  X_ATTRIBUTE13 in VARCHAR2,
  X_ATTRIBUTE14 in VARCHAR2,
  X_ATTRIBUTE15 in VARCHAR2,
  X_SHORT_NAME in VARCHAR2,
  X_DESCRIPTION in VARCHAR2,
  X_LAST_UPDATE_DATE in DATE,
  X_LAST_UPDATED_BY in NUMBER,
  X_LAST_UPDATE_LOGIN in NUMBER,
  X_HIERARCHY_ID in NUMBER,
  X_PARENT_NODE_ID in NUMBER,
  X_NODE_ID in NUMBER,
  X_ORIGINAL_BUDGET in NUMBER,
  X_TRANSFERED_IN_AMT in NUMBER,
  X_TRANSFERED_OUT_AMT in NUMBER,
  X_HOLDBACK_AMT in NUMBER,
  X_PLANNED_AMT in NUMBER,
  X_COMMITTED_AMT in NUMBER,
  X_EARNED_AMT in NUMBER,
  X_PAID_AMT in NUMBER,
  X_PLAN_TYPE in VARCHAR2,
  X_PLAN_ID in NUMBER,
  X_LIABLE_ACCNT_SEGMENTS in VARCHAR2,
  X_ADJUSTMENT_ACCNT_SEGMENTS in VARCHAR2
) is
begin
  update OZF_FUNDS_ALL_B set
    CREATED_FROM = X_CREATED_FROM,
    REQUEST_ID = X_REQUEST_ID,
    FUND_NUMBER = X_FUND_NUMBER,
    PARENT_FUND_ID = X_PARENT_FUND_ID,
    CATEGORY_ID = X_CATEGORY_ID,
    FUND_TYPE = X_FUND_TYPE,
    FUND_USAGE = X_FUND_USAGE,
    STATUS_CODE = X_STATUS_CODE,
    STATUS_DATE = X_STATUS_DATE,
    ACCRUED_LIABLE_ACCOUNT = X_ACCRUED_LIABLE_ACCOUNT,
    DED_ADJUSTMENT_ACCOUNT = X_DED_ADJUSTMENT_ACCOUNT,
    LIABILITY_FLAG = X_LIABILITY_FLAG,
    SET_OF_BOOKS_ID = X_SET_OF_BOOKS_ID,
    START_PERIOD_ID = X_START_PERIOD_ID,
    END_PERIOD_ID = X_END_PERIOD_ID,
    START_DATE_ACTIVE = X_START_DATE_ACTIVE,
    END_DATE_ACTIVE = X_END_DATE_ACTIVE,
    BUDGET_AMOUNT_TC = X_BUDGET_AMOUNT_TC,
    BUDGET_AMOUNT_FC = X_BUDGET_AMOUNT_FC,
    AVAILABLE_AMOUNT = X_AVAILABLE_AMOUNT,
    DISTRIBUTED_AMOUNT = X_DISTRIBUTED_AMOUNT,
    CURRENCY_CODE_TC = X_CURRENCY_CODE_TC,
    CURRENCY_CODE_FC = X_CURRENCY_CODE_FC,
    EXCHANGE_RATE_TYPE = X_EXCHANGE_RATE_TYPE,
    EXCHANGE_RATE_DATE = X_EXCHANGE_RATE_DATE,
    EXCHANGE_RATE = X_EXCHANGE_RATE,
    DEPARTMENT_ID = X_DEPARTMENT_ID,
    COSTCENTRE_ID = X_COSTCENTRE_ID,
    OWNER = X_OWNER,
    ACCRUAL_METHOD = X_ACCRUAL_METHOD,
    ACCRUAL_OPERAND = X_ACCRUAL_OPERAND,
    ACCRUAL_RATE = X_ACCRUAL_RATE,
    ACCRUAL_BASIS = X_ACCRUAL_BASIS,
    HIERARCHY = X_HIERARCHY,
    HIERARCHY_LEVEL = X_HIERARCHY_LEVEL,
    BUDGET_FLAG = X_BUDGET_FLAG,
    EARNED_FLAG = X_EARNED_FLAG,
    APPLY_ACCRUAL_ON = X_APPLY_ACCRUAL_ON,
    ACCRUAL_PHASE = X_ACCRUAL_PHASE,
    ACCRUAL_CAP = X_ACCRUAL_CAP,
    ACCRUAL_UOM = X_ACCRUAL_UOM,
    OBJECT_VERSION_NUMBER = X_OBJECT_VERSION_NUMBER,
    ATTRIBUTE_CATEGORY = X_ATTRIBUTE_CATEGORY,
    ATTRIBUTE1 = X_ATTRIBUTE1,
    ATTRIBUTE2 = X_ATTRIBUTE2,
    ATTRIBUTE3 = X_ATTRIBUTE3,
    ATTRIBUTE4 = X_ATTRIBUTE4,
    ATTRIBUTE5 = X_ATTRIBUTE5,
    ATTRIBUTE6 = X_ATTRIBUTE6,
    ATTRIBUTE7 = X_ATTRIBUTE7,
    ATTRIBUTE8 = X_ATTRIBUTE8,
    ATTRIBUTE9 = X_ATTRIBUTE9,
    ATTRIBUTE10 = X_ATTRIBUTE10,
    ATTRIBUTE11 = X_ATTRIBUTE11,
    ATTRIBUTE12 = X_ATTRIBUTE12,
    ATTRIBUTE13 = X_ATTRIBUTE13,
    ATTRIBUTE14 = X_ATTRIBUTE14,
    ATTRIBUTE15 = X_ATTRIBUTE15,
    LAST_UPDATE_DATE = X_LAST_UPDATE_DATE,
    LAST_UPDATED_BY = X_LAST_UPDATED_BY,
    LAST_UPDATE_LOGIN = X_LAST_UPDATE_LOGIN,
    HIERARCHY_ID = X_HIERARCHY_ID,
    PARENT_NODE_ID = X_PARENT_NODE_ID,
    NODE_ID = X_NODE_ID,
    ORIGINAL_BUDGET = X_ORIGINAL_BUDGET,
    TRANSFERED_IN_AMT = X_TRANSFERED_IN_AMT,
    TRANSFERED_OUT_AMT = X_TRANSFERED_OUT_AMT,
    HOLDBACK_AMT = X_HOLDBACK_AMT,
    PLANNED_AMT = X_PLANNED_AMT,
    COMMITTED_AMT = X_COMMITTED_AMT,
    EARNED_AMT = X_EARNED_AMT,
    PAID_AMT = X_PAID_AMT,
    PLAN_TYPE = X_PLAN_TYPE,
    PLAN_ID = X_PLAN_ID,
    LIABLE_ACCNT_SEGMENTS = X_LIABLE_ACCNT_SEGMENTS,
    ADJUSTMENT_ACCNT_SEGMENTS = X_ADJUSTMENT_ACCNT_SEGMENTS
   where FUND_ID = X_FUND_ID;

  if (sql%notfound) then
    raise no_data_found;
  end if;

  update OZF_FUNDS_ALL_TL set
    SHORT_NAME = X_SHORT_NAME,
    DESCRIPTION = X_DESCRIPTION,
    LAST_UPDATE_DATE = X_LAST_UPDATE_DATE,
    LAST_UPDATED_BY = X_LAST_UPDATED_BY,
    LAST_UPDATE_LOGIN = X_LAST_UPDATE_LOGIN,
    SOURCE_LANG = userenv('LANG')
  where FUND_ID = X_FUND_ID
  and userenv('LANG') in (LANGUAGE, SOURCE_LANG);

  if (sql%notfound) then
    raise no_data_found;
  end if;
end UPDATE_ROW;

procedure DELETE_ROW (
  X_FUND_ID in NUMBER
) is
begin
  delete from OZF_FUNDS_ALL_TL
  where FUND_ID = X_FUND_ID;

  if (sql%notfound) then
    raise no_data_found;
  end if;

  delete from OZF_FUNDS_ALL_B
  where FUND_ID = X_FUND_ID;

  if (sql%notfound) then
    raise no_data_found;
  end if;
end DELETE_ROW;

procedure ADD_LANGUAGE
is
begin
  delete from OZF_FUNDS_ALL_TL T
  where not exists
    (select NULL
    from OZF_FUNDS_ALL_B B
    where B.FUND_ID = T.FUND_ID
    );

  update OZF_FUNDS_ALL_TL T set (
      SHORT_NAME,
      DESCRIPTION
    ) = (select
      B.SHORT_NAME,
      B.DESCRIPTION
    from OZF_FUNDS_ALL_TL B
    where B.FUND_ID = T.FUND_ID
    and B.LANGUAGE = T.SOURCE_LANG)
  where (
      T.FUND_ID,
      T.LANGUAGE
  ) in (select
      SUBT.FUND_ID,
      SUBT.LANGUAGE
    from OZF_FUNDS_ALL_TL SUBB, OZF_FUNDS_ALL_TL SUBT
    where SUBB.FUND_ID = SUBT.FUND_ID
    and SUBB.LANGUAGE = SUBT.SOURCE_LANG
    and (SUBB.SHORT_NAME <> SUBT.SHORT_NAME
      or SUBB.DESCRIPTION <> SUBT.DESCRIPTION
      or (SUBB.DESCRIPTION is null and SUBT.DESCRIPTION is not null)
      or (SUBB.DESCRIPTION is not null and SUBT.DESCRIPTION is null)
  ));

  insert into OZF_FUNDS_ALL_TL (
    FUND_ID,
    LAST_UPDATE_DATE,
    LAST_UPDATED_BY,
    LAST_UPDATE_LOGIN,
    CREATION_DATE,
    CREATED_BY,
    CREATED_FROM,
    REQUEST_ID,
    PROGRAM_APPLICATION_ID,
    PROGRAM_ID,
    PROGRAM_UPDATE_DATE,
    SHORT_NAME,
    DESCRIPTION,
    LANGUAGE,
    SOURCE_LANG
  ) select
    B.FUND_ID,
    B.LAST_UPDATE_DATE,
    B.LAST_UPDATED_BY,
    B.LAST_UPDATE_LOGIN,
    B.CREATION_DATE,
    B.CREATED_BY,
    B.CREATED_FROM,
    B.REQUEST_ID,
    B.PROGRAM_APPLICATION_ID,
    B.PROGRAM_ID,
    B.PROGRAM_UPDATE_DATE,
    B.SHORT_NAME,
    B.DESCRIPTION,
    L.LANGUAGE_CODE,
    B.SOURCE_LANG
  from OZF_FUNDS_ALL_TL B, FND_LANGUAGES L
  where L.INSTALLED_FLAG in ('I', 'B')
  and B.LANGUAGE = userenv('LANG')
  and not exists
    (select NULL
    from OZF_FUNDS_ALL_TL T
    where T.FUND_ID = B.FUND_ID
    and T.LANGUAGE = L.LANGUAGE_CODE);
end ADD_LANGUAGE;

procedure TRANSLATE_ROW(
  X_FUND_ID in NUMBER,
  X_SHORT_NAME in VARCHAR2,
  X_DESCRIPTION in VARCHAR2,
  X_OWNERS in VARCHAR2
)
IS
BEGIN
  update OZF_FUNDS_ALL_TL set
    short_name = nvl(x_short_name, short_name),
    description = nvl(x_description, description),
    source_lang = userenv('LANG'),
    last_update_date = sysdate,
    last_updated_by = decode(x_owners, 'SEED', 1, 0),
    last_update_login = 0
  where fund_id = x_fund_id
  and userenv('LANG') in (language, source_lang);
END TRANSLATE_ROW;

procedure  LOAD_ROW(
  X_FUND_ID in NUMBER,
  X_CREATED_FROM in VARCHAR2,
  X_REQUEST_ID in NUMBER,
  X_FUND_NUMBER in VARCHAR2,
  X_PARENT_FUND_ID in NUMBER,
  X_CATEGORY_ID in NUMBER,
  X_FUND_TYPE in VARCHAR2,
  X_FUND_USAGE in VARCHAR2,
  X_STATUS_CODE in VARCHAR2,
  X_STATUS_DATE in DATE,
  X_ACCRUED_LIABLE_ACCOUNT in NUMBER,
  X_DED_ADJUSTMENT_ACCOUNT in NUMBER,
  X_LIABILITY_FLAG in VARCHAR2,
  X_SET_OF_BOOKS_ID in NUMBER,
  X_START_PERIOD_ID in NUMBER,
  X_END_PERIOD_ID in NUMBER,
  X_START_DATE_ACTIVE in DATE,
  X_END_DATE_ACTIVE in DATE,
  X_BUDGET_AMOUNT_TC in NUMBER,
  X_BUDGET_AMOUNT_FC in NUMBER,
  X_AVAILABLE_AMOUNT in NUMBER,
  X_DISTRIBUTED_AMOUNT in NUMBER,
  X_CURRENCY_CODE_TC in VARCHAR2,
  X_CURRENCY_CODE_FC in VARCHAR2,
  X_EXCHANGE_RATE_TYPE in VARCHAR2,
  X_EXCHANGE_RATE_DATE in DATE,
  X_EXCHANGE_RATE in NUMBER,
  X_DEPARTMENT_ID in NUMBER,
  X_COSTCENTRE_ID in NUMBER,
  X_OWNER in NUMBER,
  X_ACCRUAL_METHOD in VARCHAR2,
  X_ACCRUAL_OPERAND in VARCHAR2,
  X_ACCRUAL_RATE in NUMBER,
  X_ACCRUAL_BASIS in VARCHAR2,
  X_HIERARCHY in VARCHAR2,
  X_HIERARCHY_LEVEL in VARCHAR2,
  X_BUDGET_FLAG in VARCHAR2,
  X_EARNED_FLAG in VARCHAR2,
  X_APPLY_ACCRUAL_ON in VARCHAR2,
  X_ACCRUAL_PHASE in VARCHAR2,
  X_ACCRUAL_CAP in NUMBER,
  X_ACCRUAL_UOM in VARCHAR2,
  X_OBJECT_VERSION_NUMBER in NUMBER,
  X_ATTRIBUTE_CATEGORY in VARCHAR2,
  X_ATTRIBUTE1 in VARCHAR2,
  X_ATTRIBUTE2 in VARCHAR2,
  X_ATTRIBUTE3 in VARCHAR2,
  X_ATTRIBUTE4 in VARCHAR2,
  X_ATTRIBUTE5 in VARCHAR2,
  X_ATTRIBUTE6 in VARCHAR2,
  X_ATTRIBUTE7 in VARCHAR2,
  X_ATTRIBUTE8 in VARCHAR2,
  X_ATTRIBUTE9 in VARCHAR2,
  X_ATTRIBUTE10 in VARCHAR2,
  X_ATTRIBUTE11 in VARCHAR2,
  X_ATTRIBUTE12 in VARCHAR2,
  X_ATTRIBUTE13 in VARCHAR2,
  X_ATTRIBUTE14 in VARCHAR2,
  X_ATTRIBUTE15 in VARCHAR2,
  X_SHORT_NAME in VARCHAR2,
  X_DESCRIPTION in VARCHAR2,
  X_OWNERS in VARCHAR2,
  X_HIERARCHY_ID in NUMBER,
  X_PARENT_NODE_ID in NUMBER,
  X_NODE_ID in NUMBER,
  X_ORIGINAL_BUDGET in NUMBER,
  X_TRANSFERED_IN_AMT in NUMBER,
  X_TRANSFERED_OUT_AMT in NUMBER,
  X_HOLDBACK_AMT in NUMBER,
  X_PLANNED_AMT in NUMBER,
  X_COMMITTED_AMT in NUMBER,
  X_EARNED_AMT in NUMBER,
  X_PAID_AMT in NUMBER,
  X_PLAN_TYPE in VARCHAR2,
  X_PLAN_ID in NUMBER,
  X_LIABLE_ACCNT_SEGMENTS in VARCHAR2,
  X_ADJUSTMENT_ACCNT_SEGMENTS in VARCHAR2
)
IS

  l_user_id    number := 0;
  l_version    number;
  l_fund_id    number;
  l_dummy_char varchar2(1);
  l_row_id     varchar2(100);

  cursor c_version is
  select object_version_number
  from   ozf_funds_all_b
  where  fund_id = X_FUND_ID;

  cursor c_fund_exists is
  select 'x'
  from   ozf_funds_all_b
  where  fund_id = X_FUND_ID;

  cursor c_fund_id is
  select OZF_FUNDS_S.nextval
  from   dual;

BEGIN

  if X_OWNERS = 'SEED' then
    l_user_id := 1;
  end if;

  open c_fund_exists;
  fetch c_fund_exists into l_dummy_char;
  if c_fund_exists%notfound then
    close c_fund_exists;
    if X_FUND_ID is not null then
	 l_fund_id := X_FUND_ID;
    else
      open c_fund_id;
      fetch c_fund_id into l_fund_id;
      close c_fund_id;
    end if;
    l_version := 1;
    AMS_FUNDS_ALL_PKG.INSERT_ROW(
       X_ROWID                    =>l_row_id
      ,X_FUND_ID                  =>l_fund_id
      ,X_CREATED_FROM             =>X_CREATED_FROM
      ,X_REQUEST_ID               =>X_REQUEST_ID
      ,X_FUND_NUMBER              =>X_FUND_NUMBER
      ,X_PARENT_FUND_ID           =>X_PARENT_FUND_ID
      ,X_CATEGORY_ID              =>X_CATEGORY_ID
      ,X_FUND_TYPE                =>X_FUND_TYPE
      ,X_FUND_USAGE               =>X_FUND_USAGE
      ,X_STATUS_CODE              =>X_STATUS_CODE
      ,X_STATUS_DATE              =>X_STATUS_DATE
      ,X_ACCRUED_LIABLE_ACCOUNT   =>X_ACCRUED_LIABLE_ACCOUNT
      ,X_DED_ADJUSTMENT_ACCOUNT   =>X_DED_ADJUSTMENT_ACCOUNT
      ,X_LIABILITY_FLAG           =>X_LIABILITY_FLAG
      ,X_SET_OF_BOOKS_ID          =>X_SET_OF_BOOKS_ID
      ,X_START_PERIOD_ID          =>X_START_PERIOD_ID
      ,X_END_PERIOD_ID            =>X_END_PERIOD_ID
      ,X_START_DATE_ACTIVE        =>X_START_DATE_ACTIVE
      ,X_END_DATE_ACTIVE          =>X_END_DATE_ACTIVE
      ,X_BUDGET_AMOUNT_TC         =>X_BUDGET_AMOUNT_TC
      ,X_BUDGET_AMOUNT_FC         =>X_BUDGET_AMOUNT_FC
      ,X_AVAILABLE_AMOUNT         =>X_AVAILABLE_AMOUNT
      ,X_DISTRIBUTED_AMOUNT       =>X_DISTRIBUTED_AMOUNT
      ,X_CURRENCY_CODE_TC         =>X_CURRENCY_CODE_TC
      ,X_CURRENCY_CODE_FC         =>X_CURRENCY_CODE_FC
      ,X_EXCHANGE_RATE_TYPE       =>X_EXCHANGE_RATE_TYPE
      ,X_EXCHANGE_RATE_DATE       =>X_EXCHANGE_RATE_DATE
      ,X_EXCHANGE_RATE            =>X_EXCHANGE_RATE
      ,X_DEPARTMENT_ID            =>X_DEPARTMENT_ID
      ,X_COSTCENTRE_ID            =>X_COSTCENTRE_ID
      ,X_OWNER                    =>X_OWNER
      ,X_ACCRUAL_METHOD           =>X_ACCRUAL_METHOD
      ,X_ACCRUAL_OPERAND          =>X_ACCRUAL_OPERAND
      ,X_ACCRUAL_RATE             =>X_ACCRUAL_RATE
      ,X_ACCRUAL_BASIS            =>X_ACCRUAL_BASIS
      ,X_HIERARCHY                =>X_HIERARCHY
      ,X_HIERARCHY_LEVEL          =>X_HIERARCHY_LEVEL
      ,X_BUDGET_FLAG              =>X_BUDGET_FLAG
      ,X_EARNED_FLAG              =>X_EARNED_FLAG
      ,X_APPLY_ACCRUAL_ON         =>X_APPLY_ACCRUAL_ON
      ,X_ACCRUAL_PHASE            =>X_ACCRUAL_PHASE
      ,X_ACCRUAL_CAP              =>X_ACCRUAL_CAP
      ,X_ACCRUAL_UOM              =>X_ACCRUAL_UOM
      ,X_OBJECT_VERSION_NUMBER    =>l_version
      ,X_ATTRIBUTE_CATEGORY       =>X_ATTRIBUTE_CATEGORY
      ,X_ATTRIBUTE1               =>X_ATTRIBUTE1
      ,X_ATTRIBUTE2               =>X_ATTRIBUTE2
      ,X_ATTRIBUTE3               =>X_ATTRIBUTE3
      ,X_ATTRIBUTE4               =>X_ATTRIBUTE4
      ,X_ATTRIBUTE5               =>X_ATTRIBUTE5
      ,X_ATTRIBUTE6               =>X_ATTRIBUTE6
      ,X_ATTRIBUTE7               =>X_ATTRIBUTE7
      ,X_ATTRIBUTE8               =>X_ATTRIBUTE8
      ,X_ATTRIBUTE9               =>X_ATTRIBUTE9
      ,X_ATTRIBUTE10              =>X_ATTRIBUTE10
      ,X_ATTRIBUTE11              =>X_ATTRIBUTE11
      ,X_ATTRIBUTE12              =>X_ATTRIBUTE12
      ,X_ATTRIBUTE13              =>X_ATTRIBUTE13
      ,X_ATTRIBUTE14              =>X_ATTRIBUTE14
      ,X_ATTRIBUTE15              =>X_ATTRIBUTE15
      ,X_SHORT_NAME               =>X_SHORT_NAME
      ,X_DESCRIPTION              =>X_DESCRIPTION
      ,X_CREATION_DATE            =>SYSDATE
      ,X_CREATED_BY               =>l_user_id
      ,X_LAST_UPDATE_DATE         =>SYSDATE
      ,X_LAST_UPDATED_BY          =>l_user_id
      ,X_LAST_UPDATE_LOGIN        =>0
      ,X_HIERARCHY_ID             =>X_HIERARCHY_ID
      ,X_PARENT_NODE_ID                =>X_PARENT_NODE_ID
      ,X_NODE_ID                  =>X_NODE_ID
      ,X_ORIGINAL_BUDGET          =>X_ORIGINAL_BUDGET
      ,X_TRANSFERED_IN_AMT        =>X_TRANSFERED_IN_AMT
      ,X_TRANSFERED_OUT_AMT       =>X_TRANSFERED_OUT_AMT
      ,X_HOLDBACK_AMT             =>X_HOLDBACK_AMT
      ,X_PLANNED_AMT              =>X_PLANNED_AMT
      ,X_COMMITTED_AMT            =>X_COMMITTED_AMT
      ,X_EARNED_AMT               =>X_EARNED_AMT
      ,X_PAID_AMT                 =>X_PAID_AMT
      ,X_PLAN_TYPE                =>X_PLAN_TYPE
      ,X_PLAN_ID                  =>X_PLAN_ID
      ,X_LIABLE_ACCNT_SEGMENTS    =>X_LIABLE_ACCNT_SEGMENTS
      ,X_ADJUSTMENT_ACCNT_SEGMENTS =>X_ADJUSTMENT_ACCNT_SEGMENTS
    );
  else
    close c_fund_exists;
    open c_version;
    fetch c_version into l_version;
    close c_version;
    AMS_FUNDS_ALL_PKG.UPDATE_ROW(
       X_FUND_ID                  =>l_fund_id
      ,X_CREATED_FROM             =>X_CREATED_FROM
      ,X_REQUEST_ID               =>X_REQUEST_ID
      ,X_FUND_NUMBER              =>X_FUND_NUMBER
      ,X_PARENT_FUND_ID           =>X_PARENT_FUND_ID
      ,X_CATEGORY_ID              =>X_CATEGORY_ID
      ,X_FUND_TYPE                =>X_FUND_TYPE
      ,X_FUND_USAGE               =>X_FUND_USAGE
      ,X_STATUS_CODE              =>X_STATUS_CODE
      ,X_STATUS_DATE              =>X_STATUS_DATE
      ,X_ACCRUED_LIABLE_ACCOUNT   =>X_ACCRUED_LIABLE_ACCOUNT
      ,X_DED_ADJUSTMENT_ACCOUNT   =>X_DED_ADJUSTMENT_ACCOUNT
      ,X_LIABILITY_FLAG           =>X_LIABILITY_FLAG
      ,X_SET_OF_BOOKS_ID          =>X_SET_OF_BOOKS_ID
      ,X_START_PERIOD_ID          =>X_START_PERIOD_ID
      ,X_END_PERIOD_ID            =>X_END_PERIOD_ID
      ,X_START_DATE_ACTIVE        =>X_START_DATE_ACTIVE
      ,X_END_DATE_ACTIVE          =>X_END_DATE_ACTIVE
      ,X_BUDGET_AMOUNT_TC         =>X_BUDGET_AMOUNT_TC
      ,X_BUDGET_AMOUNT_FC         =>X_BUDGET_AMOUNT_FC
      ,X_AVAILABLE_AMOUNT         =>X_AVAILABLE_AMOUNT
      ,X_DISTRIBUTED_AMOUNT       =>X_DISTRIBUTED_AMOUNT
      ,X_CURRENCY_CODE_TC         =>X_CURRENCY_CODE_TC
      ,X_CURRENCY_CODE_FC         =>X_CURRENCY_CODE_FC
      ,X_EXCHANGE_RATE_TYPE       =>X_EXCHANGE_RATE_TYPE
      ,X_EXCHANGE_RATE_DATE       =>X_EXCHANGE_RATE_DATE
      ,X_EXCHANGE_RATE            =>X_EXCHANGE_RATE
      ,X_DEPARTMENT_ID            =>X_DEPARTMENT_ID
      ,X_COSTCENTRE_ID            =>X_COSTCENTRE_ID
      ,X_OWNER                    =>X_OWNER
      ,X_ACCRUAL_METHOD           =>X_ACCRUAL_METHOD
      ,X_ACCRUAL_OPERAND          =>X_ACCRUAL_OPERAND
      ,X_ACCRUAL_RATE             =>X_ACCRUAL_RATE
      ,X_ACCRUAL_BASIS            =>X_ACCRUAL_BASIS
      ,X_HIERARCHY                =>X_HIERARCHY
      ,X_HIERARCHY_LEVEL          =>X_HIERARCHY_LEVEL
      ,X_BUDGET_FLAG              =>X_BUDGET_FLAG
      ,X_EARNED_FLAG              =>X_EARNED_FLAG
      ,X_APPLY_ACCRUAL_ON         =>X_APPLY_ACCRUAL_ON
      ,X_ACCRUAL_PHASE            =>X_ACCRUAL_PHASE
      ,X_ACCRUAL_CAP              =>X_ACCRUAL_CAP
      ,X_ACCRUAL_UOM              =>X_ACCRUAL_UOM
      ,X_OBJECT_VERSION_NUMBER    =>l_version + 1
      ,X_ATTRIBUTE_CATEGORY       =>X_ATTRIBUTE_CATEGORY
      ,X_ATTRIBUTE1               =>X_ATTRIBUTE1
      ,X_ATTRIBUTE2               =>X_ATTRIBUTE2
      ,X_ATTRIBUTE3               =>X_ATTRIBUTE3
      ,X_ATTRIBUTE4               =>X_ATTRIBUTE4
      ,X_ATTRIBUTE5               =>X_ATTRIBUTE5
      ,X_ATTRIBUTE6               =>X_ATTRIBUTE6
      ,X_ATTRIBUTE7               =>X_ATTRIBUTE7
      ,X_ATTRIBUTE8               =>X_ATTRIBUTE8
      ,X_ATTRIBUTE9               =>X_ATTRIBUTE9
      ,X_ATTRIBUTE10              =>X_ATTRIBUTE10
      ,X_ATTRIBUTE11              =>X_ATTRIBUTE11
      ,X_ATTRIBUTE12              =>X_ATTRIBUTE12
      ,X_ATTRIBUTE13              =>X_ATTRIBUTE13
      ,X_ATTRIBUTE14              =>X_ATTRIBUTE14
      ,X_ATTRIBUTE15              =>X_ATTRIBUTE15
      ,X_SHORT_NAME               =>X_SHORT_NAME
      ,X_DESCRIPTION              =>X_DESCRIPTION
      ,X_LAST_UPDATE_DATE         =>SYSDATE
      ,X_LAST_UPDATED_BY          =>l_user_id
      ,X_LAST_UPDATE_LOGIN        =>0
      ,X_HIERARCHY_ID             =>X_HIERARCHY_ID
      ,X_PARENT_NODE_ID                =>X_PARENT_NODE_ID
      ,X_NODE_ID                  =>X_NODE_ID
      ,X_ORIGINAL_BUDGET          =>X_ORIGINAL_BUDGET
      ,X_TRANSFERED_IN_AMT        =>X_TRANSFERED_IN_AMT
      ,X_TRANSFERED_OUT_AMT       =>X_TRANSFERED_OUT_AMT
      ,X_HOLDBACK_AMT             =>X_HOLDBACK_AMT
      ,X_PLANNED_AMT              =>X_PLANNED_AMT
      ,X_COMMITTED_AMT            =>X_COMMITTED_AMT
      ,X_EARNED_AMT               =>X_EARNED_AMT
      ,X_PAID_AMT                 =>X_PAID_AMT
      ,X_PLAN_TYPE                =>X_PLAN_TYPE
      ,X_PLAN_ID                  =>X_PLAN_ID
      ,X_LIABLE_ACCNT_SEGMENTS    =>X_LIABLE_ACCNT_SEGMENTS
      ,X_ADJUSTMENT_ACCNT_SEGMENTS =>X_ADJUSTMENT_ACCNT_SEGMENTS
    );
  end if;
END LOAD_ROW;


end AMS_FUNDS_ALL_PKG;

/
