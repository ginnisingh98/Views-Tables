--------------------------------------------------------
--  DDL for Package Body AS_INTERNAL_FORECASTS_PKG
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE PACKAGE BODY "APPS"."AS_INTERNAL_FORECASTS_PKG" as
/* $Header: asxtifob.pls 115.7 2004/01/13 10:08:37 gbatra ship $ */
-- Start of Comments
-- Package name     : AS_INTERNAL_FORECASTS_PKG
-- Purpose          :
-- History          :
-- NOTE             :
-- End of Comments


G_PKG_NAME CONSTANT VARCHAR2(30):= 'AS_INTERNAL_FORECASTS_PKG';
G_FILE_NAME CONSTANT VARCHAR2(12) := 'asxtifob.pls';

PROCEDURE Insert_Row(
          px_FORECAST_ID   IN OUT NOCOPY NUMBER,
          p_CREATED_BY    NUMBER,
          p_CREATION_DATE    DATE,
          p_LAST_UPDATED_BY    NUMBER,
          p_LAST_UPDATE_DATE    DATE,
          p_LAST_UPDATE_LOGIN    NUMBER,
          p_REQUEST_ID    NUMBER,
          p_PROGRAM_APPLICATION_ID    NUMBER,
          p_PROGRAM_ID    NUMBER,
          p_PROGRAM_UPDATE_DATE    DATE,
          p_SUBMISSION_DATE    DATE,
          p_PERIOD_NAME    VARCHAR2,
          p_SALESFORCE_ID    NUMBER,
          p_EMPLOYEE_PERSON_ID    NUMBER,
          p_SALES_GROUP_ID    NUMBER,
          p_PARTNER_ADDRESS_ID    NUMBER,
          p_PARTNER_CUSTOMER_ID    NUMBER,
          p_CURRENCY_CODE    VARCHAR2,
          p_WORST_FORECAST_AMOUNT    NUMBER,
          p_FORECAST_AMOUNT    NUMBER,
          p_BEST_FORECAST_AMOUNT    NUMBER,
          p_WEIGHTED_PIPELINE_AMOUNT    NUMBER,
          p_PIPELINE_AMOUNT    NUMBER,
          p_WON_PIPELINE_AMOUNT    NUMBER,
          p_QUOTA_AMOUNT    NUMBER,
          p_ORIGINAL_FORECAST_ID    NUMBER,
          p_STATUS_CODE    VARCHAR2,
          p_WORKSHEET_TYPE    VARCHAR2,
          p_REVENUE_FLAG    VARCHAR2,
          p_ATTRIBUTE_CATEGORY    VARCHAR2,
          p_ATTRIBUTE1    VARCHAR2,
          p_ATTRIBUTE2    VARCHAR2,
          p_ATTRIBUTE3    VARCHAR2,
          p_ATTRIBUTE4    VARCHAR2,
          p_ATTRIBUTE5    VARCHAR2,
          p_ATTRIBUTE6    VARCHAR2,
          p_ATTRIBUTE7    VARCHAR2,
          p_ATTRIBUTE8    VARCHAR2,
          p_ATTRIBUTE9    VARCHAR2,
          p_ATTRIBUTE10    VARCHAR2,
          p_ATTRIBUTE11    VARCHAR2,
          p_ATTRIBUTE12    VARCHAR2,
          p_ATTRIBUTE13    VARCHAR2,
          p_ATTRIBUTE14    VARCHAR2,
          p_ATTRIBUTE15    VARCHAR2,
          p_CREDIT_TYPE_ID    NUMBER,
          p_WORST_FORECAST_AMOUNT_FLAG    VARCHAR2,
          p_FORECAST_AMOUNT_FLAG    VARCHAR2,
          p_BEST_FORECAST_AMOUNT_FLAG    VARCHAR2,
          p_WTD_PIPE_AMOUNT_FLAG    VARCHAR2,
          p_PIPELINE_AMOUNT_FLAG    VARCHAR2,
          p_WON_PIPELINE_AMOUNT_FLAG    VARCHAR2,
          p_QUOTA_AMOUNT_FLAG    VARCHAR2,
          p_START_DATE_ACTIVE    DATE,
          p_END_DATE_ACTIVE    DATE,
          p_ACTIVE_FLAG    VARCHAR2,
          p_FORECAST_CATEGORY_ID    NUMBER)

 IS
   CURSOR C2 IS SELECT AS_INTERNAL_FORECASTS_S.nextval FROM sys.dual;
BEGIN
   If (px_FORECAST_ID IS NULL) OR (px_FORECAST_ID = FND_API.G_MISS_NUM) then
       OPEN C2;
       FETCH C2 INTO px_FORECAST_ID;
       CLOSE C2;
   End If;
   /*Bug# 1503400 requires that original forecast id should be forecast id
   and not null*/


   INSERT INTO AS_INTERNAL_FORECASTS(
           FORECAST_ID,
           CREATED_BY,
           CREATION_DATE,
           LAST_UPDATED_BY,
           LAST_UPDATE_DATE,
           LAST_UPDATE_LOGIN,
           REQUEST_ID,
           PROGRAM_APPLICATION_ID,
           PROGRAM_ID,
           PROGRAM_UPDATE_DATE,
           SUBMISSION_DATE,
           PERIOD_NAME,
           SALESFORCE_ID,
           EMPLOYEE_PERSON_ID,
           SALES_GROUP_ID,
           PARTNER_ADDRESS_ID,
           PARTNER_CUSTOMER_ID,
           CURRENCY_CODE,
           WORST_FORECAST_AMOUNT,
           FORECAST_AMOUNT,
           BEST_FORECAST_AMOUNT,
           WEIGHTED_PIPELINE_AMOUNT,
           PIPELINE_AMOUNT,
           WON_PIPELINE_AMOUNT,
           QUOTA_AMOUNT,
           ORIGINAL_FORECAST_ID,
           STATUS_CODE,
           WORKSHEET_TYPE,
           REVENUE_FLAG,
           ATTRIBUTE_CATEGORY,
           ATTRIBUTE1,
           ATTRIBUTE2,
           ATTRIBUTE3,
           ATTRIBUTE4,
           ATTRIBUTE5,
           ATTRIBUTE6,
           ATTRIBUTE7,
           ATTRIBUTE8,
           ATTRIBUTE9,
           ATTRIBUTE10,
           ATTRIBUTE11,
           ATTRIBUTE12,
           ATTRIBUTE13,
           ATTRIBUTE14,
           ATTRIBUTE15,
           CREDIT_TYPE_ID,
           WORST_FORECAST_AMOUNT_FLAG,
           FORECAST_AMOUNT_FLAG,
           BEST_FORECAST_AMOUNT_FLAG,
           WEIGHTED_PIPELINE_AMOUNT_FLAG,
           PIPELINE_AMOUNT_FLAG,
           WON_PIPELINE_AMOUNT_FLAG,
           QUOTA_AMOUNT_FLAG,
           START_DATE_ACTIVE,
           END_DATE_ACTIVE,
           ACTIVE_FLAG,
           FORECAST_CATEGORY_ID
          ) VALUES (
           px_FORECAST_ID,
           decode( p_CREATED_BY, FND_API.G_MISS_NUM, NULL, p_CREATED_BY),
           decode( p_CREATION_DATE, FND_API.G_MISS_DATE, TO_DATE(NULL), p_CREATION_DATE),
           decode( p_LAST_UPDATED_BY, FND_API.G_MISS_NUM, NULL, p_LAST_UPDATED_BY),
           decode( p_LAST_UPDATE_DATE, FND_API.G_MISS_DATE, TO_DATE(NULL), p_LAST_UPDATE_DATE),
           decode( p_LAST_UPDATE_LOGIN, FND_API.G_MISS_NUM, NULL, p_LAST_UPDATE_LOGIN),
           decode( p_REQUEST_ID, FND_API.G_MISS_NUM, NULL, p_REQUEST_ID),
           decode( p_PROGRAM_APPLICATION_ID, FND_API.G_MISS_NUM, NULL, p_PROGRAM_APPLICATION_ID),
           decode( p_PROGRAM_ID, FND_API.G_MISS_NUM, NULL, p_PROGRAM_ID),
           decode( p_PROGRAM_UPDATE_DATE, FND_API.G_MISS_DATE, TO_DATE(NULL), p_PROGRAM_UPDATE_DATE),
           decode( p_SUBMISSION_DATE, FND_API.G_MISS_DATE, TO_DATE(NULL), p_SUBMISSION_DATE),
           decode( p_PERIOD_NAME, FND_API.G_MISS_CHAR, NULL, p_PERIOD_NAME),
           decode( p_SALESFORCE_ID, FND_API.G_MISS_NUM, NULL, p_SALESFORCE_ID),
           decode( p_EMPLOYEE_PERSON_ID, FND_API.G_MISS_NUM, NULL, p_EMPLOYEE_PERSON_ID),
           decode( p_SALES_GROUP_ID, FND_API.G_MISS_NUM, NULL, p_SALES_GROUP_ID),
           decode( p_PARTNER_ADDRESS_ID, FND_API.G_MISS_NUM, NULL, p_PARTNER_ADDRESS_ID),
           decode( p_PARTNER_CUSTOMER_ID, FND_API.G_MISS_NUM, NULL, p_PARTNER_CUSTOMER_ID),
           decode( p_CURRENCY_CODE, FND_API.G_MISS_CHAR, NULL, p_CURRENCY_CODE),
           decode( p_WORST_FORECAST_AMOUNT, FND_API.G_MISS_NUM, NULL, p_WORST_FORECAST_AMOUNT),
           decode( p_FORECAST_AMOUNT, FND_API.G_MISS_NUM, NULL, p_FORECAST_AMOUNT),
           decode( p_BEST_FORECAST_AMOUNT, FND_API.G_MISS_NUM, NULL, p_BEST_FORECAST_AMOUNT),
           decode( p_WEIGHTED_PIPELINE_AMOUNT, FND_API.G_MISS_NUM, NULL, p_WEIGHTED_PIPELINE_AMOUNT),
           decode( p_PIPELINE_AMOUNT, FND_API.G_MISS_NUM, NULL, p_PIPELINE_AMOUNT),
           decode( p_WON_PIPELINE_AMOUNT, FND_API.G_MISS_NUM, NULL, p_WON_PIPELINE_AMOUNT),
           decode( p_QUOTA_AMOUNT, FND_API.G_MISS_NUM, NULL, p_QUOTA_AMOUNT),
           decode( p_ORIGINAL_FORECAST_ID, FND_API.G_MISS_NUM, px_forecast_id,NULL,px_forecast_id, p_ORIGINAL_FORECAST_ID),
           decode( p_STATUS_CODE, FND_API.G_MISS_CHAR, NULL, p_STATUS_CODE),
           decode( p_WORKSHEET_TYPE, FND_API.G_MISS_CHAR, NULL, p_WORKSHEET_TYPE),
           decode( p_REVENUE_FLAG, FND_API.G_MISS_CHAR, NULL, p_REVENUE_FLAG),
           decode( p_ATTRIBUTE_CATEGORY, FND_API.G_MISS_CHAR, NULL, p_ATTRIBUTE_CATEGORY),
           decode( p_ATTRIBUTE1, FND_API.G_MISS_CHAR, NULL, p_ATTRIBUTE1),
           decode( p_ATTRIBUTE2, FND_API.G_MISS_CHAR, NULL, p_ATTRIBUTE2),
           decode( p_ATTRIBUTE3, FND_API.G_MISS_CHAR, NULL, p_ATTRIBUTE3),
           decode( p_ATTRIBUTE4, FND_API.G_MISS_CHAR, NULL, p_ATTRIBUTE4),
           decode( p_ATTRIBUTE5, FND_API.G_MISS_CHAR, NULL, p_ATTRIBUTE5),
           decode( p_ATTRIBUTE6, FND_API.G_MISS_CHAR, NULL, p_ATTRIBUTE6),
           decode( p_ATTRIBUTE7, FND_API.G_MISS_CHAR, NULL, p_ATTRIBUTE7),
           decode( p_ATTRIBUTE8, FND_API.G_MISS_CHAR, NULL, p_ATTRIBUTE8),
           decode( p_ATTRIBUTE9, FND_API.G_MISS_CHAR, NULL, p_ATTRIBUTE9),
           decode( p_ATTRIBUTE10, FND_API.G_MISS_CHAR, NULL, p_ATTRIBUTE10),
           decode( p_ATTRIBUTE11, FND_API.G_MISS_CHAR, NULL, p_ATTRIBUTE11),
           decode( p_ATTRIBUTE12, FND_API.G_MISS_CHAR, NULL, p_ATTRIBUTE12),
           decode( p_ATTRIBUTE13, FND_API.G_MISS_CHAR, NULL, p_ATTRIBUTE13),
           decode( p_ATTRIBUTE14, FND_API.G_MISS_CHAR, NULL, p_ATTRIBUTE14),
           decode( p_ATTRIBUTE15, FND_API.G_MISS_CHAR, NULL, p_ATTRIBUTE15),
           decode( p_CREDIT_TYPE_ID, FND_API.G_MISS_NUM, NULL, p_CREDIT_TYPE_ID),
           decode( p_WORST_FORECAST_AMOUNT_FLAG, FND_API.G_MISS_CHAR, NULL, p_WORST_FORECAST_AMOUNT_FLAG),
           decode( p_FORECAST_AMOUNT_FLAG, FND_API.G_MISS_CHAR, NULL, p_FORECAST_AMOUNT_FLAG),
           decode( p_BEST_FORECAST_AMOUNT_FLAG, FND_API.G_MISS_CHAR, NULL, p_BEST_FORECAST_AMOUNT_FLAG),
           decode( p_WTD_PIPE_AMOUNT_FLAG, FND_API.G_MISS_CHAR, NULL, p_WTD_PIPE_AMOUNT_FLAG),
           decode( p_PIPELINE_AMOUNT_FLAG, FND_API.G_MISS_CHAR, NULL, p_PIPELINE_AMOUNT_FLAG),
           decode( p_WON_PIPELINE_AMOUNT_FLAG, FND_API.G_MISS_CHAR, NULL, p_WON_PIPELINE_AMOUNT_FLAG),
           decode( p_QUOTA_AMOUNT_FLAG, FND_API.G_MISS_CHAR, NULL, p_QUOTA_AMOUNT_FLAG),
           decode( p_START_DATE_ACTIVE, FND_API.G_MISS_DATE, TO_DATE(NULL), p_START_DATE_ACTIVE),
           decode( p_END_DATE_ACTIVE, FND_API.G_MISS_DATE, TO_DATE(NULL), p_END_DATE_ACTIVE),
           decode( p_ACTIVE_FLAG, FND_API.G_MISS_CHAR, NULL, p_ACTIVE_FLAG),
           decode( p_FORECAST_CATEGORY_ID, FND_API.G_MISS_NUM, NULL, p_FORECAST_CATEGORY_ID));
End Insert_Row;

PROCEDURE Update_Row(
          p_FORECAST_ID    NUMBER,
          p_CREATED_BY    NUMBER,
          p_CREATION_DATE    DATE,
          p_LAST_UPDATED_BY    NUMBER,
          p_LAST_UPDATE_DATE    DATE,
          p_LAST_UPDATE_LOGIN    NUMBER,
          p_REQUEST_ID    NUMBER,
          p_PROGRAM_APPLICATION_ID    NUMBER,
          p_PROGRAM_ID    NUMBER,
          p_PROGRAM_UPDATE_DATE    DATE,
          p_SUBMISSION_DATE    DATE,
          p_PERIOD_NAME    VARCHAR2,
          p_SALESFORCE_ID    NUMBER,
          p_EMPLOYEE_PERSON_ID    NUMBER,
          p_SALES_GROUP_ID    NUMBER,
          p_PARTNER_ADDRESS_ID    NUMBER,
          p_PARTNER_CUSTOMER_ID    NUMBER,
          p_CURRENCY_CODE    VARCHAR2,
          p_WORST_FORECAST_AMOUNT    NUMBER,
          p_FORECAST_AMOUNT    NUMBER,
          p_BEST_FORECAST_AMOUNT    NUMBER,
          p_WEIGHTED_PIPELINE_AMOUNT    NUMBER,
          p_PIPELINE_AMOUNT    NUMBER,
          p_WON_PIPELINE_AMOUNT    NUMBER,
          p_QUOTA_AMOUNT    NUMBER,
          p_ORIGINAL_FORECAST_ID    NUMBER,
          p_STATUS_CODE    VARCHAR2,
          p_WORKSHEET_TYPE    VARCHAR2,
          p_REVENUE_FLAG    VARCHAR2,
          p_ATTRIBUTE_CATEGORY    VARCHAR2,
          p_ATTRIBUTE1    VARCHAR2,
          p_ATTRIBUTE2    VARCHAR2,
          p_ATTRIBUTE3    VARCHAR2,
          p_ATTRIBUTE4    VARCHAR2,
          p_ATTRIBUTE5    VARCHAR2,
          p_ATTRIBUTE6    VARCHAR2,
          p_ATTRIBUTE7    VARCHAR2,
          p_ATTRIBUTE8    VARCHAR2,
          p_ATTRIBUTE9    VARCHAR2,
          p_ATTRIBUTE10    VARCHAR2,
          p_ATTRIBUTE11    VARCHAR2,
          p_ATTRIBUTE12    VARCHAR2,
          p_ATTRIBUTE13    VARCHAR2,
          p_ATTRIBUTE14    VARCHAR2,
          p_ATTRIBUTE15    VARCHAR2,
          p_CREDIT_TYPE_ID    NUMBER,
          p_WORST_FORECAST_AMOUNT_FLAG    VARCHAR2,
          p_FORECAST_AMOUNT_FLAG    VARCHAR2,
          p_BEST_FORECAST_AMOUNT_FLAG    VARCHAR2,
          p_WTD_PIPE_AMOUNT_FLAG    VARCHAR2,
          p_PIPELINE_AMOUNT_FLAG    VARCHAR2,
          p_WON_PIPELINE_AMOUNT_FLAG    VARCHAR2,
          p_QUOTA_AMOUNT_FLAG    VARCHAR2,
          p_START_DATE_ACTIVE    DATE,
          p_END_DATE_ACTIVE    DATE,
          p_ACTIVE_FLAG    VARCHAR2,
          p_FORECAST_CATEGORY_ID    NUMBER)

 IS
 BEGIN
    Update AS_INTERNAL_FORECASTS
    SET object_version_number =  nvl(object_version_number,0) + 1,
              CREATED_BY = decode( p_CREATED_BY, FND_API.G_MISS_NUM, CREATED_BY, p_CREATED_BY),
              CREATION_DATE = decode( p_CREATION_DATE, FND_API.G_MISS_DATE, CREATION_DATE, p_CREATION_DATE),
              LAST_UPDATED_BY = decode( p_LAST_UPDATED_BY, FND_API.G_MISS_NUM, LAST_UPDATED_BY, p_LAST_UPDATED_BY),
              LAST_UPDATE_DATE = decode( p_LAST_UPDATE_DATE, FND_API.G_MISS_DATE, LAST_UPDATE_DATE, p_LAST_UPDATE_DATE),
              LAST_UPDATE_LOGIN = decode( p_LAST_UPDATE_LOGIN, FND_API.G_MISS_NUM, LAST_UPDATE_LOGIN, p_LAST_UPDATE_LOGIN),
              REQUEST_ID = decode( p_REQUEST_ID, FND_API.G_MISS_NUM, REQUEST_ID, p_REQUEST_ID),
              PROGRAM_APPLICATION_ID = decode( p_PROGRAM_APPLICATION_ID, FND_API.G_MISS_NUM, PROGRAM_APPLICATION_ID, p_PROGRAM_APPLICATION_ID),
              PROGRAM_ID = decode( p_PROGRAM_ID, FND_API.G_MISS_NUM, PROGRAM_ID, p_PROGRAM_ID),
              PROGRAM_UPDATE_DATE = decode( p_PROGRAM_UPDATE_DATE, FND_API.G_MISS_DATE, PROGRAM_UPDATE_DATE, p_PROGRAM_UPDATE_DATE),

              SUBMISSION_DATE = decode( p_SUBMISSION_DATE, FND_API.G_MISS_DATE, SUBMISSION_DATE, p_SUBMISSION_DATE),
              PERIOD_NAME = decode( p_PERIOD_NAME, FND_API.G_MISS_CHAR, PERIOD_NAME, p_PERIOD_NAME),
              SALESFORCE_ID = decode( p_SALESFORCE_ID, FND_API.G_MISS_NUM, SALESFORCE_ID, p_SALESFORCE_ID),
              EMPLOYEE_PERSON_ID = decode( p_EMPLOYEE_PERSON_ID, FND_API.G_MISS_NUM, EMPLOYEE_PERSON_ID, p_EMPLOYEE_PERSON_ID),
              SALES_GROUP_ID = decode( p_SALES_GROUP_ID, FND_API.G_MISS_NUM, SALES_GROUP_ID, p_SALES_GROUP_ID),
              PARTNER_ADDRESS_ID = decode( p_PARTNER_ADDRESS_ID, FND_API.G_MISS_NUM, PARTNER_ADDRESS_ID, p_PARTNER_ADDRESS_ID),
              PARTNER_CUSTOMER_ID = decode( p_PARTNER_CUSTOMER_ID, FND_API.G_MISS_NUM, PARTNER_CUSTOMER_ID, p_PARTNER_CUSTOMER_ID),
              CURRENCY_CODE = decode( p_CURRENCY_CODE, FND_API.G_MISS_CHAR, CURRENCY_CODE, p_CURRENCY_CODE),
              WORST_FORECAST_AMOUNT = decode( p_WORST_FORECAST_AMOUNT, FND_API.G_MISS_NUM, WORST_FORECAST_AMOUNT, p_WORST_FORECAST_AMOUNT),
              FORECAST_AMOUNT = decode( p_FORECAST_AMOUNT, FND_API.G_MISS_NUM, FORECAST_AMOUNT, p_FORECAST_AMOUNT),
              BEST_FORECAST_AMOUNT = decode( p_BEST_FORECAST_AMOUNT, FND_API.G_MISS_NUM, BEST_FORECAST_AMOUNT, p_BEST_FORECAST_AMOUNT),
              WEIGHTED_PIPELINE_AMOUNT = decode( p_WEIGHTED_PIPELINE_AMOUNT, FND_API.G_MISS_NUM, WEIGHTED_PIPELINE_AMOUNT, p_WEIGHTED_PIPELINE_AMOUNT),
              PIPELINE_AMOUNT = decode( p_PIPELINE_AMOUNT, FND_API.G_MISS_NUM, PIPELINE_AMOUNT, p_PIPELINE_AMOUNT),
              WON_PIPELINE_AMOUNT = decode( p_WON_PIPELINE_AMOUNT, FND_API.G_MISS_NUM, WON_PIPELINE_AMOUNT, p_WON_PIPELINE_AMOUNT),
              QUOTA_AMOUNT = decode( p_QUOTA_AMOUNT, FND_API.G_MISS_NUM, QUOTA_AMOUNT, p_QUOTA_AMOUNT),
              ORIGINAL_FORECAST_ID = decode( p_ORIGINAL_FORECAST_ID, FND_API.G_MISS_NUM, ORIGINAL_FORECAST_ID, p_ORIGINAL_FORECAST_ID),
              STATUS_CODE = decode( p_STATUS_CODE, FND_API.G_MISS_CHAR, STATUS_CODE, p_STATUS_CODE),
              WORKSHEET_TYPE = decode( p_WORKSHEET_TYPE, FND_API.G_MISS_CHAR, WORKSHEET_TYPE, p_WORKSHEET_TYPE),
              REVENUE_FLAG = decode( p_REVENUE_FLAG, FND_API.G_MISS_CHAR, REVENUE_FLAG, p_REVENUE_FLAG),
              ATTRIBUTE_CATEGORY = decode( p_ATTRIBUTE_CATEGORY, FND_API.G_MISS_CHAR, ATTRIBUTE_CATEGORY, p_ATTRIBUTE_CATEGORY),
              ATTRIBUTE1 = decode( p_ATTRIBUTE1, FND_API.G_MISS_CHAR, ATTRIBUTE1, p_ATTRIBUTE1),
              ATTRIBUTE2 = decode( p_ATTRIBUTE2, FND_API.G_MISS_CHAR, ATTRIBUTE2, p_ATTRIBUTE2),
              ATTRIBUTE3 = decode( p_ATTRIBUTE3, FND_API.G_MISS_CHAR, ATTRIBUTE3, p_ATTRIBUTE3),
              ATTRIBUTE4 = decode( p_ATTRIBUTE4, FND_API.G_MISS_CHAR, ATTRIBUTE4, p_ATTRIBUTE4),
              ATTRIBUTE5 = decode( p_ATTRIBUTE5, FND_API.G_MISS_CHAR, ATTRIBUTE5, p_ATTRIBUTE5),
              ATTRIBUTE6 = decode( p_ATTRIBUTE6, FND_API.G_MISS_CHAR, ATTRIBUTE6, p_ATTRIBUTE6),
              ATTRIBUTE7 = decode( p_ATTRIBUTE7, FND_API.G_MISS_CHAR, ATTRIBUTE7, p_ATTRIBUTE7),
              ATTRIBUTE8 = decode( p_ATTRIBUTE8, FND_API.G_MISS_CHAR, ATTRIBUTE8, p_ATTRIBUTE8),
              ATTRIBUTE9 = decode( p_ATTRIBUTE9, FND_API.G_MISS_CHAR, ATTRIBUTE9, p_ATTRIBUTE9),
              ATTRIBUTE10 = decode( p_ATTRIBUTE10, FND_API.G_MISS_CHAR, ATTRIBUTE10, p_ATTRIBUTE10),
              ATTRIBUTE11 = decode( p_ATTRIBUTE11, FND_API.G_MISS_CHAR, ATTRIBUTE11, p_ATTRIBUTE11),
              ATTRIBUTE12 = decode( p_ATTRIBUTE12, FND_API.G_MISS_CHAR, ATTRIBUTE12, p_ATTRIBUTE12),
              ATTRIBUTE13 = decode( p_ATTRIBUTE13, FND_API.G_MISS_CHAR, ATTRIBUTE13, p_ATTRIBUTE13),
              ATTRIBUTE14 = decode( p_ATTRIBUTE14, FND_API.G_MISS_CHAR, ATTRIBUTE14, p_ATTRIBUTE14),
              ATTRIBUTE15 = decode( p_ATTRIBUTE15, FND_API.G_MISS_CHAR, ATTRIBUTE15, p_ATTRIBUTE15),
              CREDIT_TYPE_ID = decode( p_CREDIT_TYPE_ID, FND_API.G_MISS_NUM, CREDIT_TYPE_ID, p_CREDIT_TYPE_ID),
              WORST_FORECAST_AMOUNT_FLAG = decode( p_WORST_FORECAST_AMOUNT_FLAG, FND_API.G_MISS_CHAR, WORST_FORECAST_AMOUNT_FLAG, p_WORST_FORECAST_AMOUNT_FLAG),
              FORECAST_AMOUNT_FLAG = decode( p_FORECAST_AMOUNT_FLAG, FND_API.G_MISS_CHAR, FORECAST_AMOUNT_FLAG, p_FORECAST_AMOUNT_FLAG),
              BEST_FORECAST_AMOUNT_FLAG = decode( p_BEST_FORECAST_AMOUNT_FLAG, FND_API.G_MISS_CHAR, BEST_FORECAST_AMOUNT_FLAG, p_BEST_FORECAST_AMOUNT_FLAG),
              WEIGHTED_PIPELINE_AMOUNT_FLAG = decode( p_WTD_PIPE_AMOUNT_FLAG, FND_API.G_MISS_CHAR, WEIGHTED_PIPELINE_AMOUNT_FLAG, p_WTD_PIPE_AMOUNT_FLAG),
              PIPELINE_AMOUNT_FLAG = decode( p_PIPELINE_AMOUNT_FLAG, FND_API.G_MISS_CHAR, PIPELINE_AMOUNT_FLAG, p_PIPELINE_AMOUNT_FLAG),
              WON_PIPELINE_AMOUNT_FLAG = decode( p_WON_PIPELINE_AMOUNT_FLAG, FND_API.G_MISS_CHAR, WON_PIPELINE_AMOUNT_FLAG, p_WON_PIPELINE_AMOUNT_FLAG),
              QUOTA_AMOUNT_FLAG = decode( p_QUOTA_AMOUNT_FLAG, FND_API.G_MISS_CHAR, QUOTA_AMOUNT_FLAG, p_QUOTA_AMOUNT_FLAG),
              START_DATE_ACTIVE = decode( p_START_DATE_ACTIVE, FND_API.G_MISS_DATE, START_DATE_ACTIVE, p_START_DATE_ACTIVE),
              END_DATE_ACTIVE = decode( p_END_DATE_ACTIVE, FND_API.G_MISS_DATE, END_DATE_ACTIVE, p_END_DATE_ACTIVE),
              ACTIVE_FLAG = decode( p_ACTIVE_FLAG, FND_API.G_MISS_CHAR, ACTIVE_FLAG, p_ACTIVE_FLAG),
              FORECAST_CATEGORY_ID = decode( p_FORECAST_CATEGORY_ID, FND_API.G_MISS_NUM, FORECAST_CATEGORY_ID, p_FORECAST_CATEGORY_ID)

              /*
              CREATED_BY = decode( p_CREATED_BY, NULL,CREATED_BY, FND_API.G_MISS_NUM, NULL, p_CREATED_BY),
              CREATION_DATE = decode( p_CREATION_DATE, NULL, CREATION_DATE,FND_API.G_MISS_DATE,NULL, p_CREATION_DATE),
              LAST_UPDATED_BY = decode( p_LAST_UPDATED_BY, NULL, LAST_UPDATED_BY, FND_API.G_MISS_NUM, NULL,p_LAST_UPDATED_BY),
              LAST_UPDATE_DATE = decode( p_LAST_UPDATE_DATE, NULL, LAST_UPDATE_DATE,FND_API.G_MISS_DATE,NULL,  p_LAST_UPDATE_DATE),
              LAST_UPDATE_LOGIN = decode( p_LAST_UPDATE_LOGIN, NULL, LAST_UPDATE_LOGIN,FND_API.G_MISS_NUM,NULL,  p_LAST_UPDATE_LOGIN),
              REQUEST_ID = decode( p_REQUEST_ID, NULL,REQUEST_ID, FND_API.G_MISS_NUM,NULL,  p_REQUEST_ID),
              PROGRAM_APPLICATION_ID = decode( p_PROGRAM_APPLICATION_ID, NULL,PROGRAM_APPLICATION_ID, FND_API.G_MISS_NUM,NULL,p_PROGRAM_APPLICATION_ID),
              PROGRAM_ID = decode( p_PROGRAM_ID, NULL, PROGRAM_ID, FND_API.G_MISS_NUM, NULL, p_PROGRAM_ID),
              PROGRAM_UPDATE_DATE = decode( p_PROGRAM_UPDATE_DATE, NULL, PROGRAM_UPDATE_DATE, FND_API.G_MISS_DATE,NULL, p_PROGRAM_UPDATE_DATE),
              CURRENCY_CODE = decode( p_CURRENCY_CODE, NULL, CURRENCY_CODE,FND_API.G_MISS_CHAR,NULL,  p_CURRENCY_CODE),
              START_DATE_ACTIVE = decode( p_START_DATE_ACTIVE, NULL,START_DATE_ACTIVE, FND_API.G_MISS_DATE, NULL, p_START_DATE_ACTIVE),
              END_DATE_ACTIVE = decode( p_END_DATE_ACTIVE, NULL, END_DATE_ACTIVE, FND_API.G_MISS_DATE, NULL, p_END_DATE_ACTIVE),
              STATUS_CODE = decode( p_STATUS_CODE, NULL,  STATUS_CODE, FND_API.G_MISS_CHAR,NULL, p_STATUS_CODE),

              SUBMISSION_DATE = decode( p_SUBMISSION_DATE, NULL, SUBMISSION_DATE,FND_API.G_MISS_DATE,NULL, p_SUBMISSION_DATE),
              --PARTNER_ADDRESS_ID = decode( p_PARTNER_ADDRESS_ID, FND_API.G_MISS_NUM, PARTNER_ADDRESS_ID, p_PARTNER_ADDRESS_ID),
              --PARTNER_CUSTOMER_ID = decode( p_PARTNER_CUSTOMER_ID, FND_API.G_MISS_NUM, PARTNER_CUSTOMER_ID, p_PARTNER_CUSTOMER_ID),
              WEIGHTED_PIPELINE_AMOUNT = decode( p_WEIGHTED_PIPELINE_AMOUNT, NULL, WEIGHTED_PIPELINE_AMOUNT, FND_API.G_MISS_NUM,NULL, p_WEIGHTED_PIPELINE_AMOUNT),
              PIPELINE_AMOUNT = decode( p_PIPELINE_AMOUNT, NULL, PIPELINE_AMOUNT, FND_API.G_MISS_NUM,NULL, p_PIPELINE_AMOUNT),
              WON_PIPELINE_AMOUNT = decode( p_WON_PIPELINE_AMOUNT, NULL, WON_PIPELINE_AMOUNT,FND_API.G_MISS_NUM, NULL, p_WON_PIPELINE_AMOUNT),
              QUOTA_AMOUNT = decode( p_QUOTA_AMOUNT, NULL, QUOTA_AMOUNT,FND_API.G_MISS_NUM, NULL, p_QUOTA_AMOUNT),
              ORIGINAL_FORECAST_ID = decode( p_ORIGINAL_FORECAST_ID, NULL, ORIGINAL_FORECAST_ID,FND_API.G_MISS_NUM,nULL,  p_ORIGINAL_FORECAST_ID),
              --WORKSHEET_TYPE = decode( p_WORKSHEET_TYPE, FND_API.G_MISS_CHAR, WORKSHEET_TYPE, p_WORKSHEET_TYPE),
              --REVENUE_FLAG = decode( p_REVENUE_FLAG, FND_API.G_MISS_CHAR, REVENUE_FLAG, p_REVENUE_FLAG),
              WEIGHTED_PIPELINE_AMOUNT_FLAG = decode( p_WTD_PIPE_AMOUNT_FLAG, NULL, WEIGHTED_PIPELINE_AMOUNT_FLAG,FND_API.G_MISS_CHAR,NULL,  p_WTD_PIPE_AMOUNT_FLAG),
              PIPELINE_AMOUNT_FLAG = decode( p_PIPELINE_AMOUNT_FLAG, NULL, PIPELINE_AMOUNT_FLAG,FND_API.G_MISS_CHAR,NULL,  p_PIPELINE_AMOUNT_FLAG),
              WON_PIPELINE_AMOUNT_FLAG = decode( p_WON_PIPELINE_AMOUNT_FLAG, NULL, WON_PIPELINE_AMOUNT_FLAG,FND_API.G_MISS_CHAR,NULL,  p_WON_PIPELINE_AMOUNT_FLAG),
              --QUOTA_AMOUNT_FLAG = decode( p_QUOTA_AMOUNT_FLAG, FND_API.G_MISS_CHAR, QUOTA_AMOUNT_FLAG, p_QUOTA_AMOUNT_FLAG),
              --ACTIVE_FLAG = decode( p_ACTIVE_FLAG, FND_API.G_MISS_CHAR, ACTIVE_FLAG, p_ACTIVE_FLAG),

              ATTRIBUTE_CATEGORY = decode( p_ATTRIBUTE_CATEGORY, NULL,ATTRIBUTE_CATEGORY, FND_API.G_MISS_CHAR, NULL, p_ATTRIBUTE_CATEGORY),
              ATTRIBUTE1 = decode( p_ATTRIBUTE1, NULL, ATTRIBUTE1,FND_API.G_MISS_CHAR,NULL,  p_ATTRIBUTE1),
              ATTRIBUTE2 = decode( p_ATTRIBUTE2, NULL, ATTRIBUTE2,FND_API.G_MISS_CHAR,nULL,  p_ATTRIBUTE2),
              ATTRIBUTE3 = decode( p_ATTRIBUTE3, NULL, ATTRIBUTE3,FND_API.G_MISS_CHAR,NULL,  p_ATTRIBUTE3),
              ATTRIBUTE4 = decode( p_ATTRIBUTE4, NULL, ATTRIBUTE4,FND_API.G_MISS_CHAR,NULL,  p_ATTRIBUTE4),
              ATTRIBUTE5 = decode( p_ATTRIBUTE5, NULL, ATTRIBUTE5,FND_API.G_MISS_CHAR,NULL,  p_ATTRIBUTE5),
              ATTRIBUTE6 = decode( p_ATTRIBUTE6, NULL, ATTRIBUTE6,FND_API.G_MISS_CHAR,NULL,  p_ATTRIBUTE6),
              ATTRIBUTE7 = decode( p_ATTRIBUTE7, NULL, ATTRIBUTE7,FND_API.G_MISS_CHAR,NULL,  p_ATTRIBUTE7),
              ATTRIBUTE8 = decode( p_ATTRIBUTE8, NULL, ATTRIBUTE8,FND_API.G_MISS_CHAR,NULL, p_ATTRIBUTE8),
              ATTRIBUTE9 = decode( p_ATTRIBUTE9, NULL, ATTRIBUTE9,FND_API.G_MISS_CHAR,NULL, p_ATTRIBUTE9),
              ATTRIBUTE10 = decode( p_ATTRIBUTE10, NULL,  ATTRIBUTE10,FND_API.G_MISS_CHAR, NULL, p_ATTRIBUTE10),
              ATTRIBUTE11 = decode( p_ATTRIBUTE11, NULL, ATTRIBUTE11,FND_API.G_MISS_CHAR,NULL,  p_ATTRIBUTE11),
              ATTRIBUTE12 = decode( p_ATTRIBUTE12, NULL, ATTRIBUTE12,FND_API.G_MISS_CHAR,NULL,  p_ATTRIBUTE12),
              ATTRIBUTE13 = decode( p_ATTRIBUTE13, NULL, ATTRIBUTE13,FND_API.G_MISS_CHAR,NULL,  p_ATTRIBUTE13),
              ATTRIBUTE14 = decode( p_ATTRIBUTE14, NULL, ATTRIBUTE14,FND_API.G_MISS_CHAR,NULL,  p_ATTRIBUTE14),
              ATTRIBUTE15 = decode( p_ATTRIBUTE15, NULL, ATTRIBUTE15, FND_API.G_MISS_CHAR,NULL,  p_ATTRIBUTE15),

              SALESFORCE_ID = decode( p_SALESFORCE_ID, NULL, SALESFORCE_ID,FND_API.G_MISS_NUM,NULL,  p_SALESFORCE_ID),
              SALES_GROUP_ID = decode( p_SALES_GROUP_ID, NULL, SALES_GROUP_ID,FND_API.G_MISS_NUM,NULL,  p_SALES_GROUP_ID),
              EMPLOYEE_PERSON_ID = decode( p_EMPLOYEE_PERSON_ID, NULL, EMPLOYEE_PERSON_ID,FND_API.G_MISS_NUM, NULL, p_EMPLOYEE_PERSON_ID),
              PERIOD_NAME = decode( p_PERIOD_NAME, NULL, PERIOD_NAME,FND_API.G_MISS_CHAR,NULL,  p_PERIOD_NAME),
              CREDIT_TYPE_ID = decode( p_CREDIT_TYPE_ID, NULL, CREDIT_TYPE_ID,FND_API.G_MISS_NUM, NULL, p_CREDIT_TYPE_ID),
              WORST_FORECAST_AMOUNT_FLAG = decode( p_WORST_FORECAST_AMOUNT_FLAG, NULL,WORST_FORECAST_AMOUNT_FLAG, FND_API.G_MISS_CHAR, NULL, p_WORST_FORECAST_AMOUNT_FLAG),
              WORST_FORECAST_AMOUNT = decode( p_WORST_FORECAST_AMOUNT, NULL, WORST_FORECAST_AMOUNT,FND_API.G_MISS_NUM,NULL,  p_WORST_FORECAST_AMOUNT),
              FORECAST_AMOUNT_FLAG = decode( p_FORECAST_AMOUNT_FLAG, FND_API.G_MISS_CHAR, FORECAST_AMOUNT_FLAG, p_FORECAST_AMOUNT_FLAG),
              FORECAST_AMOUNT = decode( p_FORECAST_AMOUNT, NULL,FORECAST_AMOUNT, FND_API.G_MISS_NUM, NULL, p_FORECAST_AMOUNT),
              BEST_FORECAST_AMOUNT_FLAG = decode( p_BEST_FORECAST_AMOUNT_FLAG, NULL, BEST_FORECAST_AMOUNT_FLAG,FND_API.G_MISS_CHAR,NULL,  p_BEST_FORECAST_AMOUNT_FLAG),
              BEST_FORECAST_AMOUNT = decode( p_BEST_FORECAST_AMOUNT, NULL, BEST_FORECAST_AMOUNT,FND_API.G_MISS_NUM, NULL, p_BEST_FORECAST_AMOUNT),
              FORECAST_ID = decode( p_FORECAST_ID, NULL, FORECAST_ID,FND_API.G_MISS_NUM,NULL,  p_FORECAST_ID),
              FORECAST_CATEGORY_ID = decode( p_FORECAST_CATEGORY_ID, NULL,FORECAST_CATEGORY_ID, FND_API.G_MISS_NUM, NULL, p_FORECAST_CATEGORY_ID)
            */

   where FORECAST_ID = p_FORECAST_ID;

    If (SQL%NOTFOUND) then
        RAISE NO_DATA_FOUND;
    End If;
END Update_Row;

PROCEDURE Delete_Row(
    p_FORECAST_ID  NUMBER)
 IS
 BEGIN
   DELETE FROM AS_INTERNAL_FORECASTS
    WHERE FORECAST_ID = p_FORECAST_ID;
   If (SQL%NOTFOUND) then
       RAISE NO_DATA_FOUND;
   End If;
 END Delete_Row;

PROCEDURE Lock_Row(
          p_FORECAST_ID    NUMBER,
          p_CREATED_BY    NUMBER,
          p_CREATION_DATE    DATE,
          p_LAST_UPDATED_BY    NUMBER,
          p_LAST_UPDATE_DATE    DATE,
          p_LAST_UPDATE_LOGIN    NUMBER,
          p_REQUEST_ID    NUMBER,
          p_PROGRAM_APPLICATION_ID    NUMBER,
          p_PROGRAM_ID    NUMBER,
          p_PROGRAM_UPDATE_DATE    DATE,
          p_SUBMISSION_DATE    DATE,
          p_PERIOD_NAME    VARCHAR2,
          p_SALESFORCE_ID    NUMBER,
          p_EMPLOYEE_PERSON_ID    NUMBER,
          p_SALES_GROUP_ID    NUMBER,
          p_PARTNER_ADDRESS_ID    NUMBER,
          p_PARTNER_CUSTOMER_ID    NUMBER,
          p_CURRENCY_CODE    VARCHAR2,
          p_WORST_FORECAST_AMOUNT    NUMBER,
          p_FORECAST_AMOUNT    NUMBER,
          p_BEST_FORECAST_AMOUNT    NUMBER,
          p_WEIGHTED_PIPELINE_AMOUNT    NUMBER,
          p_PIPELINE_AMOUNT    NUMBER,
          p_WON_PIPELINE_AMOUNT    NUMBER,
          p_QUOTA_AMOUNT    NUMBER,
          p_ORIGINAL_FORECAST_ID    NUMBER,
          p_STATUS_CODE    VARCHAR2,
          p_WORKSHEET_TYPE    VARCHAR2,
          p_REVENUE_FLAG    VARCHAR2,
          p_ATTRIBUTE_CATEGORY    VARCHAR2,
          p_ATTRIBUTE1    VARCHAR2,
          p_ATTRIBUTE2    VARCHAR2,
          p_ATTRIBUTE3    VARCHAR2,
          p_ATTRIBUTE4    VARCHAR2,
          p_ATTRIBUTE5    VARCHAR2,
          p_ATTRIBUTE6    VARCHAR2,
          p_ATTRIBUTE7    VARCHAR2,
          p_ATTRIBUTE8    VARCHAR2,
          p_ATTRIBUTE9    VARCHAR2,
          p_ATTRIBUTE10    VARCHAR2,
          p_ATTRIBUTE11    VARCHAR2,
          p_ATTRIBUTE12    VARCHAR2,
          p_ATTRIBUTE13    VARCHAR2,
          p_ATTRIBUTE14    VARCHAR2,
          p_ATTRIBUTE15    VARCHAR2,
          p_CREDIT_TYPE_ID    NUMBER,
          p_WORST_FORECAST_AMOUNT_FLAG    VARCHAR2,
          p_FORECAST_AMOUNT_FLAG    VARCHAR2,
          p_BEST_FORECAST_AMOUNT_FLAG    VARCHAR2,
          p_WTD_PIPE_AMOUNT_FLAG    VARCHAR2,
          p_PIPELINE_AMOUNT_FLAG    VARCHAR2,
          p_WON_PIPELINE_AMOUNT_FLAG    VARCHAR2,
          p_QUOTA_AMOUNT_FLAG    VARCHAR2,
          p_START_DATE_ACTIVE    DATE,
          p_END_DATE_ACTIVE    DATE,
          p_ACTIVE_FLAG    VARCHAR2,
          p_FORECAST_CATEGORY_ID    NUMBER)

 IS
   CURSOR C IS
        SELECT *
         FROM AS_INTERNAL_FORECASTS
        WHERE FORECAST_ID =  p_FORECAST_ID
        FOR UPDATE of FORECAST_ID NOWAIT;
   Recinfo C%ROWTYPE;
 BEGIN
    OPEN C;
    FETCH C INTO Recinfo;
    If (C%NOTFOUND) then
        CLOSE C;
        FND_MESSAGE.SET_NAME('FND', 'FORM_RECORD_DELETED');
        APP_EXCEPTION.RAISE_EXCEPTION;
    End If;
    CLOSE C;
    if (
           (      Recinfo.FORECAST_ID = p_FORECAST_ID)
       AND (    ( Recinfo.CREATED_BY = p_CREATED_BY)
            OR (    ( Recinfo.CREATED_BY IS NULL )
                AND (  p_CREATED_BY IS NULL )))
       AND (    ( Recinfo.CREATION_DATE = p_CREATION_DATE)
            OR (    ( Recinfo.CREATION_DATE IS NULL )
                AND (  p_CREATION_DATE IS NULL )))
       AND (    ( Recinfo.LAST_UPDATED_BY = p_LAST_UPDATED_BY)
            OR (    ( Recinfo.LAST_UPDATED_BY IS NULL )
                AND (  p_LAST_UPDATED_BY IS NULL )))
       AND (    ( Recinfo.LAST_UPDATE_DATE = p_LAST_UPDATE_DATE)
            OR (    ( Recinfo.LAST_UPDATE_DATE IS NULL )
                AND (  p_LAST_UPDATE_DATE IS NULL )))
       AND (    ( Recinfo.LAST_UPDATE_LOGIN = p_LAST_UPDATE_LOGIN)
            OR (    ( Recinfo.LAST_UPDATE_LOGIN IS NULL )
                AND (  p_LAST_UPDATE_LOGIN IS NULL )))
       AND (    ( Recinfo.REQUEST_ID = p_REQUEST_ID)
            OR (    ( Recinfo.REQUEST_ID IS NULL )
                AND (  p_REQUEST_ID IS NULL )))
       AND (    ( Recinfo.PROGRAM_APPLICATION_ID = p_PROGRAM_APPLICATION_ID)
            OR (    ( Recinfo.PROGRAM_APPLICATION_ID IS NULL )
                AND (  p_PROGRAM_APPLICATION_ID IS NULL )))
       AND (    ( Recinfo.PROGRAM_ID = p_PROGRAM_ID)
            OR (    ( Recinfo.PROGRAM_ID IS NULL )
                AND (  p_PROGRAM_ID IS NULL )))
       AND (    ( Recinfo.PROGRAM_UPDATE_DATE = p_PROGRAM_UPDATE_DATE)
            OR (    ( Recinfo.PROGRAM_UPDATE_DATE IS NULL )
                AND (  p_PROGRAM_UPDATE_DATE IS NULL )))
       AND (    ( Recinfo.SUBMISSION_DATE = p_SUBMISSION_DATE)
            OR (    ( Recinfo.SUBMISSION_DATE IS NULL )
                AND (  p_SUBMISSION_DATE IS NULL )))
       AND (    ( Recinfo.PERIOD_NAME = p_PERIOD_NAME)
            OR (    ( Recinfo.PERIOD_NAME IS NULL )
                AND (  p_PERIOD_NAME IS NULL )))
       AND (    ( Recinfo.SALESFORCE_ID = p_SALESFORCE_ID)
            OR (    ( Recinfo.SALESFORCE_ID IS NULL )
                AND (  p_SALESFORCE_ID IS NULL )))
       AND (    ( Recinfo.EMPLOYEE_PERSON_ID = p_EMPLOYEE_PERSON_ID)
            OR (    ( Recinfo.EMPLOYEE_PERSON_ID IS NULL )
                AND (  p_EMPLOYEE_PERSON_ID IS NULL )))
       AND (    ( Recinfo.SALES_GROUP_ID = p_SALES_GROUP_ID)
            OR (    ( Recinfo.SALES_GROUP_ID IS NULL )
                AND (  p_SALES_GROUP_ID IS NULL )))
       AND (    ( Recinfo.PARTNER_ADDRESS_ID = p_PARTNER_ADDRESS_ID)
            OR (    ( Recinfo.PARTNER_ADDRESS_ID IS NULL )
                AND (  p_PARTNER_ADDRESS_ID IS NULL )))
       AND (    ( Recinfo.PARTNER_CUSTOMER_ID = p_PARTNER_CUSTOMER_ID)
            OR (    ( Recinfo.PARTNER_CUSTOMER_ID IS NULL )
                AND (  p_PARTNER_CUSTOMER_ID IS NULL )))
       AND (    ( Recinfo.CURRENCY_CODE = p_CURRENCY_CODE)
            OR (    ( Recinfo.CURRENCY_CODE IS NULL )
                AND (  p_CURRENCY_CODE IS NULL )))
       AND (    ( Recinfo.WORST_FORECAST_AMOUNT = p_WORST_FORECAST_AMOUNT)
            OR (    ( Recinfo.WORST_FORECAST_AMOUNT IS NULL )
                AND (  p_WORST_FORECAST_AMOUNT IS NULL )))
       AND (    ( Recinfo.FORECAST_AMOUNT = p_FORECAST_AMOUNT)
            OR (    ( Recinfo.FORECAST_AMOUNT IS NULL )
                AND (  p_FORECAST_AMOUNT IS NULL )))
       AND (    ( Recinfo.BEST_FORECAST_AMOUNT = p_BEST_FORECAST_AMOUNT)
            OR (    ( Recinfo.BEST_FORECAST_AMOUNT IS NULL )
                AND (  p_BEST_FORECAST_AMOUNT IS NULL )))
       AND (    ( Recinfo.WEIGHTED_PIPELINE_AMOUNT = p_WEIGHTED_PIPELINE_AMOUNT)
            OR (    ( Recinfo.WEIGHTED_PIPELINE_AMOUNT IS NULL )
                AND (  p_WEIGHTED_PIPELINE_AMOUNT IS NULL )))
       AND (    ( Recinfo.PIPELINE_AMOUNT = p_PIPELINE_AMOUNT)
            OR (    ( Recinfo.PIPELINE_AMOUNT IS NULL )
                AND (  p_PIPELINE_AMOUNT IS NULL )))
       AND (    ( Recinfo.WON_PIPELINE_AMOUNT = p_WON_PIPELINE_AMOUNT)
            OR (    ( Recinfo.WON_PIPELINE_AMOUNT IS NULL )
                AND (  p_WON_PIPELINE_AMOUNT IS NULL )))
       AND (    ( Recinfo.QUOTA_AMOUNT = p_QUOTA_AMOUNT)
            OR (    ( Recinfo.QUOTA_AMOUNT IS NULL )
                AND (  p_QUOTA_AMOUNT IS NULL )))
       AND (    ( Recinfo.ORIGINAL_FORECAST_ID = p_ORIGINAL_FORECAST_ID)
            OR (    ( Recinfo.ORIGINAL_FORECAST_ID IS NULL )
                AND (  p_ORIGINAL_FORECAST_ID IS NULL )))
       AND (    ( Recinfo.STATUS_CODE = p_STATUS_CODE)
            OR (    ( Recinfo.STATUS_CODE IS NULL )
                AND (  p_STATUS_CODE IS NULL )))
       AND (    ( Recinfo.WORKSHEET_TYPE = p_WORKSHEET_TYPE)
            OR (    ( Recinfo.WORKSHEET_TYPE IS NULL )
                AND (  p_WORKSHEET_TYPE IS NULL )))
       AND (    ( Recinfo.REVENUE_FLAG = p_REVENUE_FLAG)
            OR (    ( Recinfo.REVENUE_FLAG IS NULL )
                AND (  p_REVENUE_FLAG IS NULL )))
       AND (    ( Recinfo.ATTRIBUTE_CATEGORY = p_ATTRIBUTE_CATEGORY)
            OR (    ( Recinfo.ATTRIBUTE_CATEGORY IS NULL )
                AND (  p_ATTRIBUTE_CATEGORY IS NULL )))
       AND (    ( Recinfo.ATTRIBUTE1 = p_ATTRIBUTE1)
            OR (    ( Recinfo.ATTRIBUTE1 IS NULL )
                AND (  p_ATTRIBUTE1 IS NULL )))
       AND (    ( Recinfo.ATTRIBUTE2 = p_ATTRIBUTE2)
            OR (    ( Recinfo.ATTRIBUTE2 IS NULL )
                AND (  p_ATTRIBUTE2 IS NULL )))
       AND (    ( Recinfo.ATTRIBUTE3 = p_ATTRIBUTE3)
            OR (    ( Recinfo.ATTRIBUTE3 IS NULL )
                AND (  p_ATTRIBUTE3 IS NULL )))
       AND (    ( Recinfo.ATTRIBUTE4 = p_ATTRIBUTE4)
            OR (    ( Recinfo.ATTRIBUTE4 IS NULL )
                AND (  p_ATTRIBUTE4 IS NULL )))
       AND (    ( Recinfo.ATTRIBUTE5 = p_ATTRIBUTE5)
            OR (    ( Recinfo.ATTRIBUTE5 IS NULL )
                AND (  p_ATTRIBUTE5 IS NULL )))
       AND (    ( Recinfo.ATTRIBUTE6 = p_ATTRIBUTE6)
            OR (    ( Recinfo.ATTRIBUTE6 IS NULL )
                AND (  p_ATTRIBUTE6 IS NULL )))
       AND (    ( Recinfo.ATTRIBUTE7 = p_ATTRIBUTE7)
            OR (    ( Recinfo.ATTRIBUTE7 IS NULL )
                AND (  p_ATTRIBUTE7 IS NULL )))
       AND (    ( Recinfo.ATTRIBUTE8 = p_ATTRIBUTE8)
            OR (    ( Recinfo.ATTRIBUTE8 IS NULL )
                AND (  p_ATTRIBUTE8 IS NULL )))
       AND (    ( Recinfo.ATTRIBUTE9 = p_ATTRIBUTE9)
            OR (    ( Recinfo.ATTRIBUTE9 IS NULL )
                AND (  p_ATTRIBUTE9 IS NULL )))
       AND (    ( Recinfo.ATTRIBUTE10 = p_ATTRIBUTE10)
            OR (    ( Recinfo.ATTRIBUTE10 IS NULL )
                AND (  p_ATTRIBUTE10 IS NULL )))
       AND (    ( Recinfo.ATTRIBUTE11 = p_ATTRIBUTE11)
            OR (    ( Recinfo.ATTRIBUTE11 IS NULL )
                AND (  p_ATTRIBUTE11 IS NULL )))
       AND (    ( Recinfo.ATTRIBUTE12 = p_ATTRIBUTE12)
            OR (    ( Recinfo.ATTRIBUTE12 IS NULL )
                AND (  p_ATTRIBUTE12 IS NULL )))
       AND (    ( Recinfo.ATTRIBUTE13 = p_ATTRIBUTE13)
            OR (    ( Recinfo.ATTRIBUTE13 IS NULL )
                AND (  p_ATTRIBUTE13 IS NULL )))
       AND (    ( Recinfo.ATTRIBUTE14 = p_ATTRIBUTE14)
            OR (    ( Recinfo.ATTRIBUTE14 IS NULL )
                AND (  p_ATTRIBUTE14 IS NULL )))
       AND (    ( Recinfo.ATTRIBUTE15 = p_ATTRIBUTE15)
            OR (    ( Recinfo.ATTRIBUTE15 IS NULL )
                AND (  p_ATTRIBUTE15 IS NULL )))
       AND (    ( Recinfo.CREDIT_TYPE_ID = p_CREDIT_TYPE_ID)
            OR (    ( Recinfo.CREDIT_TYPE_ID IS NULL )
                AND (  p_CREDIT_TYPE_ID IS NULL )))
       AND (    ( Recinfo.WORST_FORECAST_AMOUNT_FLAG = p_WORST_FORECAST_AMOUNT_FLAG)
            OR (    ( Recinfo.WORST_FORECAST_AMOUNT_FLAG IS NULL )
                AND (  p_WORST_FORECAST_AMOUNT_FLAG IS NULL )))
       AND (    ( Recinfo.FORECAST_AMOUNT_FLAG = p_FORECAST_AMOUNT_FLAG)
            OR (    ( Recinfo.FORECAST_AMOUNT_FLAG IS NULL )
                AND (  p_FORECAST_AMOUNT_FLAG IS NULL )))
       AND (    ( Recinfo.BEST_FORECAST_AMOUNT_FLAG = p_BEST_FORECAST_AMOUNT_FLAG)
            OR (    ( Recinfo.BEST_FORECAST_AMOUNT_FLAG IS NULL )
                AND (  p_BEST_FORECAST_AMOUNT_FLAG IS NULL )))
       AND (    ( Recinfo.WEIGHTED_PIPELINE_AMOUNT_FLAG = p_WTD_PIPE_AMOUNT_FLAG)
            OR (    ( Recinfo.WEIGHTED_PIPELINE_AMOUNT_FLAG IS NULL )
                AND (  p_WTD_PIPE_AMOUNT_FLAG IS NULL )))
       AND (    ( Recinfo.PIPELINE_AMOUNT_FLAG = p_PIPELINE_AMOUNT_FLAG)
            OR (    ( Recinfo.PIPELINE_AMOUNT_FLAG IS NULL )
                AND (  p_PIPELINE_AMOUNT_FLAG IS NULL )))
       AND (    ( Recinfo.WON_PIPELINE_AMOUNT_FLAG = p_WON_PIPELINE_AMOUNT_FLAG)
            OR (    ( Recinfo.WON_PIPELINE_AMOUNT_FLAG IS NULL )
                AND (  p_WON_PIPELINE_AMOUNT_FLAG IS NULL )))
       AND (    ( Recinfo.QUOTA_AMOUNT_FLAG = p_QUOTA_AMOUNT_FLAG)
            OR (    ( Recinfo.QUOTA_AMOUNT_FLAG IS NULL )
                AND (  p_QUOTA_AMOUNT_FLAG IS NULL )))
       AND (    ( Recinfo.START_DATE_ACTIVE = p_START_DATE_ACTIVE)
            OR (    ( Recinfo.START_DATE_ACTIVE IS NULL )
                AND (  p_START_DATE_ACTIVE IS NULL )))
       AND (    ( Recinfo.END_DATE_ACTIVE = p_END_DATE_ACTIVE)
            OR (    ( Recinfo.END_DATE_ACTIVE IS NULL )
                AND (  p_END_DATE_ACTIVE IS NULL )))
       AND (    ( Recinfo.ACTIVE_FLAG = p_ACTIVE_FLAG)
            OR (    ( Recinfo.ACTIVE_FLAG IS NULL )
                AND (  p_ACTIVE_FLAG IS NULL )))
       AND (    ( Recinfo.FORECAST_CATEGORY_ID = p_FORECAST_CATEGORY_ID)
            OR (    ( Recinfo.FORECAST_CATEGORY_ID IS NULL )
                AND (  p_FORECAST_CATEGORY_ID IS NULL )))
       ) then
       return;
   else
       FND_MESSAGE.SET_NAME('FND', 'FORM_RECORD_CHANGED');
       APP_EXCEPTION.RAISE_EXCEPTION;
   End If;
END Lock_Row;

End AS_INTERNAL_FORECASTS_PKG;

/
