--------------------------------------------------------
--  DDL for Package Body SY_ORGN_MST_PKG
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE PACKAGE BODY "APPS"."SY_ORGN_MST_PKG" as
/* $Header: gmaorgnb.pls 115.3 2002/10/31 19:51:02 appldev noship $ */
procedure INSERT_ROW (
  X_ROWID in out nocopy VARCHAR2,
  X_ORGN_CODE in VARCHAR2,
  X_ATTRIBUTE12 in VARCHAR2,
  X_ATTRIBUTE13 in VARCHAR2,
  X_ATTRIBUTE14 in VARCHAR2,
  X_ATTRIBUTE15 in VARCHAR2,
  X_ATTRIBUTE16 in VARCHAR2,
  X_ATTRIBUTE17 in VARCHAR2,
  X_ATTRIBUTE18 in VARCHAR2,
  X_ATTRIBUTE19 in VARCHAR2,
  X_ATTRIBUTE20 in VARCHAR2,
  X_ATTRIBUTE21 in VARCHAR2,
  X_ATTRIBUTE22 in VARCHAR2,
  X_ATTRIBUTE23 in VARCHAR2,
  X_ATTRIBUTE24 in VARCHAR2,
  X_ATTRIBUTE25 in VARCHAR2,
  X_ATTRIBUTE26 in VARCHAR2,
  X_ATTRIBUTE27 in VARCHAR2,
  X_ATTRIBUTE28 in VARCHAR2,
  X_ATTRIBUTE29 in VARCHAR2,
  X_ATTRIBUTE30 in VARCHAR2,
  X_ATTRIBUTE_CATEGORY in VARCHAR2,
  X_PARENT_ORGN_CODE in VARCHAR2,
  X_CO_CODE in VARCHAR2,
  X_PLANT_IND in NUMBER,
  X_ADDR_ID in NUMBER,
  X_ORGANIZATION_ID in NUMBER,
  X_TAXLOC_CODE in VARCHAR2,
  X_TEXT_CODE in NUMBER,
  X_DELETE_MARK in NUMBER,
  X_TRANS_CNT in NUMBER,
  X_POC_IND in NUMBER,
  X_RESOURCE_WHSE_CODE in VARCHAR2,
  X_SY_ORGN_MST_ORGN_CODE in VARCHAR2,
  X_SY_ORGN_MST_DOC_TYPE in VARCHAR2,
  X_ATTRIBUTE1 in VARCHAR2,
  X_ATTRIBUTE2 in VARCHAR2,
  X_ATTRIBUTE3 in VARCHAR2,
  X_ATTRIBUTE4 in VARCHAR2,
  X_ATTRIBUTE5 in VARCHAR2,
  X_ATTRIBUTE6 in VARCHAR2,
  X_ATTRIBUTE7 in VARCHAR2,
  X_ATTRIBUTE8 in VARCHAR2,
  X_ATTRIBUTE9 in VARCHAR2,
  X_ATTRIBUTE10 in VARCHAR2,
  X_ATTRIBUTE11 in VARCHAR2,
  X_ORGN_NAME in VARCHAR2,
  X_CREATION_DATE in DATE,
  X_CREATED_BY in NUMBER,
  X_LAST_UPDATE_DATE in DATE,
  X_LAST_UPDATED_BY in NUMBER,
  X_LAST_UPDATE_LOGIN in NUMBER,
  X_MFG_CALENDAR_ID in NUMBER

) is
  cursor C is select ROWID from SY_ORGN_MST_B
    where ORGN_CODE = X_ORGN_CODE
    ;
begin
  insert into SY_ORGN_MST_B (
    ATTRIBUTE12,
    ATTRIBUTE13,
    ATTRIBUTE14,
    ATTRIBUTE15,
    ATTRIBUTE16,
    ATTRIBUTE17,
    ATTRIBUTE18,
    ATTRIBUTE19,
    ATTRIBUTE20,
    ATTRIBUTE21,
    ATTRIBUTE22,
    ATTRIBUTE23,
    ATTRIBUTE24,
    ATTRIBUTE25,
    ATTRIBUTE26,
    ATTRIBUTE27,
    ATTRIBUTE28,
    ATTRIBUTE29,
    ATTRIBUTE30,
    ATTRIBUTE_CATEGORY,
    ORGN_CODE,
    PARENT_ORGN_CODE,
    CO_CODE,
    PLANT_IND,
    ADDR_ID,
    ORGANIZATION_ID,
    TAXLOC_CODE,
    TEXT_CODE,
    DELETE_MARK,
    TRANS_CNT,
    POC_IND,
    RESOURCE_WHSE_CODE,
    SY_ORGN_MST_ORGN_CODE,
    SY_ORGN_MST_DOC_TYPE,
    ATTRIBUTE1,
    ATTRIBUTE2,
    ATTRIBUTE3,
    ATTRIBUTE4,
    ATTRIBUTE5,
    ATTRIBUTE6,
    ATTRIBUTE7,
    ATTRIBUTE8,
    ATTRIBUTE9,
    ATTRIBUTE10,
    ATTRIBUTE11,
    CREATION_DATE,
    CREATED_BY,
    LAST_UPDATE_DATE,
    LAST_UPDATED_BY,
    LAST_UPDATE_LOGIN,
    MFG_CALENDAR_ID
  ) values (
    X_ATTRIBUTE12,
    X_ATTRIBUTE13,
    X_ATTRIBUTE14,
    X_ATTRIBUTE15,
    X_ATTRIBUTE16,
    X_ATTRIBUTE17,
    X_ATTRIBUTE18,
    X_ATTRIBUTE19,
    X_ATTRIBUTE20,
    X_ATTRIBUTE21,
    X_ATTRIBUTE22,
    X_ATTRIBUTE23,
    X_ATTRIBUTE24,
    X_ATTRIBUTE25,
    X_ATTRIBUTE26,
    X_ATTRIBUTE27,
    X_ATTRIBUTE28,
    X_ATTRIBUTE29,
    X_ATTRIBUTE30,
    X_ATTRIBUTE_CATEGORY,
    X_ORGN_CODE,
    X_PARENT_ORGN_CODE,
    X_CO_CODE,
    X_PLANT_IND,
    X_ADDR_ID,
    X_ORGANIZATION_ID,
    X_TAXLOC_CODE,
    X_TEXT_CODE,
    X_DELETE_MARK,
    X_TRANS_CNT,
    X_POC_IND,
    X_RESOURCE_WHSE_CODE,
    X_SY_ORGN_MST_ORGN_CODE,
    X_SY_ORGN_MST_DOC_TYPE,
    X_ATTRIBUTE1,
    X_ATTRIBUTE2,
    X_ATTRIBUTE3,
    X_ATTRIBUTE4,
    X_ATTRIBUTE5,
    X_ATTRIBUTE6,
    X_ATTRIBUTE7,
    X_ATTRIBUTE8,
    X_ATTRIBUTE9,
    X_ATTRIBUTE10,
    X_ATTRIBUTE11,
    X_CREATION_DATE,
    X_CREATED_BY,
    X_LAST_UPDATE_DATE,
    X_LAST_UPDATED_BY,
    X_LAST_UPDATE_LOGIN,
    X_MFG_CALENDAR_ID
  );

  insert into SY_ORGN_MST_TL (
    LAST_UPDATE_DATE,
    LAST_UPDATED_BY,
    LAST_UPDATE_LOGIN,
    ORGN_CODE,
    CREATED_BY,
    CREATION_DATE,
    ORGN_NAME,
    LANGUAGE,
    SOURCE_LANG
  ) select
    X_LAST_UPDATE_DATE,
    X_LAST_UPDATED_BY,
    X_LAST_UPDATE_LOGIN,
    X_ORGN_CODE,
    X_CREATED_BY,
    X_CREATION_DATE,
    X_ORGN_NAME,
    L.LANGUAGE_CODE,
    userenv('LANG')
  from FND_LANGUAGES L
  where L.INSTALLED_FLAG in ('I', 'B')
  and not exists
    (select NULL
    from SY_ORGN_MST_TL T
    where T.ORGN_CODE = X_ORGN_CODE
    and T.LANGUAGE = L.LANGUAGE_CODE);

  open c;
  fetch c into X_ROWID;
  if (c%notfound) then
    close c;
    raise no_data_found;
  end if;
  close c;

end INSERT_ROW;

procedure LOCK_ROW (
  X_ORGN_CODE in VARCHAR2,
  X_ATTRIBUTE12 in VARCHAR2,
  X_ATTRIBUTE13 in VARCHAR2,
  X_ATTRIBUTE14 in VARCHAR2,
  X_ATTRIBUTE15 in VARCHAR2,
  X_ATTRIBUTE16 in VARCHAR2,
  X_ATTRIBUTE17 in VARCHAR2,
  X_ATTRIBUTE18 in VARCHAR2,
  X_ATTRIBUTE19 in VARCHAR2,
  X_ATTRIBUTE20 in VARCHAR2,
  X_ATTRIBUTE21 in VARCHAR2,
  X_ATTRIBUTE22 in VARCHAR2,
  X_ATTRIBUTE23 in VARCHAR2,
  X_ATTRIBUTE24 in VARCHAR2,
  X_ATTRIBUTE25 in VARCHAR2,
  X_ATTRIBUTE26 in VARCHAR2,
  X_ATTRIBUTE27 in VARCHAR2,
  X_ATTRIBUTE28 in VARCHAR2,
  X_ATTRIBUTE29 in VARCHAR2,
  X_ATTRIBUTE30 in VARCHAR2,
  X_ATTRIBUTE_CATEGORY in VARCHAR2,
  X_PARENT_ORGN_CODE in VARCHAR2,
  X_CO_CODE in VARCHAR2,
  X_PLANT_IND in NUMBER,
  X_ADDR_ID in NUMBER,
  X_ORGANIZATION_ID in NUMBER,
  X_TAXLOC_CODE in VARCHAR2,
  X_TEXT_CODE in NUMBER,
  X_DELETE_MARK in NUMBER,
  X_TRANS_CNT in NUMBER,
  X_POC_IND in NUMBER,
  X_RESOURCE_WHSE_CODE in VARCHAR2,
  X_SY_ORGN_MST_ORGN_CODE in VARCHAR2,
  X_SY_ORGN_MST_DOC_TYPE in VARCHAR2,
  X_ATTRIBUTE1 in VARCHAR2,
  X_ATTRIBUTE2 in VARCHAR2,
  X_ATTRIBUTE3 in VARCHAR2,
  X_ATTRIBUTE4 in VARCHAR2,
  X_ATTRIBUTE5 in VARCHAR2,
  X_ATTRIBUTE6 in VARCHAR2,
  X_ATTRIBUTE7 in VARCHAR2,
  X_ATTRIBUTE8 in VARCHAR2,
  X_ATTRIBUTE9 in VARCHAR2,
  X_ATTRIBUTE10 in VARCHAR2,
  X_ATTRIBUTE11 in VARCHAR2,
  X_ORGN_NAME in VARCHAR2,
  X_MFG_CALENDAR_ID NUMBER
) is
  cursor c is select
      ATTRIBUTE12,
      ATTRIBUTE13,
      ATTRIBUTE14,
      ATTRIBUTE15,
      ATTRIBUTE16,
      ATTRIBUTE17,
      ATTRIBUTE18,
      ATTRIBUTE19,
      ATTRIBUTE20,
      ATTRIBUTE21,
      ATTRIBUTE22,
      ATTRIBUTE23,
      ATTRIBUTE24,
      ATTRIBUTE25,
      ATTRIBUTE26,
      ATTRIBUTE27,
      ATTRIBUTE28,
      ATTRIBUTE29,
      ATTRIBUTE30,
      ATTRIBUTE_CATEGORY,
      PARENT_ORGN_CODE,
      CO_CODE,
      PLANT_IND,
      ADDR_ID,
      ORGANIZATION_ID,
      TAXLOC_CODE,
      TEXT_CODE,
      DELETE_MARK,
      TRANS_CNT,
      POC_IND,
      RESOURCE_WHSE_CODE,
      SY_ORGN_MST_ORGN_CODE,
      SY_ORGN_MST_DOC_TYPE,
      ATTRIBUTE1,
      ATTRIBUTE2,
      ATTRIBUTE3,
      ATTRIBUTE4,
      ATTRIBUTE5,
      ATTRIBUTE6,
      ATTRIBUTE7,
      ATTRIBUTE8,
      ATTRIBUTE9,
      ATTRIBUTE10,
      ATTRIBUTE11 ,
      MFG_CALENDAR_ID
    from SY_ORGN_MST_B
    where ORGN_CODE = X_ORGN_CODE
    for update of ORGN_CODE nowait;
  recinfo c%rowtype;

  cursor c1 is select
      ORGN_NAME,
      decode(LANGUAGE, userenv('LANG'), 'Y', 'N') BASELANG
    from SY_ORGN_MST_TL
    where ORGN_CODE = X_ORGN_CODE
    and userenv('LANG') in (LANGUAGE, SOURCE_LANG)
    for update of ORGN_CODE nowait;
begin
  open c;
  fetch c into recinfo;
  if (c%notfound) then
    close c;
    fnd_message.set_name('FND', 'FORM_RECORD_DELETED');
    app_exception.raise_exception;
  end if;
  close c;
  if (    ((recinfo.ATTRIBUTE12 = X_ATTRIBUTE12)
           OR ((recinfo.ATTRIBUTE12 is null) AND (X_ATTRIBUTE12 is null)))
      AND ((recinfo.ATTRIBUTE13 = X_ATTRIBUTE13)
           OR ((recinfo.ATTRIBUTE13 is null) AND (X_ATTRIBUTE13 is null)))
      AND ((recinfo.ATTRIBUTE14 = X_ATTRIBUTE14)
           OR ((recinfo.ATTRIBUTE14 is null) AND (X_ATTRIBUTE14 is null)))
      AND ((recinfo.ATTRIBUTE15 = X_ATTRIBUTE15)
           OR ((recinfo.ATTRIBUTE15 is null) AND (X_ATTRIBUTE15 is null)))
      AND ((recinfo.ATTRIBUTE16 = X_ATTRIBUTE16)
           OR ((recinfo.ATTRIBUTE16 is null) AND (X_ATTRIBUTE16 is null)))
      AND ((recinfo.ATTRIBUTE17 = X_ATTRIBUTE17)
           OR ((recinfo.ATTRIBUTE17 is null) AND (X_ATTRIBUTE17 is null)))
      AND ((recinfo.ATTRIBUTE18 = X_ATTRIBUTE18)
           OR ((recinfo.ATTRIBUTE18 is null) AND (X_ATTRIBUTE18 is null)))
      AND ((recinfo.ATTRIBUTE19 = X_ATTRIBUTE19)
           OR ((recinfo.ATTRIBUTE19 is null) AND (X_ATTRIBUTE19 is null)))
      AND ((recinfo.ATTRIBUTE20 = X_ATTRIBUTE20)
           OR ((recinfo.ATTRIBUTE20 is null) AND (X_ATTRIBUTE20 is null)))
      AND ((recinfo.ATTRIBUTE21 = X_ATTRIBUTE21)
           OR ((recinfo.ATTRIBUTE21 is null) AND (X_ATTRIBUTE21 is null)))
      AND ((recinfo.ATTRIBUTE22 = X_ATTRIBUTE22)
           OR ((recinfo.ATTRIBUTE22 is null) AND (X_ATTRIBUTE22 is null)))
      AND ((recinfo.ATTRIBUTE23 = X_ATTRIBUTE23)
           OR ((recinfo.ATTRIBUTE23 is null) AND (X_ATTRIBUTE23 is null)))
      AND ((recinfo.ATTRIBUTE24 = X_ATTRIBUTE24)
           OR ((recinfo.ATTRIBUTE24 is null) AND (X_ATTRIBUTE24 is null)))
      AND ((recinfo.ATTRIBUTE25 = X_ATTRIBUTE25)
           OR ((recinfo.ATTRIBUTE25 is null) AND (X_ATTRIBUTE25 is null)))
      AND ((recinfo.ATTRIBUTE26 = X_ATTRIBUTE26)
           OR ((recinfo.ATTRIBUTE26 is null) AND (X_ATTRIBUTE26 is null)))
      AND ((recinfo.ATTRIBUTE27 = X_ATTRIBUTE27)
           OR ((recinfo.ATTRIBUTE27 is null) AND (X_ATTRIBUTE27 is null)))
      AND ((recinfo.ATTRIBUTE28 = X_ATTRIBUTE28)
           OR ((recinfo.ATTRIBUTE28 is null) AND (X_ATTRIBUTE28 is null)))
      AND ((recinfo.ATTRIBUTE29 = X_ATTRIBUTE29)
           OR ((recinfo.ATTRIBUTE29 is null) AND (X_ATTRIBUTE29 is null)))
      AND ((recinfo.ATTRIBUTE30 = X_ATTRIBUTE30)
           OR ((recinfo.ATTRIBUTE30 is null) AND (X_ATTRIBUTE30 is null)))
      AND ((recinfo.ATTRIBUTE_CATEGORY = X_ATTRIBUTE_CATEGORY)
           OR ((recinfo.ATTRIBUTE_CATEGORY is null) AND (X_ATTRIBUTE_CATEGORY is null)))
      AND (recinfo.PARENT_ORGN_CODE = X_PARENT_ORGN_CODE)
      AND (recinfo.CO_CODE = X_CO_CODE)
      AND (recinfo.PLANT_IND = X_PLANT_IND)
      AND ((recinfo.ADDR_ID = X_ADDR_ID)
           OR ((recinfo.ADDR_ID is null) AND (X_ADDR_ID is null)))
      AND ((recinfo.ORGANIZATION_ID = X_ORGANIZATION_ID)
           OR ((recinfo.ORGANIZATION_ID is null) AND (X_ORGANIZATION_ID is null)))
      AND ((recinfo.TAXLOC_CODE = X_TAXLOC_CODE)
           OR ((recinfo.TAXLOC_CODE is null) AND (X_TAXLOC_CODE is null)))
      AND ((recinfo.TEXT_CODE = X_TEXT_CODE)
           OR ((recinfo.TEXT_CODE is null) AND (X_TEXT_CODE is null)))
      AND (recinfo.DELETE_MARK = X_DELETE_MARK)
      AND (recinfo.TRANS_CNT = X_TRANS_CNT)
      AND (recinfo.POC_IND = X_POC_IND)
      AND ((recinfo.RESOURCE_WHSE_CODE = X_RESOURCE_WHSE_CODE)
           OR ((recinfo.RESOURCE_WHSE_CODE is null) AND (X_RESOURCE_WHSE_CODE is null)))
      AND ((recinfo.SY_ORGN_MST_ORGN_CODE = X_SY_ORGN_MST_ORGN_CODE)
           OR ((recinfo.SY_ORGN_MST_ORGN_CODE is null) AND (X_SY_ORGN_MST_ORGN_CODE is null)))
      AND ((recinfo.SY_ORGN_MST_DOC_TYPE = X_SY_ORGN_MST_DOC_TYPE)
           OR ((recinfo.SY_ORGN_MST_DOC_TYPE is null) AND (X_SY_ORGN_MST_DOC_TYPE is null)))
      AND ((recinfo.ATTRIBUTE1 = X_ATTRIBUTE1)
           OR ((recinfo.ATTRIBUTE1 is null) AND (X_ATTRIBUTE1 is null)))
      AND ((recinfo.ATTRIBUTE2 = X_ATTRIBUTE2)
           OR ((recinfo.ATTRIBUTE2 is null) AND (X_ATTRIBUTE2 is null)))
      AND ((recinfo.ATTRIBUTE3 = X_ATTRIBUTE3)
           OR ((recinfo.ATTRIBUTE3 is null) AND (X_ATTRIBUTE3 is null)))
      AND ((recinfo.ATTRIBUTE4 = X_ATTRIBUTE4)
           OR ((recinfo.ATTRIBUTE4 is null) AND (X_ATTRIBUTE4 is null)))
      AND ((recinfo.ATTRIBUTE5 = X_ATTRIBUTE5)
           OR ((recinfo.ATTRIBUTE5 is null) AND (X_ATTRIBUTE5 is null)))
      AND ((recinfo.ATTRIBUTE6 = X_ATTRIBUTE6)
           OR ((recinfo.ATTRIBUTE6 is null) AND (X_ATTRIBUTE6 is null)))
      AND ((recinfo.ATTRIBUTE7 = X_ATTRIBUTE7)
           OR ((recinfo.ATTRIBUTE7 is null) AND (X_ATTRIBUTE7 is null)))
      AND ((recinfo.ATTRIBUTE8 = X_ATTRIBUTE8)
           OR ((recinfo.ATTRIBUTE8 is null) AND (X_ATTRIBUTE8 is null)))
      AND ((recinfo.ATTRIBUTE9 = X_ATTRIBUTE9)
           OR ((recinfo.ATTRIBUTE9 is null) AND (X_ATTRIBUTE9 is null)))
      AND ((recinfo.ATTRIBUTE10 = X_ATTRIBUTE10)
           OR ((recinfo.ATTRIBUTE10 is null) AND (X_ATTRIBUTE10 is null)))
      AND ((recinfo.ATTRIBUTE11 = X_ATTRIBUTE11)
           OR ((recinfo.ATTRIBUTE11 is null) AND (X_ATTRIBUTE11 is null)))
      AND ((recinfo.MFG_CALENDAR_ID = X_MFG_CALENDAR_ID)
           OR ((recinfo.MFG_CALENDAR_ID is null) AND (X_MFG_CALENDAR_ID is null)))
  ) then
    null;
  else
    fnd_message.set_name('FND', 'FORM_RECORD_CHANGED');
    app_exception.raise_exception;
  end if;

  for tlinfo in c1 loop
    if (tlinfo.BASELANG = 'Y') then
      if (    (tlinfo.ORGN_NAME = X_ORGN_NAME)
      ) then
        null;
      else
        fnd_message.set_name('FND', 'FORM_RECORD_CHANGED');
        app_exception.raise_exception;
      end if;
    end if;
  end loop;
  return;
end LOCK_ROW;

procedure UPDATE_ROW (
  X_ORGN_CODE in VARCHAR2,
  X_ATTRIBUTE12 in VARCHAR2,
  X_ATTRIBUTE13 in VARCHAR2,
  X_ATTRIBUTE14 in VARCHAR2,
  X_ATTRIBUTE15 in VARCHAR2,
  X_ATTRIBUTE16 in VARCHAR2,
  X_ATTRIBUTE17 in VARCHAR2,
  X_ATTRIBUTE18 in VARCHAR2,
  X_ATTRIBUTE19 in VARCHAR2,
  X_ATTRIBUTE20 in VARCHAR2,
  X_ATTRIBUTE21 in VARCHAR2,
  X_ATTRIBUTE22 in VARCHAR2,
  X_ATTRIBUTE23 in VARCHAR2,
  X_ATTRIBUTE24 in VARCHAR2,
  X_ATTRIBUTE25 in VARCHAR2,
  X_ATTRIBUTE26 in VARCHAR2,
  X_ATTRIBUTE27 in VARCHAR2,
  X_ATTRIBUTE28 in VARCHAR2,
  X_ATTRIBUTE29 in VARCHAR2,
  X_ATTRIBUTE30 in VARCHAR2,
  X_ATTRIBUTE_CATEGORY in VARCHAR2,
  X_PARENT_ORGN_CODE in VARCHAR2,
  X_CO_CODE in VARCHAR2,
  X_PLANT_IND in NUMBER,
  X_ADDR_ID in NUMBER,
  X_ORGANIZATION_ID in NUMBER,
  X_TAXLOC_CODE in VARCHAR2,
  X_TEXT_CODE in NUMBER,
  X_DELETE_MARK in NUMBER,
  X_TRANS_CNT in NUMBER,
  X_POC_IND in NUMBER,
  X_RESOURCE_WHSE_CODE in VARCHAR2,
  X_SY_ORGN_MST_ORGN_CODE in VARCHAR2,
  X_SY_ORGN_MST_DOC_TYPE in VARCHAR2,
  X_ATTRIBUTE1 in VARCHAR2,
  X_ATTRIBUTE2 in VARCHAR2,
  X_ATTRIBUTE3 in VARCHAR2,
  X_ATTRIBUTE4 in VARCHAR2,
  X_ATTRIBUTE5 in VARCHAR2,
  X_ATTRIBUTE6 in VARCHAR2,
  X_ATTRIBUTE7 in VARCHAR2,
  X_ATTRIBUTE8 in VARCHAR2,
  X_ATTRIBUTE9 in VARCHAR2,
  X_ATTRIBUTE10 in VARCHAR2,
  X_ATTRIBUTE11 in VARCHAR2,
  X_ORGN_NAME in VARCHAR2,
  X_LAST_UPDATE_DATE in DATE,
  X_LAST_UPDATED_BY in NUMBER,
  X_LAST_UPDATE_LOGIN in NUMBER,
  X_MFG_CALENDAR_ID   in NUMBER
) is
begin
  update SY_ORGN_MST_B set
    ATTRIBUTE12 = X_ATTRIBUTE12,
    ATTRIBUTE13 = X_ATTRIBUTE13,
    ATTRIBUTE14 = X_ATTRIBUTE14,
    ATTRIBUTE15 = X_ATTRIBUTE15,
    ATTRIBUTE16 = X_ATTRIBUTE16,
    ATTRIBUTE17 = X_ATTRIBUTE17,
    ATTRIBUTE18 = X_ATTRIBUTE18,
    ATTRIBUTE19 = X_ATTRIBUTE19,
    ATTRIBUTE20 = X_ATTRIBUTE20,
    ATTRIBUTE21 = X_ATTRIBUTE21,
    ATTRIBUTE22 = X_ATTRIBUTE22,
    ATTRIBUTE23 = X_ATTRIBUTE23,
    ATTRIBUTE24 = X_ATTRIBUTE24,
    ATTRIBUTE25 = X_ATTRIBUTE25,
    ATTRIBUTE26 = X_ATTRIBUTE26,
    ATTRIBUTE27 = X_ATTRIBUTE27,
    ATTRIBUTE28 = X_ATTRIBUTE28,
    ATTRIBUTE29 = X_ATTRIBUTE29,
    ATTRIBUTE30 = X_ATTRIBUTE30,
    ATTRIBUTE_CATEGORY = X_ATTRIBUTE_CATEGORY,
    PARENT_ORGN_CODE = X_PARENT_ORGN_CODE,
    CO_CODE = X_CO_CODE,
    PLANT_IND = X_PLANT_IND,
    ADDR_ID = X_ADDR_ID,
    ORGANIZATION_ID = X_ORGANIZATION_ID,
    TAXLOC_CODE = X_TAXLOC_CODE,
    TEXT_CODE = X_TEXT_CODE,
    DELETE_MARK = X_DELETE_MARK,
    TRANS_CNT = X_TRANS_CNT,
    POC_IND = X_POC_IND,
    RESOURCE_WHSE_CODE = X_RESOURCE_WHSE_CODE,
    SY_ORGN_MST_ORGN_CODE = X_SY_ORGN_MST_ORGN_CODE,
    SY_ORGN_MST_DOC_TYPE = X_SY_ORGN_MST_DOC_TYPE,
    ATTRIBUTE1 = X_ATTRIBUTE1,
    ATTRIBUTE2 = X_ATTRIBUTE2,
    ATTRIBUTE3 = X_ATTRIBUTE3,
    ATTRIBUTE4 = X_ATTRIBUTE4,
    ATTRIBUTE5 = X_ATTRIBUTE5,
    ATTRIBUTE6 = X_ATTRIBUTE6,
    ATTRIBUTE7 = X_ATTRIBUTE7,
    ATTRIBUTE8 = X_ATTRIBUTE8,
    ATTRIBUTE9 = X_ATTRIBUTE9,
    ATTRIBUTE10 = X_ATTRIBUTE10,
    ATTRIBUTE11 = X_ATTRIBUTE11,
    LAST_UPDATE_DATE = X_LAST_UPDATE_DATE,
    LAST_UPDATED_BY = X_LAST_UPDATED_BY,
    LAST_UPDATE_LOGIN = X_LAST_UPDATE_LOGIN ,
    MFG_CALENDAR_ID = X_MFG_CALENDAR_ID
  where ORGN_CODE = X_ORGN_CODE;

  if (sql%notfound) then
    raise no_data_found;
  end if;

  update SY_ORGN_MST_TL set
    ORGN_NAME = X_ORGN_NAME,
    LAST_UPDATE_DATE = X_LAST_UPDATE_DATE,
    LAST_UPDATED_BY = X_LAST_UPDATED_BY,
    LAST_UPDATE_LOGIN = X_LAST_UPDATE_LOGIN,
    SOURCE_LANG = userenv('LANG')
  where ORGN_CODE = X_ORGN_CODE
  and userenv('LANG') in (LANGUAGE, SOURCE_LANG);

  if (sql%notfound) then
    raise no_data_found;
  end if;
end UPDATE_ROW;

procedure DELETE_ROW (
  X_ORGN_CODE in VARCHAR2
) is
begin
/*****************
  delete from SY_ORGN_MST_TL
  where ORGN_CODE = X_ORGN_CODE;

  if (sql%notfound) then
    raise no_data_found;
  end if;

  ************************ */

  UPDATE SY_ORGN_MST_B set delete_mark = 1
  where ORGN_CODE = X_ORGN_CODE;

  if (sql%notfound) then
    raise no_data_found;
  end if;
end DELETE_ROW;

procedure ADD_LANGUAGE
is
begin
  delete from SY_ORGN_MST_TL T
  where not exists
    (select NULL
    from SY_ORGN_MST_B B
    where B.ORGN_CODE = T.ORGN_CODE
    );

  update SY_ORGN_MST_TL T set (
      ORGN_NAME
    ) = (select
      B.ORGN_NAME
    from SY_ORGN_MST_TL B
    where B.ORGN_CODE = T.ORGN_CODE
    and B.LANGUAGE = T.SOURCE_LANG)
  where (
      T.ORGN_CODE,
      T.LANGUAGE
  ) in (select
      SUBT.ORGN_CODE,
      SUBT.LANGUAGE
    from SY_ORGN_MST_TL SUBB, SY_ORGN_MST_TL SUBT
    where SUBB.ORGN_CODE = SUBT.ORGN_CODE
    and SUBB.LANGUAGE = SUBT.SOURCE_LANG
    and (SUBB.ORGN_NAME <> SUBT.ORGN_NAME
  ));

  insert into SY_ORGN_MST_TL (
    LAST_UPDATE_DATE,
    LAST_UPDATED_BY,
    LAST_UPDATE_LOGIN,
    ORGN_CODE,
    CREATED_BY,
    CREATION_DATE,
    ORGN_NAME,
    LANGUAGE,
    SOURCE_LANG
  ) select
    B.LAST_UPDATE_DATE,
    B.LAST_UPDATED_BY,
    B.LAST_UPDATE_LOGIN,
    B.ORGN_CODE,
    B.CREATED_BY,
    B.CREATION_DATE,
    B.ORGN_NAME,
    L.LANGUAGE_CODE,
    B.SOURCE_LANG
  from SY_ORGN_MST_TL B, FND_LANGUAGES L
  where L.INSTALLED_FLAG in ('I', 'B')
  and B.LANGUAGE = userenv('LANG')
  and not exists
    (select NULL
    from SY_ORGN_MST_TL T
    where T.ORGN_CODE = B.ORGN_CODE
    and T.LANGUAGE = L.LANGUAGE_CODE);
end ADD_LANGUAGE;

end SY_ORGN_MST_PKG;

/
