--------------------------------------------------------
--  DDL for Package Body QP_MODIFIER_LIST_PVT
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE PACKAGE BODY "APPS"."QP_MODIFIER_LIST_PVT" as
/* $Header: QPXVMLHB.pls 115.0 99/10/14 18:53:58 porting ship   $ */

PROCEDURE Insert_Row(
  X_LIST_HEADER_ID       IN OUT     NUMBER
, X_CREATION_DATE                   DATE
, X_CREATED_BY                      NUMBER
, X_LAST_UPDATE_DATE                DATE
, X_LAST_UPDATED_BY                 NUMBER
, X_LAST_UPDATE_LOGIN               NUMBER
, X_PROGRAM_APPLICATION_ID          NUMBER
, X_PROGRAM_ID                      NUMBER
, X_PROGRAM_UPDATE_DATE             DATE
, X_REQUEST_ID                      NUMBER
, X_LIST_TYPE_CODE                  VARCHAR2
, X_START_DATE_ACTIVE               DATE
, X_END_DATE_ACTIVE                 DATE
, X_AUTOMATIC_FLAG                  VARCHAR2
, X_CURRENCY_CODE                   VARCHAR2
, X_ROUNDING_FACTOR                 NUMBER
, X_SHIP_METHOD_CODE                VARCHAR2
, X_FREIGHT_TERMS_CODE              VARCHAR2
, X_TERMS_ID                        NUMBER
, X_COMMENTS                        VARCHAR2
, X_DISCOUNT_LINES_FLAG             VARCHAR2
, X_GSA_INDICATOR                   VARCHAR2
, X_PRORATE_FLAG                    VARCHAR2
, X_CONTEXT                         VARCHAR2
, X_ATTRIBUTE1                      VARCHAR2
, X_ATTRIBUTE2                      VARCHAR2
, X_ATTRIBUTE3                      VARCHAR2
, X_ATTRIBUTE4                      VARCHAR2
, X_ATTRIBUTE5                      VARCHAR2
, X_ATTRIBUTE6                      VARCHAR2
, X_ATTRIBUTE7                      VARCHAR2
, X_ATTRIBUTE8                      VARCHAR2
, X_ATTRIBUTE9                      VARCHAR2
, X_ATTRIBUTE10                     VARCHAR2
, X_ATTRIBUTE11                     VARCHAR2
, X_ATTRIBUTE12                     VARCHAR2
, X_ATTRIBUTE13                     VARCHAR2
, X_ATTRIBUTE14                     VARCHAR2
, X_ATTRIBUTE15                     VARCHAR2
, X_NAME					      VARCHAR2
, X_DESCRIPTION			    	 VARCHAR2
)
IS
cursor c is select LIST_HEADER_ID from QP_LIST_HEADERS_B
		where LIST_HEADER_ID = X_LIST_HEADER_ID;

BEGIN



insert into QP_LIST_HEADERS_B
(
  LIST_HEADER_ID
, CREATION_DATE
, CREATED_BY
, LAST_UPDATE_DATE
, LAST_UPDATED_BY
, LAST_UPDATE_LOGIN
, PROGRAM_APPLICATION_ID
, PROGRAM_ID
, PROGRAM_UPDATE_DATE
, REQUEST_ID
, LIST_TYPE_CODE
, START_DATE_ACTIVE
, END_DATE_ACTIVE
, AUTOMATIC_FLAG
, CURRENCY_CODE
, ROUNDING_FACTOR
, SHIP_METHOD_CODE
, FREIGHT_TERMS_CODE
, TERMS_ID
, COMMENTS
, DISCOUNT_LINES_FLAG
, GSA_INDICATOR
, PRORATE_FLAG
, CONTEXT
, ATTRIBUTE1
, ATTRIBUTE2
, ATTRIBUTE3
, ATTRIBUTE4
, ATTRIBUTE5
, ATTRIBUTE6
, ATTRIBUTE7
, ATTRIBUTE8
, ATTRIBUTE9
, ATTRIBUTE10
, ATTRIBUTE11
, ATTRIBUTE12
, ATTRIBUTE13
, ATTRIBUTE14
, ATTRIBUTE15
)
values
(
  X_LIST_HEADER_ID
, X_CREATION_DATE
, X_CREATED_BY
, X_LAST_UPDATE_DATE
, X_LAST_UPDATED_BY
, X_LAST_UPDATE_LOGIN
, X_PROGRAM_APPLICATION_ID
, X_PROGRAM_ID
, X_PROGRAM_UPDATE_DATE
, X_REQUEST_ID
, X_LIST_TYPE_CODE
, X_START_DATE_ACTIVE
, X_END_DATE_ACTIVE
, X_AUTOMATIC_FLAG
, X_CURRENCY_CODE
, X_ROUNDING_FACTOR
, X_SHIP_METHOD_CODE
, X_FREIGHT_TERMS_CODE
, X_TERMS_ID
, X_COMMENTS
, X_DISCOUNT_LINES_FLAG
, X_GSA_INDICATOR
, X_PRORATE_FLAG
, X_CONTEXT
, X_ATTRIBUTE1
, X_ATTRIBUTE2
, X_ATTRIBUTE3
, X_ATTRIBUTE4
, X_ATTRIBUTE5
, X_ATTRIBUTE6
, X_ATTRIBUTE7
, X_ATTRIBUTE8
, X_ATTRIBUTE9
, X_ATTRIBUTE10
, X_ATTRIBUTE11
, X_ATTRIBUTE12
, X_ATTRIBUTE13
, X_ATTRIBUTE14
, X_ATTRIBUTE15
);

insert into QP_LIST_HEADERS_TL
( LIST_HEADER_ID
, NAME
, DESCRIPTION
, CREATION_DATE
, CREATED_BY
, LAST_UPDATE_DATE
, LAST_UPDATED_BY
, LAST_UPDATE_LOGIN
, LANGUAGE
, SOURCE_LANG
) select
X_LIST_HEADER_ID
, X_NAME
, X_DESCRIPTION
, X_CREATION_DATE
, X_CREATED_BY
, X_LAST_UPDATE_DATE
, X_LAST_UPDATED_BY
, X_LAST_UPDATE_LOGIN
, L.LANGUAGE_CODE
, userenv('LANG')
from FND_LANGUAGES L
where L.INSTALLED_FLAG in ('I','B')
and not exists
(select NULL from QP_LIST_HEADERS_TL T
where T.LIST_HEADER_ID = X_LIST_HEADER_ID
and T.LANGUAGE = L.LANGUAGE_CODE);

open C;

fetch C into X_LIST_HEADER_ID;

if (C%notfound) then
close C;
raise NO_DATA_FOUND;
end if;
close C;

end Insert_Row;



PROCEDURE Lock_Row(
  X_LIST_HEADER_ID       IN OUT     NUMBER
, X_CREATION_DATE                   DATE
, X_CREATED_BY                      NUMBER
, X_LAST_UPDATE_DATE                DATE
, X_LAST_UPDATED_BY                 NUMBER
, X_LAST_UPDATE_LOGIN               NUMBER
, X_PROGRAM_APPLICATION_ID          NUMBER
, X_PROGRAM_ID                      NUMBER
, X_PROGRAM_UPDATE_DATE             DATE
, X_REQUEST_ID                      NUMBER
, X_LIST_TYPE_CODE                  VARCHAR2
, X_START_DATE_ACTIVE               DATE
, X_END_DATE_ACTIVE                 DATE
, X_AUTOMATIC_FLAG                  VARCHAR2
, X_CURRENCY_CODE                   VARCHAR2
, X_ROUNDING_FACTOR                 NUMBER
, X_SHIP_METHOD_CODE                VARCHAR2
, X_FREIGHT_TERMS_CODE              VARCHAR2
, X_TERMS_ID                        NUMBER
, X_COMMENTS                        VARCHAR2
, X_DISCOUNT_LINES_FLAG             VARCHAR2
, X_GSA_INDICATOR                   VARCHAR2
, X_PRORATE_FLAG                    VARCHAR2
, X_CONTEXT                         VARCHAR2
, X_ATTRIBUTE1                      VARCHAR2
, X_ATTRIBUTE2                      VARCHAR2
, X_ATTRIBUTE3                      VARCHAR2
, X_ATTRIBUTE4                      VARCHAR2
, X_ATTRIBUTE5                      VARCHAR2
, X_ATTRIBUTE6                      VARCHAR2
, X_ATTRIBUTE7                      VARCHAR2
, X_ATTRIBUTE8                      VARCHAR2
, X_ATTRIBUTE9                      VARCHAR2
, X_ATTRIBUTE10                     VARCHAR2
, X_ATTRIBUTE11                     VARCHAR2
, X_ATTRIBUTE12                     VARCHAR2
, X_ATTRIBUTE13                     VARCHAR2
, X_ATTRIBUTE14                     VARCHAR2
, X_ATTRIBUTE15                     VARCHAR2
, X_NAME					      VARCHAR2
, X_DESCRIPTION			    	 VARCHAR2
) IS

cursor C is select * from QP_LIST_HEADERS_B
	where LIST_HEADER_ID = X_LIST_HEADER_ID
	for update of LIST_HEADER_ID nowait;
Recinfo C%ROWTYPE;

cursor C1 is select NAME
, DESCRIPTION
, decode(LANGUAGE, userenv('LANG'), 'Y', 'N') BASELANG
FROM QP_LIST_HEADERS_TL
where LIST_HEADER_ID = X_LIST_HEADER_ID
and userenv('LANG') in (LANGUAGE, SOURCE_LANG)
for update of LIST_HEADER_ID nowait;

BEGIN

open C;

fetch C into Recinfo;

if (C%notfound) then

close C;
FND_MESSAGE.Set_Name('FND','FORM_RECORD_DELETED');
APP_EXCEPTION.Raise_Exception;

end if;

close C;

if (
( Recinfo.List_header_ID =  X_LIST_HEADER_ID)

AND (   ( Recinfo.CREATION_DATE = X_CREATION_DATE )
	OR ( (Recinfo.CREATION_DATE IS NULL)
	AND (X_CREATION_DATE IS NULL)))

AND (   ( Recinfo.CREATED_BY = X_CREATED_BY)
	OR ( (Recinfo.CREATED_BY IS NULL)
	AND (X_CREATED_BY IS NULL)))

AND (   ( Recinfo.LAST_UPDATE_DATE = X_LAST_UPDATE_DATE)
	OR ( (Recinfo.LAST_UPDATE_DATE IS NULL)
	AND (X_LAST_UPDATE_DATE IS NULL)))

AND (   ( Recinfo.LAST_UPDATED_BY = X_LAST_UPDATED_BY)
	OR ( (Recinfo.LAST_UPDATED_BY IS NULL)
	AND (X_LAST_UPDATED_BY IS NULL)))

AND (   ( Recinfo.LAST_UPDATE_LOGIN = X_LAST_UPDATE_LOGIN)
	OR ( (Recinfo.LAST_UPDATE_LOGIN IS NULL)
	AND (X_LAST_UPDATE_LOGIN IS NULL)))

AND (   ( Recinfo.PROGRAM_APPLICATION_ID = X_PROGRAM_APPLICATION_ID)
	OR ( (Recinfo.PROGRAM_APPLICATION_ID IS NULL)
	AND (X_PROGRAM_APPLICATION_ID IS NULL)))

AND (   ( Recinfo.PROGRAM_ID = X_PROGRAM_ID)
	OR ( (Recinfo.PROGRAM_ID IS NULL)
	AND (X_PROGRAM_ID IS NULL)))

AND (   ( Recinfo.PROGRAM_UPDATE_DATE = X_PROGRAM_UPDATE_DATE)
	OR ( (Recinfo.PROGRAM_UPDATE_DATE IS NULL)
	AND (X_PROGRAM_UPDATE_DATE IS NULL)))

AND (   ( Recinfo.REQUEST_ID = X_REQUEST_ID )
	OR ( (Recinfo.REQUEST_ID IS NULL)
	AND (X_REQUEST_ID IS NULL)))

AND (   ( Recinfo.LIST_TYPE_CODE = X_LIST_TYPE_CODE )
	OR ( (Recinfo.LIST_TYPE_CODE IS NULL)
	AND (X_LIST_TYPE_CODE IS NULL)))

AND (   ( Recinfo.START_DATE_ACTIVE = X_START_DATE_ACTIVE )
	OR ( (Recinfo.START_DATE_ACTIVE IS NULL)
	AND (X_START_DATE_ACTIVE IS NULL)))

AND (   ( Recinfo.END_DATE_ACTIVE = X_END_DATE_ACTIVE )
	OR ( (Recinfo.END_DATE_ACTIVE IS NULL)
	AND (X_END_DATE_ACTIVE IS NULL)))

AND (   ( Recinfo.AUTOMATIC_FLAG = X_AUTOMATIC_FLAG )
	OR ( (Recinfo.AUTOMATIC_FLAG IS NULL)
	AND (X_AUTOMATIC_FLAG IS NULL)))

AND (   ( Recinfo.CURRENCY_CODE = X_CURRENCY_CODE )
	OR ( (Recinfo.CURRENCY_CODE IS NULL)
	AND (X_CURRENCY_CODE IS NULL)))

AND (   ( Recinfo.ROUNDING_FACTOR = X_ROUNDING_FACTOR )
	OR ( (Recinfo.ROUNDING_FACTOR IS NULL)
	AND (X_ROUNDING_FACTOR IS NULL)))

AND (   ( Recinfo.SHIP_METHOD_CODE = X_SHIP_METHOD_CODE )
	OR ( (Recinfo.SHIP_METHOD_CODE IS NULL)
	AND (X_SHIP_METHOD_CODE IS NULL)))

AND (   ( Recinfo.FREIGHT_TERMS_CODE = X_FREIGHT_TERMS_CODE )
	OR ( (Recinfo.FREIGHT_TERMS_CODE IS NULL)
	AND (X_FREIGHT_TERMS_CODE IS NULL)))

AND (   ( Recinfo.TERMS_ID = X_TERMS_ID )
	OR ( (Recinfo.TERMS_ID IS NULL)
	AND (X_TERMS_ID IS NULL)))

AND (   ( Recinfo.COMMENTS = X_COMMENTS )
	OR ( (Recinfo.COMMENTS IS NULL)
	AND (X_COMMENTS IS NULL)))

AND (   ( Recinfo.DISCOUNT_LINES_FLAG = X_DISCOUNT_LINES_FLAG )
	OR ( (Recinfo.DISCOUNT_LINES_FLAG IS NULL)
	AND (X_DISCOUNT_LINES_FLAG IS NULL)))

AND (   ( Recinfo.GSA_INDICATOR = X_GSA_INDICATOR )
	OR ( (Recinfo.GSA_INDICATOR IS NULL)
	AND (X_GSA_INDICATOR IS NULL)))

AND (   ( Recinfo.PRORATE_FLAG = X_PRORATE_FLAG )
	OR ( (Recinfo.PRORATE_FLAG IS NULL)
	AND (X_PRORATE_FLAG IS NULL)))

AND (   ( Recinfo.CONTEXT = X_CONTEXT )
	OR ( (Recinfo.CONTEXT IS NULL)
	AND (X_CONTEXT IS NULL)))

AND (   ( Recinfo.ATTRIBUTE1 = X_ATTRIBUTE1 )
	OR ( (Recinfo.ATTRIBUTE1 IS NULL)
	AND (X_ATTRIBUTE1 IS NULL)))

AND (   ( Recinfo.ATTRIBUTE2 = X_ATTRIBUTE2 )
	OR ( (Recinfo.ATTRIBUTE2 IS NULL)
	AND (X_ATTRIBUTE2 IS NULL)))

AND (   ( Recinfo.ATTRIBUTE3 = X_ATTRIBUTE3 )
	OR ( (Recinfo.ATTRIBUTE3 IS NULL)
	AND (X_ATTRIBUTE3 IS NULL)))

AND (   ( Recinfo.ATTRIBUTE4 = X_ATTRIBUTE4 )
	OR ( (Recinfo.ATTRIBUTE4 IS NULL)
	AND (X_ATTRIBUTE4 IS NULL)))

AND (   ( Recinfo.ATTRIBUTE5 = X_ATTRIBUTE5 )
	OR ( (Recinfo.ATTRIBUTE5 IS NULL)
	AND (X_ATTRIBUTE5 IS NULL)))

AND (   ( Recinfo.ATTRIBUTE6 = X_ATTRIBUTE6 )
	OR ( (Recinfo.ATTRIBUTE6 IS NULL)
	AND (X_ATTRIBUTE6 IS NULL)))

AND (   ( Recinfo.ATTRIBUTE7 = X_ATTRIBUTE7 )
	OR ( (Recinfo.ATTRIBUTE7 IS NULL)
	AND (X_ATTRIBUTE7 IS NULL)))

AND (   ( Recinfo.ATTRIBUTE8 = X_ATTRIBUTE8 )
	OR ( (Recinfo.ATTRIBUTE8 IS NULL)
	AND (X_ATTRIBUTE8 IS NULL)))

AND (   ( Recinfo.ATTRIBUTE9 = X_ATTRIBUTE9 )
	OR ( (Recinfo.ATTRIBUTE9 IS NULL)
	AND (X_ATTRIBUTE9 IS NULL)))

AND (   ( Recinfo.ATTRIBUTE10 = X_ATTRIBUTE10 )
	OR ( (Recinfo.ATTRIBUTE10 IS NULL)
	AND (X_ATTRIBUTE10 IS NULL)))

AND (   ( Recinfo.ATTRIBUTE11 = X_ATTRIBUTE11 )
	OR ( (Recinfo.ATTRIBUTE11 IS NULL)
	AND (X_ATTRIBUTE11 IS NULL)))

AND (   ( Recinfo.ATTRIBUTE12 = X_ATTRIBUTE12 )
	OR ( (Recinfo.ATTRIBUTE12 IS NULL)
	AND (X_ATTRIBUTE12 IS NULL)))

AND (   ( Recinfo.ATTRIBUTE13 = X_ATTRIBUTE13 )
	OR ( (Recinfo.ATTRIBUTE13 IS NULL)
	AND (X_ATTRIBUTE13 IS NULL)))

AND (   ( Recinfo.ATTRIBUTE14 = X_ATTRIBUTE14 )
	OR ( (Recinfo.ATTRIBUTE14 IS NULL)
	AND (X_ATTRIBUTE14 IS NULL)))

AND (   ( Recinfo.ATTRIBUTE15 = X_ATTRIBUTE15 )
	OR ( (Recinfo.ATTRIBUTE15 IS NULL)
	AND (X_ATTRIBUTE15 IS NULL)))

) then

return;

else

FND_MESSAGE.Set_Name('FND','FORM_RECORD_CHANGED');
APP_EXCEPTION.Raise_Exception;

end if;


 for Tlinfo in C1 loop
 if (Tlinfo.BASELANG = 'Y') then
   if (  (Tlinfo.NAME = X_NAME)
	 AND ((Tlinfo.DESCRIPTION = X_DESCRIPTION)
		OR (( Tlinfo.DESCRIPTION is null) AND (X_DESCRIPTION is null)))) then
		null;
   else
	FND_MESSAGE.Set_Name('FND', 'FORM_RECORD_CHANGED');
	APP_EXCEPTION.Raise_Exception;
   end if;
 end if;
end loop;

end Lock_Row;


PROCEDURE Update_Row(
  X_LIST_HEADER_ID       IN OUT     NUMBER
, X_CREATION_DATE                   DATE
, X_CREATED_BY                      NUMBER
, X_LAST_UPDATE_DATE                DATE
, X_LAST_UPDATED_BY                 NUMBER
, X_LAST_UPDATE_LOGIN               NUMBER
, X_PROGRAM_APPLICATION_ID          NUMBER
, X_PROGRAM_ID                      NUMBER
, X_PROGRAM_UPDATE_DATE             DATE
, X_REQUEST_ID                      NUMBER
, X_LIST_TYPE_CODE                  VARCHAR2
, X_START_DATE_ACTIVE               DATE
, X_END_DATE_ACTIVE                 DATE
, X_AUTOMATIC_FLAG                  VARCHAR2
, X_CURRENCY_CODE                   VARCHAR2
, X_ROUNDING_FACTOR                 NUMBER
, X_SHIP_METHOD_CODE                VARCHAR2
, X_FREIGHT_TERMS_CODE              VARCHAR2
, X_TERMS_ID                        NUMBER
, X_COMMENTS                        VARCHAR2
, X_DISCOUNT_LINES_FLAG             VARCHAR2
, X_GSA_INDICATOR                   VARCHAR2
, X_PRORATE_FLAG                    VARCHAR2
, X_CONTEXT                         VARCHAR2
, X_ATTRIBUTE1                      VARCHAR2
, X_ATTRIBUTE2                      VARCHAR2
, X_ATTRIBUTE3                      VARCHAR2
, X_ATTRIBUTE4                      VARCHAR2
, X_ATTRIBUTE5                      VARCHAR2
, X_ATTRIBUTE6                      VARCHAR2
, X_ATTRIBUTE7                      VARCHAR2
, X_ATTRIBUTE8                      VARCHAR2
, X_ATTRIBUTE9                      VARCHAR2
, X_ATTRIBUTE10                     VARCHAR2
, X_ATTRIBUTE11                     VARCHAR2
, X_ATTRIBUTE12                     VARCHAR2
, X_ATTRIBUTE13                     VARCHAR2
, X_ATTRIBUTE14                     VARCHAR2
, X_ATTRIBUTE15                     VARCHAR2
, X_NAME					      VARCHAR2
, X_DESCRIPTION			    	 VARCHAR2
) IS

begin
UPDATE QP_LIST_HEADERS_B
SET
 LIST_HEADER_ID 		= 		X_LIST_HEADER_ID
,CREATION_DATE 		= 		X_CREATION_DATE
,CREATED_BY 			= 		X_CREATED_BY
,LAST_UPDATE_DATE 		= 		X_LAST_UPDATE_DATE
,LAST_UPDATED_BY 		= 		X_LAST_UPDATED_BY
,LAST_UPDATE_LOGIN 		= 		X_LAST_UPDATE_LOGIN
,PROGRAM_APPLICATION_ID 	= 		X_PROGRAM_APPLICATION_ID
,PROGRAM_ID 			= 		X_PROGRAM_ID
,PROGRAM_UPDATE_DATE 	= 		X_PROGRAM_UPDATE_DATE
,REQUEST_ID 			= 		X_REQUEST_ID
,LIST_TYPE_CODE 		=  		X_LIST_TYPE_CODE
,START_DATE_ACTIVE 		= 		X_START_DATE_ACTIVE
,END_DATE_ACTIVE 		= 		X_END_DATE_ACTIVE
,AUTOMATIC_FLAG 		= 		X_AUTOMATIC_FLAG
,CURRENCY_CODE  		= 		X_CURRENCY_CODE
,ROUNDING_FACTOR 		= 		X_ROUNDING_FACTOR
,SHIP_METHOD_CODE 		= 		X_SHIP_METHOD_CODE
,FREIGHT_TERMS_CODE 	= 		X_FREIGHT_TERMS_CODE
,TERMS_ID 			= 		X_TERMS_ID
,COMMENTS                =         X_COMMENTS
,DISCOUNT_LINES_FLAG     =         X_DISCOUNT_LINES_FLAG
,GSA_INDICATOR           =         X_GSA_INDICATOR
,PRORATE_FLAG            =         X_PRORATE_FLAG
,CONTEXT 				= 		X_CONTEXT
,ATTRIBUTE1 			= 		X_ATTRIBUTE1
,ATTRIBUTE2 			= 		X_ATTRIBUTE2
,ATTRIBUTE3 			= 		X_ATTRIBUTE3
,ATTRIBUTE4 			= 		X_ATTRIBUTE4
,ATTRIBUTE5 			= 		X_ATTRIBUTE5
,ATTRIBUTE6 			= 		X_ATTRIBUTE6
,ATTRIBUTE7 			= 		X_ATTRIBUTE7
,ATTRIBUTE8 			= 		X_ATTRIBUTE8
,ATTRIBUTE9 			= 		X_ATTRIBUTE9
,ATTRIBUTE10 			= 		X_ATTRIBUTE10
,ATTRIBUTE11 			= 		X_ATTRIBUTE11
,ATTRIBUTE12 			= 		X_ATTRIBUTE12
,ATTRIBUTE13 			= 		X_ATTRIBUTE13
,ATTRIBUTE14 			= 		X_ATTRIBUTE14
,ATTRIBUTE15 			= 		X_ATTRIBUTE15

WHERE LIST_HEADER_ID = X_LIST_HEADER_ID;

if (SQL%NOTFOUND) then

Raise NO_DATA_FOUND;

end if;

update QP_LIST_HEADERS_TL set
NAME 				= X_NAME
, DESCRIPTION 			= X_DESCRIPTION
, LAST_UPDATE_DATE 		= X_LAST_UPDATE_DATE
, LAST_UPDATED_BY 		= X_LAST_UPDATED_BY
, LAST_UPDATE_LOGIN 	= X_LAST_UPDATE_LOGIN
, SOURCE_LANG 			= userenv('LANG')
where LIST_HEADER_ID 	= X_LIST_HEADER_ID
and userenv('LANG') in (LANGUAGE, SOURCE_LANG);

if (sql%notfound) then
raise no_data_found;
end if;



END Update_Row;




PROCEDURE Delete_Row(
X_LIST_HEADER_ID	NUMBER
) IS

begin

delete from QP_LIST_HEADERS_TL
where LIST_HEADER_ID = X_LIST_HEADER_ID;

if (SQL%NOTFOUND) then
	Raise NO_DATA_FOUND;
end if;

DELETE FROM QP_LIST_HEADERS_B
WHERE LIST_HEADER_ID = X_LIST_HEADER_ID;

if (SQL%NOTFOUND) then
	Raise NO_DATA_FOUND;
end if;

END Delete_Row;


Procedure Add_Language is

BEGIN

delete from QP_LIST_HEADERS_TL T
where not exists
(select NULL from QP_LIST_HEADERS_B B
where B.LIST_HEADER_ID = T.LIST_HEADER_ID);

update QP_LIST_HEADERS_TL T set
( NAME
, DESCRIPTION)
 = (select B.NAME , B.DESCRIPTION from QP_LIST_HEADERS_TL B
where B.LANGUAGE = T.SOURCE_LANG)
where ( T.LIST_HEADER_ID , T.LANGUAGE) in
(select SUBT.LIST_HEADER_ID , SUBT.LANGUAGE
from QP_LIST_HEADERS_TL SUBB, QP_LIST_HEADERS_TL SUBT
where SUBB.LIST_HEADER_ID = SUBT.LIST_HEADER_ID
and SUBB.LANGUAGE = SUBT.SOURCE_LANG
and (SUBB.NAME <> SUBT.DESCRIPTION
  or SUBB.DESCRIPTION <> SUBT.DESCRIPTION
  or (SUBB.DESCRIPTION is null and  SUBT.DESCRIPTION is not null)
  or (SUBB.DESCRIPTION is not null and SUBT.DESCRIPTION is null)
));

insert into QP_LIST_HEADERS_TL
( LIST_HEADER_ID
, NAME
, DESCRIPTION
, CREATION_DATE
, CREATED_BY
, LAST_UPDATE_DATE
, LAST_UPDATED_BY
, LAST_UPDATE_LOGIN
, LANGUAGE
, SOURCE_LANG
) select
B.LIST_HEADER_ID
, B.NAME
, B.DESCRIPTION
, B.CREATION_DATE
, B.CREATED_BY
, B.LAST_UPDATE_DATE
, B.LAST_UPDATED_BY
, B.LAST_UPDATE_LOGIN
, L.LANGUAGE_CODE
, B.SOURCE_LANG
from QP_LIST_HEADERS_TL B, FND_LANGUAGES L
where L.INSTALLED_FLAG in ('I','B')
and B.LANGUAGE = userenv('LANG')
and not exists
(select NULL from QP_LIST_HEADERS_TL T
where T.LIST_HEADER_ID = B.LIST_HEADER_ID
and T.LANGUAGE = L.LANGUAGE_CODE);


End Add_Language;


END QP_MODIFIER_LIST_PVT;

/
