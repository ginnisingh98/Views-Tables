--------------------------------------------------------
--  DDL for Package Body CSI_CTR_PROPERTY_READING_PKG
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE PACKAGE BODY "APPS"."CSI_CTR_PROPERTY_READING_PKG" as
/* $Header: csitrdpb.pls 120.0 2005/06/10 14:19:11 rktow noship $*/

G_PKG_NAME CONSTANT VARCHAR2(30):= 'CSI_CTR_PROPERTY_READING_PKG';
G_FILE_NAME CONSTANT VARCHAR2(12) := 'csitrdpb.pls';

PROCEDURE Insert_Row(
	px_COUNTER_PROP_VALUE_ID           IN OUT NOCOPY NUMBER
	,p_COUNTER_VALUE_ID                NUMBER
 	,p_COUNTER_PROPERTY_ID             NUMBER
 	,p_PROPERTY_VALUE                  VARCHAR2
 	,p_VALUE_TIMESTAMP                 DATE
 	,p_OBJECT_VERSION_NUMBER           NUMBER
 	,p_LAST_UPDATE_DATE                DATE
 	,p_LAST_UPDATED_BY                  NUMBER
 	,p_CREATION_DATE                   DATE
 	,p_CREATED_BY                      NUMBER
 	,p_LAST_UPDATE_LOGIN               NUMBER
 	,p_ATTRIBUTE1                      VARCHAR2
 	,p_ATTRIBUTE2                      VARCHAR2
 	,p_ATTRIBUTE3                      VARCHAR2
 	,p_ATTRIBUTE4                      VARCHAR2
 	,p_ATTRIBUTE5                      VARCHAR2
 	,p_ATTRIBUTE6                      VARCHAR2
 	,p_ATTRIBUTE7                      VARCHAR2
 	,p_ATTRIBUTE8                      VARCHAR2
 	,p_ATTRIBUTE9                      VARCHAR2
 	,p_ATTRIBUTE10                     VARCHAR2
 	,p_ATTRIBUTE11                     VARCHAR2
 	,p_ATTRIBUTE12                     VARCHAR2
 	,p_ATTRIBUTE13                     VARCHAR2
 	,p_ATTRIBUTE14                     VARCHAR2
 	,p_ATTRIBUTE15                     VARCHAR2
 	,p_ATTRIBUTE_CATEGORY              VARCHAR2
 	,p_MIGRATED_FLAG                   VARCHAR2
		) IS

	CURSOR C1 IS
	SELECT CSI_CTR_PROPERTY_READINGS_S.nextval
	FROM dual;
BEGIN
	IF (px_COUNTER_PROP_VALUE_ID IS NULL) OR (px_COUNTER_PROP_VALUE_ID = FND_API.G_MISS_NUM) THEN
		OPEN C1;
		FETCH C1 INTO px_COUNTER_PROP_VALUE_ID;
		CLOSE C1;
	END IF;

	INSERT INTO CSI_CTR_PROPERTY_READINGS(
		COUNTER_PROP_VALUE_ID
		,COUNTER_VALUE_ID
 		,COUNTER_PROPERTY_ID
 		,PROPERTY_VALUE
 		,VALUE_TIMESTAMP
 		,OBJECT_VERSION_NUMBER
 		,LAST_UPDATE_DATE
 		,LAST_UPDATED_BY
 		,CREATION_DATE
 		,CREATED_BY
 		,LAST_UPDATE_LOGIN
 		,ATTRIBUTE1
 		,ATTRIBUTE2
 		,ATTRIBUTE3
 		,ATTRIBUTE4
 		,ATTRIBUTE5
 		,ATTRIBUTE6
 		,ATTRIBUTE7
 		,ATTRIBUTE8
 		,ATTRIBUTE9
 		,ATTRIBUTE10
 		,ATTRIBUTE11
 		,ATTRIBUTE12
 		,ATTRIBUTE13
 		,ATTRIBUTE14
 		,ATTRIBUTE15
 		,ATTRIBUTE_CATEGORY
 		,MIGRATED_FLAG
	)
	VALUES(
		px_COUNTER_PROP_VALUE_ID
		,decode(p_COUNTER_VALUE_ID, FND_API.G_MISS_NUM, NULL, p_COUNTER_VALUE_ID)
 		,decode(p_COUNTER_PROPERTY_ID, FND_API.G_MISS_NUM, NULL, p_COUNTER_PROPERTY_ID)
 		,decode(p_PROPERTY_VALUE, FND_API.G_MISS_CHAR, NULL, p_PROPERTY_VALUE)
 		,decode(p_VALUE_TIMESTAMP, FND_API.G_MISS_DATE, TO_DATE(NULL), p_VALUE_TIMESTAMP)
 		,decode(p_OBJECT_VERSION_NUMBER, FND_API.G_MISS_NUM, NULL, p_OBJECT_VERSION_NUMBER)
 		,decode(p_LAST_UPDATE_DATE, FND_API.G_MISS_DATE, TO_DATE(NULL), p_LAST_UPDATE_DATE)
 		,decode(p_LAST_UPDATED_BY, FND_API.G_MISS_NUM, NULL, p_LAST_UPDATED_BY)
 		,decode(p_CREATION_DATE, FND_API.G_MISS_DATE, TO_DATE(NULL), p_CREATION_DATE)
 		,decode(p_CREATED_BY, FND_API.G_MISS_NUM, NULL, p_CREATED_BY)
 		,decode(p_LAST_UPDATE_LOGIN, FND_API.G_MISS_NUM, NULL, p_LAST_UPDATE_LOGIN)
 		,decode(p_ATTRIBUTE1, FND_API.G_MISS_CHAR, NULL, p_ATTRIBUTE1)
 		,decode(p_ATTRIBUTE2, FND_API.G_MISS_CHAR, NULL, p_ATTRIBUTE2)
 		,decode(p_ATTRIBUTE3, FND_API.G_MISS_CHAR, NULL, p_ATTRIBUTE3)
 		,decode(p_ATTRIBUTE4, FND_API.G_MISS_CHAR, NULL, p_ATTRIBUTE4)
 		,decode(p_ATTRIBUTE5, FND_API.G_MISS_CHAR, NULL, p_ATTRIBUTE5)
 		,decode(p_ATTRIBUTE6, FND_API.G_MISS_CHAR, NULL, p_ATTRIBUTE6)
 		,decode(p_ATTRIBUTE7, FND_API.G_MISS_CHAR, NULL, p_ATTRIBUTE7)
 		,decode(p_ATTRIBUTE8, FND_API.G_MISS_CHAR, NULL, p_ATTRIBUTE8)
 		,decode(p_ATTRIBUTE9, FND_API.G_MISS_CHAR, NULL, p_ATTRIBUTE9)
 		,decode(p_ATTRIBUTE10, FND_API.G_MISS_CHAR, NULL, p_ATTRIBUTE10)
 		,decode(p_ATTRIBUTE11, FND_API.G_MISS_CHAR, NULL, p_ATTRIBUTE11)
 		,decode(p_ATTRIBUTE12, FND_API.G_MISS_CHAR, NULL, p_ATTRIBUTE12)
 		,decode(p_ATTRIBUTE13, FND_API.G_MISS_CHAR, NULL, p_ATTRIBUTE13)
 		,decode(p_ATTRIBUTE14, FND_API.G_MISS_CHAR, NULL, p_ATTRIBUTE14)
 		,decode(p_ATTRIBUTE15, FND_API.G_MISS_CHAR, NULL, p_ATTRIBUTE15)
 		,decode(p_ATTRIBUTE_CATEGORY, FND_API.G_MISS_CHAR, NULL, p_ATTRIBUTE_CATEGORY)
 		,decode(p_MIGRATED_FLAG, FND_API.G_MISS_CHAR, NULL, p_MIGRATED_FLAG)
	);

END	Insert_Row;

PROCEDURE Update_Row(
   p_COUNTER_PROP_VALUE_ID           NUMBER
   ,p_COUNTER_VALUE_ID                NUMBER
   ,p_COUNTER_PROPERTY_ID             NUMBER
   ,p_PROPERTY_VALUE                  VARCHAR2
   ,p_VALUE_TIMESTAMP                 DATE
   ,p_OBJECT_VERSION_NUMBER           NUMBER
   ,p_LAST_UPDATE_DATE                DATE
   ,p_LAST_UPDATED_BY                  NUMBER
   ,p_CREATION_DATE                   DATE
   ,p_CREATED_BY                      NUMBER
   ,p_LAST_UPDATE_LOGIN               NUMBER
   ,p_ATTRIBUTE1                      VARCHAR2
   ,p_ATTRIBUTE2                      VARCHAR2
   ,p_ATTRIBUTE3                      VARCHAR2
   ,p_ATTRIBUTE4                      VARCHAR2
   ,p_ATTRIBUTE5                      VARCHAR2
   ,p_ATTRIBUTE6                      VARCHAR2
   ,p_ATTRIBUTE7                      VARCHAR2
   ,p_ATTRIBUTE8                      VARCHAR2
   ,p_ATTRIBUTE9                      VARCHAR2
   ,p_ATTRIBUTE10                     VARCHAR2
   ,p_ATTRIBUTE11                     VARCHAR2
   ,p_ATTRIBUTE12                     VARCHAR2
   ,p_ATTRIBUTE13                     VARCHAR2
   ,p_ATTRIBUTE14                     VARCHAR2
   ,p_ATTRIBUTE15                     VARCHAR2
   ,p_ATTRIBUTE_CATEGORY              VARCHAR2
   ,p_MIGRATED_FLAG                   VARCHAR2
   ) IS
BEGIN
   UPDATE CSI_CTR_PROPERTY_READINGS
   SET
      COUNTER_VALUE_ID = decode(p_COUNTER_VALUE_ID, NULL, COUNTER_VALUE_ID, FND_API.G_MISS_NUM, NULL, p_COUNTER_VALUE_ID)
      ,COUNTER_PROPERTY_ID = decode(p_COUNTER_PROPERTY_ID, NULL, COUNTER_PROPERTY_ID, FND_API.G_MISS_NUM, NULL, p_COUNTER_PROPERTY_ID)
      ,PROPERTY_VALUE = decode(p_PROPERTY_VALUE, NULL, PROPERTY_VALUE, FND_API.G_MISS_CHAR, NULL, p_PROPERTY_VALUE)
      ,VALUE_TIMESTAMP = decode(p_VALUE_TIMESTAMP, NULL, VALUE_TIMESTAMP, FND_API.G_MISS_DATE, NULL, p_VALUE_TIMESTAMP)
      ,OBJECT_VERSION_NUMBER = decode(p_OBJECT_VERSION_NUMBER, NULL, OBJECT_VERSION_NUMBER, FND_API.G_MISS_NUM, NULL, p_OBJECT_VERSION_NUMBER)
      ,LAST_UPDATE_DATE = decode(p_LAST_UPDATE_DATE, NULL, LAST_UPDATE_DATE, FND_API.G_MISS_DATE, NULL, p_LAST_UPDATE_DATE)
      ,LAST_UPDATED_BY = decode(p_LAST_UPDATED_BY, NULL, LAST_UPDATED_BY, FND_API.G_MISS_NUM, NULL, p_LAST_UPDATED_BY)
      ,CREATION_DATE = decode(p_CREATION_DATE, NULL, CREATION_DATE, FND_API.G_MISS_DATE, NULL, p_CREATION_DATE)
      ,CREATED_BY = decode(p_CREATED_BY, NULL, CREATED_BY, FND_API.G_MISS_NUM, NULL, p_CREATED_BY)
      ,LAST_UPDATE_LOGIN = decode(p_LAST_UPDATE_LOGIN, NULL, LAST_UPDATE_LOGIN, FND_API.G_MISS_NUM, NULL, p_LAST_UPDATE_LOGIN)
      ,ATTRIBUTE1 = decode(p_ATTRIBUTE1, NULL, ATTRIBUTE1, FND_API.G_MISS_CHAR, NULL, p_ATTRIBUTE1)
      ,ATTRIBUTE2 = decode(p_ATTRIBUTE2, NULL, ATTRIBUTE2, FND_API.G_MISS_CHAR, NULL, p_ATTRIBUTE2)
      ,ATTRIBUTE3 = decode(p_ATTRIBUTE3, NULL, ATTRIBUTE3, FND_API.G_MISS_CHAR, NULL, p_ATTRIBUTE3)
      ,ATTRIBUTE4 = decode(p_ATTRIBUTE4, NULL, ATTRIBUTE4, FND_API.G_MISS_CHAR, NULL, p_ATTRIBUTE4)
      ,ATTRIBUTE5 = decode(p_ATTRIBUTE5, NULL, ATTRIBUTE5, FND_API.G_MISS_CHAR, NULL, p_ATTRIBUTE5)
      ,ATTRIBUTE6 = decode(p_ATTRIBUTE6, NULL, ATTRIBUTE6, FND_API.G_MISS_CHAR, NULL, p_ATTRIBUTE6)
      ,ATTRIBUTE7 = decode(p_ATTRIBUTE7, NULL, ATTRIBUTE7, FND_API.G_MISS_CHAR, NULL, p_ATTRIBUTE7)
      ,ATTRIBUTE8 = decode(p_ATTRIBUTE8, NULL, ATTRIBUTE8, FND_API.G_MISS_CHAR, NULL, p_ATTRIBUTE8)
      ,ATTRIBUTE9 = decode(p_ATTRIBUTE9, NULL, ATTRIBUTE9, FND_API.G_MISS_CHAR, NULL, p_ATTRIBUTE9)
      ,ATTRIBUTE10 = decode(p_ATTRIBUTE10, NULL, ATTRIBUTE10, FND_API.G_MISS_CHAR, NULL, p_ATTRIBUTE10)
      ,ATTRIBUTE11 = decode(p_ATTRIBUTE11, NULL, ATTRIBUTE11, FND_API.G_MISS_CHAR, NULL, p_ATTRIBUTE11)
      ,ATTRIBUTE12 = decode(p_ATTRIBUTE12, NULL, ATTRIBUTE12, FND_API.G_MISS_CHAR, NULL, p_ATTRIBUTE12)
      ,ATTRIBUTE13 = decode(p_ATTRIBUTE13, NULL, ATTRIBUTE13, FND_API.G_MISS_CHAR, NULL, p_ATTRIBUTE13)
      ,ATTRIBUTE14 = decode(p_ATTRIBUTE14, NULL, ATTRIBUTE14, FND_API.G_MISS_CHAR, NULL, p_ATTRIBUTE14)
      ,ATTRIBUTE15 = decode(p_ATTRIBUTE15, NULL, ATTRIBUTE15, FND_API.G_MISS_CHAR, NULL, p_ATTRIBUTE15)
      ,ATTRIBUTE_CATEGORY = decode(p_ATTRIBUTE_CATEGORY, NULL, ATTRIBUTE_CATEGORY, FND_API.G_MISS_CHAR, NULL, p_ATTRIBUTE_CATEGORY)
      ,MIGRATED_FLAG = decode(p_MIGRATED_FLAG, NULL, MIGRATED_FLAG, FND_API.G_MISS_CHAR, NULL, p_MIGRATED_FLAG)
   WHERE COUNTER_PROP_VALUE_ID = p_COUNTER_PROP_VALUE_ID;

   If (SQL%NOTFOUND) then
      RAISE NO_DATA_FOUND;
   End If;
END	Update_Row;

PROCEDURE Lock_Row(
	p_COUNTER_PROP_VALUE_ID           NUMBER
	,p_COUNTER_VALUE_ID                NUMBER
 	,p_COUNTER_PROPERTY_ID             NUMBER
 	,p_PROPERTY_VALUE                  VARCHAR2
 	,p_VALUE_TIMESTAMP                 DATE
 	,p_OBJECT_VERSION_NUMBER           NUMBER
 	,p_LAST_UPDATE_DATE                DATE
 	,p_LAST_UPDATED_BY                  NUMBER
 	,p_CREATION_DATE                   DATE
 	,p_CREATED_BY                      NUMBER
 	,p_LAST_UPDATE_LOGIN               NUMBER
 	,p_ATTRIBUTE1                      VARCHAR2
 	,p_ATTRIBUTE2                      VARCHAR2
 	,p_ATTRIBUTE3                      VARCHAR2
 	,p_ATTRIBUTE4                      VARCHAR2
 	,p_ATTRIBUTE5                      VARCHAR2
 	,p_ATTRIBUTE6                      VARCHAR2
 	,p_ATTRIBUTE7                      VARCHAR2
 	,p_ATTRIBUTE8                      VARCHAR2
 	,p_ATTRIBUTE9                      VARCHAR2
 	,p_ATTRIBUTE10                     VARCHAR2
 	,p_ATTRIBUTE11                     VARCHAR2
 	,p_ATTRIBUTE12                     VARCHAR2
 	,p_ATTRIBUTE13                     VARCHAR2
 	,p_ATTRIBUTE14                     VARCHAR2
 	,p_ATTRIBUTE15                     VARCHAR2
 	,p_ATTRIBUTE_CATEGORY              VARCHAR2
 	,p_MIGRATED_FLAG                   VARCHAR2
        ) IS

	CURSOR C1 IS
	SELECT *
	FROM CSI_CTR_PROPERTY_READINGS
	WHERE COUNTER_PROP_VALUE_ID = p_COUNTER_PROP_VALUE_ID
	FOR UPDATE of COUNTER_PROP_VALUE_ID NOWAIT;
	Recinfo C1%ROWTYPE;
BEGIN
	OPEN C1;
	FETCH C1 INTO Recinfo;
	IF (C1%NOTFOUND) THEN
      CLOSE C1;
      FND_MESSAGE.SET_NAME('FND', 'FORM_RECORD_DELETED');
      APP_EXCEPTION.RAISE_EXCEPTION;
   END IF;
   CLOSE C1;

	IF (
		(Recinfo.COUNTER_PROP_VALUE_ID = p_COUNTER_PROP_VALUE_ID)
		AND ((Recinfo.COUNTER_VALUE_ID = p_COUNTER_VALUE_ID) OR ((Recinfo.COUNTER_VALUE_ID IS NULL) AND (p_COUNTER_VALUE_ID IS NULL)))
 		AND ((Recinfo.COUNTER_PROPERTY_ID = p_COUNTER_PROPERTY_ID) OR ((Recinfo.COUNTER_PROPERTY_ID IS NULL) AND (p_COUNTER_PROPERTY_ID IS NULL)))
 		AND ((Recinfo.PROPERTY_VALUE = p_PROPERTY_VALUE) OR ((Recinfo.PROPERTY_VALUE IS NULL) AND (p_PROPERTY_VALUE IS NULL)))
 		AND ((Recinfo.VALUE_TIMESTAMP = p_VALUE_TIMESTAMP) OR ((Recinfo.VALUE_TIMESTAMP IS NULL) AND (p_VALUE_TIMESTAMP IS NULL)))
 		AND ((Recinfo.OBJECT_VERSION_NUMBER = p_OBJECT_VERSION_NUMBER) OR ((Recinfo.OBJECT_VERSION_NUMBER IS NULL) AND (p_OBJECT_VERSION_NUMBER IS NULL)))
 		AND ((Recinfo.LAST_UPDATE_DATE = p_LAST_UPDATE_DATE) OR ((Recinfo.LAST_UPDATE_DATE IS NULL) AND (p_LAST_UPDATE_DATE IS NULL)))
 		AND ((Recinfo.LAST_UPDATED_BY = p_LAST_UPDATED_BY) OR ((Recinfo.LAST_UPDATED_BY IS NULL) AND (p_LAST_UPDATED_BY IS NULL)))
 		AND ((Recinfo.CREATION_DATE = p_CREATION_DATE) OR ((Recinfo.CREATION_DATE IS NULL) AND (p_CREATION_DATE IS NULL)))
 		AND ((Recinfo.CREATED_BY = p_CREATED_BY) OR ((Recinfo.CREATED_BY IS NULL) AND (p_CREATED_BY IS NULL)))
 		AND ((Recinfo.LAST_UPDATE_LOGIN = p_LAST_UPDATE_LOGIN) OR ((Recinfo.LAST_UPDATE_LOGIN IS NULL) AND (p_LAST_UPDATE_LOGIN IS NULL)))
 		AND ((Recinfo.ATTRIBUTE1 = p_ATTRIBUTE1) OR ((Recinfo.ATTRIBUTE1 IS NULL) AND (p_ATTRIBUTE1 IS NULL)))
 		AND ((Recinfo.ATTRIBUTE2 = p_ATTRIBUTE2) OR ((Recinfo.ATTRIBUTE2 IS NULL) AND (p_ATTRIBUTE2 IS NULL)))
 		AND ((Recinfo.ATTRIBUTE3 = p_ATTRIBUTE3) OR ((Recinfo.ATTRIBUTE3 IS NULL) AND (p_ATTRIBUTE3 IS NULL)))
 		AND ((Recinfo.ATTRIBUTE4 = p_ATTRIBUTE4) OR ((Recinfo.ATTRIBUTE4 IS NULL) AND (p_ATTRIBUTE4 IS NULL)))
 		AND ((Recinfo.ATTRIBUTE5 = p_ATTRIBUTE5) OR ((Recinfo.ATTRIBUTE5 IS NULL) AND (p_ATTRIBUTE5 IS NULL)))
 		AND ((Recinfo.ATTRIBUTE6 = p_ATTRIBUTE6) OR ((Recinfo.ATTRIBUTE6 IS NULL) AND (p_ATTRIBUTE6 IS NULL)))
 		AND ((Recinfo.ATTRIBUTE7 = p_ATTRIBUTE7) OR ((Recinfo.ATTRIBUTE7 IS NULL) AND (p_ATTRIBUTE7 IS NULL)))
 		AND ((Recinfo.ATTRIBUTE8 = p_ATTRIBUTE8) OR ((Recinfo.ATTRIBUTE8 IS NULL) AND (p_ATTRIBUTE8 IS NULL)))
 		AND ((Recinfo.ATTRIBUTE9 = p_ATTRIBUTE9) OR ((Recinfo.ATTRIBUTE9 IS NULL) AND (p_ATTRIBUTE9 IS NULL)))
 		AND ((Recinfo.ATTRIBUTE10 = p_ATTRIBUTE10) OR ((Recinfo.ATTRIBUTE10 IS NULL) AND (p_ATTRIBUTE10 IS NULL)))
 		AND ((Recinfo.ATTRIBUTE11 = p_ATTRIBUTE11) OR ((Recinfo.ATTRIBUTE11 IS NULL) AND (p_ATTRIBUTE11 IS NULL)))
 		AND ((Recinfo.ATTRIBUTE12 = p_ATTRIBUTE12) OR ((Recinfo.ATTRIBUTE12 IS NULL) AND (p_ATTRIBUTE12 IS NULL)))
 		AND ((Recinfo.ATTRIBUTE13 = p_ATTRIBUTE13) OR ((Recinfo.ATTRIBUTE13 IS NULL) AND (p_ATTRIBUTE13 IS NULL)))
 		AND ((Recinfo.ATTRIBUTE14 = p_ATTRIBUTE14) OR ((Recinfo.ATTRIBUTE14 IS NULL) AND (p_ATTRIBUTE14 IS NULL)))
 		AND ((Recinfo.ATTRIBUTE15 = p_ATTRIBUTE15) OR ((Recinfo.ATTRIBUTE15 IS NULL) AND (p_ATTRIBUTE15 IS NULL)))
 		AND ((Recinfo.ATTRIBUTE_CATEGORY = p_ATTRIBUTE_CATEGORY) OR ((Recinfo.ATTRIBUTE_CATEGORY IS NULL) AND (p_ATTRIBUTE_CATEGORY IS NULL)))
 		AND ((Recinfo.MIGRATED_FLAG = p_MIGRATED_FLAG) OR ((Recinfo.MIGRATED_FLAG IS NULL) AND (p_MIGRATED_FLAG IS NULL)))
	) THEN
		return;
	ELSE
		FND_MESSAGE.SET_NAME('FND', 'FORM_RECORD_CHANGED');
		APP_EXCEPTION.RAISE_EXCEPTION;
	END IF;

END	Lock_Row;

PROCEDURE Delete_Row(
	p_COUNTER_PROP_VALUE_ID           NUMBER
	) IS
BEGIN
	DELETE FROM CSI_CTR_PROPERTY_READINGS
	WHERE COUNTER_PROP_VALUE_ID = p_COUNTER_PROP_VALUE_ID;

	IF (SQL%NOTFOUND) then
		RAISE NO_DATA_FOUND;
	END IF;
END	Delete_Row;

End CSI_CTR_PROPERTY_READING_PKG;

/
