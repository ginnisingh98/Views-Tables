--------------------------------------------------------
--  DDL for Package CZ_LOGIC_GEN
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE PACKAGE "APPS"."CZ_LOGIC_GEN" AUTHID CURRENT_USER AS
/*	$Header: czlcegns.pls 120.4 2007/01/04 17:29:37 asiaston ship $		*/
---------------------------------------------------------------------------------------
VersionString                CONSTANT VARCHAR2(25) := '11.5.10.20.1';
EffDateFormat                CONSTANT VARCHAR2(25) := 'YYYY/MM/DD/HH24:MI:SS';
EffUsagePrefix               CONSTANT VARCHAR2(25) := '0x';
EpochBeginDate               CONSTANT DATE         := CZ_UTILS.EPOCH_BEGIN_;
EpochEndDate                 CONSTANT DATE         := CZ_UTILS.EPOCH_END_;
NewLine                      CONSTANT VARCHAR2(25) := FND_GLOBAL.NEWLINE;
AnyUsageMask                 CONSTANT VARCHAR2(16) := '0000000000000000';
NlsNumericCharacters         CONSTANT VARCHAR2(16) := '.,';
---------------------------------------------------------------------------------------
ORACLE_OBJECT_ALREADY_EXISTS CONSTANT PLS_INTEGER := -955;
ORACLE_OBJECT_IN_USE         CONSTANT PLS_INTEGER := -14452;
DBMS_SQL_MAX_BUFFER_SIZE     CONSTANT PLS_INTEGER := 65535;
MAX_NUMBER_OF_OPTIONS        CONSTANT PLS_INTEGER := 4096; --not used (bug #1746927)
NEVER_EXISTS_ID              CONSTANT PLS_INTEGER := -9999;
DEFAULT_COMMIT_BLOCK_SIZE    CONSTANT PLS_INTEGER := 500;
LOOP_DETECTED_LOOPS_NUMBER   CONSTANT PLS_INTEGER := 5000;
MAXIMUM_INDEX_LENGTH         CONSTANT PLS_INTEGER := 2000;
---------------------------------------------------------------------------------------
MATH_CONSTANT_PI             CONSTANT VARCHAR2(100) :=
 '3.14159265358979323846264338327950288419716939937510582097494459230781640628620899862803';
MATH_CONSTANT_E              CONSTANT VARCHAR2(100) :=
 '2.71828182845904523536028747135266249775724709369995957496696762772407663035354759457138';
---------------------------------------------------------------------------------------
--cz_db_settings string values, must be in lower case
DBSETTINGS_SECTION_NAME      CONSTANT VARCHAR2(25) := 'logicgen';
COMMIT_BLOCK_SETTING_ID      CONSTANT VARCHAR2(25) := 'commitblocksize';
OPTIMIZE_NOTTRUE_SETTING_ID  CONSTANT VARCHAR2(25) := 'optimizenottrue';
OPTIMIZE_ALLANYOF_SETTING_ID CONSTANT VARCHAR2(25) := 'optimizeallanyof';
CHILDREN_ORDER_SETTING_ID    CONSTANT VARCHAR2(25) := 'changechildrenorder';
GATED_COMBO_SETTING_ID       CONSTANT VARCHAR2(25) := 'generategatedcombo';
STOP_ON_ERROR_SETTING_ID     CONSTANT VARCHAR2(25) := 'stoponfatalruleerror';
UPDATED_ONLY_SETTING_ID      CONSTANT VARCHAR2(25) := 'generateupdatedonly';
---------------------------------------------------------------------------------------
PACKING_GENERIC              CONSTANT PLS_INTEGER := 0;
PACKING_EFFECTIVITY          CONSTANT PLS_INTEGER := 1;
---------------------------------------------------------------------------------------
BOOLEAN_TRUE_REPRESENTATION  CONSTANT VARCHAR2(1) := '1';
BOOLEAN_FALSE_REPRESENTATION CONSTANT VARCHAR2(1) := '0';
---------------------------------------------------------------------------------------
OPTIMIZATION_UNKNOWN         CONSTANT PLS_INTEGER := -1;
OPTIMIZATION_REQUESTED       CONSTANT PLS_INTEGER :=  1;
OPTIMIZATION_COMPLETED       CONSTANT PLS_INTEGER :=  0;
---------------------------------------------------------------------------------------
GENERATE_SCOPE_ERROR         CONSTANT PLS_INTEGER := -1;
GENERATE_CONTRIBUTE          CONSTANT PLS_INTEGER :=  0;
GENERATE_INCREMENT           CONSTANT PLS_INTEGER :=  1;
GENERATE_DYNAMIC             CONSTANT PLS_INTEGER :=  2;
---------------------------------------------------------------------------------------
MODEL_TYPE_CONTAINER_MODEL   CONSTANT VARCHAR2(1) := 'N';
MODEL_TYPE_PTO_MODEL         CONSTANT VARCHAR2(1) := 'A';
MODEL_TYPE_ATO_MODEL         CONSTANT VARCHAR2(1) := 'P';
---------------------------------------------------------------------------------------
PS_NODE_TYPE_PRODUCT         CONSTANT PLS_INTEGER := 258;
PS_NODE_TYPE_COMPONENT       CONSTANT PLS_INTEGER := 259;
PS_NODE_TYPE_FEATUREGROUP    CONSTANT PLS_INTEGER := 260;
PS_NODE_TYPE_FEATURE         CONSTANT PLS_INTEGER := 261;
PS_NODE_TYPE_OPTION          CONSTANT PLS_INTEGER := 262;
PS_NODE_TYPE_REFERENCE       CONSTANT PLS_INTEGER := 263;
PS_NODE_TYPE_CONNECTOR       CONSTANT PLS_INTEGER := 264;
PS_NODE_TYPE_TOTAL           CONSTANT PLS_INTEGER := 272;
PS_NODE_TYPE_RESOURCE        CONSTANT PLS_INTEGER := 273;
PS_NODE_TYPE_BOM_MODEL       CONSTANT PLS_INTEGER := 436;
PS_NODE_TYPE_BOM_OPTIONCLASS CONSTANT PLS_INTEGER := 437;
PS_NODE_TYPE_BOM_STANDARD    CONSTANT PLS_INTEGER := 438;
---------------------------------------------------------------------------------------
PS_NODE_FEATURE_TYPE_OPTION  CONSTANT PLS_INTEGER := 0;
PS_NODE_FEATURE_TYPE_INTEGER CONSTANT PLS_INTEGER := 1;
PS_NODE_FEATURE_TYPE_FLOAT   CONSTANT PLS_INTEGER := 2;
PS_NODE_FEATURE_TYPE_BOOLEAN CONSTANT PLS_INTEGER := 3;
PS_NODE_FEATURE_TYPE_STRING  CONSTANT PLS_INTEGER := 4;
---------------------------------------------------------------------------------------
EXPL_NODE_TYPE_UNDEFINED     CONSTANT PLS_INTEGER := 0;
EXPL_NODE_TYPE_OPTIONAL      CONSTANT PLS_INTEGER := 1;  --A
EXPL_NODE_TYPE_MANDATORY     CONSTANT PLS_INTEGER := 2;  --B
EXPL_NODE_TYPE_CONNECTOR     CONSTANT PLS_INTEGER := 3;  --C
EXPL_NODE_TYPE_INSTANTIABLE  CONSTANT PLS_INTEGER := 4;  --D
---------------------------------------------------------------------------------------
LOGIC_NET_TYPE_STRUCTURE     CONSTANT PLS_INTEGER := 1;
LOGIC_NET_TYPE_MANDATORY     CONSTANT PLS_INTEGER := 2;
LOGIC_NET_TYPE_CONDITIONAL   CONSTANT PLS_INTEGER := 3;
LOGIC_NET_TYPE_NETWORK       CONSTANT PLS_INTEGER := 4;
---------------------------------------------------------------------------------------
EXPR_NODE_TYPE_NODE          CONSTANT PLS_INTEGER := 205;
EXPR_NODE_TYPE_FEATPROP      CONSTANT PLS_INTEGER := 204;
EXPR_NODE_TYPE_OPERATOR      CONSTANT PLS_INTEGER := 200;
EXPR_NODE_TYPE_PUNCT         CONSTANT PLS_INTEGER := 208;
EXPR_NODE_TYPE_LITERAL       CONSTANT PLS_INTEGER := 201;
EXPR_NODE_TYPE_SYSPROP       CONSTANT PLS_INTEGER := 210;
EXPR_NODE_TYPE_PROP          CONSTANT PLS_INTEGER := 207;
EXPR_NODE_TYPE_COUNT         CONSTANT PLS_INTEGER := 209;
EXPR_NODE_TYPE_CONSTANT      CONSTANT PLS_INTEGER := 211;
---------------------------------------------------------------------------------------
EXPR_SUBTYPE_CONSTANT_E      CONSTANT PLS_INTEGER := 0;
EXPR_SUBTYPE_CONSTANT_PI     CONSTANT PLS_INTEGER := 1;
---------------------------------------------------------------------------------------
RULE_SYS_PROP_NAME           CONSTANT VARCHAR2(30) := 'NAME';
RULE_SYS_PROP_DESCRIPTION    CONSTANT VARCHAR2(30) := 'DESCRIPTION';
RULE_SYS_PROP_PARENT         CONSTANT VARCHAR2(30) := 'PARENT';
RULE_SYS_PROP_OPTIONS        CONSTANT VARCHAR2(30) := 'OPTIONS';
RULE_SYS_PROP_MINVALUE       CONSTANT VARCHAR2(30) := 'MINVALUE';
RULE_SYS_PROP_MAXVALUE       CONSTANT VARCHAR2(30) := 'MAXVALUE';
RULE_SYS_PROP_MINQUANTITY    CONSTANT VARCHAR2(30) := 'MINQUANTITY';
RULE_SYS_PROP_MAXQUANTITY    CONSTANT VARCHAR2(30) := 'MAXQUANTITY';
RULE_SYS_PROP_MINSELECTED    CONSTANT VARCHAR2(30) := 'MINSELECTED';
RULE_SYS_PROP_MAXSELECTED    CONSTANT VARCHAR2(30) := 'MAXSELECTED';
RULE_SYS_PROP_MININSTANCE    CONSTANT VARCHAR2(30) := 'MININSTANCES';
RULE_SYS_PROP_MAXINSTANCE    CONSTANT VARCHAR2(30) := 'MAXINSTANCES';
RULE_SYS_PROP_SELECTION      CONSTANT VARCHAR2(30) := 'SELECTION';
RULE_SYS_PROP_STATE          CONSTANT VARCHAR2(30) := 'STATE';
RULE_SYS_PROP_VALUE          CONSTANT VARCHAR2(30) := 'VALUE';
RULE_SYS_PROP_QUANTITY       CONSTANT VARCHAR2(30) := 'QUANTITY';
RULE_SYS_PROP_INSTANCECOUNT  CONSTANT VARCHAR2(30) := 'INSTANCECOUNT';
---------------------------------------------------------------------------------------
RULE_OPERATOR_REQUIRES       CONSTANT PLS_INTEGER := 1;
RULE_OPERATOR_IMPLIES        CONSTANT PLS_INTEGER := 2;
RULE_OPERATOR_EXCLUDES       CONSTANT PLS_INTEGER := 3;
RULE_OPERATOR_NEGATES        CONSTANT PLS_INTEGER := 4;
RULE_OPERATOR_DEFAULTS       CONSTANT PLS_INTEGER := 5;
RULE_OPERATOR_SETS           CONSTANT PLS_INTEGER := 707;
RULE_OPERATOR_CONTRIBUTES    CONSTANT PLS_INTEGER := 708;
RULE_OPERATOR_SUPPLIES       CONSTANT PLS_INTEGER := 709;
RULE_OPERATOR_CONSUMES       CONSTANT PLS_INTEGER := 710;
---------------------------------------------------------------------------------------
OPERATOR_BEGINSWITH          CONSTANT PLS_INTEGER := 300;
OPERATOR_ENDSWITH            CONSTANT PLS_INTEGER := 301;
OPERATOR_CONTAINS            CONSTANT PLS_INTEGER := 303;
OPERATOR_LIKE                CONSTANT PLS_INTEGER := 304;
OPERATOR_MATCHES             CONSTANT PLS_INTEGER := 305;
OPERATOR_ANYOF               CONSTANT PLS_INTEGER := 306;
OPERATOR_ALLOF               CONSTANT PLS_INTEGER := 307;
OPERATOR_AND                 CONSTANT PLS_INTEGER := 316;
OPERATOR_OR                  CONSTANT PLS_INTEGER := 317;
OPERATOR_EQUALS              CONSTANT PLS_INTEGER := 318;
OPERATOR_NOTEQUALS           CONSTANT PLS_INTEGER := 320;
OPERATOR_MIN                 CONSTANT PLS_INTEGER := 321;
OPERATOR_MAX                 CONSTANT PLS_INTEGER := 322;
OPERATOR_TRUNCATE            CONSTANT PLS_INTEGER := 323;
OPERATOR_OPTIONSOF           CONSTANT PLS_INTEGER := 324;
OPERATOR_GT                  CONSTANT PLS_INTEGER := 350;
OPERATOR_LT                  CONSTANT PLS_INTEGER := 351;
OPERATOR_GE                  CONSTANT PLS_INTEGER := 352;
OPERATOR_LE                  CONSTANT PLS_INTEGER := 353;
OPERATOR_NOTTRUE             CONSTANT PLS_INTEGER := 360;
OPERATOR_DOESNOTBEGINWITH    CONSTANT PLS_INTEGER := 361;
OPERATOR_DOESNOTENDWITH      CONSTANT PLS_INTEGER := 362;
OPERATOR_DOESNOTCONTAIN      CONSTANT PLS_INTEGER := 363;
OPERATOR_NOTLIKE             CONSTANT PLS_INTEGER := 364;
OPERATOR_CONCAT              CONSTANT PLS_INTEGER := 365;
OPERATOR_TOTEXT              CONSTANT PLS_INTEGER := 366;
OPERATOR_NONE                CONSTANT PLS_INTEGER := 399;
OPERATOR_ADD                 CONSTANT PLS_INTEGER := 401;
OPERATOR_SUB                 CONSTANT PLS_INTEGER := 402;
OPERATOR_MULT                CONSTANT PLS_INTEGER := 403;
OPERATOR_DIV                 CONSTANT PLS_INTEGER := 404;
OPERATOR_CEILING             CONSTANT PLS_INTEGER := 405;
OPERATOR_FLOOR               CONSTANT PLS_INTEGER := 406;
OPERATOR_ROUND               CONSTANT PLS_INTEGER := 407;
OPERATOR_COS                 CONSTANT PLS_INTEGER := 431;
OPERATOR_ACOS                CONSTANT PLS_INTEGER := 432;
OPERATOR_COSH                CONSTANT PLS_INTEGER := 433;
OPERATOR_SIN                 CONSTANT PLS_INTEGER := 434;
OPERATOR_ASIN                CONSTANT PLS_INTEGER := 435;
OPERATOR_SINH                CONSTANT PLS_INTEGER := 436;
OPERATOR_TAN                 CONSTANT PLS_INTEGER := 437;
OPERATOR_ATAN                CONSTANT PLS_INTEGER := 438;
OPERATOR_TANH                CONSTANT PLS_INTEGER := 439;
OPERATOR_LOG                 CONSTANT PLS_INTEGER := 414;
OPERATOR_LOG10               CONSTANT PLS_INTEGER := 415;
OPERATOR_EXP                 CONSTANT PLS_INTEGER := 416;
OPERATOR_ABS                 CONSTANT PLS_INTEGER := 417;
OPERATOR_SQRT                CONSTANT PLS_INTEGER := 418;
OPERATOR_MATHDIV             CONSTANT PLS_INTEGER := 408;
OPERATOR_POW                 CONSTANT PLS_INTEGER := 410;
OPERATOR_ATAN2               CONSTANT PLS_INTEGER := 430;
OPERATOR_MOD                 CONSTANT PLS_INTEGER := 409;
OPERATOR_ROUNDTONEAREST      CONSTANT PLS_INTEGER := 411;
OPERATOR_ROUNDUPTONEAREST    CONSTANT PLS_INTEGER := 413;
OPERATOR_ROUNDDOWNTONEAREST  CONSTANT PLS_INTEGER := 412;
OPERATOR_POW_INT             CONSTANT PLS_INTEGER := 551;
OPERATOR_NOT                 CONSTANT PLS_INTEGER := 552;
OPERATOR_EQUALS_INT          CONSTANT PLS_INTEGER := 553;
OPERATOR_NOTEQUALS_INT       CONSTANT PLS_INTEGER := 554;
OPERATOR_GT_INT              CONSTANT PLS_INTEGER :=  -1;
OPERATOR_LT_INT              CONSTANT PLS_INTEGER :=  -1;
OPERATOR_GE_INT              CONSTANT PLS_INTEGER :=  -1;
OPERATOR_LE_INT              CONSTANT PLS_INTEGER :=  -1;
OPERATOR_ADD_INT             CONSTANT PLS_INTEGER :=  -1;
OPERATOR_SUB_INT             CONSTANT PLS_INTEGER :=  -1;
OPERATOR_MULT_INT            CONSTANT PLS_INTEGER :=  -1;
OPERATOR_VAL                 CONSTANT PLS_INTEGER :=  -1;
OPERATOR_DOT                 CONSTANT PLS_INTEGER :=  -1;
---------------------------------------------------------------------------------------
TEMPLATE_ANYTRUE             CONSTANT PLS_INTEGER := 306;
TEMPLATE_ALLTRUE             CONSTANT PLS_INTEGER := 307;
---------------------------------------------------------------------------------------
RULE_TYPE_LOGIC_RULE         CONSTANT PLS_INTEGER := 21;
RULE_TYPE_NUMERIC_RULE       CONSTANT PLS_INTEGER := 22;
RULE_TYPE_COMPAT_RULE        CONSTANT PLS_INTEGER := 23;
RULE_TYPE_COMPAT_TABLE       CONSTANT PLS_INTEGER := 24;
RULE_TYPE_COMPARISON_RULE    CONSTANT PLS_INTEGER := 27;
RULE_TYPE_FUNC_COMP          CONSTANT PLS_INTEGER := 29;
RULE_TYPE_DESIGNCHART_RULE   CONSTANT PLS_INTEGER := 30;
RULE_TYPE_DISPLAY_CONDITION  CONSTANT PLS_INTEGER := 33;
RULE_TYPE_RULE_FOLDER        CONSTANT PLS_INTEGER := 39;
RULE_TYPE_TEMPLATE           CONSTANT PLS_INTEGER := 100;
RULE_TYPE_EXPRESSION         CONSTANT PLS_INTEGER := 200;
RULE_TYPE_JAVA_METHOD        CONSTANT PLS_INTEGER := 300;
RULE_TYPE_BINDING_RULE       CONSTANT PLS_INTEGER := 400;
RULE_TYPE_RULE_SYS_PROP      CONSTANT PLS_INTEGER := 500;
RULE_TYPE_JAVA_SYS_PROP      CONSTANT PLS_INTEGER := 600;
RULE_TYPE_CAPTION_RULE       CONSTANT PLS_INTEGER := 700;
---------------------------------------------------------------------------------------
RULE_TYPE_DESIGNCHART        CONSTANT PLS_INTEGER := 28;
RULE_TYPE_UNKNOWN            CONSTANT PLS_INTEGER := 9999;
---------------------------------------------------------------------------------------
EXPR_OPERATOR                CONSTANT PLS_INTEGER := 200;
EXPR_LITERAL                 CONSTANT PLS_INTEGER := 201;
EXPR_PSNODE                  CONSTANT PLS_INTEGER := 205;
EXPR_REFNODE                 CONSTANT PLS_INTEGER := 206;
EXPR_PROP                    CONSTANT PLS_INTEGER := 207;
EXPR_SYS_PROP                CONSTANT PLS_INTEGER := 210;
EXPR_JAVA_METHOD             CONSTANT PLS_INTEGER := 216;
EXPR_SYS_ARGUMENT            CONSTANT PLS_INTEGER := 218;
EXPR_JAVA_PROPERTY           CONSTANT PLS_INTEGER := 220;
EXPR_ARGUMENT                CONSTANT PLS_INTEGER := 221;
EXPR_TEMPLATE                CONSTANT PLS_INTEGER := 222;
EXPR_FORALL                  CONSTANT PLS_INTEGER := 223;
EXPR_ITERATOR                CONSTANT PLS_INTEGER := 224;
EXPR_WHERE                   CONSTANT PLS_INTEGER := 225;
EXPR_COMPATIBLE              CONSTANT PLS_INTEGER := 226;
EXPR_PROPERTYBYNAME          CONSTANT PLS_INTEGER := 228;
EXPR_OPERATORBYNAME          CONSTANT PLS_INTEGER := 229;
EXPR_JAVAPROPERTYBYNAME      CONSTANT PLS_INTEGER := 230;
EXPR_FORALL_DISTINCT         CONSTANT PLS_INTEGER := 231;
EXPR_PSNODEBYNAME            CONSTANT PLS_INTEGER := 232;
---------------------------------------------------------------------------------------
DATA_TYPE_VOID               CONSTANT PLS_INTEGER := 0;
DATA_TYPE_INTEGER            CONSTANT PLS_INTEGER := 1;
DATA_TYPE_DECIMAL            CONSTANT PLS_INTEGER := 2;
DATA_TYPE_BOOLEAN            CONSTANT PLS_INTEGER := 3;
DATA_TYPE_TEXT               CONSTANT PLS_INTEGER := 4;
DATA_TYPE_NODE               CONSTANT PLS_INTEGER := 5;
DATA_TYPE_VARIANT            CONSTANT PLS_INTEGER := 6;
DATA_TYPE_INTEGER_COLL       CONSTANT PLS_INTEGER := 7;
DATA_TYPE_DECIMAL_COLL       CONSTANT PLS_INTEGER := 8;
DATA_TYPE_BOOLEAN_COLL       CONSTANT PLS_INTEGER := 9;
DATA_TYPE_TEXT_COLL          CONSTANT PLS_INTEGER := 10;
DATA_TYPE_NODE_COLL          CONSTANT PLS_INTEGER := 11;
DATA_TYPE_VARIANT_COLL       CONSTANT PLS_INTEGER := 12;
---------------------------------------------------------------------------------------
UNSATISFIED_TYPE_NONE        CONSTANT PLS_INTEGER := 0;
---------------------------------------------------------------------------------------
PROPERTY_TYPE_SYSTEM         CONSTANT PLS_INTEGER := 1;
---------------------------------------------------------------------------------------
FLAG_NOT_DELETED             CONSTANT CHAR(1) := '0';
FLAG_NOT_DISABLED            CONSTANT CHAR(1) := '0';
FLAG_NON_VIRTUAL             CONSTANT CHAR(1) := '0';
FLAG_BOM_OPTIONAL            CONSTANT CHAR(1) := '0';
FLAG_DELETED                 CONSTANT CHAR(1) := '1';
FLAG_VIRTUAL                 CONSTANT CHAR(1) := '1';
FLAG_BOM_REQUIRED            CONSTANT CHAR(1) := '1';
FLAG_IS_CONSEQUENT           CONSTANT CHAR(1) := '1';
FLAG_PENDING                 CONSTANT CHAR(1) := '3';
FLAG_DECIMAL_QTY             CONSTANT CHAR(1) := '1';
FLAG_INTEGER_QTY             CONSTANT CHAR(1) := '0';
FLAG_IB_TRACKABLE            CONSTANT CHAR(1) := '1';
FLAG_NOT_IB_TRACKABLE        CONSTANT CHAR(1) := '0';
FLAG_FREEFORM_RULE           CONSTANT CHAR(1) := '0';
FLAG_SEEDED                  CONSTANT CHAR(1) := '1';
---------------------------------------------------------------------------------------
FLAG_NO_ACCUMULATOR          CONSTANT VARCHAR2(1) := '0';
FLAG_ACCUMULATOR_ACC         CONSTANT VARCHAR2(1) := '1';
FLAG_ACCUMULATOR_NT          CONSTANT VARCHAR2(1) := '2';
FLAG_ACCUMULATOR_BOTH        CONSTANT VARCHAR2(1) := '3';
---------------------------------------------------------------------------------------
PATH_DELIMITER               CONSTANT CHAR(1) := '^';
PROPERTY_DELIMITER           CONSTANT CHAR(1) := '|';
NAME_DELIMITER               CONSTANT CHAR(1) := '.';
ALWAYS_TRUE                  CONSTANT VARCHAR2(16) := '_ALWAYS_TRUE';
ALWAYS_FALSE                 CONSTANT VARCHAR2(16) := '_ALWAYS_FALSE';
LOGICAL_CONSTANT_TRUE        CONSTANT VARCHAR2(16) := 'TRUE';
LOGICAL_CONSTANT_FALSE       CONSTANT VARCHAR2(16) := 'FALSE';
STEP_UP_DELIMITER            CONSTANT VARCHAR2(2) := '..';
UNIX_DELIMITER               CONSTANT VARCHAR2(1) := '/';
---------------------------------------------------------------------------------------
DATATYPE_GENERIC             CONSTANT PLS_INTEGER := 0;
DATATYPE_INTEGER             CONSTANT PLS_INTEGER := 1;
DATATYPE_FLOAT               CONSTANT PLS_INTEGER := 2;
DATATYPE_BOOLEAN             CONSTANT PLS_INTEGER := 3;
DATATYPE_STRING              CONSTANT PLS_INTEGER := 4;
---------------------------------------------------------------------------------------
FEATURE_TYPE_PRIMARY         CONSTANT PLS_INTEGER := 5;
FEATURE_TYPE_DEFINING        CONSTANT PLS_INTEGER := 1;
FEATURE_TYPE_OPTIONAL        CONSTANT PLS_INTEGER := 3;
---------------------------------------------------------------------------------------
EVT_ON_COMMAND_NAME          CONSTANT VARCHAR2(30) := 'ONCOMMAND';
---------------------------------------------------------------------------------------
CZ_G_UNABLE_TO_REPORT_ERROR  EXCEPTION;
CZ_G_INVALID_RULE_EXPLOSION  EXCEPTION;
CZ_G_INVALID_MODEL_EXPLOSION EXCEPTION;
CZ_G_INVALID_EXPLOSION_TYPE  EXCEPTION;
CZ_S_DEADLOOP_DETECTED       EXCEPTION; --currently not used.
CZ_S_ILLEGAL_OPTION_FEATURE  EXCEPTION;
CZ_S_BAD_BOOLEAN_FEAT_VALUE  EXCEPTION;
CZ_S_UNABLE_TO_SET_VIRTUAL   EXCEPTION;
CZ_S_UNABLE_TO_CREATE_HEADER EXCEPTION;
CZ_S_UNKNOWN_FEATURE_TYPE    EXCEPTION;
CZ_S_UNKNOWN_NODE_TYPE       EXCEPTION;
CZ_S_WRONG_INITIAL_VALUE     EXCEPTION;
CZ_S_UNKNOWN_BOM_NODE_TYPE   EXCEPTION;
CZ_S_FEATURE_NO_CHILDREN     EXCEPTION;
CZ_S_TOO_MANY_OPTIONS        EXCEPTION;
CZ_S_NO_DATA_IN_PROJECT      EXCEPTION;
CZ_S_NO_SUCH_PROJECT         EXCEPTION;
CZ_S_WRONG_EFFECTIVITY_SET   EXCEPTION;
CZ_S_INCONSISTENT_QUANTITY   EXCEPTION;
CZ_S_NO_TRACKABLE_FLAG       EXCEPTION;
CZ_S_TRACKABLE_CONTAINER     EXCEPTION;
CZ_S_INCORRECT_CONTAINER     EXCEPTION;
CZ_S_CONNECTOR_TRACKABLE     EXCEPTION;
CZ_S_CONNECT_NONTRACKABLE    EXCEPTION;
CZ_S_CONTAINER_REFERENCE     EXCEPTION;
CZ_S_MULTIPLE_TRACKABLE      EXCEPTION;
CZ_S_MULTIPLE_INSTANCES      EXCEPTION;
CZ_S_TRACKABLE_STANDARD      EXCEPTION;
CZ_S_TRACKABLE_CHILDREN      EXCEPTION;
CZ_R_AGAINST_TRACKABLE       EXCEPTION;
CZ_S_INCORRECT_QUANTITY      EXCEPTION;
CZ_R_TRACKABLE_ANCESTOR      EXCEPTION;
CZ_R_WRONG_EFFECTIVITY_SET   EXCEPTION;
CZ_R_UNABLE_TO_CREATE_HEADER EXCEPTION;
CZ_R_INVALID_RULE            EXCEPTION;
CZ_R_UNASSIGNABLE_RULE       EXCEPTION;
CZ_R_OPTIONAL_INSIDE         EXCEPTION;
CZ_R_OPTIONAL_ASIDE          EXCEPTION;
CZ_R_CONNECTOR_ASIDE         EXCEPTION;
CZ_R_CONFLICTING_NODES       EXCEPTION;
CZ_R_INCORRECT_NODE_LEVEL    EXCEPTION;
CZ_R_ACROSS_TRACKABLE        EXCEPTION;
CZ_R_CONNECTOR_RULE          EXCEPTION;
CZ_R_UNKNOWN_RULE_TYPE       EXCEPTION;
CZ_R_INVALID_LOGIC_RULE      EXCEPTION;
CZ_R_INCOMPLETE_LOGIC_RULE   EXCEPTION;
CZ_R_LOGIC_RULE_WRONG_FEAT   EXCEPTION;
CZ_R_INCORRECT_FEATURE_TYPE  EXCEPTION;
CZ_R_NUMERIC_RULE_WRONG_FEAT EXCEPTION;
CZ_R_INVALID_NUMERIC_RULE    EXCEPTION;
CZ_R_INCORRECT_NUMERIC_RHS   EXCEPTION;
CZ_R_INVALID_COMPARISON_RULE EXCEPTION;
CZ_R_INVALID_NUMERIC_PART    EXCEPTION;
CZ_R_INVALID_NUM_SIMPLE_EXPR EXCEPTION;
CZ_R_INCOMPLETE_NUMERIC_RULE EXCEPTION;
CZ_R_NO_PARTICIPANTS         EXCEPTION;
CZ_R_INVALID_NUMRULE_NODE    EXCEPTION;
CZ_R_UNABLE_TO_CREATE_TABLE  EXCEPTION;
CZ_R_WRONG_COMPAT_EXPRESSION EXCEPTION;
CZ_R_COMPAT_RULE_NO_PROPERTY EXCEPTION;
CZ_R_OPTION_NO_PROPERTY      EXCEPTION;
CZ_R_LONG_PROPERTY_VALUE     EXCEPTION;
CZ_R_INCORRECT_DATA_TYPE     EXCEPTION;
CZ_R_INCORRECT_NUMERICLHS    EXCEPTION;
CZ_R_PROPERTY_NOT_ALLOWED    EXCEPTION;
CZ_R_VIRTUAL_COMPONENT       EXCEPTION;
CZ_R_COMPAT_NO_COMBINATIONS  EXCEPTION;
CZ_R_WRONG_EXPRESSION_NODE   EXCEPTION;
CZ_R_RULE_WRONG_EXPRESSION   EXCEPTION;
CZ_R_NO_PRIMARY_FEATURE      EXCEPTION;
CZ_R_NO_DEFINING_SELECTION   EXCEPTION;
CZ_R_WRONG_DESIGNCHART_RULE  EXCEPTION; --currently not used.
CZ_R_DUPLICATE_COMBINATION   EXCEPTION;
CZ_R_INCOMPLETE_DES_CHART    EXCEPTION;
CZ_R_EMPTY_COMPAT_RULE       EXCEPTION;
CZ_R_COMPAT_SINGLE_FEATURE   EXCEPTION;
CZ_R_NO_COMPONENT_ID         EXCEPTION;
CZ_R_WRONG_COMPAT_TABLE      EXCEPTION;
CZ_R_LITERAL_NO_VALUE        EXCEPTION;
CZ_R_INCORRECT_NODE_ID       EXCEPTION;
CZ_R_DELETED_OPTION          EXCEPTION;
CZ_R_FEATURE_NO_PROPERTY     EXCEPTION;
CZ_R_TEMPLATE_UNKNOWN        EXCEPTION;
CZ_R_TEMPLATE_INCORRECT      EXCEPTION;
CZ_R_INCORRECT_REFNODE       EXCEPTION;
CZ_R_TYPE_NO_PROPERTY        EXCEPTION;
CZ_R_EMPTY_PARAMETER_SCOPE   EXCEPTION;
CZ_R_PARAMETER_NOT_FOUND     EXCEPTION;
CZ_R_NO_SIGNATURE_ID         EXCEPTION;
CZ_R_INCOMPATIBLE_SYSPROP    EXCEPTION;
CZ_E_UNKNOWN_EXPR_TYPE       EXCEPTION;
CZ_E_WRONG_ARITHMETIC_OPER   EXCEPTION;
CZ_E_WRONG_COMPARISON_OPER   EXCEPTION;
CZ_E_WRONG_ROUND_OPERATOR    EXCEPTION;
CZ_E_WRONG_ANDOR_OPERATOR    EXCEPTION;
CZ_E_WRONG_NOT_OPERATOR      EXCEPTION;
CZ_E_WRONG_NOTTRUE_OPERATOR  EXCEPTION;
CZ_E_WRONG_VAL_EXPRESSION    EXCEPTION;
CZ_E_WRONG_VAL_EXPRESS_TYPE  EXCEPTION;
CZ_E_WRONG_MINMAX_OPERATOR   EXCEPTION;
CZ_E_WRONG_OF_OPERATOR       EXCEPTION;
CZ_E_WRONG_DOT_OPERATOR      EXCEPTION;
CZ_E_DOT_TYPE_MISMATCH       EXCEPTION;
CZ_E_BAD_PROPERTY_TYPE       EXCEPTION;
CZ_E_NO_SUCH_PROPERTY        EXCEPTION;
CZ_E_NULL_PROPERTY_VALUE     EXCEPTION;
CZ_E_INCORRECT_PROPERTY      EXCEPTION;
CZ_E_WRONG_OPER_IN_COMPAT    EXCEPTION;
CZ_E_UKNOWN_OPER_IN_COMPAT   EXCEPTION;
CZ_E_UNKNOWN_OPERATOR_TYPE   EXCEPTION;
CZ_E_INVALID_OPERAND_TYPE    EXCEPTION;
CZ_E_NO_EXPECTED_CHILDREN    EXCEPTION;
CZ_E_NO_OPTIONAL_CHILDREN    EXCEPTION;
CZ_E_MATH_PARAMETERS         EXCEPTION;
CZ_E_INCORRECT_POWER         EXCEPTION;
CZ_LCE_CONTINUE              EXCEPTION;
CZ_E_DESCRIPTION_IN_WHERE    EXCEPTION;
CZ_E_PROPERTY_NOT_STATIC     EXCEPTION;
CZ_LCE_MODEL_OUTOFDATE       EXCEPTION;
CZ_LCE_INCORRECT_BOM         EXCEPTION;
CZ_LCE_INCORRECT_ITEM        EXCEPTION;
CZ_LCE_INCORRECT_TANGIBLE    EXCEPTION;
CZ_LCE_INCORRECT_SHIPPABLE   EXCEPTION;
CZ_LCE_RULE_NO_TANGIBLE      EXCEPTION;
CZ_R_INCORRECT_REFERENCE     EXCEPTION;
CZ_R_AMBIGUOUS_REFERENCE     EXCEPTION;
---------------------------------------------------------------------------------------
PROCEDURE GENERATE_LOGIC__(inDevlProjectId IN NUMBER,
                           thisRunId       IN NUMBER);
---------------------------------------------------------------------------------------
PROCEDURE GENERATE_LOGIC_(inDevlProjectId IN NUMBER,
                          thisRunId       IN OUT NOCOPY NUMBER,
                          TwoPhaseCommit  IN PLS_INTEGER);
---------------------------------------------------------------------------------------
PROCEDURE GENERATE_LOGIC(inDevlProjectId IN NUMBER,
                         thisRunId       IN OUT NOCOPY NUMBER);
---------------------------------------------------------------------------------------
END;

/
