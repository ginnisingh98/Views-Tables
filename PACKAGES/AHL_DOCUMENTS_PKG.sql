--------------------------------------------------------
--  DDL for Package AHL_DOCUMENTS_PKG
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE PACKAGE "APPS"."AHL_DOCUMENTS_PKG" AUTHID CURRENT_USER as
/* $Header: AHLLDIXS.pls 115.6 2002/12/04 08:22:36 pbarman noship $ */
procedure INSERT_ROW (
  X_ROWID in out NOCOPY VARCHAR2,
  X_DOCUMENT_ID in NUMBER,
  X_SUBSCRIBE_AVAIL_FLAG in VARCHAR2,
  X_SUBSCRIBE_TO_FLAG in VARCHAR2,
  X_DOC_TYPE_CODE in VARCHAR2,
  X_DOC_SUB_TYPE_CODE in VARCHAR2,
  X_OPERATOR_CODE in VARCHAR2,
  X_PRODUCT_TYPE_CODE in VARCHAR2,
  X_ATTRIBUTE_CATEGORY in VARCHAR2,
  X_ATTRIBUTE1 in VARCHAR2,
  X_ATTRIBUTE2 in VARCHAR2,
  X_ATTRIBUTE3 in VARCHAR2,
  X_ATTRIBUTE4 in VARCHAR2,
  X_ATTRIBUTE5 in VARCHAR2,
  X_ATTRIBUTE6 in VARCHAR2,
  X_ATTRIBUTE7 in VARCHAR2,
  X_ATTRIBUTE8 in VARCHAR2,
  X_ATTRIBUTE9 in VARCHAR2,
  X_ATTRIBUTE10 in VARCHAR2,
  X_ATTRIBUTE11 in VARCHAR2,
  X_ATTRIBUTE12 in VARCHAR2,
  X_ATTRIBUTE13 in VARCHAR2,
  X_ATTRIBUTE14 in VARCHAR2,
  X_ATTRIBUTE15 in VARCHAR2,
  X_OBJECT_VERSION_NUMBER in NUMBER,
  X_SOURCE_PARTY_ID in NUMBER,
  X_DOCUMENT_NO in VARCHAR2,
  X_DOCUMENT_TITLE in VARCHAR2,
  X_CREATION_DATE in DATE,
  X_CREATED_BY in NUMBER,
  X_LAST_UPDATE_DATE in DATE,
  X_LAST_UPDATED_BY in NUMBER,
  X_LAST_UPDATE_LOGIN in NUMBER);
procedure LOCK_ROW (
  X_DOCUMENT_ID in NUMBER,
  X_SUBSCRIBE_AVAIL_FLAG in VARCHAR2,
  X_SUBSCRIBE_TO_FLAG in VARCHAR2,
  X_DOC_TYPE_CODE in VARCHAR2,
  X_DOC_SUB_TYPE_CODE in VARCHAR2,
  X_OPERATOR_CODE in VARCHAR2,
  X_PRODUCT_TYPE_CODE in VARCHAR2,
  X_ATTRIBUTE_CATEGORY in VARCHAR2,
  X_ATTRIBUTE1 in VARCHAR2,
  X_ATTRIBUTE2 in VARCHAR2,
  X_ATTRIBUTE3 in VARCHAR2,
  X_ATTRIBUTE4 in VARCHAR2,
  X_ATTRIBUTE5 in VARCHAR2,
  X_ATTRIBUTE6 in VARCHAR2,
  X_ATTRIBUTE7 in VARCHAR2,
  X_ATTRIBUTE8 in VARCHAR2,
  X_ATTRIBUTE9 in VARCHAR2,
  X_ATTRIBUTE10 in VARCHAR2,
  X_ATTRIBUTE11 in VARCHAR2,
  X_ATTRIBUTE12 in VARCHAR2,
  X_ATTRIBUTE13 in VARCHAR2,
  X_ATTRIBUTE14 in VARCHAR2,
  X_ATTRIBUTE15 in VARCHAR2,
  X_OBJECT_VERSION_NUMBER in NUMBER,
  X_SOURCE_PARTY_ID in NUMBER,
  X_DOCUMENT_NO in VARCHAR2,
  X_DOCUMENT_TITLE in VARCHAR2
);
procedure UPDATE_ROW (
  X_DOCUMENT_ID in NUMBER,
  X_SUBSCRIBE_AVAIL_FLAG in VARCHAR2,
  X_SUBSCRIBE_TO_FLAG in VARCHAR2,
  X_DOC_TYPE_CODE in VARCHAR2,
  X_DOC_SUB_TYPE_CODE in VARCHAR2,
  X_OPERATOR_CODE in VARCHAR2,
  X_PRODUCT_TYPE_CODE in VARCHAR2,
  X_ATTRIBUTE_CATEGORY in VARCHAR2,
  X_ATTRIBUTE1 in VARCHAR2,
  X_ATTRIBUTE2 in VARCHAR2,
  X_ATTRIBUTE3 in VARCHAR2,
  X_ATTRIBUTE4 in VARCHAR2,
  X_ATTRIBUTE5 in VARCHAR2,
  X_ATTRIBUTE6 in VARCHAR2,
  X_ATTRIBUTE7 in VARCHAR2,
  X_ATTRIBUTE8 in VARCHAR2,
  X_ATTRIBUTE9 in VARCHAR2,
  X_ATTRIBUTE10 in VARCHAR2,
  X_ATTRIBUTE11 in VARCHAR2,
  X_ATTRIBUTE12 in VARCHAR2,
  X_ATTRIBUTE13 in VARCHAR2,
  X_ATTRIBUTE14 in VARCHAR2,
  X_ATTRIBUTE15 in VARCHAR2,
  X_OBJECT_VERSION_NUMBER in NUMBER,
  X_SOURCE_PARTY_ID in NUMBER,
  X_DOCUMENT_NO in VARCHAR2,
  X_DOCUMENT_TITLE in VARCHAR2,
  X_LAST_UPDATE_DATE in DATE,
  X_LAST_UPDATED_BY in NUMBER,
  X_LAST_UPDATE_LOGIN in NUMBER
);
procedure DELETE_ROW (
  X_DOCUMENT_ID in NUMBER
);
procedure ADD_LANGUAGE;

procedure LOAD_ROW (
X_DOCUMENT_NO                  in VARCHAR2,
X_SOURCE_PARTY_ID              in NUMBER,
X_SUBSCRIBE_AVAIL_FLAG         in VARCHAR2,
X_SUBSCRIBE_TO_FLAG            in VARCHAR2,
X_DOC_TYPE_CODE                in VARCHAR2,
X_DOC_SUB_TYPE_CODE            in VARCHAR2,
X_OPERATOR_CODE                in VARCHAR2,
X_PRODUCT_TYPE_CODE            in VARCHAR2,
X_OBJECT_VERSION_NUMBER        in NUMBER,
X_ATTRIBUTE_CATEGORY           in VARCHAR2,
X_ATTRIBUTE1                   in VARCHAR2,
X_ATTRIBUTE2                   in VARCHAR2,
X_ATTRIBUTE3                   in VARCHAR2,
X_ATTRIBUTE4                   in VARCHAR2,
X_ATTRIBUTE5                   in VARCHAR2,
X_ATTRIBUTE6                   in VARCHAR2,
X_ATTRIBUTE7                   in VARCHAR2,
X_ATTRIBUTE8                   in VARCHAR2,
X_ATTRIBUTE9                   in VARCHAR2,
X_ATTRIBUTE10                  in VARCHAR2,
X_ATTRIBUTE11                  in VARCHAR2,
X_ATTRIBUTE12                  in VARCHAR2,
X_ATTRIBUTE13                  in VARCHAR2,
X_ATTRIBUTE14                  in VARCHAR2,
X_ATTRIBUTE15                  in VARCHAR2,
X_DOCUMENT_TITLE               in VARCHAR2,
X_OWNER                        in VARCHAR2
);


procedure TRANSLATE_ROW (
X_DOCUMENT_NO                  in VARCHAR2,
X_DOCUMENT_TITLE               in VARCHAR2,
X_OWNER                        in VARCHAR2
);

end AHL_DOCUMENTS_PKG;

 

/
