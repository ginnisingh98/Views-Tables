--------------------------------------------------------
--  DDL for Package BSC_DIMENSION_LEVELS_PUB
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE PACKAGE "APPS"."BSC_DIMENSION_LEVELS_PUB" AUTHID CURRENT_USER as
/* $Header: BSCPDMLS.pls 120.2 2005/11/22 08:00:27 ppandey noship $ */
/*
 +======================================================================================+
 |    Copyright (c) 2001 Oracle Corporation, Redwood Shores, CA, USA                    |
 |                         All rights reserved.                                         |
 +======================================================================================+
 | FILENAME                                                                             |
 |          BSCPDMLS.pls                                                                |
 |                                                                                      |
 | Creation Date:                                                                       |
 |          October 9, 2001                                                             |
 |                                                                                      |
 | Creator:                                                                             |
 |          Mario-Jair Campos                                                           |
 |                                                                                      |
 | Description:                                                                         |
 |              Public spec version.                                                    |
 |                      This package creates a BSC Dimension (Level).                   |
 | History:                                                                             |
 |          24-APR-2003  is_Child_Parent() Added by ADRAO for Enh#2901823               |
 |          07-MAY-2003  Retrieve_Relationship() Added by ADRAO for change Enh#2901823  |
 |          05-JUN-2003  ADRAO Added who column for Dimension Objects and modified      |
 |                       APIs for Granular Locking  - PMD                               |
 | 14-JUN-03  mahrao   Added Translate_dimesnsion_level procedure for enh# 2842894      |
 | 31-JUL-03  mahrao   Increased the size of Bsc_Dim_Level_Long_Name and Bsc_Dim_Level_Help
 |                     in Bsc_Dim_Level_Rec_Type record type for bug# 3030788.
 | 02-MAR-04 ankgoel   Bug #3464470						        |
 | 21-DEC-04   vtulasi   Modified for bug#4045278 - Addtion of LUD                      |
 | 09-Feb-05   ankgoel   Bug#4172055 LUD validations for dim_lvls_by_group              |
 | 15-FEB-05   ppandey   Enh #4016669, support ID, Value for Autogenerated Dimension Obj|
 | 28-JUN-05 arhegde bug# 4323426 Increased length of                                   |
 |                           Bsc_Dim_Level_Rec_Type.Bsc_Parent_Level_Name               |
 +======================================================================================+
*/

TYPE Bsc_Dim_Level_Rec_Type is RECORD(
  Bsc_Dim_Comp_Disp_Name        varchar2(45)
 ,Bsc_Dim_Level_Long_Name       BSC_SYS_DIM_LEVELS_TL.NAME%TYPE
 ,Bsc_Dim_Level_Help            BSC_SYS_DIM_LEVELS_TL.HELP%TYPE
 ,Bsc_Dim_Tot_Disp_Name         varchar2(45)
 ,Bsc_Language                  varchar2(5)
 ,Bsc_Level_Abbreviation    varchar2(24)
 ,Bsc_Level_Column_Name         varchar2(30)
 ,Bsc_Level_Column_Type         varchar2(1)
 ,Bsc_Level_Comp_Order_By   number
 ,Bsc_Level_Custom_Group    number
 ,Bsc_Level_Disp_Key_Size   number
 ,Bsc_Level_Id                  number
 ,Bsc_Level_Index               number
 ,Bsc_Level_Name                varchar2(30)
 ,Bsc_Level_Name_Column     varchar2(30)
 ,Bsc_Level_Pk_Key      varchar2(30)
 ,Bsc_Level_Short_Name      varchar2(30)
 ,Bsc_Level_User_Key_Size   number
 ,Bsc_Level_Table_Type      number
 ,Bsc_Level_Value_Order_By  number
 ,Bsc_Level_View_Name           varchar2(30)
 ,Bsc_Pk_Col                    varchar2(30)
 ,Bsc_Source            varchar2(10)
 ,Bsc_Source_Language           varchar2(5)
 ,Bsc_Source_Level_Long_Name    varchar2(255)
 ,Bsc_Relation_Column           varchar2(100)
 ,Bsc_Relation_Type             number
 ,Bsc_Parent_Level_Id       number
 ,Bsc_Parent_Level_Index    number
 ,Bsc_Parent_Level_Short_Name   varchar2(30)
 ,Bsc_Parent_Level_Source   varchar2(10)
 ,Bsc_Flag                  number:=0
 ,Source            varchar2(10)  /* PMF source need */
 ,Bsc_Parent_Level_Name      BSC_SYS_DIM_LEVELS_TL.NAME%TYPE /* PMF source need */
 ,Bsc_Data_Source_Type       varchar2(30) /* Relationship Data Source type TABLE/VIEW or API */
 ,Bsc_Data_Source            varchar2(240) /* Relationship Data Source Name */
 -- PMD
 ,Bsc_Created_By             BSC_SYS_DIM_LEVELS_B.created_by%TYPE -- PMD: Dim Level WHO columns
 ,Bsc_Creation_Date          BSC_SYS_DIM_LEVELS_B.creation_date%TYPE   -- For granular locking
 ,Bsc_Last_Updated_By        BSC_SYS_DIM_LEVELS_B.last_updated_by%TYPE  -- PMD
 ,Bsc_Last_Update_Date       BSC_SYS_DIM_LEVELS_B.last_update_date%TYPE -- PMD
 ,Bsc_Last_Update_Login      BSC_SYS_DIM_LEVELS_B.last_update_login%TYPE -- PMD
);


TYPE Bsc_Dim_Level_Tbl_Type IS TABLE OF Bsc_Dim_Level_Rec_Type
  INDEX BY BINARY_INTEGER;

-- Procedure to Create all pertaining information for a given Dimension Level.
-- Though all procedures in this package may be called individually, this
-- procedure is the entry point to populate all meta data for dimension levels.
procedure Create_Dim_Level(
  p_commit              IN      varchar2 := FND_API.G_FALSE
 ,p_Dim_Level_Rec       IN      BSC_DIMENSION_LEVELS_PUB.Bsc_Dim_Level_Rec_Type
 ,x_return_status       OUT NOCOPY     varchar2
 ,x_msg_count       OUT NOCOPY  number
 ,x_msg_data        OUT NOCOPY  varchar2
);

procedure Retrieve_Dim_Level(
  p_commit              IN      varchar2 := FND_API.G_FALSE
 ,p_Dim_Level_Rec       IN      BSC_DIMENSION_LEVELS_PUB.Bsc_Dim_Level_Rec_Type
 ,x_Dim_Level_Rec       IN OUT NOCOPY     BSC_DIMENSION_LEVELS_PUB.Bsc_Dim_Level_Rec_Type
 ,x_return_status       OUT NOCOPY     varchar2
 ,x_msg_count       OUT NOCOPY  number
 ,x_msg_data        OUT NOCOPY  varchar2
);
procedure Create_Dim_Level(
  p_commit              IN      varchar2 := FND_API.G_FALSE
 ,p_Dim_Level_Rec       IN      BSC_DIMENSION_LEVELS_PUB.Bsc_Dim_Level_Rec_Type
 ,p_create_tables       IN             BOOLEAN
 ,x_return_status       OUT NOCOPY     varchar2
 ,x_msg_count           OUT NOCOPY     number
 ,x_msg_data            OUT NOCOPY     varchar2
);

procedure Update_Dim_Level(
  p_commit              IN      varchar2 := FND_API.G_FALSE
 ,p_Dim_Level_Rec       IN      BSC_DIMENSION_LEVELS_PUB.Bsc_Dim_Level_Rec_Type
 ,x_return_status       OUT NOCOPY     varchar2
 ,x_msg_count       OUT NOCOPY  number
 ,x_msg_data        OUT NOCOPY  varchar2
);

-- Procedure to Delete all pertaining information for a given Dimension Level.
-- Though all procedures in this package may be called individually, this
-- procedure is the entry point to delete all meta data for dimension levels.
procedure Delete_Dim_Level(
  p_commit              IN      varchar2 := FND_API.G_FALSE
 ,p_Dim_Level_Rec       IN      BSC_DIMENSION_LEVELS_PUB.Bsc_Dim_Level_Rec_Type
 ,x_return_status       OUT NOCOPY     varchar2
 ,x_msg_count       OUT NOCOPY  number
 ,x_msg_data        OUT NOCOPY  varchar2
);

-- Procedure to Populate the necessary meta data in BSC for a dimension level.
procedure Create_Bsc_Dim_Levels_Md(
  p_commit              IN      varchar2 := FND_API.G_FALSE
 ,p_Dim_Level_Rec       IN      BSC_DIMENSION_LEVELS_PUB.Bsc_Dim_Level_Rec_Type
 ,x_return_status       OUT NOCOPY     varchar2
 ,x_msg_count       OUT NOCOPY  number
 ,x_msg_data        OUT NOCOPY  varchar2
);

procedure Retrieve_Bsc_Dim_Levels_Md(
  p_commit              IN      varchar2 := FND_API.G_FALSE
 ,p_Dim_Level_Rec       IN      BSC_DIMENSION_LEVELS_PUB.Bsc_Dim_Level_Rec_Type
 ,x_Dim_Level_Rec       IN OUT NOCOPY     BSC_DIMENSION_LEVELS_PUB.Bsc_Dim_Level_Rec_Type
 ,x_return_status       OUT NOCOPY     varchar2
 ,x_msg_count       OUT NOCOPY  number
 ,x_msg_data        OUT NOCOPY  varchar2
);

procedure Update_Bsc_Dim_Levels_Md(
  p_commit              IN      varchar2 := FND_API.G_FALSE
 ,p_Dim_Level_Rec       IN      BSC_DIMENSION_LEVELS_PUB.Bsc_Dim_Level_Rec_Type
 ,x_return_status       OUT NOCOPY     varchar2
 ,x_msg_count       OUT NOCOPY  number
 ,x_msg_data        OUT NOCOPY  varchar2
);

-- Procedure to Delete the necessary meta data in BSC for a dimension level.
procedure Delete_Bsc_Dim_Levels_Md(
  p_commit              IN      varchar2 := FND_API.G_FALSE
 ,p_Dim_Level_Rec       IN      BSC_DIMENSION_LEVELS_PUB.Bsc_Dim_Level_Rec_Type
 ,x_return_status       OUT NOCOPY     varchar2
 ,x_msg_count       OUT NOCOPY  number
 ,x_msg_data        OUT NOCOPY  varchar2
);

-- Procedure to Populate information on the columns for the dimension level
-- view or table.
procedure Create_Bsc_Sys_Dim_Lvl_Cols(
  p_commit              IN      varchar2 := FND_API.G_FALSE
 ,p_Dim_Level_Rec       IN      BSC_DIMENSION_LEVELS_PUB.Bsc_Dim_Level_Rec_Type
 ,x_return_status       OUT NOCOPY     varchar2
 ,x_msg_count       OUT NOCOPY  number
 ,x_msg_data        OUT NOCOPY  varchar2
);

procedure Retrieve_Bsc_Sys_Dim_Lvl_Cols(
  p_commit              IN      varchar2 := FND_API.G_FALSE
 ,p_Dim_Level_Rec       IN      BSC_DIMENSION_LEVELS_PUB.Bsc_Dim_Level_Rec_Type
 ,x_Dim_Level_Rec       IN OUT NOCOPY     BSC_DIMENSION_LEVELS_PUB.Bsc_Dim_Level_Rec_Type
 ,x_return_status       OUT NOCOPY     varchar2
 ,x_msg_count       OUT NOCOPY  number
 ,x_msg_data        OUT NOCOPY  varchar2
);

procedure Update_Bsc_Sys_Dim_Lvl_Cols(
  p_commit              IN      varchar2 := FND_API.G_FALSE
 ,p_Dim_Level_Rec       IN      BSC_DIMENSION_LEVELS_PUB.Bsc_Dim_Level_Rec_Type
 ,x_return_status       OUT NOCOPY     varchar2
 ,x_msg_count       OUT NOCOPY  number
 ,x_msg_data        OUT NOCOPY  varchar2
);

-- Procedure to Delete information on the columns for the dimension level
-- view or table.
procedure Delete_Bsc_Sys_Dim_Lvl_Cols(
  p_commit              IN      varchar2 := FND_API.G_FALSE
 ,p_Dim_Level_Rec       IN      BSC_DIMENSION_LEVELS_PUB.Bsc_Dim_Level_Rec_Type
 ,x_return_status       OUT NOCOPY     varchar2
 ,x_msg_count       OUT NOCOPY  number
 ,x_msg_data        OUT NOCOPY  varchar2
);

/*********************************************************************************
-- Procedure to Create a Relationship between two Dimension Levels
**********************************************************************************/

-- Thi procedure is the entry point to create Dimension Level Relationships
PROCEDURE Create_Dim_Level_Relation(
  p_commit              IN      varchar2 := FND_API.G_FALSE
 ,p_Dim_Level_Rec       IN      BSC_DIMENSION_LEVELS_PUB.Bsc_Dim_Level_Rec_Type
 ,x_return_status       OUT NOCOPY     varchar2
 ,x_msg_count       OUT NOCOPY  number
 ,x_msg_data        OUT NOCOPY  varchar2
);
----------
PROCEDURE Delete_Dim_Level_Relation(
  p_commit              IN      varchar2 := FND_API.G_FALSE
 ,p_Dim_Level_Rec       IN      BSC_DIMENSION_LEVELS_PUB.Bsc_Dim_Level_Rec_Type
 ,x_return_status       OUT NOCOPY     varchar2
 ,x_msg_count       OUT NOCOPY  number
 ,x_msg_data        OUT NOCOPY  varchar2
 );
-----------
FUNCTION Is_Valid_Relationship(
  p_commit              IN      varchar2 := FND_API.G_FALSE
 ,p_Dim_Level_Rec       IN      BSC_DIMENSION_LEVELS_PUB.Bsc_Dim_Level_Rec_Type
 ,x_return_status       OUT NOCOPY     varchar2
 ,x_msg_count       OUT NOCOPY  number
 ,x_msg_data        OUT NOCOPY  varchar2
 ) RETURN BOOLEAN;
-----------
PROCEDURE is_dependent(
  p_commit                   IN     varchar2 := FND_API.G_FALSE
 ,p_child_dim_level_short_name   IN     varchar2
 ,p_parent_dim_level_short_name  IN     varchar2
 ,x_return_value        OUT NOCOPY             varchar2
 ,x_return_status       OUT NOCOPY          varchar2  /* return  FND_API.G_FALSE or  FND_API.G_TRUE */
 ,x_msg_count       OUT NOCOPY      number
 ,x_msg_data        OUT NOCOPY      varchar2
 );

PROCEDURE get_parent_dimension_levels(
  p_commit                   IN     varchar2 := FND_API.G_FALSE
 ,p_child_dim_level_short_name   IN     varchar2
 ,p_parent_dim_level_short_names OUT NOCOPY    varchar2
 ,x_return_status       OUT NOCOPY          varchar2  /* return  FND_API.G_FALSE or  FND_API.G_TRUE */
 ,x_msg_count       OUT NOCOPY      number
 ,x_msg_data        OUT NOCOPY      varchar2
 );

PROCEDURE get_child_dimension_levels(
  p_commit                   IN     varchar2 := FND_API.G_FALSE
 ,p_parent_dim_level_short_name  IN     varchar2
 ,p_child_dim_level_short_names  OUT NOCOPY    varchar2
 ,x_return_status       OUT NOCOPY          varchar2  /* return  FND_API.G_FALSE or  FND_API.G_TRUE */
 ,x_msg_count       OUT NOCOPY      number
 ,x_msg_data        OUT NOCOPY      varchar2
 );

--------------------------------------------------------------------------------------
--  is_Child_Parent :
--  Check to see if the passed Dim Level Ids form a Parent child relationship.
--
--  Added by ADRAO for Enh#2901823
--  Values returned wouid be in x_return_status (FND_API.G_FALSE or FND_API.G_TRUE)
--------------------------------------------------------------------------------------
-----------
FUNCTION is_Child_Parent
(
       p_child_dim_level_short_name     IN              VARCHAR2
     , p_parent_dim_level_short_name    IN              VARCHAR2
     , x_return_status                  OUT NOCOPY      VARCHAR2
     , x_msg_count                      OUT NOCOPY      NUMBER
     , x_msg_data                       OUT NOCOPY      VARCHAR2
) RETURN BOOLEAN;


PROCEDURE Retrieve_Relationship (
        p_Dim_Level_Rec         IN          BSC_DIMENSION_LEVELS_PUB.Bsc_Dim_Level_Rec_Type
    ,   x_Dim_Level_Rec         OUT NOCOPY  BSC_DIMENSION_LEVELS_PUB.Bsc_Dim_Level_Rec_Type
    ,   x_return_status         OUT NOCOPY  VARCHAR2
    ,   x_msg_count             OUT NOCOPY  NUMBER
    ,   x_msg_data              OUT NOCOPY  VARCHAR2
) ;

/*********************************************************************************
**********************************************************************************/
PROCEDURE Drop_Dim_Level_Tabs
(
   p_Dim_Level_Rec       IN      BSC_DIMENSION_LEVELS_PUB.Bsc_Dim_Level_Rec_Type
 , x_return_status       OUT     NOCOPY     VARCHAR2
 , x_msg_count           OUT     NOCOPY     NUMBER
 , x_msg_data            OUT     NOCOPY     VARCHAR2
);
/*********************************************************************************
**********************************************************************************/
PROCEDURE Translate_Dimension_Level (
  p_Commit IN VARCHAR2 := FND_API.G_FALSE
 ,p_Bsc_Pmf_Dim_Rec IN BSC_PMF_UI_API_PUB.Bsc_Pmf_Dim_Rec_Type
 ,p_Bsc_Dim_Level_Rec IN BSC_DIMENSION_LEVELS_PUB.Bsc_Dim_Level_Rec_Type
 ,x_return_status OUT NOCOPY VARCHAR2
 ,x_msg_count OUT NOCOPY NUMBER
 ,x_msg_data OUT NOCOPY VARCHAR2
);
--
--
PROCEDURE load_dimension_level(
  p_commit              IN          VARCHAR2 := FND_API.G_FALSE
 ,p_dim_level_rec       IN          BSC_DIMENSION_LEVELS_PUB.Bsc_Dim_Level_Rec_Type
 ,x_return_status       OUT NOCOPY  VARCHAR2
 ,x_msg_count           OUT NOCOPY  NUMBER
 ,x_msg_data            OUT NOCOPY  VARCHAR2
);
--

PROCEDURE Trans_DimObj_By_Given_Lang
(
    p_commit          IN  VARCHAR2 := FND_API.G_FALSE
  , p_dim_level_rec   IN  BSC_DIMENSION_LEVELS_PUB.Bsc_Dim_Level_Rec_Type
  , x_return_status   OUT NOCOPY  VARCHAR2
  , x_msg_count           OUT NOCOPY  NUMBER
  , x_msg_data            OUT NOCOPY  VARCHAR2
);

procedure Validate_Imported_Level_Views
(
    ERRBUF OUT NOCOPY VARCHAR2
  , RETCODE OUT NOCOPY VARCHAR2
);

end BSC_DIMENSION_LEVELS_PUB;

 

/
