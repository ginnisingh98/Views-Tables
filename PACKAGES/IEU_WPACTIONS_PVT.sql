--------------------------------------------------------
--  DDL for Package IEU_WPACTIONS_PVT
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE PACKAGE "APPS"."IEU_WPACTIONS_PVT" AUTHID CURRENT_USER AS
/* $Header: IEUTKWPS.pls 115.10 2003/10/08 16:48:08 fsuthar noship $ */


-- Define some constants for use in our procedure
G_PKG_NAME      CONSTANT        VARCHAR2(30):='IEU_WPACTIONS_PVT';
G_USER_ID       CONSTANT        NUMBER      := FND_GLOBAL.USER_ID;
G_FALSE         CONSTANT        VARCHAR2(1) := FND_API.G_FALSE;
G_TRUE          CONSTANT        VARCHAR2(1) := FND_API.G_TRUE;
G_SUCCESS       CONSTANT        VARCHAR2(1) := FND_API.G_RET_STS_SUCCESS;
G_ERROR	      	CONSTANT        VARCHAR2(1) := FND_API.G_RET_STS_ERROR;
G_UNEXP_ERROR  	CONSTANT        VARCHAR2(1) := FND_API.G_RET_STS_UNEXP_ERROR;
G_OPEN_SQBR     CONSTANT        VARCHAR2(1) :='[';
G_CLOSE_SQBR    CONSTANT        VARCHAR2(1) :=']';
G_YES           CONSTANT        VARCHAR2(1) := JTF_TASK_UTL.G_YES_CHAR;



  -- methinks, only ID is sufficient;
  TYPE task_rec IS RECORD (
    ID                jtf_tasks_b.task_id%TYPE,
    TASK_NAME         jtf_tasks_tl.task_name%TYPE,
    TYPE_NAME         jtf_task_types_tl.name%TYPE,
    PRIORITY_NAME     jtf_task_priorities_tl.name%TYPE,
    STATUS_NAME       jtf_task_statuses_tl.name%TYPE,
    SOURCE_ID         jtf_tasks_b.source_object_id%type,
    SOURCE_TYPE_CODE  jtf_tasks_b.source_object_type_code%type,
    SCHED_START       DATE,
    SCHED_END         DATE,
    PLAN_START        DATE,
    PLAN_END          DATE,
    ACT_START         DATE,
    ACT_END           DATE,
    DESCR             jtf_tasks_tl.description%TYPE,
    OWNER_ID          jtf_tasks_b.owner_id%TYPE,
    OWNER_TYPE_CODE   jtf_tasks_b.owner_type_code%TYPE,
    OBJECT_VERSION_NUMBER jtf_tasks_b.object_version_number%TYPE
  );

  TYPE task_rec_tbl IS TABLE OF task_rec INDEX BY BINARY_INTEGER;


  PROCEDURE WP_TASK
  ( P_RESOURCE_ID       IN NUMBER,
    P_LANGUAGE          IN VARCHAR2 DEFAULT NULL,
    P_SOURCE_LANG       IN VARCHAR2 DEFAULT NULL,
    P_ACTION_KEY        IN VARCHAR2,
    P_ACTION_INPUT_DATA IN SYSTEM.ACTION_INPUT_DATA_NST,
    P_ACTION_TYPE       IN Varchar2,
    X_UWQ_ACTION_LIST   OUT NOCOPY SYSTEM.IEU_UWQ_WORK_ACTIONS_NST,
    X_MSG_COUNT         OUT NOCOPY NUMBER,
    X_MSG_DATA          OUT NOCOPY VARCHAR2,
    X_RETURN_STATUS     OUT NOCOPY VARCHAR2);

    PROCEDURE UPDATE_TASK
  ( P_RESOURCE_ID       IN NUMBER,
    P_LANGUAGE          IN VARCHAR2 DEFAULT NULL,
    P_SOURCE_LANG       IN VARCHAR2 DEFAULT NULL,
    P_ACTION_KEY        IN VARCHAR2,
    P_ACTION_INPUT_DATA IN SYSTEM.ACTION_INPUT_DATA_NST,
    X_UWQ_ACTION_LIST   OUT NOCOPY SYSTEM.IEU_UWQ_WORK_ACTIONS_NST,
    X_MSG_COUNT         OUT NOCOPY NUMBER,
    X_MSG_DATA          OUT NOCOPY VARCHAR2,
    X_RETURN_STATUS     OUT NOCOPY VARCHAR2);

      PROCEDURE CLOSE_TASK
  ( P_RESOURCE_ID       IN NUMBER,
    P_LANGUAGE          IN VARCHAR2 DEFAULT NULL,
    P_SOURCE_LANG       IN VARCHAR2 DEFAULT NULL,
    P_ACTION_KEY        IN VARCHAR2,
    P_ACTION_INPUT_DATA IN SYSTEM.ACTION_INPUT_DATA_NST,
    X_UWQ_ACTION_LIST   OUT NOCOPY SYSTEM.IEU_UWQ_WORK_ACTIONS_NST,
    X_MSG_COUNT         OUT NOCOPY NUMBER,
    X_MSG_DATA          OUT NOCOPY VARCHAR2,
    X_RETURN_STATUS     OUT NOCOPY VARCHAR2);


  PROCEDURE REASSIGN_TASK
  ( P_RESOURCE_ID       IN NUMBER,
    P_LANGUAGE          IN VARCHAR2 DEFAULT NULL,
    P_SOURCE_LANG       IN VARCHAR2 DEFAULT NULL,
    P_ACTION_KEY        IN VARCHAR2,
    P_ACTION_INPUT_DATA IN SYSTEM.ACTION_INPUT_DATA_NST,
    X_UWQ_ACTION_LIST   OUT NOCOPY SYSTEM.IEU_UWQ_WORK_ACTIONS_NST,
    X_MSG_COUNT         OUT NOCOPY NUMBER,
    X_MSG_DATA          OUT NOCOPY VARCHAR2,
    X_RETURN_STATUS     OUT NOCOPY VARCHAR2);

  PROCEDURE RESCHEDULE_TASK
  ( P_RESOURCE_ID       IN NUMBER,
    P_LANGUAGE          IN VARCHAR2 DEFAULT NULL,
    P_SOURCE_LANG       IN VARCHAR2 DEFAULT NULL,
    P_ACTION_KEY        IN VARCHAR2,
    P_ACTION_INPUT_DATA IN SYSTEM.ACTION_INPUT_DATA_NST,
    X_UWQ_ACTION_LIST   OUT NOCOPY SYSTEM.IEU_UWQ_WORK_ACTIONS_NST,
    X_MSG_COUNT         OUT NOCOPY NUMBER,
    X_MSG_DATA          OUT NOCOPY VARCHAR2,
    X_RETURN_STATUS     OUT NOCOPY VARCHAR2);

  PROCEDURE TRANSFER_TASK_OWNER_TASK
  ( P_RESOURCE_ID       IN NUMBER,
    P_LANGUAGE          IN VARCHAR2 DEFAULT NULL,
    P_SOURCE_LANG       IN VARCHAR2 DEFAULT NULL,
    P_ACTION_KEY        IN VARCHAR2,
    P_ACTION_INPUT_DATA IN SYSTEM.ACTION_INPUT_DATA_NST,
    X_UWQ_ACTION_LIST   OUT NOCOPY SYSTEM.IEU_UWQ_WORK_ACTIONS_NST,
    X_MSG_COUNT         OUT NOCOPY NUMBER,
    X_MSG_DATA          OUT NOCOPY VARCHAR2,
    X_RETURN_STATUS     OUT NOCOPY VARCHAR2);


END IEU_WPACTIONS_PVT;

 

/
