--------------------------------------------------------
--  DDL for Package CS_SERVICE_BILLING_ENGINE_PVT
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE PACKAGE "APPS"."CS_SERVICE_BILLING_ENGINE_PVT" AUTHID CURRENT_USER as
/*$Header: csxvsbes.pls 120.1 2005/08/18 16:48:57 mviswana noship $*/

-- Service Billing Engine Record Type
TYPE SBE_Rec_Type IS RECORD
  (incident_id                  NUMBER,
   business_process_id          NUMBER,
   transaction_type_id          NUMBER,
   txn_billing_type_id          NUMBER,
   line_category_code           VARCHAR2(6),
   contract_id                  NUMBER,
   contract_line_id             NUMBER,
   price_list_id                NUMBER,
   currency_code                VARCHAR2(15),
   service_date                 DATE,
   labor_start_date_time        DATE,
   labor_end_date_time          DATE,
   inventory_item_id            NUMBER,
   serial_number                VARCHAR2(50),
   item_revision                VARCHAR2(3),
   unit_of_measure_code         VARCHAR2(3),
   quantity                     NUMBER,
   after_warranty_cost          NUMBER,
   return_reason_code           VARCHAR2(30),
   installed_cp_return_by_date  DATE,
   customer_product_id          NUMBER,
   transaction_inventory_org_id NUMBER,
   transaction_sub_inventory    VARCHAR2(10),
   original_source_id           NUMBER,
   original_source_code         VARCHAR2(10),
   source_id                    NUMBER,
   source_code                  VARCHAR2(10)
  );

G_MISS_SBE_REC  SBE_Rec_Type;


-- Get the inventory item's primary unit of measurement.
Procedure Get_Primary_UOM(
   p_inventory_item_id      IN NUMBER,
   x_unit_of_measure_code   OUT NOCOPY VARCHAR2
  );


-------------------------------------------------------------------------
-- Procedure: create_charges
-- Purpose  : This create_charges api can only be evoked from:
--            - Service Debrief
--              Generate either in progress charges or final charges for a service debrief line.
--              Service Debrief should pass in debrief_line_id, p_commit set to false, and p_final_charge_flag
--              set to TRUE or FALSE based on the task assignment status.
--              p_commit set to FALSE is because SD can roll back all changes in case of failure occurs
--              so it can roll back.
--
--              p_api_version_number: Standard Version of API : Required
--              p_init_msg_list: Optional
--              p_commit: Indicates whether API should commit : Optional
--              p_sbe_record: record type parameter
--              p_final_charge_flag: indicating either 'in progress' charges or 'actual' charges will be generated.
--              x_return_status: Return Status of API : Required OUT Param
--                               Status in 'S','U','E'.
--                               'S' is Success
--                               'U' is Unexpected Error
--                               'E' is Expected Error
--              x_msg_count: Number  OUT Param
--              x_msg_data: Varchar2(2000) OUT Param : Contains the msg_data generated by API

PROCEDURE Create_Charges(
   P_Api_Version_Number    IN NUMBER,
   P_Init_Msg_List         IN VARCHAR2 := FND_API.G_FALSE,
   P_Commit                IN VARCHAR2 := FND_API.G_FALSE,
   p_sbe_record            IN SBE_Rec_Type,
   p_final_charge_flag     IN VARCHAR2,
   x_return_status         OUT NOCOPY VARCHAR2,
   x_msg_count             OUT NOCOPY NUMBER,
   x_msg_data              OUT NOCOPY VARCHAR2
   );

PROCEDURE Delete_In_Progress_Charges(
   P_Api_Version_Number    IN NUMBER,
   P_Init_Msg_List         IN VARCHAR2 := FND_API.G_FALSE,
   P_Commit                IN VARCHAR2 := FND_API.G_FALSE,
   p_incident_id           IN NUMBER,
   p_debrief_header_id     IN NUMBER := NULL,
   p_debrief_line_id       IN NUMBER := NULL,
   x_return_status         OUT NOCOPY VARCHAR2,
   x_msg_count             OUT NOCOPY NUMBER,
   x_msg_data              OUT NOCOPY VARCHAR2
   );

END CS_Service_Billing_Engine_PVT;


 

/
