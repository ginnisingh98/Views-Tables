--------------------------------------------------------
--  DDL for Package RLM_VALIDATEDEMAND_SV
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE PACKAGE "APPS"."RLM_VALIDATEDEMAND_SV" AUTHID CURRENT_USER as
/* $Header: RLMDPVDS.pls 120.2.12000000.1 2007/01/18 18:32:00 appldev ship $*/
--<TPA_PUBLIC_NAME=RLM_TPA_SV>
--<TPA_PUBLIC_FILE_NAME=RLMTPDP>

/*===========================================================================
  PACKAGE NAME:    RLM_VALIDATEDEMAND_SV

  DESCRIPTION:     Contains all server side code for the rla validate-demand.

  CLIENT/SERVER:   Server

  LIBRARY NAME:    None

  OWNER:           mnandell

  PROCEDURE/FUNCTIONS:

  GLOBALS:              g_LineId
                        g_Lines_Tab
                        g_SDEBUG
                        g_TDEBUG
                        g_DEBUG

===========================================================================*/

  -- the t_line_rec includes all the attributes which are part of the
  -- rlm_interface_Lines table. We could have used just the %ROWTYPE but
  -- in order to revalidate after the sourcing rules have been applied we
  -- we need another column line_source which will have values
  -- k_original_line and k_mrp_sourced
  -- if mrp_sourced then the derive ids will be called again and the
  -- shipfrom orgs and purchase order number and other ids dependent on
  -- ship from will be recalculated
  --
  -- KEEP IN MIND
  -- if there is a change in the datamodel additions to interface_lines table
  -- this record will have to be changed
  --
  t_lines_rec RLM_INTERFACE_LINES%ROWTYPE;

  TYPE t_Lines_Tab IS TABLE OF RLM_INTERFACE_LINES%ROWTYPE INDEX BY BINARY_INTEGER;

  TYPE g_number_tbl_type IS TABLE OF NUMBER INDEX BY BINARY_INTEGER;


TYPE	AGREEMENT_ID_T             IS TABLE OF RLM_INTERFACE_LINES.AGREEMENT_ID%TYPE INDEX BY BINARY_INTEGER;
TYPE	ATO_DATA_TYPE_T            IS TABLE OF RLM_INTERFACE_LINES.ATO_DATA_TYPE%TYPE INDEX BY BINARY_INTEGER;
TYPE	BILL_TO_ADDRESS_1_EXT_T    IS TABLE OF RLM_INTERFACE_LINES.BILL_TO_ADDRESS_1_EXT%TYPE INDEX BY BINARY_INTEGER;
TYPE	BILL_TO_ADDRESS_2_EXT_T   IS TABLE OF RLM_INTERFACE_LINES.BILL_TO_ADDRESS_2_EXT%TYPE INDEX BY BINARY_INTEGER;
TYPE	BILL_TO_ADDRESS_3_EXT_T   IS TABLE OF RLM_INTERFACE_LINES.BILL_TO_ADDRESS_3_EXT%TYPE INDEX BY BINARY_INTEGER;
TYPE	BILL_TO_ADDRESS_4_EXT_T	   IS TABLE OF RLM_INTERFACE_LINES.BILL_TO_ADDRESS_4_EXT%TYPE INDEX BY BINARY_INTEGER;
TYPE	BILL_TO_ADDRESS_ID_T     IS TABLE OF RLM_INTERFACE_LINES.BILL_TO_ADDRESS_ID%TYPE INDEX BY BINARY_INTEGER;
TYPE	INVOICE_TO_ORG_ID_T      IS TABLE OF RLM_INTERFACE_LINES.INVOICE_TO_ORG_ID %TYPE INDEX BY BINARY_INTEGER;
TYPE	BILL_TO_CITY_EXT_T      IS TABLE OF RLM_INTERFACE_LINES.BILL_TO_CITY_EXT%TYPE INDEX BY BINARY_INTEGER;
TYPE	BILL_TO_COUNTRY_EXT_T   IS TABLE OF RLM_INTERFACE_LINES.BILL_TO_COUNTRY_EXT%TYPE INDEX BY BINARY_INTEGER;
TYPE	BILL_TO_COUNTY_EXT_T    IS TABLE OF RLM_INTERFACE_LINES.BILL_TO_COUNTY_EXT%TYPE INDEX BY BINARY_INTEGER;
TYPE	BILL_TO_NAME_EXT_T      IS TABLE OF RLM_INTERFACE_LINES.BILL_TO_NAME_EXT%TYPE INDEX BY BINARY_INTEGER;
TYPE	BILL_TO_POSTAL_CD_EXT_T   IS TABLE OF RLM_INTERFACE_LINES.BILL_TO_POSTAL_CD_EXT%TYPE INDEX BY BINARY_INTEGER;
TYPE	BILL_TO_PROVINCE_EXT_T   IS TABLE OF RLM_INTERFACE_LINES.BILL_TO_PROVINCE_EXT%TYPE INDEX BY BINARY_INTEGER;
TYPE	BILL_TO_SITE_USE_ID_T    IS TABLE OF RLM_INTERFACE_LINES.BILL_TO_SITE_USE_ID%TYPE INDEX BY BINARY_INTEGER;
TYPE	BILL_TO_STATE_EXT_T      IS TABLE OF RLM_INTERFACE_LINES.BILL_TO_STATE_EXT%TYPE INDEX BY BINARY_INTEGER;
TYPE	CARRIER_ID_CODE_EXT_T    IS TABLE OF RLM_INTERFACE_LINES.CARRIER_ID_CODE_EXT%TYPE INDEX BY BINARY_INTEGER;
TYPE	CARRIER_QUALIFIER_EXT_T   IS TABLE OF RLM_INTERFACE_LINES.CARRIER_QUALIFIER_EXT%TYPE INDEX BY BINARY_INTEGER;
TYPE	COMMODITY_EXT_T          IS TABLE OF RLM_INTERFACE_LINES.COMMODITY_EXT%TYPE INDEX BY BINARY_INTEGER;
TYPE	COUNTRY_OF_ORIGIN_EXT_T   IS TABLE OF RLM_INTERFACE_LINES.COUNTRY_OF_ORIGIN_EXT%TYPE INDEX BY BINARY_INTEGER;
TYPE	CUST_ASSEMBLY_EXT_T       IS TABLE OF RLM_INTERFACE_LINES.CUST_ASSEMBLY_EXT%TYPE INDEX BY BINARY_INTEGER;
TYPE	CUST_ASSIGNED_ID_EXT_T    IS TABLE OF RLM_INTERFACE_LINES.CUST_ASSIGNED_ID_EXT%TYPE INDEX BY BINARY_INTEGER;
TYPE	CUST_BILL_TO_EXT_T        IS TABLE OF RLM_INTERFACE_LINES.CUST_BILL_TO_EXT%TYPE INDEX BY BINARY_INTEGER;
TYPE	CUST_CONTRACT_NUM_EXT_T      IS TABLE OF RLM_INTERFACE_LINES.CUST_CONTRACT_NUM_EXT%TYPE INDEX BY BINARY_INTEGER;
TYPE	CUSTOMER_DOCK_CODE_T         IS TABLE OF RLM_INTERFACE_LINES.CUSTOMER_DOCK_CODE%TYPE INDEX BY BINARY_INTEGER;
TYPE	CUST_INTRMD_SHIP_TO_EXT_T    IS TABLE OF RLM_INTERFACE_LINES.CUST_INTRMD_SHIP_TO_EXT%TYPE INDEX BY BINARY_INTEGER;
TYPE	CUST_ITEM_PRICE_EXT_T        IS TABLE OF RLM_INTERFACE_LINES.CUST_ITEM_PRICE_EXT%TYPE INDEX BY BINARY_INTEGER;
TYPE	CUST_ITEM_PRICE_UOM_EXT_T    IS TABLE OF RLM_INTERFACE_LINES.CUST_ITEM_PRICE_UOM_EXT%TYPE INDEX BY BINARY_INTEGER;
TYPE	CUSTOMER_ITEM_REVISION_T     IS TABLE OF RLM_INTERFACE_LINES.CUSTOMER_ITEM_REVISION%TYPE INDEX BY BINARY_INTEGER;
TYPE	CUSTOMER_JOB_T               IS TABLE OF RLM_INTERFACE_LINES.CUSTOMER_JOB%TYPE INDEX BY BINARY_INTEGER;
TYPE	CUST_MANUFACTURER_EXT_T      IS TABLE OF RLM_INTERFACE_LINES.CUST_MANUFACTURER_EXT%TYPE INDEX BY BINARY_INTEGER;
TYPE	CUST_MODEL_NUMBER_EXT_T      IS TABLE OF RLM_INTERFACE_LINES.CUST_MODEL_NUMBER_EXT%TYPE INDEX BY BINARY_INTEGER;
TYPE	CUST_MODEL_SERIAL_NUMBER_T   IS TABLE OF RLM_INTERFACE_LINES.CUST_MODEL_SERIAL_NUMBER%TYPE INDEX BY BINARY_INTEGER;
TYPE    CUST_ORDER_NUM_EXT_T        IS TABLE OF RLM_INTERFACE_LINES.CUST_ORDER_NUM_EXT%TYPE INDEX BY BINARY_INTEGER;
TYPE	CUST_PROCESS_NUM_EXT_T     IS TABLE OF RLM_INTERFACE_LINES.CUST_PROCESS_NUM_EXT%TYPE INDEX BY BINARY_INTEGER;
TYPE	CUST_SET_NUM_EXT_T            IS TABLE OF RLM_INTERFACE_LINES.CUST_SET_NUM_EXT%TYPE INDEX BY BINARY_INTEGER;
TYPE	CUST_SHIP_FROM_ORG_EXT_T     IS TABLE OF RLM_INTERFACE_LINES.CUST_SHIP_FROM_ORG_EXT%TYPE INDEX BY BINARY_INTEGER;
TYPE	CUST_SHIP_TO_EXT_T           IS TABLE OF RLM_INTERFACE_LINES.CUST_SHIP_TO_EXT%TYPE INDEX BY BINARY_INTEGER;
TYPE	CUST_UOM_EXT_T               IS TABLE OF RLM_INTERFACE_LINES.CUST_UOM_EXT%TYPE INDEX BY BINARY_INTEGER;
TYPE	CUSTOMER_ITEM_EXT_T          IS TABLE OF RLM_INTERFACE_LINES.CUSTOMER_ITEM_EXT%TYPE INDEX BY BINARY_INTEGER;
TYPE	CUSTOMER_ITEM_ID_T           IS TABLE OF RLM_INTERFACE_LINES.CUSTOMER_ITEM_ID%TYPE INDEX BY BINARY_INTEGER;
TYPE	REQUEST_DATE_T               IS TABLE OF RLM_INTERFACE_LINES.REQUEST_DATE%TYPE INDEX BY BINARY_INTEGER;
TYPE	SCHEDULE_DATE_T             IS TABLE OF RLM_INTERFACE_LINES.SCHEDULE_DATE%TYPE INDEX BY BINARY_INTEGER;
TYPE	DATE_TYPE_CODE_T            IS TABLE OF RLM_INTERFACE_LINES.DATE_TYPE_CODE%TYPE INDEX BY BINARY_INTEGER;
TYPE	DATE_TYPE_CODE_EXT_T        IS TABLE OF RLM_INTERFACE_LINES.DATE_TYPE_CODE_EXT%TYPE INDEX BY BINARY_INTEGER;
TYPE	DELIVERY_LEAD_TIME_T        IS TABLE OF RLM_INTERFACE_LINES.DELIVERY_LEAD_TIME%TYPE INDEX BY BINARY_INTEGER;
TYPE	END_DATE_TIME_T	             IS TABLE OF RLM_INTERFACE_LINES.END_DATE_TIME%TYPE INDEX BY BINARY_INTEGER;
TYPE	EQUIPMENT_CODE_EXT_T        IS TABLE OF RLM_INTERFACE_LINES.EQUIPMENT_CODE_EXT%TYPE INDEX BY BINARY_INTEGER;
TYPE	EQUIPMENT_NUMBER_EXT_T      IS TABLE OF RLM_INTERFACE_LINES.EQUIPMENT_NUMBER_EXT%TYPE INDEX BY BINARY_INTEGER;
TYPE	HANDLING_CODE_EXT_T         IS TABLE OF RLM_INTERFACE_LINES.HANDLING_CODE_EXT%TYPE INDEX BY BINARY_INTEGER;
TYPE	HAZARD_CODE_EXT_T           IS TABLE OF RLM_INTERFACE_LINES.HAZARD_CODE_EXT%TYPE INDEX BY BINARY_INTEGER;
TYPE	HAZARD_CODE_QUAL_EXT_T      IS TABLE OF RLM_INTERFACE_LINES.HAZARD_CODE_QUAL_EXT%TYPE INDEX BY BINARY_INTEGER;
TYPE	HAZARD_DESCRIPTION_EXT_T    IS TABLE OF RLM_INTERFACE_LINES.HAZARD_DESCRIPTION_EXT%TYPE INDEX BY BINARY_INTEGER;
TYPE    IMPORT_LICENSE_DATE_EXT_T    IS TABLE OF RLM_INTERFACE_LINES.IMPORT_LICENSE_DATE_EXT%TYPE INDEX BY BINARY_INTEGER;
TYPE	IMPORT_LICENSE_EXT_T         IS TABLE OF RLM_INTERFACE_LINES.IMPORT_LICENSE_EXT%TYPE INDEX BY BINARY_INTEGER;
TYPE	INDUSTRY_ATTRIBUTE1_T        IS TABLE OF RLM_INTERFACE_LINES.INDUSTRY_ATTRIBUTE1%TYPE INDEX BY BINARY_INTEGER;
TYPE	INDUSTRY_ATTRIBUTE10_T       IS TABLE OF RLM_INTERFACE_LINES.INDUSTRY_ATTRIBUTE10%TYPE INDEX BY BINARY_INTEGER;
TYPE	INDUSTRY_ATTRIBUTE11_T       IS TABLE OF RLM_INTERFACE_LINES.INDUSTRY_ATTRIBUTE11%TYPE INDEX BY BINARY_INTEGER;
TYPE	INDUSTRY_ATTRIBUTE12_T       IS TABLE OF RLM_INTERFACE_LINES.INDUSTRY_ATTRIBUTE12%TYPE INDEX BY BINARY_INTEGER;
TYPE	INDUSTRY_ATTRIBUTE13_T       IS TABLE OF RLM_INTERFACE_LINES.INDUSTRY_ATTRIBUTE13%TYPE INDEX BY BINARY_INTEGER;
TYPE	INDUSTRY_ATTRIBUTE14_T       IS TABLE OF RLM_INTERFACE_LINES.INDUSTRY_ATTRIBUTE14%TYPE INDEX BY BINARY_INTEGER;
TYPE	INDUSTRY_ATTRIBUTE15_T       IS TABLE OF RLM_INTERFACE_LINES.INDUSTRY_ATTRIBUTE15%TYPE INDEX BY BINARY_INTEGER;
TYPE	INDUSTRY_ATTRIBUTE2_T        IS TABLE OF RLM_INTERFACE_LINES.INDUSTRY_ATTRIBUTE2%TYPE INDEX BY BINARY_INTEGER;
TYPE	INDUSTRY_ATTRIBUTE3_T        IS TABLE OF RLM_INTERFACE_LINES.INDUSTRY_ATTRIBUTE3%TYPE INDEX BY BINARY_INTEGER;
TYPE	INDUSTRY_ATTRIBUTE4_T        IS TABLE OF RLM_INTERFACE_LINES.INDUSTRY_ATTRIBUTE4%TYPE INDEX BY BINARY_INTEGER;
TYPE	INDUSTRY_ATTRIBUTE5_T        IS TABLE OF RLM_INTERFACE_LINES.INDUSTRY_ATTRIBUTE5%TYPE INDEX BY BINARY_INTEGER;
TYPE	INDUSTRY_ATTRIBUTE6_T        IS TABLE OF RLM_INTERFACE_LINES.INDUSTRY_ATTRIBUTE6%TYPE INDEX BY BINARY_INTEGER;
TYPE	INDUSTRY_ATTRIBUTE7_T        IS TABLE OF RLM_INTERFACE_LINES.INDUSTRY_ATTRIBUTE7%TYPE INDEX BY BINARY_INTEGER;
TYPE	INDUSTRY_ATTRIBUTE8_T        IS TABLE OF RLM_INTERFACE_LINES.INDUSTRY_ATTRIBUTE8%TYPE INDEX BY BINARY_INTEGER;
TYPE	INDUSTRY_ATTRIBUTE9_T        IS TABLE OF RLM_INTERFACE_LINES.INDUSTRY_ATTRIBUTE9%TYPE INDEX BY BINARY_INTEGER;
TYPE	INDUSTRY_CONTEXT_T           IS TABLE OF RLM_INTERFACE_LINES.INDUSTRY_CONTEXT%TYPE INDEX BY BINARY_INTEGER;
TYPE	INTRMD_SHIP_TO_ID_T          IS TABLE OF RLM_INTERFACE_LINES.INTRMD_SHIP_TO_ID%TYPE INDEX BY BINARY_INTEGER;
TYPE	SHIP_TO_ORG_ID_T             IS TABLE OF RLM_INTERFACE_LINES.SHIP_TO_ORG_ID   %TYPE INDEX BY BINARY_INTEGER;
TYPE	INTRMD_ST_ADDRESS_1_EXT_T    IS TABLE OF RLM_INTERFACE_LINES.INTRMD_ST_ADDRESS_1_EXT%TYPE INDEX BY BINARY_INTEGER;
TYPE	INTRMD_ST_ADDRESS_2_EXT_T    IS TABLE OF RLM_INTERFACE_LINES.INTRMD_ST_ADDRESS_2_EXT%TYPE INDEX BY BINARY_INTEGER;
TYPE	INTRMD_ST_ADDRESS_3_EXT_T    IS TABLE OF RLM_INTERFACE_LINES.INTRMD_ST_ADDRESS_3_EXT%TYPE INDEX BY BINARY_INTEGER;
TYPE	INTRMD_ST_ADDRESS_4_EXT_T    IS TABLE OF RLM_INTERFACE_LINES.INTRMD_ST_ADDRESS_4_EXT%TYPE INDEX BY BINARY_INTEGER;
TYPE	INTRMD_ST_CITY_EXT_T         IS TABLE OF RLM_INTERFACE_LINES.INTRMD_ST_CITY_EXT%TYPE INDEX BY BINARY_INTEGER;
TYPE	INTRMD_ST_COUNTRY_EXT_T      IS TABLE OF RLM_INTERFACE_LINES.INTRMD_ST_COUNTRY_EXT%TYPE INDEX BY BINARY_INTEGER;
TYPE	INTRMD_ST_COUNTY_EXT_T       IS TABLE OF RLM_INTERFACE_LINES.INTRMD_ST_COUNTY_EXT%TYPE INDEX BY BINARY_INTEGER;
TYPE	INTRMD_ST_NAME_EXT_T         IS TABLE OF RLM_INTERFACE_LINES.INTRMD_ST_NAME_EXT%TYPE INDEX BY BINARY_INTEGER;
TYPE	INTRMD_ST_POSTAL_CD_EXT_T    IS TABLE OF RLM_INTERFACE_LINES.INTRMD_ST_POSTAL_CD_EXT%TYPE INDEX BY BINARY_INTEGER;
TYPE	INTRMD_ST_PROVINCE_EXT_T    IS TABLE OF RLM_INTERFACE_LINES.INTRMD_ST_PROVINCE_EXT%TYPE INDEX BY BINARY_INTEGER;
TYPE	INTRMD_ST_STATE_EXT_T       IS TABLE OF RLM_INTERFACE_LINES.INTRMD_ST_STATE_EXT%TYPE INDEX BY BINARY_INTEGER;
TYPE	INTRMD_ST_SITE_USE_ID_T     IS TABLE OF RLM_INTERFACE_LINES.INTRMD_ST_SITE_USE_ID%TYPE INDEX BY BINARY_INTEGER;
TYPE	INVENTORY_ITEM_ID_T         IS TABLE OF RLM_INTERFACE_LINES.INVENTORY_ITEM_ID%TYPE INDEX BY BINARY_INTEGER;
TYPE	INVENTORY_ITEM_SEGMENT1_T   IS TABLE OF RLM_INTERFACE_LINES.INVENTORY_ITEM_SEGMENT1%TYPE INDEX BY BINARY_INTEGER;
TYPE	INVENTORY_ITEM_SEGMENT10_T     IS TABLE OF RLM_INTERFACE_LINES.INVENTORY_ITEM_SEGMENT10%TYPE INDEX BY BINARY_INTEGER;
TYPE	INVENTORY_ITEM_SEGMENT11_T     IS TABLE OF RLM_INTERFACE_LINES.INVENTORY_ITEM_SEGMENT11%TYPE INDEX BY BINARY_INTEGER;
TYPE	INVENTORY_ITEM_SEGMENT12_T     IS TABLE OF RLM_INTERFACE_LINES.INVENTORY_ITEM_SEGMENT12%TYPE INDEX BY BINARY_INTEGER;
TYPE	INVENTORY_ITEM_SEGMENT13_T     IS TABLE OF RLM_INTERFACE_LINES.INVENTORY_ITEM_SEGMENT13%TYPE INDEX BY BINARY_INTEGER;
TYPE	INVENTORY_ITEM_SEGMENT14_T     IS TABLE OF RLM_INTERFACE_LINES.INVENTORY_ITEM_SEGMENT14%TYPE INDEX BY BINARY_INTEGER;
TYPE	INVENTORY_ITEM_SEGMENT15_T     IS TABLE OF RLM_INTERFACE_LINES.INVENTORY_ITEM_SEGMENT15%TYPE INDEX BY BINARY_INTEGER;
TYPE	INVENTORY_ITEM_SEGMENT16_T     IS TABLE OF RLM_INTERFACE_LINES.INVENTORY_ITEM_SEGMENT16%TYPE INDEX BY BINARY_INTEGER;
TYPE	INVENTORY_ITEM_SEGMENT17_T     IS TABLE OF RLM_INTERFACE_LINES.INVENTORY_ITEM_SEGMENT17%TYPE INDEX BY BINARY_INTEGER;
TYPE	INVENTORY_ITEM_SEGMENT18_T     IS TABLE OF RLM_INTERFACE_LINES.INVENTORY_ITEM_SEGMENT18%TYPE INDEX BY BINARY_INTEGER;
TYPE	INVENTORY_ITEM_SEGMENT19_T     IS TABLE OF RLM_INTERFACE_LINES.INVENTORY_ITEM_SEGMENT19%TYPE INDEX BY BINARY_INTEGER;
TYPE	INVENTORY_ITEM_SEGMENT2_T      IS TABLE OF RLM_INTERFACE_LINES.INVENTORY_ITEM_SEGMENT2%TYPE INDEX BY BINARY_INTEGER;
TYPE	INVENTORY_ITEM_SEGMENT20_T     IS TABLE OF RLM_INTERFACE_LINES.INVENTORY_ITEM_SEGMENT20%TYPE INDEX BY BINARY_INTEGER;
TYPE	INVENTORY_ITEM_SEGMENT3_T     IS TABLE OF RLM_INTERFACE_LINES.INVENTORY_ITEM_SEGMENT3%TYPE INDEX BY BINARY_INTEGER;
TYPE	INVENTORY_ITEM_SEGMENT4_T     IS TABLE OF RLM_INTERFACE_LINES.INVENTORY_ITEM_SEGMENT4%TYPE INDEX BY BINARY_INTEGER;
TYPE	INVENTORY_ITEM_SEGMENT5_T     IS TABLE OF RLM_INTERFACE_LINES.INVENTORY_ITEM_SEGMENT5%TYPE INDEX BY BINARY_INTEGER;
TYPE	INVENTORY_ITEM_SEGMENT6_T     IS TABLE OF RLM_INTERFACE_LINES.INVENTORY_ITEM_SEGMENT6%TYPE INDEX BY BINARY_INTEGER;
TYPE	INVENTORY_ITEM_SEGMENT7_T     IS TABLE OF RLM_INTERFACE_LINES.INVENTORY_ITEM_SEGMENT7%TYPE INDEX BY BINARY_INTEGER;
TYPE	INVENTORY_ITEM_SEGMENT8_T     IS TABLE OF RLM_INTERFACE_LINES.INVENTORY_ITEM_SEGMENT8%TYPE INDEX BY BINARY_INTEGER;
TYPE	INVENTORY_ITEM_SEGMENT9_T     IS TABLE OF RLM_INTERFACE_LINES.INVENTORY_ITEM_SEGMENT9%TYPE INDEX BY BINARY_INTEGER;
TYPE	ITEM_CONTACT_CODE_1_T        IS TABLE OF RLM_INTERFACE_LINES.ITEM_CONTACT_CODE_1%TYPE INDEX BY BINARY_INTEGER;
TYPE	ITEM_CONTACT_CODE_2_T        IS TABLE OF RLM_INTERFACE_LINES.ITEM_CONTACT_CODE_2%TYPE INDEX BY BINARY_INTEGER;
TYPE	ITEM_CONTACT_VALUE_1_T       IS TABLE OF RLM_INTERFACE_LINES.ITEM_CONTACT_VALUE_1%TYPE INDEX BY BINARY_INTEGER;
TYPE	ITEM_CONTACT_VALUE_2_T       IS TABLE OF RLM_INTERFACE_LINES.ITEM_CONTACT_VALUE_2%TYPE INDEX BY BINARY_INTEGER;
TYPE	ITEM_DESCRIPTION_EXT_T       IS TABLE OF RLM_INTERFACE_LINES.ITEM_DESCRIPTION_EXT%TYPE INDEX BY BINARY_INTEGER;
TYPE	ITEM_DETAIL_QUANTITY_T       IS TABLE OF RLM_INTERFACE_LINES.ITEM_DETAIL_QUANTITY%TYPE INDEX BY BINARY_INTEGER;
TYPE	ITEM_DETAIL_REF_CODE_1_T     IS TABLE OF RLM_INTERFACE_LINES.ITEM_DETAIL_REF_CODE_1%TYPE INDEX BY BINARY_INTEGER;
TYPE	ITEM_DETAIL_REF_CODE_2_T     IS TABLE OF RLM_INTERFACE_LINES.ITEM_DETAIL_REF_CODE_2%TYPE INDEX BY BINARY_INTEGER;
TYPE	ITEM_DETAIL_REF_CODE_3_T     IS TABLE OF RLM_INTERFACE_LINES.ITEM_DETAIL_REF_CODE_3%TYPE INDEX BY BINARY_INTEGER;
TYPE	ITEM_DETAIL_REF_VALUE_1_T    IS TABLE OF RLM_INTERFACE_LINES.ITEM_DETAIL_REF_VALUE_1%TYPE INDEX BY BINARY_INTEGER;
TYPE	ITEM_DETAIL_REF_VALUE_2_T    IS TABLE OF RLM_INTERFACE_LINES.ITEM_DETAIL_REF_VALUE_2%TYPE INDEX BY BINARY_INTEGER;
TYPE	ITEM_DETAIL_REF_VALUE_3_T    IS TABLE OF RLM_INTERFACE_LINES.ITEM_DETAIL_REF_VALUE_3%TYPE INDEX BY BINARY_INTEGER;
TYPE	ITEM_DETAIL_SUBTYPE_T        IS TABLE OF RLM_INTERFACE_LINES.ITEM_DETAIL_SUBTYPE%TYPE INDEX BY BINARY_INTEGER;
TYPE	ITEM_DETAIL_SUBTYPE_EXT_T    IS TABLE OF RLM_INTERFACE_LINES.ITEM_DETAIL_SUBTYPE_EXT%TYPE INDEX BY BINARY_INTEGER;
TYPE	ITEM_DETAIL_TYPE_T           IS TABLE OF RLM_INTERFACE_LINES.ITEM_DETAIL_TYPE%TYPE INDEX BY BINARY_INTEGER;
TYPE	ITEM_DETAIL_TYPE_EXT_T       IS TABLE OF RLM_INTERFACE_LINES.ITEM_DETAIL_TYPE_EXT%TYPE INDEX BY BINARY_INTEGER;
TYPE	ITEM_ENG_CNG_LVL_EXT_T       IS TABLE OF RLM_INTERFACE_LINES.ITEM_ENG_CNG_LVL_EXT%TYPE INDEX BY BINARY_INTEGER;
TYPE	ITEM_MEASUREMENTS_EXT_T      IS TABLE OF RLM_INTERFACE_LINES.ITEM_MEASUREMENTS_EXT%TYPE INDEX BY BINARY_INTEGER;
TYPE	ITEM_NOTE_TEXT_T             IS TABLE OF RLM_INTERFACE_LINES.ITEM_NOTE_TEXT%TYPE INDEX BY BINARY_INTEGER;
TYPE	ITEM_REF_CODE_1_T            IS TABLE OF RLM_INTERFACE_LINES.ITEM_REF_CODE_1%TYPE INDEX BY BINARY_INTEGER;
TYPE	ITEM_REF_CODE_2_T           IS TABLE OF RLM_INTERFACE_LINES.ITEM_REF_CODE_2%TYPE INDEX BY BINARY_INTEGER;
TYPE	ITEM_REF_CODE_3_T           IS TABLE OF RLM_INTERFACE_LINES.ITEM_REF_CODE_3%TYPE INDEX BY BINARY_INTEGER;
TYPE	ITEM_REF_VALUE_1_T          IS TABLE OF RLM_INTERFACE_LINES.ITEM_REF_VALUE_1%TYPE INDEX BY BINARY_INTEGER;
TYPE	ITEM_REF_VALUE_2_T          IS TABLE OF RLM_INTERFACE_LINES.ITEM_REF_VALUE_2%TYPE INDEX BY BINARY_INTEGER;
TYPE	ITEM_REF_VALUE_3_T          IS TABLE OF RLM_INTERFACE_LINES.ITEM_REF_VALUE_3%TYPE INDEX BY BINARY_INTEGER;
TYPE	ITEM_RELEASE_STATUS_EXT_T   IS TABLE OF RLM_INTERFACE_LINES.ITEM_RELEASE_STATUS_EXT%TYPE INDEX BY BINARY_INTEGER;
TYPE	LADING_QUANTITY_EXT_T       IS TABLE OF RLM_INTERFACE_LINES.LADING_QUANTITY_EXT%TYPE INDEX BY BINARY_INTEGER;
TYPE	LETTER_CREDIT_EXPDT_EXT_T   IS TABLE OF RLM_INTERFACE_LINES.LETTER_CREDIT_EXPDT_EXT%TYPE INDEX BY BINARY_INTEGER;
TYPE	LETTER_CREDIT_EXT_T         IS TABLE OF RLM_INTERFACE_LINES.LETTER_CREDIT_EXT%TYPE INDEX BY BINARY_INTEGER;
TYPE	LINE_REFERENCE_T            IS TABLE OF RLM_INTERFACE_LINES.LINE_REFERENCE%TYPE INDEX BY BINARY_INTEGER;
TYPE	LINK_TO_LINE_REF_T          IS TABLE OF RLM_INTERFACE_LINES.LINK_TO_LINE_REF%TYPE INDEX BY BINARY_INTEGER;
TYPE    ORDER_HEADER_ID_T	   IS TABLE OF RLM_INTERFACE_LINES.ORDER_HEADER_ID%TYPE INDEX BY BINARY_INTEGER;
TYPE	OTHER_NAME_CODE_1_T         IS TABLE OF RLM_INTERFACE_LINES.OTHER_NAME_CODE_1%TYPE INDEX BY BINARY_INTEGER;
TYPE    OTHER_NAME_CODE_2_T         IS TABLE OF RLM_INTERFACE_LINES.OTHER_NAME_CODE_2%TYPE INDEX BY BINARY_INTEGER;
TYPE	OTHER_NAME_VALUE_1_T        IS TABLE OF RLM_INTERFACE_LINES.OTHER_NAME_VALUE_1%TYPE INDEX BY BINARY_INTEGER;
TYPE	OTHER_NAME_VALUE_2_T        IS TABLE OF RLM_INTERFACE_LINES.OTHER_NAME_VALUE_2%TYPE INDEX BY BINARY_INTEGER;
TYPE	PACK_SIZE_EXT_T		   IS TABLE OF RLM_INTERFACE_LINES.PACK_SIZE_EXT%TYPE INDEX BY BINARY_INTEGER;
TYPE	PACK_UNITS_PER_PACK_EXT_T   IS TABLE OF RLM_INTERFACE_LINES.PACK_UNITS_PER_PACK_EXT%TYPE INDEX BY BINARY_INTEGER;
TYPE	PACK_UOM_CODE_EXT_T         IS TABLE OF RLM_INTERFACE_LINES.PACK_UOM_CODE_EXT%TYPE INDEX BY BINARY_INTEGER;
TYPE	PACKAGING_CODE_EXT_T        IS TABLE OF RLM_INTERFACE_LINES.PACKAGING_CODE_EXT%TYPE INDEX BY BINARY_INTEGER;
TYPE	PARENT_LINK_LINE_REF_T      IS TABLE OF RLM_INTERFACE_LINES.PARENT_LINK_LINE_REF%TYPE INDEX BY BINARY_INTEGER;
TYPE	CUST_PRODUCTION_SEQ_NUM_T   IS TABLE OF RLM_INTERFACE_LINES.CUST_PRODUCTION_SEQ_NUM%TYPE INDEX BY BINARY_INTEGER;
TYPE	PRICE_LIST_ID_T             IS TABLE OF RLM_INTERFACE_LINES.PRICE_LIST_ID%TYPE INDEX BY BINARY_INTEGER;
TYPE	PRIMARY_QUANTITY_T          IS TABLE OF RLM_INTERFACE_LINES.PRIMARY_QUANTITY%TYPE INDEX BY BINARY_INTEGER;
TYPE	PRIMARY_UOM_CODE_T          IS TABLE OF RLM_INTERFACE_LINES.PRIMARY_UOM_CODE%TYPE INDEX BY BINARY_INTEGER;
TYPE	PRIME_CONTRCTR_PART_EXT_T   IS TABLE OF RLM_INTERFACE_LINES.PRIME_CONTRCTR_PART_EXT%TYPE INDEX BY BINARY_INTEGER;
TYPE	PROCESS_STATUS_T            IS TABLE OF RLM_INTERFACE_LINES.PROCESS_STATUS%TYPE INDEX BY BINARY_INTEGER;
TYPE	CUST_PO_RELEASE_NUM_T       IS TABLE OF RLM_INTERFACE_LINES.CUST_PO_RELEASE_NUM%TYPE INDEX BY BINARY_INTEGER;
TYPE	CUST_PO_DATE_T              IS TABLE OF RLM_INTERFACE_LINES.CUST_PO_DATE%TYPE INDEX BY BINARY_INTEGER;
TYPE	CUST_PO_LINE_NUM_T          IS TABLE OF RLM_INTERFACE_LINES.CUST_PO_LINE_NUM%TYPE INDEX BY BINARY_INTEGER;
TYPE	CUST_PO_NUMBER_T            IS TABLE OF RLM_INTERFACE_LINES.CUST_PO_NUMBER%TYPE INDEX BY BINARY_INTEGER;
TYPE	QTY_TYPE_CODE_T             IS TABLE OF RLM_INTERFACE_LINES.QTY_TYPE_CODE%TYPE INDEX BY BINARY_INTEGER;
TYPE	QTY_TYPE_CODE_EXT_T         IS TABLE OF RLM_INTERFACE_LINES.QTY_TYPE_CODE_EXT%TYPE INDEX BY BINARY_INTEGER;
TYPE	RETURN_CONTAINER_EXT_T      IS TABLE OF RLM_INTERFACE_LINES.RETURN_CONTAINER_EXT%TYPE INDEX BY BINARY_INTEGER;
TYPE	SCHEDULE_LINE_ID_T          IS TABLE OF RLM_INTERFACE_LINES.SCHEDULE_LINE_ID%TYPE INDEX BY BINARY_INTEGER;
TYPE	ROUTING_DESC_EXT_T          IS TABLE OF RLM_INTERFACE_LINES.ROUTING_DESC_EXT%TYPE INDEX BY BINARY_INTEGER;
TYPE	ROUTING_SEQ_CODE_EXT_T      IS TABLE OF RLM_INTERFACE_LINES.ROUTING_SEQ_CODE_EXT%TYPE INDEX BY BINARY_INTEGER;
TYPE	SCHEDULE_ITEM_NUM_T         IS TABLE OF RLM_INTERFACE_LINES.SCHEDULE_ITEM_NUM%TYPE INDEX BY BINARY_INTEGER;
TYPE	SHIP_DEL_PATTERN_EXT_T      IS TABLE OF RLM_INTERFACE_LINES.SHIP_DEL_PATTERN_EXT%TYPE INDEX BY BINARY_INTEGER;
TYPE	SHIP_DEL_TIME_CODE_EXT_T    IS TABLE OF RLM_INTERFACE_LINES.SHIP_DEL_TIME_CODE_EXT%TYPE INDEX BY BINARY_INTEGER;
TYPE	SHIP_DEL_RULE_NAME_T        IS TABLE OF RLM_INTERFACE_LINES.SHIP_DEL_RULE_NAME%TYPE INDEX BY BINARY_INTEGER;
TYPE	SHIP_FROM_ADDRESS_1_EXT_T   IS TABLE OF RLM_INTERFACE_LINES.SHIP_FROM_ADDRESS_1_EXT%TYPE INDEX BY BINARY_INTEGER;
TYPE	SHIP_FROM_ADDRESS_2_EXT_T   IS TABLE OF RLM_INTERFACE_LINES.SHIP_FROM_ADDRESS_2_EXT%TYPE INDEX BY BINARY_INTEGER;
TYPE	SHIP_FROM_ADDRESS_3_EXT_T   IS TABLE OF RLM_INTERFACE_LINES.SHIP_FROM_ADDRESS_3_EXT%TYPE INDEX BY BINARY_INTEGER;
TYPE	SHIP_FROM_ADDRESS_4_EXT_T   IS TABLE OF RLM_INTERFACE_LINES.SHIP_FROM_ADDRESS_4_EXT%TYPE INDEX BY BINARY_INTEGER;
TYPE	SHIP_FROM_CITY_EXT_T        IS TABLE OF RLM_INTERFACE_LINES.SHIP_FROM_CITY_EXT%TYPE INDEX BY BINARY_INTEGER;
TYPE	SHIP_FROM_COUNTRY_EXT_T     IS TABLE OF RLM_INTERFACE_LINES.SHIP_FROM_COUNTRY_EXT%TYPE INDEX BY BINARY_INTEGER;
TYPE	SHIP_FROM_COUNTY_EXT_T      IS TABLE OF RLM_INTERFACE_LINES.SHIP_FROM_COUNTY_EXT%TYPE INDEX BY BINARY_INTEGER;
TYPE	SHIP_FROM_NAME_EXT_T        IS TABLE OF RLM_INTERFACE_LINES.SHIP_FROM_NAME_EXT%TYPE INDEX BY BINARY_INTEGER;
TYPE	SHIP_FROM_ORG_ID_T          IS TABLE OF RLM_INTERFACE_LINES.SHIP_FROM_ORG_ID%TYPE INDEX BY BINARY_INTEGER;
TYPE	SHIP_FROM_POSTAL_CD_EXT_T   IS TABLE OF RLM_INTERFACE_LINES.SHIP_FROM_POSTAL_CD_EXT%TYPE INDEX BY BINARY_INTEGER;
TYPE    SHIP_FROM_PROVINCE_EXT_T    IS TABLE OF RLM_INTERFACE_LINES.SHIP_FROM_PROVINCE_EXT%TYPE INDEX BY BINARY_INTEGER;
TYPE	SHIP_FROM_STATE_EXT_T       IS TABLE OF RLM_INTERFACE_LINES.SHIP_FROM_STATE_EXT%TYPE INDEX BY BINARY_INTEGER;
TYPE	SHIP_LABEL_INFO_LINE_1_T    IS TABLE OF RLM_INTERFACE_LINES.SHIP_LABEL_INFO_LINE_1%TYPE INDEX BY BINARY_INTEGER;
TYPE	SHIP_LABEL_INFO_LINE_10_T   IS TABLE OF RLM_INTERFACE_LINES.SHIP_LABEL_INFO_LINE_10%TYPE INDEX BY BINARY_INTEGER;
TYPE	SHIP_LABEL_INFO_LINE_2_T    IS TABLE OF RLM_INTERFACE_LINES.SHIP_LABEL_INFO_LINE_2%TYPE INDEX BY BINARY_INTEGER;
TYPE	SHIP_LABEL_INFO_LINE_3_T    IS TABLE OF RLM_INTERFACE_LINES.SHIP_LABEL_INFO_LINE_3%TYPE INDEX BY BINARY_INTEGER;
TYPE	SHIP_LABEL_INFO_LINE_4_T    IS TABLE OF RLM_INTERFACE_LINES.SHIP_LABEL_INFO_LINE_4%TYPE INDEX BY BINARY_INTEGER;
TYPE	SHIP_LABEL_INFO_LINE_5_T    IS TABLE OF RLM_INTERFACE_LINES.SHIP_LABEL_INFO_LINE_5%TYPE INDEX BY BINARY_INTEGER;
TYPE	SHIP_LABEL_INFO_LINE_6_T    IS TABLE OF RLM_INTERFACE_LINES.SHIP_LABEL_INFO_LINE_6%TYPE INDEX BY BINARY_INTEGER;
TYPE	SHIP_LABEL_INFO_LINE_7_T    IS TABLE OF RLM_INTERFACE_LINES.SHIP_LABEL_INFO_LINE_7%TYPE INDEX BY BINARY_INTEGER;
TYPE	SHIP_LABEL_INFO_LINE_8_T    IS TABLE OF RLM_INTERFACE_LINES.SHIP_LABEL_INFO_LINE_8%TYPE INDEX BY BINARY_INTEGER;
TYPE	SHIP_LABEL_INFO_LINE_9_T    IS TABLE OF RLM_INTERFACE_LINES.SHIP_LABEL_INFO_LINE_9%TYPE INDEX BY BINARY_INTEGER;
TYPE	SHIP_TO_ADDRESS_1_EXT_T     IS TABLE OF RLM_INTERFACE_LINES.SHIP_TO_ADDRESS_1_EXT%TYPE INDEX BY BINARY_INTEGER;
TYPE	SHIP_TO_ADDRESS_2_EXT_T      IS TABLE OF RLM_INTERFACE_LINES.SHIP_TO_ADDRESS_2_EXT%TYPE INDEX BY BINARY_INTEGER;
TYPE	SHIP_TO_ADDRESS_3_EXT_T      IS TABLE OF RLM_INTERFACE_LINES.SHIP_TO_ADDRESS_3_EXT%TYPE INDEX BY BINARY_INTEGER;
TYPE	SHIP_TO_ADDRESS_4_EXT_T	IS TABLE OF RLM_INTERFACE_LINES.SHIP_TO_ADDRESS_4_EXT%TYPE INDEX BY BINARY_INTEGER;
TYPE    SHIP_TO_ADDRESS_ID_T         IS TABLE OF RLM_INTERFACE_LINES.SHIP_TO_ADDRESS_ID%TYPE INDEX BY BINARY_INTEGER;
TYPE	DELIVER_TO_ORG_ID_T	    IS TABLE OF RLM_INTERFACE_LINES.DELIVER_TO_ORG_ID %TYPE INDEX BY BINARY_INTEGER;
TYPE	SHIP_TO_CITY_EXT_T	     IS TABLE OF RLM_INTERFACE_LINES.SHIP_TO_CITY_EXT%TYPE INDEX BY BINARY_INTEGER;
TYPE	SHIP_TO_COUNTRY_EXT_T	  IS TABLE OF RLM_INTERFACE_LINES.SHIP_TO_COUNTRY_EXT%TYPE INDEX BY BINARY_INTEGER;
TYPE	SHIP_TO_COUNTY_EXT_T	   IS TABLE OF RLM_INTERFACE_LINES.SHIP_TO_COUNTY_EXT%TYPE INDEX BY BINARY_INTEGER;
TYPE	SHIP_TO_NAME_EXT_T	     IS TABLE OF RLM_INTERFACE_LINES.SHIP_TO_NAME_EXT%TYPE INDEX BY BINARY_INTEGER;
TYPE	SHIP_TO_POSTAL_CD_EXT_T	IS TABLE OF RLM_INTERFACE_LINES.SHIP_TO_POSTAL_CD_EXT%TYPE INDEX BY BINARY_INTEGER;
TYPE	SHIP_TO_PROVINCE_EXT_T	 IS TABLE OF RLM_INTERFACE_LINES.SHIP_TO_PROVINCE_EXT%TYPE INDEX BY BINARY_INTEGER;
TYPE	SHIP_TO_SITE_USE_ID_T	  IS TABLE OF RLM_INTERFACE_LINES.SHIP_TO_SITE_USE_ID%TYPE INDEX BY BINARY_INTEGER;
TYPE	SHIP_TO_STATE_EXT_T	    IS TABLE OF RLM_INTERFACE_LINES.SHIP_TO_STATE_EXT%TYPE INDEX BY BINARY_INTEGER;
TYPE	START_DATE_TIME_T	IS TABLE OF RLM_INTERFACE_LINES.START_DATE_TIME%TYPE INDEX BY BINARY_INTEGER;
TYPE	SUBLINE_ASSIGNED_ID_EXT_T    IS TABLE OF RLM_INTERFACE_LINES.SUBLINE_ASSIGNED_ID_EXT%TYPE INDEX BY BINARY_INTEGER;
TYPE	SUBLINE_CONFIG_CODE_EXT_T    IS TABLE OF RLM_INTERFACE_LINES.SUBLINE_CONFIG_CODE_EXT%TYPE INDEX BY BINARY_INTEGER;
TYPE	SUBLINE_CUST_ITEM_EXT_T	IS TABLE OF RLM_INTERFACE_LINES.SUBLINE_CUST_ITEM_EXT%TYPE INDEX BY BINARY_INTEGER;
TYPE	SUBLINE_CUST_ITEM_ID_T	 IS TABLE OF RLM_INTERFACE_LINES.SUBLINE_CUST_ITEM_ID%TYPE INDEX BY BINARY_INTEGER;
TYPE	SUBLINE_MODEL_NUM_EXT_T	IS TABLE OF RLM_INTERFACE_LINES.SUBLINE_MODEL_NUM_EXT%TYPE INDEX BY BINARY_INTEGER;
TYPE	SUBLINE_QUANTITY_T	    IS TABLE OF RLM_INTERFACE_LINES.SUBLINE_QUANTITY%TYPE INDEX BY BINARY_INTEGER;
TYPE	SUBLINE_UOM_CODE_T	    IS TABLE OF RLM_INTERFACE_LINES.SUBLINE_UOM_CODE%TYPE INDEX BY BINARY_INTEGER;
TYPE	SUPPLIER_ITEM_EXT_T	   IS TABLE OF RLM_INTERFACE_LINES.SUPPLIER_ITEM_EXT%TYPE INDEX BY BINARY_INTEGER;
TYPE	TRANSIT_TIME_EXT_T	    IS TABLE OF RLM_INTERFACE_LINES.TRANSIT_TIME_EXT%TYPE INDEX BY BINARY_INTEGER;
TYPE	TRANSIT_TIME_QUAL_EXT_T     IS TABLE OF RLM_INTERFACE_LINES.TRANSIT_TIME_QUAL_EXT%TYPE INDEX BY BINARY_INTEGER;
TYPE	TRANSPORT_LOC_QUAL_EXT_T    IS TABLE OF RLM_INTERFACE_LINES.TRANSPORT_LOC_QUAL_EXT%TYPE INDEX BY BINARY_INTEGER;
TYPE	TRANSPORT_LOCATION_EXT_T    IS TABLE OF RLM_INTERFACE_LINES.TRANSPORT_LOCATION_EXT%TYPE INDEX BY BINARY_INTEGER;
TYPE	TRANSPORT_METHOD_EXT_T     IS TABLE OF RLM_INTERFACE_LINES.TRANSPORT_METHOD_EXT%TYPE INDEX BY BINARY_INTEGER;
TYPE	UOM_CODE_T	    IS TABLE OF RLM_INTERFACE_LINES.UOM_CODE%TYPE INDEX BY BINARY_INTEGER;
TYPE	WEIGHT_EXT_T	 IS TABLE OF RLM_INTERFACE_LINES.WEIGHT_EXT%TYPE INDEX BY BINARY_INTEGER;
TYPE	WEIGHT_QUALIFIER_EXT_T    IS TABLE OF RLM_INTERFACE_LINES.WEIGHT_QUALIFIER_EXT%TYPE INDEX BY BINARY_INTEGER;
TYPE	WEIGHT_UOM_EXT_T	    IS TABLE OF RLM_INTERFACE_LINES.WEIGHT_UOM_EXT%TYPE INDEX BY BINARY_INTEGER;
TYPE	FBO_CONFIGURATION_KEY_1_T    IS TABLE OF RLM_INTERFACE_LINES.FBO_CONFIGURATION_KEY_1%TYPE INDEX BY BINARY_INTEGER;
TYPE	FBO_CONFIGURATION_KEY_2_T   IS TABLE OF RLM_INTERFACE_LINES.FBO_CONFIGURATION_KEY_2%TYPE INDEX BY BINARY_INTEGER;
TYPE	FBO_CONFIGURATION_KEY_3_T   IS TABLE OF RLM_INTERFACE_LINES.FBO_CONFIGURATION_KEY_3%TYPE INDEX BY BINARY_INTEGER;
TYPE	FBO_CONFIGURATION_KEY_4_T   IS TABLE OF RLM_INTERFACE_LINES.FBO_CONFIGURATION_KEY_4%TYPE INDEX BY BINARY_INTEGER;
TYPE	FBO_CONFIGURATION_KEY_5_T   IS TABLE OF RLM_INTERFACE_LINES.FBO_CONFIGURATION_KEY_5%TYPE INDEX BY BINARY_INTEGER;
TYPE	MATCH_KEY_ACROSS_T	    IS TABLE OF RLM_INTERFACE_LINES.MATCH_KEY_ACROSS%TYPE INDEX BY BINARY_INTEGER;
TYPE	MATCH_KEY_WITHIN_T	    IS TABLE OF RLM_INTERFACE_LINES.MATCH_KEY_WITHIN%TYPE INDEX BY BINARY_INTEGER;
TYPE	CRITICAL_KEY_ATTRIBUTES_T   IS TABLE OF RLM_INTERFACE_LINES.CRITICAL_KEY_ATTRIBUTES%TYPE INDEX BY BINARY_INTEGER;
TYPE	ATTRIBUTE_CATEGORY_T	  IS TABLE OF RLM_INTERFACE_LINES.ATTRIBUTE_CATEGORY%TYPE INDEX BY BINARY_INTEGER;
TYPE	ATTRIBUTE1_T	    IS TABLE OF RLM_INTERFACE_LINES.ATTRIBUTE1%TYPE INDEX BY BINARY_INTEGER;
TYPE	ATTRIBUTE2_T	    IS TABLE OF RLM_INTERFACE_LINES.ATTRIBUTE2%TYPE INDEX BY BINARY_INTEGER;
TYPE	ATTRIBUTE3_T	    IS TABLE OF RLM_INTERFACE_LINES.ATTRIBUTE3%TYPE INDEX BY BINARY_INTEGER;
TYPE	ATTRIBUTE4_T	    IS TABLE OF RLM_INTERFACE_LINES.ATTRIBUTE4%TYPE INDEX BY BINARY_INTEGER;
TYPE	ATTRIBUTE5_T	    IS TABLE OF RLM_INTERFACE_LINES.ATTRIBUTE5%TYPE INDEX BY BINARY_INTEGER;
TYPE	ATTRIBUTE6_T	   IS TABLE OF RLM_INTERFACE_LINES.ATTRIBUTE6%TYPE INDEX BY BINARY_INTEGER;
TYPE	ATTRIBUTE7_T	   IS TABLE OF RLM_INTERFACE_LINES.ATTRIBUTE7%TYPE INDEX BY BINARY_INTEGER;
TYPE	ATTRIBUTE8_T	   IS TABLE OF RLM_INTERFACE_LINES.ATTRIBUTE8%TYPE INDEX BY BINARY_INTEGER;
TYPE	ATTRIBUTE9_T	   IS TABLE OF RLM_INTERFACE_LINES.ATTRIBUTE9%TYPE INDEX BY BINARY_INTEGER;
TYPE	ATTRIBUTE10_T	  IS TABLE OF RLM_INTERFACE_LINES.ATTRIBUTE10%TYPE INDEX BY BINARY_INTEGER;
TYPE	ATTRIBUTE11_T	  IS TABLE OF RLM_INTERFACE_LINES.ATTRIBUTE11%TYPE INDEX BY BINARY_INTEGER;
TYPE	ATTRIBUTE12_T	  IS TABLE OF RLM_INTERFACE_LINES.ATTRIBUTE12%TYPE INDEX BY BINARY_INTEGER;
TYPE	ATTRIBUTE13_T	  IS TABLE OF RLM_INTERFACE_LINES.ATTRIBUTE13%TYPE INDEX BY BINARY_INTEGER;
TYPE	ATTRIBUTE14_T	  IS TABLE OF RLM_INTERFACE_LINES.ATTRIBUTE14%TYPE INDEX BY BINARY_INTEGER;
TYPE	ATTRIBUTE15_T	  IS TABLE OF RLM_INTERFACE_LINES.ATTRIBUTE15%TYPE INDEX BY BINARY_INTEGER;
TYPE	BLANKET_NUMBER_T	  IS TABLE OF RLM_INTERFACE_LINES.BLANKET_NUMBER%TYPE INDEX BY BINARY_INTEGER;
TYPE    INTMED_SHIP_TO_ORG_ID_T IS TABLE OF RLM_INTERFACE_LINES.INTMED_SHIP_TO_ORG_ID%TYPE INDEX BY BINARY_INTEGER;
TYPE    SHIP_TO_CUSTOMER_ID_T IS TABLE OF RLM_INTERFACE_LINES.SHIP_TO_CUSTOMER_ID%TYPE INDEX BY BINARY_INTEGER;


  --
  -- constants
  --
  k_ORIGINAL   CONSTANT VARCHAR2(1) := 'O';
  k_MRP_SOURCED   CONSTANT VARCHAR2(1) := 'M';
  --
  k_PAST_DUE_FIRM       CONSTANT VARCHAR2(1) := '0';
  k_FIRM                CONSTANT VARCHAR2(1) := '1';
  k_FORECAST            CONSTANT VARCHAR2(1) := '2';
  k_MRP_FORECAST        CONSTANT VARCHAR2(1) := '6';
  k_RECT                CONSTANT VARCHAR2(1) := '4';
  k_AUTH                CONSTANT VARCHAR2(1) := '3';
  --
/*
|| This group rec is a record which will have
|| group_type = 'S' - sequenced
||               'N' - Non -sequenced
||               'A' - ATO
||               'F' - FBO
||  when group_type = 'N' schedule_item_num will be populated
||  open issue what goes in grouping for the rest?
||
*/

  TYPE t_group_rec IS RECORD (
     group_type               VARCHAR2(30),
     schedule_item_num        rlm_interface_lines.schedule_item_num%TYPE,
     cust_ship_from_org_ext   rlm_interface_lines.cust_ship_from_org_ext%TYPE,
     cust_ship_to_ext         rlm_interface_lines.cust_ship_to_ext%TYPE,
     cust_production_seq_num  rlm_interface_lines.cust_production_seq_num%TYPE,
     customer_item_ext        rlm_interface_lines.customer_item_ext%TYPE,
     customer_item_id         rlm_interface_lines.customer_item_id%TYPE,
     ship_from_org_id         rlm_interface_lines.ship_from_org_id%TYPE,
     ship_to_address_id       rlm_interface_lines.ship_to_address_id%TYPE,
     setup_terms_rec          rlm_setup_terms_sv.setup_terms_rec_typ);


  TYPE t_Cursor_ref IS REF CURSOR;


  g_Lines_Tab                   t_Lines_Tab;

  C_TDEBUG                      NUMBER :=rlm_core_sv.C_LEVEL4;
  C_SDEBUG                      NUMBER :=rlm_core_sv.C_LEVEL5;
  C_DEBUG                       NUMBER :=rlm_core_sv.C_LEVEL6;
  k_VNULL            CONSTANT   VARCHAR2(30) := 'THIS_IS_NULL_VALUE';
  k_NULL             CONSTANT   NUMBER := -10000;

  g_header_rec                  RLM_INTERFACE_HEADERS%ROWTYPE;
  g_schedule_PS                 NUMBER;
  g_line_PS                     NUMBER;
  k_PLANNING           CONSTANT VARCHAR2(30) := 'PLANNING_RELEASE';
  k_SHIPPING           CONSTANT VARCHAR2(30) := 'SHIPPING';
  k_SEQUENCED          CONSTANT VARCHAR2(30) := 'SEQUENCED';
  k_ORIG               CONSTANT VARCHAR2(30) := 'ORIGINAL';
  k_REPLACE            CONSTANT VARCHAR2(30) := 'REPLACE';
  k_REPLACE_ALL        CONSTANT VARCHAR2(30) := 'REPLACE_ALL';
  k_CHANGE             CONSTANT VARCHAR2(30) := 'CHANGE';
  k_CANCEL             CONSTANT VARCHAR2(30) := 'CANCELLATION';
  k_DELETE             CONSTANT VARCHAR2(30) := 'DELETE';
  k_ADD                CONSTANT VARCHAR2(30) := 'ADD';

  g_warned             BOOLEAN DEFAULT FALSE;
--CR Changes
  g_LineLevelShipTo    BOOLEAN DEFAULT FALSE;


  k_REQUEST_DATE_MA             CONSTANT VARCHAR2(30) := 'REQUEST_DATE,C';
  k_CUST_PO_NUMBER_MA           CONSTANT VARCHAR2(30) := 'CUST_PO_NUMBER,E';
  k_CUSTOMER_ITEM_REVISION_MA   CONSTANT VARCHAR2(30) := 'CUSTOMER_ITEM_REVISION,F';
  k_CUSTOMER_DOCK_CODE_MA       CONSTANT VARCHAR2(30) := 'CUSTOMER_DOCK_CODE,B';
  k_CUSTOMER_JOB_MA             CONSTANT VARCHAR2(30) := 'CUSTOMER_JOB,G';
  k_CUST_PRODUCTION_LINE_MA     CONSTANT VARCHAR2(30) := 'CUSTOMER_PRODUCTION_LINE,A';
  k_CUST_MODEL_SERIAL_NUMBER_MA CONSTANT VARCHAR2(30) := 'CUST_MODEL_SERIAL_NUMBER,H';
  k_CUST_PRODUCTION_SEQ_NUM_MA  CONSTANT VARCHAR2(30) := 'CUST_PRODUCTION_SEQ_NUM,$';
  k_INDUSTRY_ATTRIBUTE1_MA      CONSTANT VARCHAR2(30) := 'INDUSTRY_ATTRIBUTE1,I';
  k_INDUSTRY_ATTRIBUTE2_MA      CONSTANT VARCHAR2(30) := 'INDUSTRY_ATTRIBUTE2,J';
  k_INDUSTRY_ATTRIBUTE4_MA      CONSTANT VARCHAR2(30) := 'INDUSTRY_ATTRIBUTE4,K';
  k_INDUSTRY_ATTRIBUTE5_MA      CONSTANT VARCHAR2(30) := 'INDUSTRY_ATTRIBUTE5,L';
  k_INDUSTRY_ATTRIBUTE6_MA      CONSTANT VARCHAR2(30) := 'INDUSTRY_ATTRIBUTE6,M';
  k_INDUSTRY_ATTRIBUTE10_MA     CONSTANT VARCHAR2(30) := 'INDUSTRY_ATTRIBUTE10,O';
  k_INDUSTRY_ATTRIBUTE11_MA     CONSTANT VARCHAR2(30) := 'INDUSTRY_ATTRIBUTE11,P';
  k_INDUSTRY_ATTRIBUTE12_MA     CONSTANT VARCHAR2(30) := 'INDUSTRY_ATTRIBUTE12,Q';
  k_INDUSTRY_ATTRIBUTE13_MA     CONSTANT VARCHAR2(30) := 'INDUSTRY_ATTRIBUTE13,R';
  k_INDUSTRY_ATTRIBUTE14_MA     CONSTANT VARCHAR2(30) := 'INDUSTRY_ATTRIBUTE14,S';
  k_INDUSTRY_ATTRIBUTE15_MA     CONSTANT VARCHAR2(30) := 'INDUSTRY_ATTRIBUTE15,T';
  k_ATTRIBUTE1_MA               CONSTANT VARCHAR2(30) := 'ATTRIBUTE1,U';
  k_ATTRIBUTE2_MA               CONSTANT VARCHAR2(30) := 'ATTRIBUTE2,V';
  k_ATTRIBUTE3_MA               CONSTANT VARCHAR2(30) := 'ATTRIBUTE3,W';
  k_ATTRIBUTE4_MA               CONSTANT VARCHAR2(30) := 'ATTRIBUTE4,X';
  k_ATTRIBUTE5_MA               CONSTANT VARCHAR2(30) := 'ATTRIBUTE5,Y';
  k_ATTRIBUTE6_MA               CONSTANT VARCHAR2(30) := 'ATTRIBUTE6,Z';
  k_ATTRIBUTE7_MA               CONSTANT VARCHAR2(30) := 'ATTRIBUTE7,1';
  k_ATTRIBUTE8_MA               CONSTANT VARCHAR2(30) := 'ATTRIBUTE8,2';
  k_ATTRIBUTE9_MA               CONSTANT VARCHAR2(30) := 'ATTRIBUTE9,3';
  k_ATTRIBUTE10_MA              CONSTANT VARCHAR2(30) := 'ATTRIBUTE10,4';
  k_ATTRIBUTE11_MA              CONSTANT VARCHAR2(30) := 'ATTRIBUTE11,5';
  k_ATTRIBUTE12_MA              CONSTANT VARCHAR2(30) := 'ATTRIBUTE12,6';
  k_ATTRIBUTE13_MA              CONSTANT VARCHAR2(30) := 'ATTRIBUTE13,7';
  k_ATTRIBUTE14_MA              CONSTANT VARCHAR2(30) := 'ATTRIBUTE14,8';
  k_ATTRIBUTE15_MA              CONSTANT VARCHAR2(30) := 'ATTRIBUTE15,9';

  k_non_unique                  CONSTANT NUMBER := 1;
  g_convert_uom                 BOOLEAN DEFAULT FALSE; /* Bug 4176961 */

/*===========================================================================
  PROCEDURE NAME:        GroupValidateDemand

  DESCRIPTION:           This procedure is the wrapper procedure to
                         Validate_Demand. It validates, defaults and derives Ids
                         by calling the appropriate sub procedures.

  PARAMETERS:            x_Header_Id        IN NUMBER
                         x_Procedure_Status OUT NOCOPY BOOLEAN

  DESIGN REFERENCES:     rladpvdp.rtf

  NOTES:

  OPEN ISSUES:

  CLOSED ISSUES:

  CHANGE HISTORY:    mnandell    07/01    created
===========================================================================*/

PROCEDURE GroupValidateDemand(x_Header_Id IN RLM_INTERFACE_HEADERS.HEADER_ID%TYPE,
                                x_Procedure_Status   OUT NOCOPY NUMBER);

/*===========================================================================
  PROCEDURE NAME:        InitializeGroup

  DESCRIPTION:           This procedure sets up the group cursor.

  PARAMETERS:            x_header_id IN NUMBER
                         x_Group_ref IN OUT NOCOPY t_Cursor_ref

  DESIGN REFERENCES:     rladpvdd.rtf

  ALGORITHM:

  NOTES:

  OPEN ISSUES:

  CLOSED ISSUES:

  CHANGE HISTORY:       created mnandell 03/08/99
===========================================================================*/
Procedure InitializeGroup(x_header_id IN NUMBER,
                          x_Group_ref IN OUT NOCOPY t_Cursor_ref,
                          p_caller IN VARCHAR2 DEFAULT NULL);

/*===========================================================================
  FUNCTION NAME:         FetchGroup

  DESCRIPTION:           This function fetches next group

  PARAMETERS:            x_Group_ref IN OUT NOCOPY t_Cursor_ref
                         x_Group_rec IN OUT NOCOPY t_Group_rec

  DESIGN REFERENCES:     rladpvdd.rtf

  ALGORITHM:

  NOTES:

  OPEN ISSUES:

  CLOSED ISSUES:

  CHANGE HISTORY:        created mnandell 03/08/99
===========================================================================*/
Function FetchGroup(x_Group_ref IN OUT NOCOPY t_Cursor_ref,
                    x_Group_rec IN OUT NOCOPY t_Group_rec)
RETURN BOOLEAN;

/*===========================================================================
  PROCEDURE NAME:        PopulateLinesTab

  DESCRIPTION:           This procedure populates lines in PL/SQL table.

  PARAMETERS:            p_schedule_item_num     IN NUMBER
                         RETURNS BOOLEAN
                         TRUE : Success
                         False : Failure

  DESIGN REFERENCES:     rladpvdp.rtf

  NOTES:

  OPEN ISSUES:

  CLOSED ISSUES:

  CHANGE HISTORY:        mnandell    07/01    created
                         abkulkar    03/25    modified
===========================================================================*/
PROCEDURE PopulateLinesTab (v_Group_rec IN t_Group_rec);

/*===========================================================================
  PROCEDURE NAME:        CheckCUMKeyPO

  DESCRIPTION:           This procedure checks for CUM Key based on PO.

  PARAMETERS:


  DESIGN REFERENCES:     rladpvdp.rtf

  NOTES:

  OPEN ISSUES:

  CLOSED ISSUES:

  CHANGE HISTORY:        mnandell    07/01    created
===========================================================================*/
PROCEDURE CheckCUMKeyPO(
          x_group_rec  IN RLM_VALIDATEDEMAND_SV.t_group_rec,
          x_header_rec  IN RLM_INTERFACE_HEADERS%ROWTYPE,
          x_lines_rec IN OUT NOCOPY RLM_INTERFACE_LINES%ROWTYPE);
--<TPA_PUBLIC_NAME>

/*===========================================================================
  PROCEDURE NAME:        ValidPlanningProdSeqNum

  DESCRIPTION:           This procedure validates planning production seqeunce
                         number and checks if customer production sequence
                         is used as a match within key
  PARAMETERS:


  DESIGN REFERENCES:     rladpvdp.rtf

  NOTES:

  OPEN ISSUES:

  CLOSED ISSUES:

  CHANGE HISTORY:        mnandell    07/01    created
===========================================================================*/
PROCEDURE ValidPlanningProdSeqNum(
                  x_setup_terms_rec  IN rlm_setup_terms_sv.setup_terms_rec_typ,
                  x_header_rec  IN RLM_INTERFACE_HEADERS%ROWTYPE,
                  x_lines_rec IN OUT NOCOPY RLM_INTERFACE_LINES%ROWTYPE);
--<TPA_PUBLIC_NAME>

/*===========================================================================
  PROCEDURE NAME:        ValidLineScheduleType

  DESCRIPTION:           This procedure validates schedule type

  PARAMETERS:


  DESIGN REFERENCES:     rladpvdp.rtf

  NOTES:

  OPEN ISSUES:

  CLOSED ISSUES:

  CHANGE HISTORY:        mnandell    07/01    created
===========================================================================*/
PROCEDURE ValidLineScheduleType(x_header_rec  IN RLM_INTERFACE_HEADERS%ROWTYPE,
            x_lines_rec IN OUT NOCOPY RLM_INTERFACE_LINES%ROWTYPE);
--<TPA_PUBLIC_NAME>

/*===========================================================================
  PROCEDURE NAME:        ValidateLineDetails

  DESCRIPTION:           This procedure is the wrapper procedure to
                         Validate line details.

  PARAMETERS:


  DESIGN REFERENCES:     rladpvdp.rtf

  NOTES:

  OPEN ISSUES:

  CLOSED ISSUES:

  CHANGE HISTORY:        mnandell    07/01    created
===========================================================================*/
PROCEDURE ValidateLineDetails(
          x_setup_terms_rec  IN rlm_setup_terms_sv.setup_terms_rec_typ,
            x_header_rec  IN RLM_INTERFACE_HEADERS%ROWTYPE,
            x_lines_rec IN OUT NOCOPY RLM_INTERFACE_LINES%ROWTYPE,
            x_line_source IN VARCHAR2);
--<TPA_PUBLIC_NAME>
/*===========================================================================
  PROCEDURE NAME:        ValidOrderHeaderId

  DESCRIPTION:           This procedure validates Order Header Id

  PARAMETERS:


  DESIGN REFERENCES:     rladpvdp.rtf

  NOTES:

  OPEN ISSUES:

  CLOSED ISSUES:

  CHANGE HISTORY:        mnandell    07/01    created
===========================================================================*/
PROCEDURE ValidOrderHeaderId(
          x_setup_terms_rec  IN rlm_setup_terms_sv.setup_terms_rec_typ,
            x_header_rec  IN RLM_INTERFACE_HEADERS%ROWTYPE,
            x_lines_rec IN OUT NOCOPY RLM_INTERFACE_LINES%ROWTYPE);
--<TPA_PUBLIC_NAME>

/*===========================================================================
  PROCEDURE NAME:        ValidateUOM

  DESCRIPTION:           This procedure validates UOM code.

  PARAMETERS:


  DESIGN REFERENCES:     rladpvdp.rtf

  NOTES:

  OPEN ISSUES:

  CLOSED ISSUES:

  CHANGE HISTORY:        mnandell    07/01    created
===========================================================================*/
PROCEDURE ValidateUOM(x_header_rec  IN RLM_INTERFACE_HEADERS%ROWTYPE,
            x_lines_rec IN OUT NOCOPY RLM_INTERFACE_LINES%ROWTYPE);
--<TPA_PUBLIC_NAME>

/*===========================================================================
  PROCEDURE NAME:        ValidDateRange

  DESCRIPTION:           This procedure validates date range

  PARAMETERS:


  DESIGN REFERENCES:     rladpvdp.rtf

  NOTES:

  OPEN ISSUES:

  CLOSED ISSUES:

  CHANGE HISTORY:        mnandell    07/01    created
===========================================================================*/
PROCEDURE ValidDateRange(x_header_rec  IN RLM_INTERFACE_HEADERS%ROWTYPE,
            x_lines_rec IN OUT NOCOPY RLM_INTERFACE_LINES%ROWTYPE);
--<TPA_PUBLIC_NAME>

/*===========================================================================
  PROCEDURE NAME:        ValidDateTypeCode

  DESCRIPTION:           This procedure validates date type code

  PARAMETERS:


  DESIGN REFERENCES:     rladpvdp.rtf

  NOTES:

  OPEN ISSUES:

  CLOSED ISSUES:

  CHANGE HISTORY:        mnandell    07/01    created
===========================================================================*/
PROCEDURE ValidDateTypeCode(x_header_rec  IN RLM_INTERFACE_HEADERS%ROWTYPE,
            x_lines_rec IN OUT NOCOPY RLM_INTERFACE_LINES%ROWTYPE);
--<TPA_PUBLIC_NAME>

/*===========================================================================
  PROCEDURE NAME:        ValidItemDetailQty

  DESCRIPTION:           This procedure validates item detail quantity

  PARAMETERS:


  DESIGN REFERENCES:     rladpvdp.rtf

  NOTES:

  OPEN ISSUES:

  CLOSED ISSUES:

  CHANGE HISTORY:        mnandell    07/01    created
===========================================================================*/
PROCEDURE ValidItemDetailQty(x_header_rec  IN RLM_INTERFACE_HEADERS%ROWTYPE,
            x_lines_rec IN OUT NOCOPY RLM_INTERFACE_LINES%ROWTYPE);
--<TPA_PUBLIC_NAME>

/*===========================================================================
  PROCEDURE NAME:        ValidQtyTypeCode

  DESCRIPTION:           This procedure validates quantity type code.

  PARAMETERS:


  DESIGN REFERENCES:     rladpvdp.rtf

  NOTES:

  OPEN ISSUES:

  CLOSED ISSUES:

  CHANGE HISTORY:        mnandell    07/01    created
===========================================================================*/
PROCEDURE ValidQtyTypeCode(
            x_setup_terms_rec  IN rlm_setup_terms_sv.setup_terms_rec_typ,
            x_header_rec  IN RLM_INTERFACE_HEADERS%ROWTYPE,
            x_lines_rec IN OUT NOCOPY RLM_INTERFACE_LINES%ROWTYPE);
--<TPA_PUBLIC_NAME>

/*===========================================================================
  PROCEDURE NAME:        ValidItemDetailSubtype

  DESCRIPTION:           This procedure validates item detail subtype code.

  PARAMETERS:


  DESIGN REFERENCES:     rladpvdp.rtf

  NOTES:

  OPEN ISSUES:

  CLOSED ISSUES:

  CHANGE HISTORY:        mnandell    07/01    created
===========================================================================*/
PROCEDURE ValidItemDetailSubtype(x_header_rec  IN RLM_INTERFACE_HEADERS%ROWTYPE,
            x_lines_rec IN OUT NOCOPY RLM_INTERFACE_LINES%ROWTYPE);
--<TPA_PUBLIC_NAME>

/*===========================================================================
  PROCEDURE NAME:        ValidItemDetailType

  DESCRIPTION:           This procedure validates item detail type code.

  PARAMETERS:


  DESIGN REFERENCES:     rladpvdp.rtf

  NOTES:

  OPEN ISSUES:

  CLOSED ISSUES:

  CHANGE HISTORY:        mnandell    07/01    created
===========================================================================*/
PROCEDURE ValidItemDetailType(x_header_rec  IN RLM_INTERFACE_HEADERS%ROWTYPE,
            x_lines_rec IN OUT NOCOPY RLM_INTERFACE_LINES%ROWTYPE);
--<TPA_PUBLIC_NAME>

--PROCEDURE valid_sfst_terms(x_header_rec IN RLM_INTERFACE_HEADERS%ROWTYPE,
--                           x_lines_rec IN OUT NOCOPY RLM_INTERFACE_LINES%ROWTYPE) ;

/*===========================================================================
  PROCEDURE NAME:         BuildHeaderRec

  DESCRIPTION:            This procedure builds the header record PL/SQL table.

  PARAMETERS:


  DESIGN REFERENCES:      rladpvdp.rtf

  NOTES:

  OPEN ISSUES:

  CLOSED ISSUES:

  CHANGE HISTORY:         mnandell    07/01    created
===========================================================================*/
FUNCTION BuildHeaderRec(x_header_id IN rlm_interface_headers.header_id%TYPE)
RETURN BOOLEAN ;

/*===========================================================================
  PROCEDURE NAME:         ApplyHeaderDefaults

  DESCRIPTION:            This procedure applies the defaiults to header record.

  PARAMETERS:


  DESIGN REFERENCES:      rladpvdp.rtf

  NOTES:

  OPEN ISSUES:

  CLOSED ISSUES:

  CHANGE HISTORY:         mnandell    07/01    created
===========================================================================*/
PROCEDURE ApplyHeaderDefaults(x_header_rec  IN OUT NOCOPY RLM_INTERFACE_HEADERS%ROWTYPE);

/*===========================================================================
  PROCEDURE NAME:         GetDateFromTable

  DESCRIPTION:            This procedure gets date from table.

  PARAMETERS:


  DESIGN REFERENCES:      rladpvdp.rtf

  NOTES:

  OPEN ISSUES:

  CLOSED ISSUES:

  CHANGE HISTORY:         mnandell    07/01    created
===========================================================================*/
FUNCTION GetDateFromTable(p_date_criteria VARCHAR2)
RETURN DATE;

/*===========================================================================
  PROCEDURE NAME:         ValidScheduleHeader

  DESCRIPTION:            This procedure validates schedule header.

  PARAMETERS:


  DESIGN REFERENCES:      rladpvdp.rtf

  NOTES:

  OPEN ISSUES:

  CLOSED ISSUES:

  CHANGE HISTORY:         mnandell    07/01    created
===========================================================================*/
PROCEDURE ValidScheduleHeader(x_header_rec  IN OUT NOCOPY RLM_INTERFACE_HEADERS%ROWTYPE);
--<TPA_PUBLIC_NAME>

/*===========================================================================
  PROCEDURE NAME:         ValidNumberLines

  DESCRIPTION:            This procedure validates number of lines.

  PARAMETERS:


  DESIGN REFERENCES:      rladpvdp.rtf

  NOTES:

  OPEN ISSUES:

  CLOSED ISSUES:

  CHANGE HISTORY:         mnandell    07/01    created
===========================================================================*/
PROCEDURE ValidNumberLines(x_header_rec  IN OUT NOCOPY RLM_INTERFACE_HEADERS%ROWTYPE);
--<TPA_PUBLIC_NAME>

/*===========================================================================
  PROCEDURE NAME:         ValidScheduleSource

  DESCRIPTION:            This procedure validates schedule source.

  PARAMETERS:


  DESIGN REFERENCES:      rladpvdp.rtf

  NOTES:

  OPEN ISSUES:

  CLOSED ISSUES:

  CHANGE HISTORY:         mnandell    07/01    created
===========================================================================*/

PROCEDURE ValidScheduleSource(x_header_rec  IN OUT NOCOPY RLM_INTERFACE_HEADERS%ROWTYPE);
--<TPA_PUBLIC_NAME>

/*===========================================================================
  PROCEDURE NAME:         ValidHorizonDates

  DESCRIPTION:            This procedure validates horizon dates.

  PARAMETERS:


  DESIGN REFERENCES:      rladpvdp.rtf

  NOTES:

  OPEN ISSUES:

  CLOSED ISSUES:

  CHANGE HISTORY:         mnandell    07/01    created
===========================================================================*/
PROCEDURE ValidHorizonDates(x_header_rec  IN OUT NOCOPY RLM_INTERFACE_HEADERS%ROWTYPE);
--<TPA_PUBLIC_NAME>

/*===========================================================================
  PROCEDURE NAME:         ValidScheduleReferenceNum

  DESCRIPTION:            This procedure validates schedule reference number

  PARAMETERS:


  DESIGN REFERENCES:      rladpvdp.rtf

  NOTES:

  OPEN ISSUES:

  CLOSED ISSUES:

  CHANGE HISTORY:         mnandell    07/01    created
===========================================================================*/
PROCEDURE ValidScheduleReferenceNum(x_header_rec  IN OUT NOCOPY RLM_INTERFACE_HEADERS%ROWTYPE);
--<TPA_PUBLIC_NAME>

/*===========================================================================
  PROCEDURE NAME:         ValidScheduleType

  DESCRIPTION:            This procedure validates schedule type.

  PARAMETERS:


  DESIGN REFERENCES:      rladpvdp.rtf

  NOTES:

  OPEN ISSUES:

  CLOSED ISSUES:

  CHANGE HISTORY:         mnandell    07/01    created
===========================================================================*/
PROCEDURE ValidScheduleType(x_header_rec  IN OUT NOCOPY RLM_INTERFACE_HEADERS%ROWTYPE);
--<TPA_PUBLIC_NAME>

/*===========================================================================
  PROCEDURE NAME:         ValidLookup

  DESCRIPTION:            This procedure validates against given lookup.

  PARAMETERS:


  DESIGN REFERENCES:      rladpvdp.rtf

  NOTES:

  OPEN ISSUES:

  CLOSED ISSUES:

  CHANGE HISTORY:         mnandell    07/01    created
===========================================================================*/

FUNCTION ValidLookup(p_lookup_type IN VARCHAR2,
                     p_lookup_code IN VARCHAR2,
                     p_date IN DATE)
RETURN BOOLEAN;
--<TPA_PUBLIC_NAME>

/*===========================================================================
  PROCEDURE NAME:         ValidSchedulePurpose

  DESCRIPTION:            This procedure validates schedule purpose.

  PARAMETERS:


  DESIGN REFERENCES:      rladpvdp.rtf

  NOTES:

  OPEN ISSUES:

  CLOSED ISSUES:

  CHANGE HISTORY:         mnandell    07/01    created
===========================================================================*/
PROCEDURE ValidSchedulePurpose(x_header_rec  IN OUT NOCOPY RLM_INTERFACE_HEADERS%ROWTYPE);
--<TPA_PUBLIC_NAME>

/*===========================================================================
  PROCEDURE NAME:         CallSetups

  DESCRIPTION:            This procedure calls Setup terms API.

  PARAMETERS:


  DESIGN REFERENCES:      rladpvdp.rtf

  NOTES:

  OPEN ISSUES:

  CLOSED ISSUES:

  CHANGE HISTORY:         mnandell    07/01    created
===========================================================================*/
FUNCTION  CallSetups(
                    x_Group_rec IN OUT NOCOPY t_Group_rec,
                    x_header_rec IN rlm_interface_headers%ROWTYPE,
                    x_lines_rec IN rlm_interface_lines%ROWTYPE)
RETURN BOOLEAN;

/*===========================================================================
  PROCEDURE NAME:         DeriveIDs

  DESCRIPTION:            This procedure is the wrapper procedure to derive
                          different ids.

  PARAMETERS:


  DESIGN REFERENCES:      rladpvdp.rtf

  NOTES:

  OPEN ISSUES:

  CLOSED ISSUES:

  CHANGE HISTORY:         mnandell    07/01    created
===========================================================================*/
PROCEDURE DeriveIDs(
            x_header_rec  IN OUT NOCOPY RLM_INTERFACE_HEADERS%ROWTYPE,
            x_lines_rec IN OUT NOCOPY RLM_INTERFACE_LINES%ROWTYPE);

/*===========================================================================
  PROCEDURE NAME:         DeriveOrgDependentIDs

  DESCRIPTION:            This procedure derives org dependent ids.

  PARAMETERS:


  DESIGN REFERENCES:      rladpvdp.rtf

  NOTES:

  OPEN ISSUES:

  CLOSED ISSUES:

  CHANGE HISTORY:         mnandell    07/01    created
===========================================================================*/
PROCEDURE DeriveOrgDependentIDs(
            x_setup_terms_rec  IN RLM_SETUP_TERMS_SV.setup_terms_rec_typ,
            x_header_rec  IN RLM_INTERFACE_HEADERS%ROWTYPE,
            x_lines_rec IN OUT NOCOPY RLM_INTERFACE_LINES%ROWTYPE);

/*===========================================================================
  PROCEDURE NAME:         DeriveInventoryItemId

  DESCRIPTION:            This procedure derives inventory item id.

  PARAMETERS:


  DESIGN REFERENCES:      rladpvdp.rtf

  NOTES:

  OPEN ISSUES:

  CLOSED ISSUES:

  CHANGE HISTORY:         mnandell    07/01    created
===========================================================================*/
PROCEDURE DeriveInventoryItemId(x_header_rec  IN RLM_INTERFACE_HEADERS%ROWTYPE,
            x_lines_rec IN OUT NOCOPY RLM_INTERFACE_LINES%ROWTYPE);

--<TPA_PUBLIC_NAME>

/*===========================================================================
  PROCEDURE NAME:         ValidateCustomerItem

  DESCRIPTION:            This procedure validates customer item id

  PARAMETERS:


  DESIGN REFERENCES:      rladpvdp.rtf

  NOTES:

  OPEN ISSUES:

  CLOSED ISSUES:

  CHANGE HISTORY:         mnandell    07/01    created
===========================================================================*/
PROCEDURE ValidateCustomerItem(x_header_rec  IN RLM_INTERFACE_HEADERS%ROWTYPE,
            x_lines_rec IN OUT NOCOPY RLM_INTERFACE_LINES%ROWTYPE);
--<TPA_PUBLIC_NAME>

/*===========================================================================
  PROCEDURE NAME:         DerivePurchaseOrder

  DESCRIPTION:            This procedure derives purchase order.

  PARAMETERS:


  DESIGN REFERENCES:      rladpvdp.rtf

  NOTES:

  OPEN ISSUES:

  CLOSED ISSUES:

  CHANGE HISTORY:         mnandell    07/01    created
===========================================================================*/
PROCEDURE DerivePurchaseOrder(
            x_setup_terms_rec  IN RLM_SETUP_TERMS_SV.setup_terms_rec_typ,
            x_header_rec  IN RLM_INTERFACE_HEADERS%ROWTYPE,
            x_lines_rec IN OUT NOCOPY RLM_INTERFACE_LINES%ROWTYPE);

/*===========================================================================
  PROCEDURE NAME:         DeriveCustomerID

  DESCRIPTION:            This procedure derives customer id.

  PARAMETERS:


  DESIGN REFERENCES:      rladpvdp.rtf

  NOTES:

  OPEN ISSUES:

  CLOSED ISSUES:

  CHANGE HISTORY:         mnandell    07/01    created
===========================================================================*/
PROCEDURE DeriveCustomerID(x_header_rec  IN OUT NOCOPY RLM_INTERFACE_HEADERS%ROWTYPE,
            x_lines_rec IN OUT NOCOPY RLM_INTERFACE_LINES%ROWTYPE);

/*===========================================================================
  PROCEDURE NAME:         DeriveShipFromOrg

  DESCRIPTION:            This procedure derives ship from org id.

  PARAMETERS:


  DESIGN REFERENCES:      rladpvdp.rtf

  NOTES:

  OPEN ISSUES:

  CLOSED ISSUES:

  CHANGE HISTORY:         mnandell    07/01    created
===========================================================================*/
PROCEDURE DeriveShipFromOrg(x_header_rec  IN RLM_INTERFACE_HEADERS%ROWTYPE,
            x_lines_rec IN OUT NOCOPY RLM_INTERFACE_LINES%ROWTYPE);

/*===========================================================================
  PROCEDURE NAME:         DeriveIntrmdShipToID

  DESCRIPTION:            This procedure derives Intermediate ship To Id.

  PARAMETERS:


  DESIGN REFERENCES:      rladpvdp.rtf

  NOTES:

  OPEN ISSUES:

  CLOSED ISSUES:

  CHANGE HISTORY:         mnandell    07/01    created
===========================================================================*/
PROCEDURE DeriveIntrmdShipToID(x_header_rec  IN RLM_INTERFACE_HEADERS%ROWTYPE,
            x_lines_rec IN OUT NOCOPY RLM_INTERFACE_LINES%ROWTYPE);

/*===========================================================================
  PROCEDURE NAME:         DeriveBillToID

  DESCRIPTION:            This procedure derives bill To Id.

  PARAMETERS:


  DESIGN REFERENCES:      rladpvdp.rtf

  NOTES:

  OPEN ISSUES:

  CLOSED ISSUES:

  CHANGE HISTORY:         mnandell    07/01    created
===========================================================================*/
PROCEDURE DeriveBillToID(x_header_rec  IN RLM_INTERFACE_HEADERS%ROWTYPE,
            x_lines_rec IN OUT NOCOPY RLM_INTERFACE_LINES%ROWTYPE,
            x_cum_org_level_code IN rlm_cust_shipto_terms.cum_org_level_code%TYPE);

/*===========================================================================
  PROCEDURE NAME:         DeriveShipToID

  DESCRIPTION:            This procedure derives ship to id.

  PARAMETERS:


  DESIGN REFERENCES:      rladpvdp.rtf

  NOTES:

  OPEN ISSUES:

  CLOSED ISSUES:

  CHANGE HISTORY:         mnandell    07/01    created
===========================================================================*/
PROCEDURE DeriveShipToID(x_header_rec IN OUT NOCOPY RLM_INTERFACE_HEADERS%ROWTYPE,
            x_lines_rec IN OUT NOCOPY RLM_INTERFACE_LINES%ROWTYPE);

/*===========================================================================
  PROCEDURE NAME:         UpdateInterfaceHeaders

  DESCRIPTION:            This procedure updates interface headers.

  PARAMETERS:

  DESIGN REFERENCES:      rladpvdp.rtf

  NOTES:

  OPEN ISSUES:

  CLOSED ISSUES:

  CHANGE HISTORY:         mnandell    07/01    created
===========================================================================*/
PROCEDURE UpdateInterfaceHeaders;

/*===========================================================================
  PROCEDURE NAME:         UpdateInterfaceLines

  DESCRIPTION:            This procedure updates interface lines.

  PARAMETERS:

  DESIGN REFERENCES:      rladpvdp.rtf

  NOTES:

  OPEN ISSUES:

  CLOSED ISSUES:

  CHANGE HISTORY:         mnandell    07/01    created
===========================================================================*/
PROCEDURE UpdateInterfaceLines(x_header_rec IN RLM_INTERFACE_HEADERS%ROWTYPE);
--<TPA_PUBLIC_NAME>
/*===========================================================================
  PROCEDURE NAME:         PostValidation

  DESCRIPTION:            This procedure performs post validation steps.

  PARAMETERS:

  DESIGN REFERENCES:      rladpvdp.rtf

  NOTES:

  OPEN ISSUES:

  CLOSED ISSUES:

  CHANGE HISTORY:         mnandell    07/01    created
===========================================================================*/
PROCEDURE PostValidation;
--<TPA_PUBLIC_NAME>

/*===========================================================================
  PROCEDURE NAME:         PrintTable

  DESCRIPTION:            This procedure prints the lines in the Lines table.

  PARAMETERS:


  DESIGN REFERENCES:      rladpvdp.rtf

  NOTES:

  OPEN ISSUES:

  CLOSED ISSUES:

  CHANGE HISTORY:         mnandell    07/01    created
===========================================================================*/
PROCEDURE PrintTable(v_LinesTab IN t_Lines_Tab,
                     i IN NUMBER DEFAULT NULL);

/*===========================================================================
  PROCEDURE NAME:         GetTPContext

  DESCRIPTION:            This procedure returns the TP Context.
			  Do not use this procedure when trying to
			  customize procedures (e.g. ValidSchedulePurpose)
			  that take only one header record as input
			  parameter. Instead, use GetHdrTPContext.

  PARAMETERS:


  DESIGN REFERENCES:      rladpvdp.rtf

  NOTES:

  OPEN ISSUES:

  CLOSED ISSUES:

  CHANGE HISTORY:         mnandell    10/10/99    created
===========================================================================*/
PROCEDURE GetTPContext(x_header_rec IN RLM_INTERFACE_HEADERS%ROWTYPE DEFAULT NULL,
                       x_lines_rec IN RLM_INTERFACE_LINES%ROWTYPE DEFAULT NULL,
                       x_customer_number OUT NOCOPY VARCHAR2,
                       x_ship_to_ece_locn_code OUT NOCOPY VARCHAR2,
                       x_bill_to_ece_locn_code OUT NOCOPY VARCHAR2,
                       x_inter_ship_to_ece_locn_code OUT NOCOPY VARCHAR2,
                       x_tp_group_code OUT NOCOPY VARCHAR2);
--<TPA_TPS>

/*===========================================================================
  PROCEDURE NAME:         GetHdrTPContext

  DESCRIPTION:            Same as GetTPContext except that the only
			  input parameter is header record. No line
			  record is required as an input. Bill-To
			  Location Code and Intermediate Ship-To
			  Location Code can not be derived using
			  this procedure. Do not use this procedure
			  to customize procedures that have both
			  header record and line record as input
			  parameters.

  PARAMETERS:


  DESIGN REFERENCES:      rladpvdp.rtf

  NOTES:

  OPEN ISSUES:

  CLOSED ISSUES:

  CHANGE HISTORY:         jautomo    10/25/00    created
===========================================================================*/
PROCEDURE GetHdrTPContext(x_header_rec IN RLM_INTERFACE_HEADERS%ROWTYPE DEFAULT NULL,
                          x_customer_number OUT NOCOPY VARCHAR2,
                          x_ship_to_ece_locn_code OUT NOCOPY VARCHAR2,
                          x_bill_to_ece_locn_code OUT NOCOPY VARCHAR2,
                          x_inter_ship_to_ece_locn_code OUT NOCOPY VARCHAR2,
                          x_tp_group_code OUT NOCOPY VARCHAR2);
--<TPA_TPS>

/*===========================================================================

  PROCEDURE NAME:       ValidateCriticalKeys

  DESCRIPTION:  This procedure will validate the critical key attributes
                to ensure that they are not null values.

  PARAMETERS:   x_setup_terms_rec  IN RLM_SETUP_TERMS_SV.setup_terms_rec_typ
                x_header_rec  IN RLM_INTERFACE_HEADERS%ROWTYPE
                x_lines_rec IN OUT NOCOPY RLM_INTERFACE_LINES%ROWTYPE


  DESIGN REFERENCES:    RLADPHLD.rtf
                        RLADPRDD.rtf

  ALGORITHM:

  NOTES:

  OPEN ISSUES:

  CLOSED ISSUES:

  CHANGE HISTORY:       created mnnaraya 11/22/99
===========================================================================*/
PROCEDURE ValidateCriticalKeys(
          x_setup_terms_rec  IN RLM_SETUP_TERMS_SV.setup_terms_rec_typ,
          x_header_rec  IN RLM_INTERFACE_HEADERS%ROWTYPE,
          x_lines_rec IN OUT NOCOPY RLM_INTERFACE_LINES%ROWTYPE);

/*=============================================================================
  PROCEDURE NAME:       ValidForecastDesig

  DESCRIPTION:  This procedure checks if forecast designator exits

  PARAMETERS:   x_setup_terms_rec  IN RLM_SETUP_TERMS_SV.setup_terms_rec_typ
                x_header_rec  IN RLM_INTERFACE_HEADERS%ROWTYPE
                x_lines_rec IN OUT NOCOPY RLM_INTERFACE_LINES%ROWTYPE
                x_ForecastDesignator IN OUT NOCOPY VARCHAR2


  DESIGN REFERENCES:    RLADPHLD.rtf
                        RLADPRDD.rtf

  ALGORITHM:


==============================================================================*/
PROCEDURE ValidForecastDesig(
                x_setup_terms_rec  IN RLM_SETUP_TERMS_SV.setup_terms_rec_typ,
                x_header_rec IN RLM_INTERFACE_HEADERS%ROWTYPE,
                x_lines_rec IN OUT NOCOPY RLM_INTERFACE_LINES%ROWTYPE,
                x_ForecastDesignator IN OUT NOCOPY VARCHAR2);

/*=============================================================================
  PROCEDURE NAME: SetTPAttCategory

  DESCRIPTION:  This procedure sets TP Attribute Category with TP Group
		Code
==============================================================================*/
PROCEDURE SetTPAttCategory (
  		x_header_rec IN OUT NOCOPY RLM_INTERFACE_HEADERS%ROWTYPE,
                x_lines_rec  IN OUT NOCOPY RLM_INTERFACE_LINES%ROWTYPE,
                x_group_rec  IN OUT NOCOPY RLM_VALIDATEDEMAND_SV.t_Group_rec);
--<TPA_PUBLIC_NAME>

/*=============================================================================
  PROCEDURE NAME: SetTPHdrAttCategory

  DESCRIPTION:  This procedure sets TP Attribute Category with TP Group
		Code

  PARAMETERS:   x_header_rec IN OUT NOCOPY RLM_INTERFACE_HEADERS%ROWTYPE

==============================================================================*/
PROCEDURE SetHdrTPAttCategory (
  		x_header_rec IN OUT NOCOPY RLM_INTERFACE_HEADERS%ROWTYPE);

--<TPA_PUBLIC_NAME>

/*=============================================================================
  PROCEDURE NAME: SetLineTPAttCategory

  DESCRIPTION:  This procedure sets TP Attribute Category with TP Group
		Code

  PARAMETERS:   x_header_rec IN OUT NOCOPY RLM_INTERFACE_HEADERS%ROWTYPE
                x_lines_rec  IN OUT NOCOPY RLM_INTERFACE_LINES%ROWTYPE
                x_group_rec  IN OUT NOCOPY t_Group_rec

==============================================================================*/
PROCEDURE SetLineTPAttCategory (
  		x_header_rec IN OUT NOCOPY RLM_INTERFACE_HEADERS%ROWTYPE,
                x_lines_rec  IN OUT NOCOPY RLM_INTERFACE_LINES%ROWTYPE,
                x_group_rec  IN OUT NOCOPY RLM_VALIDATEDEMAND_SV.t_Group_rec);
--<TPA_PUBLIC_NAME>


/*=============================================================================
  FUNCTION NAME: CustomerRelationship

  DESCRIPTION:   This function validates the customer relationship

==============================================================================*/

FUNCTION CustomerRelationship(x_RelatedCustomerId IN NUMBER,
                              x_customer_id IN NUMBER,
                              x_header_id IN NUMBER,
                              x_site_use_code IN VARCHAR2 DEFAULT 'BILL_TO')
RETURN BOOLEAN;


PROCEDURE validateWithCumRec(
          x_cum_key_record   IN rlm_cum_sv.cum_key_attrib_rec_type,       -- 4307505
          x_group_rec     IN t_group_rec,
          x_lines_rec     IN OUT NOCOPY RLM_INTERFACE_LINES%ROWTYPE);


PROCEDURE validateWithoutCumRec(
          x_customer_id   IN NUMBER,
          x_group_rec     IN t_group_rec,
          x_lines_rec     IN OUT NOCOPY RLM_INTERFACE_LINES%ROWTYPE);

/*===========================================================================
  PROCEDURE NAME:        ValidateDateTypeATP

  DESCRIPTION:           This procedure warns when RLM date type does not
                         match OM date type -- For ATP items only

  PARAMETERS:            x_line IN rlm_dp_sv.t_group_rec

  CHANGE HISTORY:        created jautomo 03/07/02
===========================================================================*/
PROCEDURE ValidateDateTypeATP(x_line IN RLM_INTERFACE_LINES%ROWTYPE);

/*===========================================================================
  PROCEDURE NAME:        DeriveBlanketPO

  DESCRIPTION:           This procedure warns when PO on schedule does not
			 match the PO on the blanket order.  Applicable
			 only when blanket orders are setup in processing
			 rules.

  PARAMETERS:            x_cust_po_num IN RLM_INTERFACE_LINES.cust_po_number%TYPE
			 x_Group_rec IN t_group_rec
		         x_header_id IN RLM_INTERFACE_HEADERS.HEADER_ID%TYPE

  CHANGE HISTORY:        created rlanka 10/10/02
===========================================================================*/
PROCEDURE DeriveBlanketPO(x_cust_po_num     IN RLM_INTERFACE_LINES.cust_po_number%TYPE,
			  x_Group_rec       IN t_Group_rec,
			  x_header_id	    IN RLM_INTERFACE_HEADERS.HEADER_ID%TYPE);


/*===========================================================================
  FUNCTION NAME:        ValidateBlanket

  DESCRIPTION:           This function returns an error when the start date
			 times on the schedule do not fall between the effective
			 start and end dates of the blanket header

  PARAMETERS:            x_Group_rec IN t_group_rec
		         x_Sched_rec IN RLM_INTERFACE_HEADERS%ROWTYPE

  CHANGE HISTORY:        created 	rlanka 		10/10/02
                         modified	rlanka		03/31/03
			  - Removed x_line_rec as a parameter.
===========================================================================*/
FUNCTION ValidateBlanket(x_Group_rec IN t_Group_rec,
                         x_Sched_rec IN RLM_INTERFACE_HEADERS%ROWTYPE)
RETURN BOOLEAN;


/*===========================================================================
  FUNCTION NAME:        GetOrderNumber

  DESCRIPTION:           This function returns the sales order number
			 when the order header id is provided as input. Earlier
			 this was a private function in RLMDPVDB.pls, made it
			 accessible to other DSP modules as well.

  PARAMETERS:            x_order_header_id IN NUMBER

  CHANGE HISTORY:        created jautomo 03/07/02
===========================================================================*/
FUNCTION  GetOrderNumber(x_order_header_id  IN NUMBER) RETURN NUMBER;

PROCEDURE CheckHeaderECETpLocCode(x_header_rec  IN OUT NOCOPY RLM_INTERFACE_HEADERS%ROWTYPE,
                                 x_ReturnStatus  OUT NOCOPY NUMBER);

END RLM_VALIDATEDEMAND_SV;
 

/
