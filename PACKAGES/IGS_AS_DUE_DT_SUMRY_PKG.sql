--------------------------------------------------------
--  DDL for Package IGS_AS_DUE_DT_SUMRY_PKG
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE PACKAGE "APPS"."IGS_AS_DUE_DT_SUMRY_PKG" AUTHID CURRENT_USER as
/* $Header: IGSDI50S.pls 115.4 2002/11/28 23:23:21 nsidana ship $ */

procedure INSERT_ROW (
  X_ROWID in out NOCOPY VARCHAR2,
  X_AT_ID in out NOCOPY NUMBER,
  X_SESSION_ID in NUMBER,
  X_UNIT_CD in VARCHAR2,
  X_VERSION_NUMBER in NUMBER,
  X_CAL_TYPE in VARCHAR2,
  X_CI_SEQUENCE_NUMBER in NUMBER,
  X_OWNER_ORG_UNIT_CD in VARCHAR2,
  X_OWNER_OU_START_DT in DATE,
  X_UNIT_MODE in VARCHAR2,
  X_ASS_ID in NUMBER,
  X_WEEK_ENDING_DT in DATE,
  X_BASE_COUNT in NUMBER,
  X_EXPECTED_OVERDUE_COUNT in NUMBER,
  X_ONE_WEEK_EXTENSION_COUNT in NUMBER,
  X_TWO_WEEK_EXTENSION_COUNT in NUMBER,
  X_THREE_WEEK_PLUS_EXTNSN_COUNT in NUMBER,
  X_RECEIVED_COUNT in NUMBER,
  X_MODE in VARCHAR2 default 'R'
  );
procedure LOCK_ROW (
  X_ROWID in  VARCHAR2,
  X_AT_ID in NUMBER,
  X_SESSION_ID in NUMBER,
  X_UNIT_CD in VARCHAR2,
  X_VERSION_NUMBER in NUMBER,
  X_CAL_TYPE in VARCHAR2,
  X_CI_SEQUENCE_NUMBER in NUMBER,
  X_OWNER_ORG_UNIT_CD in VARCHAR2,
  X_OWNER_OU_START_DT in DATE,
  X_UNIT_MODE in VARCHAR2,
  X_ASS_ID in NUMBER,
  X_WEEK_ENDING_DT in DATE,
  X_BASE_COUNT in NUMBER,
  X_EXPECTED_OVERDUE_COUNT in NUMBER,
  X_ONE_WEEK_EXTENSION_COUNT in NUMBER,
  X_TWO_WEEK_EXTENSION_COUNT in NUMBER,
  X_THREE_WEEK_PLUS_EXTNSN_COUNT in NUMBER,
  X_RECEIVED_COUNT in NUMBER
);
procedure UPDATE_ROW (
  X_ROWID in  VARCHAR2,
  X_AT_ID in NUMBER,
  X_SESSION_ID in NUMBER,
  X_UNIT_CD in VARCHAR2,
  X_VERSION_NUMBER in NUMBER,
  X_CAL_TYPE in VARCHAR2,
  X_CI_SEQUENCE_NUMBER in NUMBER,
  X_OWNER_ORG_UNIT_CD in VARCHAR2,
  X_OWNER_OU_START_DT in DATE,
  X_UNIT_MODE in VARCHAR2,
  X_ASS_ID in NUMBER,
  X_WEEK_ENDING_DT in DATE,
  X_BASE_COUNT in NUMBER,
  X_EXPECTED_OVERDUE_COUNT in NUMBER,
  X_ONE_WEEK_EXTENSION_COUNT in NUMBER,
  X_TWO_WEEK_EXTENSION_COUNT in NUMBER,
  X_THREE_WEEK_PLUS_EXTNSN_COUNT in NUMBER,
  X_RECEIVED_COUNT in NUMBER,
  X_MODE in VARCHAR2 default 'R'
  );
procedure ADD_ROW (
  X_ROWID in out NOCOPY VARCHAR2,
  X_AT_ID in out NOCOPY NUMBER,
  X_SESSION_ID in NUMBER,
  X_UNIT_CD in VARCHAR2,
  X_VERSION_NUMBER in NUMBER,
  X_CAL_TYPE in VARCHAR2,
  X_CI_SEQUENCE_NUMBER in NUMBER,
  X_OWNER_ORG_UNIT_CD in VARCHAR2,
  X_OWNER_OU_START_DT in DATE,
  X_UNIT_MODE in VARCHAR2,
  X_ASS_ID in NUMBER,
  X_WEEK_ENDING_DT in DATE,
  X_BASE_COUNT in NUMBER,
  X_EXPECTED_OVERDUE_COUNT in NUMBER,
  X_ONE_WEEK_EXTENSION_COUNT in NUMBER,
  X_TWO_WEEK_EXTENSION_COUNT in NUMBER,
  X_THREE_WEEK_PLUS_EXTNSN_COUNT in NUMBER,
  X_RECEIVED_COUNT in NUMBER,
  X_MODE in VARCHAR2 default 'R'
  );
procedure DELETE_ROW (
  X_ROWID in VARCHAR2
);
FUNCTION Get_PK_For_Validation (
    x_at_id IN NUMBER
    )RETURN BOOLEAN;

  PROCEDURE Before_DML (
    p_action IN VARCHAR2,
    x_rowid IN VARCHAR2 DEFAULT NULL,
    X_AT_ID IN NUMBER DEFAULT NULL,
    x_session_id IN NUMBER DEFAULT NULL,
    x_unit_cd IN VARCHAR2 DEFAULT NULL,
    x_version_number IN NUMBER DEFAULT NULL,
    x_cal_type IN VARCHAR2 DEFAULT NULL,
    x_ci_sequence_number IN NUMBER DEFAULT NULL,
    x_owner_org_unit_cd IN VARCHAR2 DEFAULT NULL,
    x_owner_ou_start_dt IN DATE DEFAULT NULL,
    x_unit_mode IN VARCHAR2 DEFAULT NULL,
    x_ass_id IN NUMBER DEFAULT NULL,
    x_week_ending_dt IN DATE DEFAULT NULL,
    x_base_count IN NUMBER DEFAULT NULL,
    x_expected_overdue_count IN NUMBER DEFAULT NULL,
    x_one_week_extension_count IN NUMBER DEFAULT NULL,
    x_two_week_extension_count IN NUMBER DEFAULT NULL,
    x_three_week_plus_extnsn_count IN NUMBER DEFAULT NULL,
    x_received_count IN NUMBER DEFAULT NULL,
    x_creation_date IN DATE DEFAULT NULL,
    x_created_by IN NUMBER DEFAULT NULL,
    x_last_update_date IN DATE DEFAULT NULL,
    x_last_updated_by IN NUMBER DEFAULT NULL,
    x_last_update_login IN NUMBER DEFAULT NULL
  ) ;


end IGS_AS_DUE_DT_SUMRY_PKG;

 

/
