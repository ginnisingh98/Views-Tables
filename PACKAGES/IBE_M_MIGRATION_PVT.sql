--------------------------------------------------------
--  DDL for Package IBE_M_MIGRATION_PVT
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE PACKAGE "APPS"."IBE_M_MIGRATION_PVT" AUTHID CURRENT_USER AS
/* $Header: IBEVMMGS.pls 115.7 2002/12/24 01:54:55 jshang ship $ */

g_pkg_name   CONSTANT VARCHAR2(30):='IBE_M_MIGRATION_PVT';
g_api_version CONSTANT NUMBER := 1.0;

-- Fo debug
g_debug VARCHAR2(1) := NVL(fnd_profile.value('APPS_DEBUG'),'N');

TYPE STRING_TBL_TYPE IS TABLE OF VARCHAR2(4) INDEX BY BINARY_INTEGER;
TYPE STRING_240_TBL_TYPE IS TABLE OF VARCHAR2(240) INDEX BY BINARY_INTEGER;
TYPE STRING_255_TBL_TYPE IS TABLE OF VARCHAR2(255) INDEX BY BINARY_INTEGER;
TYPE NUMBER_TBL_TYPE IS TABLE OF NUMBER INDEX BY BINARY_INTEGER;

-- Type defination for content component
TYPE CONTENT_COMPONENT_REC_TYPE IS RECORD (
  CONTEXT_ID NUMBER := NULL,
  ACCESS_NAME VARCHAR2(40) := NULL,
  COMPONENT_TYPE_CODE VARCHAR2(30) := NULL);

NULL_CONTENT_COMPONENT_REC CONTENT_COMPONENT_REC_TYPE;

TYPE CONTENT_COMPONENT_TBL_TYPE IS TABLE OF
  CONTENT_COMPONENT_REC_TYPE INDEX BY BINARY_INTEGER;

NULL_CONTENT_COMPONENT_TBL CONTENT_COMPONENT_TBL_TYPE;

-- Type defination for media objects and templates
TYPE MEDIA_TEMPLATE_REC_TYPE IS RECORD (
  ITEM_ID NUMBER := NULL,
  ACCESS_NAME VARCHAR2(40) := NULL,
  DELIVERABLE_TYPE_CODE VARCHAR2(40) := NULL,
  APPLICABLE_TO_CODE VARCHAR2(40) := NULL,
  NEW_DELIVERABLE VARCHAR2(40) := NULL,
  NEW_APPLICABLE VARCHAR2(40) := NULL);

NULL_MEDIA_TEMPLATE_REC MEDIA_TEMPLATE_REC_TYPE;

TYPE MEDIA_TEMPLATE_TBL_TYPE IS TABLE OF
  MEDIA_TEMPLATE_REC_TYPE INDEX BY BINARY_INTEGER;

NULL_MEDIA_TEMPLATE_TBL MEDIA_TEMPLATE_TBL_TYPE;

-- TYPE ATTACHMENT
TYPE ATTACHMENT_REC_TYPE IS RECORD (
  ITEM_ID NUMBER,
  ACCESS_NAME VARCHAR2(40),
  MSITE_ID NUMBER,
  STORE_CODE VARCHAR2(240),
  DEFAULT_SITE VARCHAR2(3),
  LANGUAGE VARCHAR2(4),
  LANGDESC VARCHAR2(255),
  CONTENT_TYPE_CODE VARCHAR2(100),
  CONTENT_ITEM_ID NUMBER,
  CITEM_VERSION_ID NUMBER,
  CONTENT_ITEM_CODE VARCHAR2(100),
  FILE_ID NUMBER,
  FILE_NAME VARCHAR2(240),
  HEIGHT NUMBER,
  WIDTH NUMBER,
  SEED_DATA_FLAG VARCHAR2(1),
  CONFLICT_FLAG VARCHAR2(1),
  DUPLICATE_FLAG VARCHAR2(1),
  START_TRANS NUMBER,
  END_TRANS NUMBER
  );

TYPE ATTACHMENT_TBL_TYPE IS TABLE OF
  ATTACHMENT_REC_TYPE INDEX BY BINARY_INTEGER;

TYPE TRANS_ATTACHMENT_REC_TYPE IS RECORD (
  TRANS_LANGUAGES VARCHAR2(4),
  TRANS_LANGDESC VARCHAR2(255),
  FILE_IDS NUMBER,
  FILE_NAMES VARCHAR2(240),
  HIGHTS NUMBER,
  WIDTHS NUMBER
  );

TYPE TRANS_ATTACHMENT_TBL_TYPE IS TABLE OF
  TRANS_ATTACHMENT_REC_TYPE INDEX BY BINARY_INTEGER;

TYPE CONTENT_REC_TYPE IS RECORD (
  ACCESS_NAME VARCHAR2(40),
  SEED_FLAG VARCHAR2(1),
  STORE_CODE VARCHAR2(240),
  CONTENT_ITEM_CODE VARCHAR2(100),
  LANGUAGE VARCHAR2(30),
  FILE_NAME VARCHAR2(240)
);

TYPE CONTENT_TBL_TYPE IS TABLE OF
  CONTENT_REC_TYPE INDEX BY BINARY_INTEGER;

PROCEDURE context_mig(p_mode IN VARCHAR2,
  x_status OUT NOCOPY VARCHAR2,
  x_content_component_tbl OUT NOCOPY CONTENT_COMPONENT_TBL_TYPE);

PROCEDURE media_template_mig(p_mode IN VARCHAR2,
  x_status OUT NOCOPY VARCHAR2,
  x_media_tbl OUT NOCOPY MEDIA_TEMPLATE_TBL_TYPE,
  x_template_tbl OUT NOCOPY MEDIA_TEMPLATE_TBL_TYPE);

-- This migration procedure is for IBE.O
PROCEDURE attachment_mig(p_mode IN VARCHAR2,
  p_default_mig_lang IN VARCHAR2,
  x_status OUT NOCOPY VARCHAR2);

PROCEDURE attachType;

PROCEDURE ocmMigration(errbuf OUT NOCOPY VARCHAR2,
  retcode OUT NOCOPY VARCHAR2,
  p_mode IN VARCHAR2,
  p_default_lang IN VARCHAR2,
  p_debug_flag IN VARCHAR2,
  p_clean_flag IN VARCHAR2 DEFAULT 'N');

END IBE_M_MIGRATION_PVT;

 

/
