--------------------------------------------------------
--  DDL for Package PAY_PAYRP940_XMLP_PKG
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE PACKAGE "APPS"."PAY_PAYRP940_XMLP_PKG" AUTHID CURRENT_USER As
/* $Header: PAYUS940S.pls 120.1 2008/03/18 06:26:49 srikrish noship $ */
  P_TAX_UNIT_ID NUMBER;

  P_BUSINESS_GROUP_ID NUMBER;

  P_TAX_YEAR VARCHAR2(4);

  P_TRACE VARCHAR2(2);

  P_DEBUG VARCHAR2(2);

  P_STATE_CODE VARCHAR2(10);

  P_FLAG VARCHAR2(1);

  CP_SELECT_COL1 VARCHAR2(100) := '1';

  CP_FROM_TABLE VARCHAR2(100) := 'pay_us_state_tax_bal_gre_v';

  CP_WHERE_CLAUSE VARCHAR2(2000) := 'and 1=1';

  CP_SELECT_COL2 VARCHAR2(100) := '2';

  CP_940_FED_STATUS VARCHAR2(1) := 'N';

  CP_940_STATE_STATUS VARCHAR2(1) := 'N';

  P_CONC_REQUEST_ID NUMBER;

  CP_NY_REDUCTION_RATE NUMBER;

  CP_EXEMPT_PAYMENTS NUMBER;

  CP_EXCESS_PAYMENTS NUMBER;

  C_EXPERIENCE_RATE2 VARCHAR2(15);

  C_TAX_UNIT VARCHAR2(240) := 'All';

  C_BUSINESS_GROUP_NAME VARCHAR2(240);

  C_GAZ_START_DATE DATE;

  FUNCTION BEFOREREPORT RETURN BOOLEAN;

  FUNCTION C_TRACEFORMULA RETURN VARCHAR2;

  FUNCTION C_STATE_EINFORMULA(TAX_UNIT_ID IN NUMBER
                             ,STATE_CODE IN VARCHAR2) RETURN VARCHAR2;

  FUNCTION C_TOTAL_PAYMENTSFORMULA(TAX_UNIT_ID IN NUMBER
                                  ,C_GAZ_END_DATE IN DATE) RETURN NUMBER;

  FUNCTION C_GROSS_FUTA_TAXFORMULA(C_TOTAL_TAXABLE_WAGES IN NUMBER
                                  ,TAX_UNIT_ID IN NUMBER) RETURN NUMBER;

  FUNCTION C_MAXIMUM_CREDITFORMULA(C_TOTAL_TAXABLE_WAGES IN NUMBER
                                  ,TAX_UNIT_ID IN NUMBER) RETURN NUMBER;

  FUNCTION C_TAXABLE_PAYROLLFORMULA(C_GAZ_END_DATE IN DATE
                                   ,TAX_UNIT_ID IN NUMBER
                                   ,JURISDICTION_CODE IN VARCHAR2
                                   ,VALUE IN NUMBER
                                   ,STATE_CODE IN VARCHAR2) RETURN NUMBER;

  FUNCTION C_TOTAL_EXEMPT_PAYMENTSFORMULA(TAX_UNIT_ID IN NUMBER) RETURN NUMBER;

  FUNCTION C_TOTAL_TAXABLE_WAGESFORMULA(C_TOTAL_PAYMENTS IN NUMBER
                                       ,C_TOTAL_EXEMPT_PAYMENTS IN NUMBER
                                       ,TAX_UNIT_ID IN NUMBER) RETURN NUMBER;

  FUNCTION C_EXPERIENCE_RATE_1FORMULA(TAX_UNIT_ID IN NUMBER
                                     ,STATE_CODE IN VARCHAR2) RETURN VARCHAR2;

  FUNCTION C_CONTRIBUTIONSFORMULA(C_TAXABLE_PAYROLL IN NUMBER) RETURN NUMBER;

  FUNCTION C_CONTRIBUTIONS_PAYABLEFORMULA(C_EXPERIENCE_RATE_1 IN VARCHAR2
                                         ,C_TAXABLE_PAYROLL IN NUMBER) RETURN NUMBER;

  FUNCTION C_ADDITIONAL_CREDITFORMULA(C_TAXABLE_PAYROLL IN NUMBER
                                     ,CF_COMPUTATION_RATE IN NUMBER) RETURN NUMBER;

  FUNCTION C_GAZ_END_DATEFORMULA RETURN DATE;

  FUNCTION BEFOREPFORM RETURN BOOLEAN;

  FUNCTION CP_EXEMPT_PAYMENTSFORMULA RETURN NUMBER;

  FUNCTION CP_EXCESS_PAYMENTSFORMULA RETURN NUMBER;

  FUNCTION AFTERPFORM RETURN BOOLEAN;

  FUNCTION AFTERREPORT RETURN BOOLEAN;

  FUNCTION C_NY_WAGESFORMULA(TAX_UNIT_ID IN NUMBER
                            ,C_GAZ_END_DATE IN DATE) RETURN NUMBER;

  FUNCTION C_NY_RATEFORMULA(C_NY_WAGES IN NUMBER) RETURN NUMBER;

  FUNCTION CF_FUTA_TAX_BEF_ADJFORMULA(C_TOTAL_TAXABLE_WAGES IN NUMBER) RETURN NUMBER;

  FUNCTION CF_COMPUTATION_RATEFORMULA(C_EXPERIENCE_RATE_1 IN VARCHAR2) RETURN NUMBER;

  FUNCTION CF_LINE_9FORMULA(TAX_UNIT_ID IN NUMBER
                           ,C_GAZ_END_DATE IN DATE
                           ,C_TOTAL_TAXABLE_WAGES IN NUMBER) RETURN NUMBER;

  FUNCTION CP_EXEMPT_PAYMENTS_P RETURN NUMBER;

  FUNCTION CP_EXCESS_PAYMENTS_P RETURN NUMBER;

  FUNCTION C_EXPERIENCE_RATE2_P RETURN VARCHAR2;

  FUNCTION C_TAX_UNIT_P RETURN VARCHAR2;

  FUNCTION C_BUSINESS_GROUP_NAME_P RETURN VARCHAR2;

  FUNCTION C_GAZ_START_DATE_P RETURN DATE;

  FUNCTION GET_BUDGET(P_BUDGET_ID IN NUMBER) RETURN VARCHAR2;

  FUNCTION GET_BUDGET_VERSION(P_BUDGET_ID IN NUMBER
                             ,P_BUDGET_VERSION_ID IN NUMBER) RETURN VARCHAR2;

  PROCEDURE GET_ORGANIZATION(P_ORGANIZATION_ID IN NUMBER
                            ,P_ORG_NAME OUT NOCOPY VARCHAR2
                            ,P_ORG_TYPE OUT NOCOPY VARCHAR2);

  FUNCTION GET_JOB(P_JOB_ID IN NUMBER) RETURN VARCHAR2;

  FUNCTION GET_POSITION(P_POSITION_ID IN NUMBER) RETURN VARCHAR2;

  FUNCTION GET_GRADE(P_GRADE_ID IN NUMBER) RETURN VARCHAR2;

  FUNCTION GET_STATUS(P_BUSINESS_GROUP_ID IN NUMBER
                     ,P_ASSIGNMENT_STATUS_TYPE_ID IN NUMBER
                     ,P_LEGISLATION_CODE IN VARCHAR2) RETURN VARCHAR2;

  FUNCTION GET_ABS_TYPE(P_ABS_ATT_TYPE_ID IN NUMBER) RETURN VARCHAR2;

  PROCEDURE GET_TIME_PERIOD(P_TIME_PERIOD_ID IN NUMBER
                           ,P_PERIOD_NAME OUT NOCOPY VARCHAR2
                           ,P_START_DATE OUT NOCOPY DATE
                           ,P_END_DATE OUT NOCOPY DATE);

  FUNCTION GET_BUSINESS_GROUP(P_BUSINESS_GROUP_ID IN NUMBER) RETURN VARCHAR2;

  FUNCTION COUNT_ORG_SUBORDINATES(P_ORG_STRUCTURE_VERSION_ID IN NUMBER
                                 ,P_PARENT_ORGANIZATION_ID IN NUMBER) RETURN NUMBER;

  FUNCTION COUNT_POS_SUBORDINATES(P_POS_STRUCTURE_VERSION_ID IN NUMBER
                                 ,P_PARENT_POSITION_ID IN NUMBER) RETURN NUMBER;

  PROCEDURE GET_ORGANIZATION_HIERARCHY(P_ORGANIZATION_STRUCTURE_ID IN NUMBER
                                      ,P_ORG_STRUCTURE_VERSION_ID IN NUMBER
                                      ,P_ORG_STRUCTURE_NAME OUT NOCOPY VARCHAR2
                                      ,P_ORG_VERSION OUT NOCOPY NUMBER
                                      ,P_VERSION_START_DATE OUT NOCOPY DATE
                                      ,P_VERSION_END_DATE OUT NOCOPY DATE);

  PROCEDURE GET_POSITION_HIERARCHY(P_POSITION_STRUCTURE_ID IN NUMBER
                                  ,P_POS_STRUCTURE_VERSION_ID IN NUMBER
                                  ,P_POS_STRUCTURE_NAME OUT NOCOPY VARCHAR2
                                  ,P_POS_VERSION OUT NOCOPY NUMBER
                                  ,P_VERSION_START_DATE OUT NOCOPY DATE
                                  ,P_VERSION_END_DATE OUT NOCOPY DATE);

  FUNCTION GET_LOOKUP_MEANING(P_LOOKUP_TYPE IN VARCHAR2
                             ,P_LOOKUP_CODE IN VARCHAR2) RETURN VARCHAR2;

  FUNCTION PERSON_MATCHING_SKILLS(P_PERSON_ID IN NUMBER
                                 ,P_JOB_POSITION_ID IN NUMBER
                                 ,P_JOB_POSITION_TYPE IN VARCHAR2
                                 ,P_MATCHING_LEVEL IN VARCHAR2
                                 ,P_NO_OF_ESSENTIAL IN NUMBER
                                 ,P_NO_OF_DESIRABLE IN NUMBER) RETURN BOOLEAN;

  FUNCTION GET_PAYROLL_NAME(P_SESSION_DATE IN DATE
                           ,P_PAYROLL_ID IN NUMBER) RETURN VARCHAR2;

  FUNCTION GET_ELEMENT_NAME(P_SESSION_DATE IN DATE
                           ,P_ELEMENT_TYPE_ID IN NUMBER) RETURN VARCHAR2;

  PROCEDURE GEN_PARTIAL_MATCHING_LEXICAL(P_CONCATENATED_SEGMENTS IN VARCHAR2
                                        ,P_ID_FLEX_NUM IN NUMBER
                                        ,P_MATCHING_LEXICAL IN OUT NOCOPY VARCHAR2);

  PROCEDURE GET_ATTRIBUTES(P_CONCATENATED_SEGMENTS IN VARCHAR2
                          ,P_NAME IN VARCHAR2
                          ,P_SEGMENTS_USED OUT NOCOPY NUMBER
                          ,P_VALUE1 OUT NOCOPY VARCHAR2
                          ,P_VALUE2 OUT NOCOPY VARCHAR2
                          ,P_VALUE3 OUT NOCOPY VARCHAR2
                          ,P_VALUE4 OUT NOCOPY VARCHAR2
                          ,P_VALUE5 OUT NOCOPY VARCHAR2
                          ,P_VALUE6 OUT NOCOPY VARCHAR2
                          ,P_VALUE7 OUT NOCOPY VARCHAR2
                          ,P_VALUE8 OUT NOCOPY VARCHAR2
                          ,P_VALUE9 OUT NOCOPY VARCHAR2
                          ,P_VALUE10 OUT NOCOPY VARCHAR2
                          ,P_VALUE11 OUT NOCOPY VARCHAR2
                          ,P_VALUE12 OUT NOCOPY VARCHAR2
                          ,P_VALUE13 OUT NOCOPY VARCHAR2
                          ,P_VALUE14 OUT NOCOPY VARCHAR2
                          ,P_VALUE15 OUT NOCOPY VARCHAR2
                          ,P_VALUE16 OUT NOCOPY VARCHAR2
                          ,P_VALUE17 OUT NOCOPY VARCHAR2
                          ,P_VALUE18 OUT NOCOPY VARCHAR2
                          ,P_VALUE19 OUT NOCOPY VARCHAR2
                          ,P_VALUE20 OUT NOCOPY VARCHAR2
                          ,P_VALUE21 OUT NOCOPY VARCHAR2
                          ,P_VALUE22 OUT NOCOPY VARCHAR2
                          ,P_VALUE23 OUT NOCOPY VARCHAR2
                          ,P_VALUE24 OUT NOCOPY VARCHAR2
                          ,P_VALUE25 OUT NOCOPY VARCHAR2
                          ,P_VALUE26 OUT NOCOPY VARCHAR2
                          ,P_VALUE27 OUT NOCOPY VARCHAR2
                          ,P_VALUE28 OUT NOCOPY VARCHAR2
                          ,P_VALUE29 OUT NOCOPY VARCHAR2
                          ,P_VALUE30 OUT NOCOPY VARCHAR2);

  PROCEDURE GET_SEGMENTS(P_CONCATENATED_SEGMENTS IN VARCHAR2
                        ,P_ID_FLEX_NUM IN NUMBER
                        ,P_SEGMENTS_USED OUT NOCOPY NUMBER
                        ,P_VALUE1 OUT NOCOPY VARCHAR2
                        ,P_VALUE2 OUT NOCOPY VARCHAR2
                        ,P_VALUE3 OUT NOCOPY VARCHAR2
                        ,P_VALUE4 OUT NOCOPY VARCHAR2
                        ,P_VALUE5 OUT NOCOPY VARCHAR2
                        ,P_VALUE6 OUT NOCOPY VARCHAR2
                        ,P_VALUE7 OUT NOCOPY VARCHAR2
                        ,P_VALUE8 OUT NOCOPY VARCHAR2
                        ,P_VALUE9 OUT NOCOPY VARCHAR2
                        ,P_VALUE10 OUT NOCOPY VARCHAR2
                        ,P_VALUE11 OUT NOCOPY VARCHAR2
                        ,P_VALUE12 OUT NOCOPY VARCHAR2
                        ,P_VALUE13 OUT NOCOPY VARCHAR2
                        ,P_VALUE14 OUT NOCOPY VARCHAR2
                        ,P_VALUE15 OUT NOCOPY VARCHAR2
                        ,P_VALUE16 OUT NOCOPY VARCHAR2
                        ,P_VALUE17 OUT NOCOPY VARCHAR2
                        ,P_VALUE18 OUT NOCOPY VARCHAR2
                        ,P_VALUE19 OUT NOCOPY VARCHAR2
                        ,P_VALUE20 OUT NOCOPY VARCHAR2
                        ,P_VALUE21 OUT NOCOPY VARCHAR2
                        ,P_VALUE22 OUT NOCOPY VARCHAR2
                        ,P_VALUE23 OUT NOCOPY VARCHAR2
                        ,P_VALUE24 OUT NOCOPY VARCHAR2
                        ,P_VALUE25 OUT NOCOPY VARCHAR2
                        ,P_VALUE26 OUT NOCOPY VARCHAR2
                        ,P_VALUE27 OUT NOCOPY VARCHAR2
                        ,P_VALUE28 OUT NOCOPY VARCHAR2
                        ,P_VALUE29 OUT NOCOPY VARCHAR2
                        ,P_VALUE30 OUT NOCOPY VARCHAR2);

  PROCEDURE GET_DESC_FLEX(P_APPL_SHORT_NAME IN VARCHAR2
                         ,P_DESC_FLEX_NAME IN VARCHAR2
                         ,P_TABLE_ALIAS IN VARCHAR2
                         ,P_TITLE OUT NOCOPY VARCHAR2
                         ,P_LABEL_EXPR OUT NOCOPY VARCHAR2
                         ,P_COLUMN_EXPR OUT NOCOPY VARCHAR2);

  PROCEDURE GET_DESC_FLEX_CONTEXT(P_APPL_SHORT_NAME IN VARCHAR2
                                 ,P_DESC_FLEX_NAME IN VARCHAR2
                                 ,P_TABLE_ALIAS IN VARCHAR2
                                 ,P_TITLE OUT NOCOPY VARCHAR2
                                 ,P_LABEL_EXPR OUT NOCOPY VARCHAR2
                                 ,P_COLUMN_EXPR OUT NOCOPY VARCHAR2);

  PROCEDURE GET_DVLPR_DESC_FLEX(P_APPL_SHORT_NAME IN VARCHAR2
                               ,P_DESC_FLEX_NAME IN VARCHAR2
                               ,P_DESC_FLEX_CONTEXT IN VARCHAR2
                               ,P_TABLE_ALIAS IN VARCHAR2
                               ,P_TITLE OUT NOCOPY VARCHAR2
                               ,P_LABEL_EXPR OUT NOCOPY VARCHAR2
                               ,P_COLUMN_EXPR OUT NOCOPY VARCHAR2);

  FUNCTION GET_PERSON_NAME(P_SESSION_DATE IN DATE
                          ,P_PERSON_ID IN NUMBER) RETURN VARCHAR2;

  FUNCTION GET_SALARY(P_BUSINESS_GROUP_ID IN NUMBER
                     ,P_ASSIGNMENT_ID IN NUMBER
                     ,P_REPORT_DATE IN DATE) RETURN NUMBER;

  PROCEDURE GET_NEW_HIRE_CONTACT(P_PERSON_ID IN NUMBER
                                ,P_BUSINESS_GROUP_ID IN NUMBER
                                ,P_REPORT_DATE IN DATE
                                ,P_CONTACT_NAME OUT NOCOPY VARCHAR2
                                ,P_CONTACT_TITLE OUT NOCOPY VARCHAR2
                                ,P_CONTACT_PHONE OUT NOCOPY VARCHAR2);

  PROCEDURE GET_ADDRESS(P_LOCATION_ID IN NUMBER
                       ,P_ADDRESS OUT NOCOPY VARCHAR2);

  PROCEDURE GET_EMPLOYEE_ADDRESS(P_PERSON_ID IN NUMBER
                                ,P_ADDRESS OUT NOCOPY VARCHAR2);

  PROCEDURE GET_COUNTY_ADDRESS(P_LOCATION_ID IN NUMBER
                              ,P_ADDRESS OUT NOCOPY VARCHAR2);

  PROCEDURE GET_ACTIVITY(P_ESTABLISHMENT_ID IN NUMBER
                        ,P_ACTIVITY OUT NOCOPY VARCHAR2);

  FUNCTION GET_CONSOLIDATION_SET(P_CONSOLIDATION_SET_ID IN NUMBER) RETURN VARCHAR2;

  FUNCTION GET_PAYMENT_TYPE_NAME(P_PAYMENT_TYPE_ID IN NUMBER) RETURN VARCHAR2;

  FUNCTION GET_ELEMENT_TYPE_NAME(P_ELEMENT_TYPE_ID IN NUMBER) RETURN VARCHAR2;

  FUNCTION GET_TAX_UNIT(P_TAX_UNIT_ID IN NUMBER) RETURN VARCHAR2;

  FUNCTION GET_PERSON_NAME(P_PERSON_ID IN NUMBER) RETURN VARCHAR2;

  FUNCTION GET_PAYROLL_ACTION(P_PAYROLL_ACTION_ID IN NUMBER) RETURN VARCHAR2;

  FUNCTION GET_LEGISLATION_CODE(P_BUSINESS_GROUP_ID IN NUMBER) RETURN VARCHAR2;

  FUNCTION GET_DEFINED_BALANCE_ID(P_BALANCE_NAME IN VARCHAR2
                                 ,P_DIMENSION_SUFFIX IN VARCHAR2
                                 ,P_BUSINESS_GROUP_ID IN NUMBER) RETURN NUMBER;

  FUNCTION GET_STARTUP_DEFINED_BALANCE(P_REPORTING_NAME IN VARCHAR2
                                      ,P_DIMENSION_SUFFIX IN VARCHAR2) RETURN NUMBER;

  FUNCTION GET_DEFINED_BALANCE_BY_TYPE(P_BOX_NUM IN VARCHAR2
                                      ,P_DIMENSION_SUFFIX IN VARCHAR2) RETURN NUMBER;

  FUNCTION GET_BEN_CLASS_NAME(P_SESSION_DATE IN DATE
                             ,P_BENEFIT_CLASSIFICATION_ID IN NUMBER) RETURN VARCHAR2;

  FUNCTION GET_COBRA_QUALIFYING_EVENT(P_QUALIFYING_EVENT IN VARCHAR2) RETURN VARCHAR2;

  FUNCTION GET_COBRA_STATUS(P_COBRA_STATUS IN VARCHAR2) RETURN VARCHAR2;

  FUNCTION GET_EST_TAX_UNIT(P_STARTING_ORG_ID IN NUMBER
                           ,P_ORG_STRUCTURE_VERSION_ID IN NUMBER) RETURN NUMBER;

  FUNCTION GET_ORG_HIERARCHY_NAME(P_ORG_STRUCTURE_VERSION_ID IN NUMBER) RETURN VARCHAR2;

  FUNCTION GET_STATE_NAME(P_STATE_CODE IN VARCHAR2) RETURN VARCHAR2;

  FUNCTION GET_ORG_NAME(P_ORGANIZATION_ID IN NUMBER
                       ,P_BUSINESS_GROUP_ID IN NUMBER) RETURN VARCHAR2;

  FUNCTION GET_CAREER_PATH_NAME(P_CAREER_PATH_ID IN NUMBER
                               ,P_BUSINESS_GROUP_ID IN NUMBER) RETURN VARCHAR2;

  FUNCTION GET_AAP_ORG_ID(P_AAP_NAME IN VARCHAR2
                         ,P_BUSINESS_GROUP_ID IN NUMBER) RETURN NUMBER;

  PROCEDURE GET_ADDRESS_31(P_LOCATION_ID IN NUMBER
                          ,P_ADDRESS OUT NOCOPY VARCHAR2);

  FUNCTION GET_LOCATION_CODE(P_LOCATION_ID IN NUMBER) RETURN VARCHAR2;

  PROCEDURE GET_ADDRESS_3LINES(P_PERSON_ID IN NUMBER
                              ,P_EFFECTIVE_DATE IN DATE
                              ,P_ADDR_LINE1 OUT NOCOPY VARCHAR2
                              ,P_ADDR_LINE2 OUT NOCOPY VARCHAR2
                              ,P_CITY_STATE_ZIP OUT NOCOPY VARCHAR2);

  FUNCTION US_TAX_BALANCE_REP(P_ASG_LOCK IN BOOLEAN
                             ,P_TAX_BALANCE_CATEGORY IN VARCHAR2
                             ,P_TAX_TYPE IN VARCHAR2
                             ,P_EE_OR_ER IN VARCHAR2
                             ,P_TIME_TYPE IN VARCHAR2
                             ,P_ASG_TYPE IN VARCHAR2
                             ,P_GRE_ID_CONTEXT IN NUMBER
                             ,P_JD_CONTEXT IN VARCHAR2
                             ,P_ASSIGNMENT_ACTION_ID IN NUMBER
                             ,P_ASSIGNMENT_ID IN NUMBER
                             ,P_VIRTUAL_DATE IN DATE
                             ,P_PAYROLL_ACTION_ID IN NUMBER) RETURN NUMBER;

  FUNCTION US_TAX_BALANCE_REP(P_ASG_LOCK IN BOOLEAN
                             ,P_TAX_BALANCE_CATEGORY IN VARCHAR2
                             ,P_TAX_TYPE IN VARCHAR2
                             ,P_EE_OR_ER IN VARCHAR2
                             ,P_TIME_TYPE IN VARCHAR2
                             ,P_ASG_TYPE IN VARCHAR2
                             ,P_GRE_ID_CONTEXT IN NUMBER
                             ,P_JD_CONTEXT IN VARCHAR2
                             ,P_ASSIGNMENT_ACTION_ID IN NUMBER
                             ,P_ASSIGNMENT_ID IN NUMBER
                             ,P_VIRTUAL_DATE IN DATE) RETURN NUMBER;

  FUNCTION US_TAX_BALANCE(P_TAX_BALANCE_CATEGORY IN VARCHAR2
                         ,P_TAX_TYPE IN VARCHAR2
                         ,P_EE_OR_ER IN VARCHAR2
                         ,P_TIME_TYPE IN VARCHAR2
                         ,P_ASG_TYPE IN VARCHAR2
                         ,P_GRE_ID_CONTEXT IN NUMBER
                         ,P_JD_CONTEXT IN VARCHAR2
                         ,P_ASSIGNMENT_ACTION_ID IN NUMBER
                         ,P_ASSIGNMENT_ID IN NUMBER
                         ,P_VIRTUAL_DATE IN DATE) RETURN NUMBER;

  FUNCTION US_TAX_BALANCE(P_TAX_BALANCE_CATEGORY IN VARCHAR2
                         ,P_TAX_TYPE IN VARCHAR2
                         ,P_EE_OR_ER IN VARCHAR2
                         ,P_TIME_TYPE IN VARCHAR2
                         ,P_ASG_TYPE IN VARCHAR2
                         ,P_GRE_ID_CONTEXT IN NUMBER
                         ,P_JD_CONTEXT IN VARCHAR2
                         ,P_ASSIGNMENT_ACTION_ID IN NUMBER
                         ,P_ASSIGNMENT_ID IN NUMBER
                         ,P_VIRTUAL_DATE IN DATE
                         ,P_PAYROLL_ACTION_ID IN NUMBER) RETURN NUMBER;

  FUNCTION US_TAX_BALANCE(P_TAX_BALANCE_CATEGORY IN VARCHAR2
                         ,P_TAX_TYPE IN VARCHAR2
                         ,P_EE_OR_ER IN VARCHAR2
                         ,P_TIME_TYPE IN VARCHAR2
                         ,P_ASG_TYPE IN VARCHAR2
                         ,P_GRE_ID_CONTEXT IN NUMBER
                         ,P_JD_CONTEXT IN VARCHAR2
                         ,P_ASSIGNMENT_ACTION_ID IN NUMBER
                         ,P_ASSIGNMENT_ID IN NUMBER
                         ,P_VIRTUAL_DATE IN DATE
                         ,P_PAYROLL_ACTION_ID IN NUMBER
                         ,P_ASG_LOCK IN BOOLEAN) RETURN NUMBER;

function R_State1FormatTrigger(C_EXPERIENCE_RATE_1 IN varchar2,
				c_experience_rate2  IN Varchar2,
				C_TAXABLE_PAYROLL IN varchar2)  return boolean;

END PAY_PAYRP940_XMLP_PKG;

/
