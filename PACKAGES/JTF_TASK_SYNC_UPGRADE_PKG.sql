--------------------------------------------------------
--  DDL for Package JTF_TASK_SYNC_UPGRADE_PKG
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE PACKAGE "APPS"."JTF_TASK_SYNC_UPGRADE_PKG" AUTHID CURRENT_USER AS
/* $Header: jtftkugs.pls 115.0 2002/08/29 19:35:31 cjang noship $ */
/*======================================================================+
| DESCRIPTION                                                           |
|    This package is used to migrate the existing task data             |
|      so that they can work with synchronization function.             |
|                                                                       |
| NOTES                                                                 |
|                                                                       |
| Date          Developer        Change                                 |
| ------        ---------------  -------------------------------------- |
| 26-Aug-2002   cjang            Created.                               |
+=======================================================================*/

-------------------------------------------------------------------------
--  This procedure is used to update invalid repeating appts.
--
--  With the prior release, the Repeating API had bugs and created
--  repeating appointments on dates that it should not have.
--  This has been fixed with the sync code.
--  This step will check if the repeating appointment series has all
--  the proper dates. If the dates are not correct, then this would
--  lead to an error during the sync. If the data migration would
--  encounter an appointment in the repeating series ( which was not
--  updated at all ) and the date was wrong, then the repeating rule
--  will be nullified for that appoinment. No appointments will be
--  deleted and no exclusions will be created.
--
--  The bugs on on recurrence API is categorized on four cases
--
--    1) Invalid dates
--       - Remove from repeating series.
--
--    2) Extra dates
--       - Remove from repeating series.
--
--    3) Missing dates
--       - Insert into the exclusion table.
--
--    4) Duplicate dates
--       - Remove from repeating series.
--
--  Note: This will not resolve any invalid start time or duration.
-------------------------------------------------------------------------
PROCEDURE update_invalid_repeating_appts;

--------------------------------------------------------------
-- This procedure is used to initialize the new column
--   "object_changed_date" with 02-Jan-1970.
--------------------------------------------------------------
PROCEDURE initialize_object_changed_date;

-----------------------------------------------------------------------
-- Prior to the recent changes in jtf_tasks_b.update_task, an inviter
--  could update an appointment in a repeating rule and
--  the updated appointments remained in part of the repeating series.
-- However, with the recent changes, if an inviter changes any field
--  in repeating appointments, it will be excluded.
-- Hence this script will compare LAST_UPDATE_DATE with CREATION_DATE.
-- If it's different, this script deems that the record has been
--  modified and needs to be excluded.
-----------------------------------------------------------------------
PROCEDURE exclude_modified_repeat_appts;

----------------------------------------------------------------------
-- This procedure is used to update jtf_task_recur_rules table
--  with occurs_number and end_date_active from generate_dates().
--
-- First of all, this script selects all recurrence rule records that
--   have null value in occurs_number or end_date_active.
-- And then, this procedure updates the columns with the values
--   generated by the API generate_dates().
----------------------------------------------------------------------
PROCEDURE correct_recurrence_rule;

----------------------------------------------------------------------
-- This procedure is used to reset the assignment status
--  to Invited if the appt has the combination of assignment statuses
--   including Invited, Accepted and Rejected per assignee.
----------------------------------------------------------------------
PROCEDURE reset_assignment_status;

---------------------------------------------------------------------
-- This is used to nullify all repeating series which have incorrect
-- assignments. If the number of total occurrence is different from
-- the number of assignments for an assignee,
-- we regards it as an incorrect assignment.
-- This means that an assignee has been assigned to some of
-- occurrences. Then we blindly nullify the recurrence rule id for
-- those repeating series because it's very hard to distinguish
-- the method of the assignee assignment allowed by sync module.
---------------------------------------------------------------------
PROCEDURE nullify_wrong_assignments;

END JTF_TASK_SYNC_UPGRADE_PKG;

 

/
