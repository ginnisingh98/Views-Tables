--------------------------------------------------------
--  DDL for Package CS_KB_HISTORIES_PKG
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE PACKAGE "APPS"."CS_KB_HISTORIES_PKG" AUTHID CURRENT_USER AS
/* $Header: cskbhis.pls 115.6 2002/11/11 23:52:51 mkettle ship $ */

  ERROR_STATUS      CONSTANT NUMBER      := -1;
  OKAY_STATUS       CONSTANT NUMBER      := 0;


FUNCTION Create_History(
  p_name            in varchar2 DEFAULT NULL,
  p_desc            in varchar2 DEFAULT NULL,
  P_ATTRIBUTE_CATEGORY in VARCHAR2 DEFAULT NULL,
  P_ATTRIBUTE1 in VARCHAR2 DEFAULT NULL,
  P_ATTRIBUTE2 in VARCHAR2 DEFAULT NULL,
  P_ATTRIBUTE3 in VARCHAR2 DEFAULT NULL,
  P_ATTRIBUTE4 in VARCHAR2 DEFAULT NULL,
  P_ATTRIBUTE5 in VARCHAR2 DEFAULT NULL,
  P_ATTRIBUTE6 in VARCHAR2 DEFAULT NULL,
  P_ATTRIBUTE7 in VARCHAR2 DEFAULT NULL,
  P_ATTRIBUTE8 in VARCHAR2 DEFAULT NULL,
  P_ATTRIBUTE9 in VARCHAR2 DEFAULT NULL,
  P_ATTRIBUTE10 in VARCHAR2 DEFAULT NULL,
  P_ATTRIBUTE11 in VARCHAR2 DEFAULT NULL,
  P_ATTRIBUTE12 in VARCHAR2 DEFAULT NULL,
  P_ATTRIBUTE13 in VARCHAR2 DEFAULT NULL,
  P_ATTRIBUTE14 in VARCHAR2 DEFAULT NULL,
  P_ATTRIBUTE15 in VARCHAR2 DEFAULT NULL
) return number;


FUNCTION Delete_History(
  p_history_id in number
) return number;


procedure INSERT_ROW (
  X_ROWID in OUT NOCOPY VARCHAR2,
  X_HISTORY_ID in NUMBER,
  X_HISTORY_NAME in VARCHAR2,
  X_USER_ID in NUMBER,
  X_ENTRY_DATE in DATE,
  X_NAME in VARCHAR2,
  X_DESCRIPTION in VARCHAR2,
  X_CREATION_DATE in DATE,
  X_CREATED_BY in NUMBER,
  X_LAST_UPDATE_DATE in DATE,
  X_LAST_UPDATED_BY in NUMBER,
  X_LAST_UPDATE_LOGIN in NUMBER,
  X_ATTRIBUTE_CATEGORY in VARCHAR2 DEFAULT NULL,
  X_ATTRIBUTE1 in VARCHAR2 DEFAULT NULL,
  X_ATTRIBUTE2 in VARCHAR2 DEFAULT NULL,
  X_ATTRIBUTE3 in VARCHAR2 DEFAULT NULL,
  X_ATTRIBUTE4 in VARCHAR2 DEFAULT NULL,
  X_ATTRIBUTE5 in VARCHAR2 DEFAULT NULL,
  X_ATTRIBUTE6 in VARCHAR2 DEFAULT NULL,
  X_ATTRIBUTE7 in VARCHAR2 DEFAULT NULL,
  X_ATTRIBUTE8 in VARCHAR2 DEFAULT NULL,
  X_ATTRIBUTE9 in VARCHAR2 DEFAULT NULL,
  X_ATTRIBUTE10 in VARCHAR2 DEFAULT NULL,
  X_ATTRIBUTE11 in VARCHAR2 DEFAULT NULL,
  X_ATTRIBUTE12 in VARCHAR2 DEFAULT NULL,
  X_ATTRIBUTE13 in VARCHAR2 DEFAULT NULL,
  X_ATTRIBUTE14 in VARCHAR2 DEFAULT NULL,
  X_ATTRIBUTE15 in VARCHAR2 DEFAULT NULL
);

procedure LOCK_ROW (
  X_HISTORY_ID in NUMBER,
  X_HISTORY_NAME in VARCHAR2,
  X_USER_ID in NUMBER,
  X_ENTRY_DATE in DATE,
  X_NAME in VARCHAR2,
  X_DESCRIPTION in VARCHAR2,
  X_ATTRIBUTE_CATEGORY in VARCHAR2 DEFAULT NULL,
  X_ATTRIBUTE1 in VARCHAR2 DEFAULT NULL,
  X_ATTRIBUTE2 in VARCHAR2 DEFAULT NULL,
  X_ATTRIBUTE3 in VARCHAR2 DEFAULT NULL,
  X_ATTRIBUTE4 in VARCHAR2 DEFAULT NULL,
  X_ATTRIBUTE5 in VARCHAR2 DEFAULT NULL,
  X_ATTRIBUTE6 in VARCHAR2 DEFAULT NULL,
  X_ATTRIBUTE7 in VARCHAR2 DEFAULT NULL,
  X_ATTRIBUTE8 in VARCHAR2 DEFAULT NULL,
  X_ATTRIBUTE9 in VARCHAR2 DEFAULT NULL,
  X_ATTRIBUTE10 in VARCHAR2 DEFAULT NULL,
  X_ATTRIBUTE11 in VARCHAR2 DEFAULT NULL,
  X_ATTRIBUTE12 in VARCHAR2 DEFAULT NULL,
  X_ATTRIBUTE13 in VARCHAR2 DEFAULT NULL,
  X_ATTRIBUTE14 in VARCHAR2 DEFAULT NULL,
  X_ATTRIBUTE15 in VARCHAR2 DEFAULT NULL
);

procedure UPDATE_ROW (
  X_HISTORY_ID in NUMBER,
  X_HISTORY_NAME in VARCHAR2,
  X_USER_ID in NUMBER,
  X_ENTRY_DATE in DATE,
  X_NAME in VARCHAR2,
  X_DESCRIPTION in VARCHAR2,
  X_LAST_UPDATE_DATE in DATE,
  X_LAST_UPDATED_BY in NUMBER,
  X_LAST_UPDATE_LOGIN in NUMBER,
  X_ATTRIBUTE_CATEGORY in VARCHAR2 DEFAULT NULL,
  X_ATTRIBUTE1 in VARCHAR2 DEFAULT NULL,
  X_ATTRIBUTE2 in VARCHAR2 DEFAULT NULL,
  X_ATTRIBUTE3 in VARCHAR2 DEFAULT NULL,
  X_ATTRIBUTE4 in VARCHAR2 DEFAULT NULL,
  X_ATTRIBUTE5 in VARCHAR2 DEFAULT NULL,
  X_ATTRIBUTE6 in VARCHAR2 DEFAULT NULL,
  X_ATTRIBUTE7 in VARCHAR2 DEFAULT NULL,
  X_ATTRIBUTE8 in VARCHAR2 DEFAULT NULL,
  X_ATTRIBUTE9 in VARCHAR2 DEFAULT NULL,
  X_ATTRIBUTE10 in VARCHAR2 DEFAULT NULL,
  X_ATTRIBUTE11 in VARCHAR2 DEFAULT NULL,
  X_ATTRIBUTE12 in VARCHAR2 DEFAULT NULL,
  X_ATTRIBUTE13 in VARCHAR2 DEFAULT NULL,
  X_ATTRIBUTE14 in VARCHAR2 DEFAULT NULL,
  X_ATTRIBUTE15 in VARCHAR2 DEFAULT NULL
);

procedure DELETE_ROW (
  X_HISTORY_ID in NUMBER
);

procedure ADD_LANGUAGE;

procedure TRANSLATE_ROW (
     X_HISTORY_ID		  	in 	VARCHAR2,
     X_NAME	 			in	VARCHAR2,
     X_DESCRIPTION 	 		in   	VARCHAR2,
     X_OWNER				in	VARCHAR2
);

end CS_KB_HISTORIES_PKG;

 

/
