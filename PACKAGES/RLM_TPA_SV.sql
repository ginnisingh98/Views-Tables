--------------------------------------------------------
--  DDL for Package RLM_TPA_SV
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE PACKAGE "APPS"."RLM_TPA_SV" AUTHID CURRENT_USER AS
/* $Header: RLMTPDPS.pls 120.1.12000000.2 2007/07/30 09:26:14 brana ship $ */
--{
    --
    --
    -- =================================================================
    -- *** PLEASE DO NOT EDIT THIS FILE. ***
    -- *** THIS FILE IS ALWAYS GENERATED BY TPA GENERATE UTILITY. ***
    -- =================================================================
    --
    PROCEDURE populate_record_cust
      (
        x_ship_from_org_id             IN      NUMBER,
        x_customer_id                  IN      NUMBER,
        x_terms_definition_level       IN OUT  NOCOPY VARCHAR2,
        x_terms_rec                    OUT     NOCOPY rlm_setup_terms_sv.setup_terms_rec_typ,
        x_return_message               IN OUT  NOCOPY VARCHAR2,
        x_return_status                OUT     NOCOPY BOOLEAN
      );
    --
    --
    PROCEDURE get_setup_terms
      (
        x_ship_from_org_id             IN      NUMBER,
        x_customer_id                  IN      NUMBER,
        x_ship_to_address_id           IN      NUMBER,
        x_customer_item_id             IN      NUMBER,
        x_terms_definition_level       IN OUT  NOCOPY VARCHAR2,
        x_terms_rec                    OUT     NOCOPY rlm_setup_terms_sv.setup_terms_rec_typ,
        x_return_message               OUT     NOCOPY VARCHAR2,
        x_return_status                OUT     NOCOPY BOOLEAN
      );
    --
    --
    PROCEDURE CheckCUMKeyPO
      (
        x_group_rec                    IN      RLM_VALIDATEDEMAND_SV.t_group_rec,
        x_header_rec                   IN      RLM_INTERFACE_HEADERS%ROWTYPE,
        x_lines_rec                    IN OUT  NOCOPY RLM_INTERFACE_LINES%ROWTYPE
      );
    --
    --
    PROCEDURE DeriveInventoryItemId
      (
        x_header_rec                   IN      RLM_INTERFACE_HEADERS%ROWTYPE,
        x_lines_rec                    IN OUT  NOCOPY RLM_INTERFACE_LINES%ROWTYPE
      );
    --
    --
    PROCEDURE InsertOMMessages
      (
        x_Sched_rec                    IN      RLM_INTERFACE_HEADERS%ROWTYPE,
        x_Group_rec                    IN      RLM_DP_SV.t_Group_rec,
        x_msg_count                    IN      NUMBER,
        x_msg_level                    IN      VARCHAR2,
        x_token                        IN      VARCHAR2,
        x_msg_name                     IN      VARCHAR2
      );
    --
    --
    PROCEDURE CreateRSOHeader
      (
        x_Sched_rec                    IN      RLM_INTERFACE_HEADERS%ROWTYPE,
        x_Group_rec                    IN      RLM_DP_SV.t_Group_rec,
        x_rso_hdr_id                   OUT     NOCOPY NUMBER
      );
    --
    --
    PROCEDURE InsertRSO
      (
        x_Sched_rec                    IN      RLM_INTERFACE_HEADERS%ROWTYPE,
        x_Group_rec                    IN      RLM_DP_SV.t_Group_rec,
        p_rso_hdr_id                   IN      NUMBER,
        p_start_date                   IN      DATE,
        p_end_date                     IN      DATE
      );
    --
    --
    PROCEDURE DeriveRSO
      (
        x_Sched_rec                    IN      RLM_INTERFACE_HEADERS%ROWTYPE,
        x_Group_rec                    IN      RLM_DP_SV.t_Group_rec,
        x_return_status                OUT     NOCOPY NUMBER
      );
    --
    --
    PROCEDURE ReconcileAction
      (
        x_sched_rec                    IN      RLM_INTERFACE_HEADERS%ROWTYPE,
        x_group_rec                    IN OUT  NOCOPY rlm_dp_sv.t_Group_rec,
        x_key_rec                      IN OUT  NOCOPY RLM_RD_SV.t_key_rec,
        x_line_id_tab                  IN      RLM_RD_SV.t_matching_line,
        x_DemandCount                  IN      NUMBER,
        x_SumOrderedQty                IN      NUMBER,
        x_DemandType                   IN      VARCHAR2
      );
    --
    --
    PROCEDURE BuildMatchQuery
      (
        x_Sched_rec                    IN      RLM_INTERFACE_HEADERS%ROWTYPE,
        x_Group_Rec                    IN OUT  NOCOPY RLM_DP_SV.t_Group_rec,
        x_Demand_Type                  IN      VARCHAR2,
        x_Sql                          OUT     NOCOPY VARCHAR2,
        x_Sql1                         OUT     NOCOPY VARCHAR2,
        x_Sql2                         OUT     NOCOPY VARCHAR2,
        x_Sum_Sql                      OUT     NOCOPY VARCHAR2
      );
    --
    --
    PROCEDURE OtherDemand
      (
        x_Sched_rec                    IN      RLM_INTERFACE_HEADERS%ROWTYPE,
        x_Group_rec                    IN OUT  NOCOPY rlm_dp_sv.t_Group_rec,
        x_Key_rec                      IN OUT  NOCOPY RLM_RD_SV.t_Key_rec,
        x_Demand_ref                   IN OUT  NOCOPY RLM_RD_SV.t_Cursor_ref
      );
    --
    --
    PROCEDURE DecreaseDemand
      (
        x_Sched_rec                    IN      RLM_INTERFACE_HEADERS%ROWTYPE,
        x_Group_rec                    IN OUT  NOCOPY rlm_dp_sv.t_Group_rec,
        x_Key_rec                      IN OUT  NOCOPY RLM_RD_SV.t_Key_rec,
        x_Demand_ref                   IN OUT  NOCOPY RLM_RD_SV.t_Cursor_ref,
        x_SumOrderedQty                IN      NUMBER
      );
    --
    --
    PROCEDURE DeleteDemand
      (
        x_Sched_rec                    IN      RLM_INTERFACE_HEADERS%ROWTYPE,
        x_Group_rec                    IN OUT  NOCOPY rlm_dp_sv.t_Group_rec,
        x_Key_rec                      IN OUT  NOCOPY RLM_RD_SV.t_Key_rec,
        x_Demand_ref                   IN OUT  NOCOPY RLM_RD_SV.t_Cursor_ref
      );
    --
    --
    PROCEDURE IncreaseDemand
      (
        x_Sched_rec                    IN      RLM_INTERFACE_HEADERS%ROWTYPE,
        x_Group_rec                    IN OUT  NOCOPY rlm_dp_sv.t_Group_rec,
        x_Key_rec                      IN OUT  NOCOPY RLM_RD_SV.t_Key_rec,
        x_Demand_ref                   IN OUT  NOCOPY RLM_RD_SV.t_Cursor_ref,
        x_SumOrderedQty                IN      NUMBER
      );
    --
    --
    PROCEDURE UpdateDemand
      (
        x_Sched_rec                    IN      RLM_INTERFACE_HEADERS%ROWTYPE,
        x_Group_rec                    IN OUT  NOCOPY rlm_dp_sv.t_Group_rec,
        x_Key_rec                      IN OUT  NOCOPY RLM_RD_SV.t_Key_rec,
        x_SumOrderedQty                IN      NUMBER,
        x_DemandType                   IN      VARCHAR2
      );
    --
    --
    PROCEDURE InsertRequirement
      (
        x_Sched_rec                    IN      RLM_INTERFACE_HEADERS%ROWTYPE,
        x_Group_rec                    IN OUT  NOCOPY rlm_dp_sv.t_Group_rec,
        x_Key_rec                      IN OUT  NOCOPY RLM_RD_SV.t_Key_rec,
        x_Reconcile                    IN      BOOLEAN,
        x_Quantity                     IN OUT  NOCOPY NUMBER
      );
    --
    --
    FUNCTION GetIntransitAcrossOrgs
      (
        x_Sched_rec                    IN      RLM_INTERFACE_HEADERS%ROWTYPE,
        x_Group_rec                    IN      rlm_dp_sv.t_Group_rec,
        x_cum_key_id                   IN      NUMBER
      )
    RETURN NUMBER;
    --
    --
    PROCEDURE InitializeMdGroup
      (
        x_Sched_rec                    IN      RLM_INTERFACE_HEADERS%ROWTYPE,
        x_Group_ref                    IN OUT  NOCOPY rlm_manage_demand_sv.t_Cursor_ref,
        x_Group_rec                    IN      rlm_dp_sv.t_Group_rec
      );
    --
    --
    PROCEDURE InitializeSoGroup
      (
        x_Sched_rec                    IN      RLM_INTERFACE_HEADERS%ROWTYPE,
        x_Group_ref                    IN OUT  NOCOPY rlm_rd_sv.t_Cursor_ref,
        x_Group_rec                    IN OUT  NOCOPY  rlm_dp_sv.t_Group_rec
      );
    --
    --
    PROCEDURE InitializeBlktGrp
      (
        x_Sched_rec                    IN      RLM_INTERFACE_HEADERS%ROWTYPE,
        x_Group_ref                    IN OUT  NOCOPY  rlm_rd_sv.t_Cursor_ref,
        x_Group_rec                    IN OUT  NOCOPY  rlm_dp_sv.t_Group_rec
      );
    --
    --
    PROCEDURE CalculateCumKey
      (
        x_cum_key_record               IN      RLM_CUM_SV.cum_key_attrib_rec_type,
        x_cum_record                   IN OUT  NOCOPY RLM_CUM_SV.cum_rec_type
      );
    --
    --
    FUNCTION GetAllIntransitQty
      (
        x_Sched_rec                    IN      RLM_INTERFACE_HEADERS%ROWTYPE,
        x_Group_rec                    IN      rlm_dp_sv.t_Group_rec,
        x_Source_Tab                   IN      rlm_manage_demand_sv.t_Source_Tab
      )
    RETURN NUMBER;
    --
    --
    FUNCTION CalculateIntransitQty
      (
        x_Sched_rec                    IN      RLM_INTERFACE_HEADERS%ROWTYPE,
        x_Group_rec                    IN      rlm_dp_sv.t_Group_rec
      )
    RETURN NUMBER;
    --
    --
    PROCEDURE SynchronizeShipments
      (
        x_Sched_rec                    IN      RLM_INTERFACE_HEADERS%ROWTYPE,
        x_Group_rec                    IN OUT  NOCOPY rlm_dp_sv.t_Group_rec
      );
    --
    --
    PROCEDURE ProcessOld
      (
        x_Sched_rec                    IN      RLM_INTERFACE_HEADERS%ROWTYPE,
        x_Group_rec                    IN OUT  NOCOPY rlm_dp_sv.t_Group_rec
      );
    --
    --
    PROCEDURE calc_scheduled_ship_date
      (
        x_Input                        IN      rlm_ship_delivery_pattern_sv.t_InputRec,
        x_QuantityDate                 OUT     NOCOPY rlm_ship_delivery_pattern_sv.t_OutputTable,
        x_ReturnMessage                OUT     NOCOPY rlm_ship_delivery_pattern_sv.t_ErrorMsgTable,
        x_ReturnStatus                 OUT     NOCOPY NUMBER
      );
    --
    --
    PROCEDURE BuildOELine
      (
        x_oe_line_rec                  IN OUT  NOCOPY oe_order_pub.line_rec_type,
        x_Op_rec                       IN      rlm_rd_sv.t_generic_rec
      );
    --
    --
    PROCEDURE EmptyForecast
      (
        x_sched_rec                    IN      RLM_INTERFACE_HEADERS%ROWTYPE,
        x_Group_rec                    IN OUT  NOCOPY rlm_dp_sv.t_Group_rec,
        x_forecast                     IN OUT  NOCOPY
mrp_forecast_interface_pk.t_forecast_interface,
        x_designator                   IN OUT  NOCOPY
mrp_forecast_interface_pk.t_forecast_designator,
        x_t_designator                 IN OUT  NOCOPY
mrp_forecast_interface_pk.t_forecast_designator
      );
    --
    --
    PROCEDURE GetDesignator
      (
        x_Sched_rec                    IN      RLM_INTERFACE_HEADERS%ROWTYPE DEFAULT NULL,
        x_Group_rec                    IN      rlm_dp_sv.t_Group_rec DEFAULT NULL,
        x_Customer_id                  IN      NUMBER,
        x_ShipFromOrgId                IN      NUMBER,
        x_Ship_Site_Id                 IN      NUMBER,
        x_bill_site_id                 IN      NUMBER,
        x_bill_address_Id              IN      NUMBER,
        x_ForecastDesignator           IN OUT  NOCOPY VARCHAR2,
        x_ship_to_customer_id          IN      NUMBER DEFAULT NULL
      );
    --
    --
    PROCEDURE LoadForecast
      (
        x_Sched_rec                    IN      RLM_INTERFACE_HEADERS%ROWTYPE,
        x_Group_rec                    IN      rlm_dp_sv.t_Group_rec,
        t_forecast                     IN OUT  NOCOPY mrp_forecast_interface_pk.t_forecast_interface,
        x_forecast_designator          IN      mrp_forecast_designators.forecast_designator%TYPE
      );
    --
    --
    PROCEDURE ProcessTable
      (
        x_Sched_rec                    IN      RLM_INTERFACE_HEADERS%ROWTYPE,
        x_Group_rec                    IN      rlm_dp_sv.t_Group_rec,
        t_Forecast                     IN      mrp_forecast_interface_pk.t_forecast_interface
      );
    --
    --
    PROCEDURE UpdateGroupStatus
      (
        x_header_id                    IN      NUMBER,
        x_ScheduleHeaderId             IN      NUMBER,
        x_Group_rec                    IN      rlm_dp_sv.t_Group_rec,
        x_status                       IN      NUMBER,
        x_UpdateLevel                  IN      VARCHAR2 DEFAULT 'GROUP'
      );
    --
    --
    PROCEDURE InitializeGroup
      (
        x_Sched_rec                    IN      rlm_interface_headers%ROWTYPE,
        x_Group_ref                    IN OUT  NOCOPY rlm_forecast_sv.t_Cursor_ref,
        x_Group_rec                    IN      rlm_dp_sv.t_Group_rec
      );
    --
    --
    PROCEDURE ManageGroupForecast
      (
        x_Sched_rec                    IN      RLM_INTERFACE_HEADERS%ROWTYPE,
        x_Group_rec                    IN OUT  NOCOPY rlm_dp_sv.t_Group_rec,
        x_forecast                     IN OUT  NOCOPY
mrp_forecast_interface_pk.t_forecast_interface,
        x_designator                   IN OUT  NOCOPY
mrp_forecast_interface_pk.t_forecast_designator,
        x_ReturnStatus                 OUT     NOCOPY NUMBER
      );
    --
    --
    PROCEDURE ManageForecast
      (
        x_InterfaceHeaderId            IN      NUMBER,
        x_Sched_rec                    IN      RLM_INTERFACE_HEADERS%ROWTYPE,
        x_Group_rec                    IN OUT  NOCOPY rlm_dp_sv.t_Group_rec,
        x_ReturnStatus                 OUT     NOCOPY NUMBER
      );
    --
    --
    PROCEDURE UpdateInterfaceLines
      (
        x_header_rec                   IN      RLM_INTERFACE_HEADERS%ROWTYPE
      );
    --
    --
    PROCEDURE SetLineTPAttCategory
      (
        x_header_rec                   IN OUT  NOCOPY RLM_INTERFACE_HEADERS%ROWTYPE,
        x_lines_rec                    IN OUT  NOCOPY RLM_INTERFACE_LINES%ROWTYPE,
        x_group_rec                    IN OUT  NOCOPY RLM_VALIDATEDEMAND_SV.t_Group_rec
      );
    --
    --
    PROCEDURE SetHdrTPAttCategory
      (
        x_header_rec                   IN OUT  NOCOPY RLM_INTERFACE_HEADERS%ROWTYPE
      );
    --
    --
    PROCEDURE SetTPAttCategory
      (
        x_header_rec                   IN OUT  NOCOPY RLM_INTERFACE_HEADERS%ROWTYPE,
        x_lines_rec                    IN OUT  NOCOPY RLM_INTERFACE_LINES%ROWTYPE,
        x_group_rec                    IN OUT  NOCOPY RLM_VALIDATEDEMAND_SV.t_Group_rec
      );
    --
    --
    PROCEDURE populate_record_cust_item
      (
        x_ship_from_org_id             IN      NUMBER,
        x_customer_id                  IN      NUMBER,
        x_ship_to_address_id           IN      NUMBER,
        x_customer_item_id             IN      NUMBER,
        x_terms_definition_level       IN OUT  NOCOPY VARCHAR2,
        x_terms_rec                    OUT     NOCOPY rlm_setup_terms_sv.setup_terms_rec_typ,
        x_return_message               IN OUT  NOCOPY VARCHAR2,
        x_return_status                OUT     NOCOPY BOOLEAN
      );
    --
    --
    PROCEDURE populate_record_item
      (
        x_ship_from_org_id             IN      NUMBER,
        x_customer_id                  IN      NUMBER,
        x_ship_to_address_id           IN      NUMBER,
        x_customer_item_id             IN      NUMBER,
        x_terms_definition_level       IN OUT  NOCOPY VARCHAR2,
        x_terms_rec                    OUT     NOCOPY rlm_setup_terms_sv.setup_terms_rec_typ,
        x_return_message               IN OUT  NOCOPY VARCHAR2,
        x_return_status                OUT     NOCOPY BOOLEAN
      );
    --
    --
    PROCEDURE populate_record_add
      (
        x_ship_from_org_id             IN      NUMBER,
        x_customer_id                  IN      NUMBER,
        x_ship_to_address_id           IN      NUMBER,
        x_customer_item_id             IN      NUMBER,
        x_terms_definition_level       IN OUT  NOCOPY VARCHAR2,
        x_terms_rec                    OUT     NOCOPY rlm_setup_terms_sv.setup_terms_rec_typ,
        x_return_message               IN OUT  NOCOPY VARCHAR2,
        x_return_status                OUT     NOCOPY BOOLEAN
      );
    --
    --
    PROCEDURE BuildTPOELine
      (
        x_oe_line_rec                  IN OUT  NOCOPY oe_order_pub.line_rec_type,
        x_Op_rec                       IN      rlm_rd_sv.t_generic_rec
      );
    --
    --
    PROCEDURE determine_send_date
      (
        x_Input                        IN      rlm_ship_delivery_pattern_sv.t_inputRec,
        x_DailyPercent                 IN      rlm_core_sv.t_NumberTable,
        x_ShipmentDate                 IN OUT  NOCOPY DATE
      );
    --
    --
    FUNCTION check_send_date
      (
        x_Input                        IN      rlm_ship_delivery_pattern_sv.t_inputRec,
        x_ShipmentDate                 IN      DATE
      )
    RETURN BOOLEAN;
    --
    --
    PROCEDURE determine_receive_date
      (
        x_Input                        IN      rlm_ship_delivery_pattern_sv.t_InputRec,
        x_DailyPercent                 IN      rlm_core_sv.t_NumberTable,
        x_ReceiveDate                  IN OUT  NOCOPY DATE
      );
    --
    --
    FUNCTION check_receive_date
      (
        x_Input                        IN      rlm_ship_delivery_pattern_sv.t_InputRec,
        x_ReceiveDate                  IN      DATE
      )
    RETURN BOOLEAN;
    --
    --
    FUNCTION previous_valid_sdp_date
      (
        x_Input                        IN      rlm_ship_delivery_pattern_sv.t_InputRec,
        x_Date                         IN      DATE,
        x_DailyPercent                 IN      rlm_core_sv.t_NumberTable
      )
    RETURN DATE;
    --
    --
    FUNCTION valid_sdp_date
      (
        x_Input                        IN      rlm_ship_delivery_pattern_sv.t_InputRec,
        x_DailyPercent                 IN      rlm_core_sv.t_NumberTable
      )
    RETURN BOOLEAN;
    --
    --
    FUNCTION find_monday_date
      (
        x_Input                        IN      rlm_ship_delivery_pattern_sv.t_InputRec,
        x_Date                         IN      DATE
      )
    RETURN DATE;
    --
    --
    FUNCTION check_start_date
      (
        x_Input                        IN      rlm_ship_delivery_pattern_sv.t_Inputrec,
        x_BucketType                   IN      VARCHAR2
      )
    RETURN BOOLEAN;
    --
    --
    PROCEDURE apply_sdp_to_daily_bucket
      (
        x_Input                        IN      rlm_ship_delivery_pattern_sv.t_InputRec,
        x_ItemDetailSubtype            IN      VARCHAR2,
        x_DailyPercent                 IN      rlm_core_sv.t_NumberTable,
        x_StartDateTime                IN      DATE,
        x_PrimaryQuantity              IN      NUMBER,
        x_QuantityDate                 IN OUT  NOCOPY rlm_ship_delivery_pattern_sv.t_OutputTable
      );
    --
    --
    PROCEDURE apply_sdp_to_weekly_bucket
      (
        x_Input                        IN      rlm_ship_delivery_pattern_sv.t_InputRec,
        x_ItemDetailSubtype            IN      VARCHAR2,
        x_DailyPercent                 IN      rlm_core_sv.t_NumberTable,
        x_StartDateTime                IN      DATE,
        x_PrimaryQuantity              IN      NUMBER,
        x_WholeNumber                  IN      BOOLEAN,
        x_QuantityDate                 IN OUT  NOCOPY RLM_SHIP_DELIVERY_PATTERN_SV.t_OutputTable
      );
    --
    --
    FUNCTION get_weekly_quantity
      (
        x_WholeNumber                  IN      BOOLEAN,
        x_Count                        IN      NUMBER,
        x_Input                        IN      rlm_ship_delivery_pattern_sv.t_InputRec,
        x_DivideBy                     IN      NUMBER
      )
    RETURN NUMBER;
    --
    --
    PROCEDURE break_bucket
      (
        x_Input                        IN      rlm_ship_delivery_pattern_sv.t_InputRec,
        x_ReturnMessage                IN OUT  NOCOPY rlm_ship_delivery_pattern_sv.t_ErrorMsgTable,
        x_WeeklyBucket                 OUT     NOCOPY rlm_ship_delivery_pattern_sv.t_BucketTable,
        x_ReturnStatus                 OUT     NOCOPY NUMBER
      );
    --
    --
    PROCEDURE RoundStandardPack
      (
        x_Sched_rec                    IN      RLM_INTERFACE_HEADERS%ROWTYPE,
        x_Group_rec                    IN      rlm_dp_sv.t_Group_rec
      );
    --
    --
    FUNCTION MatchShipments
      (
        x_Group_rec                    IN OUT  NOCOPY rlm_dp_sv.t_Group_rec,
        x_Current_rec                  IN      RLM_RD_SV.t_Generic_rec,
        x_Index                        OUT     NOCOPY NUMBER
      )
    RETURN BOOLEAN;
    --
    --
    PROCEDURE ReconcileShipments
      (
        x_Group_rec                    IN OUT  NOCOPY rlm_dp_sv.t_Group_rec,
        x_Key_rec                      IN      RLM_RD_SV.t_Key_rec,
        x_Quantity                     IN OUT  NOCOPY NUMBER
      );
    --
    --
    PROCEDURE ProcessATS
      (
        x_Sched_rec                    IN      RLM_INTERFACE_HEADERS%ROWTYPE,
        x_Group_rec                    IN OUT  NOCOPY rlm_dp_sv.t_Group_rec
      );
    --
    --
    PROCEDURE ProcessNATS
      (
        x_Sched_rec                    IN      RLM_INTERFACE_HEADERS%ROWTYPE,
        x_Group_rec                    IN OUT  NOCOPY rlm_dp_sv.t_Group_rec
      );
    --
    --
    PROCEDURE ProcessPreHorizonATS
      (
        x_Sched_rec                    IN      RLM_INTERFACE_HEADERS%ROWTYPE,
        x_Group_rec                    IN OUT  NOCOPY rlm_dp_sv.t_Group_rec
      );
    --
    --
    PROCEDURE ApplyFFFFences
      (
        x_Sched_rec                    IN      RLM_INTERFACE_HEADERS%ROWTYPE,
        x_Group_rec                    IN      rlm_dp_sv.t_Group_rec,
        IsLineProcessed                IN OUT  NOCOPY BOOLEAN
      );
    --
    --
    PROCEDURE CalculateShipDate
      (
        x_Sched_rec                    IN      RLM_INTERFACE_HEADERS%ROWTYPE,
        x_Group_rec                    IN      rlm_dp_sv.t_Group_rec
      );
    --
    --
    PROCEDURE ApplySourceRules
      (
        x_Sched_rec                    IN      RLM_INTERFACE_HEADERS%ROWTYPE,
        x_Group_rec                    IN      rlm_dp_sv.t_Group_rec,
        x_SourcedDemand_tab            OUT     NOCOPY rlm_manage_demand_sv.t_MD_Tab,
        x_Source_Tab                   OUT     NOCOPY rlm_manage_demand_sv.t_Source_Tab
      );
    --
    --
    PROCEDURE CUMToDiscrete
      (
        x_Sched_rec                    IN      RLM_INTERFACE_HEADERS%ROWTYPE,
        x_Group_rec                    IN      rlm_dp_sv.t_Group_rec
      );
    --
    --
    PROCEDURE CUMDiscrepancyCheck
      (
        x_Sched_rec                    IN      RLM_INTERFACE_HEADERS%ROWTYPE,
        x_Group_rec                    IN      rlm_dp_sv.t_Group_rec
      );
    --
    --
    PROCEDURE UOMConversion
      (
        x_Group_rec                    IN      rlm_dp_sv.t_Group_rec
      );
    --
    --
    PROCEDURE PostValidation;
    --
    --
    PROCEDURE ValidateCustomerItem
      (
        x_header_rec                   IN      RLM_INTERFACE_HEADERS%ROWTYPE,
        x_lines_rec                    IN OUT  NOCOPY RLM_INTERFACE_LINES%ROWTYPE
      );
    --
    --
    PROCEDURE ValidSchedulePurpose
      (
        x_header_rec                   IN OUT  NOCOPY RLM_INTERFACE_HEADERS%ROWTYPE
      );
    --
    --
    FUNCTION ValidLookup
      (
        p_lookup_type                  IN      VARCHAR2,
        p_lookup_code                  IN      VARCHAR2,
        p_date                         IN      DATE
      )
    RETURN BOOLEAN;
    --
    --
    PROCEDURE ValidScheduleType
      (
        x_header_rec                   IN OUT  NOCOPY RLM_INTERFACE_HEADERS%ROWTYPE
      );
    --
    --
    PROCEDURE ValidScheduleReferenceNum
      (
        x_header_rec                   IN OUT  NOCOPY RLM_INTERFACE_HEADERS%ROWTYPE
      );
    --
    --
    PROCEDURE ValidHorizonDates
      (
        x_header_rec                   IN OUT  NOCOPY RLM_INTERFACE_HEADERS%ROWTYPE
      );
    --
    --
    PROCEDURE ValidScheduleSource
      (
        x_header_rec                   IN OUT  NOCOPY RLM_INTERFACE_HEADERS%ROWTYPE
      );
    --
    --
    PROCEDURE ValidNumberLines
      (
        x_header_rec                   IN OUT  NOCOPY RLM_INTERFACE_HEADERS%ROWTYPE
      );
    --
    --
    PROCEDURE ValidScheduleHeader
      (
        x_header_rec                   IN OUT  NOCOPY RLM_INTERFACE_HEADERS%ROWTYPE
      );
    --
    --
    PROCEDURE ValidItemDetailType
      (
        x_header_rec                   IN      RLM_INTERFACE_HEADERS%ROWTYPE,
        x_lines_rec                    IN OUT  NOCOPY RLM_INTERFACE_LINES%ROWTYPE
      );
    --
    --
    PROCEDURE ValidItemDetailSubtype
      (
        x_header_rec                   IN      RLM_INTERFACE_HEADERS%ROWTYPE,
        x_lines_rec                    IN OUT  NOCOPY RLM_INTERFACE_LINES%ROWTYPE
      );
    --
    --
    PROCEDURE ValidQtyTypeCode
      (
        x_setup_terms_rec              IN      rlm_setup_terms_sv.setup_terms_rec_typ,
        x_header_rec                   IN      RLM_INTERFACE_HEADERS%ROWTYPE,
        x_lines_rec                    IN OUT  NOCOPY RLM_INTERFACE_LINES%ROWTYPE
      );
    --
    --
    PROCEDURE ValidItemDetailQty
      (
        x_header_rec                   IN      RLM_INTERFACE_HEADERS%ROWTYPE,
        x_lines_rec                    IN OUT  NOCOPY RLM_INTERFACE_LINES%ROWTYPE
      );
    --
    --
    PROCEDURE ValidDateTypeCode
      (
        x_header_rec                   IN      RLM_INTERFACE_HEADERS%ROWTYPE,
        x_lines_rec                    IN OUT  NOCOPY RLM_INTERFACE_LINES%ROWTYPE
      );
    --
    --
    PROCEDURE ValidDateRange
      (
        x_header_rec                   IN      RLM_INTERFACE_HEADERS%ROWTYPE,
        x_lines_rec                    IN OUT  NOCOPY RLM_INTERFACE_LINES%ROWTYPE
      );
    --
    --
    PROCEDURE ValidateUOM
      (
        x_header_rec                   IN      RLM_INTERFACE_HEADERS%ROWTYPE,
        x_lines_rec                    IN OUT  NOCOPY RLM_INTERFACE_LINES%ROWTYPE
      );
    --
    --
    PROCEDURE ValidOrderHeaderId
      (
        x_setup_terms_rec              IN      rlm_setup_terms_sv.setup_terms_rec_typ,
        x_header_rec                   IN      RLM_INTERFACE_HEADERS%ROWTYPE,
        x_lines_rec                    IN OUT  NOCOPY RLM_INTERFACE_LINES%ROWTYPE
      );
    --
    --
    PROCEDURE ValidateLineDetails
      (
        x_setup_terms_rec              IN      rlm_setup_terms_sv.setup_terms_rec_typ,
        x_header_rec                   IN      RLM_INTERFACE_HEADERS%ROWTYPE,
        x_lines_rec                    IN OUT  NOCOPY RLM_INTERFACE_LINES%ROWTYPE,
        x_line_source                  IN      VARCHAR2
      );
    --
    --
    PROCEDURE ValidLineScheduleType
      (
        x_header_rec                   IN      RLM_INTERFACE_HEADERS%ROWTYPE,
        x_lines_rec                    IN OUT  NOCOPY RLM_INTERFACE_LINES%ROWTYPE
      );
    --
    --
    PROCEDURE ValidPlanningProdSeqNum
      (
        x_setup_terms_rec              IN      rlm_setup_terms_sv.setup_terms_rec_typ,
        x_header_rec                   IN      RLM_INTERFACE_HEADERS%ROWTYPE,
        x_lines_rec                    IN OUT  NOCOPY RLM_INTERFACE_LINES%ROWTYPE
      );
    --
    --
    PROCEDURE UpdateCumKey
      (
        x_trip_stop_id                 IN      NUMBER,
        x_return_status                OUT     NOCOPY BOOLEAN
      );
    --
    --
    PROCEDURE CalculateSupplierCum
      (
        x_new_ship_count               IN      RLM_CUM_SV.t_new_ship_count DEFAULT RLM_CUM_SV.g_miss_new_ship_count,
        x_cum_key_record               IN      RLM_CUM_SV.cum_key_attrib_rec_type,
        x_cum_record                   IN OUT  NOCOPY RLM_CUM_SV.cum_rec_type
      );
    --
    --
    --
--}
END RLM_TPA_SV;
--
 

/
