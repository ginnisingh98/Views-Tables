--------------------------------------------------------
--  DDL for Package PV_PARTNER_ATTR_LOAD_PUB
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE PACKAGE "APPS"."PV_PARTNER_ATTR_LOAD_PUB" AUTHID CURRENT_USER as
/* $Header: pvxpldps.pls 120.4 2006/01/20 02:13 rdsharma noship $ */
/*#
 * This public interface can be utilized to insert/update a set of Partners
 * into the PRM application.  As a pre-requisite each Partner organization should
 * already exist as a Party in TCA.
 * @rep:scope public
 * @rep:product PV
 * @rep:displayname Import Partner Attributes
 * @rep:lifecycle active
 * @rep:compatibility N
 * @rep:category BUSINESS_ENTITY PV_PARTNER_PROFILE
 */


    g_data_block_size        CONSTANT NUMBER := 50 ;


    TYPE attribute_details_rec_type IS RECORD
    (
        attribute_id		  number,
	    attr_values_tbl		  PV_ENTY_ATTR_VALUE_PUB.attr_value_tbl_type --attr_values_tbl_type
    );
    g_miss_attribute_details_rec    attribute_details_rec_type;

    TYPE  attr_details_tbl_type  IS TABLE OF attribute_details_rec_type INDEX BY BINARY_INTEGER;
    g_miss_attr_details_tbl          attr_details_tbl_type;


    TYPE partner_details_rec_type IS RECORD
    (
        orig_system 		         varchar2(30),
	    orig_system_ref              varchar2(255),
	    party_id                     NUMBER,
	    partner_id                   NUMBER,
	    partner_name		         varchar2(360),
	    attribute_details_tbl		 attr_details_tbl_type,
	    gbl_orig_system		         varchar2(30),
	    gbl_orig_system_ref          varchar2(255),
	    gbl_party_id                 number,
	    gbl_partner_id                 number,
	    update_if_exists		     varchar2(1)
    );
    g_miss_partner_details_rec          partner_details_rec_type := NULL;


    TYPE  partner_details_tbl_type  IS TABLE OF partner_details_rec_type INDEX BY BINARY_INTEGER;
    g_miss_partner_details_tbl          partner_details_tbl_type;


    TYPE partner_output_rec_type IS RECORD
    (
        orig_system 		         varchar2(30),
	    orig_system_ref              varchar2(255),
	    party_id                     NUMBER,
	    partner_id                   NUMBER,
	    return_status			     varchar2(10)
    );
    g_miss_partner_details_rec          partner_output_rec_type := NULL;


    TYPE  partner_output_tbl_type  IS TABLE OF partner_output_rec_type INDEX BY BINARY_INTEGER;
    g_miss_partner_output_tbl          partner_output_tbl_type;



/*#
* A public API to insert and/or update attribute information of Partners in the
* Oracle PRM application.  Prior to insert/update, the API performs all the
* necessary business validations to ensure data integrity.
* @param p_api_version_number Version of the API
* @param p_init_msg_list Indicator whether to initialize the message stack
* @param p_mode A parameter that indicates if the API should be executed in an experimental mode.  A value of "EVALUATION" indicates that the execution is experimental and no changes are committed.  "EXECUTION" indicates that changes are to be committed.
* @param p_validation_level Level for validation
* @param x_return_status Status of the program
* @param x_msg_data Return message by the program
* @param x_msg_count Number of the messages returned by the program.
* @param p_partner_details_tbl  Table related to partner details
* @param p_update_if_exists A Boolean parameter to indicate whether or not an update should be performed if a record already exists for the Partner.  True indicates that the record should be updated with the supplied data.
* @param p_data_block_size A numerical parameter that indicates the number of Partner records to be processed per commit.
* @param x_file_name Path and Name of the log file generated by the API.
* @param x_partner_output_tbl A table that contains details about the Partners that were processed by the API.

* @rep:displayname Load Partners
* @rep:scope public
* @rep:lifecycle active
* @rep:compatibility N
*/


    PROCEDURE Load_Partners
         (
          p_api_version_number      IN  NUMBER
         ,p_init_msg_list           IN  VARCHAR2 := FND_API.G_FALSE
         ,p_mode         	        IN  VARCHAR2
         ,p_validation_level        IN  NUMBER   := FND_API.G_VALID_LEVEL_FULL
         ,x_return_status           OUT NOCOPY  VARCHAR2
         ,x_msg_data                OUT NOCOPY  VARCHAR2
         ,x_msg_count               OUT NOCOPY  NUMBER
         ,p_partner_details_tbl	    IN 	 partner_details_tbl_type
         ,p_update_if_exists		IN 	varchar2
         ,p_data_block_size		    IN	number
         ,x_file_name			    OUT	NOCOPY varchar2
         ,x_partner_output_tbl      OUT NOCOPY partner_output_tbl_type);



END PV_PARTNER_ATTR_LOAD_PUB;

 

/
