--------------------------------------------------------
--  DDL for Package IBY_PP_MLSUTL_PVT
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE PACKAGE "APPS"."IBY_PP_MLSUTL_PVT" AUTHID CURRENT_USER AS
/* $Header: ibyppmus.pls 120.10.12010000.1 2008/07/28 05:42:00 appldev ship $ */


-- validation sets

procedure VAL_SET_INSERT_ROW (
  X_ROWID in out NOCOPY VARCHAR2,
  X_VALIDATION_SET_CODE in VARCHAR2,
  X_VALIDATION_LEVEL_CODE in VARCHAR2,
  X_VALIDATION_CODE_PACKAGE in VARCHAR2,
  X_VALIDATION_CODE_ENTRY_POINT in VARCHAR2,
  X_VALIDATION_CODE_LANGUAGE in VARCHAR2,
  X_OBJECT_VERSION_NUMBER in NUMBER,
  X_VALIDATION_SET_DISPLAY_NAME in VARCHAR2,
  X_CREATION_DATE in DATE,
  X_CREATED_BY in NUMBER,
  X_LAST_UPDATE_DATE in DATE,
  X_LAST_UPDATED_BY in NUMBER,
  X_LAST_UPDATE_LOGIN in NUMBER);

procedure VAL_SET_UPDATE_ROW (
  X_VALIDATION_SET_CODE in VARCHAR2,
  X_VALIDATION_LEVEL_CODE in VARCHAR2,
  X_VALIDATION_CODE_PACKAGE in VARCHAR2,
  X_VALIDATION_CODE_ENTRY_POINT in VARCHAR2,
  X_VALIDATION_CODE_LANGUAGE in VARCHAR2,
  X_OBJECT_VERSION_NUMBER in NUMBER,
  X_VALIDATION_SET_DISPLAY_NAME in VARCHAR2,
  X_LAST_UPDATE_DATE in DATE,
  X_LAST_UPDATED_BY in NUMBER,
  X_LAST_UPDATE_LOGIN in NUMBER
);

procedure VAL_SET_DELETE_ROW (
  X_VALIDATION_SET_CODE in VARCHAR2
);

procedure VAL_SET_ADD_LANGUAGE;

procedure VAL_SET_LOAD_ROW (
  X_VALIDATION_SET_CODE in VARCHAR2,
  X_VALIDATION_LEVEL_CODE in VARCHAR2,
  X_VALIDATION_CODE_PACKAGE in VARCHAR2,
  X_VALIDATION_CODE_ENTRY_POINT in VARCHAR2,
  X_VALIDATION_CODE_LANGUAGE in VARCHAR2,
  X_OBJECT_VERSION_NUMBER in NUMBER,
  X_VALIDATION_SET_DISPLAY_NAME in VARCHAR2,
  X_LAST_UPDATE_DATE in DATE,
  X_OWNER in VARCHAR2);

procedure VAL_SET_TRANSLATE_ROW (
  X_VALIDATION_SET_CODE in VARCHAR2,
  X_OBJECT_VERSION_NUMBER in NUMBER,
  X_VALIDATION_SET_DISPLAY_NAME in VARCHAR2,
  X_LAST_UPDATE_DATE in DATE,
  X_OWNER in VARCHAR2);


-- validation set parameters

procedure VAL_PARAM_INSERT_ROW (
  X_ROWID in out NOCOPY VARCHAR2,
  X_VALIDATION_SET_CODE in VARCHAR2,
  X_VALIDATION_PARAMETER_CODE in VARCHAR2,
  X_VALIDATION_PARAMETER_TYPE in VARCHAR2,
  X_VALIDATION_PARAM_DISPLAY_ORD in NUMBER,
  X_OBJECT_VERSION_NUMBER in NUMBER,
  X_VALIDATION_PARAM_DISPLAY_NAM in VARCHAR2,
  X_CREATION_DATE in DATE,
  X_CREATED_BY in NUMBER,
  X_LAST_UPDATE_DATE in DATE,
  X_LAST_UPDATED_BY in NUMBER,
  X_LAST_UPDATE_LOGIN in NUMBER
);

procedure VAL_PARAM_UPDATE_ROW (
  X_VALIDATION_SET_CODE in VARCHAR2,
  X_VALIDATION_PARAMETER_CODE in VARCHAR2,
  X_VALIDATION_PARAMETER_TYPE in VARCHAR2,
  X_VALIDATION_PARAM_DISPLAY_ORD in NUMBER,
  X_OBJECT_VERSION_NUMBER in NUMBER,
  X_VALIDATION_PARAM_DISPLAY_NAM in VARCHAR2,
  X_LAST_UPDATE_DATE in DATE,
  X_LAST_UPDATED_BY in NUMBER,
  X_LAST_UPDATE_LOGIN in NUMBER
);

procedure VAL_PARAM_DELETE_ROW (
  X_VALIDATION_SET_CODE in VARCHAR2,
  X_VALIDATION_PARAMETER_CODE in VARCHAR2
);

procedure VAL_PARAM_ADD_LANGUAGE;

procedure VAL_PARAM_LOAD_ROW (
  X_VALIDATION_SET_CODE in VARCHAR2,
  X_VALIDATION_PARAMETER_CODE in VARCHAR2,
  X_VALIDATION_PARAMETER_TYPE in VARCHAR2,
  X_VALIDATION_PARAM_DISPLAY_ORD in NUMBER,
  X_OBJECT_VERSION_NUMBER in NUMBER,
  X_VALIDATION_PARAM_DISPLAY_NAM in VARCHAR2,
  X_LAST_UPDATE_DATE in DATE,
  X_OWNER in VARCHAR2);

procedure VAL_PARAM_TRANSLATE_ROW (
  X_VALIDATION_SET_CODE in VARCHAR2,
  X_VALIDATION_PARAMETER_CODE in VARCHAR2,
  X_OBJECT_VERSION_NUMBER in NUMBER,
  X_VALIDATION_PARAM_DISPLAY_NAM in VARCHAR2,
  X_LAST_UPDATE_DATE in DATE,
  X_OWNER in VARCHAR2);


-- transmission protocols

procedure TRANS_PROT_INSERT_ROW (
  X_ROWID in out NOCOPY VARCHAR2,
  X_TRANSMIT_PROTOCOL_CODE in VARCHAR2,
  X_OBJECT_VERSION_NUMBER in NUMBER,
  X_TRANSMIT_CODE_LANGUAGE in VARCHAR2,
  X_TRANSMIT_CODE_PACKAGE in VARCHAR2,
  X_TRANSMIT_CODE_ENTRY_POINT in VARCHAR2,
  X_TRANSMIT_PROTOCOL_NAME in VARCHAR2,
  X_CREATION_DATE in DATE,
  X_CREATED_BY in NUMBER,
  X_LAST_UPDATE_DATE in DATE,
  X_LAST_UPDATED_BY in NUMBER,
  X_LAST_UPDATE_LOGIN in NUMBER);

procedure TRANS_PROT_UPDATE_ROW (
  X_TRANSMIT_PROTOCOL_CODE in VARCHAR2,
  X_OBJECT_VERSION_NUMBER in NUMBER,
  X_TRANSMIT_CODE_LANGUAGE in VARCHAR2,
  X_TRANSMIT_CODE_PACKAGE in VARCHAR2,
  X_TRANSMIT_CODE_ENTRY_POINT in VARCHAR2,
  X_TRANSMIT_PROTOCOL_NAME in VARCHAR2,
  X_LAST_UPDATE_DATE in DATE,
  X_LAST_UPDATED_BY in NUMBER,
  X_LAST_UPDATE_LOGIN in NUMBER
);

procedure TRANS_PROT_DELETE_ROW (
  X_TRANSMIT_PROTOCOL_CODE in VARCHAR2
);

procedure TRANS_PROT_ADD_LANGUAGE;

procedure TRANS_PROT_LOAD_ROW (
  X_TRANSMIT_PROTOCOL_CODE in VARCHAR2,
  X_OBJECT_VERSION_NUMBER in NUMBER,
  X_TRANSMIT_CODE_LANGUAGE in VARCHAR2,
  X_TRANSMIT_CODE_PACKAGE in VARCHAR2,
  X_TRANSMIT_CODE_ENTRY_POINT in VARCHAR2,
  X_TRANSMIT_PROTOCOL_NAME in VARCHAR2,
  X_LAST_UPDATE_DATE in DATE,
  X_OWNER in VARCHAR2);

procedure TRANS_PROT_TRANSLATE_ROW (
  X_TRANSMIT_PROTOCOL_CODE in VARCHAR2,
  X_OBJECT_VERSION_NUMBER in NUMBER,
  X_TRANSMIT_PROTOCOL_NAME in VARCHAR2,
  X_LAST_UPDATE_DATE in DATE,
  X_OWNER in VARCHAR2);


-- transmission parameters

procedure TRANS_PARAM_INSERT_ROW (
  X_ROWID in out NOCOPY VARCHAR2,
  X_TRANSMIT_PROTOCOL_CODE in VARCHAR2,
  X_TRANSMIT_PARAMETER_CODE in VARCHAR2,
  X_TRANSMIT_PARAMETER_TYPE in VARCHAR2,
  X_MANDATORY_FLAG in VARCHAR2,
  X_DISPLAY_ORDER in NUMBER,
  X_DYNAMIC_FLAG in VARCHAR2,
  X_DYN_CODE_LANGUAGE in VARCHAR2,
  X_DYN_CODE_PACKAGE in VARCHAR2,
  X_DYN_CODE_ENTRY_POINT in VARCHAR2,
  X_SECURED_FLAG in VARCHAR2,
  X_OBJECT_VERSION_NUMBER in NUMBER,
  X_TRANSMIT_PARAMETER_NAME in VARCHAR2,
  X_CREATION_DATE in DATE,
  X_CREATED_BY in NUMBER,
  X_LAST_UPDATE_DATE in DATE,
  X_LAST_UPDATED_BY in NUMBER,
  X_LAST_UPDATE_LOGIN in NUMBER);

procedure TRANS_PARAM_UPDATE_ROW (
  X_TRANSMIT_PROTOCOL_CODE in VARCHAR2,
  X_TRANSMIT_PARAMETER_CODE in VARCHAR2,
  X_TRANSMIT_PARAMETER_TYPE in VARCHAR2,
  X_MANDATORY_FLAG in VARCHAR2,
  X_DISPLAY_ORDER in NUMBER,
  X_DYNAMIC_FLAG in VARCHAR2,
  X_DYN_CODE_LANGUAGE in VARCHAR2,
  X_DYN_CODE_PACKAGE in VARCHAR2,
  X_DYN_CODE_ENTRY_POINT in VARCHAR2,
  X_SECURED_FLAG in VARCHAR2,
  X_OBJECT_VERSION_NUMBER in NUMBER,
  X_TRANSMIT_PARAMETER_NAME in VARCHAR2,
  X_LAST_UPDATE_DATE in DATE,
  X_LAST_UPDATED_BY in NUMBER,
  X_LAST_UPDATE_LOGIN in NUMBER
);

procedure TRANS_PARAM_DELETE_ROW (
  X_TRANSMIT_PROTOCOL_CODE in VARCHAR2,
  X_TRANSMIT_PARAMETER_CODE in VARCHAR2
);

procedure TRANS_PARAM_ADD_LANGUAGE;

procedure TRANS_PARAM_LOAD_ROW (
  X_TRANSMIT_PROTOCOL_CODE in VARCHAR2,
  X_TRANSMIT_PARAMETER_CODE in VARCHAR2,
  X_TRANSMIT_PARAMETER_TYPE in VARCHAR2,
  X_MANDATORY_FLAG in VARCHAR2,
  X_DISPLAY_ORDER in NUMBER,
  X_DYNAMIC_FLAG in VARCHAR2,
  X_DYN_CODE_LANGUAGE in VARCHAR2,
  X_DYN_CODE_PACKAGE in VARCHAR2,
  X_DYN_CODE_ENTRY_POINT in VARCHAR2,
  X_SECURED_FLAG in VARCHAR2,
  X_OBJECT_VERSION_NUMBER in NUMBER,
  X_TRANSMIT_PARAMETER_NAME in VARCHAR2,
  X_LAST_UPDATE_DATE in DATE,
  X_OWNER in VARCHAR2);

procedure TRANS_PARAM_TRANSLATE_ROW (
  X_TRANSMIT_PROTOCOL_CODE in VARCHAR2,
  X_TRANSMIT_PARAMETER_CODE in VARCHAR2,
  X_OBJECT_VERSION_NUMBER in NUMBER,
  X_TRANSMIT_PARAMETER_NAME in VARCHAR2,
  X_LAST_UPDATE_DATE in DATE,
  X_OWNER in VARCHAR2);


-- transmission configurations

procedure TRANS_CONFIG_INSERT_ROW (
  X_ROWID in out NOCOPY VARCHAR2,
  X_TRANSMIT_CONFIGURATION_ID in NUMBER,
  X_OBJECT_VERSION_NUMBER in NUMBER,
  X_TUNNELING_TRANS_CONFIG_ID in NUMBER,
  X_TRANSMIT_PROTOCOL_CODE in VARCHAR2,
  X_INACTIVE_DATE in DATE,
  X_TRANSMIT_CONFIGURATION_NAME in VARCHAR2,
  X_CREATION_DATE in DATE,
  X_CREATED_BY in NUMBER,
  X_LAST_UPDATE_DATE in DATE,
  X_LAST_UPDATED_BY in NUMBER,
  X_LAST_UPDATE_LOGIN in NUMBER);

procedure TRANS_CONFIG_UPDATE_ROW (
  X_TRANSMIT_CONFIGURATION_ID in NUMBER,
  X_OBJECT_VERSION_NUMBER in NUMBER,
  X_TUNNELING_TRANS_CONFIG_ID in NUMBER,
  X_TRANSMIT_PROTOCOL_CODE in VARCHAR2,
  X_INACTIVE_DATE in DATE,
  X_TRANSMIT_CONFIGURATION_NAME in VARCHAR2,
  X_LAST_UPDATE_DATE in DATE,
  X_LAST_UPDATED_BY in NUMBER,
  X_LAST_UPDATE_LOGIN in NUMBER
);

procedure TRANS_CONFIG_DELETE_ROW (
  X_TRANSMIT_CONFIGURATION_ID in NUMBER
);

procedure TRANS_CONFIG_ADD_LANGUAGE;

END IBY_PP_MLSUTL_PVT;

/
