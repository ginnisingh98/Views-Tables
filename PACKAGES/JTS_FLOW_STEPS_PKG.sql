--------------------------------------------------------
--  DDL for Package JTS_FLOW_STEPS_PKG
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE PACKAGE "APPS"."JTS_FLOW_STEPS_PKG" AUTHID CURRENT_USER as
/* $Header: jtstcfss.pls 115.3 2002/06/13 17:37:53 pkm ship    $ */


-----------------------------------------------------------
-- PACKAGE
--    JTS_FLOW_STEPS_PKG
--
-- PURPOSE
--    Private API for Oracle Setup Online Configuration Management
--
-- PROCEDURES
--    DELETE_ROW(NUMBER)
--    TRANSLATE_ROW
--    LOAD_ROW
--    INSERT_ROW
--    UPDATE_ROW
--    LOCK_ROW
--    ADD_LANGUAGE
------------------------------------------------------------

G_PKG_NAME      CONSTANT VARCHAR2(30)    := 'JTS_FLOW_STEPS_PKG';
G_FILE_NAME     CONSTANT VARCHAR2(12)    := 'jtstcfsb.pls';

-------------------------------------------------
-- This is for seeding the step details.
-- Deletes a flow based on step_id
-------------------------------------------------
PROCEDURE DELETE_ROW(p_step_id	IN NUMBER);

-------------------------------------------------
-- This is for seeding the step details.
--
-- Translates the step name, description, impact
-------------------------------------------------
PROCEDURE TRANSLATE_ROW (
         p_step_id  		IN NUMBER,
         p_owner    		IN VARCHAR2,
         p_step_name  		IN VARCHAR2,
         p_description		IN VARCHAR2,
         p_impact		IN VARCHAR2
        );

-------------------------------------------------
-- This is for seeding the step details.
--
-- Uploads a step
-- If p_step_id is not NULL and there is no step with
-- such step_id in the database, then a new step_id will be used
-------------------------------------------------
PROCEDURE LOAD_ROW (
          p_setup_page		IN VARCHAR2,
          p_step_id      	IN NUMBER,
          p_flow_id		IN NUMBER,
          P_OWNER              	IN VARCHAR2,
          p_mandatory_flag   	IN VARCHAR2,
          p_concurrent_flag    	IN VARCHAR2,
          p_step_sequence       IN NUMBER,
          p_step_name      	IN VARCHAR2,
          p_description    	IN VARCHAR2,
  	  P_impact	 	in VARCHAR2
         );


------------------------------------------------
-- INSERT_ROW
-------------------------------------------------
PROCEDURE INSERT_ROW(
  p_setup_page		IN VARCHAR2,
  p_flow_id		IN NUMBER,
  p_mandatory_flag 	IN VARCHAR2,
  p_concurrent_flag	IN VARCHAR2,
  p_step_sequence	IN NUMBER,
  p_step_name 	 	IN VARCHAR2,
  p_description 	IN VARCHAR2,
  p_impact 		IN VARCHAR2,
  p_created_by		IN NUMBER,
  p_last_updated_by	IN NUMBER,
  p_last_update_login 	IN NUMBER,
  x_step_id		OUT NUMBER
);

-------------------------------------------------
-- UPDATE_ROW
-------------------------------------------------
procedure UPDATE_ROW (
  p_setup_page		IN VARCHAR2,
  p_step_id 		IN NUMBER,
  p_flow_id		IN NUMBER,
  p_mandatory_flag 	IN VARCHAR2,
  p_concurrent_flag	IN VARCHAR2,
  p_step_sequence	IN NUMBER,
  p_step_name 	 	IN VARCHAR2,
  p_description 	IN VARCHAR2,
  p_impact 		IN VARCHAR2,
  P_LAST_UPDATE_DATE 	in DATE,
  P_LAST_UPDATED_BY 	in NUMBER,
  P_LAST_UPDATE_LOGIN 	in NUMBER
);

-------------------------------------------------
-- LOCK_ROW procedure is required by forms.
-- It is automatically generated by tltblgen
-------------------------------------------------
procedure LOCK_ROW (
  X_STEP_ID in NUMBER,
  X_FLOW_ID in NUMBER,
  X_MANDATORY_FLAG in VARCHAR2,
  X_CONCURRENT_FLAG in VARCHAR2,
  X_STEP_SEQUENCE in NUMBER,
  X_SECURITY_GROUP_ID in NUMBER,
  X_SETUP_PAGE in VARCHAR2,
  X_STEP_NAME in VARCHAR2,
  X_DESCRIPTION in VARCHAR2,
  X_IMPACT in VARCHAR2
);

---------------------------------------------------
-- ADD_LANGUAGE procedure is used to restore data integrity
-- to a corrupted base/translation pair.
-- It is also automatically generated.
---------------------------------------------------
procedure ADD_LANGUAGE;

END JTS_FLOW_STEPS_PKG;

 

/
