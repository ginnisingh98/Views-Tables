--------------------------------------------------------
--  DDL for Package IGS_GR_GRADUAND_HIST_PKG
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE PACKAGE "APPS"."IGS_GR_GRADUAND_HIST_PKG" AUTHID CURRENT_USER as
/* $Header: IGSGI13S.pls 115.6 2003/10/07 07:47:02 ijeddy ship $ */
procedure INSERT_ROW (
  X_ROWID in out NOCOPY VARCHAR2,
  X_PERSON_ID in NUMBER,
  X_CREATE_DT in DATE,
  X_HIST_START_DT in DATE,
  X_HIST_END_DT in DATE,
  X_HIST_WHO in NUMBER,
  X_GRD_CAL_TYPE in VARCHAR2,
  X_GRD_CI_SEQUENCE_NUMBER in NUMBER,
  X_COURSE_CD in VARCHAR2,
  X_AWARD_COURSE_CD in VARCHAR2,
  X_AWARD_CRS_VERSION_NUMBER in NUMBER,
  X_AWARD_CD in VARCHAR2,
  X_HONOURS_LEVEL in VARCHAR2 DEFAULT NULL,
  X_CONFERRAL_DT in DATE DEFAULT NULL,
  X_GRADUAND_STATUS in VARCHAR2,
  X_GRADUAND_APPR_STATUS in VARCHAR2,
  X_S_GRADUAND_TYPE in VARCHAR2,
  X_GRADUATION_NAME in VARCHAR2,
  X_PROXY_AWARD_IND in VARCHAR2,
  X_PROXY_AWARD_PERSON_ID in NUMBER,
  X_PREVIOUS_QUALIFICATIONS in VARCHAR2,
  X_CONVOCATION_MEMBERSHIP_IND in VARCHAR2,
  X_SUR_FOR_COURSE_CD in VARCHAR2,
  X_SUR_FOR_CRS_VERSION_NUMBER in NUMBER,
  X_SUR_FOR_AWARD_CD in VARCHAR2,
  X_COMMENTS in VARCHAR2,
  X_MODE in VARCHAR2 default 'R' ,
  X_ORG_ID  in NUMBER
  );
procedure LOCK_ROW (
  X_ROWID in VARCHAR2,
  X_PERSON_ID in NUMBER,
  X_CREATE_DT in DATE,
  X_HIST_START_DT in DATE,
  X_HIST_END_DT in DATE,
  X_HIST_WHO in NUMBER,
  X_GRD_CAL_TYPE in VARCHAR2,
  X_GRD_CI_SEQUENCE_NUMBER in NUMBER,
  X_COURSE_CD in VARCHAR2,
  X_AWARD_COURSE_CD in VARCHAR2,
  X_AWARD_CRS_VERSION_NUMBER in NUMBER,
  X_AWARD_CD in VARCHAR2,
  X_HONOURS_LEVEL in VARCHAR2 DEFAULT NULL,
  X_CONFERRAL_DT in DATE DEFAULT NULL,
  X_GRADUAND_STATUS in VARCHAR2,
  X_GRADUAND_APPR_STATUS in VARCHAR2,
  X_S_GRADUAND_TYPE in VARCHAR2,
  X_GRADUATION_NAME in VARCHAR2,
  X_PROXY_AWARD_IND in VARCHAR2,
  X_PROXY_AWARD_PERSON_ID in NUMBER,
  X_PREVIOUS_QUALIFICATIONS in VARCHAR2,
  X_CONVOCATION_MEMBERSHIP_IND in VARCHAR2,
  X_SUR_FOR_COURSE_CD in VARCHAR2,
  X_SUR_FOR_CRS_VERSION_NUMBER in NUMBER,
  X_SUR_FOR_AWARD_CD in VARCHAR2,
  X_COMMENTS in VARCHAR2

);
procedure UPDATE_ROW (
  X_ROWID in VARCHAR2,
  X_PERSON_ID in NUMBER,
  X_CREATE_DT in DATE,
  X_HIST_START_DT in DATE,
  X_HIST_END_DT in DATE,
  X_HIST_WHO in NUMBER,
  X_GRD_CAL_TYPE in VARCHAR2,
  X_GRD_CI_SEQUENCE_NUMBER in NUMBER,
  X_COURSE_CD in VARCHAR2,
  X_AWARD_COURSE_CD in VARCHAR2,
  X_AWARD_CRS_VERSION_NUMBER in NUMBER,
  X_AWARD_CD in VARCHAR2,
  X_HONOURS_LEVEL in VARCHAR2 DEFAULT NULL,
  X_CONFERRAL_DT in DATE DEFAULT NULL,
  X_GRADUAND_STATUS in VARCHAR2,
  X_GRADUAND_APPR_STATUS in VARCHAR2,
  X_S_GRADUAND_TYPE in VARCHAR2,
  X_GRADUATION_NAME in VARCHAR2,
  X_PROXY_AWARD_IND in VARCHAR2,
  X_PROXY_AWARD_PERSON_ID in NUMBER,
  X_PREVIOUS_QUALIFICATIONS in VARCHAR2,
  X_CONVOCATION_MEMBERSHIP_IND in VARCHAR2,
  X_SUR_FOR_COURSE_CD in VARCHAR2,
  X_SUR_FOR_CRS_VERSION_NUMBER in NUMBER,
  X_SUR_FOR_AWARD_CD in VARCHAR2,
  X_COMMENTS in VARCHAR2,
  X_MODE in VARCHAR2 default 'R'

  );
procedure ADD_ROW (
  X_ROWID in out NOCOPY VARCHAR2,
  X_PERSON_ID in NUMBER,
  X_CREATE_DT in DATE,
  X_HIST_START_DT in DATE,
  X_HIST_END_DT in DATE,
  X_HIST_WHO in NUMBER,
  X_GRD_CAL_TYPE in VARCHAR2,
  X_GRD_CI_SEQUENCE_NUMBER in NUMBER,
  X_COURSE_CD in VARCHAR2,
  X_AWARD_COURSE_CD in VARCHAR2,
  X_AWARD_CRS_VERSION_NUMBER in NUMBER,
  X_AWARD_CD in VARCHAR2,
  X_HONOURS_LEVEL in VARCHAR2 DEFAULT NULL,
  X_CONFERRAL_DT in DATE DEFAULT NULL,
  X_GRADUAND_STATUS in VARCHAR2,
  X_GRADUAND_APPR_STATUS in VARCHAR2,
  X_S_GRADUAND_TYPE in VARCHAR2,
  X_GRADUATION_NAME in VARCHAR2,
  X_PROXY_AWARD_IND in VARCHAR2,
  X_PROXY_AWARD_PERSON_ID in NUMBER,
  X_PREVIOUS_QUALIFICATIONS in VARCHAR2,
  X_CONVOCATION_MEMBERSHIP_IND in VARCHAR2,
  X_SUR_FOR_COURSE_CD in VARCHAR2,
  X_SUR_FOR_CRS_VERSION_NUMBER in NUMBER,
  X_SUR_FOR_AWARD_CD in VARCHAR2,
  X_COMMENTS in VARCHAR2,
  X_MODE in VARCHAR2 default 'R',
  X_ORG_ID  in NUMBER
  );
procedure DELETE_ROW (
  X_ROWID in VARCHAR2
);

  FUNCTION Get_PK_For_Validation (
    x_person_id IN NUMBER,
    x_create_dt IN DATE,
    x_hist_start_dt IN DATE
    ) RETURN BOOLEAN;

PROCEDURE Check_Constraints(
	Column_Name IN VARCHAR2 DEFAULT NULL,
	Column_Value IN VARCHAR2 DEFAULT NULL
	);

  PROCEDURE Before_DML (
    p_action IN VARCHAR2,
    x_rowid IN VARCHAR2 DEFAULT NULL,
    x_person_id IN NUMBER DEFAULT NULL,
    x_create_dt IN DATE DEFAULT NULL,
    x_hist_start_dt IN DATE DEFAULT NULL,
    x_hist_end_dt IN DATE DEFAULT NULL,
    x_hist_who IN NUMBER DEFAULT NULL,
    x_grd_cal_type IN VARCHAR2 DEFAULT NULL,
    x_grd_ci_sequence_number IN NUMBER DEFAULT NULL,
    x_course_cd IN VARCHAR2 DEFAULT NULL,
    x_award_course_cd IN VARCHAR2 DEFAULT NULL,
    x_award_crs_version_number IN NUMBER DEFAULT NULL,
    x_award_cd IN VARCHAR2 DEFAULT NULL,
    x_honours_level IN VARCHAR2 DEFAULT NULL ,
    x_conferral_dt IN DATE DEFAULT NULL ,
    x_graduand_status IN VARCHAR2 DEFAULT NULL,
    x_graduand_appr_status IN VARCHAR2 DEFAULT NULL,
    x_s_graduand_type IN VARCHAR2 DEFAULT NULL,
    x_graduation_name IN VARCHAR2 DEFAULT NULL,
    x_proxy_award_ind IN VARCHAR2 DEFAULT NULL,
    x_proxy_award_person_id IN NUMBER DEFAULT NULL,
    x_previous_qualifications IN VARCHAR2 DEFAULT NULL,
    x_convocation_membership_ind IN VARCHAR2 DEFAULT NULL,
    x_sur_for_course_cd IN VARCHAR2 DEFAULT NULL,
    x_sur_for_crs_version_number IN NUMBER DEFAULT NULL,
    x_sur_for_award_cd IN VARCHAR2 DEFAULT NULL,
    x_comments IN VARCHAR2 DEFAULT NULL,
    x_creation_date IN DATE DEFAULT NULL,
    x_created_by IN NUMBER DEFAULT NULL,
    x_last_update_date IN DATE DEFAULT NULL,
    x_last_updated_by IN NUMBER DEFAULT NULL,
    x_last_update_login IN NUMBER DEFAULT NULL,
    X_ORG_ID  in NUMBER DEFAULT NULL
  );

end IGS_GR_GRADUAND_HIST_PKG;

 

/
