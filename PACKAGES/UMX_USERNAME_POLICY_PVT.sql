--------------------------------------------------------
--  DDL for Package UMX_USERNAME_POLICY_PVT
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE PACKAGE "APPS"."UMX_USERNAME_POLICY_PVT" AUTHID CURRENT_USER AS
/* $Header: UMXVUNPS.pls 120.5 2005/09/16 23:00:10 kching noship $ */

  --
  -- Procedure        :  get_suggested_username
  -- Type             :  Public
  -- Pre_reqs         :  None
  -- Description      :  This API will return the suggested user name for a person.
  --                     The user name will be generated via the
  --                     oracle.apps.fnd.umx.username.generate Business Event
  --                     which will be raised by this API.  The event could
  --                     return a null value as the user name if the user name
  --                     could not be generated.
  -- Input Parameters :
  -- @param     p_person_party_id
  --    Description:  Person Party ID of the person who to generate
  --                  a username for.
  --    Required   :  N
  -- Output Parameters :
  --   x_suggested_username: Username generated by the Username Policy. May return null.
  --
  --
  procedure get_suggested_username (p_person_party_id    in HZ_PARTIES.PARTY_ID%TYPE default null,
                                    x_suggested_username out nocopy FND_USER.USER_NAME%TYPE);

  --
  -- Procedure        :  get_username_policy_desc
  -- Type             :  Public
  -- Pre_reqs         :  None
  -- Description      :  This API will return the description of the user name
  --                     policy.  The return parameters / user name policy is
  --                     based on the UMX: User Name Policy (UMX_USERNAME_POLICY)
  --                     profile option, which points to a LOOKUP TYPE that
  --                     should include the following:
  --
  --                       LOOKUP CODES: DESCRIPTION, PROMPT, HINT
  --
  --                     with the appropriate LOOKUP MEANING defined. Example:
  --
  --                       LOOKUP TYPE: UMX_USERNAME_POLICY:EMAIL
  --
  --  LOOKUP CODE    MEANING                     DESCRIPTION
  --  -----------    --------------------------  -------------------------------
  --  PROMPT         User Name                   Prompt of the user name text
  --                                             input field.
  --
  --  DESCRIPTION    User Names must be based    Description of the policy
  --                 on Email Address
  --
  --  HINT           example: michael@email.com  Example of what the username should
  --                                             look like.
  --
  -- Input Parameters :
  -- Output Parameters :
  -- x_policy_code:      User Name Policy code. Preseeded policies are:
  --
  --                     Code: UMX_USERNAME_POLICY:EMAIL
  --                     Meaning: User name should be defined as Email Address.
  --                              Product teams may choose to hide the email
  --                              field in any account creation / registration
  --                              UI's as long as the entered username (email)
  --                              is copied into the fnd_user.email_address field
  --                              as well.
  --
  --                     Code: UMX_USERNAME_POLICY:NONE
  --                     Meaning: No username policy / format defined, freetext
  --
  --                     Code: Anything else, this would be a custom policy defined
  --                           at a client site.
  --
  -- x_description:      User Name Policy description. May be null. For example:
  --
  --                       "User Names must be based on <b>Email Address</b>".
  --                       The description can be displayed as a quick tip in
  --                       the user account creation/registration page.
  --
  -- x_prompt:           Prompt of the User Name field. Defaults to "User Name" if
  --                     none is defined in the policy.
  --
  -- x_hint:             An example of the user name format. May be null. For
  --                     example:
  --
  --                       "(example: first.last@domain.com)"
  --
  --                     The hint can be displayed as an inline hint below the
  --                     User Name field in any user account creation/registration
  --                     page.
  --
  --
  procedure get_username_policy_desc
                (x_policy_code out nocopy FND_LOOKUP_TYPES.LOOKUP_TYPE%TYPE,
                 x_description out nocopy FND_LOOKUP_VALUES.MEANING%TYPE,
                 x_prompt      out nocopy FND_LOOKUP_VALUES.MEANING%TYPE,
                 x_hint        out nocopy FND_LOOKUP_VALUES.MEANING%TYPE);

  --
  -- Procedure        :  policy_subscription
  -- Type             :  Private
  -- Pre_reqs         :  None
  -- Description      :  The is the subscription API which registers to the
  --                     oracle.apps.fnd.umx.username.generate Workflow Business
  --                     Event.  This subscription will generate the suggested
  --                     user name by querying the email address stored in TCA.
  --                     This API is intented to be called as a Business Subscription
  --                     Rule Function.
  -- Input Parameters :
  -- @param     p_subscription_guid
  --    Description:  Workflow Business Subscription GUID
  --    Required   :  Y
  -- @param     p_event
  --    Description:  The event message.
  --    Required   :  Y
  -- Output Parameters :
  --
  function policy_subscription (p_subscription_guid in raw,
                                p_event             in out nocopy WF_EVENT_T) return varchar2;

/* =========================START OBSOLETE IMPLEMENTATION======================*/
  -- The WF itemtype for the Username Policy
  g_itemtype varchar2 (23) := 'UMXUNPL';

  --
  -- Procedure        :  run_policy
  -- Type             :  Private
  -- Pre_reqs         :  None
  -- Description      :  This API will invoke the Username Policy
  --                     workflow process and return the generated
  --                     username and status "SUCCESS".  It will
  --                     return error message and status "FAIL"
  --                     if error occurs.
  -- Input Parameters :
  -- @param     p_reg_serv_code
  --    Description:  Registration Service Code
  --    Required   :  Y
  -- @param     p_person_party_id
  --    Description:  Person Party ID of the person who generate
  --                  a username for.
  --    Required   :  Y
  -- Output Parameters :
  -- x_generated_username: Username generated by the Username Policy
  -- x_policy_override: The Username Policy determine if this policy
  --                    can be overridden by the caller.
  --                    Y - caller can override the policy
  --                    N - caller cannot override the policy
  -- x_result_code: Result code from running the Username Policy
  --                (SUCCESS/FAIL)
  -- x_policy_code: Policy Type (Example: EMAIL)
  -- x_policy_name: Policy Name (Example: Email Address)
  -- x_policy_desc: A brief description of the format used to generate
  --                the username. (Example: "(exameple: first.last@domain.com)")
  -- x_error_msg: Description why the Username Policy failed
  --
  --*/
  Procedure run_policy (
    p_reg_serv_code      in  UMX_REG_SERVICES_B.REG_SERVICE_CODE%TYPE,
    p_person_party_id    in  HZ_PARTIES.PARTY_ID%TYPE,
    x_generated_username out NOCOPY FND_USER.USER_NAME%TYPE,
    x_policy_override    out NOCOPY varchar2,
    x_policy_code        out NOCOPY varchar2,
    x_policy_name        out NOCOPY varchar2,
    x_policy_desc        out NOCOPY varchar2,
    x_result_code        out NOCOPY varchar2,
    x_error_msg          out NOCOPY varchar2
  );

  --
  -- Procedure        :  run_policy
  -- Type             :  Private
  -- Pre_reqs         :  None
  -- Description      :  This API will invoke the Username Policy
  --                     workflow process and return the generated
  --                     username and status "SUCCESS".  It will
  --                     return error message and status "FAIL"
  --                     if error occurs.
  -- Input Parameters :
  -- @param     p_reg_serv_code
  --    Description:  Registration Service Code
  --    Required   :  Y
  -- @param     p_person_party_id
  --    Description:  Person Party ID of the person who generate
  --                  a username for.
  --    Required   :  Y
  -- Output Parameters :
  -- x_generated_username: Username generated by the Username Policy
  -- x_policy_override: The Username Policy determine if this policy
  --                    can be overridden by the caller.
  --                    Y - caller can override the policy
  --                    N - caller cannot override the policy
  -- x_result_code: Result code from running the Username Policy
  --                (SUCCESS/FAIL)
  -- x_policy_code: Policy Type (Example: EMAIL)
  -- x_policy_name: Policy Name (Example: Email Address)
  -- x_policy_desc: A brief description of the format used to generate
  --                the username. (Example: "(exameple: first.last@domain.com)")
  -- x_error_msg: Description why the Username Policy failed
  -- x_exist_user_id: User ID of the existing person.
  -- x_exist_per_party_id: Person party id of the existing person.
  --
  --*/
  Procedure run_policy (
    p_reg_serv_code       in  UMX_REG_SERVICES_B.REG_SERVICE_CODE%TYPE,
    p_person_party_id     in  HZ_PARTIES.PARTY_ID%TYPE,
    x_generated_username  out NOCOPY FND_USER.USER_NAME%TYPE,
    x_policy_override     out NOCOPY varchar2,
    x_policy_code         out NOCOPY varchar2,
    x_policy_name         out NOCOPY varchar2,
    x_policy_desc         out NOCOPY varchar2,
    x_result_code         out NOCOPY varchar2,
    x_error_msg           out NOCOPY varchar2,
    x_exist_user_id       out NOCOPY FND_USER.USER_ID%TYPE,
    x_exist_per_party_id  out NOCOPY FND_USER.PERSON_PARTY_ID%TYPE
  );

  --
  -- Procedure
  --      Selector
  --
  -- Description
  --      Determine which process to run
  -- IN
  --   itemtype  - A valid item type from (WF_ITEM_TYPES table).
  --   itemkey   - A string generated from the application object's primary key.
  --   actid     - The function activity(instance id).
  --   funcmode  - Run/Cancel/Timeout
  -- OUT
  --   resultout - Name of workflow process to run
  --
  procedure Selector (item_type    in  varchar2,
                      item_key     in  varchar2,
                      activity_id  in  number,
                      command      in  varchar2,
                      resultout    out NOCOPY varchar2);
  --
  -- Procedure
  --      gen_username
  --
  -- Description
  --      Generate the username
  -- IN
  --   itemtype  - A valid item type from (WF_ITEM_TYPES table).
  --   itemkey   - A string generated from the application object's primary key.
  --   actid     - The function activity(instance id).
  --   funcmode  - Run/Cancel/Timeout
  -- OUT
  --   resultout - Name of workflow process to run
  --
  procedure gen_username (item_type    in  varchar2,
                          item_key     in  varchar2,
                          activity_id  in  number,
                          command      in  varchar2,
                          resultout    out NOCOPY varchar2);

  --
  -- Procedure
  --      chk_username_avail
  --
  -- Description
  --      Check if the username is available in FND_USER table
  -- IN
  --   itemtype  - A valid item type from (WF_ITEM_TYPES table).
  --   itemkey   - A string generated from the application object's primary key.
  --   actid     - The function activity(instance id).
  --   funcmode  - Run/Cancel/Timeout
  -- OUT
  --   resultout - Name of workflow process to run
  --
  procedure chk_username_avail (item_type    in  varchar2,
                                item_key     in  varchar2,
                                activity_id  in  number,
                                command      in  varchar2,
                                resultout    out NOCOPY varchar2);

  --
  -- Procedure
  --      collision_resolution
  --
  -- Description
  --      Template to resolve collision of username
  -- IN
  --   itemtype  - A valid item type from (WF_ITEM_TYPES table).
  --   itemkey   - A string generated from the application object's primary key.
  --   actid     - The function activity(instance id).
  --   funcmode  - Run/Cancel/Timeout
  -- OUT
  --   resultout - Name of workflow process to run
  --
  procedure collision_resolution (item_type    in  varchar2,
                                  item_key     in  varchar2,
                                  activity_id  in  number,
                                  command      in  varchar2,
                                  resultout    out NOCOPY varchar2);
/* =========================END OBSOLETE IMPLEMENTATION======================*/

END UMX_USERNAME_POLICY_PVT;

 

/
