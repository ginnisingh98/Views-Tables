--------------------------------------------------------
--  DDL for Package ZX_ZXARRECV_XMLP_PKG
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE PACKAGE "APPS"."ZX_ZXARRECV_XMLP_PKG" AUTHID CURRENT_USER AS
/* $Header: ZXARRECVS.pls 120.1.12010000.1 2008/07/28 13:27:50 appldev ship $ */
  P_REPORTING_LEVEL VARCHAR2(15);

  P_BASE_REPORT_NAME VARCHAR2(32767);

  P_REPORT_NAME VARCHAR2(32767);

  P_REPORT_LEVEL VARCHAR2(32767);

  P_GL_DATE_LOW DATE;

  P_GL_DATE_HIGH DATE;

  P_TRX_DATE_LOW DATE;

  P_TRX_DATE_HIGH DATE;

  P_TAX_ACCOUNT_FROM NUMBER;

  P_TAX_ACCOUNT_TO NUMBER;

  P_VAT_TAX_CATEGORY VARCHAR2(32767);

  P_SELF_WH_TAX_CATEG VARCHAR2(32767);

  P_VAT_PERC_TAX_CATEGORY VARCHAR2(32767);

  P_VAT_ADDIT_TAX_CATEGORY VARCHAR2(32767);

  P_VAT_NOT_CATEG_TAX_CATEG VARCHAR2(32767);

  P_VAT_NON_TAXAB_TAX_CATEG VARCHAR2(32767);

  P_TAX_CATEG_REGIME VARCHAR2(32767);

  P_MUN_TAX_CATEG_REGIME VARCHAR2(32767);

  P_EXC_TAX_CATEGORY VARCHAR2(32767);

  P_TRX_LETTER_FROM VARCHAR2(32767);

  P_TRX_LETTER_TO VARCHAR2(32767);

  P_PRINT_COMPANY VARCHAR2(32767);

  P_LEDGER_ID NUMBER;

  P_COA_ID NUMBER;

  P_ORG_ID NUMBER;

  P_EXC_TAX_CATEGORY_ID NUMBER;

  P_VAT_ADDIT_TAX_CATEGORY_ID NUMBER;

  P_VAT_NON_TAXAB_TAX_CATEG_ID NUMBER;

  P_VAT_NOT_CATEG_TAX_CATEG_ID NUMBER;

  P_VAT_PERC_TAX_CATEGORY_ID NUMBER;

  P_VAT_TAX_CATEGORY_ID NUMBER;

  P_CONC_REQUEST_ID NUMBER;

  P_ACCT_PERIOD_FROM VARCHAR2(15);
  LP_ACCT_PERIOD_FROM VARCHAR2(15);

  P_ACCT_PERIOD_TO VARCHAR2(15);
  LP_ACCT_PERIOD_TO VARCHAR2(15);

  P_CUSTOMER_ID NUMBER;

  P_EXPORT_DATE_FROM DATE;

  P_EXPORT_DATE_TO DATE;

  P_EXP_METHOD VARCHAR2(30);

  P_INCLUDE_REFERENCED_SOURCE VARCHAR2(1);

  P_ORG_TRX_NUMBER_FROM VARCHAR2(32767);

  P_ORG_TRX_NUMBER_TO VARCHAR2(32767);

  P_REPORTING_ENTITY_ID NUMBER;

  P_TRX_SOURCE_NAME VARCHAR2(40);

  P_DATE4_FORMAT VARCHAR2(32767);

  P_TAX_TYPE VARCHAR2(32767);

  P_TAX_CODE VARCHAR2(32767);

  P_PRODUCT VARCHAR2(4);

  P_TAX_REGIME VARCHAR2(32767);

  P_REP_CONTEXT_LVL_MNG VARCHAR2(15);

  P_REP_CONTEXT_ENTITY_NAME VARCHAR2(50);

  P_RESPONSIBILITY_NAME VARCHAR2(40);

  P_USER_NAME VARCHAR2(40);

  P_PERIOD_START_DATE DATE;

  P_PERIOD_END_DATE DATE;

  P_TAX_RATE_CODE VARCHAR2(40);

  P_TAX_REGISTER_TYPE VARCHAR2(32767);

  P_INCLUDE_AR_INV_TRX_CLASS VARCHAR2(1);

  P_INCLUDE_AR_APPL_TRX_CLASS VARCHAR2(1);

  P_INCLUDE_AR_ADJ_TRX_CLASS VARCHAR2(1);

  P_INCLUDE_AR_MISC_TRX_CLASS VARCHAR2(1);

  P_INCLUDE_AR_BR_TRX_CLASS VARCHAR2(1);

  P_INCLUDE_GL_MANUAL_LINES VARCHAR2(1);

  P_COMPANY_NAME NUMBER;

  P_ACCOUNTING_STATUS VARCHAR2(40);

  P_DETAIL_LEVEL VARCHAR2(40);

  P_INCLUDE VARCHAR2(40);

  P_TW_GL_DATE_FROM DATE;

  P_TW_GL_DATE_TO DATE;

  P_TW_TRX_DATE_LOW DATE;

  P_TW_TRX_DATE_HIGH DATE;

  P_CUST_NAME VARCHAR2(40);

  P_ORDER_BY VARCHAR2(40);

  P_FUNCTIONAL VARCHAR2(40);

  P_EXPORT_DATE_LOW VARCHAR2(40);

  P_EXPORT_DATE_HIGH VARCHAR2(40);

  P_EXPORT_METHOD VARCHAR2(40);

  P_STATE_LOW VARCHAR2(40);

  P_STATE_HIGH VARCHAR2(40);

  P_TW_EXPORT_DATE_LOW VARCHAR2(40);

  P_TW_EXPORT_DATE_HIGH VARCHAR2(40);

  P_ADJUSTED_DOC_FROM VARCHAR2(40);

  P_ADJUSTED_DOC_TO VARCHAR2(40);

  P_APPLICATION_DATE VARCHAR2(40);

  P_GL_ACTIVITY_DISPLAY_FLAG VARCHAR2(40);

  P_FORMAT VARCHAR2(40);

  P_POSTING_STATUS VARCHAR2(40);

  P_INCLUDE_DISCOUNTS VARCHAR2(32767);

  CP_DETAIL_LEVEL_MNG VARCHAR2(200);

  CP_INCLUDE_TRX_TYPE VARCHAR2(1000);

  P_INCLUDE_ACCOUNTING_SEGMENTS VARCHAR2(32767);

  P_TW_GL_DATE_LOW VARCHAR2(200);

  P_TW_GL_DATE_HIGH VARCHAR2(200);

  P_COMPANY_NAME_DESC VARCHAR2(200);

  CF_TOT_FUNC_AMT NUMBER;

  CF_TOT_AMOUNT NUMBER;

  CP_TRX_LINE_ID NUMBER;

  CP_TRX_ID NUMBER;

  CP_TRX_ID_ACC NUMBER;

  CP_TRX_LINE_ID_ACC NUMBER;

  LP_FROM_CLAUSE VARCHAR2(80) := '--';

  LP_REPORT_WHERE VARCHAR2(300) := '1 = 1';

  LP_TAX_ACCOUNT VARCHAR2(20) := 'null';

  LP_EXTENDED_AMOUNT VARCHAR2(20) := 'null';

  CP_REPORTING_LEVEL_NAME VARCHAR2(20);

  CP_REPORTING_ENTITY_NAME VARCHAR2(1000);

  CP_NLS_YES VARCHAR2(80);

  CP_NLS_NO VARCHAR2(80);

  CP_REPORT_TITLE VARCHAR2(50);

  CP_NO_DATA_FOUND VARCHAR2(50);

  CP_END_OF_REPORT VARCHAR2(50);

  LP_CM_BATCH_SOURCE_NAME VARCHAR2(100) := 'NULL';

  LP_CM_TRX_NUMBER VARCHAR2(20) := 'null';

  LP_VOID VARCHAR2(200) := 'null';

  LP_MISSING_SEQ_FINAL VARCHAR2(30025);

  CP_TAX_CATEGORY_DESC VARCHAR2(80);

  LP_MISSING_SEQ VARCHAR2(30025);

  LP_MISSING_SEQUENCE_FINAL VARCHAR2(30025);

  LP_DOC_SEQUENCE_ORDER VARCHAR2(200) := 'null';

  CP_TRL_ROW_COUNT NUMBER;

  FUNCTION BEFOREREPORT RETURN BOOLEAN;

  FUNCTION GET_GL_DATE RETURN BOOLEAN;

  FUNCTION INITIALIZE RETURN BOOLEAN;

  FUNCTION CALL_TRL_ENGINE RETURN BOOLEAN;

  FUNCTION GET_DYNAMIC_CLAUSE RETURN BOOLEAN;

  FUNCTION AFTERREPORT RETURN BOOLEAN;

  FUNCTION SET_REPORT_TITLE RETURN BOOLEAN;

  FUNCTION CF_RESPONSIBILITYFORMULA RETURN CHAR;

  FUNCTION CF_USER_NAMEFORMULA RETURN CHAR;

  PROCEDURE PRINT_MISSING_SEQUENCE;

  FUNCTION VALIDATE_GUI_NUM(TRX_NUMBER IN VARCHAR2
                           ,TRX_SOURCE IN VARCHAR2) RETURN BOOLEAN;

  FUNCTION GET_ROC_DATE(P_DATE IN DATE) RETURN VARCHAR2;

  FUNCTION P_TRX_DATE_HIGHVALIDTRIGGER RETURN BOOLEAN;

  FUNCTION CP_TW_GL_DATE_FROMFORMULA RETURN CHAR;

  FUNCTION CP_TW_GL_DATE_TOFORMULA RETURN CHAR;

  FUNCTION CP_TW_TRX_DATE_LOWFORMULA RETURN CHAR;

  FUNCTION CP_TW_TRX_DATE_HIGHFORMULA RETURN CHAR;

  FUNCTION CF_TAXABLE_AMTFORMULA(C_TRANSACTION_ID IN NUMBER
                                ,C_TRANSACTION_LINE IN NUMBER) RETURN NUMBER;

  FUNCTION CF_TAXABLE_ACC_AMTFORMULA(C_TRANSACTION_ID IN NUMBER
                                    ,C_TRANSACTION_LINE IN NUMBER) RETURN NUMBER;

  FUNCTION CP_CUSTOMER_NAMEFORMULA RETURN CHAR;

  FUNCTION CF_TW_EXPORT_DATEFORMULA(C_EXPORT_DATE IN VARCHAR2) RETURN CHAR;

  FUNCTION CF_LEDGER_CURRENCYFORMULA RETURN CHAR;

  FUNCTION CF_TOT_FUNC_AMT_P RETURN NUMBER;

  FUNCTION CF_TOT_AMOUNT_P RETURN NUMBER;

  FUNCTION CP_TRX_LINE_ID_P RETURN NUMBER;

  FUNCTION CP_TRX_ID_P RETURN NUMBER;

  FUNCTION CP_TRX_ID_ACC_P RETURN NUMBER;

  FUNCTION CP_TRX_LINE_ID_ACC_P RETURN NUMBER;

  FUNCTION LP_FROM_CLAUSE_P RETURN VARCHAR2;

  FUNCTION LP_REPORT_WHERE_P RETURN VARCHAR2;

  FUNCTION LP_TAX_ACCOUNT_P RETURN VARCHAR2;

  FUNCTION LP_EXTENDED_AMOUNT_P RETURN VARCHAR2;

  FUNCTION CP_REPORTING_LEVEL_NAME_P RETURN VARCHAR2;

  FUNCTION CP_REPORTING_ENTITY_NAME_P RETURN VARCHAR2;

  FUNCTION CP_NLS_YES_P RETURN VARCHAR2;

  FUNCTION CP_NLS_NO_P RETURN VARCHAR2;

  FUNCTION CP_REPORT_TITLE_P RETURN VARCHAR2;

  FUNCTION CP_NO_DATA_FOUND_P RETURN VARCHAR2;

  FUNCTION CP_END_OF_REPORT_P RETURN VARCHAR2;

  FUNCTION LP_CM_BATCH_SOURCE_NAME_P RETURN VARCHAR2;

  FUNCTION LP_CM_TRX_NUMBER_P RETURN VARCHAR2;

  FUNCTION LP_VOID_P RETURN VARCHAR2;

  FUNCTION LP_MISSING_SEQ_FINAL_P RETURN VARCHAR2;

  FUNCTION CP_TAX_CATEGORY_DESC_P RETURN VARCHAR2;

  FUNCTION LP_MISSING_SEQ_P RETURN VARCHAR2;

  FUNCTION LP_MISSING_SEQUENCE_FINAL_P RETURN VARCHAR2;

  FUNCTION LP_DOC_SEQUENCE_ORDER_P RETURN VARCHAR2;

  FUNCTION CP_TRL_ROW_COUNT_P RETURN NUMBER;

  TYPE REC_MISSINGGUI IS RECORD (GUI_NUMBER VARCHAR2(10),GUI_TYPE VARCHAR2(2),GUI_TRX_SRC VARCHAR2(100),GUI NUMBER,DIFF NUMBER);

  TYPE TAB_MISSINGGUI IS TABLE OF REC_MISSINGGUI INDEX BY BINARY_INTEGER;

  GUI_TABLE TAB_MISSINGGUI;

  CNT NUMBER := 1;

  --PROCEDURE POPULATE_DATA;

  PROCEDURE POPULATE_DATA(C_TRX_BATCH_SOURCE_NAME VARCHAR2, C_BATCH_SOURCES_ATT1 VARCHAR2,
  C_BATCH_SOURCE_ID NUMBER, C_INVOICE_WORD VARCHAR2, C_INITIAL_TRX_NUM VARCHAR2,
  C_FINAL_TRX_NUM VARCHAR2, C_EXTRACT_SOURCE_LEDGER VARCHAR2,
  C_DOCUMENT_SUB_TYPE VARCHAR2, C_TRX_NUMBER VARCHAR2, C_APPLIED_TO_TRX_NUMBER VARCHAR2);

  PROCEDURE FIND_MISSING_SEQ;

  FUNCTION GET_DATE_FORMAT RETURN BOOLEAN;

END ZX_ZXARRECV_XMLP_PKG;


/
