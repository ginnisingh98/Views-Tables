--------------------------------------------------------
--  DDL for Package EDR_PSIG_PAGE_FLOW
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE PACKAGE "APPS"."EDR_PSIG_PAGE_FLOW" AUTHID CURRENT_USER AS
/* $Header: EDRESGPS.pls 120.1.12000000.1 2007/01/18 05:52:54 appldev ship $ */

  /* Package variable status will be set before calling Post Operation API
     Value of this variable is used in Post Operation APIs
  */

   SIGNATURE_STATUS    VARCHAR2(30);


  /*************************************************************************
   ***  Following Procedure Returns current page flow process status    ****
   ***  It accepts Event ID as in parameter                             ****
   *************************************************************************/

  PROCEDURE GET_PAGE_FLOW_STATUS(P_EVENT_ID IN NUMBER ,
                                 P_SIGNATURE_STATUS  OUT NOCOPY VARCHAR2);



/*********************************************************************************************************
 Description for workflow user documentation for common parameters used in this package

  p_itemtype  : The internal name for the item type. Item types are defined in the Oracle Workflow Builder.
  p_itemkey   : A string that represents a primary key generated by the workflow-enabled application
                for the item type. The string uniquely identifies the item within an item type.
  p_actid     : The ID number of the activity from which this procedure is called.
  p_funcmode  : The execution mode of the activity. If the activity is a function activity, the mode is
                either 'RUN' or 'CANCEL'. If the activity is a notification activity, with a post-notification
                function, then the mode can be 'RESPOND', 'FORWARD', 'TRANSFER', 'TIMEOUT', or 'RUN'. Other
                execution modes may be added in the future.
  p_resultout : If a result type is specified in the Activities properties page for the activity in the
                Oracle Workflow Builder, this parameter represents the expected result that is returned when
                the procedure completes. The possible results are:


************************************************************************************************************/

  /*******************************************************************************
   ***   This procedure is associated with EDRESGPF workflow.  This code will   **
   ***   execute when user clicks on Authenticate Button in list of signer page **
   *******************************************************************************/

   PROCEDURE AUTHENTICATE_RESPONSE(
      p_itemtype   IN VARCHAR2,
      p_itemkey    IN VARCHAR2,
      p_actid      IN NUMBER,
      p_funcmode   IN VARCHAR2,
      p_resultout  OUT NOCOPY VARCHAR2
   ) ;

/*******************************************************************************************
*****    Update record status to cancel assuming EVENT_ID and Workflow ITEM_KEY is Same  ***
********************************************************************************************/

   PROCEDURE CANCEL_RESPONSE(
      p_itemtype   IN VARCHAR2,
      p_itemkey    IN VARCHAR2,
      p_actid      IN NUMBER,
      p_funcmode   IN VARCHAR2,
      p_resultout  OUT NOCOPY VARCHAR2
   ) ;


   /******************************************************************************************
    ***  This is the main procedure which controls total offline flow and response to done ***
    ***  incase of on-line. When user clicks on done button and still some responses are   ***
    ***  pending then this procedure verifies deferred mode is allowed or not. if deferred ***
    ***  mode is allowed sets the workflow mode to OFFLINE.                                ***
    ******************************************************************************************/

   PROCEDURE PROCESS_RESPONSE(
      p_itemtype   IN VARCHAR2,
      p_itemkey    IN VARCHAR2,
      p_actid      IN NUMBER,
      p_funcmode   IN VARCHAR2,
      p_resultout  OUT NOCOPY VARCHAR2
   ) ;

/****************************************************************
*****  This procedure associated with Notification as of now ****
*****  we are not processing any response in this.           ****
*****************************************************************/

   PROCEDURE UPDATE_NOTIF_RESPONSE(
      p_itemtype   IN VARCHAR2,
      p_itemkey    IN VARCHAR2,
      p_actid      IN NUMBER,
      p_funcmode   IN VARCHAR2,
      p_resultout  OUT NOCOPY VARCHAR2
   ) ;

  /******************************************************************************
   ***  This procedure is associated with EDRESGPF workflow.  This code will   **
   ***  execute when user clicks on Approve Button in response to notification **
   ******************************************************************************/

   PROCEDURE NOTIF_APPROVED(
      p_itemtype   IN VARCHAR2,
      p_itemkey    IN VARCHAR2,
      p_actid      IN NUMBER,
      p_funcmode   IN VARCHAR2,
      p_resultout  OUT NOCOPY VARCHAR2
   );


  /*******************************************************************************
   ***   This procedure is associated with EDRESGPF workflow.  This code will   **
   ***   execute when user clicks on Cancel Button in response to notification  **
   ***   No processing is done here.                                            **
   *******************************************************************************/

   PROCEDURE NOTIF_CANCELED(
      p_itemtype   IN VARCHAR2,
      p_itemkey    IN VARCHAR2,
      p_actid      IN NUMBER,
      p_funcmode   IN VARCHAR2,
      p_resultout  OUT NOCOPY VARCHAR2
   );


  /*****************************************************************************
   ***   This procedure is associated with EDRESGPF workflow.  This code will **
   ***   executed when use click on Reject Button in response to notification **
   *****************************************************************************/

   PROCEDURE NOTIF_REJECTED(
      p_itemtype   IN VARCHAR2,
      p_itemkey    IN VARCHAR2,
      p_actid      IN NUMBER,
      p_funcmode   IN VARCHAR2,
      p_resultout  OUT NOCOPY VARCHAR2
   );

/************************************************************************************************
******  Following Procedure is to spwan child process to get off-line electronic signatures   ***
******  It gets the current level to process and sends the notifications to all signers       ***
******  of current level.  It also copies required attributes parent process to child process ***
*************************************************************************************************/

  PROCEDURE SPWAN_OFFLINE_PROCESS(
      p_itemtype   IN VARCHAR2,
      p_itemkey    IN VARCHAR2,
      p_actid      IN NUMBER,
      p_funcmode   IN VARCHAR2,
      p_resultout  OUT NOCOPY VARCHAR2
   );
/****************************************************************
***  Following procedure is associated to workflow activity.   **
***  This procedure set the mode os signature process.         **
***  If 'WF_SOURCE_APPLICATION_TYPE' is "DB" and Deferred      **
***  mode is allowed then we should not pop up List of signers **
***  page.  In this case This procedure simulates done button  **
***  on list of signers page.                                  **
*****************************************************************/

  PROCEDURE IS_IT_TOTAL_OFFLINE(
      p_itemtype   IN VARCHAR2,
      p_itemkey    IN VARCHAR2,
      p_actid      IN NUMBER,
      p_funcmode   IN VARCHAR2,
      p_resultout  OUT NOCOPY VARCHAR2
   );

/****************************************************************
***  Following procedure is associated to workflow activity.   **
***  This procedure Checksif an offiline notificaiton has      **
***  exceeded the timeout parameters.                          **
*****************************************************************/

  PROCEDURE CHECK_TIMEOUT(
      p_itemtype   IN VARCHAR2,
      p_itemkey    IN VARCHAR2,
      p_actid      IN NUMBER,
      p_funcmode   IN VARCHAR2,
      p_resultout  OUT NOCOPY VARCHAR2
   );


/************************************************************************************
****   Following Procedure is used by sign-on screen. it accepts notification id  ***
****   and returns workflow item type ane item key these values are used to set   ***
****   page context in offline case.                                              ***
*************************************************************************************/

-- procedure : getItemKey
--    Parameters
--      IN
--         p_notif -- Notification ID
--      OUT
--         p_item_key  -- Workflow instance Item key
--         p_item_type -- Workflow item type

  PROCEDURE getItemKey(p_notif in varchar2,
                       p_item_key out NOCOPY varchar2,
                       p_item_type out NOCOPY varchar2);


-- Function  : getItemKey
--    Parameters
--      IN
--         p_item_key  -- Workflow instance Item key
--         p_item_type -- Workflow item type
--      OUT
--         Returns Notification ID


  FUNCTION getNotificationID (p_itemtype   IN VARCHAR2,
      p_itemkey    IN VARCHAR2) RETURN VARCHAR2;

--Bug 3072401: Start
PROCEDURE SEND_FINAL_APPROVAL_NTF
( p_itemtype                           VARCHAR2,
  p_itemkey                            VARCHAR2,
  p_actid                              NUMBER,
  p_funcmode                           VARCHAR2,
  p_resultout              OUT NOCOPY  VARCHAR2
);

PROCEDURE SEND_INDV_APPROVAL_NTF
( p_itemtype                           VARCHAR2,
  p_itemkey                            VARCHAR2,
  p_actid                              NUMBER,
  p_funcmode                           VARCHAR2,
  p_resultout              OUT NOCOPY  VARCHAR2
);
--Bug 3072401: End


--Bug 3207385: Start
/************************************************************************************
****   This procedure is associated with the function activity                    ***
****   RAISE_APPROVAL_COMPLETION. It would raise the EDR Approval Completion event***
*************************************************************************************/

PROCEDURE RAISE_APPR_COMPLETION_EVT
( p_itemtype                           VARCHAR2,
  p_itemkey                            VARCHAR2,
  p_actid                              NUMBER,
  p_funcmode                           VARCHAR2,
  p_resultout              OUT NOCOPY  VARCHAR2
);
--Bug 3207385: End

-- Bug 5166723 : start
/************************************************************************************
****   This procedure is used for moving the WF activity node manually            ***
*************************************************************************************/

PROCEDURE MOVE_WF_ACTIVITY(P_ITEMTYPE                IN VARCHAR2,
                           P_ITEMKEY                 IN VARCHAR2,
                           P_CURRENT_ACTIVITY         IN VARCHAR2,
                           P_RESULT_CODE      IN VARCHAR2);
--Bug 5166723: End
END EDR_PSIG_PAGE_FLOW;

 

/
