--------------------------------------------------------
--  DDL for Package AMS_QUERY_COND_DISP_STRUCT_PKG
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE PACKAGE "APPS"."AMS_QUERY_COND_DISP_STRUCT_PKG" AUTHID CURRENT_USER as
/* $Header: amstcdss.pls 120.1 2005/06/27 05:39:57 appldev ship $ */
procedure INSERT_ROW (
  X_ROWID in OUT NOCOPY VARCHAR2,
  X_QUERY_COND_DISP_STRUCT_ID in NUMBER,
  X_QUERY_TEMPLATE_ID in NUMBER,
  X_QUERY_CONDITION_ID in NUMBER,
  X_TOKEN_TYPE in VARCHAR2,
  X_TOKEN_SEQUENCE in NUMBER,
  X_AVAILABLE_LOV_ID in NUMBER,
  X_VALUE_TYPE in VARCHAR2,
  X_NON_VARIANT_VALUE in VARCHAR2,
  X_QUERY_ALIAS_ID in NUMBER,
  X_DATA_TYPE in VARCHAR2,
  X_EXP_LOGIC_SEQ in NUMBER,
  X_EXP_DISPLAY_SEQ in NUMBER,
  X_OBJECT_VERSION_NUMBER in NUMBER,
  X_REQUEST_ID in NUMBER,
  X_SECURITY_GROUP_ID in NUMBER,
  X_DISPLAY_TEXT in VARCHAR2,
  X_CREATION_DATE in DATE,
  X_CREATED_BY in NUMBER,
  X_LAST_UPDATE_DATE in DATE,
  X_LAST_UPDATED_BY in NUMBER,
  X_LAST_UPDATE_LOGIN in NUMBER,
  X_PROGRAM_ID in NUMBER,
  X_PROGRAM_APPLICATION_ID in NUMBER,
  X_PROGRAM_UPDATE_DATE in DATE
);
procedure LOCK_ROW (
  X_QUERY_COND_DISP_STRUCT_ID in NUMBER,
  X_QUERY_TEMPLATE_ID in NUMBER,
  X_QUERY_CONDITION_ID in NUMBER,
  X_TOKEN_TYPE in VARCHAR2,
  X_TOKEN_SEQUENCE in NUMBER,
  X_AVAILABLE_LOV_ID in NUMBER,
  X_VALUE_TYPE in VARCHAR2,
  X_NON_VARIANT_VALUE in VARCHAR2,
  X_QUERY_ALIAS_ID in NUMBER,
  X_DATA_TYPE in VARCHAR2,
  X_EXP_LOGIC_SEQ in NUMBER,
  X_EXP_DISPLAY_SEQ in NUMBER,
  X_OBJECT_VERSION_NUMBER in NUMBER,
  X_REQUEST_ID in NUMBER,
  X_SECURITY_GROUP_ID in NUMBER,
  X_DISPLAY_TEXT in VARCHAR2,
  X_PROGRAM_ID in NUMBER,
  X_PROGRAM_APPLICATION_ID in NUMBER,
  X_PROGRAM_UPDATE_DATE in DATE
);
procedure UPDATE_ROW (
  X_QUERY_COND_DISP_STRUCT_ID in NUMBER,
  X_QUERY_TEMPLATE_ID in NUMBER,
  X_QUERY_CONDITION_ID in NUMBER,
  X_TOKEN_TYPE in VARCHAR2,
  X_TOKEN_SEQUENCE in NUMBER,
  X_AVAILABLE_LOV_ID in NUMBER,
  X_VALUE_TYPE in VARCHAR2,
  X_NON_VARIANT_VALUE in VARCHAR2,
  X_QUERY_ALIAS_ID in NUMBER,
  X_DATA_TYPE in VARCHAR2,
  X_EXP_LOGIC_SEQ in NUMBER,
  X_EXP_DISPLAY_SEQ in NUMBER,
  X_OBJECT_VERSION_NUMBER in NUMBER,
  X_REQUEST_ID in NUMBER,
  X_SECURITY_GROUP_ID in NUMBER,
  X_DISPLAY_TEXT in VARCHAR2,
  X_LAST_UPDATE_DATE in DATE,
  X_LAST_UPDATED_BY in NUMBER,
  X_LAST_UPDATE_LOGIN in NUMBER,
  X_PROGRAM_ID in NUMBER,
  X_PROGRAM_APPLICATION_ID in NUMBER,
  X_PROGRAM_UPDATE_DATE in DATE
);
procedure DELETE_ROW (
  X_QUERY_COND_DISP_STRUCT_ID in NUMBER
);

PROCEDURE load_row (
  X_QUERY_COND_DISP_STRUCT_ID IN NUMBER,
  X_QUERY_TEMPLATE_ID in NUMBER,
  X_QUERY_CONDITION_ID in NUMBER,
  X_TOKEN_TYPE in VARCHAR2,
  X_TOKEN_SEQUENCE in NUMBER,
  X_AVAILABLE_LOV_ID in NUMBER,
  X_VALUE_TYPE in VARCHAR2,
  X_NON_VARIANT_VALUE in VARCHAR2,
  X_QUERY_ALIAS_ID in NUMBER,
  X_DATA_TYPE in VARCHAR2,
  X_EXP_LOGIC_SEQ in NUMBER,
  X_EXP_DISPLAY_SEQ in NUMBER,
  X_DISPLAY_TEXT in VARCHAR2,
  x_owner IN VARCHAR2,
  x_custom_mode IN VARCHAR2
);

procedure ADD_LANGUAGE;
procedure TRANSLATE_ROW(
  X_QUERY_COND_DISP_STRUCT_ID in NUMBER,
  X_DISPLAY_TEXT in VARCHAR2,
  x_owner   in VARCHAR2,
  x_custom_mode IN VARCHAR2
 ) ;

end AMS_QUERY_COND_DISP_STRUCT_PKG;

 

/
