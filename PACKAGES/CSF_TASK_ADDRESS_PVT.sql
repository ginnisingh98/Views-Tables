--------------------------------------------------------
--  DDL for Package CSF_TASK_ADDRESS_PVT
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE PACKAGE "APPS"."CSF_TASK_ADDRESS_PVT" AUTHID CURRENT_USER AS
/* $Header: CSFVTADS.pls 120.5.12010000.8 2010/03/10 08:28:47 ppillai ship $ */
   g_pkg_name            CONSTANT VARCHAR2 (30)  := 'CSF_TASK_ADDRESS_PVT';
   g_conc_program_name   CONSTANT VARCHAR2 (30)  := 'CSFFIA';
   g_valid_true          CONSTANT VARCHAR2 (1)   := 'Y';
   g_valid_false         CONSTANT VARCHAR2 (1)   := 'N';
   g_debug_p             CONSTANT VARCHAR2 (100)
                          := 'begin dbms_' || 'output' || '.put_line(:1); end;';
   g_log                 CONSTANT NUMBER         := fnd_file.LOG;
   g_output              CONSTANT NUMBER         := fnd_file.output;
   g_debug                        BOOLEAN;

   TYPE task_rec_type IS RECORD (
      ID                  csf_ext_locations.csf_ext_location_id%TYPE,
      task_id             jtf_tasks_b.task_id%TYPE,
      task_number         jtf_tasks_b.task_number%TYPE,
      location_id         hz_locations.location_id%TYPE,
      address_style       hz_locations.address_style%TYPE,
      address1            hz_locations.address1%TYPE,
      address2            hz_locations.address2%TYPE,
      address3            hz_locations.address3%TYPE,
      address4            hz_locations.address4%TYPE,
      postal_code         hz_locations.postal_code%TYPE,
      city                hz_locations.city%TYPE,
      county              hz_locations.county%TYPE,
      state               hz_locations.state%TYPE,
      province            hz_locations.province%TYPE,
      country             hz_locations.country%TYPE,
      short_description   hz_locations.short_description%TYPE,
      description         hz_locations.description%TYPE,
      validated_flag      csf_ext_locations.validated_flag%TYPE,
      override_flag       csf_ext_locations.override_flag%TYPE,
      log_detail_short    csf_ext_locations.log_detail_short%TYPE,
      log_detail_long     csf_ext_locations.log_detail_long%TYPE,
      country_code        VARCHAR2 (30),
      timezone_id         hz_locations.timezone_id%TYPE
   );

   TYPE task_rec_tbl_type IS TABLE OF task_rec_type
      INDEX BY BINARY_INTEGER;

--  This procedure is called by the Find Invalid Address concurrent program.
   PROCEDURE validate_address (
      errbuf         OUT NOCOPY      VARCHAR2,
      retcode        OUT NOCOPY      VARCHAR2,
      p_start_date   IN              VARCHAR2 DEFAULT NULL,
      p_end_date     in              varchar2 default null,
      p_unstamped_only         IN VARCHAR2 DEFAULT 'Yes'
   );

--  This procedure is used to retrieve data from the hz_locations table.
   PROCEDURE retrieve_data (
      p_api_version        IN              NUMBER,
      p_init_msg_list      IN              VARCHAR2,
      p_commit             IN              VARCHAR2,
      p_validation_level   IN              NUMBER,
      p_start_date         IN              DATE DEFAULT NULL,
      p_end_date           IN              DATE DEFAULT NULL,
      x_task_rec_tbl       OUT NOCOPY      task_rec_tbl_type,
      x_return_status      OUT NOCOPY      VARCHAR2,
      x_msg_count          OUT NOCOPY      NUMBER,
      x_msg_data           out nocopy      varchar2,
      p_unstamped_only         IN VARCHAR2 DEFAULT 'Yes'
   );

--  This procedure is used to get the geometry for a particular task.
   PROCEDURE get_geometry (
      p_api_version        IN              NUMBER,
      p_init_msg_list      IN              VARCHAR2,
      p_commit             IN              VARCHAR2,
      p_validation_level   IN              NUMBER,
      p_location_id        IN              hz_locations.location_id%TYPE,
      x_locus              OUT NOCOPY      hz_locations.geometry%TYPE,
      x_return_status      OUT NOCOPY      VARCHAR2,
      x_msg_count          OUT NOCOPY      NUMBER,
      x_msg_data           OUT NOCOPY      VARCHAR2
   );

-- Checks if the geometry is null.
   FUNCTION is_geometry_null (p_locus IN MDSYS.SDO_GEOMETRY)
      RETURN BOOLEAN;

-- Used to check if the geometry is valid
   PROCEDURE is_geometry_valid (
      p_api_version        IN              NUMBER,
      p_init_msg_list      IN              VARCHAR2,
      p_commit             IN              VARCHAR2,
      p_validation_level   IN              NUMBER,
      p_locus              IN              hz_locations.geometry%TYPE,
      x_result             OUT NOCOPY      VARCHAR2,
      x_return_status      OUT NOCOPY      VARCHAR2,
      x_msg_count          OUT NOCOPY      NUMBER,
      x_msg_data           OUT NOCOPY      VARCHAR2
   );

--  Used to log the info generated by the "Find Invalid address" program
   PROCEDURE log_info (
      p_api_version        IN              NUMBER,
      p_init_msg_list      IN              VARCHAR2,
      p_commit             IN              VARCHAR2,
      p_validation_level   IN              NUMBER,
      p_task_rec           IN              task_rec_type,
      x_return_status      OUT NOCOPY      VARCHAR2,
      x_msg_count          OUT NOCOPY      NUMBER,
      x_msg_data           OUT NOCOPY      VARCHAR2
   );

-- Get the error details for logging.
   PROCEDURE get_error_detail (
      p_api_version        IN              NUMBER,
      p_init_msg_list      IN              VARCHAR2,
      p_commit             IN              VARCHAR2,
      p_validation_level   IN              NUMBER,
      p_task_rec           IN              task_rec_type,
      x_error              OUT NOCOPY      VARCHAR2,
      x_error_detail       OUT NOCOPY      VARCHAR2,
      x_return_status      OUT NOCOPY      VARCHAR2,
      x_msg_count          OUT NOCOPY      NUMBER,
      x_msg_data           OUT NOCOPY      VARCHAR2
   );

-- Used to validate the task data
   PROCEDURE validate_task_data (
      p_api_version        IN              NUMBER,
      p_init_msg_list      IN              VARCHAR2,
      p_commit             IN              VARCHAR2,
      p_validation_level   IN              NUMBER,
      p_invalid_task_id    IN              jtf_tasks_b.task_id%TYPE,
      p_location_id        IN              hz_locations.location_id%TYPE,
      p_address1           IN              hz_locations.address1%TYPE,
      p_address2           IN              hz_locations.address2%TYPE,
      p_address3           IN              hz_locations.address3%TYPE,
      p_address4           IN              hz_locations.address4%TYPE,
      p_city               IN              hz_locations.city%TYPE,
      p_postal_code        IN              hz_locations.postal_code%TYPE,
      p_state              IN              hz_locations.state%TYPE,
      p_province           IN              hz_locations.province%TYPE,
      p_county             IN              hz_locations.county%TYPE,
      p_country            IN              hz_locations.country%TYPE,
      p_timezone_id        IN              hz_locations.timezone_id%TYPE,
      x_result             OUT NOCOPY      VARCHAR2,
      x_return_status      OUT NOCOPY      VARCHAR2,
      x_msg_count          OUT NOCOPY      NUMBER,
      x_msg_data           OUT NOCOPY      VARCHAR2
   );

-- Checks if a task has valid address data
   FUNCTION is_task_address_valid (p_task_id IN jtf_tasks_b.task_id%TYPE)
      RETURN BOOLEAN;

-- Used to update the task data
   PROCEDURE update_task_address (
      p_api_version        IN              NUMBER,
      p_init_msg_list      IN              VARCHAR2,
      p_commit             IN              VARCHAR2,
      p_validation_level   IN              NUMBER,
      p_location_id        IN              hz_locations.location_id%TYPE,
      p_address1           IN              hz_locations.address1%TYPE,
      p_address2           IN              hz_locations.address2%TYPE,
      p_address3           IN              hz_locations.address3%TYPE,
      p_address4           IN              hz_locations.address4%TYPE,
      p_city               IN              hz_locations.city%TYPE,
      p_postal_code        IN              hz_locations.postal_code%TYPE,
      p_state              IN              hz_locations.state%TYPE,
      p_province           IN              hz_locations.province%TYPE,
      p_county             IN              hz_locations.county%TYPE,
      p_country            IN              hz_locations.country%TYPE,
      p_validated_flag     IN              csf_ext_locations.validated_flag%TYPE,
      p_override_flag      IN              csf_ext_locations.override_flag%TYPE,
      p_timezone_id        IN              hz_locations.timezone_id%TYPE,
      x_return_status      OUT NOCOPY      VARCHAR2,
      x_msg_count          OUT NOCOPY      NUMBER,
      x_msg_data           OUT NOCOPY      VARCHAR2
   );

-- This procedure used by Change Invalid address to get the counrty code and place id
   PROCEDURE get_country_details(
      p_country      IN             VARCHAR2,
      place_id       OUT NOCOPY     VARCHAR2,
      country_code   OUT NOCOPY     VARCHAR2);

-- This procedure used by Change Invalid address to get the counrty code for United Kingdom
   procedure get_country_details_GBR(
      p_city      IN             VARCHAR2,
      p_country   IN              VARCHAR2,
      place_id    OUT NOCOPY     VARCHAR2);

END csf_task_address_pvt;

/
