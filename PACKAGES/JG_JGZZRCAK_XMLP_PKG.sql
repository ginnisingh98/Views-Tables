--------------------------------------------------------
--  DDL for Package JG_JGZZRCAK_XMLP_PKG
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE PACKAGE "APPS"."JG_JGZZRCAK_XMLP_PKG" AUTHID CURRENT_USER AS
/* $Header: JGZZRCAKS.pls 120.0 2008/01/08 07:56:28 vjaganat noship $ */
  P_CONC_REQUEST_ID NUMBER := 0;

  P_SOB_ID NUMBER;

  P_RA_FROM NUMBER;

  P_RA_TO NUMBER;

  P_CUSTOMER_FROM VARCHAR2(50);

  P_CUSTOMER_TO VARCHAR2(50);

  P_REPRINT VARCHAR2(1);

  P_RECEIPT_FROM DATE;

  P_RECEIPT_TO DATE;

  P_DEBUG_SWITCH VARCHAR2(1);

  P_SIGNER VARCHAR2(60);

  P_DOC_SEQ_ASSIGN_ID NUMBER;

  P_ORG_ID NUMBER;

  CP_FUNC_CURRENCY VARCHAR2(25);

  CP_PRECISION NUMBER;

  CP_STRUCT_NUM NUMBER;

  CP_SOB_NAME VARCHAR2(100);

  CP_WHERE_RECEIPT_DATES VARCHAR2(240) := '1=1';

  CP_SUB_UNIT_PLURAL VARCHAR2(25) := 'Centavos';

  CP_SUB_UNIT_SINGULAR VARCHAR2(25) := 'Centavo';

  CP_UNIT_PLURAL VARCHAR2(80) := 'Escudos';

  CP_UNIT_SINGULAR VARCHAR2(80) := 'Escudo';

  CP_UNIT_RATIO NUMBER := 100;

  CP_SYSDATE VARCHAR2(20);

  CP_COUNTRY_CODE VARCHAR2(20);

  CP_DATE_FROM VARCHAR2(11);

  CP_DATE_TO VARCHAR2(11);

  CP_CATEGORY VARCHAR2(80);

  CP_DOC_SEQ_ID NUMBER;

  CP_DOC_VALUE NUMBER;

  CP_LETTER_DATE DATE;

  CP_HR_ADDRESS1 VARCHAR2(100);

  CP_HR_ADDRESS2 VARCHAR2(100);

  CP_HR_ADDRESS3 VARCHAR2(100);

  CP_HR_CITY VARCHAR2(50);

  CP_HR_FAX VARCHAR2(30);

  CP_HR_LOCATION VARCHAR2(50);

  CP_HR_TAX_ID VARCHAR2(30);

  CP_HR_TELEPHONE VARCHAR2(30);

  CP_HR_TELEPHONE3 VARCHAR2(30);

  CP_HR_TERRITORY VARCHAR2(50);

  FUNCTION BEFOREREPORT RETURN BOOLEAN;

  FUNCTION AFTERREPORT RETURN BOOLEAN;

  FUNCTION CF_WORD_AMOUNTFORMULA(C_CURR_TOTAL_CURRENCY IN VARCHAR2
                                ,CS_CURR_TOTAL IN NUMBER) RETURN VARCHAR2;

  PROCEDURE CUSTOMER_RECEIPTS(FROM_CUST IN VARCHAR2
                             ,TO_CUST IN VARCHAR2);

  PROCEDURE AR_DOC_SEQUENCE_AUDIT_P;

  FUNCTION CF_COUNTFORMULA(CS_INV_APPLIED_AMT IN NUMBER) RETURN NUMBER;

  FUNCTION CONVERT_NUMBER2(SEGMENT IN NUMBER) RETURN VARCHAR2;

  FUNCTION CONVERT_NUMBER(IN_NUMERAL IN INTEGER := 0) RETURN VARCHAR2;

  FUNCTION GET_WORD_VALUE(P_AMOUNT IN NUMBER
                         ,P_UNIT_SINGULAR IN VARCHAR2
                         ,P_UNIT_PLURAL IN VARCHAR2
                         ,P_SUB_UNIT_SINGULAR IN VARCHAR2
                         ,P_SUB_UNIT_PLURAL IN VARCHAR2
                         ,P_UNIT_RATIO IN NUMBER) RETURN VARCHAR2;

  FUNCTION PRECISION(CUR_CODE IN VARCHAR2) RETURN NUMBER;

  FUNCTION CP_FUNC_CURRENCY_P RETURN VARCHAR2;

  FUNCTION CP_PRECISION_P RETURN NUMBER;

  FUNCTION CP_STRUCT_NUM_P RETURN NUMBER;

  FUNCTION CP_SOB_NAME_P RETURN VARCHAR2;

  FUNCTION CP_WHERE_RECEIPT_DATES_P RETURN VARCHAR2;

  FUNCTION CP_SUB_UNIT_PLURAL_P RETURN VARCHAR2;

  FUNCTION CP_SUB_UNIT_SINGULAR_P RETURN VARCHAR2;

  FUNCTION CP_UNIT_PLURAL_P RETURN VARCHAR2;

  FUNCTION CP_UNIT_SINGULAR_P RETURN VARCHAR2;

  FUNCTION CP_UNIT_RATIO_P RETURN NUMBER;

  FUNCTION CP_SYSDATE_P RETURN VARCHAR2;

  FUNCTION CP_COUNTRY_CODE_P RETURN VARCHAR2;

  FUNCTION CP_DATE_FROM_P RETURN VARCHAR2;

  FUNCTION CP_DATE_TO_P RETURN VARCHAR2;

  FUNCTION CP_CATEGORY_P RETURN VARCHAR2;

  FUNCTION CP_DOC_SEQ_ID_P RETURN NUMBER;

  FUNCTION CP_DOC_VALUE_P RETURN NUMBER;

  FUNCTION CP_LETTER_DATE_P RETURN DATE;

  FUNCTION CP_HR_ADDRESS1_P RETURN VARCHAR2;

  FUNCTION CP_HR_ADDRESS2_P RETURN VARCHAR2;

  FUNCTION CP_HR_ADDRESS3_P RETURN VARCHAR2;

  FUNCTION CP_HR_CITY_P RETURN VARCHAR2;

  FUNCTION CP_HR_FAX_P RETURN VARCHAR2;

  FUNCTION CP_HR_LOCATION_P RETURN VARCHAR2;

  FUNCTION CP_HR_TAX_ID_P RETURN VARCHAR2;

  FUNCTION CP_HR_TELEPHONE_P RETURN VARCHAR2;

  FUNCTION CP_HR_TELEPHONE3_P RETURN VARCHAR2;

  FUNCTION CP_HR_TERRITORY_P RETURN VARCHAR2;

  PROCEDURE JG_GET_SET_OF_BOOKS_INFO(SOBID IN NUMBER
                                    ,COAID OUT NOCOPY NUMBER
                                    ,SOBNAME OUT NOCOPY VARCHAR2
                                    ,FUNC_CURR OUT NOCOPY VARCHAR2
                                    ,ERRBUF OUT NOCOPY VARCHAR2);

  PROCEDURE JG_GET_BUD_OR_ENC_NAME(ACTUAL_TYPE IN VARCHAR2
                                  ,TYPE_ID IN NUMBER
                                  ,NAME OUT NOCOPY VARCHAR2
                                  ,ERRBUF OUT NOCOPY VARCHAR2);

  PROCEDURE JG_GET_LOOKUP_VALUE(LMODE IN VARCHAR2
                               ,CODE IN VARCHAR2
                               ,TYPE IN VARCHAR2
                               ,VALUE OUT NOCOPY VARCHAR2
                               ,ERRBUF OUT NOCOPY VARCHAR2);

  PROCEDURE JG_GET_FIRST_PERIOD(APP_ID IN NUMBER
                               ,TSET_OF_BOOKS_ID IN NUMBER
                               ,TPERIOD_NAME IN VARCHAR2
                               ,TFIRST_PERIOD OUT NOCOPY VARCHAR2
                               ,ERRBUF OUT NOCOPY VARCHAR2);

  PROCEDURE JG_GET_FIRST_PERIOD_OF_QUARTER(APP_ID IN NUMBER
                                          ,TSET_OF_BOOKS_ID IN NUMBER
                                          ,TPERIOD_NAME IN VARCHAR2
                                          ,TFIRST_PERIOD OUT NOCOPY VARCHAR2
                                          ,ERRBUF OUT NOCOPY VARCHAR2);

  FUNCTION JG_FORMAT_CURR_AMT(IN_PRECISION IN NUMBER
                             ,IN_AMOUNT_DISP IN VARCHAR2) RETURN VARCHAR2;

  FUNCTION GET_FORMAT_MASK(CURRENCY_CODE IN VARCHAR2
                          ,FIELD_LENGTH IN NUMBER) RETURN VARCHAR2;

  FUNCTION SAFE_GET_FORMAT_MASK(CURRENCY_CODE IN VARCHAR2
                               ,FIELD_LENGTH IN NUMBER) RETURN VARCHAR2;

  PROCEDURE GET_INFO(CURRENCY_CODE IN VARCHAR2
                    ,PRECISION OUT NOCOPY NUMBER
                    ,EXT_PRECISION OUT NOCOPY NUMBER
                    ,MIN_ACCT_UNIT OUT NOCOPY NUMBER);

  PROCEDURE BUILD_FORMAT_MASK(FORMAT_MASK OUT NOCOPY VARCHAR2
                             ,FIELD_LENGTH IN NUMBER
                             ,PRECISION IN NUMBER
                             ,MIN_ACCT_UNIT IN NUMBER
                             ,DISP_GRP_SEP IN BOOLEAN
                             ,NEG_FORMAT IN VARCHAR2
                             ,POS_FORMAT IN VARCHAR2);

  PROCEDURE SAFE_BUILD_FORMAT_MASK(FORMAT_MASK OUT NOCOPY VARCHAR2
                                  ,FIELD_LENGTH IN NUMBER
                                  ,PRECISION IN NUMBER
                                  ,MIN_ACCT_UNIT IN NUMBER
                                  ,DISP_GRP_SEP IN BOOLEAN
                                  ,NEG_FORMAT IN VARCHAR2
                                  ,POS_FORMAT IN VARCHAR2);

  PROCEDURE SET_NAME(APPLICATION IN VARCHAR2
                    ,NAME IN VARCHAR2);

  PROCEDURE SET_TOKEN(TOKEN IN VARCHAR2
                     ,VALUE IN VARCHAR2
                     ,TRANSLATE IN BOOLEAN);

  PROCEDURE RETRIEVE(MSGOUT OUT NOCOPY VARCHAR2);

  PROCEDURE CLEAR;

  FUNCTION GET_STRING(APPIN IN VARCHAR2
                     ,NAMEIN IN VARCHAR2) RETURN VARCHAR2;

  FUNCTION GET_NUMBER(APPIN IN VARCHAR2
                     ,NAMEIN IN VARCHAR2) RETURN NUMBER;

  FUNCTION GET RETURN VARCHAR2;

  FUNCTION GET_ENCODED RETURN VARCHAR2;

  PROCEDURE PARSE_ENCODED(ENCODED_MESSAGE IN VARCHAR2
                         ,APP_SHORT_NAME OUT NOCOPY VARCHAR2
                         ,MESSAGE_NAME OUT NOCOPY VARCHAR2);

  PROCEDURE SET_ENCODED(ENCODED_MESSAGE IN VARCHAR2);

  PROCEDURE RAISE_ERROR;

  FUNCTION GET_NEXT_SEQUENCE(APPID IN NUMBER
                            ,CAT_CODE IN VARCHAR2
                            ,SOBID IN NUMBER
                            ,MET_CODE IN VARCHAR2
                            ,TRX_DATE IN DATE
                            ,DBSEQNM IN OUT NOCOPY VARCHAR2
                            ,DBSEQID IN OUT NOCOPY INTEGER) RETURN NUMBER;

  PROCEDURE GET_SEQ_NAME(APPID IN NUMBER
                        ,CAT_CODE IN VARCHAR2
                        ,SOBID IN NUMBER
                        ,MET_CODE IN VARCHAR2
                        ,TRX_DATE IN DATE
                        ,DBSEQNM OUT NOCOPY VARCHAR2
                        ,DBSEQID OUT NOCOPY INTEGER
                        ,SEQASSID OUT NOCOPY INTEGER);

  FUNCTION GET_NEXT_AUTO_SEQ(DBSEQNM IN VARCHAR2) RETURN NUMBER;

  FUNCTION GET_NEXT_AUTO_SEQUENCE(APPID IN NUMBER
                                 ,CAT_CODE IN VARCHAR2
                                 ,SOBID IN NUMBER
                                 ,MET_CODE IN VARCHAR2
                                 ,TRX_DATE IN VARCHAR2) RETURN NUMBER;

  FUNCTION GET_NEXT_AUTO_SEQUENCE(APPID IN NUMBER
                                 ,CAT_CODE IN VARCHAR2
                                 ,SOBID IN NUMBER
                                 ,MET_CODE IN VARCHAR2
                                 ,TRX_DATE IN DATE) RETURN NUMBER;

  PROCEDURE CREATE_GAPLESS_SEQUENCES;

  /*FUNCTION CREATE_GAPLESS_SEQUENCE(SEQID IN NUMBER
                                  ,SEQASSID IN NUMBER) RETURN NUMBER;*/

  FUNCTION GET_NEXT_USER_SEQUENCE(FDS_USER_ID IN NUMBER
                                 ,SEQASSID IN NUMBER
                                 ,SEQID IN NUMBER) RETURN NUMBER;

END JG_JGZZRCAK_XMLP_PKG;



/
