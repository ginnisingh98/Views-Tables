--------------------------------------------------------
--  DDL for Package AK_ATTRIBUTES2_PKG
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE PACKAGE "APPS"."AK_ATTRIBUTES2_PKG" AUTHID CURRENT_USER as
/* $Header: AKDATR2S.pls 120.2 2005/09/29 13:59:32 tshort ship $ */

procedure ASSIGN_ATTRIBUTE (
  X_MODE in VARCHAR2,
  X_DATABASE_OBJECT_NAME in VARCHAR2,
  X_ATTRIBUTE_APPLICATION_ID in NUMBER,
  X_ATTRIBUTE_CODE in VARCHAR2,
  X_ATTRIBUTE_LABEL_LENGTH in NUMBER,
  X_BOLD in VARCHAR2,
  X_ITALIC in VARCHAR2,
  X_VERTICAL_ALIGNMENT in VARCHAR2,
  X_HORIZONTAL_ALIGNMENT in VARCHAR2,
  X_DEFAULT_VALUE_VARCHAR2 in VARCHAR2,
  X_DEFAULT_VALUE_NUMBER in NUMBER,
  X_DEFAULT_VALUE_DATE in DATE,
  X_LOV_REGION_CODE in VARCHAR2,
  X_LOV_REGION_APPLICATION_ID in NUMBER,
  X_ATTRIBUTE_LABEL_LONG in VARCHAR2,
  X_CREATION_DATE in DATE,
  X_CREATED_BY in NUMBER,
  X_LAST_UPDATE_DATE in DATE,
  X_LAST_UPDATED_BY in NUMBER,
  X_LAST_UPDATE_LOGIN in NUMBER,
  X_REGION_APPLICATION_ID in NUMBER,
  X_REGION_CODE in VARCHAR2,
  X_DISPLAY_VALUE_LENGTH in NUMBER,
  X_TABLE_NAME in VARCHAR2,
  X_OBJ_ATTR_SUCCESS in out NOCOPY VARCHAR2,
  x_data_source_type in VARCHAR2,
  x_data_storage_type in VARCHAR2
);

procedure CHANGE_OBJECT_ATTRIBUTE(
  X_MODE in VARCHAR2,
  X_DATABASE_OBJECT_NAME in VARCHAR2,
  X_ATTRIBUTE_APPLICATION_ID in NUMBER,
  X_ATTRIBUTE_CODE in VARCHAR2,
  X_ATTRIBUTE_LABEL_LENGTH in NUMBER,
  X_BOLD in VARCHAR2,
  X_ITALIC in VARCHAR2,
  X_VERTICAL_ALIGNMENT in VARCHAR2,
  X_HORIZONTAL_ALIGNMENT in VARCHAR2,
  X_DEFAULT_VALUE_VARCHAR2 in VARCHAR2,
  X_DEFAULT_VALUE_NUMBER in NUMBER,
  X_DEFAULT_VALUE_DATE in DATE,
  X_ATTRIBUTE_LABEL_LONG in VARCHAR2,
  X_OLD_LOV_REGION_CODE in VARCHAR2,
  X_OLD_LOV_REGION_APPL_ID in NUMBER,
  X_NEW_LOV_REGION_CODE in VARCHAR2,
  X_NEW_LOV_REGION_APPL_ID in NUMBER,
  X_CREATION_DATE in DATE,
  X_CREATED_BY in NUMBER,
  X_LAST_UPDATE_DATE in DATE,
  X_LAST_UPDATED_BY in NUMBER,
  X_LAST_UPDATE_LOGIN in NUMBER);


procedure CHANGE_LOVS (
  X_DATABASE_OBJECT_NAME in VARCHAR2,
  X_ATTRIBUTE_APPLICATION_ID in NUMBER,
  X_ATTRIBUTE_CODE in VARCHAR2,
  X_OLD_LOV_REGION_CODE in VARCHAR2,
  X_OLD_LOV_REGION_APPL_ID in NUMBER,
  X_NEW_LOV_REGION_CODE in VARCHAR2,
  X_NEW_LOV_REGION_APPL_ID in NUMBER,
  X_LOV_FOREIGN_KEY_NAME in out NOCOPY VARCHAR2,
  X_CREATION_DATE in DATE,
  X_CREATED_BY in NUMBER,
  X_LAST_UPDATE_DATE in DATE,
  X_LAST_UPDATED_BY in NUMBER,
  X_LAST_UPDATE_LOGIN in NUMBER);

/*
procedure NEW_FOREIGN_KEY (
  X_FOREIGN_KEY_NAME in out NOCOPY VARCHAR2,
  X_DATABASE_OBJECT_NAME in VARCHAR2,
  X_UNIQUE_KEY_NAME in VARCHAR2,
  X_APPLICATION_ID in NUMBER,
  X_ATTRIBUTE_APPLICATION_ID in NUMBER,
  X_ATTRIBUTE_CODE in VARCHAR2,
  X_FROM_TO_NAME in VARCHAR2,
  X_CREATION_DATE in DATE,
  X_CREATED_BY in NUMBER,
  X_LAST_UPDATE_DATE in DATE,
  X_LAST_UPDATED_BY in NUMBER,
  X_LAST_UPDATE_LOGIN in NUMBER);
*/
end AK_ATTRIBUTES2_PKG;

 

/
