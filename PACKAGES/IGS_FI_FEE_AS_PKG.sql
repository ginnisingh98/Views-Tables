--------------------------------------------------------
--  DDL for Package IGS_FI_FEE_AS_PKG
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE PACKAGE "APPS"."IGS_FI_FEE_AS_PKG" AUTHID CURRENT_USER AS
/* $Header: IGSSI18S.pls 115.11 2003/02/12 06:12:55 pathipat ship $ */

PROCEDURE insert_row (
  X_ROWID in out NOCOPY VARCHAR2,
  X_PERSON_ID in NUMBER,
  X_TRANSACTION_ID in out NOCOPY NUMBER,
  X_FEE_TYPE in VARCHAR2,
  X_FEE_CAL_TYPE in VARCHAR2,
  X_FEE_CI_SEQUENCE_NUMBER in NUMBER,
  X_FEE_CAT in VARCHAR2,
  X_S_TRANSACTION_TYPE in VARCHAR2,
  X_TRANSACTION_DT in DATE,
  X_TRANSACTION_AMOUNT in NUMBER,
  X_CURRENCY_CD in VARCHAR2,
  X_EXCHANGE_RATE in NUMBER,
  X_CHG_ELEMENTS in NUMBER,
  X_EFFECTIVE_DT in DATE,
  X_COURSE_CD in VARCHAR2,
  X_NOTIFICATION_DT in DATE,
  X_LOGICAL_DELETE_DT in DATE,
  X_COMMENTS in VARCHAR2,
  X_ORG_ID in NUMBER,
  X_MODE in VARCHAR2 DEFAULT 'R'
  );

PROCEDURE lock_row (
  X_ROWID in VARCHAR2,
  X_PERSON_ID in NUMBER,
  X_TRANSACTION_ID in NUMBER,
  X_FEE_TYPE in VARCHAR2,
  X_FEE_CAL_TYPE in VARCHAR2,
  X_FEE_CI_SEQUENCE_NUMBER in NUMBER,
  X_FEE_CAT in VARCHAR2,
  X_S_TRANSACTION_TYPE in VARCHAR2,
  X_TRANSACTION_DT in DATE,
  X_TRANSACTION_AMOUNT in NUMBER,
  X_CURRENCY_CD in VARCHAR2,
  X_EXCHANGE_RATE in NUMBER,
  X_CHG_ELEMENTS in NUMBER,
  X_EFFECTIVE_DT in DATE,
  X_COURSE_CD in VARCHAR2,
  X_NOTIFICATION_DT in DATE,
  X_LOGICAL_DELETE_DT in DATE,
  X_COMMENTS in VARCHAR2
);

PROCEDURE update_row (
  X_ROWID in VARCHAR2,
  X_PERSON_ID in NUMBER,
  X_TRANSACTION_ID in NUMBER,
  X_FEE_TYPE in VARCHAR2,
  X_FEE_CAL_TYPE in VARCHAR2,
  X_FEE_CI_SEQUENCE_NUMBER in NUMBER,
  X_FEE_CAT in VARCHAR2,
  X_S_TRANSACTION_TYPE in VARCHAR2,
  X_TRANSACTION_DT in DATE,
  X_TRANSACTION_AMOUNT in NUMBER,
  X_CURRENCY_CD in VARCHAR2,
  X_EXCHANGE_RATE in NUMBER,
  X_CHG_ELEMENTS in NUMBER,
  X_EFFECTIVE_DT in DATE,
  X_COURSE_CD in VARCHAR2,
  X_NOTIFICATION_DT in DATE,
  X_LOGICAL_DELETE_DT in DATE,
  X_COMMENTS in VARCHAR2,
  X_MODE in VARCHAR2 DEFAULT 'R'
  );

PROCEDURE add_row (
  X_ROWID in out NOCOPY VARCHAR2,
  X_PERSON_ID in NUMBER,
  X_TRANSACTION_ID in out NOCOPY NUMBER,
  X_FEE_TYPE in VARCHAR2,
  X_FEE_CAL_TYPE in VARCHAR2,
  X_FEE_CI_SEQUENCE_NUMBER in NUMBER,
  X_FEE_CAT in VARCHAR2,
  X_S_TRANSACTION_TYPE in VARCHAR2,
  X_TRANSACTION_DT in DATE,
  X_TRANSACTION_AMOUNT in NUMBER,
  X_CURRENCY_CD in VARCHAR2,
  X_EXCHANGE_RATE in NUMBER,
  X_CHG_ELEMENTS in NUMBER,
  X_EFFECTIVE_DT in DATE,
  X_COURSE_CD in VARCHAR2,
  X_NOTIFICATION_DT in DATE,
  X_LOGICAL_DELETE_DT in DATE,
  X_COMMENTS in VARCHAR2,
  X_MODE in VARCHAR2 DEFAULT 'R',
  X_ORG_ID in NUMBER
  );

PROCEDURE delete_row (
  X_ROWID IN VARCHAR2
);

FUNCTION get_pk_for_validation (
    x_person_id IN NUMBER,
    x_transaction_id IN NUMBER
    )
RETURN BOOLEAN;

PROCEDURE check_constraints (
	Column_name 	IN	VARCHAR2 DEFAULT NULL,
	COLUMN_VALUE	IN	VARCHAR2 DEFAULT NULL
);

  PROCEDURE Before_DML (
    p_action IN VARCHAR2,
    x_rowid IN VARCHAR2 DEFAULT NULL,
    x_person_id IN NUMBER DEFAULT NULL,
    x_transaction_id IN NUMBER DEFAULT NULL,
    x_fee_type IN VARCHAR2 DEFAULT NULL,
    x_fee_cal_type IN VARCHAR2 DEFAULT NULL,
    x_fee_ci_sequence_number IN NUMBER DEFAULT NULL,
    x_fee_cat IN VARCHAR2 DEFAULT NULL,
    x_s_transaction_type IN VARCHAR2 DEFAULT NULL,
    x_transaction_dt IN DATE DEFAULT NULL,
    x_transaction_amount IN NUMBER DEFAULT NULL,
    x_currency_cd IN VARCHAR2 DEFAULT NULL,
    x_exchange_rate IN NUMBER DEFAULT NULL,
    x_chg_elements IN NUMBER DEFAULT NULL,
    x_effective_dt IN DATE DEFAULT NULL,
    x_course_cd IN VARCHAR2 DEFAULT NULL,
    x_notification_dt IN DATE DEFAULT NULL,
    x_logical_delete_dt IN DATE DEFAULT NULL,
    x_comments IN VARCHAR2 DEFAULT NULL,
    X_ORG_ID in NUMBER DEFAULT NULL,
    x_creation_date IN DATE DEFAULT NULL,
    x_created_by IN NUMBER DEFAULT NULL,
    x_last_update_date IN DATE DEFAULT NULL,
    x_last_updated_by IN NUMBER DEFAULT NULL,
    x_last_update_login IN NUMBER DEFAULT NULL
  );

  PROCEDURE GET_FK_IGS_PS_COURSE (
    x_course_cd IN VARCHAR2
    );

  PROCEDURE GET_FK_IGS_PE_PERSON (
    x_person_id IN NUMBER
    );

  PROCEDURE GET_FK_IGS_LOOKUPS_VIEW (
    x_s_transaction_type IN VARCHAR2
    );

  FUNCTION get_uk_for_validation (
    x_transaction_id IN NUMBER DEFAULT NULL
)RETURN BOOLEAN;

END igs_fi_fee_as_pkg;

 

/
