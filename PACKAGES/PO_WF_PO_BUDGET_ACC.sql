--------------------------------------------------------
--  DDL for Package PO_WF_PO_BUDGET_ACC
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE PACKAGE "APPS"."PO_WF_PO_BUDGET_ACC" AUTHID CURRENT_USER AS
/* $Header: POXWPBAS.pls 120.0.12010000.2 2010/03/30 17:34:28 nitagarw ship $ */

 /*=======================================================================+
 | FILENAME
 |   POXWPBAS.pls
 |
 | DESCRIPTION
 |   PL/SQL spec for package:  PO_WF_PO_BUDGET_ACC
 |
 | NOTES
 | MODIFIED    IMRAN ALI (09/03/97) - Created
 *=====================================================================*/

--
-- BA_FROM_ITEM_SUB
--  Get the BA from item/subinventory relationship set.
-- IN
--   itemtype  - A valid item type from (WF_ITEM_TYPES table).
--   itemkey   - A string generated by call to AOL's INITIALIZE routine.
--   actid     - ID no. of activity this process is called from.
--   funcmode  - Run/Cancel
-- OUT
--   Result
--     FAILURE - Account generation failed
--     SUCCESS - Account generation successful
--
--  DESCRIPTION
--    Retrieve the budget account from the item/subinventory relationship set.
--    Only use this if the destination type is inventory, and the subinventory
--    is provided.

procedure BA_from_item_sub ( itemtype        in  varchar2,
                             itemkey         in  varchar2,
	                     actid           in number,
                             funcmode        in  varchar2,
                             result          out NOCOPY varchar2    );

--

--
-- PRE_DEFINED_ITEM
--   Is the item a pre-defined item in the item master (item id is not NULL)
-- IN
--   itemtype  - A valid item type from (WF_ITEM_TYPES table).
--   itemkey   - A string generated by call to AOL's INITIALIZE routine.
--   actid     - ID no. of activity this process is called from.
--   funcmode  - Run/Cancel
-- OUT
--   Result
--     TRUE  - Item is a pre-defined item.
--     FALSE - Item is not a pre-defined item.
--
procedure pre_defined_item  ( itemtype        in  varchar2,
                       	      itemkey         in  varchar2,
	                      actid           in number,
                              funcmode        in  varchar2,
                              result          out NOCOPY varchar2    );
--

--
-- GET_ITEM_BA
--   Get the Budget Account for the item.
-- IN
--   itemtype  - A valid item type from (WF_ITEM_TYPES table).
--   itemkey   - A string generated by call to AOL's INITIALIZE routine.
--   actid     - ID no. of activity this process is called from.
--   funcmode  - Run/Cancel
-- OUT
--   Result
--     FAILURE - Account generation failed
--     SUCCESS - Account generation successful
--
procedure get_item_BA  ( itemtype        in  varchar2,
                         itemkey         in  varchar2,
                         actid           in number,
                         funcmode        in  varchar2,
                         result          out NOCOPY varchar2    );

--

--
-- GET_ORG_BA
--   Get the Budget Account for the Org.
-- IN
--   itemtype  - A valid item type from (WF_ITEM_TYPES table).
--   itemkey   - A string generated by call to AOL's INITIALIZE routine.
--   actid     - ID no. of activity this process is called from.
--   funcmode  - Run/Cancel
-- OUT
--   Result
--     FAILURE - Account generation failed
--     SUCCESS - Account generation successful
--
procedure get_org_BA ( itemtype        in  varchar2,
                       itemkey         in  varchar2,
                       actid           in number,
                       funcmode        in  varchar2,
                       result          out NOCOPY varchar2    );
--

--
-- GET_CHARGE_ACCOUNT
--   Use Charge Account as Budget Account
-- IN
--   itemtype  - A valid item type from (WF_ITEM_TYPES table).
--   itemkey   - A string generated by call to AOL's INITIALIZE routine.
--   actid     - ID no. of activity this process is called from.
--   funcmode  - Run/Cancel
-- OUT
--   Result
--     FAILURE - Account generation failed
--     SUCCESS - Account generation successful
--
procedure get_charge_account ( itemtype        in  varchar2,
         	    	       itemkey         in  varchar2,
                       	       actid           in number,
                    	       funcmode        in  varchar2,
                    	       result          out NOCOPY varchar2    );
--

--
-- IS_PO_PROJECT_RELATED
--
-- IN
--   itemtype  - A valid item type from (WF_ITEM_TYPES table).
--   itemkey   - A string generated by call to AOL's INITIALIZE routine.
--   actid     - ID no. of activity this process is called from.
--   funcmode  - Run/Cancel
-- OUT
--   Result
--     TRUE
--     FALSE
--
procedure is_po_project_related      (  itemtype        in  varchar2,
                             	        itemkey         in  varchar2,
	                     		actid           in number,
                             		funcmode        in  varchar2,
                             		result          out NOCOPY varchar2    );

-- IS_EAM_JOB
--  Added for encumbrance project
-- IN
--   itemtype  - A valid item type from (WF_ITEM_TYPES table).
--   itemkey   - A string generated by call to AOL's INITIALIZE routine.
--   actid     - ID no. of activity this process is called from.
--   funcmode  - Run/Cancel
-- OUT
--  RESULT
--    YES
--    NO


PROCEDURE IS_EAM_JOB ( itemtype        in  varchar2,
                       itemkey         in  varchar2,
                       actid           in  NUMBER,
		       funcmode	       in  varchar2,
                       result          out NOCOPY VARCHAR2 )   ;

-- GET_BA_FOR_SHOP_FLOOR
-- Added for Encumbrance Project
-- IN
--   itemtype  - A valid item type from (WF_ITEM_TYPES table).
--   itemkey   - A string generated by call to AOL's INITIALIZE routine.
--   actid     - ID no. of activity this process is called from.
--   funcmode  - Run/Cancel
-- OUT
-- RESULT
--   SUCCESS   - Budget account created successfully
--   FAILURE   - Budget account creation failed


PROCEDURE GET_BA_FOR_SHOP_FLOOR ( itemtype        in  varchar2,
                                  itemkey         in  varchar2,
                                  actid           in  NUMBER,
			          funcmode        in  varchar2,
                                  result          out NOCOPY VARCHAR2 )    ;



PROCEDURE debug_on;

PROCEDURE debug_off;

end  PO_WF_PO_BUDGET_ACC;

/
