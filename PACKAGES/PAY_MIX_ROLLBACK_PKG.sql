--------------------------------------------------------
--  DDL for Package PAY_MIX_ROLLBACK_PKG
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE PACKAGE "APPS"."PAY_MIX_ROLLBACK_PKG" AUTHID CURRENT_USER AS
/* $Header: pymixrbk.pkh 120.1 2006/11/29 12:26:43 susivasu noship $ */


--
-- undo_mix
--
--
--  NAME
--    undo_mix
--
--  DESCRIPTION
--    Performs rollback on element entries insert by mix, excluding
--    those that have been updated.
--
--  NOTES
--
--
--
--  Parameters used are:
--
--    p_retcode :
--      Required parameter generated by the SRS for the concurrent manager.
--
--    p_errbuf :
--      Required parameter generated by the SRS for the concurrent manager.
--
--    p_batch_header_id :
--      Identifies batch to be rolled back.
--
--    p_commit_all_or_nothing_flag :
--      If true, process fails immediately on first error, otherwise
--      continues to maximum error count.
--
--    p_reject_if_run_results_exist :
--      If true, errors a batch line if run results exist for the entry.
--
--    p_dml_mode :
--      Not used in this first version.
--
--    p_effective_session_date :
--      For delete_entry api.  Passed as a varchar2 to overcome format
--      problems. This is rendered rendundant. See above change history.
--
--    p_leave_batch_flag :
--      If true, does not purge batch after rollback.
--
--    p_assignment_id :
--      Assignment to be rolled back.
--
--    p_asg_action_id :
--      Assignment action to be rolled back.
--

procedure undo_mix(
  p_errbuf                           out nocopy varchar2,
  p_retcode                          out nocopy number,
  p_batch_header_id                  in number,
  p_commit_all_or_nothing            in varchar2 default 'Y',
  p_reject_if_run_results_exist      in varchar2 default 'Y',
  p_dml_mode                         in varchar2,
  p_leave_batch                      in varchar2 default 'Y',
  p_assignment_id                    in number default null,
  p_asg_action_id                    in number default null
);


--
-- run_results_exist
--
--
--  NAME
--    run_results_exist.
--
--  DESCRIPTION
--    checks for run results for the entry supplied.
--
--  NOTES
--
--
--
--  Parameters used are :
--
--    p_element_entry_id :
--
--    element_entry_id to check in pay_run_results.
--

function run_results_exist(p_element_entry_id in number
                          ,p_effective_session_date in date default null
                          ,p_chk_rollback_upd in varchar default null) return boolean;

--
-- insert_rollback_message
--
--
--  NAME
--    insert_rollback_message.
--
--  DESCRIPTION
--    inserts error message in pay_message_lines.
--
--  NOTES
--
--
--
--  Parameters used are :
--
--    p_level :
--
--    Level of operation at which error occurred.  Can be 'H' for header
--    or 'L' for line.
--
--    p_batch_id :
--
--    For the source_type column.
--
--    p_severity :
--
--    For the message_level column.
--
--    p_fail :
--
--    Fail the process?  True or false.
--

procedure insert_rollback_message(p_level in varchar2,
                                  p_batch_id in number,
                                  p_severity in varchar2,
                                  p_fail in boolean);

--
-- action_parameter
--
--
--  NAME
--    action_parameter
--
--  DESCRIPTION
--    used to get the max_errors_allowed value from pay_action_parameters.
--
--  NOTES
--
--
--  Parameters used are:
--
--    p_param_name :
--
--    Parameter name to retrieve.

function action_parameter(p_param_name in varchar2)
return varchar2;


--
-- commit_messages
--
--
--  NAME
--    commit_messages.
--
--  DESCRIPTION
--    Commits process messages to the database following a rollback.
--
--  NOTES
--
--
--  No parameters required.
--

procedure commit_messages;


--
-- purge_rollback_messages.
--
--
--  NAME
--    purge_rollback_messages
--
--  DESCRIPTION
--    Removes rollback messages from pay_message_lines.
--
--  NOTES
--
--
--
--  Parameters used are :
--
--    p_source_id :
--
--    Source_ID of messages to be removed.
--
--    p_msg_type :
--    Messgae type of the above source.

procedure purge_rollback_messages(p_source_id in number,p_msg_type varchar2);


--
-- undo_mix_asg
--
--
--  NAME
--    undo_mix_asg
--
--  DESCRIPTION
--    Performs rollback on element entries insert by mixf for a given
--    assignment, excluding those that have been updated.
--
--  NOTES
--
--
--
--  Parameters used are:
--
--    p_asg_action_id :
--      Assignment action id.
--
--
--

procedure undo_mix_asg(
  p_asg_action_id                    in number
);


--
-- set_status
--
--
--  NAME
--    set_status
--
--  DESCRIPTION
--    Set the status of the batch after rollback, if necessary
--    then it will purge the batch.
--
--  NOTES
--
--
--
--  Parameters used are:
--
--    p_payroll_action_id :
--      Payroll action id.
--
--    p_leave_row :
--      Parameter to indicated whether the payroll action
--      records will be removed after the rollback.
--
--

procedure set_status(
  p_payroll_action_id                    in number,
  p_leave_row                            in boolean
);


end pay_mix_rollback_pkg;

/
