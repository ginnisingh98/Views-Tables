--------------------------------------------------------
--  DDL for Package IEU_PUB
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE PACKAGE "APPS"."IEU_PUB" AUTHID CURRENT_USER AS
/* $Header: IEU_PS.pls 120.0 2005/06/02 15:42:38 appldev noship $ */


TYPE EnumeratorDataRecord IS RECORD (
  NODE_LABEL              IEU_UWQ_SEL_RT_NODES.NODE_LABEL%TYPE,
  VIEW_NAME               IEU_UWQ_SEL_RT_NODES.VIEW_NAME%TYPE,
  DATA_SOURCE             IEU_UWQ_SEL_RT_NODES.DATA_SOURCE%TYPE,
  MEDIA_TYPE_ID           IEU_UWQ_SEL_RT_NODES.MEDIA_TYPE_ID%TYPE,
  WHERE_CLAUSE            IEU_UWQ_SEL_RT_NODES.WHERE_CLAUSE%TYPE,
  NODE_TYPE               IEU_UWQ_SEL_RT_NODES.NODE_TYPE%TYPE,
  HIDE_IF_EMPTY           IEU_UWQ_SEL_RT_NODES.HIDE_IF_EMPTY%TYPE,
  NODE_DEPTH              NUMBER(2),
  BIND_VARS               VARCHAR2(4000),
  REFRESH_VIEW_NAME       IEU_UWQ_SEL_RT_NODES.REFRESH_VIEW_NAME%TYPE,
  RES_CAT_ENUM_FLAG       IEU_UWQ_SEL_RT_NODES.RES_CAT_ENUM_FLAG%TYPE,
  REFRESH_VIEW_SUM_COL    IEU_UWQ_SEL_RT_NODES.REFRESH_VIEW_NAME%TYPE := NULL
  );

TYPE EnumeratorDataRecordList IS
  TABLE OF EnumeratorDataRecord INDEX BY BINARY_INTEGER;

TYPE BindVariableRecord IS RECORD (
  BIND_VAR_NAME    IEU_UWQ_RTNODE_BIND_VALS.BIND_VAR_NAME%TYPE,
  BIND_VAR_VALUE   IEU_UWQ_RTNODE_BIND_VALS.BIND_VAR_VALUE%TYPE,
  BIND_VAR_DATA_TYPE   IEU_UWQ_RTNODE_BIND_VALS.BIND_VAR_DATATYPE%TYPE
  );

TYPE BindVariableRecordList IS
  TABLE OF BindVariableRecord INDEX BY BINARY_INTEGER;

TYPE PluginDataRecord is RECORD (
  DATASET_REC_ID     NUMBER,
  NAME            VARCHAR2(4000),
  VALUE           VARCHAR2(4000),
  TYPE            VARCHAR2(4000));

TYPE PluginDataRecList IS
TABLE OF PluginDataRecord INDEX BY BINARY_INTEGER;

TYPE NodeDetailRecord IS RECORD (
  NODE_TYPE               	IEU_UWQ_SEL_RT_NODES.NODE_TYPE%TYPE,
  NODE_RUNTIME_WHERE_CLAUSE     IEU_UWQ_SEL_RT_NODES.WHERE_CLAUSE%TYPE,
  COMPLETE_WHERE_CLAUSE         VARCHAR2(4000),
  VIEW_NAME               	IEU_UWQ_SEL_RT_NODES.VIEW_NAME%TYPE,
  REFRESH_VIEW_NAME       	IEU_UWQ_SEL_RT_NODES.REFRESH_VIEW_NAME%TYPE,
  REFRESH_VIEW_SUM_COL    	IEU_UWQ_SEL_RT_NODES.REFRESH_VIEW_NAME%TYPE := NULL,
  RAW_NODE_RUNTIME_WHERE_CLAUSE IEU_UWQ_SEL_RT_NODES.WHERE_CLAUSE%TYPE,
  RAW_COMPLETE_WHERE_CLAUSE     VARCHAR2(4000)
  );

TYPE NodeDetailRecList IS
  TABLE OF NodeDetailRecord INDEX BY BINARY_INTEGER;

/* Used to convert the Bind variable Data from Table Of Records to a String
   <name1=val1><name2=val2> */
FUNCTION SET_BIND_VAR_DATA(P_BindDataList IN BindVariableRecordList)
  RETURN VARCHAR2;

/* Used to get the Resource Categorization Where Clause based on sel_enum_id */
FUNCTION GET_ENUM_RES_CAT(P_SEL_ENUM_ID IN NUMBER)
 RETURN VARCHAR2;

/* Used to determine if agent is eligible for ANY media */
FUNCTION IS_AGENT_ELIGIBLE_FOR_MEDIA( P_RESOURCE_ID IN NUMBER )
  RETURN BOOLEAN;


/* Used to determine if a connection to the UWQ server is required */
FUNCTION IS_UWQ_SERVER_REQUIRED( P_RESOURCE_ID IN NUMBER )
  RETURN BOOLEAN;


PROCEDURE ADD_UWQ_NODE_DATA
  (P_RESOURCE_ID             IN NUMBER,
   P_SEL_ENUM_ID             IN NUMBER,
   P_ENUMERATOR_DATAREC_LIST IN IEU_PUB.EnumeratorDataRecordList
  );

PROCEDURE GET_UWQ_NODE_DETAILS
   (P_RESOURCE_ID		IN NUMBER,
    P_NODE_ID 			IN NUMBER,
    X_NODE_DETAIL_RECORD        OUT NOCOPY IEU_PUB.NodeDetailRecord);

PROCEDURE GET_UWQ_NODE_DETAILS
   (P_RESOURCE_ID		IN NUMBER,
    P_NODE_ID 			IN NUMBER,
    X_NODE_DETAIL_RECORD        OUT NOCOPY IEU_PUB.NodeDetailRecord,
    X_BIND_VARIABLE_RECORD_LIST OUT NOCOPY IEU_PUB.BindVariableRecordList);

END IEU_PUB;


 

/
