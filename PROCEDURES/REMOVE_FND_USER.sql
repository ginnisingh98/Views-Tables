--------------------------------------------------------
--  DDL for Procedure REMOVE_FND_USER
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "APPS"."REMOVE_FND_USER" (l_person_id number) AS
BEGIN

-- UPDATE (1.None.None)
UPDATE WIP_SERIAL_MOVE_TRANSACTIONS SET 
CREATED_BY_NAME=nvl2(CREATED_BY_NAME,per_drt_rules.ranstr(5,10),CREATED_BY_NAME)
WHERE CREATED_BY = L_PERSON_ID;

-- UPDATE (1.None.None)
UPDATE WIP_SERIAL_MOVE_TXNS_V SET 
LAST_UPDATED_BY_NAME=nvl2(LAST_UPDATED_BY_NAME,per_drt_rules.ranstr(5,10),LAST_UPDATED_BY_NAME)
WHERE LAST_UPDATED_BY = L_PERSON_ID;

-- UPDATE (1.None.None)
UPDATE UMX_REG_REQUESTS SET 
REQUESTED_USERNAME=nvl2(REQUESTED_USERNAME,PER_DRT_UDF.overwrite_name(ROWID,'UMX_REG_REQUESTS','REQUESTED_USERNAME',l_person_id),REQUESTED_USERNAME)
WHERE REQUESTED_USERNAME IN ( SELECT USER_NAME FROM FND_USER WHERE USER_ID = L_PERSON_ID );

-- UPDATE (1.None.None)
UPDATE WF_ACTIVITY_ATTRIBUTES SET 
TEXT_DEFAULT=nvl2(TEXT_DEFAULT,PER_DRT_UDF.overwrite_name(ROWID,'WF_ACTIVITY_ATTRIBUTES','TEXT_DEFAULT',l_person_id),TEXT_DEFAULT)
WHERE TEXT_DEFAULT IN (SELECT USER_NAME FROM FND_USER WHERE USER_ID = L_PERSON_ID) AND TYPE = 'ROLE' AND VALUE_TYPE = 'CONSTANT';

-- UPDATE (1.None.None)
UPDATE FND_OAM_METALINK_CRED SET 
EMAIL_ADDRESS=nvl2(EMAIL_ADDRESS,per_drt_udf.overwrite_email(ROWID,'FND_OAM_METALINK_CRED','EMAIL_ADDRESS',l_person_id),EMAIL_ADDRESS),
METALINK_USER_ID=nvl2(METALINK_USER_ID,per_drt_udf.overwrite_email(ROWID,'FND_OAM_METALINK_CRED','METALINK_USER_ID',l_person_id),METALINK_USER_ID)
WHERE USER_ID = L_PERSON_ID;

-- UPDATE (1.None.None)
UPDATE WF_NOTIFICATION_ATTRIBUTES SET 
TEXT_VALUE=nvl2(TEXT_VALUE,PER_DRT_UDF.overwrite_name(ROWID,'WF_NOTIFICATION_ATTRIBUTES','TEXT_VALUE',l_person_id),TEXT_VALUE)
WHERE TEXT_VALUE IN (SELECT USER_NAME FROM FND_USER WHERE USER_ID = L_PERSON_ID) AND NAME IN (SELECT NAME FROM WF_MESSAGE_ATTRIBUTES WHERE TYPE = 'ROLE');

-- UPDATE (1.None.None)
UPDATE WF_ITEM_ATTRIBUTES SET 
TEXT_DEFAULT=nvl2(TEXT_DEFAULT,PER_DRT_UDF.overwrite_name(ROWID,'WF_ITEM_ATTRIBUTES','TEXT_DEFAULT',l_person_id),TEXT_DEFAULT)
WHERE TEXT_DEFAULT IN (SELECT USER_NAME FROM FND_USER WHERE USER_ID = L_PERSON_ID);

-- UPDATE (1.None.None)
UPDATE EGO_PUB_WS_PARAMS SET 
FND_USER_NAME=nvl2(FND_USER_NAME,NULL,FND_USER_NAME)
WHERE FND_USER_NAME IN (SELECT FND_USER_NAME FROM FND_USER WHERE USER_ID = L_PERSON_ID);

-- UPDATE (1.None.None)
UPDATE PON_NEG_TEAM_MEMBERS SET 
USER_NAME=nvl2(USER_NAME,NULL,USER_NAME)
WHERE USER_NAME IN (SELECT USER_NAME FROM FND_USER WHERE USER_ID = L_PERSON_ID);

-- UPDATE (1.None.None)
UPDATE PV_PARTY_NOTIFICATIONS SET 
USER_NAME=nvl2(USER_NAME,'XXXXXXX',USER_NAME)
WHERE USER_NAME IN (SELECT USER_NAME FROM FND_USER WHERE PERSON_PARTY_ID = L_PERSON_ID);

-- UPDATE (1.None.None)
UPDATE WF_ITEM_ACTIVITY_STATUSES SET 
ASSIGNED_USER=nvl2(ASSIGNED_USER,PER_DRT_UDF.overwrite_name(ROWID,'WF_ITEM_ACTIVITY_STATUSES','ASSIGNED_USER',l_person_id),ASSIGNED_USER)
WHERE ASSIGNED_USER IN (SELECT USER_NAME FROM FND_USER WHERE USER_ID = L_PERSON_ID);

-- UPDATE (1.None.None)
UPDATE WF_ROUTING_RULE_ATTRIBUTES SET 
TEXT_VALUE=nvl2(TEXT_VALUE,PER_DRT_UDF.overwrite_name(ROWID,'WF_ROUTING_RULE_ATTRIBUTES','TEXT_VALUE',l_person_id),TEXT_VALUE)
WHERE TEXT_VALUE IN (SELECT USER_NAME FROM FND_USER WHERE USER_ID = L_PERSON_ID);

-- UPDATE (1.None.None)
UPDATE WIP_EAM_WORK_REQUESTS SET 
E_MAIL=nvl2(E_MAIL,per_drt_rules.name2mail(ROWID,'WIP_EAM_WORK_REQUESTS','E_MAIL',l_person_id),E_MAIL),
PHONE_NUMBER=nvl2(PHONE_NUMBER,per_drt_udf.overwrite_phone(ROWID,'WIP_EAM_WORK_REQUESTS','PHONE_NUMBER',l_person_id),PHONE_NUMBER)
WHERE CREATED_BY IN (SELECT USER_ID FROM FND_USER WHERE USER_ID = L_PERSON_ID);

-- UPDATE (1.None.None)
UPDATE GHR_PD_ROUTING_HISTORY SET 
USER_NAME_EMP_FIRST_NAME=nvl2(USER_NAME_EMP_FIRST_NAME,per_drt_rules.ranstr(10,20),USER_NAME_EMP_FIRST_NAME),
USER_NAME_EMP_LAST_NAME=nvl2(USER_NAME_EMP_LAST_NAME,per_drt_rules.ranstr(10,20),USER_NAME_EMP_LAST_NAME),
USER_NAME_EMP_MIDDLE_NAMES=nvl2(USER_NAME_EMP_MIDDLE_NAMES,per_drt_rules.ranstr(10,10),USER_NAME_EMP_MIDDLE_NAMES)
WHERE USER_NAME_EMPLOYEE_ID = L_PERSON_ID;

-- UPDATE (1.None.None)
UPDATE GHR_PA_ROUTING_HISTORY SET 
USER_NAME_EMP_FIRST_NAME=nvl2(USER_NAME_EMP_FIRST_NAME,per_drt_rules.ranstr(10,20),USER_NAME_EMP_FIRST_NAME),
USER_NAME_EMP_LAST_NAME=nvl2(USER_NAME_EMP_LAST_NAME,per_drt_rules.ranstr(10,20),USER_NAME_EMP_LAST_NAME),
USER_NAME_EMP_MIDDLE_NAMES=nvl2(USER_NAME_EMP_MIDDLE_NAMES,per_drt_rules.ranstr(10,10),USER_NAME_EMP_MIDDLE_NAMES)
WHERE USER_NAME_EMPLOYEE_ID = L_PERSON_ID;

-- UPDATE (1.None.None)
UPDATE WF_COMMENTS SET 
TO_ROLE=nvl2(TO_ROLE,PER_DRT_UDF.overwrite_name(ROWID,'WF_COMMENTS','TO_ROLE',l_person_id),TO_ROLE),
TO_USER=nvl2(TO_USER,per_drt_rules.ranstr(1,360),TO_USER)
WHERE TO_ROLE IN (SELECT USER_NAME FROM FND_USER WHERE USER_ID = L_PERSON_ID)
;

-- UPDATE (1.None.None)
UPDATE WF_COMMENTS SET 
PROXY_ROLE=nvl2(PROXY_ROLE,PER_DRT_UDF.overwrite_name(ROWID,'WF_COMMENTS','PROXY_ROLE',l_person_id),PROXY_ROLE)
WHERE PROXY_ROLE IN (SELECT USER_NAME FROM FND_USER WHERE USER_ID = L_PERSON_ID)
;

-- UPDATE (1.None.None)
UPDATE WF_ITEM_ACTIVITY_STATUSES SET 
PERFORMED_BY=nvl2(PERFORMED_BY,PER_DRT_UDF.overwrite_name(ROWID,'WF_ITEM_ACTIVITY_STATUSES','PERFORMED_BY',l_person_id),PERFORMED_BY)
WHERE PERFORMED_BY IN (SELECT USER_NAME FROM FND_USER WHERE USER_ID = L_PERSON_ID)
;

-- UPDATE (1.None.None)
UPDATE WF_ITEM_ACTIVITY_STATUSES_H SET 
PERFORMED_BY=nvl2(PERFORMED_BY,PER_DRT_UDF.overwrite_name(ROWID,'WF_ITEM_ACTIVITY_STATUSES_H','PERFORMED_BY',l_person_id),PERFORMED_BY)
WHERE PERFORMED_BY IN (SELECT USER_NAME FROM FND_USER WHERE USER_ID = L_PERSON_ID)
;

-- UPDATE (1.None.None)
UPDATE WF_NOTIFICATIONS SET 
MORE_INFO_ROLE=nvl2(MORE_INFO_ROLE,PER_DRT_UDF.overwrite_name(ROWID,'WF_NOTIFICATIONS','MORE_INFO_ROLE',l_person_id),MORE_INFO_ROLE)
WHERE MORE_INFO_ROLE IN (SELECT USER_NAME FROM FND_USER WHERE USER_ID = L_PERSON_ID)
;

-- UPDATE (1.None.None)
UPDATE WF_NOTIFICATIONS SET 
RECIPIENT_ROLE=nvl2(RECIPIENT_ROLE,PER_DRT_UDF.overwrite_name(ROWID,'WF_NOTIFICATIONS','RECIPIENT_ROLE',l_person_id),RECIPIENT_ROLE),
TO_USER=nvl2(TO_USER,per_drt_rules.ranstr(1,320),TO_USER)
WHERE RECIPIENT_ROLE IN (SELECT USER_NAME FROM FND_USER WHERE USER_ID = L_PERSON_ID);

-- UPDATE (1.None.None)
UPDATE WF_NOTIFICATIONS SET 
ORIGINAL_RECIPIENT=nvl2(ORIGINAL_RECIPIENT,PER_DRT_UDF.overwrite_name(ROWID,'WF_NOTIFICATIONS','ORIGINAL_RECIPIENT',l_person_id),ORIGINAL_RECIPIENT)
WHERE ORIGINAL_RECIPIENT IN (SELECT USER_NAME FROM FND_USER WHERE USER_ID = L_PERSON_ID);

-- UPDATE (1.None.None)
UPDATE WF_NOTIFICATIONS SET 
RESPONDER=nvl2(RESPONDER,PER_DRT_UDF.overwrite_name(ROWID,'WF_NOTIFICATIONS','RESPONDER',l_person_id),RESPONDER)
WHERE RESPONDER IN (SELECT USER_NAME FROM FND_USER WHERE USER_ID = L_PERSON_ID)
;

-- UPDATE (1.None.None)
UPDATE WF_ROUTING_RULES SET 
ACTION_ARGUMENT=nvl2(ACTION_ARGUMENT,PER_DRT_UDF.overwrite_name(ROWID,'WF_ROUTING_RULES','ACTION_ARGUMENT',l_person_id),ACTION_ARGUMENT)
WHERE ACTION_ARGUMENT IN (SELECT USER_NAME FROM FND_USER WHERE USER_ID = L_PERSON_ID)
;

-- UPDATE (1.None.None)
UPDATE WF_WORKLIST_DEFINITIONS SET 
WHERE_FROM=nvl2(WHERE_FROM,PER_DRT_UDF.overwrite_name(ROWID,'WF_WORKLIST_DEFINITIONS','WHERE_FROM',l_person_id),WHERE_FROM)
WHERE WHERE_FROM IN (SELECT USER_NAME FROM FND_USER WHERE USER_ID = L_PERSON_ID)
;

-- UPDATE (1.None.None)
UPDATE WF_ACTIVITY_ATTR_VALUES SET 
TEXT_VALUE=nvl2(TEXT_VALUE,PER_DRT_UDF.overwrite_name(ROWID,'WF_ACTIVITY_ATTR_VALUES','TEXT_VALUE',l_person_id),TEXT_VALUE)
WHERE TEXT_VALUE IN (SELECT USER_NAME FROM FND_USER WHERE USER_ID = L_PERSON_ID) AND VALUE_TYPE = 'CONSTANT' AND NAME IN (SELECT NAME FROM WF_ACTIVITY_ATTRIBUTES WHERE TYPE = 'ROLE');

-- UPDATE (1.None.None)
UPDATE WF_WORKLIST_DEFINITIONS SET 
USERNAME=nvl2(USERNAME,PER_DRT_UDF.overwrite_name(ROWID,'WF_WORKLIST_DEFINITIONS','USERNAME',l_person_id),USERNAME)
WHERE USERNAME IN (SELECT USER_NAME FROM FND_USER WHERE USER_ID = L_PERSON_ID)
;

-- UPDATE (1.None.None)
UPDATE WF_WORKLIST_COL_DEFINITIONS SET 
USERNAME=nvl2(USERNAME,PER_DRT_UDF.overwrite_name(ROWID,'WF_WORKLIST_COL_DEFINITIONS','USERNAME',l_person_id),USERNAME)
WHERE USERNAME IN (SELECT USER_NAME FROM FND_USER WHERE USER_ID = L_PERSON_ID);

-- UPDATE (1.None.None)
UPDATE FND_OAM_BIZEX_SUBSCRIP SET 
ROLE_ID=nvl2(ROLE_ID,per_drt_udf.overwrite_name(ROWID,'FND_OAM_BIZEX_SUBSCRIP','ROLE_ID',l_person_id),ROLE_ID)
WHERE ROLE_ID = (SELECT NAME FROM WF_ROLES, FND_USER WHERE ORIG_SYSTEM IN ('FND_USR','PER') AND NAME = USER_NAME AND USER_ID = L_PERSON_ID);

-- UPDATE (1.None.None)
UPDATE WF_ITEMS SET 
OWNER_ROLE=nvl2(OWNER_ROLE,PER_DRT_UDF.overwrite_name(ROWID,'WF_ITEMS','OWNER_ROLE',l_person_id),OWNER_ROLE)
WHERE OWNER_ROLE IN (SELECT USER_NAME FROM FND_USER WHERE USER_ID = L_PERSON_ID);

-- UPDATE (1.None.None)
UPDATE WF_ITEM_ACTIVITY_STATUSES_H SET 
ASSIGNED_USER=nvl2(ASSIGNED_USER,PER_DRT_UDF.overwrite_name(ROWID,'WF_ITEM_ACTIVITY_STATUSES_H','ASSIGNED_USER',l_person_id),ASSIGNED_USER)
WHERE ASSIGNED_USER IN (SELECT USER_NAME FROM FND_USER WHERE USER_ID = L_PERSON_ID)
;

-- UPDATE (1.None.None)
UPDATE WF_NOTIFICATIONS SET 
FROM_ROLE=nvl2(FROM_ROLE,PER_DRT_UDF.overwrite_name(ROWID,'WF_NOTIFICATIONS','FROM_ROLE',l_person_id),FROM_ROLE),
FROM_USER=nvl2(FROM_USER,per_drt_rules.ranstr(1,320),FROM_USER)
WHERE FROM_ROLE IN (SELECT USER_NAME FROM FND_USER WHERE USER_ID = L_PERSON_ID)
;

-- UPDATE (1.None.None)
UPDATE WF_ITEM_ATTRIBUTE_VALUES SET 
TEXT_VALUE=nvl2(TEXT_VALUE,PER_DRT_UDF.overwrite_name(ROWID,'WF_ITEM_ATTRIBUTE_VALUES','TEXT_VALUE',l_person_id),TEXT_VALUE)
WHERE TEXT_VALUE IN (SELECT USER_NAME FROM FND_USER WHERE USER_ID = L_PERSON_ID);

-- UPDATE (1.None.None)
UPDATE WF_DIG_CERTS SET 
CERT=nvl2(CERT,PER_DRT_UDF.overwrite_name(ROWID,'WF_DIG_CERTS','CERT',l_person_id),CERT),
FINGERPRINT=nvl2(FINGERPRINT,PER_DRT_UDF.overwrite_name(ROWID,'WF_DIG_CERTS','FINGERPRINT',l_person_id),FINGERPRINT)
WHERE FINGERPRINT IN (SELECT USER_NAME FROM FND_USER WHERE USER_ID = L_PERSON_ID) OR CERT LIKE (SELECT USER_NAME FROM FND_USER WHERE USER_ID = L_PERSON_ID);

-- UPDATE (1.None.None)
UPDATE WF_COMMENTS SET 
FROM_ROLE=nvl2(FROM_ROLE,PER_DRT_UDF.overwrite_name(ROWID,'WF_COMMENTS','FROM_ROLE',l_person_id),FROM_ROLE),
FROM_USER=nvl2(FROM_USER,per_drt_rules.ranstr(1,360),FROM_USER)
WHERE FROM_ROLE IN (SELECT USER_NAME FROM FND_USER WHERE USER_ID = L_PERSON_ID)
;

-- UPDATE (1.None.None)
UPDATE WF_ROUTING_RULES SET 
ROLE=nvl2(ROLE,PER_DRT_UDF.overwrite_name(ROWID,'WF_ROUTING_RULES','ROLE',l_person_id),ROLE)
WHERE ROLE IN (SELECT USER_NAME FROM FND_USER WHERE USER_ID = L_PERSON_ID)
;

-- UPDATE (1.None.None)
UPDATE WF_PROCESS_ACTIVITIES SET 
PERFORM_ROLE=nvl2(PERFORM_ROLE,PER_DRT_UDF.overwrite_name(ROWID,'WF_PROCESS_ACTIVITIES','PERFORM_ROLE',l_person_id),PERFORM_ROLE)
WHERE PERFORM_ROLE IN (SELECT USER_NAME FROM FND_USER WHERE USER_ID = L_PERSON_ID) AND PERFORM_ROLE_TYPE = 'CONSTANT';

-- UPDATE (1.None.None)
UPDATE FND_SOA_REQUEST SET 
IP_ADDRESS=nvl2(IP_ADDRESS,'0.0.0.0',IP_ADDRESS)
WHERE USER_ID IN (SELECT USER_ID FROM FND_USER WHERE USER_ID = L_PERSON_ID);

-- UPDATE (1.None.None)
UPDATE WF_MESSAGE_ATTRIBUTES SET 
TEXT_DEFAULT=nvl2(TEXT_DEFAULT,PER_DRT_UDF.overwrite_name(ROWID,'WF_MESSAGE_ATTRIBUTES','TEXT_DEFAULT',l_person_id),TEXT_DEFAULT)
WHERE TEXT_DEFAULT IN (SELECT USER_NAME FROM FND_USER WHERE USER_ID = L_PERSON_ID) AND TYPE = 'ROLE' AND VALUE_TYPE = 'CONSTANT';

END;

/
