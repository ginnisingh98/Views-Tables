--------------------------------------------------------
--  DDL for Procedure REMOVE_TCA_PARTY
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "APPS"."REMOVE_TCA_PARTY" (l_person_id number) AS
BEGIN

-- DELETE Statement
DELETE FROM HZ_IMP_RELSHIPS_INT
WHERE (SUB_ORIG_SYSTEM_REFERENCE IN (SELECT ORIG_SYSTEM_REFERENCE FROM HZ_ORIG_SYS_REFERENCES OSR,HZ_IMP_RELSHIPS_INT IRI,HZ_RELATIONSHIPS HR WHERE IRI.SUB_ORIG_SYSTEM_REFERENCE = ORIG_SYSTEM_REFERENCE AND IRI.SUB_ORIG_SYSTEM = ORIG_SYSTEM AND OWNER_TABLE_ID = SUBJECT_ID AND OWNER_TABLE_NAME = 'HZ_PARTIES' AND SUBJECT_ID = L_PERSON_ID AND SUBJECT_TABLE_NAME = 'HZ_PARTIES' AND SUBJECT_TYPE = 'PERSON' ) OR OBJ_ORIG_SYSTEM_REFERENCE IN (SELECT ORIG_SYSTEM_REFERENCE FROM HZ_ORIG_SYS_REFERENCES OSR,HZ_IMP_RELSHIPS_INT IRI,HZ_RELATIONSHIPS HR WHERE IRI.OBJ_ORIG_SYSTEM_REFERENCE = ORIG_SYSTEM_REFERENCE AND IRI.OBJ_ORIG_SYSTEM = ORIG_SYSTEM AND OWNER_TABLE_ID = OBJECT_ID AND OWNER_TABLE_NAME = 'HZ_PARTIES' AND OBJECT_ID = L_PERSON_ID AND OBJECT_TABLE_NAME = 'HZ_PARTIES' AND OBJECT_TYPE = 'PERSON' ));

-- DELETE Statement
DELETE FROM HZ_IMP_PARTIES_INT
WHERE PARTY_ORIG_SYSTEM_REFERENCE IN (SELECT PARTY_ORIG_SYSTEM_REFERENCE FROM HZ_IMP_PARTIES_INT IPI,HZ_PARTIES HP,HZ_ORIG_SYS_REFERENCES OSR WHERE IPI.PARTY_ORIG_SYSTEM_REFERENCE = OSR.ORIG_SYSTEM_REFERENCE AND  IPI.PARTY_ORIG_SYSTEM = OSR.ORIG_SYSTEM AND OSR.OWNER_TABLE_ID = HP.PARTY_ID AND OSR.OWNER_TABLE_NAME = 'HZ_PARTIES' AND HP.PARTY_ID = L_PERSON_ID   );

-- DELETE Statement
DELETE FROM HZ_IMP_CREDITRTNGS_INT
WHERE PARTY_ORIG_SYSTEM_REFERENCE IN (SELECT PARTY_ORIG_SYSTEM_REFERENCE FROM HZ_IMP_CREDITRTNGS_INT IPI,HZ_PARTIES HP,HZ_ORIG_SYS_REFERENCES OSR WHERE IPI.PARTY_ORIG_SYSTEM_REFERENCE = OSR.ORIG_SYSTEM_REFERENCE AND  IPI.PARTY_ORIG_SYSTEM = OSR.ORIG_SYSTEM AND OSR.OWNER_TABLE_ID = HP.PARTY_ID AND OSR.OWNER_TABLE_NAME = 'HZ_PARTIES' AND HP.PARTY_ID = L_PERSON_ID   );

-- DELETE Statement
DELETE FROM HZ_IMP_FINNUMBERS_INT
WHERE PARTY_ORIG_SYSTEM_REFERENCE IN (SELECT PARTY_ORIG_SYSTEM_REFERENCE FROM HZ_IMP_FINNUMBERS_INT IPI,HZ_PARTIES HP,HZ_ORIG_SYS_REFERENCES OSR WHERE IPI.PARTY_ORIG_SYSTEM_REFERENCE = OSR.ORIG_SYSTEM_REFERENCE AND  IPI.PARTY_ORIG_SYSTEM = OSR.ORIG_SYSTEM AND OSR.OWNER_TABLE_ID = HP.PARTY_ID AND OSR.OWNER_TABLE_NAME = 'HZ_PARTIES' AND HP.PARTY_ID = L_PERSON_ID   );

-- DELETE Statement
DELETE FROM HZ_IMP_FINREPORTS_INT
WHERE PARTY_ORIG_SYSTEM_REFERENCE IN (SELECT PARTY_ORIG_SYSTEM_REFERENCE FROM HZ_IMP_FINREPORTS_INT IPI,HZ_PARTIES HP,HZ_ORIG_SYS_REFERENCES OSR WHERE IPI.PARTY_ORIG_SYSTEM_REFERENCE = OSR.ORIG_SYSTEM_REFERENCE AND  IPI.PARTY_ORIG_SYSTEM = OSR.ORIG_SYSTEM AND OSR.OWNER_TABLE_ID = HP.PARTY_ID AND OSR.OWNER_TABLE_NAME = 'HZ_PARTIES' AND HP.PARTY_ID = L_PERSON_ID   );

-- UPDATE (1.None.None)
UPDATE HZ_PARTIES SET 
ADDRESS1=nvl2(ADDRESS1,'**********',ADDRESS1),
ADDRESS2=nvl2(ADDRESS2,NULL,ADDRESS2),
ADDRESS3=nvl2(ADDRESS3,NULL,ADDRESS3),
ADDRESS4=nvl2(ADDRESS4,NULL,ADDRESS4),
EMAIL_ADDRESS=nvl2(EMAIL_ADDRESS,per_drt_rules.name2mail(ROWID,'HZ_PARTIES','EMAIL_ADDRESS',l_person_id),EMAIL_ADDRESS),
JGZZ_FISCAL_CODE=nvl2(JGZZ_FISCAL_CODE,per_drt_udf.overwrite_id_number(ROWID,'HZ_PARTIES','JGZZ_FISCAL_CODE',l_person_id),JGZZ_FISCAL_CODE),
KNOWN_AS=nvl2(KNOWN_AS,NULL,KNOWN_AS),
KNOWN_AS2=nvl2(KNOWN_AS2,NULL,KNOWN_AS2),
KNOWN_AS3=nvl2(KNOWN_AS3,NULL,KNOWN_AS3),
KNOWN_AS4=nvl2(KNOWN_AS4,NULL,KNOWN_AS4),
KNOWN_AS5=nvl2(KNOWN_AS5,NULL,KNOWN_AS5),
PARTY_NAME=nvl2(PARTY_NAME,per_drt_udf.overwrite_name(ROWID,'HZ_PARTIES','PARTY_NAME',l_person_id),PARTY_NAME),
PARTY_NUMBER=nvl2(PARTY_NUMBER,per_drt_udf.generate_unique_string(ROWID,'HZ_PARTIES','PARTY_NUMBER',l_person_id),PARTY_NUMBER),
PERSON_FIRST_NAME=nvl2(PERSON_FIRST_NAME,per_drt_udf.overwrite_name(ROWID,'HZ_PARTIES','PERSON_FIRST_NAME',l_person_id),PERSON_FIRST_NAME),
PERSON_FIRST_NAME_PHONETIC=nvl2(PERSON_FIRST_NAME_PHONETIC,per_drt_udf.overwrite_name(ROWID,'HZ_PARTIES','PERSON_FIRST_NAME_PHONETIC',l_person_id),PERSON_FIRST_NAME_PHONETIC),
PERSON_IDENTIFIER=nvl2(PERSON_IDENTIFIER,per_drt_udf.overwrite_id_number(ROWID,'HZ_PARTIES','PERSON_IDENTIFIER',l_person_id),PERSON_IDENTIFIER),
PERSON_LAST_NAME=nvl2(PERSON_LAST_NAME,per_drt_udf.overwrite_name(ROWID,'HZ_PARTIES','PERSON_LAST_NAME',l_person_id),PERSON_LAST_NAME),
PERSON_LAST_NAME_PHONETIC=nvl2(PERSON_LAST_NAME_PHONETIC,per_drt_udf.overwrite_name(ROWID,'HZ_PARTIES','PERSON_LAST_NAME_PHONETIC',l_person_id),PERSON_LAST_NAME_PHONETIC),
PERSON_MIDDLE_NAME=nvl2(PERSON_MIDDLE_NAME,per_drt_udf.overwrite_name(ROWID,'HZ_PARTIES','PERSON_MIDDLE_NAME',l_person_id),PERSON_MIDDLE_NAME),
PERSON_PREVIOUS_LAST_NAME=nvl2(PERSON_PREVIOUS_LAST_NAME,NULL,PERSON_PREVIOUS_LAST_NAME),
POSTAL_CODE=nvl2(POSTAL_CODE,NULL,POSTAL_CODE),
PRIMARY_PHONE_EXTENSION=nvl2(PRIMARY_PHONE_EXTENSION,NULL,PRIMARY_PHONE_EXTENSION),
PRIMARY_PHONE_NUMBER=nvl2(PRIMARY_PHONE_NUMBER,per_drt_udf.overwrite_phone(ROWID,'HZ_PARTIES','PRIMARY_PHONE_NUMBER',l_person_id),PRIMARY_PHONE_NUMBER),
TAX_REFERENCE=nvl2(TAX_REFERENCE,per_drt_udf.overwrite_id_number(ROWID,'HZ_PARTIES','TAX_REFERENCE',l_person_id),TAX_REFERENCE),
URL=nvl2(URL,per_drt_udf.overwrite_website(ROWID,'HZ_PARTIES','URL',l_person_id),URL)
WHERE PARTY_ID = L_PERSON_ID OR (PARTY_ID IN (SELECT PARTY_ID FROM HZ_RELATIONSHIPS WHERE SUBJECT_ID = L_PERSON_ID AND SUBJECT_TABLE_NAME = 'HZ_PARTIES' AND SUBJECT_TYPE = 'PERSON' ));

-- UPDATE (1.None.None)
UPDATE HZ_PERSON_PROFILES SET 
DATE_OF_BIRTH=nvl2(DATE_OF_BIRTH,NULL,DATE_OF_BIRTH),
DATE_OF_DEATH=nvl2(DATE_OF_DEATH,NULL,DATE_OF_DEATH),
JGZZ_FISCAL_CODE=nvl2(JGZZ_FISCAL_CODE,per_drt_udf.overwrite_id_number(ROWID,'HZ_PERSON_PROFILES','JGZZ_FISCAL_CODE',l_person_id),JGZZ_FISCAL_CODE),
KNOWN_AS=nvl2(KNOWN_AS,NULL,KNOWN_AS),
KNOWN_AS2=nvl2(KNOWN_AS2,NULL,KNOWN_AS2),
KNOWN_AS3=nvl2(KNOWN_AS3,NULL,KNOWN_AS3),
KNOWN_AS4=nvl2(KNOWN_AS4,NULL,KNOWN_AS4),
KNOWN_AS5=nvl2(KNOWN_AS5,NULL,KNOWN_AS5),
LAST_KNOWN_GPS=nvl2(LAST_KNOWN_GPS,NULL,LAST_KNOWN_GPS),
MARITAL_STATUS=nvl2(MARITAL_STATUS,NULL,MARITAL_STATUS),
MARITAL_STATUS_EFFECTIVE_DATE=nvl2(MARITAL_STATUS_EFFECTIVE_DATE,NULL,MARITAL_STATUS_EFFECTIVE_DATE),
MIDDLE_NAME_PHONETIC=nvl2(MIDDLE_NAME_PHONETIC,per_drt_udf.overwrite_name(ROWID,'HZ_PERSON_PROFILES','MIDDLE_NAME_PHONETIC',l_person_id),MIDDLE_NAME_PHONETIC),
PERSONAL_INCOME=nvl2(PERSONAL_INCOME,NULL,PERSONAL_INCOME),
PERSON_FIRST_NAME=nvl2(PERSON_FIRST_NAME,per_drt_udf.overwrite_name(ROWID,'HZ_PERSON_PROFILES','PERSON_FIRST_NAME',l_person_id),PERSON_FIRST_NAME),
PERSON_FIRST_NAME_PHONETIC=nvl2(PERSON_FIRST_NAME_PHONETIC,per_drt_udf.overwrite_name(ROWID,'HZ_PERSON_PROFILES','PERSON_FIRST_NAME_PHONETIC',l_person_id),PERSON_FIRST_NAME_PHONETIC),
PERSON_IDENTIFIER=nvl2(PERSON_IDENTIFIER,per_drt_udf.overwrite_id_number(ROWID,'HZ_PERSON_PROFILES','PERSON_IDENTIFIER',l_person_id),PERSON_IDENTIFIER),
PERSON_INITIALS=nvl2(PERSON_INITIALS,NULL,PERSON_INITIALS),
PERSON_LAST_NAME=nvl2(PERSON_LAST_NAME,per_drt_udf.overwrite_name(ROWID,'HZ_PERSON_PROFILES','PERSON_LAST_NAME',l_person_id),PERSON_LAST_NAME),
PERSON_LAST_NAME_PHONETIC=nvl2(PERSON_LAST_NAME_PHONETIC,per_drt_udf.overwrite_name(ROWID,'HZ_PERSON_PROFILES','PERSON_LAST_NAME_PHONETIC',l_person_id),PERSON_LAST_NAME_PHONETIC),
PERSON_MIDDLE_NAME=nvl2(PERSON_MIDDLE_NAME,per_drt_udf.overwrite_name(ROWID,'HZ_PERSON_PROFILES','PERSON_MIDDLE_NAME',l_person_id),PERSON_MIDDLE_NAME),
PERSON_NAME=nvl2(PERSON_NAME,per_drt_udf.overwrite_name(ROWID,'HZ_PERSON_PROFILES','PERSON_NAME',l_person_id),PERSON_NAME),
PERSON_NAME_PHONETIC=nvl2(PERSON_NAME_PHONETIC,per_drt_udf.overwrite_name(ROWID,'HZ_PERSON_PROFILES','PERSON_NAME_PHONETIC',l_person_id),PERSON_NAME_PHONETIC),
PERSON_NAME_SUFFIX=nvl2(PERSON_NAME_SUFFIX,NULL,PERSON_NAME_SUFFIX),
PERSON_PREVIOUS_LAST_NAME=nvl2(PERSON_PREVIOUS_LAST_NAME,per_drt_udf.overwrite_name(ROWID,'HZ_PERSON_PROFILES','PERSON_PREVIOUS_LAST_NAME',l_person_id),PERSON_PREVIOUS_LAST_NAME),
PLACE_OF_BIRTH=nvl2(PLACE_OF_BIRTH,NULL,PLACE_OF_BIRTH),
TAX_REFERENCE=nvl2(TAX_REFERENCE,per_drt_udf.overwrite_id_number(ROWID,'HZ_PERSON_PROFILES','TAX_REFERENCE',l_person_id),TAX_REFERENCE)
WHERE PARTY_ID = L_PERSON_ID;

-- UPDATE (1.None.None)
UPDATE HZ_CITIZENSHIP SET 
BIRTH_OR_SELECTED=nvl2(BIRTH_OR_SELECTED,NULL,BIRTH_OR_SELECTED),
DOCUMENT_REFERENCE=nvl2(DOCUMENT_REFERENCE,per_drt_udf.overwrite_id_number(ROWID,'HZ_CITIZENSHIP','DOCUMENT_REFERENCE',l_person_id),DOCUMENT_REFERENCE)
WHERE PARTY_ID = L_PERSON_ID;

-- UPDATE (1.None.None)
UPDATE HZ_PARTY_SITES SET 
ADDRESSEE=nvl2(ADDRESSEE,NULL,ADDRESSEE),
MAILSTOP=nvl2(MAILSTOP,NULL,MAILSTOP),
PARTY_SITE_NAME=nvl2(PARTY_SITE_NAME,NULL,PARTY_SITE_NAME),
PARTY_SITE_NUMBER=nvl2(PARTY_SITE_NUMBER,per_drt_udf.generate_unique_string(ROWID,'HZ_PARTY_SITES','PARTY_SITE_NUMBER',l_person_id),PARTY_SITE_NUMBER)
WHERE PARTY_ID = L_PERSON_ID OR (PARTY_ID IN (SELECT PARTY_ID FROM HZ_RELATIONSHIPS WHERE SUBJECT_ID = L_PERSON_ID AND SUBJECT_TABLE_NAME = 'HZ_PARTIES' AND SUBJECT_TYPE = 'PERSON' ));

-- DELETE Statement
DELETE FROM HZ_IMP_CLASSIFICS_INT
WHERE PARTY_ORIG_SYSTEM_REFERENCE IN (SELECT PARTY_ORIG_SYSTEM_REFERENCE FROM HZ_IMP_CLASSIFICS_INT IPI,HZ_PARTIES HP,HZ_ORIG_SYS_REFERENCES OSR WHERE IPI.PARTY_ORIG_SYSTEM_REFERENCE = OSR.ORIG_SYSTEM_REFERENCE AND  IPI.PARTY_ORIG_SYSTEM = OSR.ORIG_SYSTEM AND OSR.OWNER_TABLE_ID = HP.PARTY_ID AND OSR.OWNER_TABLE_NAME = 'HZ_PARTIES' AND HP.PARTY_ID = L_PERSON_ID   );

-- UPDATE (1.None.None)
UPDATE WSH_LOCATIONS SET 
ADDRESS1=nvl2(ADDRESS1,'**********',ADDRESS1),
ADDRESS2=nvl2(ADDRESS2,NULL,ADDRESS2),
ADDRESS3=nvl2(ADDRESS3,NULL,ADDRESS3),
ADDRESS4=nvl2(ADDRESS4,NULL,ADDRESS4),
GEOMETRY=nvl2(GEOMETRY,NULL,GEOMETRY),
POSTAL_CODE=nvl2(POSTAL_CODE,NULL,POSTAL_CODE)
WHERE WSH_LOCATION_ID IN (SELECT LOCATION_ID FROM HZ_PARTY_SITES WHERE PARTY_ID = L_PERSON_ID OR (PARTY_ID IN (SELECT PARTY_ID FROM HZ_RELATIONSHIPS 
WHERE SUBJECT_ID = L_PERSON_ID AND SUBJECT_TABLE_NAME = 'HZ_PARTIES' AND SUBJECT_TYPE = 'PERSON' )) );

-- UPDATE (1.None.None)
UPDATE POS_ADDRESS_REQUESTS SET 
ADDRESS_LINE1=nvl2(ADDRESS_LINE1,'**********',ADDRESS_LINE1),
ADDRESS_LINE2=nvl2(ADDRESS_LINE2,'**********',ADDRESS_LINE2),
ADDRESS_LINE3=nvl2(ADDRESS_LINE3,'**********',ADDRESS_LINE3),
ADDRESS_LINE4=nvl2(ADDRESS_LINE4,'**********',ADDRESS_LINE4),
EMAIL_ADDRESS=nvl2(EMAIL_ADDRESS,per_drt_udf.overwrite_email(ROWID,'POS_ADDRESS_REQUESTS','EMAIL_ADDRESS',l_person_id),EMAIL_ADDRESS),
PHONE_AREA_CODE=nvl2(PHONE_AREA_CODE,per_drt_rules.ranstr(3,3),PHONE_AREA_CODE),
PHONE_EXTENSION=nvl2(PHONE_EXTENSION,per_drt_rules.ranstr(5,5),PHONE_EXTENSION),
PHONE_NUMBER=nvl2(PHONE_NUMBER,per_drt_udf.overwrite_phone(ROWID,'POS_ADDRESS_REQUESTS','PHONE_NUMBER',l_person_id),PHONE_NUMBER)
WHERE MAPPING_ID IN (SELECT MAPPING_ID 
FROM POS_SUPPLIER_MAPPINGS
WHERE PARTY_ID IN (SELECT PARTY_ID FROM HZ_PARTIES 
WHERE PARTY_TYPE = 'PERSON' AND PARTY_ID = L_PERSON_ID));

-- UPDATE (1.None.None)
UPDATE POS_CONTACT_REQUESTS SET 
EMAIL_ADDRESS=nvl2(EMAIL_ADDRESS,per_drt_udf.overwrite_email(ROWID,'POS_CONTACT_REQUESTS','EMAIL_ADDRESS',l_person_id),EMAIL_ADDRESS),
FIRST_NAME=nvl2(FIRST_NAME,per_drt_udf.overwrite_name(ROWID,'POS_CONTACT_REQUESTS','FIRST_NAME',l_person_id),FIRST_NAME),
LAST_NAME=nvl2(LAST_NAME,per_drt_udf.overwrite_name(ROWID,'POS_CONTACT_REQUESTS','LAST_NAME',l_person_id),LAST_NAME),
MIDDLE_NAME=nvl2(MIDDLE_NAME,per_drt_udf.overwrite_name(ROWID,'POS_CONTACT_REQUESTS','MIDDLE_NAME',l_person_id),MIDDLE_NAME),
PHONE_AREA_CODE=nvl2(PHONE_AREA_CODE,per_drt_rules.ranstr(3,3),PHONE_AREA_CODE),
PHONE_EXTENSION=nvl2(PHONE_EXTENSION,per_drt_rules.ranstr(5,5),PHONE_EXTENSION),
PHONE_NUMBER=nvl2(PHONE_NUMBER,per_drt_udf.overwrite_phone(ROWID,'POS_CONTACT_REQUESTS','PHONE_NUMBER',l_person_id),PHONE_NUMBER)
WHERE MAPPING_ID IN (SELECT MAPPING_ID 
FROM POS_SUPPLIER_MAPPINGS
WHERE PARTY_ID IN (SELECT PARTY_ID FROM HZ_PARTIES 
WHERE PARTY_TYPE = 'PERSON' AND PARTY_ID = L_PERSON_ID));

-- UPDATE (1.None.None)
UPDATE POS_OSN_REQUESTS SET 
ISP_PASSWORD=nvl2(ISP_PASSWORD,'INVALID',ISP_PASSWORD),
ISP_USERNAME=nvl2(ISP_USERNAME,per_drt_udf.overwrite_name(ROWID,'POS_OSN_REQUESTS','ISP_USERNAME',l_person_id),ISP_USERNAME),
OSN_EMAIL=nvl2(OSN_EMAIL,per_drt_udf.overwrite_email(ROWID,'POS_OSN_REQUESTS','OSN_EMAIL',l_person_id),OSN_EMAIL),
OSN_USERNAME=nvl2(OSN_USERNAME,per_drt_udf.overwrite_name(ROWID,'POS_OSN_REQUESTS','OSN_USERNAME',l_person_id),OSN_USERNAME),
OSN_USER_FIRSTNAME=nvl2(OSN_USER_FIRSTNAME,per_drt_udf.overwrite_name(ROWID,'POS_OSN_REQUESTS','OSN_USER_FIRSTNAME',l_person_id),OSN_USER_FIRSTNAME),
OSN_USER_LASTNAME=nvl2(OSN_USER_LASTNAME,per_drt_udf.overwrite_name(ROWID,'POS_OSN_REQUESTS','OSN_USER_LASTNAME',l_person_id),OSN_USER_LASTNAME),
OSN_USER_MIDDLENAME=nvl2(OSN_USER_MIDDLENAME,per_drt_udf.overwrite_name(ROWID,'POS_OSN_REQUESTS','OSN_USER_MIDDLENAME',l_person_id),OSN_USER_MIDDLENAME),
OSN_USER_PHONE=nvl2(OSN_USER_PHONE,per_drt_udf.overwrite_phone(ROWID,'POS_OSN_REQUESTS','OSN_USER_PHONE',l_person_id),OSN_USER_PHONE)
WHERE ISP_USERNAME IN (SELECT USER_NAME FROM FND_USER WHERE PERSON_PARTY_ID = L_PERSON_ID);

-- UPDATE (1.None.None)
UPDATE POS_SUPPLIER_REGISTRATIONS SET 
ADDRESS_LINE1=nvl2(ADDRESS_LINE1,'**********',ADDRESS_LINE1),
ADDRESS_LINE2=nvl2(ADDRESS_LINE2,'**********',ADDRESS_LINE2),
ADDRESS_LINE3=nvl2(ADDRESS_LINE3,'**********',ADDRESS_LINE3),
ADDRESS_LINE4=nvl2(ADDRESS_LINE4,'**********',ADDRESS_LINE4),
DUNS_NUMBER=nvl2(DUNS_NUMBER,NULL,DUNS_NUMBER),
TAXPAYER_ID=nvl2(TAXPAYER_ID,per_drt_udf.overwrite_id_number(ROWID,'POS_SUPPLIER_REGISTRATIONS','TAXPAYER_ID',l_person_id),TAXPAYER_ID),
TAX_REGISTRATION_NUMBER=nvl2(TAX_REGISTRATION_NUMBER,per_drt_udf.overwrite_id_number(ROWID,'POS_SUPPLIER_REGISTRATIONS','TAX_REGISTRATION_NUMBER',l_person_id),TAX_REGISTRATION_NUMBER)
WHERE VENDOR_PARTY_ID IN (SELECT PARTY_ID FROM HZ_PARTIES WHERE PARTY_TYPE = 'PERSON' AND PARTY_ID = L_PERSON_ID);

-- UPDATE (1.None.None)
UPDATE FND_REGISTRATIONS SET 
ADDRESS1=nvl2(ADDRESS1,'**********',ADDRESS1),
ADDRESS2=nvl2(ADDRESS2,'**********',ADDRESS2),
EMAIL=nvl2(EMAIL,per_drt_udf.overwrite_email(ROWID,'FND_REGISTRATIONS','EMAIL',l_person_id),EMAIL),
FIRST_NAME=nvl2(FIRST_NAME,per_drt_udf.overwrite_name(ROWID,'FND_REGISTRATIONS','FIRST_NAME',l_person_id),FIRST_NAME),
LAST_NAME=nvl2(LAST_NAME,per_drt_udf.overwrite_name(ROWID,'FND_REGISTRATIONS','LAST_NAME',l_person_id),LAST_NAME),
MIDDLE_NAME=nvl2(MIDDLE_NAME,per_drt_udf.overwrite_name(ROWID,'FND_REGISTRATIONS','MIDDLE_NAME',l_person_id),MIDDLE_NAME),
PHONE=nvl2(PHONE,per_drt_udf.overwrite_phone(ROWID,'FND_REGISTRATIONS','PHONE',l_person_id),PHONE),
PHONE_AREA_CODE=nvl2(PHONE_AREA_CODE,per_drt_rules.ranstr(3,3),PHONE_AREA_CODE),
PHONE_EXTENSION=nvl2(PHONE_EXTENSION,per_drt_rules.ranstr(5,5),PHONE_EXTENSION),
POSTAL_CODE=nvl2(POSTAL_CODE,NULL,POSTAL_CODE)
WHERE APPLICATION_ID = 177 AND REGISTRATION_TYPE = 'POS_REG' AND REGISTRATION_STATUS = 'APPROVED' AND UPPER(REQUESTED_USER_NAME) IN (SELECT USER_NAME FROM FND_USER WHERE PERSON_PARTY_ID = L_PERSON_ID);

-- UPDATE (1.None.None)
UPDATE ZX_PARTY_TAX_PROFILE SET 
REP_REGISTRATION_NUMBER=nvl2(REP_REGISTRATION_NUMBER,per_drt_rules.rannum(11,11),REP_REGISTRATION_NUMBER)
WHERE PARTY_TYPE_CODE = 'THIRD_PARTY' AND REP_REGISTRATION_NUMBER IS NOT NULL AND PARTY_ID IN (SELECT PARTY_ID FROM HZ_PARTIES WHERE PARTY_ID = L_PERSON_ID);

-- UPDATE (1.None.None)
UPDATE WF_ITEM_ACTIVITY_STATUSES_H SET 
ASSIGNED_USER=nvl2(ASSIGNED_USER,PER_DRT_UDF.overwrite_name(ROWID,'WF_ITEM_ACTIVITY_STATUSES_H','ASSIGNED_USER',l_person_id),ASSIGNED_USER)
WHERE ASSIGNED_USER IN (SELECT NAME FROM WF_LOCAL_ROLES WHERE ORIG_SYSTEM = 'HZ_PARTY' AND ORIG_SYSTEM_ID IN (SELECT PARTY_ID FROM HZ_PARTIES WHERE PARTY_TYPE = 'PERSON' AND PARTY_ID = L_PERSON_ID))
;

-- UPDATE (1.None.None)
UPDATE WF_NOTIFICATIONS SET 
FROM_ROLE=nvl2(FROM_ROLE,PER_DRT_UDF.overwrite_name(ROWID,'WF_NOTIFICATIONS','FROM_ROLE',l_person_id),FROM_ROLE),
FROM_USER=nvl2(FROM_USER,per_drt_rules.ranstr(1,320),FROM_USER)
WHERE FROM_ROLE IN (SELECT NAME FROM WF_LOCAL_ROLES WHERE ORIG_SYSTEM = 'HZ_PARTY' AND ORIG_SYSTEM_ID IN (SELECT PARTY_ID FROM HZ_PARTIES WHERE PARTY_TYPE = 'PERSON' AND PARTY_ID = L_PERSON_ID))
;

-- UPDATE (1.None.None)
UPDATE WF_PROCESS_ACTIVITIES SET 
PERFORM_ROLE=nvl2(PERFORM_ROLE,PER_DRT_UDF.overwrite_name(ROWID,'WF_PROCESS_ACTIVITIES','PERFORM_ROLE',l_person_id),PERFORM_ROLE)
WHERE PERFORM_ROLE IN (SELECT NAME FROM WF_LOCAL_ROLES WHERE ORIG_SYSTEM = 'HZ_PARTY' AND ORIG_SYSTEM_ID IN (SELECT PARTY_ID FROM HZ_PARTIES WHERE PARTY_TYPE = 'PERSON' AND PARTY_ID = L_PERSON_ID)) AND PERFORM_ROLE_TYPE = 'CONSTANT'
;

-- UPDATE (1.None.None)
UPDATE WF_ROUTING_RULES SET 
ROLE=nvl2(ROLE,PER_DRT_UDF.overwrite_name(ROWID,'WF_ROUTING_RULES','ROLE',l_person_id),ROLE)
WHERE ROLE IN (SELECT NAME FROM WF_LOCAL_ROLES WHERE ORIG_SYSTEM = 'HZ_PARTY' AND ORIG_SYSTEM_ID IN (SELECT PARTY_ID FROM HZ_PARTIES WHERE PARTY_TYPE = 'PERSON' AND PARTY_ID = L_PERSON_ID))
;

-- UPDATE (1.None.None)
UPDATE WF_WORKLIST_COL_DEFINITIONS SET 
USERNAME=nvl2(USERNAME,PER_DRT_UDF.overwrite_name(ROWID,'WF_WORKLIST_COL_DEFINITIONS','USERNAME',l_person_id),USERNAME)
WHERE USERNAME IN (SELECT NAME FROM WF_LOCAL_ROLES WHERE ORIG_SYSTEM = 'HZ_PARTY' AND ORIG_SYSTEM_ID IN (SELECT PARTY_ID FROM HZ_PARTIES WHERE PARTY_TYPE = 'PERSON' AND PARTY_ID = L_PERSON_ID))
;

-- UPDATE (1.None.None)
UPDATE WF_WORKLIST_DEFINITIONS SET 
USERNAME=nvl2(USERNAME,PER_DRT_UDF.overwrite_name(ROWID,'WF_WORKLIST_DEFINITIONS','USERNAME',l_person_id),USERNAME)
WHERE USERNAME IN (SELECT NAME FROM WF_LOCAL_ROLES WHERE ORIG_SYSTEM = 'HZ_PARTY' AND ORIG_SYSTEM_ID IN (SELECT PARTY_ID FROM HZ_PARTIES WHERE PARTY_TYPE = 'PERSON' AND PARTY_ID = L_PERSON_ID));

-- UPDATE (1.None.None)
UPDATE WF_ACTIVITY_ATTRIBUTES SET 
TEXT_DEFAULT=nvl2(TEXT_DEFAULT,PER_DRT_UDF.overwrite_name(ROWID,'WF_ACTIVITY_ATTRIBUTES','TEXT_DEFAULT',l_person_id),TEXT_DEFAULT)
WHERE TEXT_DEFAULT IN (SELECT NAME FROM WF_LOCAL_ROLES WHERE ORIG_SYSTEM = 'HZ_PARTY' AND ORIG_SYSTEM_ID IN (SELECT PARTY_ID FROM HZ_PARTIES WHERE PARTY_TYPE = 'PERSON' AND PARTY_ID = L_PERSON_ID)) AND TYPE = 'ROLE' AND VALUE_TYPE = 'CONSTANT';

-- UPDATE (1.None.None)
UPDATE OKL_TRX_EXTENSION_B SET 
CUSTOMER_ACCOUNT_NUMBER=nvl2(CUSTOMER_ACCOUNT_NUMBER,per_drt_rules.ranstr(5,30),CUSTOMER_ACCOUNT_NUMBER),
CUSTOMER_NAME=nvl2(CUSTOMER_NAME,per_drt_udf.overwrite_name(ROWID,'OKL_TRX_EXTENSION_B','CUSTOMER_NAME',l_person_id),CUSTOMER_NAME)
WHERE CONTRACT_NUMBER IN (SELECT CONTRACT_NUMBER FROM OKC_K_HEADERS_ALL_B OKC,HZ_CUST_ACCOUNTS HCA, HZ_PARTIES HP WHERE HCA.CUST_ACCOUNT_ID=OKC.CUST_ACCT_ID AND HP.PARTY_ID=HCA.PARTY_ID AND HP.PARTY_ID=L_PERSON_ID);

-- UPDATE (1.None.None)
UPDATE OKL_TRX_CSH_RCPT_ALL_B SET 
ACCOUNT=nvl2(ACCOUNT,per_drt_rules.ranstr(5,240),ACCOUNT),
CUSTOMER_BANK_NAME=nvl2(CUSTOMER_BANK_NAME,per_drt_rules.ranstr(10,240),CUSTOMER_BANK_NAME)
WHERE ID IN (SELECT RCPT.RCT_ID_DETAILS FROM OKL_TXL_RCPT_APPS_ALL_B RCPT,OKC_K_HEADERS_ALL_B OKC,HZ_CUST_ACCOUNTS HCA, HZ_PARTIES HP WHERE RCPT.KHR_ID = OKC.ID AND HCA.CUST_ACCOUNT_ID=OKC.CUST_ACCT_ID AND HP.PARTY_ID=HCA.PARTY_ID AND HP.PARTY_ID=L_PERSON_ID);

-- UPDATE (1.None.None)
UPDATE OKL_QUOTE_PARTIES SET 
EMAIL_ADDRESS=nvl2(EMAIL_ADDRESS,per_drt_rules.name2mail(ROWID,'OKL_QUOTE_PARTIES','EMAIL_ADDRESS',l_person_id),EMAIL_ADDRESS)
WHERE PARTY_OBJECT1_ID1=L_PERSON_ID AND PARTY_JTOT_OBJECT1_CODE='OKX_PARTY';

-- UPDATE (1.None.None)
UPDATE OKL_PROPERTY_TAX_ALL_B SET 
ASSET_ADDRESS_1=nvl2(ASSET_ADDRESS_1,per_drt_rules.ranstr(10,250),ASSET_ADDRESS_1),
ASSET_ADDRESS_2=nvl2(ASSET_ADDRESS_2,per_drt_rules.ranstr(10,250),ASSET_ADDRESS_2),
ASSET_ADDRESS_3=nvl2(ASSET_ADDRESS_3,per_drt_rules.ranstr(10,250),ASSET_ADDRESS_3),
ASSET_ADDRESS_4=nvl2(ASSET_ADDRESS_4,per_drt_rules.ranstr(10,250),ASSET_ADDRESS_4)
WHERE KHR_ID IN (SELECT OKC.ID FROM OKC_K_HEADERS_ALL_B OKC,HZ_CUST_ACCOUNTS HCA, HZ_PARTIES HP WHERE HCA.CUST_ACCOUNT_ID=OKC.CUST_ACCT_ID AND HP.PARTY_ID=HCA.PARTY_ID AND HP.PARTY_ID=L_PERSON_ID);

-- UPDATE (1.None.None)
UPDATE OKL_EXT_FA_HEADER_SOURCES_B SET 
CUSTOMER_ACCOUNT_NUMBER=nvl2(CUSTOMER_ACCOUNT_NUMBER,per_drt_rules.ranstr(5,30),CUSTOMER_ACCOUNT_NUMBER),
CUSTOMER_NAME=nvl2(CUSTOMER_NAME,per_drt_udf.overwrite_name(ROWID,'OKL_EXT_FA_HEADER_SOURCES_B','CUSTOMER_NAME',l_person_id),CUSTOMER_NAME)
WHERE CONTRACT_NUMBER IN (SELECT CONTRACT_NUMBER FROM OKC_K_HEADERS_ALL_B OKC,HZ_CUST_ACCOUNTS HCA, HZ_PARTIES HP WHERE HCA.CUST_ACCOUNT_ID=OKC.CUST_ACCT_ID AND HP.PARTY_ID=HCA.PARTY_ID AND HP.PARTY_ID=L_PERSON_ID);

-- UPDATE (1.None.None)
UPDATE OKL_EXT_AP_HEADER_SOURCES_B SET 
CUSTOMER_NAME=nvl2(CUSTOMER_NAME,per_drt_udf.overwrite_name(ROWID,'OKL_EXT_AP_HEADER_SOURCES_B','CUSTOMER_NAME',l_person_id),CUSTOMER_NAME),
CUST_ACCOUNT_NUMBER=nvl2(CUST_ACCOUNT_NUMBER,per_drt_rules.ranstr(5,30),CUST_ACCOUNT_NUMBER)
WHERE KHR_ID IN (SELECT ID FROM OKC_K_HEADERS_ALL_B OKC,HZ_CUST_ACCOUNTS HCA,HZ_PARTIES HP WHERE OKC.CUST_ACCT_ID=HCA.CUST_ACCOUNT_ID AND HCA.PARTY_ID=HP.PARTY_ID AND HP.PARTY_ID=L_PERSON_ID);

-- UPDATE (1.None.None)
UPDATE OTA_DELEGATE_BOOKINGS SET 
DELEGATE_CONTACT_EMAIL=nvl2(DELEGATE_CONTACT_EMAIL,NULL,DELEGATE_CONTACT_EMAIL),
DELEGATE_CONTACT_FAX=nvl2(DELEGATE_CONTACT_FAX,NULL,DELEGATE_CONTACT_FAX),
DELEGATE_CONTACT_PHONE=nvl2(DELEGATE_CONTACT_PHONE,NULL,DELEGATE_CONTACT_PHONE)
WHERE BOOKING_ID IN (SELECT ODB.BOOKING_ID FROM HZ_CUST_ACCOUNT_ROLES ROL, HZ_RELATIONSHIPS REL, HZ_PARTIES CUST, HZ_PARTIES PERS_CONT, OTA_DELEGATE_BOOKINGS ODB WHERE  REL.SUBJECT_ID = CUST.PARTY_ID AND REL.OBJECT_ID = PERS_CONT.PARTY_ID AND REL.PARTY_ID = ROL.PARTY_ID AND REL.DIRECTIONAL_FLAG = 'B' AND ROL.CUST_ACCOUNT_ID = ODB.CUSTOMER_ID AND ((ODB.CORESPONDENT = 'S' AND ROL.CUST_ACCOUNT_ROLE_ID = ODB.DELEGATE_CONTACT_ID) OR (ODB.CORESPONDENT = 'C' AND ROL.CUST_ACCOUNT_ROLE_ID = ODB.CONTACT_ID)) AND PERS_CONT.PARTY_ID = L_PERSON_ID);

-- UPDATE (1.None.None)
UPDATE OZF_SD_BATCH_HEADERS_ALL SET 
VENDOR_CONTACT_NAME=nvl2(VENDOR_CONTACT_NAME,per_drt_udf.overwrite_name(ROWID,'OZF_SD_BATCH_HEADERS_ALL','VENDOR_CONTACT_NAME',l_person_id),VENDOR_CONTACT_NAME),
VENDOR_EMAIL=nvl2(VENDOR_EMAIL,per_drt_udf.overwrite_website(ROWID,'OZF_SD_BATCH_HEADERS_ALL','VENDOR_EMAIL',l_person_id),VENDOR_EMAIL),
VENDOR_PHONE=nvl2(VENDOR_PHONE,per_drt_udf.overwrite_phone(ROWID,'OZF_SD_BATCH_HEADERS_ALL','VENDOR_PHONE',l_person_id),VENDOR_PHONE)
WHERE VENDOR_CONTACT_ID IN (SELECT VENDOR_CONTACT_ID FROM AP_SUPPLIER_CONTACTS WHERE PER_PARTY_ID = L_PERSON_ID);

-- UPDATE (1.None.None)
UPDATE OZF_RESALE_LINES_ALL SET 
SHIP_FROM_CONTACT_NAME=nvl2(SHIP_FROM_CONTACT_NAME,per_drt_udf.overwrite_name(ROWID,'OZF_RESALE_LINES_ALL','SHIP_FROM_CONTACT_NAME',l_person_id),SHIP_FROM_CONTACT_NAME),
SHIP_FROM_EMAIL=nvl2(SHIP_FROM_EMAIL,per_drt_udf.overwrite_website(ROWID,'OZF_RESALE_LINES_ALL','SHIP_FROM_EMAIL',l_person_id),SHIP_FROM_EMAIL),
SHIP_FROM_PHONE=nvl2(SHIP_FROM_PHONE,per_drt_udf.overwrite_phone(ROWID,'OZF_RESALE_LINES_ALL','SHIP_FROM_PHONE',l_person_id),SHIP_FROM_PHONE)
WHERE SHIP_FROM_CONTACT_PARTY_ID = L_PERSON_ID;

-- UPDATE (1.None.None)
UPDATE OZF_SD_REQUEST_HEADERS_ALL_B SET 
SUPPLIER_CONTACT_EMAIL_ADDRESS=nvl2(SUPPLIER_CONTACT_EMAIL_ADDRESS,per_drt_udf.overwrite_website(ROWID,'OZF_SD_REQUEST_HEADERS_ALL_B','SUPPLIER_CONTACT_EMAIL_ADDRESS',l_person_id),SUPPLIER_CONTACT_EMAIL_ADDRESS),
SUPPLIER_CONTACT_NAME=nvl2(SUPPLIER_CONTACT_NAME,per_drt_udf.overwrite_name(ROWID,'OZF_SD_REQUEST_HEADERS_ALL_B','SUPPLIER_CONTACT_NAME',l_person_id),SUPPLIER_CONTACT_NAME),
SUPPLIER_CONTACT_PHONE_NUMBER=nvl2(SUPPLIER_CONTACT_PHONE_NUMBER,per_drt_udf.overwrite_phone(ROWID,'OZF_SD_REQUEST_HEADERS_ALL_B','SUPPLIER_CONTACT_PHONE_NUMBER',l_person_id),SUPPLIER_CONTACT_PHONE_NUMBER)
WHERE SUPPLIER_CONTACT_ID IN (SELECT VENDOR_CONTACT_ID FROM AP_SUPPLIER_CONTACTS WHERE PER_PARTY_ID = L_PERSON_ID);

-- UPDATE (1.None.None)
UPDATE OZF_RESALE_HEADERS_ALL SET 
BILL_TO_CONTACT_NAME=nvl2(BILL_TO_CONTACT_NAME,per_drt_udf.overwrite_name(ROWID,'OZF_RESALE_HEADERS_ALL','BILL_TO_CONTACT_NAME',l_person_id),BILL_TO_CONTACT_NAME),
BILL_TO_EMAIL=nvl2(BILL_TO_EMAIL,per_drt_udf.overwrite_website(ROWID,'OZF_RESALE_HEADERS_ALL','BILL_TO_EMAIL',l_person_id),BILL_TO_EMAIL),
BILL_TO_PHONE=nvl2(BILL_TO_PHONE,per_drt_udf.overwrite_phone(ROWID,'OZF_RESALE_HEADERS_ALL','BILL_TO_PHONE',l_person_id),BILL_TO_PHONE)
WHERE BILL_TO_CONTACT_PARTY_ID = L_PERSON_ID;

-- UPDATE (1.None.None)
UPDATE OZF_RESALE_BATCHES_ALL SET 
PARTNER_CONTACT_NAME=nvl2(PARTNER_CONTACT_NAME,per_drt_udf.overwrite_name(ROWID,'OZF_RESALE_BATCHES_ALL','PARTNER_CONTACT_NAME',l_person_id),PARTNER_CONTACT_NAME),
PARTNER_EMAIL=nvl2(PARTNER_EMAIL,per_drt_udf.overwrite_website(ROWID,'OZF_RESALE_BATCHES_ALL','PARTNER_EMAIL',l_person_id),PARTNER_EMAIL),
PARTNER_PHONE=nvl2(PARTNER_PHONE,per_drt_udf.overwrite_phone(ROWID,'OZF_RESALE_BATCHES_ALL','PARTNER_PHONE',l_person_id),PARTNER_PHONE)
WHERE PARTNER_CONTACT_PARTY_ID = L_PERSON_ID;

-- UPDATE (1.None.None)
UPDATE JTF_RS_RESOURCE_EXTNS_TL SET 
RESOURCE_NAME=nvl2(RESOURCE_NAME,per_drt_udf.overwrite_name(ROWID,'JTF_RS_RESOURCE_EXTNS_TL','RESOURCE_NAME',l_person_id),RESOURCE_NAME)
WHERE (RESOURCE_ID IN (SELECT RESOURCE_ID FROM JTF_RS_RESOURCE_EXTNS WHERE (CATEGORY = 'EMPLOYEE' AND SOURCE_ID IN (SELECT PERSON_ID FROM PER_ALL_PEOPLE_F WHERE PARTY_ID = L_PERSON_ID)) OR (CATEGORY = 'PARTY' AND SOURCE_ID = L_PERSON_ID) OR (CATEGORY = 'SUPPLIER_CONTACT' AND SOURCE_ID IN (SELECT VENDOR_CONTACT_ID FROM PO_VENDOR_CONTACTS PVC,HZ_RELATIONSHIPS HR WHERE HR.OBJECT_TYPE = 'PERSON' AND HR.OBJECT_TABLE_NAME = 'HZ_PARTIES' AND PVC.RELATIONSHIP_ID = HR.RELATIONSHIP_ID AND HR.OBJECT_ID = L_PERSON_ID )) OR (CATEGORY = 'PARTNER' AND SOURCE_ID IN (SELECT PARTY_ID FROM JTF_RS_PARTNERS_VL JP WHERE JP.PARTY_ID = L_PERSON_ID)) ));

-- UPDATE (1.None.None)
UPDATE JTF_RS_SALESREPS SET 
EMAIL_ADDRESS=nvl2(EMAIL_ADDRESS,per_drt_rules.name2mail(ROWID,'JTF_RS_SALESREPS','EMAIL_ADDRESS',l_person_id),EMAIL_ADDRESS),
NAME=nvl2(NAME,NULL,NAME),
SALESREP_NUMBER=nvl2(SALESREP_NUMBER,per_drt_udf.generate_unique_string(ROWID,'JTF_RS_SALESREPS','SALESREP_NUMBER',l_person_id),SALESREP_NUMBER)
WHERE (RESOURCE_ID IN (SELECT RESOURCE_ID FROM JTF_RS_RESOURCE_EXTNS WHERE (CATEGORY = 'EMPLOYEE' AND SOURCE_ID IN (SELECT PERSON_ID FROM PER_ALL_PEOPLE_F WHERE PARTY_ID = L_PERSON_ID)) OR (CATEGORY = 'PARTY' AND SOURCE_ID = L_PERSON_ID) OR (CATEGORY = 'SUPPLIER_CONTACT' AND SOURCE_ID IN (SELECT VENDOR_CONTACT_ID FROM PO_VENDOR_CONTACTS PVC,HZ_RELATIONSHIPS HR WHERE HR.OBJECT_TYPE = 'PERSON' AND HR.OBJECT_TABLE_NAME = 'HZ_PARTIES' AND PVC.RELATIONSHIP_ID = HR.RELATIONSHIP_ID AND HR.OBJECT_ID = L_PERSON_ID )) OR (CATEGORY = 'PARTNER' AND SOURCE_ID IN (SELECT PARTY_ID FROM JTF_RS_PARTNERS_VL JP WHERE JP.PARTY_ID = L_PERSON_ID)) ));

-- UPDATE (1.None.None)
UPDATE HZ_ORG_CONTACTS SET 
CONTACT_NUMBER=nvl2(CONTACT_NUMBER,per_drt_udf.generate_unique_string(ROWID,'HZ_ORG_CONTACTS','CONTACT_NUMBER',l_person_id),CONTACT_NUMBER)
WHERE PARTY_RELATIONSHIP_ID IN (SELECT HR.RELATIONSHIP_ID FROM HZ_RELATIONSHIPS HR,HZ_PARTIES HP WHERE HR.SUBJECT_ID = HP.PARTY_ID AND HP.PARTY_TYPE = 'PERSON' AND HP.PARTY_ID = L_PERSON_ID AND HR.SUBJECT_TABLE_NAME = 'HZ_PARTIES' AND HR.SUBJECT_TYPE = 'PERSON');

-- UPDATE (1.None.None)
UPDATE HZ_CUST_ACCOUNTS SET 
ACCOUNT_NAME=nvl2(ACCOUNT_NAME,'**********',ACCOUNT_NAME),
ACCOUNT_NUMBER=nvl2(ACCOUNT_NUMBER,per_drt_udf.generate_unique_string(ROWID,'HZ_CUST_ACCOUNTS','ACCOUNT_NUMBER',l_person_id),ACCOUNT_NUMBER)
WHERE PARTY_ID = L_PERSON_ID;

-- DELETE Statement
DELETE FROM HZ_CUST_ACCOUNTS_M
WHERE PARTY_ID = L_PERSON_ID;

-- UPDATE (1.None.None)
UPDATE HZ_CUST_SITE_USES_ALL SET 
LOCATION=nvl2(LOCATION,per_drt_udf.generate_unique_string(ROWID,'HZ_CUST_SITE_USES_ALL','LOCATION',l_person_id),LOCATION)
WHERE SITE_USE_ID IN (SELECT SITE_USE_ID FROM HZ_CUST_SITE_USES_ALL CSU,HZ_CUST_ACCT_SITES_ALL CAS WHERE CSU.CUST_ACCT_SITE_ID = CAS.CUST_ACCT_SITE_ID AND ( EXISTS (SELECT 1 FROM HZ_PARTY_SITES PS WHERE PS.PARTY_SITE_ID = CAS.PARTY_SITE_ID AND (PARTY_ID = L_PERSON_ID OR (PARTY_ID IN (SELECT PARTY_ID FROM HZ_RELATIONSHIPS WHERE SUBJECT_ID = L_PERSON_ID ))) ) OR ( EXISTS (SELECT 1 FROM HZ_CUST_ACCOUNTS CA WHERE CA.PARTY_ID     = L_PERSON_ID AND CA.CUST_ACCOUNT_ID  = CAS.CUST_ACCOUNT_ID) )));

-- DELETE Statement
DELETE FROM HZ_CUST_SITE_USES_ALL_M
WHERE SITE_USE_ID IN (SELECT SITE_USE_ID FROM HZ_CUST_SITE_USES_ALL CSU,HZ_CUST_ACCT_SITES_ALL CAS WHERE CSU.CUST_ACCT_SITE_ID = CAS.CUST_ACCT_SITE_ID AND ( EXISTS (SELECT 1 FROM HZ_PARTY_SITES PS WHERE PS.PARTY_SITE_ID = CAS.PARTY_SITE_ID AND (PARTY_ID = L_PERSON_ID OR (PARTY_ID IN (SELECT PARTY_ID FROM HZ_RELATIONSHIPS WHERE SUBJECT_ID = L_PERSON_ID ))) ) OR ( EXISTS (SELECT 1 FROM HZ_CUST_ACCOUNTS CA WHERE CA.PARTY_ID     = L_PERSON_ID AND CA.CUST_ACCOUNT_ID  = CAS.CUST_ACCOUNT_ID) )));

-- DELETE Statement
DELETE FROM HZ_PARTY_PREFERENCES
WHERE (PARTY_ID = L_PERSON_ID ) OR (VALUE_NUMBER = L_PERSON_ID AND PREFERENCE_CODE = 'PARTY_ID');

-- UPDATE (1.None.None)
UPDATE HZ_FINANCIAL_PROFILE SET 
FINANCIAL_ACCOUNT_NUMBER=nvl2(FINANCIAL_ACCOUNT_NUMBER,per_drt_udf.overwrite_account_number(ROWID,'HZ_FINANCIAL_PROFILE','FINANCIAL_ACCOUNT_NUMBER',l_person_id),FINANCIAL_ACCOUNT_NUMBER)
WHERE PARTY_ID = L_PERSON_ID;

-- DELETE Statement
DELETE FROM HZ_PURGE_CANDIDATES
WHERE CANDIDATE_PARTY_ID = L_PERSON_ID;

-- UPDATE (1.None.None)
UPDATE HZ_MERGE_BATCH SET 
BATCH_NAME=nvl2(BATCH_NAME,per_drt_rules.ranstr(3,5),BATCH_NAME)
WHERE BATCH_ID IN (SELECT BATCH_ID FROM HZ_MERGE_PARTIES WHERE TO_PARTY_ID = L_PERSON_ID OR FROM_PARTY_ID = L_PERSON_ID );

-- DELETE Statement
DELETE FROM RA_CUSTOMERS_INTERFACE_ALL
WHERE ORIG_SYSTEM_CUSTOMER_REF IN (SELECT ORIG_SYSTEM_CUSTOMER_REF FROM RA_CUSTOMERS_INTERFACE_ALL RCI,HZ_PARTIES HP,HZ_CUST_ACCOUNTS CA,HZ_ORIG_SYS_REFERENCES OSR WHERE OSR.OWNER_TABLE_NAME = 'HZ_CUST_ACCOUNTS' AND CA.PARTY_ID = HP.PARTY_ID AND RCI.ORIG_SYSTEM_CUSTOMER_REF = OSR.ORIG_SYSTEM_REFERENCE AND OSR.OWNER_TABLE_ID = CA.CUST_ACCOUNT_ID AND HP.PARTY_ID = L_PERSON_ID);

-- DELETE Statement
DELETE FROM RA_CUSTOMER_PROFILES_INT_ALL
WHERE ORIG_SYSTEM_CUSTOMER_REF IN (SELECT ORIG_SYSTEM_CUSTOMER_REF FROM RA_CUSTOMERS_INTERFACE_ALL RCI,HZ_PARTIES HP,HZ_CUST_ACCOUNTS CA,HZ_ORIG_SYS_REFERENCES OSR WHERE OSR.OWNER_TABLE_NAME = 'HZ_CUST_ACCOUNTS' AND CA.PARTY_ID = HP.PARTY_ID AND RCI.ORIG_SYSTEM_CUSTOMER_REF = OSR.ORIG_SYSTEM_REFERENCE AND OSR.OWNER_TABLE_ID = CA.CUST_ACCOUNT_ID AND HP.PARTY_ID = L_PERSON_ID);

-- DELETE Statement
DELETE FROM RA_CONTACT_PHONES_INT_ALL
WHERE ORIG_SYSTEM_CUSTOMER_REF IN (SELECT ORIG_SYSTEM_CUSTOMER_REF FROM RA_CUSTOMERS_INTERFACE_ALL RCI,HZ_PARTIES HP,HZ_CUST_ACCOUNTS CA,HZ_ORIG_SYS_REFERENCES OSR WHERE OSR.OWNER_TABLE_NAME = 'HZ_CUST_ACCOUNTS' AND CA.PARTY_ID = HP.PARTY_ID AND RCI.ORIG_SYSTEM_CUSTOMER_REF = OSR.ORIG_SYSTEM_REFERENCE AND OSR.OWNER_TABLE_ID = CA.CUST_ACCOUNT_ID AND HP.PARTY_ID = L_PERSON_ID);

-- DELETE Statement
DELETE FROM RA_CUSTOMER_BANKS_INT_ALL
WHERE ORIG_SYSTEM_CUSTOMER_REF IN (SELECT ORIG_SYSTEM_CUSTOMER_REF FROM RA_CUSTOMERS_INTERFACE_ALL RCI,HZ_PARTIES HP,HZ_CUST_ACCOUNTS CA,HZ_ORIG_SYS_REFERENCES OSR WHERE OSR.OWNER_TABLE_NAME = 'HZ_CUST_ACCOUNTS' AND CA.PARTY_ID = HP.PARTY_ID AND RCI.ORIG_SYSTEM_CUSTOMER_REF = OSR.ORIG_SYSTEM_REFERENCE AND OSR.OWNER_TABLE_ID = CA.CUST_ACCOUNT_ID AND HP.PARTY_ID = L_PERSON_ID);

-- UPDATE (1.None.None)
UPDATE HZ_CONTACT_POINTS SET 
EMAIL_ADDRESS=nvl2(EMAIL_ADDRESS,per_drt_rules.name2mail(ROWID,'HZ_CONTACT_POINTS','EMAIL_ADDRESS',l_person_id),EMAIL_ADDRESS),
PHONE_AREA_CODE=nvl2(PHONE_AREA_CODE,per_drt_rules.rannum(3,3),PHONE_AREA_CODE),
PHONE_EXTENSION=nvl2(PHONE_EXTENSION,per_drt_rules.rannum(1,3),PHONE_EXTENSION),
PHONE_NUMBER=nvl2(PHONE_NUMBER,per_drt_udf.overwrite_phone(ROWID,'HZ_CONTACT_POINTS','PHONE_NUMBER',l_person_id),PHONE_NUMBER),
RAW_PHONE_NUMBER=nvl2(RAW_PHONE_NUMBER,per_drt_udf.overwrite_phone(ROWID,'HZ_CONTACT_POINTS','RAW_PHONE_NUMBER',l_person_id),RAW_PHONE_NUMBER),
TELEX_NUMBER=nvl2(TELEX_NUMBER,per_drt_udf.overwrite_phone(ROWID,'HZ_CONTACT_POINTS','TELEX_NUMBER',l_person_id),TELEX_NUMBER),
TRANSPOSED_PHONE_NUMBER=nvl2(TRANSPOSED_PHONE_NUMBER,per_drt_udf.overwrite_phone(ROWID,'HZ_CONTACT_POINTS','TRANSPOSED_PHONE_NUMBER',l_person_id),TRANSPOSED_PHONE_NUMBER),
URL=nvl2(URL,per_drt_udf.overwrite_website(ROWID,'HZ_CONTACT_POINTS','URL',l_person_id),URL)
WHERE (OWNER_TABLE_NAME = 'HZ_PARTIES' AND OWNER_TABLE_ID = L_PERSON_ID ) OR (OWNER_TABLE_NAME = 'HZ_PARTY_SITES' AND OWNER_TABLE_ID IN (SELECT PARTY_SITE_ID FROM HZ_PARTY_SITES WHERE PARTY_ID = L_PERSON_ID ) ) OR (OWNER_TABLE_NAME = 'HZ_PARTIES' AND OWNER_TABLE_ID IN (SELECT HP.PARTY_ID FROM HZ_PARTIES HP ,HZ_RELATIONSHIPS HR, HZ_PARTIES SUB_PARTY WHERE OWNER_TABLE_NAME = 'HZ_PARTIES' AND HP.PARTY_TYPE = 'PARTY_RELATIONSHIP' AND HR.PARTY_ID = HP.PARTY_ID AND SUB_PARTY.PARTY_TYPE = 'PERSON' AND HR.SUBJECT_ID = L_PERSON_ID));

-- DELETE Statement
DELETE FROM RA_CUST_PAY_METHOD_INT_ALL
WHERE ORIG_SYSTEM_CUSTOMER_REF IN (SELECT ORIG_SYSTEM_CUSTOMER_REF FROM RA_CUSTOMERS_INTERFACE_ALL RCI,HZ_PARTIES HP,HZ_CUST_ACCOUNTS CA,HZ_ORIG_SYS_REFERENCES OSR WHERE OSR.OWNER_TABLE_NAME = 'HZ_CUST_ACCOUNTS' AND CA.PARTY_ID = HP.PARTY_ID AND RCI.ORIG_SYSTEM_CUSTOMER_REF = OSR.ORIG_SYSTEM_REFERENCE AND OSR.OWNER_TABLE_ID = CA.CUST_ACCOUNT_ID AND HP.PARTY_ID = L_PERSON_ID);

-- UPDATE (1.None.None)
UPDATE EGO_MASSUPDATE_ITEM_TMP SET 
SUPPLIER_NAME=nvl2(SUPPLIER_NAME,'**********',SUPPLIER_NAME)
WHERE SUPPLIER_ID IN (SELECT PARTY_ID FROM HZ_PARTIES WHERE PARTY_ID = L_PERSON_ID);

-- UPDATE (1.None.None)
UPDATE EGO_SUPPLIERSITE_TMP SET 
SUPPLIER_NAME=nvl2(SUPPLIER_NAME,'**********',SUPPLIER_NAME)
WHERE SUPPLIER_ID IN (SELECT PARTY_ID FROM HZ_PARTIES WHERE PARTY_ID = L_PERSON_ID);

-- UPDATE (1.None.None)
UPDATE PO_HEADERS_ALL SET 
EMAIL_ADDRESS=nvl2(EMAIL_ADDRESS,per_drt_udf.overwrite_email(ROWID,'PO_HEADERS_ALL','EMAIL_ADDRESS',l_person_id),EMAIL_ADDRESS),
FAX=nvl2(FAX,per_drt_udf.overwrite_phone(ROWID,'PO_HEADERS_ALL','FAX',l_person_id),FAX)
WHERE VENDOR_CONTACT_ID IN (SELECT VENDOR_CONTACT_ID FROM AP_SUPPLIER_CONTACTS PVC, HZ_PARTIES HP WHERE PVC.PER_PARTY_ID = HP.PARTY_ID AND HP.PARTY_TYPE = 'PERSON' AND HP.PARTY_ID = L_PERSON_ID );

-- UPDATE (1.None.None)
UPDATE PO_HEADERS_ARCHIVE_ALL SET 
EMAIL_ADDRESS=nvl2(EMAIL_ADDRESS,per_drt_udf.overwrite_email(ROWID,'PO_HEADERS_ARCHIVE_ALL','EMAIL_ADDRESS',l_person_id),EMAIL_ADDRESS),
FAX=nvl2(FAX,per_drt_udf.overwrite_phone(ROWID,'PO_HEADERS_ARCHIVE_ALL','FAX',l_person_id),FAX)
WHERE VENDOR_CONTACT_ID IN (SELECT VENDOR_CONTACT_ID FROM AP_SUPPLIER_CONTACTS PVC, HZ_PARTIES HP WHERE PVC.PER_PARTY_ID = HP.PARTY_ID AND HP.PARTY_TYPE = 'PERSON' AND HP.PARTY_ID = L_PERSON_ID );

-- UPDATE (1.None.None)
UPDATE PO_HEADERS_DRAFT_ALL SET 
EMAIL_ADDRESS=nvl2(EMAIL_ADDRESS,per_drt_udf.overwrite_email(ROWID,'PO_HEADERS_DRAFT_ALL','EMAIL_ADDRESS',l_person_id),EMAIL_ADDRESS),
FAX=nvl2(FAX,per_drt_udf.overwrite_phone(ROWID,'PO_HEADERS_DRAFT_ALL','FAX',l_person_id),FAX)
WHERE VENDOR_CONTACT_ID IN (SELECT VENDOR_CONTACT_ID FROM AP_SUPPLIER_CONTACTS PVC, HZ_PARTIES HP WHERE PVC.PER_PARTY_ID = HP.PARTY_ID AND HP.PARTY_TYPE = 'PERSON' AND HP.PARTY_ID = L_PERSON_ID );

-- UPDATE (1.None.None)
UPDATE PON_AUCTION_HEADERS_ALL SET 
TRADING_PARTNER_CONTACT_NAME=nvl2(TRADING_PARTNER_CONTACT_NAME,per_drt_udf.overwrite_name(ROWID,'PON_AUCTION_HEADERS_ALL','TRADING_PARTNER_CONTACT_NAME',l_person_id),TRADING_PARTNER_CONTACT_NAME)
WHERE TRADING_PARTNER_CONTACT_ID = L_PERSON_ID;

-- UPDATE (1.None.None)
UPDATE PON_BID_HEADERS SET 
TRADING_PARTNER_CONTACT_NAME=nvl2(TRADING_PARTNER_CONTACT_NAME,per_drt_udf.overwrite_name(ROWID,'PON_BID_HEADERS','TRADING_PARTNER_CONTACT_NAME',l_person_id),TRADING_PARTNER_CONTACT_NAME)
WHERE TRADING_PARTNER_CONTACT_ID = L_PERSON_ID;

-- UPDATE (1.None.None)
UPDATE PRP_EMAIL_RECIPIENTS SET 
EMAIL_ADDRESS=nvl2(EMAIL_ADDRESS,per_drt_rules.name2mail(ROWID,'PRP_EMAIL_RECIPIENTS','EMAIL_ADDRESS',l_person_id),EMAIL_ADDRESS)
WHERE CONTACT_POINT_ID IN
(SELECT HCP.CONTACT_POINT_ID FROM HZ_PARTIES HZP , HZ_RELATIONSHIPS HPR, HZ_CONTACT_POINTS HCP
WHERE HCP.OWNER_TABLE_ID  = HPR.PARTY_ID AND HCP.OWNER_TABLE_NAME  = 'HZ_PARTIES' AND HCP.CONTACT_POINT_TYPE = 'EMAIL' 
AND HPR.SUBJECT_ID = HZP.PARTY_ID AND HZP.PARTY_ID = L_PERSON_ID );

-- UPDATE (1.None.None)
UPDATE PV_SEARCH_ATTR_VALUES SET 
ATTR_TEXT=nvl2(ATTR_TEXT,per_drt_udf.overwrite_name(ROWID,'PV_SEARCH_ATTR_VALUES','ATTR_TEXT',l_person_id),ATTR_TEXT)
WHERE PARTY_ID = L_PERSON_ID;

-- UPDATE (1.None.None)
UPDATE PV_REFERRALS_B SET 
CUSTOMER_CONTACT_EMAIL_ADDRESS=nvl2(CUSTOMER_CONTACT_EMAIL_ADDRESS,per_drt_udf.overwrite_website(ROWID,'PV_REFERRALS_B','CUSTOMER_CONTACT_EMAIL_ADDRESS',l_person_id),CUSTOMER_CONTACT_EMAIL_ADDRESS),
CUSTOMER_CONTACT_FIRST_NAME=nvl2(CUSTOMER_CONTACT_FIRST_NAME,per_drt_udf.overwrite_name(ROWID,'PV_REFERRALS_B','CUSTOMER_CONTACT_FIRST_NAME',l_person_id),CUSTOMER_CONTACT_FIRST_NAME),
CUSTOMER_CONTACT_LAST_NAME=nvl2(CUSTOMER_CONTACT_LAST_NAME,per_drt_udf.overwrite_name(ROWID,'PV_REFERRALS_B','CUSTOMER_CONTACT_LAST_NAME',l_person_id),CUSTOMER_CONTACT_LAST_NAME),
CUSTOMER_CONTACT_PHONE_EXT=nvl2(CUSTOMER_CONTACT_PHONE_EXT,per_drt_udf.overwrite_phone(ROWID,'PV_REFERRALS_B','CUSTOMER_CONTACT_PHONE_EXT',l_person_id),CUSTOMER_CONTACT_PHONE_EXT),
CUSTOMER_CONTACT_PHONE_NO=nvl2(CUSTOMER_CONTACT_PHONE_NO,per_drt_udf.overwrite_phone(ROWID,'PV_REFERRALS_B','CUSTOMER_CONTACT_PHONE_NO',l_person_id),CUSTOMER_CONTACT_PHONE_NO),
CUSTOMER_NAME_PRONOUNCIATION=nvl2(CUSTOMER_NAME_PRONOUNCIATION,per_drt_udf.overwrite_name(ROWID,'PV_REFERRALS_B','CUSTOMER_NAME_PRONOUNCIATION',l_person_id),CUSTOMER_NAME_PRONOUNCIATION)
WHERE CUSTOMER_CONTACT_PARTY_ID IN (SELECT PARTY_ID FROM HZ_RELATIONSHIPS WHERE SUBJECT_ID =L_PERSON_ID);

-- UPDATE (1.None.None)
UPDATE RLM_SCHEDULE_HEADERS_ALL SET 
CUST_NAME_EXT=nvl2(CUST_NAME_EXT,per_drt_udf.overwrite_name(ROWID,'RLM_SCHEDULE_HEADERS_ALL','CUST_NAME_EXT',l_person_id),CUST_NAME_EXT)
WHERE SCHEDULE_SOURCE = 'MANUAL' AND CUSTOMER_ID IN (SELECT ACC.CUST_ACCOUNT_ID FROM HZ_PARTIES HP, HZ_CUST_ACCOUNTS ACC WHERE ACC.PARTY_ID = HP.PARTY_ID AND HP.PARTY_TYPE = 'PERSON' AND HP.PARTY_ID = L_PERSON_ID);

-- DELETE Statement
DELETE FROM JTF_RS_RESOURCE_EXTN_AUD
WHERE (RESOURCE_ID IN (SELECT RESOURCE_ID FROM JTF_RS_RESOURCE_EXTNS WHERE (CATEGORY = 'EMPLOYEE' AND SOURCE_ID IN (SELECT PERSON_ID FROM PER_ALL_PEOPLE_F WHERE PARTY_ID = L_PERSON_ID)) OR (CATEGORY = 'PARTY' AND SOURCE_ID = L_PERSON_ID) OR (CATEGORY = 'SUPPLIER_CONTACT' AND SOURCE_ID IN (SELECT VENDOR_CONTACT_ID FROM PO_VENDOR_CONTACTS PVC,HZ_RELATIONSHIPS HR WHERE HR.OBJECT_TYPE = 'PERSON' AND HR.OBJECT_TABLE_NAME = 'HZ_PARTIES' AND PVC.RELATIONSHIP_ID = HR.RELATIONSHIP_ID AND HR.OBJECT_ID = L_PERSON_ID )) OR (CATEGORY = 'PARTNER' AND SOURCE_ID IN (SELECT PARTY_ID FROM JTF_RS_PARTNERS_VL JP WHERE JP.PARTY_ID = L_PERSON_ID)) ));

-- UPDATE (1.None.None)
UPDATE HZ_LOCATION_PROFILES SET 
ADDRESS1=nvl2(ADDRESS1,'**********',ADDRESS1),
ADDRESS2=nvl2(ADDRESS2,NULL,ADDRESS2),
ADDRESS3=nvl2(ADDRESS3,NULL,ADDRESS3),
ADDRESS4=nvl2(ADDRESS4,NULL,ADDRESS4),
POSTAL_CODE=nvl2(POSTAL_CODE,NULL,POSTAL_CODE)
WHERE LOCATION_ID IN (SELECT LOCATION_ID FROM HZ_PARTY_SITES WHERE PARTY_ID = L_PERSON_ID OR (PARTY_ID IN (SELECT PARTY_ID FROM HZ_RELATIONSHIPS WHERE SUBJECT_ID = L_PERSON_ID AND SUBJECT_TABLE_NAME = 'HZ_PARTIES' AND SUBJECT_TYPE = 'PERSON' )) );

-- DELETE Statement
DELETE FROM HZ_IMP_CONTACTPTS_INT
WHERE CP_ORIG_SYSTEM_REFERENCE IN (SELECT ICI.CP_ORIG_SYSTEM_REFERENCE FROM HZ_IMP_CONTACTPTS_INT ICI ,HZ_ORIG_SYS_REFERENCES OSR WHERE ICI.CP_ORIG_SYSTEM_REFERENCE = OSR.ORIG_SYSTEM_REFERENCE AND  ICI.CP_ORIG_SYSTEM = OSR.ORIG_SYSTEM AND OSR.OWNER_TABLE_NAME = 'HZ_CONTACT_POINTS' AND OWNER_TABLE_ID IN ( SELECT CONTACT_POINT_ID FROM HZ_CONTACT_POINTS WHERE (OWNER_TABLE_NAME = 'HZ_PARTIES' AND OWNER_TABLE_ID = L_PERSON_ID ) OR (OWNER_TABLE_NAME = 'HZ_PARTY_SITES' AND OWNER_TABLE_ID IN (SELECT PARTY_ID FROM HZ_PARTY_SITES WHERE PARTY_ID = L_PERSON_ID ) ) OR (OWNER_TABLE_NAME = 'HZ_PARTIES' AND OWNER_TABLE_ID IN (SELECT HP.PARTY_ID FROM HZ_PARTIES HP ,HZ_RELATIONSHIPS HR, HZ_PARTIES SUB_PARTY WHERE OWNER_TABLE_NAME = 'HZ_PARTIES' AND HP.PARTY_TYPE = 'PARTY_RELATIONSHIP' AND HR.PARTY_ID = HP.PARTY_ID AND SUB_PARTY.PARTY_TYPE = 'PERSON' AND HR.SUBJECT_ID = L_PERSON_ID AND HR.SUBJECT_TABLE_NAME = 'HZ_PARTIES' AND HR.SUBJECT_TYPE = 'PERSON' )) ));

-- DELETE Statement
DELETE FROM HZ_IMP_CONTACTS_INT
WHERE CONTACT_ORIG_SYSTEM_REFERENCE IN (SELECT ICI.CONTACT_ORIG_SYSTEM_REFERENCE FROM HZ_IMP_CONTACTS_INT ICI ,HZ_ORIG_SYS_REFERENCES OSR WHERE ICI.CONTACT_ORIG_SYSTEM_REFERENCE = OSR.ORIG_SYSTEM_REFERENCE AND  ICI.CONTACT_ORIG_SYSTEM = OSR.ORIG_SYSTEM AND OSR.OWNER_TABLE_NAME = 'HZ_ORG_CONTACTS' AND OWNER_TABLE_ID IN ( SELECT ORG_CONTACT_ID FROM HZ_ORG_CONTACTS WHERE PARTY_RELATIONSHIP_ID IN (SELECT HR.RELATIONSHIP_ID FROM HZ_RELATIONSHIPS HR,HZ_PARTIES HP WHERE HR.SUBJECT_ID = HP.PARTY_ID AND HR.SUBJECT_TABLE_NAME = 'HZ_PARTIES' AND HR.SUBJECT_TYPE = 'PERSON' AND HP.PARTY_TYPE = 'PERSON' AND HP.PARTY_ID = L_PERSON_ID)) );

-- DELETE Statement
DELETE FROM HZ_IMP_CONTACTROLES_INT
WHERE CONTACT_ORIG_SYSTEM_REFERENCE IN (SELECT ICI.CONTACT_ORIG_SYSTEM_REFERENCE FROM HZ_IMP_CONTACTROLES_INT ICI ,HZ_ORIG_SYS_REFERENCES OSR WHERE ICI.CONTACT_ORIG_SYSTEM_REFERENCE = OSR.ORIG_SYSTEM_REFERENCE AND  ICI.CONTACT_ORIG_SYSTEM = OSR.ORIG_SYSTEM AND OSR.OWNER_TABLE_NAME = 'HZ_ORG_CONTACTS' AND OWNER_TABLE_ID IN ( SELECT ORG_CONTACT_ID FROM HZ_ORG_CONTACTS WHERE PARTY_RELATIONSHIP_ID IN (SELECT HR.RELATIONSHIP_ID FROM HZ_RELATIONSHIPS HR,HZ_PARTIES HP WHERE HR.SUBJECT_ID = HP.PARTY_ID AND HR.SUBJECT_TABLE_NAME = 'HZ_PARTIES' AND HR.SUBJECT_TYPE = 'PERSON' AND HP.PARTY_TYPE = 'PERSON' AND HP.PARTY_ID = L_PERSON_ID)) );

-- DELETE Statement
DELETE FROM HZ_IMP_ADDRESSES_INT
WHERE SITE_ORIG_SYSTEM_REFERENCE IN (SELECT IAI.SITE_ORIG_SYSTEM_REFERENCE FROM HZ_IMP_ADDRESSES_INT IAI ,HZ_ORIG_SYS_REFERENCES OSR WHERE IAI.SITE_ORIG_SYSTEM_REFERENCE = OSR.ORIG_SYSTEM_REFERENCE AND  IAI.SITE_ORIG_SYSTEM = OSR.ORIG_SYSTEM AND OSR.OWNER_TABLE_NAME = 'HZ_PARTY_SITES' AND OWNER_TABLE_ID IN (SELECT PARTY_SITE_ID FROM HZ_PARTY_SITES WHERE PARTY_ID = L_PERSON_ID));

-- DELETE Statement
DELETE FROM HZ_IMP_ADDRESSUSES_INT
WHERE SITE_ORIG_SYSTEM_REFERENCE IN (SELECT IAI.SITE_ORIG_SYSTEM_REFERENCE FROM HZ_IMP_ADDRESSUSES_INT IAI ,HZ_ORIG_SYS_REFERENCES OSR WHERE IAI.SITE_ORIG_SYSTEM_REFERENCE = OSR.ORIG_SYSTEM_REFERENCE AND  IAI.SITE_ORIG_SYSTEM = OSR.ORIG_SYSTEM AND OSR.OWNER_TABLE_NAME = 'HZ_PARTY_SITES' AND OWNER_TABLE_ID IN (SELECT PARTY_SITE_ID FROM HZ_PARTY_SITES WHERE PARTY_ID = L_PERSON_ID));

-- UPDATE (1.None.None)
UPDATE HZ_MERGE_PARTY_HISTORY SET 
FROM_ENTITY_DESC=nvl2(FROM_ENTITY_DESC,NULL,FROM_ENTITY_DESC),
TO_ENTITY_DESC=nvl2(TO_ENTITY_DESC,NULL,TO_ENTITY_DESC)
WHERE BATCH_PARTY_ID IN (SELECT BATCH_PARTY_ID FROM HZ_MERGE_PARTY_HISTORY WHERE (MERGE_DICT_ID = 1 AND (FROM_ENTITY_ID = L_PERSON_ID OR TO_ENTITY_ID = L_PERSON_ID)) OR (BATCH_PARTY_ID IN (SELECT BATCH_PARTY_ID FROM HZ_MERGE_PARTY_HISTORY,HZ_PARTY_SITES WHERE PARTY_ID = L_PERSON_ID AND MERGE_DICT_ID = 3 AND FROM_PARENT_ENTITY_ID IS NULL AND TO_PARENT_ENTITY_ID IS NULL AND (FROM_ENTITY_ID = PARTY_SITE_ID OR TO_ENTITY_ID = PARTY_SITE_ID))));

-- UPDATE (1.None.None)
UPDATE HZ_MERGE_PARTY_LOG SET 
FROM_ENTITY_DESC=nvl2(FROM_ENTITY_DESC,NULL,FROM_ENTITY_DESC),
TO_ENTITY_DESC=nvl2(TO_ENTITY_DESC,NULL,TO_ENTITY_DESC)
WHERE BATCH_PARTY_ID IN (SELECT BATCH_PARTY_ID FROM HZ_MERGE_PARTY_LOG WHERE (MERGE_DICT_ID = 1 AND (FROM_ENTITY_ID = L_PERSON_ID OR TO_ENTITY_ID = L_PERSON_ID)) OR (BATCH_PARTY_ID IN (SELECT BATCH_PARTY_ID FROM HZ_MERGE_PARTY_LOG,HZ_PARTY_SITES WHERE PARTY_ID = L_PERSON_ID AND MERGE_DICT_ID = 3 AND FROM_PARENT_ENTITY_ID IS NULL AND TO_PARENT_ENTITY_ID IS NULL AND (FROM_ENTITY_ID = PARTY_SITE_ID OR TO_ENTITY_ID = PARTY_SITE_ID))));

-- UPDATE (1.None.None)
UPDATE HZ_EMPLOYMENT_HISTORY SET 
COMMENTS=nvl2(COMMENTS,NULL,COMMENTS),
EMPLOYED_AS_TITLE=nvl2(EMPLOYED_AS_TITLE,'UNKNOWN',EMPLOYED_AS_TITLE),
EMPLOYED_BY_DIVISION_NAME=nvl2(EMPLOYED_BY_DIVISION_NAME,NULL,EMPLOYED_BY_DIVISION_NAME),
EMPLOYED_BY_NAME_COMPANY=nvl2(EMPLOYED_BY_NAME_COMPANY,NULL,EMPLOYED_BY_NAME_COMPANY),
EMPLOYED_BY_PARTY_ID=nvl2(EMPLOYED_BY_PARTY_ID,NULL,EMPLOYED_BY_PARTY_ID),
REASON_FOR_LEAVING=nvl2(REASON_FOR_LEAVING,NULL,REASON_FOR_LEAVING),
SUPERVISOR_NAME=nvl2(SUPERVISOR_NAME,NULL,SUPERVISOR_NAME)
WHERE PARTY_ID = L_PERSON_ID;

-- UPDATE (1.None.None)
UPDATE JTF_RS_RESOURCE_EXTNS SET 
SOURCE_ADDRESS1=nvl2(SOURCE_ADDRESS1,'**********',SOURCE_ADDRESS1),
SOURCE_ADDRESS2=nvl2(SOURCE_ADDRESS2,NULL,SOURCE_ADDRESS2),
SOURCE_ADDRESS3=nvl2(SOURCE_ADDRESS3,NULL,SOURCE_ADDRESS3),
SOURCE_ADDRESS4=nvl2(SOURCE_ADDRESS4,NULL,SOURCE_ADDRESS4),
SOURCE_EMAIL=nvl2(SOURCE_EMAIL,per_drt_rules.name2mail(ROWID,'JTF_RS_RESOURCE_EXTNS','SOURCE_EMAIL',l_person_id),SOURCE_EMAIL),
SOURCE_FIRST_NAME=nvl2(SOURCE_FIRST_NAME,per_drt_udf.overwrite_name(ROWID,'JTF_RS_RESOURCE_EXTNS','SOURCE_FIRST_NAME',l_person_id),SOURCE_FIRST_NAME),
SOURCE_LAST_NAME=nvl2(SOURCE_LAST_NAME,per_drt_udf.overwrite_name(ROWID,'JTF_RS_RESOURCE_EXTNS','SOURCE_LAST_NAME',l_person_id),SOURCE_LAST_NAME),
SOURCE_MAILSTOP=nvl2(SOURCE_MAILSTOP,NULL,SOURCE_MAILSTOP),
SOURCE_MGR_NAME=nvl2(SOURCE_MGR_NAME,per_drt_udf.overwrite_name(ROWID,'JTF_RS_RESOURCE_EXTNS','SOURCE_MGR_NAME',l_person_id),SOURCE_MGR_NAME),
SOURCE_MIDDLE_NAME=nvl2(SOURCE_MIDDLE_NAME,per_drt_udf.overwrite_name(ROWID,'JTF_RS_RESOURCE_EXTNS','SOURCE_MIDDLE_NAME',l_person_id),SOURCE_MIDDLE_NAME),
SOURCE_MOBILE_PHONE=nvl2(SOURCE_MOBILE_PHONE,per_drt_udf.overwrite_phone(ROWID,'JTF_RS_RESOURCE_EXTNS','SOURCE_MOBILE_PHONE',l_person_id),SOURCE_MOBILE_PHONE),
SOURCE_NAME=nvl2(SOURCE_NAME,per_drt_udf.overwrite_name(ROWID,'JTF_RS_RESOURCE_EXTNS','SOURCE_NAME',l_person_id),SOURCE_NAME),
SOURCE_NUMBER=nvl2(SOURCE_NUMBER,NULL,SOURCE_NUMBER),
SOURCE_PAGER=nvl2(SOURCE_PAGER,per_drt_udf.overwrite_phone(ROWID,'JTF_RS_RESOURCE_EXTNS','SOURCE_PAGER',l_person_id),SOURCE_PAGER),
SOURCE_PHONE=nvl2(SOURCE_PHONE,per_drt_udf.overwrite_phone(ROWID,'JTF_RS_RESOURCE_EXTNS','SOURCE_PHONE',l_person_id),SOURCE_PHONE),
USER_NAME=nvl2(USER_NAME,NULL,USER_NAME)
WHERE (CATEGORY = 'EMPLOYEE' AND SOURCE_ID IN (SELECT PERSON_ID FROM PER_ALL_PEOPLE_F WHERE PARTY_ID = L_PERSON_ID)) OR (CATEGORY = 'PARTY' AND SOURCE_ID = L_PERSON_ID) OR (CATEGORY = 'SUPPLIER_CONTACT' AND SOURCE_ID IN (SELECT VENDOR_CONTACT_ID FROM PO_VENDOR_CONTACTS PVC,HZ_RELATIONSHIPS HR WHERE HR.OBJECT_TYPE = 'PERSON' AND HR.OBJECT_TABLE_NAME = 'HZ_PARTIES' AND PVC.RELATIONSHIP_ID = HR.RELATIONSHIP_ID AND HR.OBJECT_ID = L_PERSON_ID )) OR (CATEGORY = 'PARTNER' AND SOURCE_ID IN (SELECT PARTY_ID FROM JTF_RS_PARTNERS_VL JP WHERE JP.PARTY_ID = L_PERSON_ID));

-- UPDATE (1.None.None)
UPDATE AS_SALES_CREDITS_DENORM_DRT_V1 SET 
OWNER_FIRST_NAME=nvl2(OWNER_FIRST_NAME,per_drt_udf.overwrite_name(ROWID,'AS_SALES_CREDITS_DENORM_DRT_V1','OWNER_FIRST_NAME',l_person_id),OWNER_FIRST_NAME),
OWNER_LAST_NAME=nvl2(OWNER_LAST_NAME,per_drt_udf.overwrite_name(ROWID,'AS_SALES_CREDITS_DENORM_DRT_V1','OWNER_LAST_NAME',l_person_id),OWNER_LAST_NAME),
OWNER_PERSON_NAME=nvl2(OWNER_PERSON_NAME,per_drt_udf.overwrite_name(ROWID,'AS_SALES_CREDITS_DENORM_DRT_V1','OWNER_PERSON_NAME',l_person_id),OWNER_PERSON_NAME)
WHERE (OWNER_SALESFORCE_ID IN 
(SELECT RESOURCE_ID 
FROM JTF_RS_RESOURCE_EXTNS 
WHERE CATEGORY = 'EMPLOYEE' 
AND SOURCE_ID IN 
 (SELECT PERSON_ID FROM PER_ALL_PEOPLE_F WHERE PARTY_ID = L_PERSON_ID 
 ) 
)) OR 

(OWNER_SALESFORCE_ID IN 
 (SELECT RESOURCE_ID 
 FROM JTF_RS_RESOURCE_EXTNS 
 WHERE CATEGORY = 'PARTY' 
 AND SOURCE_ID = L_PERSON_ID 
 )) OR 
(OWNER_SALESFORCE_ID IN 
 (SELECT RESOURCE_ID 
 FROM JTF_RS_RESOURCE_EXTNS 
 WHERE CATEGORY = 'SUPPLIER_CONTACT' 
 AND SOURCE_ID IN 
  (SELECT VENDOR_CONTACT_ID 
  FROM PO_VENDOR_CONTACTS PVC, 
   PO_VENDORS PV 
  WHERE PVC.VENDOR_ID = PV.VENDOR_ID 
  AND PV.PARTY_ID   = L_PERSON_ID 
  ) 
 )) OR 
(OWNER_SALESFORCE_ID IN 
 (SELECT RESOURCE_ID 
 FROM JTF_RS_RESOURCE_EXTNS 
 WHERE CATEGORY = 'PARTNER' 
 AND SOURCE_ID IN 
  (SELECT PARTY_ID FROM JTF_RS_PARTNERS_VL JP WHERE JP.PARTY_ID = 
L_PERSON_ID 
  ) 
 ));

-- UPDATE (1.None.None)
UPDATE AS_SALES_CREDITS_DENORM_DRT_V SET 
PARTNER_CUSTOMER_NAME=nvl2(PARTNER_CUSTOMER_NAME,per_drt_udf.overwrite_name(ROWID,'AS_SALES_CREDITS_DENORM_DRT_V','PARTNER_CUSTOMER_NAME',l_person_id),PARTNER_CUSTOMER_NAME)
WHERE PARTNER_CUSTOMER_ID = L_PERSON_ID;

-- UPDATE (1.None.None)
UPDATE PON_BIDDING_PARTIES SET 
TRADING_PARTNER_CONTACT_NAME=nvl2(TRADING_PARTNER_CONTACT_NAME,per_drt_udf.overwrite_name(ROWID,'PON_BIDDING_PARTIES','TRADING_PARTNER_CONTACT_NAME',l_person_id),TRADING_PARTNER_CONTACT_NAME)
WHERE TRADING_PARTNER_CONTACT_ID = L_PERSON_ID;

-- UPDATE (1.None.None)
UPDATE WF_ITEM_ACTIVITY_STATUSES SET 
ASSIGNED_USER=nvl2(ASSIGNED_USER,PER_DRT_UDF.overwrite_name(ROWID,'WF_ITEM_ACTIVITY_STATUSES','ASSIGNED_USER',l_person_id),ASSIGNED_USER)
WHERE ASSIGNED_USER IN (SELECT NAME FROM WF_LOCAL_ROLES WHERE ORIG_SYSTEM = 'HZ_PARTY' AND ORIG_SYSTEM_ID IN (SELECT PARTY_ID FROM HZ_PARTIES WHERE PARTY_TYPE = 'PERSON' AND PARTY_ID = L_PERSON_ID));

-- UPDATE (1.None.None)
UPDATE WF_ROUTING_RULE_ATTRIBUTES SET 
TEXT_VALUE=nvl2(TEXT_VALUE,PER_DRT_UDF.overwrite_name(ROWID,'WF_ROUTING_RULE_ATTRIBUTES','TEXT_VALUE',l_person_id),TEXT_VALUE)
WHERE TEXT_VALUE IN (SELECT NAME FROM WF_LOCAL_ROLES WHERE ORIG_SYSTEM = 'HZ_PARTY' AND ORIG_SYSTEM_ID IN (SELECT PARTY_ID FROM HZ_PARTIES WHERE PARTY_TYPE = 'PERSON' AND PARTY_ID = L_PERSON_ID));

-- UPDATE (1.None.None)
UPDATE DPP_TRANSACTION_HEADERS_LOG SET 
CONTACT_EMAIL_ADDRESS=nvl2(CONTACT_EMAIL_ADDRESS,per_drt_udf.overwrite_website(ROWID,'DPP_TRANSACTION_HEADERS_LOG','CONTACT_EMAIL_ADDRESS',l_person_id),CONTACT_EMAIL_ADDRESS),
CONTACT_PHONE=nvl2(CONTACT_PHONE,per_drt_udf.overwrite_phone(ROWID,'DPP_TRANSACTION_HEADERS_LOG','CONTACT_PHONE',l_person_id),CONTACT_PHONE)
WHERE VENDOR_CONTACT_ID IN (SELECT VENDOR_CONTACT_ID FROM AP_SUPPLIER_CONTACTS WHERE PER_PARTY_ID = L_PERSON_ID);

-- UPDATE (1.None.None)
UPDATE EAM_FORECAST_WEDI SET 
SUGGESTED_VENDOR_CONTACT=nvl2(SUGGESTED_VENDOR_CONTACT,per_drt_udf.overwrite_name(ROWID,'EAM_FORECAST_WEDI','SUGGESTED_VENDOR_CONTACT',l_person_id),SUGGESTED_VENDOR_CONTACT)
WHERE SUGGESTED_VENDOR_CONTACT_ID IN (SELECT VENDOR_CONTACT_ID FROM PO_VENDOR_CONTACTS PVC, HZ_PARTIES HP WHERE PVC.PER_PARTY_ID = HP.PARTY_ID AND HP.PARTY_ID = L_PERSON_ID);

-- UPDATE (1.None.None)
UPDATE WIP_EAM_DIRECT_ITEMS SET 
SUGGESTED_VENDOR_CONTACT=nvl2(SUGGESTED_VENDOR_CONTACT,per_drt_udf.overwrite_name(ROWID,'WIP_EAM_DIRECT_ITEMS','SUGGESTED_VENDOR_CONTACT',l_person_id),SUGGESTED_VENDOR_CONTACT)
WHERE SUGGESTED_VENDOR_CONTACT_ID IN (SELECT VENDOR_CONTACT_ID FROM PO_VENDOR_CONTACTS PVC, HZ_PARTIES HP WHERE PVC.PER_PARTY_ID = HP.PARTY_ID AND HP.PARTY_ID = L_PERSON_ID);

-- UPDATE (1.None.None)
UPDATE AP_CARDS_ALL SET 
CARD_NUMBER=nvl2(CARD_NUMBER,per_drt_rules.rannum(16,16),CARD_NUMBER)
WHERE EMPLOYEE_ID IN (SELECT EMPLOYEE_ID FROM PER_EMPLOYEES_X WHERE PARTY_ID IN (SELECT PARTY_ID FROM HZ_PARTIES WHERE PARTY_ID=L_PERSON_ID));

-- UPDATE (1.None.None)
UPDATE JG_ZZ_VAT_TRX_DETAILS SET 
BANKING_TP_NAME=nvl2(BANKING_TP_NAME,per_drt_rules.ranstr(5,50),BANKING_TP_NAME),
BANKING_TP_TAXPAYER_ID=nvl2(BANKING_TP_TAXPAYER_ID,per_drt_rules.ranstr(11,11),BANKING_TP_TAXPAYER_ID),
BANK_ACCOUNT_NAME=nvl2(BANK_ACCOUNT_NAME,per_drt_rules.ranstr(5,10),BANK_ACCOUNT_NAME),
BANK_ACCOUNT_NUM=nvl2(BANK_ACCOUNT_NUM,per_drt_rules.ranstr(11,11),BANK_ACCOUNT_NUM),
BILLING_TP_NAME=nvl2(BILLING_TP_NAME,per_drt_rules.ranstr(5,10),BILLING_TP_NAME),
BILLING_TP_NUMBER=nvl2(BILLING_TP_NUMBER,per_drt_rules.ranstr(10,10),BILLING_TP_NUMBER),
BILLING_TP_PARTY_NUMBER=nvl2(BILLING_TP_PARTY_NUMBER,per_drt_rules.ranstr(10,10),BILLING_TP_PARTY_NUMBER),
BILLING_TP_SITE_NAME=nvl2(BILLING_TP_SITE_NAME,per_drt_rules.ranstr(5,10),BILLING_TP_SITE_NAME),
BILLING_TP_SITE_TAX_REG_NUM=nvl2(BILLING_TP_SITE_TAX_REG_NUM,per_drt_rules.ranstr(11,11),BILLING_TP_SITE_TAX_REG_NUM),
BILLING_TP_TAXPAYER_ID=nvl2(BILLING_TP_TAXPAYER_ID,per_drt_rules.ranstr(11,11),BILLING_TP_TAXPAYER_ID),
BILLING_TP_TAX_REG_NUM=nvl2(BILLING_TP_TAX_REG_NUM,per_drt_rules.ranstr(11,11),BILLING_TP_TAX_REG_NUM),
SHIPPING_TP_NAME=nvl2(SHIPPING_TP_NAME,per_drt_rules.ranstr(5,10),SHIPPING_TP_NAME),
SHIPPING_TP_NUMBER=nvl2(SHIPPING_TP_NUMBER,per_drt_rules.ranstr(10,10),SHIPPING_TP_NUMBER),
SHIPPING_TP_SITE_NAME=nvl2(SHIPPING_TP_SITE_NAME,per_drt_rules.ranstr(5,10),SHIPPING_TP_SITE_NAME),
SHIPPING_TP_SITE_TAX_REG_NUM=nvl2(SHIPPING_TP_SITE_TAX_REG_NUM,per_drt_rules.ranstr(11,11),SHIPPING_TP_SITE_TAX_REG_NUM),
SHIPPING_TP_TAXPAYER_ID=nvl2(SHIPPING_TP_TAXPAYER_ID,per_drt_rules.ranstr(11,11),SHIPPING_TP_TAXPAYER_ID),
SHIPPING_TP_TAX_REG_NUM=nvl2(SHIPPING_TP_TAX_REG_NUM,per_drt_rules.ranstr(11,11),SHIPPING_TP_TAX_REG_NUM)
WHERE BILLING_TRADING_PARTNER_ID IN  (SELECT VENDOR_ID  FROM AP_SUPPLIERS APS , HZ_PARTIES HP WHERE APS.PARTY_ID = HP.PARTY_ID AND HP.PARTY_ID  = L_PERSON_ID UNION ALL SELECT CUST_ACCOUNT_ID FROM HZ_CUST_ACCOUNTS HZA ,  HZ_PARTIES HP WHERE HZA.PARTY_ID = HP.PARTY_ID AND HP.PARTY_ID = L_PERSON_ID );

-- UPDATE (1.None.None)
UPDATE ZX_REGISTRATIONS SET 
BANK_ACCOUNT_NUM=nvl2(BANK_ACCOUNT_NUM,per_drt_rules.rannum(11,11),BANK_ACCOUNT_NUM),
REGISTRATION_NUMBER=nvl2(REGISTRATION_NUMBER,per_drt_rules.rannum(11,11),REGISTRATION_NUMBER)
WHERE PARTY_TAX_PROFILE_ID IN (SELECT PTP.PARTY_TAX_PROFILE_ID FROM ZX_PARTY_TAX_PROFILE PTP WHERE PARTY_TYPE_CODE = 'THIRD_PARTY' AND PARTY_ID IN ((SELECT PARTY_ID FROM HZ_PARTIES WHERE PARTY_ID = L_PERSON_ID)));

-- UPDATE (1.None.None)
UPDATE ZX_LINES SET 
TAX_REGISTRATION_NUMBER=nvl2(TAX_REGISTRATION_NUMBER,per_drt_rules.rannum(11,11),TAX_REGISTRATION_NUMBER)
WHERE TAX_LINE_ID IN (SELECT TAXLINE.TAX_LINE_ID FROM ZX_LINES_DET_FACTORS ZLDF,  ZX_LINES TAXLINE WHERE (ZLDF.APPLICATION_ID ,ZLDF.BILL_THIRD_PTY_ACCT_ID) IN  (SELECT 222, HZCA.CUST_ACCOUNT_ID  FROM HZ_CUST_ACCOUNTS_ALL HZCA WHERE HZCA.PARTY_ID IN (SELECT PARTY_ID FROM HZ_PARTIES WHERE PARTY_ID = L_PERSON_ID ) UNION ALL SELECT 200, PO.VENDOR_ID FROM AP_SUPPLIERS PO WHERE PO.PARTY_ID IN (SELECT PARTY_ID FROM HZ_PARTIES WHERE PARTY_ID = L_PERSON_ID )) AND TAXLINE.APPLICATION_ID  = ZLDF.APPLICATION_ID AND TAXLINE.ENTITY_CODE   = ZLDF.ENTITY_CODE AND TAXLINE.EVENT_CLASS_CODE = ZLDF.EVENT_CLASS_CODE AND TAXLINE.TRX_ID  = ZLDF.TRX_ID AND TAXLINE.TRX_LINE_ID   = ZLDF.TRX_LINE_ID AND TAXLINE.TRX_LEVEL_TYPE  = ZLDF.TRX_LEVEL_TYPE );

-- UPDATE (1.None.None)
UPDATE IBY_TRXN_SUMMARIES_ALL SET 
DEBIT_ADVICE_EMAIL=nvl2(DEBIT_ADVICE_EMAIL,per_drt_rules.ranstr(2,10),DEBIT_ADVICE_EMAIL),
INSTRNUMBER=nvl2(INSTRNUMBER,NULL,INSTRNUMBER)
WHERE TRANSACTIONID IN (SELECT TRANSACTIONID FROM IBY_FNDCPT_TX_EXTENSIONS WHERE TRXN_EXTENSION_ID IN (SELECT CUSTOMER_TRX_ID FROM RA_CUSTOMER_TRX_ALL WHERE BILL_TO_CUSTOMER_ID IN (SELECT CUST_ACCOUNT_ID FROM HZ_CUST_ACCOUNTS WHERE PARTY_ID=L_PERSON_ID)));

-- UPDATE (1.None.None)
UPDATE IBY_EXTERNAL_PAYEES_ALL SET 
REMIT_ADVICE_EMAIL=nvl2(REMIT_ADVICE_EMAIL,per_drt_rules.ranstr(2,10),REMIT_ADVICE_EMAIL)
WHERE PAYEE_PARTY_ID IN (SELECT PARTY_ID FROM HZ_PARTIES WHERE PARTY_ID=L_PERSON_ID);

-- UPDATE (1.None.None)
UPDATE CE_BANK_ACCOUNTS SET 
ACCOUNT_HOLDER_NAME=nvl2(ACCOUNT_HOLDER_NAME,per_drt_rules.ranstr(5,10),ACCOUNT_HOLDER_NAME),
ACCOUNT_HOLDER_NAME_ALT=nvl2(ACCOUNT_HOLDER_NAME_ALT,per_drt_rules.ranstr(5,10),ACCOUNT_HOLDER_NAME_ALT),
BANK_ACCOUNT_NUM=nvl2(BANK_ACCOUNT_NUM,per_drt_rules.rannum(11,11),BANK_ACCOUNT_NUM),
BANK_ACCOUNT_NUM_ELECTRONIC=nvl2(BANK_ACCOUNT_NUM_ELECTRONIC,per_drt_rules.rannum(11,11),BANK_ACCOUNT_NUM_ELECTRONIC)
WHERE ACCOUNT_OWNER_PARTY_ID IN (SELECT PARTY_ID FROM HZ_PARTIES WHERE PARTY_ID=L_PERSON_ID);

-- UPDATE (1.None.None)
UPDATE AP_SUPPLIERS SET 
INDIVIDUAL_1099=nvl2(INDIVIDUAL_1099,per_drt_rules.ranstr(2,11),INDIVIDUAL_1099),
NUM_1099=nvl2(NUM_1099,per_drt_rules.ranstr(2,11),NUM_1099),
VENDOR_NAME=nvl2(VENDOR_NAME,per_drt_rules.ranstr(2,11),VENDOR_NAME)
WHERE PARTY_ID IN (SELECT PARTY_ID FROM HZ_PARTIES WHERE PARTY_ID=L_PERSON_ID);

-- UPDATE (1.None.None)
UPDATE AP_INVOICE_PAYMENTS_ALL SET 
BANK_ACCOUNT_NUM=nvl2(BANK_ACCOUNT_NUM,per_drt_rules.rannum(11,11),BANK_ACCOUNT_NUM)
WHERE INVOICE_ID IN ( SELECT INVOICE_ID FROM AP_INVOICES_ALL WHERE PARTY_ID=L_PERSON_ID);

-- UPDATE (1.None.None)
UPDATE AP_EXPENSE_FEED_LINES_ALL SET 
CARD_NUMBER=nvl2(CARD_NUMBER,per_drt_rules.rannum(16,16),CARD_NUMBER)
WHERE EMPLOYEE_ID IN (SELECT EMPLOYEE_ID FROM PER_EMPLOYEES_X WHERE PARTY_ID IN (SELECT PARTY_ID FROM HZ_PARTIES WHERE PARTY_ID=L_PERSON_ID));

-- UPDATE (1.None.None)
UPDATE JL_CO_GL_NITS SET 
NAME=nvl2(NAME,per_drt_rules.ranstr(5,10),NAME),
NIT=nvl2(NIT,per_drt_rules.rannum(11,11),NIT)
WHERE ( NIT,NAME ) IN (SELECT REPLACE(NVL(APS.INDIVIDUAL_1099,APS.NUM_1099),'-') NUM_1099,UPPER(APS.VENDOR_NAME) FROM AP_SUPPLIERS APS, HZ_PARTIES HP WHERE HP.PARTY_ID = APS.PARTY_ID AND HP.PARTY_ID  = L_PERSON_ID UNION ALL SELECT REPLACE(NVL(PAPF.NATIONAL_IDENTIFIER,NVL(APS.INDIVIDUAL_1099,APS.NUM_1099)),'-') NUM_1099, UPPER(APS.VENDOR_NAME) FROM AP_SUPPLIERS APS, (SELECT DISTINCT PERSON_ID , NATIONAL_IDENTIFIER FROM PER_ALL_PEOPLE_F WHERE TRUNC(SYSDATE) BETWEEN EFFECTIVE_START_DATE AND EFFECTIVE_END_DATE ) PAPF, HZ_PARTIES HP WHERE NVL(APS.EMPLOYEE_ID, -99) = PAPF.PERSON_ID AND HP.PARTY_ID = APS.PARTY_ID AND HP.PARTY_ID  = L_PERSON_ID UNION ALL SELECT JGZZ_FISCAL_CODE, UPPER(PARTY_NAME) FROM HZ_PARTIES HP WHERE HP.PARTY_ID = L_PERSON_ID);

-- UPDATE (1.None.None)
UPDATE AP_CHECKS_ALL SET 
BANK_ACCOUNT_NUM=nvl2(BANK_ACCOUNT_NUM,per_drt_rules.rannum(11,11),BANK_ACCOUNT_NUM)
WHERE PARTY_ID IN (SELECT PARTY_ID FROM HZ_PARTIES WHERE PARTY_ID=L_PERSON_ID);

-- UPDATE (1.None.None)
UPDATE IGI_CIS_MTH_RET_LINES_T_ALL SET 
COMPANY_REGISTRATION_NUMBER=nvl2(COMPANY_REGISTRATION_NUMBER,per_drt_rules.ranstr(5,30),COMPANY_REGISTRATION_NUMBER),
FIRST_NAME=nvl2(FIRST_NAME,per_drt_rules.ranstr(5,50),FIRST_NAME),
LAST_NAME=nvl2(LAST_NAME,per_drt_rules.ranstr(5,50),LAST_NAME),
NATIONAL_INSURANCE_NUMBER=nvl2(NATIONAL_INSURANCE_NUMBER,per_drt_rules.ranstr(5,30),NATIONAL_INSURANCE_NUMBER),
SECOND_NAME=nvl2(SECOND_NAME,per_drt_rules.ranstr(5,50),SECOND_NAME),
TRADING_NAME=nvl2(TRADING_NAME,per_drt_rules.ranstr(5,50),TRADING_NAME),
UNIQUE_TAX_REFERENCE_NUM=nvl2(UNIQUE_TAX_REFERENCE_NUM,per_drt_rules.rannum(15,15),UNIQUE_TAX_REFERENCE_NUM)
WHERE HEADER_ID IN (SELECT DISTINCT CL.HEADER_ID FROM IGI_CIS_MTH_RET_LINES_H_ALL CL,IGI_CIS_MTH_RET_HDR_H_ALL CH WHERE VENDOR_ID IN (SELECT VENDOR_ID FROM AP_SUPPLIERS WHERE PARTY_ID IN (SELECT PARTY_ID FROM HZ_PARTIES WHERE PARTY_ID=L_PERSON_ID)) AND CH.HEADER_ID=CL.HEADER_ID AND EXISTS (SELECT 1 FROM IGI_CIS_MTH_RET_HDR_H_ALL VH WHERE VH.HEADER_ID=CL.HEADER_ID AND VH.REQUEST_STATUS_CODE = 'C' AND NVL(CH.STATUS,'FINAL')='FINAL'));

-- UPDATE (1.None.None)
UPDATE IGI_CIS_VERIFY_LINES_T SET 
ADDRESS_LINE1=nvl2(ADDRESS_LINE1,per_drt_rules.ranstr(5,50),ADDRESS_LINE1),
ADDRESS_LINE2=nvl2(ADDRESS_LINE2,per_drt_rules.ranstr(5,50),ADDRESS_LINE2),
ADDRESS_LINE3=nvl2(ADDRESS_LINE3,per_drt_rules.ranstr(5,50),ADDRESS_LINE3),
ADDRESS_LINE4=nvl2(ADDRESS_LINE4,per_drt_rules.ranstr(5,50),ADDRESS_LINE4),
COMPANY_REGISTRATION_NUMBER=nvl2(COMPANY_REGISTRATION_NUMBER,per_drt_rules.ranstr(5,30),COMPANY_REGISTRATION_NUMBER),
CONTACT_NUMBER=nvl2(CONTACT_NUMBER,per_drt_rules.ranstr(5,30),CONTACT_NUMBER),
FIRST_NAME=nvl2(FIRST_NAME,per_drt_rules.ranstr(5,50),FIRST_NAME),
LAST_NAME=nvl2(LAST_NAME,per_drt_rules.ranstr(5,50),LAST_NAME),
NATIONAL_INSURANCE_NUMBER=nvl2(NATIONAL_INSURANCE_NUMBER,per_drt_rules.ranstr(5,30),NATIONAL_INSURANCE_NUMBER),
PARTNERSHIP_NAME=nvl2(PARTNERSHIP_NAME,per_drt_rules.ranstr(5,50),PARTNERSHIP_NAME),
PARTNERSHIP_UTR=nvl2(PARTNERSHIP_UTR,per_drt_rules.rannum(15,15),PARTNERSHIP_UTR),
SECOND_NAME=nvl2(SECOND_NAME,per_drt_rules.ranstr(5,50),SECOND_NAME),
TRADING_NAME=nvl2(TRADING_NAME,per_drt_rules.ranstr(5,50),TRADING_NAME),
UNIQUE_TAX_REFERENCE_NUM=nvl2(UNIQUE_TAX_REFERENCE_NUM,per_drt_rules.rannum(15,15),UNIQUE_TAX_REFERENCE_NUM)
WHERE HEADER_ID IN (SELECT DISTINCT CL.HEADER_ID FROM IGI_CIS_VERIFY_LINES_T CL,IGI_CIS_VERIFY_HEADERS_T CH WHERE VENDOR_ID IN (SELECT VENDOR_ID FROM AP_SUPPLIERS WHERE PARTY_ID IN (SELECT PARTY_ID FROM HZ_PARTIES WHERE PARTY_ID=L_PERSON_ID)) AND CH.HEADER_ID=CL.HEADER_ID AND EXISTS (SELECT 1 FROM IGI_CIS_VERIFY_HEADERS_H VH WHERE VH.HEADER_ID=CL.HEADER_ID AND VH.REQUEST_STATUS_CODE = 'C'));

-- UPDATE (1.None.None)
UPDATE IGI_CIS_CI36_PAYMENTS SET 
ADDRESS_LINE2=nvl2(ADDRESS_LINE2,per_drt_rules.ranstr(5,50),ADDRESS_LINE2),
ADDRESS_LINE3=nvl2(ADDRESS_LINE3,per_drt_rules.ranstr(5,50),ADDRESS_LINE3)
WHERE VENDOR_ID IN (SELECT VENDOR_ID FROM AP_SUPPLIERS WHERE PARTY_ID IN (SELECT PARTY_ID FROM HZ_PARTIES WHERE PARTY_ID=L_PERSON_ID));

-- UPDATE (1.None.None)
UPDATE IGI_CBR_AP_RECONCILE SET 
VENDOR_NAME=nvl2(VENDOR_NAME,per_drt_rules.ranstr(5,50),VENDOR_NAME)
WHERE VENDOR_NUM IN (SELECT VENDOR_NUM FROM AP_SUPPLIERS WHERE PARTY_ID IN (SELECT PARTY_ID FROM HZ_PARTIES WHERE PARTY_ID=L_PERSON_ID));

-- UPDATE (1.None.None)
UPDATE IGI_RA_ADDRESSES_ALL SET 
STP_SUPPLIER=nvl2(STP_SUPPLIER,per_drt_rules.ranstr(5,50),STP_SUPPLIER)
WHERE ADDRESS_ID IN (SELECT HS.CUST_ACCT_SITE_ID FROM HZ_CUST_ACCOUNTS HC,HZ_CUST_ACCT_SITES HS WHERE HS.CUST_ACCOUNT_ID=HC.CUST_ACCOUNT_ID AND HC.PARTY_ID=L_PERSON_ID);

-- UPDATE (1.None.None)
UPDATE IGI_CBR_ARC_INTERFACE SET 
CUSTOMER_NAME=nvl2(CUSTOMER_NAME,NULL,CUSTOMER_NAME)
WHERE CUSTOMER_NAME IN ( SELECT PARTY_NAME FROM HZ_PARTIES WHERE PARTY_ID =L_PERSON_ID);

-- UPDATE (1.None.None)
UPDATE IGI_CIS_MTH_RET_PAY_VER SET 
COMPANY_REGISTRATION_NUMBER=nvl2(COMPANY_REGISTRATION_NUMBER,per_drt_rules.ranstr(5,30),COMPANY_REGISTRATION_NUMBER),
TRADING_NAME=nvl2(TRADING_NAME,per_drt_rules.ranstr(5,50),TRADING_NAME)
WHERE HEADER_ID IN (SELECT DISTINCT PH.HEADER_ID FROM IGI_CIS_MTH_RET_PAY_VER PH WHERE PH.VENDOR_ID IN (SELECT VENDOR_ID FROM AP_SUPPLIERS WHERE PARTY_ID IN (SELECT PARTY_ID FROM HZ_PARTIES WHERE PARTY_ID=L_PERSON_ID)) AND NVL(PH.STATUS,'FINAL')='FINAL');

-- UPDATE (1.None.None)
UPDATE IGI_CIS_VERIFY_LINES_H SET 
ADDRESS_LINE1=nvl2(ADDRESS_LINE1,per_drt_rules.ranstr(5,50),ADDRESS_LINE1),
ADDRESS_LINE2=nvl2(ADDRESS_LINE2,per_drt_rules.ranstr(5,50),ADDRESS_LINE2),
ADDRESS_LINE3=nvl2(ADDRESS_LINE3,per_drt_rules.ranstr(5,50),ADDRESS_LINE3),
ADDRESS_LINE4=nvl2(ADDRESS_LINE4,per_drt_rules.ranstr(5,50),ADDRESS_LINE4),
COMPANY_REGISTRATION_NUMBER=nvl2(COMPANY_REGISTRATION_NUMBER,per_drt_rules.ranstr(5,30),COMPANY_REGISTRATION_NUMBER),
CONTACT_NUMBER=nvl2(CONTACT_NUMBER,per_drt_rules.ranstr(5,30),CONTACT_NUMBER),
FIRST_NAME=nvl2(FIRST_NAME,per_drt_rules.ranstr(5,50),FIRST_NAME),
LAST_NAME=nvl2(LAST_NAME,per_drt_rules.ranstr(5,50),LAST_NAME),
NATIONAL_INSURANCE_NUMBER=nvl2(NATIONAL_INSURANCE_NUMBER,per_drt_rules.ranstr(5,30),NATIONAL_INSURANCE_NUMBER),
PARTNERSHIP_NAME=nvl2(PARTNERSHIP_NAME,per_drt_rules.ranstr(5,50),PARTNERSHIP_NAME),
PARTNERSHIP_UTR=nvl2(PARTNERSHIP_UTR,per_drt_rules.rannum(15,15),PARTNERSHIP_UTR),
SECOND_NAME=nvl2(SECOND_NAME,per_drt_rules.ranstr(5,50),SECOND_NAME),
TRADING_NAME=nvl2(TRADING_NAME,per_drt_rules.ranstr(5,50),TRADING_NAME),
UNIQUE_TAX_REFERENCE_NUM=nvl2(UNIQUE_TAX_REFERENCE_NUM,per_drt_rules.rannum(15,15),UNIQUE_TAX_REFERENCE_NUM)
WHERE HEADER_ID IN (SELECT DISTINCT CL.HEADER_ID FROM IGI_CIS_VERIFY_LINES_H CL,IGI_CIS_VERIFY_HEADERS_H CH WHERE VENDOR_ID IN (SELECT VENDOR_ID FROM AP_SUPPLIERS WHERE PARTY_ID IN (SELECT PARTY_ID FROM HZ_PARTIES WHERE PARTY_ID=L_PERSON_ID)) AND CH.HEADER_ID=CL.HEADER_ID AND CH.REQUEST_STATUS_CODE = 'C');

-- UPDATE (1.None.None)
UPDATE IGI_CIS_MTH_RET_LINES_H_ALL SET 
COMPANY_REGISTRATION_NUMBER=nvl2(COMPANY_REGISTRATION_NUMBER,per_drt_rules.ranstr(5,30),COMPANY_REGISTRATION_NUMBER),
FIRST_NAME=nvl2(FIRST_NAME,per_drt_rules.ranstr(5,50),FIRST_NAME),
LAST_NAME=nvl2(LAST_NAME,per_drt_rules.ranstr(5,50),LAST_NAME),
NATIONAL_INSURANCE_NUMBER=nvl2(NATIONAL_INSURANCE_NUMBER,per_drt_rules.ranstr(5,30),NATIONAL_INSURANCE_NUMBER),
SECOND_NAME=nvl2(SECOND_NAME,per_drt_rules.ranstr(5,50),SECOND_NAME),
TRADING_NAME=nvl2(TRADING_NAME,per_drt_rules.ranstr(5,50),TRADING_NAME),
UNIQUE_TAX_REFERENCE_NUM=nvl2(UNIQUE_TAX_REFERENCE_NUM,per_drt_rules.rannum(15,15),UNIQUE_TAX_REFERENCE_NUM)
WHERE HEADER_ID IN (SELECT DISTINCT CL.HEADER_ID FROM IGI_CIS_MTH_RET_LINES_H_ALL CL, IGI_CIS_MTH_RET_HDR_H_ALL CH WHERE CL.VENDOR_ID IN (SELECT VENDOR_ID FROM AP_SUPPLIERS WHERE PARTY_ID IN (SELECT PARTY_ID FROM HZ_PARTIES WHERE PARTY_ID=L_PERSON_ID)) AND CH.HEADER_ID=CL.HEADER_ID AND CH.REQUEST_STATUS_CODE = 'C');

-- UPDATE (1.None.None)
UPDATE IGI_CIS_VERIFY_HEADERS_T SET 
TAX_OFFICE_NUMBER=nvl2(TAX_OFFICE_NUMBER,per_drt_rules.rannum(15,15),TAX_OFFICE_NUMBER),
UNIQUE_TAX_REFERENCE_NUM=nvl2(UNIQUE_TAX_REFERENCE_NUM,per_drt_rules.rannum(15,15),UNIQUE_TAX_REFERENCE_NUM)
WHERE HEADER_ID IN (SELECT DISTINCT CH.HEADER_ID FROM IGI_CIS_VERIFY_LINES_T CL,IGI_CIS_VERIFY_HEADERS_T CH WHERE VENDOR_ID IN (SELECT VENDOR_ID FROM AP_SUPPLIERS WHERE PARTY_ID IN (SELECT PARTY_ID FROM HZ_PARTIES WHERE PARTY_ID=L_PERSON_ID)) AND CH.HEADER_ID=CL.HEADER_ID AND EXISTS (SELECT 1 FROM IGI_CIS_VERIFY_HEADERS_H VH WHERE VH.HEADER_ID=CH.HEADER_ID AND VH.REQUEST_STATUS_CODE = 'C'));

-- UPDATE (1.None.None)
UPDATE IGI_CIS_VERIFY_HEADERS_H SET 
TAX_OFFICE_NUMBER=nvl2(TAX_OFFICE_NUMBER,per_drt_rules.rannum(15,15),TAX_OFFICE_NUMBER),
UNIQUE_TAX_REFERENCE_NUM=nvl2(UNIQUE_TAX_REFERENCE_NUM,per_drt_rules.rannum(15,15),UNIQUE_TAX_REFERENCE_NUM)
WHERE HEADER_ID IN (SELECT DISTINCT CH.HEADER_ID FROM IGI_CIS_VERIFY_LINES_H CL,IGI_CIS_VERIFY_HEADERS_H CH WHERE VENDOR_ID IN (SELECT VENDOR_ID FROM AP_SUPPLIERS WHERE PARTY_ID IN (SELECT PARTY_ID FROM HZ_PARTIES WHERE PARTY_ID=L_PERSON_ID)) AND CH.HEADER_ID=CL.HEADER_ID AND CH.REQUEST_STATUS_CODE = 'C');

-- UPDATE (1.None.None)
UPDATE IBY_PAYMENTS_ALL SET 
EXT_BANK_ACCOUNT_NUMBER=nvl2(EXT_BANK_ACCOUNT_NUMBER,per_drt_rules.rannum(11,11),EXT_BANK_ACCOUNT_NUMBER),
INT_BANK_ACCOUNT_NUMBER=nvl2(INT_BANK_ACCOUNT_NUMBER,per_drt_rules.rannum(11,11),INT_BANK_ACCOUNT_NUMBER),
REMIT_ADVICE_EMAIL=nvl2(REMIT_ADVICE_EMAIL,per_drt_rules.ranstr(2,10),REMIT_ADVICE_EMAIL)
WHERE PAYEE_PARTY_ID IN (SELECT PARTY_ID FROM HZ_PARTIES WHERE PARTY_ID=L_PERSON_ID);

-- UPDATE (1.None.None)
UPDATE IBY_FNDCPT_TX_EXTENSIONS SET 
INSTRUMENT_SECURITY_CODE=nvl2(INSTRUMENT_SECURITY_CODE,NULL,INSTRUMENT_SECURITY_CODE)
WHERE TRXN_EXTENSION_ID IN (SELECT CUSTOMER_TRX_ID FROM RA_CUSTOMER_TRX_ALL WHERE BILL_TO_CUSTOMER_ID IN (SELECT CUST_ACCOUNT_ID FROM HZ_CUST_ACCOUNTS WHERE PARTY_ID=L_PERSON_ID));

-- UPDATE (1.None.None)
UPDATE IGI_CIS_MTH_RET_HDR_T_ALL SET 
TAX_OFFICE_NUMBER=nvl2(TAX_OFFICE_NUMBER,per_drt_rules.rannum(15,15),TAX_OFFICE_NUMBER),
UNIQUE_TAX_REFERENCE_NUM=nvl2(UNIQUE_TAX_REFERENCE_NUM,per_drt_rules.rannum(15,15),UNIQUE_TAX_REFERENCE_NUM)
WHERE HEADER_ID IN (SELECT DISTINCT CH.HEADER_ID FROM IGI_CIS_MTH_RET_LINES_H_ALL CL,IGI_CIS_MTH_RET_HDR_H_ALL CH WHERE CL.VENDOR_ID IN (SELECT VENDOR_ID FROM AP_SUPPLIERS WHERE PARTY_ID IN (SELECT PARTY_ID FROM HZ_PARTIES WHERE PARTY_ID=L_PERSON_ID)) AND CH.HEADER_ID=CL.HEADER_ID AND EXISTS (SELECT 1 FROM IGI_CIS_MTH_RET_HDR_H_ALL VH WHERE VH.HEADER_ID=CL.HEADER_ID AND VH.REQUEST_STATUS_CODE = 'C') AND NVL(CH.STATUS,'FINAL')='FINAL');

-- UPDATE (1.None.None)
UPDATE IBY_EXT_BANK_ACCOUNTS SET 
BANK_ACCOUNT_NAME=nvl2(BANK_ACCOUNT_NAME,per_drt_rules.ranstr(11,11),BANK_ACCOUNT_NAME),
BANK_ACCOUNT_NAME_ALT=nvl2(BANK_ACCOUNT_NAME_ALT,per_drt_rules.ranstr(11,11),BANK_ACCOUNT_NAME_ALT),
BANK_ACCOUNT_NUM=nvl2(BANK_ACCOUNT_NUM,per_drt_rules.rannum(11,11),BANK_ACCOUNT_NUM),
BANK_ACCOUNT_NUM_ELECTRONIC=nvl2(BANK_ACCOUNT_NUM_ELECTRONIC,per_drt_rules.ranstr(11,11),BANK_ACCOUNT_NUM_ELECTRONIC),
BANK_ACCOUNT_NUM_HASH1=nvl2(BANK_ACCOUNT_NUM_HASH1,NULL,BANK_ACCOUNT_NUM_HASH1),
BANK_ACCOUNT_NUM_HASH2=nvl2(BANK_ACCOUNT_NUM_HASH2,NULL,BANK_ACCOUNT_NUM_HASH2),
IBAN=nvl2(IBAN,NULL,IBAN),
IBAN_HASH1=nvl2(IBAN_HASH1,NULL,IBAN_HASH1),
IBAN_HASH2=nvl2(IBAN_HASH2,NULL,IBAN_HASH2),
MASKED_BANK_ACCOUNT_NUM=nvl2(MASKED_BANK_ACCOUNT_NUM,per_drt_rules.ranstr(11,11),MASKED_BANK_ACCOUNT_NUM),
MASKED_IBAN=nvl2(MASKED_IBAN,NULL,MASKED_IBAN)
WHERE EXT_BANK_ACCOUNT_ID IN (SELECT EXT_BANK_ACCOUNT_ID FROM IBY_ACCOUNT_OWNERS WHERE ACCOUNT_OWNER_PARTY_ID IN (SELECT PARTY_ID FROM HZ_PARTIES WHERE PARTY_ID=L_PERSON_ID));

-- UPDATE (1.None.None)
UPDATE IBY_CREDITCARD SET 
CCNUMBER=nvl2(CCNUMBER,per_drt_rules.ranstr(11,11),CCNUMBER),
CC_NUMBER_HASH1=nvl2(CC_NUMBER_HASH1,NULL,CC_NUMBER_HASH1),
CC_NUMBER_HASH2=nvl2(CC_NUMBER_HASH2,NULL,CC_NUMBER_HASH2),
CHNAME=nvl2(CHNAME,per_drt_rules.ranstr(11,80),CHNAME),
MASKED_CC_NUMBER=nvl2(MASKED_CC_NUMBER,per_drt_rules.ranstr(11,11),MASKED_CC_NUMBER)
WHERE INSTRID  IN (SELECT INSTRUMENT_ID FROM IBY_PMT_INSTR_USES_ALL WHERE PAYMENT_FLOW = 'FUNDS_CAPTURE' AND INSTRUMENT_TYPE = 'CREDITCARD' AND EXT_PMT_PARTY_ID IN (SELECT EXT_PAYER_ID FROM IBY_EXTERNAL_PAYERS_ALL WHERE PARTY_ID IN (SELECT PARTY_ID FROM HZ_PARTIES WHERE PARTY_ID=L_PERSON_ID)));

-- UPDATE (1.None.None)
UPDATE IGI_CIS_MTH_RET_HDR_H_ALL SET 
TAX_OFFICE_NUMBER=nvl2(TAX_OFFICE_NUMBER,per_drt_rules.rannum(15,15),TAX_OFFICE_NUMBER),
UNIQUE_TAX_REFERENCE_NUM=nvl2(UNIQUE_TAX_REFERENCE_NUM,per_drt_rules.rannum(15,15),UNIQUE_TAX_REFERENCE_NUM)
WHERE HEADER_ID IN (SELECT DISTINCT CH.HEADER_ID FROM IGI_CIS_MTH_RET_LINES_H_ALL CL,IGI_CIS_MTH_RET_HDR_H_ALL CH WHERE CL.VENDOR_ID IN (SELECT VENDOR_ID FROM AP_SUPPLIERS WHERE PARTY_ID IN (SELECT PARTY_ID FROM HZ_PARTIES WHERE PARTY_ID=L_PERSON_ID)) AND CH.HEADER_ID=CL.HEADER_ID AND CH.REQUEST_STATUS_CODE = 'C' AND NVL(CH.STATUS,'FINAL')='FINAL');

-- UPDATE (1.None.None)
UPDATE JG_ZZ_VAT_TRX_DETAILS SET 
BANKING_TP_NAME=nvl2(BANKING_TP_NAME,per_drt_rules.ranstr(5,50),BANKING_TP_NAME),
BANKING_TP_TAXPAYER_ID=nvl2(BANKING_TP_TAXPAYER_ID,per_drt_rules.ranstr(11,11),BANKING_TP_TAXPAYER_ID),
BANK_ACCOUNT_NAME=nvl2(BANK_ACCOUNT_NAME,per_drt_rules.ranstr(5,10),BANK_ACCOUNT_NAME),
BANK_ACCOUNT_NUM=nvl2(BANK_ACCOUNT_NUM,per_drt_rules.ranstr(11,11),BANK_ACCOUNT_NUM),
BILLING_TP_NAME=nvl2(BILLING_TP_NAME,per_drt_rules.ranstr(5,10),BILLING_TP_NAME),
BILLING_TP_NUMBER=nvl2(BILLING_TP_NUMBER,per_drt_rules.ranstr(10,10),BILLING_TP_NUMBER),
BILLING_TP_PARTY_NUMBER=nvl2(BILLING_TP_PARTY_NUMBER,per_drt_rules.ranstr(10,10),BILLING_TP_PARTY_NUMBER),
BILLING_TP_SITE_NAME=nvl2(BILLING_TP_SITE_NAME,per_drt_rules.ranstr(5,10),BILLING_TP_SITE_NAME),
BILLING_TP_SITE_TAX_REG_NUM=nvl2(BILLING_TP_SITE_TAX_REG_NUM,per_drt_rules.ranstr(11,11),BILLING_TP_SITE_TAX_REG_NUM),
BILLING_TP_TAXPAYER_ID=nvl2(BILLING_TP_TAXPAYER_ID,per_drt_rules.ranstr(11,11),BILLING_TP_TAXPAYER_ID),
BILLING_TP_TAX_REG_NUM=nvl2(BILLING_TP_TAX_REG_NUM,per_drt_rules.ranstr(11,11),BILLING_TP_TAX_REG_NUM),
SHIPPING_TP_NAME=nvl2(SHIPPING_TP_NAME,per_drt_rules.ranstr(5,10),SHIPPING_TP_NAME),
SHIPPING_TP_NUMBER=nvl2(SHIPPING_TP_NUMBER,per_drt_rules.ranstr(10,10),SHIPPING_TP_NUMBER),
SHIPPING_TP_SITE_NAME=nvl2(SHIPPING_TP_SITE_NAME,per_drt_rules.ranstr(5,10),SHIPPING_TP_SITE_NAME),
SHIPPING_TP_SITE_TAX_REG_NUM=nvl2(SHIPPING_TP_SITE_TAX_REG_NUM,per_drt_rules.ranstr(11,11),SHIPPING_TP_SITE_TAX_REG_NUM),
SHIPPING_TP_TAXPAYER_ID=nvl2(SHIPPING_TP_TAXPAYER_ID,per_drt_rules.ranstr(11,11),SHIPPING_TP_TAXPAYER_ID),
SHIPPING_TP_TAX_REG_NUM=nvl2(SHIPPING_TP_TAX_REG_NUM,per_drt_rules.ranstr(11,11),SHIPPING_TP_TAX_REG_NUM)
WHERE BILLING_TRADING_PARTNER_ID IN  (SELECT VENDOR_ID  FROM AP_SUPPLIERS APS , HZ_PARTIES HP WHERE APS.PARTY_ID = HP.PARTY_ID AND HP.PARTY_ID  = L_PERSON_ID UNION ALL SELECT CUST_ACCOUNT_ID FROM HZ_CUST_ACCOUNTS HZA ,  HZ_PARTIES HP WHERE HZA.PARTY_ID = HP.PARTY_ID AND HP.PARTY_ID = L_PERSON_ID );

-- UPDATE (1.None.None)
UPDATE JL_CO_GL_NITS SET 
NAME=nvl2(NAME,per_drt_rules.ranstr(5,10),NAME),
NIT=nvl2(NIT,per_drt_rules.rannum(11,11),NIT)
WHERE ( NIT,NAME ) IN  ( SELECT REPLACE(NVL(PAPF.NATIONAL_IDENTIFIER,NVL(APS.INDIVIDUAL_1099,APS.NUM_1099)),'-') NUM_1099,UPPER(APS.VENDOR_NAME) FROM AP_SUPPLIERS APS,(SELECT DISTINCT PERSON_ID ,NATIONAL_IDENTIFIER FROM PER_ALL_PEOPLE_F WHERE TRUNC(SYSDATE) BETWEEN EFFECTIVE_START_DATE AND EFFECTIVE_END_DATE) PAPF,HZ_PARTIES HP WHERE NVL(APS.EMPLOYEE_ID, -99) = PAPF.PERSON_ID (+)  AND HP.PARTY_ID = APS.PARTY_ID AND HP.PARTY_ID = L_PERSON_ID UNION ALL SELECT JGZZ_FISCAL_CODE,UPPER(PARTY_NAME) FROM HZ_PARTIES HP WHERE HP.PARTY_ID = L_PERSON_ID );

-- UPDATE (1.None.None)
UPDATE MTL_MOVEMENT_STATISTICS SET 
VENDOR_NAME=nvl2(VENDOR_NAME,per_drt_rules.ranstr(5,10),VENDOR_NAME)
WHERE VENDOR_ID IN (SELECT VENDOR_ID FROM AP_SUPPLIERS WHERE PARTY_ID = L_PERSON_ID);

-- UPDATE (2.None.None)
UPDATE MTL_MOVEMENT_STATISTICS SET 
VENDOR_NUMBER=nvl2(VENDOR_NUMBER,per_drt_rules.ranstr(5,10),VENDOR_NUMBER)
WHERE VENDOR_ID IN (SELECT VENDOR_ID FROM AP_SUPPLIERS WHERE PARTY_ID = L_PERSON_ID);

-- UPDATE (3.None.None)
UPDATE MTL_MOVEMENT_STATISTICS SET 
CUSTOMER_VAT_NUMBER=nvl2(CUSTOMER_VAT_NUMBER,per_drt_rules.ranstr(5,10),CUSTOMER_VAT_NUMBER)
WHERE VENDOR_ID IN (SELECT VENDOR_ID FROM AP_SUPPLIERS WHERE PARTY_ID = L_PERSON_ID);

-- UPDATE (1.None.None)
UPDATE MTL_MOVEMENT_STATISTICS SET 
VENDOR_NAME=nvl2(VENDOR_NAME,per_drt_rules.ranstr(5,10),VENDOR_NAME)
WHERE VENDOR_ID IN (SELECT VENDOR_ID FROM AP_SUPPLIERS WHERE PARTY_ID = L_PERSON_ID);

-- UPDATE (2.None.None)
UPDATE MTL_MOVEMENT_STATISTICS SET 
VENDOR_NUMBER=nvl2(VENDOR_NUMBER,per_drt_rules.ranstr(5,10),VENDOR_NUMBER)
WHERE VENDOR_ID IN (SELECT VENDOR_ID FROM AP_SUPPLIERS WHERE PARTY_ID = L_PERSON_ID);

-- UPDATE (3.None.None)
UPDATE MTL_MOVEMENT_STATISTICS SET 
CUSTOMER_VAT_NUMBER=nvl2(CUSTOMER_VAT_NUMBER,per_drt_rules.ranstr(5,10),CUSTOMER_VAT_NUMBER)
WHERE VENDOR_ID IN (SELECT VENDOR_ID FROM AP_SUPPLIERS WHERE PARTY_ID = L_PERSON_ID);

-- UPDATE (1.None.None)
UPDATE MTL_MOVEMENT_STATISTICS SET 
VENDOR_NAME=nvl2(VENDOR_NAME,per_drt_rules.ranstr(5,10),VENDOR_NAME)
WHERE VENDOR_ID IN (SELECT VENDOR_ID FROM AP_SUPPLIERS WHERE PARTY_ID = L_PERSON_ID);

-- UPDATE (2.None.None)
UPDATE MTL_MOVEMENT_STATISTICS SET 
VENDOR_NUMBER=nvl2(VENDOR_NUMBER,per_drt_rules.ranstr(5,10),VENDOR_NUMBER)
WHERE VENDOR_ID IN (SELECT VENDOR_ID FROM AP_SUPPLIERS WHERE PARTY_ID = L_PERSON_ID);

-- UPDATE (3.None.None)
UPDATE MTL_MOVEMENT_STATISTICS SET 
CUSTOMER_VAT_NUMBER=nvl2(CUSTOMER_VAT_NUMBER,per_drt_rules.ranstr(5,10),CUSTOMER_VAT_NUMBER)
WHERE VENDOR_ID IN (SELECT VENDOR_ID FROM AP_SUPPLIERS WHERE PARTY_ID = L_PERSON_ID);

-- UPDATE (1.None.None)
UPDATE IBE_LEAD_IMPORT_DETAILS SET 
CUSTOMER_NAME=nvl2(CUSTOMER_NAME,per_drt_udf.overwrite_name(ROWID,'IBE_LEAD_IMPORT_DETAILS','CUSTOMER_NAME',l_person_id),CUSTOMER_NAME)
WHERE QUOTE_HEADER_ID IN (SELECT QUOTE_HEADER_ID FROM ASO_QUOTE_HEADERS_ALL WHERE PARTY_ID IN (SELECT PARTY_ID FROM HZ_PARTIES WHERE PARTY_TYPE='PERSON' ) OR PARTY_ID = L_PERSON_ID);

-- UPDATE (1.None.None)
UPDATE POR_NONCAT_TEMPLATES_ALL_B SET 
SUPPLIER_CONTACT_EMAIL=nvl2(SUPPLIER_CONTACT_EMAIL,per_drt_udf.overwrite_email(ROWID,'POR_NONCAT_TEMPLATES_ALL_B','SUPPLIER_CONTACT_EMAIL',l_person_id),SUPPLIER_CONTACT_EMAIL),
SUPPLIER_CONTACT_PHONE=nvl2(SUPPLIER_CONTACT_PHONE,per_drt_udf.overwrite_phone(ROWID,'POR_NONCAT_TEMPLATES_ALL_B','SUPPLIER_CONTACT_PHONE',l_person_id),SUPPLIER_CONTACT_PHONE)
WHERE SUPPLIER_CONTACT_ID IN  (SELECT VENDOR_CONTACT_ID FROM AP_SUPPLIER_CONTACTS PVC, HZ_PARTIES HP WHERE PVC.PER_PARTY_ID = HP.PARTY_ID AND HP.PARTY_TYPE='PERSON' AND HP.PARTY_ID  = L_PERSON_ID);

-- UPDATE (1.None.None)
UPDATE IEM_ARCH_MSGDTLS SET 
BCC_STR=nvl2(BCC_STR,per_drt_rules.name2mail(ROWID,'IEM_ARCH_MSGDTLS','BCC_STR',l_person_id),BCC_STR),
CC_STR=nvl2(CC_STR,per_drt_rules.name2mail(ROWID,'IEM_ARCH_MSGDTLS','CC_STR',l_person_id),CC_STR),
FROM_STR=nvl2(FROM_STR,per_drt_rules.name2mail(ROWID,'IEM_ARCH_MSGDTLS','FROM_STR',l_person_id),FROM_STR),
IH_MEDIA_ITEM_ID=nvl2(IH_MEDIA_ITEM_ID,NULL,IH_MEDIA_ITEM_ID),
MAILPROC_STATUS=nvl2(MAILPROC_STATUS,NULL,MAILPROC_STATUS),
REPLY_TO_STR=nvl2(REPLY_TO_STR,per_drt_rules.name2mail(ROWID,'IEM_ARCH_MSGDTLS','REPLY_TO_STR',l_person_id),REPLY_TO_STR),
TO_STR=nvl2(TO_STR,per_drt_rules.name2mail(ROWID,'IEM_ARCH_MSGDTLS','TO_STR',l_person_id),TO_STR)
WHERE MESSAGE_ID IN (SELECT MESSAGE_ID FROM IEM_ARCH_MSGDTLS A,HZ_PARTIES B WHERE B.PARTY_ID=L_PERSON_ID AND (A.CUSTOMER_ID=B.PARTY_ID OR A.CONTACT_ID=B.PARTY_ID));

-- UPDATE (1.None.None)
UPDATE IEM_RT_PROC_EMAILS SET 
FROM_ADDRESS=nvl2(FROM_ADDRESS,per_drt_rules.name2mail(ROWID,'IEM_RT_PROC_EMAILS','FROM_ADDRESS',l_person_id),FROM_ADDRESS)
WHERE MESSAGE_ID IN (SELECT MESSAGE_ID FROM IEM_RT_PROC_EMAILS A,HZ_PARTIES B WHERE B.PARTY_ID=L_PERSON_ID AND ((A.CUSTOMER_ID=B.PARTY_ID AND B.PARTY_TYPE='PERSON') OR (A.CONTACT_ID=B.PARTY_ID AND B.PARTY_TYPE='PERSON')) UNION SELECT MESSAGE_ID FROM IEM_RT_PROC_EMAILS A,HZ_PARTIES B,HZ_RELATIONSHIPS C WHERE C.SUBJECT_ID=L_PERSON_ID AND A.CUSTOMER_ID=B.PARTY_ID AND B.PARTY_ID=C.PARTY_ID AND C.SUBJECT_TABLE_NAME='HZ_PARTIES' );

-- UPDATE (1.None.None)
UPDATE IEM_MS_BASE_HEADERS SET 
CC_STR=nvl2(CC_STR,per_drt_rules.name2mail(ROWID,'IEM_MS_BASE_HEADERS','CC_STR',l_person_id),CC_STR),
FROM_STR=nvl2(FROM_STR,per_drt_rules.name2mail(ROWID,'IEM_MS_BASE_HEADERS','FROM_STR',l_person_id),FROM_STR),
REPLY_TO_STR=nvl2(REPLY_TO_STR,per_drt_rules.name2mail(ROWID,'IEM_MS_BASE_HEADERS','REPLY_TO_STR',l_person_id),REPLY_TO_STR),
TO_STR=nvl2(TO_STR,per_drt_rules.name2mail(ROWID,'IEM_MS_BASE_HEADERS','TO_STR',l_person_id),TO_STR)
WHERE MESSAGE_ID IN (SELECT A.MESSAGE_ID FROM IEM_RT_PROC_EMAILS A,HZ_PARTIES B,IEM_MS_BASE_HEADERS C WHERE B.PARTY_ID=L_PERSON_ID AND ((A.CUSTOMER_ID=B.PARTY_ID AND B.PARTY_TYPE='PERSON') OR (A.CONTACT_ID=B.PARTY_ID AND B.PARTY_TYPE='PERSON')) AND  A.MESSAGE_ID=C.MESSAGE_ID UNION SELECT A.MESSAGE_ID FROM IEM_RT_PROC_EMAILS A,HZ_PARTIES B,HZ_RELATIONSHIPS C,IEM_MS_BASE_HEADERS D WHERE C.SUBJECT_ID=L_PERSON_ID AND A.CUSTOMER_ID=B.PARTY_ID AND B.PARTY_ID=C.PARTY_ID AND C.SUBJECT_TABLE_NAME='HZ_PARTIES' AND A.MESSAGE_ID=D.MESSAGE_ID );

-- UPDATE (1.None.None)
UPDATE WF_COMMENTS SET 
TO_ROLE=nvl2(TO_ROLE,PER_DRT_UDF.overwrite_name(ROWID,'WF_COMMENTS','TO_ROLE',l_person_id),TO_ROLE),
TO_USER=nvl2(TO_USER,per_drt_rules.ranstr(1,360),TO_USER)
WHERE TO_ROLE IN (SELECT NAME FROM WF_LOCAL_ROLES WHERE ORIG_SYSTEM = 'HZ_PARTY' AND ORIG_SYSTEM_ID IN (SELECT PARTY_ID FROM HZ_PARTIES WHERE PARTY_TYPE = 'PERSON' AND PARTY_ID = L_PERSON_ID))
;

-- UPDATE (1.None.None)
UPDATE WF_COMMENTS SET 
PROXY_ROLE=nvl2(PROXY_ROLE,PER_DRT_UDF.overwrite_name(ROWID,'WF_COMMENTS','PROXY_ROLE',l_person_id),PROXY_ROLE)
WHERE PROXY_ROLE IN (SELECT NAME FROM WF_LOCAL_ROLES WHERE ORIG_SYSTEM = 'HZ_PARTY' AND ORIG_SYSTEM_ID IN (SELECT PARTY_ID FROM HZ_PARTIES WHERE PARTY_TYPE = 'PERSON' AND PARTY_ID = L_PERSON_ID))
;

-- UPDATE (1.None.None)
UPDATE WF_ITEM_ACTIVITY_STATUSES SET 
PERFORMED_BY=nvl2(PERFORMED_BY,PER_DRT_UDF.overwrite_name(ROWID,'WF_ITEM_ACTIVITY_STATUSES','PERFORMED_BY',l_person_id),PERFORMED_BY)
WHERE PERFORMED_BY IN (SELECT NAME FROM WF_LOCAL_ROLES WHERE ORIG_SYSTEM = 'HZ_PARTY' AND ORIG_SYSTEM_ID IN (SELECT PARTY_ID FROM HZ_PARTIES WHERE PARTY_TYPE = 'PERSON' AND PARTY_ID = L_PERSON_ID))
;

-- UPDATE (1.None.None)
UPDATE WF_ITEM_ACTIVITY_STATUSES_H SET 
PERFORMED_BY=nvl2(PERFORMED_BY,PER_DRT_UDF.overwrite_name(ROWID,'WF_ITEM_ACTIVITY_STATUSES_H','PERFORMED_BY',l_person_id),PERFORMED_BY)
WHERE PERFORMED_BY IN (SELECT NAME FROM WF_LOCAL_ROLES WHERE ORIG_SYSTEM = 'HZ_PARTY' AND ORIG_SYSTEM_ID IN (SELECT PARTY_ID FROM HZ_PARTIES WHERE PARTY_TYPE = 'PERSON' AND PARTY_ID = L_PERSON_ID))
;

-- UPDATE (1.None.None)
UPDATE OZF_REQUEST_HEADERS_ALL_B SET 
PARTNER_CONTACT_EMAIL_ADDRESS=nvl2(PARTNER_CONTACT_EMAIL_ADDRESS,per_drt_udf.overwrite_website(ROWID,'OZF_REQUEST_HEADERS_ALL_B','PARTNER_CONTACT_EMAIL_ADDRESS',l_person_id),PARTNER_CONTACT_EMAIL_ADDRESS),
PARTNER_CONTACT_PHONE_NUMBER=nvl2(PARTNER_CONTACT_PHONE_NUMBER,per_drt_udf.overwrite_phone(ROWID,'OZF_REQUEST_HEADERS_ALL_B','PARTNER_CONTACT_PHONE_NUMBER',l_person_id),PARTNER_CONTACT_PHONE_NUMBER)
WHERE (PARTNER_CONTACT_ID IN 
 (SELECT RESOURCE_ID
 FROM JTF_RS_RESOURCE_EXTNS
 WHERE CATEGORY = 'PARTY'
 AND SOURCE_ID IN (SELECT PARTY_ID FROM HZ_RELATIONSHIPS 
 WHERE SUBJECT_ID = L_PERSON_ID
 AND 
 SUBJECT_TABLE_NAME = 'HZ_PARTIES' 
 AND SUBJECT_TYPE = 'PERSON') 
 ));

-- UPDATE (1.None.None)
UPDATE WF_NOTIFICATIONS SET 
MORE_INFO_ROLE=nvl2(MORE_INFO_ROLE,PER_DRT_UDF.overwrite_name(ROWID,'WF_NOTIFICATIONS','MORE_INFO_ROLE',l_person_id),MORE_INFO_ROLE)
WHERE MORE_INFO_ROLE IN (SELECT NAME FROM WF_LOCAL_ROLES WHERE ORIG_SYSTEM = 'HZ_PARTY' AND ORIG_SYSTEM_ID IN (SELECT PARTY_ID FROM HZ_PARTIES WHERE PARTY_TYPE = 'PERSON' AND PARTY_ID = L_PERSON_ID));

-- UPDATE (1.None.None)
UPDATE WF_NOTIFICATIONS SET 
RECIPIENT_ROLE=nvl2(RECIPIENT_ROLE,PER_DRT_UDF.overwrite_name(ROWID,'WF_NOTIFICATIONS','RECIPIENT_ROLE',l_person_id),RECIPIENT_ROLE),
TO_USER=nvl2(TO_USER,per_drt_rules.ranstr(1,320),TO_USER)
WHERE RECIPIENT_ROLE IN (SELECT NAME FROM WF_LOCAL_ROLES WHERE ORIG_SYSTEM = 'HZ_PARTY' AND ORIG_SYSTEM_ID IN (SELECT PARTY_ID FROM HZ_PARTIES WHERE PARTY_TYPE = 'PERSON' AND PARTY_ID = L_PERSON_ID))

;

-- UPDATE (1.None.None)
UPDATE WF_NOTIFICATIONS SET 
RECIPIENT_ROLE=nvl2(RECIPIENT_ROLE,PER_DRT_UDF.overwrite_name(ROWID,'WF_NOTIFICATIONS','RECIPIENT_ROLE',l_person_id),RECIPIENT_ROLE)
WHERE ORIGINAL_RECIPIENT IN (SELECT NAME FROM WF_LOCAL_ROLES WHERE ORIG_SYSTEM = 'HZ_PARTY' AND ORIG_SYSTEM_ID IN (SELECT PARTY_ID FROM HZ_PARTIES WHERE PARTY_TYPE = 'PERSON' AND PARTY_ID = L_PERSON_ID));

-- UPDATE (1.None.None)
UPDATE WF_NOTIFICATIONS SET 
RESPONDER=nvl2(RESPONDER,PER_DRT_UDF.overwrite_name(ROWID,'WF_NOTIFICATIONS','RESPONDER',l_person_id),RESPONDER)
WHERE RESPONDER IN (SELECT NAME FROM WF_LOCAL_ROLES WHERE ORIG_SYSTEM = 'HZ_PARTY' AND ORIG_SYSTEM_ID IN (SELECT PARTY_ID FROM HZ_PARTIES WHERE PARTY_TYPE = 'PERSON' AND PARTY_ID = L_PERSON_ID));

-- UPDATE (1.None.None)
UPDATE WF_ROUTING_RULES SET 
ACTION_ARGUMENT=nvl2(ACTION_ARGUMENT,PER_DRT_UDF.overwrite_name(ROWID,'WF_ROUTING_RULES','ACTION_ARGUMENT',l_person_id),ACTION_ARGUMENT)
WHERE ACTION_ARGUMENT IN (SELECT NAME FROM WF_LOCAL_ROLES WHERE ORIG_SYSTEM = 'HZ_PARTY' AND ORIG_SYSTEM_ID IN (SELECT PARTY_ID FROM HZ_PARTIES WHERE PARTY_TYPE = 'PERSON' AND PARTY_ID = L_PERSON_ID))

;

-- UPDATE (1.None.None)
UPDATE WF_WORKLIST_DEFINITIONS SET 
WHERE_FROM=nvl2(WHERE_FROM,PER_DRT_UDF.overwrite_name(ROWID,'WF_WORKLIST_DEFINITIONS','WHERE_FROM',l_person_id),WHERE_FROM)
WHERE WHERE_FROM IN (SELECT NAME FROM WF_LOCAL_ROLES WHERE ORIG_SYSTEM = 'HZ_PARTY' AND ORIG_SYSTEM_ID IN (SELECT PARTY_ID FROM HZ_PARTIES WHERE PARTY_TYPE = 'PERSON' AND PARTY_ID = L_PERSON_ID))
;

-- UPDATE (1.None.None)
UPDATE OZF_RESALE_HEADERS_ALL_DRT_V SET 
SHIP_TO_CONTACT_NAME=nvl2(SHIP_TO_CONTACT_NAME,per_drt_udf.overwrite_name(ROWID,'OZF_RESALE_HEADERS_ALL_DRT_V','SHIP_TO_CONTACT_NAME',l_person_id),SHIP_TO_CONTACT_NAME),
SHIP_TO_EMAIL=nvl2(SHIP_TO_EMAIL,per_drt_udf.overwrite_website(ROWID,'OZF_RESALE_HEADERS_ALL_DRT_V','SHIP_TO_EMAIL',l_person_id),SHIP_TO_EMAIL),
SHIP_TO_PHONE=nvl2(SHIP_TO_PHONE,per_drt_udf.overwrite_phone(ROWID,'OZF_RESALE_HEADERS_ALL_DRT_V','SHIP_TO_PHONE',l_person_id),SHIP_TO_PHONE)
WHERE SHIP_TO_CONTACT_PARTY_ID = L_PERSON_ID;

-- UPDATE (1.None.None)
UPDATE OZF_RESALE_LINES_ALL_DRT_V2 SET 
END_CUST_CONTACT_NAME=nvl2(END_CUST_CONTACT_NAME,per_drt_udf.overwrite_name(ROWID,'OZF_RESALE_LINES_ALL_DRT_V2','END_CUST_CONTACT_NAME',l_person_id),END_CUST_CONTACT_NAME),
END_CUST_EMAIL=nvl2(END_CUST_EMAIL,per_drt_udf.overwrite_website(ROWID,'OZF_RESALE_LINES_ALL_DRT_V2','END_CUST_EMAIL',l_person_id),END_CUST_EMAIL),
END_CUST_PHONE=nvl2(END_CUST_PHONE,per_drt_udf.overwrite_phone(ROWID,'OZF_RESALE_LINES_ALL_DRT_V2','END_CUST_PHONE',l_person_id),END_CUST_PHONE)
WHERE END_CUST_CONTACT_PARTY_ID = L_PERSON_ID;

-- UPDATE (1.None.None)
UPDATE OZF_RESALE_LINES_ALL_DRT_V1 SET 
SOLD_FROM_CONTACT_NAME=nvl2(SOLD_FROM_CONTACT_NAME,per_drt_udf.overwrite_name(ROWID,'OZF_RESALE_LINES_ALL_DRT_V1','SOLD_FROM_CONTACT_NAME',l_person_id),SOLD_FROM_CONTACT_NAME),
SOLD_FROM_EMAIL=nvl2(SOLD_FROM_EMAIL,per_drt_udf.overwrite_website(ROWID,'OZF_RESALE_LINES_ALL_DRT_V1','SOLD_FROM_EMAIL',l_person_id),SOLD_FROM_EMAIL),
SOLD_FROM_PHONE=nvl2(SOLD_FROM_PHONE,per_drt_udf.overwrite_phone(ROWID,'OZF_RESALE_LINES_ALL_DRT_V1','SOLD_FROM_PHONE',l_person_id),SOLD_FROM_PHONE)
WHERE SOLD_FROM_CONTACT_PARTY_ID = L_PERSON_ID;

-- UPDATE (1.None.None)
UPDATE OZF_RESALE_LINES_ALL_DRT_V3 SET 
BILL_TO_CONTACT_NAME=nvl2(BILL_TO_CONTACT_NAME,per_drt_udf.overwrite_name(ROWID,'OZF_RESALE_LINES_ALL_DRT_V3','BILL_TO_CONTACT_NAME',l_person_id),BILL_TO_CONTACT_NAME),
BILL_TO_EMAIL=nvl2(BILL_TO_EMAIL,per_drt_udf.overwrite_website(ROWID,'OZF_RESALE_LINES_ALL_DRT_V3','BILL_TO_EMAIL',l_person_id),BILL_TO_EMAIL),
BILL_TO_PHONE=nvl2(BILL_TO_PHONE,per_drt_udf.overwrite_phone(ROWID,'OZF_RESALE_LINES_ALL_DRT_V3','BILL_TO_PHONE',l_person_id),BILL_TO_PHONE)
WHERE BILL_TO_CONTACT_PARTY_ID = L_PERSON_ID;

-- UPDATE (1.None.None)
UPDATE OZF_RESALE_LINES_ALL_DRT_V4 SET 
SHIP_TO_CONTACT_NAME=nvl2(SHIP_TO_CONTACT_NAME,per_drt_udf.overwrite_name(ROWID,'OZF_RESALE_LINES_ALL_DRT_V4','SHIP_TO_CONTACT_NAME',l_person_id),SHIP_TO_CONTACT_NAME),
SHIP_TO_EMAIL=nvl2(SHIP_TO_EMAIL,per_drt_udf.overwrite_website(ROWID,'OZF_RESALE_LINES_ALL_DRT_V4','SHIP_TO_EMAIL',l_person_id),SHIP_TO_EMAIL),
SHIP_TO_PHONE=nvl2(SHIP_TO_PHONE,per_drt_udf.overwrite_phone(ROWID,'OZF_RESALE_LINES_ALL_DRT_V4','SHIP_TO_PHONE',l_person_id),SHIP_TO_PHONE)
WHERE SHIP_TO_CONTACT_PARTY_ID = L_PERSON_ID;

-- UPDATE (1.None.None)
UPDATE WF_COMMENTS SET 
FROM_ROLE=nvl2(FROM_ROLE,PER_DRT_UDF.overwrite_name(ROWID,'WF_COMMENTS','FROM_ROLE',l_person_id),FROM_ROLE),
FROM_USER=nvl2(FROM_USER,per_drt_rules.ranstr(1,360),FROM_USER)
WHERE FROM_ROLE IN (SELECT NAME FROM WF_LOCAL_ROLES WHERE ORIG_SYSTEM = 'HZ_PARTY' AND ORIG_SYSTEM_ID IN (SELECT PARTY_ID FROM HZ_PARTIES WHERE PARTY_TYPE = 'PERSON' AND PARTY_ID = L_PERSON_ID))
;

-- UPDATE (1.None.None)
UPDATE ECE_TP_HEADERS SET 
ADDRESS1=nvl2(ADDRESS1,NULL,ADDRESS1),
ADDRESS2=nvl2(ADDRESS2,NULL,ADDRESS2),
ADDRESS3=nvl2(ADDRESS3,NULL,ADDRESS3),
ADDRESS4=nvl2(ADDRESS4,NULL,ADDRESS4),
CITY=nvl2(CITY,NULL,CITY),
COUNTRY=nvl2(COUNTRY,NULL,COUNTRY),
EMAIL=nvl2(EMAIL,NULL,EMAIL),
FAX=nvl2(FAX,NULL,FAX),
PHONE=nvl2(PHONE,NULL,PHONE),
POSTAL_CODE=nvl2(POSTAL_CODE,NULL,POSTAL_CODE),
PROVINCE=nvl2(PROVINCE,NULL,PROVINCE),
STATE=nvl2(STATE,NULL,STATE),
TP_CONTACT_JOB_TITLE=nvl2(TP_CONTACT_JOB_TITLE,NULL,TP_CONTACT_JOB_TITLE),
TP_CONTACT_NAME=nvl2(TP_CONTACT_NAME,NULL,TP_CONTACT_NAME)
WHERE (TP_HEADER_ID IN ( SELECT CAS.TP_HEADER_ID FROM HZ_CUST_ACCT_SITES_ALL CAS, HZ_CUST_ACCOUNTS CA, HZ_PARTIES PAR, HZ_PARTY_SITES HPS, HZ_LOCATIONS LOC 
WHERE CAS.CUST_ACCOUNT_ID = CA.CUST_ACCOUNT_ID AND CAS.PARTY_SITE_ID = HPS.PARTY_SITE_ID AND HPS.LOCATION_ID = LOC.LOCATION_ID AND HPS.PARTY_ID = PAR.PARTY_ID 
AND CA.PARTY_ID = PAR.PARTY_ID AND CAS.TP_HEADER_ID IS NOT NULL AND PAR.PARTY_ID =L_PERSON_ID ));

-- UPDATE (1.None.None)
UPDATE WF_ITEMS SET 
OWNER_ROLE=nvl2(OWNER_ROLE,PER_DRT_UDF.overwrite_name(ROWID,'WF_ITEMS','OWNER_ROLE',l_person_id),OWNER_ROLE)
WHERE OWNER_ROLE IN (SELECT NAME FROM WF_LOCAL_ROLES WHERE ORIG_SYSTEM = 'HZ_PARTY' AND ORIG_SYSTEM_ID IN (SELECT PARTY_ID FROM HZ_PARTIES WHERE PARTY_TYPE = 'PERSON' AND PARTY_ID = L_PERSON_ID))
;

-- UPDATE (1.None.None)
UPDATE WF_ITEM_ATTRIBUTES SET 
TEXT_DEFAULT=nvl2(TEXT_DEFAULT,PER_DRT_UDF.overwrite_name(ROWID,'WF_ITEM_ATTRIBUTES','TEXT_DEFAULT',l_person_id),TEXT_DEFAULT)
WHERE TEXT_DEFAULT IN (SELECT NAME FROM WF_LOCAL_ROLES WHERE ORIG_SYSTEM = 'HZ_PARTY' AND ORIG_SYSTEM_ID IN (SELECT PARTY_ID FROM HZ_PARTIES WHERE PARTY_TYPE = 'PERSON' AND PARTY_ID = L_PERSON_ID))
;

-- UPDATE (1.None.None)
UPDATE WF_ITEM_ATTRIBUTE_VALUES SET 
TEXT_VALUE=nvl2(TEXT_VALUE,PER_DRT_UDF.overwrite_name(ROWID,'WF_ITEM_ATTRIBUTE_VALUES','TEXT_VALUE',l_person_id),TEXT_VALUE)
WHERE TEXT_VALUE IN (SELECT NAME FROM WF_LOCAL_ROLES WHERE ORIG_SYSTEM = 'HZ_PARTY' AND ORIG_SYSTEM_ID IN (SELECT PARTY_ID FROM HZ_PARTIES WHERE PARTY_TYPE = 'PERSON' AND PARTY_ID = L_PERSON_ID))
;

-- UPDATE (1.None.None)
UPDATE WF_ACTIVITY_ATTR_VALUES SET 
TEXT_VALUE=nvl2(TEXT_VALUE,PER_DRT_UDF.overwrite_name(ROWID,'WF_ACTIVITY_ATTR_VALUES','TEXT_VALUE',l_person_id),TEXT_VALUE)
WHERE TEXT_VALUE IN (SELECT NAME FROM WF_LOCAL_ROLES WHERE ORIG_SYSTEM = 'HZ_PARTY' AND ORIG_SYSTEM_ID IN (SELECT PARTY_ID FROM HZ_PARTIES WHERE PARTY_TYPE = 'PERSON' AND PARTY_ID = L_PERSON_ID)) AND VALUE_TYPE = 'CONSTANT' AND NAME IN (SELECT NAME FROM WF_ACTIVITY_ATTRIBUTES WHERE TYPE = 'ROLE');

-- UPDATE (1.None.None)
UPDATE WF_MESSAGE_ATTRIBUTES SET 
TEXT_DEFAULT=nvl2(TEXT_DEFAULT,PER_DRT_UDF.overwrite_name(ROWID,'WF_MESSAGE_ATTRIBUTES','TEXT_DEFAULT',l_person_id),TEXT_DEFAULT)
WHERE TEXT_DEFAULT IN (SELECT NAME FROM WF_LOCAL_ROLES WHERE ORIG_SYSTEM = 'HZ_PARTY' AND ORIG_SYSTEM_ID IN (SELECT PARTY_ID FROM HZ_PARTIES WHERE PARTY_TYPE = 'PERSON' AND PARTY_ID = L_PERSON_ID)) AND TYPE = 'ROLE' AND VALUE_TYPE = 'CONSTANT';

-- UPDATE (1.None.None)
UPDATE WF_NOTIFICATION_ATTRIBUTES SET 
TEXT_VALUE=nvl2(TEXT_VALUE,PER_DRT_UDF.overwrite_name(ROWID,'WF_NOTIFICATION_ATTRIBUTES','TEXT_VALUE',l_person_id),TEXT_VALUE)
WHERE TEXT_VALUE IN (SELECT NAME FROM WF_LOCAL_ROLES WHERE ORIG_SYSTEM = 'HZ_PARTY' AND ORIG_SYSTEM_ID IN (SELECT PARTY_ID FROM HZ_PARTIES WHERE PARTY_TYPE = 'PERSON' AND PARTY_ID = L_PERSON_ID)) AND NAME IN (SELECT NAME FROM WF_MESSAGE_ATTRIBUTES WHERE TYPE = 'ROLE')
;

-- UPDATE (1.None.None)
UPDATE WF_DIG_CERTS SET 
CERT=nvl2(CERT,PER_DRT_UDF.overwrite_name(ROWID,'WF_DIG_CERTS','CERT',l_person_id),CERT),
FINGERPRINT=nvl2(FINGERPRINT,PER_DRT_UDF.overwrite_name(ROWID,'WF_DIG_CERTS','FINGERPRINT',l_person_id),FINGERPRINT)
WHERE FINGERPRINT IN (SELECT NAME FROM WF_LOCAL_ROLES WHERE ORIG_SYSTEM = 'HZ_PARTY' AND ORIG_SYSTEM_ID IN (SELECT PARTY_ID FROM HZ_PARTIES WHERE PARTY_TYPE = 'PERSON' AND PARTY_ID = L_PERSON_ID)) OR CERT LIKE (SELECT NAME FROM WF_LOCAL_ROLES WHERE ORIG_SYSTEM = 'HZ_PARTY' AND ORIG_SYSTEM_ID IN (SELECT PARTY_ID FROM HZ_PARTIES WHERE PARTY_TYPE = 'PERSON' AND PARTY_ID = L_PERSON_ID));

-- UPDATE (1.None.None)
UPDATE CN_COMM_LINES_API_ALL SET 
EMPLOYEE_NUMBER=nvl2(EMPLOYEE_NUMBER,'**********',EMPLOYEE_NUMBER),
SALESREP_NUMBER=nvl2(SALESREP_NUMBER,'**********',SALESREP_NUMBER)
WHERE (SALESREP_ID IN (SELECT JRS.SALESREP_ID FROM JTF_RS_RESOURCE_EXTNS JRE, JTF_RS_SALESREPS JRS WHERE JRE.RESOURCE_ID = JRS.RESOURCE_ID AND JRE.CATEGORY = 'EMPLOYEE' AND JRE.SOURCE_ID IN (SELECT PERSON_ID FROM PER_ALL_PEOPLE_F WHERE PARTY_ID = L_PERSON_ID))) OR (SALESREP_ID IN (SELECT JRS.SALESREP_ID FROM JTF_RS_RESOURCE_EXTNS JRE, JTF_RS_SALESREPS JRS WHERE JRE.RESOURCE_ID = JRS.RESOURCE_ID AND JRE.CATEGORY = 'PARTY' AND JRE.SOURCE_ID = L_PERSON_ID )) OR (SALESREP_ID IN (SELECT JRS.SALESREP_ID FROM JTF_RS_RESOURCE_EXTNS JRE, JTF_RS_SALESREPS JRS WHERE JRE.RESOURCE_ID = JRE.RESOURCE_ID AND JRE.CATEGORY = 'SUPPLIER_CONTACT' AND JRE.SOURCE_ID IN (SELECT VENDOR_CONTACT_ID FROM PO_VENDOR_CONTACTS PVC,PO_VENDORS PV WHERE PVC.VENDOR_ID = PV.VENDOR_ID AND PV.PARTY_ID = L_PERSON_ID))) OR (SALESREP_ID IN (SELECT JRS.SALESREP_ID FROM JTF_RS_RESOURCE_EXTNS JRE, JTF_RS_SALESREPS JRS WHERE JRE.RESOURCE_ID = JRS.RESOURCE_ID AND JRE.CATEGORY = 'PARTNER' AND JRE.SOURCE_ID IN (SELECT PARTY_ID FROM JTF_RS_PARTNERS_VL JP WHERE JP.PARTY_ID = L_PERSON_ID)));

-- UPDATE (1.None.None)
UPDATE CN_ARC_COMM_LINES_API SET 
EMPLOYEE_NUMBER=nvl2(EMPLOYEE_NUMBER,'**********',EMPLOYEE_NUMBER),
SALESREP_NUMBER=nvl2(SALESREP_NUMBER,'**********',SALESREP_NUMBER)
WHERE (SALESREP_ID IN (SELECT JRS.SALESREP_ID FROM JTF_RS_RESOURCE_EXTNS JRE, JTF_RS_SALESREPS JRS WHERE JRE.RESOURCE_ID = JRS.RESOURCE_ID AND JRE.CATEGORY = 'EMPLOYEE' AND JRE.SOURCE_ID IN (SELECT PERSON_ID FROM PER_ALL_PEOPLE_F WHERE PARTY_ID = L_PERSON_ID))) OR (SALESREP_ID IN (SELECT JRS.SALESREP_ID FROM JTF_RS_RESOURCE_EXTNS JRE, JTF_RS_SALESREPS JRS WHERE JRE.RESOURCE_ID = JRS.RESOURCE_ID AND JRE.CATEGORY = 'PARTY' AND JRE.SOURCE_ID = L_PERSON_ID )) OR (SALESREP_ID IN (SELECT JRS.SALESREP_ID FROM JTF_RS_RESOURCE_EXTNS JRE, JTF_RS_SALESREPS JRS WHERE JRE.RESOURCE_ID = JRE.RESOURCE_ID AND JRE.CATEGORY = 'SUPPLIER_CONTACT' AND JRE.SOURCE_ID IN (SELECT VENDOR_CONTACT_ID FROM PO_VENDOR_CONTACTS PVC,PO_VENDORS PV WHERE PVC.VENDOR_ID = PV.VENDOR_ID AND PV.PARTY_ID = L_PERSON_ID))) OR (SALESREP_ID IN (SELECT JRS.SALESREP_ID FROM JTF_RS_RESOURCE_EXTNS JRE, JTF_RS_SALESREPS JRS WHERE JRE.RESOURCE_ID = JRS.RESOURCE_ID AND JRE.CATEGORY = 'PARTNER' AND JRE.SOURCE_ID IN (SELECT PARTY_ID FROM JTF_RS_PARTNERS_VL JP WHERE JP.PARTY_ID = L_PERSON_ID)));

-- UPDATE (1.None.None)
UPDATE AS_SALES_CREDITS_DENORM SET 
FIRST_NAME=nvl2(FIRST_NAME,per_drt_udf.overwrite_name(ROWID,'AS_SALES_CREDITS_DENORM','FIRST_NAME',l_person_id),FIRST_NAME),
LAST_NAME=nvl2(LAST_NAME,per_drt_udf.overwrite_name(ROWID,'AS_SALES_CREDITS_DENORM','LAST_NAME',l_person_id),LAST_NAME),
SALES_REP_NAME=nvl2(SALES_REP_NAME,per_drt_udf.overwrite_name(ROWID,'AS_SALES_CREDITS_DENORM','SALES_REP_NAME',l_person_id),SALES_REP_NAME)
WHERE (SALESFORCE_ID IN 
(SELECT RESOURCE_ID 
FROM JTF_RS_RESOURCE_EXTNS 
WHERE CATEGORY = 'EMPLOYEE' 
AND SOURCE_ID IN 
 (SELECT PERSON_ID FROM PER_ALL_PEOPLE_F WHERE PARTY_ID = L_PERSON_ID 
 ) 
)) OR 

(SALESFORCE_ID IN 
 (SELECT RESOURCE_ID 
 FROM JTF_RS_RESOURCE_EXTNS 
 WHERE CATEGORY = 'PARTY' 
 AND SOURCE_ID = L_PERSON_ID 
 )) OR 
(SALESFORCE_ID IN 
 (SELECT RESOURCE_ID 
 FROM JTF_RS_RESOURCE_EXTNS 
 WHERE CATEGORY = 'SUPPLIER_CONTACT' 
 AND SOURCE_ID IN 
  (SELECT VENDOR_CONTACT_ID 
  FROM PO_VENDOR_CONTACTS PVC, 
   PO_VENDORS PV 
  WHERE PVC.VENDOR_ID = PV.VENDOR_ID 
  AND PV.PARTY_ID   = L_PERSON_ID 
  ) 
 )) OR 
(SALESFORCE_ID IN 
 (SELECT RESOURCE_ID 
 FROM JTF_RS_RESOURCE_EXTNS 
 WHERE CATEGORY = 'PARTNER' 
 AND SOURCE_ID IN 
  (SELECT PARTY_ID FROM JTF_RS_PARTNERS_VL JP WHERE JP.PARTY_ID = 
L_PERSON_ID 
  ) 
 ));

-- UPDATE (1.None.None)
UPDATE AS_LEADS_ALL SET 
END_USER_CUSTOMER_NAME=nvl2(END_USER_CUSTOMER_NAME,per_drt_udf.overwrite_name(ROWID,'AS_LEADS_ALL','END_USER_CUSTOMER_NAME',l_person_id),END_USER_CUSTOMER_NAME)
WHERE END_USER_CUSTOMER_ID = L_PERSON_ID;

-- UPDATE (1.None.None)
UPDATE OTA_DELEGATE_BOOKINGS SET 
THIRD_PARTY_CONTACT_FAX=nvl2(THIRD_PARTY_CONTACT_FAX,NULL,THIRD_PARTY_CONTACT_FAX),
THIRD_PARTY_CONTACT_PHONE=nvl2(THIRD_PARTY_CONTACT_PHONE,NULL,THIRD_PARTY_CONTACT_PHONE),
THIRD_PARTY_EMAIL=nvl2(THIRD_PARTY_EMAIL,NULL,THIRD_PARTY_EMAIL)
WHERE BOOKING_ID IN (SELECT ODB.BOOKING_ID FROM HZ_CUST_ACCOUNT_ROLES ROL, HZ_RELATIONSHIPS REL, HZ_PARTIES CUST, HZ_PARTIES PERS_CONT, OTA_DELEGATE_BOOKINGS ODB WHERE REL.SUBJECT_ID = CUST.PARTY_ID AND REL.OBJECT_ID = PERS_CONT.PARTY_ID AND REL.PARTY_ID = ROL.PARTY_ID AND REL.DIRECTIONAL_FLAG = 'B' AND ROL.CUST_ACCOUNT_ROLE_ID = ODB.THIRD_PARTY_CONTACT_ID AND ROL.CUST_ACCOUNT_ID = ODB.THIRD_PARTY_CUSTOMER_ID AND PERS_CONT.PARTY_ID = L_PERSON_ID);

END;

/
